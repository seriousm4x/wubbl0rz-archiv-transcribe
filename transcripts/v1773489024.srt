1
00:00:16,180 --> 00:01:48,590
wir haben nicht so viel zeit 145 mal gucken ob er dort gescheit was auf die reihe kriegen ich

2
00:01:48,590 --> 00:01:57,510
erzähle euch auch gleich um was es geht nämlich meine sound settings richtig gemacht habe ein

3
00:01:57,510 --> 00:02:08,320
bisschen bisschen was ein spannenderes angemacht habe das haben wir denn hier genau das ist mit

4
00:02:08,320 --> 00:02:17,020
vocals vocals das sagt das legt mich ab das kann ich mir nicht geben weg das gut

5
00:02:17,020 --> 00:02:37,150
das ist nice da freuen die sich bestimmt meine ist auch richtig happy seit die seit

6
00:02:37,150 --> 00:02:43,030
ist ja schon ein bisschen seitdem ich den sound da gebaut habe also diese diesen ich

7
00:02:43,030 --> 00:02:51,120
habe ja unseren so eine terrasse zum hof hin mit so einem wie nennt man das so so

8
00:02:51,120 --> 00:02:52,060
so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so

9
00:02:52,060 --> 00:02:59,200
das ist kein sound es ist so netznetz ja die beiden vom stream titel das war heute auch das

10
00:02:59,200 --> 00:03:04,970
war doch ich mache meine vor allem inner aus finalPatzen aber halt auch während der stream

11
00:03:04,970 --> 00:03:10,190
so richtig anläuft nicht ein bisschen was erzähle tech wirker daher danke für den sap cleaning

12
00:03:10,190 --> 00:03:17,150
iberus teile geht's abfeuers wieder als erstes am start so muss das sein aber man hat ich bin

13
00:03:17,150 --> 00:03:22,530
mir gar nicht sicher habe ich auf der neuen vor allem überhaupt schon mein main.net entwicklungs

14
00:03:22,530 --> 00:03:23,250
zeug eingerichtet

15
00:03:23,570 --> 00:03:25,090
Ist da überhaupt schon was drauf?

16
00:03:27,260 --> 00:03:29,780
Wenn nicht, muss ich irgendwie mal ein Passwort resetten und so.

17
00:03:29,860 --> 00:03:30,360
Mal gucken.

18
00:03:32,120 --> 00:03:35,960
Ich mache jetzt erstmal schnell Package-Updates.

19
00:03:36,700 --> 00:03:39,120
Und dann erzähle ich euch, um was es geht.

20
00:03:39,340 --> 00:03:41,140
Denn ich habe nämlich was sehr Cooles gelesen.

21
00:03:41,740 --> 00:03:45,520
Es gab jetzt ein .NET 8 Preview-Version.

22
00:03:48,110 --> 00:03:49,590
Lass mich mal kurz checken.

23
00:03:52,190 --> 00:03:53,550
Ah, okay, Rider habe ich installiert.

24
00:03:53,630 --> 00:03:57,810
Das heißt wahrscheinlich auch, ich habe die Toolbox installiert.

25
00:03:57,810 --> 00:03:59,410
Okay, ich bin schon eingeloggt.

26
00:03:59,490 --> 00:04:00,830
Nice, okay, pock.

27
00:04:01,570 --> 00:04:02,670
So, darfst du es mal upgraden.

28
00:04:03,450 --> 00:04:03,850
Pac-Man.

29
00:04:06,490 --> 00:04:08,950
Darauf alles upgraden.

30
00:04:09,070 --> 00:04:10,650
Upgrade einfach mal alles, dann ist gut.

31
00:04:12,950 --> 00:04:14,030
Nein, heute nicht.

32
00:04:14,250 --> 00:04:15,550
Heute machen wir was anderes.

33
00:04:16,330 --> 00:04:18,690
Ich bin mir gar nicht sicher, ob heute alles, wahrscheinlich nicht komplett,

34
00:04:18,910 --> 00:04:23,310
aber zumindest in Ansätzen, ob wir heute da was auf die Reihe kriegen.

35
00:04:23,350 --> 00:04:25,930
Aber das muss ich mir angucken, weil ich bin da wirklich gespannt drauf,

36
00:04:25,930 --> 00:04:29,290
ob die das auf die Reihe bekommen haben in .NET.

37
00:04:29,510 --> 00:04:33,770
So, dass das vielleicht in einem Bereich Konkurrenz zu Go wird,

38
00:04:34,310 --> 00:04:38,050
wo Go bisher wirklich ungeschlagen nice ist.

39
00:04:39,270 --> 00:04:45,290
Und was ist eurer Meinung nach, vielleicht könnt ihr euch ja schon überlegen, was ich meine.

40
00:04:45,750 --> 00:04:49,310
Was ist der Bereich, in dem, also ich meine jetzt nicht unbedingt die Sprache an sich,

41
00:04:49,490 --> 00:04:52,090
sondern so das Handling von Go.

42
00:04:52,090 --> 00:04:59,090
Also was macht Go wirklich richtig gut, was sonst keine Sprache ähnlich gut ist.

43
00:04:59,510 --> 00:05:03,190
Ich meine keine Sprachfeature oder kein Framework-Feature.

44
00:05:03,590 --> 00:05:06,110
Single Binaries, richtig, genau das meine ich.

45
00:05:06,310 --> 00:05:07,730
Das meine ich, Single Binaries.

46
00:05:08,450 --> 00:05:10,050
Das Blixer hat wieder hier, higher IQ.

47
00:05:10,970 --> 00:05:12,850
Wusste, wusste gleich schon, was Sache ist.

48
00:05:14,890 --> 00:05:16,030
Single Binary.

49
00:05:16,530 --> 00:05:17,850
You Launcher.

50
00:05:20,130 --> 00:05:20,890
War fort.

51
00:05:21,850 --> 00:05:22,230
Ja, ja.

52
00:05:22,230 --> 00:05:26,570
So, das Ganze hier noch updaten und dann haben wir es eigentlich.

53
00:05:26,730 --> 00:05:26,890
Genau.

54
00:05:27,670 --> 00:05:29,270
Single Binary, da sage ich gleich was dazu.

55
00:05:29,510 --> 00:05:31,450
Single Binaries, das meine ich.

56
00:05:32,630 --> 00:05:38,330
Und zwar, ich habe ein Blogpost gelesen von dem .NET Team.

57
00:05:39,170 --> 00:05:45,390
Und die haben geschrieben, dass sie ihre Ahead of Time Compilation,

58
00:05:45,490 --> 00:05:49,350
was scheuer das Wort ist, also im Prinzip das, was man so normal unter Kompilieren versteht,

59
00:05:50,470 --> 00:05:52,690
jetzt verbessern wollen mit .8.

60
00:05:52,690 --> 00:05:59,380
Und wenn das stimmt, könnte das vielleicht,

61
00:05:59,580 --> 00:06:01,440
in diesem Beispiel,

62
00:06:01,460 --> 00:06:03,620
in diesem Bereich, Go, ein bisschen Konkurrenz machen.

63
00:06:03,620 --> 00:06:05,860
Natürlich wird das noch nicht so geil sein, wie mit Go.

64
00:06:06,180 --> 00:06:09,420
Ich meine, Single Binaries in Go sind extrem nice gemacht.

65
00:06:09,900 --> 00:06:11,140
Die sind lauffähig.

66
00:06:13,620 --> 00:06:19,460
Die sind lauffähig, ja, zurück bis Kernel 2, 6, 38 oder sowas.

67
00:06:19,880 --> 00:06:22,100
Go Binaries kannst du überall drauf laufen lassen.

68
00:06:22,100 --> 00:06:23,860
Also, ganz so geil wird das nicht.

69
00:06:23,860 --> 00:06:27,900
Aber wenn es schon auf Linux in den letzten fünf, sechs Jahren läuft, ist ja eigentlich auch okay.

70
00:06:28,460 --> 00:06:30,100
So, folgenden Blogpost gab es.

71
00:06:30,140 --> 00:06:31,420
Und da labert man.

72
00:06:31,460 --> 00:06:32,720
Da läuft Microsoft wieder viel rum.

73
00:06:33,100 --> 00:06:34,140
Was, wenn der Tag lang ist?

74
00:06:35,220 --> 00:06:37,240
Könnte was von ChatGPT geschrieben sein.

75
00:06:37,320 --> 00:06:39,320
Jetzt weiß ich auch, warum Microsoft da mit dran beteiligt ist,

76
00:06:39,340 --> 00:06:41,320
um solche komischen Blogposts zu schreiben.

77
00:06:42,200 --> 00:06:45,040
So, und irgendwann kommt dann Native Ahead of Time.

78
00:06:45,580 --> 00:06:47,820
Also, das haben die ja schon eine Weile drin.

79
00:06:53,420 --> 00:06:55,460
Das haben die ja schon eine Weile drin.

80
00:06:55,460 --> 00:07:04,600
Und zwar, dass du .NET nicht nur mit der .NET Runtime ausführen kannst.

81
00:07:05,240 --> 00:07:05,980
Also, quasi.

82
00:07:06,360 --> 00:07:06,860
Jit.

83
00:07:07,640 --> 00:07:08,700
Nicht Shit, Shit.

84
00:07:08,700 --> 00:07:09,700
Jit, Jitten.

85
00:07:10,200 --> 00:07:16,040
Also, dass da quasi zur Laufzeit generiert, was ausgeführt wird.

86
00:07:17,240 --> 00:07:20,400
Das ist ja immer noch der Default-Weg, wie .NET Programme ausgeführt werden.

87
00:07:20,900 --> 00:07:22,320
Also, ein bisschen so wie...

88
00:07:22,960 --> 00:07:23,720
Also, was heißt ein bisschen?

89
00:07:23,720 --> 00:07:25,360
Im Prinzip so genau, wie Java das macht.

90
00:07:25,640 --> 00:07:26,720
Nur, dass es nicht Java ist.

91
00:07:28,120 --> 00:07:31,120
Oder wie das sogar JavaScript mittlerweile teilweise macht.

92
00:07:31,480 --> 00:07:35,120
Zumindest, das war ja bisher so der Weg, wie man .NET ausgeführt hat.

93
00:07:35,120 --> 00:07:35,240
Zumindest, das war ja bisher so der Weg, wie man .NET ausgeführt hat.

94
00:07:35,240 --> 00:07:41,040
Und seit .NET 7 haben die jetzt besseren Support eingebaut,

95
00:07:41,120 --> 00:07:45,140
für das man sein komplettes .NET Programm fix und fertig kompilieren kann,

96
00:07:45,220 --> 00:07:47,060
als Single Binary und es dann läuft.

97
00:07:47,880 --> 00:07:52,260
Dass es einfach läuft, ist auch ein bisschen zu viel des Guten.

98
00:07:53,160 --> 00:07:55,620
Je nachdem, was für Features man nutzt, läuft es gar nicht.

99
00:07:56,100 --> 00:08:00,960
Und das hoffe ich halt, dass es besser wird damit.

100
00:08:01,520 --> 00:08:05,200
Und die Größe von .NET Binaries ist noch ein bisschen heftig.

101
00:08:05,760 --> 00:08:07,900
So, und das will ich heute mal ausprobieren.

102
00:08:07,960 --> 00:08:10,660
Ich habe mir auch eine coole Anwendungsidee überlegt.

103
00:08:11,500 --> 00:08:12,720
Wir können mal was basteln.

104
00:08:13,040 --> 00:08:15,260
Weil, um sowas zu testen, ja.

105
00:08:15,780 --> 00:08:20,840
Hier schreiben sie ja zum Beispiel auch, ein Hello World Programm ist jetzt 1,84 Megabyte.

106
00:08:21,000 --> 00:08:23,180
Ja, was interessiert mich in Hello World Programm?

107
00:08:23,620 --> 00:08:27,280
Ich brauche ja schon ein paar Libraries dabei und ein bisschen Features dabei.

108
00:08:27,380 --> 00:08:29,520
Am Ende sind wir bestimmt nicht bei 1,84 MB.

109
00:08:30,120 --> 00:08:34,600
Aber wenn wir unter 20 MB oder so sind, für ein Binary, was ausgeführt wird.

110
00:08:34,680 --> 00:08:35,220
Und das ist ja auch eine coole Anwendungsidee.

111
00:08:35,220 --> 00:08:37,260
Und wenn man das schnell startet, dann ist das wirklich gut.

112
00:08:37,580 --> 00:08:41,440
So viel kleiner ist, wenn du Go mit ordentlichen Features verwendest, das auch nicht.

113
00:08:43,600 --> 00:08:45,400
Ja, und da bin ich wirklich mal gespannt.

114
00:08:45,880 --> 00:08:46,780
So, haben wir jetzt alles geupdatet.

115
00:08:47,620 --> 00:08:49,760
Dann kann ich nämlich abschließend nochmal neu starten.

116
00:08:50,200 --> 00:08:52,780
Und dann kann ich noch den, während es neu startet, Chat beantworten.

117
00:08:54,580 --> 00:08:55,160
Hier war doch irgendwas.

118
00:08:56,520 --> 00:08:57,580
Hau mal deine Meinung raus.

119
00:08:57,700 --> 00:09:01,580
Hab die Möglichkeit, über eine Arbeitnehmerüberlassung in DevOps-Priorität einzuhängen.

120
00:09:01,940 --> 00:09:04,040
Die checken aber nicht, dass ich wenig praktische Erfahrung habe.

121
00:09:04,040 --> 00:09:05,280
Ich habe nur trotzdem Wagen.

122
00:09:05,600 --> 00:09:06,040
Ganz ehrlich, Arbeitnehmerüberlassung.

123
00:09:06,780 --> 00:09:11,760
Arbeitnehmerüberlassung klingt immer so ein bisschen nach Personalverschacher-Ding.

124
00:09:12,160 --> 00:09:13,320
Ja, das ist ja nicht wild.

125
00:09:13,720 --> 00:09:16,420
Wir haben auch ein paar Externe, die über eine Zwischenfirma gekommen sind.

126
00:09:18,960 --> 00:09:20,020
Boah, keine Ahnung.

127
00:09:21,940 --> 00:09:23,820
Kann ich dir jetzt so aus dem Bauch nichts sagen.

128
00:09:23,920 --> 00:09:25,420
Kommt auch ein bisschen auf die Vermittlerfirma.

129
00:09:25,520 --> 00:09:27,920
Und vor allem kommt es auf die Firma an, wo du dann hingehst.

130
00:09:28,640 --> 00:09:35,300
Also, wenn du die Firma nice findest oder Bock drauf hast, dass du wenig praktische Erfahrung hast, ist das jetzt nicht so wild.

131
00:09:35,300 --> 00:09:38,020
Wichtig ist, dass du gut googeln kannst und nicht schnell einarbeiten kannst.

132
00:09:38,480 --> 00:09:46,000
Es ist immer ein Unterschied, ob du die Technologie kennst oder ob du weißt, wie sie eingesetzt wird.

133
00:09:46,060 --> 00:09:47,160
Also, nee, das muss ich anders sagen.

134
00:09:47,500 --> 00:09:57,140
Es ist ein Unterschied, ob du jetzt beispielsweise Technologie XY kennst, weil du weißt ja immer noch nicht, wie sie genau eingesetzt wird.

135
00:09:59,510 --> 00:10:02,490
Und das kann von Unternehmen zu Unternehmen variieren.

136
00:10:02,650 --> 00:10:06,590
Also, nur weil du eine Technologie kennst, heißt das nicht, dass du automatisch weißt, wie das dort eingesetzt wird.

137
00:10:07,390 --> 00:10:08,770
Das heißt, das ist nicht so wild.

138
00:10:09,230 --> 00:10:11,530
Wie hast du FZN für die History eingerichtet?

139
00:10:11,550 --> 00:10:15,750
So, aber ich mache das wieder aus.

140
00:10:15,890 --> 00:10:17,830
Ich habe meine Confi noch nicht gesynct.

141
00:10:18,130 --> 00:10:20,210
Der anderen VM habe ich das schon wieder aus.

142
00:10:20,770 --> 00:10:22,750
Ich habe das jetzt ein paar Wochen ausprobiert.

143
00:10:22,850 --> 00:10:26,030
Ich muss ehrlich sagen, meins ist es nicht.

144
00:10:27,650 --> 00:10:28,270
Okay, da.

145
00:10:28,710 --> 00:10:29,290
Nee, das nicht.

146
00:10:29,390 --> 00:10:29,890
Das ist Blödsinn.

147
00:10:31,190 --> 00:10:31,890
Das hier.

148
00:10:33,930 --> 00:10:38,090
FZ8 Keybindings, die haben so ein automatisches ZSH-Skript.

149
00:10:40,130 --> 00:10:41,090
Aber ich bin...

150
00:10:41,550 --> 00:10:42,870
Ich finde das nicht so gut.

151
00:10:43,130 --> 00:10:43,890
Ich finde das nicht so gut.

152
00:10:44,270 --> 00:10:49,530
Ich mag die klassische History mit Steuerung eher hoch und runter tatsächlich lieber als das.

153
00:10:50,530 --> 00:10:58,310
Da ist mir das mit Substream-Matching und alles schon ein bisschen zu viel des Guten, weil der findet ja Dinger, die du gar nicht finden willst.

154
00:11:00,490 --> 00:11:01,990
Ich weiß nicht, ob überhaupt...

155
00:11:05,220 --> 00:11:05,940
Ja, das stimmt.

156
00:11:06,120 --> 00:11:07,560
Das stimmt bis jetzt ja auch.

157
00:11:10,760 --> 00:11:11,080
Nee.

158
00:11:12,500 --> 00:11:13,260
Haben wir nicht.

159
00:11:16,350 --> 00:11:17,770
Welche Distribution hast du?

160
00:11:17,770 --> 00:11:18,570
Das ist Arch.

161
00:11:18,750 --> 00:11:19,050
Warte mal.

162
00:11:19,150 --> 00:11:20,110
Für euch habe ich doch immer...

163
00:11:20,110 --> 00:11:21,210
Ich habe den Kram hier noch am Start.

164
00:11:21,290 --> 00:11:21,450
Guck.

165
00:11:21,870 --> 00:11:22,710
Arch, by the way.

166
00:11:23,030 --> 00:11:23,510
Was sonst?

167
00:11:32,440 --> 00:11:32,980
Was sonst?

168
00:11:33,720 --> 00:11:35,160
Nur Arch only.

169
00:11:37,780 --> 00:11:37,980
Gut.

170
00:11:38,180 --> 00:11:38,320
So.

171
00:11:39,700 --> 00:11:41,900
.NET install curl.

172
00:11:42,000 --> 00:11:43,740
Die haben noch so ein komisches Installer-Skript.

173
00:11:45,140 --> 00:11:46,480
Installieren wir uns mal .NET 8.

174
00:11:48,440 --> 00:11:49,640
Und dann...

175
00:11:51,500 --> 00:11:55,960
Immer, immer ganz wichtig.

176
00:11:56,680 --> 00:11:58,780
Immer fremde Sachen aus dem Internet.

177
00:11:58,780 --> 00:11:59,480
Nach...

178
00:11:59,480 --> 00:12:01,560
Curl nach Bashpipen.

179
00:12:01,640 --> 00:12:02,100
Ganz wichtig.

180
00:12:02,200 --> 00:12:02,840
So macht man es.

181
00:12:03,820 --> 00:12:06,720
Äh, Channel 8.0 brauchen wir, glaube ich.

182
00:12:10,190 --> 00:12:11,750
Am besten noch sudo davor.

183
00:12:11,970 --> 00:12:12,190
Genau.

184
00:12:14,190 --> 00:12:15,870
Direkt blind aus dem Internet.

185
00:12:16,530 --> 00:12:17,150
Von Reddit.

186
00:12:17,370 --> 00:12:18,910
Von 4chan am besten noch.

187
00:12:19,590 --> 00:12:21,230
Blind alles reinpasten.

188
00:12:22,010 --> 00:12:22,370
Okay.

189
00:12:22,750 --> 00:12:23,270
Repos.

190
00:12:23,750 --> 00:12:24,310
MKDier.

191
00:12:24,310 --> 00:12:30,610
Und anhand des Verzeichnis-Namens erkennt ihr vielleicht schon, was wir heute machen.

192
00:12:30,610 --> 00:12:32,610
Wir legen VMs an.

193
00:12:32,610 --> 00:12:33,110
Für...

194
00:12:34,170 --> 00:12:36,170
Oh, ich hab gar keinen, gar keinen Lib-Wirt und so noch.

195
00:12:36,530 --> 00:12:38,730
Wir legen KVM-VMs lokal an.

196
00:12:39,070 --> 00:12:40,070
Einfach weil es geht.

197
00:12:40,950 --> 00:12:42,270
Weil ich irgendwas brauche.

198
00:12:43,270 --> 00:12:45,270
Was Low-Level-Shit benutzt.

199
00:12:45,670 --> 00:12:47,450
Also Interop mit C-Libraries.

200
00:12:47,850 --> 00:12:49,250
Ich brauch irgendwas, was...

201
00:12:49,490 --> 00:12:52,410
...ein bisschen advancedere .NET Abhängigkeiten hat.

202
00:12:52,670 --> 00:12:55,950
Und dann halt gucken, lässt sich das kompilieren und wie klein ist es am Ende.

203
00:12:58,400 --> 00:12:58,900
Ja, und...

204
00:12:59,360 --> 00:13:01,120
Ich hab mir... Das ist nicht auf GitHub.

205
00:13:01,120 --> 00:13:04,980
Ich hab mir ein Tool gebaut vor einer Weile.

206
00:13:04,980 --> 00:13:06,080
Da kann ich sowas hier machen.

207
00:13:06,080 --> 00:13:07,440
Ich hab das hier nicht drauf.

208
00:13:07,440 --> 00:13:08,880
Da kann ich sowas hier machen.

209
00:13:08,880 --> 00:13:10,620
VM Start Kekkel.

210
00:13:10,620 --> 00:13:14,080
So, und dann legt er mir eine temporäre lokale VM mit dem Debian an.

211
00:13:15,420 --> 00:13:18,240
Und wenn ich so mache, schmeißt er die alle wieder weg.

212
00:13:18,240 --> 00:13:20,580
Weil ich brauche manchmal trotz Container...

213
00:13:20,580 --> 00:13:24,300
Trotz Container brauche ich manchmal eine richtig echte VM.

214
00:13:24,300 --> 00:13:26,300
Um Sachen mal schnell auszuprobieren.

215
00:13:28,080 --> 00:13:28,580
Ja.

216
00:13:28,580 --> 00:13:30,880
Zum Beispiel um einen Runner zu installieren.

217
00:13:30,880 --> 00:13:32,120
Für GitLab oder sowas.

218
00:13:32,120 --> 00:13:33,620
Und das macht man am besten in der VM.

219
00:13:33,620 --> 00:13:35,620
Wenn man Docker in Docker bauen will.

220
00:13:35,620 --> 00:13:36,620
Manchmal ist es praktisch.

221
00:13:36,620 --> 00:13:38,620
Außerdem ist das jetzt nur...

222
00:13:39,620 --> 00:13:41,620
...für die...

223
00:13:41,620 --> 00:13:43,620
...für den Versuch, ja.

224
00:13:44,620 --> 00:13:48,620
Ich hoffe wir kriegen da irgendwas Annehmbares hin bis 22 Uhr.

225
00:13:49,620 --> 00:13:52,620
So, also dann legen wir mal ein .NET Projekt an.

226
00:13:52,620 --> 00:13:53,620
.NET

227
00:13:53,620 --> 00:13:54,620
.NET

228
00:13:54,620 --> 00:13:56,620
New Console

229
00:13:57,620 --> 00:13:58,620
Alles klar.

230
00:13:58,620 --> 00:14:02,830
Und dann machen wir RIDER mal auf.

231
00:14:02,830 --> 00:14:04,070
Ja, ja, alles gut.

232
00:14:04,070 --> 00:14:05,070
Wir trusten.

233
00:14:05,070 --> 00:14:09,860
GachiBuzz.

234
00:14:09,860 --> 00:14:10,860
So.

235
00:14:10,860 --> 00:14:12,860
Loading Project.

236
00:14:12,860 --> 00:14:13,860
Loading Error.

237
00:14:13,860 --> 00:14:15,860
Geht schon gut los.

238
00:14:15,860 --> 00:14:17,860
Ich glaube ich weiß warum.

239
00:14:17,860 --> 00:14:19,860
Weil...

240
00:14:19,860 --> 00:14:21,860
...der .NET 8 noch gar nicht erkannt hat.

241
00:14:21,860 --> 00:14:23,860
Obwohl ich schon installiert habe.

242
00:14:23,860 --> 00:14:25,860
Probieren wir das mal aus.

243
00:14:25,860 --> 00:14:29,860
Ja guck, der hat .NET 8 nicht erkannt.

244
00:14:29,860 --> 00:14:31,860
Kack, noob.

245
00:14:31,860 --> 00:14:33,860
So, wunderbar.

246
00:14:33,860 --> 00:14:35,460
So, wenn wir jetzt Glück haben.

247
00:14:35,460 --> 00:14:37,700
Sollte er das alles erkennen.

248
00:14:37,700 --> 00:14:41,260
Oder auch nicht.

249
00:14:41,260 --> 00:14:43,260
Reload Project.

250
00:14:45,260 --> 00:14:47,260
Ah, jetzt hat er alles erkannt.

251
00:14:47,260 --> 00:14:49,260
Nice, nice, nice, nice.

252
00:14:49,260 --> 00:14:50,260
Sehr schön.

253
00:14:50,260 --> 00:14:51,260
Okay.

254
00:14:51,260 --> 00:14:52,260
Da machen wir ein ordentliches Farbschema.

255
00:14:52,260 --> 00:14:54,260
Sonst wird das ja nix.

256
00:14:54,260 --> 00:14:55,260
RIDER.

257
00:14:55,260 --> 00:14:56,260
Wir wollen Visual Studio.

258
00:14:56,260 --> 00:14:57,260
Visual...

259
00:14:57,260 --> 00:14:58,260
Wo ist es denn?

260
00:14:58,260 --> 00:14:59,260
Visual Studio Dark.

261
00:14:59,260 --> 00:15:00,260
Wollen wir haben.

262
00:15:00,260 --> 00:15:03,260
Dass es so schön Microsoft .NET mäßig aussieht.

263
00:15:03,260 --> 00:15:05,260
Gut.

264
00:15:05,260 --> 00:15:07,260
Hello World Programm.

265
00:15:07,260 --> 00:15:09,260
Also, Repos vor MChamp.

266
00:15:09,260 --> 00:15:11,260
Und jetzt gucken wir, jetzt vergleichen wir mal.

267
00:15:11,260 --> 00:15:13,260
Gucken wir mal kurz, ob das stimmt.

268
00:15:13,260 --> 00:15:15,260
Überhaupt, was Microsoft da schreibt.

269
00:15:15,260 --> 00:15:17,260
Microsoft selbst sagt ja.

270
00:15:17,260 --> 00:15:23,260
Dass ein .NET Programm nur noch 1,4 MB oder sowas groß ist.

271
00:15:23,260 --> 00:15:25,260
Und das testen wir jetzt mal.

272
00:15:25,260 --> 00:15:27,260
Das probieren wir jetzt mal aus.

273
00:15:27,260 --> 00:15:29,260
Ob das denn überhaupt stimmt.

274
00:15:29,260 --> 00:15:31,260
Ne, Dracula mag ich nicht.

275
00:15:31,260 --> 00:15:33,260
Ob das denn überhaupt stimmt.

276
00:15:33,260 --> 00:15:35,260
Was Microsoft da so sagt.

277
00:15:35,260 --> 00:15:37,260
Ähm.

278
00:15:37,260 --> 00:15:38,260
Hier.

279
00:15:38,260 --> 00:15:39,260
Microsoft sagt.

280
00:15:39,260 --> 00:15:41,260
Ein Hello World .NET 8 Programm mit.

281
00:15:41,260 --> 00:15:43,260
Wenn es kompiliert ist.

282
00:15:43,260 --> 00:15:45,260
Braucht nur noch 1,84 MB.

283
00:15:45,260 --> 00:15:48,600
Das heißt.

284
00:15:48,600 --> 00:15:50,600
Wir testen das jetzt mal.

285
00:15:50,600 --> 00:15:51,600
Und gucken.

286
00:15:51,600 --> 00:15:52,600
Wow.

287
00:15:52,600 --> 00:15:54,600
What the fuck.

288
00:15:54,600 --> 00:15:55,600
Java.

289
00:15:55,600 --> 00:15:56,600
Geh mal fort.

290
00:15:56,600 --> 00:15:57,600
Ähm.

291
00:15:57,600 --> 00:15:59,600
Und testen mal, ob das jetzt auch wirklich der Fall ist.

292
00:15:59,600 --> 00:16:01,600
Also.

293
00:16:01,600 --> 00:16:03,600
.NET.

294
00:16:03,600 --> 00:16:05,600
Publish.

295
00:16:05,600 --> 00:16:06,600
So.

296
00:16:06,600 --> 00:16:09,600
Wenn ich den Kram noch aus dem Kopf wüssten würde.

297
00:16:09,600 --> 00:16:10,600
Es ist "-p".

298
00:16:10,600 --> 00:16:11,600
Und dann irgendwie.

299
00:16:11,600 --> 00:16:12,600
Publish.

300
00:16:12,600 --> 00:16:13,600
AOT.

301
00:16:13,600 --> 00:16:14,600
Gleich True.

302
00:16:14,600 --> 00:16:15,600
Kann das sein?

303
00:16:15,600 --> 00:16:16,600
Ergibt das Sinn?

304
00:16:16,600 --> 00:16:17,600
Output.

305
00:16:17,600 --> 00:16:20,940
Build Directory.

306
00:16:20,940 --> 00:16:21,940
Ok.

307
00:16:21,940 --> 00:16:25,950
Er kackt schon mal nicht ab.

308
00:16:25,950 --> 00:16:26,950
Ok.

309
00:16:26,950 --> 00:16:28,950
Wahrscheinlich stimmt das, was ich gemacht habe.

310
00:16:28,950 --> 00:16:29,950
So.

311
00:16:29,950 --> 00:16:30,950
Build.

312
00:16:30,950 --> 00:16:31,950
Das .NET Programm ist.

313
00:16:31,950 --> 00:16:32,950
Wait a minute.

314
00:16:32,950 --> 00:16:33,950
Das ist aber.

315
00:16:33,950 --> 00:16:34,950
Das ist aber.

316
00:16:34,950 --> 00:16:35,950
Was.

317
00:16:35,950 --> 00:16:36,950
Was zum.

318
00:16:36,950 --> 00:16:37,950
Ah.

319
00:16:37,950 --> 00:16:38,950
Was ist mit meiner Shell los, Mann?

320
00:16:38,950 --> 00:16:41,460
Was war das denn jetzt?

321
00:16:41,460 --> 00:16:42,460
Hat komische Zeichen reingepastet.

322
00:16:42,460 --> 00:16:47,330
So.

323
00:16:47,330 --> 00:16:48,330
Also.

324
00:16:48,330 --> 00:16:49,330
Ohne zu strippen.

325
00:16:49,330 --> 00:16:50,330
Ist das schon einmal.

326
00:16:50,330 --> 00:16:51,330
Sehe ich das richtig?

327
00:16:51,330 --> 00:16:55,110
Das ist.

328
00:16:55,110 --> 00:16:56,110
Wie viel ist das?

329
00:16:56,110 --> 00:16:57,110
9 MB?

330
00:16:57,110 --> 00:16:58,110
Ja.

331
00:16:58,110 --> 00:17:00,810
9 MB groß.

332
00:17:00,810 --> 00:17:01,810
Ok.

333
00:17:01,810 --> 00:17:02,810
Strip.

334
00:17:02,810 --> 00:17:03,810
Strip.

335
00:17:03,810 --> 00:17:04,810
Symbols.

336
00:17:04,810 --> 00:17:07,500
Lasst uns mal schauen, wie groß es jetzt ist.

337
00:17:07,500 --> 00:17:08,500
Immer noch 8,9 MB.

338
00:17:08,500 --> 00:17:09,500
.NET.

339
00:17:09,500 --> 00:17:10,500
.NET.

340
00:17:10,500 --> 00:17:11,500
.NET.

341
00:17:11,500 --> 00:17:12,500
.NET.

342
00:17:12,500 --> 00:17:13,500
.NET.

343
00:17:13,500 --> 00:17:16,780
.NET.

344
00:17:16,780 --> 00:17:17,780
.NET.

345
00:17:17,780 --> 00:17:18,780
.NET.

346
00:17:18,780 --> 00:17:23,970
.NET.

347
00:17:23,970 --> 00:17:24,970
.NET.

348
00:17:24,970 --> 00:17:25,970
.NET.

349
00:17:25,970 --> 00:17:26,970
.NET.

350
00:17:26,970 --> 00:17:31,070
.NET.

351
00:17:31,070 --> 00:17:32,070
.NET.

352
00:17:32,070 --> 00:17:33,070
.NET.

353
00:17:33,070 --> 00:17:34,070
.NET.

354
00:17:34,070 --> 00:17:37,020
.NET.

355
00:17:37,020 --> 00:17:38,020
.NET.

356
00:17:38,020 --> 00:17:39,020
.NET.

357
00:17:39,020 --> 00:17:40,020
.NET.

358
00:17:40,020 --> 00:17:51,100
.NET.

359
00:17:51,100 --> 00:17:52,100
.NET.

360
00:17:52,100 --> 00:17:53,100
.NET.

361
00:17:53,100 --> 00:17:55,420
.NET.

362
00:17:55,420 --> 00:17:56,420
.NET.

363
00:17:56,420 --> 00:17:57,420
.NET.

364
00:17:57,420 --> 00:17:58,420
.NET.

365
00:17:58,420 --> 00:17:59,420
.NET.

366
00:17:59,420 --> 00:18:00,420
.NET.

367
00:18:00,420 --> 00:18:01,420
.NET.

368
00:18:01,420 --> 00:18:02,420
.NET.

369
00:18:02,420 --> 00:18:03,420
.NET.

370
00:18:03,420 --> 00:18:04,420
.NET.

371
00:18:04,420 --> 00:18:05,420
.NET.

372
00:18:05,420 --> 00:18:10,740
.NET.

373
00:18:10,740 --> 00:18:11,740
.NET.

374
00:18:11,740 --> 00:18:12,740
.NET.

375
00:18:12,740 --> 00:18:13,740
.NET.

376
00:18:13,740 --> 00:18:14,740
.NET.

377
00:18:14,740 --> 00:18:17,240
.NET.

378
00:18:17,240 --> 00:18:18,240
.NET.

379
00:18:18,240 --> 00:18:19,240
.NET.

380
00:18:19,240 --> 00:18:20,240
.NET.

381
00:18:20,240 --> 00:18:26,100
Also das ist ja weit von dem entfernt, was Microsoft sich da...

382
00:18:26,100 --> 00:18:26,620
Ah, guck mal jetzt.

383
00:18:28,520 --> 00:18:30,740
Sag mal, was zum Teufel ist mit meinem Terminal los?

384
00:18:37,760 --> 00:18:43,690
Ah, das ist schon besser.

385
00:18:44,890 --> 00:18:48,430
1,9 MB, das ist richtig, was Microsoft da sagt.

386
00:18:49,310 --> 00:18:50,430
Tatsächlich, guck mal.

387
00:18:51,010 --> 00:18:54,070
Nur noch 1,9 MB groß der VM-Champ.

388
00:18:56,570 --> 00:18:57,430
Okay, das funktioniert.

389
00:18:57,430 --> 00:19:00,330
Jetzt vergleichen wir das mal auf die Schnelle.

390
00:19:00,850 --> 00:19:03,630
Ich stelle mal kurz hier um auf .NET.

391
00:19:04,070 --> 00:19:09,870
Die Debug-Datei, da sind Symbole drin, also sprich, wie die Funktionen heißen und sonst was.

392
00:19:14,740 --> 00:19:15,760
Wofür braucht man das?

393
00:19:17,440 --> 00:19:23,160
Das braucht man, dass du es ordentlich debuggen kannst.

394
00:19:24,220 --> 00:19:28,720
Mit irgendeinem Debugger, dass du weißt, wie die Funktionen noch heißen.

395
00:19:28,720 --> 00:19:30,720
Also, wenn eine Funktion aufgerufen wird...

396
00:19:31,540 --> 00:19:34,600
Und die Debug-Datei nicht hast, dann weißt du nicht mal, wie die ursprünglich hieß.

397
00:19:37,920 --> 00:19:39,780
Die Debug-Datei würde ich ja auch nicht ausliefern.

398
00:19:41,600 --> 00:19:44,340
Die ist für dich zum ausprobieren.

399
00:19:45,060 --> 00:19:49,620
Also, wenn du wirklich debuggen musst, dass du weißt, wo er gerade ist und was er gerade aufruft.

400
00:19:49,740 --> 00:19:58,200
Weil, wenn die Funktionen heißen octopus.output, dann weißt du schon mal, was Bescheid ist.

401
00:19:58,760 --> 00:20:00,680
Wenn die Funktionen so heißen, dann weißt du nicht so genau gibt es die Funktionen?

402
00:20:00,980 --> 00:20:02,760
was das ist. Sag mal, was zum Teufel ist mit

403
00:20:02,760 --> 00:20:03,740
meiner Shell los?

404
00:20:06,020 --> 00:20:07,880
Klar kannst du die ausführen ohne Debug-File.

405
00:20:07,980 --> 00:20:09,340
Das ist überhaupt kein Ding. Guck mal.

406
00:20:09,860 --> 00:20:11,160
AM, VM-Champ,

407
00:20:12,100 --> 00:20:14,080
Debug. Geht immer noch.

408
00:20:15,080 --> 00:20:15,780
Überhaupt kein Problem.

409
00:20:17,400 --> 00:20:18,100
Das ist nicht Fleet.

410
00:20:18,200 --> 00:20:19,820
Das ist Rider mit dem neuen UI.

411
00:20:20,600 --> 00:20:22,120
So, wir stellen das jetzt mal testweise

412
00:20:22,120 --> 00:20:23,580
um. Auf .

413
00:20:23,580 --> 00:20:32,590
Kann man das hier nicht umstellen? Auf .NET

414
00:20:32,590 --> 00:20:33,450
8.

415
00:20:36,080 --> 00:20:38,280
Ich stelle es auf .NET Standard um.

416
00:20:38,280 --> 00:20:40,080
Easy. Dann sollte es auf jeden Fall gehen.

417
00:20:41,160 --> 00:20:41,520
Ähm.

418
00:20:42,760 --> 00:20:43,280
Publish.

419
00:20:46,500 --> 00:20:48,360
Alter, was geht mit

420
00:20:48,360 --> 00:20:50,020
meinem Terminal ab, Alter?

421
00:20:50,260 --> 00:20:52,120
Das kann doch nicht sein, dass das Laufen kaputt ist.

422
00:20:52,460 --> 00:20:53,680
Ich krieg hier Anfälle.

423
00:21:06,200 --> 00:21:07,160
Okay, ähm.

424
00:21:09,950 --> 00:21:11,270
Kann ich das nicht hier auf

425
00:21:11,270 --> 00:21:15,750
.NET 8 raus?

426
00:21:22,180 --> 00:21:23,160
Unallable, okay.

427
00:21:34,400 --> 00:21:35,520
Darf ich das jetzt übersetzen

428
00:21:35,520 --> 00:21:39,790
vielleicht? Was?

429
00:21:41,650 --> 00:21:41,950
Alter.

430
00:21:41,950 --> 00:21:42,010
Alter.

431
00:21:43,530 --> 00:21:45,990
Ich will keine fucking Class Library, Mann.

432
00:21:46,230 --> 00:21:50,570
Ach, kann man das nicht machen, oder wie?

433
00:21:50,570 --> 00:21:52,570
Ah, das ist ja doof.

434
00:21:52,570 --> 00:21:56,710
Äh.

435
00:21:56,710 --> 00:21:58,710
Warum kann ich in die .NET-Version nicht runtergehen?

436
00:21:58,710 --> 00:22:00,710
Warum geht das nicht?

437
00:22:00,710 --> 00:22:02,710
Ich mein, ich kann, ich kann sagen

438
00:22:02,710 --> 00:22:06,730
Unload. Wo ist denn der

439
00:22:06,730 --> 00:22:08,730
Unload-Knopf überhaupt jetzt?

440
00:22:08,730 --> 00:22:10,730
Unload Project.

441
00:22:10,730 --> 00:22:12,730
So.

442
00:22:12,730 --> 00:22:14,730
Ich, ich kann da in .NET 7 reinschreiben.

443
00:22:14,730 --> 00:22:18,170
So, easy.

444
00:22:18,170 --> 00:22:24,230
Oh, jetzt funktioniert's auch.

445
00:22:24,230 --> 00:22:26,230
Äh, Liga, da kann ich dir gleich was zu sagen.

446
00:22:26,230 --> 00:22:30,890
Wenn ich mich nicht hundertprozentig sehen kann.

447
00:22:30,890 --> 00:22:32,890
Wenn ich sicher bin.

448
00:22:32,890 --> 00:22:34,890
So.

449
00:22:34,890 --> 00:22:36,890
Guck mal, wie groß das ist.

450
00:22:36,890 --> 00:22:38,890
Okay.

451
00:22:38,890 --> 00:22:40,890
Das ist schon ein Unterschied. Guck mal.

452
00:22:40,890 --> 00:22:42,890
Mit der alten .NET-Version ist es

453
00:22:42,890 --> 00:22:44,890
5,6 MB für ein publisches

454
00:22:44,890 --> 00:22:46,890
Hello-World-Kurs. Und mit der neuen ist es

455
00:22:46,890 --> 00:22:48,890
1,9.

456
00:22:48,890 --> 00:22:50,890
Das ist, das ist tatsächlich echt

457
00:22:50,890 --> 00:22:52,890
eine gute Verbesserung.

458
00:22:52,890 --> 00:22:54,890
Da kann man nix sagen.

459
00:22:54,890 --> 00:22:56,890
So. Also.

460
00:22:56,890 --> 00:22:58,890
Ähm. Ich bin nicht zu stark.

461
00:22:58,890 --> 00:23:00,890
Ich seh unsere Pipelines, die empfehlen .NET Restore,

462
00:23:00,890 --> 00:23:02,890
aber auch .NET Build.

463
00:23:02,890 --> 00:23:04,890
Doch, die Sache ist bloß die,

464
00:23:04,890 --> 00:23:06,890
ich hab keine Ahnung, warum die Leute überhaupt

465
00:23:06,890 --> 00:23:08,890
noch Build und Restore verwenden.

466
00:23:08,890 --> 00:23:10,890
Die können einfach Publish verwenden.

467
00:23:10,890 --> 00:23:12,890
Das macht beides in einem.

468
00:23:12,890 --> 00:23:14,890
Also, keine Ahnung, warum das über...

469
00:23:14,890 --> 00:23:16,890
Ich weiß, sogar das offizielle .NET

470
00:23:16,890 --> 00:23:18,890
Docker-File-Example

471
00:23:18,890 --> 00:23:20,890
macht das mit, mit Restore.

472
00:23:20,890 --> 00:23:22,890
Vielleicht um,

473
00:23:22,890 --> 00:23:24,890
vielleicht fürs Caching von den Containern.

474
00:23:24,890 --> 00:23:26,890
Das kann natürlich sein,

475
00:23:26,890 --> 00:23:28,890
wenn sich der Source-Code ändert,

476
00:23:28,890 --> 00:23:30,890
tun das nicht, ähm,

477
00:23:30,890 --> 00:23:32,890
jedes Mal...

478
00:23:32,890 --> 00:23:34,890
Also, du kannst ja, wenn du,

479
00:23:34,890 --> 00:23:36,890
wenn du ein Docker-File hast,

480
00:23:36,890 --> 00:23:38,890
dann merkt das sich ja, an welchem,

481
00:23:38,890 --> 00:23:40,890
an welchem Step du was geändert hast

482
00:23:40,890 --> 00:23:42,890
und macht dann ab da weiter.

483
00:23:42,890 --> 00:23:44,890
So, wenn du quasi Publish, also quasi den Restore

484
00:23:44,890 --> 00:23:46,890
für die Dependencies und die Nougat-Packages

485
00:23:46,890 --> 00:23:48,890
und alles, wenn du das

486
00:23:48,890 --> 00:23:50,890
in einem Befehl hast mit Publish

487
00:23:50,890 --> 00:23:52,890
und in Build und du änderst am Build-Befehl was,

488
00:23:52,890 --> 00:23:54,890
dann muss er das alles wieder machen.

489
00:23:54,890 --> 00:23:56,890
Also, vielleicht ist das

490
00:23:56,890 --> 00:23:58,890
ein Restore und dann ein Publish

491
00:23:58,890 --> 00:24:00,890
hinterher und dann Build, ist

492
00:24:00,890 --> 00:24:02,890
vielleicht, dass das Docker-Caching

493
00:24:02,890 --> 00:24:04,890
das besser hinbekommt.

494
00:24:04,890 --> 00:24:06,890
Aber ansonsten kannst du einfach .NET Publish verwenden.

495
00:24:06,890 --> 00:24:08,890
Das macht alles in einem. Also, eigentlich braucht man das

496
00:24:08,890 --> 00:24:10,890
gar nicht.

497
00:24:10,890 --> 00:24:12,890
Eigentlich overrated, outdated,

498
00:24:12,890 --> 00:24:14,890
gbated.

499
00:24:14,890 --> 00:24:16,890
So. Alles klar.

500
00:24:16,890 --> 00:24:18,890
Dann können wir jetzt hier anfangen.

501
00:24:18,890 --> 00:24:20,890
Ich hab die .NET-Version

502
00:24:20,890 --> 00:24:22,890
wieder hochgestellt.

503
00:24:22,890 --> 00:24:24,890
Gucken wir mal, ob das wieder funktioniert.

504
00:24:24,890 --> 00:24:28,970
.NET Publish.

505
00:24:28,970 --> 00:24:30,970
So. Und jetzt

506
00:24:30,970 --> 00:24:32,970
passt mal auf, was wir heute

507
00:24:32,970 --> 00:24:34,970
probieren werden. Ich bin mir nicht sicher, ob wir das überhaupt

508
00:24:34,970 --> 00:24:36,970
auf die Reihe bekommen.

509
00:24:36,970 --> 00:24:40,600
Ich muss gerade erst mal schnell

510
00:24:40,600 --> 00:24:42,600
KVM installieren. Und zwar,

511
00:24:42,600 --> 00:24:44,600
man kann ja auf der Linux-Kiste,

512
00:24:44,600 --> 00:24:46,600
ja, ja, ich weiß, es läuft gerade nichts.

513
00:24:46,600 --> 00:24:48,600
Man kann ja auf der Linux-Kiste lokal VMs benutzen.

514
00:24:48,600 --> 00:24:50,600
So. Und ich wollte schon immer mal

515
00:24:50,600 --> 00:24:54,170
gucken, wie man

516
00:24:54,170 --> 00:24:56,170
VMs erstellt

517
00:24:56,170 --> 00:24:58,170
über die

518
00:24:58,170 --> 00:25:00,170
Linux-VM-Erstellungs-API.

519
00:25:00,170 --> 00:25:02,170
Das hat nicht wirklich

520
00:25:02,170 --> 00:25:08,170
so viel Sinn.

521
00:25:08,170 --> 00:25:10,170
Ich hab mir letztens so ein Tool zusammengescriptet.

522
00:25:10,170 --> 00:25:12,170
Aber wir können das ja

523
00:25:12,170 --> 00:25:14,170
mal über die API machen.

524
00:25:14,170 --> 00:25:16,170
Und das Gute ist,

525
00:25:16,170 --> 00:25:18,170
das eignet sich dementsprechend auch wunderbar als

526
00:25:18,170 --> 00:25:20,170
Compiler-Testprojekt,

527
00:25:20,170 --> 00:25:22,170
weil ich muss Low-Level-Kram verwenden, plus

528
00:25:22,170 --> 00:25:24,170
ein paar ein bisschen etwas anstehende Libraries.

529
00:25:24,170 --> 00:25:26,170
Ich muss mir jetzt aber erst mal

530
00:25:26,170 --> 00:25:28,170
libvirt und qemo und den ganzen Shit erstellen.

531
00:25:28,170 --> 00:25:32,250
Gucken wir mal, ob das überhaupt

532
00:25:32,250 --> 00:25:34,250
funktioniert, damit

533
00:25:34,250 --> 00:25:36,250
ich da drauf zugreifen kann.

534
00:25:36,250 --> 00:25:38,250
Okay.

535
00:25:38,250 --> 00:25:40,250
Libvirt gibt es nicht.

536
00:25:40,250 --> 00:25:42,250
Dann meinetwegen muss ich das noch starten.

537
00:25:42,250 --> 00:25:44,250
Systemctl enable libvirt.

538
00:25:44,250 --> 00:25:46,250
Not exist.

539
00:25:46,250 --> 00:25:50,260
Okay. Start.

540
00:25:50,260 --> 00:25:55,180
Sag mal,

541
00:25:55,180 --> 00:25:57,180
warum ist denn das so

542
00:25:57,180 --> 00:26:03,940
lahm, meine Tastatur?

543
00:26:05,940 --> 00:26:07,940
Ah, viel besser.

544
00:26:07,940 --> 00:26:09,940
Okay.

545
00:26:09,940 --> 00:26:11,940
Kann man das jetzt laufen?

546
00:26:11,940 --> 00:26:13,940
Kann man KVM laufen?

547
00:26:13,940 --> 00:26:15,940
Nee, wir haben kein

548
00:26:15,940 --> 00:26:17,940
KVM. Oh fuck, ich habe schon

549
00:26:17,940 --> 00:26:19,940
lange kein KVM mehr installiert.

550
00:26:19,940 --> 00:26:25,940
KVM?

551
00:26:25,940 --> 00:26:34,760
Okay, KVM ist, ja.

552
00:26:34,760 --> 00:26:36,760
Ach du Kacke.

553
00:26:36,760 --> 00:26:38,760
Arch KVM install.

554
00:26:38,760 --> 00:26:40,760
Das müssen wir jetzt mal auf die Schnelle gucken.

555
00:26:40,760 --> 00:26:42,760
Check

556
00:26:42,760 --> 00:26:44,760
support.

557
00:26:44,760 --> 00:26:46,760
Okay, kann meine CPU in der VM das?

558
00:26:46,760 --> 00:26:48,760
Nein. Das heißt, ich muss meine

559
00:26:48,760 --> 00:26:50,760
VM erst mal wieder ausschalten.

560
00:26:50,760 --> 00:26:52,760
Und in den

561
00:26:52,760 --> 00:26:54,760
Settings nested Virtualisierung einschalten.

562
00:26:54,760 --> 00:26:56,760
Sonst wird das nämlich nicht funktionieren.

563
00:26:56,760 --> 00:27:00,970
nested Virtualisierung.

564
00:27:00,970 --> 00:27:02,970
Okay.

565
00:27:02,970 --> 00:27:04,970
Also, wenn ich eine VM

566
00:27:04,970 --> 00:27:06,970
in einer VM starten will, dann geht das

567
00:27:06,970 --> 00:27:08,970
nicht. Das geht nur, wenn man nested

568
00:27:08,970 --> 00:27:10,970
Virtualisierung einschaltet. Also falls ihr irgendwann mal

569
00:27:10,970 --> 00:27:12,970
Probleme habt und euch

570
00:27:12,970 --> 00:27:14,970
fragt, warum ihr in eurer VM keine

571
00:27:14,970 --> 00:27:16,970
VM starten könnt, dann liegt das höchstwahrscheinlich

572
00:27:16,970 --> 00:27:18,970
daran, weil keine nested Virtualisierung

573
00:27:18,970 --> 00:27:20,970
eingeschaltet ist.

574
00:27:20,970 --> 00:27:22,970
Normalerweise braucht es ja auch niemand.

575
00:27:22,970 --> 00:27:24,970
Habt ihr schon mal VMs in einer VM laufen

576
00:27:24,970 --> 00:27:26,970
lassen und

577
00:27:26,970 --> 00:27:28,970
wenn ja,

578
00:27:28,970 --> 00:27:33,430
warum? Okay.

579
00:27:33,430 --> 00:27:35,430
Virtualisierung ist enabled.

580
00:27:35,430 --> 00:27:37,430
Proxmox Test Setup. Ja, verstehe.

581
00:27:37,430 --> 00:27:39,430
Dafür ist es sinnvoll.

582
00:27:39,430 --> 00:27:41,430
Auf jeden Fall.

583
00:27:41,430 --> 00:27:43,430
WSL. Ja gut, WSL.

584
00:27:43,430 --> 00:27:46,940
WSL ist

585
00:27:46,940 --> 00:27:48,940
doch keine nested Virtualisierung.

586
00:27:50,940 --> 00:27:52,940
Es sei denn, du hast Windows in der VM und dann WSL.

587
00:27:54,940 --> 00:27:56,940
Zu schauen, wie scheiße die Performance ist.

588
00:27:56,940 --> 00:27:58,940
Die Performance ist nicht gut, aber so

589
00:27:58,940 --> 00:28:00,940
ist ja eh die Scheiße, dass es unbenutzbar ist.

590
00:28:00,940 --> 00:28:02,940
Ist es gar nicht.

591
00:28:02,940 --> 00:28:04,940
Es geht sogar halbwegs.

592
00:28:04,940 --> 00:28:08,440
So.

593
00:28:08,440 --> 00:28:10,440
Geht

594
00:28:10,440 --> 00:28:12,440
mein KVM denn jetzt?

595
00:28:12,440 --> 00:28:14,440
Was ist denn das hier mit J?

596
00:28:14,440 --> 00:28:25,370
No hypervisor options

597
00:28:25,370 --> 00:28:27,370
found. Okay.

598
00:28:27,370 --> 00:28:29,370
Habe ich kein QEMO? Da muss ich mal kurz

599
00:28:29,370 --> 00:28:31,370
gucken, wie installiert man den ganzen Krempel?

600
00:28:46,280 --> 00:28:48,280
Okay, war das klar?

601
00:28:48,280 --> 00:28:50,280
Nein, nein, nein, nein.

602
00:28:50,280 --> 00:28:52,280
Moment.

603
00:28:52,280 --> 00:28:54,280
Was muss ich denn installieren?

604
00:28:54,280 --> 00:28:56,280
QEMO? KVM?

605
00:28:56,280 --> 00:28:58,280
Hm. Wie heißt denn das Package,

606
00:28:58,280 --> 00:29:00,280
was ich da...

607
00:29:00,280 --> 00:29:02,280
QEMO Full vielleicht? Gibt es?

608
00:29:04,280 --> 00:29:06,280
Okay. Ja, ja.

609
00:29:06,280 --> 00:29:15,480
Hau drauf. Gib ihm.

610
00:29:15,480 --> 00:29:17,480
So.

611
00:29:17,480 --> 00:29:20,860
Hoffen wir mal, dass ich

612
00:29:20,860 --> 00:29:22,860
jetzt ein funktionierendes...

613
00:29:22,860 --> 00:29:29,050
Ah, jetzt funktioniert es.

614
00:29:29,050 --> 00:29:31,050
Okay. Jetzt kann ich VMs starten.

615
00:29:31,050 --> 00:29:33,050
Alles gut.

616
00:29:33,050 --> 00:29:35,050
So. Dann muss ich mich

617
00:29:35,050 --> 00:29:37,050
wahrscheinlich noch in die libvirt Gruppe

618
00:29:37,050 --> 00:29:42,600
packen.

619
00:29:42,600 --> 00:29:44,600
User add libvirt

620
00:29:44,600 --> 00:29:46,600
glaube ich zumindest. Sonst darf ich von mir

621
00:29:46,600 --> 00:29:48,600
aus nicht darauf zugreifen.

622
00:29:48,600 --> 00:29:50,600
Wobei, brauche

623
00:29:50,600 --> 00:29:54,100
ich das überhaupt?

624
00:29:54,100 --> 00:29:56,100
Add connections

625
00:29:56,100 --> 00:30:07,540
user session. Okay.

626
00:30:07,540 --> 00:30:11,050
Ach ja.

627
00:30:11,050 --> 00:30:14,870
Okay. Das testen wir jetzt mal.

628
00:30:14,870 --> 00:30:16,870
Debian Cloud

629
00:30:16,870 --> 00:30:18,870
Image Download. Wir gucken mal, ob

630
00:30:18,870 --> 00:30:20,870
die VM in der VM funktioniert.

631
00:30:20,870 --> 00:30:22,870
Bullseye Latest.

632
00:30:22,870 --> 00:30:24,870
Klingt eigentlich ganz gut.

633
00:30:24,870 --> 00:30:26,870
AMD 64

634
00:30:26,870 --> 00:30:28,870
QCow

635
00:30:28,870 --> 00:30:30,870
Image. Genau das brauchen wir.

636
00:30:30,870 --> 00:30:34,310
Debian 1 Generic.

637
00:30:34,310 --> 00:30:36,310
Cloud Generic.

638
00:30:36,310 --> 00:30:43,140
Wunderbar. Gib ihm.

639
00:30:43,140 --> 00:30:45,140
So. Schauen wir mal, ob meine VM lokal

640
00:30:45,140 --> 00:30:47,140
funktioniert.

641
00:30:47,140 --> 00:30:49,140
Mit dem Wirt Manager. Wie gesagt,

642
00:30:49,140 --> 00:30:51,140
das, was ich hier jetzt mit dem Wirt Manager

643
00:30:51,140 --> 00:30:53,140
mache, das will ich

644
00:30:53,140 --> 00:30:55,140
über die KVM

645
00:30:55,140 --> 00:30:57,140
oder die libvirt API machen.

646
00:30:57,140 --> 00:30:59,140
Das muss man über irgendwelche C-APIs

647
00:30:59,140 --> 00:31:01,140
aufrufen. Das wird ganz aberhandig gleich.

648
00:31:01,140 --> 00:31:03,140
Aber dann sehen wir auch, ob

649
00:31:03,140 --> 00:31:05,140
die Kompilierung von .NET was taugt,

650
00:31:05,140 --> 00:31:07,140
wenn das alles funktioniert. Falls

651
00:31:07,140 --> 00:31:09,140
ich überhaupt was auf die Reihe kriege.

652
00:31:09,140 --> 00:31:11,140
So.

653
00:31:11,140 --> 00:31:13,140
Ja, ja. Local Install

654
00:31:13,140 --> 00:31:15,140
Media. Boah, wie geht

655
00:31:15,140 --> 00:31:17,140
denn der Kram? Ich benutze das eigentlich

656
00:31:17,140 --> 00:31:21,160
nie. Download.

657
00:31:21,160 --> 00:31:26,200
Debian.

658
00:31:26,200 --> 00:31:28,200
Select. Ja, Linux.

659
00:31:28,200 --> 00:31:32,150
Linux 20

660
00:31:32,150 --> 00:31:34,150
2020.

661
00:31:34,150 --> 00:31:36,150
Perfekt. Das wollte ich schon immer haben.

662
00:31:36,150 --> 00:31:38,150
Zwei. Eine

663
00:31:38,150 --> 00:31:40,150
CPU reicht. 1024 MB

664
00:31:40,150 --> 00:31:42,150
reicht auch.

665
00:31:42,150 --> 00:31:44,150
Storage.

666
00:31:44,150 --> 00:31:46,150
Ja. Perfekt. Wunderbar.

667
00:31:46,150 --> 00:31:49,660
Alles klar.

668
00:31:49,660 --> 00:31:51,660
Finish.

669
00:31:51,660 --> 00:31:53,660
Ok. Funktioniert.

670
00:31:53,660 --> 00:31:55,660
Funktioniert.

671
00:31:55,660 --> 00:31:57,660
Also ich meine,

672
00:31:57,660 --> 00:31:59,660
die VM bootet nicht,

673
00:31:59,660 --> 00:32:01,660
aber die VM startet. Das reicht.

674
00:32:01,660 --> 00:32:05,610
Das reicht mir eigentlich schon.

675
00:32:05,610 --> 00:32:07,610
Das ist kein ISO. Du hast Recht.

676
00:32:07,610 --> 00:32:09,610
Das ist kein ISO. Das ist ein komplettes

677
00:32:09,610 --> 00:32:11,610
VM-Image. Ok. Aber

678
00:32:11,610 --> 00:32:13,610
die VM startet. Das ist das Eigentliche, was

679
00:32:13,610 --> 00:32:15,610
ich haben will.

680
00:32:15,610 --> 00:32:17,610
Delete.

681
00:32:17,610 --> 00:32:19,610
Funktioniert. Gut. So.

682
00:32:19,610 --> 00:32:21,610
Und jetzt gucken wir mal, wie wir das

683
00:32:21,610 --> 00:32:23,610
über die API machen können.

684
00:32:23,610 --> 00:32:25,610
Das wird

685
00:32:25,610 --> 00:32:30,260
was.

686
00:32:30,260 --> 00:32:32,260
Das wird was.

687
00:32:32,260 --> 00:32:34,260
Lib wird

688
00:32:34,260 --> 00:32:36,260
API.

689
00:32:36,260 --> 00:32:38,260
Documentation.

690
00:32:38,260 --> 00:32:44,140
Oh, jetzt wird es abartig.

691
00:32:44,140 --> 00:32:47,640
Äh.

692
00:32:47,640 --> 00:32:49,640
API-Reference. Excellent.

693
00:32:49,640 --> 00:32:57,720
Ok.

694
00:32:57,720 --> 00:32:59,720
Ähm.

695
00:32:59,720 --> 00:33:01,720
Domain. Aus irgendwelchen Gründen

696
00:33:01,720 --> 00:33:03,720
nennt sich eine VM in KVM Domain.

697
00:33:03,720 --> 00:33:05,720
Ich weiß auch nicht, warum.

698
00:33:05,720 --> 00:33:07,720
Es hat nichts mit DNS und so.

699
00:33:07,720 --> 00:33:09,720
Ach du Scheiße.

700
00:33:09,720 --> 00:33:17,900
Alter.

701
00:33:17,900 --> 00:33:19,900
MonkaW. Ok. Ich gebe zu,

702
00:33:19,900 --> 00:33:21,900
ich habe im Vorfeld schon ein bisschen gespickt.

703
00:33:21,900 --> 00:33:23,900
Ich weiß ein bisschen, nach was ich gucken muss.

704
00:33:23,900 --> 00:33:25,900
Connection gucken.

705
00:33:25,900 --> 00:33:27,900
Äh. Ne. Nach Connect

706
00:33:27,900 --> 00:33:31,660
muss ich gucken.

707
00:33:31,660 --> 00:33:33,660
Wenn ich das, wenn ich das richtig in Erinnerung habe. Connect.

708
00:33:33,660 --> 00:33:35,660
Hier. Connect.

709
00:33:35,660 --> 00:33:37,660
Connect.

710
00:33:37,660 --> 00:33:39,660
Aha. Nope.

711
00:33:39,660 --> 00:33:41,660
Wird nicht connected. Wo ist das denn?

712
00:33:41,660 --> 00:33:43,660
Also. Das funktioniert folgendermaßen.

713
00:33:43,660 --> 00:33:45,660
Eine VM über die

714
00:33:45,660 --> 00:33:47,660
über die Linux-API anzulegen.

715
00:33:47,660 --> 00:33:49,660
Man muss

716
00:33:49,660 --> 00:33:51,660
als erstes connect zu

717
00:33:51,660 --> 00:33:53,660
libvirt.

718
00:33:53,660 --> 00:33:55,660
libvirt ist dieses Ding, was

719
00:33:55,660 --> 00:33:57,660
der Wirt-Manager auch verwendet.

720
00:33:57,660 --> 00:33:59,660
Also keiner spricht direkt KVM.

721
00:33:59,660 --> 00:34:01,660
Die sprechen alle über diese API-Schnittstelle damit.

722
00:34:01,660 --> 00:34:03,660
Sondern man muss sich zu libvirt connecten.

723
00:34:03,660 --> 00:34:05,660
Am Ende muss man

724
00:34:05,660 --> 00:34:09,480
die Connection wieder closen.

725
00:34:09,480 --> 00:34:11,480
Dann muss man

726
00:34:11,480 --> 00:34:13,480
create-vm machen.

727
00:34:13,480 --> 00:34:15,480
Wie auch immer.

728
00:34:15,480 --> 00:34:17,480
Dann muss man aufs Netzwerk warten,

729
00:34:17,480 --> 00:34:19,480
dass das Ganze funktioniert.

730
00:34:19,480 --> 00:34:24,460
Und dann ist gut. Dann ist die VM wieder da.

731
00:34:24,460 --> 00:34:26,460
GitHub Code Pile. Frag mal.

732
00:34:26,460 --> 00:34:36,740
Okay.

733
00:34:36,740 --> 00:34:38,740
Connect.

734
00:34:38,740 --> 00:34:40,740
Also wie connecten wir uns zu libvirt?

735
00:34:40,740 --> 00:34:45,210
Das funktioniert

736
00:34:45,210 --> 00:34:47,210
so wie hier.

737
00:34:47,210 --> 00:34:49,210
Man muss dann hier irgendwie so eine Connection

738
00:34:49,210 --> 00:34:51,210
angeben.

739
00:34:51,210 --> 00:34:53,210
qemo://session

740
00:34:53,210 --> 00:34:55,210
Und

741
00:34:55,210 --> 00:34:57,210
dann funktioniert das. Aber ich muss jetzt erstmal die richtigen

742
00:34:57,210 --> 00:34:59,210
die richtigen APIs finden.

743
00:34:59,210 --> 00:35:02,710
Das heißt auf jeden Fall connect.

744
00:35:02,710 --> 00:35:04,710
So viel habe ich im Vorfeld schon raus

745
00:35:04,710 --> 00:35:06,710
rausbekommen.

746
00:35:06,710 --> 00:35:08,710
Oh.

747
00:35:08,710 --> 00:35:10,710
Obvious.

748
00:35:10,710 --> 00:35:12,710
Ja ich meine cringe wer das nicht weiß,

749
00:35:12,710 --> 00:35:14,710
dass es qemo://systemsession ist.

750
00:35:14,710 --> 00:35:16,710
Wo könnte das denn hier drinnen stehen?

751
00:35:16,710 --> 00:35:18,710
Wo könnte das denn hier drinnen stehen?

752
00:35:18,710 --> 00:35:24,520
Erstellst du gerade eine Linux-VM

753
00:35:24,520 --> 00:35:26,520
in eine Linux-VM?

754
00:35:26,520 --> 00:35:28,520
Richtig.

755
00:35:28,520 --> 00:35:30,520
Wo ist das Problem?

756
00:35:30,520 --> 00:35:32,520
Das ist dann zwar nicht mal blazingly fast,

757
00:35:32,520 --> 00:35:34,520
aber schnell genug.

758
00:35:34,520 --> 00:35:42,120
Host. Host muss ich bestimmt gucken.

759
00:35:42,120 --> 00:35:45,750
Connect.

760
00:35:45,750 --> 00:35:47,750
What the fuck man.

761
00:35:47,750 --> 00:35:49,750
Highlight all.

762
00:35:49,750 --> 00:35:51,750
Connect.

763
00:35:51,750 --> 00:35:53,750
Hier das sieht doch gut aus.

764
00:35:53,750 --> 00:35:55,750
Das sieht doch gut aus.

765
00:35:55,750 --> 00:35:57,750
Wir connect.

766
00:35:57,750 --> 00:35:59,750
Hört sich ein bisschen

767
00:35:59,750 --> 00:36:01,750
Wir connect.

768
00:36:01,750 --> 00:36:05,960
Das hört sich ein bisschen an wie

769
00:36:05,960 --> 00:36:07,960
Jetzt fehlen uns bloß noch Carlos Matos.

770
00:36:07,960 --> 00:36:09,960
Jetzt fehlen uns bloß noch Carlos Matos.

771
00:36:09,960 --> 00:36:11,960
Ach es geht ja noch weiter.

772
00:36:11,960 --> 00:36:16,040
Carlos Matos

773
00:36:16,040 --> 00:36:18,040
from New York City, New York.

774
00:36:18,040 --> 00:36:20,040
Hier.

775
00:36:20,040 --> 00:36:22,040
Wir connect open.

776
00:36:22,040 --> 00:36:24,040
Hier. Wir connect open.

777
00:36:24,040 --> 00:36:26,040
Das brauchen wir. Alles klar.

778
00:36:26,040 --> 00:36:28,040
IRQ shit.

779
00:36:28,040 --> 00:36:30,040
Wir connect open.

780
00:36:30,040 --> 00:36:32,040
So jetzt wird es spannend Leute.

781
00:36:32,040 --> 00:36:34,040
Native C Funktionen

782
00:36:34,040 --> 00:36:36,040
Native C Funktionen

783
00:36:36,040 --> 00:36:38,040
aus .NET aufrufen.

784
00:36:38,040 --> 00:36:40,040
Also.

785
00:36:40,040 --> 00:36:42,040
Okay erstmal.

786
00:36:42,040 --> 00:36:44,040
Okay erstmal.

787
00:36:44,040 --> 00:36:46,040
Erstmal allow unsafe code.

788
00:36:46,040 --> 00:36:48,040
Unsafe code wird das auf jeden Fall nicht funktionieren.

789
00:36:48,040 --> 00:36:50,040
Unsafe code wird das auf jeden Fall nicht funktionieren.

790
00:36:50,040 --> 00:36:52,040
DLL import.

791
00:36:52,040 --> 00:36:54,040
So jetzt muss ich abgucken.

792
00:36:54,040 --> 00:36:56,040
Ich muss abgucken weil

793
00:36:56,040 --> 00:36:58,040
Ich hab mir im Vorfeld schon ein Beispiel

794
00:36:58,040 --> 00:37:00,040
angeguckt und hab mir das hier

795
00:37:00,040 --> 00:37:02,040
ins Notepad auf

796
00:37:02,040 --> 00:37:05,860
auf dem anderen Bildschirm kopiert.

797
00:37:05,860 --> 00:37:07,860
Weil sonst

798
00:37:07,860 --> 00:37:09,860
plick ich da nicht durch wie das aussehen muss

799
00:37:09,860 --> 00:37:14,460
der Aufruf.

800
00:37:14,460 --> 00:37:16,460
So muss das aussehen.

801
00:37:16,460 --> 00:37:22,780
Sekunde.

802
00:37:22,780 --> 00:37:24,780
Ja so muss das aussehen.

803
00:37:24,780 --> 00:37:26,780
Hab ich schon rausgesucht.

804
00:37:26,780 --> 00:37:28,780
So muss das aussehen.

805
00:37:28,780 --> 00:37:30,780
Obviously muss das so aussehen.

806
00:37:30,780 --> 00:37:32,780
Also

807
00:37:32,780 --> 00:37:34,780
cringe wem nicht klar ist

808
00:37:34,780 --> 00:37:38,920
dass das so aussehen muss.

809
00:37:38,920 --> 00:37:40,920
So und jetzt müssen wir nur noch diese C Funktion

810
00:37:40,920 --> 00:37:42,920
irgendwie übersetzen in eine gültige

811
00:37:42,920 --> 00:37:44,920
C Sharp Funktionssignatur.

812
00:37:44,920 --> 00:37:46,920
Also das ganze muss

813
00:37:46,920 --> 00:37:48,920
schon mal in extra Klasse rein.

814
00:37:48,920 --> 00:37:50,920
Es gibt

815
00:37:50,920 --> 00:37:52,920
wird C Sharp Bindings. Ne die gibt es nicht.

816
00:37:52,920 --> 00:37:54,920
Hab ich im Vorfeld geguckt. Gibt es keine

817
00:37:54,920 --> 00:37:56,920
gescheiten. Es gibt offizielle

818
00:37:56,920 --> 00:37:58,920
Bindings. Die sind nur für .NET Framework.

819
00:37:58,920 --> 00:38:00,920
Wer auch immer seriously mit

820
00:38:00,920 --> 00:38:02,920
.NET Framework von Windows aus

821
00:38:02,920 --> 00:38:04,920
libvirt verwenden will. Und der Rest ist outdated

822
00:38:04,920 --> 00:38:06,920
und hat so Sachen wie Netzwerk

823
00:38:06,920 --> 00:38:08,920
Infos und so nicht drin. Es gibt keine

824
00:38:08,920 --> 00:38:10,920
gescheiten libvirt bindings. Leider.

825
00:38:10,920 --> 00:38:12,920
Sonst hätte ich die tatsächlich genommen.

826
00:38:12,920 --> 00:38:14,920
Okay. Wir connect

827
00:38:14,920 --> 00:38:16,920
pointer return der. Das ist mir doch

828
00:38:16,920 --> 00:38:18,920
egal was der return.

829
00:38:18,920 --> 00:38:20,920
So. Wir connect open.

830
00:38:20,920 --> 00:38:22,920
Das gibt

831
00:38:22,920 --> 00:38:24,920
ein String. Das sollte der richtig hinbekommen.

832
00:38:24,920 --> 00:38:29,260
Public

833
00:38:29,260 --> 00:38:31,260
class

834
00:38:31,260 --> 00:38:36,100
interop

835
00:38:36,100 --> 00:38:40,820
dll import

836
00:38:40,820 --> 00:38:44,200
unsave. Ne.

837
00:38:44,200 --> 00:38:48,730
Achso method.

838
00:38:48,730 --> 00:38:50,730
Okay. Public

839
00:38:50,730 --> 00:38:52,730
static extern

840
00:38:52,730 --> 00:38:54,730
wirste. Gut.

841
00:38:54,730 --> 00:38:56,730
So. Das müsste

842
00:38:56,730 --> 00:38:58,730
als Definition ausreichen um mich

843
00:38:58,730 --> 00:39:00,730
connecten zu können zu meinem

844
00:39:00,730 --> 00:39:02,730
lokal laufenden libvirt.

845
00:39:02,730 --> 00:39:04,730
Jetzt bin ich mal gespannt. Gucken wir mal.

846
00:39:04,730 --> 00:39:06,730
Also er return. Was returnt denn der überhaupt?

847
00:39:06,730 --> 00:39:08,730
Was ist denn das?

848
00:39:08,730 --> 00:39:10,730
Was ist denn das?

849
00:39:10,730 --> 00:39:12,730
This should be called first to get a

850
00:39:12,730 --> 00:39:14,730
connection to the hypervisor.

851
00:39:14,730 --> 00:39:16,730
Ja das ist nice.

852
00:39:16,730 --> 00:39:18,730
If name is null

853
00:39:18,730 --> 00:39:20,730
default environment

854
00:39:20,730 --> 00:39:22,730
environment will be used. Okay.

855
00:39:22,730 --> 00:39:26,100
Pointer to the hype.

856
00:39:26,100 --> 00:39:28,100
Jetzt gehts los mit pointer.

857
00:39:28,100 --> 00:39:30,100
Was auch sonst logischerweise.

858
00:39:30,100 --> 00:39:32,100
A pointer to the hypervisor

859
00:39:32,100 --> 00:39:34,100
connection or null in case of error.

860
00:39:34,100 --> 00:39:36,100
Alles

861
00:39:36,100 --> 00:39:38,100
klar.

862
00:39:38,100 --> 00:39:40,100
So.

863
00:39:40,100 --> 00:39:43,930
Probieren wir mal aus.

864
00:39:43,930 --> 00:39:45,930
Interop

865
00:39:45,930 --> 00:39:47,930
connection open

866
00:39:47,930 --> 00:39:49,930
qemo

867
00:39:49,930 --> 00:39:51,930
doppelpunkt doppelpunkt

868
00:39:51,930 --> 00:39:53,930
doppelpunkt slash slash slash

869
00:39:53,930 --> 00:39:55,930
session. Warum?

870
00:39:55,930 --> 00:39:57,930
Weil zu ist.

871
00:39:57,930 --> 00:39:59,930
So. Und da kommt irgendeine ID zurück. Irgendein

872
00:39:59,930 --> 00:40:01,930
Pointer. Wir gucken

873
00:40:01,930 --> 00:40:03,930
jetzt mal ob das null ist.

874
00:40:03,930 --> 00:40:05,930
Und wenn das null ist

875
00:40:05,930 --> 00:40:07,930
ist es kaputt oder ist es gecrashed oder

876
00:40:07,930 --> 00:40:09,930
wenn es eine Zahl ist dann funktioniert es. Hoffentlich.

877
00:40:09,930 --> 00:40:11,930
Wo sind wir denn?

878
00:40:11,930 --> 00:40:13,930
Repo

879
00:40:13,930 --> 00:40:15,930
vmchamp

880
00:40:15,930 --> 00:40:17,930
.net

881
00:40:17,930 --> 00:40:19,930
Ja. Geh mal weg.

882
00:40:19,930 --> 00:40:21,930
.net run

883
00:40:21,930 --> 00:40:23,930
forcechamp

884
00:40:23,930 --> 00:40:25,930
Es geht.

885
00:40:25,930 --> 00:40:27,930
Glaube ich zumindest.

886
00:40:27,930 --> 00:40:29,930
Es könnte auch ein Pointer

887
00:40:29,930 --> 00:40:31,930
ins nicht sein.

888
00:40:31,930 --> 00:40:33,930
Man weiß es nicht genau.

889
00:40:33,930 --> 00:40:35,930
Es könnte auch

890
00:40:35,930 --> 00:40:37,930
sonst wo hin pointen.

891
00:40:37,930 --> 00:40:39,930
Ja .net 8 alpha ist raus.

892
00:40:39,930 --> 00:40:41,930
Ist rausgekommen vor zwei Wochen.

893
00:40:41,930 --> 00:40:45,240
Könnte auch irgendein int

894
00:40:45,240 --> 00:40:47,240
im RAM sein. Random.

895
00:40:47,240 --> 00:40:49,240
Okay. Wir haben.

896
00:40:49,240 --> 00:40:51,240
Es sieht aus als hätten wir einen Pointer auf

897
00:40:51,240 --> 00:40:53,240
irgendwas wo ich nicht genau weiß auf was.

898
00:40:53,240 --> 00:40:57,000
Nehmen wir auch mal. Okay wir können

899
00:40:57,000 --> 00:40:59,000
hier mal Mist eintragen. Das stimmt schon.

900
00:40:59,000 --> 00:41:03,340
Ja geht dann

901
00:41:03,340 --> 00:41:05,340
auch nicht. Dann meckert er wegen

902
00:41:05,340 --> 00:41:07,340
irgendwelchen Rechten rum.

903
00:41:07,340 --> 00:41:09,340
Was System. Auf System habe ich auf jeden Fall

904
00:41:09,340 --> 00:41:11,340
keine Rechte. Ja tatsächlich.

905
00:41:11,340 --> 00:41:13,340
Okay da gehts

906
00:41:13,340 --> 00:41:15,340
da gehts kaputt an der Stelle. Wenn ich

907
00:41:15,340 --> 00:41:17,340
irgendwas anderes eintrage.

908
00:41:17,340 --> 00:41:19,340
Das sieht schon mal so aus als funktioniert das

909
00:41:19,340 --> 00:41:21,340
ganz. Okay.

910
00:41:21,340 --> 00:41:23,340
Weiter. Weiter im Text.

911
00:41:23,340 --> 00:41:25,340
So. Connection. Connection

912
00:41:25,340 --> 00:41:27,340
open. Wie erstellt man damit.

913
00:41:27,340 --> 00:41:29,340
Achso. Jetzt brauchen wir das ganze natürlich noch für

914
00:41:29,340 --> 00:41:31,340
Connection closed.

915
00:41:31,340 --> 00:41:33,340
Ich predikte

916
00:41:33,340 --> 00:41:35,340
einfach mal das es closed heißt.

917
00:41:35,340 --> 00:41:37,340
Ich hoffe es heißt nicht stopp

918
00:41:37,340 --> 00:41:39,340
oder sowas.

919
00:41:39,340 --> 00:41:41,340
Und dann braucht das

920
00:41:41,340 --> 00:41:46,630
hier.

921
00:41:46,630 --> 00:41:48,630
Ach ne hier. Und dann braucht es

922
00:41:48,630 --> 00:41:50,630
diesen Pointer um es wieder zu closen.

923
00:41:50,630 --> 00:41:52,630
Also.

924
00:41:52,630 --> 00:41:54,630
In Pointer.

925
00:41:54,630 --> 00:41:58,650
Connection.

926
00:41:58,650 --> 00:42:00,650
Schauen wir mal. Schauen wir mal ob das Connection herstellen

927
00:42:00,650 --> 00:42:02,650
und schließen wenigstens funktioniert.

928
00:42:02,650 --> 00:42:04,650
Close.

929
00:42:04,650 --> 00:42:06,650
Con-ID.

930
00:42:06,650 --> 00:42:08,650
So und wenn er jetzt nicht crasht.

931
00:42:08,650 --> 00:42:13,430
Bin ich happy.

932
00:42:13,430 --> 00:42:15,430
Er crasht nicht. Das sieht doch schon mal ganz gut aus.

933
00:42:15,430 --> 00:42:19,640
Okay.

934
00:42:19,640 --> 00:42:21,640
Nice.

935
00:42:21,640 --> 00:42:23,640
Und jetzt.

936
00:42:23,640 --> 00:42:25,640
Also wir können schon mal.

937
00:42:25,640 --> 00:42:27,640
Wir können schon mal eine Verbindung herstellen.

938
00:42:27,640 --> 00:42:29,640
Also halber Wirt Manager ist fertig programmiert.

939
00:42:29,640 --> 00:42:31,640
Wir können eine Verbindung zu dem Wirt herstellen.

940
00:42:31,640 --> 00:42:33,640
Das reicht.

941
00:42:33,640 --> 00:42:35,640
Rest kommt von alleine.

942
00:42:35,640 --> 00:42:37,640
Okay. Create

943
00:42:37,640 --> 00:42:39,640
Domain. Ne. Fuck.

944
00:42:39,640 --> 00:42:41,640
Aber ich bin ja auch

945
00:42:41,640 --> 00:42:43,640
falsch. Ich bin ja auch

946
00:42:43,640 --> 00:42:45,640
in Horus. Ich muss zu Domains. Create Domain.

947
00:42:45,640 --> 00:42:47,640
Create Domain.

948
00:42:47,640 --> 00:42:49,640
Fuck. Create.

949
00:42:49,640 --> 00:42:51,640
Wie erstellt man jetzt

950
00:42:51,640 --> 00:42:56,490
Vm?

951
00:42:56,490 --> 00:42:58,490
Wir Domain create Linux.

952
00:42:58,490 --> 00:43:05,220
Was?

953
00:43:05,220 --> 00:43:07,220
Was zum?

954
00:43:07,220 --> 00:43:09,220
Wir Domain create Linux.

955
00:43:09,220 --> 00:43:11,220
Wir Domain create

956
00:43:11,220 --> 00:43:13,220
XML. Wir Domain create

957
00:43:13,220 --> 00:43:22,620
with fi-

958
00:43:22,620 --> 00:43:24,620
Ach Domain create gibt es auch einfach.

959
00:43:24,620 --> 00:43:26,620
Okay. Gucken wir mal was das macht.

960
00:43:26,620 --> 00:43:28,620
Launch a defined Domain.

961
00:43:28,620 --> 00:43:30,620
Ach ne. Moment. Ich hab ja nix. Ich hab ja nix

962
00:43:30,620 --> 00:43:34,890
defined.

963
00:43:34,890 --> 00:43:36,890
Launch a defined Domain. If the call is successful

964
00:43:36,890 --> 00:43:38,890
it moves from the defined running domain. Ne.

965
00:43:38,890 --> 00:43:45,210
Ne. Ne. Ne. Ne.

966
00:43:45,210 --> 00:43:47,210
Domain create with

967
00:43:47,210 --> 00:43:53,720
XML.

968
00:43:53,720 --> 00:43:55,720
Wir brauchen

969
00:43:55,720 --> 00:43:57,720
Wir Domain create XML.

970
00:43:57,720 --> 00:43:59,720
Brauchen wir anscheinend.

971
00:43:59,720 --> 00:44:01,720
Guck mal.

972
00:44:01,720 --> 00:44:03,720
Launch a new guest domain

973
00:44:03,720 --> 00:44:05,720
based on an XML description.

974
00:44:07,720 --> 00:44:09,720
Die wollen uns quälen heute, oder?

975
00:44:09,720 --> 00:44:13,860
XML shit.

976
00:44:13,860 --> 00:44:20,950
Create

977
00:44:20,950 --> 00:44:22,950
XML flags.

978
00:44:22,950 --> 00:44:24,950
Was sind flags?

979
00:44:24,950 --> 00:44:26,950
Arrays or supported

980
00:44:26,950 --> 00:44:28,950
Wir Domain create flags.

981
00:44:28,950 --> 00:44:30,950
Wir Domain post,

982
00:44:30,950 --> 00:44:32,950
auto, bypass.

983
00:44:32,950 --> 00:44:34,950
Okay. Juckt mich nicht.

984
00:44:34,950 --> 00:44:36,950
Okay. Also.

985
00:44:36,950 --> 00:44:38,950
Wir Domain.

986
00:44:38,950 --> 00:44:40,950
Wir Domain create XML.

987
00:44:40,950 --> 00:44:45,290
Alles klar. Kopieren wir das mal.

988
00:44:45,290 --> 00:44:47,290
Das wird was.

989
00:44:47,290 --> 00:44:49,290
Ich bin echt gespannt ob ich in der Lage bin

990
00:44:49,290 --> 00:44:51,290
eine Vm zu erstellen über die

991
00:44:51,290 --> 00:44:53,290
CAP.

992
00:44:53,290 --> 00:44:55,290
So. Also.

993
00:44:55,290 --> 00:44:57,290
Domain pointer kommt zurück.

994
00:44:57,290 --> 00:44:58,670
Wunderbar, kann in Pointer bleiben.

995
00:44:59,190 --> 00:45:01,450
So, wir Connection Pointer, ist richtig.

996
00:45:02,050 --> 00:45:03,090
XML Description.

997
00:45:03,890 --> 00:45:04,530
String XML.

998
00:45:04,830 --> 00:45:08,070
Leute, wenn man das so macht, teilweise gibt es Memory Leaks.

999
00:45:08,370 --> 00:45:12,570
Das ist aber nicht schlimm, weil die Anwendung startet und stoppt sich eh wieder und wird alles aufgeräumt.

1000
00:45:12,810 --> 00:45:14,910
Scheiß drauf, ob es Memory Leaks gibt oder nicht.

1001
00:45:17,390 --> 00:45:19,730
Unsigned Int Flex.

1002
00:45:22,300 --> 00:45:22,700
Flex.

1003
00:45:22,940 --> 00:45:24,400
Okay, das setzen wir mal auf 0.

1004
00:45:24,480 --> 00:45:25,920
Ich will eigentlich keine Flex setzen.

1005
00:45:25,920 --> 00:45:33,000
Jetzt ist nur die Frage, wo kriegen wir mal ein gültiges XML für eine VM her?

1006
00:45:35,420 --> 00:45:36,180
Interop.

1007
00:45:36,620 --> 00:45:38,080
Create XML.

1008
00:45:39,460 --> 00:45:39,680
So.

1009
00:45:40,260 --> 00:45:44,500
Connection ID von meiner LibWirt Connection.

1010
00:45:48,050 --> 00:46:00,470
Wenn man was wie macht, gibt es Leaks, wenn man so Native Funktionen aufruft und Managed Datentypen übergibt.

1011
00:46:00,470 --> 00:46:03,250
In dem Fall in die Richtung geht es.

1012
00:46:04,130 --> 00:46:04,670
Aber das ist...

1013
00:46:04,750 --> 00:46:08,790
Das ist dann problematisch, sollte das die andere Seite irgendwie freigeben oder sowas.

1014
00:46:10,030 --> 00:46:13,470
Also es gibt manchmal Probleme, wenn man Managed Datentypen hin und her schiebt.

1015
00:46:14,290 --> 00:46:18,610
Und da muss man genau drauf achten, wer wie wann wo was freigeben muss.

1016
00:46:26,040 --> 00:46:28,560
LibWirt DOM XML Example.

1017
00:46:33,250 --> 00:46:35,150
Okay, das ist sehr kurz und knackig.

1018
00:46:50,420 --> 00:46:52,700
Das ist sehr kurz und knackig.

1019
00:46:55,150 --> 00:46:56,530
Das probieren wir jetzt mal aus.

1020
00:46:56,530 --> 00:46:57,750
Okay, also.

1021
00:46:59,050 --> 00:47:00,030
War XML.

1022
00:47:01,310 --> 00:47:04,930
Jetzt können wir hier das neue String-Literal-Syntax verwenden.

1023
00:47:06,130 --> 00:47:06,250
So.

1024
00:47:09,280 --> 00:47:09,720
Okay.

1025
00:47:11,060 --> 00:47:12,500
Übrigens, da müsst ihr drauf achten.

1026
00:47:12,760 --> 00:47:18,980
Das kann ich euch an der Stelle nochmal kurz erzählen, weil da macht man sich Probleme und sucht danach ewig Fehler.

1027
00:47:19,200 --> 00:47:22,880
Also, das erinnert vielleicht ein bisschen an Python hier an der Stelle.

1028
00:47:23,000 --> 00:47:28,140
Das geht allerdings auch seit .NET 7, glaube ich, erst.

1029
00:47:28,280 --> 00:47:29,700
Oder 6 oder 7, ich weiß nicht.

1030
00:47:29,700 --> 00:47:32,720
Seit einem der allerletzten, recent C-Sharp-Version.

1031
00:47:32,720 --> 00:47:36,280
Dass man Multi-Line-Strings so mit dreifachen Anführungszeichen machen kann.

1032
00:47:36,680 --> 00:47:38,700
Es gibt noch mehr Varianten, wie man das machen kann.

1033
00:47:38,820 --> 00:47:53,300
Aber wichtig ist, die schließenden Triple Quotes, die müssen auf der Höhe stehen, wo euer Text in der Datei anfangen soll.

1034
00:47:53,600 --> 00:47:57,300
Wenn ich das so habe, wenn ich das hier so habe, dann...

1035
00:47:59,680 --> 00:48:00,640
Moment, hier ist es mal neu.

1036
00:48:01,260 --> 00:48:04,520
Wenn ich das so habe, dann landet es mit einem Text.

1037
00:48:04,520 --> 00:48:05,920
Und dann ist es mit einem Tab in der Datei.

1038
00:48:06,260 --> 00:48:08,540
Und je nachdem ist das dann vielleicht nicht gültig.

1039
00:48:09,380 --> 00:48:11,860
Also, bei XML jetzt egal, aber das kann durchaus sein.

1040
00:48:12,180 --> 00:48:22,440
Das heißt, man muss immer darauf achten, wo man hier die klausenden Triple Quotes platziert.

1041
00:48:22,520 --> 00:48:24,000
Weil ihr seht es ja hier auch an dem Blauen.

1042
00:48:24,620 --> 00:48:27,660
Das ist quasi die Baseline, wo es dann am Ende...

1043
00:48:28,440 --> 00:48:30,120
Ja, mit Jammel wird es dann Fehler geben, genau.

1044
00:48:30,420 --> 00:48:33,800
Das ist so die Baseline, wie es am Ende dann auch wieder rauskommt.

1045
00:48:35,580 --> 00:48:36,620
Also, da muss man gucken.

1046
00:48:36,820 --> 00:48:40,380
Also, man macht instinktiv es vorne, aber es ist falsch.

1047
00:48:40,460 --> 00:48:42,780
Es muss dort sein, wo der Text aufhören soll.

1048
00:48:44,780 --> 00:48:47,720
Weil, wenn ich die weiter einrücke, dann will er nicht.

1049
00:48:50,260 --> 00:48:51,300
Und sagt, das geht nicht.

1050
00:48:52,420 --> 00:48:55,000
Also, man muss das wirklich hier an der Stelle machen.

1051
00:48:55,460 --> 00:48:59,900
Das haben die in Rider auch gut gemacht, dass man hier so eine blaue Linie bekommt.

1052
00:49:01,040 --> 00:49:05,820
Okay, also, wir müssen ein paar Sachen generieren, dass man die vor allem anlegen kann anscheinend.

1053
00:49:06,180 --> 00:49:07,960
Good, gleich, good, new.

1054
00:49:13,320 --> 00:49:13,680
New?

1055
00:49:15,760 --> 00:49:17,680
So, dann setzen wir das mal hier ein.

1056
00:49:22,050 --> 00:49:23,610
Memory, ja, wunderbar.

1057
00:49:24,510 --> 00:49:26,530
Reine CPU, wunderbar, wunderbar.

1058
00:49:26,710 --> 00:49:28,410
Local Time, wunderbar, alles gut.

1059
00:49:30,490 --> 00:49:34,730
Emulator, User Bin, QEMO, KVM, wunderbar.

1060
00:49:35,310 --> 00:49:39,670
Source Files, wahr, lib, lib wird, Images, Demo 2, Image.

1061
00:49:43,170 --> 00:49:44,890
Latest, Moment.

1062
00:49:45,650 --> 00:49:47,230
Debian Cloud, hier.

1063
00:49:47,230 --> 00:49:52,190
Wir müssen mal kurz noch ein Debian Cloud Image runterladen, um zu gucken, ob das dann auch funktioniert.

1064
00:49:54,690 --> 00:49:55,970
Generic Cloud.

1065
00:49:58,010 --> 00:49:59,050
Copy Link.

1066
00:49:59,950 --> 00:50:00,510
WGET.

1067
00:50:01,310 --> 00:50:01,710
Schön.

1068
00:50:03,930 --> 00:50:05,630
32 Bit? Ach so.

1069
00:50:09,400 --> 00:50:11,700
Ja, hm, was muss man da einstellen?

1070
00:50:12,160 --> 00:50:14,760
Ich mein, ich kann es mal so lassen, es ist ja nicht...

1071
00:50:16,080 --> 00:50:17,760
Es sollte ja nicht davon...

1072
00:50:17,760 --> 00:50:18,760
Es sollte ja nicht davon...

1073
00:50:18,760 --> 00:50:20,460
...kaputt gehen, oder?

1074
00:50:21,220 --> 00:50:27,370
Wir können es doch einfach mal raus...

1075
00:50:27,370 --> 00:50:31,940
Ne, komm, wir machen Arch...

1076
00:50:31,940 --> 00:50:33,760
Ja, keine Ahnung, wie das aussehen muss.

1077
00:50:36,820 --> 00:50:37,420
X...

1078
00:50:37,420 --> 00:50:40,520
...86, 64 oder so?

1079
00:50:41,780 --> 00:50:42,380
HVM?

1080
00:50:43,220 --> 00:50:43,940
Was...

1081
00:50:43,940 --> 00:50:46,500
Was ist HVM?

1082
00:50:49,130 --> 00:50:51,830
Wir sollten uns mal so ein XML-File von irgendwo kopieren.

1083
00:50:52,210 --> 00:50:54,110
Die MAC-Adresse schmeißen wir raus.

1084
00:50:54,110 --> 00:50:56,110
So, ich muss gucken, ob mein...

1085
00:50:57,390 --> 00:50:58,110
...Network...

1086
00:50:58,930 --> 00:51:01,810
Ah, Mist, das Netzwerk ist noch gar nicht da.

1087
00:51:01,870 --> 00:51:02,910
Aber das ist jetzt erstmal egal.

1088
00:51:03,650 --> 00:51:05,790
Keymap, Graphics, Output brauchen wir nicht.

1089
00:51:06,550 --> 00:51:07,790
Target Device, HDA.

1090
00:51:08,430 --> 00:51:09,970
Äh, File...

1091
00:51:09,970 --> 00:51:12,190
...ist...

1092
00:51:12,190 --> 00:51:15,630
Ich bin mir gar nicht sicher, ob man das absolut angeben muss, aber wahrscheinlich.

1093
00:51:16,570 --> 00:51:19,570
Ja, also File ist Debian Image.

1094
00:51:20,750 --> 00:51:22,770
Bin ich mal gespannt, ob das funktioniert.

1095
00:51:22,910 --> 00:51:23,430
Alter, lul.

1096
00:51:24,850 --> 00:51:26,090
Ich hab ja so meine...

1097
00:51:26,090 --> 00:51:27,490
...so meine Zweifel, ob...

1098
00:51:30,930 --> 00:51:31,330
Moment.

1099
00:51:31,650 --> 00:51:33,150
Muss ich auch an der Stelle...

1100
00:51:33,150 --> 00:51:33,850
...QEMU...

1101
00:51:33,850 --> 00:51:35,890
...QEMU System...

1102
00:51:35,890 --> 00:51:38,870
...AMD64, wo ist das denn?

1103
00:51:39,790 --> 00:51:40,470
Ne, das ist irgendwo.

1104
00:51:41,810 --> 00:51:43,870
Ne, System X86 heißt das, glaube ich.

1105
00:51:44,270 --> 00:51:44,970
Hier, X86.

1106
00:51:45,470 --> 00:51:49,570
Das muss ich auch eintragen, sonst kann das an der Stelle auch schon mal nicht funktionieren.

1107
00:51:51,570 --> 00:51:51,970
Ja.

1108
00:51:52,970 --> 00:51:53,910
Okay, nice.

1109
00:51:55,390 --> 00:51:56,390
Jetzt bin ich mal gespannt.

1110
00:51:56,390 --> 00:51:57,310
Demo 2.

1111
00:51:57,950 --> 00:52:00,710
Ja, Demo 2 ist perfekter Name für die HVM.

1112
00:52:01,650 --> 00:52:03,150
Alles klar.

1113
00:52:03,630 --> 00:52:06,350
Okay, dann probieren wir das mal aus, ob er die HVM jetzt erstellt.

1114
00:52:10,120 --> 00:52:10,560
Da...

1115
00:52:10,560 --> 00:52:13,740
Im Leben nicht, Alter, im Leben nicht.

1116
00:52:14,260 --> 00:52:14,700
XML.

1117
00:52:16,140 --> 00:52:16,900
Okay, gib ihm.

1118
00:52:17,080 --> 00:52:17,280
Run.

1119
00:52:22,370 --> 00:52:23,250
Network not found.

1120
00:52:23,450 --> 00:52:24,370
No network with machine...

1121
00:52:25,170 --> 00:52:26,370
...with matching name default.

1122
00:52:27,890 --> 00:52:28,090
Ja.

1123
00:52:30,130 --> 00:52:30,650
Toll.

1124
00:52:36,810 --> 00:52:37,950
Ähm, warum, warum nicht?

1125
00:52:41,720 --> 00:52:42,860
Wir lassen Network...

1126
00:52:42,860 --> 00:52:44,100
Aber das Netzwerk brauche ich ja spielen.

1127
00:52:44,100 --> 00:52:46,140
Wir lassen das Network einfach mal weg zum Ausprobieren.

1128
00:52:46,240 --> 00:52:46,740
Not let's run.

1129
00:52:46,740 --> 00:52:52,230
Die VM läuft.

1130
00:52:54,230 --> 00:52:55,230
Die, die geht einfach.

1131
00:52:57,210 --> 00:53:00,930
Okay, wir wissen nicht, ob sie geht, weil wir haben keine grafische Ausgabe, aber...

1132
00:53:00,930 --> 00:53:02,590
Moment mal, ich, ich delete das nochmal.

1133
00:53:04,050 --> 00:53:05,110
Ich delete das nochmal.

1134
00:53:05,450 --> 00:53:06,870
Wo war das jetzt mit dem VNC?

1135
00:53:10,670 --> 00:53:12,130
Wo war das jetzt mit dem VNC?

1136
00:53:12,170 --> 00:53:13,690
Ich hab doch irgendwo ein VNC gelöscht.

1137
00:53:13,970 --> 00:53:14,330
Graphics.

1138
00:53:14,830 --> 00:53:16,670
Hier, VNC kommt da unten nochmal rein.

1139
00:53:19,800 --> 00:53:20,840
Dass ich, dass ich auch was sehe.

1140
00:53:22,280 --> 00:53:22,640
Run.

1141
00:53:22,640 --> 00:53:22,720
Run.

1142
00:53:23,560 --> 00:53:23,960
Run.

1143
00:53:29,360 --> 00:53:30,140
No boot...

1144
00:53:30,140 --> 00:53:32,780
No bootable device?

1145
00:53:36,840 --> 00:53:38,800
Okay, die VM erstellt das schon mal und jetzt?

1146
00:53:42,560 --> 00:53:43,420
IDE-Disk.

1147
00:53:45,220 --> 00:53:47,320
Äh, nee, das wird so wahrscheinlich nix.

1148
00:53:48,600 --> 00:53:49,460
Okay, delete.

1149
00:53:49,840 --> 00:53:50,420
Ihr habt recht.

1150
00:53:50,640 --> 00:53:52,820
Ich, ich, ich kopiere mir hier eine raus.

1151
00:53:55,780 --> 00:53:56,140
Was hier?

1152
00:53:56,280 --> 00:53:56,520
Zack.

1153
00:53:57,960 --> 00:54:00,280
Wird, wird install.

1154
00:54:01,720 --> 00:54:02,240
Example.

1155
00:54:07,100 --> 00:54:08,140
Wird install.

1156
00:54:08,140 --> 00:54:09,900
Okay, gut, hab ich drauf.

1157
00:54:09,900 --> 00:54:21,260
Ähm, also, ich hab KVM-Install-Github, ja, ich verwende aktuell bei mir lokal so dieses

1158
00:54:21,260 --> 00:54:27,120
Bash-Script vom Geo-Torres, um mir ab und zu lokal Test-VMs anzulegen.

1159
00:54:27,200 --> 00:54:33,680
Das geht sehr zackig und sowas könnte man ja auch mal in C-Sharp bauen.

1160
00:54:35,420 --> 00:54:39,060
Allerdings kann man uns da abgucken, wie wird, wie wird install funktioniert?

1161
00:54:40,060 --> 00:54:40,720
Nämlich so.

1162
00:54:40,720 --> 00:54:40,800
So.

1163
00:54:43,290 --> 00:54:43,730
Also.

1164
00:54:43,930 --> 00:54:44,610
Wird install.

1165
00:54:45,830 --> 00:54:47,950
Graphics-Options brauchen wir nicht.

1166
00:54:53,150 --> 00:54:54,750
Graphics-Options brauchen wir nicht.

1167
00:54:56,030 --> 00:54:57,210
OS-Variant.

1168
00:54:58,210 --> 00:55:00,850
Hm, bin ich mir unschlüssig, was da rein muss.

1169
00:55:07,280 --> 00:55:08,780
Äh, Network-Options.

1170
00:55:10,960 --> 00:55:12,120
Disk-Options.

1171
00:55:14,420 --> 00:55:17,840
Äh, ey, da kann man uns gar nicht mehr nix so zusammen reimen gerade.

1172
00:55:22,440 --> 00:55:22,860
Shit.

1173
00:55:23,760 --> 00:55:25,500
Okay, wir müssen das, wir müssen das anders machen.

1174
00:55:25,500 --> 00:55:26,840
Wir müssen hier eine VM erstellen.

1175
00:55:26,940 --> 00:55:27,140
Test.

1176
00:55:27,340 --> 00:55:29,460
Also, Create-New-Virtual-Machine.

1177
00:55:32,000 --> 00:55:33,980
Manual-Manual-Install.

1178
00:55:37,180 --> 00:55:38,060
X8664-VM.

1179
00:55:39,320 --> 00:55:40,000
Äh, Linux.

1180
00:55:41,440 --> 00:55:42,940
2020 soll da Kram.

1181
00:55:43,060 --> 00:55:45,780
Oder Linux, ja, Generic-Linux, wunderbar.

1182
00:55:46,440 --> 00:55:48,600
Ja, meinetwegen zwei CPUs.

1183
00:55:49,000 --> 00:55:51,120
Select-Create-Custom-Storage.

1184
00:55:51,320 --> 00:55:51,480
So.

1185
00:55:52,460 --> 00:55:54,700
Und da wollen wir jetzt an der Stelle haben.

1186
00:55:57,710 --> 00:55:59,070
Wo hab ich das runtergeladen?

1187
00:55:59,070 --> 00:55:59,910
Repos.

1188
00:56:00,170 --> 00:56:00,190
Repos.

1189
00:56:00,190 --> 00:56:00,230
Repos.

1190
00:56:00,230 --> 00:56:00,330
Repos.

1191
00:56:00,330 --> 00:56:00,390
Repos.

1192
00:56:00,390 --> 00:56:00,410
Repos.

1193
00:56:00,410 --> 00:56:00,430
Repos.

1194
00:56:00,430 --> 00:56:06,780
Repos.

1195
00:56:06,780 --> 00:56:06,820
Repos.

1196
00:56:06,820 --> 00:56:06,840
Repos.

1197
00:56:06,840 --> 00:56:06,900
Repos.

1198
00:56:06,900 --> 00:56:07,340
Repos.

1199
00:56:07,360 --> 00:56:09,730
Repos.

1200
00:56:09,730 --> 00:56:09,790
Repos.

1201
00:56:09,790 --> 00:56:09,810
Repos.

1202
00:56:09,810 --> 00:56:09,850
Repos.

1203
00:56:09,850 --> 00:56:11,110
Genere Cloud-Image.

1204
00:56:14,340 --> 00:56:15,400
Network-Section.

1205
00:56:15,540 --> 00:56:16,160
User-Mode.

1206
00:56:16,320 --> 00:56:16,600
Bridge.

1207
00:56:16,700 --> 00:56:17,700
Bridge-Device.

1208
00:56:21,140 --> 00:56:21,840
Was haben wir denn da?

1209
00:56:26,150 --> 00:56:28,810
Hab ich, hab ich ein VIA, VIA-0 oder sowas?

1210
00:56:32,780 --> 00:56:33,620
VIA-BR.

1211
00:56:33,980 --> 00:56:34,540
Sudo.

1212
00:56:36,080 --> 00:56:38,820
Legt er nicht standardmäßig ein Netzwerk-Interface an?

1213
00:56:41,970 --> 00:56:42,570
Was ist doch hier?

1214
00:56:42,670 --> 00:56:43,190
Default.

1215
00:56:43,470 --> 00:56:44,450
Warum ist das inactive?

1216
00:56:45,130 --> 00:56:45,770
Was ist da los?

1217
00:56:47,390 --> 00:56:47,550
What?

1218
00:56:48,850 --> 00:56:50,870
Unable to find DNS-Mask.

1219
00:56:51,970 --> 00:56:53,110
Was der alles haben will.

1220
00:56:53,230 --> 00:56:53,330
Was ist das?

1221
00:56:53,330 --> 00:56:53,390
Was ist das?

1222
00:56:53,390 --> 00:56:53,530
Was ist das?

1223
00:56:53,530 --> 00:56:53,870
Was ist das denn?

1224
00:56:53,990 --> 00:56:54,690
DNS-Mask.

1225
00:56:54,790 --> 00:56:55,070
Gib ihm.

1226
00:56:55,430 --> 00:56:55,670
Nice.

1227
00:56:55,750 --> 00:56:56,250
DNS-Mask.

1228
00:56:56,370 --> 00:56:56,670
Auch drauf.

1229
00:56:58,290 --> 00:56:59,290
On-Boot-Active.

1230
00:57:00,070 --> 00:57:00,510
Apply.

1231
00:57:01,350 --> 00:57:04,110
So, jetzt sollten wir, jetzt sollten wir einen Virtual-Interface.

1232
00:57:04,230 --> 00:57:06,410
Okay, VIA-BR-0 wollen wir haben.

1233
00:57:07,650 --> 00:57:08,330
VIA-BR.

1234
00:57:08,510 --> 00:57:10,470
Wobei, oder, oder einfach Default.

1235
00:57:13,540 --> 00:57:15,380
Jetzt bin ich mal gespannt, ob das bootet, Alter.

1236
00:57:18,220 --> 00:57:18,580
Okay.

1237
00:57:19,020 --> 00:57:19,320
Bam.

1238
00:57:20,680 --> 00:57:21,880
Debian bootet schon mal.

1239
00:57:22,080 --> 00:57:22,520
Poggers.

1240
00:57:24,120 --> 00:57:26,500
Aber Debian, ich hab keinen User und sonst was gesetzt.

1241
00:57:26,500 --> 00:57:27,280
Das muss ich über Cloud.

1242
00:57:27,280 --> 00:57:28,220
In den später machen.

1243
00:57:29,480 --> 00:57:30,660
Aber Debian bootet.

1244
00:57:30,960 --> 00:57:32,080
Ich bin, ich bin begeistert.

1245
00:57:32,160 --> 00:57:34,500
Das heißt, hier können wir uns gleich die VM schon mal crappen.

1246
00:57:35,200 --> 00:57:36,900
Also das XML von der VM crappen.

1247
00:57:39,360 --> 00:57:41,380
Und mal gucken, ob sich das nach IP zählt.

1248
00:57:41,940 --> 00:57:43,220
Das ist eine Nested-VM, ja?

1249
00:57:43,880 --> 00:57:45,020
Das ist eine Nested-VM.

1250
00:57:45,900 --> 00:57:48,460
Wir testen auch gleich mal, wie viel Nested-VM ich abkann.

1251
00:57:49,400 --> 00:57:50,160
Wie viel da geht.

1252
00:57:50,340 --> 00:57:52,840
Okay, das sieht, das sieht, sieht doch eigentlich alles ganz gut aus.

1253
00:57:53,440 --> 00:57:53,840
XML.

1254
00:57:55,120 --> 00:57:55,560
Boah.

1255
00:57:55,820 --> 00:57:57,140
Alter, was hat der hier denn alles?

1256
00:57:57,140 --> 00:58:00,140
Zieht es sich, zieht es sich in der IP?

1257
00:58:03,350 --> 00:58:04,430
Äh, sieht nicht so aus.

1258
00:58:06,290 --> 00:58:07,370
Sollte das nicht gehen.

1259
00:58:07,490 --> 00:58:12,110
Naja, weil das sehr, äh, ja, wackelig aussieht alles.

1260
00:58:13,330 --> 00:58:14,450
Ey, da zieht sich so, so kein.

1261
00:58:14,670 --> 00:58:18,410
Wahrscheinlich habe ich keine Rechte auf die, auf das Interface.

1262
00:58:25,100 --> 00:58:27,900
Die meisten Prozessoren schützen das nicht mit Nested-Virtualisierung.

1263
00:58:28,260 --> 00:58:30,520
Doch, das kann so gut wie jede moderne CPU.

1264
00:58:31,260 --> 00:58:32,080
Nested-Virtualisierung.

1265
00:58:32,080 --> 00:58:33,900
Du musst es in den VM-Settings einschalten.

1266
00:58:33,900 --> 00:58:35,700
Aber Nested-Virtualisierung geht einem schon lange.

1267
00:58:38,350 --> 00:58:39,750
Was macht eine Nested-VM?

1268
00:58:39,850 --> 00:58:43,950
Die macht das gleich wie eine normale VM, nur dass sie selbst wiederum in einer VM läuft.

1269
00:58:44,050 --> 00:58:49,030
Also guck, ich habe Linux in einer VM laufen und in meiner VM habe ich ein weiteres Linux laufen.

1270
00:58:50,250 --> 00:58:51,270
Okay, das mit...

1271
00:58:54,890 --> 00:58:56,530
Brrr, CTL, Show.

1272
00:58:58,820 --> 00:59:01,520
Okay, da sind schlicht und klar keine Interfaces dran.

1273
00:59:01,940 --> 00:59:03,160
Wahrscheinlich habe ich keine Rechte.

1274
00:59:03,860 --> 00:59:06,120
Wahrscheinlich, ich gehe davon aus, dass ich keine Rechte habe.

1275
00:59:07,560 --> 00:59:09,280
Kann ich, kann ich vielleicht...

1276
00:59:09,280 --> 00:59:09,540
Wir...

1277
00:59:09,540 --> 00:59:11,500
Brrr, Null-Netzwerk-Interface machen.

1278
00:59:13,120 --> 00:59:13,560
Okay.

1279
00:59:16,400 --> 00:59:16,920
Testen wir mal.

1280
00:59:17,040 --> 00:59:17,560
Shutdown.

1281
00:59:18,580 --> 00:59:19,620
Force-Off, ja, ja.

1282
00:59:21,480 --> 00:59:21,880
Weiter.

1283
00:59:27,740 --> 00:59:29,400
Put a VM in my VM, genau.

1284
00:59:29,560 --> 00:59:32,260
Natürlich, kein VM while I am VMing.

1285
00:59:33,380 --> 00:59:34,880
Party, dankeschön für den Sub.

1286
00:59:36,220 --> 00:59:38,520
Was ist der Vorteil von einer VM in einer VM?

1287
00:59:39,000 --> 00:59:40,420
Naja, für die VM selber nix.

1288
00:59:40,920 --> 00:59:44,460
Du kannst es allerdings von dem System managen, was du in der VM betreibst.

1289
00:59:44,940 --> 00:59:46,240
Was ganz praktisch ist.

1290
00:59:46,260 --> 00:59:49,800
So, jetzt bin ich mal gespannt, ob der sich jetzt hier was zieht.

1291
00:59:50,160 --> 00:59:53,040
Aha, schon hängt ein Interface an meiner Bridge dran.

1292
00:59:53,540 --> 00:59:54,400
Interessant, interessant.

1293
00:59:55,780 --> 00:59:57,060
Jetzt kriegt er auch eine IP.

1294
00:59:57,360 --> 00:59:57,580
Pog.

1295
00:59:58,540 --> 00:59:59,920
Okay, das funktioniert schon mal.

1296
00:59:59,980 --> 01:00:00,740
Das finde ich nice.

1297
01:00:00,980 --> 01:00:01,180
Ping.

1298
01:00:01,620 --> 01:00:02,860
Ping tut die VM auch.

1299
01:00:03,420 --> 01:00:06,060
Ich habe kein Login, aber das XML können wir uns crappen.

1300
01:00:06,600 --> 01:00:08,340
Das ist Pogas, das XML, das brauchen wir.

1301
01:00:10,440 --> 01:00:11,480
So, delete.

1302
01:00:13,480 --> 01:00:13,920
Delete.

1303
01:00:14,780 --> 01:00:16,240
Alles klar, das XML nehmen wir.

1304
01:00:16,240 --> 01:00:17,580
Jetzt, perfektes XML.

1305
01:00:19,120 --> 01:00:20,120
Nice, so XML.

1306
01:00:21,100 --> 01:00:22,060
Alter, ist das viel.

1307
01:00:22,400 --> 01:00:23,440
Alter, ist das viel.

1308
01:00:23,720 --> 01:00:24,460
What the fuck.

1309
01:00:25,860 --> 01:00:27,700
MonkaS, da muss die Hälfte raus von.

1310
01:00:29,760 --> 01:00:31,360
Da muss die Hälfte raus von.

1311
01:00:31,400 --> 01:00:32,820
WCF, das hört ja gar nicht mehr auf.

1312
01:00:34,100 --> 01:00:34,920
Okay, was haben wir hier?

1313
01:00:35,920 --> 01:00:37,540
Generic Linux, hier, das.

1314
01:00:37,720 --> 01:00:40,540
Da muss wieder meine ID rein.

1315
01:00:41,460 --> 01:00:41,800
Great.

1316
01:00:44,020 --> 01:00:44,500
Memory.

1317
01:00:44,500 --> 01:00:44,640
Memory.

1318
01:00:46,240 --> 01:00:46,800
Nee.

1319
01:00:50,640 --> 01:00:53,200
Bytes to Gigabytes dürften genau.

1320
01:00:53,600 --> 01:00:54,180
Ach nee, nee.

1321
01:00:54,740 --> 01:00:55,140
Gibi?

1322
01:00:57,930 --> 01:00:59,010
Nee, Gibi?

1323
01:01:09,120 --> 01:01:09,480
Äh.

1324
01:01:10,580 --> 01:01:10,880
Das ist ein.

1325
01:01:12,260 --> 01:01:13,740
Peter Byte?

1326
01:01:14,080 --> 01:01:14,580
Was?

1327
01:01:17,600 --> 01:01:18,020
Aber warum?

1328
01:01:19,160 --> 01:01:19,540
Was?

1329
01:01:20,180 --> 01:01:20,760
Nein, nein, nein.

1330
01:01:22,400 --> 01:01:23,160
Ja, ja.

1331
01:01:24,600 --> 01:01:26,280
To Megabyte.

1332
01:01:28,320 --> 01:01:29,520
PMB?

1333
01:01:29,520 --> 01:01:29,720
Nee.

1334
01:01:30,720 --> 01:01:31,220
Ach, Moment.

1335
01:01:31,280 --> 01:01:32,720
Nein, das ist ein Unit Kilobyte.

1336
01:01:33,080 --> 01:01:33,860
Ah, nee, nee, nee, nee, nee.

1337
01:01:33,940 --> 01:01:35,040
Okay, das sind, das sind, das sind.

1338
01:01:35,940 --> 01:01:36,300
Kilo.

1339
01:01:36,840 --> 01:01:39,480
Kibi, Kibi Byte zu, zu Megabyte.

1340
01:01:39,640 --> 01:01:40,740
Also, das zu Gibi.

1341
01:01:41,060 --> 01:01:41,640
Heißt die Gibi?

1342
01:01:43,060 --> 01:01:43,460
Gibi?

1343
01:01:44,600 --> 01:01:45,780
Ja, okay.

1344
01:01:46,500 --> 01:01:47,980
Also, 4 Gigabyte.

1345
01:01:48,120 --> 01:01:48,740
Sehr, sehr gut.

1346
01:01:49,260 --> 01:01:51,720
So, das heißt, wenn ich einfach nur, sagen wir mal.

1347
01:01:54,610 --> 01:01:58,770
Wenn ich, wenn ich das Ganze nur in 500, das reicht ja.

1348
01:01:58,890 --> 01:01:59,390
Als erstes Mal.

1349
01:01:59,450 --> 01:02:00,210
Man muss ja jetzt übertreiben.

1350
01:02:00,770 --> 01:02:01,490
Okay, wunderbar.

1351
01:02:03,170 --> 01:02:07,490
Man kann die Unit anpassen, wahrscheinlich schon, aber so ist, ist okay.

1352
01:02:10,740 --> 01:02:12,820
Was Memory, Current Memory?

1353
01:02:14,320 --> 01:02:15,760
Ach so, naja, das interessiert mich nicht.

1354
01:02:16,440 --> 01:02:29,100
Static, V, was, V, Out CPU, Placement, Static, 1, reicht.

1355
01:02:33,190 --> 01:02:41,100
Boot Device, HD, das klingt, sieht doch, sieht doch ganz gut aus.

1356
01:02:41,420 --> 01:02:44,360
Features, ja, wunderbar, genau.

1357
01:02:44,560 --> 01:02:54,340
GPU, was, CPU Mode, Host Model, was, wie, ne, Host, was, Host, Pass to Check None, My Creatable On.

1358
01:02:58,340 --> 01:02:59,280
Kein Schimmer.

1359
01:02:59,780 --> 01:03:00,280
Okay, gut.

1360
01:03:00,800 --> 01:03:03,040
Clock, yep, yep, Clock.

1361
01:03:03,940 --> 01:03:09,180
Power of Destroy, PM, Devices, okay, jetzt, jetzt, jetzt interessant, Devices.

1362
01:03:10,900 --> 01:03:11,460
Emulator.

1363
01:03:13,780 --> 01:03:14,380
Disk.

1364
01:03:15,480 --> 01:03:15,920
Okay.

1365
01:03:18,720 --> 01:03:39,860
Hier ist mein Image drin, Controller Type, USB, ne, das, würde ich sagen, brauchen wir, wobei, scheiß drauf, ich pass da einfach nix, ich pass, ich pass einfach nix dran an, ist doch, ist doch egal, ich, ich lass es einfach, komm, alles gut so, wir, wir lassen es einfach.

1366
01:03:40,500 --> 01:03:47,880
Das Einzige, was ich ändern muss, ist die MAC-Adresse von, die schmeißen wir einfach raus, in der Hoffnung, er generiert da eine neue.

1367
01:03:49,640 --> 01:03:51,180
Was da alles drin ist, man.

1368
01:03:51,760 --> 01:03:54,850
Ich lass es einfach so.

1369
01:03:56,770 --> 01:03:58,550
Ich, ich lass es einfach so.

1370
01:04:02,560 --> 01:04:04,700
Okay, und jetzt kriegen wir ne VM, Run.

1371
01:04:08,070 --> 01:04:08,470
Zack.

1372
01:04:09,430 --> 01:04:10,010
Da ist ne VM.

1373
01:04:11,050 --> 01:04:12,630
Und warum heißt das Linux 2020?

1374
01:04:13,910 --> 01:04:16,310
Weil, ah, weil ich den Namen nicht geändert hab.

1375
01:04:17,190 --> 01:04:23,590
Der Name muss ja, keine Ahnung, VM Name gleich Test VM.

1376
01:04:24,670 --> 01:04:25,150
Irgendwie so.

1377
01:04:26,150 --> 01:04:26,470
So.

1378
01:04:26,470 --> 01:04:26,550
So.

1379
01:04:29,860 --> 01:04:30,940
Das scheint zu funktionieren.

1380
01:04:30,980 --> 01:04:34,060
Ich bin, ich bin begeistert.

1381
01:04:39,020 --> 01:04:40,420
Und wenn ich das jetzt erstelle?

1382
01:04:42,340 --> 01:04:43,740
Dann heißt es auch Test VM.

1383
01:04:44,380 --> 01:04:47,100
Das ist ja extrem, extremly nice.

1384
01:04:52,740 --> 01:04:54,180
Ne, ne, ne, so einfach ist das nicht.

1385
01:04:54,240 --> 01:04:57,100
Wir können uns aber mal die, die, die Publish Size zwischendurch angucken.

1386
01:04:59,680 --> 01:05:03,280
So, so einfach machen wir das der ganzen Sache ja hier noch nicht, ja.

1387
01:05:04,220 --> 01:05:07,340
Weil ich kann mich ja da beispielsweise per Netzwerk gar nicht drauf einloggen.

1388
01:05:07,840 --> 01:05:08,220
Guckt mal.

1389
01:05:08,780 --> 01:05:10,260
Das Ding zieht sich zwar an der IP, aber das Ding zieht sich zwar an der IP, aber das Ding zieht sich zwar an der IP, aber das Ding zieht sich zwar an der IP, aber das Ding zieht sich zwar an der IP, aber das Ding zieht sich zwar an der IP.

1390
01:05:10,740 --> 01:05:16,420
Aber ich wette mit euch, SSH, SSH Login ist nicht möglich.

1391
01:05:16,780 --> 01:05:17,540
Ne, ne, ne, ne.

1392
01:05:17,540 --> 01:05:20,860
Da brauchen wir jetzt noch einen Cloud Init File, was wir rein, ranhängen oder so.

1393
01:05:22,780 --> 01:05:24,500
So, aber löschen wir erstmal die VM.

1394
01:05:27,380 --> 01:05:27,540
Ja.

1395
01:05:28,500 --> 01:05:28,940
Exzellent.

1396
01:05:30,780 --> 01:05:32,780
Und mal gucken, wie groß das Ganze jetzt ist.

1397
01:05:33,740 --> 01:05:34,460
Publish.

1398
01:05:34,660 --> 01:05:36,140
Das dürfte noch nicht sonderlich groß sein.

1399
01:05:36,140 --> 01:05:38,500
Wir haben ja keine zusätzlichen Libraries drinne und sonst was.

1400
01:05:42,470 --> 01:05:43,110
Ja, aber wenn man das jetzt.

1401
01:05:44,110 --> 01:05:44,350
Was?

1402
01:05:44,390 --> 01:05:44,790
Sag mal.

1403
01:05:45,150 --> 01:05:49,990
Was genau geht mit meinem Terminal da ab?

1404
01:05:57,290 --> 01:05:59,050
Immer noch 1,8 MB groß.

1405
01:05:59,970 --> 01:06:01,010
Ja, das ist doch nicht schlecht.

1406
01:06:02,090 --> 01:06:02,690
Das ist Rider.

1407
01:06:02,850 --> 01:06:03,390
Ja, richtig.

1408
01:06:08,760 --> 01:06:09,620
1,8 MB.

1409
01:06:10,220 --> 01:06:13,620
Ja, wir haben ja auch noch nichts ernstzunehmendes gemacht.

1410
01:06:14,500 --> 01:06:18,580
Boah, ist das ein abartig fettes, großes XML, Mann.

1411
01:06:21,060 --> 01:06:21,540
So.

1412
01:06:25,440 --> 01:06:27,500
War das Hello World nicht 1,9?

1413
01:06:28,240 --> 01:06:29,080
Gute Frage.

1414
01:06:29,800 --> 01:06:30,480
Weiß ich nicht mehr.

1415
01:06:31,560 --> 01:06:32,360
Kann schon sein.

1416
01:06:36,210 --> 01:06:41,010
So, also wir haben ja mega hässliches XML, Interop mit C.

1417
01:06:41,330 --> 01:06:42,730
Die Datei ist immer noch klein.

1418
01:06:42,730 --> 01:06:43,770
Das ist schon mal nice.

1419
01:06:44,210 --> 01:06:46,250
Jetzt müssen wir noch mal ein paar andere Sachen ausprobieren.

1420
01:06:46,250 --> 01:06:51,650
Wir machen jetzt noch mal ein paar Libraries dazu, damit man einfach mal sehen, ob, wie schnell das größer wird.

1421
01:06:51,890 --> 01:06:54,210
Wir machen mal ein bisschen farbige Konsolen Ausgabe.

1422
01:06:55,850 --> 01:06:59,370
Weil wer will keine farbige Konsolen Ausgabe beim VM erstellen?

1423
01:07:02,720 --> 01:07:02,960
So.

1424
01:07:03,680 --> 01:07:05,360
Markup.

1425
01:07:07,200 --> 01:07:09,760
Ah, wir müssen noch warten, ob das Netzwerk...

1426
01:07:09,760 --> 01:07:15,260
Wir müssen warten, wenn die VM richtig hochgefahren ist und das Netzwerk ready ist.

1427
01:07:15,940 --> 01:07:17,300
Ja, das müssen wir natürlich noch machen.

1428
01:07:18,600 --> 01:07:21,700
Markup, Interpolated, was auch immer.

1429
01:07:22,480 --> 01:07:23,000
Markup.

1430
01:07:24,920 --> 01:07:25,480
Markuplein.

1431
01:07:27,200 --> 01:07:27,340
So.

1432
01:07:28,040 --> 01:07:28,480
In...

1433
01:07:28,480 --> 01:07:29,840
In...

1434
01:07:29,840 --> 01:07:30,640
In...

1435
01:07:30,640 --> 01:07:31,720
Gelb.

1436
01:07:31,720 --> 01:07:33,720
Starting-VM.

1437
01:07:33,720 --> 01:07:34,720
Vm-Name.

1438
01:07:34,720 --> 01:07:38,100
So, jetzt kriegen wir das in Gelb.

1439
01:07:38,100 --> 01:07:41,300
Richtig advanced aus, langsam.

1440
01:07:41,300 --> 01:07:42,300
So, jetzt ist das Binary garantiert viel fetter.

1441
01:07:42,300 --> 01:07:45,830
Könnte ich wetten.

1442
01:07:45,830 --> 01:07:46,830
Weil jetzt ist noch Spectre-Console dabei.

1443
01:07:46,830 --> 01:07:47,830
Das ist eine recht, recht fette Library.

1444
01:07:47,830 --> 01:07:48,830
Bild.

1445
01:07:48,830 --> 01:07:49,830
Hä?

1446
01:07:49,830 --> 01:07:50,830
Schon 3,8 MB groß.

1447
01:07:50,830 --> 01:07:51,830
Schon 3,8 MB groß.

1448
01:07:51,830 --> 01:07:52,830
Ja.

1449
01:07:52,830 --> 01:07:53,830
Ja.

1450
01:07:53,830 --> 01:07:54,830
Ja.

1451
01:07:54,830 --> 01:07:55,830
Ja.

1452
01:07:55,830 --> 01:07:56,830
Ja.

1453
01:07:56,830 --> 01:07:57,830
Ja.

1454
01:07:57,830 --> 01:07:58,830
Ja.

1455
01:07:58,830 --> 01:07:59,830
Ja.

1456
01:07:59,830 --> 01:08:00,830
Ja.

1457
01:08:00,830 --> 01:08:01,830
Ja.

1458
01:08:01,830 --> 01:08:02,830
Ja.

1459
01:08:02,830 --> 01:08:03,830
Ja.

1460
01:08:03,830 --> 01:08:04,830
Ja.

1461
01:08:04,830 --> 01:08:05,830
Ja.

1462
01:08:05,830 --> 01:08:06,830
Ja.

1463
01:08:06,830 --> 01:08:07,830
Ja.

1464
01:08:07,830 --> 01:08:08,830
Ja.

1465
01:08:08,830 --> 01:08:09,830
Ja.

1466
01:08:09,830 --> 01:08:10,830
Genau.

1467
01:08:10,830 --> 01:08:11,830
3,8 MB groß.

1468
01:08:11,830 --> 01:08:12,830
Es wächst.

1469
01:08:12,830 --> 01:08:13,830
Aber es ist immer noch komplett im Rahmen...

1470
01:08:13,830 --> 01:08:14,830
Ich mein...

1471
01:08:14,830 --> 01:08:15,830
Was sind...

1472
01:08:15,830 --> 01:08:16,830
Was sind 3,8 heutzutage?

1473
01:08:16,830 --> 01:08:17,830
Easy.

1474
01:08:17,830 --> 01:08:18,830
Ist doch kein Problem, oder?

1475
01:08:18,830 --> 01:08:19,830
Ich mein, also...

1476
01:08:19,830 --> 01:08:21,830
Ne Go-Anwendung ist jetzt auch nicht soo viel kleiner.

1477
01:08:21,830 --> 01:08:22,830
Ich weiß nicht.

1478
01:08:22,830 --> 01:08:24,830
Habt ihr mal den Plan von euch?

1479
01:08:24,830 --> 01:08:27,070
Wie groß ist eine Hello World Go-Anwendung?

1480
01:08:29,530 --> 01:08:30,530
Manchmal-.

1481
01:08:30,530 --> 01:08:31,530
Wahrscheinlich auch ungefähr in dem...

1482
01:08:32,530 --> 01:08:33,530
...Kram...

1483
01:08:33,530 --> 01:08:36,530
...Irgendwie 2 MB oder sowas, ja.

1484
01:08:36,530 --> 01:08:37,530
1,2 MB...

1485
01:08:37,530 --> 01:08:48,900
das sind log files größer ja das stimmt so wie kriegen wir denn jetzt raus ob die vm eine

1486
01:08:48,900 --> 01:09:07,930
gültige ip hat da gibt es doch bestimmt irgend irgendwelche c functions wieder so suchen wir

1487
01:09:07,930 --> 01:09:23,180
einfach mal hier ip address ok wir domain ip address wie du mein ip address das was ist das

1488
01:09:23,180 --> 01:09:34,340
pc connect als weil ja wenn schon mal das hier mit was haben wir denn hier wir domain interface

1489
01:09:34,340 --> 01:09:41,820
addresses okay das ist das ist ein pointer zur vm das ist ein was ist das denn

1490
01:09:41,820 --> 01:09:52,000
ein array pointer auf dem array herr sowas in der richtung an sein source flex oh jetzt wird

1491
01:09:52,000 --> 01:10:03,340
es eklig jetzt wird es eklig ok auf geht's wie kriegen wir hier die wie kriegen wir jetzt hier

1492
01:10:03,340 --> 01:10:10,520
die ip von der vm raus also das ganze ding als schon mal wir domain interface address

1493
01:10:10,520 --> 01:10:13,500
ob wir es lieb wie soll es so anders heißen dann

1494
01:10:13,900 --> 01:10:20,380
haben wir ein in pointer und das ist halt die vm die domain heißt das bei

1495
01:10:20,380 --> 01:10:26,420
denen immer so dann brauchen wir ein vier domain interface pointer auf

1496
01:10:26,420 --> 01:10:34,660
pointer auf pointer und mein ist das ist das ein triple pointer oder was ein ein

1497
01:10:34,660 --> 01:10:48,680
pointer zu einem pointer der auf den potter will ich nicht aus für wenn schon

1498
01:10:48,680 --> 01:10:57,940
muss das über die api gehen welche klippe und manager benutzt du das ist

1499
01:10:57,940 --> 01:11:03,520
green clip mit rufi integrationen ok wir machen wir machen wir die

1500
01:11:03,520 --> 01:11:10,020
unstrittigen teile an sein int also wir brauchen hier irgendwie so ein schritt

1501
01:11:10,020 --> 01:11:14,260
wo ich auch keine ahnung wie man das ganze abbilden aber zeilen umbruch

1502
01:11:14,260 --> 01:11:24,780
zeilen umbruch zeilen umbruch und dann brauchen wir sonst und flex flex

1503
01:11:24,780 --> 01:11:25,000
laufenden

1504
01:11:25,000 --> 01:11:35,400
lassen wir auch auf null ok wie kriegen wir diesen krempel dahin interfaces

1505
01:11:35,400 --> 01:11:46,100
wir domain interface pointer wir domain interface das ist das ist wirklich ein

1506
01:11:46,100 --> 01:11:50,500
triple pointer ein pointer auf den pointer der auf den point als acht du

1507
01:11:50,500 --> 01:11:59,430
große scheiße man ok jetzt haben wir das das truck ok dann brauchen wir uns truck

1508
01:11:59,430 --> 01:12:00,830
truck

1509
01:12:00,830 --> 01:12:09,270
ich ahne schlimmes public an safe truck so keine charakter wir wollen das als

1510
01:12:09,270 --> 01:12:12,270
beide haben

1511
01:12:12,630 --> 01:12:22,780
ein an public public moment ich muss das kann man weg machen so also hardware

1512
01:12:22,780 --> 01:12:29,020
address nächste ist hat wird das wahrscheinlich die mac oder sowas in der

1513
01:12:29,020 --> 01:12:31,340
richtung

1514
01:12:31,380 --> 01:12:48,230
interfaces sein sind addresses ich ahne schlimmes und dann haben wir

1515
01:12:48,230 --> 01:12:50,750
als letztes einen weiteren point of point

1516
01:12:50,750 --> 01:12:52,690
trocken

1517
01:12:52,690 --> 01:12:55,790
26

1518
01:12:55,790 --> 01:12:57,370
ok damit Agriculture

1519
01:12:57,370 --> 01:13:03,370
setzt uns erstmal nicht weiter auseinander gucken ob bis dahin

1520
01:13:03,370 --> 01:13:05,030
funktioniert

1521
01:13:05,030 --> 01:13:06,230
Ebola

1522
01:13:06,230 --> 01:13:07,290
ja sage man network.

1523
01:13:07,290 --> 01:13:07,790
ーshore house int legion

1524
01:13:07,790 --> 01:13:08,190
ちょっと want to talk again log ao health information

1525
01:13:08,190 --> 01:13:09,690
Kirsty bless das kommt zu hause ab think you know i already get out eat or die ab so the other day you j grill too much sagt mir okay man aber oh das könnte man mal ich moderator oder ich sehr vieleics habt ihr auch in Evennet field계ac undo check it i loft audience about the entrepreneur trial and do you think about that chat lief er nach der Dig because of the bahms Pods network DHCP lies also sachter

1526
01:13:09,830 --> 01:13:19,790
so und das heißt jetzt wie zum teufel muss das hier sein das sind interfaces pointer auf was

1527
01:13:19,790 --> 01:13:31,180
hat er hier für schmerzen an das ganze ding ist an safe mann an safe pointer auf pointer

1528
01:13:31,180 --> 01:13:52,410
auf pointer fragt man ok kommt an safe auf geht's ja in pointer auf die domain ok create

1529
01:13:52,410 --> 01:14:01,750
xml das gibt glaube ich eine id zurück stimmt das gibt eine id zurück ja das war was man dann

1530
01:14:01,750 --> 01:14:09,670
wiederum braucht um auf das andere zu zeigen ok domain kommt mich jetzt einfach vor mld

1531
01:14:09,790 --> 01:14:16,150
da weiß ich wenigstens was gemeint ist ok interop wisst ihr wisst ok wir haben noch

1532
01:14:16,150 --> 01:14:22,930
eine vm mit ip laufen das ist perfekt ach nee wir müssen ja neu erstellen sonst klappt's ja

1533
01:14:22,930 --> 01:14:35,260
nicht das ist mega sas hat um nicht zu sagen hypersas ich löscht es mal weil um die vm id

1534
01:14:35,260 --> 01:14:40,500
rauszukriegen müssen wir die vm erstellen sonst krieg ich die id nicht mehr raus und das ist

1535
01:14:40,500 --> 01:14:43,480
dieses keine richtige id das ist ein pointer das heißt dass nachdem das pointer ausgelöst

1536
01:14:43,480 --> 01:14:46,720
ist oder gesagt wird oder so muss ich einfach den pointer auswählen also ich schau aber

1537
01:14:46,720 --> 01:14:49,740
ich muss mal genau gucken was ich da drauf hab ich das hier drauf jetzt noch mal ich

1538
01:14:49,740 --> 01:14:55,580
muss alles hier drüber ach ich bin nicht sicher wie ich hier alles drüber angeblieben

1539
01:14:55,580 --> 01:15:00,520
hab und ich muss alles jetzt einfach an der struktur auswählen ja der pointer auf das

1540
01:15:00,520 --> 01:15:04,740
ist nicht wie es eigentlich passiert okay ich mach jetzt mal so du kannst hier ein

1541
01:15:04,740 --> 01:15:10,940
tällатель oder so was zählen hier für die interop in dem fall also ich hab jetzt mal

1542
01:15:10,940 --> 01:15:15,160
ein pointer auf pointer auf monga w ich halte hier 내가 ich halte ingen an ich halte hier

1543
01:15:15,160 --> 01:15:24,940
das ist eigentlich oder ich habe das bei von von dem wem ich hier auch nur die man momentan

1544
01:15:24,940 --> 01:15:26,440
Was ist denn jetzt? Ah, hier Null.

1545
01:15:29,720 --> 01:15:30,520
Ah, ne, das ist nicht so.

1546
01:15:33,540 --> 01:15:34,860
Ah, wir Interface.

1547
01:15:36,640 --> 01:15:37,120
Unsafe.

1548
01:15:37,720 --> 01:15:38,320
Weil es nicht.

1549
01:15:42,690 --> 01:15:43,550
Und jetzt?

1550
01:15:45,910 --> 01:15:46,350
Ne.

1551
01:15:48,190 --> 01:15:50,170
Doppel, Doppelpointern muss ich.

1552
01:15:51,610 --> 01:15:52,490
Inter, und jetzt?

1553
01:15:52,790 --> 01:15:53,090
Und?

1554
01:15:54,030 --> 01:15:54,990
Adresse auf

1555
01:15:54,990 --> 01:15:56,870
Interfaces.

1556
01:15:58,330 --> 01:15:58,810
Okay.

1557
01:15:58,810 --> 01:16:00,630
Und dann

1558
01:16:00,630 --> 01:16:02,490
Source Null flaggen.

1559
01:16:02,530 --> 01:16:03,990
Ich hoffe mal, dass Source Null ist.

1560
01:16:04,950 --> 01:16:06,250
Was ist denn Source?

1561
01:16:07,570 --> 01:16:08,530
Source ist

1562
01:16:08,530 --> 01:16:09,850
Source.

1563
01:16:11,610 --> 01:16:12,750
Source ist

1564
01:16:12,750 --> 01:16:14,590
Leases. Das klingt doch gut.

1565
01:16:14,670 --> 01:16:15,670
Agent oder Arb.

1566
01:16:31,760 --> 01:16:32,540
Ach du Scheiße.

1567
01:16:33,840 --> 01:16:34,820
Warum geht es jetzt nicht?

1568
01:16:35,880 --> 01:16:36,380
Weil

1569
01:16:36,380 --> 01:16:39,700
Inter... Moment, ist das?

1570
01:16:40,220 --> 01:16:42,020
Das ist ein Triple Pointer.

1571
01:16:42,020 --> 01:16:42,880
Seht ihr das?

1572
01:16:42,880 --> 01:16:56,480
Triple Pointer.

1573
01:16:58,240 --> 01:17:00,240
Also ich muss quasi hier sagen.

1574
01:17:00,240 --> 01:17:02,240
Pointer, Pointer.

1575
01:17:02,240 --> 01:17:06,120
Ach du Scheiße, man.

1576
01:17:06,120 --> 01:17:08,120
Was ist das denn?

1577
01:17:08,120 --> 01:17:10,120
Seriously?

1578
01:17:10,120 --> 01:17:12,120
Pointer, Pointer.

1579
01:17:12,120 --> 01:17:14,120
Das funktioniert.

1580
01:17:14,120 --> 01:17:16,120
So.

1581
01:17:16,120 --> 01:17:18,120
Und das soll jetzt gehen, oder was?

1582
01:17:18,120 --> 01:17:22,970
Pointer Champ.

1583
01:17:22,970 --> 01:17:24,970
Ja.

1584
01:17:24,970 --> 01:17:29,370
Pointer Champ. Ja.

1585
01:17:29,370 --> 01:17:33,370
Was returnt denn das eigentlich?

1586
01:17:33,370 --> 01:17:35,370
Was mache ich?

1587
01:17:35,370 --> 01:17:39,370
Ich versuche eine VM zu erstellen über die CAP unter Linux.

1588
01:17:39,370 --> 01:17:41,370
Was prinzipiell funktioniert.

1589
01:17:41,370 --> 01:17:43,370
Aber jetzt will ich rausbekommen.

1590
01:17:43,370 --> 01:17:45,370
Okay, das ist ein Count quasi.

1591
01:17:45,370 --> 01:17:49,700
N.

1592
01:17:49,700 --> 01:17:51,700
N ist immer die beste Bezeichnung.

1593
01:17:51,700 --> 01:17:53,700
Da weiß man Bescheid.

1594
01:17:55,700 --> 01:17:57,700
Okay, hier haben wir die VM-ID.

1595
01:17:57,700 --> 01:17:59,700
So, und das müssen wir jetzt

1596
01:17:59,700 --> 01:18:01,700
in der Schleife machen, Leute.

1597
01:18:01,700 --> 01:18:03,700
Weil, das braucht hier eine Weile,

1598
01:18:03,700 --> 01:18:05,700
bis die True

1599
01:18:05,700 --> 01:18:07,700
Await

1600
01:18:07,700 --> 01:18:09,700
Oh, Moment.

1601
01:18:09,700 --> 01:18:11,700
Awaiten kann man nicht

1602
01:18:11,700 --> 01:18:17,580
in Unsafe, oder?

1603
01:18:17,580 --> 01:18:19,580
Natürlich. Natürlich kann man nicht

1604
01:18:19,580 --> 01:18:21,580
kann man keine Await machen in Unsafe.

1605
01:18:21,580 --> 01:18:23,580
Das ist natürlich klar.

1606
01:18:25,580 --> 01:18:27,580
Also müssen wir den Klassiker rausholen.

1607
01:18:27,580 --> 01:18:29,580
Threat, Sleep.

1608
01:18:29,580 --> 01:18:31,580
Für eine Sekunde.

1609
01:18:31,580 --> 01:18:33,580
Und dann probieren wir das Ganze nochmal aus.

1610
01:18:33,580 --> 01:18:37,400
Bin ich auch mal gespannt.

1611
01:18:37,400 --> 01:18:42,890
Run.

1612
01:18:42,890 --> 01:18:51,770
Okay.

1613
01:18:51,770 --> 01:18:53,770
Noch haben wir keine IP.

1614
01:18:53,770 --> 01:18:55,770
Noch haben wir keine IP.

1615
01:18:55,770 --> 01:19:05,800
Noch keine IP.

1616
01:19:05,800 --> 01:19:07,800
Keine IP.

1617
01:19:07,800 --> 01:19:09,800
Jetzt haben wir eine IP.

1618
01:19:11,800 --> 01:19:17,160
Äh.

1619
01:19:17,160 --> 01:19:26,490
Das interessiert ihn aber nicht.

1620
01:19:26,490 --> 01:19:28,490
Das ist dem ziemlich egal.

1621
01:19:28,490 --> 01:19:37,180
Na gut.

1622
01:19:37,180 --> 01:19:41,190
Abbrechen.

1623
01:19:41,190 --> 01:19:43,190
Das probieren wir mal aus.

1624
01:19:43,190 --> 01:19:45,190
Auf der Shell.

1625
01:19:45,190 --> 01:19:47,190
Wie geht denn das?

1626
01:19:47,190 --> 01:19:51,080
Domain Interface.

1627
01:19:51,080 --> 01:19:53,080
Adress. Ja.

1628
01:19:53,080 --> 01:19:56,390
Alter, meine Shell ist übelst kaputt.

1629
01:19:56,390 --> 01:19:59,830
Was ist denn das für ein Kack, Mann?

1630
01:19:59,830 --> 01:20:01,830
Requires Domain.

1631
01:20:01,830 --> 01:20:03,830
Achso, ich habe jetzt gar keine VM mehr angelegt.

1632
01:20:03,830 --> 01:20:05,830
Doch, doch. Habe ich noch.

1633
01:20:05,830 --> 01:20:09,590
Test-VM.

1634
01:20:09,590 --> 01:20:11,590
Mit der offiziellen

1635
01:20:11,590 --> 01:20:13,590
Kommandozeile

1636
01:20:13,590 --> 01:20:15,590
findet man auch keine IP.

1637
01:20:15,590 --> 01:20:17,590
Warum das denn?

1638
01:20:17,590 --> 01:20:19,590
Special Hyper Secrets IP?

1639
01:20:19,590 --> 01:20:21,590
Oder wie?

1640
01:20:21,590 --> 01:20:23,590
Was ist ein Pointer?

1641
01:20:23,590 --> 01:20:25,590
Also das Konzept an sich

1642
01:20:25,590 --> 01:20:27,590
ist relativ simpel.

1643
01:20:27,590 --> 01:20:29,590
Insgesamt

1644
01:20:29,590 --> 01:20:31,590
schießt er dir aber relativ schnell in den Fuß.

1645
01:20:31,590 --> 01:20:33,590
Also ein Pointer ist eine Kombination

1646
01:20:33,590 --> 01:20:35,590
aus zwei Sachen.

1647
01:20:35,590 --> 01:20:37,590
Ein Pointer ist einmal

1648
01:20:37,590 --> 01:20:39,590
die Arbeitsspeicheradresse

1649
01:20:39,590 --> 01:20:41,590
wo etwas liegt

1650
01:20:41,590 --> 01:20:43,590
und die Typinformation

1651
01:20:43,590 --> 01:20:45,590
was an dieser

1652
01:20:45,590 --> 01:20:47,590
Speicheradresse liegt.

1653
01:20:47,590 --> 01:20:49,590
Also wenn du die Information hast

1654
01:20:49,590 --> 01:20:51,590
ein

1655
01:20:51,590 --> 01:20:55,030
16 Bit

1656
01:20:55,030 --> 01:20:57,030
Int liegt an

1657
01:20:57,030 --> 01:20:59,030
dieser Speicheradresse

1658
01:20:59,030 --> 01:21:01,030
dann kannst du das auslesen.

1659
01:21:01,030 --> 01:21:03,030
Du gehst zu dieser Speicheradresse hin

1660
01:21:03,030 --> 01:21:05,030
und weißt du musst 2 Byte

1661
01:21:05,030 --> 01:21:07,030
auslesen beginnend

1662
01:21:07,030 --> 01:21:09,030
an der Pointeradresse

1663
01:21:09,030 --> 01:21:11,030
dass du dein 16 Bit

1664
01:21:11,030 --> 01:21:13,030
dein Int 16 bekommst.

1665
01:21:13,030 --> 01:21:15,030
Also ein Pointer ist nicht wirklich nur ein Zeiger

1666
01:21:15,030 --> 01:21:17,030
auch wenn sich das immer so anhört.

1667
01:21:17,030 --> 01:21:19,030
Ein Pointer ist die Kombination aus

1668
01:21:19,030 --> 01:21:21,030
Speicheradresse plus

1669
01:21:21,030 --> 01:21:23,030
Typ.

1670
01:21:23,030 --> 01:21:25,030
Wollt Pointer außen vor

1671
01:21:25,030 --> 01:21:27,030
das sind nur Pointer.

1672
01:21:27,030 --> 01:21:29,030
Ja wenn du sowas hier hast in C

1673
01:21:29,030 --> 01:21:31,030
dann ist das die Information

1674
01:21:31,030 --> 01:21:33,030
ähm

1675
01:21:33,030 --> 01:21:35,030
es ist ein Int

1676
01:21:35,030 --> 01:21:37,030
was dort im Speicher steht

1677
01:21:37,030 --> 01:21:39,030
also die Speicheradresse

1678
01:21:39,030 --> 01:21:41,030
plus die Typinformation.

1679
01:21:41,030 --> 01:21:51,960
Und nun?

1680
01:21:51,960 --> 01:21:53,960
Jetzt hast du mehr RAM.

1681
01:21:53,960 --> 01:21:55,960
Ohne RAM zu downloaden.

1682
01:21:55,960 --> 01:21:57,960
So also

1683
01:21:57,960 --> 01:21:59,960
noch nicht mal die offizielle

1684
01:21:59,960 --> 01:22:01,960
das offizielle

1685
01:22:01,960 --> 01:22:03,960
Kommandozeilentool kriegt das raus.

1686
01:22:03,960 --> 01:22:05,960
Was kann man hier hinten noch?

1687
01:22:05,960 --> 01:22:07,960
Source angeben. Lease.

1688
01:22:07,960 --> 01:22:09,960
Das ist das was ich gerade mache.

1689
01:22:09,960 --> 01:22:11,960
Was haben wir sonst noch zu bieten?

1690
01:22:11,960 --> 01:22:13,960
Agent. No Agent. ARP.

1691
01:22:13,960 --> 01:22:15,960
Aha! ARP funktioniert.

1692
01:22:15,960 --> 01:22:17,960
Ok. Warum auch immer.

1693
01:22:17,960 --> 01:22:19,960
Ich wills gar nicht wissen.

1694
01:22:19,960 --> 01:22:21,960
ARP ist

1695
01:22:21,960 --> 01:22:23,960
Magic 2

1696
01:22:23,960 --> 01:22:25,960
Ok. Alles klar.

1697
01:22:25,960 --> 01:22:27,960
Also muss ich hier Source 2

1698
01:22:27,960 --> 01:22:29,960
reinschreiben.

1699
01:22:29,960 --> 01:22:31,960
Und jetzt probieren wir das ganze nochmal.

1700
01:22:31,960 --> 01:22:33,960
Delete.

1701
01:22:33,960 --> 01:22:35,960
Run.

1702
01:22:35,960 --> 01:22:37,960
Ups.

1703
01:22:37,960 --> 01:22:39,960
Ja ja. Nein nein 2.

1704
01:22:39,960 --> 01:22:41,960
Run.

1705
01:22:41,960 --> 01:22:45,660
Bam.

1706
01:22:45,660 --> 01:22:47,660
Was passiert dann wenn ich meinen

1707
01:22:47,660 --> 01:22:49,660
Pointer hin und her caste?

1708
01:22:49,660 --> 01:22:51,660
Dann sagst du

1709
01:22:51,660 --> 01:22:53,660
du weißt es besser als dein Compiler.

1710
01:22:53,660 --> 01:22:55,660
Du sagst ihm ey

1711
01:22:55,660 --> 01:22:57,660
an dieser Stelle ist gar kein Int

1712
01:22:57,660 --> 01:22:59,660
sondern eigentlich ein

1713
01:22:59,660 --> 01:23:01,660
anderes Ding.

1714
01:23:01,660 --> 01:23:03,660
Das muss nicht zwangsläufig so sein

1715
01:23:03,660 --> 01:23:05,660
aber das kannst du ihm sagen

1716
01:23:05,660 --> 01:23:07,660
dass du das besser weißt.

1717
01:23:07,660 --> 01:23:09,660
Wenn du einen Pointer ohne Typ

1718
01:23:09,660 --> 01:23:11,660
Informationen hast dann musst du es sogar machen.

1719
01:23:11,660 --> 01:23:15,740
Und was ja in C relativ

1720
01:23:15,740 --> 01:23:17,740
Oh was ist das?

1721
01:23:17,740 --> 01:23:19,740
Was ist das?

1722
01:23:19,740 --> 01:23:26,120
Wait a minute. Der erkennt das es

1723
01:23:26,120 --> 01:23:30,070
eine IP hat. Pog.

1724
01:23:30,070 --> 01:23:32,070
Das geht einfach.

1725
01:23:32,070 --> 01:23:35,960
Stellt euch das mal vor.

1726
01:23:35,960 --> 01:23:37,960
Das muss man den Linux Leuten

1727
01:23:37,960 --> 01:23:39,960
ja echt lassen.

1728
01:23:39,960 --> 01:23:41,960
Das sieht immer abartig aus.

1729
01:23:41,960 --> 01:23:43,960
Weil du halt irgendwelchen

1730
01:23:43,960 --> 01:23:45,960
C Interop machen musst.

1731
01:23:45,960 --> 01:23:47,960
Aber unterm Strich

1732
01:23:47,960 --> 01:23:49,960
funktioniert es meistens einfach.

1733
01:23:49,960 --> 01:23:51,960
Natürlich

1734
01:23:51,960 --> 01:23:53,960
kannst du dir bei jedem Schritt

1735
01:23:53,960 --> 01:23:55,960
selbst in den Fuß schießen.

1736
01:23:55,960 --> 01:23:57,960
Aber es funktioniert meistens

1737
01:23:57,960 --> 01:23:59,960
einfach.

1738
01:23:59,960 --> 01:24:01,960
Und die Dinger sind ja recht gut zu bedienen

1739
01:24:01,960 --> 01:24:03,960
auch. Kann man nichts sagen.

1740
01:24:03,960 --> 01:24:05,960
So und jetzt.

1741
01:24:05,960 --> 01:24:07,960
Und jetzt ist die Frage.

1742
01:24:07,960 --> 01:24:13,060
Wie kann ich

1743
01:24:13,060 --> 01:24:15,060
jetzt auf meine Interfaces zugreifen?

1744
01:24:15,060 --> 01:24:19,910
Also wenn ich jetzt

1745
01:24:19,910 --> 01:24:21,910
ein Interface gefunden habe.

1746
01:24:21,910 --> 01:24:23,910
Dann müsste ich doch eigentlich sagen können

1747
01:24:23,910 --> 01:24:25,910
Interfaces

1748
01:24:25,910 --> 01:24:27,910
0. Weil ich habe ja

1749
01:24:27,910 --> 01:24:29,910
mindestens eins gefunden.

1750
01:24:29,910 --> 01:24:31,910
Interfaces 0.

1751
01:24:31,910 --> 01:24:33,910
Und dann number of addresses ausgeben.

1752
01:24:35,910 --> 01:24:37,910
So.

1753
01:24:37,910 --> 01:24:39,910
Wie wird die VM erstellt?

1754
01:24:39,910 --> 01:24:41,910
Also woher weiß der welches Image?

1755
01:24:41,910 --> 01:24:43,910
Hier her.

1756
01:24:43,910 --> 01:24:45,910
Weil ich ein riesen fettes ekliges XML habe.

1757
01:24:45,910 --> 01:24:49,220
Wo das alles drin steht.

1758
01:24:49,220 --> 01:24:51,220
Wo man die Hälfte wahrscheinlich entfernen könnte draus.

1759
01:24:51,220 --> 01:24:53,220
Muss ich auch mal gucken.

1760
01:24:53,220 --> 01:24:55,220
Wie man das XML vielleicht.

1761
01:24:55,220 --> 01:24:57,220
So viele PCI und Serial und so.

1762
01:24:57,220 --> 01:24:59,220
Brauche ich. SATA brauche ich alles gar nicht.

1763
01:24:59,220 --> 01:25:06,820
Oh was jetzt?

1764
01:25:06,820 --> 01:25:10,520
198?

1765
01:25:10,520 --> 01:25:12,520
Was habe ich jetzt

1766
01:25:12,520 --> 01:25:18,330
verkehrt gemacht?

1767
01:25:18,330 --> 01:25:20,330
Ah ich kann nicht drauf zugreifen logischerweise.

1768
01:25:20,330 --> 01:25:22,330
Ich bin ja auch doof.

1769
01:25:22,330 --> 01:25:24,330
Ich kann nicht drauf zugreifen solange es noch nicht angelegt ist.

1770
01:25:24,330 --> 01:25:26,330
Ok das ist natürlich klar.

1771
01:25:26,330 --> 01:25:29,900
Das kann nicht funktionieren.

1772
01:25:29,900 --> 01:25:33,340
Also muss ich checken ob das

1773
01:25:33,340 --> 01:25:35,340
Kann man nicht einfach 0 check machen?

1774
01:25:35,340 --> 01:25:37,340
Ne.

1775
01:25:37,340 --> 01:25:39,340
Ich muss einfach check if

1776
01:25:39,340 --> 01:25:41,340
n größer 0.

1777
01:25:41,340 --> 01:25:43,340
So und nur dann mache ich das.

1778
01:25:43,340 --> 01:25:45,340
Ansonsten warten wir ab.

1779
01:25:45,340 --> 01:25:47,340
Auf geht's.

1780
01:25:47,340 --> 01:25:51,800
Let's go.

1781
01:25:51,800 --> 01:25:53,800
So.

1782
01:25:53,800 --> 01:25:55,800
Wir sollten jetzt gleich die IP Adresse sehen.

1783
01:25:55,800 --> 01:25:57,800
Sobald er hier eine IP Adresse bekommt.

1784
01:25:57,800 --> 01:25:59,800
Bin ich gespannt.

1785
01:25:59,800 --> 01:26:18,150
Number of address is 1.

1786
01:26:18,150 --> 01:26:20,150
Ok der kann sogar die Adresse da raus holen.

1787
01:26:20,150 --> 01:26:22,150
Nicht schlecht.

1788
01:26:22,150 --> 01:26:24,150
Nicht schlecht.

1789
01:26:24,150 --> 01:26:26,150
Wir machen das mal alles auf dem Desktop hier.

1790
01:26:26,150 --> 01:26:28,150
Sonst müssen wir so viel hin und her switchen.

1791
01:26:28,150 --> 01:26:32,360
So.

1792
01:26:32,360 --> 01:26:34,360
Eigentlich könnten wir gleich noch ein delete hinterher machen.

1793
01:26:34,360 --> 01:26:36,360
Wobei er dann das Image wahrscheinlich auch löscht.

1794
01:26:36,360 --> 01:26:38,360
Wobei er dann das Image wahrscheinlich auch löscht.

1795
01:26:38,360 --> 01:26:40,360
So.

1796
01:26:40,360 --> 01:26:42,360
Und jetzt muss ich die Adressen da raus holen.

1797
01:26:42,360 --> 01:26:44,360
Wie hole ich die Adressen da raus?

1798
01:26:44,360 --> 01:26:46,360
Wie hole ich die Adressen da raus?

1799
01:26:46,360 --> 01:26:48,360
Wir Domain Interface.

1800
01:26:48,360 --> 01:27:04,470
Wir Domain IP Adress Pointer.

1801
01:27:04,470 --> 01:27:08,040
Wir Domain IP Adress Pointer.

1802
01:27:08,040 --> 01:27:10,040
Wir Domain IP Adress Pointer.

1803
01:27:10,040 --> 01:27:14,700
Hier.

1804
01:27:14,700 --> 01:27:16,700
Das brauche ich auch noch.

1805
01:27:16,700 --> 01:27:18,700
Als Struct.

1806
01:27:18,700 --> 01:27:20,700
Public unsaved Struct.

1807
01:27:20,700 --> 01:27:22,700
Wir Domain IP Adress.

1808
01:27:22,700 --> 01:27:24,700
Wir Domain IP Adress.

1809
01:27:24,700 --> 01:27:26,700
Wir Domain IP Adress.

1810
01:27:26,700 --> 01:27:28,700
So machen wir das mal weg.

1811
01:27:28,700 --> 01:27:30,700
Also.

1812
01:27:30,700 --> 01:27:32,700
Was brauchen wir denn hier jetzt?

1813
01:27:32,700 --> 01:27:34,700
Wir brauchen ein Typ.

1814
01:27:34,700 --> 01:27:36,700
Wir brauchen ein Typ.

1815
01:27:36,700 --> 01:27:38,700
Das ist ein Int.

1816
01:27:38,700 --> 01:27:42,390
Das ist ein Int.

1817
01:27:42,390 --> 01:27:44,390
Ein Typ.

1818
01:27:44,390 --> 01:27:49,110
Die Adresse als String.

1819
01:27:49,110 --> 01:27:51,110
Als Byte.

1820
01:27:51,110 --> 01:27:53,110
Ist wahrscheinlich sinniger.

1821
01:27:53,110 --> 01:27:55,110
Und dann ein Prefix.

1822
01:27:55,110 --> 01:27:57,110
Als unsigned Int.

1823
01:27:57,110 --> 01:27:59,110
Als unsigned Int.

1824
01:27:59,110 --> 01:28:01,110
So.

1825
01:28:01,110 --> 01:28:03,110
Und davon wollen wir jetzt ein Array haben.

1826
01:28:03,110 --> 01:28:06,550
Und davon wollen wir jetzt ein Array haben.

1827
01:28:06,550 --> 01:28:08,550
Das ist sowas.

1828
01:28:08,550 --> 01:28:10,550
Ich blick nicht mehr durch.

1829
01:28:10,550 --> 01:28:12,550
Wo muss man hin?

1830
01:28:12,550 --> 01:28:14,550
Das ist dann ja sowas hier.

1831
01:28:14,550 --> 01:28:16,550
Ein Pointer.

1832
01:28:16,550 --> 01:28:21,590
Auf.

1833
01:28:21,590 --> 01:28:23,590
Das Start Element von einem Array.

1834
01:28:23,590 --> 01:28:25,590
Das ist dann ja sowas hier.

1835
01:28:25,590 --> 01:28:27,590
Ein Pointer.

1836
01:28:27,590 --> 01:28:29,590
Auf.

1837
01:28:29,590 --> 01:28:36,170
Das Start Element von einem Array.

1838
01:28:36,170 --> 01:28:38,170
Ich bin mir nicht sicher ob ich sowas machen darf.

1839
01:28:38,170 --> 01:28:40,170
Ob er das dann richtig erkennt.

1840
01:28:40,170 --> 01:28:42,170
Okay, so.

1841
01:28:42,170 --> 01:28:54,570
greifen da jetzt einfach drauf zu scheiß drauf addresses und davon die erste und davon dann die

1842
01:28:54,570 --> 01:29:13,140
moment das ist ein byte wie bekomme ich aus einem byte array einen string geht das

1843
01:29:13,140 --> 01:29:19,720
gescheit ein null terminiertes byte array zu einem string wie funktioniert das in c sharp

1844
01:29:19,720 --> 01:29:28,000
gescheit irgendwie sowas hier ne encoding utf 8 ich hoffe mal dass du dir was get string und

1845
01:29:28,000 --> 01:29:41,570
dann vom beiz aber da brauche ich ein byte count shit woher weiß ich denn woher weiß ich okay na

1846
01:29:41,570 --> 01:29:48,410
ip-adresse ist einfach 8 irgendwas nicht wirklich aber die ersten wir machen einfach mal die ersten

1847
01:29:48,410 --> 01:29:53,730
acht charakters das ist dann quasi 192 punkt 168

1848
01:29:53,750 --> 01:30:04,080
punkt also dass der anfang von der ip müsste ich dann zumindest sehen hier jetzt habe ich den wird

1849
01:30:04,080 --> 01:30:25,570
manager geschlossen ich nur okay jetzt jetzt crash wahrscheinlich gleich so der holt sich

1850
01:30:25,570 --> 01:30:31,570
jetzt eine ip die vm muss erst ein bisschen dauert auch ein bisschen bis sie startet und

1851
01:30:31,570 --> 01:31:12,500
alles funktioniert oh nee das war ein zeilenumbruch problem hier es geht

1852
01:31:12,620 --> 01:31:24,500
einfach aber wie kriege ich das ist das problem ist nicht gelöst wie kriege ich ein null terminierten

1853
01:31:24,500 --> 01:31:42,540
string ag da muss das der overflow fragen weit weiter 0 terminated to string da gibt es doch da

1854
01:31:42,540 --> 01:31:50,960
gibt es auch bestimmt chat gpt fragen das kriege ich auch ohne chat chat chat gpt da gibt es doch

1855
01:31:51,420 --> 01:32:12,860
bestimmt irgendein irgendein trick da gibt es doch bestimmt irgendein trick wie man das wie man das

1856
01:32:12,860 --> 01:32:22,320
also das ist ein utf 8 string höchstwahrscheinlich ein null terminated utf 8 string und das will ich

1857
01:32:22,320 --> 01:32:28,800
in den c sharp string ach ja übrigens nur mal so ich ich zeige euch mal was weil ihr weil ihr

1858
01:32:28,800 --> 01:32:29,820
vielleicht mal das problem haben könntet man denkt sich jetzt ja so als würde ich jetzt mal das problem

1859
01:32:29,820 --> 01:32:32,120
haben könnte man denkt sich jetzt ja so als würde ich jetzt mal das problem haben könnte man denkt

1860
01:32:33,060 --> 01:33:05,270
sich jetzt ja so als würde ich jetzt mal das problem haben könnte man denkt sich jetzt ja so an der stelle gucke mal warum nehmen wir nicht charakter könnte man sich ja denken warum nehmen wir nicht charakter weil es ist es sind es sind ja sind ja buchstaben und jetzt machen wir mal passt mal auf new string weil das ist dann relativ einfach dann darf man das direkt null terminiert reinmachen und jetzt machen wir mal passt mal auf new string weil das ist dann relativ einfach dann darf man das direkt null terminiert reinmachen und jetzt machen wir mal passt mal auf new string weil das ist dann relativ einfach dann darf man das direkt null terminiert reinmachen und jetzt machen wir mal passt mal auf new string weil das ist dann relativ einfach dann darf man das direkt null terminiert reinmachen und jetzt machen wir mal passt mal auf new string weil das ist dann relativ einfach dann darf man das direkt null terminiert reinmachen und jetzt machen wir mal passt mal auf new string weil das ist dann relativ einfach dann darf man das direkt null terminiert reinmachen und jetzt machen wir mal passt mal auf

1861
01:33:05,930 --> 01:33:07,530
So, was meint ihr, was jetzt passiert?

1862
01:33:08,090 --> 01:33:09,910
Sieht doch jetzt eigentlich richtig aus.

1863
01:33:10,010 --> 01:33:11,610
Ich kann euch sagen, dass es nicht funktionieren wird.

1864
01:33:13,890 --> 01:33:14,690
Glaube ich zumindest.

1865
01:33:21,960 --> 01:33:23,140
Es gibt einen schon Skid an.

1866
01:33:23,220 --> 01:33:23,800
Was sonst?

1867
01:33:23,960 --> 01:33:24,420
Was sonst?

1868
01:33:25,120 --> 01:33:27,760
So, also ich könnte wetten, dass es nicht funktioniert.

1869
01:33:29,730 --> 01:33:35,410
Dass es abkackt oder sehr merkwürdige Zeichen ausgibt auf der Kommandozeile.

1870
01:33:39,850 --> 01:33:40,670
Ja, macht es.

1871
01:33:41,030 --> 01:33:41,790
Es funktioniert nicht.

1872
01:33:41,870 --> 01:33:43,710
Und mein Terminal sagt, es kackt gleich ab.

1873
01:33:45,310 --> 01:33:45,590
Jaja.

1874
01:33:45,590 --> 01:33:48,690
Tja, Chad, warum funktioniert das nicht?

1875
01:33:48,790 --> 01:33:53,670
Es ist ein Null-Terminated-Character-Array.

1876
01:33:53,770 --> 01:33:55,010
Das ist schon richtig.

1877
01:33:55,850 --> 01:33:57,090
Aber warum geht das nicht?

1878
01:33:57,210 --> 01:34:00,950
Also sprich, warum ist das hier so nicht möglich, obwohl das doch ihr Charakter ist?

1879
01:34:01,370 --> 01:34:03,650
Das liegt daran, was ist das, was ich euch zeigen wollte?

1880
01:34:03,690 --> 01:34:11,830
Das liegt daran, weil ein Charakter in C-Sharp nicht ein Byte ist.

1881
01:34:13,270 --> 01:34:15,570
Normalerweise ist ein Charakter, zumindest in C ist das so.

1882
01:34:15,650 --> 01:34:18,250
Ist ein Charakter gleich ein Byte.

1883
01:34:18,910 --> 01:34:19,690
In C-Sharp nicht.

1884
01:34:20,710 --> 01:34:22,430
In C-Sharp ist ein Charakter.

1885
01:34:23,130 --> 01:34:24,150
Chad, wer weiß es?

1886
01:34:26,920 --> 01:34:29,240
Wie viel Byte hat ein Charakter in C-Sharp?

1887
01:34:31,940 --> 01:34:32,500
Pausierungschamp?

1888
01:34:33,180 --> 01:34:35,080
Wer ist High IQ und wer ist es?

1889
01:34:36,020 --> 01:34:36,260
Vier?

1890
01:34:36,360 --> 01:34:37,100
Ne, fast.

1891
01:34:38,480 --> 01:34:39,240
Sixty-nine?

1892
01:34:39,500 --> 01:34:40,080
Fast richtig.

1893
01:34:42,280 --> 01:34:42,800
Sechzehn?

1894
01:34:42,860 --> 01:34:43,000
Ne.

1895
01:34:46,280 --> 01:34:48,080
Du bist mit sechzehn aber schon mal nicht verkehrt.

1896
01:34:49,160 --> 01:34:50,320
Es sind bloß nicht sechzehn Byte.

1897
01:34:50,700 --> 01:34:51,260
Es sind zwei.

1898
01:34:51,580 --> 01:34:51,880
Richtig.

1899
01:34:51,880 --> 01:34:52,880
Es sind zwei.

1900
01:34:53,080 --> 01:34:53,520
Zwei.

1901
01:34:54,020 --> 01:34:54,860
Es sind zwei Byte.

1902
01:34:54,940 --> 01:34:55,780
Es sind sechzehn Byte.

1903
01:34:56,220 --> 01:35:02,560
Es ist quasi UTF-16, wie C-Sharp intern arbeitet.

1904
01:35:03,080 --> 01:35:03,380
Warum?

1905
01:35:04,080 --> 01:35:05,280
Das weiß nur Microsoft.

1906
01:35:06,500 --> 01:35:09,280
Historisch, weil das wahrscheinlich vor der Erfindung von UTF-8 war.

1907
01:35:15,070 --> 01:35:15,150
Ja.

1908
01:35:16,190 --> 01:35:17,110
Das sind sechzehn Byte.

1909
01:35:17,330 --> 01:35:18,970
Deswegen funktioniert das nicht richtig.

1910
01:35:23,190 --> 01:35:24,190
Deswegen funktioniert das nicht richtig.

1911
01:35:24,250 --> 01:35:25,850
Deswegen muss ich explizit sagen, hier guck mal.

1912
01:35:26,370 --> 01:35:27,430
Das ist ein Byte.

1913
01:35:27,430 --> 01:35:29,570
Und jetzt muss ich mir überlegen, okay.

1914
01:35:29,570 --> 01:35:38,370
Wie bekomme ich denn, bitteschön, aus diesen Bytes, aus diesen UTF-8 Bytes, jetzt ein C-Sharp-String?

1915
01:35:39,870 --> 01:35:41,890
So, wo ist die John Skeet-Antwort, Leute?

1916
01:35:45,720 --> 01:35:51,980
Fastest way to convert a possibly null-terminated ASCII Byte to String.

1917
01:35:54,600 --> 01:35:54,960
Ja, Moment.

1918
01:35:55,120 --> 01:35:57,160
Das ist, das ist, das zählt nicht.

1919
01:36:02,180 --> 01:36:05,280
Das, das zählt nicht, weil da ist, das ist ja schon im Array.

1920
01:36:05,280 --> 01:36:06,660
Und im Array.

1921
01:36:07,280 --> 01:36:10,000
Ist ja schon eine Längen-Information drinne.

1922
01:36:14,780 --> 01:36:15,260
Es muss.

1923
01:36:22,580 --> 01:36:23,780
Zweite oder dritte Antwort?

1924
01:36:29,760 --> 01:36:30,640
Nope, das stimmt nicht.

1925
01:36:30,840 --> 01:36:31,600
Das, das bringt nix.

1926
01:36:31,740 --> 01:36:32,500
Das, das bringt nix.

1927
01:36:36,960 --> 01:36:39,120
Das geht so nicht.

1928
01:36:49,270 --> 01:36:51,310
Ich mein, eine Schleife, das funktioniert.

1929
01:36:51,430 --> 01:36:53,570
Ich könnte eine Schleife machen und das selbst rausholen.

1930
01:36:56,300 --> 01:36:57,720
Was haben wir denn hier zu bieten?

1931
01:37:00,650 --> 01:37:01,590
Okay, C-Sharp.

1932
01:37:06,500 --> 01:37:07,380
UTF-8.

1933
01:37:08,560 --> 01:37:10,080
Pointer to String.

1934
01:37:13,130 --> 01:37:13,830
Native UTF-8.

1935
01:37:13,830 --> 01:37:13,890
Native UTF-8.

1936
01:37:13,890 --> 01:37:13,970
Native UTF-8.

1937
01:37:13,990 --> 01:37:14,170
Native UTF-8.

1938
01:37:14,170 --> 01:37:15,070
Managed String.

1939
01:37:15,730 --> 01:37:20,160
Boah, was zum...

1940
01:37:26,600 --> 01:37:27,540
Gibt's da nix Fertiges?

1941
01:37:29,380 --> 01:37:32,500
Marshall Pointer to String UTF...

1942
01:37:33,040 --> 01:37:33,820
Ja!

1943
01:37:34,380 --> 01:37:35,780
Das sieht gut aus!

1944
01:37:36,860 --> 01:37:38,260
Der Marshall wieder mal.

1945
01:37:39,760 --> 01:37:41,260
Der Marshall.

1946
01:37:42,780 --> 01:37:43,920
UTF-8.

1947
01:37:44,440 --> 01:37:48,200
Pointer to String.

1948
01:37:49,440 --> 01:37:50,560
UTF-8.

1949
01:37:51,940 --> 01:37:53,320
Pointer, okay.

1950
01:37:53,320 --> 01:37:53,380
Okay.

1951
01:37:53,380 --> 01:37:54,580
Okay, Bites.

1952
01:37:57,400 --> 01:38:00,320
Okay, das will er als Endpointer wahrscheinlich haben.

1953
01:38:00,420 --> 01:38:01,020
Das ist okay.

1954
01:38:01,180 --> 01:38:01,660
Darf er.

1955
01:38:03,280 --> 01:38:04,020
Wenn er meint.

1956
01:38:06,630 --> 01:38:07,770
Okay, String.

1957
01:38:10,760 --> 01:38:11,480
Alles klar.

1958
01:38:12,980 --> 01:38:15,240
Löschen wir die 4M und gucken, ob es jetzt funktioniert.

1959
01:38:16,160 --> 01:38:18,440
By the way, Leute, ich hab mich wieder übel sidetracken lassen.

1960
01:38:18,600 --> 01:38:20,000
Eigentlich wollte ich mich mit der...

1961
01:38:20,000 --> 01:38:21,740
Meine Schelle ist kaputt.

1962
01:38:22,300 --> 01:38:25,060
Mit der Größe von Binarys beschäftigen.

1963
01:38:25,060 --> 01:38:28,760
Was wir wieder nur zum Teil gemacht haben.

1964
01:38:28,760 --> 01:38:35,390
Aber wieder was gelernt.

1965
01:38:39,580 --> 01:38:42,380
So, wenn jetzt alles klappt, krieg ich die IP-Adresse von...

1966
01:38:43,480 --> 01:38:45,380
Der 4M ausgespuckt.

1967
01:38:49,850 --> 01:38:50,410
Nice!

1968
01:38:51,130 --> 01:38:51,470
Easy!

1969
01:38:54,540 --> 01:38:55,440
Eckermann-Shit.

1970
01:38:55,960 --> 01:38:56,980
Easy as fuck.

1971
01:38:57,380 --> 01:38:58,980
E-E-Easy as fuck.

1972
01:38:59,300 --> 01:38:59,560
Easy.

1973
01:38:59,900 --> 01:39:00,660
Get rekt.

1974
01:39:00,920 --> 01:39:01,960
Easy as fuck.

1975
01:39:02,240 --> 01:39:03,460
Der Marshall war's wieder.

1976
01:39:08,550 --> 01:39:10,150
Der Marshall war am Start.

1977
01:39:14,160 --> 01:39:17,080
Ist es jetzt möglich, Unsafety-Sharp-Inline-Assembly zu schreiben?

1978
01:39:17,680 --> 01:39:17,780
Ich weiß es nicht.

1979
01:39:17,780 --> 01:39:17,820
Ich weiß es nicht.

1980
01:39:17,820 --> 01:39:19,600
Ich hab keine Ahnung, ob das geht.

1981
01:39:21,660 --> 01:39:25,800
Also, direkt in der Sprache integriert ist es nicht.

1982
01:39:26,500 --> 01:39:30,100
Aber es gibt bestimmt irgendwelche Zusatzdinger, wo das tut.

1983
01:39:32,220 --> 01:39:32,780
Marshalak.

1984
01:39:38,030 --> 01:39:39,610
Ja, das ist gut hier.

1985
01:39:39,690 --> 01:39:40,570
Das find ich nice.

1986
01:39:43,220 --> 01:39:45,420
Was passiert eigentlich, wenn ich die 4M lösche?

1987
01:39:46,060 --> 01:39:49,000
Crash das dann, weil der Pointer nicht mehr gültig ist?

1988
01:39:49,500 --> 01:39:50,580
Oder was passiert?

1989
01:39:50,580 --> 01:39:52,580
Jetzt bin ich gespannt.

1990
01:39:52,620 --> 01:39:54,260
Oh, ja.

1991
01:39:54,600 --> 01:39:55,160
Es crasht.

1992
01:39:56,980 --> 01:39:58,080
Domain not found.

1993
01:39:59,260 --> 01:40:01,100
Object instance not set.

1994
01:40:01,940 --> 01:40:02,160
Okay.

1995
01:40:02,480 --> 01:40:05,380
Man darf ihm das nicht unterm S weglöschen.

1996
01:40:06,660 --> 01:40:07,600
Dann kackt er ab.

1997
01:40:10,070 --> 01:40:10,830
Aber das ist cool.

1998
01:40:11,010 --> 01:40:12,550
Das hätte ich nicht gedacht, dass das so geht.

1999
01:40:13,950 --> 01:40:14,390
Publish.

2000
01:40:14,550 --> 01:40:16,770
Wie groß ist das Executable jetzt?

2001
01:40:19,740 --> 01:40:20,220
Build.

2002
01:40:23,760 --> 01:40:24,720
3,8 MB.

2003
01:40:24,940 --> 01:40:25,520
Das ist ja nix.

2004
01:40:28,980 --> 01:40:29,120
Was?

2005
01:40:31,470 --> 01:40:31,690
Also.

2006
01:40:32,690 --> 01:40:35,790
Warum ist meine Shell so abgefuckt, kaputt?

2007
01:40:35,930 --> 01:40:36,550
Was ist da los?

2008
01:40:39,640 --> 01:40:40,300
Das ist cool.

2009
01:40:45,570 --> 01:40:47,130
Weil das in Kernel pointed.

2010
01:40:47,270 --> 01:40:47,470
Nee.

2011
01:40:49,190 --> 01:40:49,830
Weil...

2012
01:40:49,830 --> 01:40:52,920
Das ist nicht gecrashed.

2013
01:40:53,100 --> 01:40:56,280
Weil es irgendwie unmanaged Probleme gegeben hat.

2014
01:40:56,340 --> 01:40:57,840
Das ist gecrashed, weil...

2015
01:40:59,500 --> 01:41:03,840
Er anscheinend versucht hat, hier drauf zuzugreifen.

2016
01:41:04,940 --> 01:41:06,060
Weil es noch größer...

2017
01:41:06,060 --> 01:41:08,540
Also, ich hab es wahrscheinlich gerade in dem Moment gelöscht,

2018
01:41:08,540 --> 01:41:09,380
wo es das...

2019
01:41:09,380 --> 01:41:15,320
noch größer als null war und dann hat er versucht hier drauf zuzugreifen oder in welcher zeile 201

2020
01:41:15,320 --> 01:41:23,360
ja genau also ich habe das gelöscht wo der check das war ein ganz unglückliches timing anscheinend

2021
01:41:23,360 --> 01:41:35,180
na oder na oder das ist doch irgendwie im abgeschrieben dass das gefunden hat was auch

2022
01:41:35,180 --> 01:41:39,440
immer jeder ist der ist gecrasht weil ich hier versucht habe auf interfaces zuzugreifen auf den

2023
01:41:39,440 --> 01:41:49,760
ersten index und das gab es da nicht mehr weil ich gelöscht hatte ja aber gut man war ja war

2024
01:41:49,760 --> 01:41:56,660
irgendwie zu erwarten sollte man sollte man auch nicht machen haben wir wieder was gelernt leute

2025
01:41:56,660 --> 01:42:05,300
wie man bekommt wie man per api also per pc library interface vms erstellt unter linux

2026
01:42:05,300 --> 01:42:20,140
was das war auf die schnelle machen können ich glaube nicht was ich mich jetzt

2027
01:42:20,140 --> 01:42:29,420
noch frage ist was ich mir jetzt noch frage ist worauf sind diese beine resets lauffähig

2028
01:42:29,420 --> 01:42:35,950
dass das müsste man vielleicht mal schnell ausprobieren noch ich kommentiere mal alles

2029
01:42:35,950 --> 01:42:59,580
aus ich komme ein thema alles aus ablisch habe ich jetzt wieder mit so worauf worauf

2030
01:42:59,580 --> 01:43:07,800
sind die lauffähig also mama docker ran doch ran

2031
01:43:12,120 --> 01:43:17,100
linux support und netz ja das ist was die supporten das geht aber meistens trotzdem

2032
01:43:17,100 --> 01:43:29,010
eine ganze ecke weiter weiter zurück minimum ja ich brauch für dort 98 ich brauch ich brauch für

2033
01:43:29,010 --> 01:43:37,490
dort 88 haben wir da schon ein review haben sie nicht rein geschrieben ich weiß nicht was

2034
01:43:37,490 --> 01:43:44,310
minimum support ist für für für dort 88 alles das kann man das kann man einfach auch

2035
01:43:44,330 --> 01:44:02,490
ausprobieren können wir sagen einfach dokka ran nicht portman borgherr m und zwar ubuntu

2036
01:44:02,490 --> 01:44:11,870
2004 sollte auf jeden fall noch noch gehen das ist glaube ich kein problem 2004 so als

2037
01:44:11,870 --> 01:44:20,750
müssen wir mountain mein docker stellt ist zu lange her wie ging das jetzt pbd slash bild

2038
01:44:20,750 --> 01:44:32,980
mounted nach bild mache ich das richtig so einer warum ist meine chance so im arsch ich will ich

2039
01:44:32,980 --> 01:44:40,840
will das irgendwie kaputt meine meine vorwärts rückwärts tasten bin das testen wir jetzt mal

2040
01:44:40,840 --> 01:44:44,040
wo das worauf das läuft cd

2041
01:44:44,080 --> 01:45:04,440
bild ja vor allem champ es ich verstehe wenn ich wenn ich das kompilieren dann nimmt es die

2042
01:45:04,440 --> 01:45:13,480
c libraries von meinem host das ist ein sonderfall zu also wenn ich das normale erstellen vorne von

2043
01:45:13,480 --> 01:45:18,520
einem executable machen mit dotnet dann benutzt er die sachen die schon drin sind die quasi

2044
01:45:18,520 --> 01:45:18,880
eingebaut

2045
01:45:18,940 --> 01:45:24,700
sind wenn ich es allerdings komplett kompilieren so dass gar keine dotnet runtime mehr vorhanden ist

2046
01:45:24,700 --> 01:45:38,030
dann heißt es ich benutze die von meinem bild von meinem host system okay das ist natürlich blöd das

2047
01:45:38,030 --> 01:45:47,390
heißt im endeffekt ich müsste quasi ein docker file bauen wird heute vielleicht bis sie knapp

2048
01:45:47,390 --> 01:45:54,290
müssten docker fall bauen wo die sachen drin gebaut werden wir machen mal klickt die die

2049
01:45:54,410 --> 01:46:05,750
kurzvariante von dem docker fall und zwar wir nehmen mal ubuntu wir machen jetzt gar kein docker

2050
01:46:05,750 --> 01:46:16,710
fall ich maute das jetzt hier rein ich maute das jetzt hier rein install dotnet müssen wir jetzt hier

2051
01:46:16,710 --> 01:46:22,970
machen minus 8.0 also ich meine alter

2052
01:46:22,970 --> 01:46:23,150
alter

2053
01:46:23,150 --> 01:46:23,210
alter

2054
01:46:23,210 --> 01:46:23,290
alter

2055
01:46:23,290 --> 01:46:25,210
alter

2056
01:46:25,210 --> 01:46:25,250
alter

2057
01:46:25,250 --> 01:46:25,270
alter

2058
01:46:25,270 --> 01:46:25,290
alter

2059
01:46:25,290 --> 01:46:25,330
alter

2060
01:46:25,330 --> 01:46:25,450
alter

2061
01:46:25,450 --> 01:46:25,470
alter

2062
01:46:25,470 --> 01:46:25,590
alter

2063
01:46:25,590 --> 01:46:25,650
alter

2064
01:46:25,650 --> 01:46:25,710
alter

2065
01:46:25,710 --> 01:46:25,810
alter

2066
01:46:25,810 --> 01:46:25,890
alter

2067
01:46:26,110 --> 01:46:28,890
Es ist kein Curl installiert, ich fass es nicht.

2068
01:46:29,230 --> 01:46:31,070
Na gut, es sind minimale Container-Images.

2069
01:46:32,870 --> 01:46:34,930
Aber muss heute auch Curl drauf sein.

2070
01:46:37,310 --> 01:46:39,430
Kann man sich das so vorstellen wie Server-Side-Rendering?

2071
01:46:39,610 --> 01:46:41,830
Was? Hä? Wie jetzt?

2072
01:46:43,130 --> 01:46:44,090
Das verstehe ich nicht.

2073
01:46:47,930 --> 01:46:49,710
Doch, du kannst ein Image von Microsoft nehmen.

2074
01:46:49,790 --> 01:46:51,510
Das bringt allerdings an der Stelle nichts,

2075
01:46:52,050 --> 01:46:55,290
weil du das älteste Image, also das älteste OS nehmen musst,

2076
01:46:55,570 --> 01:46:57,870
was du mit deinem Output-Binary supporten musst.

2077
01:46:57,870 --> 01:47:00,230
Weil wir machen kein normales .NET-Bild,

2078
01:47:00,330 --> 01:47:05,310
wir machen diese experimentelle .NET 8 Komplett-Kompilierung.

2079
01:47:09,220 --> 01:47:10,220
Okay, Bild.

2080
01:47:11,140 --> 01:47:12,960
Das ist schon mal, da sieht man mal schon wieder,

2081
01:47:13,420 --> 01:47:20,410
das ist schon mal abfuck im Vergleich zu Go.

2082
01:47:20,670 --> 01:47:23,130
Mit Go hast du die Probleme schlicht und ergreifend nicht.

2083
01:47:26,030 --> 01:47:27,170
Weißt du, das ist schon mal doof.

2084
01:47:27,950 --> 01:47:29,230
Das ist schon mal nicht gut.

2085
01:47:34,470 --> 01:47:35,330
Ico, Alter.

2086
01:47:39,480 --> 01:47:40,440
Wie heißt denn der Kram?

2087
01:47:47,440 --> 01:47:48,500
Wie heißt das?

2088
01:47:53,180 --> 01:47:54,320
Hier, was ist da?

2089
01:47:55,200 --> 01:47:56,320
Das brauchen wir.

2090
01:48:02,830 --> 01:48:04,650
Go-Syntax ist halt bodenlos.

2091
01:48:05,930 --> 01:48:09,210
Ja, Go-Syntax ist, meine Güte, jetzt ist es ja mal gut hier.

2092
01:48:09,830 --> 01:48:14,290
Go-Syntax ist, aber ist schon halbwegs erträglich, geht schon.

2093
01:48:14,910 --> 01:48:17,450
Aber wirklich schön, muss ich sagen, also wirklich, wirklich warm,

2094
01:48:17,550 --> 01:48:19,650
so komplett werde ich mit der Go-Syntax auch nicht.

2095
01:48:24,360 --> 01:48:26,120
Plattform-Linker, not found.

2096
01:48:30,390 --> 01:48:32,870
Bild, wie heißt das?

2097
01:48:32,870 --> 01:48:34,870
Bild Essentials?

2098
01:48:36,110 --> 01:48:42,110
Nee, ähm, Base-Bild, ah, fuck, wie heißt denn das unter Debian?

2099
01:48:52,740 --> 01:48:54,740
Einfach, ah, okay, easy.

2100
01:48:55,600 --> 01:48:57,600
Einfach ohne S, na dann, easy.

2101
01:49:06,370 --> 01:49:17,360
Also unter Ubuntu 20.0, alles klar, natürlich, was, was sonst?

2102
01:49:19,620 --> 01:49:24,060
Ich finde, das ist ganz eindeutig, was das uns sagen soll.

2103
01:49:26,040 --> 01:49:44,590
Komplett klar, ja.

2104
01:49:47,980 --> 01:49:48,820
Also, wenn sich das noch nicht mal, ja, ja, ja, ja, ja.

2105
01:49:48,820 --> 01:49:52,320
Wenn sich das noch nicht mal gescheit unter Ubuntu 20.04 übersetzen lässt,

2106
01:49:54,920 --> 01:49:57,240
dann kannst du es ja fast, fast komplett.

2107
01:49:57,680 --> 01:50:00,300
Was hat er denn jetzt, was will er mir eigentlich sagen?

2108
01:50:06,260 --> 01:50:08,280
Bist du nicht auf V20, doch?

2109
01:50:10,360 --> 01:50:15,680
Was, .NET 7 supportet doch nicht erst ab 22.10.

2110
01:50:16,020 --> 01:50:19,720
.NET 7 geht, glaube ich, bis Ubuntu 18.04 oder so?

2111
01:50:33,070 --> 01:50:35,090
Ja, Commercial Support ist doch egal.

2112
01:50:41,010 --> 01:50:41,810
Ihr Minimum.

2113
01:50:42,310 --> 01:50:45,810
Minimum Lib C, muss man gucken.

2114
01:50:50,100 --> 01:50:56,300
Es ist bis Debian 10 und Ubuntu 18.04, siehste?

2115
01:50:56,300 --> 01:51:03,160
Die Chance, dass es auf noch älteren läuft, ist sogar gar nicht so, gar nicht so unnötig.

2116
01:51:03,520 --> 01:51:07,580
Also, was der hier für Schmerzen hat, ich habe absolut keinen plassen Schimmer.

2117
01:51:11,380 --> 01:51:15,860
Also, ich weiß auch nicht, was er für Probleme hat, ehrlich gesagt, weil,

2118
01:51:15,860 --> 01:51:19,720
also, ich habe garantiert irgendeine Abhängigkeit nicht.

2119
01:51:22,620 --> 01:51:24,040
Aber man weiß es halt nicht.

2120
01:51:25,100 --> 01:51:28,440
Ich kann es mal bilden, ich kann es mal bilden ohne Ahead of Time.

2121
01:51:31,280 --> 01:51:32,420
Ja, easy, gar kein Problem.

2122
01:51:41,480 --> 01:51:42,160
Ich habe Dependencies.

2123
01:51:43,980 --> 01:51:45,100
Dependencies, müssen wir mal kurz gucken.

2124
01:51:46,920 --> 01:51:49,140
.NET 7 Dependencies, was brauchen wir denn hier?

2125
01:51:52,550 --> 01:51:55,490
GNU C++ Library, okay, das müssen wir bestimmt alles.

2126
01:51:56,290 --> 01:51:57,750
Upt, Install, Lib.

2127
01:51:58,710 --> 01:51:59,190
Ne.

2128
01:52:01,710 --> 01:52:06,010
Das ist doch mit Build Essentials, Build Essentials bestimmt, bestimmt drauf.

2129
01:52:08,490 --> 01:52:09,250
Oder nicht?

2130
01:52:12,440 --> 01:52:13,820
Welche davon denn jetzt?

2131
01:52:16,800 --> 01:52:17,700
Welche davon?

2132
01:52:19,140 --> 01:52:20,480
Geht anscheinend nicht drauf.

2133
01:52:24,300 --> 01:52:26,180
Welche, welche davon denn jetzt überhaupt?

2134
01:52:30,150 --> 01:52:31,210
Kann man, kann man nicht einfach...

2135
01:52:32,670 --> 01:52:34,130
Gibt es da nicht so eine Standard oder so?

2136
01:52:37,920 --> 01:52:39,180
Ja, ich weiß nicht welche.

2137
01:52:41,560 --> 01:52:43,240
Ich installiere jetzt einfach alle.

2138
01:52:49,910 --> 01:52:50,030
So.

2139
01:52:50,030 --> 01:52:56,380
Was will der eigentlich alles haben, Mann?

2140
01:53:02,430 --> 01:53:03,930
Ach, hat er, stand es da drin, ne?

2141
01:53:04,770 --> 01:53:05,190
Moment.

2142
01:53:05,830 --> 01:53:07,590
Hätte ich mir vielleicht mit Output-Richtung angucken sollen.

2143
01:53:08,090 --> 01:53:08,950
Cannot find?

2144
01:53:10,210 --> 01:53:11,870
Wo zum Teufel siehst du das?

2145
01:53:12,490 --> 01:53:12,990
Das da?

2146
01:53:13,990 --> 01:53:14,890
Cannot find.

2147
01:53:15,130 --> 01:53:16,010
Wo steht da?

2148
01:53:16,330 --> 01:53:19,050
Wo steht Cannot find minus LZ?

2149
01:53:19,830 --> 01:53:20,210
Ach da!

2150
01:53:21,630 --> 01:53:21,990
Zlib.

2151
01:53:22,810 --> 01:53:26,280
Wie heißt denn das?

2152
01:53:26,820 --> 01:53:27,720
Zlib Dev?

2153
01:53:28,540 --> 01:53:28,740
Ne.

2154
01:53:28,740 --> 01:53:30,540
Warum heißt die ganze?

2155
01:53:30,560 --> 01:53:32,840
Warum heißt die ganzen Sachen immer so unintuitiv?

2156
01:53:35,720 --> 01:53:36,640
Zlib C.

2157
01:53:47,320 --> 01:53:47,880
Äh.

2158
01:53:52,100 --> 01:53:53,880
Ja, das war bestimmt das Falsche.

2159
01:53:59,560 --> 01:54:00,960
Zlib 1G.

2160
01:54:01,280 --> 01:54:02,320
Natürlich, natürlich.

2161
01:54:02,940 --> 01:54:03,740
Was, was sonst?

2162
01:54:04,440 --> 01:54:05,520
Die Header brauchen wir ja.

2163
01:54:05,740 --> 01:54:06,380
Ich geb dir Header.

2164
01:54:07,560 --> 01:54:09,200
Ah, guck mal.

2165
01:54:09,540 --> 01:54:11,040
Jetzt hat das funktioniert.

2166
01:54:11,680 --> 01:54:16,080
Also 2204 ist überhaupt kein Problem zu bilden.

2167
01:54:20,180 --> 01:54:20,520
Build.

2168
01:54:20,520 --> 01:54:20,620
Build.

2169
01:54:22,080 --> 01:54:23,060
Vm-Champ.

2170
01:54:23,180 --> 01:54:24,180
Ja.

2171
01:54:24,180 --> 01:54:25,180
Ja.

2172
01:54:25,180 --> 01:54:26,180
Okay.

2173
01:54:26,180 --> 01:54:27,180
Eine Sache.

2174
01:54:27,180 --> 01:54:28,180
Nochmal kurz gucken.

2175
01:54:28,180 --> 01:54:29,180
1604.

2176
01:54:29,180 --> 01:54:30,180
Das wird sich überhaupt nicht mehr installieren lassen, glaub ich jetzt.

2177
01:54:30,180 --> 01:54:31,180
Und das wird sich, glaub ich, gar nicht mehr installieren lassen.

2178
01:54:31,180 --> 01:54:32,180
Also ich geh nicht davon aus, dass es überhaupt läuft.

2179
01:54:32,180 --> 01:54:44,030
Okay, 1604 läuft auch.

2180
01:54:44,030 --> 01:54:45,030
Moment.

2181
01:54:45,030 --> 01:54:46,030
Dotnet.

2182
01:54:46,030 --> 01:54:52,440
Dotnet.

2183
01:54:52,440 --> 01:54:53,440
Info.

2184
01:54:53,440 --> 01:54:54,440
Ja, ja.

2185
01:54:54,440 --> 01:55:03,600
Leute.

2186
01:55:03,600 --> 01:55:04,600
Ja, ja.

2187
01:55:04,600 --> 01:55:05,600
Ja, ja.

2188
01:55:05,600 --> 01:55:09,890
Ja, ja.

2189
01:55:09,890 --> 01:55:10,890
Ja, ja.

2190
01:55:10,890 --> 01:55:11,890
Ja, ja.

2191
01:55:11,890 --> 01:55:12,890
Ja, ja.

2192
01:55:12,890 --> 01:55:13,890
Ja, ja.

2193
01:55:13,890 --> 01:55:16,650
Ja, ja.

2194
01:55:16,650 --> 01:55:17,650
Ja, ja.

2195
01:55:17,650 --> 01:55:18,650
Ja, ja.

2196
01:55:18,650 --> 01:55:19,650
Ja, ja.

2197
01:55:19,650 --> 01:55:20,650
Ja, ja.

2198
01:55:20,650 --> 01:55:21,650
Ja, ja.

2199
01:55:21,650 --> 01:55:22,650
Ja, ja.

2200
01:55:22,650 --> 01:55:25,650
Live IQ 66 hieß der Krempel oder?

2201
01:55:25,650 --> 01:55:26,650
Dev.

2202
01:55:26,650 --> 01:55:30,460
Ich hasse diesen Namen von den...

2203
01:55:30,460 --> 01:55:34,460
Das kann es doch keiner merken, man.

2204
01:55:34,460 --> 01:55:35,460
55.

2205
01:55:35,460 --> 01:55:39,220
Wir 66 waren gestern 55 war damals.

2206
01:55:39,220 --> 01:55:43,350
Obviously.

2207
01:55:43,350 --> 01:55:45,350
Und jetzt war das was.

2208
01:55:45,350 --> 01:55:50,140
Z clip.

2209
01:55:50,140 --> 01:55:56,410
ist Okay, dass das das heißt einfach immer gleich.

2210
01:55:56,410 --> 01:55:58,810
Das ist richtig.

2211
01:55:58,810 --> 01:56:00,550
irit und lies dass sie alleine.

2212
01:56:00,550 --> 01:56:14,840
cd bild okay mal gucken wir beim abkacken zu plattform linke ach so ja

2213
01:56:14,840 --> 01:56:20,520
ab install install bild essentials deswegen macht man sich dann

2214
01:56:20,520 --> 01:56:24,060
normalerweise docker fall hast du das problem nicht und muss sich von hand

2215
01:56:24,060 --> 01:56:40,920
machen in general okay sie kommen das läuft sogar das läuft sogar auf ubuntu

2216
01:56:40,920 --> 01:56:45,640
16 04 noch hier das ist dass das doch gar kein problem

2217
01:56:45,640 --> 01:56:52,600
das ist doch gar kein ding also 16 04 ist mir alt genug

2218
01:56:52,600 --> 01:57:08,860
sage ich euch ganz ehrlich 1,9 1,9 mb library und ich meine das ist über sechs

2219
01:57:08,860 --> 01:57:12,780
jahre alt des linux das ist doch schon das doch in ordnung wo wir noch mal

2220
01:57:12,780 --> 01:57:16,920
just for fun okay wir machen jetzt wir machen jetzt als letzte amts handlung

2221
01:57:16,920 --> 01:57:21,880
heute wie überspringen jetzt 16 04 wir machen jetzt 12

2222
01:57:21,880 --> 01:57:33,770
4 12 04 okay wir wissen jetzt ja langsam wie es geht ab update damals gab

2223
01:57:33,770 --> 01:57:39,140
es noch nicht mal ab

2224
01:57:40,680 --> 01:57:47,220
get update das ist so alt oh fuck leute dafür gibt es noch nicht mal mehr

2225
01:57:47,220 --> 01:57:55,150
packages okay wir können das nicht verwenden die

2226
01:57:55,150 --> 01:58:05,170
mirrors sind offline okay keine chance okay 14 04 kommt

2227
01:58:05,170 --> 01:58:19,890
ist 14 russen mir jetzt genau okay da gab es ab schon jetzt halte ich schaue

2228
01:58:19,890 --> 01:58:23,270
mal kurz ob das funst

2229
01:58:23,590 --> 01:58:46,540
ok download klappt noch ab install das da und bild essential jetzt will mal

2230
01:58:46,540 --> 01:58:51,640
gespannt ob der bild klappt ich glaube ich glaube ja nicht ja genau wunderbar

2231
01:58:51,640 --> 01:58:52,360
wunderbar

2232
01:58:52,480 --> 01:58:53,400
Excellent, excellent.

2233
01:58:54,220 --> 01:58:55,060
Upt-Search.

2234
01:58:57,600 --> 01:58:58,880
Wie hieß das Ding damals?

2235
01:58:59,100 --> 01:59:00,840
Upt-Install. Ah, 52.

2236
01:59:01,140 --> 01:59:02,300
52 sind wir jetzt.

2237
01:59:02,880 --> 01:59:03,620
Es wird immer älter.

2238
01:59:06,600 --> 01:59:08,100
So, und jetzt bauen wir das Ganze mal.

2239
01:59:08,260 --> 01:59:08,920
CD-Build.

2240
01:59:10,680 --> 01:59:10,860
Oh.

2241
01:59:12,660 --> 01:59:14,040
Cannot get required symbol.

2242
01:59:14,120 --> 01:59:14,680
SSL-Z.

2243
01:59:15,280 --> 01:59:17,980
Z-Alpen-Protoss. Alles klar.

2244
01:59:18,220 --> 01:59:19,860
Die Alpen-Protoss sind am Start.

2245
01:59:21,080 --> 01:59:22,860
Wusste gar nicht, dass die auch in den Alpen sind.

2246
01:59:22,860 --> 01:59:28,650
Die Alpen-Protoss machen nicht mal mit.

2247
01:59:29,470 --> 01:59:30,210
Okay, also.

2248
01:59:30,530 --> 01:59:33,490
Ubuntu 14.04 funktioniert nicht mehr.

2249
01:59:33,650 --> 01:59:34,290
Das ist zu alt.

2250
01:59:38,360 --> 01:59:39,880
Man könnte jetzt sicherlich rumbasteln

2251
01:59:39,880 --> 01:59:41,840
und SSL-Support deaktivieren

2252
01:59:41,840 --> 01:59:43,120
und solche Geschichten, aber

2253
01:59:43,120 --> 01:59:44,180
scheiß drauf.

2254
01:59:45,460 --> 01:59:46,580
Also das funktioniert nicht mehr.

2255
01:59:46,940 --> 01:59:49,020
16.04 ist das Letzte, wo es drauf läuft.

2256
01:59:49,300 --> 01:59:51,800
Obwohl der offizielle Support schon

2257
01:59:51,800 --> 01:59:53,900
bei 18.04 Plus ist.

2258
01:59:59,300 --> 02:00:00,620
Also finde ich okay.

2259
02:00:02,300 --> 02:00:02,860
Offiziellen

2260
02:00:02,860 --> 02:00:04,500
Support auf 18.04 stellen

2261
02:00:04,500 --> 02:00:05,740
und

2262
02:00:05,740 --> 02:00:08,760
in Wirklichkeit noch 16.04

2263
02:00:08,760 --> 02:00:09,340
supporten.

2264
02:00:09,920 --> 02:00:12,300
Beziehungsweise lauffähig sein.

2265
02:00:12,440 --> 02:00:13,580
Support wird es ja nicht.

2266
02:00:14,720 --> 02:00:16,780
Ja, nice. Also ich gehe mal

2267
02:00:16,780 --> 02:00:18,560
davon aus, mit einem gebauten Binary,

2268
02:00:18,980 --> 02:00:20,300
was so alt ist,

2269
02:00:23,960 --> 02:00:24,700
dann geht das schon.

2270
02:00:30,170 --> 02:00:31,370
Guck, das läuft auch hier drauf.

2271
02:00:32,510 --> 02:00:34,070
Kann ja mehr oder weniger Zufall sein.

2272
02:00:34,070 --> 02:00:35,770
Aber das ist gut.

2273
02:00:36,030 --> 02:00:36,550
Das ist gut.

2274
02:00:37,550 --> 02:00:40,010
Dann sind die Binarys nämlich tatsächlich auch,

2275
02:00:40,030 --> 02:00:43,500
lauffähig

2276
02:00:43,500 --> 02:00:45,340
auf den wichtigsten Systemen.

2277
02:00:46,720 --> 02:00:47,140
Ich meine,

2278
02:00:48,760 --> 02:00:50,020
braucht man wirklich was,

2279
02:00:51,820 --> 02:00:53,680
was eine C-Library

2280
02:00:53,680 --> 02:00:54,380
voraussetzt,

2281
02:00:55,340 --> 02:00:57,020
die älter ist als

2282
02:00:57,020 --> 02:00:59,340
sechs Jahre rausgekommen,

2283
02:00:59,980 --> 02:01:01,700
ist die ja wahrscheinlich noch früher.

2284
02:01:03,460 --> 02:01:04,680
Also die, guck mal mal,

2285
02:01:05,100 --> 02:01:07,160
Ubuntu 16.04

2286
02:01:07,160 --> 02:01:08,640
LibC Version.

2287
02:01:15,300 --> 02:01:15,740
Okay.

2288
02:01:15,740 --> 02:01:15,820
Okay.

2289
02:01:16,940 --> 02:01:25,820
LibC Release

2290
02:01:25,820 --> 02:01:26,800
Date

2291
02:01:26,800 --> 02:01:29,600
2016.

2292
02:01:33,530 --> 02:01:34,990
Ja, sieben Jahre alt

2293
02:01:34,990 --> 02:01:35,870
ist das jetzt genau.

2294
02:01:40,500 --> 02:01:41,420
Also ich würde sagen,

2295
02:01:42,480 --> 02:01:44,000
sieben Jahre alte C-Library,

2296
02:01:44,140 --> 02:01:45,080
damit läuft es noch.

2297
02:01:45,960 --> 02:01:48,300
Das ist zwar nicht so krass, wie mit

2298
02:01:48,300 --> 02:01:50,460
Go. Ich meine, Go-Binarys,

2299
02:01:50,640 --> 02:01:51,780
also alles, was

2300
02:01:51,780 --> 02:01:54,480
Go-Only-Sachen verwendet, wohlgemerkt

2301
02:01:54,480 --> 02:01:56,580
nur, also mit irgendwelchen Abhängigkeiten

2302
02:01:56,580 --> 02:01:58,260
drumherum hast du dann auch wieder andere Probleme.

2303
02:02:03,770 --> 02:02:04,170
Auf der,

2304
02:02:04,290 --> 02:02:06,050
auf der Seite wurde das sogar erwähnt.

2305
02:02:06,250 --> 02:02:07,610
Weißt du, lass uns mal mal schnell gucken.

2306
02:02:09,110 --> 02:02:11,070
Aber das ist, das ist, das ist nicht so krass wie Go.

2307
02:02:11,190 --> 02:02:12,890
Mein Go-Binarys sind ja lauffähig

2308
02:02:12,890 --> 02:02:14,190
bis zurück zu

2309
02:02:14,190 --> 02:02:16,730
Kernel 2.6.8.30

2310
02:02:16,730 --> 02:02:18,510
oder sowas. Du kannst ja quasi

2311
02:02:18,510 --> 02:02:20,610
aktuelle Go-Programme auf

2312
02:02:20,610 --> 02:02:22,310
Linux-System laufen lassen von

2313
02:02:22,310 --> 02:02:24,310
vor 20 Jahren oder so.

2314
02:02:24,310 --> 02:02:27,790
Ja, nicht ganz, aber von vor

2315
02:02:27,790 --> 02:02:29,190
15 Jahren oder so.

2316
02:02:33,180 --> 02:02:33,980
Hier steht nix.

2317
02:02:34,880 --> 02:02:39,800
Ups. Hier steht nix von

2318
02:02:39,800 --> 02:02:47,450
Ach, hätte ich das,

2319
02:02:47,450 --> 02:02:49,450
hätte ich das mal gewusst, da hätte ich das einfach copy-pasten können.

2320
02:02:49,450 --> 02:03:00,060
Ja, Go,

2321
02:03:00,060 --> 02:03:02,060
Go ist lauffähig auf

2322
02:03:02,060 --> 02:03:04,060
Linux-Systemen, die älter sind als Go selbst.

2323
02:03:04,060 --> 02:03:06,060
Ja.

2324
02:03:06,060 --> 02:03:08,060
Also hier steht nichts von 16.04.

2325
02:03:08,060 --> 02:03:12,520
Auf der, auf der Tabelle der

2326
02:03:12,520 --> 02:03:21,980
Linux-Version. Hier?

2327
02:03:21,980 --> 02:03:23,980
Äh, 18.04 steht da drin.

2328
02:03:25,980 --> 02:03:27,980
16. Ach, hier.

2329
02:03:27,980 --> 02:03:29,980
Ach, das ist die,

2330
02:03:29,980 --> 02:03:39,180
ah, GLIB C2

2331
02:03:39,180 --> 02:03:41,180
16. Ja, gut.

2332
02:03:41,180 --> 02:03:43,180
Ähm, das passt ja.

2333
02:03:43,180 --> 02:03:45,180
Wir haben ja 26, äh,

2334
02:03:45,180 --> 02:03:47,180
223 bei, bei Ubuntu

2335
02:03:47,180 --> 02:03:49,180
16.04 gehabt.

2336
02:03:49,180 --> 02:03:54,280
Aber trotzdem, das ist,

2337
02:03:54,280 --> 02:03:56,280
das ist alt, das ist alt genug.

2338
02:03:58,280 --> 02:04:00,280
Kann man nix sagen. Also ich glaub,

2339
02:04:00,280 --> 02:04:02,280
das ist echt ganz gute Alternative, wenn man

2340
02:04:02,280 --> 02:04:04,280
Bock hat, die Sachen in C-Sharp zu programmieren.

2341
02:04:06,280 --> 02:04:08,280
Und die Libraries und alles das

2342
02:04:08,280 --> 02:04:10,280
drumherum gescheit funktioniert

2343
02:04:10,280 --> 02:04:12,280
mit dem, wir haben ja heute nicht so

2344
02:04:12,280 --> 02:04:14,280
viele eingebunden, also Sp-

2345
02:04:14,280 --> 02:04:16,280
Reflection kannst du dir eh wahrscheinlich

2346
02:04:16,280 --> 02:04:18,280
abschminken mit, mit irgendwelchen

2347
02:04:18,280 --> 02:04:20,280
Native-Kompilierungssachen.

2348
02:04:20,280 --> 02:04:22,280
Aber trotzdem, das ist cool, dass das

2349
02:04:22,280 --> 02:04:28,410
geht. Okay, Leute,

2350
02:04:28,410 --> 02:04:30,410
macht's gut. Ich geh jetzt pennen.

2351
02:04:30,410 --> 02:04:32,410
Bis denn. See you.
