1
00:00:48,690 --> 00:01:00,560
Was ist mit meinem Startmenü?

2
00:01:04,080 --> 00:01:05,780
Leute, mein Startmenü ist kaputt.

3
00:01:07,400 --> 00:01:08,800
Mein Startmenü ist broken.

4
00:01:10,460 --> 00:01:11,860
Wie kriege ich das wieder gefixt?

5
00:01:18,030 --> 00:01:19,450
Alter, mein Startmenü ist kaputt.

6
00:01:21,960 --> 00:01:22,440
Keck, wait.

7
00:01:28,380 --> 00:01:29,500
Mach schon mal die VM an.

8
00:01:29,500 --> 00:01:29,980
Vielleicht

9
00:01:29,980 --> 00:01:33,720
fixt sich das gleich von allein.

10
00:01:35,160 --> 00:01:36,120
Hoffe ich mal.

11
00:01:36,120 --> 00:01:40,000
Mein fucking Startmenü ist kaputt, man.

12
00:01:46,520 --> 00:01:46,760
Chat,

13
00:01:46,840 --> 00:01:48,280
habt ihr schon mal ein kaputtes Startmenü?

14
00:01:48,420 --> 00:01:50,240
Dann mach ich mal ein bisschen was entspannteres machen.

15
00:02:01,040 --> 00:02:02,540
Okay, Leute, mein Startmenü ist kaputt.

16
00:02:02,600 --> 00:02:04,800
Ich kann nix mal starten und nix mal reintippen.

17
00:02:07,490 --> 00:02:08,450
Ja, unter Linux

18
00:02:08,450 --> 00:02:10,550
ist das kein Problem. Unter Linux geht das einfach.

19
00:02:10,750 --> 00:02:10,850
Guck.

20
00:02:13,410 --> 00:02:14,670
It's, it's.

21
00:02:15,830 --> 00:02:16,770
Unter Linux wird es einfach

22
00:02:16,770 --> 00:02:17,310
funktionieren.

23
00:02:18,390 --> 00:02:20,350
Aber wie kriege ich das jetzt wieder gefixt?

24
00:02:20,450 --> 00:02:22,030
Go Wizard, danke schön für den Sub.

25
00:02:22,370 --> 00:02:24,470
Ein bisschen Go machen. Alter, was ist mit

26
00:02:24,470 --> 00:02:26,270
meinem Startmenü los? Ein bisschen Go machen

27
00:02:26,270 --> 00:02:27,690
wir heute auch. Okay.

28
00:02:28,370 --> 00:02:29,190
Task Manager.

29
00:02:30,150 --> 00:02:32,390
Kann man Explorer irgendwie abschießen oder so?

30
00:02:33,330 --> 00:02:34,270
Okay, Explorer ist

31
00:02:34,270 --> 00:02:37,530
weg. Hier.

32
00:02:38,130 --> 00:02:39,170
YOLO Inject.

33
00:02:40,270 --> 00:02:42,090
Klingt, als hätte ich irgendein Virus. Ist es aber nicht.

34
00:02:42,750 --> 00:02:44,010
Das ist so ein Maushighlighter.

35
00:02:49,060 --> 00:02:49,320
Hey,

36
00:02:49,320 --> 00:02:50,460
es geht wieder. Nice.

37
00:02:51,140 --> 00:02:51,280
Ja.

38
00:02:55,640 --> 00:02:57,940
Super. Gut, dass es im Hintergrund läuft.

39
00:02:59,180 --> 00:02:59,540
Aber.

40
00:03:02,180 --> 00:03:16,080
Guck hier. YOLO Inject.

41
00:03:20,640 --> 00:03:21,760
Das gehört zu

42
00:03:21,760 --> 00:03:23,180
YOLO Maus.

43
00:03:24,340 --> 00:03:25,720
Damit kann man, damit kann man

44
00:03:25,720 --> 00:03:27,520
seinen Mauszeiger beispielsweise

45
00:03:27,520 --> 00:03:29,820
in allen MMOs, wo das

46
00:03:29,820 --> 00:03:32,020
heute viel zu klein ist, alles in der Mauszeiger zu klein

47
00:03:32,020 --> 00:03:33,800
groß machen und rot färben und sowas.

48
00:03:34,480 --> 00:03:35,260
Ganz praktisch.

49
00:03:37,380 --> 00:03:37,840
Okay, mein

50
00:03:37,840 --> 00:03:39,980
Startmenü funzt wieder. Das ist schon mal nice.

51
00:03:41,220 --> 00:03:41,860
Jetzt ist es auch

52
00:03:41,860 --> 00:03:43,880
blazingly fast, so wie das

53
00:03:43,880 --> 00:03:44,760
heute sein muss.

54
00:03:55,560 --> 00:03:55,920
Okay.

55
00:03:56,220 --> 00:03:57,640
Wir machen mal Package-Updates in der

56
00:03:57,640 --> 00:03:59,940
VRM. Dann zeige ich euch, was wir heute machen.

57
00:04:00,040 --> 00:04:01,080
Also wir machen dort weiter.

58
00:04:01,940 --> 00:04:03,660
Was will der denn? Wo wir das letzte Mal aufgehört haben.

59
00:04:04,220 --> 00:04:06,060
Was möchte der hier denn jetzt? FFM-Pack.

60
00:04:06,120 --> 00:04:07,600
Ja, okay. Gib ihm. Jawohl.

61
00:04:07,780 --> 00:04:09,020
Halbes Internet runterladen.

62
00:04:10,200 --> 00:04:11,400
Ach, Qt 6 ist raus.

63
00:04:11,840 --> 00:04:14,180
Ich habe meine Zeit lang wirklich sehr interessiert

64
00:04:14,180 --> 00:04:15,420
und fand das sehr spannend,

65
00:04:15,980 --> 00:04:17,900
die neuen Qt-Versionen verfolgt, aber ich habe

66
00:04:17,900 --> 00:04:19,160
schon ewig nicht mehr reingeguckt.

67
00:04:19,640 --> 00:04:21,740
Die hatten tatsächlich jede Version irgendwas Cooles drin,

68
00:04:21,860 --> 00:04:23,280
auf was man sich freuen konnte.

69
00:04:23,780 --> 00:04:25,600
Ich frage mich aber, wie groß

70
00:04:25,600 --> 00:04:27,560
die Verbreitung da in der aktuellen Zeit

71
00:04:27,560 --> 00:04:28,000
noch ist.

72
00:04:29,260 --> 00:04:31,920
Ich meine, von allen Cross-Plattform-Frameworks

73
00:04:31,920 --> 00:04:33,340
auf dem Desktop wird das

74
00:04:33,340 --> 00:04:35,160
wahrscheinlich eines der weitesten

75
00:04:35,160 --> 00:04:36,680
verbreitetsten sein.

76
00:04:37,980 --> 00:04:39,520
Jetzt bei Elektron und so außen

77
00:04:39,520 --> 00:04:41,440
vor, aber wie weit die

78
00:04:41,440 --> 00:04:43,360
Verbreitung insgesamt ist, weiß nicht.

79
00:04:43,680 --> 00:04:45,060
Weil das ist halt hauptsächlich C++.

80
00:04:45,540 --> 00:04:47,320
Man kann es aber ein bisschen peisend machen, aber letztendlich

81
00:04:47,320 --> 00:04:49,440
kommt es bei Qt und C++ früher oder

82
00:04:49,440 --> 00:04:51,380
später nicht rum und C++ ist halt einfach

83
00:04:51,380 --> 00:04:52,280
der Sack.

84
00:04:53,920 --> 00:04:55,380
Schon irgendwas Spannendes

85
00:04:55,600 --> 00:04:57,040
von Black Friday gefunden.

86
00:04:57,540 --> 00:04:59,700
Ich habe ehrlich gesagt auch gar nicht groß geguckt.

87
00:05:00,360 --> 00:05:04,330
Ich habe, ich habe mal nach

88
00:05:04,330 --> 00:05:06,550
SSDs geguckt, weil SSDs kann man nie

89
00:05:06,570 --> 00:05:07,330
nie genug haben.

90
00:05:07,330 --> 00:05:07,590
Ja,

91
00:05:08,930 --> 00:05:11,290
ach, guck mal, Inhalationsgerät

92
00:05:11,310 --> 00:05:13,370
Bäm, wie es

93
00:05:13,370 --> 00:05:15,650
mir einfach, wie es mir einfach Copium-Gerät

94
00:05:15,650 --> 00:05:16,550
vorschlägt hier.

95
00:05:20,540 --> 00:05:22,800
Ja, ja, die Kinder sind voll glücklich,

96
00:05:22,820 --> 00:05:24,260
wenn ihnen die Mama das aufsetzt.

97
00:05:26,360 --> 00:05:27,280
Copium-Time.

98
00:05:34,650 --> 00:05:36,570
Ansonsten es gibt halt nur Schrott, das gucken wir.

99
00:05:36,850 --> 00:05:38,970
Vielleicht, vielleicht gucke ich mir

100
00:05:38,970 --> 00:05:39,130
nachher mal.

101
00:05:39,130 --> 00:05:39,270
Vielleicht, vielleicht gucke ich mir nachher mal.

102
00:05:39,290 --> 00:05:42,150
Mal ne Runde an, wenn ich, wenn ich keinen Bock mehr auf Rast hab,

103
00:05:42,150 --> 00:05:43,470
wenn mich Rast zu sehr aufregt.

104
00:05:44,230 --> 00:05:45,110
Woow, woow, woow, woow.

105
00:05:45,110 --> 00:05:46,910
Ganz ruhig, ganz ruhig.

106
00:05:49,070 --> 00:05:50,950
Was für ein Smartphone verwendest du eigentlich?

107
00:05:51,330 --> 00:05:51,910
Ein iPhone.

108
00:05:55,320 --> 00:05:57,440
Also, um genau zu sein, zwei iPhones.

109
00:05:58,400 --> 00:05:59,360
Ein iPhone

110
00:05:59,360 --> 00:06:01,660
14, ist 15

111
00:06:01,660 --> 00:06:02,220
das aktuelle?

112
00:06:04,280 --> 00:06:05,520
Dann ist, ist, also

113
00:06:05,520 --> 00:06:07,400
wenn 15 das ganz aktuelle Top, also

114
00:06:07,400 --> 00:06:09,340
der erst letztens releast ist, dann hab ich ein iPhone

115
00:06:09,340 --> 00:06:11,500
14 Pro, aber nicht Pro Max,

116
00:06:11,500 --> 00:06:18,520
weil mir das zu groß ist das mit 120 hertz display und dann habe ich von der firma habe

117
00:06:18,520 --> 00:06:22,960
ich noch ein iphone 12 aber benutzen tue ich eigentlich fast ausschließlich wenn ich was

118
00:06:22,960 --> 00:06:32,020
mache außer ich muss für die firma irgendwas gucken das iphone 14 wir haben erstaunlich viel

119
00:06:32,020 --> 00:06:49,140
apple zeug wir haben drei ipads dreieinhalb iphones im einsatz hat zwei personen 0w aber

120
00:06:49,140 --> 00:06:54,420
android-geräte habe ich auch noch ein paar ich sage halt immer es ist sinnvoll das zu

121
00:06:54,420 --> 00:07:02,520
verwenden wo das jeweilige system seine stärken hat ganz ehrlich wenn das iphone

122
00:07:02,520 --> 00:07:06,580
2 11 gut funktioniert und wie schnell genug ist warum feature

123
00:07:06,580 --> 00:07:06,700
management

124
00:07:06,720 --> 00:07:12,600
tut sich doch die letzten jahre über eh nicht viel guck mal ich mein wenn das meiste worüber

125
00:07:12,600 --> 00:07:17,580
du ausflippen kannst irgendein komischer neuer side button ist das sagt doch schon mal alles

126
00:07:17,580 --> 00:07:23,320
daraus wie sinnvoll das upgrade ist ich meine ich hätte den auch gern den neuen action button aber

127
00:07:23,320 --> 00:07:35,460
es ist wirklich nicht wert da irgendwie 1000 plus euro auszugeben und 70% batterie ja gut wenn die

128
00:07:35,460 --> 00:07:43,140
batterie nachlässt aber muss das ding jeden tag aufladen insofern ob das jetzt bei 20 prozent

129
00:07:43,140 --> 00:07:57,700
oder 30 prozent neu auslässt mann macht ja auch kein großer unterschied so alles Faculty silvier

130
00:07:57,700 --> 00:08:02,910
renault

131
00:08:02,910 --> 00:08:09,180
sozusagen

132
00:08:09,180 --> 00:08:10,620
interaktion

133
00:08:10,620 --> 00:08:12,820
aus

134
00:08:12,820 --> 00:08:20,540
hacken

135
00:08:20,540 --> 00:08:26,960
zeug

136
00:08:26,960 --> 00:08:28,060
regular

137
00:08:28,060 --> 00:08:28,960
zeska

138
00:08:28,960 --> 00:08:30,060
raum

139
00:08:30,060 --> 00:08:30,980
3 2 1

140
00:08:30,980 --> 00:08:31,020
uzzit

141
00:08:31,060 --> 00:08:36,340
wie mein i3 und es wird mir auf den keks gehen weil es kein i3 ist also insofern macht für mich

142
00:08:36,340 --> 00:08:43,660
wenig sinn ja das kommt noch dazu wobei wobei das ja nun wirklich irgendwo noch gewöhnungs aber das

143
00:08:43,660 --> 00:08:54,460
würde mir auch auf den keks aber das ist das ist gewöhnungs wenn du einwendungszweck für hast warum

144
00:08:54,460 --> 00:09:00,880
nicht weil ich muss ich muss kann ein bisschen husten weil also keine keine sorge nicht monka

145
00:09:00,880 --> 00:09:07,060
corona oder sowas in der richtung sondern ich habe hier direkt davor gerade noch meine runde

146
00:09:07,060 --> 00:09:14,380
auf dem fahrrad gefahren also nicht real life sondern trainer daheim spiel zu spät jetzt gewesen

147
00:09:14,380 --> 00:09:19,360
im dunklen kein bock außerdem ist mein fahrrad immer noch kaputt das kann ich fahren gerade die

148
00:09:19,360 --> 00:09:31,200
versicherung hat übrigens immer noch nicht bezahlt das fahrrad ich habe zum ersten mal versucht hat

149
00:09:31,200 --> 00:09:38,100
er jetzt eigentlich alles geupdatet ich habe zum ersten mal versucht auf zwift mit den 2 watt pro

150
00:09:38,100 --> 00:09:41,580
kilogramm mit der 2 watt pro kilogramm gruppe mit

151
00:09:41,580 --> 00:09:50,940
zu fahren da das ist echt gar nicht so ohne über 45 minuten für 50 minuten das ist ein das sind

152
00:09:50,940 --> 00:10:00,420
das sind absolute einsteigerwerte jeder kack newt ist auf dem fahrrad besser als ich aber ich habe

153
00:10:00,420 --> 00:10:08,340
angefangen mit mit ich glaube irgendwie 1,1 bis 1,5 watt pro kilogramm und habe sie letzten paar

154
00:10:08,340 --> 00:10:13,080
wochen richtig reingetreten jeden zweiten dritten tag da bin ich schon mal zwei wacht pro kilogramm

155
00:10:13,080 --> 00:10:14,280
über ein 2 watt pro kilogramm

156
00:10:14,560 --> 00:10:27,720
heißt bei mir auch durchgehend 45 minuten 180 watt also da geht was ein rechner spielt immer

157
00:10:27,720 --> 00:10:39,610
ab wenn ich wsl starte komischerweise ist erst seitdem ich meine ram vielleicht hast du kaputten

158
00:10:39,610 --> 00:10:49,150
ramsig erwischt also rechner abschmieren ist so ein ganz klassisches zeichen von ram error es

159
00:10:49,150 --> 00:10:57,190
gibt es gibt eigentlich zwei sachen cpu übertaktet und zu heiß und rahmenprobleme das sind so dick

160
00:10:57,190 --> 00:11:03,980
die klassiker schlechthin warum der rechner komplett abkackt nur wenn wsl statt das ist

161
00:11:03,980 --> 00:11:09,260
in der tat sehr merkwürdig da würde ich mir mal genauer die fehlermeldung angucken was er sagt

162
00:11:09,260 --> 00:11:15,980
ob man da irgendwie auf wsl hindeuten kann ich meine wsl startet in der vm was auch immer das

163
00:11:15,980 --> 00:11:20,480
sagt aber ich kenne mich nicht

164
00:11:20,780 --> 00:11:29,820
die syntax ist grauenhaft guck dir das an man hier grauenhafte syntax leute lul weh guckt euch

165
00:11:29,820 --> 00:11:34,760
guckt euch das hier an alter ich mein und das ist jetzt hier das ist noch hübsches das ist wirklich

166
00:11:34,760 --> 00:11:40,700
noch relativ hübsches rust was wir gemacht haben hier das geht deutlich schlimmer glaubt mir

167
00:11:40,700 --> 00:11:48,190
deutlich schlimmer ja also was ich mir überlegt habe für heute wir müssen gleich noch mal fünf

168
00:11:48,190 --> 00:11:54,050
minuten schwätzen bevor es richtig los geht aber ich zeige euch schon mal was heute ansteht

169
00:11:54,430 --> 00:12:16,200
und das ist ja auch schon mal so die kombination und ja da taktet sich dann runter aber gerade beim

170
00:12:16,200 --> 00:12:21,580
übertakten wenn die cpu auch an den maximalen werten kratzt wird es dann schnell instabil im

171
00:12:21,580 --> 00:12:28,360
vergleich zu wenn der auer um die ecke kommt mit flüssigstickstoff und das ding minus 150 grad ist

172
00:12:28,360 --> 00:12:32,200
was für ein trainer ich habe ich habe ein

173
00:12:32,520 --> 00:12:44,220
kicker core ohne ohne lüftung und ohne dieses hoch und runter fahrdingen einfach so ein ganz

174
00:12:44,220 --> 00:12:52,310
normal die meine dinger sind teuer genug das einzige was ich gemacht habe für mein setup

175
00:12:52,310 --> 00:12:59,310
hier daheim ist logischerweise mein fahrrad dran gemacht ja drauf drauf drauf gemacht also da muss

176
00:12:59,310 --> 00:13:05,430
man die kette drüber machen und habe das auf eine matte gestellt dass wenn ich schwitze dass ich nicht

177
00:13:05,690 --> 00:13:10,430
auf dem fußboden schwitze und ein handtuch hängt neben beim lenker das ist eigentlich mein

178
00:13:10,430 --> 00:13:18,290
gesamtes setup und zwölft habe ich auf dem ipad laufen was neben dran steht auf meinem lenker

179
00:13:18,290 --> 00:13:24,290
habe ich meinen iphone drauf das brauche ich da lasse ich ein bisschen musik laufen und die

180
00:13:24,290 --> 00:13:29,270
companion app um es besser sehen zu können aber meistens auch im youtube und musik und sowas laufen

181
00:13:29,270 --> 00:13:34,910
zu lassen einfach um zu gucken und mein garmin vorne drauf habe ich auch gepaart mit dem mit dem

182
00:13:35,690 --> 00:13:41,090
app oder schwitzt fahre ich hin und dann kann ich nämlich für die app aufzeichnen weiß ich

183
00:13:41,090 --> 00:13:47,170
gefahren bin und ich finde die an sich auf dem garmin viel angenehmer als auf der companion

184
00:13:47,170 --> 00:13:52,870
app oder in svt selbst zumal man bei garmen mittlerweile ziemlich gut gibt es ein indoor

185
00:13:52,870 --> 00:14:04,120
cycling profil und wenn man den gepaart hat mit seinem trainer ist es eigentlich recht

186
00:14:04,120 --> 00:14:09,060
also windows windows support bin ich echt überfragt als freak danke für den sub

187
00:14:09,060 --> 00:14:10,360
power

188
00:14:10,360 --> 00:14:11,360
subscription

189
00:14:11,360 --> 00:14:29,470
kann ich nur sagen sehr sehr und und moment ja also ich habe schon mal ein bisschen vorgebastelt

190
00:14:29,470 --> 00:14:40,590
also ich habe das klonen uns das repo jetzt von von schritt ab nur limit xo danke für den

191
00:14:40,590 --> 00:14:45,450
sub ich habe schon ein bisschen was vorgebastelt im prinzip ist es das gleiche was wir auch gebaut

192
00:14:45,450 --> 00:14:51,870
haben nur ich habe ich habe mir das folgendermaßen überlegt bevor wir heute mit rust anfangen und es

193
00:14:51,870 --> 00:14:56,610
funktioniert irgendwas nicht und ich habe gar keine ahnung wie ich am besten mache habe ich

194
00:14:56,610 --> 00:15:03,870
die original web rtc library genommen und das ganze kurz in go gebaut und wir bauen quasi das

195
00:15:03,870 --> 00:15:08,450
was ich in go gebaut habe nach in rust dann muss ich nicht so viel überlegen wie man es jetzt am

196
00:15:08,450 --> 00:15:16,580
besten macht sondern kann mich hauptsächlich auf auf rast geduld konzentrieren deswegen wenn wir

197
00:15:16,580 --> 00:15:17,640
einfach mal den ganzen camp lösen

198
00:15:17,660 --> 00:15:32,530
dem was letzte gemalt wobei kommt wir löschen den nicht wir wir benennen den mal um und jetzt

199
00:15:32,530 --> 00:15:38,050
klären wir das repo das übrigens public das könnt ihr auch klonen aber ich glaube nicht

200
00:15:38,050 --> 00:15:49,710
dass dieses projekt irgendjemand was bringt der hat das auch letztens gemacht was ist das ja den

201
00:15:49,710 --> 00:15:57,250
den kenne ich gucke ich nicht regelmäßig aber sagt mir was sagt mir was ich überlege gerade was also

202
00:15:58,350 --> 00:16:04,900
Was sind so meine Lieblingsprogrammier-Channels so auf YouTube?

203
00:16:05,300 --> 00:16:07,400
Also .NET gucke ich Nick Chapsas gerne.

204
00:16:08,300 --> 00:16:10,120
Da merkst du auch, dass der Erfahrung hat.

205
00:16:10,500 --> 00:16:13,160
Auch wenn er mir teilweise ein bisschen zu viel benchmarkt.

206
00:16:13,440 --> 00:16:17,780
Der hat ja teilweise Zeiten gehabt, da war jedes zweite Video, ich benchmarke jenes und ich benchmarke das.

207
00:16:18,980 --> 00:16:25,560
Dann gucke ich mir gerne die NDC-Konferenztalks an, wenn denn mal was Gescheites dabei ist.

208
00:16:25,560 --> 00:16:35,500
In letzter Zeit war das oftmals der hundertste Aufguss vom gleichen Talk oder irgendwas, was mich, zumindest wenn es um Technik-Themen geht, echt nicht interessiert.

209
00:16:39,910 --> 00:16:45,970
Und ansonsten, ich habe saumäßig viele subscribed und gucke.

210
00:16:47,970 --> 00:16:54,950
Ich würde mal fast sagen, ich kenne die meisten Programmier-Influencer-Channels, Software-Entwicklung-Sachen auf YouTube.

211
00:16:55,550 --> 00:16:58,170
Also deutschsprachig und vor allem englischsprachig.

212
00:17:02,790 --> 00:17:06,870
Mir fallen jetzt aber so spontan, wenn ihr den Namen sagt, kann ich euch direkt sagen, ob ich den kenne oder nicht.

213
00:17:07,270 --> 00:17:10,250
Mir fallen jetzt aber so aus dem Kopf gar nicht mal so viele ein.

214
00:17:13,370 --> 00:17:15,050
Ein paar JavaScript-Leute gucke ich noch.

215
00:17:15,050 --> 00:17:19,670
Wen ich auch gerne gucke, ist dieser CSS-Wizard-Typ.

216
00:17:19,730 --> 00:17:24,050
Der heißt nicht CSS-Wizard, aber der macht immer Magic mit CSS.

217
00:17:24,630 --> 00:17:26,250
Kevin irgendwas heißt er, glaube ich.

218
00:17:28,350 --> 00:17:30,170
Den gucke ich teilweise ganz gern.

219
00:17:30,530 --> 00:17:31,950
Da lernt man neues CSS-Zeug.

220
00:17:35,520 --> 00:17:37,060
Ich weiß nicht, ja, kann sein.

221
00:17:37,980 --> 00:17:47,000
Wen ich auch immer gerne geguckt habe, ist Academia Mind oder so früher, aber die machen wenig Videos in letzter Zeit.

222
00:17:47,480 --> 00:17:51,420
Und wenn dann über Angular, und Angular ist halt wirklich Massive Weird Champ.

223
00:17:53,160 --> 00:17:55,600
Also, nein, nein, nein, den meine ich nicht.

224
00:17:55,700 --> 00:17:59,520
Nein, ich meine englischsprachig und der CSS-Zeug macht.

225
00:18:00,600 --> 00:18:05,360
Aber CSS, YouTube, da gibt es nicht so viele, die CSS machen.

226
00:18:05,940 --> 00:18:07,600
Ist da Kevin? Hast du nicht Kevin?

227
00:18:07,980 --> 00:18:11,300
Ja, den hier, den hier, genau.

228
00:18:11,920 --> 00:18:13,220
Den gucke ich noch ganz gerne.

229
00:18:13,980 --> 00:18:20,120
Ich meine, du musst es erst mal schaffen, mit CSS-only 829.000 Abonnenten zu bekommen.

230
00:18:20,540 --> 00:18:23,660
Also, das ist wirklich der absolute CSS-Checker, was das angeht.

231
00:18:26,270 --> 00:18:28,730
Das gucke ich ganz gerne noch ab und zu.

232
00:18:28,830 --> 00:18:31,910
Da ist man so ein bisschen up-to-date, was Frontend-Shit angeht.

233
00:18:35,130 --> 00:18:37,090
Und ansonsten müsste ich jetzt mal auf meine Historie gucken.

234
00:18:39,340 --> 00:18:40,460
Ich gucke, ich gucke.

235
00:18:41,080 --> 00:18:42,500
Also, ich habe sehr viele Channels da.

236
00:18:42,620 --> 00:18:44,880
Schon mal on und off geguckt und auch abonniert.

237
00:18:44,980 --> 00:18:47,520
Aber ich gucke das immer so bei Bedarf.

238
00:18:47,780 --> 00:18:50,280
Ach so, wen ich auch gerne gucke, ist...

239
00:18:50,280 --> 00:18:52,160
Mein FireShip ist ja klar, den kennen wir alle.

240
00:18:52,820 --> 00:18:55,760
Den gucke ich auch ganz gerne, wenn es um Svelte geht.

241
00:19:01,130 --> 00:19:02,690
Der ist für Svelte-Sachen echt gut.

242
00:19:04,310 --> 00:19:05,310
Wenn auch nicht so wahnsinnig.

243
00:19:05,350 --> 00:19:08,150
Also, wenn ich sage, nicht so wahnsinnig hoher Output.

244
00:19:08,590 --> 00:19:10,930
Jeder Channel auf YouTube hat mehr Video-Output als ich.

245
00:19:19,030 --> 00:19:23,330
Ich, ganz ehrlich, ich glaube, er sagt bei Friends & Friends,

246
00:19:24,330 --> 00:19:26,810
aber es könnte auch genauso gut sagen,

247
00:19:26,990 --> 00:19:28,090
my Frontend-Friends.

248
00:19:28,430 --> 00:19:30,630
Aber ich glaube, der sagt, hello, my Friends & Friends.

249
00:19:39,100 --> 00:19:41,720
Der Scam-Journey ist vorbei, jetzt kann Bezos nicht ins Weltall.

250
00:19:42,820 --> 00:19:43,260
Sädge.

251
00:19:44,080 --> 00:19:49,240
Die Frage ist jetzt ja, ist es Sädge oder ist es Sätsch, wie das manche sagen.

252
00:19:49,640 --> 00:19:51,040
Ich bin ja eindeutig für Sädge.

253
00:19:54,570 --> 00:19:56,010
Sädge, genauso wie Bädge.

254
00:19:56,750 --> 00:19:59,230
Weil es heißt ja auch nicht Bädge oder so.

255
00:20:01,050 --> 00:20:02,950
Oder Soske-Agreedge.

256
00:20:04,570 --> 00:20:13,040
Aber du kannst jetzt eigentlich davon ausgehen,

257
00:20:13,380 --> 00:20:15,820
nachdem ich die letzten 13 Jahre nicht aufgehört habe,

258
00:20:16,240 --> 00:20:17,820
werde ich auch nicht einfach random aufhören,

259
00:20:17,900 --> 00:20:19,640
nur wenn mal irgendwie im Monat nichts hochgeladen wird.

260
00:20:19,860 --> 00:20:20,340
Oder zwei.

261
00:20:20,920 --> 00:20:22,760
Oder teilweise zweieinhalb, drei Monate.

262
00:20:26,330 --> 00:20:27,490
Ja, oder ansonsten.

263
00:20:27,910 --> 00:20:29,030
Es ist alles Mögliche.

264
00:20:29,250 --> 00:20:30,870
Ich gucke das halt immer bei Bedarf.

265
00:20:31,190 --> 00:20:33,310
Wenn ich gerade relativ viel Frontend-Zeug mache,

266
00:20:34,510 --> 00:20:36,610
dann gucke ich halt JavaScript, CSS-Channels.

267
00:20:37,070 --> 00:20:38,670
Wenn ich Microcontroller-Zeug mache,

268
00:20:38,670 --> 00:20:40,470
gucke ich manchmal halt auch die einen oder anderen

269
00:20:40,470 --> 00:20:40,670
Embedded-Channels.

270
00:20:41,350 --> 00:20:42,650
Da gibt es Sachen und C++-Sachen.

271
00:20:42,790 --> 00:20:43,990
Ja, leider, leider.

272
00:20:45,090 --> 00:20:49,250
Und ansonsten halt irgendwie auch .NET und Go und Python,

273
00:20:49,370 --> 00:20:50,870
je nachdem, was gerade angesagt ist.

274
00:20:52,530 --> 00:20:53,990
So, aber ich zeige euch mal,

275
00:20:54,010 --> 00:20:55,350
ich zeige euch mal, was wir heute versuchen.

276
00:20:56,090 --> 00:20:58,050
Ach so, hat jetzt eigentlich er erklärt,

277
00:20:58,330 --> 00:21:00,670
was das ist.

278
00:21:00,870 --> 00:21:03,290
Ach so, App von Go in Rust umgeschrieben.

279
00:21:03,490 --> 00:21:06,050
Ja, wobei meins, mein Beispiel, ziemlich klein ist.

280
00:21:06,130 --> 00:21:07,870
Und glücklicherweise gibt es quasi einen,

281
00:21:09,530 --> 00:21:11,330
also die Haupt-Library, die ich verwende in Go,

282
00:21:11,430 --> 00:21:16,350
die gibt es quasi auch neu implementiert in Rust

283
00:21:16,450 --> 00:21:17,450
von einem anderen Typ.

284
00:21:17,550 --> 00:21:20,050
Das heißt, ich hoffe, man kann es relativ ähnlich machen

285
00:21:20,150 --> 00:21:21,150
zu dem, wie es in Go ist.

286
00:21:21,250 --> 00:21:26,960
Ja, Fireship gucken wir alle.

287
00:21:27,060 --> 00:21:29,960
Ben Eater macht auch sehr nice Videos.

288
00:21:30,060 --> 00:21:33,960
Was ich auch noch cool finde, was ich in letzter Zeit öfters gucke,

289
00:21:34,060 --> 00:21:38,960
ist auch Simple Low-Code oder irgendwie sowas.

290
00:21:39,060 --> 00:21:41,960
Hat mit Low-Code-Plattformen überhaupt nichts zu tun.

291
00:21:42,060 --> 00:21:44,080
Der erzählt wirklich ultra abgefahrenen,

292
00:21:44,080 --> 00:21:47,980
so Low-Level-Kram.

293
00:21:48,080 --> 00:21:53,710
Weil, der erzählt dir dann sowas wie Virtual-Memory-Adress-Translation

294
00:21:53,810 --> 00:21:55,710
funktioniert im Kernel und so ganze...

295
00:21:55,810 --> 00:21:58,710
Wieso? Was ist mit Fireship?

296
00:21:58,810 --> 00:22:03,410
Habe ich irgendwas verpasst?

297
00:22:04,820 --> 00:22:07,720
Ich habe schon zwei, drei Wochen... War irgendwas?

298
00:22:07,820 --> 00:22:16,130
Ach so, siehste? Siehste, habe ich gar nicht mitgekriegt.

299
00:22:22,470 --> 00:22:26,370
Ja, ich mache meistens Sachen, auf die ich Bock habe.

300
00:22:26,470 --> 00:22:28,370
Und dann baue ich damit irgendwas.

301
00:22:28,470 --> 00:22:30,350
Und sobald es Probleme gibt,

302
00:22:30,450 --> 00:22:33,350
wird gegoogelt, bis es die Probleme nicht mehr gibt.

303
00:22:33,450 --> 00:22:35,350
Und gebastelt, gegoogelt und gebastelt.

304
00:22:35,450 --> 00:22:37,350
Dann lese ich Sachen, die andere programmiert haben,

305
00:22:37,450 --> 00:22:39,350
die andere gemacht haben.

306
00:22:39,450 --> 00:22:41,350
Und versuche das halt so hinzubekommen,

307
00:22:41,450 --> 00:22:43,350
wie es mir persönlich gefällt.

308
00:22:43,450 --> 00:22:45,350
Ihr wisst ja, ich habe da so einen ganz speziellen...

309
00:22:45,450 --> 00:22:48,350
Ich will nicht sagen Ordnungsanspruch.

310
00:22:48,450 --> 00:22:50,350
Das ist falsch, weil ich bin nicht ordentlich.

311
00:22:50,450 --> 00:22:53,350
Aber ich habe so eine ganz spezielle Vorstellung immer,

312
00:22:53,450 --> 00:22:57,350
wie Sachen halt eben gut implementiert und gut gemacht sind.

313
00:22:57,450 --> 00:22:58,350
Und so lange baue ich dann halt daran rum,

314
00:22:58,450 --> 00:23:00,250
wie es mir gefällt im Endeffekt.

315
00:23:00,450 --> 00:23:04,350
Und bis man halt eine Sache von neu bis ganz gut umgesetzt hat,

316
00:23:04,450 --> 00:23:07,350
kann das durchaus mal zwei, drei Monate dauern,

317
00:23:07,450 --> 00:23:08,350
bis man dann wirklich den Durchblick hat.

318
00:23:08,450 --> 00:23:10,350
Aber dann hat man den Durchblick.

319
00:23:10,450 --> 00:23:17,850
Und habe ich, glaube ich, schon mal geguckt,

320
00:23:17,950 --> 00:23:19,850
sagt mir so spontan nichts.

321
00:23:19,950 --> 00:23:22,850
Das sind die meisten Sachen, die mich persönlich interessieren.

322
00:23:22,950 --> 00:23:25,850
Deswegen gefällt mir das Lernen einfach.

323
00:23:25,950 --> 00:23:30,850
Ich glaube, ich war noch nie...

324
00:23:30,850 --> 00:23:32,850
Ich meine, ich sage nicht nie,

325
00:23:32,950 --> 00:23:35,850
aber nicht, dass ich mich jetzt so direkt erinnern könnte.

326
00:23:35,950 --> 00:23:37,850
Nick, danke für den Zap.

327
00:23:37,950 --> 00:23:41,850
...gezwungen, Zeug zu lernen,

328
00:23:41,950 --> 00:23:45,850
also tiefgreifend und langfristig,

329
00:23:45,950 --> 00:23:47,850
wo ich gar keinen Bock drauf hatte.

330
00:23:47,950 --> 00:23:49,850
Also an Technik-Sachen.

331
00:23:49,950 --> 00:23:51,850
Also wenn man jetzt von BWL-Zeug anfängt, dann schon.

332
00:23:51,950 --> 00:23:54,850
Es ist nicht so, als hätte ich Bock auf BWL-Sachen gehabt.

333
00:23:54,950 --> 00:23:57,850
Das Einzige, was wir mal gemacht haben, ist über Kobold.

334
00:23:57,950 --> 00:23:58,950
Da hatte ich eigentlich überhaupt keinen Bock drauf.

335
00:23:59,050 --> 00:24:00,750
Aber war dann trotzdem ganz lustig.

336
00:24:00,850 --> 00:24:02,850
Ja.

337
00:24:02,950 --> 00:24:13,090
Ich meine, was kommt als Nächstes dann?

338
00:24:13,190 --> 00:24:22,020
Fortran oder so?

339
00:24:22,120 --> 00:24:29,340
Also, Chatge, ich zeige euch jetzt mal...

340
00:24:29,440 --> 00:24:33,290
Wir machen das einfach hier auf.

341
00:24:33,390 --> 00:24:35,290
Ich glaube, da blickt man deutlich besser durch.

342
00:24:35,390 --> 00:24:37,290
Ich zeige euch jetzt mal...

343
00:24:37,390 --> 00:24:40,560
Prolo...

344
00:24:40,660 --> 00:24:41,560
Oh, ja.

345
00:24:41,660 --> 00:24:42,560
Und was kommt als Nächstes?

346
00:24:42,660 --> 00:24:43,560
Ada, oder wie?

347
00:24:43,660 --> 00:24:54,580
Moment.

348
00:24:54,680 --> 00:24:55,580
Was?

349
00:24:55,680 --> 00:24:57,580
Trustge.

350
00:24:57,680 --> 00:25:01,810
Trustproject.

351
00:25:01,910 --> 00:25:03,710
Also, ich zeige euch jetzt mal,

352
00:25:03,710 --> 00:25:05,710
was ich gebaut habe und was wir...

353
00:25:05,810 --> 00:25:08,710
Also, die App ist, was man sieht, relativ unspektakulär.

354
00:25:08,810 --> 00:25:11,710
Aber es ist ganz cool, dass es funktioniert.

355
00:25:11,810 --> 00:25:12,710
So.

356
00:25:12,810 --> 00:25:14,710
Machen wir mal Rust hier auf.

357
00:25:14,810 --> 00:25:18,710
Dann gehen wir mal ins Backend.

358
00:25:18,810 --> 00:25:20,710
Machen Rider auf.

359
00:25:20,810 --> 00:25:24,470
Also, das ist eine Mischung.

360
00:25:24,570 --> 00:25:26,470
Es geht darum...

361
00:25:26,570 --> 00:25:27,470
Was?

362
00:25:29,520 --> 00:25:30,420
Ja, ja.

363
00:25:30,520 --> 00:25:36,190
Okay, Rider.

364
00:25:36,290 --> 00:25:41,130
Ach, Mist.

365
00:25:41,230 --> 00:25:42,130
Ich kann...

366
00:25:42,230 --> 00:25:44,130
Soll ich auch noch mal im Background starten?

367
00:25:44,130 --> 00:25:48,140
So, Rider.

368
00:25:48,240 --> 00:25:49,140
Also, wir haben...

369
00:25:49,240 --> 00:25:54,140
Letztendlich ist das eine ASP.NET Core-Web-Anwendung

370
00:25:54,240 --> 00:26:00,140
mit einem Low-Level-Go-Backend für WebRTC

371
00:26:00,240 --> 00:26:04,140
und, ja, eine Index-HTML mit ein bisschen JavaScript.

372
00:26:04,240 --> 00:26:06,140
Zeige ich euch jetzt.

373
00:26:06,240 --> 00:26:12,740
So, ich glaube, jetzt habe ich echt alles geöffnet,

374
00:26:12,840 --> 00:26:15,740
was es so zu öffnen gibt.

375
00:26:15,840 --> 00:26:18,640
Heute brauchen wir echt fünf Desktop-Anwendungen.

376
00:26:18,640 --> 00:26:19,640
Dafür...

377
00:26:19,740 --> 00:26:22,640
Also, Index-HTML ist äußerst basic.

378
00:26:22,740 --> 00:26:23,640
Was es da gibt...

379
00:26:23,740 --> 00:26:25,640
Ich zeige euch, wie das Ganze aussieht.

380
00:26:25,740 --> 00:26:28,640
Also, bevor wir uns das jetzt im Detail angucken...

381
00:26:28,740 --> 00:26:30,640
Oh, ein bisschen klein, hä?

382
00:26:30,740 --> 00:26:31,640
So, ist gut.

383
00:26:31,740 --> 00:26:32,640
Und hier...

384
00:26:32,740 --> 00:26:34,640
Was hat der für Schmerzen?

385
00:26:34,740 --> 00:26:37,640
Ach, er findet mal wieder mein .NET-Framework nicht.

386
00:26:37,740 --> 00:26:38,640
Gibt...

387
00:26:38,740 --> 00:26:41,640
Hat der eigentlich .NET mittlerweile aktualisiert?

388
00:26:41,740 --> 00:26:42,640
.NET-Version?

389
00:26:42,740 --> 00:26:44,640
Nee, ist immer noch 7.0.

390
00:26:44,740 --> 00:26:45,640
Nice.

391
00:26:45,740 --> 00:26:47,640
Also, müssen wir das noch mal...

392
00:26:47,640 --> 00:26:50,640
noch mal umstellen, dass er erkennt, dass ich...

393
00:26:50,740 --> 00:26:53,640
Hallo?

394
00:26:53,740 --> 00:26:56,640
...dass ich .NET 8 installiert habe.

395
00:26:56,740 --> 00:27:00,720
.NET 8.

396
00:27:00,820 --> 00:27:02,720
Äh...

397
00:27:02,820 --> 00:27:04,720
Äh...

398
00:27:04,820 --> 00:27:06,720
Ja, save.

399
00:27:06,820 --> 00:27:15,720
So.

400
00:27:15,820 --> 00:27:17,720
Also, ich habe mit Prolog noch nie was gemacht.

401
00:27:17,820 --> 00:27:20,720
Mich wundert es, dass an der Uni auch ernsthaft irgendwie noch einer Prolo...

402
00:27:20,820 --> 00:27:22,720
Ich meine, sollte man nicht...

403
00:27:22,820 --> 00:27:24,720
Machen die meisten Leute an der Uni nicht Java?

404
00:27:24,720 --> 00:27:29,680
Auch Java genannt von manchen Leuten.

405
00:27:29,780 --> 00:27:35,330
Deswegen gibt es auch manche Leute, die sagen JavaScript.

406
00:27:35,430 --> 00:27:40,590
Ups.

407
00:27:40,690 --> 00:27:42,590
Komplett falsch, C-Mode.

408
00:27:42,690 --> 00:27:44,590
Eigentlich wollte ich das mal...

409
00:27:44,690 --> 00:27:49,350
FireShip sagt auch immer JavaScript.

410
00:27:49,450 --> 00:27:51,350
JavaScript.

411
00:27:56,410 --> 00:27:59,310
Also, auf Prolog hätte ich wirklich wenig... wenig Bock.

412
00:27:59,410 --> 00:28:07,960
Okay, auf geht's!

413
00:28:08,060 --> 00:28:10,960
Also, ich zeige euch mal schnell, was hier am Start ist.

414
00:28:11,060 --> 00:28:12,960
Wir gehen hier in das Backend.

415
00:28:13,060 --> 00:28:14,960
Starten das hier.

416
00:28:15,060 --> 00:28:16,960
äh... .NET run.

417
00:28:16,960 --> 00:28:19,590
Bäm.

418
00:28:19,690 --> 00:28:20,590
Hallo?

419
00:28:20,690 --> 00:28:21,590
Und es crasht!

420
00:28:21,690 --> 00:28:23,590
Perfekt!

421
00:28:23,690 --> 00:28:25,590
Perfekt zum Einstieg, Leute!

422
00:28:25,690 --> 00:28:27,590
.NET run.

423
00:28:27,690 --> 00:28:28,590
Ja.

424
00:28:28,690 --> 00:28:31,590
Erst mal kurz die Experten über Teams anschreiben.

425
00:28:31,690 --> 00:28:33,590
Ähm, warum crasht das?

426
00:28:33,690 --> 00:28:34,590
Ach so!

427
00:28:34,690 --> 00:28:37,590
Es crasht, weil ich die Go-Geschichte nicht kompiliert habe vorher.

428
00:28:37,690 --> 00:28:39,590
Ja, das ist natürlich klar.

429
00:28:39,690 --> 00:28:40,590
Also.

430
00:28:40,690 --> 00:28:41,590
So.

431
00:28:41,690 --> 00:28:43,590
Ihr müsst noch nichts verstehen.

432
00:28:43,690 --> 00:28:45,590
Ich zeige es euch dann, wenn es soweit ist.

433
00:28:45,690 --> 00:28:47,490
Äh... äh...

434
00:28:47,590 --> 00:28:48,490
Go...

435
00:28:48,490 --> 00:28:49,490
Build...

436
00:28:49,590 --> 00:28:50,490
Build...

437
00:28:50,590 --> 00:28:51,490
Mode...

438
00:28:51,590 --> 00:28:54,760
Chat...

439
00:28:54,860 --> 00:28:55,760
Library...

440
00:28:58,580 --> 00:28:59,480
Minus...

441
00:28:59,580 --> 00:29:00,480
O...

442
00:29:00,580 --> 00:29:03,110
Ach so.

443
00:29:03,210 --> 00:29:04,110
Äh...

444
00:29:04,210 --> 00:29:05,110
Ja...

445
00:29:05,210 --> 00:29:06,110
Meinetwegen heißt das so.

446
00:29:06,210 --> 00:29:11,500
Und jetzt moven wir...

447
00:29:11,600 --> 00:29:12,500
Oh, shit!

448
00:29:12,600 --> 00:29:13,500
Ah!

449
00:29:13,600 --> 00:29:14,500
Alter, was?

450
00:29:14,600 --> 00:29:15,500
Äh...

451
00:29:15,600 --> 00:29:16,500
Eigentlich bin ich keine Mathe mehr.

452
00:29:16,600 --> 00:29:17,500
Ähm...

453
00:29:17,600 --> 00:29:18,500
Go...

454
00:29:18,600 --> 00:29:19,500
Build...

455
00:29:19,600 --> 00:29:20,500
Hier, Bench...

456
00:29:20,600 --> 00:29:21,500
Also, wie heißt das?

457
00:29:21,600 --> 00:29:22,500
WebRTC?

458
00:29:22,600 --> 00:29:23,500
Wie habe ich das genannt?

459
00:29:23,600 --> 00:29:27,280
Wie soll...

460
00:29:27,380 --> 00:29:28,280
Wie soll das heißen?

461
00:29:28,380 --> 00:29:30,180
WebRTCLinux.so.

462
00:29:30,280 --> 00:29:31,280
Okay.

463
00:29:31,280 --> 00:29:32,380
Ich hoffe, dass das funktioniert.

464
00:29:32,480 --> 00:29:35,590
Okay.

465
00:29:35,690 --> 00:29:39,670
So.

466
00:29:39,770 --> 00:29:41,670
Die Go-Geschichte kompiliert.

467
00:29:41,770 --> 00:29:46,390
Warum heißt das GoLib?

468
00:29:46,490 --> 00:29:48,390
Das soll nicht so heißen, Mann.

469
00:29:48,490 --> 00:29:58,640
Ach so.

470
00:29:58,740 --> 00:29:59,640
Hä?

471
00:29:59,740 --> 00:30:06,790
Warum funzt denn das nicht, Leute?

472
00:30:06,890 --> 00:30:25,330
Ist halt beim Output gleich so, Mann.

473
00:30:25,430 --> 00:30:28,410
Soll mir recht sein.

474
00:30:28,510 --> 00:30:31,410
Außerdem kann ich den Output direkt erstellen lassen, doch in...

475
00:30:31,510 --> 00:30:33,410
Backend...

476
00:30:33,510 --> 00:30:35,410
WebRTCLinux.so.

477
00:30:35,510 --> 00:30:36,410
Genau.

478
00:30:36,510 --> 00:30:37,410
So.

479
00:30:37,510 --> 00:30:39,410
Da muss ich doch gar nichts moven.

480
00:30:39,510 --> 00:30:51,610
So.

481
00:30:51,610 --> 00:30:52,610
So.

482
00:30:52,710 --> 00:30:53,610
Da sind wir.

483
00:30:53,710 --> 00:30:54,610
So.

484
00:30:54,710 --> 00:30:55,610
Jetzt kann ich starten.

485
00:30:55,710 --> 00:30:57,610
Jetzt kann ich euch zeigen, was passiert.

486
00:30:57,710 --> 00:30:58,610
Also.

487
00:30:58,710 --> 00:31:02,610
Copy always.net.

488
00:31:02,710 --> 00:31:07,560
Wir sind hier.

489
00:31:07,660 --> 00:31:08,560
Run.

490
00:31:08,660 --> 00:31:11,900
Gut.

491
00:31:12,000 --> 00:31:12,900
Alles klar.

492
00:31:13,000 --> 00:31:13,900
So.

493
00:31:14,000 --> 00:31:14,900
Chrome aufmachen.

494
00:31:15,000 --> 00:31:16,900
Und wenn wir jetzt auf Localhost...

495
00:31:17,000 --> 00:31:24,000
Localhost Port 8080 gehen, werdet ihr was sehr unspektakuläres sehen, und zwar Connection

496
00:31:24,000 --> 00:31:26,000
und Network Connected.

497
00:31:26,100 --> 00:31:28,000
Also, was passiert, ist folgendes.

498
00:31:28,100 --> 00:31:32,000
Kann man mal vielleicht die Browser Tools irgendwie ein bisschen...

499
00:31:32,100 --> 00:31:34,000
Wo ist denn der Button dafür?

500
00:31:34,100 --> 00:31:38,000
Irgendwie so, dass man es nicht total übertrieben...

501
00:31:38,100 --> 00:31:43,000
Also, der baut eine WebRTC-Verbindung auf, vom Browser zum Backend.

502
00:31:43,100 --> 00:31:45,000
Und das funktioniert folgendermaßen.

503
00:31:45,100 --> 00:31:48,000
Also, WebRTC ist eine...

504
00:31:48,100 --> 00:31:50,000
Blazingly Fast Connection, ja.

505
00:31:50,100 --> 00:31:53,100
Der WebRTC ist eigentlich für Echtzeit-Audio-Video-Konfigurationen.

506
00:31:53,100 --> 00:31:56,100
Kann auch für Chat-Nachrichten und so benutzt werden.

507
00:31:56,200 --> 00:32:03,100
Aber hauptsächlich, muss man sagen, ist WebRTC im Audio-Video-Sektor zu Hause.

508
00:32:03,200 --> 00:32:10,100
Und das heißt, wenn ihr Teams verwendet oder Zoom verwendet oder sowas, was wahrscheinlich

509
00:32:10,200 --> 00:32:11,100
jeder von uns...

510
00:32:11,200 --> 00:32:13,100
Ist eigentlich Slack noch angesagt.

511
00:32:13,200 --> 00:32:16,100
Wobei Slack ist eher Chat, weniger Videokram, ne?

512
00:32:16,200 --> 00:32:20,100
Und das ist alles WebRTC unter der Haube.

513
00:32:20,200 --> 00:32:21,100
So.

514
00:32:21,100 --> 00:32:24,920
Und...

515
00:32:25,020 --> 00:32:27,920
Das funktioniert jetzt...

516
00:32:28,020 --> 00:32:30,920
Ich glaube, mittlerweile schon.

517
00:32:31,020 --> 00:32:33,920
Aber ich habe ehrlich gesagt Slack seit Ewigkeiten nicht mehr gesehen.

518
00:32:34,020 --> 00:32:37,920
Also, Teams hat ziemlich zugeschlagen und eigentlich benutzt so gut...

519
00:32:38,020 --> 00:32:40,920
Slack war mal eine Zeit lang richtig, richtig groß, ja.

520
00:32:41,020 --> 00:32:43,920
Aber irgendwie ist mittlerweile echt Teams einfach nur...

521
00:32:44,020 --> 00:32:51,240
Eigentlich das verbreitetste schlechthin.

522
00:32:51,340 --> 00:32:55,240
Es kommt ab und zu mal vor, gerade wenn man mit irgendwelchen Ambitionen...

523
00:32:55,240 --> 00:32:59,240
Konferieren muss, dass sie irgendwie Zoom-Calls einladen oder so.

524
00:32:59,340 --> 00:33:00,240
Okay.

525
00:33:00,340 --> 00:33:01,240
So.

526
00:33:01,340 --> 00:33:06,580
Also, ich zeige euch jetzt mal, was ich gebaut habe, was wir umstellen auf Go.

527
00:33:06,680 --> 00:33:07,580
Es ist...

528
00:33:07,680 --> 00:33:08,580
Umstellen auf Rust.

529
00:33:08,680 --> 00:33:09,580
Es ist relativ...

530
00:33:09,680 --> 00:33:10,580
Relativ übersichtlich.

531
00:33:10,680 --> 00:33:11,580
Also.

532
00:33:11,680 --> 00:33:15,580
Ausgangspunkt des Ganzen ist ein .NET Backend.

533
00:33:15,680 --> 00:33:17,580
Ihr seht, das ist sehr überschaubar.

534
00:33:17,680 --> 00:33:21,740
Das ist alles.

535
00:33:21,840 --> 00:33:22,740
Aus mehr besteht das nicht.

536
00:33:22,840 --> 00:33:24,740
Das macht hier ein bisschen...

537
00:33:24,840 --> 00:33:26,740
Das callt hier ein paar Sachen in Go.

538
00:33:26,840 --> 00:33:27,840
Das gucken wir uns gleich an.

539
00:33:27,940 --> 00:33:28,740
Und...

540
00:33:28,740 --> 00:33:30,740
Das gucken wir uns gleich an.

541
00:33:30,840 --> 00:33:34,740
Dann gibt es einen AP Endpunkt mit http get.

542
00:33:34,840 --> 00:33:37,740
Slash WebRTC Start.

543
00:33:37,840 --> 00:33:40,740
Dort erzeugt er eine neue WebRTC Connection.

544
00:33:40,840 --> 00:33:43,740
Und schickt an den Client, also an den Browser zurück.

545
00:33:43,840 --> 00:33:47,740
Die Magic WebRTC Verbindungsaufbau Dinger.

546
00:33:47,840 --> 00:33:49,740
Das sieht dann so aus zum Beispiel.

547
00:33:49,840 --> 00:33:50,740
Ist vollkommen egal.

548
00:33:50,840 --> 00:33:51,740
Dafür fände ich eine Library.

549
00:33:51,840 --> 00:33:53,740
Muss mich nicht mit auseinandersetzen.

550
00:33:53,840 --> 00:33:55,740
Schickt er zurück an den Browser.

551
00:33:55,840 --> 00:33:57,740
Der Browser nimmt das Ganze.

552
00:33:57,740 --> 00:33:58,740
Der sagt, der baut auch eine Web...

553
00:33:58,840 --> 00:34:01,740
Also der Browser versucht auch eine WebRTC Verbindung aufzubauen.

554
00:34:01,840 --> 00:34:04,740
Callt diesen Endpunkt.

555
00:34:04,840 --> 00:34:10,740
Und dann nimmt er das, was er von dem Backend geschickt kriegt.

556
00:34:10,840 --> 00:34:13,740
Setzt das als Remote Description.

557
00:34:13,840 --> 00:34:16,740
Das ist so eine WebRTC Verbindungsaufbau Geschichte.

558
00:34:16,840 --> 00:34:19,740
Warum das so heißt, man weiß es nicht.

559
00:34:19,840 --> 00:34:22,740
Aber WebRTC Handshake funktioniert so.

560
00:34:22,840 --> 00:34:25,740
Eine der beiden Seiten, also bei WebRTC.

561
00:34:25,740 --> 00:34:28,740
Das ist ja wie gesagt für Echtzeit per to per Videoübertragung eigentlich gedacht.

562
00:34:28,840 --> 00:34:32,740
Bei WebRTC sind beide Seiten gleichzeitig Server und Client.

563
00:34:32,840 --> 00:34:35,740
Und es können beide Seiten die Verbindung initiieren.

564
00:34:35,840 --> 00:34:36,740
Das funktioniert so.

565
00:34:36,840 --> 00:34:41,740
Eine Seite erstellt so ein Offer Package hier.

566
00:34:41,840 --> 00:34:42,740
So ein Offer.

567
00:34:42,840 --> 00:34:43,740
Wie heißt das?

568
00:34:43,840 --> 00:34:45,740
SDP heißt das glaube ich.

569
00:34:45,840 --> 00:34:50,500
So eine Offer Anfrage.

570
00:34:50,600 --> 00:34:52,500
Schickt das an die andere Seite.

571
00:34:52,600 --> 00:34:56,500
Und die erstellt darauf dann eine Antwort und schickt das zurück.

572
00:34:56,500 --> 00:35:01,500
Und wenn beide sich darauf einigen können, dann wird die Verbindung aufgebaut.

573
00:35:01,600 --> 00:35:03,500
Darauf einigen heißt, die tauschen.

574
00:35:03,600 --> 00:35:05,500
Ihr seht das hier vielleicht auch.

575
00:35:05,600 --> 00:35:07,500
Die tauschen zum Beispiel aus.

576
00:35:07,600 --> 00:35:09,500
Hups.

577
00:35:13,030 --> 00:35:13,930
Hat der irgendwie ein bisschen.

578
00:35:14,030 --> 00:35:14,930
Ne, jetzt geht es doch.

579
00:35:15,030 --> 00:35:17,930
Die tauschen hier zum Beispiel Endpoints aus für Video.

580
00:35:18,030 --> 00:35:21,930
Man sieht ja mein Docker Interface wird auch mit geschickt, was ziemlich pepeger ist.

581
00:35:22,030 --> 00:35:25,820
Ja, das ist UDP.

582
00:35:25,920 --> 00:35:26,820
Das ist UDP tatsächlich.

583
00:35:26,920 --> 00:35:28,820
Komplett UDP.

584
00:35:28,920 --> 00:35:30,820
Man kann auch TCP verwenden.

585
00:35:30,820 --> 00:35:34,820
Aber das ist für Videosachen ja meistens nicht so wichtig.

586
00:35:34,920 --> 00:35:37,820
Die tauschen sich beispielsweise die Endpunkte aus für das Video.

587
00:35:37,920 --> 00:35:39,820
Also ihre IPs.

588
00:35:39,920 --> 00:35:42,820
Und sie tauschen sich aus, welche Codecs sie unterstützen.

589
00:35:42,920 --> 00:35:49,820
In dem Fall unterstützt mein Server, meine Serverseite nur H264 mit diesem Profil.

590
00:35:49,920 --> 00:35:50,820
Sonst nichts.

591
00:35:50,920 --> 00:35:57,820
Und im Endeffekt einigen sich die zwei Seiten darauf, was sie denn jetzt als Videos austauschen wollen.

592
00:35:57,920 --> 00:35:59,820
Also in der Offer steht drinnen.

593
00:35:59,820 --> 00:36:03,820
Hey, Hallo, ich bin Client oder beziehungsweise Server XY.

594
00:36:03,920 --> 00:36:05,820
Das sind meine Endpoints.

595
00:36:05,920 --> 00:36:08,820
Das sind meine Video Audio Codecs, die ich unterstütze.

596
00:36:08,920 --> 00:36:11,820
Und.

597
00:36:11,920 --> 00:36:19,820
Dann antwortet, dann antwortet die die andere Seite drauf und sagt Hey, alles klar.

598
00:36:19,920 --> 00:36:20,820
Ich unterstütze.

599
00:36:20,920 --> 00:36:24,820
Ich unterstütze auch dieses Video Format.

600
00:36:24,920 --> 00:36:25,820
Lass uns mal.

601
00:36:25,920 --> 00:36:28,820
Lass uns mal anfangen, Video auszutauschen, sondern mit die Verbindung aufgebaut.

602
00:36:28,820 --> 00:36:32,820
Also das ist im Prinzip das, wofür ich die WebRTC Library verwende.

603
00:36:32,920 --> 00:36:34,820
Kann man, kann man da einen Key hinterlegen?

604
00:36:34,920 --> 00:36:36,820
Ja, kann man irgendwo.

605
00:36:36,920 --> 00:36:40,820
Aber ich lasse das aktuell alles die Library handeln.

606
00:36:40,920 --> 00:36:41,820
Es geht, es geht auch.

607
00:36:41,920 --> 00:36:43,820
Es geht auch mit mit mit TCP.

608
00:36:43,920 --> 00:36:47,820
Du kannst, wenn du.

609
00:36:47,920 --> 00:36:52,820
Also normalerweise muss man sagen, geht das, geht das verhältnismäßig gut.

610
00:36:52,920 --> 00:36:57,820
Ich habe das auch schon mal gemacht, indem ich beispielsweise meine Tür Gegensprecheranlage auf mein Handy gestreamt habe.

611
00:36:57,820 --> 00:36:58,820
Da drüber.

612
00:36:58,920 --> 00:37:00,820
Per WebRTC.

613
00:37:00,920 --> 00:37:05,820
Da habe ich den SIP Call gemacht und mit dem SIP Call dann die Sachen, die Sachen gepusht.

614
00:37:05,920 --> 00:37:10,820
Aber das ging, das ging tatsächlich erstaunlich gut von außen.

615
00:37:10,920 --> 00:37:13,820
Wenn es gar nicht geht, kann man noch so einen.

616
00:37:13,920 --> 00:37:16,820
Ich habe vergessen, wie der Kram heißt.

617
00:37:16,920 --> 00:37:23,820
Turn, Stun, wie auch immer Server einbauen, wo das dann quasi einmal über eine externe IP läuft.

618
00:37:23,820 --> 00:37:29,820
Der Verbindungsaufbau, um schön Löcher ins jeweilige Nat zu machen.

619
00:37:29,920 --> 00:37:32,820
Aber es geht erstaunlich, erstaunlich gut, ehrlich gesagt.

620
00:37:32,920 --> 00:37:40,660
Und intern im Netzwerk ohne Nat dazwischen ist es eh kein Problem.

621
00:37:40,760 --> 00:37:42,660
So, wo bin ich jetzt stehen geblieben?

622
00:37:42,760 --> 00:37:46,660
Also das ist so die Basics, wie so ein WebRTC Aufbau funktioniert.

623
00:37:46,760 --> 00:37:50,660
Und eigentlich ist jetzt, nachdem die Verbindung steht.

624
00:37:50,760 --> 00:37:53,660
Ich kann euch übrigens auch zeigen, dass die Verbindung steht.

625
00:37:53,760 --> 00:37:54,660
Moment.

626
00:37:54,660 --> 00:37:57,660
About Web, ah ne Moment, wir sind in.

627
00:37:57,760 --> 00:37:59,660
Ha, guck mal.

628
00:37:59,760 --> 00:38:01,660
Chrome ist schlau genug.

629
00:38:01,760 --> 00:38:03,660
About WebRTC.

630
00:38:03,760 --> 00:38:16,180
Das hier suche ich, genau.

631
00:38:16,280 --> 00:38:19,180
Guck, und jetzt kann man sich hier den Verbindungsaufbau ansehen.

632
00:38:19,280 --> 00:38:22,180
Also man sieht, sie sind lokal connected.

633
00:38:22,280 --> 00:38:24,180
Signaling State ist stable.

634
00:38:24,280 --> 00:38:26,180
Connection ist aufgebaut.

635
00:38:26,280 --> 00:38:30,180
Und ja, der Transport darunter ist auch aufgebaut.

636
00:38:30,280 --> 00:38:32,180
So, und.

637
00:38:32,180 --> 00:38:37,340
Also das ist die komplette .NET-Seite.

638
00:38:37,440 --> 00:38:38,340
Mehr passiert nicht.

639
00:38:38,440 --> 00:38:45,340
Der, also die Server-Seite generiert so einen Offer-Package.

640
00:38:45,440 --> 00:38:47,340
Das kommt dann hier rein.

641
00:38:47,440 --> 00:38:49,340
Also Client sagt, add CPU-Connection.

642
00:38:49,440 --> 00:38:51,340
Das ist, das ist alles wurscht.

643
00:38:51,440 --> 00:38:53,340
Dann callt er diesen Endpunkt.

644
00:38:53,440 --> 00:38:55,340
Dann kriegt er diesen Klampel hier zurück.

645
00:38:55,440 --> 00:38:58,340
Mit den Endpoints und dem supportenden Codex.

646
00:38:58,440 --> 00:39:03,340
Das muss er sich dann setzen als Remote Description.

647
00:39:03,340 --> 00:39:06,340
Nachdem beide Seiten, Server und Client, gleichzeitig sein können,

648
00:39:06,440 --> 00:39:10,340
muss man immer einstellen, was er selbst ist und was die andere Seite ist.

649
00:39:10,440 --> 00:39:13,340
Dann setze ich quasi das.

650
00:39:13,440 --> 00:39:16,340
Dann erzeugt der Browser eine Antwort da drauf.

651
00:39:16,440 --> 00:39:19,340
In der Antwort steht dann drauf, okay, ich unterstütze mindestens einen Codex,

652
00:39:19,440 --> 00:39:20,340
den du auch unterstützt.

653
00:39:20,440 --> 00:39:22,340
Wir können Videos miteinander austauschen.

654
00:39:22,440 --> 00:39:24,340
Und dann schickt er das Ganze zurück.

655
00:39:24,440 --> 00:39:28,340
Und das geht dann hier an den Post-Endpunkt von der .NET-Anwendung.

656
00:39:28,440 --> 00:39:31,440
Und dann ruft er hier jeweils go-low-level-web-rtc-Sachen aus.

657
00:39:31,540 --> 00:39:33,240
So.

658
00:39:33,340 --> 00:39:38,240
Also hier am Anfang ruft er einmal in go die Sachen auf,

659
00:39:38,340 --> 00:39:42,240
dass er UDP-Netzwerk-Geschichten setupt.

660
00:39:42,340 --> 00:39:46,240
Dann, dass es einen Video-Track gibt, in dem man was reinschreiben kann.

661
00:39:46,340 --> 00:39:50,240
Hier lässt er sich die Connection-Sachen generieren.

662
00:39:50,340 --> 00:39:57,240
Und hier setzt er dann die Antwort vom Browser für die Connection.

663
00:39:57,340 --> 00:40:02,240
Ich glaube, wenn wir das jetzt gleich in Rust bauen, das ist relativ klar.

664
00:40:02,240 --> 00:40:04,240
Es ist auf jeden Fall recht übersichtlich.

665
00:40:04,340 --> 00:40:06,240
Ich zeige euch jetzt noch mal schnell die go-Seite.

666
00:40:06,340 --> 00:40:10,240
Ja, und am Ende, jetzt könnten die eigentlich Videos austauschen.

667
00:40:10,340 --> 00:40:14,240
Warum ich das hier so ein bisschen bundig gemacht habe, einfach weil es schöner aussieht.

668
00:40:14,340 --> 00:40:21,240
Also, der guckt hier, sobald sich der Connection-State ändert, schreibt er das halt hier rein.

669
00:40:21,340 --> 00:40:25,240
Wichtig ist, dass beides connected ist, sowohl hier quasi der Transport

670
00:40:25,340 --> 00:40:28,240
und die eigentliche Web-RTC-Connection an sich.

671
00:40:28,340 --> 00:40:31,340
Ich könnte jetzt darüber beispielsweise Audio austauschen, Video austauschen,

672
00:40:31,440 --> 00:40:32,140
mehr oder weniger.

673
00:40:32,240 --> 00:40:33,140
Fast in Echtzeit.

674
00:40:33,240 --> 00:40:38,140
Oder auch einen Data-Channel aufmachen, wo man den zum Beispiel für Chat oder sowas verwenden kann.

675
00:40:38,240 --> 00:40:44,160
So, also das Frontend ist übersichtlich, 67 Zeichen.

676
00:40:44,260 --> 00:40:46,160
Da müssen wir heute nichts dran machen.

677
00:40:46,260 --> 00:40:49,160
Und an dem C-Sharp-Backend müssen wir auch so gut wie nichts machen.

678
00:40:49,260 --> 00:40:53,160
Weil, das stellen wir ja um von go auf Rust.

679
00:40:53,260 --> 00:40:55,160
Ich zeige euch jetzt, was go macht.

680
00:40:55,260 --> 00:40:58,160
Und das ist das, was wir heute in Rust versuchen nachzubauen.

681
00:40:58,260 --> 00:41:04,060
Und zwar ist, es ist auch recht übersichtlich, wobei es noch der komplexeste ist.

682
00:41:04,160 --> 00:41:10,060
Das sind die ganzen Funktionen, die vom .NET-Backend aufgerufen werden.

683
00:41:10,160 --> 00:41:14,060
Das erste, was der macht, ist init-Network.

684
00:41:14,160 --> 00:41:15,060
Sieht man auch hier.

685
00:41:15,160 --> 00:41:17,060
Init-Network, passiert folgendes.

686
00:41:17,160 --> 00:41:23,060
Der erstellt so eine Liste mit supportetem Codex.

687
00:41:23,160 --> 00:41:29,060
Also in dem Fall supporten wir nur, das steht hier oben, in dem Fall supporten wir nur H264.

688
00:41:29,160 --> 00:41:33,160
Das ist das, was ihr auch eben gesehen habt in diesem langen Text.

689
00:41:33,260 --> 00:41:33,960
In diesem langen Text.

690
00:41:34,060 --> 00:41:38,230
Text-Output.

691
00:41:38,330 --> 00:41:42,230
Doch, das habe ich selbst geschrieben, mit Error-Handling.

692
00:41:42,330 --> 00:41:45,230
Allerdings nicht überall Error-Handling.

693
00:41:45,330 --> 00:41:53,040
An vielen Stellen schreibe ich, wird der Error auch einfach weggeschmissen.

694
00:41:53,140 --> 00:41:55,040
Ne, wird nicht rausgeschmissen.

695
00:41:55,140 --> 00:41:59,040
Es wird go rausgeschmissen zu Rust.

696
00:41:59,140 --> 00:42:01,040
Oder mal gucken, ob es in Rust funktioniert.

697
00:42:01,140 --> 00:42:06,040
Ne, das habt ihr eben auch gesehen in diesem Verbindungsaufbau.

698
00:42:06,140 --> 00:42:09,040
Wir unterstützen nur H264.

699
00:42:09,040 --> 00:42:15,040
Und das ist halt so die Codec-Parameter für unser Video, was wir unterstützen.

700
00:42:15,140 --> 00:42:20,040
So, also, als erstes legt ihr eine Liste an mit supportetem Codex.

701
00:42:20,140 --> 00:42:23,040
Warum brauchst du noch das .NET Projekt?

702
00:42:23,140 --> 00:42:28,040
Das .NET Projekt brauche ich, weil das eine noch ein bisschen umfangreichere Web-Anwendung wird.

703
00:42:28,140 --> 00:42:32,040
Und ich keinen Bock habe, das in Go zu machen.

704
00:42:32,140 --> 00:42:46,620
Auf der anderen Seite, so mega umfangreich wird die Web-Anwendung gar nicht.

705
00:42:46,620 --> 00:42:54,620
Also, vielleicht ist das nächste, was wir machen, .NET noch rauszuschmeißen.

706
00:42:54,720 --> 00:42:57,620
Mal ganz davon abgesehen, Go fliegt ja auch raus.

707
00:42:57,720 --> 00:42:59,620
Das wird ja heute in Rust neu gebaut.

708
00:42:59,720 --> 00:43:05,620
Vielleicht, vielleicht alles in Rust, aber das glaube ich nicht, dass ich mir das antue so abartig wie...

709
00:43:05,720 --> 00:43:12,620
Ja, das ist, das ist wirklich, also, interop mit anderen Sachen ist Go echt pepega.

710
00:43:12,720 --> 00:43:14,620
Das habe ich auch schon gemerkt.

711
00:43:14,620 --> 00:43:17,620
Was es am Ende bringt, ja, das kann ich auch noch mal kurz erzählen.

712
00:43:17,720 --> 00:43:33,620
Also, du kannst damit zum Beispiel jede x-beliebige Webcam oder, ja, also, alles, alles, was FFmpeg einlesen kann und was ein H.264-Stream hat, bekommst du damit eben als Video im Browser.

713
00:43:33,720 --> 00:43:39,620
Also sprich, du hast irgendeine billige China-Chinesen-Webcam, die kannst du dir damit im Browser anzeigen lassen.

714
00:43:39,620 --> 00:43:48,120
Du wirst jetzt sagen, hey, normalerweise kann man auch Webcams im Browser anzeigen lassen.

715
00:43:48,220 --> 00:43:51,120
Kann man und kann man auch gleichzeitig nicht.

716
00:43:51,220 --> 00:43:57,120
Es kommt immer drauf an, was die, was die Webcam unterstützt und was die Webcam anbietet.

717
00:43:57,220 --> 00:44:06,120
Die aller, allerwenigsten Webcams bieten WebRTC, also quasi mehr oder weniger Real-Time-Streaming an und dann hast du auch nur eine Webcam drauf.

718
00:44:06,220 --> 00:44:10,120
Also sprich, ich will ja eine Webseite haben, wo einfach meine ganzen Webcams drauf sind.

719
00:44:10,120 --> 00:44:13,120
Ich habe, glaube ich, aktuell sieben Stück hier im Haus.

720
00:44:13,220 --> 00:44:15,120
Also ich habe, warte mal, lass mal überlegen.

721
00:44:15,220 --> 00:44:26,120
Ich habe zwei, drei Stück draußen, eine in dem Raum, wo die Katze immer abchillt und eine im Flur und eine im Keller.

722
00:44:26,220 --> 00:44:31,620
Sechs Stück, sechs Stück sind das. Sechs Stück.

723
00:44:31,720 --> 00:44:39,980
Und, ja, da will ich eine Webseite haben, wo die alle drauf angezeigt werden.

724
00:44:40,080 --> 00:44:43,980
Mehr oder weniger, ach so, und das Ganze lasse ich in Home Assistant letztendlich anzeigen.

725
00:44:44,080 --> 00:44:44,980
Entweder hier.

726
00:44:45,080 --> 00:44:49,980
Entweder als iFrame oder als Pop-Up oder so, aber das hat ja mit Home Assistant nichts zu tun.

727
00:44:50,080 --> 00:44:54,980
Seite. Und ich will das halt möglichst Echtzeit haben und auch Connection-Abrüche handeln.

728
00:44:55,080 --> 00:44:57,980
Also das Backend wird eine Web-Anwendung in .NET.

729
00:44:58,080 --> 00:45:07,870
Das macht nicht viel mehr als die, als die Webseite ausliefern und das ganze FFmpeg-Zeug.

730
00:45:07,970 --> 00:45:10,870
Wir brauchen ja auch noch FFmpeg zum Auslesen von den Videostreams.

731
00:45:10,970 --> 00:45:13,870
Das ist relativ simpel, das haben wir im Stream auch schon gemacht.

732
00:45:13,970 --> 00:45:15,870
Also wenn man, wenn man weiß, wie der FFmpeg funktioniert.

733
00:45:15,970 --> 00:45:20,970
Also die, das C, das C-Interface von FFmpeg geht das erstaunlich gut.

734
00:45:21,070 --> 00:45:29,350
Ja, wie gesagt, vielleicht, vielleicht gefällt mir das in Rust dann auch so gut, dass ich auch .NET noch rausschmeiße und das einfach komplett in Rust mache.

735
00:45:29,450 --> 00:45:33,350
Wobei ich, dann mache ich, dann würde ich es lieber komplett in Go machen.

736
00:45:33,450 --> 00:45:42,350
Weil wenn ich es komplett in Go mache, ist letztendlich ja auch kein Interop mehr nötig mit anderen Sprachen und dementsprechend, ja.

737
00:45:42,450 --> 00:45:46,350
Aber ich habe schon mal FFmpeg in Go gemacht, das ist auch Pains Champ.

738
00:45:46,350 --> 00:45:48,450
Weil du da C-Sachen callen musst.

739
00:45:48,550 --> 00:45:52,450
Wie dem auch sei, es geht ja auch darum, dass man ein bisschen was, was lernt.

740
00:45:52,550 --> 00:45:56,450
Nicht so sehr, dass was super auch nie dagewesenes rauskommt.

741
00:45:56,550 --> 00:46:00,450
So, und ich wollte euch noch mal kurz zeigen.

742
00:46:00,550 --> 00:46:06,340
Ja, ganz ehrlich, die .NET Templates kannst du, kannst du vergessen.

743
00:46:06,440 --> 00:46:08,340
Du brauchst eigentlich nur zwei Templates in .NET.

744
00:46:08,440 --> 00:46:10,340
Du brauchst Console und Web.

745
00:46:10,440 --> 00:46:12,340
Rest reicht.

746
00:46:12,440 --> 00:46:18,100
Das ist aber schwierig mit CMD.

747
00:46:18,200 --> 00:46:19,900
Einzelne Frames.

748
00:46:20,000 --> 00:46:25,000
Aus einem RTSP H.264 Stream abzugreifen.

749
00:46:25,100 --> 00:46:29,000
Und die dann weiterzuleiten über WebRTC.

750
00:46:29,100 --> 00:46:36,000
Da wüsste ich jetzt nicht, wie ich das mit rein mit CLI und Streamen irgendwie über Standard in oder so machen soll.

751
00:46:36,100 --> 00:46:53,600
So, also.

752
00:46:53,700 --> 00:46:58,360
Die Go als erstes macht der .NET Network.

753
00:46:58,460 --> 00:47:01,360
Ich zeige euch jetzt erst mal das, was wir neu bauen müssen in Rust.

754
00:47:01,460 --> 00:47:03,360
.NET Network ist relativ simpel.

755
00:47:03,360 --> 00:47:06,460
Der erstellt einfach eine Liste mit Codecs, die supportend sind.

756
00:47:06,560 --> 00:47:08,460
Aktuell, wir supporten plus H.264.

757
00:47:08,560 --> 00:47:11,460
Und mit, in dem Fall, kriegt es halt die ID 96.

758
00:47:11,560 --> 00:47:14,460
So, dann gibt es ein bisschen Error Handling, der nicht wirklich viel macht.

759
00:47:14,560 --> 00:47:17,460
Ihr könnt übrigens auch paniken.

760
00:47:17,560 --> 00:47:20,460
Weil, will ich nicht returnen, kann man nicht gleich sagen Panic.

761
00:47:20,560 --> 00:47:22,460
Kackel.

762
00:47:22,560 --> 00:47:23,460
So.

763
00:47:23,560 --> 00:47:26,460
Ist eigentlich wurscht, weil wir wollen Go gar nicht weiter verwenden.

764
00:47:26,560 --> 00:47:28,460
So, dann.

765
00:47:28,560 --> 00:47:29,460
Settings Engine.

766
00:47:29,560 --> 00:47:32,460
Wir wollen UDP verwenden, anstatt TCP.

767
00:47:32,460 --> 00:47:33,560
Beides mal angelegt.

768
00:47:33,660 --> 00:47:34,560
Kann ich dazwischen umschalten.

769
00:47:34,660 --> 00:47:36,560
Aber wir verwenden UDP.

770
00:47:36,660 --> 00:47:37,560
Sieht man auch hier.

771
00:47:37,660 --> 00:47:41,560
Der legt eine neue Settings Engine an, sagt Network-Typ UDP.

772
00:47:41,660 --> 00:47:46,560
Und dann als Port verwenden wir 36.36.3.

773
00:47:46,660 --> 00:47:51,560
Das heißt, alle WebRTC-Verbindungen werden multiplexed über diesen Port.

774
00:47:51,660 --> 00:47:59,560
Normalerweise ist es bei WebRTC und Videokram so, dass für jede neue Verbindung und jedes neue Video ein eigener Port aufgemacht wird.

775
00:47:59,660 --> 00:48:01,560
Das ist okay.

776
00:48:01,560 --> 00:48:02,660
Das ist nicht schlimm.

777
00:48:02,760 --> 00:48:07,660
Das einzige, wo das mega nervig ist, ist, wenn du Firewall freischalten musst.

778
00:48:07,760 --> 00:48:14,670
Und mir ist es lieber, ich muss nur ein Port freischalten, als alle.

779
00:48:14,770 --> 00:48:15,670
So.

780
00:48:15,770 --> 00:48:21,670
Also, der listen auf UDP 36.36.3.

781
00:48:21,770 --> 00:48:23,670
Mit TCP geht es auch auf einem Port, ja?

782
00:48:23,770 --> 00:48:25,670
Hier, 35.35.3.

783
00:48:25,770 --> 00:48:27,670
Ich kann dir auch gleich zeigen, dass es funktioniert.

784
00:48:27,770 --> 00:48:28,670
So.

785
00:48:28,770 --> 00:48:31,670
Dann erstellt er so eine komische WebRTC-API.

786
00:48:31,770 --> 00:48:32,670
Das muss man machen.

787
00:48:32,670 --> 00:48:33,770
Weil die Library das will.

788
00:48:33,870 --> 00:48:38,770
Dann als nächstes wird ein Video-Track created, in den ich noch nichts reinschreibe.

789
00:48:38,870 --> 00:48:41,770
Aber ich brauche ein Video-Track, dass die Verbindung ordentlich funktioniert.

790
00:48:41,870 --> 00:48:43,770
Create Track.

791
00:48:43,870 --> 00:48:46,770
Er generiert eine Unique-Track-ID.

792
00:48:46,870 --> 00:48:48,770
Erzeugt einen neuen Track.

793
00:48:48,870 --> 00:48:53,770
Und pusht den Track in ein Array, äh, in eine Liste.

794
00:48:53,870 --> 00:48:54,770
Für später.

795
00:48:54,870 --> 00:48:59,770
Dann als nächstes callt er Create Connection.

796
00:48:59,870 --> 00:49:01,770
Create Connection ist das hier.

797
00:49:01,770 --> 00:49:05,870
Create Connection wird eine neue WebRTC-Verbindung erzeugt.

798
00:49:05,970 --> 00:49:08,870
Nicht fährtzeugt, erzeugt.

799
00:49:08,970 --> 00:49:12,870
Der Track, der vorhin angelegt wurde, wird der WebRTC-Verbindung hinzugefügt.

800
00:49:12,970 --> 00:49:14,870
Als neuer Video-Track.

801
00:49:14,970 --> 00:49:16,870
Dann passiert das, was ich euch schon erzählt habe.

802
00:49:16,970 --> 00:49:18,870
Es wird eine Offer erstellt.

803
00:49:18,970 --> 00:49:20,870
Das ist dieses Ding hier.

804
00:49:20,970 --> 00:49:22,870
Also, eine Offer erstellt.

805
00:49:22,970 --> 00:49:25,870
Dann wird eingesammelt, was er für Endpunkte hat.

806
00:49:25,970 --> 00:49:28,870
Also, im Prinzip sind das die Interface-IP-Adressen.

807
00:49:28,970 --> 00:49:31,670
Dann wird gesammelt.

808
00:49:31,770 --> 00:49:33,670
Connection-ID generiert.

809
00:49:33,770 --> 00:49:35,670
Connection in eine Liste gepusht.

810
00:49:35,770 --> 00:49:38,670
Und hier zurückgegeben an den C-Sharp-Teil.

811
00:49:38,770 --> 00:49:41,670
Die Client-ID und den Text.

812
00:49:41,770 --> 00:49:44,670
Und das kommt dann letztendlich im Browser raus.

813
00:49:44,770 --> 00:49:47,670
Und wenn der Browser antwortet, wird das hier gecallt.

814
00:49:47,770 --> 00:49:49,670
Und das ist auch das letzte, was es gibt.

815
00:49:49,770 --> 00:49:51,670
Dann wird das hier gecallt.

816
00:49:51,770 --> 00:49:53,670
Er holt sich die Connection raus dazu.

817
00:49:53,770 --> 00:49:55,670
Passt den String raus.

818
00:49:55,770 --> 00:49:57,670
Also wieder den C-String. Umwandelt es in den Go-String.

819
00:49:57,770 --> 00:49:59,670
Was hat er hier für Schmerzen?

820
00:49:59,770 --> 00:50:00,670
Use CamelCase instead.

821
00:50:00,670 --> 00:50:04,570
So, und dann setzt er die Antwort vom Browser in die WebRTC-Verbindung.

822
00:50:04,670 --> 00:50:08,570
Und dann ist der Handshake fertig und die Verbindung aufgebaut.

823
00:50:08,670 --> 00:50:10,570
So, das ist im Prinzip alles.

824
00:50:10,670 --> 00:50:13,570
Hat man das halbwegs verstanden?

825
00:50:13,670 --> 00:50:24,570
Also, im Prinzip besteht das aktuell aus 155 Zeilen Go, 37 Zeilen C-Sharp und ein bisschen HTML.

826
00:50:24,670 --> 00:50:28,570
Also, wir sind so ungefähr bei, keine Ahnung, 300 Zeilen.

827
00:50:28,670 --> 00:50:30,570
Also, ich denke, es ist relativ übersichtlich.

828
00:50:30,670 --> 00:50:33,470
Ach ja, eine Sache, die ich noch nicht gezeigt habe.

829
00:50:33,570 --> 00:50:40,470
Damit man Go-Sachen aufrufen kann auf C-Sharp, muss man ein bisschen Interop-Magic machen.

830
00:50:40,570 --> 00:50:43,780
Und das passiert hier.

831
00:50:43,880 --> 00:50:45,780
Rust kommt jetzt.

832
00:50:45,880 --> 00:50:47,780
Und das passiert hier.

833
00:50:47,880 --> 00:50:51,780
Also, man muss dem quasi sagen, wie die Funktionen heißen, die man in Go definiert hat.

834
00:50:51,880 --> 00:50:59,780
Und welche Return-Werte und Parameter-Argumente die haben, dass er die aufrufen kann.

835
00:50:59,780 --> 00:51:04,250
Aber ansonsten, an Logik passiert hier eigentlich nichts drin.

836
00:51:04,350 --> 00:51:06,250
Das ist alles.

837
00:51:06,350 --> 00:51:11,250
Mag vielleicht jetzt erstmal verwirrend sein, aber wir bauen das jetzt in Rust nach und ich hoffe, das funktioniert.

838
00:51:11,350 --> 00:51:13,250
Lazingly fast, natürlich.

839
00:51:13,350 --> 00:51:17,720
Was sonst?

840
00:51:17,820 --> 00:51:19,720
Und abfuck-kompliziert.

841
00:51:19,820 --> 00:51:21,720
Wahrscheinlich auch.

842
00:51:21,820 --> 00:51:23,720
Okay, also dann.

843
00:51:23,820 --> 00:51:29,720
Dann verschieben wir das mal, das Go-Ding auf Desktop 8, das ich ja nachher nachgucken kann.

844
00:51:29,820 --> 00:51:35,160
Und erstellen jetzt das Rust-Projekt.

845
00:51:35,360 --> 00:51:39,160
Rust-New-Project.

846
00:51:39,260 --> 00:51:50,160
Nennen wir es mal WebRTC Rust, weil ich glaube, ich habe den anderen Krempel ja auch WebRTC Go genannt.

847
00:51:50,260 --> 00:51:52,160
Dann nenne ich es WebRTC Rust.

848
00:51:52,260 --> 00:51:54,160
Create.

849
00:51:54,260 --> 00:51:57,660
Gut.

850
00:51:57,760 --> 00:51:59,660
So, jetzt müssen wir erst ein paar Sachen setzen.

851
00:51:59,760 --> 00:52:06,660
Also das Ziel ist, wie gesagt, eine Library erzeugen in Rust mit Interfaces, die wir dann aus .NET aufrufen können.

852
00:52:06,760 --> 00:52:12,560
Das funktioniert auf exakt die gleiche Art und Weise, wie das mit Go funktioniert.

853
00:52:12,660 --> 00:52:18,560
Hier in dem Fall erzeugt Go eine Library, wo es eben diese Funktionen drinne gibt, die dann aufgerufen werden können.

854
00:52:18,660 --> 00:52:20,560
Und Rust wird genau das gleiche machen.

855
00:52:20,660 --> 00:52:26,560
Also sprich, Rust erzeugt eine Library, wo es dann so eine Funktion zum Beispiel drin gibt.

856
00:52:26,660 --> 00:52:28,560
So.

857
00:52:28,660 --> 00:52:31,560
Dass mit das funktioniert, da müssen wir jetzt erstmal abgucken.

858
00:52:31,660 --> 00:52:36,060
Wir haben das alte doch gebackupt.

859
00:52:36,060 --> 00:52:41,470
Weil da haben wir doch schon ein bisschen Rust-mäßig gebastelt.

860
00:52:41,570 --> 00:52:43,470
Welches ZSH-Theme benutzt du?

861
00:52:43,570 --> 00:52:49,470
Das ist selbst gebaut, allerdings basiert das auf einem.

862
00:52:49,570 --> 00:52:53,470
Also als Prompt ist das Starship-AS.

863
00:52:53,570 --> 00:52:58,470
Und dort gibt es Configuration.

864
00:52:58,570 --> 00:53:05,640
Wo haben sie denn hier Beispiele für?

865
00:53:05,740 --> 00:53:06,640
Theme?

866
00:53:06,740 --> 00:53:15,610
Ja.

867
00:53:15,710 --> 00:53:17,610
Keine Ahnung.

868
00:53:17,610 --> 00:53:26,620
Ich habe diese Beispiele für Themes, aber ich bin gerade zu pepega, das zu finden.

869
00:53:26,720 --> 00:53:28,620
Zumindest, ah, Presets, hier unten.

870
00:53:28,720 --> 00:53:30,620
Das heißt nicht Themes, das heißt Presets.

871
00:53:30,720 --> 00:53:34,620
Und das hat nicht so viele Presets dabei, Starship.

872
00:53:34,720 --> 00:53:39,620
Und ich habe das hier genommen als Basis.

873
00:53:39,720 --> 00:53:44,620
Pastel Powerline, basiert auf M365 Princes.

874
00:53:44,720 --> 00:53:50,620
Also da haben sie sich alle gegenseitig befruchtet, inspirationstechnisch.

875
00:53:50,720 --> 00:53:52,620
Nur, dass ich das noch ein bisschen angepasst habe.

876
00:53:52,720 --> 00:53:57,620
Also ich habe die Schrift beispielsweise, die Farbe ein bisschen kontrastreicher gemacht.

877
00:53:57,720 --> 00:54:01,620
Ich habe beispielsweise einen 2-zeiligen Prompt daraus gemacht.

878
00:54:01,720 --> 00:54:03,620
Hier ist es ein 1-zeiliger Prompt.

879
00:54:03,720 --> 00:54:05,620
Also ihr wisst, ich mag 1-zeilige Prompte nicht.

880
00:54:05,720 --> 00:54:07,620
Ich mag eher 2-zeilige Prompts.

881
00:54:07,720 --> 00:54:09,620
Was man auch hier dran sieht.

882
00:54:09,720 --> 00:54:11,620
Das hier 1-zeilig wäre ja richtig noch ekliger.

883
00:54:11,720 --> 00:54:13,620
Ja, da wirst du gar nichts sehen.

884
00:54:13,720 --> 00:54:17,250
2-zeilig geht das hier halbwegs.

885
00:54:17,350 --> 00:54:19,250
Und meine .Files hast du tatsächlich.

886
00:54:19,350 --> 00:54:20,250
Hat ja gerade schon jemand im Chat.

887
00:54:20,350 --> 00:54:32,780
.Config.

888
00:54:32,880 --> 00:54:34,680
Starship.

889
00:54:34,780 --> 00:54:36,680
Da ist meine .Config drinne.

890
00:54:36,780 --> 00:54:37,680
Ja.

891
00:54:37,780 --> 00:54:39,680
Und da kannst du dir das abgucken.

892
00:54:39,780 --> 00:54:41,680
Also ich habe noch ein paar zusätzliche Sachen gemacht.

893
00:54:41,780 --> 00:54:48,680
Ich habe zum Beispiel bei .NET Projekten noch reingeschrieben, was es für Projekt Framework ist.

894
00:54:48,780 --> 00:54:51,680
Versus was systemweit installiert ist.

895
00:54:51,780 --> 00:54:54,680
Unser Zeug.

896
00:54:54,780 --> 00:54:57,680
Was das hier vorne ist, habe ich keine Ahnung.

897
00:54:57,780 --> 00:55:01,560
Warum das da überhaupt angezeigt wird.

898
00:55:01,660 --> 00:55:04,560
Achso.

899
00:55:04,760 --> 00:55:07,560
Weil ein Header-File drin ist oder was.

900
00:55:07,660 --> 00:55:14,560
Zeigt ja noch meine installierte GCC oder was auch immer das ist.

901
00:55:14,660 --> 00:55:16,560
Für eine Version an.

902
00:55:16,660 --> 00:55:17,560
Naja, gut.

903
00:55:17,660 --> 00:55:22,600
Alles klar.

904
00:55:22,700 --> 00:55:24,600
So, wir müssen jetzt noch ein bisschen was rüber kopieren.

905
00:55:24,700 --> 00:55:26,600
Damit das funktioniert in Rust.

906
00:55:26,700 --> 00:55:32,600
Und zwar, wir haben ja letztens schon mal ein bisschen gebastelt, was Interop zwischen .NET und Rust angeht.

907
00:55:32,700 --> 00:55:40,990
Wir müssen im Prinzip das da.

908
00:55:40,990 --> 00:55:42,890
Das da brauchen wir.

909
00:55:42,990 --> 00:55:44,890
Cargo-Tommel.

910
00:55:47,520 --> 00:55:48,420
Dependencies.

911
00:55:48,520 --> 00:55:50,420
Lib.

912
00:55:50,520 --> 00:55:51,420
Name.

913
00:55:51,520 --> 00:55:52,420
WebRTC.

914
00:55:52,520 --> 00:55:53,420
Rust.

915
00:55:53,520 --> 00:55:54,420
Vollkommen ok.

916
00:55:54,520 --> 00:55:55,420
Source.

917
00:55:55,520 --> 00:55:56,420
Muss nicht main.rs sein.

918
00:55:56,520 --> 00:55:59,420
Sondern.

919
00:55:59,520 --> 00:56:01,420
Wo ist der Rename-Knopf?

920
00:56:01,520 --> 00:56:02,420
Man.

921
00:56:02,520 --> 00:56:05,420
Lib.rs muss das Ganze sein.

922
00:56:05,520 --> 00:56:10,920
Und ich glaube, das war es schon.

923
00:56:11,020 --> 00:56:15,300
Gehen wir mal in den Ordner rein.

924
00:56:15,300 --> 00:56:19,890
Der Musikhof war immer so laut.

925
00:56:19,990 --> 00:56:22,890
So, gehen wir mal in den Ordner rein.

926
00:56:22,990 --> 00:56:23,890
Repos.

927
00:56:23,990 --> 00:56:24,890
WebRTC.

928
00:56:24,990 --> 00:56:25,890
Rust.

929
00:56:25,990 --> 00:56:26,890
Cargo.

930
00:56:26,990 --> 00:56:27,890
Build.

931
00:56:27,990 --> 00:56:28,890
Ok.

932
00:56:28,990 --> 00:56:29,890
Alter.

933
00:56:29,990 --> 00:56:32,890
Das halbe Internet wird wieder runtergeladen und kompiliert erstmal.

934
00:56:32,990 --> 00:56:43,420
So, dann müssen wir uns nämlich noch was rauskopieren hier aus dem alten Projekt, wo wir gebastelt haben.

935
00:56:43,520 --> 00:56:47,310
Lib.rs.

936
00:56:47,410 --> 00:56:49,310
Im Prinzip.

937
00:56:49,310 --> 00:56:57,210
Können wir eigentlich, weil wir haben ja schon damit mehr oder weniger angefangen.

938
00:56:57,310 --> 00:56:59,210
Das hier mal rüber kopieren.

939
00:56:59,310 --> 00:57:01,210
Wie, ich habe keinen Vim?

940
00:57:01,310 --> 00:57:02,210
Wait a minute.

941
00:57:02,310 --> 00:57:04,210
Ich habe kein.

942
00:57:04,310 --> 00:57:06,210
Ich habe keinen Vim mit.

943
00:57:06,310 --> 00:57:10,670
Mit Clipboard?

944
00:57:10,770 --> 00:57:19,040
Was ist das?

945
00:57:19,140 --> 00:57:23,670
Warum habe ich keinen Vim mit Clipboard-Funktion installiert?

946
00:57:23,770 --> 00:57:24,670
Moment, was?

947
00:57:24,770 --> 00:57:29,520
Habe ich nicht.

948
00:57:29,620 --> 00:57:32,280
Ich habe den normalen Vim.

949
00:57:32,380 --> 00:57:34,280
Der hat, glaube ich, gar keinen.

950
00:57:34,280 --> 00:57:35,180
Egal.

951
00:57:35,280 --> 00:57:38,180
Wir wollen uns jetzt nicht mit Vim-Gedöns aufhalten.

952
00:57:38,280 --> 00:57:41,640
Ok?

953
00:57:41,740 --> 00:57:42,640
Ist das Sway oder E3?

954
00:57:42,740 --> 00:57:43,640
Das ist E3.

955
00:57:43,740 --> 00:57:48,000
So.

956
00:57:48,100 --> 00:57:49,000
Gut.

957
00:57:49,100 --> 00:57:50,000
Ja, ja.

958
00:57:50,100 --> 00:57:51,000
Geh mal weg.

959
00:57:51,100 --> 00:57:52,000
Geh mal weg.

960
00:57:52,100 --> 00:57:53,000
Geh mal weg.

961
00:57:53,100 --> 00:57:54,000
Hier oben.

962
00:57:54,100 --> 00:57:55,000
Rust.

963
00:57:55,100 --> 00:57:56,000
Alter.

964
00:57:56,100 --> 00:57:59,530
Rust.

965
00:57:59,630 --> 00:58:00,530
Geh weg.

966
00:58:00,630 --> 00:58:01,530
Ok.

967
00:58:01,630 --> 00:58:02,530
Main.

968
00:58:04,900 --> 00:58:05,800
So.

969
00:58:05,900 --> 00:58:06,800
Also.

970
00:58:06,900 --> 00:58:09,800
Jetzt müssen wir gucken, wie wir den Krempel.

971
00:58:14,930 --> 00:58:16,830
Was hat er denn eigentlich für Schmerzen?

972
00:58:16,930 --> 00:58:18,830
Das müsst ihr doch nach wie vor erkennen hier.

973
00:58:18,830 --> 00:58:21,490
Bild.

974
00:58:21,590 --> 00:58:23,490
Bildet doch auch.

975
00:58:23,590 --> 00:58:26,490
Aber meine IDE ist der Meinung, es bildet nicht.

976
00:58:26,590 --> 00:58:28,490
Null.

977
00:58:28,590 --> 00:58:29,490
Na geil.

978
00:58:29,590 --> 00:58:40,000
Wollen wir neu starten?

979
00:58:40,100 --> 00:58:41,000
Wie lädt man hier?

980
00:58:41,100 --> 00:58:43,000
Kann man hier irgendwie ein Projekt reloaden?

981
00:58:43,100 --> 00:58:51,240
Ist ja noch Beta.

982
00:58:51,340 --> 00:58:52,240
Ist ja noch Beta.

983
00:58:52,340 --> 00:58:54,240
Was ich programmiere?

984
00:58:54,340 --> 00:59:04,240
Ein WebRTC, also ein Web-Backend für WebRTC mit einer WebRTC Rust Library.

985
00:59:04,240 --> 00:59:12,080
Ok.

986
00:59:12,180 --> 00:59:14,080
Ach, jetzt hat er es gecheckt.

987
00:59:14,180 --> 00:59:17,080
Ja, das ist die Rust IDE von JetBrains.

988
00:59:17,180 --> 00:59:19,080
Ob die was taugt?

989
00:59:19,180 --> 00:59:20,080
Keine Ahnung.

990
00:59:20,180 --> 00:59:21,080
Also ganz ehrlich.

991
00:59:21,180 --> 00:59:23,080
Ich bin ja nicht der große Rust Checker.

992
00:59:23,180 --> 00:59:24,080
Ja.

993
00:59:24,180 --> 00:59:28,080
Was ich bisher an IDE Support gesehen habe für Rust, ist alles bisschen Pains Champ.

994
00:59:28,180 --> 00:59:30,080
Und das auch.

995
00:59:30,180 --> 00:59:35,040
Aber das ist noch mit am wenigsten nervig.

996
00:59:35,140 --> 00:59:36,040
Ok.

997
00:59:36,140 --> 00:59:40,140
Also.

998
00:59:40,240 --> 00:59:45,140
Jetzt müssen wir diesen Krempel erstmal übersetzen von Go nach Rust.

999
00:59:45,140 --> 00:59:47,040
Da fangen wir jetzt mal an.

1000
00:59:47,140 --> 00:59:50,040
Also das erste was wir haben ist diese InitNetwork Funktion.

1001
00:59:50,140 --> 00:59:54,040
Ich kopiere mir mal kurz das Go hier rüber.

1002
00:59:54,140 --> 00:59:57,040
Und dann vergleichen wir das mal mit dem was wir hier gebaut haben.

1003
00:59:57,140 --> 00:59:58,040
In Rust.

1004
00:59:58,140 --> 01:00:00,040
Ob das so halbwegs passt.

1005
01:00:00,140 --> 01:00:01,040
Also.

1006
01:00:01,140 --> 01:00:03,040
Wir legen eine Media Engine an.

1007
01:00:03,140 --> 01:00:05,040
Das mache ich hier auch.

1008
01:00:05,140 --> 01:00:06,040
So.

1009
01:00:06,140 --> 01:00:09,040
Dann registern wir einen Codec.

1010
01:00:09,140 --> 01:00:15,020
PayloadType, ok 96.

1011
01:00:15,120 --> 01:00:18,020
PayloadType 96.

1012
01:00:18,220 --> 01:00:20,020
Typ Video.

1013
01:00:20,120 --> 01:00:23,540
Ja.

1014
01:00:23,640 --> 01:00:24,540
Ne, ne, ne.

1015
01:00:24,640 --> 01:00:26,540
Das mache ich nicht mit ChatGPT.

1016
01:00:26,640 --> 01:00:27,540
Selbst.

1017
01:00:27,640 --> 01:00:30,050
So.

1018
01:00:30,150 --> 01:00:31,050
Das sieht.

1019
01:00:31,150 --> 01:00:32,050
Das sieht.

1020
01:00:32,150 --> 01:00:33,050
Also ich würde sagen.

1021
01:00:33,150 --> 01:00:35,050
So weit haben wir das schon mal drinne.

1022
01:00:35,150 --> 01:00:38,050
Dann eine Settings Engine.

1023
01:00:38,150 --> 01:00:40,050
Dann eine Settings Engine.

1024
01:00:40,150 --> 01:00:41,050
Wobei.

1025
01:00:41,150 --> 01:00:42,050
Sagen wir mal so.

1026
01:00:42,150 --> 01:00:43,050
Ich habe es hier umgedreht.

1027
01:00:43,150 --> 01:00:44,050
Aber mein.

1028
01:00:44,150 --> 01:00:48,050
Das macht jetzt ja nicht wirklich einen großen Unterschied.

1029
01:00:48,150 --> 01:00:50,050
Dann eine Settings Engine.

1030
01:00:50,150 --> 01:00:52,050
Mit Settings für UDP.

1031
01:00:52,150 --> 01:00:52,950
Habe ich auch.

1032
01:00:53,050 --> 01:00:55,950
Zur UDP Port 35353.

1033
01:00:56,050 --> 01:00:57,950
Wobei ich hatte 36363.

1034
01:00:58,050 --> 01:00:58,950
Ne.

1035
01:00:59,050 --> 01:00:59,950
Glaube ich.

1036
01:01:00,050 --> 01:01:01,950
UDP Port.

1037
01:01:02,050 --> 01:01:03,950
36363.

1038
01:01:04,050 --> 01:01:04,950
Ok.

1039
01:01:05,050 --> 01:01:05,950
So.

1040
01:01:06,050 --> 01:01:06,950
Und als letztes.

1041
01:01:07,050 --> 01:01:08,950
Gibt es noch das hier.

1042
01:01:09,050 --> 01:01:10,950
Was übrig ist von Go.

1043
01:01:11,050 --> 01:01:14,950
Und das habe ich hier glaube ich auch schon das letzte mal gebaut.

1044
01:01:15,050 --> 01:01:15,950
In Rust.

1045
01:01:16,050 --> 01:01:16,950
Aber das.

1046
01:01:17,050 --> 01:01:17,950
Viel mehr.

1047
01:01:18,050 --> 01:01:18,950
Viel mehr hatten wir da.

1048
01:01:19,050 --> 01:01:20,050
Hatten wir da glaube ich nicht mehr gemacht.

1049
01:01:20,150 --> 01:01:20,950
Also.

1050
01:01:20,950 --> 01:01:22,850
Also in Go sieht das so aus.

1051
01:01:22,950 --> 01:01:25,850
RP gleich WebRTC New RP.

1052
01:01:25,950 --> 01:01:26,850
With Settings Engine.

1053
01:01:26,950 --> 01:01:27,850
Settings Engine.

1054
01:01:27,950 --> 01:01:29,850
With Media Engine M.

1055
01:01:29,950 --> 01:01:30,850
So.

1056
01:01:30,950 --> 01:01:31,850
Das habe ich hier auch.

1057
01:01:31,950 --> 01:01:32,850
With Settings Engine.

1058
01:01:32,950 --> 01:01:33,850
Settings Engine.

1059
01:01:33,950 --> 01:01:34,850
With Media Engine.

1060
01:01:34,950 --> 01:01:39,460
Media Engine.

1061
01:01:39,560 --> 01:01:40,460
Und.

1062
01:01:40,560 --> 01:01:41,460
Das hier ist.

1063
01:01:41,560 --> 01:01:44,460
Um es als globale Variable zu haben.

1064
01:01:44,560 --> 01:01:45,460
Ne.

1065
01:01:45,560 --> 01:01:46,460
Genau.

1066
01:01:46,560 --> 01:01:47,460
Das ist Rust Magic dafür.

1067
01:01:47,560 --> 01:01:49,460
Um es als globale Variable zu haben.

1068
01:01:49,560 --> 01:01:50,460
Ui.

1069
01:01:50,560 --> 01:01:51,460
Ja gut.

1070
01:01:51,560 --> 01:01:52,460
Dann.

1071
01:01:52,560 --> 01:01:53,460
Würde ich sagen.

1072
01:01:53,460 --> 01:01:55,360
Der Teil.

1073
01:01:55,460 --> 01:01:57,360
Der Teil passt schon mal in Rust.

1074
01:01:57,460 --> 01:01:59,360
Der sieht genauso aus wie in Go.

1075
01:01:59,460 --> 01:02:01,360
Nicht viel Unterschied dazwischen.

1076
01:02:01,460 --> 01:02:02,360
So.

1077
01:02:02,460 --> 01:02:03,360
Dann machen wir mal weiter.

1078
01:02:03,460 --> 01:02:04,360
Mit.

1079
01:02:04,460 --> 01:02:05,360
Also.

1080
01:02:05,460 --> 01:02:06,360
Das.

1081
01:02:06,460 --> 01:02:08,360
Das klappen wir mal ein.

1082
01:02:08,460 --> 01:02:09,360
Das haben wir.

1083
01:02:09,460 --> 01:02:10,360
Das haben wir.

1084
01:02:10,460 --> 01:02:11,360
Ja.

1085
01:02:11,460 --> 01:02:14,360
Memory Leaks sind erstmal nicht so wild.

1086
01:02:14,460 --> 01:02:17,360
Create Track brauchen wir jetzt.

1087
01:02:17,460 --> 01:02:19,360
Da bin ich nicht sicher ob wir sowas.

1088
01:02:19,460 --> 01:02:20,360
Ne.

1089
01:02:20,460 --> 01:02:21,360
Siehste.

1090
01:02:21,460 --> 01:02:22,360
Haben wir noch nicht gemacht.

1091
01:02:22,360 --> 01:02:23,260
Also.

1092
01:02:23,360 --> 01:02:24,260
Create Track.

1093
01:02:24,360 --> 01:02:27,260
In Go sieht das ganze so aus.

1094
01:02:27,360 --> 01:02:30,260
Erzeugt sich eine Random Track ID.

1095
01:02:30,360 --> 01:02:35,580
Und dann legt er nen Track an.

1096
01:02:35,680 --> 01:02:42,950
Und speichert den sich in eine Liste.

1097
01:02:43,050 --> 01:02:43,950
Da gehts jetzt los.

1098
01:02:44,050 --> 01:02:45,950
Das wüsste ich schon mal nicht.

1099
01:02:46,050 --> 01:02:46,950
Wie ich das in Go.

1100
01:02:47,050 --> 01:02:48,950
Wie ich das in Rust gescheit mache.

1101
01:02:50,360 --> 01:02:54,260
Bei der Sache hier flippen die ganzen Rust Liebhaber schon aus.

1102
01:02:54,360 --> 01:02:56,260
Aber wenn du Interrupt mit anderen Sprachen machst.

1103
01:02:56,260 --> 01:02:59,160
Wüsste ich nicht wie man das gescheit machen soll.

1104
01:02:59,260 --> 01:03:01,160
Zum Stage sharen.

1105
01:03:01,260 --> 01:03:03,160
Wir bräuchten jetzt sowas wie.

1106
01:03:03,260 --> 01:03:05,160
Eine.

1107
01:03:05,260 --> 01:03:07,160
Eine Track Liste.

1108
01:03:07,260 --> 01:03:09,160
Enver Tracks.

1109
01:03:09,260 --> 01:03:11,160
Und das ist.

1110
01:03:11,260 --> 01:03:13,160
Tja.

1111
01:03:13,260 --> 01:03:15,160
Collection Typen.

1112
01:03:15,260 --> 01:03:17,160
In Rust.

1113
01:03:17,260 --> 01:03:19,160
Ich brauch eine Hash Map sowas in der Richtung.

1114
01:03:19,260 --> 01:03:21,160
So nen Dictionary quasi.

1115
01:03:21,260 --> 01:03:23,160
Hash Map.

1116
01:03:23,260 --> 01:03:24,160
Gibt es.

1117
01:03:24,260 --> 01:03:25,160
Nice.

1118
01:03:25,160 --> 01:03:27,060
Zwar eine Hash Map.

1119
01:03:27,160 --> 01:03:28,060
Aus Track ID.

1120
01:03:28,160 --> 01:03:30,060
Also quasi ein.

1121
01:03:30,160 --> 01:03:31,060
Sagen wir mal nen Int.

1122
01:03:31,160 --> 01:03:33,060
Zum Beispiel.

1123
01:03:33,160 --> 01:03:35,060
Nen Int.

1124
01:03:35,160 --> 01:03:37,060
Und einer.

1125
01:03:37,160 --> 01:03:39,060
Einem Track.

1126
01:03:39,160 --> 01:03:41,060
Also einem.

1127
01:03:41,160 --> 01:03:42,060
Ja.

1128
01:03:42,160 --> 01:03:43,060
Wie heißt das auch.

1129
01:03:43,160 --> 01:03:45,060
Local Static Sample.

1130
01:03:45,160 --> 01:03:46,060
Ja.

1131
01:03:46,160 --> 01:03:48,500
Nice.

1132
01:03:48,600 --> 01:03:49,500
Top.

1133
01:03:49,600 --> 01:03:54,950
Dann ist die Musik schon vorbei.

1134
01:03:55,050 --> 01:03:56,950
Ist das dann ein Server pro Client.

1135
01:03:57,050 --> 01:03:57,950
1 zu 1.

1136
01:03:58,050 --> 01:03:58,950
Ne.

1137
01:03:59,050 --> 01:03:59,950
Da können belieb.

1138
01:03:59,950 --> 01:04:00,850
Beliebig.

1139
01:04:00,950 --> 01:04:01,850
Bis der RAM ausgeht.

1140
01:04:01,950 --> 01:04:03,850
Viele Clients hin connecten.

1141
01:04:03,950 --> 01:04:07,850
Und die kriegen alle dann die gleichen Video Streams geschickt.

1142
01:04:07,950 --> 01:04:08,850
Ne ne.

1143
01:04:08,950 --> 01:04:09,850
Da können so viele.

1144
01:04:09,950 --> 01:04:10,850
Und alle über den gleichen Port.

1145
01:04:10,950 --> 01:04:11,850
Das ist ja das coole.

1146
01:04:11,950 --> 01:04:13,850
Das wird alles multiplex über den gleichen Port.

1147
01:04:13,950 --> 01:04:15,850
Deswegen musst du nur eine Sache in der Firewall freischalten.

1148
01:04:15,950 --> 01:04:20,980
Stimmt.

1149
01:04:21,080 --> 01:04:22,980
Da war irgendwas.

1150
01:04:23,080 --> 01:04:24,980
Ich weiß aber nicht mehr was.

1151
01:04:25,080 --> 01:04:28,420
Ich glaube ich musste.

1152
01:04:28,520 --> 01:04:30,420
Ich musste.

1153
01:04:30,520 --> 01:04:32,420
In Rust noch was aufrufen.

1154
01:04:32,520 --> 01:04:33,420
Für free.

1155
01:04:33,420 --> 01:04:35,890
Naja.

1156
01:04:35,990 --> 01:04:36,890
Wie gesagt.

1157
01:04:36,990 --> 01:04:37,890
Scheiß auf Memory Leaks.

1158
01:04:37,990 --> 01:04:39,890
Hauptsache es funktioniert erstmal.

1159
01:04:39,990 --> 01:04:40,890
So.

1160
01:04:40,990 --> 01:04:41,890
Cargo Build.

1161
01:04:41,990 --> 01:04:42,890
Moment.

1162
01:04:42,990 --> 01:04:43,890
Es funktioniert noch.

1163
01:04:43,990 --> 01:04:46,520
Da kann irgendwas nicht stimmen.

1164
01:04:46,620 --> 01:04:50,340
Da stimmt irgendwas nicht Leute.

1165
01:04:50,440 --> 01:04:51,340
Da stimmt.

1166
01:04:51,440 --> 01:04:52,340
Ich.

1167
01:04:52,440 --> 01:04:59,000
Wenn in Rust einfach was kompiliert dann stimmt was nicht.

1168
01:04:59,100 --> 01:05:00,000
Ok.

1169
01:05:00,100 --> 01:05:01,000
Also.

1170
01:05:01,100 --> 01:05:03,000
Dann legen wir mal los.

1171
01:05:03,100 --> 01:05:05,000
Wir tun mal.

1172
01:05:05,100 --> 01:05:06,000
Wir hardconen erstmal.

1173
01:05:06,100 --> 01:05:07,000
Ok.

1174
01:05:07,100 --> 01:05:08,000
Also.

1175
01:05:08,100 --> 01:05:09,000
Wir brauchen eine Track ID.

1176
01:05:09,100 --> 01:05:10,000
Wir sind in Rust.

1177
01:05:10,000 --> 01:05:14,490
Also Track ID.

1178
01:05:14,590 --> 01:05:15,490
Zwei.

1179
01:05:15,590 --> 01:05:16,490
So.

1180
01:05:16,590 --> 01:05:17,490
Hardcoded Track ID.

1181
01:05:17,590 --> 01:05:18,490
Ok.

1182
01:05:18,590 --> 01:05:20,490
Das hier lassen wir weg.

1183
01:05:20,590 --> 01:05:21,490
So.

1184
01:05:21,590 --> 01:05:22,490
Und das heißt wir brauchen jetzt einen Track.

1185
01:05:22,590 --> 01:05:24,490
Let Track gleich.

1186
01:05:24,590 --> 01:05:25,490
Und jetzt ist die Frage.

1187
01:05:25,590 --> 01:05:27,490
Wie lege ich das in Rust an?

1188
01:05:27,590 --> 01:05:30,490
Track Local Static Sample.

1189
01:05:30,590 --> 01:05:31,490
Irgendwie so.

1190
01:05:31,590 --> 01:05:32,490
Ah.

1191
01:05:32,590 --> 01:05:33,490
New.

1192
01:05:33,590 --> 01:05:34,490
Guck mal da.

1193
01:05:34,590 --> 01:05:41,800
Der braucht ein Codec, eine ID und eine Stream ID.

1194
01:05:41,900 --> 01:05:43,800
Oh Camel.

1195
01:05:43,800 --> 01:05:44,700
Never.

1196
01:05:44,800 --> 01:05:49,400
But I've tried Erlang.

1197
01:05:49,500 --> 01:05:54,440
And.

1198
01:05:54,540 --> 01:05:56,440
Also.

1199
01:05:56,540 --> 01:06:01,440
Also for languages with many parentheses.

1200
01:06:01,540 --> 01:06:03,440
Erlang.

1201
01:06:03,540 --> 01:06:04,440
And.

1202
01:06:04,540 --> 01:06:09,800
Can't remember.

1203
01:06:09,900 --> 01:06:12,800
I think it was Clojure.

1204
01:06:12,900 --> 01:06:16,800
Or something on Java base.

1205
01:06:16,900 --> 01:06:22,070
Also Camel ist gleich Rust mit GC.

1206
01:06:22,170 --> 01:06:23,070
Ok.

1207
01:06:23,070 --> 01:06:50,660
Also ich weiß, dass der ursprüngliche Rust Compiler in OCaml war.

1208
01:06:50,760 --> 01:06:51,660
So.

1209
01:06:51,760 --> 01:06:52,660
Wie funsten das hier jetzt?

1210
01:06:52,760 --> 01:06:54,660
Track Local Static Sample.

1211
01:06:54,760 --> 01:06:56,660
Also wir brauchen eine RTC.

1212
01:06:56,760 --> 01:06:57,660
Was?

1213
01:06:57,760 --> 01:06:58,660
Eine was?

1214
01:06:58,760 --> 01:06:59,660
Eine RTC.

1215
01:06:59,760 --> 01:07:02,660
RTP Codec Capability.

1216
01:07:02,760 --> 01:07:04,660
Ich glaube das ist das gleiche was wir hier.

1217
01:07:04,760 --> 01:07:05,660
Ne.

1218
01:07:05,760 --> 01:07:06,660
Ok.

1219
01:07:06,760 --> 01:07:07,660
Rust.

1220
01:07:07,760 --> 01:07:08,660
Das geht schon los.

1221
01:07:08,760 --> 01:07:10,660
Also was brauchen wir jetzt?

1222
01:07:10,660 --> 01:07:12,560
Ok.

1223
01:07:12,660 --> 01:07:14,560
Und jetzt Klammer auf.

1224
01:07:14,660 --> 01:07:16,560
Mime Type.

1225
01:07:16,660 --> 01:07:18,560
Channels.

1226
01:07:18,660 --> 01:07:20,560
Yep Clock Rate.

1227
01:07:20,660 --> 01:07:27,580
Was will der von mir?

1228
01:07:27,680 --> 01:07:29,580
Ah Default.

1229
01:07:29,680 --> 01:07:31,580
PyFat.

1230
01:07:31,680 --> 01:07:34,580
Ey können wir nicht.

1231
01:07:34,680 --> 01:07:35,580
Moment.

1232
01:07:35,680 --> 01:07:36,580
Hier ist es doch.

1233
01:07:36,680 --> 01:07:37,580
Hier steht es doch.

1234
01:07:37,680 --> 01:07:38,580
Moment.

1235
01:07:38,680 --> 01:07:39,580
Warte mal.

1236
01:07:39,680 --> 01:07:40,580
Hier ist es doch.

1237
01:07:40,680 --> 01:07:44,050
Hier ist es doch.

1238
01:07:44,150 --> 01:07:45,050
Hier ist doch hier.

1239
01:07:45,150 --> 01:07:46,050
Guck mal.

1240
01:07:46,150 --> 01:07:47,050
Hier ist doch alles.

1241
01:07:47,050 --> 01:07:50,640
Kann ich nicht.

1242
01:07:50,740 --> 01:07:53,980
Warte mal.

1243
01:07:54,080 --> 01:07:54,980
Kann man.

1244
01:07:55,080 --> 01:07:55,980
So was.

1245
01:07:56,080 --> 01:07:58,980
So was geht in Rust wahrscheinlich nicht.

1246
01:07:59,080 --> 01:07:59,980
Ne.

1247
01:08:00,080 --> 01:08:02,980
Das dachte ich mir fast schon.

1248
01:08:03,080 --> 01:08:03,980
Static.

1249
01:08:04,080 --> 01:08:04,980
Ne.

1250
01:08:05,080 --> 01:08:05,980
Geht nicht.

1251
01:08:06,080 --> 01:08:06,980
Weil.

1252
01:08:07,080 --> 01:08:08,980
Missing the Type for Static.

1253
01:08:09,080 --> 01:08:10,980
Wieso steht doch da?

1254
01:08:11,080 --> 01:08:12,980
Muss ich irgendwie noch so was machen?

1255
01:08:13,080 --> 01:08:18,080
Habe ich das von uns?

1256
01:08:18,180 --> 01:08:26,900
Das kompiliert doch im Leben nicht.

1257
01:08:27,000 --> 01:08:27,900
Alter.

1258
01:08:28,000 --> 01:08:28,900
Es war.

1259
01:08:29,000 --> 01:08:29,900
Ja.

1260
01:08:29,900 --> 01:08:31,800
Hätte mich auch.

1261
01:08:31,900 --> 01:08:34,800
Hätte mich auch ganz stark gewundert wenn das jetzt einfach kompiliert.

1262
01:08:34,900 --> 01:08:36,800
Wobei der meckert gar nicht da drüber.

1263
01:08:36,900 --> 01:08:38,800
Der meckert hier drüber.

1264
01:08:38,900 --> 01:08:40,800
Sack.

1265
01:08:40,900 --> 01:08:41,800
Ähm.

1266
01:08:41,900 --> 01:08:44,240
Ne.

1267
01:08:44,340 --> 01:08:49,410
Was?

1268
01:08:49,510 --> 01:08:53,410
Ok das geht in Static aus irgendwelchen Gründen nicht.

1269
01:08:53,510 --> 01:08:55,410
Warum auch immer.

1270
01:08:55,510 --> 01:08:56,410
Keine Ahnung.

1271
01:08:56,510 --> 01:08:57,410
Weil.

1272
01:08:57,510 --> 01:08:58,410
PyFat Rust.

1273
01:08:58,510 --> 01:08:59,410
Wir machen.

1274
01:08:59,510 --> 01:09:01,410
Wir machen jetzt einfach eine Funktion draus.

1275
01:09:01,510 --> 01:09:02,410
Public.

1276
01:09:02,510 --> 01:09:03,410
Ok.

1277
01:09:03,410 --> 01:09:04,310
Keine Ahnung.

1278
01:09:04,410 --> 01:09:05,310
Get.

1279
01:09:05,410 --> 01:09:11,400
Ja.

1280
01:09:11,500 --> 01:09:12,400
Ja.

1281
01:09:12,500 --> 01:09:13,400
Ja.

1282
01:09:13,500 --> 01:09:18,400
Ja.

1283
01:09:18,500 --> 01:09:19,400
Ja.

1284
01:09:19,500 --> 01:09:20,400
Ja.

1285
01:09:20,500 --> 01:09:21,400
Ist gut.

1286
01:09:21,500 --> 01:09:30,750
Ich.

1287
01:09:30,850 --> 01:09:31,750
Ich habe schon was getrunken.

1288
01:09:31,850 --> 01:09:39,880
Wie sowas hier.

1289
01:09:39,980 --> 01:09:40,880
Ja.

1290
01:09:40,980 --> 01:09:41,880
Und wie funzt das jetzt?

1291
01:09:41,980 --> 01:09:43,880
Kann man das hier nicht?

1292
01:09:43,980 --> 01:09:44,880
Returnen einfach?

1293
01:09:44,980 --> 01:09:45,880
Moment.

1294
01:09:45,980 --> 01:09:46,880
Moment.

1295
01:09:46,980 --> 01:09:47,880
Oh.

1296
01:09:47,980 --> 01:09:48,880
Warte mal.

1297
01:09:48,980 --> 01:09:49,880
Warte mal.

1298
01:09:49,980 --> 01:09:50,880
Rust.

1299
01:09:50,980 --> 01:09:51,880
FN muss da noch davor.

1300
01:09:51,980 --> 01:09:59,250
Pub FN.

1301
01:09:59,350 --> 01:10:00,250
Ja.

1302
01:10:00,350 --> 01:10:05,740
Und jetzt will er Return Type.

1303
01:10:05,840 --> 01:10:07,740
Mach mal deinen Cargo Check unten an.

1304
01:10:07,940 --> 01:10:10,240
Ah.

1305
01:10:10,340 --> 01:10:20,300
Was.

1306
01:10:20,400 --> 01:10:21,300
Was will das von mir?

1307
01:10:21,400 --> 01:10:31,290
Anschein.

1308
01:10:31,390 --> 01:10:32,290
Anscheinend ist es aus.

1309
01:10:32,390 --> 01:10:34,290
Aber die große Preisfrage ist.

1310
01:10:34,390 --> 01:10:35,290
Wie mache ich es an?

1311
01:10:35,390 --> 01:10:42,080
Ok.

1312
01:10:42,180 --> 01:10:43,080
Gut.

1313
01:10:43,180 --> 01:10:44,080
Das heißt.

1314
01:10:44,180 --> 01:10:47,870
Wenn ich jetzt da irgendeinen Shit reinschreibe.

1315
01:10:47,970 --> 01:10:48,870
Ok.

1316
01:10:48,970 --> 01:10:49,870
Werden wir gleich sehen.

1317
01:10:49,970 --> 01:10:50,870
Also.

1318
01:10:50,970 --> 01:10:51,870
Get Capabilities.

1319
01:10:51,970 --> 01:10:52,870
Schreibt man das so?

1320
01:10:52,970 --> 01:10:53,870
Das schreibt man doch im Leben nicht so.

1321
01:10:53,970 --> 01:10:54,870
Oder?

1322
01:10:54,970 --> 01:10:55,870
Weißt du.

1323
01:10:55,970 --> 01:10:56,870
Kappa.

1324
01:10:56,970 --> 01:10:57,870
Bilities.

1325
01:10:57,970 --> 01:11:01,460
Ok.

1326
01:11:01,560 --> 01:11:02,460
Das.

1327
01:11:02,560 --> 01:11:04,960
Das.

1328
01:11:05,060 --> 01:11:05,960
Kompiliert das jetzt?

1329
01:11:06,060 --> 01:11:06,960
Ja.

1330
01:11:07,060 --> 01:11:07,960
Nice.

1331
01:11:08,060 --> 01:11:08,960
So.

1332
01:11:08,960 --> 01:11:09,860
Das heißt.

1333
01:11:09,960 --> 01:11:12,860
Wir können jetzt an der Stelle das einfach wegschmeißen.

1334
01:11:12,960 --> 01:11:14,860
Track Local Static Sample.

1335
01:11:14,960 --> 01:11:15,860
Gut.

1336
01:11:15,960 --> 01:11:16,860
So.

1337
01:11:16,960 --> 01:11:17,860
Da kriegt man jetzt.

1338
01:11:17,960 --> 01:11:20,860
RTC Code Capability.

1339
01:11:20,960 --> 01:11:22,860
Das da.

1340
01:11:22,960 --> 01:11:24,860
Können wir da reinhauen jetzt.

1341
01:11:24,960 --> 01:11:27,860
Stream Track ID.

1342
01:11:27,960 --> 01:11:28,860
Keine Ahnung.

1343
01:11:28,960 --> 01:11:29,860
1.

1344
01:11:29,960 --> 01:11:30,860
1.

1345
01:11:30,960 --> 01:11:31,860
Wir wollen jetzt.

1346
01:11:31,960 --> 01:11:32,860
Drauf geschissen.

1347
01:11:32,960 --> 01:11:36,710
Erstmal.

1348
01:11:36,810 --> 01:11:37,710
To Owned.

1349
01:11:37,810 --> 01:11:40,280
Nur mal gucken.

1350
01:11:40,380 --> 01:11:42,280
Ob das auch ordentlich läuft.

1351
01:11:42,280 --> 01:11:44,180
So.

1352
01:11:51,100 --> 01:11:52,000
Das Funst.

1353
01:11:52,100 --> 01:11:54,820
Kompiliert noch.

1354
01:11:54,920 --> 01:11:55,820
Ja.

1355
01:11:55,920 --> 01:11:56,820
Gut.

1356
01:11:56,920 --> 01:11:57,820
Gut.

1357
01:11:57,920 --> 01:11:58,820
Gut.

1358
01:11:58,920 --> 01:11:59,820
Also.

1359
01:11:59,920 --> 01:12:00,820
Das brauchen wir nicht.

1360
01:12:00,920 --> 01:12:01,820
Das haben wir.

1361
01:12:01,920 --> 01:12:02,820
Wir haben den Track.

1362
01:12:02,920 --> 01:12:03,820
Track Panic.

1363
01:12:03,920 --> 01:12:04,820
Kommt weg.

1364
01:12:04,920 --> 01:12:05,820
Ja.

1365
01:12:05,920 --> 01:12:06,820
Das wird ja viel kürzer sogar als in Rust.

1366
01:12:06,920 --> 01:12:07,820
So.

1367
01:12:07,920 --> 01:12:09,820
Und jetzt muss ich den Track hier drinnen irgendwie speichern.

1368
01:12:09,920 --> 01:12:11,820
Welchen Package Manager benutzt du?

1369
01:12:11,920 --> 01:12:12,820
Für was?

1370
01:12:12,920 --> 01:12:13,820
So.

1371
01:12:13,920 --> 01:12:18,820
Jetzt haben wir hier irgendwie eine Hash Map.

1372
01:12:18,920 --> 01:12:19,820
Für Tracks.

1373
01:12:19,820 --> 01:12:21,720
Linux.

1374
01:12:21,820 --> 01:12:22,720
Ja.

1375
01:12:22,820 --> 01:12:23,720
Pacman.

1376
01:12:23,820 --> 01:12:26,160
Arch by the way.

1377
01:12:26,260 --> 01:12:27,160
Ach so.

1378
01:12:27,260 --> 01:12:28,160
Das da meinste.

1379
01:12:28,260 --> 01:12:29,160
Das hier.

1380
01:12:29,260 --> 01:12:33,460
Okay.

1381
01:12:33,560 --> 01:12:36,460
Wie kriegt man jetzt in die Hash Map was Gescheites rein?

1382
01:12:36,560 --> 01:12:37,460
Moment.

1383
01:12:37,560 --> 01:12:39,460
Den haben wir noch gar nicht initialisiert.

1384
01:12:39,560 --> 01:12:41,460
Das wird er mir hier auch sagen.

1385
01:12:41,560 --> 01:12:42,460
Ne.

1386
01:12:42,560 --> 01:12:43,460
Ich.

1387
01:12:43,560 --> 01:12:44,460
Das hier unten müssen wir.

1388
01:12:44,560 --> 01:12:46,460
Wir müssen das glaube ich nochmal initialisieren.

1389
01:12:46,560 --> 01:12:47,460
Set.

1390
01:12:47,560 --> 01:12:48,460
Hash Map.

1391
01:12:48,560 --> 01:12:49,460
New.

1392
01:12:49,560 --> 01:12:53,020
Hoffe das funst jetzt.

1393
01:12:53,120 --> 01:12:54,020
Prager.

1394
01:12:54,120 --> 01:12:57,230
Prager.

1395
01:12:57,230 --> 01:12:58,130
Prager.

1396
01:12:58,230 --> 01:12:59,130
Prager.

1397
01:12:59,230 --> 01:13:00,130
Okay.

1398
01:13:00,230 --> 01:13:01,130
Noch.

1399
01:13:01,230 --> 01:13:02,130
Noch.

1400
01:13:02,230 --> 01:13:03,130
Kompiliert.

1401
01:13:03,230 --> 01:13:04,130
Alles.

1402
01:13:04,230 --> 01:13:05,130
Was ich bastle.

1403
01:13:05,230 --> 01:13:08,130
Ein Frontend wo ich per Web RTC Videos hin streamen kann.

1404
01:13:08,230 --> 01:13:14,760
Mischung aus Go.net für die Web Anwendung und bisschen HTML.

1405
01:13:14,860 --> 01:13:17,760
Hauptsächlich bisschen um Rust zu lernen.

1406
01:13:17,860 --> 01:13:20,760
Also ich hab das schon in Go gebaut.

1407
01:13:20,860 --> 01:13:23,760
Ich hab das schon in Go gebaut um zu testen ob es funktioniert.

1408
01:13:23,860 --> 01:13:26,760
Es funktioniert und jetzt bauen wir das in Rust nach.

1409
01:13:26,860 --> 01:13:27,760
Genau.

1410
01:13:27,760 --> 01:13:28,660
Genau.

1411
01:13:28,760 --> 01:13:30,660
Der Twitch Killer.

1412
01:13:30,760 --> 01:13:32,660
Was macht eigentlich Dings hier?

1413
01:13:32,760 --> 01:13:34,660
Kick.

1414
01:13:34,760 --> 01:13:35,660
Letztens.

1415
01:13:35,760 --> 01:13:37,660
Letztes Mal wieder reingeguckt.

1416
01:13:37,760 --> 01:13:40,660
Übelst zwielichtiges Zeug wieder gesehen und gleich wieder ausgemacht.

1417
01:13:40,760 --> 01:13:42,660
Also das ist echt nicht.

1418
01:13:42,760 --> 01:13:44,660
Das ist echt nicht die Twitch Konkurrenz.

1419
01:13:44,760 --> 01:13:45,660
Keine Ahnung ey.

1420
01:13:45,760 --> 01:13:52,730
Das deckt glaube ich ein ganz anderen.

1421
01:13:52,830 --> 01:13:55,730
Ein ganz anderes Klientel ab als Twitch.

1422
01:13:55,830 --> 01:13:58,490
Okay.

1423
01:13:58,590 --> 01:14:01,490
Und jetzt müssen wir den Track inserten in die Hash Map.

1424
01:14:01,590 --> 01:14:02,490
Also.

1425
01:14:02,490 --> 01:14:06,170
Tracks.

1426
01:14:06,270 --> 01:14:08,170
Insert.

1427
01:14:08,270 --> 01:14:09,170
Ne Moment.

1428
01:14:09,270 --> 01:14:12,170
Das ist in einem Once Log.

1429
01:14:12,270 --> 01:14:15,170
Das heißt ich brauch jetzt ähm.

1430
01:14:15,270 --> 01:14:16,170
Write.

1431
01:14:16,270 --> 01:14:18,170
Ne.

1432
01:14:18,270 --> 01:14:25,260
Brauch ich denn jetzt?

1433
01:14:25,360 --> 01:14:31,800
Get.

1434
01:14:31,900 --> 01:14:38,200
Get Mud.

1435
01:14:38,300 --> 01:14:39,200
Okay.

1436
01:14:39,300 --> 01:14:40,200
Get Mud.

1437
01:14:40,300 --> 01:14:42,200
Alles klar.

1438
01:14:42,300 --> 01:14:43,200
Rust.

1439
01:14:43,300 --> 01:14:44,200
Rust.

1440
01:14:44,300 --> 01:14:45,200
Things.

1441
01:14:45,300 --> 01:14:46,200
Unwrap.

1442
01:14:46,300 --> 01:14:48,200
Zack.

1443
01:14:48,300 --> 01:14:50,200
Natürlich geht es.

1444
01:14:50,200 --> 01:14:53,100
Es wäre viel zu einfach wenn das irgendwie.

1445
01:14:53,200 --> 01:14:54,100
Moment.

1446
01:14:54,200 --> 01:14:55,100
Das muss ja Mutt vorne hin wahrscheinlich noch.

1447
01:14:55,200 --> 01:14:57,100
Ne.

1448
01:14:57,200 --> 01:15:03,100
Es wäre viel zu einfach wenn das in Rust einfach gleich funktionieren würde.

1449
01:15:03,200 --> 01:15:04,100
Das.

1450
01:15:04,200 --> 01:15:05,100
Okay.

1451
01:15:05,200 --> 01:15:06,100
Jetzt geht es wieder los Mann.

1452
01:15:06,200 --> 01:15:08,100
Was hat er jetzt für Schmerzen Mann?

1453
01:15:08,200 --> 01:15:09,100
Also.

1454
01:15:09,200 --> 01:15:11,100
Wie habe ich das denn mit API gemacht?

1455
01:15:11,200 --> 01:15:13,100
Bisher habe ich das überhaupt schon mal irgendwo gemacht.

1456
01:15:13,200 --> 01:15:14,100
Ah.

1457
01:15:14,200 --> 01:15:15,100
Get.

1458
01:15:15,200 --> 01:15:16,100
Get muss man machen.

1459
01:15:16,200 --> 01:15:17,100
Moment.

1460
01:15:17,200 --> 01:15:18,100
Get Mutt.

1461
01:15:18,100 --> 01:15:21,000
Jetzt habe ich das doch schon mal hier.

1462
01:15:21,100 --> 01:15:23,800
Cannot borrow immutable local variable tracks.

1463
01:15:24,000 --> 01:15:26,000
Cannot borrow immutable static..

1464
01:15:26,100 --> 01:15:27,000
What?

1465
01:15:27,100 --> 01:15:32,320
Was willst du?

1466
01:15:32,420 --> 01:15:33,320
What?

1467
01:15:33,420 --> 01:15:46,390
Rust.

1468
01:15:47,390 --> 01:15:49,390
Ne das kann es nicht sein hier oder?

1469
01:15:49,490 --> 01:15:54,920
Das geht dann nämlich mit static das geht nicht.

1470
01:15:55,020 --> 01:15:55,920
Oh Gott.

1471
01:15:56,020 --> 01:15:56,920
Rust.

1472
01:15:57,020 --> 01:15:57,920
Alter.

1473
01:15:58,020 --> 01:15:58,920
Hier geht das.

1474
01:15:59,020 --> 01:15:59,920
Okay.

1475
01:16:00,020 --> 01:16:00,920
Get.

1476
01:16:01,020 --> 01:16:01,920
Get funktioniert.

1477
01:16:02,020 --> 01:16:02,920
Ne.

1478
01:16:03,020 --> 01:16:04,920
Get wird schon mal funktionieren.

1479
01:16:05,020 --> 01:16:05,920
Okay.

1480
01:16:05,920 --> 01:16:12,880
das geht jetzt nicht weil es nicht nicht nicht mut ist oh je jetzt kommen wieder rast geschichten

1481
01:16:12,880 --> 01:16:28,160
anstatt er sagt er nicht track id track nun okay hier sagt er mir geht nicht weil not mutable ist

1482
01:16:28,160 --> 01:16:43,300
und jetzt bin ich schon wieder beim lateinern ende am ende was rast angeht what let's track

1483
01:16:43,300 --> 01:17:16,500
was was was will er von mir genau doppelpunkt das geht doch nicht aber aber gett mut funktioniert

1484
01:17:16,500 --> 01:17:35,660
nicht man aber gett mut funktioniert nicht weil ich kenne keine bono im youtube

1485
01:17:35,660 --> 01:17:42,640
okay wahrscheinlich ist den one slot nicht genug ich

1486
01:17:42,640 --> 01:17:42,820
brauche keinen und beides hat nicht genug ich brauche nichts aber es ist ein one slot

1487
01:17:42,820 --> 01:18:37,850
wahrscheinlich noch einen Mutax oder irgendwas. Rust, jetzt komm. Rust, please. Okay, once lock, mutable. Okay, hier, da, also. Rust, erklär es. Once. What you want is a Mutax or RW-Lock. Ja, Moment, RW-Lock?

1488
01:18:37,850 --> 01:19:09,680
RW-Lock. RW-Lock alleine reicht mir doch gar nicht. Oder? RW-Lock. Nee, RW-Lock alleine reicht mir, glaube ich, nicht. RW-Lock. Im Moment, ah, fucking shit. Fertig? Ich, ich, ich bin verwirrt.

1489
01:19:10,920 --> 01:19:19,480
Warte mal, RW-Lock geht doch gar nicht, weil ich, weil ich hier jetzt nicht, nicht sagen kann, oder, weil ich jetzt hier nicht sagen kann, Hashmap,

1490
01:19:19,480 --> 01:20:05,630
New drinne. Oder doch? Oder doch? Ich bin mir da unschlüssig. Okay. Okay, RW-Lock. RW-Lock. Und jetzt, muss ich sagen, Ride, ne? Ride, unwrap. Oh man, Alter. Was? Alter, Rust.

1491
01:20:09,990 --> 01:20:13,650
Okay, mutable. Okay, Prage, Prage. Oh.

1492
01:20:14,950 --> 01:20:44,400
Cannot call non-const. Okay, das dachte ich mir doch. Das heißt, okay, okay, Leute, okay, ich, ich, ich, Achtung. Outplayed, Rust. Outplayed. Ich weiß, was Rust von mir will. Die will, die wollen ein Once-Lock, gerapptes RW-Lock. Wollen wir wetten. Das wollen die haben. Die wollen ein Once-Lock, RW-Lock.

1493
01:20:52,310 --> 01:20:54,110
Kannst du mal abholen, was du da machst?

1494
01:20:54,390 --> 01:21:10,820
Ich baue was, das ich in Go gebaut hab, um in Rust. Und aktuell versuche ich, Rust dazu zu bringen, dass ich in die Liste was reinschreiben kann. Und das ist in Rust schon mal gar nicht so einfach. So, RW-Lock.

1495
01:21:10,820 --> 01:21:33,180
New. Achso, und jetzt Hashmap. Hashmap. New. Jetzt, Prage, Prage, Prage, Prage. Okay, Tracks. Okay. Also, RW-Lock. Jetzt brauchen wir Get.

1496
01:21:33,860 --> 01:21:48,040
Dann brauchen wir Unwrap. Right? Unwrap. Okay, guck mal, es gibt keine Fehler mehr. Es gibt keine Fehler mehr. Easy. Es kompiliert. Also, okay.

1497
01:21:48,040 --> 01:22:03,740
Wir brauchen ein RW-Lock, gerappt in Once-Lock. Obviously. Ich meine, wem das nicht klar gewesen ist, dem ist auch nicht mehr zu helfen. Wir brauchen eine Hashmap. Also, eine generic Hashmap, gerappt in RW-Lock, gerappt in Once-Lock.

1498
01:22:03,860 --> 01:22:15,020
Klar ist klar. Alright. Easy, würde ich sagen, ist das. Das ist nicht einfach nur easy, das ist ultra easy.

1499
01:22:15,020 --> 01:22:24,000
Warum ich mir das antue, weil alle coolen Leute Rust verwenden. Und ich will auch cool sein.

1500
01:22:26,440 --> 01:22:38,110
Intuitiv, ich hätte die Sprache auch so designt. Was ich gerade verstanden habe. Also, ich habe eine Mischung verstanden aus Kekkel und Kekweight,

1501
01:22:38,650 --> 01:22:39,490
gepaart mit Weird.

1502
01:22:39,530 --> 01:23:13,260
Ja. Wobei, ich glaube, die richtig coolen Rust-Leute, die schreiben das sogar so, gell? Also, Chatge, es hat funktioniert. Wir haben einen Track erstellt. Also, wir haben das Go-Zeug nachgebaut. Wir haben einen Track erstellt mit der ID.

1503
01:23:13,260 --> 01:23:25,320
Okay. Achso, ja, Moment. Mit der ID. Wie macht man denn? Gibt es ein To-String? Ah, nice.

1504
01:23:25,320 --> 01:23:42,010
Eventuell gibt es auch eine einfachere Lösung. Wenn ihr eine kennt, Leute, keine Ahnung.

1505
01:23:44,010 --> 01:24:07,540
Also, Static RW-Lock Rusts. Also, das Problem ist ja, dass in diesem globalen Kontext hier nur statische Sachen erlaubt sind und keine Initialisierung von zum Beispiel einer Hash-Map.

1506
01:24:08,060 --> 01:24:13,980
Also, insofern bleibt ja nur Once-Lock, weil ich das so eine Art Constructor-mäßig initialisieren muss.

1507
01:24:14,000 --> 01:24:22,060
Und dann noch ein RW-Lock da drinnen, weil ich die Mutable Reference nicht aus dem Once-Lock rauskriege. Was auch immer.

1508
01:24:23,240 --> 01:24:37,300
Okay. Wieso ich die IDE benutze? Weil ich sie ausprobieren will. Und weil das Chatplanes-Zeug in der Regel ziemlich nice ist.

1509
01:24:40,040 --> 01:24:44,820
Okay, weiter. Insert Track. Wie geht das Go-Zeug weiter jetzt?

1510
01:24:45,260 --> 01:24:51,320
Also, in Go haben wir als nächstes jetzt Create Connection, Leute.

1511
01:24:52,160 --> 01:24:57,880
Connection. Das bauen wir jetzt nach in Rust.

1512
01:24:59,460 --> 01:25:06,820
Also, Create Connection. Als erstes brauchen wir die API-Funktion und legen eine neue Pair-Connection an.

1513
01:25:07,280 --> 01:25:10,460
Das habe ich auch schon gemacht in Rust. Das gibt es hier.

1514
01:25:12,770 --> 01:25:15,790
Dann adden wir die Tracks. Okay, das klingt auch logisch.

1515
01:25:19,220 --> 01:25:24,380
Also, hier haben wir unser API-Objekt, wo wir neue Connections anlegen können.

1516
01:25:24,700 --> 01:25:27,380
Okay.

1517
01:25:27,380 --> 01:25:28,260
Die Offer, die wir hier eröffnen.

1518
01:25:28,280 --> 01:25:31,380
Das kommt erst später. Und das hier kommt auch erst später.

1519
01:25:31,980 --> 01:25:33,940
So, hier haben wir die Pair-Connection.

1520
01:25:34,900 --> 01:25:37,600
Jetzt brauchen wir eine Loop über alle Tracks.

1521
01:25:40,070 --> 01:25:41,050
Jetzt bin ich mal gespannt.

1522
01:25:41,850 --> 01:25:46,330
For I in Tracks. Das geht so im Leben nicht.

1523
01:25:46,510 --> 01:25:50,910
Tracks. Moment. Ich brauche jetzt Get Unwrap.

1524
01:25:53,330 --> 01:25:56,850
Read. Jetzt tatsächlich nur Read Unwrap.

1525
01:25:56,850 --> 01:25:59,470
Ne. Unwrap?

1526
01:25:59,910 --> 01:26:00,670
Einfach so.

1527
01:26:08,990 --> 01:26:12,450
Let Tracks. Da haben wir hier eine lokale Variable draus, ja.

1528
01:26:13,230 --> 01:26:13,810
Tracks.

1529
01:26:15,110 --> 01:26:16,130
Funktionst du das jetzt?

1530
01:26:17,210 --> 01:26:17,810
Tracks.

1531
01:26:20,190 --> 01:26:22,170
Und jetzt Iteraten.

1532
01:26:24,430 --> 01:26:25,710
Okay, nice, nice, nice.

1533
01:26:28,260 --> 01:26:29,760
Kann die IDE irgendwie...

1534
01:26:31,740 --> 01:26:33,900
Use Destructing Declaration. Okay.

1535
01:26:33,900 --> 01:26:40,260
Also, einmal für ID und einmal für Pair Connection.

1536
01:26:40,760 --> 01:26:43,960
Aber ich merke schon, die Rust-Leute schreiben das nicht gerne aus.

1537
01:26:43,960 --> 01:26:45,360
So, kompiliert es noch?

1538
01:26:45,360 --> 01:26:47,360
Okay, nice, nice, nice, nice, nice, nice.

1539
01:26:47,360 --> 01:26:52,460
Also, das habe ich bei Rust gelernt. Sobald es kompiliert ist, dann geht das auch.

1540
01:26:52,460 --> 01:26:54,960
Meistens.

1541
01:26:54,960 --> 01:27:00,130
Kann man das hier irgendwie umbrechen, dass man das irgendwie ein bisschen besser lesen kann?

1542
01:27:00,130 --> 01:27:02,760
So, ha.

1543
01:27:02,760 --> 01:27:12,840
Ich weiß nicht, ob das die korrekte Formatierung ist für Rust.

1544
01:27:12,840 --> 01:27:17,960
Aber es fällt mir einfacher zu lesen, als das 500-mal Unwrap hintereinander zu machen.

1545
01:27:17,960 --> 01:27:21,420
Hintereinander.

1546
01:27:21,420 --> 01:27:23,420
Vorloop ist verboten.

1547
01:27:23,420 --> 01:27:25,420
Wieso, was ist... Hä?

1548
01:27:25,420 --> 01:27:28,420
Also, ich meine verboten offensichtlich ja nicht.

1549
01:27:28,420 --> 01:27:37,420
Aber was ist der Vorteil zum Loopen von einer Collection keine Loop zu nehmen?

1550
01:27:38,420 --> 01:27:41,420
Das klingt doch schon beim Aussprechen weird, oder?

1551
01:27:52,440 --> 01:27:55,440
Siehst du, verständlich. Ja, das stimmt.

1552
01:27:55,440 --> 01:27:58,440
Das ist ein gutes Rust-Kriterium.

1553
01:27:58,440 --> 01:27:59,440
So.

1554
01:27:59,440 --> 01:28:04,440
Jetzt muss ich die Pair-Connection, die braucht jetzt Add-Track.

1555
01:28:04,440 --> 01:28:06,440
So was gibt es hier bestimmt auch.

1556
01:28:06,440 --> 01:28:10,010
Natürlich nicht.

1557
01:28:10,010 --> 01:28:11,010
Moment.

1558
01:28:11,010 --> 01:28:14,010
Ich bin ja auch Massive, Massive-Pepega.

1559
01:28:14,010 --> 01:28:16,010
Das ist ja auch nicht Pair-Connected.

1560
01:28:16,010 --> 01:28:18,010
Was mache ich denn für einen Blödsinn?

1561
01:28:18,010 --> 01:28:20,010
Das hier sind ja die Tracks.

1562
01:28:20,010 --> 01:28:22,010
Nicht die Pair-Connections.

1563
01:28:22,010 --> 01:28:23,010
Das sind die Tracks.

1564
01:28:23,010 --> 01:28:27,010
Und die Pair-Connection, die habe ich hier.

1565
01:28:27,010 --> 01:28:29,010
So, Add-Track.

1566
01:28:29,010 --> 01:28:30,010
Track.

1567
01:28:30,010 --> 01:28:32,010
So.

1568
01:28:33,010 --> 01:28:34,010
Geht nicht.

1569
01:28:34,010 --> 01:28:35,010
Weil?

1570
01:28:35,010 --> 01:28:36,010
Warum?

1571
01:28:36,010 --> 01:28:37,010
Unused.

1572
01:28:39,010 --> 01:28:40,010
Await.

1573
01:28:40,010 --> 01:28:41,010
Perfekt.

1574
01:28:42,010 --> 01:28:43,010
Unwrap.

1575
01:28:43,010 --> 01:28:44,010
Noch besser.

1576
01:28:44,010 --> 01:28:45,010
Excellent.

1577
01:28:45,010 --> 01:28:47,010
Und jetzt mag er nicht.

1578
01:28:47,010 --> 01:28:48,010
Weil?

1579
01:28:48,010 --> 01:28:49,010
What?

1580
01:28:50,010 --> 01:28:52,010
Expected.

1581
01:28:52,010 --> 01:28:53,010
Arc.

1582
01:28:53,010 --> 01:28:54,010
Dünn.

1583
01:28:54,010 --> 01:28:55,010
Track.

1584
01:28:55,010 --> 01:28:56,010
Local.

1585
01:28:56,010 --> 01:28:57,010
Plus Send.

1586
01:28:57,010 --> 01:28:58,010
Plus Sync.

1587
01:28:58,010 --> 01:28:59,010
But found.

1588
01:28:59,010 --> 01:29:00,010
Artic Sample.

1589
01:29:00,010 --> 01:29:08,120
Was expectet der?

1590
01:29:08,120 --> 01:29:11,120
Ein Arc.

1591
01:29:11,120 --> 01:29:12,120
Dünn.

1592
01:29:12,120 --> 01:29:13,120
Track.

1593
01:29:13,120 --> 01:29:14,120
Local.

1594
01:29:14,120 --> 01:29:18,290
Send.

1595
01:29:18,290 --> 01:29:19,290
Sync.

1596
01:29:19,290 --> 01:29:21,290
Das ist ja fast schon schlimmer als C++, die Syntax hier.

1597
01:29:21,290 --> 01:29:22,290
Okay.

1598
01:29:22,290 --> 01:29:28,330
Ich kopiere mir das einfach mal raus und frage ihn, ob es das überhaupt gibt.

1599
01:29:28,330 --> 01:29:29,330
Ne.

1600
01:29:29,330 --> 01:29:30,330
Das gibt es gar nicht.

1601
01:29:30,330 --> 01:29:31,330
Okay.

1602
01:29:31,330 --> 01:29:32,330
Arc kenne ich.

1603
01:29:32,330 --> 01:29:34,330
Das ist, das ist Reference Counting Zeug.

1604
01:29:34,330 --> 01:29:36,330
Machen wir jetzt einfach.

1605
01:29:36,330 --> 01:29:37,330
Arc.

1606
01:29:37,330 --> 01:29:38,330
New.

1607
01:29:38,330 --> 01:29:42,370
Arc.

1608
01:29:42,370 --> 01:29:43,370
New.

1609
01:29:43,370 --> 01:29:44,370
Track.

1610
01:29:44,370 --> 01:29:45,370
Track.

1611
01:29:45,370 --> 01:29:46,370
Local.

1612
01:29:46,370 --> 01:29:47,370
Ne.

1613
01:29:47,370 --> 01:29:48,370
Einfach nur Track.

1614
01:29:48,370 --> 01:29:49,370
Okay.

1615
01:29:49,370 --> 01:29:50,370
Das geht nicht.

1616
01:29:50,370 --> 01:29:51,370
Weil?

1617
01:29:51,370 --> 01:29:52,370
Ach.

1618
01:29:52,370 --> 01:29:55,370
Der will das Objekt direkt haben und nicht einfach dereferenzieren.

1619
01:29:55,370 --> 01:29:56,370
Geht nicht.

1620
01:29:56,370 --> 01:29:57,370
Vermutlich.

1621
01:29:57,370 --> 01:29:58,370
Weil er sagt.

1622
01:29:58,370 --> 01:29:59,370
Cannot move.

1623
01:29:59,370 --> 01:30:02,770
Oh.

1624
01:30:02,770 --> 01:30:03,770
Oh.

1625
01:30:03,770 --> 01:30:09,790
Nein.

1626
01:30:09,790 --> 01:30:10,790
Nein.

1627
01:30:10,790 --> 01:30:11,790
Nein.

1628
01:30:11,790 --> 01:30:14,230
Nein.

1629
01:30:14,230 --> 01:30:15,230
Nein.

1630
01:30:15,230 --> 01:30:16,230
Nein.

1631
01:30:16,230 --> 01:30:17,230
Nein.

1632
01:30:17,230 --> 01:30:18,230
Nein.

1633
01:30:18,230 --> 01:30:19,230
Nein.

1634
01:30:19,230 --> 01:30:20,230
Nein.

1635
01:30:20,230 --> 01:30:21,230
Nein.

1636
01:30:21,230 --> 01:30:23,740
Nein.

1637
01:30:23,740 --> 01:30:24,740
Nein.

1638
01:30:24,740 --> 01:30:25,740
Nein.

1639
01:30:25,740 --> 01:30:26,740
Nein.

1640
01:30:26,740 --> 01:30:27,740
Nein.

1641
01:30:27,740 --> 01:30:28,740
Nein.

1642
01:30:28,740 --> 01:30:29,740
Nein.

1643
01:30:29,740 --> 01:30:30,740
Nein.

1644
01:30:30,740 --> 01:30:31,740
Nein.

1645
01:30:31,740 --> 01:30:32,740
Nein.

1646
01:30:32,740 --> 01:30:33,740
Nein.

1647
01:30:33,740 --> 01:30:34,740
Nein.

1648
01:30:34,740 --> 01:30:35,740
Nein.

1649
01:30:35,740 --> 01:30:36,740
Nein.

1650
01:30:36,740 --> 01:30:37,740
Nein.

1651
01:30:37,740 --> 01:30:38,740
Nein.

1652
01:30:38,740 --> 01:30:39,740
Nein.

1653
01:30:39,740 --> 01:30:40,740
Nein.

1654
01:30:40,740 --> 01:30:41,740
Nein.

1655
01:30:41,740 --> 01:30:42,740
Nein.

1656
01:30:42,740 --> 01:30:45,180
Nein.

1657
01:30:45,180 --> 01:30:46,180
Nein.

1658
01:30:46,180 --> 01:30:47,180
Nein.

1659
01:30:47,180 --> 01:30:48,180
Nein.

1660
01:30:48,180 --> 01:30:49,180
Nein.

1661
01:30:49,180 --> 01:30:50,180
Nein.

1662
01:30:50,180 --> 01:30:51,180
Nein.

1663
01:30:51,180 --> 01:30:52,180
Nein.

1664
01:30:52,180 --> 01:31:08,540
und und das ist für irgendwelche callbacks also ich weiß ich weiß was wir machen müssen und zwar

1665
01:31:08,540 --> 01:31:19,820
ob wir es lieb wie jeder weiß ist dass hier oben noch nicht lang genug das heißt wir brauchen jetzt

1666
01:31:19,820 --> 01:31:43,870
kein oneslog rw log hashmap wir brauchen einen oneslog rw log hashmap arg das war eindeutig zu

1667
01:31:43,870 --> 01:31:51,850
kurz noch wir brauchen noch einen weiteres unwrap irgendwo wieso über die hashmap weil die weil die

1668
01:31:51,850 --> 01:32:05,130
random ids oder random also theoretisch random ids bekommt jede jeder track so und jetzt muss

1669
01:32:05,130 --> 01:32:05,290
ich sagen

1670
01:32:05,290 --> 01:32:19,730
natürlich beim track hinzufügen schon sagen arg new track track ah ja jetzt seht ihr seht ihr und

1671
01:32:19,730 --> 01:32:26,170
jetzt machen wir das ganze noch mal arg und jetzt kann ich das hinzufügen weil jetzt ist es ja schon

1672
01:32:26,170 --> 01:32:33,130
in einem arg drin nein kann ich nicht das war fucking shit weil aber warum nicht expected arg

1673
01:32:33,130 --> 01:32:34,530
dünn found arg

1674
01:32:35,290 --> 01:32:42,790
ok das ist ein referencounter da habe ich was drüber gelesen das ist ein referencounter ich

1675
01:32:42,790 --> 01:32:51,550
muss jetzt quasi sowas sagen wie klon ja pfeifertime die sache ist bloß die klone ich jetzt in track

1676
01:32:51,550 --> 01:32:58,750
oder klon ich jetzt den arg ich will den arg klonen und nicht den track ok track hat gar keinen klon

1677
01:33:00,650 --> 01:33:05,250
nee twoowned will ich wahrscheinlich twoowned will ich nicht weil das ja in der collection

1678
01:33:05,290 --> 01:33:06,590
weiterbleiben soll.

1679
01:33:08,230 --> 01:33:09,670
Ich clone den Arc.

1680
01:33:10,330 --> 01:33:11,430
Dann passt das doch, oder?

1681
01:33:12,850 --> 01:33:13,610
Was convert

1682
01:33:13,610 --> 01:33:14,630
to UFKZ?

1683
01:33:22,910 --> 01:33:24,750
Äh, was ist

1684
01:33:24,750 --> 01:33:25,630
UFKZ?

1685
01:33:30,040 --> 01:33:32,200
Universal Function Call Syntax.

1686
01:33:32,540 --> 01:33:33,160
UFKZ.

1687
01:33:35,020 --> 01:33:36,620
Okay, Chad, was ist, was ist,

1688
01:33:36,620 --> 01:33:38,480
was ist geileres, was ist

1689
01:33:38,480 --> 01:33:40,640
geileres Rust? Punkt Clone?

1690
01:33:41,520 --> 01:33:42,300
Oder Arc

1691
01:33:42,300 --> 01:33:43,280
Clone Track?

1692
01:33:46,240 --> 01:33:48,400
Was, was machen die wahren Rust

1693
01:33:48,400 --> 01:33:53,900
Könner? Moment, so funktioniert

1694
01:33:53,900 --> 01:33:54,620
es überhaupt nicht, oder?

1695
01:33:58,290 --> 01:33:59,610
Aber mit Clone funktioniert es.

1696
01:34:02,960 --> 01:34:13,540
Äh, das ist ja super,

1697
01:34:13,700 --> 01:34:13,860
wir.

1698
01:34:15,420 --> 01:34:17,680
Guck mal, die IDE bietet mir

1699
01:34:17,680 --> 01:34:20,000
an, das umzuwandeln, aber das umgewandelte

1700
01:34:20,000 --> 01:34:21,740
ist gar nicht äquivalent zu dem

1701
01:34:21,740 --> 01:34:29,260
hier. Seht ihr das?

1702
01:34:29,260 --> 01:34:30,240
So geht das nicht.

1703
01:34:30,820 --> 01:34:32,440
Aber, aber so geht es.

1704
01:34:34,800 --> 01:34:36,480
Ich verstehe aber gar nicht, warum nicht.

1705
01:34:38,320 --> 01:34:38,720
Weil unter

1706
01:34:38,720 --> 01:34:40,580
der Haube macht Clone doch wahrscheinlich auch

1707
01:34:40,580 --> 01:34:42,660
Wow, what? Also, okay,

1708
01:34:42,980 --> 01:34:43,220
Leute,

1709
01:34:43,860 --> 01:34:46,620
eins kann man den Rust-Leuten nicht

1710
01:34:46,620 --> 01:34:48,520
vorwerfen, sie hätten zu wenig

1711
01:34:48,520 --> 01:34:50,540
Docs. Ich meine, seriously,

1712
01:34:50,980 --> 01:34:52,480
die Funktion besteht aus

1713
01:34:52,480 --> 01:34:54,680
drei Zeilen Rust. Drei Zeilen

1714
01:34:54,680 --> 01:34:56,740
Rust und 80 Zeilen Docs.

1715
01:34:58,700 --> 01:35:00,500
Also das Gegenteil von meinem Kram.

1716
01:35:04,150 --> 01:35:05,350
Ne, heute, heute muss

1717
01:35:05,350 --> 01:35:07,350
Rust, heute musst du durch

1718
01:35:07,350 --> 01:35:08,030
mit Rust, so.

1719
01:35:09,790 --> 01:35:10,930
Okay, das haben wir auch.

1720
01:35:11,570 --> 01:35:13,450
Also den, den Go-Part

1721
01:35:13,450 --> 01:35:15,390
haben wir auch umgewandelt. Jetzt geht es

1722
01:35:15,390 --> 01:35:15,890
darum,

1723
01:35:17,630 --> 01:35:19,250
die Offer für den Browser zu

1724
01:35:19,250 --> 01:35:21,230
createn. Das können wir uns hier schon mal

1725
01:35:21,230 --> 01:35:23,230
merken. Okay,

1726
01:35:23,450 --> 01:35:24,250
Create Offer.

1727
01:35:25,310 --> 01:35:27,050
Bei Go ist es 0.

1728
01:35:27,870 --> 01:35:28,930
Hier ist es None.

1729
01:35:44,890 --> 01:35:46,070
Neue Zeilen kommen.

1730
01:35:46,070 --> 01:35:48,010
So, und jetzt

1731
01:35:48,010 --> 01:35:50,130
brauchen, okay, das, jetzt, okay, das

1732
01:35:50,130 --> 01:35:51,750
weiß ich nicht, wie es funktioniert. Jetzt müssen wir

1733
01:35:51,750 --> 01:35:53,550
IP-Adressen einsammeln. Also,

1734
01:35:53,690 --> 01:35:56,010
Endpoints, wohin das Video geschickt

1735
01:35:56,010 --> 01:35:58,030
werden soll. Da muss ich

1736
01:35:58,030 --> 01:35:59,870
GitHub WebRTC,

1737
01:36:02,800 --> 01:36:04,840
da muss ich bei denen gucken, wie das, wie das

1738
01:36:04,840 --> 01:36:06,020
funzt in den Examples.

1739
01:36:07,640 --> 01:36:08,080
Examples.

1740
01:36:10,710 --> 01:36:11,990
Wir hatten doch hier so einen Single

1741
01:36:11,990 --> 01:36:12,890
Port hier.

1742
01:36:14,890 --> 01:36:15,990
Ice Restart.

1743
01:36:17,210 --> 01:36:17,650
Gather.

1744
01:36:19,650 --> 01:36:20,130
Gather

1745
01:36:20,130 --> 01:36:22,090
Complete. Create a channel that is

1746
01:36:22,090 --> 01:36:24,130
blocked until Ice Gathering

1747
01:36:24,130 --> 01:36:28,260
is complete. Wir blocken

1748
01:36:28,260 --> 01:36:29,960
until Ice Gathering is complete.

1749
01:36:30,120 --> 01:36:31,900
Leute, ihr wollt auch schon immer, bis, bis

1750
01:36:31,900 --> 01:36:33,760
das Eis gesammelt ist, blocken.

1751
01:36:33,940 --> 01:36:35,200
Gibt es, gibt es zu.

1752
01:36:38,910 --> 01:36:40,350
Nicer, nicer Blocker.

1753
01:36:41,450 --> 01:36:42,910
So, let mut

1754
01:36:42,910 --> 01:36:45,090
per connection

1755
01:36:45,090 --> 01:36:47,210
gathering completed

1756
01:36:47,210 --> 01:36:48,470
promise await.

1757
01:36:48,890 --> 01:36:51,150
Lass mich raten, unwrap. Ach ne, hier kein unwrap.

1758
01:36:55,510 --> 01:36:56,870
Ach so, ja, Moment, weil ich da später

1759
01:36:56,870 --> 01:36:57,790
drauf warten will.

1760
01:36:58,470 --> 01:37:00,810
Meine Güte. Und jetzt,

1761
01:37:01,690 --> 01:37:02,910
okay, per connection

1762
01:37:02,910 --> 01:37:11,190
set, set

1763
01:37:11,190 --> 01:37:12,290
local description.

1764
01:37:15,520 --> 01:37:16,760
Set local description.

1765
01:37:20,780 --> 01:37:22,140
Ich baue ein

1766
01:37:22,140 --> 01:37:24,200
Programm mit,

1767
01:37:24,460 --> 01:37:27,040
.net, backend und

1768
01:37:27,040 --> 01:37:28,840
low-level Rust WebRTC

1769
01:37:28,840 --> 01:37:29,340
Zeug.

1770
01:37:30,640 --> 01:37:32,880
Und ich hab nicht so super viel Ahnung von Rust.

1771
01:37:33,880 --> 01:37:35,040
Okay, per connection

1772
01:37:35,040 --> 01:37:36,900
set local. Da müssen wir jetzt wahrscheinlich

1773
01:37:36,900 --> 01:37:38,920
diese Offer da rein schieben,

1774
01:37:39,080 --> 01:37:40,740
dass das funktioniert. Natürlich nicht.

1775
01:37:41,160 --> 01:37:42,800
Das wäre viel zu einfach, wenn das einfach

1776
01:37:42,800 --> 01:37:44,280
funktionieren würde. Ach so.

1777
01:37:46,610 --> 01:37:46,910
Vielleicht.

1778
01:37:48,490 --> 01:37:50,530
Await. Unwrap. Unwrap.

1779
01:37:51,910 --> 01:37:53,050
Die sind so hässlich,

1780
01:37:53,210 --> 01:37:54,610
man. So, und jetzt muss ich warten,

1781
01:37:54,690 --> 01:37:56,010
bis er alle IP-Adressen diskretiert.

1782
01:37:56,030 --> 01:37:57,390
Wie funktioniert das so?

1783
01:37:58,050 --> 01:38:00,430
Gather completed, receive async.

1784
01:38:00,650 --> 01:38:02,150
Unwrap? Nochmal unwrap.

1785
01:38:02,250 --> 01:38:03,070
Alles unwrappen.

1786
01:38:04,350 --> 01:38:06,230
Guck mal, die unwrappen das hier auch nicht.

1787
01:38:06,410 --> 01:38:08,130
Warum nicht? Ach so,

1788
01:38:08,210 --> 01:38:08,990
weil sie es einfach,

1789
01:38:09,170 --> 01:38:11,630
weil sie es einfach droppen.

1790
01:38:12,570 --> 01:38:13,010
Auch gut.

1791
01:38:13,890 --> 01:38:15,930
Wir machen das exakt so, wie das

1792
01:38:15,930 --> 01:38:19,780
Beispiel das sagt. Also,

1793
01:38:19,900 --> 01:38:21,640
da hätten wir doch das hier auch schon geschafft.

1794
01:38:21,900 --> 01:38:23,720
Ja, unique. Ach so,

1795
01:38:23,880 --> 01:38:24,840
ja, track ID.

1796
01:38:24,840 --> 01:38:26,940
Track ID

1797
01:38:26,940 --> 01:38:27,700
habe ich, ähm,

1798
01:38:27,740 --> 01:38:28,720
nee, nicht track ID, ähm,

1799
01:38:28,740 --> 01:38:30,260
per-connection-ID habe ich nicht.

1800
01:38:30,980 --> 01:38:32,020
Brauche ich auch nicht.

1801
01:38:32,420 --> 01:38:34,480
Wird, werde ich einfach ignorieren.

1802
01:38:41,190 --> 01:38:41,350
So.

1803
01:38:43,210 --> 01:38:44,850
Also, heißt im Endeffekt,

1804
01:38:44,950 --> 01:38:45,850
wir brauchen jetzt,

1805
01:38:47,210 --> 01:38:48,710
ah, wir brauchen noch, okay, wir brauchen

1806
01:38:48,710 --> 01:38:50,470
das gleiche nochmal für Connections.

1807
01:38:53,450 --> 01:38:54,650
Tracks, once log,

1808
01:38:54,730 --> 01:38:56,570
log, Hashmap, arg,

1809
01:38:57,730 --> 01:38:58,530
per-connection.

1810
01:39:04,340 --> 01:39:04,780
Connections.

1811
01:39:07,270 --> 01:39:08,970
Ja, okay. Nice. Ritter Ross,

1812
01:39:08,970 --> 01:39:09,810
danke schön für den Sub.

1813
01:39:10,470 --> 01:39:12,230
Du bist mir auch heute auf GitHub gefollowt.

1814
01:39:12,310 --> 01:39:12,830
Habe ich gesehen.

1815
01:39:13,630 --> 01:39:15,330
War nämlich heute mal wieder auf GitHub eingeloggt,

1816
01:39:15,370 --> 01:39:17,090
auf der Startseite, da habe ich deinen Namen gesehen.

1817
01:39:17,470 --> 01:39:19,070
Fällt mir gerade ein, wo ich dich hier im Chat sehe.

1818
01:39:19,910 --> 01:39:21,770
So, Connections, das passt.

1819
01:39:23,710 --> 01:39:24,070
Okay.

1820
01:39:24,790 --> 01:39:25,350
Also, jetzt,

1821
01:39:25,630 --> 01:39:27,670
jetzt müssen wir die Connections speichern,

1822
01:39:27,770 --> 01:39:29,770
hier in dem Array, beziehungsweise in der Liste.

1823
01:39:32,960 --> 01:39:34,400
Du kannst mit Rust auf WebAssembly

1824
01:39:34,400 --> 01:39:36,340
aber keine UDP-Pakete versenden.

1825
01:39:36,740 --> 01:39:38,200
Nee, aber das ist ja auch nicht

1826
01:39:38,200 --> 01:39:40,020
auf WebAssembly-Basis, das ist ein

1827
01:39:40,020 --> 01:39:41,020
Server-Backend.

1828
01:39:42,140 --> 01:39:43,660
Letztendlich ruft der Server

1829
01:39:43,660 --> 01:39:46,020
per RTSP von Webcams

1830
01:39:46,020 --> 01:39:47,800
die Streams ab und schickt die an

1831
01:39:47,800 --> 01:39:49,700
beliebig viele Browser, die sich verbinden.

1832
01:39:52,000 --> 01:39:53,380
Okay, wie geht das jetzt nochmal hier?

1833
01:39:53,940 --> 01:39:54,420
Connections,

1834
01:39:56,980 --> 01:39:57,660
get,

1835
01:39:59,240 --> 01:39:59,840
unwrap,

1836
01:40:00,240 --> 01:40:02,100
write,

1837
01:40:04,000 --> 01:40:04,560
unwrap,

1838
01:40:05,860 --> 01:40:06,400
keck, wait.

1839
01:40:08,640 --> 01:40:09,020
Machen wir das,

1840
01:40:09,020 --> 01:40:10,360
machen wir das richtig so, okay.

1841
01:40:11,360 --> 01:40:12,840
So, nochmal die, die,

1842
01:40:12,840 --> 01:40:14,160
wie die Rust-Pros,

1843
01:40:14,980 --> 01:40:16,260
Zeilen und Brüche rein,

1844
01:40:16,620 --> 01:40:17,160
okay, so.

1845
01:40:17,180 --> 01:40:18,700
So, Connections,

1846
01:40:18,960 --> 01:40:19,680
Insert,

1847
01:40:20,220 --> 01:40:24,340
eine ID, okay, ich brauch ne Random,

1848
01:40:24,460 --> 01:40:26,360
ne Random, okay, komm, 1.

1849
01:40:26,780 --> 01:40:27,800
Das ist doch vollkommen egal.

1850
01:40:29,180 --> 01:40:29,960
Und jetzt,

1851
01:40:30,360 --> 01:40:32,500
die per Connection inserten.

1852
01:40:33,880 --> 01:40:34,600
Please, einfach

1853
01:40:34,600 --> 01:40:36,500
Funktionieren. Ah man, was ist

1854
01:40:36,500 --> 01:40:38,480
denn das Problem jetzt schon wieder? Achso, Arc,

1855
01:40:38,700 --> 01:40:40,100
okay, Arc, New,

1856
01:40:40,800 --> 01:40:42,520
brauch ich, muss das überhaupt in den Arc rein

1857
01:40:42,520 --> 01:40:44,340
jetzt? Warum haben wir das

1858
01:40:44,340 --> 01:40:45,440
nochmal in den Arc gemacht?

1859
01:40:48,770 --> 01:40:49,690
Okay, keine Ahnung,

1860
01:40:49,830 --> 01:40:50,930
ich, ich lass es ein.

1861
01:40:50,950 --> 01:40:52,950
Einfach mal als Arc, okay.

1862
01:40:53,270 --> 01:40:55,270
Connections geht nicht, weil

1863
01:40:55,750 --> 01:40:56,750
es mutable.

1864
01:40:59,400 --> 01:40:59,900
Ah ja.

1865
01:41:00,760 --> 01:41:02,760
Das musst du hier oben bei Tracks auch machen.

1866
01:41:06,850 --> 01:41:08,850
Heu, Ritter Rust heute, ja.

1867
01:41:10,710 --> 01:41:11,810
Vorkname, Build.

1868
01:41:11,810 --> 01:41:13,810
Hey, Leute, es, es, es, es

1869
01:41:13,810 --> 01:41:15,810
bildet, das ist schon mal top.

1870
01:41:17,030 --> 01:41:19,030
Okay, hier müssen wir jetzt, jetzt wird's

1871
01:41:19,030 --> 01:41:21,030
tatsächlich, tatsächlich noch ein bisschen komplizierter,

1872
01:41:21,030 --> 01:41:23,030
hier müssen wir jetzt ein

1873
01:41:23,030 --> 01:41:25,030
Struct returnen.

1874
01:41:25,030 --> 01:41:25,630
Struct returnen.

1875
01:41:26,010 --> 01:41:30,810
Und zwar soll das Struct folgendermaßen aussehen.

1876
01:41:30,810 --> 01:41:36,980
Offer und dann Client ID.

1877
01:41:36,980 --> 01:41:38,980
Ja gut, das ist relativ easy.

1878
01:41:40,140 --> 01:41:42,140
Also brauchen wir noch ein Struct,

1879
01:41:42,140 --> 01:41:44,300
Struct,

1880
01:41:44,300 --> 01:41:46,360
wenn wir das, nennen wir das einfach,

1881
01:41:46,360 --> 01:41:49,260
ähm ja, Connection result,

1882
01:41:49,260 --> 01:41:51,100
wie in C sharp

1883
01:41:51,100 --> 01:41:53,320
auch, Struct, Connection result

1884
01:41:53,320 --> 01:41:55,060
und da drin, okay,

1885
01:41:55,060 --> 01:41:57,280
PAP, wir machen das, nee, wir machen das PAP.

1886
01:41:57,280 --> 01:41:59,540
So, und da drin,

1887
01:41:59,560 --> 01:42:16,340
brauchen wir jetzt was wir brauchen client id das ist ein 32 oder so und wir brauchen offer

1888
01:42:16,340 --> 01:42:29,840
offer das ist ein moment wie mache ich denn da jetzt ein c string konst das ist das ist das ist

1889
01:42:29,840 --> 01:42:46,280
gold konst bei oder so es gibt c string das ist aber glaube ich nur zum zurückwarten hier brauche

1890
01:42:46,280 --> 01:43:23,660
ich das ist ein konst okay moment rast strakt inter opc return of ffi ja strakt von stars wie

1891
01:43:23,660 --> 01:43:28,200
geht das jetzt wenn er sich letztens im stream schon mal ausprobiert

1892
01:43:28,200 --> 01:43:56,330
und ich habe es irgendwie wieder gelöscht ja c char gibt's will er hier das ist das ist die das

1893
01:43:56,330 --> 01:44:06,760
ist die go variante so connection result muss man das nicht noch irgendwie muss man nicht

1894
01:44:06,760 --> 01:44:29,060
gut repräsent c rep c oder sowas wieso ja okay ich hoffe ich hoffe dass von so ich hoffe dass

1895
01:44:29,060 --> 01:44:35,000
von so connection result das heißt wir brauchen jetzt ein strakt was man hier returnen und zwar

1896
01:44:35,000 --> 01:44:40,520
mit dass ab jetzt werden wir es auch erst mal in c sharp testen ob es prinzipiell funktioniert

1897
01:44:40,520 --> 01:44:53,560
was ich da gebaut habe ok also return connection result client id 1 machen wir mal hier eine

1898
01:44:53,560 --> 01:45:04,840
variable da können wir die später oder ja id 1 da können wir die später austauschen ja also

1899
01:45:05,080 --> 01:45:12,940
id id und offer ja das muss jetzt in c string werden jetzt wird es jetzt evaciticade spannend

1900
01:45:12,940 --> 01:45:30,180
jetzt jetzt was hat er hier für schmerzen introduces was will er von mir ach so der will mir sagen dass

1901
01:45:30,180 --> 01:45:50,140
meine funktion nix return ich verwende dies zweimal wohl nicht oder ich verwende id nicht,

1902
01:45:50,140 --> 01:45:51,020
ich verwende id nicht zweimal wo ich nicht oder ich verwende die id nicht zweimal wie jetzt carbon tonic

1903
01:45:51,020 --> 01:45:57,350
jetzt die id ist ein int das sollte er doch kopieren oder das sollte er das sollte er

1904
01:45:57,350 --> 01:46:07,910
doch checken das will er nicht weil es ein u32 ist und das hier okay das ist ein i32 dann ist

1905
01:46:07,910 --> 01:46:26,300
okay so jetzt ist die große preisfrage wie krieg ich hier raus einen konst also wie kriege ich

1906
01:46:26,300 --> 01:46:40,440
jetzt moment herr connection wie habe ich das jetzt wie habe ich das jetzt in grau gemacht ja

1907
01:46:40,440 --> 01:46:50,460
pc lokal description okay das brauche ich hier auch lokal description an rap aus irgendwelchen

1908
01:46:50,460 --> 01:46:58,700
gründen wieder ein rap ok und jetzt scp so dass die große frage wie kriege ich das jetzt in den

1909
01:46:58,700 --> 01:47:01,120
c string ja ich glaube das ist ein c string ja ich glaube das ist ein c string ja ich glaube das ist

1910
01:47:01,120 --> 01:47:04,280
bilden wir auch ein dass ich das dass ich das vorgestern schon mal hatte aber irgendwie habe

1911
01:47:04,280 --> 01:47:14,200
ich hier drin hatte ich das vielleicht moment moment hatte ich das vielleicht hatte ich das

1912
01:47:14,200 --> 01:47:28,320
im benchmark champ trainer ja ja genau da habe ich doch da habe ich doch das habe ich die ganze

1913
01:47:28,320 --> 01:47:46,540
zeit gesucht man ist okay cstr new an rap und hier oben sternchen mut wobei es ist eigentlich egal so

1914
01:47:48,200 --> 01:47:51,820
optique zweckletter zu Government livreblue so das ist natürlich keine어가 austauschen

1915
01:47:51,820 --> 01:47:55,780
also was cstring to also per connect schlossen overweight also ist es ja im prinzip 눈kelauf

1916
01:47:55,780 --> 01:47:56,540
und ich weiß nicht wie

1917
01:48:00,660 --> 01:48:02,160
also im ver talvez gmaal ja was heißt darauf meint see string nie also per connect schl dl

1918
01:48:02,160 --> 01:48:04,480
a weight also im prinzip will ich das dahin

1919
01:48:04,480 --> 01:48:15,950
im kann

1920
01:48:15,950 --> 01:48:22,230
genau raus sehr gut sehr gut

1921
01:48:22,230 --> 01:48:31,200
ja ist auf meine und jetzt so natürlich nicht warum

1922
01:48:31,200 --> 01:48:32,920
warfaren e-phonewood warum ist dass unfeier 60

1923
01:48:32,920 --> 01:48:34,020
Ey, die auf einmal in U64.

1924
01:48:34,100 --> 01:48:36,160
Ist das der Default-Typ dafür, oder wie?

1925
01:48:38,340 --> 01:48:40,240
Ey, dann meinetwegen in U64.

1926
01:48:40,460 --> 01:48:41,340
Soll mir recht sein.

1927
01:48:43,080 --> 01:48:45,060
Und das will er nicht, weil...

1928
01:48:45,060 --> 01:48:47,040
Const but found C-String.

1929
01:48:47,440 --> 01:48:48,900
Und das war das Into...

1930
01:48:48,900 --> 01:48:50,560
Into Raw.

1931
01:48:54,070 --> 01:48:54,950
S-Pointer.

1932
01:48:58,060 --> 01:48:59,460
Okay, was hat er wieder für Schmerzen?

1933
01:49:01,730 --> 01:49:04,450
Value borrowed here after move.

1934
01:49:05,470 --> 01:49:06,650
Okay, er gibt Sinn.

1935
01:49:06,930 --> 01:49:07,930
Dafür ist Rust gut.

1936
01:49:08,010 --> 01:49:10,550
Ich hab's zuerst in die Collection eingefügt, anstatt da.

1937
01:49:10,550 --> 01:49:11,630
Okay, nice. Bild.

1938
01:49:12,750 --> 01:49:15,290
Okay, jetzt bin ich gespannt, ob das...

1939
01:49:15,290 --> 01:49:15,650
Chat hier.

1940
01:49:16,070 --> 01:49:16,710
Was meint ihr?

1941
01:49:17,870 --> 01:49:18,690
Funds das jetzt?

1942
01:49:22,400 --> 01:49:23,620
Oder Pepega Crash?

1943
01:49:27,560 --> 01:49:31,080
Stimmt, dass man das Ding STR nennen darf?

1944
01:49:31,220 --> 01:49:31,740
Komisch, ne?

1945
01:49:32,540 --> 01:49:33,640
Ich glaube auch...

1946
01:49:33,640 --> 01:49:34,940
Ich glaube, dass es funktioniert.

1947
01:49:35,220 --> 01:49:38,200
Weil in der Regel, wenn Rust kompiliert, dann crasht es selten.

1948
01:49:40,350 --> 01:49:41,330
Dann geht's einfach.

1949
01:49:42,370 --> 01:49:44,470
Ob's dann das macht, was man will, sei mal dahingestellt.

1950
01:49:44,910 --> 01:49:46,910
So, jetzt müssen wir das hier noch ein bisschen anpassen.

1951
01:49:46,910 --> 01:49:50,490
Wir haben eine Rust-Methode, die sich Init nennt.

1952
01:49:50,590 --> 01:49:51,370
Das ist korrekt.

1953
01:49:52,170 --> 01:49:55,270
Wir haben eine Rust-Methode, die sich CreateConnection nennt.

1954
01:49:55,370 --> 01:49:56,070
Das brauchen wir noch.

1955
01:49:56,610 --> 01:49:58,910
Und das ist übrigens auch nicht libRTC, sondern...

1956
01:49:59,790 --> 01:50:01,730
libRTC Linux heißt das hier.

1957
01:50:03,470 --> 01:50:04,530
So, Init haben wir.

1958
01:50:04,650 --> 01:50:05,910
Dann brauchen wir CreateConnection.

1959
01:50:08,980 --> 01:50:10,060
Schauen wir uns das mal von Go.

1960
01:50:11,420 --> 01:50:14,580
CreateConnection liefert zurück ein Struct,

1961
01:50:14,580 --> 01:50:18,460
das besteht aus einem U64.

1962
01:50:18,480 --> 01:50:20,480
U64 und einem CharArray.

1963
01:50:22,500 --> 01:50:23,000
Also.

1964
01:50:23,780 --> 01:50:25,500
ConnectionResult haben wir doch hier schon drin.

1965
01:50:26,380 --> 01:50:26,900
ConnectionResult.

1966
01:50:28,320 --> 01:50:28,840
Idisposable.

1967
01:50:29,000 --> 01:50:30,900
Okay, das Scheiß auf Memory leaks.

1968
01:50:31,040 --> 01:50:33,020
Bevor es kaputt geht, ich schmeiß das mal raus.

1969
01:50:33,860 --> 01:50:34,480
Ein IntPointer.

1970
01:50:37,940 --> 01:50:38,500
Uint64.

1971
01:50:40,500 --> 01:50:43,740
Gefolgt von einem Pointer zu einem String.

1972
01:50:43,960 --> 01:50:45,940
Ja, das sieht gut aus.

1973
01:50:51,330 --> 01:50:51,990
Nehme ich SessionConnection.

1974
01:50:52,990 --> 01:50:54,150
SessionResult.

1975
01:50:55,450 --> 01:50:58,890
Jetzt bin ich mal gespannt, ob das funzt.

1976
01:51:02,260 --> 01:51:03,280
Ich werde das mal...

1977
01:51:03,280 --> 01:51:04,560
Äh.

1978
01:51:10,090 --> 01:51:11,450
Warum ist es jetzt auf einmal kaputt?

1979
01:51:17,780 --> 01:51:18,240
Ah!

1980
01:51:18,780 --> 01:51:22,700
Weil ich Idisposable weggelöscht habe.

1981
01:51:23,820 --> 01:51:24,500
Ja, komm.

1982
01:51:25,660 --> 01:51:28,220
Dann sind wir halt Memory-safe.

1983
01:51:28,440 --> 01:51:29,700
Halbwegs, wenn es sein...

1984
01:51:29,700 --> 01:51:30,840
Wir tun einfach so.

1985
01:51:30,840 --> 01:51:32,200
Wir jibäden einfach.

1986
01:51:32,660 --> 01:51:34,440
Wir machen einfach in das Dispose nix.

1987
01:51:34,520 --> 01:51:35,360
Dann ist er zufrieden.

1988
01:51:36,080 --> 01:51:36,920
So.

1989
01:51:37,400 --> 01:51:40,740
Letztendlich, wir returnen jetzt mal E an der Stelle und sagen jetzt

1990
01:51:40,740 --> 01:51:43,780
Interop Rust Init.

1991
01:51:45,660 --> 01:51:49,280
Interop Rust Create Connection.

1992
01:51:50,280 --> 01:51:53,340
Und jetzt bin ich mal gespannt, ob das funktioniert.

1993
01:51:54,040 --> 01:51:55,960
ClientID sollte 1 sein.

1994
01:51:56,500 --> 01:52:00,920
Und Offer sollte irgendwie ja langer Text bei rauskommen.

1995
01:52:01,820 --> 01:52:02,700
Brage, Leute.

1996
01:52:02,700 --> 01:52:05,900
Ich brauche mindestens 5 Brages, bevor ich das ausstelle.

1997
01:52:06,080 --> 01:52:06,600
Ich brauche mindestens 5 Brages, bevor ich das ausführen kann.

1998
01:52:07,160 --> 01:52:08,740
Damit das funktioniert.

1999
01:52:11,620 --> 01:52:12,940
Eine Runde Brage, please.

2000
01:52:13,800 --> 01:52:15,060
Ich trinke mal was in der Zwischenzeit.

2001
01:52:16,780 --> 01:52:18,360
Okay, 5 Brages sind zusammen.

2002
01:52:18,760 --> 01:52:19,440
Wir haben es geschafft.

2003
01:52:26,540 --> 01:52:26,780
Also.

2004
01:52:27,760 --> 01:52:28,240
.NET

2005
01:52:28,240 --> 01:52:29,960
Run.

2006
01:52:31,120 --> 01:52:31,480
Oh.

2007
01:52:33,600 --> 01:52:34,160
Was?

2008
01:52:34,240 --> 01:52:35,260
Entry Point not found?

2009
01:52:42,920 --> 01:52:45,080
Ich habe Rust gar nicht compiled und rüberkopiert.

2010
01:52:45,240 --> 01:52:45,800
Ich kack noob.

2011
01:52:46,000 --> 01:52:46,200
Lull.

2012
01:52:50,830 --> 01:52:51,270
Release?

2013
01:52:52,270 --> 01:52:52,630
Nee.

2014
01:52:53,390 --> 01:52:53,790
Ähm.

2015
01:52:55,090 --> 01:52:55,950
Cargo Build.

2016
01:52:57,230 --> 01:52:58,530
Minus Minus Release.

2017
01:53:04,960 --> 01:53:06,060
Okay, das zählt jetzt nicht.

2018
01:53:07,800 --> 01:53:10,200
Ich habe vergessen, Rust zu kompilieren.

2019
01:53:10,320 --> 01:53:11,480
Das macht ja keinen Sinn.

2020
01:53:12,780 --> 01:53:19,480
Kann man mit Cargo, Cargo Output Path, kann man einstellen, wohin der outputet?

2021
01:53:20,740 --> 01:53:22,740
So wie mit Minus O zum Beispiel.

2022
01:53:33,080 --> 01:53:34,620
Nee, das ist mir zu doof.

2023
01:53:35,240 --> 01:53:36,340
Dann kopiere ich es.

2024
01:53:36,340 --> 01:53:39,200
Ihr Schmolz-Dring ist auch wieder am Start.

2025
01:53:39,200 --> 01:53:41,600
Ich kopiere es, ich kopiere es von Hand.

2026
01:53:42,240 --> 01:53:43,860
Soll mir, soll mir auch recht sein.

2027
01:53:46,840 --> 01:53:47,300
Auf jetzt.

2028
01:53:48,040 --> 01:53:50,040
Alter, der benutzt einfach, guck mal.

2029
01:53:50,400 --> 01:53:51,860
Das sind meine CPU-Cores hier oben.

2030
01:53:52,340 --> 01:53:55,580
Der kompiliert blazingly fast, highly efficient.

2031
01:53:56,300 --> 01:54:01,000
So, MV, Target, Release, Web, nee, Linux.

2032
01:54:04,250 --> 01:54:05,490
Warum heißt denn das so dumm?

2033
01:54:11,670 --> 01:54:14,250
Ach so, weil ich das einfach so eingestellt habe.

2034
01:54:14,530 --> 01:54:14,790
Arsch.

2035
01:54:15,370 --> 01:54:24,260
Da fällt mir nämlich ein, dass ja...

2036
01:54:24,360 --> 01:54:32,100
Das Go-Binary und das Rust-Binary nicht gleich heißen können.

2037
01:54:32,660 --> 01:54:33,320
Okay, komm.

2038
01:54:34,000 --> 01:54:36,360
WebRTC, dann heißt das hier so, ja.

2039
01:54:37,080 --> 01:54:38,140
WebRTC Rust.

2040
01:54:39,800 --> 01:54:41,160
Da kann man es wenigstens unterscheiden.

2041
01:54:41,740 --> 01:54:46,580
So, WebRTC Rust.so hoch nach Backend.

2042
01:54:47,400 --> 01:54:48,080
Alles klar.

2043
01:54:48,080 --> 01:54:52,140
So, LibWebRTC Rust und kopieren in den Output.

2044
01:54:52,880 --> 01:54:53,820
Alles klar, auf geht's.

2045
01:54:53,920 --> 01:54:54,100
Bam.

2046
01:54:54,360 --> 01:55:05,420
Also, Chat, ich würde sagen, der erste Part hat funktioniert mit dem Struct.

2047
01:55:06,500 --> 01:55:10,320
Die zweite Sache mit dem String, nicht so richtig.

2048
01:55:21,860 --> 01:55:22,620
Warum nicht?

2049
01:55:24,560 --> 01:55:28,300
Pointer to UTF-8-Dings.

2050
01:55:28,900 --> 01:55:33,700
Das sieht, also der C-Sharp-Teil sieht, finde ich, richtig aus.

2051
01:55:35,120 --> 01:55:36,920
Was mache ich denn in den Go falsch?

2052
01:55:36,920 --> 01:55:48,360
Was mache ich in den Go falsch?

2053
01:55:48,940 --> 01:55:51,140
Das hatten wir vorgestern auch, ja.

2054
01:55:53,860 --> 01:55:54,220
Möglich?

2055
01:56:11,870 --> 01:56:13,110
Ich weiß, woran das liegt.

2056
01:56:13,990 --> 01:56:15,650
Chat, ich weiß, woran das liegt.

2057
01:56:16,390 --> 01:56:16,770
Guck mal.

2058
01:56:17,970 --> 01:56:20,570
Ich glaube zumindest, dass ich weiß, woran das liegt.

2059
01:56:21,570 --> 01:56:23,250
Das sind keine Encoding-Errors.

2060
01:56:23,370 --> 01:56:25,470
Das ist, weil das Memory freigegeben ist.

2061
01:56:26,610 --> 01:56:27,510
Nee, ich weiß, woran das liegt.

2062
01:56:27,550 --> 01:56:29,630
Guck mal hier.

2063
01:56:31,010 --> 01:56:38,550
Das da wird wahrscheinlich freed, wenn die Funktion returnt.

2064
01:56:46,220 --> 01:56:46,920
Der will ja.

2065
01:56:50,770 --> 01:56:52,170
Wobei, kopiert er das vielleicht?

2066
01:56:53,650 --> 01:56:54,750
Kopiert er das vielleicht?

2067
01:56:57,220 --> 01:56:58,080
Kann man das klonen?

2068
01:56:59,220 --> 01:56:59,860
Okay, klonen.

2069
01:57:00,580 --> 01:57:04,440
Mein Gott, Alter, das ist schon wirklich extrem hässlich, oder?

2070
01:57:04,620 --> 01:57:04,760
Hier.

2071
01:57:05,460 --> 01:57:06,080
Await unwrap.

2072
01:57:06,080 --> 01:57:06,920
Unwrap.

2073
01:57:08,060 --> 01:57:19,960
Und dann machen wir gleich hier S-Pointer drunter.

2074
01:57:23,660 --> 01:57:23,820
Oh.

2075
01:57:27,040 --> 01:57:27,640
Unsafe.

2076
01:57:27,900 --> 01:57:28,160
Ja, und?

2077
01:57:31,370 --> 01:57:33,450
Alter, ich weiß, dass das unsafe ist, Mann.

2078
01:57:36,640 --> 01:57:37,580
Dann lasse ich es halt weg.

2079
01:57:38,240 --> 01:57:39,460
Und mache es hier unten erst.

2080
01:57:40,220 --> 01:57:51,900
Okay, so.

2081
01:57:53,200 --> 01:57:54,180
Compile-Action.

2082
01:57:56,940 --> 01:57:57,460
Run.

2083
01:57:58,940 --> 01:57:59,300
Fuck.

2084
01:57:59,760 --> 01:58:05,380
Mach ich denn verkehrt?

2085
01:58:09,020 --> 01:58:13,800
Okay, lasst uns mal checken, ob das überhaupt in Rust richtig ist.

2086
01:58:15,940 --> 01:58:18,200
Okay, wir müssen mal was gucken.

2087
01:58:19,460 --> 01:58:20,660
Das hier ist Client-ID.

2088
01:58:20,920 --> 01:58:22,520
Client-ID ist ein U64.

2089
01:58:28,490 --> 01:58:30,790
Und das hier ist auch ein U in 64.

2090
01:58:31,030 --> 01:58:32,470
Das kann es schon mal nett sein.

2091
01:58:36,050 --> 01:58:37,230
Into Raw ist richtig.

2092
01:58:41,700 --> 01:58:42,700
Okay, ja.

2093
01:58:43,420 --> 01:58:45,260
Ja, ihr habt recht.

2094
01:58:46,480 --> 01:58:47,320
Ihr habt recht.

2095
01:58:47,600 --> 01:58:49,480
Das stand sogar in der Hilfe drin, gell?

2096
01:58:51,240 --> 01:58:52,540
Into Raw.

2097
01:58:53,740 --> 01:58:56,920
Und dann...

2098
01:58:56,920 --> 01:58:57,940
Moment, will der das jetzt?

2099
01:58:58,420 --> 01:58:59,320
Moment, warum geht denn das?

2100
01:59:02,680 --> 01:59:03,640
Warum geht denn das?

2101
01:59:03,780 --> 01:59:05,960
Das ist doch hier oben Kunst und nicht Mutt.

2102
01:59:09,730 --> 01:59:11,150
Rust-Ugly-Syntax.

2103
01:59:11,230 --> 01:59:12,470
Ja, Rust ist Ugly.

2104
01:59:12,650 --> 01:59:13,690
Das sehe ich auch so.

2105
01:59:28,370 --> 01:59:29,510
So, Funst ist jetzt.

2106
01:59:29,510 --> 01:59:31,350
Jetzt ausprobieren.

2107
01:59:33,500 --> 01:59:34,440
Auf Kompilieren.

2108
01:59:34,440 --> 01:59:35,440
Mach ich eine...

2109
01:59:35,440 --> 01:59:39,240
Ist nicht Blazingly-Fast-Compiler gerade?

2110
01:59:40,180 --> 01:59:43,220
Ah, viel besser.

2111
01:59:43,720 --> 01:59:44,920
Viel besser schon.

2112
01:59:55,200 --> 01:59:56,540
Da fehlt aber noch was, oder?

2113
01:59:57,520 --> 01:59:59,020
Das ist ein bisschen wenig.

2114
02:00:12,060 --> 02:00:14,280
Wir geben das hier trotzdem noch mal aus, kurz.

2115
02:00:16,340 --> 02:00:16,900
FMT.

2116
02:00:18,380 --> 02:00:19,000
Nee, nicht FMT.

2117
02:00:19,220 --> 02:00:19,500
Print.

2118
02:00:19,700 --> 02:00:20,480
Wir sind ja nicht in Go.

2119
02:00:21,420 --> 02:00:22,020
Print.

2120
02:00:22,480 --> 02:00:23,460
Fair Connection.

2121
02:00:24,220 --> 02:00:25,180
Local Description.

2122
02:00:25,180 --> 02:00:28,580
Oh Mann, was?

2123
02:00:29,280 --> 02:00:29,800
Await.

2124
02:00:31,140 --> 02:00:31,660
Unwrap.

2125
02:00:32,920 --> 02:00:34,400
Ja, okay, toll.

2126
02:00:34,680 --> 02:00:35,720
Ganz toll, Rust.

2127
02:00:36,040 --> 02:00:36,400
Perfekt.

2128
02:00:37,440 --> 02:00:37,960
Formatstring.

2129
02:00:38,180 --> 02:00:38,500
Sehr gut.

2130
02:00:38,900 --> 02:00:41,160
Wir lassen es auch noch mal hier ausgeben.

2131
02:00:42,300 --> 02:00:42,980
Aber ein bisschen...

2132
02:00:42,980 --> 02:00:44,300
Das ist ein bisschen kurz.

2133
02:00:45,520 --> 02:00:46,480
Das ist ein bisschen wenig.

2134
02:00:47,160 --> 02:00:50,080
Und ich glaube auch nicht, dass der eigentlich hiermit aufhören soll.

2135
02:00:50,840 --> 02:00:51,880
Ehrlich gesagt.

2136
02:00:58,800 --> 02:00:59,300
Doch.

2137
02:00:59,300 --> 02:01:00,300
Das ist...

2138
02:01:01,360 --> 02:01:02,080
Das ist zu wenig.

2139
02:01:04,720 --> 02:01:05,420
Das ist nicht...

2140
02:01:05,420 --> 02:01:06,520
Das ist nicht genug.

2141
02:01:07,200 --> 02:01:09,560
Da fehlen die ganzen Tracks und sowas drin.

2142
02:01:12,320 --> 02:01:14,540
Aber ich habe die Tracks hinzugefügt.

2143
02:01:23,500 --> 02:01:26,240
Warum offert der kein Track?

2144
02:01:27,420 --> 02:01:28,440
Das verstehe ich jetzt.

2145
02:01:29,120 --> 02:01:29,480
Null.

2146
02:01:30,740 --> 02:01:31,900
Haben wir hier irgendwas falsch?

2147
02:01:32,040 --> 02:01:32,700
Media Engine?

2148
02:01:33,680 --> 02:01:35,260
Payload Type 690.

2149
02:01:37,550 --> 02:01:39,590
Okay, das können wir noch später schreiben.

2150
02:01:47,270 --> 02:01:48,070
Wie weit wir sind.

2151
02:01:48,070 --> 02:01:48,150
Und?

2152
02:01:49,850 --> 02:01:50,470
Schwer zu sagen.

2153
02:01:52,150 --> 02:01:54,410
Also, das ist auf jeden Fall verkehrt.

2154
02:01:55,170 --> 02:01:58,130
Das ist zu wenig, was der hier zurückliefert.

2155
02:01:59,050 --> 02:02:00,030
With Media Engine.

2156
02:02:00,510 --> 02:02:01,330
Media Engine.

2157
02:02:01,530 --> 02:02:02,310
Haben wir hier alles?

2158
02:02:04,250 --> 02:02:05,070
Settings Engine.

2159
02:02:05,170 --> 02:02:05,410
UDP.

2160
02:02:05,710 --> 02:02:06,450
Das ist zu wenig.

2161
02:02:06,570 --> 02:02:07,310
Das ist zu kurz.

2162
02:02:08,110 --> 02:02:09,250
Was da zurückkommt.

2163
02:02:09,390 --> 02:02:11,050
Also, ihr habt es ja gesehen vorhin.

2164
02:02:11,710 --> 02:02:13,470
In Go kommt da viel mehr zurück.

2165
02:02:15,070 --> 02:02:17,310
Da fehlen beispielsweise auch die ganzen Tracks.

2166
02:02:21,640 --> 02:02:22,720
Mir ist fast so, dass ich hier nicht mehr so viel mehr zurückkomme.

2167
02:02:22,720 --> 02:02:25,060
Mir ist fast so, als ist Tracks leer.

2168
02:02:25,220 --> 02:02:26,100
Könnte das sein.

2169
02:02:26,920 --> 02:02:27,400
Sind drin.

2170
02:02:28,560 --> 02:02:29,120
Keck weh.

2171
02:02:29,300 --> 02:02:31,000
Wir können es leider nicht anders debuggen gerade.

2172
02:02:32,720 --> 02:02:35,380
Mir ist fast so, als wäre Tracks leer.

2173
02:02:39,680 --> 02:02:41,180
Die Once-Vlogs mache ich nicht leer.

2174
02:02:42,080 --> 02:02:44,180
Außerdem kann man Once-Vlogs gar nicht leer machen.

2175
02:02:45,460 --> 02:02:46,360
Dann müsste er meckern.

2176
02:02:49,900 --> 02:02:50,260
Siehste?

2177
02:02:50,660 --> 02:02:51,560
Tracks ist leer.

2178
02:02:51,800 --> 02:02:53,100
Das wird gar nicht ausgeführt.

2179
02:02:54,300 --> 02:02:55,920
Ich glaube, habe ich Add Track vergessen?

2180
02:02:56,420 --> 02:02:56,700
Oh.

2181
02:02:57,200 --> 02:02:57,920
Ich habe, Leute.

2182
02:02:58,540 --> 02:03:01,460
Add Track habe ich vergessen.

2183
02:03:01,720 --> 02:03:01,960
Lull.

2184
02:03:03,540 --> 02:03:05,120
Ja, kein Wunder, dass es nicht funktioniert.

2185
02:03:09,130 --> 02:03:09,970
Add Track.

2186
02:03:13,940 --> 02:03:14,800
Ist das so?

2187
02:03:15,000 --> 02:03:15,560
Add Track?

2188
02:03:17,280 --> 02:03:18,180
Create Track.

2189
02:03:18,320 --> 02:03:18,540
Okay.

2190
02:03:21,300 --> 02:03:21,480
Ja.

2191
02:03:21,820 --> 02:03:25,420
Ja, dann ist klar, dass es nicht drinnen auftaucht, wenn man es gar nicht aufruft.

2192
02:03:26,200 --> 02:03:27,180
Interop Rust.

2193
02:03:27,500 --> 02:03:28,360
Create Track.

2194
02:03:28,940 --> 02:03:30,080
So, jetzt nochmal, please.

2195
02:03:30,300 --> 02:03:31,280
Und jetzt einfach funktionieren.

2196
02:03:31,740 --> 02:03:34,500
Ja, das sieht schon deutlich besser aus.

2197
02:03:35,340 --> 02:03:35,820
Keck weh.

2198
02:03:36,260 --> 02:03:38,120
Das sieht viel besser aus.

2199
02:03:38,180 --> 02:03:39,000
So muss das sein.

2200
02:03:39,360 --> 02:03:39,840
Sehr schön.

2201
02:03:41,200 --> 02:03:41,900
Das ist gut so.

2202
02:03:43,200 --> 02:03:43,740
Das ist gut.

2203
02:03:43,900 --> 02:03:47,180
So, so sieht das in Go, so, so ungefähr sieht das in Go auch aus.

2204
02:03:49,060 --> 02:03:52,780
Du kannst auch was, das DBG-Makro benutzen.

2205
02:03:54,200 --> 02:03:55,160
Was, was macht das?

2206
02:04:05,200 --> 02:04:10,500
Das macht Zeug.

2207
02:04:14,510 --> 02:04:15,930
Ach, das gibt die Zeile aus.

2208
02:04:16,310 --> 02:04:16,870
Gut zu wissen.

2209
02:04:17,030 --> 02:04:17,630
Das ist nice.

2210
02:04:17,730 --> 02:04:18,370
Das brauche ich.

2211
02:04:19,390 --> 02:04:19,830
Okay.

2212
02:04:19,830 --> 02:04:19,910
Okay.

2213
02:04:20,270 --> 02:04:20,550
Also.

2214
02:04:21,070 --> 02:04:22,130
Der Part funzt.

2215
02:04:22,610 --> 02:04:23,650
Dann geht es weiter.

2216
02:04:24,410 --> 02:04:26,310
So viel ist es gar nicht mehr, was wir umziehen müssen.

2217
02:04:26,810 --> 02:04:28,750
Und dann kommt der Moment der Wahrheit, ob es funktioniert.

2218
02:04:29,490 --> 02:04:30,410
Aber das sieht gut aus.

2219
02:04:30,590 --> 02:04:32,370
Es sieht wirklich, es sieht wirklich gut aus.

2220
02:04:34,990 --> 02:04:39,310
Also jetzt nicht, nicht Rust Code an sich, sondern das sieht funktionierend aus gerade.

2221
02:04:41,450 --> 02:04:42,630
So, also weiter.

2222
02:04:43,110 --> 02:04:43,750
Das funzt.

2223
02:04:44,130 --> 02:04:45,150
Wir kriegen jetzt die.

2224
02:04:45,770 --> 02:04:47,510
Komm, lass uns, lass uns der Ordnung halber.

2225
02:04:47,590 --> 02:04:48,890
Ne, habe ich schon mutt hingeschrieben.

2226
02:04:49,370 --> 02:04:50,510
So, also das haben wir.

2227
02:04:50,510 --> 02:04:52,050
Wir haben, wir haben ja fast alles.

2228
02:04:52,250 --> 02:04:52,350
Guck.

2229
02:04:52,350 --> 02:04:53,350
Das haben wir umgezogen.

2230
02:04:54,070 --> 02:04:55,190
Das haben wir umgezogen.

2231
02:04:55,830 --> 02:04:58,670
Uns fehlt eigentlich nur noch das hier.

2232
02:04:59,010 --> 02:05:00,830
Und das ist echt überschaubar.

2233
02:05:03,660 --> 02:05:05,200
Nur noch das hier fehlt uns.

2234
02:05:07,180 --> 02:05:09,640
So, also das heißt, wir brauchen jetzt eine Function.

2235
02:05:10,480 --> 02:05:11,380
Gleiche hier nochmal.

2236
02:05:12,620 --> 02:05:15,380
Die heißt jetzt allerdings Set Answer.

2237
02:05:15,880 --> 02:05:19,460
Da kriegen wir als Parameter jetzt allerdings einen.

2238
02:05:22,110 --> 02:05:24,770
Das ist natürlich die Frage, ob das denn.

2239
02:05:24,770 --> 02:05:25,250
Ja.

2240
02:05:27,500 --> 02:05:32,460
Ja, das eigentlich, eigentlich kann das kann es auch Konst, ein Konstring sein.

2241
02:05:36,810 --> 02:05:38,730
Konst C Char.

2242
02:05:43,970 --> 02:05:45,890
Ja, komm, das heißt einfach Pointer.

2243
02:05:45,990 --> 02:05:47,430
Bester, beste Benahme gehabt.

2244
02:05:49,580 --> 02:05:50,520
Types mismatch.

2245
02:05:50,580 --> 02:05:52,680
Hier muss nichts returned werden.

2246
02:05:56,720 --> 02:06:00,140
Okay, wir brauchen das gleiche wieder wie hier.

2247
02:06:01,940 --> 02:06:08,640
Wir brauchen die Connections, die Connections, also die, die, die, die per Handshake schon aufgebaut wurden.

2248
02:06:08,760 --> 02:06:09,440
Wo ist das hier?

2249
02:06:09,440 --> 02:06:10,400
Connections.

2250
02:06:10,560 --> 02:06:16,310
Ah, Moment, Moment, Moment, Moment, eins habe ich ja noch vergessen.

2251
02:06:18,230 --> 02:06:19,010
Brauchen die Connections.

2252
02:06:19,010 --> 02:06:22,210
Wir brauchen, wir brauchen noch einen zweiten Parameter und zwar wir brauchen noch was?

2253
02:06:22,210 --> 02:06:28,970
Ein U64 und zwar die ID von dem Ding brauchen wir noch.

2254
02:06:30,350 --> 02:06:34,730
Das muss hier, das muss ja auch noch übergeben werden, sonst funktioniert das nicht.

2255
02:06:35,270 --> 02:06:35,770
Ich hoffe.

2256
02:06:37,950 --> 02:06:39,410
Ich hoffe, ich mache das hier schon.

2257
02:06:40,950 --> 02:06:42,050
Okay, also.

2258
02:06:42,050 --> 02:06:42,610
Set.

2259
02:06:51,130 --> 02:06:54,050
Äh, gibt ein Connection Result, kompletter Schwachsinn, Max.

2260
02:06:54,150 --> 02:06:55,430
Keine Ahnung, was du da gebaut hast.

2261
02:06:57,270 --> 02:07:01,750
So, und das ist jetzt genau das gleiche, genau das gleiche wie bei Go.

2262
02:07:03,950 --> 02:07:06,850
Ähm, ne, Uint64.

2263
02:07:07,710 --> 02:07:12,410
Und das Ganze soll als UTF-8 C-String Pointer da reingeschoben werden.

2264
02:07:12,710 --> 02:07:13,310
Gachi Bass.

2265
02:07:14,690 --> 02:07:16,070
Also wir bekommen eine ID.

2266
02:07:16,070 --> 02:07:19,070
Wir bekommen hier das Array mit den Connections.

2267
02:07:19,250 --> 02:07:23,310
In das ich jetzt übrigens nur lesen möchte.

2268
02:07:23,690 --> 02:07:25,170
Das ist so hässlich, oder?

2269
02:07:25,970 --> 02:07:27,530
So, jetzt kommt's, Traummann.

2270
02:07:27,710 --> 02:07:30,270
Also, get die ID.

2271
02:07:33,470 --> 02:07:36,950
Und dann ist, kriege ich die Connection raus.

2272
02:07:39,070 --> 02:07:40,350
Unwrapped, was sonst?

2273
02:07:41,150 --> 02:07:41,730
Was sonst?

2274
02:07:42,890 --> 02:07:44,130
Was hat der hier für Schmerzen?

2275
02:07:45,710 --> 02:07:47,550
Wir brauchen ein und.

2276
02:07:47,550 --> 02:07:49,550
Und wir brauchen eine Referenz.

2277
02:07:50,950 --> 02:07:51,170
ID.

2278
02:07:57,020 --> 02:07:59,140
Die C-Sharp-Methoden-Namen sind aber nicht, doch.

2279
02:08:00,740 --> 02:08:02,340
Das ist, das ist korrekte.

2280
02:08:04,340 --> 02:08:06,320
Korrekte .NET Naming Convention.

2281
02:08:08,120 --> 02:08:09,660
Die Rust-Sachen nicht, ne.

2282
02:08:09,840 --> 02:08:13,180
Die, die Rust-Sachen sind so gemacht, wie das die Rust-Leute gerne hätten.

2283
02:08:14,060 --> 02:08:15,660
Okay, Per Connection.

2284
02:08:15,920 --> 02:08:16,920
Da müssen wir jetzt.

2285
02:08:17,620 --> 02:08:18,060
Set.

2286
02:08:18,060 --> 02:08:18,140
Set.

2287
02:08:20,600 --> 02:08:21,820
Remote Description.

2288
02:08:21,940 --> 02:08:22,760
Brauchen wir da jetzt.

2289
02:08:23,420 --> 02:08:25,440
Und irgendwie müssen wir jetzt den String.

2290
02:08:25,460 --> 02:08:27,560
Pointer wieder zurück umwandeln.

2291
02:08:29,060 --> 02:08:30,120
In einen.

2292
02:08:30,580 --> 02:08:30,880
Oh.

2293
02:08:32,680 --> 02:08:33,180
Geht das?

2294
02:08:36,290 --> 02:08:36,970
Wie wandle ich?

2295
02:08:36,970 --> 02:08:37,730
Das muss ich googeln.

2296
02:08:38,790 --> 02:08:39,430
Das muss ich googeln.

2297
02:08:41,650 --> 02:08:42,150
C.

2298
02:08:42,970 --> 02:08:45,610
Sharp Pointer Rust to String.

2299
02:08:47,690 --> 02:08:48,850
How do I convert to uns?

2300
02:08:48,850 --> 02:08:50,230
Nein, ich will.

2301
02:08:52,530 --> 02:08:54,910
Ja, das will ich sowas in der Richtung.

2302
02:08:56,850 --> 02:08:57,250
C.

2303
02:08:57,250 --> 02:08:58,090
String from.

2304
02:08:58,330 --> 02:09:00,570
Okay, das ist einfacher als gedacht, ehrlich gesagt.

2305
02:09:01,610 --> 02:09:01,850
C.

2306
02:09:02,010 --> 02:09:03,530
String from Pointer.

2307
02:09:10,100 --> 02:09:11,220
Let still.

2308
02:09:14,660 --> 02:09:15,680
Was, was hat er jetzt?

2309
02:09:15,820 --> 02:09:16,760
Was hat er für Schmerzen?

2310
02:09:18,120 --> 02:09:20,540
In .NET sind doch Methoden-Namen immer groß.

2311
02:09:26,560 --> 02:09:26,740
Ja.

2312
02:09:27,560 --> 02:09:27,860
Ähm.

2313
02:09:31,300 --> 02:09:31,800
Du hast recht.

2314
02:09:35,470 --> 02:09:35,690
No.

2315
02:09:35,690 --> 02:09:43,650
I never tried to compile WebAssembly and I never used STL in Rust.

2316
02:09:44,370 --> 02:09:47,260
Du hast recht.

2317
02:09:47,260 --> 02:09:48,940
Die Methodennamen sind falsch.

2318
02:09:48,940 --> 02:09:49,820
Die sollen tatsächlich.

2319
02:09:49,820 --> 02:09:51,220
Komm, wir machen, wir machen es korrekt.

2320
02:09:51,220 --> 02:09:53,500
Wir machen, wir machen, dass sich Microsoft freut.

2321
02:09:56,780 --> 02:10:00,720
Können die mir gleich paar Influencer Millionen überweisen.

2322
02:10:03,800 --> 02:10:05,400
So gut.

2323
02:10:06,240 --> 02:10:08,640
Okay, was kommt jetzt als nächstes?

2324
02:10:08,640 --> 02:10:09,600
Also das funzt nicht.

2325
02:10:09,600 --> 02:10:10,800
Warum funsten das nicht?

2326
02:10:11,480 --> 02:10:12,760
Weil unsafe.

2327
02:10:13,320 --> 02:10:14,400
Okay, unsafe.

2328
02:10:17,390 --> 02:10:19,310
Alter, was ist mit der Idee los?

2329
02:10:19,310 --> 02:10:20,430
Die ist ja voll im Arsch.

2330
02:10:21,310 --> 02:10:22,750
Ja, unsafe to function.

2331
02:10:22,750 --> 02:10:23,350
Bam, geht nicht.

2332
02:10:29,770 --> 02:10:31,210
Wahrscheinlich, weil an der falschen Stelle.

2333
02:10:31,350 --> 02:10:32,090
Muss bestimmt hier hin.

2334
02:10:32,790 --> 02:10:35,130
Nee, muss dahin.

2335
02:10:36,310 --> 02:10:37,010
Ja, nice.

2336
02:10:37,210 --> 02:10:37,350
Gut.

2337
02:10:38,050 --> 02:10:38,670
Try and error.

2338
02:10:38,770 --> 02:10:39,690
Wo muss unsafe hin?

2339
02:10:40,250 --> 02:10:43,290
Also an der, an der Rust-Idee müssen die echt noch ein bisschen arbeiten.

2340
02:10:44,770 --> 02:10:47,870
Und jetzt müssen wir hier die Remote Description setzen.

2341
02:10:50,420 --> 02:10:51,420
Wie macht man das jetzt?

2342
02:10:52,720 --> 02:10:53,200
RTC?

2343
02:10:54,160 --> 02:10:55,060
Wie hieß das?

2344
02:10:56,080 --> 02:10:58,480
RTC Session Description.

2345
02:10:59,920 --> 02:11:01,920
Gibt es da irgendwie so ein Parse oder sowas?

2346
02:11:10,570 --> 02:11:11,070
Was?

2347
02:11:14,030 --> 02:11:15,030
Was soll ich umbenennen?

2348
02:11:21,250 --> 02:11:22,250
Ach, unsafe drumherum.

2349
02:11:22,250 --> 02:11:25,250
Ach Quatsch, das, das alles, was ich hier mache, ist unsafe.

2350
02:11:25,250 --> 02:11:27,250
Okay, Parse gibt es nicht.

2351
02:11:27,750 --> 02:11:28,250
From?

2352
02:11:28,250 --> 02:11:28,750
From.

2353
02:11:28,750 --> 02:11:30,750
From klingt gut, aber das ist from.

2354
02:11:33,330 --> 02:11:43,140
Jetzt ist die Frage, wie, wie parse ich denn jetzt meinen String als RTC Session Description?

2355
02:11:43,140 --> 02:11:44,140
Marschal.

2356
02:11:44,140 --> 02:11:45,140
Marsch?

2357
02:11:45,140 --> 02:11:46,140
Anmarsch?

2358
02:11:46,140 --> 02:11:50,050
Nee.

2359
02:11:50,050 --> 02:11:52,050
Ja, das ist jetzt wieder sehr fmt.

2360
02:11:52,050 --> 02:11:53,050
Nee.

2361
02:11:53,050 --> 02:11:54,050
Into? What?

2362
02:11:55,050 --> 02:11:57,050
Das ist jetzt wieder sehr pfeifert.

2363
02:11:57,050 --> 02:12:02,640
Ich kapier wieder die einfachsten Sachen nicht.

2364
02:12:02,640 --> 02:12:03,640
Vielleicht so?

2365
02:12:03,640 --> 02:12:04,640
Answer?

2366
02:12:05,640 --> 02:12:06,640
Achso, guck mal da.

2367
02:12:06,640 --> 02:12:07,640
SCP String.

2368
02:12:08,640 --> 02:12:09,640
Strrr.

2369
02:12:09,640 --> 02:12:12,400
Let's...

2370
02:12:13,400 --> 02:12:14,400
Ah.

2371
02:12:14,400 --> 02:12:17,220
Äh, Unwrap?

2372
02:12:17,220 --> 02:12:18,220
Was sonst?

2373
02:12:18,220 --> 02:12:19,220
Selbstverständlich.

2374
02:12:19,220 --> 02:12:20,220
Obviously immer Unwrap.

2375
02:12:23,690 --> 02:12:24,690
Okay.

2376
02:12:24,690 --> 02:12:25,690
Und hier.

2377
02:12:25,690 --> 02:12:27,690
Awaiten und Unwrappen.

2378
02:12:27,690 --> 02:12:33,690
Ich träume heute Nacht von Unwraps.

2379
02:12:33,690 --> 02:12:37,770
Das geht nicht, weil...

2380
02:12:37,770 --> 02:12:39,770
Ah, weil es ein C-String ist.

2381
02:12:39,770 --> 02:12:41,770
Jetzt ist die Frage, wie ich ein C-String...

2382
02:12:41,770 --> 02:12:43,770
Kann ich To String sagen?

2383
02:12:43,770 --> 02:12:45,770
Sehr schön.

2384
02:12:45,770 --> 02:12:47,770
Ex...

2385
02:12:47,770 --> 02:12:50,460
Moment, da gibt es einfach...

2386
02:12:50,460 --> 02:12:51,460
Wait a minute.

2387
02:12:52,460 --> 02:12:53,460
Das geht doch im Leben nicht.

2388
02:12:53,460 --> 02:12:56,460
Ich kann doch garantiert nicht sagen In To St...

2389
02:12:56,460 --> 02:12:57,460
Nee, Moment.

2390
02:12:58,460 --> 02:12:59,460
To String.

2391
02:12:59,460 --> 02:13:00,460
Nee, nee.

2392
02:13:00,460 --> 02:13:01,460
Es ist...

2393
02:13:01,460 --> 02:13:03,460
Jetzt habe ich mir schon fast gedacht, wenn das...

2394
02:13:03,460 --> 02:13:04,460
Was?

2395
02:13:04,460 --> 02:13:05,460
Okay.

2396
02:13:05,460 --> 02:13:06,460
Obviously.

2397
02:13:06,460 --> 02:13:07,460
Alles klar.

2398
02:13:07,460 --> 02:13:08,460
Rust Fehlermeldung.

2399
02:13:08,460 --> 02:13:10,460
Consti 8 doesn't implement standard format display.

2400
02:13:10,460 --> 02:13:12,460
Consti 8 cannot be formatted.

2401
02:13:12,460 --> 02:13:13,460
Beste.

2402
02:13:13,460 --> 02:13:14,460
Alles klar.

2403
02:13:15,460 --> 02:13:16,460
In To.

2404
02:13:17,460 --> 02:13:19,900
To Owned.

2405
02:13:20,900 --> 02:13:21,900
So.

2406
02:13:21,900 --> 02:13:22,900
Also das hat schon mal nicht funktioniert.

2407
02:13:23,900 --> 02:13:26,900
Aber kann ich vielleicht den hier To String machen?

2408
02:13:27,900 --> 02:13:29,900
In To C-String.

2409
02:13:30,900 --> 02:13:37,670
In To String.

2410
02:13:37,670 --> 02:13:47,260
Ich bin immer noch etwas verwirrt.

2411
02:13:47,260 --> 02:13:58,030
Etwas verwirrt, wie ich das da hinbekomme.

2412
02:13:58,030 --> 02:13:59,030
C-String.

2413
02:13:59,030 --> 02:14:01,730
From Pointer.

2414
02:14:01,730 --> 02:14:02,730
To String.

2415
02:14:02,730 --> 02:14:03,730
Und was?

2416
02:14:03,730 --> 02:14:04,730
To Owned.

2417
02:14:05,730 --> 02:14:06,730
Unwrap.

2418
02:14:07,730 --> 02:14:08,730
Alter.

2419
02:14:09,730 --> 02:14:10,730
Was ist...

2420
02:14:10,730 --> 02:14:13,300
Moment.

2421
02:14:13,300 --> 02:14:15,300
Alter, was ist das wieder?

2422
02:14:15,300 --> 02:14:16,300
Das ist ja Ausge...

2423
02:14:16,300 --> 02:14:17,300
Ausgeburt der Hölle.

2424
02:14:17,300 --> 02:14:20,300
Das könnte ja direkt aus irgendeiner C++ Anleitung entspringen.

2425
02:14:20,300 --> 02:14:21,300
From Pointer.

2426
02:14:21,300 --> 02:14:22,300
To String.

2427
02:14:22,300 --> 02:14:23,300
To Owned.

2428
02:14:23,300 --> 02:14:24,300
Unwrap.

2429
02:14:24,300 --> 02:14:25,300
So.

2430
02:14:25,300 --> 02:14:26,300
Jetzt haben wir ein...

2431
02:14:26,300 --> 02:14:27,300
Das geht immer noch nicht.

2432
02:14:27,300 --> 02:14:31,300
Und da muss ich jetzt wahrscheinlich nochmal hinten dran machen.

2433
02:14:31,300 --> 02:14:35,890
Nochmal To String.

2434
02:14:35,890 --> 02:14:38,890
Oder To Owned.

2435
02:14:38,890 --> 02:14:39,890
Nee.

2436
02:14:39,890 --> 02:14:40,890
To String.

2437
02:14:40,890 --> 02:14:41,890
MonkaS.

2438
02:14:41,890 --> 02:14:42,890
MonkaS, Mann.

2439
02:14:42,890 --> 02:14:43,890
Was?

2440
02:14:43,890 --> 02:14:44,890
To Owned?

2441
02:14:44,890 --> 02:14:56,610
Können wir auch machen.

2442
02:14:56,610 --> 02:14:57,610
Okay.

2443
02:14:57,610 --> 02:15:08,630
Hier habe ich To String ja schon drin.

2444
02:15:08,630 --> 02:15:10,630
Warum gibt es To String und Owned?

2445
02:15:10,630 --> 02:15:11,630
Nee.

2446
02:15:11,630 --> 02:15:12,630
Das ist wieder was anderes.

2447
02:15:12,630 --> 02:15:18,390
Der will hier einen String.

2448
02:15:18,390 --> 02:15:20,390
Das funktioniert...

2449
02:15:20,390 --> 02:15:21,390
Hä?

2450
02:15:21,390 --> 02:15:22,390
Hä?

2451
02:15:22,390 --> 02:15:23,390
Moment.

2452
02:15:23,390 --> 02:15:25,390
To Owned sagt doch ganz klar...

2453
02:15:25,390 --> 02:15:26,390
Ach nee.

2454
02:15:26,390 --> 02:15:27,390
Es returnt einen String.

2455
02:15:27,390 --> 02:15:28,390
Okay.

2456
02:15:28,390 --> 02:15:29,390
Warum gibt es...

2457
02:15:29,390 --> 02:15:37,390
Hier sagt To Owned ganz klar, es returnt einen Slice und keinen String.

2458
02:15:37,390 --> 02:15:41,390
Und wenn man es dann einfügt, dann returnt es doch einen String.

2459
02:15:41,390 --> 02:15:54,600
string ok man muss das nicht verstehen ob das funktioniert meint es liegt an

2460
02:15:54,600 --> 02:16:03,550
der idee ok prägen ob es funktioniert ich glaube wir haben alles umgezogen

2461
02:16:03,550 --> 02:16:08,570
also haben wir gemacht set answer

2462
02:16:09,170 --> 02:16:15,480
set remote description haben wir gemacht ok leute der moment der wahrheit

2463
02:16:15,480 --> 02:16:21,600
wir haben wir haben wir haben das portiert von rust von go nach rust jetzt

2464
02:16:21,600 --> 02:16:28,000
jetzt jetzt kommt es darauf an ob das funktioniert also interop rust create

2465
02:16:28,000 --> 02:16:39,040
track offer interop rust create connection ich meine wir haben nichts

2466
02:16:39,040 --> 02:16:43,280
wirklich an den interfaces geändert die haben alle die gleichen datentypen und

2467
02:16:43,280 --> 02:16:47,340
so das müsste jetzt eins zu eins austauschbar sein präge richtig hart

2468
02:16:47,340 --> 02:16:47,860
rein

2469
02:16:47,860 --> 02:16:53,900
prägen chat es muss jetzt muss massive geprägt werden dass das funktioniert so

2470
02:16:53,900 --> 02:17:09,250
und jetzt haben wir set interop rust set answer ach so weil es ein int64 ist

2471
02:17:09,250 --> 02:17:24,870
int64 so jetzt bin ich ja mal gespannt ob das funst man es crasht schon mal

2472
02:17:24,870 --> 02:17:27,750
net beim start

2473
02:17:27,750 --> 02:17:47,860
denn dann

2474
02:17:47,860 --> 02:18:00,720
oh shit es ist crasht es ist geclashd ich weiß nicht genau wo es gecrasht ist

2475
02:18:00,720 --> 02:18:08,850
credibility

2476
02:18:08,850 --> 02:18:09,470
feeling all shit es ist gecrashed es ist gecrasht ich weiß nicht genau wo esữ

2477
02:18:09,470 --> 02:18:27,770
crasht okay warum warum sind wir hier gecrasht das sieht alles gut aus warum

2478
02:18:27,770 --> 02:18:44,050
sind wir hier gecrasht was was was ist hier crash ich glaube wir

2479
02:18:44,050 --> 02:18:57,410
crasht weil stand da auch irgendwas result unwrapped mpsc sent channel

2480
02:18:57,410 --> 02:19:26,380
closed was soll das jetzt bedeuten der fehlerbehandlung ist überbewertet was

2481
02:19:26,380 --> 02:19:39,180
ist mpsc send channel closed was möchte mir es sagen wir suchen wir gucken uns

2482
02:19:39,180 --> 02:19:55,520
noch mal ein beispiel an set remote description offer await ja so ähnlich

2483
02:19:55,520 --> 02:20:13,380
ja so ähnlich können wir das moment wie heißt das ding ich brauche mal ein

2484
02:20:13,380 --> 02:20:16,880
ordentliches beispiel set remote description

2485
02:20:16,880 --> 02:20:27,400
code kann man nicht durchsuchen weil ich eingeloggt bin dann gibt es gibt es

2486
02:20:27,400 --> 02:20:33,240
eigentlich nur eine möglichkeit wir klonen uns da schnell und creppen da

2487
02:20:33,240 --> 02:20:50,170
drin immer ganz ganz ruhig terminal ganz ruhig ganz ruhig examples examples

2488
02:20:50,170 --> 02:20:53,770
grepp nach set remote description

2489
02:20:53,770 --> 02:20:54,410
ups

2490
02:20:54,410 --> 02:21:09,080
ja ice ice restart haben wir auch irgendwas wo wo ich die erst wo ich die

2491
02:21:09,080 --> 02:21:23,280
anfrage schick und nicht umgedreht hier set remote description answer data

2492
02:21:23,280 --> 02:21:33,400
channels create der rest ist eigentlich offer answer

2493
02:21:33,720 --> 02:21:39,670
ja eigentlich okay wir können uns so dass date data channels create rast beispiel

2494
02:21:39,670 --> 02:21:46,990
angucken so sollen wir auch recht recht sein wie man okay remote await

2495
02:21:46,990 --> 02:21:59,130
fragezeichen macht der typ ist das was was was direkt weg räumt möglich ich habe

2496
02:21:59,130 --> 02:22:09,160
keine ahnung was mir was sagen möchte ja ja connection set remote also irgendwas

2497
02:22:09,160 --> 02:22:18,800
ist close es ist gut dass an der stelle ein rap steht

2498
02:22:18,800 --> 02:22:23,520
weil das sehen wir wenigstens woran es liegt also wenn ich das richtig verstehe

2499
02:22:23,520 --> 02:22:29,050
der macht das hier auch so ein weight fragezeichen ist glaube ich das gleiche

2500
02:22:29,050 --> 02:22:36,450
wie an rap oder wenn es wenn man den passenden result type hat oben das geht

2501
02:22:36,450 --> 02:22:39,850
nur über den passenden result type hat hier was ich nicht habe weil es erzählt

2502
02:22:39,850 --> 02:22:51,690
weil weil es eine funktion ist für c ok aber heißt im endeffekt so was was räumt

2503
02:22:51,690 --> 02:22:54,270
er hier auf

2504
02:22:54,270 --> 02:23:24,030
channel close wir gucken einfach mal die issues rein super geil ja so toll geil

2505
02:23:24,030 --> 02:23:34,170
okay wir finden nichts dazu es ist closed ja ja die frage ist warum das

2506
02:23:34,170 --> 02:23:51,790
klaus ist ich meine das hier funst ja offensichtlich das ist die antwort so ok

2507
02:23:51,790 --> 02:23:52,990
chat

2508
02:23:52,990 --> 02:23:55,090
ich

2509
02:24:41,760 --> 02:24:50,620
notiert so machen okay da bin ich zu peter für keine ahnung wie das fonds

2510
02:24:50,620 --> 02:24:55,080
prinz

2511
02:24:55,080 --> 02:25:06,080
nach so format ach so man ach so man kann das

2512
02:25:06,080 --> 02:25:21,170
man macht das hier rein ok das ergibt sinn ja verstehe wieso sind die augen

2513
02:25:21,170 --> 02:25:31,660
kaputt wegen rast oder wegen dem kontrast vom editor chat ich muss mal

2514
02:25:31,660 --> 02:25:33,160
chat gucken ich habe bestimmt was

2515
02:25:33,480 --> 02:26:06,480
es ist keine idea dasrom mehr tatsächlichУng poirot

2516
02:26:06,480 --> 02:26:19,200
steht noch nicht klquisite

2517
02:26:19,220 --> 02:26:21,140
falsch

2518
02:26:21,140 --> 02:26:21,260
suas

2519
02:26:21,260 --> 02:26:42,440
ahnung was das ding von mir will null was macht denn set remote description

2520
02:26:42,440 --> 02:26:47,120
guck mal rein wirklich kein plan was das was das macht

2521
02:26:47,120 --> 02:27:25,150
mps mps c gathering complete hattest du nicht irgendwo kreislein code shows

2522
02:27:25,150 --> 02:27:37,340
watch ist non-blocking von alter was die syntax man da fuck ich mache doch gar nichts direkt mit

2523
02:27:37,340 --> 02:27:45,390
diesem channel das verstehe ich nicht was sie mir damit sagen wollen also was ich auch nicht

2524
02:27:45,390 --> 02:28:02,840
checke ist was der wo hier irgendwas ich blocke ich ich ich erwarte und rappe öfters mal aber

2525
02:28:02,840 --> 02:28:13,170
das kann ja nicht verboten sein also ich habe keine ahnung was sie hier sagen da drin was

2526
02:28:13,170 --> 02:28:28,130
irgendwie relevant ist so was könnte was könnte das denn sein man was hat was hat er hier für

2527
02:28:28,130 --> 02:28:38,500
schmerzen sollen wir einfach mal soll man einfach mal das ignorieren das wird nicht

2528
02:28:38,500 --> 02:28:52,540
funktionieren ich war ein fehler schon seinen sinn räumt er vielleicht wirklich irgendwo was

2529
02:28:52,540 --> 02:29:00,370
auf ich meine wo wo create ich denn die connection ich meine eigentlich

2530
02:29:00,370 --> 02:29:14,530
ach so das receive ja das ist bei hier ist das gathering complete ist das ja das erwähnt das

2531
02:29:14,530 --> 02:29:21,910
erwähnte ich bis das fertig ist aber das machen die auch das machen die auch hier das machen die

2532
02:29:21,910 --> 02:29:38,900
hier auch feuer und das muss ich auch machen sonst kann ich an den browser ja gar nichts

2533
02:29:38,900 --> 02:29:54,700
schicken ja keine also ich habe ich habe legit ich meine wir haben das gute ist wir haben den code

2534
02:29:54,880 --> 02:30:00,340
eins zu eins von go rüber übersetzt und da funktioniert das heißt also an der an der

2535
02:30:00,340 --> 02:30:07,840
prinzipiellen logik kann das nicht liegen eine sache die ich halt nicht checke ist wo macht er

2536
02:30:07,840 --> 02:30:27,040
überhaupt was mit ihr ihr selbst ist close return error ok kann man irgendwie sagen wait jetzt wie

2537
02:30:27,040 --> 02:30:34,970
geht das mit pattern matching kann man sich nicht irgendwie den den error irgendwie ja genau result

2538
02:30:37,430 --> 02:31:25,160
at

2539
02:31:26,460 --> 02:31:33,880
du kommst außerdem ruf werden was da denn ist dort ok ich dachte irgendwie speziell tearout typ oder so wir machen an various schon ok hier was macht er hier log await sie die jedenfalls nach dem channel aus und ja ich bekomme ich bekomme eine antwort wisst ihr was wir komp 발ieren das ganze noch einmal kurz im debug bekommt man im debug mot jetzt bekommt man da mehr infos irgendwas irgendwas sinnvolles wenn ich die leiter im debug get мар lại

2540
02:31:35,080 --> 02:32:10,610
modus kompilieren rast backtrace 1 to display ok hoffentlich geht das auch so

2541
02:32:10,610 --> 02:32:31,390
sieht man sogar was da ist so also wo kackt er jetzt ab an web 59 58 dass das

2542
02:32:31,390 --> 02:32:38,700
das also wo das ist habe ich schon gecheckt 58 hier bei dem an web ja das

2543
02:32:38,700 --> 02:32:45,460
ist mir auch klar dass das das ist so und jetzt sagt er was choris alt an web

2544
02:32:45,460 --> 02:33:15,730
set answer ja okay was cash park what blocking region guard aber das wird hier

2545
02:33:15,730 --> 02:33:18,590
nirgendwo aufgerufen ich habe es dann zumindest nicht gefunden

2546
02:33:18,590 --> 02:33:22,850
ok die fehlermeldung ist

2547
02:33:22,850 --> 02:33:33,510
für mich jetzt zumindest an set rast backtrace kann man das kann man das ganze also wieder

2548
02:33:33,510 --> 02:33:42,960
wieder kompilieren komplett lass uns mal weiter gucken was er hier macht so desk

2549
02:33:42,960 --> 02:33:54,320
passt passt so wo könnte der hier getrenn sie was vielleicht hier irgendwo getrenn sie was self

2550
02:33:54,320 --> 02:33:55,480
remote description

2551
02:33:55,640 --> 02:34:46,870
du bekommst von der library einen channel receiver ach so du meinst das ist gar keine fehlermeldung in dem sinn sondern es gibt eine fehlermeldung weil der hier aus dem scope raus geht aber warum aber warum moment aber warum nee nee nee nee aber warum kackt er dann ab beim an web und nicht irgendwie erst danach oder aber wo bekomme ich irgendwas ich sehe hier nichts meinst du das ding

2552
02:34:47,270 --> 02:34:48,750
für die

2553
02:34:48,750 --> 02:34:51,070
dikata komplett das ist doch was ganz was

2554
02:34:51,070 --> 02:34:53,150
was anderes

2555
02:34:53,150 --> 02:34:55,270
das ist doch hier fertig

2556
02:34:55,270 --> 02:35:02,390
das kann das hat auch damit nichts zu tun also das wäre doch wer ultra weird hat das was damit zu tun

2557
02:35:02,390 --> 02:35:13,160
also das ist ja für für ip adressen look up und und endpunkte sammeln was hat das jetzt das hat das eine mit dem anderen zu tun

2558
02:35:13,160 --> 02:35:23,360
du meinst das hier müsste ich quasi speichern sozusagen den

2559
02:35:23,360 --> 02:35:25,000
option

2560
02:35:25,000 --> 02:35:25,200
option

2561
02:35:25,200 --> 02:35:25,260
option

2562
02:35:27,160 --> 02:35:28,820
Oder was kommt denn da überhaupt raus?

2563
02:35:33,860 --> 02:35:36,380
Meinst du, ich muss das hier irgendwo speichern?

2564
02:35:38,480 --> 02:35:38,860
Das hier?

2565
02:35:39,700 --> 02:35:40,120
Nee.

2566
02:35:45,920 --> 02:35:47,300
Nee, das...

2567
02:35:47,300 --> 02:35:49,740
Das ergibt keinen Sinn.

2568
02:35:52,110 --> 02:35:53,750
Ich meine, wisst ihr, was wir machen können?

2569
02:35:54,810 --> 02:35:55,270
Kick, wait.

2570
02:36:00,400 --> 02:36:02,640
Also, wir lassen das einfach mal weg.

2571
02:36:02,860 --> 02:36:03,700
Wir lassen das mal weg.

2572
02:36:06,140 --> 02:36:06,580
Und...

2573
02:36:06,580 --> 02:36:14,350
Kann man in Rust irgendwie Async sleep?

2574
02:36:14,350 --> 02:36:18,190
Also, quasi sowas wie Task Delay.

2575
02:36:23,850 --> 02:36:24,890
Tokyo Timers.

2576
02:36:27,040 --> 02:36:27,520
Time.

2577
02:36:28,480 --> 02:36:29,020
Sleep.

2578
02:36:30,760 --> 02:36:31,280
Duration.

2579
02:36:31,500 --> 02:36:32,140
Okay, das ist gut.

2580
02:36:33,240 --> 02:36:34,100
Äh, Duration.

2581
02:36:36,100 --> 02:36:37,360
Oh Gott, wie fünften das jetzt?

2582
02:36:39,240 --> 02:36:40,820
Äh, gibt's da nicht irgendwie einen gescheiten...

2583
02:36:42,840 --> 02:36:43,940
From seconds.

2584
02:36:44,200 --> 02:36:44,400
Okay.

2585
02:36:45,060 --> 02:36:47,040
Wir lassen den einfach mal 5 Sekunden schlafen.

2586
02:36:47,760 --> 02:36:49,120
Und jetzt await.

2587
02:36:50,260 --> 02:36:50,700
Unwrap.

2588
02:36:50,820 --> 02:36:51,900
Nee, einfach so?

2589
02:36:57,880 --> 02:36:59,860
Wartet das jetzt an der Stelle 5 Sekunden?

2590
02:37:01,980 --> 02:37:03,480
Nee, im CamChamp ist das nicht drin.

2591
02:37:03,600 --> 02:37:04,580
Das hab ich noch nicht gepusht.

2592
02:37:04,880 --> 02:37:06,340
Außerdem geht's ja um den Library Code.

2593
02:37:07,520 --> 02:37:08,820
Wartet er jetzt hier 5 Sekunden?

2594
02:37:09,600 --> 02:37:10,120
Schauen wir mal.

2595
02:37:15,130 --> 02:37:16,130
Jetzt bin ich mal gespannt.

2596
02:37:25,410 --> 02:37:29,440
Okay, äh...

2597
02:37:29,440 --> 02:37:29,680
Nee.

2598
02:37:31,810 --> 02:37:32,210
Send.

2599
02:37:33,470 --> 02:37:35,890
Also, auch wenn ich das hier nicht verwende,

2600
02:37:36,670 --> 02:37:37,550
juckt ihn das nicht.

2601
02:37:38,670 --> 02:37:39,610
Das ist schon mal nett.

2602
02:37:42,020 --> 02:37:43,540
Das ist schon mal nett.

2603
02:37:50,580 --> 02:37:51,240
Okay, was?

2604
02:37:51,660 --> 02:37:54,720
Ähm...

2605
02:37:54,720 --> 02:37:55,180
Answer.

2606
02:38:06,190 --> 02:38:08,090
Ja, die machen hier auch nix Spezielles, ne?

2607
02:38:11,990 --> 02:38:13,030
Oh, was ist denn das hier?

2608
02:38:13,150 --> 02:38:13,410
Done?

2609
02:38:15,580 --> 02:38:16,660
Nee, das ist...

2610
02:38:16,660 --> 02:38:17,380
Das hat nichts...

2611
02:38:17,380 --> 02:38:18,640
Das hat nichts damit zu tun.

2612
02:38:19,180 --> 02:38:20,780
Das hier ist ihr komisches Signaling.

2613
02:38:20,900 --> 02:38:22,760
Das hat mit dem Kram nichts zu tun.

2614
02:38:23,000 --> 02:38:23,300
Okay.

2615
02:38:23,720 --> 02:38:24,700
Das ist für die Shell.

2616
02:38:26,340 --> 02:38:27,660
Danach wird geclosed.

2617
02:38:31,140 --> 02:38:34,260
Ich hab legit keine Ahnung, was das Problem ist.

2618
02:38:48,380 --> 02:38:51,220
Also, jede FFI-Funktion bekommt ihre eigene Runtime.

2619
02:38:51,860 --> 02:38:52,580
Ja, ist das schlimm?

2620
02:38:52,580 --> 02:38:56,620
Ich mein...

2621
02:38:57,920 --> 02:38:59,880
Ich hab hier so ein paar globale Dinger.

2622
02:39:00,580 --> 02:39:03,180
Ich würd den Tokio-Krempel ehrlich gesagt auch weglassen.

2623
02:39:04,960 --> 02:39:06,800
Aber dann funzt die Hälfte nicht,

2624
02:39:06,900 --> 02:39:09,220
weil die intern Tokio-Zeug verwenden.

2625
02:39:15,540 --> 02:39:18,040
Wenn die Library ein Background-Task spawnt,

2626
02:39:18,100 --> 02:39:19,140
dann ist das weg.

2627
02:39:20,240 --> 02:39:22,360
Du kannst auch eine Static-Runtime machen.

2628
02:39:24,450 --> 02:39:24,710
Aha.

2629
02:39:26,350 --> 02:39:28,770
Ich mach das nur, damit es funktioniert, ja?

2630
02:39:28,910 --> 02:39:29,330
Also...

2631
02:39:29,330 --> 02:39:31,490
Ich hab keine Ahnung, was...

2632
02:39:31,490 --> 02:39:32,810
Ich will das gar nicht verwenden.

2633
02:39:32,810 --> 02:39:33,990
Ich muss das aber verwenden,

2634
02:39:33,990 --> 02:39:36,470
weil die Library das irgendwie benutzt.

2635
02:39:48,850 --> 02:39:50,170
Ey, ich hab echt keinen Plan.

2636
02:39:52,160 --> 02:39:54,480
Wir haben eins zu eins von Go umgezogen.

2637
02:39:54,480 --> 02:39:58,320
Also, das muss jetzt irgendwelche Rust-Spezialitäten sein.

2638
02:39:58,560 --> 02:39:59,980
Was ist denn, wenn ich das einfach...

2639
02:40:01,600 --> 02:40:03,260
ignoriere, was der hier macht?

2640
02:40:07,620 --> 02:40:09,560
Dann wird's halt wahrscheinlich einfach nicht gehen,

2641
02:40:09,560 --> 02:40:10,520
aber nicht abkacken.

2642
02:40:21,530 --> 02:40:22,030
Ja.

2643
02:40:25,330 --> 02:40:26,190
Ja, äh, äh, äh...

2644
02:40:26,350 --> 02:40:27,490
Nee, jetzt kackt er nicht ab.

2645
02:40:28,170 --> 02:40:29,150
Jetzt kackt er nicht ab.

2646
02:40:30,350 --> 02:40:31,650
Aber es funktioniert halt nicht.

2647
02:40:32,990 --> 02:40:33,610
Alter, was ist das?

2648
02:40:33,610 --> 02:40:34,610
Hier, Remote Description.

2649
02:40:34,610 --> 02:40:35,610
Das Zeug kann halt keiner lesen.

2650
02:40:35,610 --> 02:40:36,610
Was?

2651
02:40:36,610 --> 02:40:39,630
Media, Media, RTC.

2652
02:40:39,630 --> 02:40:40,630
Ist mir wurscht, ob du das empfehlen würdest oder nicht.

2653
02:40:40,630 --> 02:40:41,630
Der einzige Grund, warum ich Rust verwende, ist,

2654
02:40:41,630 --> 02:40:42,630
weil ich die Library verwenden will und gucken will,

2655
02:40:42,630 --> 02:40:43,630
ob man das noch ein bisschen schneller als mit Go hinkriegt.

2656
02:40:43,630 --> 02:40:44,630
So.

2657
02:40:44,630 --> 02:40:48,800
Was macht der hier unten für Dinger?

2658
02:40:48,800 --> 02:40:49,800
Hier.

2659
02:40:49,800 --> 02:40:50,800
Komm mal da.

2660
02:40:50,800 --> 02:40:51,800
Hier.

2661
02:40:51,800 --> 02:40:52,800
Hier.

2662
02:40:52,800 --> 02:40:53,800
Hier.

2663
02:40:53,800 --> 02:40:54,800
Hier.

2664
02:40:54,800 --> 02:40:55,800
Hier.

2665
02:40:55,800 --> 02:40:56,800
Hier.

2666
02:40:56,800 --> 02:40:57,800
Hier.

2667
02:40:57,800 --> 02:40:58,800
Hier.

2668
02:40:58,800 --> 02:40:59,800
Hier.

2669
02:40:59,800 --> 02:41:00,800
Hier.

2670
02:41:00,800 --> 02:41:01,800
Hier.

2671
02:41:01,800 --> 02:41:02,800
Hier.

2672
02:41:02,800 --> 02:41:05,620
Hier.

2673
02:41:05,620 --> 02:41:06,620
Hier.

2674
02:41:06,620 --> 02:41:07,620
Hier.

2675
02:41:07,620 --> 02:41:12,110
Hier.

2676
02:41:12,110 --> 02:41:13,110
Hier.

2677
02:41:13,110 --> 02:41:16,250
Hier.

2678
02:41:16,250 --> 02:41:17,250
Hier.

2679
02:41:17,250 --> 02:41:18,250
Hier.

2680
02:41:18,250 --> 02:41:19,250
Hier.

2681
02:41:19,250 --> 02:41:20,250
Hier.

2682
02:41:20,250 --> 02:41:21,250
Hier.

2683
02:41:21,250 --> 02:41:22,250
Hier.

2684
02:41:22,250 --> 02:41:23,250
Hier.

2685
02:41:23,250 --> 02:41:24,250
Hier.

2686
02:41:24,250 --> 02:41:25,250
Hier.

2687
02:41:25,250 --> 02:41:26,250
Hier.

2688
02:41:26,250 --> 02:41:27,250
Hier.

2689
02:41:27,250 --> 02:41:28,250
Hier.

2690
02:41:28,250 --> 02:41:29,250
Hier.

2691
02:41:29,250 --> 02:41:30,250
Hier.

2692
02:41:30,250 --> 02:41:31,250
Hier.

2693
02:41:31,250 --> 02:41:32,250
Hier.

2694
02:41:32,250 --> 02:41:33,250
Hier.

2695
02:41:33,250 --> 02:41:34,250
Hier.

2696
02:41:34,250 --> 02:41:35,250
Hier.

2697
02:41:35,250 --> 02:41:36,250
Hier.

2698
02:41:36,250 --> 02:41:37,250
Hier.

2699
02:41:37,250 --> 02:41:38,250
Hier.

2700
02:41:38,250 --> 02:41:39,250
Hier.

2701
02:41:39,250 --> 02:41:40,250
Hier.

2702
02:41:40,250 --> 02:41:42,880
Hier.

2703
02:41:42,880 --> 02:41:43,880
Hier.

2704
02:41:43,880 --> 02:41:44,880
Hier.

2705
02:41:44,880 --> 02:41:45,880
Hier.

2706
02:41:45,880 --> 02:41:46,880
Hier.

2707
02:41:47,440 --> 02:41:48,140
Wen juckt's?

2708
02:41:49,220 --> 02:41:51,140
Ich muss wissen, wo der hier abkackt.

2709
02:41:58,860 --> 02:42:00,100
Ich hab keinen Plan,

2710
02:42:00,220 --> 02:42:01,940
was die hier dreimal...

2711
02:42:01,940 --> 02:42:04,460
Der Backtrace

2712
02:42:04,460 --> 02:42:04,720
hat

2713
02:42:04,720 --> 02:42:07,840
Rust interne Sachen gesagt.

2714
02:42:07,840 --> 02:42:08,300
Moment.

2715
02:42:09,280 --> 02:42:11,680
Der war nicht so wirklich aussagekräftig.

2716
02:42:11,840 --> 02:42:12,200
Guck hier.

2717
02:42:12,840 --> 02:42:14,500
Der erzählt, dass er

2718
02:42:14,500 --> 02:42:16,620
Probleme hat.

2719
02:42:19,830 --> 02:42:21,490
In meiner Zeile 65.

2720
02:42:22,030 --> 02:42:23,150
Runtime RS

2721
02:42:23,150 --> 02:42:25,690
von Tokio blocked on

2722
02:42:25,690 --> 02:42:27,150
multi-threaded

2723
02:42:27,150 --> 02:42:28,670
enter runtime

2724
02:42:28,670 --> 02:42:30,670
cache park

2725
02:42:30,670 --> 02:42:32,510
unwrap

2726
02:42:32,510 --> 02:42:34,870
core result unwrap

2727
02:42:34,870 --> 02:42:37,270
Bam. Was auch immer.

2728
02:42:43,130 --> 02:42:44,490
Das ist Rust Rover.

2729
02:42:45,950 --> 02:42:46,870
Ey, das ist ja

2730
02:42:46,870 --> 02:42:47,810
mega kacke, Alter.

2731
02:42:49,150 --> 02:42:50,350
Also jetzt mal ernsthaft.

2732
02:42:50,550 --> 02:42:52,290
Ich benutze das

2733
02:42:52,290 --> 02:42:54,370
mit diesem Tokio Main

2734
02:42:54,370 --> 02:42:56,130
ja nicht, weil ich da so scharf drauf bin,

2735
02:42:56,570 --> 02:42:58,410
sondern

2736
02:42:58,410 --> 02:43:01,010
weil das das Einzige ist, wie es funktioniert hat.

2737
02:43:01,030 --> 02:43:04,400
Ich hab halt absolut

2738
02:43:04,400 --> 02:43:05,020
keine Ahnung.

2739
02:43:06,920 --> 02:43:08,580
Also wenn ich das, wenn ich das lösche

2740
02:43:08,580 --> 02:43:10,140
hier zum Beispiel, dann

2741
02:43:10,140 --> 02:43:12,680
geht's

2742
02:43:12,680 --> 02:43:13,100
immer noch.

2743
02:43:14,860 --> 02:43:15,260
Okay.

2744
02:43:20,040 --> 02:43:22,080
Nee, er kompiliert, aber er funktioniert nicht.

2745
02:43:23,780 --> 02:43:24,580
Er erzählt

2746
02:43:24,580 --> 02:43:26,220
ja auch hier, dass das jetzt, dass das nicht

2747
02:43:26,220 --> 02:43:27,900
safe ist, weil das Async ist.

2748
02:43:32,660 --> 02:43:33,560
Ja, und ich kann's jetzt nicht

2749
02:43:33,560 --> 02:43:36,280
ja, und ich kann's jetzt nicht

2750
02:43:36,280 --> 02:43:38,320
awaiten. Gibt es, gibt es

2751
02:43:38,320 --> 02:43:39,900
sowas wie ein hartes Wait,

2752
02:43:39,900 --> 02:43:40,180
oder?

2753
02:43:40,220 --> 02:43:41,000
Ohne Await, oder?

2754
02:43:41,280 --> 02:43:42,160
Nee, gibt's nicht.

2755
02:43:44,720 --> 02:43:46,580
Gibt es nicht ein normales Wait?

2756
02:43:47,740 --> 02:43:48,180
Einfach?

2757
02:43:50,260 --> 02:43:50,620
Äh.

2758
02:43:52,800 --> 02:43:53,740
Mehr Error Handling.

2759
02:43:53,840 --> 02:43:55,580
Es gibt keine Errors, die ich handeln kann.

2760
02:43:58,720 --> 02:43:59,700
Ey, das geht nicht ohne.

2761
02:44:01,840 --> 02:44:03,000
Ey, das ist halt doof.

2762
02:44:06,880 --> 02:44:08,080
Wie würde ich dem denn sagen,

2763
02:44:08,220 --> 02:44:09,920
dass der alles mit der gleichen

2764
02:44:09,920 --> 02:44:11,600
Runtime, was auch immer, das

2765
02:44:11,600 --> 02:44:13,060
Okay.

2766
02:44:13,880 --> 02:44:15,060
Tokio Rust

2767
02:44:15,060 --> 02:44:16,620
Main.

2768
02:44:21,560 --> 02:44:22,200
Max, ey,

2769
02:44:22,220 --> 02:44:24,040
du bist echt bei der Selected Runtime.

2770
02:44:25,180 --> 02:44:26,160
Set up a Runtime with us.

2771
02:44:27,780 --> 02:44:29,280
Runtime or Builder directly.

2772
02:44:35,430 --> 02:44:35,830
Hier.

2773
02:44:35,830 --> 02:44:37,770
Das Marco can be used on any Function,

2774
02:44:37,770 --> 02:44:38,830
not just the main Function.

2775
02:44:38,830 --> 02:44:41,230
Using it on a non-main makes the Function

2776
02:44:41,230 --> 02:44:45,470
behaves as it, as it, if it was synchronously.

2777
02:44:47,820 --> 02:44:48,180
Was?

2778
02:44:51,320 --> 02:44:54,700
Starting a new Runtime each time it is con.

2779
02:44:55,220 --> 02:44:58,120
Ich meine, es stört mich nicht, aber es ist

2780
02:44:58,120 --> 02:45:00,340
wahrscheinlich nicht so schlau.

2781
02:45:00,340 --> 02:45:10,310
One Cell ist Standard Library mittlerweile.

2782
02:45:10,310 --> 02:45:33,080
Use current Thread Runtime.

2783
02:45:33,080 --> 02:45:36,350
Aha.

2784
02:45:36,350 --> 02:45:47,860
To use the single Thread Runtime known as the current Thread Runtime, the Marco can be configured.

2785
02:45:47,860 --> 02:45:50,860
Und dann werden die alle auf dem gleichen Thread ausgeführt, oder wie?

2786
02:45:50,860 --> 02:45:52,860
Okay.

2787
02:45:52,860 --> 02:45:56,860
Ich copy-paste es jetzt einfach mal rein.

2788
02:45:56,860 --> 02:46:02,780
Ich habe absolut keine Ahnung, was das macht, ey.

2789
02:46:02,780 --> 02:46:05,780
Das wird es nicht bringen, ne.

2790
02:46:05,780 --> 02:46:11,860
Moment, Moment.

2791
02:46:11,860 --> 02:46:20,180
Das ist Massive 5-Head Rust, ey.

2792
02:46:20,180 --> 02:46:22,180
Unwrap.

2793
02:46:22,180 --> 02:46:26,900
Die Fehlermeldung im Chat.

2794
02:46:26,900 --> 02:46:31,940
Hier.

2795
02:46:31,940 --> 02:46:33,940
Moment, ich habe die Hälfte.

2796
02:46:33,940 --> 02:46:38,220
Hier.

2797
02:46:38,220 --> 02:46:40,220
Oh!

2798
02:46:40,220 --> 02:46:43,220
Mein Copy-Paste ist wieder on point.

2799
02:46:43,220 --> 02:46:48,490
Zweifel, dass man damit groß was anfangen kann.

2800
02:46:48,490 --> 02:46:53,890
Habe ich jetzt überall? Single Threaded?

2801
02:46:53,890 --> 02:47:12,820
Excellent.

2802
02:47:12,820 --> 02:47:14,820
Schauen wir mal aus.

2803
02:47:14,820 --> 02:47:20,900
Äh.

2804
02:47:20,900 --> 02:47:22,900
Wird abgekackt.

2805
02:47:22,900 --> 02:47:29,600
Wir wissen ja noch nicht mal, ob das an irgendwelchen Tokio-Sachen liegt.

2806
02:47:29,600 --> 02:47:33,700
Bad-Kit-Time.

2807
02:47:33,700 --> 02:47:38,100
Ne, heute ist es ein bisschen länger.

2808
02:47:38,100 --> 02:47:39,100
Equivalent Code.

2809
02:47:39,100 --> 02:47:44,460
Not using Tokio Main.

2810
02:47:44,460 --> 02:47:45,460
Tokio Runtime.

2811
02:47:45,460 --> 02:47:46,460
Build a new Multithread.

2812
02:47:46,460 --> 02:47:47,460
Enable all.

2813
02:47:47,460 --> 02:47:48,460
Build.

2814
02:47:48,460 --> 02:47:49,460
Unwrap.

2815
02:47:49,460 --> 02:47:50,460
Block on.

2816
02:47:50,460 --> 02:47:51,460
Alles klar.

2817
02:47:51,460 --> 02:48:15,730
Aber wenn ich das mache, muss ich dann allen Code, den ich ausführen will, in irgend so ein komisches Ding hier reinwrappen?

2818
02:48:15,730 --> 02:48:17,730
Das kann es doch nicht sein.

2819
02:48:17,730 --> 02:48:18,730
All das.

2820
02:48:18,730 --> 02:48:19,730
Alles.

2821
02:48:19,730 --> 02:48:23,000
Also.

2822
02:48:23,000 --> 02:48:24,000
Oder.

2823
02:48:24,000 --> 02:48:28,000
Oder schreibe ich dann irgendwie da oben, oben hin.

2824
02:48:28,000 --> 02:48:29,000
Tokio.

2825
02:48:29,000 --> 02:48:36,510
Ich bezweifle auch irgendwie, dass das das Problem ist.

2826
02:48:36,510 --> 02:48:48,020
Warte, warte mal.

2827
02:48:48,020 --> 02:48:50,020
Wir suchen jetzt mal hier drinnen.

2828
02:48:50,020 --> 02:49:14,470
Silver.

2829
02:49:14,470 --> 02:49:15,470
Captain Sergeant Silver.

2830
02:49:15,470 --> 02:49:16,470
Danke.

2831
02:49:16,470 --> 02:49:19,470
Du musst nur die Funktion per Runtime get.

2832
02:49:19,470 --> 02:49:20,470
Unwrap.

2833
02:49:20,470 --> 02:49:21,470
Block.

2834
02:49:21,470 --> 02:49:28,260
Action.

2835
02:49:28,260 --> 02:49:29,260
Aber wenn ich das so habe.

2836
02:49:29,260 --> 02:49:30,260
Guck mal.

2837
02:49:30,260 --> 02:49:39,860
Wenn ich das so habe, ist das dann nicht auch alles in der gleichen Runtime, weil hier irgendwie was dransteht?

2838
02:49:39,860 --> 02:49:42,860
Also da wüsste ich jetzt nicht, wie ich das machen soll.

2839
02:49:42,860 --> 02:49:46,860
Das heißt, das heißt ja im Endeffekt, ich bräuchte.

2840
02:49:46,860 --> 02:49:48,860
Jede Funktion doppelt.

2841
02:49:48,860 --> 02:49:53,870
Im Prinzip jede Funktion doppelt.

2842
02:49:53,870 --> 02:50:03,520
Das ist super weird, Champ.

2843
02:50:03,520 --> 02:50:06,410
Das heißt, ich brauche.

2844
02:50:06,410 --> 02:50:13,410
Ich brauche jede Funktion hier doppelt und würde dann aus der aus der C-Funktion nur noch eine Runtime.

2845
02:50:13,410 --> 02:50:14,410
Get.

2846
02:50:14,410 --> 02:50:15,410
Unwrap.

2847
02:50:15,410 --> 02:50:16,410
Block.

2848
02:50:16,410 --> 02:50:17,410
On.

2849
02:50:17,410 --> 02:50:18,410
Das macht.

2850
02:50:18,410 --> 02:50:22,130
Macht dir das Bock?

2851
02:50:22,130 --> 02:50:23,130
Na dann.

2852
02:50:23,130 --> 02:50:24,130
Ich.

2853
02:50:24,130 --> 02:50:25,130
Das wirkt äußerst planlos gerade.

2854
02:50:25,130 --> 02:50:26,130
Ich glaube auch nicht, dass ich das hinkriege, heute das zu beseitigen.

2855
02:50:26,130 --> 02:50:27,130
Also ich meine, im Endeffekt bräuchte ich dann quasi.

2856
02:50:27,130 --> 02:50:28,130
So was.

2857
02:50:28,130 --> 02:50:29,130
Ja, das mal so.

2858
02:50:29,130 --> 02:50:30,130
So ein paar Blablabla.

2859
02:50:30,130 --> 02:50:31,130
In it.

2860
02:50:31,130 --> 02:50:32,130
Dann machen wir das hier weg.

2861
02:50:32,130 --> 02:50:33,130
Oh, das kommt dahin.

2862
02:50:33,130 --> 02:50:34,130
Das kommt weg.

2863
02:50:34,130 --> 02:50:35,130
So.

2864
02:50:35,130 --> 02:50:36,130
Ja.

2865
02:50:36,130 --> 02:50:37,130
Ja.

2866
02:50:37,130 --> 02:50:38,130
Ja.

2867
02:50:38,130 --> 02:50:39,130
Ja.

2868
02:50:39,130 --> 02:50:40,130
Ja.

2869
02:50:40,130 --> 02:50:41,130
Ja.

2870
02:50:41,130 --> 02:50:42,130
Ja.

2871
02:50:42,130 --> 02:50:43,130
Ja.

2872
02:50:43,130 --> 02:50:44,130
Ja.

2873
02:50:44,130 --> 02:50:45,130
Ja.

2874
02:50:45,130 --> 02:50:46,130
Ja.

2875
02:50:46,130 --> 02:50:47,130
Ja.

2876
02:50:47,130 --> 02:50:48,130
Ja.

2877
02:50:48,130 --> 02:51:01,240
Alles gut schon lobbying gut das warumonsstoss so und dann würde ich und dann würde

2878
02:51:01,240 --> 02:51:07,020
ich quasi sagen, dass es das muss ich habe, das muss ja schon mal.

2879
02:51:07,020 --> 02:51:08,140
Nicht extra extern sein.

2880
02:51:08,140 --> 02:51:11,540
Und dann würde ich quasi sinngemäß sagen.

2881
02:51:11,540 --> 02:51:12,540
So.

2882
02:51:12,540 --> 02:51:20,430
So oder okay und.

2883
02:51:20,430 --> 02:51:26,250
Da bin ich ja mal gespannt jetzt.

2884
02:51:26,250 --> 02:51:27,430
Also ich baue mir.

2885
02:51:27,430 --> 02:51:32,750
Ich baue mir einen ran tay Suflower.

2886
02:51:32,750 --> 02:51:34,490
In es sollte nicht mehr es.

2887
02:51:34,490 --> 02:51:44,440
ach das hier ja ja ok ok so heißt im endeffekt ihr erinnert da kann ich das

2888
02:51:44,440 --> 02:51:50,200
ja machen so heißt im endeffekt tokyo runter bilder new multithreader blog

2889
02:51:50,200 --> 02:52:01,830
blog und hier das brauchen wir nicht wir brauchen den runtime und das muss in

2890
02:52:01,830 --> 02:52:20,770
so einen lock lock once rein was ist wirklich man runtime runtime was hat er

2891
02:52:20,770 --> 02:52:41,920
jetzt ach so ja das kann so so in it runtime geht's an rap ok also das heißt

2892
02:52:41,920 --> 02:52:42,420
wir sagen

2893
02:52:42,480 --> 02:52:58,400
jetzt runtime set runtime ok er ja nicht gedacht dass das überhaupt an rap

2894
02:52:58,400 --> 02:53:10,190
was das kombiniert er wirklich so meinst du das so so und jetzt würde ich im

2895
02:53:10,190 --> 02:53:21,840
endeffekt jedes mal wenn ich das aufrufe so in etwa so wir gucken mal was passiert

2896
02:53:21,840 --> 02:53:24,560
wenn ich es ja auch vor ob das nicht gleich crasht

2897
02:53:24,560 --> 02:53:25,060
es kräft

2898
02:53:25,060 --> 02:53:25,100
es kräft

2899
02:53:25,100 --> 02:53:29,420
noch nicht funktionieren aber eltern

2900
02:53:29,420 --> 02:53:33,780
ja so mein nicht gut das heißt wir haben das es ist ja gar kein so großer akt das

2901
02:53:33,780 --> 02:53:37,540
möchte ich nicht gleich weil es weht auch nicht funktionieren aber ja gleiche

2902
02:53:37,540 --> 02:53:40,480
error zumindest kommt als ausschließen dass das

2903
02:53:40,480 --> 02:53:45,100
eben in tokio schickt ist gut also dass heißt wir haben ja seither fall so

2904
02:53:45,100 --> 02:53:51,420
großer akt dass zu fixen also im endeffekt das dass das kann ich mir copy

2905
02:53:51,420 --> 02:54:08,700
interne sagt das kommt hierüber das kommt weg das kommt so hin so und das

2906
02:54:08,700 --> 02:54:12,840
muss nicht mehr es doch das muss das muss nicht mehr sein und das muss nicht

2907
02:54:12,840 --> 02:54:19,460
mehr extern c sein okay was habe ich jetzt vergessen

2908
02:54:19,460 --> 02:54:34,090
und worum es geht web rtc mit rust webcams stream in browser runtime an

2909
02:54:34,090 --> 02:54:50,680
web runtime get unwrap und unwrap so ach jetzt haben wir den return code krempel

2910
02:54:50,680 --> 02:54:57,740
am start create moment was hat er denn jetzt überhaupt für probleme hier oben

2911
02:54:57,740 --> 02:54:58,240
und

2912
02:54:58,240 --> 02:55:17,420
was will er hier nach multiple times und jetzt will er was ach so ja wie

2913
02:55:17,420 --> 02:55:29,340
kriege ich wie kriege ich denn da jetzt return types zurück oder machte das

2914
02:55:29,340 --> 02:55:36,140
automatisch ach so das checkt er automatisch okay ich muss gar nichts

2915
02:55:36,140 --> 02:55:42,040
machen nice ja das ist okay das ist wirklich nicht so um kompliziert das

2916
02:55:42,040 --> 02:55:45,640
jetzt umzustellen da brauchen wir nur die zwei funktionen

2917
02:55:45,640 --> 02:55:46,140
haben wir schon

2918
02:55:46,160 --> 02:55:51,980
so enko biver sowie continuer das hier gerade noch mal drüber so und das heißt

2919
02:55:51,980 --> 02:56:01,360
jetzt das ist gut so dann ruft das set estava auf den trend das hat kein

2920
02:56:01,360 --> 02:56:10,040
return type und das hier muss zwar noch an z èwl sein aber kein extern her jetzt

2921
02:56:10,040 --> 02:56:14,700
wird dir mal mit auf kochen chat dass ich nicht irgendwas vergisst dass es jetzt für ein bisschen wiem dass der check tennis friendly da als ich nicht irgendwas vergessen

2922
02:56:14,700 --> 02:56:18,540
Was ist jetzt für ein Problem? Achso, das ist hier noch dran.

2923
02:56:19,100 --> 02:56:23,760
So, jetzt sollte der eigentlich... Ich lecke Critical Information. Was ist jetzt?

2924
02:56:25,300 --> 02:56:28,900
Achso, Takes to Arguments. Okay, MonkaS, logisch.

2925
02:56:29,960 --> 02:56:36,800
Und Async weg. Takes to Arguments heißt im Endeffekt das da.

2926
02:56:36,800 --> 02:56:47,250
Und das Taked ID und Pointer. Bis in Dark Zone.

2927
02:56:50,430 --> 02:56:53,830
Äh, ja, komm. Unsafe. Equate.

2928
02:56:55,830 --> 02:56:58,130
Warum darf Unsafe nicht überall hin?

2929
02:57:01,530 --> 02:57:02,170
Was ist jetzt?

2930
02:57:04,370 --> 02:57:11,830
Oh je. Jetzt ist Deadge... Was?

2931
02:57:12,730 --> 02:57:19,050
Trade future is not implemented for... No, it's not English.

2932
02:57:20,330 --> 02:57:22,150
Was will der von mir überhaupt jetzt?

2933
02:57:24,860 --> 02:57:29,560
Ach, Async wieder rein. Oh man, da muss man sich echt voll konzentrieren.

2934
02:57:32,620 --> 02:57:54,720
Compiliert's? Ja. Gut, dann fehlt jetzt eigentlich nur noch eine Sache.

2935
02:57:57,560 --> 02:57:59,400
Dann, okay, dann blenden wir das um.

2936
02:57:59,540 --> 02:58:03,380
Internal, das hier ist easy. Da gibt's nix Input, nix Output.

2937
02:58:04,240 --> 02:58:05,140
Das kommt weg.

2938
02:58:06,780 --> 02:58:08,260
Extern C kommt weg.

2939
02:58:14,120 --> 02:58:15,120
So, das kommt auch weg.

2940
02:58:17,810 --> 02:58:19,270
Das kann, by the way, auch weg.

2941
02:58:22,730 --> 02:58:23,590
Ja, ja, ja, okay.

2942
02:58:29,160 --> 02:58:30,900
Create Track muss das heißen.

2943
02:58:30,900 --> 02:58:33,380
Hat keinen Input.

2944
02:58:34,820 --> 02:58:38,380
Internal bekommt auch keine ID.

2945
02:58:40,680 --> 02:58:42,660
So, hab ich irgendwas gecheckt?

2946
02:58:44,500 --> 02:58:47,980
If you have any questions, you can ask them in the chat.

2947
02:58:48,680 --> 02:58:51,420
But my English is not a yellow from the egg.

2948
02:58:54,480 --> 02:59:02,100
Ich hab keine Ahnung, ob ich irgendwas verkehrt gemacht hab.

2949
02:59:02,980 --> 02:59:05,000
Nutella rein soll ich ohne Butter drunter.

2950
02:59:12,200 --> 02:59:12,680
Okay.

2951
02:59:13,260 --> 02:59:15,000
Jetzt, wir gucken mal, ob's funktioniert.

2952
02:59:16,580 --> 02:59:18,140
Wir gucken mal, ob's funktioniert. Ich glaube, ich hab...

2953
02:59:18,140 --> 02:59:20,780
Blixkrone, hast du irgendwas gesehen? Hab ich irgendwo was vergessen?

2954
02:59:21,000 --> 02:59:21,620
Ich glaube nicht.

2955
02:59:23,760 --> 02:59:24,760
Glaube, glaube nicht.

2956
02:59:27,260 --> 02:59:28,740
Okay, Brake Time, Chat.

2957
02:59:29,120 --> 02:59:30,780
Chat, Brake, Brake.

2958
02:59:32,260 --> 02:59:33,840
Lass das jetzt funktionieren, ey.

2959
02:59:36,320 --> 02:59:38,220
Es geht! Es geht!

2960
02:59:41,620 --> 02:59:42,360
Es funktioniert!

2961
02:59:42,640 --> 02:59:45,860
Nice, nice, nice, nice.

2962
02:59:46,020 --> 02:59:47,900
Chat, ich muss, ich muss ehrlich sagen,

2963
02:59:47,900 --> 02:59:52,120
das ist eines der wenigen Vorkommnisse,

2964
02:59:52,440 --> 02:59:54,200
kommt ja sonst nie vor, ne, aber

2965
02:59:54,200 --> 02:59:56,700
ohne den Chat

2966
02:59:56,700 --> 03:00:00,440
hätte ich das diesmal nicht hingekriegt.

2967
03:00:03,650 --> 03:00:05,730
Der Chat ist ja sonst oftmals ziemlich

2968
03:00:05,730 --> 03:00:07,950
Community-ge,

2969
03:00:08,910 --> 03:00:10,950
aber heute war der Chat sehr hilfreich,

2970
03:00:11,030 --> 03:00:13,810
der Blixkrone auch gerade, und nicht nur der Odolmed und so,

2971
03:00:13,850 --> 03:00:15,770
also viele, also alle, die da waren.

2972
03:00:16,630 --> 03:00:20,030
Aber ein paar kennen sich eindeutig besser mit Rust aus als ich.

2973
03:00:20,170 --> 03:00:20,870
Und andere im Chat.

2974
03:00:24,280 --> 03:00:26,580
Okay, zweimal Refreshen von der Seite

2975
03:00:26,580 --> 03:00:27,740
funktioniert übrigens nicht.

2976
03:00:28,360 --> 03:00:28,880
Gescheit.

2977
03:00:30,820 --> 03:00:32,740
Weil ich Massive-Pepega bin

2978
03:00:32,740 --> 03:00:34,680
und die gleiche Connection-ID

2979
03:00:34,680 --> 03:00:35,720
wiederverwende. Also,

2980
03:00:36,460 --> 03:00:38,080
das ist noch nicht sonderlich

2981
03:00:38,080 --> 03:00:40,920
schlau gebaut alles, aber es funktioniert.

2982
03:00:45,570 --> 03:00:46,510
Boah, ist das...

2983
03:00:46,510 --> 03:00:47,830
Alter, das ist aber wirklich...

2984
03:00:47,830 --> 03:00:50,310
Also, Chat, da wäre ich ohne euch nicht drauf gekommen hier.

2985
03:00:51,270 --> 03:00:52,950
Beim besten Willen nicht.

2986
03:00:54,150 --> 03:00:57,540
Was war jetzt eigentlich nochmal das Problem?

2987
03:00:57,760 --> 03:01:03,270
Ich weiß... Moment, ich hab's gefixt,

2988
03:01:03,370 --> 03:01:04,690
aber ich weiß das Problem nicht mehr.

2989
03:01:07,420 --> 03:01:08,900
Wir wissen das nicht genau.

2990
03:01:14,890 --> 03:01:15,730
Tokyo Main

2991
03:01:15,730 --> 03:01:18,250
spawns every time

2992
03:01:18,250 --> 03:01:19,870
the function is called

2993
03:01:19,870 --> 03:01:21,950
a new runtime.

2994
03:01:23,150 --> 03:01:24,290
At least the readme

2995
03:01:24,290 --> 03:01:25,050
says so.

2996
03:01:26,330 --> 03:01:28,170
I have no idea what this

2997
03:01:28,170 --> 03:01:28,690
means.

2998
03:01:32,900 --> 03:01:33,000
Also,

2999
03:01:34,160 --> 03:01:36,800
ich gehe davon aus, dass eines...

3000
03:01:36,800 --> 03:01:38,480
Also, das Problem ist aufgetreten,

3001
03:01:38,740 --> 03:01:40,180
weil die...

3002
03:01:40,180 --> 03:01:42,420
weil die Funktionen in unterschiedlichen

3003
03:01:42,420 --> 03:01:44,280
Runtimes gelaufen sind.

3004
03:01:47,540 --> 03:01:48,820
Async Runtimes.

3005
03:01:49,280 --> 03:01:51,220
Warum es doch immer sowas gibt und nicht eingebaut ist,

3006
03:01:51,280 --> 03:01:51,940
man weiß es nicht.

3007
03:01:53,740 --> 03:01:55,220
Jetzt sorgen wir dafür,

3008
03:01:55,360 --> 03:01:57,340
dass es immer die gleiche Runtime ist,

3009
03:01:57,400 --> 03:01:58,460
die das Ganze ausführt.

3010
03:01:59,460 --> 03:02:01,000
Was genau das Problem war,

3011
03:02:01,040 --> 03:02:02,260
wissen wir aber trotzdem nicht.

3012
03:02:02,460 --> 03:02:04,300
Also, warum er sich daran gestört hat.

3013
03:02:04,300 --> 03:02:05,820
Wir wissen nur, dass er sich daran gestört hat.

3014
03:02:06,120 --> 03:02:07,500
Also, ich habe jetzt noch 20 Minuten Zeit.

3015
03:02:08,020 --> 03:02:09,580
Ich würde jetzt gerne das noch so bauen,

3016
03:02:09,680 --> 03:02:12,220
dass ich die Seite mehr als einmal refreshen kann,

3017
03:02:12,260 --> 03:02:14,300
dass ich die Seite mehr als einmal...

3018
03:02:14,300 --> 03:02:15,120
Das liegt daran.

3019
03:02:15,640 --> 03:02:16,120
Guck hier.

3020
03:02:22,670 --> 03:02:24,870
Now I use the same runtime.

3021
03:02:26,110 --> 03:02:27,930
But only because Flixcoder

3022
03:02:27,930 --> 03:02:29,650
ist 5-Head-Chatter.

3023
03:02:32,900 --> 03:02:33,180
Ich...

3024
03:02:33,180 --> 03:02:34,740
Ich frag mich jetzt.

3025
03:02:37,570 --> 03:02:38,970
Rust ist zu optimiert. Genau.

3026
03:02:39,330 --> 03:02:41,990
Also, wir können das doch...

3027
03:02:41,990 --> 03:02:43,990
Also, ich brauch... Okay, ich brauch random...

3028
03:02:43,990 --> 03:02:46,370
Was heißt random IDs? Ich brauch nicht random IDs.

3029
03:02:46,930 --> 03:02:48,330
Ich brauch unique IDs

3030
03:02:48,330 --> 03:02:50,610
für jeden Track und für jede Connection.

3031
03:02:52,150 --> 03:02:53,650
Track ist nicht so wild.

3032
03:02:55,170 --> 03:02:56,510
Track gibt es eh nur einen.

3033
03:02:57,890 --> 03:02:59,510
Gibt es sowas wie einen Atomic?

3034
03:03:03,980 --> 03:03:05,560
ID-Connect ist immer dieselbe.

3035
03:03:05,620 --> 03:03:07,040
Ja, das ist das Problem. Ja, ja, genau.

3036
03:03:08,500 --> 03:03:10,960
Gibt es irgendwie einen Atomic-Counter oder sowas?

3037
03:03:16,520 --> 03:03:17,000
Atomic...

3038
03:03:17,000 --> 03:03:17,940
Wow, what?

3039
03:03:17,940 --> 03:03:18,100
Ne.

3040
03:03:20,620 --> 03:03:22,800
Da habe ich auch schon dran gedacht.

3041
03:03:24,080 --> 03:03:24,720
UIDs.

3042
03:03:25,360 --> 03:03:26,460
Wobei, Leute,

3043
03:03:26,640 --> 03:03:27,680
ich habe die Idee.

3044
03:03:29,160 --> 03:03:29,680
Wir nehmen UIDs,

3045
03:03:29,680 --> 03:03:33,540
UIDs sind 128-Bit, richtig?

3046
03:03:35,920 --> 03:03:37,620
Und 128-Bit

3047
03:03:37,620 --> 03:03:41,300
ist relativ neu.

3048
03:03:41,680 --> 03:03:42,860
In .NET gibt es

3049
03:03:42,860 --> 03:03:44,640
einen U128.

3050
03:03:44,900 --> 03:03:47,160
Das machen wir. UID-Time, Leute.

3051
03:03:47,560 --> 03:03:49,360
Poggers. UID-Stells.

3052
03:03:52,410 --> 03:03:54,050
UID-Rusts.

3053
03:03:56,220 --> 03:03:56,800
Das brauchen wir.

3054
03:04:01,490 --> 03:04:02,330
Welches...

3055
03:04:02,330 --> 03:04:03,490
Welches...

3056
03:04:03,490 --> 03:04:05,110
Ist das das letzte Crate?

3057
03:04:05,110 --> 03:04:07,110
In Documentation?

3058
03:04:07,170 --> 03:04:08,170
Homepage?

3059
03:04:10,870 --> 03:04:11,870
1.5.

3060
03:04:12,910 --> 03:04:13,390
Okay.

3061
03:04:14,050 --> 03:04:14,570
Wie geht das?

3062
03:04:14,830 --> 03:04:15,330
Cargo?

3063
03:04:16,730 --> 03:04:18,230
Cargo-Add, gell?

3064
03:04:18,450 --> 03:04:19,230
Cargo-Add.

3065
03:04:19,930 --> 03:04:20,690
UUID.

3066
03:04:22,070 --> 03:04:23,350
Und jetzt Build.

3067
03:04:24,810 --> 03:04:26,510
Und jetzt erstmal wieder das halbe Internet

3068
03:04:26,510 --> 03:04:27,270
kompilieren.

3069
03:04:31,690 --> 03:04:34,250
Also, wo? Per Connection.

3070
03:04:35,550 --> 03:04:36,410
Gehe ich übrigens

3071
03:04:36,410 --> 03:04:37,630
richtig in der Annahme,

3072
03:04:38,130 --> 03:04:40,030
dass das jetzt auch deutlich schneller ist

3073
03:04:40,030 --> 03:04:41,470
beim Aufrufen der Funktion,

3074
03:04:41,470 --> 03:04:44,470
weil er nicht für jeden Funktionsaufruf

3075
03:04:44,470 --> 03:04:47,470
eine extra Runtime starten muss?

3076
03:04:47,470 --> 03:04:51,940
Minus FV4?

3077
03:04:51,940 --> 03:04:55,950
Was V4 ist?

3078
03:04:55,950 --> 03:04:57,950
V4 ist die

3079
03:04:57,950 --> 03:04:59,950
Random UID, gell?

3080
03:04:59,950 --> 03:05:01,950
V4 ist random und die anderen

3081
03:05:01,950 --> 03:05:03,950
sind irgendwie mit Date-Time-Stamp oder sowas.

3082
03:05:03,950 --> 03:05:07,900
Wenn ich das richtig im Kopf hab.

3083
03:05:07,900 --> 03:05:20,370
Chat, ich habe eine Zusage

3084
03:05:20,370 --> 03:05:22,370
für ein duales Studio bekommen. Kann jetzt für die

3085
03:05:22,370 --> 03:05:24,370
Theorie-Phasen für speziell

3086
03:05:24,370 --> 03:05:26,370
entscheiden. Einmal IT-Security

3087
03:05:26,370 --> 03:05:28,370
und einmal KI. Sollte ich einrollen, kann ich das auch machen?

3088
03:05:28,370 --> 03:05:30,370
Von beiden nehmen?

3089
03:05:30,370 --> 03:05:32,370
Was dir besser gefällt? Also,

3090
03:05:32,370 --> 03:05:34,370
keine Ahnung, was besser für dein Studium ist.

3091
03:05:34,370 --> 03:05:36,370
Das kann ich nicht beurteilen. Ich würde sagen, was dir

3092
03:05:36,370 --> 03:05:38,370
gefällt.

3093
03:05:38,370 --> 03:05:40,370
Also, Zukunft haben mit Sicherheit

3094
03:05:40,370 --> 03:05:42,370
beide Sachen. IT-Security

3095
03:05:42,370 --> 03:05:44,370
ist auf jeden Fall, sagen wir mal, safer.

3096
03:05:44,370 --> 03:05:46,370
Da weiß ich,

3097
03:05:46,370 --> 03:05:48,370
dass auf jeden Fall Leute gebraucht werden.

3098
03:05:48,370 --> 03:05:50,370
KI ist so ein Zukunftsding, wo man sagen würde,

3099
03:05:50,370 --> 03:05:52,370
ja, da werden auch Leute gebraucht und wahrscheinlich

3100
03:05:52,370 --> 03:05:54,370
in Zukunft noch mehr. Also, KI

3101
03:05:54,370 --> 03:05:56,370
ist ein bisschen vager, wo man jetzt nicht

3102
03:05:56,370 --> 03:05:58,370
so hundertprozentig weiß, wie viel

3103
03:05:58,370 --> 03:06:00,370
werden es mal wirklich, die da gesucht werden.

3104
03:06:00,370 --> 03:06:02,370
Aber IT-Security ist auf jeden Fall immer nicht

3105
03:06:02,370 --> 03:06:07,540
verkehrt. Wenn das nicht HackerMan

3106
03:06:07,540 --> 03:06:11,420
ist, dann hätte ich keinen Bock drauf.

3107
03:06:11,420 --> 03:06:13,420
So, lass mal hier kurz weitermachen.

3108
03:06:13,420 --> 03:06:15,420
Also, hier. Wie gehen das jetzt? UUID?

3109
03:06:15,420 --> 03:06:40,910
Import?

3110
03:06:40,910 --> 03:06:42,910
Warum?

3111
03:06:42,910 --> 03:06:44,910
Warum?

3112
03:06:44,910 --> 03:06:46,910
Hier steht doch bestimmt... Ja, V4.

3113
03:06:46,910 --> 03:06:48,910
Let's... Random... Was ist denn hier?

3114
03:06:48,910 --> 03:06:50,910
Hier, V1. Timestamp

3115
03:06:50,910 --> 03:06:52,910
und Counter. Ist doch für mich vollkommen

3116
03:06:52,910 --> 03:06:58,530
okay. Timestamp und Counter.

3117
03:06:58,530 --> 03:07:03,700
Random Data.

3118
03:07:03,700 --> 03:07:05,700
Was ist denn der Default überhaupt?

3119
03:07:07,700 --> 03:07:09,700
Wir können das mit Random Data machen.

3120
03:07:09,700 --> 03:07:11,700
Aber

3121
03:07:11,700 --> 03:07:13,700
wir testen ja erstmal prinzipiell, wie es funktioniert.

3122
03:07:13,700 --> 03:07:15,700
Okay, wie benutzt man den Kram

3123
03:07:15,700 --> 03:07:17,700
denn jetzt eigentlich? New?

3124
03:07:17,700 --> 03:07:19,700
New V4?

3125
03:07:19,700 --> 03:07:21,700
Moment,

3126
03:07:21,700 --> 03:07:23,700
kann das sein, dass nur V4

3127
03:07:23,700 --> 03:07:27,010
überhaupt... Moment,

3128
03:07:27,010 --> 03:07:29,010
wir machen das jetzt mal... Ich glaube, es ist

3129
03:07:29,010 --> 03:07:34,690
sogar nur V4 da.

3130
03:07:34,690 --> 03:07:36,690
ID 2.

3131
03:07:36,690 --> 03:07:38,690
Ich glaube, es gibt gar nichts anderes als V4

3132
03:07:38,690 --> 03:07:42,320
bei mir.

3133
03:07:42,320 --> 03:07:44,320
Cargo Run. Ne.

3134
03:07:44,320 --> 03:07:47,890
Run? Ach ne, das geht ja nicht.

3135
03:07:47,890 --> 03:07:51,460
Oder?

3136
03:07:51,460 --> 03:07:53,460
Weil Library.

3137
03:07:53,460 --> 03:08:10,400
Kackel. Moment.

3138
03:08:10,400 --> 03:08:12,400
Ich bin gerade etwas

3139
03:08:12,400 --> 03:08:22,110
verwirrt.

3140
03:08:22,110 --> 03:08:24,110
SU128.

3141
03:08:24,110 --> 03:08:27,740
Das ist top. Das brauchen wir.

3142
03:08:27,740 --> 03:08:29,740
Heißt im Endeffekt, auch den anderen

3143
03:08:29,740 --> 03:08:31,740
Krempel müssen

3144
03:08:31,740 --> 03:08:33,740
wir umstellen auf U128.

3145
03:08:33,740 --> 03:08:41,980
Client ID.

3146
03:08:41,980 --> 03:08:48,820
Achso.

3147
03:08:48,820 --> 03:08:53,660
Moment, Moment,

3148
03:08:53,660 --> 03:08:55,660
Moment, Leute. Gibt es überhaupt

3149
03:08:55,660 --> 03:08:57,660
in C ein...

3150
03:08:57,660 --> 03:08:59,660
Na ja, gucken wir einfach mal,

3151
03:08:59,660 --> 03:09:05,090
was er sagt.

3152
03:09:05,090 --> 03:09:07,090
Ja, ja, ich mach das dann.

3153
03:09:07,090 --> 03:09:12,830
What the fuck?

3154
03:09:12,830 --> 03:09:14,830
Found U64?

3155
03:09:14,830 --> 03:09:16,830
Achso, bei Connections.

3156
03:09:16,830 --> 03:09:18,830
Ja, Moment, bei Connections ist ja wurscht.

3157
03:09:18,830 --> 03:09:20,830
Bei Connections

3158
03:09:20,830 --> 03:09:22,830
kann das noch U64

3159
03:09:22,830 --> 03:09:28,960
bleiben.

3160
03:09:28,960 --> 03:09:30,960
Moment, ich blicke gerade nicht mehr durch.

3161
03:09:30,960 --> 03:09:32,960
Okay.

3162
03:09:32,960 --> 03:09:38,130
Ähm.

3163
03:09:38,130 --> 03:09:40,130
Wo sind wir jetzt?

3164
03:09:40,130 --> 03:09:43,700
Insert.

3165
03:09:43,700 --> 03:09:54,910
ID. Hä?

3166
03:09:54,910 --> 03:09:56,910
Expected U64?

3167
03:09:56,910 --> 03:10:02,020
Warum?

3168
03:10:02,020 --> 03:10:04,020
Ne, hä? Wieso?

3169
03:10:04,020 --> 03:10:10,980
Es sind doch beides

3170
03:10:10,980 --> 03:10:18,260
128.

3171
03:10:18,260 --> 03:10:20,260
Found U64? Hä?

3172
03:10:20,260 --> 03:10:22,260
Was?

3173
03:10:22,260 --> 03:10:26,270
Ach, jetzt sind wir bei Get.

3174
03:10:26,270 --> 03:10:28,270
Wo sind wir jetzt?

3175
03:10:28,270 --> 03:10:32,160
Connections.

3176
03:10:32,160 --> 03:10:36,750
Ach, hier.

3177
03:10:36,750 --> 03:10:50,500
Ah.

3178
03:10:50,500 --> 03:10:54,190
Not FFI safe, ja.

3179
03:10:54,190 --> 03:10:56,190
Ich weiß.

3180
03:10:56,190 --> 03:11:03,220
Ich weiß.

3181
03:11:03,220 --> 03:11:05,220
Es ist not FFI safe.

3182
03:11:05,220 --> 03:11:07,220
FFI, das ist so

3183
03:11:07,220 --> 03:11:09,220
ein allgemeiner Begriff, nur wenn du

3184
03:11:09,220 --> 03:11:11,220
Interop zwischen verschiedenen Sprachen machst.

3185
03:11:11,220 --> 03:11:13,220
Genau, Foreign Function Interface.

3186
03:11:13,220 --> 03:11:15,220
In der Regel ist damit gemeint,

3187
03:11:15,220 --> 03:11:17,220
dass beide

3188
03:11:17,220 --> 03:11:19,220
Sprachen quasi miteinander reden

3189
03:11:19,220 --> 03:11:21,220
können, so wie es C auch gemacht hätte.

3190
03:11:21,220 --> 03:11:23,220
Also, der kleinste

3191
03:11:23,220 --> 03:11:25,220
gemeinsame Nenner ist quasi die Art und Weise,

3192
03:11:25,220 --> 03:11:27,220
wie C aufgerufen wird.

3193
03:11:27,220 --> 03:11:29,220
Und das können so gut wie alle

3194
03:11:29,220 --> 03:11:31,220
Sprachen. GoCans,

3195
03:11:31,220 --> 03:11:33,220
PythonCans, RubyCans. Mir fällt eigentlich

3196
03:11:33,220 --> 03:11:36,660
keine, mir fällt eigentlich keine

3197
03:11:36,660 --> 03:11:38,660
Sprache ein, die kein C-Interface hat.

3198
03:11:38,660 --> 03:11:40,660
Wahrscheinlich sogar Fortran und

3199
03:11:40,660 --> 03:11:42,660
COBOL haben wahrscheinlich ein C-Interface.

3200
03:11:42,660 --> 03:11:44,660
Mit Sicherheit, die sind noch älter.

3201
03:11:44,660 --> 03:11:46,660
So, also, er sagt, das geht nicht.

3202
03:11:46,660 --> 03:11:48,660
Ich glaube ihm auch, dass das

3203
03:11:48,660 --> 03:11:50,660
nicht geht. Okay, ja, Chatge.

3204
03:11:50,660 --> 03:11:52,660
Ich glaube, dass das nicht

3205
03:11:52,660 --> 03:11:54,660
funktioniert, aber wir testen das jetzt.

3206
03:11:54,660 --> 03:11:56,660
Mal. Und zwar,

3207
03:11:56,660 --> 03:11:58,660
Run.

3208
03:11:58,660 --> 03:12:00,660
Kackt auf jeden Fall

3209
03:12:00,660 --> 03:12:02,660
nicht ab. Okay.

3210
03:12:02,660 --> 03:12:04,660
Und jetzt sagen wir, Interop

3211
03:12:04,660 --> 03:12:06,660
Rust Create

3212
03:12:06,660 --> 03:12:13,420
Connection.

3213
03:12:13,420 --> 03:12:15,420
Rust Create Connection.

3214
03:12:15,420 --> 03:12:20,080
Oder Splitten, dann hast

3215
03:12:20,080 --> 03:12:22,080
du 64. Nee, das ist aber nicht Unique

3216
03:12:22,080 --> 03:12:24,080
genug. Wenn dann einmal erst

3217
03:12:24,080 --> 03:12:26,080
die 20.000 User da drauf gehen.

3218
03:12:28,080 --> 03:12:30,080
Bei mir daheim auf die Webcams vor allem.

3219
03:12:30,080 --> 03:12:32,080
Null. Dann

3220
03:12:32,080 --> 03:12:34,080
geht das.

3221
03:12:34,080 --> 03:12:36,080
Okay, das Funst.

3222
03:12:36,080 --> 03:12:38,080
So, also, jetzt bin ich ja mal gespannt,

3223
03:12:38,080 --> 03:12:40,080
ob das funktioniert.

3224
03:12:40,080 --> 03:12:42,080
Connection Reset.

3225
03:12:42,080 --> 03:12:44,080
Das ist noch

3226
03:12:44,080 --> 03:12:46,080
Client ID. Ach, Moment.

3227
03:12:46,080 --> 03:12:48,080
Das ist ja das Falsche.

3228
03:12:48,080 --> 03:12:50,080
Das sind jetzt nur die ersten 64 Bit.

3229
03:12:50,080 --> 03:12:52,080
Das sind noch die ersten 64 Bit.

3230
03:12:52,080 --> 03:12:54,080
Das muss jetzt ein...

3231
03:12:54,080 --> 03:12:56,080
Ja, mal gucken, ob das überhaupt

3232
03:12:56,080 --> 03:12:58,080
funktioniert. Uint 128.

3233
03:12:58,080 --> 03:13:00,080
Ob das jetzt tut.

3234
03:13:00,080 --> 03:13:02,080
Oh, Shit. Was ist?

3235
03:13:02,080 --> 03:13:05,520
Int and System

3236
03:13:05,520 --> 03:13:07,520
cannot be passed by value

3237
03:13:07,520 --> 03:13:13,070
to unmanaged. Chat,

3238
03:13:13,070 --> 03:13:15,070
wir tricksen C Sharp jetzt aus.

3239
03:13:15,070 --> 03:13:17,070
Ich sag euch, wie wir das machen.

3240
03:13:17,070 --> 03:13:19,070
Passt mal auf. Absolut

3241
03:13:19,070 --> 03:13:21,070
Five Head Modus. Hatte ich gerade

3242
03:13:21,070 --> 03:13:23,070
spontan so eine Idee.

3243
03:13:23,070 --> 03:13:25,070
Nee, ich hatte nicht spontan so eine Idee.

3244
03:13:25,070 --> 03:13:27,070
Ich hab sowas ähnliches schon mal gemacht.

3245
03:13:27,070 --> 03:13:29,070
Ich hoffe, das funktioniert jetzt auch.

3246
03:13:29,070 --> 03:13:31,070
So, Struct. Wir nennen das jetzt einfach C

3247
03:13:31,070 --> 03:13:33,070
Uint

3248
03:13:33,070 --> 03:13:37,730
32.

3249
03:13:37,730 --> 03:13:39,730
Und sagen jetzt Public

3250
03:13:39,730 --> 03:13:41,730
Uint 64

3251
03:13:41,730 --> 03:13:45,230
Upper

3252
03:13:45,230 --> 03:13:47,230
Lower

3253
03:13:47,230 --> 03:13:49,230
Und jetzt ist das sowas hier.

3254
03:13:49,230 --> 03:13:51,230
Jetzt sollte es zumindest nicht mal

3255
03:13:51,230 --> 03:13:53,230
crashen. Es crasht nicht.

3256
03:13:53,230 --> 03:13:55,230
Passt mal auf. Und jetzt

3257
03:13:55,230 --> 03:14:03,980
Six Head Mode.

3258
03:14:03,980 --> 03:14:05,980
Uint 128

3259
03:14:07,980 --> 03:14:09,980
Pass

3260
03:14:09,980 --> 03:14:11,980
Convert

3261
03:14:11,980 --> 03:14:13,980
Moment.

3262
03:14:13,980 --> 03:14:15,980
Shit.

3263
03:14:15,980 --> 03:14:17,980
Convert?

3264
03:14:17,980 --> 03:14:19,980
Uint 128 gibts da nicht.

3265
03:14:19,980 --> 03:14:21,980
Hat das Ding ein

3266
03:14:21,980 --> 03:14:23,980
Constructor vielleicht? Uint 128?

3267
03:14:23,980 --> 03:14:25,980
Alter,

3268
03:14:25,980 --> 03:14:27,980
genau. Ich wusste es doch. Ich wusste es.

3269
03:14:27,980 --> 03:14:29,980
Ich hab das schon mal gemacht.

3270
03:14:29,980 --> 03:14:31,980
Ich hab schon mal Uint 128

3271
03:14:31,980 --> 03:14:33,980
gebaut aus zwei

3272
03:14:33,980 --> 03:14:35,980
Int 64s.

3273
03:14:35,980 --> 03:14:37,980
Deswegen.

3274
03:14:37,980 --> 03:14:39,980
Ich hab mich doch da richtig dran erinnert.

3275
03:14:52,030 --> 03:14:54,030
So, passt mal auf Chat.

3276
03:14:54,030 --> 03:14:56,030
Easy.

3277
03:14:56,030 --> 03:14:59,790
Jetzt müssen wir nur noch überprüfen, ob das

3278
03:14:59,790 --> 03:15:01,790
stimmt. Jetzt müssen wir nur noch checken,

3279
03:15:01,790 --> 03:15:03,790
ob das stimmt.

3280
03:15:03,790 --> 03:15:05,790
Du warst mit dem Splitten, ne, du warst mit dem

3281
03:15:05,790 --> 03:15:07,790
Splitten unwissentlich relativ gut dabei.

3282
03:15:09,790 --> 03:15:14,640
Jetzt müssen wir nur noch gucken, ob das

3283
03:15:14,640 --> 03:15:16,640
stimmt. FMT, ach

3284
03:15:16,640 --> 03:15:18,640
Mann, Alter. Moment, gibt es

3285
03:15:18,640 --> 03:15:26,240
sowas hier?

3286
03:15:26,240 --> 03:15:28,240
Das ist eklig.

3287
03:15:28,240 --> 03:15:32,190
Ist hier was cool, wenn man

3288
03:15:32,190 --> 03:15:34,190
einfach. Ah!

3289
03:15:34,190 --> 03:15:38,210
Kann man ja.

3290
03:15:38,210 --> 03:15:40,210
Kann man auch DBG machen?

3291
03:15:40,210 --> 03:15:42,210
HiIQ

3292
03:15:42,210 --> 03:15:54,290
IDE, Mann.

3293
03:15:54,290 --> 03:15:56,290
Einfach 8 CPU-Kerne voll.

3294
03:15:56,290 --> 03:16:02,700
Okay.

3295
03:16:02,700 --> 03:16:04,700
Shit.

3296
03:16:06,700 --> 03:16:08,700
Das sind unterschiedliche

3297
03:16:08,700 --> 03:16:10,700
Zahlen.

3298
03:16:10,700 --> 03:16:14,590
Das sind unterschiedliche

3299
03:16:14,590 --> 03:16:19,380
Zahlen. Okay.

3300
03:16:19,380 --> 03:16:21,380
Passt mal auf. Nur für den

3301
03:16:21,380 --> 03:16:23,380
Fall, dass ich es vertauscht hab, okay?

3302
03:16:23,380 --> 03:16:25,380
Nur für den

3303
03:16:25,380 --> 03:16:27,380
Fall, dass ich es vertauscht hab.

3304
03:16:27,380 --> 03:16:29,380
Easy. Ich hab's vertauscht.

3305
03:16:29,380 --> 03:16:31,380
Ich hab's vertauscht.

3306
03:16:31,380 --> 03:16:34,820
Ich hab's vertauscht.

3307
03:16:34,820 --> 03:16:36,820
An welcher Stelle? Moment, wo hab ich's denn

3308
03:16:36,820 --> 03:16:38,820
vertauscht hier nochmal? Upper?

3309
03:16:38,820 --> 03:16:40,820
Lower? Okay.

3310
03:16:40,820 --> 03:16:42,820
Wo hab ich's denn vertauscht?

3311
03:16:42,820 --> 03:16:49,710
Ähm.

3312
03:16:49,710 --> 03:16:53,600
Struct?

3313
03:16:53,600 --> 03:16:55,600
Wo ist das denn überhaupt?

3314
03:16:55,600 --> 03:17:00,610
Ach, ich bin doch falsch.

3315
03:17:00,610 --> 03:17:02,610
Hä?

3316
03:17:02,610 --> 03:17:04,610
Ich find mein eigenes Zeug nicht mehr.

3317
03:17:04,610 --> 03:17:06,610
Hier.

3318
03:17:06,610 --> 03:17:17,220
Ach, Rust, schick die

3319
03:17:17,220 --> 03:17:19,220
einfach andersrum.

3320
03:17:19,220 --> 03:17:23,870
Ach so.

3321
03:17:23,870 --> 03:17:34,320
Wobei,

3322
03:17:34,320 --> 03:17:36,320
ich hab, ich hab die

3323
03:17:36,320 --> 03:17:42,190
einfach falsch rum hier, oder?

3324
03:17:42,190 --> 03:17:44,190
Ich hab die nicht falsch rum, das ist doch richtig rum.

3325
03:17:44,190 --> 03:17:46,190
Upper zuerst, Lower

3326
03:17:46,190 --> 03:17:52,130
als zweites. Warum ist die

3327
03:17:52,130 --> 03:17:54,130
Warum ist die in Rust? Mal ganz

3328
03:17:54,130 --> 03:17:56,130
davon abgesehen,

3329
03:17:56,130 --> 03:17:58,130
es ist eh keine allzu schlaue Idee.

3330
03:17:58,130 --> 03:18:04,580
Es ist eh keine

3331
03:18:04,580 --> 03:18:06,580
allzu schlaue Idee,

3332
03:18:06,580 --> 03:18:08,580
das so zu machen, wenn der hier schon

3333
03:18:08,580 --> 03:18:10,580
drüber meckert. Ich meine,

3334
03:18:10,580 --> 03:18:14,720
ich hab keinen Aufruf,

3335
03:18:14,720 --> 03:18:18,160
ich return das Int einfach.

3336
03:18:18,160 --> 03:18:20,160
Aber,

3337
03:18:20,160 --> 03:18:22,160
wir sollten das, wir sollten das wahrscheinlich eh anders

3338
03:18:22,160 --> 03:18:26,750
machen, weil man

3339
03:18:26,750 --> 03:18:28,750
kein U128 returnen

3340
03:18:28,750 --> 03:18:34,180
kann. Ähm.

3341
03:18:34,180 --> 03:18:36,180
Was mach ich denn da jetzt

3342
03:18:36,180 --> 03:18:39,740
am besten? Ich mein,

3343
03:18:39,740 --> 03:18:41,740
ich kann doch einfach auf die Meldung scheißen, ja?

3344
03:18:41,740 --> 03:18:45,700
Und sagen, ist mir doch

3345
03:18:45,700 --> 03:18:47,700
egal, ob das

3346
03:18:47,700 --> 03:19:02,400
safe ist oder nicht.

3347
03:19:02,400 --> 03:19:08,080
Jaja, mach ich, mach ich.

3348
03:19:08,080 --> 03:19:10,080
Aber hier muss ich's vertauschen.

3349
03:19:10,080 --> 03:19:12,080
Als String,

3350
03:19:12,080 --> 03:19:14,080
nee, als String schick,

3351
03:19:14,080 --> 03:19:16,080
schick ich das nicht.

3352
03:19:16,080 --> 03:19:19,460
Das ist nicht blazingly fast.

3353
03:19:19,460 --> 03:19:21,460
Als String wär ja easy, nee, nee, nee,

3354
03:19:21,460 --> 03:19:27,520
das muss schon als Int.

3355
03:19:27,520 --> 03:19:31,410
Gibt es, Moment,

3356
03:19:31,410 --> 03:19:33,410
Int U128 Rust Fwe, gibt's das?

3357
03:19:33,410 --> 03:19:35,410
Als Byte Array?

3358
03:19:35,410 --> 03:19:37,410
Byte Arrays kann man nicht,

3359
03:19:37,410 --> 03:19:39,410
kann man nicht als Value schicken,

3360
03:19:39,410 --> 03:19:41,410
vermute

3361
03:19:41,410 --> 03:19:44,910
ich.

3362
03:19:44,910 --> 03:19:46,910
Byte Arrays kannst du eigentlich nur als Pointer

3363
03:19:46,910 --> 03:19:48,910
schicken.

3364
03:19:48,910 --> 03:19:50,910
Oder? Ja, doch.

3365
03:19:50,910 --> 03:19:54,800
Ich könnte, ich könnte

3366
03:19:54,800 --> 03:19:56,800
zwei, ich könnte einfach

3367
03:19:56,800 --> 03:19:58,800
zwei Sachen schicken, ja? Ich könnte

3368
03:19:58,800 --> 03:20:00,800
hier so, so

3369
03:20:00,800 --> 03:20:02,800
Upper, Lower und so, das könnte ich schicken.

3370
03:20:02,800 --> 03:20:04,800
Zwei, zweimal, aber

3371
03:20:04,800 --> 03:20:06,800
das ist doch trotzdem doof.

3372
03:20:06,800 --> 03:20:08,800
Wir können doch einfach echt auf die Meldung scheißen,

3373
03:20:08,800 --> 03:20:15,500
das scheint ja trotzdem zu funktionieren.

3374
03:20:15,500 --> 03:20:17,500
Und wisst ihr was? Soll ich euch mal was sagen?

3375
03:20:17,500 --> 03:20:19,500
Es ist auch vollkommen egal,

3376
03:20:19,500 --> 03:20:21,500
ob Upper oder Lower,

3377
03:20:21,500 --> 03:20:23,500
die Zahl, die am Ende rauskommt,

3378
03:20:23,500 --> 03:20:25,500
ist trotzdem Unique, wenn es in der Mitte

3379
03:20:25,500 --> 03:20:27,500
gesplittet ist. Also wenn es,

3380
03:20:27,500 --> 03:20:29,500
wenn es, wenn die erste Hälfte

3381
03:20:29,500 --> 03:20:31,500
plus die zweite Hälfte

3382
03:20:31,500 --> 03:20:33,500
Unique ist zusammen,

3383
03:20:33,500 --> 03:20:35,500
dann ist auch die zweite Hälfte

3384
03:20:35,500 --> 03:20:43,360
plus die erste Hälfte Unique.

3385
03:20:43,360 --> 03:20:47,760
Also insofern, die Hälfte

3386
03:20:47,760 --> 03:20:49,760
würde schon ausreichen, nein,

3387
03:20:49,760 --> 03:20:55,760
komplett muss das.

3388
03:20:55,760 --> 03:21:01,310
Ey, da muss ich mir mal Gedanken drüber

3389
03:21:01,310 --> 03:21:04,620
machen. Chatge, weil ihr

3390
03:21:04,620 --> 03:21:06,620
so nice heute wart,

3391
03:21:06,620 --> 03:21:08,620
push ich das jetzt auch auf GitHub, okay?

3392
03:21:08,620 --> 03:21:12,320
Weil ich muss gleich Badge.

3393
03:21:12,320 --> 03:21:16,020
Git ignore musst du

3394
03:21:16,020 --> 03:21:26,880
auf jeden Fall, musst du es rein.

3395
03:21:26,880 --> 03:21:28,880
Git add.

3396
03:21:28,880 --> 03:21:30,880
Oh shit, ich glaube,

3397
03:21:30,880 --> 03:21:32,880
ich füge gerade den ganzen Output da hinzu.

3398
03:21:32,880 --> 03:21:34,880
Max, ganz schlechte Idee.

3399
03:21:34,880 --> 03:21:36,880
Ich, ich, ich füge

3400
03:21:36,880 --> 03:21:38,880
30 Milliarden Rust-Sachen.

3401
03:21:38,880 --> 03:21:40,880
Wollen wir

3402
03:21:40,880 --> 03:21:42,880
weitermachen? Ja.

3403
03:21:42,880 --> 03:21:44,880
Oh shit, ich füge gerade,

3404
03:21:44,880 --> 03:21:46,880
wie groß ist denn mein Rust-Ordner, bitteschön?

3405
03:21:46,880 --> 03:21:51,150
2,7 Gig in's Git.

3406
03:21:51,150 --> 03:21:53,150
.

3407
03:21:53,150 --> 03:21:56,530
.

3408
03:21:56,530 --> 03:21:58,530
.

3409
03:21:58,530 --> 03:22:00,530
.

3410
03:22:00,530 --> 03:22:04,860
.

3411
03:22:04,860 --> 03:22:06,860
.

3412
03:22:06,860 --> 03:22:12,160
.

3413
03:22:12,160 --> 03:22:14,160
.

3414
03:22:14,160 --> 03:22:16,160
.

3415
03:22:16,160 --> 03:22:19,980
.

3416
03:22:19,980 --> 03:22:21,980
.

3417
03:22:21,980 --> 03:22:23,980
.

3418
03:22:23,980 --> 03:22:27,740
.

3419
03:22:27,740 --> 03:22:29,740
.

3420
03:22:29,740 --> 03:22:31,740
.

3421
03:22:31,740 --> 03:22:33,740
.

3422
03:22:33,740 --> 03:22:35,740
.

3423
03:22:35,740 --> 03:22:37,740
.

3424
03:22:37,740 --> 03:22:39,740
.

3425
03:22:39,740 --> 03:22:41,740
.

3426
03:22:41,740 --> 03:22:43,740
.

3427
03:22:43,740 --> 03:22:45,740
.

3428
03:22:45,740 --> 03:22:47,740
.

3429
03:22:47,740 --> 03:22:49,740
.

3430
03:22:49,740 --> 03:22:51,740
.

3431
03:22:51,740 --> 03:22:53,740
.

3432
03:22:53,740 --> 03:22:59,620
.

3433
03:22:59,620 --> 03:23:01,620
.

3434
03:23:01,620 --> 03:23:03,620
.

3435
03:23:03,620 --> 03:23:05,620
.

3436
03:23:05,620 --> 03:23:17,250
.

3437
03:23:17,250 --> 03:23:19,250
.

3438
03:23:19,250 --> 03:23:21,250
.

3439
03:23:21,250 --> 03:23:23,250
.

3440
03:23:23,250 --> 03:23:24,250
.

3441
03:23:24,250 --> 03:23:25,250
.

3442
03:23:25,250 --> 03:23:27,250
.

3443
03:23:27,250 --> 03:23:31,250
.

3444
03:23:31,250 --> 03:23:41,330
.

3445
03:23:41,330 --> 03:23:44,230
Wie um alles in der Welt kommen da Windows-Line-Endings rein.

3446
03:23:49,280 --> 03:23:50,520
Der Rest ist alles gut.

3447
03:23:53,310 --> 03:23:54,150
Wo, wo, hä?

3448
03:23:54,710 --> 03:23:57,330
Das ist Linux-only entstanden.

3449
03:23:57,470 --> 03:23:59,650
Warum macht Rider, nee, nicht Rider, doch Rider.

3450
03:24:00,190 --> 03:24:02,670
Warum macht Rider Windows-Line-Endings da rein?

3451
03:24:02,770 --> 03:24:03,370
Was ist das für ein Shit?

3452
03:24:04,210 --> 03:24:06,470
Okay, wir müssen eben mal was anpassen, schnell.

3453
03:24:07,570 --> 03:24:09,290
Wir machen das jetzt einfach mal rückgängig.

3454
03:24:09,410 --> 03:24:09,910
Okay, ja.

3455
03:24:10,470 --> 03:24:11,510
Nee, das funzt aber nicht mehr.

3456
03:24:11,830 --> 03:24:13,830
Egal, das ist temporärer Stand.

3457
03:24:13,930 --> 03:24:14,890
Will eh keiner ausprobieren.

3458
03:24:15,870 --> 03:24:16,670
Ähm, hier.

3459
03:24:17,410 --> 03:24:18,550
Da, nee.

3460
03:24:19,050 --> 03:24:21,900
So, und jetzt?

3461
03:24:22,320 --> 03:24:24,220
Jetzt muss er bestimmt Reformat oder so machen.

3462
03:24:27,250 --> 03:24:29,790
Wie kommt das auf Windows-Line-Endings, Mann?

3463
03:24:40,750 --> 03:24:41,070
Okay.

3464
03:24:46,860 --> 03:24:47,720
Ja, das ist schon besser.

3465
03:24:48,140 --> 03:24:48,900
Schon besser.

3466
03:24:49,500 --> 03:24:50,900
Keine Windows-Line-Endings mehr drin.

3467
03:24:50,940 --> 03:24:52,500
Richtig ekelhaft gewesen, Mann.

3468
03:24:54,220 --> 03:25:02,090
Nee, das ist in Rider.

3469
03:25:02,770 --> 03:25:03,630
Nicht in Rust.

3470
03:25:08,230 --> 03:25:09,410
Ihr, ihr auch, guckt.

3471
03:25:09,870 --> 03:25:10,910
In der Projektdatei.

3472
03:25:11,450 --> 03:25:12,110
In, Alter.

3473
03:25:21,740 --> 03:25:24,020
In, in der Projektdatei, Mann.

3474
03:25:24,940 --> 03:25:26,100
Unload.

3475
03:25:28,400 --> 03:25:29,460
Hier.

3476
03:25:30,740 --> 03:25:32,360
Das ist nicht Default.

3477
03:25:35,710 --> 03:25:40,290
Also, vielleicht ist es Default, aber ich hab das ja vorher auch mit Rider erstellt, aber es nicht so.

3478
03:25:41,550 --> 03:25:42,050
Oh.

3479
03:25:45,080 --> 03:25:46,740
Jetzt Status.

3480
03:25:47,260 --> 03:25:48,640
Oh, wow, wow, wow, wow, wow.

3481
03:25:48,920 --> 03:25:49,720
Oh, Java.

3482
03:25:51,910 --> 03:25:52,690
Okay, please.

3483
03:25:53,070 --> 03:25:57,270
Ich, ich sollte mir mal n Hook einbauen, dass ich keine Windows-Line-Endings mehr hab.

3484
03:25:57,370 --> 03:25:58,750
Okay, keine Windows-Line-Endings mehr.

3485
03:25:58,850 --> 03:25:59,350
Alles gut.

3486
03:25:59,950 --> 03:26:00,450
Oh.

3487
03:26:00,810 --> 03:26:01,850
Nice, niceke.

3488
03:26:02,010 --> 03:26:02,750
Niceke.

3489
03:26:03,970 --> 03:26:05,750
Okay, nix mehr.

3490
03:26:05,850 --> 03:26:07,890
Uncommitted, Git, Push,

3491
03:26:09,370 --> 03:26:09,770
Origin,

3492
03:26:10,150 --> 03:26:10,590
Master,

3493
03:26:11,430 --> 03:26:13,130
Ah,

3494
03:26:15,920 --> 03:26:16,580
ich kack noob.

3495
03:26:17,060 --> 03:26:18,020
Git, Remote,

3496
03:26:18,360 --> 03:26:20,100
Remote, AM,

3497
03:26:21,200 --> 03:26:23,540
Origin, Git, Remote,

3498
03:26:23,800 --> 03:26:24,120
Add,

3499
03:26:25,200 --> 03:26:28,490
Cam,

3500
03:26:29,030 --> 03:26:30,310
Champ, Git,

3501
03:26:30,990 --> 03:26:34,060
Push, nice.

3502
03:26:34,900 --> 03:26:36,260
Da brauchen wir keine

3503
03:26:36,260 --> 03:26:37,740
Force-Pushers sein aktuell.

3504
03:26:37,740 --> 03:26:39,680
Aber ich Force-Pushe gerne.

3505
03:26:41,280 --> 03:26:43,440
Ich bin meistens auch der Einzige, der

3506
03:26:43,440 --> 03:26:45,620
quasi Master-Force-Push-Berechtigung

3507
03:26:45,620 --> 03:26:47,940
auf der aktuellen Arbeit

3508
03:26:47,940 --> 03:26:49,740
nicht, aber auf der aktuellen Arbeit gewesen ist.

3509
03:26:50,320 --> 03:26:51,680
Auf der aktuellen Arbeit

3510
03:26:51,680 --> 03:26:53,680
stelle ich mir das aber auch immer ein.

3511
03:26:54,900 --> 03:26:56,280
Ich darf Force-Pushern.

3512
03:27:01,260 --> 03:27:02,120
So, gut.

3513
03:27:03,780 --> 03:27:04,400
Ich würde sagen,

3514
03:27:04,480 --> 03:27:05,560
wir haben ordentlich was...

3515
03:27:05,560 --> 03:27:06,360
Äh.

3516
03:27:07,380 --> 03:27:09,000
Das wurde eh entfernt.

3517
03:27:09,000 --> 03:27:10,800
Wir haben ordentlich was auf die Reihe gekriegt,

3518
03:27:10,900 --> 03:27:11,460
Chat-Gehäute.

3519
03:27:11,460 --> 03:27:12,220
Viel gelernt.

3520
03:27:12,740 --> 03:27:13,460
Pfeifern, Rust,

3521
03:27:14,100 --> 03:27:14,660
High IQ.

3522
03:27:16,810 --> 03:27:17,610
Und ich würde sagen,

3523
03:27:17,750 --> 03:27:19,590
schön, dass ihr so lange mit am Start wart.

3524
03:27:19,910 --> 03:27:20,750
Ging ja heute lang.

3525
03:27:21,110 --> 03:27:21,810
23 Uhr.

3526
03:27:22,490 --> 03:27:22,950
Wir sehen uns.

3527
03:27:23,010 --> 03:27:23,290
Bis denn.

3528
03:27:23,690 --> 03:27:24,290
Bis morgen früh.

3529
03:27:24,770 --> 03:27:25,690
Denkt dran, morgen früh,

3530
03:27:25,870 --> 03:27:26,590
Aufwach-Stream.

3531
03:27:27,110 --> 03:27:27,770
Es kann sein,

3532
03:27:27,870 --> 03:27:29,910
dass ich erst kurz nach 9 da bin,

3533
03:27:30,870 --> 03:27:32,790
weil ich eventuell,

3534
03:27:32,970 --> 03:27:34,450
wenn es morgen früh nicht pisst,

3535
03:27:34,550 --> 03:27:35,430
wie aus, äh,

3536
03:27:36,050 --> 03:27:37,630
regnet aus Strömen, so,

3537
03:27:38,350 --> 03:27:40,470
äh, 10 Kilometer Runde mache.

3538
03:27:41,670 --> 03:27:42,090
Wieder.

3539
03:27:42,770 --> 03:27:46,770
Und das bietet sich sonntags immer an.

3540
03:27:46,870 --> 03:27:53,190
100 Kilometer, ja.

3541
03:27:53,290 --> 03:27:55,290
Nee, morgen probiere ich noch mal 10 Kilometer Runde.

3542
03:27:55,390 --> 03:27:57,390
Ich bin ja, äh...

3543
03:27:57,490 --> 03:27:57,990
Wann war das?

3544
03:27:58,090 --> 03:28:00,090
Letzten oder vorletzten Sonntag?

3545
03:28:01,630 --> 03:28:03,630
Auch schon die Runde gelaufen?

3546
03:28:03,730 --> 03:28:09,920
Also, ich muss sagen, war gar nicht...

3547
03:28:10,020 --> 03:28:10,420
War gar nicht...

3548
03:28:10,520 --> 03:28:11,020
Muss ich mich...

3549
03:28:11,120 --> 03:28:13,120
Ich muss mich ja kurz, mal kurz, ähm...

3550
03:28:13,220 --> 03:28:16,220
Eine Runde selber lobpreisen.

3551
03:28:16,320 --> 03:28:19,350
Ähm...

3552
03:28:19,450 --> 03:28:20,550
Am 5. November, okay,

3553
03:28:20,650 --> 03:28:22,850
ist vorletzten Sonntag gewesen.

3554
03:28:22,950 --> 03:28:23,590
Guck mal hier.

3555
03:28:23,590 --> 03:28:25,390
Gar nicht mal so kacke, oder?

3556
03:28:25,490 --> 03:28:29,590
10,3 Kilometer mit 6,34 pro Kilometer im Schnitt.

3557
03:28:29,690 --> 03:28:31,590
Geht auch voll in Ordnung.

3558
03:28:31,690 --> 03:28:35,530
Irgendwann schaffe ich es auch noch mal unter einer Stunde.

3559
03:28:35,630 --> 03:28:38,630
Also, unter einer Stunde heißt...

3560
03:28:38,730 --> 03:28:41,830
Man glaubt gar nicht, wie viel schneller das ist,

3561
03:28:41,930 --> 03:28:43,830
aber das ist sehr viel schneller.

3562
03:28:43,930 --> 03:28:48,230
Also, man denkt so, das ist easy.

3563
03:28:48,330 --> 03:28:51,230
Man bekommt doch da ohne Probleme 7 Minuten weg.

3564
03:28:51,330 --> 03:28:53,030
Aber, Leute, lasst euch gesagt sein,

3565
03:28:53,130 --> 03:28:54,930
...

3566
03:28:55,030 --> 03:28:56,830
Jeweils...

3567
03:28:56,930 --> 03:28:59,330
Jeweils, sagen wir mal, 40 Sekunden schnell...

3568
03:28:59,430 --> 03:29:01,630
Das ist echt...

3569
03:29:01,730 --> 03:29:02,930
Also, es sieht nicht so viel aus,

3570
03:29:03,030 --> 03:29:05,330
aber es ist echt viel anstrengender,

3571
03:29:05,430 --> 03:29:07,330
das zu rennen.

3572
03:29:07,430 --> 03:29:09,430
Das heißt, weil bei einer Stunde

3573
03:29:09,530 --> 03:29:12,630
muss ich ja quasi permanent unter 6...

3574
03:29:12,730 --> 03:29:16,030
Und knapp unter 6 Minuten pro Kilometer rennen.

3575
03:29:16,130 --> 03:29:26,800
Das ist deutlich anstrengender als 6,34.

3576
03:29:26,900 --> 03:29:27,900
Wir sehen uns, Leute.

3577
03:29:28,000 --> 03:29:28,600
Bis morgen.

3578
03:29:28,700 --> 03:29:30,200
See you.
