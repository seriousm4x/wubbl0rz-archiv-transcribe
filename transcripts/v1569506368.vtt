WEBVTT

00:56.500 --> 01:41.550
Untertitelung des ZDF, 2020

01:41.570 --> 02:39.840
Untertitelung des ZDF, 2020

02:39.860 --> 03:16.810
Untertitelung des ZDF, 2020

03:16.830 --> 03:50.880
Untertitelung des ZDF, 2020

03:50.900 --> 04:28.810
Untertitelung des ZDF, 2020

04:28.830 --> 05:01.280
Untertitelung des ZDF, 2020

05:01.300 --> 05:52.970
Untertitelung des ZDF, 2020

05:52.990 --> 06:33.440
Untertitelung des ZDF, 2020

06:33.460 --> 07:03.440
Untertitelung des ZDF, 2020

07:03.460 --> 07:34.880
Untertitelung des ZDF, 2020

07:34.900 --> 08:14.760
Untertitelung des ZDF, 2020

08:14.780 --> 08:46.400
Untertitelung des ZDF, 2020

08:46.420 --> 09:21.840
Untertitelung des ZDF, 2020

09:21.860 --> 09:55.470
Untertitelung des ZDF, 2020

09:55.470 --> 09:55.590
Untertitelung des ZDF, 2020

09:55.590 --> 09:55.610
Untertitelung des ZDF, 2020

09:55.630 --> 10:30.730
Untertitelung des ZDF, 2020

10:30.750 --> 11:00.730
Untertitelung des ZDF, 2020

11:00.750 --> 11:34.760
Untertitelung des ZDF, 2020

11:34.760 --> 11:34.780
Untertitelung des ZDF, 2020

11:34.780 --> 12:11.840
Untertitelung des ZDF, 2020

12:11.860 --> 12:51.600
Untertitelung des ZDF, 2020

12:51.620 --> 13:23.100
Untertitelung des ZDF, 2020

13:23.120 --> 13:56.040
Untertitelung des ZDF, 2020

13:56.060 --> 14:38.100
Untertitelung des ZDF, 2020

14:38.100 --> 14:38.580
Untertitelung des ZDF, 2020

14:38.580 --> 14:38.600
Untertitelung des ZDF, 2020

14:38.600 --> 15:17.410
Untertitelung des ZDF, 2020

15:17.430 --> 15:47.410
Untertitelung des ZDF, 2020

15:47.410 --> 15:47.430
Untertitelung des ZDF, 2020

15:47.430 --> 16:17.410
Untertitelung des ZDF, 2020

16:17.430 --> 16:57.330
Untertitelung des ZDF, 2020

16:57.330 --> 16:57.570
Untertitelung des ZDF, 2020

16:57.570 --> 17:52.860
Untertitelung des ZDF, 2020

17:52.880 --> 18:36.080
Untertitelung des ZDF, 2020

18:36.100 --> 19:22.400
Untertitelung des ZDF, 2020

19:22.420 --> 19:54.290
Untertitelung des ZDF, 2020

19:54.310 --> 20:25.860
Untertitelung des ZDF, 2020

20:25.880 --> 20:58.900
Untertitelung des ZDF, 2020

20:58.920 --> 21:30.660
Untertitelung des ZDF, 2020

21:30.680 --> 22:05.780
Untertitelung des ZDF, 2020

22:05.800 --> 22:37.090
Untertitelung des ZDF, 2020

22:37.110 --> 23:10.740
Untertitelung des ZDF, 2020

23:10.760 --> 23:39.900
Untertitelung des ZDF, 2020

23:39.900 --> 23:40.600
Untertitelung des ZDF, 2020

23:40.600 --> 23:40.620
Untertitelung des ZDF, 2020

23:40.620 --> 24:10.600
Untertitelung des ZDF, 2020

24:10.600 --> 24:10.620
Untertitelung des ZDF, 2020

24:10.620 --> 24:52.530
Untertitelung des ZDF, 2020

24:52.550 --> 25:46.210
Untertitelung des ZDF, 2020

25:46.230 --> 26:55.280
Untertitelung des ZDF, 2020

26:55.300 --> 27:25.280
Untertitelung des ZDF, 2020

27:25.300 --> 27:55.280
Untertitelung des ZDF, 2020

27:55.300 --> 28:26.660
Untertitelung des ZDF, 2020

28:26.680 --> 29:07.250
Untertitelung des ZDF, 2020

29:07.270 --> 29:40.100
Untertitelung des ZDF, 2020

29:40.120 --> 30:14.900
Untertitelung des ZDF, 2020

30:14.920 --> 30:47.110
Untertitelung des ZDF, 2020

30:47.130 --> 31:23.220
Untertitelung des ZDF, 2020

31:23.240 --> 32:28.070
Untertitelung des ZDF, 2020

32:28.090 --> 33:01.620
Untertitelung des ZDF, 2020

33:01.640 --> 33:31.620
Untertitelung des ZDF, 2020

33:31.640 --> 34:17.240
Untertitelung des ZDF, 2020

34:17.260 --> 34:58.440
Untertitelung des ZDF, 2020

34:58.460 --> 35:17.720
Untertitelung des ZDF, 2020

35:17.720 --> 35:29.730
Untertitelung des ZDF, 2020

35:29.730 --> 35:34.910
Was ist hier los?

35:36.570 --> 35:37.450
Dropped Frames?

35:38.810 --> 35:39.570
MonkaS?

35:40.170 --> 35:40.970
MonkaW!

35:46.580 --> 35:48.080
Es kann nicht alles okay sein

35:48.080 --> 35:50.420
Das ist jetzt nur okay, weil Standbild ist

35:50.420 --> 35:55.240
Mein Gott, Vodafone

35:55.240 --> 35:58.060
Kriegt mal euren Scheiß auf die Reihe, Alter

35:58.060 --> 35:59.500
Das kann doch nicht sein

35:59.500 --> 36:01.700
Was ist hier?

36:02.120 --> 36:04.780
25, 28% Framedrops

36:04.780 --> 36:14.130
Wir müssen kurz warten, Leute

36:14.130 --> 36:16.970
Wir müssen kurz warten, bis das vorbei ist

36:16.970 --> 36:21.660
Sonst kann ich das, sonst kann ich das, sonst kann ich das gar nicht

36:21.660 --> 36:27.710
Ja, dann müssen wir das Ganze kurz überbrücken

36:27.710 --> 36:29.370
Bis es wieder funktioniert

36:29.370 --> 36:39.500
Gibt es irgendwelche anderen spannenden Themen, die wir noch schnell besprechen können

36:39.500 --> 36:41.100
Bis der Kempel wieder funktioniert?

36:45.090 --> 36:45.530
MonkaW!

36:47.170 --> 36:51.910
Okay, also, Chat sagt, das Schlimmste, was man am Anfang mit einem Elektroauto

36:51.910 --> 36:53.350
Was?

36:53.850 --> 36:55.210
Das Schlimmste, was man am Anfang hat

36:55.210 --> 36:59.230
Das Schlimmste, was man am Anfang hat mit einem Elektroauto ist die Reichweitenangst

36:59.230 --> 37:00.770
Aber die geht... Nö, hab ich nicht

37:00.770 --> 37:03.510
Hab ich nicht, ich weiß, dass ich nicht weit fahr

37:03.510 --> 37:07.170
Ich bin mir da ziemlich sicher, dass ich überall ankomme, wo ich hin will

37:07.170 --> 37:12.210
Wenn ich mal 100 Kilometer fahr, das kommt 1-2 Mal im Jahr vielleicht vor

37:12.210 --> 37:16.170
Alter, Vodafone, come on

37:16.170 --> 37:17.590
Was ist denn hier los?

37:27.150 --> 37:27.910
Guckt's euch an

37:27.910 --> 37:42.460
Beste Programmiersprache für Microservices, das ist tatsächlich eine gute Frage

37:42.460 --> 37:44.560
Der Sache können wir uns kurz widmen

37:44.560 --> 37:46.180
Bis Vodafone...

37:46.180 --> 37:48.000
Ich hoffe, ihr hört mich noch leckfrei, ja?

37:48.000 --> 37:48.640
Ich seh's schon, Mann!

37:48.660 --> 37:50.240
Mauszeiger ist nicht ganz leckfrei

37:50.240 --> 37:53.280
Aber ich hoffe, ihr hört mich noch leckfrei, wenn's ein bisschen buffert

37:53.280 --> 37:55.040
Und bis die Frames alle wieder in Ordnung sind

37:55.040 --> 37:57.840
Ah, ah, ah, aha, aha

37:57.840 --> 37:59.000
Okay, ich sag noch was zu

37:59.000 --> 38:01.720
Also, beste Programmiersprache für Microservices

38:01.720 --> 38:06.440
Natürlich ist das, wie in vielen Fällen, das die einzig beste Sprache

38:06.440 --> 38:07.540
Gibt's natürlich nicht

38:07.540 --> 38:08.700
Logisch

38:08.700 --> 38:12.540
Das hängt davon ab, was du machen willst

38:12.540 --> 38:14.400
Und was du kannst

38:14.400 --> 38:16.760
Also, wenn du jetzt, sagen wir mal

38:16.760 --> 38:18.640
Na, guck mal

38:18.660 --> 38:20.080
Okay, was du kannst, vielleicht nicht

38:20.080 --> 38:23.480
Weil, kannst du nur Kobol, ist Kobol vielleicht keine so gute Idee

38:23.480 --> 38:25.540
Aber es ist eine Kombination aus

38:25.540 --> 38:27.420
Was kannst du gut, beziehungsweise

38:27.420 --> 38:28.600
Wenn du's mit mehreren Leuten machst

38:28.600 --> 38:29.600
Was kann das Team gut

38:29.600 --> 38:31.480
Und was wollt ihr machen

38:31.480 --> 38:36.140
Das, was wollt ihr machen, kann tatsächlich

38:36.140 --> 38:39.780
Ja, schon ein bisschen Ausschlag geben

38:39.780 --> 38:41.160
Ja, wenn ihr irgendwelche

38:41.160 --> 38:43.240
Machine Learning Dinger machen wollt

38:43.240 --> 38:45.800
Und feststellt, die besten Frameworks

38:45.800 --> 38:46.680
Gibt's für Python

38:46.680 --> 38:48.620
Oder die besten Frameworks gibt's da und dafür

38:48.620 --> 38:50.060
Oder ihr wollt irgendwelche

38:51.060 --> 38:52.400
Java-Libraries verwenden

38:52.400 --> 38:53.800
Keine Ahnung, dann ist es vielleicht sinnvoll

38:53.800 --> 38:54.600
Das in Java zu machen

38:54.600 --> 38:56.300
Was sind, was sind, also

38:56.300 --> 38:59.440
Also, wenn's jetzt, wenn's jetzt egal ist, ja

38:59.440 --> 39:01.140
Also, ich kann dir sagen, was ich machen würde

39:01.140 --> 39:03.280
Ganz ehrlich, ich würde meine Microservices

39:03.280 --> 39:05.900
Genauso in .NET programmieren, wie das meiste andere auch

39:05.900 --> 39:07.560
Wenn ich Sachen nicht in .NET

39:07.560 --> 39:09.600
Programmiere, dann zum größten Teil nur, weil's wirklich

39:09.600 --> 39:11.220
Triftige Gründe gibt

39:11.220 --> 39:15.110
So, war ich jetzt gemutet

39:15.110 --> 39:16.790
Oder musst du, musst du dir hören, wie ich

39:16.790 --> 39:18.150
Lesen musste

39:18.150 --> 39:21.390
Weiß nicht, ob man's gehört hat

39:21.390 --> 39:23.650
Manchmal ist mein Muten ja nicht so hundertprozentig gemutet

39:24.130 --> 39:25.910
Also

39:25.910 --> 39:28.150
Ähm, ich würde wahrscheinlich

39:28.150 --> 39:29.850
Die meisten Microservices in .NET machen

39:29.850 --> 39:31.910
Wenn ich was nicht in .NET mache, dann ist es halt

39:31.910 --> 39:33.310
Weil sich was anderes besser eignet

39:33.310 --> 39:34.470
Zum Beispiel

39:34.470 --> 39:38.110
Wenn's halt irgendwas Frontend-mäßiges ist, dann JavaScript

39:38.110 --> 39:40.070
Ich bin kein großer Fan

39:40.070 --> 39:42.130
Von Blazor, du könntest da theoretisch

39:42.130 --> 39:43.610
Auch Blazor

39:43.610 --> 39:46.210
Sachen mit C-Sharp und .NET

39:46.210 --> 39:47.250
Für's Frontend machen

39:47.250 --> 39:49.970
Aber im Endeffekt muss ich ehrlich sagen, ich bin kein

39:49.970 --> 39:50.970
Großer Blazor-Fan

39:50.970 --> 39:53.750
Gerade wenn die Leute dann anfangen, sowas noch mit

39:54.130 --> 39:55.450
.NET zu kombinieren oder so

39:55.450 --> 39:56.450
Da ist bei mir komplett vorbei

39:56.450 --> 39:58.510
Ich find Maui-Kacke und ich find Blazor

39:58.510 --> 40:00.510
Auch nicht so geil

40:00.510 --> 40:01.510
Also da würd ich immer

40:01.510 --> 40:04.090
Frontend, immer JavaScript

40:04.090 --> 40:06.150
Oder dann ansonsten, je nachdem, was man machen will

40:06.150 --> 40:08.670
Letztens hab ich beispielsweise mal geguckt

40:08.670 --> 40:12.410
Nach ner kleinen, ähm

40:12.410 --> 40:13.410
Search-Engine

40:13.410 --> 40:14.410
Für Volltext-Suche

40:14.410 --> 40:15.690
Da hab ich was in Rust gefunden

40:15.690 --> 40:16.790
Da würd's sich vielleicht anbieten

40:16.790 --> 40:19.090
Zumindest so eine kleine Schnittstelle zu machen

40:19.090 --> 40:20.090
Mit äh

40:20.090 --> 40:21.910
Mit irgendeiner C-API in Rust

40:21.910 --> 40:22.910
Oder wo wir mal was mit Webmask machen können

40:22.910 --> 40:23.910
Oder wo wir mal was mit Webmask machen können

40:23.910 --> 40:25.070
Oder wo wir mal was mit Web-RTC gemacht haben

40:25.070 --> 40:26.490
Da haben wir beispielsweise

40:26.490 --> 40:28.830
Diesen Web-RTC-Teil in Go gemacht

40:28.830 --> 40:32.450
Also manchmal macht's schon Sinn

40:32.450 --> 40:33.590
Sich halt anzugucken

40:33.590 --> 40:35.390
Was ist denn so der Kern von dem, was man braucht

40:35.390 --> 40:36.990
Und wo gibt's die besten Libraries

40:36.990 --> 40:38.510
Und den besten Support

40:38.510 --> 40:40.030
Aber normalerweise, standardmäßig

40:40.030 --> 40:42.390
Ich würde mein Zeug immer in .NET machen

40:42.390 --> 40:44.350
Und gerade wenn du Azure verwendest

40:44.350 --> 40:46.910
Ist .NET natürlich nochmal doppelt gut

40:46.910 --> 40:51.830
Weil wenn du Functions oder halt ähm

40:51.830 --> 40:52.750
Cloud Native, wie man so schön nennt, äh sagen würde

40:52.750 --> 40:53.750
Cloud Native, wie man so schön nennt, äh sagen würde

40:53.750 --> 40:53.870
Cloud Native, wie man so schön nennt, äh sagen würde

40:53.910 --> 40:55.910
Sag mal Vodafone, meine Güte

40:55.910 --> 40:57.470
Also wenn du halt Sachen verwendest

40:57.470 --> 40:58.890
Nicht so die klassische Sache mit

40:58.890 --> 40:59.930
Ich mach ne VM

40:59.930 --> 41:01.730
Und da installier ich mir Linux drin

41:01.730 --> 41:03.450
Und lass mein Zeug drauflaufen

41:03.450 --> 41:04.570
Sondern du willst dann vielleicht

41:04.570 --> 41:06.990
Tatsächlich Azure Functions oder so verwenden

41:06.990 --> 41:08.670
Da ist .NET auch nochmal cool

41:08.670 --> 41:11.070
Weil .NET äh sehr gut unterstützt wird in Azure

41:11.070 --> 41:13.790
.NET ist tatsächlich

41:13.790 --> 41:15.670
.NET Unterstützung ist tatsächlich

41:15.670 --> 41:17.950
Bei anderen Cloud-Plattformen nicht so verbreitet

41:17.950 --> 41:20.290
Ich muss sagen, ich hab noch nie AWS Lambda

41:20.290 --> 41:22.210
Und ich hab auch noch nicht äh

41:22.210 --> 41:23.750
Äh GCP Functions

41:23.750 --> 41:25.070
Ich weiß gar nicht, wie der Krempel heißt

41:25.070 --> 41:26.150
Wie heißt denn der Kram bei Google?

41:27.310 --> 41:28.690
Wie heißt das Gegenstück von Lambda

41:28.690 --> 41:29.870
Von ähm

41:29.870 --> 41:34.510
Von Azure Functions und Amazon Lambda

41:34.510 --> 41:36.890
Functions Zeug, wie heißt denn das bei Google?

41:45.550 --> 41:46.350
Cloud Functions

41:46.350 --> 41:49.290
Ich weiß gar nicht, wer davon .NET unterstützt

41:49.290 --> 41:50.630
Aber wahrscheinlich die wenigsten

41:50.630 --> 41:54.560
So

41:54.560 --> 41:57.060
Das ist meine Antwort dazu

41:57.060 --> 41:59.360
Mehr kann ich dir nicht sagen, weil ich nicht weiß, was du machen willst

41:59.360 --> 42:12.290
C++ ist für das meiste nicht richtig gut

42:12.290 --> 42:14.150
Auch ich weiß, das ist T-Bait

42:14.150 --> 42:15.990
Ähm

42:15.990 --> 42:17.990
Es gibt Sachen, da glänzt C++

42:17.990 --> 42:18.990
Aber

42:18.990 --> 42:21.990
Hauptsächlich, weil es keine sinnige Alternative zu gibt

42:21.990 --> 42:24.490
Alter Mensch, wo davon, das kann doch jetzt nicht sein

42:24.490 --> 42:30.950
Kriegt euch doch mal ein

42:30.950 --> 42:32.950
Naja, es gibt schon ein schlechter oder besser

42:32.950 --> 42:35.950
Es hängt halt entscheidend davon ab, was man kann und was man nicht kann

42:35.950 --> 42:37.950
Gemutet, ich bin nicht gemutet

42:37.950 --> 42:41.950
Hm, achso, du meinst hier, wo ich niesen musste, achso

42:41.950 --> 42:44.950
Ja, das ist das Problem, wenn man so weit mit dem Chat hintendran ist

42:44.950 --> 42:48.950
Kannst du nicht Leitung switchen? Ich hab nur noch eine Internetverbindung

42:48.950 --> 42:51.950
Ich hab die zweite Internetverbindung abbestellt, schon vor drei, vier Jahren oder so

42:51.950 --> 42:53.950
Ist schon, ja, vielleicht zwei, drei Jahren

42:53.950 --> 42:56.950
Schon eine Weile her, weil es einfach sinnlos war, viel zu teuer

42:56.950 --> 43:00.950
An sich hätte ich Lust, nächstes Jahr eine Ausbildung zum Physi zu machen

43:00.950 --> 43:04.950
Jedoch klingen viele Stellenanzeigen in meiner Gegend nur nach First-Level-Support

43:04.950 --> 43:06.950
Was gibt's da so für Jobaussichten?

43:06.950 --> 43:10.950
First-Level-Support will man nicht machen, First-Level-Support ist einfach Rotz

43:10.950 --> 43:12.950
Meiner Einsicht nach

43:12.950 --> 43:15.950
Für mich, ja, ich sag nicht allgemein

43:15.950 --> 43:17.950
Also ich würde kein First-Level-Support machen

43:17.950 --> 43:21.950
Und für First-Level-Support brauchst du beim besten Willen auch keine Physis

43:21.950 --> 43:24.950
Für First-Level-Support kannst du einfach irgendwelche

43:24.950 --> 43:27.950
Das war beispielsweise, wo ich damals noch beim Provider gearbeitet hab

43:27.950 --> 43:30.950
Unser First-Level war ein Team aus drei Mädels

43:30.950 --> 43:35.950
Die alle super, wie nennt man das so, Social Telekommunikations-Skills hatten

43:35.950 --> 43:37.950
Aber halt von Technik, keine Ahnung

43:37.950 --> 43:41.950
Und die waren halt immer super beliebt, auch bei den Leuten, die angerufen haben

43:41.950 --> 43:44.950
Weil es waren Mädels und die konnten gut telefonieren, aber

43:44.950 --> 43:46.950
Ähm

43:46.950 --> 43:48.950
Die haben nur die netten Sachen gemacht

43:48.950 --> 43:50.950
Und wenn's dann nicht ging

43:50.950 --> 43:54.950
Haben sie die Leute durchgestellt oder weitergeleitet und irgendwas weitergeschickt

43:54.950 --> 43:59.800
Und dann haben die den Anschluss gekriegt

43:59.800 --> 44:01.800
Alter, so kann ich doch nicht streamen, Vodafone

44:01.800 --> 44:03.800
Was ist denn los mit euch?

44:03.800 --> 44:09.920
Ich mach mal kurz nen Speedtest vom zweiten

44:09.920 --> 44:11.920
Speedtest

44:11.920 --> 44:13.920
Ich mach mal kurz nen Speedtest vom zweiten Browser aus

44:13.920 --> 44:15.920
Schauen wir mal

44:17.920 --> 44:24.560
Ja, los

44:24.560 --> 44:26.560
Auf Speedtest, gib Gas!

44:26.560 --> 44:27.560
Auf Speedtest, gib Gas!

44:27.560 --> 44:29.560
Gib Gas!

44:29.560 --> 44:30.560
Hm

44:30.560 --> 44:32.560
400 MBit Download Speedtest

44:32.560 --> 44:34.560
Super, mal Upload checken

44:34.560 --> 44:36.560
Upload ist ja das eigentliche Problem

44:38.560 --> 44:41.560
406 MBit Upload sollte eigentlich reichen, oder?

44:41.560 --> 44:43.560
Äh, 406 MBit Download

44:43.560 --> 44:45.560
Sollte eigentlich reichen für das bisschen

44:45.560 --> 44:47.560
So, Upload, 40 MBit, auch gut

44:47.560 --> 44:51.560
Also, es scheint ein Problem zu sein auf der Route

44:51.560 --> 44:53.560
Zu den Twitch-Servern

44:53.560 --> 44:56.560
Also was ich probieren könnte Chat, also wisst ihr was wir machen?

44:56.560 --> 44:59.560
Ich starte jetzt mal das Battlefield-Video und wir gucken, ob es laggt

44:59.560 --> 45:01.560
Ich starte jetzt mal das Battlefield-Video und wir gucken, ob es laggt

45:01.560 --> 45:07.560
Wenn es laggt, mache ich den Stream kurz aus und wechsel den Twitch-Server

45:07.560 --> 45:10.560
Dann gehe ich auf den Twitch-Server in Barcelona oder so

45:10.560 --> 45:11.560
Dann gehe ich auf den Twitch-Server in Barcelona oder so

45:11.560 --> 45:13.560
und hoffe dann, also Amsterdam oder wo auch immer

45:13.560 --> 45:15.560
und hoffe, dass es funktioniert, ok?

45:15.560 --> 45:17.560
aber Leute, es wird ruckeln

45:17.560 --> 45:19.560
30% Dropped Frames

45:19.560 --> 45:25.640
Hat das erst angefangen zu laggen, als ich hier was ein...

45:25.640 --> 45:27.640
Leute, wir testen mal kurz was

45:37.060 --> 45:39.600
Jetzt habe ich keine Frametrops, aber jetzt sieht man ja auch nichts.

45:40.200 --> 45:41.340
Doch, ich habe immer noch Frametrops.

45:41.780 --> 45:42.080
Keckel.

45:42.400 --> 45:46.520
Leute, ich habe immer noch Frametrops mit einem komplett schwarzen Bildschirm.

45:47.820 --> 45:50.100
Also daran kann es jetzt ja schon mal nicht liegen.

45:52.000 --> 45:53.880
Ja, man merkt es bei den Mausbewegungen, gell?

45:54.300 --> 45:55.620
Sage ich, ja, ja, ja.

45:59.640 --> 46:01.800
Mensch, Vodafone, was ein Crap, Alter, wieder.

46:01.880 --> 46:02.540
Was ist das hier?

46:16.400 --> 46:18.380
Nee, das stimmt nicht.

46:18.860 --> 46:19.680
Das stimmt nicht.

46:19.680 --> 46:26.280
Nur weil Docker in Go programmiert ist, hat es doch absolut keinen Einfluss drauf,

46:26.360 --> 46:28.720
auf das, was du in deinem Container laufen lässt.

46:30.280 --> 46:31.140
Nee, nee.

46:32.040 --> 46:33.980
Sven, lass dir da nichts erzählen.

46:34.880 --> 46:37.380
Du kannst in Containern laufen lassen, was du willst.

46:37.500 --> 46:41.620
.NET-Anwendungen laufen auch wunderbar in Containern.

46:41.680 --> 46:43.460
Alles läuft wunderbar in Containern.

46:44.360 --> 46:46.120
Solange es keine Kerneldreiber braucht.

46:50.680 --> 46:52.800
Wo ich tatsächlich immer ein bisschen Angst habe, ist,

46:52.860 --> 46:53.040
wie Docker...

46:53.100 --> 46:54.120
...Docker die Leistung regelt.

46:54.580 --> 46:54.800
Warum?

46:57.880 --> 46:59.540
Docker frisst keine Performance.

47:00.360 --> 47:04.480
Du machst das beruflich?

47:05.280 --> 47:05.900
Ich auch.

47:08.740 --> 47:09.600
Und jetzt?

47:11.480 --> 47:12.100
Und nun?

47:14.860 --> 47:17.720
Also, da musst du dir keine Gedanken machen.

47:18.360 --> 47:20.000
Docker frisst keine Performance.

47:20.440 --> 47:23.100
Ich weiß, jetzt kommen die Leute und sagen, ja, theoretisch gesehen schon.

47:23.600 --> 47:23.820
Nein.

47:24.840 --> 47:25.520
Docker ist...

47:25.520 --> 47:35.100
Also, rechnerisch, vielleicht, wenn du dann irgendwie super krasse Benchmarks machst für fünf Stunden

47:35.100 --> 47:39.880
und das vergleicht, vielleicht, ja, vielleicht siehst du dann was.

47:40.220 --> 47:40.640
Keine Ahnung.

47:40.760 --> 47:45.520
Aber Docker macht in der Regel keine Performance-Probleme,

47:46.200 --> 47:50.280
weil ein Docker-Container, beziehungsweise die Anwendung, die du in einem Container laufen lässt,

47:50.280 --> 47:51.640
ein ganz normaler...

47:51.640 --> 47:53.400
50% Packet-Loss, Alter.

47:54.060 --> 47:55.280
Weil dein Docker-Container...

47:55.520 --> 47:59.880
Die Leute stellen sich das immer so ein bisschen als VM vor.

47:59.940 --> 48:00.640
Das ist es nicht.

48:01.900 --> 48:05.940
Ein Prozess, den du startest in einem Docker-Container, ist ein ganz normaler Prozess.

48:06.420 --> 48:09.160
Also, wenn du jetzt deine Anwendung auf dem Linux-System startest,

48:09.560 --> 48:11.520
oder die Anwendung in einem Docker-Container startest,

48:11.580 --> 48:15.280
das macht quasi keinen Unterschied.

48:15.900 --> 48:17.680
Das ist ein ganz normaler Prozess.

48:18.500 --> 48:20.240
Wie jeder andere Prozess auch.

48:20.720 --> 48:24.320
Der einzige Unterschied ist, dass noch ein paar zusätzliche Kernelfunktionen benutzt werden,

48:24.320 --> 48:25.320
nämlich sowas wie...

48:25.520 --> 48:26.660
Keygroups und Namespaces,

48:27.100 --> 48:29.920
dass du beispielsweise der Anwendung, die im Container läuft,

48:30.460 --> 48:32.440
andere IPs vorgaukeln kannst,

48:32.520 --> 48:34.500
oder andere Hostnamen vorgaukeln kannst,

48:35.720 --> 48:37.660
ein anderes Filesystem vorgaukeln kannst,

48:37.720 --> 48:38.460
und solche Geschichten.

48:39.100 --> 48:40.520
Aber die Performance...

48:41.440 --> 48:44.400
Also, wir reden hier von CPU und sowas, ja?

48:44.780 --> 48:46.720
Nicht zwangsläufig von Netzwerk und I.O.

48:47.500 --> 48:50.020
Macht keinen Unterschied in Docker.

48:51.120 --> 48:52.700
Und auch in der VM,

48:53.040 --> 48:55.300
weil die Leute ja da immer ein bisschen Bedenken vorhaben,

48:55.360 --> 48:55.500
ah,

48:55.520 --> 48:59.520
Vm-Docker, also eine VM hat, was CPU-Leistung angeht,

48:59.600 --> 49:00.940
nahezu keinen Overhead.

49:01.380 --> 49:03.080
Ihr könnt einen Benchmark laufen lassen,

49:03.200 --> 49:06.100
lasst einen Prime95-Benchmark laufen in einer VM,

49:06.860 --> 49:08.220
versus auf eurem Host.

49:08.320 --> 49:10.940
Ihr werdet feststellen, die Werte sind nahezu identisch.

49:11.740 --> 49:13.560
Was bei der VM das Problem ist,

49:13.620 --> 49:15.040
beziehungsweise warum man sagt,

49:15.100 --> 49:16.320
VMs brauchen mehr Ressourcen,

49:16.780 --> 49:19.020
ist, VMs brauchen deutlich mehr RAM.

49:20.660 --> 49:21.180
Warum?

49:21.700 --> 49:25.120
Naja, weil ein komplett eigenes System gestartet wird im Hintergrund.

49:25.120 --> 49:30.120
Also, VMs brauchen mehr RAM und mehr Disk, im Endeffekt.

49:30.200 --> 49:33.200
Weil Disk, glaube ich, zu vernachlässigen ist, aber RAM.

49:35.000 --> 49:37.000
VMs brauchen einfach mehr RAM,

49:37.060 --> 49:40.060
weil ein komplett eigenes System mit eigenem Kernel,

49:40.140 --> 49:42.140
mit eigenen Live-Suits, alles hochgefahren werden.

49:42.200 --> 49:44.200
Du kannst natürlich ein Minimalsystem nehmen,

49:44.280 --> 49:47.280
dann kommst du vielleicht, äh, tja,

49:48.540 --> 49:50.540
mit minimalstem Overhead aus,

49:50.620 --> 49:53.620
aber eine VM hat immer, was RAM angeht,

49:53.700 --> 49:54.900
einen gewissen Overhead.

49:54.900 --> 49:56.900
Um den du nicht drumherum kommst.

49:56.980 --> 49:58.980
Den hat ein Container nicht.

49:59.060 --> 50:01.060
CPU-technisch, Performance,

50:01.140 --> 50:13.110
CPU-Performance-technisch ist es überhaupt kein Unterschied.

50:13.190 --> 50:16.190
Also, das stimmt, er hat schon recht.

50:16.950 --> 50:19.950
Docker hat im Prinzip deutlich weniger Overhead als eine VM,

50:20.030 --> 50:21.530
allerdings nicht bei der CPU.

50:21.610 --> 50:23.450
Also, nicht unbedingt zwangsläufig bei dem,

50:23.530 --> 50:25.530
wo man an Performance denkt.

50:25.610 --> 50:28.610
Also, die CPU-Performance zwischen einer VM,

50:28.690 --> 50:30.610
zwischen einem Host

50:30.690 --> 50:33.830
und zwischen dem gleichen Ding im Docker-Container,

50:33.830 --> 50:35.130
ist nahezu identisch.

50:35.210 --> 50:39.210
Also, die CPU-Leistung ist mehr oder weniger das Gleiche überall.

50:39.290 --> 50:42.290
RAM-Auslastung ist ein bisschen das Problem.

50:42.370 --> 50:45.370
Und wenn's dann um, ähm, I.O. geht und Netzwerk,

50:45.450 --> 50:47.450
da sieht das noch mal anders aus.

50:47.530 --> 50:49.530
Da muss man eh gucken,

50:49.630 --> 50:51.630
gerade wie man die Sachen in einer VM anbindet.

50:51.710 --> 50:54.710
Ja, gerade I.O.-Performance ist in einer VM nicht ohne.

50:54.790 --> 50:58.790
Ähm, das kann schon eine ganze Ecke langsamer sein,

50:58.870 --> 51:00.870
je nachdem, was man da als Virtualisierung nimmt

51:00.950 --> 51:02.910
und was man für Anforderungen hat.

51:02.910 --> 51:03.910
Ja.

51:03.990 --> 51:07.790
Aber, also, bei Docker-Container musst du dir eigentlich keine Gedanken machen.

51:07.870 --> 51:10.250
Also, wenn du einen Prozess in einem Docker-Container startest,

51:10.330 --> 51:14.530
der hat die gleiche Performance wie auf dem Host,

51:14.610 --> 51:18.870
es ist ja auch ein ganz normaler Prozess auf deinem normalen Host.

51:18.950 --> 51:20.830
Deswegen kannst du ja in Docker-Container beispielsweise

51:20.910 --> 51:22.330
auch keine Kernel-Module nachladen

51:22.410 --> 51:25.210
oder Kernel-Module verwenden, die dein Host nicht verwendet oder so was.

51:25.290 --> 51:27.110
Es ist der gleiche Kernel wie dein Host.

51:27.210 --> 51:29.110
Das ist keine VM in dem Sinn.

51:29.210 --> 51:32.290
Also, da hast du performancetechnisch keine Unterschiede.

51:32.290 --> 51:37.050
Es ist sogar besser, du kannst deine Docker-Container deutlich einfacher,

51:37.130 --> 51:43.450
wenn du es denn bräuchtest, ähm, wir nennen das mal, ähm, nicht rate-limiten,

51:43.530 --> 51:48.590
na, resource groups, äh, wie heißt denn das?

51:48.670 --> 51:51.130
Also, Ressourcen besser managen.

51:51.210 --> 51:53.670
Du kannst zum Beispiel relativ einfach sagen,

51:53.750 --> 52:06.020
deinem Container benutzt maximal zwei CPU-Kerne oder so was.

52:06.120 --> 52:10.220
Okay, ich glaube, Leute, ich glaube, ich muss wirklich den Twitch-Server wechseln.

52:10.320 --> 52:17.220
Das klappt hier nicht. Wo, da vorn?

52:17.300 --> 52:18.640
Äh, wie war die Probefahrt?

52:18.720 --> 52:20.520
Also, ich war heute Probefahrt und ich bin begeistert.

52:20.600 --> 52:22.140
Ich finde das Auto wirklich nice.

52:22.220 --> 52:24.420
Ich muss jetzt bloß gucken, ob das dieses Jahr noch klappt.

52:24.520 --> 52:25.520
Möglich ist es.

52:25.600 --> 52:29.020
Ich habe heute auch mal gefragt, wie es mit Vorführ-Autos aussieht.

52:29.100 --> 52:31.520
Und wie gesagt, wenn es irgendwie hinhaut,

52:31.600 --> 52:34.020
dass ich es unter 30.000 Euro bekomme noch dieses Jahr,

52:34.100 --> 52:45.420
dann kaufe ich es, ansonsten nicht.

52:45.500 --> 52:47.800
Was es außer First-Level-Support gibt als Feezy,

52:47.880 --> 52:51.040
alles andere außer First-Level-Support.

52:51.120 --> 52:53.840
Alles. Du kannst alles machen als Feezy.

52:53.960 --> 52:58.250
Wenn du dich damit auskennst, wohlgemerkt.

52:58.330 --> 53:02.330
Alles. Wirklich, ich kann dir nicht sagen, was alles ist,

53:02.410 --> 53:05.410
weil alles ist alles und alles ist sehr viel.

53:05.490 --> 53:07.490
Du kannst alles Mögliche machen.

53:07.570 --> 53:10.330
Du musst dich halt in den Bereichen ein bisschen auskennen.

53:10.410 --> 53:13.330
Es bringt dir nichts, wenn du eine Feezy-Ausbildung gemacht hast

53:13.410 --> 53:26.840
und am Ende dich bewirbst als Cloud-Architekt und keine Ahnung davon hast.

53:26.920 --> 53:34.310
Mario, danke für den Sub.

53:34.390 --> 53:36.810
Okay, wenn wir von Windows-Containern reden,

53:36.890 --> 53:38.390
ist das noch mal was anderes.

53:38.470 --> 53:40.270
Windows-Container sind ja auch keine Container,

53:40.390 --> 53:42.230
sondern Hyper-V4Ms.

53:42.310 --> 53:45.350
Zumindest ist das mein letzter Stand, korrigiert mich, wenn ich falsch liege,

53:45.430 --> 53:48.150
aber ich glaube, Windows-Container sind Hyper-V4Ms.

53:48.230 --> 53:52.310
Windows-Container ist also quasi eigentlich kompletter ...

53:52.390 --> 53:55.610
G-Bait, der wahrscheinlich einfach nur da ist,

53:55.690 --> 53:57.890
dass Leute Docker unter Windows ausfüllen können.

53:57.970 --> 53:59.890
You've got G-Baited.

53:59.970 --> 54:02.190
Also Docker unter Windows ist so eins der bescheuerten Sachen,

54:02.270 --> 54:06.830
die man machen kann.

54:06.910 --> 54:12.790
Ja, da bin ich ja mal gespannt, ja.

54:12.870 --> 54:15.070
Nein, muss nicht. Muss gar nicht.

54:15.150 --> 54:16.410
Es muss im Prozess nichts übersetzen.

54:16.530 --> 54:19.990
Wenn du einen Prozess startest im Container oder nicht im Container,

54:20.070 --> 54:22.070
ist exakt das Gleiche.

54:22.150 --> 54:24.070
Es macht keinen Unterschied, ob du ...

54:24.150 --> 54:26.790
Also, wenn du auf die Konsole gehst unter Linux, ja,

54:26.870 --> 54:33.870
und du sagst hier ausführen, cackle.bin,

54:33.950 --> 54:36.370
dann ist es egal, ob du cackle.bin so startest

54:36.450 --> 54:41.570
oder ob du sagst docker run cackle container.

54:41.650 --> 54:44.610
Das macht erst einmal keinen Unterschied.

54:44.690 --> 54:46.290
Es ist ein bisschen ...

54:46.330 --> 54:49.710
Die Möglichkeit vorhanden, das ein bisschen besser zu sandboxen.

54:49.790 --> 54:57.230
Aber es ist nicht so, als wäre da irgendwie großartig was drumherum.

54:57.310 --> 55:04.760
Das ist ein ganz normaler Prozess, so wie jeder andere auch.

55:04.840 --> 55:08.340
Ich will es jetzt nicht ausschließen, dass es nicht doch irgendwie,

55:08.420 --> 55:11.020
wenn man es drauf anlegt, messbar ist.

55:11.100 --> 55:15.340
Ich meine, theoretisch hast du natürlich so die Möglichkeit,

55:15.420 --> 55:20.140
mit C-Groups und so was, Ressourcenlimitierung vorzunehmen.

55:20.140 --> 55:24.220
Heißt, da gibt es irgendwelche API-Funktionen, um das machen zu können.

55:24.300 --> 55:26.060
Das heißt, wenn man das machen kann, hat es vielleicht,

55:26.140 --> 55:30.220
auch wenn man das nicht macht, irgendwie rein theoretische Performance einbußen.

55:30.300 --> 55:33.680
Aber ganz im Ernst, mich würde es wirklich wundern,

55:33.760 --> 55:37.100
wenn einer das benchmarkt, und wir reden, der müsste es wirklich benchmarken,

55:37.180 --> 55:42.100
da müsste irgendjemand, keine Ahnung, Prime95 auf 24 Kerne laufen lassen,

55:42.180 --> 55:44.180
in Docker und ohne Docker, mal für 24 Stunden,

55:44.260 --> 55:48.440
und dann am Ende gucken, was kommt raus, oder was man heutzutage nimmt.

55:48.520 --> 55:50.100
Ich weiß nicht, ob Prime95 schon angesagt hat.

55:50.180 --> 55:54.600
Und ja, vielleicht ist es in irgendeiner Art und Weise dann messbar,

55:54.680 --> 56:05.660
aber nicht, dass es irgendeine Relevanz hätte.

56:05.740 --> 56:09.920
Ja, gut, du hast ein Overhead, was Libraries und Images angeht.

56:10.000 --> 56:11.580
Ja, das ist okay, das ist was anderes.

56:11.660 --> 56:14.960
Aber nicht performancetechnisch, und ihm ging es ja hier hauptsächlich,

56:15.040 --> 56:18.160
dass er Bedenken hat wegen Performance im Container.

56:18.240 --> 56:26.670
Und mir geht es ja hier rein um Leistung, und das ist wurscht.

56:26.750 --> 56:30.830
Und ja, und ganz ehrlich, ja, das ganze Container-Zeug,

56:30.910 --> 56:32.670
und gerade auch, was Kubernetes angeht,

56:32.710 --> 56:35.430
und Docker angeht, und viele Cloud-Sachen sind in Go programmiert,

56:35.510 --> 56:37.050
aber das heißt bei weitem nicht,

56:37.130 --> 56:41.330
dass man Software in Containern am besten in Go programmiert.

56:41.430 --> 56:43.370
Überhaupt nicht, genau das Gegenteil.

56:43.470 --> 56:46.370
Mach dir überhaupt keine Gedanken darüber, dass das im Container läuft,

56:46.470 --> 56:48.550
sondern programmier das mit dem, was du am besten kannst,

56:48.630 --> 56:50.170
was dein Team am besten kann,

56:50.250 --> 56:52.870
und dann packst du es am Ende in den Container rein.

56:52.970 --> 56:56.170
Ich meine, gut, wenn man weiß, dass man das in der Cloud laufen lassen will,

56:56.250 --> 56:58.830
wenn man weiß, dass man das vielleicht mit irgendeinem Orchestrator

56:58.910 --> 57:01.750
oder was auch immer laufen will, oder als Microservices, ne,

57:01.750 --> 57:04.670
im Hinblick auf dessen sollte man das schon entwickeln,

57:04.750 --> 57:08.590
aber nicht die Programmiersprachenauswahl davon abhängig machen.

57:08.670 --> 57:12.870
Du kannst containerisierte Microservices in jeder Programmiersprache entwickeln.

57:12.950 --> 57:17.190
Wahrscheinlich sogar COBOL.

57:17.270 --> 57:34.990
So, hat sich das jetzt mal beruhigt? Alter, 65% Packageloss, Mann.

57:35.070 --> 57:41.040
Ja, das stimmt.

57:41.120 --> 57:44.500
Habe ich große Einbußen, wenn ich einen Webserver nativ im Container laufen lasse?

57:44.580 --> 57:46.420
Tja, das kommt drauf an.

57:46.500 --> 57:50.760
Also, wenn du rein die Performance meinst, du, was das Ding, äh, was weiß ich,

57:50.760 --> 57:53.720
U-Performance, sonst was, nein, hast du nicht.

57:53.800 --> 57:55.800
Du hast quasi keine Einbußen.

57:55.880 --> 57:58.420
Netzwerktechnisch musst du dir aber Gedanken machen.

57:58.520 --> 58:02.300
Also, wenn du wirklich, wenn du einen Webserver im Container laufen lässt,

58:02.380 --> 58:07.760
wo es wirklich richtig brummt, also, wir reden hier von, keine Ahnung, Gigabit-weise,

58:07.840 --> 58:09.640
also, wenn es da richtig abgeht,

58:09.720 --> 58:14.410
dann würde ich mir überlegen, wie ich das Netzwerk mache.

58:14.490 --> 58:20.360
Und zwar, kurz ein bisschen leiser machen.

58:20.440 --> 58:25.220
Und zwar würde ich dann mal überlegen, ob ich das wirklich

58:25.220 --> 58:27.220
mit diesem Standard-Docker-Proxy mache.

58:27.300 --> 58:30.180
Also, Docker-Proxy proxyt das ja standardmäßig.

58:31.840 --> 58:34.840
Es gibt aber verschiedene Möglichkeiten, wie man ein Docker-Netzwerk machen kann.

58:34.920 --> 58:36.720
Ja, du kannst auch direkt eine Netzwerkkarte verwenden

58:36.800 --> 58:38.840
oder direkt das Bridgen und Host.

58:38.920 --> 58:39.920
Das würde ich mir dann überlegen.

58:40.020 --> 58:45.380
Also, wenn du eine Netzwerkanwendung hast, die wirklich mega krass Traffic hat,

58:45.460 --> 58:48.340
dann würde ich es vielleicht nicht über das Standard-Docker-Networking

58:48.420 --> 58:49.340
mit dem Proxy machen.

58:49.420 --> 58:54.260
Aber ansonsten, was Performance angeht, hast du da keine.

58:54.260 --> 58:59.760
Du hast nicht nur keine großen Einbußen, du hast im Prinzip keine Einbußen.

58:59.840 --> 59:03.030
So, was sieht es denn jetzt aus?

59:03.110 --> 59:05.070
Okay, Leute, ich wechsle jetzt den Twitch-Server,

59:05.150 --> 59:07.810
dass wir uns heute noch das Battlefield-Video angucken können.

59:07.910 --> 59:10.230
Und dann hoffen wir, dass es funktioniert, weil ich kann auch nichts machen.

59:10.330 --> 59:14.610
Wenn Vodafone mir das sagt, sagt Vodafone halt.

59:14.690 --> 59:16.650
Ja, und das ist natürlich auch ein großer Vorteil.

59:16.730 --> 59:18.230
Da hat er schon recht.

59:18.330 --> 59:20.570
Da hat Zarex in dem Fall schon recht.

59:20.650 --> 59:24.190
Wenn du die Sachen so baust, dass sie unabhängig voneinander sind

59:24.270 --> 59:25.330
und unabhängig voneinander,

59:25.330 --> 59:27.130
wenn du sie gut containerisieren kannst,

59:27.210 --> 59:30.790
spricht das meistens dafür, dass sie nicht so, wie sagt man,

59:30.870 --> 59:34.910
nicht so tightly coupled, wie sagt man das?

59:34.990 --> 59:37.870
Also, dass sie nicht so eng miteinander verbunden sind,

59:37.950 --> 59:40.530
dass das eine quasi zwangsläufig darauf laufen muss,

59:40.630 --> 59:41.830
wo das andere läuft und so.

59:41.910 --> 59:45.710
Also, wenn du deine Anwendung ein bisschen entcoupled konstruiert hast

59:45.790 --> 59:47.710
und die sie gut containerisieren kannst,

59:47.790 --> 59:50.630
dann ist das hier natürlich ein wahnsinns Vorteil.

59:50.710 --> 59:53.530
Weil wenn du wirklich mal in die blöde Situation kommst,

59:53.630 --> 59:54.910
dass du jetzt anstatt,

59:54.910 --> 59:57.790
wie man früher gesagt hat, früher gemacht hat, so,

59:57.870 --> 01:00:00.150
ich habe drei Applikationsserver VMs

01:00:00.250 --> 01:00:01.370
und wenn wir mehr Last brauchen,

01:00:01.450 --> 01:00:04.030
muss ich erst noch mal ein paar neue aufbauen.

01:00:04.110 --> 01:00:06.450
Richtig, genau.

01:00:06.530 --> 01:00:08.830
Und das ist halt wirklich ein Vorteil.

01:00:08.910 --> 01:00:09.910
Da kannst du einfach sagen,

01:00:09.990 --> 01:00:13.910
wie auf dem Loadbalancer ist die Last über 80 Prozent.

01:00:13.990 --> 01:00:15.750
Meistens machst du das ja schon vorher.

01:00:15.830 --> 01:00:18.570
Oder Loadbalancer ist die Last über 50 Prozent

01:00:18.670 --> 01:00:21.450
oder die Connections über so diesem Limit.

01:00:21.530 --> 01:00:24.710
Wir machen einfach drei neue Container und lassen die verteilen

01:00:24.710 --> 01:00:25.710
auf die Cluster.

01:00:25.790 --> 01:00:29.210
Das ist natürlich wahnsinnig geil, wenn das funktioniert.

01:00:29.290 --> 01:00:30.290
Auf jeden Fall.

01:00:30.370 --> 01:00:31.370
So, okay, Moin.

01:00:31.470 --> 01:00:33.470
Leute, ich bin in zwei Minuten wieder da.

01:00:33.550 --> 01:00:36.170
Also, ihr könnt gleich nach einer Minute F5 drücken.

01:00:36.250 --> 01:00:38.050
Ich werde jetzt den Stream ausmachen.

01:00:38.130 --> 01:00:40.290
Ich mache den Stream wieder an, suche meinen anderen Twitch-Server aus

01:00:40.370 --> 01:00:41.630
und wir hoffen, es funktioniert.

01:00:41.710 --> 01:00:43.910
Wenn es nicht funktioniert, haben wir wahrscheinlich gelitten

01:00:44.010 --> 01:00:46.130
und wir müssen mit lag leben noch für eine Stunde.

01:00:46.210 --> 01:00:47.830
Aber gucken wir mal, ich bin gleich wieder da.
