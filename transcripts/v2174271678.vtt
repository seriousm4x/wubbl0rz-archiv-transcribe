WEBVTT

01:18.960 --> 01:20.400
So, da bin ich.

01:20.680 --> 01:21.300
Weiter geht's.

01:22.560 --> 01:24.160
Soll ich euch mal was Nicestes erzählen?

01:25.060 --> 01:26.480
Ich hab den ganzen Tag nichts anderes

01:26.480 --> 01:27.020
mehr vor.

01:29.100 --> 01:30.380
Sportstelz ist erledigt.

01:35.410 --> 01:36.550
Jetzt wird gebroggert

01:36.550 --> 01:38.650
bis 22 Uhr, bis ich ins Bett gehe.

01:41.200 --> 01:41.960
Okay, vielleicht nicht

01:41.960 --> 01:44.020
10 Stunden. 10 Stunden ist vielleicht ein bisschen zu lang.

01:46.160 --> 01:47.220
Gibt's das wirklich?

01:48.300 --> 01:49.880
Das ist die Low-IQ-Variante

01:49.880 --> 01:52.100
von 10++. Ne, das gibt's nicht.

01:52.100 --> 01:54.680
Aber das ist

01:54.680 --> 01:56.200
ungefähr mein Skill-Niveau

01:56.200 --> 01:56.860
in 10++.

01:57.680 --> 02:07.560
So, allerwichtigstes.

02:07.740 --> 02:09.480
Acht, by the way.

02:10.700 --> 02:11.860
Ich muss mal mein Linux starten

02:11.860 --> 02:12.960
und Package-Updates machen.

02:13.500 --> 02:14.680
Und mal meine Uhr ausziehen.

02:15.180 --> 02:17.740
Ich brauch kein Herzfrequenz-Tracking.

02:18.480 --> 02:18.840
Wobei,

02:19.140 --> 02:21.700
wobei, es ist 10++.

02:24.260 --> 02:24.940
Vielleicht,

02:25.100 --> 02:27.220
vielleicht soll ich das anlassen und mal

02:27.220 --> 02:29.180
meine durchschnittliche Herzfrequenz von 10++

02:29.180 --> 02:29.760
programmieren.

02:30.000 --> 02:30.460
Zeichnen.

02:31.840 --> 02:33.100
Vielleicht gar nicht so schlecht.

02:33.540 --> 02:35.340
Ey, das wäre tatsächlich echt, das wäre,

02:35.500 --> 02:37.360
das ist eine neue Videoserien-Idee.

02:37.460 --> 02:38.780
Ich meine, werde ich eh nicht machen, aber

02:38.780 --> 02:40.420
so nach dem Motto, Puls

02:40.420 --> 02:42.780
bei verschiedenen Programmiersprachen.

02:42.920 --> 02:44.860
Wie nervig ist das?

02:45.540 --> 02:46.860
Also ich kann jetzt schon prädikten,

02:47.920 --> 02:49.640
dass 10++ ganz weit oben

02:49.640 --> 02:50.240
sein wird.

02:52.080 --> 02:53.920
Und vom Frustfaktor

02:53.920 --> 02:55.180
dicht,

02:55.500 --> 02:57.520
also vom, ne, der Frustfaktor

02:57.520 --> 02:58.680
ist falsche Formulierung.

02:58.980 --> 02:59.820
10++ ist ganz,

03:00.000 --> 03:02.360
ganz vorne, äh,实 padre fre kuente

03:02.360 --> 03:04.380
sich dadurch den üblichen

03:04.520 --> 03:05.660
dplusplus frust Pacco,

03:05.660 --> 03:07.220
aber ist das auch ganz vorne,

03:08.960 --> 03:11.440
zu recht übelst nervt

03:12.180 --> 03:12.960
und 이제 war super langsam in was でっと

03:12.960 --> 03:14.580
konntest, weil super langsam in Anyast,

03:14.780 --> 03:16.200
aber, aber zu programmieren,

03:16.200 --> 03:16.680
zum Ausbilden.

03:16.680 --> 03:17.280
Es ist schnell.

03:17.580 --> 03:18.880
Ich glaube, was ist gar nicht so viel

03:18.880 --> 03:20.480
grunter von Brillz Rickert

03:22.660 --> 03:23.820
dass Herz lokal themed

03:24.240 --> 03:26.160
des wäre was tenían zu formeln

03:26.240 --> 03:27.300
notwendiges Übel.

03:27.540 --> 03:28.760
Ja, das ist für 10++.

03:28.760 --> 03:29.500
immer noch kein Offiziell13

03:29.500 --> 03:29.960
oplich merkheeckardi haber Siz würden 수

03:29.960 --> 03:30.300
happiness S-Manager

03:30.300 --> 03:30.700
ệt

03:31.380 --> 03:33.640
ordentliche Module. Ich weiß, dass das

03:33.640 --> 03:35.780
alles in irgendeiner Art und Weise existiert,

03:35.920 --> 03:37.540
aber halt nix, wo man sich drauf

03:37.540 --> 03:39.980
verlassen kann. Es gibt ein paar Third-Party-Package-Manager,

03:40.680 --> 03:41.300
es gibt

03:41.300 --> 03:43.080
diese

03:43.080 --> 03:45.160
C++23, glaube ich,

03:45.480 --> 03:47.340
theoretisch. Die werden für immer

03:47.340 --> 03:49.460
mit Make, CMake

03:49.460 --> 03:51.520
und irgendwelchen obskuren

03:51.520 --> 03:53.960
Dinger wie Ninja und hast du nicht gesehen, rumhantieren

03:53.960 --> 03:55.840
und mit Header-Files um sich schmeißen.

03:55.880 --> 03:56.960
Die kommen dann nie wieder raus.

03:57.600 --> 03:59.220
Die zählen die C++-Leute.

03:59.220 --> 04:01.360
Ich sag ungern C, C++,

04:01.620 --> 04:03.260
weil C ist eine gute Sprache, C++

04:03.260 --> 04:03.600
nicht.

04:04.920 --> 04:06.620
Ich muss ein Windows-Update machen, wirklich?

04:06.920 --> 04:07.580
Ah ja, tatsächlich.

04:08.840 --> 04:10.800
The device needs to restart, install update,

04:10.980 --> 04:12.560
select the time. Du kannst mich mal.

04:12.760 --> 04:14.980
Geh mal fort. Jetzt nicht.

04:17.260 --> 04:19.080
Es gibt jede Menge Task-Runner.

04:19.340 --> 04:19.960
Das Problem ist,

04:23.060 --> 04:24.140
das bringt ja gar nix.

04:25.120 --> 04:25.620
Das ist ja

04:25.620 --> 04:29.580
bei C++ so eine Kombination

04:29.580 --> 04:31.500
aus Compiler-

04:31.500 --> 04:32.260
Konfiguration,

04:32.860 --> 04:35.920
Programmier-Projekt-

04:35.920 --> 04:36.420
Management,

04:37.760 --> 04:39.420
welche Dateien included werden sollen

04:39.420 --> 04:41.200
und sonst was und Task-Runner.

04:41.280 --> 04:42.120
Das ist ja alles in einem.

04:43.180 --> 04:45.300
Also insofern, das wird's

04:45.300 --> 04:47.280
wahrscheinlich nie ohne geben.

04:48.560 --> 04:49.280
So sad geht das.

04:49.380 --> 04:51.280
Stellt euch mal vor, wie

04:51.280 --> 04:52.980
halbwegs erträglich

04:52.980 --> 04:56.570
C++ sein könnte

04:56.570 --> 04:59.330
mit...

04:59.330 --> 05:00.930
Okay, es gibt, ohne Mist, es gibt

05:00.930 --> 05:01.510
drei Sachen.

05:01.510 --> 05:03.130
Drei Sachen.

05:03.130 --> 05:06.290
Wenn die in C++

05:06.290 --> 05:07.510
eingebaut werden,

05:09.930 --> 05:10.290
dann

05:10.290 --> 05:12.310
würde es die Sprache

05:12.310 --> 05:14.130
schon mal 50% besser machen.

05:14.550 --> 05:15.670
Aus meiner Sicht, ja.

05:16.030 --> 05:18.350
Das sind natürlich die krassen Hardcore-C++-Hackermans

05:18.350 --> 05:19.830
nicht so. Da muss das, ist das

05:19.830 --> 05:21.390
schon zu viel, ja.

05:22.450 --> 05:23.930
Kennst du das Buch Linux Basics

05:23.930 --> 05:25.290
for Hackers? Ne.

05:25.970 --> 05:27.910
Kenn ich nicht. Das Beste, um Linux

05:27.910 --> 05:30.010
zu lernen ist, so banal es sich anhört,

05:30.430 --> 05:31.490
Linux täglich zu verwenden.

05:31.510 --> 05:33.310
Du brauchst auch keine super

05:33.310 --> 05:35.070
Hackerman-Distribution hier. Du musst nicht mit

05:35.070 --> 05:36.950
Arch oder irgendwie sowas in der Richtung anfangen.

05:39.650 --> 05:40.790
Installier den Linux Mint,

05:40.870 --> 05:41.870
wenn du Einsteiger bist.

05:42.970 --> 05:44.150
Und benutze das einfach täglich.

05:44.570 --> 05:46.310
Dann lernst du mit Abstand am meisten.

05:46.770 --> 05:48.230
Klar, paar gute Videos,

05:48.590 --> 05:49.890
Tutorials und sonst was.

05:50.510 --> 05:52.410
Sicherlich nicht verkehrt, aber die wirst du eh

05:52.410 --> 05:54.650
früher oder später dir gezielt suchen, wenn du Probleme

05:54.650 --> 05:56.250
hast, wo du so nicht weiterweißt.

05:57.670 --> 05:58.710
Und du musst ja Linux

05:58.710 --> 06:00.810
auch gar nicht auf deinem Hauptrechner installieren.

06:00.810 --> 06:02.210
Du kannst es auch so machen, wie ich hier hab.

06:02.890 --> 06:04.710
Auf der Kiste und Linux hier in der VM.

06:04.810 --> 06:06.230
Dann kannst du sogar easy dazwischen umschalten.

06:06.710 --> 06:08.990
Ich benutze das so. Windows auf dem Host

06:08.990 --> 06:09.970
für alles, was

06:09.970 --> 06:12.850
Performance braucht, ja, von

06:12.850 --> 06:14.110
Video-Stells

06:14.110 --> 06:16.290
für YouTube bis Gaming.

06:16.550 --> 06:18.910
Windows, restliche Technik-Sachen, Linux.

06:19.110 --> 06:19.390
Fertig.

06:21.070 --> 06:21.670
Was wir heute machen?

06:23.630 --> 06:24.770
Ich hab mir...

06:24.770 --> 06:26.630
Achso, ne, Moment. Ich muss jetzt vielleicht mal

06:26.630 --> 06:28.670
meinen Satz noch... Fertig, fertig.

06:28.990 --> 06:30.750
Was ich vorhin sagen wollte. Drei Sachen,

06:30.750 --> 06:32.770
die man für C++ machen könnte.

06:32.890 --> 06:34.790
Und was die Sprache gleich 50%

06:34.790 --> 06:36.210
verbessern würde. Okay?

06:36.890 --> 06:38.450
Also, das erste ist

06:38.450 --> 06:39.910
ein Package-Manager.

06:43.240 --> 06:44.720
Einen offiziellen

06:44.720 --> 06:45.900
Package-Manager.

06:48.930 --> 06:50.650
Ja? Sowas wie Nougat,

06:51.190 --> 06:52.050
sowas wie Pip,

06:52.930 --> 06:54.450
Gem, NPM,

06:54.990 --> 06:56.850
whatever. Irgendwas in der Richtung.

06:57.930 --> 06:59.430
Offiziellen Package-Manager.

07:00.290 --> 07:00.970
Und der halt

07:00.970 --> 07:02.650
auch offiziell ist, das heißt,

07:02.650 --> 07:04.530
jeder, der möchte, dass

07:04.530 --> 07:06.530
seine Pakete ordentlich

07:06.530 --> 07:08.810
verfügbar sind, muss halt

07:08.810 --> 07:09.850
sich an

07:09.850 --> 07:12.530
diese Sache halten. Das klappt

07:12.530 --> 07:14.690
bei Cargo, bei Rust oder bei

07:14.690 --> 07:15.710
Nougat. Wunderbar.

07:17.050 --> 07:18.730
Im JavaScript-Ökosystem

07:18.730 --> 07:19.290
ist es so,

07:19.570 --> 07:22.830
JavaScript-Ökosystem ist es so,

07:23.250 --> 07:25.190
existierst du nicht als NPM-Package,

07:25.370 --> 07:26.370
existierst du nicht.

07:27.510 --> 07:28.790
Und so könnte das auch ohne Probleme

07:28.790 --> 07:30.130
für C++-Libraries sein.

07:31.370 --> 07:32.850
So. Einen offiziellen

07:32.850 --> 07:34.710
Package-Manager. Ja, und ich weiß, jetzt kommen

07:34.710 --> 07:36.510
die Leute wieder und sagen, aber Max, was ist

07:36.510 --> 07:38.630
denn mit den tausend verschiedenen Architekturen?

07:39.230 --> 07:40.630
Was ist denn mit unterschiedlichen

07:40.630 --> 07:42.750
Compilern? Das hat doch erst mal gar

07:42.750 --> 07:44.470
nichts damit zu tun. Das ist

07:44.470 --> 07:46.810
Compiler- und Architektur-unabhängig.

07:47.330 --> 07:48.590
Man kann da natürlich, Rust

07:48.590 --> 07:50.490
kriegt es auch hin, NPM-Package, man kann da

07:50.490 --> 07:52.710
natürlich Support für einbauen, das bei unterschiedlichen Architekturen,

07:52.950 --> 07:54.150
aber es braucht einen

07:54.150 --> 07:56.470
offiziellen Package-Manager

07:56.470 --> 07:58.110
und eine offizielle

07:58.110 --> 08:00.410
Package-Registry. Das würde das schon

08:00.410 --> 08:01.870
so viel besser machen.

08:02.470 --> 08:04.330
Und auch dieses unsägliche

08:04.330 --> 08:06.350
Rumhantieren von, ich klone mir

08:06.350 --> 08:08.430
einen GitHub-Repo, referenziere

08:08.430 --> 08:10.470
irgendwelche Header-Files und hoffe, dass ich es in der

08:10.470 --> 08:12.390
richtigen Reihenfolge inklude, dass

08:12.390 --> 08:14.450
es funktioniert. Endlich mal ein bisschen

08:14.450 --> 08:16.130
aufräumen und auch

08:16.130 --> 08:18.370
das fördern, dass C++ eigentlich

08:18.370 --> 08:20.410
ja mittlerweile angeblich, ich hab's noch nie in the wild

08:20.410 --> 08:22.110
gesehen, Module unterstützt.

08:23.290 --> 08:24.410
Also nämlich auch der zweite Punkt,

08:24.910 --> 08:26.570
ordentlicher Modulsupport, der auch benutzt

08:26.570 --> 08:28.630
wird und nicht mehr Header-File-

08:28.630 --> 08:28.910
Geschiss.

08:30.630 --> 08:32.570
Und das dritte, ein Feature, was

08:32.570 --> 08:34.470
aus meiner Sicht auch C++ enorm

08:34.470 --> 08:36.270
viel besser machen würde, ist, aber ich weiß,

08:36.270 --> 08:38.250
das ist sehr umstritten und das möchten die

08:38.250 --> 08:40.250
ganzen C++-Leute nicht und kommen

08:40.250 --> 08:40.930
mit allerlei

08:40.930 --> 08:44.310
fadenscheinigen Sachen, warum das

08:44.310 --> 08:46.290
eine schlechte Idee ist. Ich bin der Meinung,

08:46.630 --> 08:48.170
Extension-Methods

08:48.170 --> 08:50.290
wäre mit Abstand das Beste

08:50.290 --> 08:51.710
für C++, weil

08:51.710 --> 08:53.990
die C++-Standard-Library ist

08:53.990 --> 08:56.250
berühmt, berüchtigt, wirkt

08:56.250 --> 08:57.710
inkonsistent und

08:57.710 --> 08:58.970
Feature-Lacking.

09:00.250 --> 09:02.050
Wobei die Standard-Library gar nicht mal

09:02.050 --> 09:04.390
so extrem Feature-Lacking ist,

09:04.390 --> 09:06.210
sondern die Sachen zu finden,

09:06.270 --> 09:08.130
ist schwierig und

09:08.130 --> 09:10.150
manchmal gibt es halt auch Sachen gar nicht.

09:11.370 --> 09:12.330
Und das führt

09:12.330 --> 09:14.290
dazu, dass jeder, der was

09:14.290 --> 09:16.310
machen will in C++, irgendwie

09:16.310 --> 09:18.410
eine eigene String-Klasse bastelt

09:18.410 --> 09:20.950
und sowas. Gäbe es Extension-Methods,

09:20.990 --> 09:21.830
könnte ich einfach

09:21.830 --> 09:24.690
Standard-String-Extenden mit sinnvollen

09:24.690 --> 09:26.290
Methoden. Wir dürfen nicht vergessen,

09:26.810 --> 09:28.370
der C++-Standard-String,

09:28.690 --> 09:30.150
der hatte bis vor ein paar Versionen

09:30.150 --> 09:32.330
nicht mal sowas Popliches wie

09:32.330 --> 09:34.270
toUpperCase

09:34.270 --> 09:36.250
oder toLowerCase. Das gab es.

09:36.270 --> 09:38.270
Das gab es nicht früher.

09:38.270 --> 09:40.270
Guck mal hier, C++

09:40.270 --> 09:42.270
toUpper.

09:42.270 --> 09:44.270
Ah, das ist übrigens auch wieder mal nicht im

09:44.270 --> 09:46.270
Standard-String, das ist so eine extra Funktion.

09:46.270 --> 09:48.270
Was auch immer die sich da wieder denken

09:48.270 --> 09:50.270
dabei, das gab es ganz lange

09:50.270 --> 09:52.270
einfach nicht. Muss ich das

09:52.270 --> 09:54.270
mal überlegen.

09:54.270 --> 09:56.270
Das gibt es erst seit

09:56.270 --> 10:00.410
C++

10:00.410 --> 10:02.410
Standard...

10:02.410 --> 10:04.410
Ist das da irgendwo dabei? Ja, und diese Hilfe-Seite

10:04.410 --> 10:06.410
ist auch immer

10:06.410 --> 10:16.250
abartig. Keine Ahnung.

10:16.250 --> 10:18.250
Ja, man weiß nicht, ab welchem Standard es

10:18.250 --> 10:23.550
das gibt. Und die drei Sachen,

10:23.550 --> 10:25.550
die würden meiner Meinung nach C++

10:25.550 --> 10:27.550
enorm viel verbessern. Gerade

10:27.550 --> 10:29.550
Extension-Methods um die

10:29.550 --> 10:31.550
lacking Standard-Library. Ja, zum Beispiel, dass

10:31.550 --> 10:33.550
man dann sowas machen könnte wie

10:33.550 --> 10:35.550
array.filter. Einfach

10:35.550 --> 10:37.550
Extenden sich selbst.

10:37.550 --> 10:39.550
Wieso so früh? Ja, weil wir heute ein bisschen was schaffen müssen.

10:39.550 --> 10:44.400
Ich habe Windows als Haus-System

10:44.400 --> 10:46.400
und ein paar Linux-Distros als VM laufen.

10:46.400 --> 10:48.400
Da ich MrRobot

10:48.400 --> 10:50.400
sehr fasziniert finde, habe ich den

10:50.400 --> 10:52.400
David Bombal entdeckt,

10:52.400 --> 10:54.400
welcher eine Serie...

10:54.400 --> 10:56.400
Kenn ich den?

10:56.400 --> 10:58.400
Muss ich mal gucken, ob mir der Name

10:58.400 --> 11:02.990
was sagt.

11:02.990 --> 11:04.990
Ja, von dem habe ich schon mal ein paar Sachen

11:04.990 --> 11:06.990
geguckt. Gucke ich aber nicht oft.

11:06.990 --> 11:08.990
Aber den habe ich schon mal gesehen.

11:08.990 --> 11:10.990
Ja,

11:10.990 --> 11:12.990
also, guck mal, wenn das

11:12.990 --> 11:14.990
jemand ist, den du gerne verfolgst und

11:14.990 --> 11:16.990
er das Buch empfiehlt, ist sicherlich nicht verkehrt mal

11:16.990 --> 11:18.990
reinzugucken. Du kriegst auch viele Bücher heute

11:18.990 --> 11:23.520
auch als Leseprobe.

11:23.520 --> 11:25.520
Und kannst dir das mal angucken.

11:25.520 --> 11:27.520
Ob es was taugt. Und wenn es was taugt, dann kannst du

11:27.520 --> 11:30.890
das ja kaufen.

11:30.890 --> 11:32.890
Ich muss übrigens gerade mal meine Emotes ein bisschen kleiner machen.

11:32.890 --> 11:34.890
Die sind vielleicht ein bisschen sehr pepo-fett heute.

11:34.890 --> 11:41.280
Ja, so.

11:41.280 --> 11:43.280
So viel zu meiner

11:43.280 --> 11:45.280
Meinung, wie man C++

11:45.280 --> 11:47.280
verbessern könnte. Also, wo wir gestern

11:47.280 --> 11:49.280
stehen geblieben sind. Ihr habt Glück, wir haben noch nicht wirklich

11:49.280 --> 11:51.280
viel gemacht. Ich muss gerade mal meinen Controller anschließen.

11:51.280 --> 11:53.280
Und zwar,

11:53.280 --> 11:55.280
es ist noch übersichtlich alles.

11:55.280 --> 11:57.280
Es sind nur ein paar Zeilen.

11:57.280 --> 11:59.280
Ich habe mir ein ESP32

11:59.280 --> 12:01.280
bestellt.

12:01.280 --> 12:03.280
ESP32 S3.

12:03.280 --> 12:05.280
Das ist der neue Flagship

12:05.280 --> 12:07.280
Microcontroller von Espressif.

12:07.280 --> 12:09.280
Es ist Wahnsinn,

12:09.280 --> 12:11.280
was da mittlerweile alles an

12:11.280 --> 12:15.290
Möglichkeiten

12:15.290 --> 12:17.290
drinsteckt. Und auch an

12:17.290 --> 12:19.290
Hardware. Das Ding kostet 15 Dollar

12:19.290 --> 12:21.290
bei AliExpress.

12:21.290 --> 12:23.290
Bringt mit ein ziemlich gutes

12:23.290 --> 12:25.290
Display, direkt drauf gepappt.

12:25.290 --> 12:27.290
Dual Core

12:27.290 --> 12:29.290
CPU, 2x 240

12:29.290 --> 12:31.290
MHz.

12:31.290 --> 12:33.290
V5 Ultra Low Power

12:33.290 --> 12:35.290
Prozessor.

12:35.290 --> 12:37.290
Neustes

12:37.290 --> 12:39.290
Bluetooth BLE,

12:39.290 --> 12:41.290
Bluetooth Mesh,

12:41.290 --> 12:43.290
Wifi. Leider kein 5 GHz Wifi.

12:43.290 --> 12:45.290
Aber ich glaube

12:45.290 --> 12:47.290
Wifi 6, allerdings nur Wifi 6

12:47.290 --> 12:49.290
über 2,4 GHz, was im Prinzip

12:49.290 --> 12:51.290
vollkommen egal ist, ob es Wifi 6 ist.

12:51.290 --> 12:53.290
16 MB

12:53.290 --> 12:55.290
Flash, was

12:55.290 --> 12:57.290
richtig massive ist.

12:57.290 --> 12:59.290
Die alten hatten 4 MB Flash.

12:59.290 --> 13:01.290
Also für die Firmware.

13:01.290 --> 13:03.290
Das ist quasi die SSD

13:03.290 --> 13:05.290
von dem Ding. 8 MB RAM.

13:05.290 --> 13:07.290
Das ist auch richtig fett. Die alten

13:07.290 --> 13:09.290
hatten 520 KB.

13:09.290 --> 13:11.290
Das ist gerade für

13:11.290 --> 13:13.290
grafische Sachen sehr, sehr nice.

13:13.290 --> 13:15.290
Tja. Und ein Display

13:15.290 --> 13:17.290
Controller, der weit unterstützt ist

13:17.290 --> 13:19.290
von so ziemlich allen Libraries.

13:19.290 --> 13:21.290
Ja, das Teil habe ich mir gekauft

13:21.290 --> 13:23.290
und mein Ziel

13:23.290 --> 13:25.290
ist es,

13:25.290 --> 13:27.290
darauf einen Webserver laufen zu

13:27.290 --> 13:29.290
lassen. Über HTTPS.

13:29.290 --> 13:34.140
Und darauf

13:34.140 --> 13:36.140
eine vollwertige Svelte

13:36.140 --> 13:38.140
Web-Anwendung. Das haben wir gestern schon

13:38.140 --> 13:40.140
die Basics hingekriegt. Heute müssen

13:40.140 --> 13:42.140
wir das natürlich noch etwas verbessern.

13:42.140 --> 13:44.140
Und auch mal halt auch sinnige Funktionen

13:44.140 --> 13:46.140
einbauen, ja. Also zum Beispiel

13:46.140 --> 13:48.140
Sensorwerte anzeigen, Webinterface und solche

13:48.140 --> 13:50.140
Geschichten.

13:50.140 --> 13:52.140
Und als erstes werden

13:52.140 --> 13:54.140
wir uns um das Thema

13:54.140 --> 13:56.140
Websockets kümmern. Weil ich habe gelesen,

13:56.140 --> 13:58.140
dass der ESP32

13:58.140 --> 14:00.140
bzw.

14:00.140 --> 14:02.140
ESP-IDF, das ist das

14:02.140 --> 14:04.140
die Standardentwicklungsumgebung

14:04.140 --> 14:06.140
vom Hersteller, dass

14:06.140 --> 14:08.140
die Websockets unterstützen mittlerweile.

14:08.140 --> 14:11.770
Und das gucken wir uns

14:11.770 --> 14:15.280
jetzt mal an. Und wir bauen

14:15.280 --> 14:17.280
Websocket-Support in den Webserver ein.

14:17.280 --> 14:19.280
Also bis jetzt ist das alles noch

14:19.280 --> 14:21.280
enorm übersichtlich, was wir programmiert haben.

14:21.280 --> 14:23.280
Es gibt einmal

14:23.280 --> 14:25.280
hier

14:25.280 --> 14:27.280
das Main-File. Da passiert im Prinzip

14:27.280 --> 14:29.280
nichts großartig, außer

14:29.280 --> 14:31.280
sich mit WLAN zu verbinden.

14:31.280 --> 14:33.280
Ah ja, ich benutze

14:33.280 --> 14:35.280
ESP-IDF plus

14:35.280 --> 14:37.280
die Arduino-Komponente

14:37.280 --> 14:39.280
für Teile, wo es einfacher ist,

14:39.280 --> 14:41.280
sie mit dem Arduino-Framework zu machen.

14:41.280 --> 14:43.280
Das ist quasi ESP-IDF

14:43.280 --> 14:45.280
plus Arduino oben drauf.

14:45.280 --> 14:47.280
Aber man kann auch die Low-Level-Sachen

14:47.280 --> 14:49.280
aus ESP-IDF verwenden.

14:49.280 --> 14:51.280
Und das WiFi-Handling über

14:51.280 --> 14:53.280
die Arduino-Library ist viel, viel angenehmer

14:53.280 --> 14:55.280
als 500

14:55.280 --> 14:57.280
Zeilen mit

14:57.280 --> 14:59.280
ESP-IDF. So, also, das macht

14:59.280 --> 15:01.280
nichts weiter aktuell, wie sich zu

15:01.280 --> 15:03.280
verbinden mit dem WLAN, zu gucken, ob

15:03.280 --> 15:05.280
die WLAN-Verbindung klappt, wenn die WLAN-Verbindung

15:05.280 --> 15:07.280
nicht klappt, dann crasht es. Und

15:07.280 --> 15:09.280
einen Web-Server zu starten. Moin

15:09.280 --> 15:11.280
SebiDev. Und einen Web-Server zu starten auf

15:11.280 --> 15:13.280
https. Web-Server ist hier.

15:13.280 --> 15:15.280
Der Code ist auch sehr übersichtlich.

15:15.280 --> 15:17.280
48 Zeilen. Da passiert aktuell auch noch

15:17.280 --> 15:19.280
nicht allzu viel.

15:19.280 --> 15:21.280
Es wird ein

15:21.280 --> 15:23.280
Zertifikat eingelesen. Das Zertifikat

15:23.280 --> 15:25.280
befindet sich hier. Das

15:25.280 --> 15:27.280
generieren wir mit einem Bash-Skript.

15:27.280 --> 15:29.280
Das ist quasi Binary

15:29.280 --> 15:31.280
meine Zertifikate.

15:31.280 --> 15:33.280
Und es wird

15:33.280 --> 15:35.280
das Zertifikat eingelesen.

15:35.280 --> 15:37.280
Was man braucht. Dann

15:37.280 --> 15:39.280
wird der Web-Server gestartet.

15:39.280 --> 15:41.280
Und es gibt eine Wildcard-Route.

15:41.280 --> 15:43.280
Quasi Slash-Fairhandling.

15:43.280 --> 15:45.280
Also sprich alles, was an Requests kommt.

15:45.280 --> 15:47.280
Noch nicht geleakt, aber ich muss es auch noch

15:47.280 --> 15:49.280
rüberkopieren. Alles was an Requests,

15:49.280 --> 15:51.280
alle Get-Requests, die reinkommen,

15:51.280 --> 15:53.280
werden hier gehandelt. Und zwar

15:53.280 --> 15:55.280
wird geguckt, okay,

15:55.280 --> 15:57.280
ist entweder der Pfad, der

15:57.280 --> 15:59.280
angefragt wird, Slash oder

15:59.280 --> 16:01.280
Slash-Index-HTML.

16:01.280 --> 16:03.280
Oder nicht. Nicht.

16:03.280 --> 16:05.280
Slash-Index-HTML.

16:05.280 --> 16:07.280
Dann, also alles was nicht Index-HTML

16:07.280 --> 16:09.280
oder Slash ist, gibt es 404.

16:09.280 --> 16:11.280
Und ansonsten wird

16:11.280 --> 16:13.280
Index-HTML ausgeliefert.

16:13.280 --> 16:15.280
Als Gzip encoded.

16:15.280 --> 16:17.280
Das ist alles,

16:17.280 --> 16:19.280
was wir gestern hinbekommen

16:19.280 --> 16:21.280
haben. Aber ich muss echt sagen,

16:21.280 --> 16:23.280
Hut ab von den Espressifleuten. Das war

16:23.280 --> 16:25.280
sehr problemlos und easy möglich.

16:25.280 --> 16:27.280
Wir haben ein ziemlich

16:27.280 --> 16:29.280
abartiges Bash-Skript gebaut.

16:29.280 --> 16:31.280
Ach ja, hier in dem

16:31.280 --> 16:33.280
Verzeichnis, wir gehen jetzt mal hin.

16:33.280 --> 16:35.280
In dem Verzeichnis...

16:35.280 --> 16:41.150
Hier. In dem Verzeichnis

16:41.150 --> 16:43.150
liegt eine Svelte-Web-Anwendung.

16:43.150 --> 16:45.150
Die haben wir hier in Visual Studio Code offen.

16:45.150 --> 16:47.150
Die macht aktuell nichts, außer

16:47.150 --> 16:50.520
Kackel anzuzeigen.

16:50.520 --> 16:52.520
Aber

16:52.520 --> 16:54.520
es ist eine vollwertige

16:54.520 --> 16:56.520
Svelte, keine Svelte-Kit, eine vollwertige

16:56.520 --> 16:58.520
Svelte-Web-Anwendung, die wir dann auf den ESP

16:58.520 --> 17:00.520
rüber

17:00.520 --> 17:02.520
kopieren mit der Firmware.

17:02.520 --> 17:04.520
Das steckt alles hier in dieser

17:04.520 --> 17:06.520
Web-App, in diesem Web-App-Header drinnen.

17:06.520 --> 17:08.520
Was

17:08.520 --> 17:10.520
die Zertifikate generiert und

17:10.520 --> 17:12.520
was die Web-Anwendung zusammenbaut,

17:12.520 --> 17:14.520
ist ein relativ

17:14.520 --> 17:16.520
ekliges Bash-Skript.

17:16.520 --> 17:18.520
Das generiert erstmal zwei SSL-Zertifikate,

17:18.520 --> 17:20.520
also Private Key und Public Key.

17:20.520 --> 17:22.520
Server-Zertifikate und Private Key.

17:22.520 --> 17:24.520
Dann

17:24.520 --> 17:26.520
wird das Ganze mit

17:26.520 --> 17:28.520
XXD in C-Arrays umgewandelt,

17:28.520 --> 17:30.520
was man hier sieht. Das ist ein bisschen hacky,

17:30.520 --> 17:32.520
aber eine ziemlich nice Sache, um alles

17:32.520 --> 17:34.520
embedded in der Firmware zu haben. Hier, guck.

17:34.520 --> 17:36.520
Das erzeugt XXD,

17:36.520 --> 17:38.520
erzeugt uns hier C-Style-Arrays aus

17:38.520 --> 17:40.520
einer Datei.

17:40.520 --> 17:42.520
Dann hänge ich noch

17:42.520 --> 17:44.520
Null-Terminator

17:44.520 --> 17:46.520
an, also

17:46.520 --> 17:48.520
an den String. Ich lösche die letzte

17:48.520 --> 17:50.520
Zeile raus, remove die alten

17:50.520 --> 17:52.520
Zertifikate, baue die Web-App,

17:52.520 --> 17:54.520
zippe die Index-HTML

17:54.520 --> 17:56.520
und kopiere die Index-HTML

17:56.520 --> 17:58.520
mit

17:58.520 --> 18:00.520
XXD rein. Also im Endeffekt kommt eine

18:00.520 --> 18:02.520
Web-App.h raus, die

18:02.520 --> 18:04.520
Zertifikate enthält,

18:04.520 --> 18:06.520
Private Key enthält, Server-Zertifikat

18:06.520 --> 18:08.520
enthält und meine

18:08.520 --> 18:10.520
gesamte Index-HTML

18:10.520 --> 18:12.520
gezippt als Binary.

18:12.520 --> 18:14.520
Beziehungsweise als C-Byte-Array.

18:14.520 --> 18:16.520
Und das war's. Das haben wir gestern gemacht.

18:16.520 --> 18:18.520
Und wenn man das Ding startet, ich zeige es euch mal.

18:18.520 --> 18:20.520
Ich schließe es mal an. Ich brauche mal ein USB-Kabel.

18:20.520 --> 18:22.520
Das war's auch. Da haben wir gestern

18:22.520 --> 18:24.520
aufgehört. Das ist, denke ich,

18:24.520 --> 18:26.520
sehr übersichtlich noch.

18:26.520 --> 18:28.520
Und ja, ich lade das, wenn es denn irgendwann mal tut,

18:28.520 --> 18:30.520
auch auf GitHub hoch.

18:30.520 --> 18:38.960
So. Monitor.

18:38.960 --> 18:43.800
So.

18:43.800 --> 18:45.800
Jetzt starte das Ding.

18:45.800 --> 18:47.800
Sollte sich mit dem WLAN verbinden?

18:47.800 --> 18:49.800
Ach nee.

18:49.800 --> 18:51.800
Es kann sich nicht mit dem WLAN verbinden.

18:51.800 --> 18:53.800
Lasst mal gucken, ob es sich

18:53.800 --> 18:55.800
richtig verhält. Ich habe das WLAN-Passwort

18:55.800 --> 18:57.800
ja geändert mittlerweile wieder. Das muss ich gerade mal

18:57.800 --> 18:59.800
rüber copy-pasten. Ihr dürft

18:59.800 --> 19:01.800
nicht hingucken, Leute.

19:01.800 --> 19:03.800
Der sollte nach 20 Sekunden jetzt eigentlich

19:03.800 --> 19:05.800
crashen, wenn er sich nicht authentifizieren kann

19:05.800 --> 19:09.950
gegen das WLAN. Macht der denn das auch?

19:09.950 --> 19:18.250
20 Sekunden müssten

19:18.250 --> 19:20.250
so langsam aber sicher mal um sein, oder?

19:20.250 --> 19:23.760
Warum crasht der nicht?

19:23.760 --> 19:28.990
Der sollte an der Stelle eigentlich

19:28.990 --> 19:30.990
crashen.

19:30.990 --> 19:32.990
Ach, Moment. Ha!

19:32.990 --> 19:34.990
Ich habe kein Timeout angegeben. Ich kack, Noob.

19:34.990 --> 19:36.990
Ja.

19:36.990 --> 19:38.990
Default-Timeouts

19:38.990 --> 19:40.990
sind 60 Sekunden.

19:40.990 --> 19:42.990
Ja, das ist natürlich Blödsinn. Ja, guck.

19:42.990 --> 19:44.990
Aber seht ihr? Jetzt sind die 60 Sekunden

19:44.990 --> 19:46.990
um gewesen. Jetzt Wifi fällt.

19:46.990 --> 19:48.990
Wir machen mal 20 Sekunden. Das ist sinniger.

19:48.990 --> 19:50.990
Es crasht, dann fangen wir von vorne an.

19:50.990 --> 19:54.680
Alter, ich bin seit 5 Minuten hier

19:54.680 --> 19:56.680
lurk, habe Kopfschmerzen für die ganze Woche, bin neu.

19:56.680 --> 19:58.680
Ich würde nicht,

19:58.680 --> 20:00.680
auf gar keinen Fall mit C++ anfangen,

20:00.680 --> 20:02.680
wenn du neu bist. C++ ist

20:02.680 --> 20:04.680
eines der größten

20:04.680 --> 20:06.680
Dreckssprachen, die es gibt.

20:06.680 --> 20:08.680
Und das meine ich wörtlich so.

20:08.680 --> 20:10.680
Ich weiß nicht, was das C++-Gremium

20:10.680 --> 20:12.680
und die Leute, die diese Standards machen,

20:12.680 --> 20:14.680
immer sich einschmeißen,

20:14.680 --> 20:16.680
bevor die irgendwelche Standard-Meetings haben.

20:16.680 --> 20:18.680
Die Sprache ist die letzten

20:18.680 --> 20:20.680
Jahre über

20:20.680 --> 20:22.680
nicht besser geworden. Die ist umfangreicher

20:22.680 --> 20:24.680
und noch verwirrender geworden, bietet noch mehr Möglichkeiten.

20:24.680 --> 20:28.060
Eine meiner Meinung nach

20:28.060 --> 20:30.060
gutes Beispiel dafür, wie man

20:30.060 --> 20:32.060
gute Standardarbeit

20:32.060 --> 20:34.060
macht, ist JavaScript.

20:34.060 --> 20:36.060
JavaScript hat immer noch sehr viel wirres Zeug,

20:36.060 --> 20:38.060
aber hat sich die letzten Jahre über

20:38.060 --> 20:40.060
kontinuierlich verbessert.

20:40.060 --> 20:42.060
Ich muss mal die Musik ausmachen,

20:42.060 --> 20:44.060
ist mir zu wenig gechillt.

20:44.060 --> 20:46.060
Wupp, wupp, wupp. Jawoll.

20:46.060 --> 20:48.060
Ja, sehr entspannt.

20:48.060 --> 20:55.850
Wupp, wupp, wupp.

20:55.850 --> 20:57.850
Wupp, wupp, wupp. Viel entspannter.

20:57.850 --> 20:59.850
Und,

20:59.850 --> 21:01.850
was wollte ich jetzt gerade sagen?

21:01.850 --> 21:09.770
Ja, also JavaScript genau.

21:09.770 --> 21:11.770
JavaScript ist ein gutes Beispiel für,

21:11.770 --> 21:13.770
wie man die Sprache mit Standards besser machen kann.

21:13.770 --> 21:15.770
JavaScript hat sich die letzten Jahre über

21:15.770 --> 21:17.770
kontinuierlich verbessert.

21:17.770 --> 21:19.770
Das, was eingebaut wurde, das war die letzten

21:19.770 --> 21:21.770
Jahre über jetzt nicht mehr ganz so viel,

21:21.770 --> 21:23.770
wie die Jahre davor, aber das, was

21:23.770 --> 21:25.770
eingebaut wurde, macht zu 95%

21:25.770 --> 21:27.770
komplett Sinn und waren

21:27.770 --> 21:29.770
sehr gute Features.

21:29.770 --> 21:31.770
Guck mal, die haben in JavaScript

21:31.770 --> 21:33.770
async await eingebaut. Und?

21:33.770 --> 21:35.770
Wie ist es? Es funktioniert einfach.

21:35.770 --> 21:37.770
Es ist ziemlich gut. Sie haben versucht

21:37.770 --> 21:39.770
async await in C++ einzubauen.

21:39.770 --> 21:41.770
Keine Sau versteht, wie es funktioniert,

21:41.770 --> 21:43.770
beziehungsweise keine Sau benutzt es,

21:43.770 --> 21:45.770
obwohl das theoretisch geht.

21:45.770 --> 21:47.770
Was aber auch daran liegt, dass die

21:47.770 --> 21:49.770
Standard Library selbst komplett draufscheißt.

21:49.770 --> 21:51.770
Also C++ ist ein

21:51.770 --> 21:53.770
wirklich riesen Negativbeispiel

21:53.770 --> 21:55.770
in ganz vielen Bereichen.

21:55.770 --> 21:57.770
Ich will jetzt JavaScript sicherlich nicht als

21:57.770 --> 21:59.770
das klühende Beispiel

21:59.770 --> 22:01.770
der besten Programmiersprachen ever hinstellen,

22:01.770 --> 22:03.770
aber die Entwicklung der

22:03.770 --> 22:05.770
letzten Jahre in JavaScript haben

22:05.770 --> 22:07.770
eindeutig gezeigt, die Sprache hat sich fast

22:07.770 --> 22:09.770
durch die Bang-Fact nur

22:09.770 --> 22:11.770
verbessert.

22:11.770 --> 22:13.770
Und C++ wurde kontinuierlich

22:13.770 --> 22:15.770
nicht schlechter gemacht, es ist gleich kacke geblieben,

22:15.770 --> 22:17.770
aber noch komplexer.

22:17.770 --> 22:19.770
Warum das?

22:19.770 --> 22:21.770
Das dürfte zum größten Teil an Unreal liegen

22:21.770 --> 22:23.770
und weil es eben einen historischen

22:23.770 --> 22:25.770
ähm

22:25.770 --> 22:27.770
wie nennt man das?

22:27.770 --> 22:29.770
Einen historischen

22:29.770 --> 22:31.770
Hang zu C++ in der

22:31.770 --> 22:33.770
Spieleentwicklung gibt. Und dementsprechend

22:33.770 --> 22:35.770
sau viel Erfahrung

22:35.770 --> 22:37.770
vorhanden ist, was Spieleentwicklung

22:37.770 --> 22:39.770
angeht. Sau viele Library

22:39.770 --> 22:41.770
und man darf nicht vergessen

22:41.770 --> 22:43.770
eine Sache, die C++

22:43.770 --> 22:45.770
das liegt aber jetzt nicht so sehr an C++

22:45.770 --> 22:47.770
dass es das jetzt

22:47.770 --> 22:49.770
explizit macht, sondern kommt halt aus der Zeit

22:49.770 --> 22:51.770
wo C++ stand, dass

22:51.770 --> 22:53.770
C++ selbst halt auch

22:53.770 --> 22:55.770
sehr viele

22:55.770 --> 22:57.770
Möglichkeiten hat

22:57.770 --> 22:59.770
sich selbst ins Bein zu schießen

22:59.770 --> 23:01.770
und das ist wichtig für Spieleentwicklung.

23:01.770 --> 23:03.770
Weil bei Spieleentwicklung kommt es

23:03.770 --> 23:05.770
weniger drauf an, dass das

23:05.770 --> 23:07.770
sagen wir mal 100%

23:07.770 --> 23:09.770
NASA Raum, Weltraum

23:09.770 --> 23:11.770
Flug stable ist,

23:11.770 --> 23:13.770
sondern es muss einfach

23:13.770 --> 23:15.770
egal mit wie viel ekligen Tricks

23:15.770 --> 23:17.770
und Hacks, schnell sein.

23:17.770 --> 23:21.600
Und das ist das

23:21.600 --> 23:23.600
an C++

23:23.600 --> 23:25.600
wahrscheinlich besser

23:25.600 --> 23:27.600
als jede andere Sprache

23:27.600 --> 23:29.600
eklig und schnell.

23:29.600 --> 23:31.600
Das ist eine gute Beschreibung für C++

23:31.600 --> 23:39.390
glaube ich. Ja, eklig

23:39.390 --> 23:47.820
und schnell.

23:47.820 --> 23:49.820
Also C++ ist quasi die Ausgeburt

23:49.820 --> 23:51.820
der Hölle an Programmiersprache,

23:51.820 --> 24:04.600
aber schnell. Ja und das ist

24:04.600 --> 24:06.600
eines der Gründe. Aber eines der Hauptgründe

24:06.600 --> 24:08.600
dürfte tatsächlich Unreal sein.

24:08.600 --> 24:12.680
Bin ich mir ziemlich sicher.

24:12.680 --> 24:14.680
Meinst du Javascript oder eher Java?

24:14.680 --> 24:16.680
Wenn ich Javascript sage, meine ich Javascript.

24:16.680 --> 24:18.680
Und wenn ich Java sage, meine ich Java.

24:18.680 --> 24:20.680
Ich sage nicht Java für

24:20.680 --> 24:24.640
Javascript und umgedreht.

24:24.640 --> 24:26.640
So, ich muss mal mein WLAN Passwort rüber

24:26.640 --> 24:28.640
kopieren. Zu Java könnte ich mich auch auslassen,

24:28.640 --> 24:30.640
aber zu Java habe ich nicht so viel Plan.

24:30.640 --> 24:34.970
Deswegen.

24:34.970 --> 24:36.970
Ich lasse mich

24:36.970 --> 24:38.970
nur zu Sprachen aus, die ich

24:38.970 --> 24:40.970
semi oft selbst verwende.

24:40.970 --> 24:42.970
Und das ist sowas wie

24:42.970 --> 24:44.970
C Sharp, Go,

24:44.970 --> 24:46.970
Javascript,

24:46.970 --> 24:48.970
ab und zu mal ein bisschen Python, wobei ich da

24:48.970 --> 24:50.970
wirklich weit davon entfernt bin, mich wirklich gut auszukennen.

24:50.970 --> 24:52.970
Microcontroller, C++,

24:52.970 --> 24:54.970
ab und zu ein bisschen Rust.

24:54.970 --> 25:03.470
Aber mit Java habe ich nicht so viel am Hut.

25:03.470 --> 25:05.470
So, ich muss mal kurz mein WLAN Passwort rüber kopieren.

25:05.470 --> 25:09.610
Dazu muss ich

25:09.610 --> 25:11.610
mein Clipboard ausschalten.

25:11.610 --> 25:13.610
Clipboard ist ausgeschaltet.

25:13.610 --> 25:15.610
So Chat.

25:15.610 --> 25:19.820
Kann ich euch...

25:19.820 --> 25:25.690
Warte mal.

25:25.690 --> 25:27.690
Egal.

25:27.690 --> 25:29.690
Ich wollte hier in gibt es nichts zu sehen einblenden oder so.

25:29.690 --> 25:31.690
Ihr dürft jetzt...

25:31.690 --> 25:35.260
Ihr müsst jetzt mal kurz weggucken.

25:35.260 --> 25:37.260
Ich weiß, ich kann euch trauen Chat.

25:37.260 --> 25:39.260
Kappa. Ihr würdet auch so nicht hingucken.

25:39.260 --> 25:57.930
Richtig?

25:57.930 --> 26:05.820
Okay. Nice.

26:05.820 --> 26:07.820
So, WLAN Passwort ist

26:07.820 --> 26:11.580
am Start.

26:11.580 --> 26:13.580
So, dann schauen wir mal

26:13.580 --> 26:15.580
ob die...

26:15.580 --> 26:17.580
Also, jetzt kann ich meine

26:17.580 --> 26:19.580
Clipboard History wieder einschalten.

26:19.580 --> 26:21.580
Schauen wir mal,

26:21.580 --> 26:23.580
ob die WLAN Verbindung jetzt funktioniert,

26:23.580 --> 26:29.710
wenn ich das nochmal neu flashe.

26:29.710 --> 26:31.710
Was hat der für Schmerzen?

26:31.710 --> 26:33.710
Web Server 44, Missing Initialize...

26:33.710 --> 26:35.710
Okay, whatever.

26:35.710 --> 26:37.710
Die Warnings von GCC, da scheißen wir einfach mal drauf.

26:37.710 --> 26:41.660
By the way, wusstet ihr, dass

26:41.660 --> 26:43.660
C und C++ nicht wirklich kompatibel sind?

26:43.660 --> 26:45.660
C unterstützt Sachen,

26:45.660 --> 26:47.660
die C++ nicht kann.

26:47.660 --> 26:49.660
Und C++ unterstützt obviously jede Menge Sachen,

26:49.660 --> 26:51.660
die C nicht kann.

26:51.660 --> 26:53.660
So, also, wir sind on Port.

26:53.660 --> 26:55.660
On Port 443 sind wir am Start.

26:55.660 --> 26:57.660
Mal gucken, ob die Webseite wieder funktioniert.

26:57.660 --> 26:59.660
Mindshake, Error erstes Mal, ja klar.

26:59.660 --> 27:01.660
Zack. Kackel. Da sind wir am Start.

27:01.660 --> 27:07.150
Pog. Okay.

27:07.150 --> 27:09.150
Kunst wieder.

27:09.150 --> 27:11.150
Dann können wir uns jetzt ja mal um das Thema

27:11.150 --> 27:13.150
Websockets kümmern.

27:13.150 --> 27:15.150
Und da bin ich echt gespannt drauf,

27:15.150 --> 27:17.150
wie gut oder schlecht sie das Ganze jetzt

27:17.150 --> 27:19.150
umgesetzt haben.

27:19.150 --> 27:21.150
Also, Websockets.

27:21.150 --> 27:23.150
Websockets werden wir erstmal ganz ohne Browser,

27:23.150 --> 27:25.150
der kann sich hier mal ein bisschen verstecken,

27:25.150 --> 27:27.150
ganz ohne Browser testen.

27:27.150 --> 27:29.150
Nämlich mit

27:29.150 --> 27:31.150
WS,

27:31.150 --> 27:33.150
nee, äh, ähm, ähm,

27:33.150 --> 27:35.150
wie heißt das Ding?

27:35.150 --> 27:37.150
Das habe ich sogar installiert.

27:37.150 --> 27:39.150
So ein Websocket Curl.

27:39.150 --> 27:44.190
Ich vergesse immer, wie das heißt.

27:44.190 --> 27:46.190
Äh, Moment hier.

27:46.190 --> 27:48.190
Websocket CLI GitHub.

27:48.190 --> 27:50.190
Webs, Webs?

27:50.190 --> 27:52.190
Nee.

27:52.190 --> 27:54.190
WS Cat?

27:54.190 --> 27:58.460
Das kann sein.

27:58.460 --> 28:04.460
Ich nehme das erste, was im Standardrepo drin ist.

28:04.460 --> 28:06.460
Gibt's denn da sonst noch, ähm,

28:06.460 --> 28:08.460
Websocket?

28:08.460 --> 28:13.120
Aha, hier, Command Line Interface.

28:13.120 --> 28:15.120
Nice.

28:15.120 --> 28:17.120
Yes.

28:17.120 --> 28:19.120
Okay, also dann starten

28:19.120 --> 28:21.120
wir mal hier, wobei, wir machen

28:21.120 --> 28:23.120
das jetzt erstmal mit Curl.

28:23.120 --> 28:25.120
Da blickt man da ein bisschen besser durch.

28:25.120 --> 28:27.120
Also, W

28:27.120 --> 28:29.120
Socket, wie führt

28:29.120 --> 28:31.120
man das jetzt aus? So?

28:31.120 --> 28:33.120
Einfach mit, alter.

28:33.120 --> 28:35.120
Warum ist mein,

28:35.120 --> 28:37.120
warum ist meine Tastatur so lahm?

28:37.120 --> 28:39.120
Ähm, WSS, so?

28:39.120 --> 28:41.120
Minus K.

28:41.120 --> 28:43.120
Okay.

28:43.120 --> 28:45.120
Bad Request, nice.

28:45.120 --> 28:47.120
Okay.

28:47.120 --> 28:49.120
Das ist schon mal gut.

28:49.120 --> 28:51.120
Der versucht sich zumindest zu verbinden per Websocket.

28:51.120 --> 28:53.120
Received Unexpected Status Code.

28:53.120 --> 28:55.120
Bad Request.

28:55.120 --> 28:57.120
Okay, wie benutzen wir Websockets?

28:57.120 --> 28:59.120
Mit dem

28:59.120 --> 29:01.120
ESP32

29:01.120 --> 29:03.120
integrierten Webserver.

29:03.120 --> 29:05.120
Also, integrierter Webserver ist vielleicht ein bisschen viel gesagt.

29:05.120 --> 29:07.120
Ich habe ja hier selbst sowas gebaut.

29:07.120 --> 29:09.120
Im Prinzip, äh,

29:09.120 --> 29:11.120
liefert das Framework, also das

29:11.120 --> 29:13.120
ESP-EDF-Framework, ähm,

29:13.120 --> 29:15.120
so die Bausteine für

29:15.120 --> 29:17.120
einen Webserver aus. Dass der im Endeffekt

29:17.120 --> 29:19.120
dann aber auch das macht, was wir haben wollen, da müssen wir

29:19.120 --> 29:21.120
uns selbst drum kümmern. Ja,

29:21.120 --> 29:23.120
aktuell macht der ja noch nichts wirklich, außer

29:23.120 --> 29:25.120
eine Index-HTML ausliefern.

29:25.120 --> 29:27.120
So, jetzt müssen wir mal gucken, wie das geht mit

29:27.120 --> 29:29.120
Websockets. Ich bin mir

29:29.120 --> 29:31.120
relativ sicher, dass wir auf jeden Fall schon

29:31.120 --> 29:37.440
mal einen eigenen Händler

29:37.440 --> 29:39.440
brauchen. Nennen wir mal WS.

29:39.440 --> 29:41.440
Machen wir mal alles

29:41.440 --> 29:43.440
raus hier, dass es ein bisschen übersichtlich ist.

29:43.440 --> 29:45.440
Aber wenn ich das richtig in Erinnerung habe, hat das Ding

29:45.440 --> 29:47.440
jetzt hier sowas wie Websockets.

29:47.440 --> 29:49.440
Kann man hier noch reinschreiben?

29:51.440 --> 29:53.440
Method? Nicht Websockets?

29:53.440 --> 29:55.440
Ah, ich glaube,

29:55.440 --> 29:57.440
ich muss Websockets Support erstmal

29:57.440 --> 29:59.440
aktivieren. Lass uns mal

29:59.440 --> 30:01.440
das Beispiel angucken von den

30:01.440 --> 30:03.440
China-Chinesen.

30:03.440 --> 30:05.440
Wie das Funs Websockets Server C.

30:05.440 --> 30:07.440
Ja, ist ja übersichtlich. Gut.

30:07.440 --> 30:09.440
Bla bla. Start Web Server.

30:11.440 --> 30:13.440
Stop Web Server. Handle.

30:13.440 --> 30:18.030
Ja, ist Websocket

30:18.030 --> 30:20.030
gleich true? Was willst du

30:20.030 --> 30:22.030
mit Websockets machen? Ich möchte

30:22.030 --> 30:24.030
den Sensorwert auslesen, den alle

30:24.030 --> 30:26.030
Connected-In-Clients in Echtzeit

30:26.030 --> 30:28.030
zurückpushen, ohne dass das Laufen pollen muss.

30:28.030 --> 30:30.030
Und außerdem ist es

30:30.030 --> 30:32.030
nice, wenn das Ding Websockets

30:32.030 --> 30:36.680
kann. User

30:36.680 --> 30:38.680
CTX, das können wir tatsächlich noch setzen.

30:38.680 --> 30:40.680
Dann meckert er auch nicht mehr.

30:40.680 --> 30:47.390
Hä?

30:47.390 --> 30:49.390
Null.

30:49.390 --> 30:51.390
Ich weiß, es ist in der falschen Reihenfolge.

30:51.390 --> 30:56.240
Okay.

30:56.240 --> 30:58.240
Warte mal.

30:58.240 --> 31:00.240
Hier.

31:00.240 --> 31:02.240
Jetzt.

31:02.240 --> 31:11.370
Brauchen wir noch nicht.

31:11.370 --> 31:13.370
Okay, Websockets gibt es nicht. Das liegt, glaube ich,

31:13.370 --> 31:15.370
daran, weil ich Websockets

31:15.370 --> 31:17.370
Support noch nicht aktiviert habe.

31:17.370 --> 31:19.370
Websocket.

31:19.370 --> 31:24.280
Websockets Support. Yes.

31:24.280 --> 31:26.280
Muss man HTTPS

31:26.280 --> 31:28.280
Websocket-Kram aktivieren oder geht

31:28.280 --> 31:30.280
das auch so? Websocket.

31:30.280 --> 31:32.280
MQTT Transport Websocket

31:32.280 --> 31:34.280
WS Buffer Size Dynamic

31:34.280 --> 31:38.810
Buffer. Okay, Dynamic

31:38.810 --> 31:40.810
Buffer klingt erstmal cool, dass ich mich

31:40.810 --> 31:42.810
nicht so sehr mit C-String-Längen

31:42.810 --> 31:44.810
und so auseinandersetzen muss.

31:44.810 --> 31:48.700
Dynamic Websocket.

31:48.700 --> 31:52.270
Da muss man jetzt erstmal in der Hilfe

31:52.270 --> 31:56.480
gucken, was sie damit meinen.

31:56.480 --> 32:01.640
Was ist das? Hä?

32:01.640 --> 32:03.640
Irgendwas

32:03.640 --> 32:05.640
soll ich brauchen.

32:05.640 --> 32:07.640
Dynamic

32:07.640 --> 32:09.640
Websocket Transport Buffer.

32:09.640 --> 32:11.640
Was soll das bedeuten?

32:11.640 --> 32:13.640
If enabled, this option

32:13.640 --> 32:15.640
Websocket Transporter will be freed

32:15.640 --> 32:17.640
after connection succeeded

32:17.640 --> 32:19.640
to save more heap

32:26.030 --> 32:28.030
Okay,

32:28.030 --> 32:30.030
scheiß drauf. Ganz ehrlich,

32:30.030 --> 32:32.030
das Ding hat genug RAM.

32:32.030 --> 32:34.030
Das hat mehr RAM

32:34.030 --> 32:36.030
als, also deutlich mehr RAM als der alte

32:36.030 --> 32:38.030
ESP32. Wir lassen es einfach mal.

32:38.030 --> 32:40.030
Okay, und jetzt sollte ich, wenn ich Glück habe,

32:40.030 --> 32:42.030
Build

32:42.030 --> 32:44.030
sowas wie IsWebsocket da drinnen

32:44.030 --> 32:46.030
haben. Und wir

32:46.030 --> 32:48.030
gucken uns das Beispiel mal weiter an. Okay.

32:48.030 --> 32:50.030
IsWebsocket muss auf True,

32:50.030 --> 32:52.030
das machen wir gleich. Ah, Endpunkt

32:52.030 --> 32:54.030
machen wir auch mal hier, Slash WS.

32:54.030 --> 32:58.040
Händler,

32:58.040 --> 33:00.040
das machen wir wieder mit einem Lambda.

33:00.040 --> 33:03.870
Also hier mit so einer

33:03.870 --> 33:05.870
Inline-Funktion.

33:05.870 --> 33:09.690
Aber was

33:09.690 --> 33:11.690
braucht denn der Händler für alle...

33:11.690 --> 33:13.690
Ich muss übelst husten gerade, was denn los?

33:13.690 --> 33:17.900
MonkaS.

33:17.900 --> 33:22.620
Also, Echo Händler. Okay, ganz

33:22.620 --> 33:24.620
normal wie das andere auch.

33:24.620 --> 33:26.620
Alright.

33:26.620 --> 33:28.620
Oin.

33:28.620 --> 33:33.920
So, hat das Zeug jetzt kompiliert?

33:33.920 --> 33:35.920
Jawohl. Jetzt habe ich jetzt ein IsWebsocket.

33:35.920 --> 33:39.550
Is...

33:39.550 --> 33:43.310
Händler.

33:43.310 --> 33:45.310
Okay, das ist einfach wieder

33:45.310 --> 33:47.310
pepega. IsWebsocket True.

33:47.310 --> 33:49.310
True 0 W.

33:49.310 --> 33:53.390
Ah, ich habe

33:53.390 --> 33:57.850
ein Komma vergessen.

33:57.850 --> 33:59.850
IsWebsocket True.

33:59.850 --> 34:01.850
So, das heißt, wenn ich jetzt versuche

34:01.850 --> 34:03.850
eine Websocket-Verbindung aufzubauen,

34:03.850 --> 34:05.850
das testen wir jetzt mal. Logger.

34:05.850 --> 34:07.850
Loginfo.

34:07.850 --> 34:09.850
WS Keckel.

34:09.850 --> 34:11.850
Sollte das dann ausgeben.

34:11.850 --> 34:13.850
Ich glaube, das ist die

34:13.850 --> 34:15.850
beste Error-Message, die man sich

34:15.850 --> 34:26.720
denken kann. Weiß jeder sofort Bescheid.

34:26.720 --> 34:28.720
Moin, da war Bro.

34:28.720 --> 34:30.720
Oh,

34:30.720 --> 34:32.720
mir juckt es echt im Hals, was denn jetzt gerade los.

34:32.720 --> 34:36.030
Kennt ihr das? Ganz teilweise

34:36.030 --> 34:38.030
weird, wenn ihr mal so richtig

34:38.030 --> 34:40.030
husten müsst, dass ihr dann für so eine

34:40.030 --> 34:42.030
10, 20 Sekunden so Sternchen

34:42.030 --> 34:44.030
habt in den Augen.

34:44.030 --> 34:46.030
Und dann ist es wieder weg.

34:46.030 --> 34:48.030
So,

34:48.030 --> 34:50.030
jetzt schauen wir mal, wer ist...

34:50.030 --> 34:52.030
Aha, aha.

34:52.030 --> 34:54.030
Es hat funktioniert.

34:54.030 --> 34:56.030
200 OK und danach

34:56.030 --> 34:58.030
kackt es halt ab mit Websockets.

34:58.030 --> 35:00.030
Guck, man hat ja auch gesehen.

35:00.030 --> 35:02.030
Performing Session Handshake.

35:02.030 --> 35:04.030
Websocket. Read Error. Nice.

35:04.030 --> 35:06.030
Okay, der Websocket Support

35:06.030 --> 35:08.030
scheint drinnen zu sein.

35:08.030 --> 35:10.030
Ich mache halt mit der Websocket-Verbindung noch nichts.

35:13.660 --> 35:15.660
Ja,

35:15.660 --> 35:17.660
das stimmt.

35:17.660 --> 35:19.660
Aber

35:19.660 --> 35:21.660
ich glaube nicht, dass das was Schlimmes ist. Das habe ich schon immer.

35:21.660 --> 35:23.660
Wir machen...

35:23.660 --> 35:25.660
Wir loggen hier an der Stelle nochmal.

35:25.660 --> 35:27.660
Request to...

35:27.660 --> 35:29.660
Leute, ich muss mal kurz meine Tastatur

35:29.660 --> 35:31.660
rausziehen. Mein RGB geht nicht.

35:31.660 --> 35:33.660
Und das ist ja undenkbar.

35:33.660 --> 35:35.660
RGB

35:35.660 --> 35:37.660
muss funktionieren.

35:37.660 --> 35:45.260
Ohne RGB geht ja hier nichts.

35:45.260 --> 35:48.640
Keine FPS.

35:48.640 --> 35:50.640
Keine high FPS auf der

35:50.640 --> 35:52.640
Tastatur. Request...

35:52.640 --> 35:57.290
...

35:57.290 --> 36:03.100
...

36:03.100 --> 36:05.100
...

36:05.100 --> 36:09.120
...

36:09.120 --> 36:11.120
...

36:11.120 --> 36:13.120
...

36:13.120 --> 36:15.120
...

36:15.120 --> 36:17.120
...

36:17.120 --> 36:19.120
...

36:19.120 --> 36:21.120
...

36:21.120 --> 36:23.120
...

36:23.120 --> 36:25.120
...

36:25.120 --> 36:27.120
...

36:27.120 --> 36:29.120
...

36:29.120 --> 36:31.120
...

36:31.120 --> 36:33.120
...

36:33.120 --> 36:35.120
...

36:35.120 --> 36:42.940
Okay, httpget, da bin ich mir sicher, dass das ein httpget ist, weil ich habe nur einen httpget-Händler registriert.

36:46.690 --> 36:56.090
Okay, jetzt braucht man...

36:56.090 --> 36:58.770
Eine Güte, ey, warum muss ich denn gerade so übertrieben husten, Alter?

37:07.920 --> 37:09.180
Alter, wisst ihr, was ich jetzt mache?

37:10.260 --> 37:11.640
Oder vielleicht...

37:11.640 --> 37:15.230
Alter, warum KS?

37:16.030 --> 37:17.090
Wisst ihr, wisst ihr, was ich jetzt mache?

37:18.570 --> 37:24.510
Ihr müsst mal kurz...

37:24.510 --> 37:25.490
Das mache ich jetzt.

37:26.010 --> 37:26.630
Genau das.

37:31.970 --> 37:34.970
Alter, echt...

37:34.970 --> 37:42.360
Das habe ich eigentlich nicht vor, jetzt im Stream zu machen, aber...

37:42.360 --> 37:44.160
Bleibt mir jetzt nichts anderes übrig, meine Güte.

37:44.900 --> 37:46.160
Ich mache jetzt kurz das Fenster auf.

37:46.860 --> 37:47.620
Und dann gehe ich runter.

37:49.900 --> 37:51.820
Und hole...

37:51.820 --> 37:54.360
Inhalationsding und ein bisschen Salzlösung.

37:55.000 --> 37:56.160
Mach das schnell, warte mal.

39:18.000 --> 39:19.180
Ey, man, KW, Mann.

39:20.040 --> 39:21.180
Weiß nicht, was das ist, aber...

39:21.360 --> 39:25.340
Ey, übelst eine Hustenstelle ist hier.

39:25.840 --> 39:28.000
Weiß nicht, ob die Polen wieder fliegen oder sowas.

39:28.440 --> 39:31.480
Wobei, ich habe eigentlich weder Heuschnupfen noch sonst was, aber irgendwas muss das sein.

39:31.560 --> 39:31.980
Keine Ahnung.

39:38.650 --> 39:39.050
Ja.

39:43.190 --> 39:44.550
Die Polen fliegen bestimmt.

39:50.540 --> 39:51.260
Okay, Chat.

39:52.520 --> 39:53.980
Ich muss jetzt mal eine Runde...

39:53.980 --> 39:55.460
Kaupium inhalieren.

39:55.780 --> 39:56.340
Pass mal auf, ja.

39:57.140 --> 39:57.440
Aha.

40:05.800 --> 40:06.200
Okay.

40:06.700 --> 40:07.320
Ich kann viel besser.

40:07.320 --> 40:07.400
Ich kann viel besser.

40:08.440 --> 40:09.440
Ich kann viel besser.

40:09.440 --> 40:09.560
Ich kann viel besser.

40:23.220 --> 40:41.340
So, passen wir dazu.

40:49.640 --> 40:51.940
So, eine Runde entspanntes Aquarium.

41:34.700 --> 41:36.560
Ich schlage mal das Fenster auf, ja.

41:56.920 --> 41:57.600
Okay, Leute.

41:57.900 --> 42:00.440
Das dauert jetzt drei, vier Minuten, dann geht es weiter.

42:06.230 --> 42:08.610
Das kann ich euch eh auch nur empfehlen, ohne nichts.

42:08.790 --> 42:14.070
Wenn ihr öfters trockenen Hals habt, es gibt nichts Besseres ohne Nebenwirkung.

42:14.070 --> 42:14.130
Okay.

42:14.130 --> 42:14.170
Wenn ihr öfters trockenen Hals habt, es gibt nichts Besseres ohne Nebenwirkung.

42:14.170 --> 42:15.370
Wenn ihr öfters trockenen Hals habt, es gibt nichts Besseres ohne Nebenwirkung.

42:15.370 --> 42:17.210
Anstatt eine Runde Salzwasser inhalieren.

42:19.730 --> 42:20.850
Also Salzlösung.

42:23.890 --> 42:27.030
Ihr kommt euch vielleicht vor, wie ein Rheinblätter kurz vorm Abwachsen ist.

42:28.570 --> 42:29.530
Aber was macht das?

42:30.050 --> 42:30.470
Das hilft.

42:32.980 --> 42:34.040
Da fehlt man nicht überhaupt.

42:46.860 --> 42:48.220
Nicht gut, das dachte ich mir.

42:54.000 --> 42:54.240
Okay.

42:56.980 --> 43:00.580
Dann lasst uns aber das Websocket-Example angucken in der Zeit.

43:16.290 --> 43:26.030
Ist da noch bessere Exzampel für...

43:26.030 --> 43:26.490
SP?

43:45.180 --> 43:45.620
Ja.

43:45.860 --> 43:47.860
Star Wars Cosplay

43:47.860 --> 43:52.370
Was ist jetzt los?

43:52.470 --> 43:53.410
Was ist das hier jetzt los?

43:55.500 --> 43:58.340
Ich hab den übelsten Wustenstelz gerade

43:58.340 --> 44:15.450
Das war viel besser

44:15.450 --> 44:25.470
Jetzt

44:25.470 --> 44:57.960
Guck uns doch ein paar andere Beispiele an

44:57.960 --> 45:07.480
Was anderes

45:07.480 --> 45:17.390
Ist das halt mal leer hier?

45:20.630 --> 45:21.330
Genug, genug

45:21.330 --> 45:21.990
Kaupjungs

45:21.990 --> 45:49.250
Die Audioqualität ist vollkommen okay

45:49.250 --> 45:50.890
Aber ich kann grad nicht ins Headset reden

45:50.890 --> 46:09.380
Ich kann grad nicht ins Headset reden

46:09.380 --> 46:11.180
Weil ich Kaupjum inhalieren muss

46:11.180 --> 46:19.460
Das ist gleich vorbei

46:19.460 --> 46:37.170
Okay, das ist ein besseres Exempel

46:40.240 --> 46:41.140
Keine Sorge

46:41.140 --> 46:42.520
Ich bin nicht am Sterben

46:42.520 --> 47:02.690
Das ist ein gutes Beispiel

47:02.690 --> 47:10.700
Das ist ein gutes Beispiel

47:10.700 --> 47:24.470
Exzellent

47:24.470 --> 47:26.030
Sag mal, ist das bald mal alt?

47:26.130 --> 47:28.610
Das sind nur 0, irgendwas Milliliter

47:28.610 --> 47:35.220
Sind nur

47:35.220 --> 47:38.220
5 Milliliter

47:38.220 --> 47:44.940
Wie lang hält denn das dann?

47:56.170 --> 47:57.470
Ich atme zu wenig

47:57.470 --> 47:58.750
Das könnte ein Problem sein

47:58.750 --> 48:00.110
Auf Dauer

48:00.110 --> 48:01.690
Er hat es fertig

48:01.690 --> 48:09.080
Okay

48:09.080 --> 48:14.240
Überlebt

48:14.240 --> 48:17.960
Besser

48:17.960 --> 48:21.800
Okay

48:21.800 --> 48:24.740
Alles gut

48:24.740 --> 48:48.380
Okay

48:48.380 --> 48:51.160
Okay, auch geht

48:51.160 --> 48:54.000
Nochmal alles abgewendet hier

48:55.980 --> 48:57.080
Alles wieder gut

48:57.080 --> 48:58.480
Audioqualität auch in Ordnung

48:58.480 --> 49:09.710
An das Trinken erinnern

49:09.710 --> 49:11.650
Ja, ich hab ne halbe Tasse Tee gerade gesoffen

49:11.650 --> 49:13.770
Doch, doch, ist alles in Ordnung

49:13.770 --> 49:15.370
Weil ich

49:15.370 --> 49:17.690
Weil ich so husten musste

49:17.690 --> 49:19.670
Okay

49:19.670 --> 49:20.990
Weiter geht's

49:20.990 --> 49:23.290
Das ist ein viel besseres Beispiel hier

49:23.290 --> 49:25.290
Wir sind im Prinzip gerade dort

49:25.290 --> 49:26.270
What?

49:26.730 --> 49:28.150
Was machen die hier denn für Zeug?

49:28.750 --> 49:29.730
WS Frame?

49:30.210 --> 49:30.610
Mems?

49:30.710 --> 49:32.710
Okay, jetzt kommt Low Level C++ Shit

49:32.710 --> 49:37.660
Was?

49:37.820 --> 49:47.280
Was geht denn hier ab?

49:47.280 --> 49:50.910
Was machen die hier?

49:50.910 --> 49:57.420
Geht das nicht auch ein bisschen einfacher?

49:57.420 --> 49:59.420
Was macht Memset?

49:59.420 --> 50:02.420
Das, das initialisiert das gesamte Memory auf 0

50:02.420 --> 50:03.420
Oder wie?

50:03.420 --> 50:05.420
Quasi Size of

50:05.420 --> 50:07.420
Von diesem Struct

50:07.420 --> 50:09.420
Und dann alles auf 0 setzen

50:09.420 --> 50:11.420
Oder?

50:11.420 --> 50:16.200
Vermutlich

50:16.200 --> 50:18.200
Ah, das muss der machen, weil's kein

50:18.200 --> 50:20.200
Weil's, weil's ein Stack

50:20.200 --> 50:22.200
Allocated Ding ist, oder?

50:22.200 --> 50:26.990
Weil wenn ich was mache, dann muss ich es auf 0 setzen, oder?

50:26.990 --> 50:28.990
Wenn ich was mit malloc, äh, anfordere

50:28.990 --> 50:30.990
Das ist doch alles genullt, oder?

50:30.990 --> 50:32.990
Deswegen wird das hier, okay

50:32.990 --> 50:36.990
Ich hab so keine Ahnung, was das, was das hier treibt, aber

50:36.990 --> 50:38.990
Wir, wir fügen das einfach mal ein, okay

50:38.990 --> 50:40.990
Aber ich mag den ihre Schreibweise nicht

50:40.990 --> 50:42.990
Das ist ein

50:42.990 --> 50:44.990
Ein Packet, ja, oder ein

50:44.990 --> 50:46.990
Eigentlich nennen wir das Frame

50:46.990 --> 50:50.990
Warum soll ich es, warum soll ich es Websocket Packet nennen, wenn das ein Frame ist?

50:50.990 --> 50:52.990
Das ist doch hängengeblieben

50:52.990 --> 50:54.990
Websocket Frame

50:54.990 --> 50:56.990
Wir müssen jetzt ja nicht alles von irgendwelchen

50:56.990 --> 50:58.990
C-Entwicklern abgucken

50:58.990 --> 51:00.990
Die alles abkürzen, oder?

51:00.990 --> 51:02.990
Das Ding heißt schlicht und ergreifend auch einfach Buffer

51:02.990 --> 51:04.990
Okay

51:04.990 --> 51:06.990
Jetzt wird der Speicher

51:06.990 --> 51:08.990
Auf 0 gesetzt

51:08.990 --> 51:10.990
Geht das nicht, geht das nicht in C++ so?

51:10.990 --> 51:12.990
Blöde Frage

51:12.990 --> 51:14.990
Kann ich in C++ nicht so machen, da wird auch alles genullt?

51:14.990 --> 51:18.360
Hi, HiIQ C++

51:18.360 --> 51:20.360
Kenner

51:20.360 --> 51:24.000
Chatgis

51:24.000 --> 51:29.290
C++ 0 Struct

51:29.290 --> 51:31.290
Nein, nein, äh, äh

51:31.290 --> 51:33.290
C++ Initialize

51:33.290 --> 51:35.290
Struct 0

51:35.290 --> 51:37.290
Auch so Initialize Struct in C++

51:37.290 --> 51:39.290
Ja

51:39.290 --> 51:41.290
Genau, sowas in der Richtung

51:41.290 --> 51:48.380
Äh

51:48.380 --> 51:51.760
Alter, warum braucht man

51:51.760 --> 51:53.760
Für so eine simple Frage

51:53.760 --> 52:00.590
Ein halbes Buch wieder

52:00.590 --> 52:05.820
Okay, das geht auch

52:05.820 --> 52:10.800
Okay, dann habe ich es doch richtig gemacht

52:10.800 --> 52:12.800
Achtung, man kann auch so machen

52:12.800 --> 52:14.800
Warum gibt es für den gleichen

52:14.800 --> 52:16.800
Chip die gleiche Syntax, was soll das?

52:16.800 --> 52:22.350
Ne, das muss ich nicht machen

52:22.350 --> 52:24.350
Aber ich bin mir schon auf low level

52:24.350 --> 52:26.350
Ziemlich sicher, das wird schon funktionieren

52:26.350 --> 52:28.350
Schauen wir mal

52:28.350 --> 52:30.350
Memset, schmeißen wir schon mal raus

52:30.350 --> 52:32.350
Ok, wofür brauche ich den Buffer?

52:32.350 --> 52:34.350
Den Buffer brauche ich bis jetzt noch nicht

52:34.350 --> 52:36.350
Wofür braucht der hier den Buffer?

52:36.350 --> 52:38.350
Ach hier unten dann

52:38.350 --> 52:40.350
Für gedöns

52:40.350 --> 52:42.350
Ok, schauen wir mal

52:42.350 --> 52:44.350
http vs receive frame

52:44.350 --> 52:46.350
Und

52:46.350 --> 52:48.350
Hm

52:48.350 --> 52:50.350
Dann gehen wir die Länge aus

52:50.350 --> 53:07.770
frame blog info wie es frame länge ist web socket längst schauen wir mal ob das frunzt jetzt bin

53:07.770 --> 53:14.510
ich mal gespannt jetzt würde ich erwarten dass als nächstes schon einmal hier eine andere error

53:14.510 --> 53:19.670
fehlermeldung kommt lasst uns mal während das pusht auf den schau mal weiter gucken so was

53:19.670 --> 53:32.690
kommt jetzt also sprich wenn es irgendwas enthält sagen wir mal ja dann alokierte der irgendwie

53:32.690 --> 53:44.500
bot dann alokierte der an dieser speicher position einen buffer in dieser größe und

53:44.500 --> 53:51.840
zwar in der größe wie es package punkt längst plus 1 plus 1 wahrscheinlich für

53:51.840 --> 54:06.720
zero string termination vermutlich und dann was ist heute das ziel websocket verbindung auf

54:06.720 --> 54:11.820
dem sp 32 zu machen und wir haben ganz viele ziele weil ich habe den ganzen tag nichts anderes vor

54:11.820 --> 54:18.260
ich kann bis ich heute pen je prog erstellt machen okay die ganze ganz so lange ohne pause

54:18.260 --> 54:26.230
vielleicht nicht aber so und dann sagte acht

54:26.290 --> 54:36.890
und jetzt jetzt verstehe ich dass das hier ruft die länge ab von dem frame und das hier ruft den

54:36.890 --> 54:49.280
frame inhalt ab aha das ist aber auch schon ein bisschen durch die brust ins auge aber gut ich

54:49.280 --> 54:54.560
meine so macht man die sachen halt in szene so schauen wir mal ob das jetzt besser funzt

54:54.560 --> 55:11.030
handshake beim ried error das ist jetzt gut oder schlecht ich weiß ich mache einfach mal weiter

55:12.230 --> 55:19.370
also ich habe ja noch nichts zurückgeschickt vielleicht deswegen okay also gucken wir jetzt

55:19.370 --> 55:33.960
wie wir bauen das einfach mal nach wir gucken jetzt websocket frame länge größer null ich finde

55:33.960 --> 55:42.060
die schreibweise einfach schöner größer null ich weiß die c leute sagen was so schutze auch aber ich

55:42.060 --> 55:43.260
finde größer nur trotzdem schöner

55:43.920 --> 55:51.120
aber wie ich kopfste mir das mal an der stelle ok websocket frame länge plus eins

55:51.120 --> 56:14.050
sehr schön was ist er nur mit karsten los okay wir das jetzt setzen wir das und das ist ja super

56:14.050 --> 56:14.130
fertig schaue mal ob wir das später vielleicht ein bisschen vereinfachen können und jetzt ist das super

56:14.130 --> 56:29.130
fertig ich schaue mal ob wir das später vielleicht ein bisschen vereinfachen können und jetzt ist das

56:29.130 --> 56:36.250
gut sehr schön wenn ihr hier in der karte das hier was auf den linken schreibt und jetzt in die nachricht

56:36.250 --> 56:36.370
und ich kämpfe hier auf den linken schreibt ein bisschen besser mal ein bisschen einfacher ist das jetzt

56:36.390 --> 56:38.550
Und jetzt lese ich die Daten ein.

56:39.890 --> 56:41.590
Das ist mir schon ein bisschen durch die Brust ins Auge.

56:41.770 --> 56:42.730
Red gibt es nicht.

56:43.470 --> 56:44.090
Macht nichts.

56:44.730 --> 56:46.570
Return-Wert juckt mich jetzt an der Stelle auch nicht.

56:46.790 --> 56:47.890
Wird schon alles funktionieren.

56:49.350 --> 56:50.670
Error-Handling ist für Noobs.

56:51.650 --> 56:53.110
Got Package with Message.

56:53.650 --> 56:53.950
Okay.

56:54.890 --> 56:56.690
Ah, da ist ein Zero-Terminated-String drin.

56:56.690 --> 57:01.150
Also heißt im Endeffekt, dass ich jetzt sagen kann, Logger, Log.

57:04.200 --> 57:07.180
Und jetzt einfach den Buffer, oder?

57:07.180 --> 57:12.730
Ah, das mag der so nicht.

57:14.750 --> 57:16.510
Und jetzt einfach den Buffer loggen.

57:20.600 --> 57:21.980
Und was passiert jetzt?

57:30.760 --> 57:31.840
Äh, warum soll ich das machen?

57:35.960 --> 57:38.880
NVS-Flash-Init werden wir später verwenden.

57:40.540 --> 57:43.000
Du meinst einfach, weil Sektor 69 ist.

57:43.940 --> 57:55.600
Ah, Moment.

57:55.800 --> 58:00.100
Ich muss damit auch noch eine Message schicken.

58:00.860 --> 58:03.000
Repso-Card-Send-String.

58:03.100 --> 58:03.240
Wie sieht das aus?

58:03.240 --> 58:04.320
Wie sende ich denn hier eine Message?

58:05.660 --> 58:07.580
And send request in command line.

58:08.860 --> 58:09.300
Aha.

58:10.480 --> 58:11.860
Da muss man rein-echoen.

58:12.260 --> 58:12.940
Gachi-Buzz.

58:16.200 --> 58:16.920
Okay, Read-Error.

58:17.080 --> 58:17.500
Das ist okay.

58:17.660 --> 58:19.020
Noch rede ich es ja auch nicht.

58:21.440 --> 58:24.300
So, vielleicht sollten wir trotzdem an der Stelle noch mal schauen.

58:29.350 --> 58:30.590
Äh, wo ist denn hier mein Beispiel?

58:32.390 --> 58:32.530
Ja.

58:32.990 --> 58:39.380
Vielleicht sollten wir an der Stelle doch noch mal schauen, ob das geklappt hat.

58:42.300 --> 58:43.180
Machen wir mal hier.

58:43.860 --> 58:58.600
Wenn das hier gleich-ungleich-ESP okay ist, dann Log-Error.

59:01.620 --> 59:01.940
Bäm.

59:03.300 --> 59:03.880
Eigentlich egal.

59:04.340 --> 59:06.140
Ich werde das später eh nicht so lassen.

59:08.840 --> 59:10.780
Und jetzt wird die Message geloggt.

59:14.380 --> 59:15.940
Und dann vergleicht er.

59:16.000 --> 59:19.040
Okay, dann vergleicht er, ob der Payload, was da drin ist.

59:19.040 --> 59:21.360
Wir wollen es ja eigentlich aktuell nur einlesen.

59:21.440 --> 59:21.940
Ja, das reicht.

59:21.940 --> 59:22.520
Reicht er schon mal.

59:23.100 --> 59:23.320
Zack.

59:24.400 --> 59:25.100
Bin ich...

59:25.100 --> 59:25.520
Äh, what?

59:32.640 --> 59:32.820
Ah.

59:33.640 --> 59:34.400
Mag der das nicht?

59:34.700 --> 59:36.280
Will er das als Char haben, oder?

59:39.080 --> 59:39.400
Okay.

59:39.920 --> 59:40.460
Warum auch immer.

59:43.360 --> 59:44.120
Das nicht geht.

59:48.140 --> 59:49.900
Sollte ich mal einbauen, dass das funktioniert.

59:50.860 --> 59:52.220
Gehen wir mal hier in meine Helper-Class.

59:52.820 --> 59:55.040
Sagen wir mal dem String-Formatter,

59:56.420 --> 59:58.100
dass der auch ohne Probleme

59:58.100 --> 01:00:02.680
Uint8T-Dinger

01:00:02.680 --> 01:00:05.480
formatieren darf.

01:00:05.480 --> 01:00:09.840
Nämlich, indem er das einfach als Char interpretiert.

01:00:09.840 --> 01:00:10.840
Gut ist.

01:00:10.840 --> 01:00:14.880
Ich hoffe, das funzt jetzt, weil ich da gebaut habe.

01:00:14.880 --> 01:00:17.040
Erstmal gucken, ob ich jetzt das wegmachen kann.

01:00:17.040 --> 01:00:18.040
Ups.

01:00:18.040 --> 01:00:19.040
Äh, ob ich das...

01:00:19.040 --> 01:00:20.040
Ne, hier.

01:00:20.040 --> 01:00:21.040
Ob ich jetzt den Cast wegmachen kann.

01:00:21.040 --> 01:00:22.040
Schauen wir mal.

01:00:22.040 --> 01:00:23.040
Nein.

01:00:23.040 --> 01:00:24.040
Äh.

01:00:24.040 --> 01:00:25.040
Okay.

01:00:25.040 --> 01:00:26.040
Whatever.

01:00:26.040 --> 01:00:27.040
Okay.

01:00:27.040 --> 01:00:28.040
Okay.

01:00:28.040 --> 01:00:29.040
Okay.

01:00:29.040 --> 01:00:30.040
Okay.

01:00:30.040 --> 01:00:31.040
Okay.

01:00:31.040 --> 01:00:32.040
Okay.

01:00:32.040 --> 01:00:33.040
Okay.

01:00:33.040 --> 01:00:37.280
Okay.

01:00:37.280 --> 01:00:38.280
Okay.

01:00:38.280 --> 01:00:42.510
TIMON!

01:00:42.510 --> 01:00:43.510
Oh.

01:00:43.510 --> 01:00:44.510
Oh.

01:00:44.510 --> 01:00:45.510
Oh.

01:00:45.510 --> 01:00:46.510
Okay, wohl so.

01:00:46.510 --> 01:00:55.350
Oh.

01:00:55.350 --> 01:00:56.350
Oh.

01:00:56.350 --> 01:00:57.350
Ah.

01:00:57.350 --> 01:00:58.350
Oh.

01:00:58.350 --> 01:00:59.350
Oh.

01:00:59.350 --> 01:01:01.720
Uh oh.

01:01:01.720 --> 01:01:02.800
Uh oh.

01:01:02.800 --> 01:01:03.800
Uh oh.

01:01:03.800 --> 01:01:04.800
Oh.

01:01:04.800 --> 01:01:05.800
Uh oh.

01:01:05.800 --> 01:01:06.800
Oh.

01:01:06.800 --> 01:01:07.800
Oh.

01:01:07.800 --> 01:01:08.800
Und ich bin in...

01:01:08.800 --> 01:01:09.800
Oh.

01:01:09.800 --> 01:01:10.800
Oh.

01:01:10.800 --> 01:01:12.540
Und jetzt bin ich mal gespannt.

01:01:12.540 --> 01:01:16.190
Also, es sollte jetzt eigentlich...

01:01:16.190 --> 01:01:17.190
Do you chat?

01:01:17.190 --> 01:01:18.170
In dem Websocket ausgelesen werden oben.

01:01:18.170 --> 01:01:19.170
Äh, nein?

01:01:19.170 --> 01:01:22.170
Wird es nicht.

01:01:22.170 --> 01:01:26.070
Chat wieder richtig 3-Hand, nicht am aufpassen

01:01:26.070 --> 01:01:28.610
Slash WS muss ich aufrufen

01:01:28.610 --> 01:01:29.230
Zack

01:01:29.230 --> 01:01:31.310
Nothing matched to Uri, was?

01:01:38.240 --> 01:01:40.120
Ach, ich kack Noob

01:01:40.120 --> 01:01:42.140
Ich hab den Händler gar nicht registriert

01:01:42.140 --> 01:01:43.800
Ich teste die ganze Zeit

01:01:43.800 --> 01:01:46.900
Was, was, was überhaupt nicht aufgerufen wird

01:01:46.900 --> 01:01:49.360
Oh

01:01:49.360 --> 01:01:59.380
Das wurde die ganze Zeit nicht aufgerufen

01:01:59.380 --> 01:02:01.600
Deswegen war auch die Antwort so

01:02:01.600 --> 01:02:02.560
Weird Champ

01:02:02.560 --> 01:02:07.290
So, jetzt

01:02:07.290 --> 01:02:10.830
Jetzt können wir das nochmal ausprobieren

01:02:10.830 --> 01:02:11.970
Wenn jetzt alles funktioniert

01:02:11.970 --> 01:02:14.330
Sollte da oben eigentlich Q-Chat erscheinen

01:02:14.330 --> 01:02:15.650
Was?

01:02:19.960 --> 01:02:20.500
Äh

01:02:20.500 --> 01:02:28.590
Muss ich das vielleicht als erstes registrieren

01:02:28.590 --> 01:02:30.330
Weil das hier ein Wildcard Händler ist

01:02:30.330 --> 01:02:32.570
Jetzt wird's

01:02:32.570 --> 01:02:33.850
Jetzt wird's etwas advanced

01:02:33.850 --> 01:02:41.980
Oder ich geh das von oben nach unten

01:02:41.980 --> 01:02:44.160
Weil das ist Slash WS

01:02:44.160 --> 01:02:46.800
Und das ist Slash Sternchen

01:02:46.800 --> 01:02:58.030
Na?

01:03:01.960 --> 01:03:02.620
Äh, Failed?

01:03:02.980 --> 01:03:04.300
Das ist doch schonmal besser

01:03:04.300 --> 01:03:06.480
Failed to receive Payload

01:03:06.480 --> 01:03:12.270
Hier, WS Framelength 77

01:03:12.270 --> 01:03:15.280
Und

01:03:15.280 --> 01:03:18.560
Failed to receive Payload

01:03:18.560 --> 01:03:19.320
HTTPD

01:03:19.320 --> 01:03:21.920
Okay, der macht auf jeden Fall was

01:03:21.920 --> 01:03:23.320
Es funktioniert noch nicht richtig

01:03:23.320 --> 01:03:24.540
Aber der macht was

01:03:24.540 --> 01:03:27.100
Es ist schonmal

01:03:27.100 --> 01:03:28.520
Es ist auf jeden Fall schonmal richtig

01:03:28.520 --> 01:03:31.260
Ja, es ist auf jeden Fall schonmal richtig

01:03:31.260 --> 01:03:34.040
Ähm, ich bin mir jetzt allerdings nicht ganz sicher

01:03:34.040 --> 01:03:35.500
Was ich da verkackt habe

01:03:35.500 --> 01:03:44.840
Waren wir mal kurz hier das weg

01:03:44.840 --> 01:03:46.120
Hä, okay, warum?

01:03:46.240 --> 01:03:47.080
Warum geht das jetzt nicht?

01:03:52.660 --> 01:03:54.880
Muss da, muss da irgendwie noch was hinterher

01:03:54.880 --> 01:03:58.770
WS Receive Frame

01:03:58.770 --> 01:04:11.200
Ja, das hat nicht funktioniert

01:04:11.200 --> 01:04:14.500
Aber warum nicht?

01:04:15.860 --> 01:04:17.360
Da sagt doch eindeutig Länge

01:04:17.360 --> 01:04:18.360
Ist okay

01:04:18.360 --> 01:04:22.670
Da hat er gesagt, Länge ist 7

01:04:22.670 --> 01:04:23.650
Ist denn die Länge 7?

01:04:25.270 --> 01:04:26.030
Ähm, ne

01:04:26.030 --> 01:04:29.490
Die Länge ist mindestens 8

01:04:29.490 --> 01:04:31.950
Eigentlich müsste die Länge 9 sein

01:04:31.950 --> 01:04:32.950
Wegen

01:04:32.950 --> 01:04:35.610
Zero Termination

01:04:35.610 --> 01:04:35.670
Wieso?

01:04:36.490 --> 01:04:37.750
Schauen wir mal, was der jetzt sagt

01:04:37.750 --> 01:04:38.030
Okay

01:04:38.030 --> 01:04:39.490
Nochmal

01:04:39.490 --> 01:04:42.930
Endshake

01:04:42.930 --> 01:04:44.650
Was?

01:04:45.730 --> 01:04:49.270
WS Frame is not properly masked

01:04:49.270 --> 01:04:54.170
WS Frame Length 72

01:04:54.170 --> 01:04:57.840
WS Frame Länge

01:04:57.840 --> 01:05:00.740
Äh

01:05:00.740 --> 01:05:01.680
Äh

01:05:01.680 --> 01:05:03.060
Äh

01:05:03.060 --> 01:05:14.940
Funktioniert das doch nicht, was ich mir hier oben so gedacht habe?

01:05:16.560 --> 01:05:18.960
Was ich hier geskippt habe mit dem Memset

01:05:18.960 --> 01:05:23.620
Wo sich das doch macht?

01:05:23.620 --> 01:05:23.780
Äh

01:05:23.800 --> 01:05:28.610
Das ist ja das einzige, was ich geskippt habe

01:05:28.610 --> 01:05:32.930
Okay

01:05:32.930 --> 01:05:34.210
Lock Warning

01:05:34.210 --> 01:05:35.390
Dann fällt es mir besser auf

01:05:35.390 --> 01:05:37.130
Und wir machen mal hier

01:05:37.130 --> 01:05:39.110
Die Anzeige

01:05:39.110 --> 01:05:40.530
In Main

01:05:40.530 --> 01:05:41.550
Bisschen

01:05:41.550 --> 01:05:43.030
Langsamer

01:05:43.030 --> 01:05:45.710
Was könnte das jetzt sein?

01:05:45.790 --> 01:05:46.930
Was habe ich jetzt verkehrt gemacht?

01:06:07.620 --> 01:06:09.540
WS Frame Length 1

01:06:09.540 --> 01:06:17.140
Die Frame Length ist doch garantiert nicht 1

01:06:17.140 --> 01:06:20.180
Wenn ich jetzt hier nur CU reinschreibe

01:06:20.180 --> 01:06:21.200
Ist die weiterhin 1

01:06:21.200 --> 01:06:26.070
Jetzt ist es verkehrt gemacht

01:06:26.070 --> 01:06:27.570
Jetzt hat es funktioniert

01:06:27.570 --> 01:06:33.890
What the fuck?

01:06:36.770 --> 01:06:38.190
Ich mache irgendwas falsch, Leute

01:06:38.190 --> 01:06:44.630
Ähm

01:06:44.630 --> 01:06:47.610
Und warum wird das doppelt aufgerufen?

01:06:55.260 --> 01:06:55.760
Äh

01:06:55.760 --> 01:06:56.460
Moment

01:06:56.460 --> 01:07:00.300
Ach so

01:07:00.300 --> 01:07:02.520
Ich glaube, der ruft das zweimal auf

01:07:02.520 --> 01:07:03.360
Okay

01:07:03.360 --> 01:07:06.380
Ach so, das habe ich

01:07:06.380 --> 01:07:06.800
Siehst du mal

01:07:06.800 --> 01:07:09.720
Das ist anscheinend wichtig für die Funktion

01:07:09.720 --> 01:07:13.350
Das erste

01:07:13.350 --> 01:07:14.510
Ah ja

01:07:14.510 --> 01:07:17.090
Endshake was done

01:07:17.090 --> 01:07:17.990
Connection was offed

01:07:17.990 --> 01:07:19.390
Okay, okay

01:07:19.390 --> 01:07:21.770
Nee, nee, nee, nee

01:07:21.770 --> 01:07:23.030
Ich glaube, das liegt daran

01:07:23.030 --> 01:07:24.630
Dass der ein Upgrade machen muss

01:07:24.630 --> 01:07:26.930
So ein Websocket-Verbindung ist ja immer

01:07:26.930 --> 01:07:29.210
Ist ja ein HTTP-Get mit einem Upgrade

01:07:29.210 --> 01:07:31.010
Und ich vermute mal

01:07:31.010 --> 01:07:32.790
Dass das so geht

01:07:32.790 --> 01:07:35.910
Das Method zum ersten Mal HTTP-Get ist

01:07:35.910 --> 01:07:38.190
Dann wird die Connection geupgradet

01:07:38.190 --> 01:07:39.910
Und dann wird es nochmal aufgerufen

01:07:39.910 --> 01:07:40.930
Das heißt

01:07:40.930 --> 01:07:43.010
Ich muss beim ersten Mal nur checken

01:07:43.010 --> 01:07:43.610
Ob es ein Get ist

01:07:43.610 --> 01:07:44.550
Dann muss ich rausgehen

01:07:44.550 --> 01:07:46.550
Und wenn dann hier nicht mehr Get drin steht

01:07:46.550 --> 01:07:47.150
Sondern

01:07:47.150 --> 01:07:47.610
Dann muss ich rausgehen

01:07:47.610 --> 01:07:49.070
Ich hoffe mal

01:07:49.070 --> 01:07:50.930
Dass da ein Websocket oder sowas noch gibt

01:07:50.930 --> 01:07:54.960
Whatever

01:07:54.960 --> 01:07:56.720
Dann

01:07:56.720 --> 01:07:58.360
Aber da müsste es irgendwas in der Richtung geben

01:07:58.360 --> 01:08:03.210
Upgrade wahrscheinlich

01:08:03.210 --> 01:08:09.230
Wir geben einfach mal

01:08:09.230 --> 01:08:11.790
Wir geben einfach mal

01:08:11.790 --> 01:08:13.310
Logger

01:08:13.310 --> 01:08:14.130
Login

01:08:14.130 --> 01:08:16.550
Wir geben einfach mal aus

01:08:16.550 --> 01:08:17.410
Was da drin steht

01:08:17.410 --> 01:08:18.870
Method

01:08:18.870 --> 01:08:21.190
Request

01:08:21.190 --> 01:08:22.570
Method

01:08:22.570 --> 01:08:24.570
,

01:08:24.570 --> 01:08:26.570
Ja das ist jetzt ja leider

01:08:26.570 --> 01:08:30.210
C++ und C-Sucker-Zeug

01:08:30.210 --> 01:08:31.930
Da kommt jetzt hier ein Int raus

01:08:31.930 --> 01:08:34.850
Und keine schöne Ina-Benahmung

01:08:34.850 --> 01:08:36.870
Ja genau

01:08:36.870 --> 01:08:37.750
Ich denke auch

01:08:37.750 --> 01:08:38.950
Dass das ein Get ist

01:08:38.950 --> 01:08:41.690
Und der nächste Request ist dann das Upgrade

01:08:41.690 --> 01:08:43.250
Das heißt

01:08:43.250 --> 01:08:45.870
Das war hier nicht einfach nur zur Safety

01:08:45.870 --> 01:08:47.890
Dass es eben nur Gets durchgeht

01:08:47.890 --> 01:08:50.450
Sondern es ist tatsächlich wichtig für die Funktion

01:08:50.450 --> 01:08:50.570
Okay schauen wir mal

01:08:50.570 --> 01:08:50.690
Okay schauen wir mal

01:08:50.690 --> 01:08:51.890
Okay schauen wir mal

01:08:51.890 --> 01:08:51.930
Okay schauen wir mal

01:08:51.930 --> 01:08:52.050
Okay schauen wir mal

01:08:52.050 --> 01:08:52.170
Okay schauen wir mal

01:08:52.170 --> 01:08:52.210
Okay schauen wir mal

01:08:52.210 --> 01:08:52.370
Okay schauen wir mal

01:08:52.370 --> 01:08:52.410
Okay schauen wir mal

01:08:52.410 --> 01:08:52.530
Okay schauen wir mal

01:08:52.570 --> 01:08:55.530
Gut Chat

01:08:55.530 --> 01:08:55.570
Gut Chat

01:08:55.570 --> 01:08:55.610
Gut Chat

01:08:55.610 --> 01:08:55.630
Gut Chat

01:08:55.630 --> 01:08:56.310
Gut Chat

01:08:56.310 --> 01:08:56.730
Gut Chat

01:08:56.730 --> 01:09:00.610
In C++ was ist der Unterschied zwischen Punkt und Pfeil?

01:09:00.890 --> 01:09:02.750
Das ist Pointer-De-Referenzierung

01:09:02.750 --> 01:09:03.850
Und das hier ist

01:09:03.850 --> 01:09:06.910
Funktionsaufruf oder Methodenaufruf

01:09:06.910 --> 01:09:09.150
Ohne Pointer-Referenzierung

01:09:09.150 --> 01:09:10.410
De-Referenzierung vorher

01:09:10.410 --> 01:09:10.830
Also

01:09:10.830 --> 01:09:13.170
Zeig dir das

01:09:13.170 --> 01:09:16.270
Wenn du eine Variable anlegst

01:09:16.270 --> 01:09:22.230
Okay ich weiß wie wir das machen

01:09:22.230 --> 01:09:23.990
Wenn du eine Variable anlegst

01:09:23.990 --> 01:09:25.270
String

01:09:25.270 --> 01:09:25.450
String

01:09:25.450 --> 01:09:26.470
Hecke W

01:09:26.470 --> 01:09:34.510
gleich null dann rufst du das so auf mit einem punkt warum weil das eine ganz normale variable

01:09:34.510 --> 01:09:43.330
ist hier im kontext von deiner funktion quasi stack allocated nennt man das dann wird auch am

01:09:43.330 --> 01:09:49.810
ende der funktion automatisch wieder aufgeräumt wieder aufgeräumt punkt so wenn du jetzt

01:09:49.810 --> 01:09:55.670
allerdings sagt okay ich möchte nicht dass das ganze stack allocated ist sondern ich will dass

01:09:55.670 --> 01:10:05.840
das weiterlebt auch nach der funktion dann sagst du in c++ so was wie new string aber so geht das

01:10:05.840 --> 01:10:12.440
jetzt oder anscheinend geht das nicht ach so ja sternchen muss ich dann hin machen sternchen und

01:10:12.440 --> 01:10:19.930
jetzt hast du ein heap allocated string das wird nicht mehr automatisch aufgeräumt am ende der

01:10:19.930 --> 01:10:28.030
funktion das kannst du jetzt quasi irgendwo anders aufrufen und es bleibt bis du es explizit löscht

01:10:28.030 --> 01:10:28.290
da

01:10:28.930 --> 01:10:34.750
das ist jetzt allerdings ein pointer aufnen string und kein direkt direkt

01:10:34.750 --> 01:10:40.150
aufrufbareバ터s wii muss zu sagen jetzt keck we pointer der fö Pv 했z hierou jetzt

01:10:40.150 --> 01:10:45.990
kannst du darauf zugreifen also im prinzip was hier passiert ist als erstes wird als erstes

01:10:45.990 --> 01:10:53.010
wird keck dereferenziert und dann wird darauf zugegriffen also im prinzip ist der pfeil ja im mann setzt die Tastatur fest

01:10:53.010 --> 01:10:54.830
im prinzip ist der pfeil

01:10:54.830 --> 01:10:55.010
was dann Gao

01:10:55.010 --> 01:10:55.610
im prinzip ist der Pfeil

01:10:55.610 --> 01:10:55.950
ähm

01:10:55.950 --> 01:10:56.850
ja im prinzip ist der pfeili

01:10:56.850 --> 01:10:57.210
ähm

01:10:57.210 --> 01:10:57.450
ja im prinzip ist der pfeil

01:10:57.450 --> 01:10:57.650
ähm

01:10:57.650 --> 01:10:58.450
im berecher ist etwas möglicher als zuds greensHealth im prinzip ist der Pfeil

01:10:58.450 --> 01:11:00.090
ist der Pfeil ein Ersatz

01:11:00.090 --> 01:11:03.710
dafür. Chat, wenn ich

01:11:03.710 --> 01:11:05.690
Mist erzähle, müsst ihr mir sagen, weil ich bin nicht der

01:11:05.690 --> 01:11:07.570
große C++-Checker, was solche Details

01:11:07.570 --> 01:11:09.610
angeht. Also der

01:11:09.610 --> 01:11:11.610
Pfeil ist im Prinzip das gleiche

01:11:11.610 --> 01:11:14.090
wie das hier. Pointer-Dereferenzierung

01:11:14.090 --> 01:11:15.230
und dann drauf zugreifen

01:11:15.230 --> 01:11:17.630
und nachdem das halt so eklig zu

01:11:17.630 --> 01:11:19.790
schreiben ist, gibt es dafür einen Pfeil.

01:11:19.850 --> 01:11:21.330
Das macht aber im Prinzip das gleiche.

01:11:21.910 --> 01:11:23.550
Erst den Pointer dereferenzieren

01:11:23.550 --> 01:11:25.850
zu einem String und dann auf den String zugreifen.

01:11:28.620 --> 01:11:29.340
Ich verstehe nichts.

01:11:29.760 --> 01:11:31.280
Wenn du was Konkretes wissen

01:11:31.280 --> 01:11:32.100
willst, frag.

01:11:33.040 --> 01:11:34.820
Wahrscheinlich ist es für dich aber gerade so ein bisschen

01:11:34.820 --> 01:11:37.080
wie in der Schule im Unterricht, wo

01:11:37.080 --> 01:11:38.340
dich der Lehrer fragt zu und

01:11:38.340 --> 01:11:41.060
was hast du nicht verstanden?

01:11:41.520 --> 01:11:42.800
Und dann kommt als Antwort, ja alles.

01:11:44.460 --> 01:11:45.280
Da kann ich dir

01:11:45.280 --> 01:11:47.200
doch nicht helfen. Aber wenn du was wissen willst, frag.

01:11:47.560 --> 01:11:48.560
Dafür ist das Stream da.

01:11:52.340 --> 01:11:52.620
So.

01:11:54.100 --> 01:11:55.540
Jetzt wollen wir gucken, ob es jetzt funktioniert

01:11:55.540 --> 01:11:58.910
hier. Aha.

01:12:02.180 --> 01:12:02.580
Handshake

01:12:02.580 --> 01:12:04.500
done. Method 1, Method 0.

01:12:04.500 --> 01:12:04.780
Okay.

01:12:06.560 --> 01:12:08.600
Was ich jetzt nicht so ganz checke

01:12:08.600 --> 01:12:08.960
ist,

01:12:09.460 --> 01:12:12.620
warum wird das überhaupt mehrfach

01:12:12.620 --> 01:12:14.040
aufgerufen jetzt? Guck mal.

01:12:15.100 --> 01:12:16.820
Das wird dreimal aufgerufen.

01:12:18.800 --> 01:12:19.640
Frame 9?

01:12:24.300 --> 01:12:26.200
So ganz checken tue ich das noch nicht,

01:12:26.280 --> 01:12:27.300
was da passiert, ja?

01:12:38.740 --> 01:12:39.040
So.

01:12:45.070 --> 01:12:46.650
Was ist denn hier jetzt

01:12:46.650 --> 01:12:52.000
0? What?

01:12:59.900 --> 01:13:00.400
Delete?

01:13:01.460 --> 01:13:03.040
Ne, ich glaube, das ist einfach nur

01:13:03.040 --> 01:13:03.740
einfach nur Mist.

01:13:04.140 --> 01:13:04.860
Okay, das

01:13:05.460 --> 01:13:07.500
gibt ja so schon mal irgendwie halbwegs Sinn.

01:13:08.780 --> 01:13:10.500
Was ich jetzt nicht verstehe, ist.

01:13:11.900 --> 01:13:13.340
Also das passt ja soweit.

01:13:13.440 --> 01:13:14.580
Das passt ja soweit schon mal.

01:13:14.640 --> 01:13:15.960
Okay, alles, alles gut.

01:13:18.720 --> 01:13:20.400
Jetzt. Ich mache ja noch gar nichts weiter.

01:13:20.980 --> 01:13:22.540
Ich hole mir einfach nur die Länge raus.

01:13:22.780 --> 01:13:24.220
So die Länge erkennt er die Länge.

01:13:24.240 --> 01:13:25.460
Die Länge ist 9.

01:13:25.820 --> 01:13:27.360
9 ist korrekt.

01:13:28.000 --> 01:13:29.460
Länge 9 ist richtig.

01:13:30.400 --> 01:13:32.440
Warum auch immer was von 61

01:13:32.440 --> 01:13:34.480
da jetzt noch zwischendurch kommt, das checke

01:13:34.480 --> 01:13:35.420
ich nicht so ganz.

01:13:35.460 --> 01:13:37.040
Genau, wenn ich ehrlich bin.

01:13:52.700 --> 01:13:55.120
Ach guck mal, wenn.

01:13:56.040 --> 01:13:57.360
Das ist ja interessant.

01:13:59.620 --> 01:14:01.020
Wenn method 0 ist,

01:14:01.660 --> 01:14:04.100
dann wird auch gar keine URL mehr gesetzt.

01:14:04.520 --> 01:14:06.440
Also das ist wirklich so, wie als wäre es nicht

01:14:06.440 --> 01:14:08.180
mehr http jetzt da drüber.

01:14:15.380 --> 01:14:17.180
Das heißt, man kann man das eigentlich mal komplett

01:14:17.180 --> 01:14:17.680
knicken.

01:14:19.240 --> 01:14:21.040
Das okay, das wird noch spannend, bis das

01:14:21.040 --> 01:14:21.800
funktioniert.

01:14:22.360 --> 01:14:24.240
Aber das hier funzt schon mal hier.

01:14:24.240 --> 01:14:24.740
Guck mal.

01:14:25.360 --> 01:14:26.760
Das ist auch keine http mehr.

01:14:26.760 --> 01:14:27.800
Ja, man sieht es ja auch hier.

01:14:27.800 --> 01:14:28.000
Guck.

01:14:28.000 --> 01:14:28.960
Der Request ist leer.

01:14:28.960 --> 01:14:33.160
Im Endeffekt, das hier stimmt Frame längst 9.

01:14:33.340 --> 01:14:35.320
Ich gehe mal davon aus, dass dieser Mist hier nur

01:14:35.320 --> 01:14:38.740
passiert, weil ich am Anfang nicht richtig, weil ich hier

01:14:38.740 --> 01:14:41.080
auf den ersten Request nicht richtig reagiere, gehe ich

01:14:41.080 --> 01:14:41.880
einfach mal von aus.

01:14:41.880 --> 01:14:44.800
Deswegen machen wir mal machen wir mal weiter.

01:14:44.800 --> 01:14:46.900
Ich glaube, soweit ist es bis jetzt okay.

01:14:48.040 --> 01:14:50.720
Also dann, dann verschieben wir also die die die Request

01:14:50.720 --> 01:14:51.740
Uri, die brauche ich ja nicht.

01:14:51.740 --> 01:14:53.260
Die juckt mich eigentlich hier drinnen überhaupt nicht.

01:14:53.260 --> 01:14:55.460
Ich weiß, ich komme auf Slash wie es raus und gut ist.

01:14:56.040 --> 01:14:57.900
Methods kann man vielleicht noch mal ausgeben.

01:14:58.000 --> 01:15:02.960
Okay, so Websocket Frame Länge ist 9.

01:15:02.960 --> 01:15:03.700
Das ist richtig.

01:15:03.700 --> 01:15:05.920
Also können wir diesen anderen Krempel mal einkommentieren.

01:15:05.920 --> 01:15:08.500
Websocket Frame Länge größer 9.

01:15:09.040 --> 01:15:12.340
Okay, das sollte doch jetzt einfach funktionieren.

01:15:14.630 --> 01:15:17.930
Und wieso immer wissen wir ja, wir praktizieren hier ja

01:15:17.930 --> 01:15:19.250
Errorless Programming.

01:15:19.550 --> 01:15:21.650
Dementsprechend funktioniert ja immer alles zuerst.

01:15:22.430 --> 01:15:25.730
Deswegen, deswegen brauchen wir auch keine Tests, keine

01:15:25.730 --> 01:15:30.950
Dokumentation und keine Kommentare, weil wo niemals jemand

01:15:30.950 --> 01:15:34.430
Fehler beheben muss, brauchst du auch nichts dokumentieren.

01:15:35.190 --> 01:15:36.110
Easy eigentlich.

01:15:36.710 --> 01:15:40.270
Das sollten wir mal irgendwie unter die Leute bringen als

01:15:41.270 --> 01:15:44.690
neue Development Strategie und reich werden.

01:15:45.730 --> 01:15:46.910
Einfach keine Fehler machen.

01:15:46.910 --> 01:15:47.330
Easy.

01:15:47.930 --> 01:15:49.430
Jutschat, es hat funktioniert.

01:15:50.450 --> 01:15:52.190
Guck mal, er hat es ausgelesen.

01:15:52.610 --> 01:15:53.750
Wir haben alles richtig gemacht.

01:15:55.130 --> 01:16:06.680
Die FDP, FDP Flawless Driven Programming.

01:16:06.800 --> 01:16:08.200
Der Markt regelt das.

01:16:15.880 --> 01:16:17.020
Nice, das funktioniert.

01:16:17.020 --> 01:16:17.980
Ich bin begeistert.

01:16:18.280 --> 01:16:21.600
So, und jetzt und jetzt gucken wir mal, ob meine ursprüngliche Sache,

01:16:21.600 --> 01:16:24.240
die ich eigentlich vorhatte, nämlich das Memset wegzulassen.

01:16:26.500 --> 01:16:35.200
Ob das besser funzt jetzt so gut, dann lasst uns schon mal gucken,

01:16:35.200 --> 01:16:36.180
wie es weitergeht.

01:16:37.860 --> 01:16:40.820
Das haben wir alles durch Gott Package with Message.

01:16:41.700 --> 01:16:44.160
Da da da da so jetzt guckt er.

01:16:44.160 --> 01:16:46.000
Ob.

01:16:48.040 --> 01:16:53.980
Der Typ hatte TPD WS Dings Textes haben wir doch hier oben schon mal gekocht.

01:16:53.980 --> 01:16:55.220
Nee, da haben wir die nur gesetzt.

01:16:57.680 --> 01:17:02.480
Okay, aber wir setzen den doch selbst.

01:17:02.980 --> 01:17:09.000
Der muss immer Text sein, oder gucken wir mal mit im offiziellen Beispiel.

01:17:09.400 --> 01:17:10.720
Nee, die setzen das auch so.

01:17:15.330 --> 01:17:17.370
Vielleicht wird es hier beim Read überschrieben.

01:17:20.240 --> 01:17:21.080
Ja, schauen wir mal.

01:17:21.360 --> 01:17:24.040
Okay, also mal gucken, ob das noch funktioniert.

01:17:24.780 --> 01:17:25.500
Aufräumen.

01:17:25.500 --> 01:17:27.380
Keck Wait, Alter, aber brauchen wir sowas?

01:17:30.360 --> 01:17:30.940
Ja, eigentlich.

01:17:30.940 --> 01:17:32.480
Also ich muss auf jeden Fall den.

01:17:34.820 --> 01:17:36.560
Den Buffer aufräumen.

01:17:39.210 --> 01:17:41.690
Wobei jetzt mal eine blöde Frage.

01:17:41.690 --> 01:17:48.750
Ne, brauche ich das überhaupt?

01:17:50.750 --> 01:17:53.490
Kann ich nicht einfach sagen, ich weiß nicht, wir sind ja jetzt hier plus plus.

01:17:53.930 --> 01:17:55.450
Kann ich nicht einfach sagen New?

01:17:57.050 --> 01:17:57.810
Uint?

01:18:00.360 --> 01:18:06.030
Äh, sowas?

01:18:06.030 --> 01:18:06.790
Geht sowas?

01:18:08.790 --> 01:18:09.290
Ja, oder?

01:18:11.190 --> 01:18:12.030
Das ist doch viel schöner.

01:18:12.970 --> 01:18:14.090
Macht das das gleiche?

01:18:22.710 --> 01:18:23.330
Was ist denn da?

01:18:23.610 --> 01:18:25.870
Also die C++ Leute, ne?

01:18:26.490 --> 01:18:32.860
Die sagen ja immer, dass das Memset will ich nicht.

01:18:32.860 --> 01:18:35.020
Das wollte ich nur für hier oben und da mache ich das.

01:18:39.040 --> 01:18:40.720
Ach so, du meinst, dass es genullt ist?

01:18:42.460 --> 01:18:44.460
Stimmt, ist das nicht genullt?

01:18:45.280 --> 01:18:46.340
Wenn ich es in New int?

01:18:46.760 --> 01:18:47.880
Also die sagen ja immer.

01:18:47.880 --> 01:18:53.420
Die ganzen C++ Checker-Mens, die sagen ja immer, man soll New und so eigentlich nicht verwenden.

01:18:55.100 --> 01:19:04.020
Können wir nicht, weil C++ irgendwie sowas, irgendwie, keine Ahnung, irgendwas anderes für verwenden.

01:19:04.020 --> 01:19:07.720
Gibt es da nicht irgendwas, irgendwas C++ mäßiges dafür?

01:19:14.720 --> 01:19:25.740
Also quasi, ja, weiß ich nicht.

01:19:27.240 --> 01:19:28.420
Ja doch, oder?

01:19:28.540 --> 01:19:31.740
Wir können doch sagen, hier wir wollen Standard Array.

01:19:33.680 --> 01:19:34.240
Array.

01:19:34.680 --> 01:19:35.680
Waffe.

01:19:35.680 --> 01:19:36.680
Haben.

01:19:36.680 --> 01:19:37.680
So.

01:19:37.680 --> 01:19:38.680
Geht so nicht, okay.

01:19:38.680 --> 01:19:39.680
Äh, ne.

01:19:39.680 --> 01:19:40.680
Äh, wie benutzt man das?

01:19:40.680 --> 01:19:41.680
Ja, wir haben ja die ganz normale C++ Standard Array.

01:19:41.680 --> 01:19:42.680
Ach so, da muss man die Größe angeben.

01:19:42.680 --> 01:19:48.640
Das geht nicht.

01:19:48.640 --> 01:19:49.640
Ne, das funktioniert nicht.

01:19:49.640 --> 01:19:50.640
Das, das klappt so nicht.

01:19:50.640 --> 01:19:51.640
Ne, das, das funktioniert nicht.

01:19:51.640 --> 01:19:52.640
Brauchen wir dann Vektor oder was brauchen wir da?

01:19:52.640 --> 01:19:53.640
Vektor nicht.

01:19:53.640 --> 01:19:54.640
Ich versuche es mal C++ig zu machen.

01:19:54.640 --> 01:20:11.640
Ja, Vektor auf Typ Uint.

01:20:11.640 --> 01:20:15.680
Okay.

01:20:15.680 --> 01:20:16.680
So.

01:20:16.680 --> 01:20:17.680
Ne.

01:20:17.680 --> 01:20:25.530
Okay, jetzt bin ich, jetzt bin ich überfragt, wie man, wie man sowas C++-Style-mäßig gescheit macht.

01:20:25.530 --> 01:20:26.530
Okay.

01:20:26.530 --> 01:20:27.530
So.

01:20:27.530 --> 01:20:28.530
Ne.

01:20:28.530 --> 01:20:29.530
Okay.

01:20:29.530 --> 01:20:35.530
Jetzt kann ich wahrscheinlich sagen Size oder sowas hier, ne.

01:20:35.530 --> 01:20:38.530
C++ wäre Initialisierung nur mit.

01:20:38.530 --> 01:20:39.530
Ja, wie jetzt?

01:20:39.530 --> 01:20:40.530
Wie, wie würde ich das machen?

01:20:40.530 --> 01:20:42.530
Kann ich jetzt sagen Size?

01:20:42.530 --> 01:20:43.530
Ne.

01:20:43.530 --> 01:20:44.530
Set?

01:20:44.530 --> 01:20:45.530
Äh, Resize?

01:20:45.530 --> 01:20:46.530
Resize.

01:20:46.530 --> 01:20:47.530
Resize?

01:20:47.530 --> 01:21:01.420
Und jetzt brauchen wir allerdings hier einen Uint-Pointer.

01:21:01.420 --> 01:21:04.420
Ja, und äh, Two-Pointer, gibt es sowas?

01:21:04.420 --> 01:21:05.420
Äh.

01:21:05.420 --> 01:21:06.420
Ja.

01:21:06.420 --> 01:21:07.420
Ja.

01:21:07.420 --> 01:21:08.420
Ja.

01:21:08.420 --> 01:21:11.950
Da ist Zeta.

01:21:11.950 --> 01:21:12.950
Ja.

01:21:12.950 --> 01:21:13.950
Auf ich das jetzt so schöner finde ...

01:21:13.950 --> 01:21:21.680
Ich, wir haben C++23 haben wir.

01:21:21.680 --> 01:21:25.280
Also ob ich das jetzt so schöner finde, bin ich mir unschlüssig, ehrlich gesagt.

01:21:25.280 --> 01:21:30.740
Ich glaube, ich find das nicht schöner.

01:21:30.740 --> 01:21:36.820
Aber ich bin ja auch hier ein bisschen um C++-Kram zu lernen immer mal wieder.

01:21:36.820 --> 01:21:41.390
Ne, kann ich nicht, weil ich die Size hier oben noch nicht weiß.

01:21:41.390 --> 01:21:42.390
Wobei.

01:21:42.390 --> 01:21:43.390
Na klar.

01:21:43.390 --> 01:21:45.960
Weiß ich die Size.

01:21:45.960 --> 01:21:46.960
Moment.

01:21:46.960 --> 01:21:47.960
Ich bin doch blöd.

01:21:47.960 --> 01:21:48.960
Ich weiß die Size doch von vorher.

01:21:48.960 --> 01:21:49.960
Stimmt.

01:21:49.960 --> 01:21:50.960
говорить.

01:21:50.960 --> 01:21:52.100
Ich weiß die Size doch.

01:21:52.300 --> 01:21:53.400
Ich weiß doch die Size hier.

01:21:58.900 --> 01:22:00.200
Da können wir auch mal ein Array...

01:22:00.200 --> 01:22:01.080
Wo kann man...

01:22:01.080 --> 01:22:02.060
Ah, man kann...

01:22:02.060 --> 01:22:07.950
Was, glaube ich, nicht geht, ist, dass ich jetzt sage...

01:22:07.950 --> 01:22:08.410
Hier, oder?

01:22:09.610 --> 01:22:12.030
Nee, das funktioniert nicht an der Stelle.

01:22:15.750 --> 01:22:18.690
Aber ich kann einen Vektor nehmen mit...

01:22:18.690 --> 01:22:19.450
Und...

01:22:19.450 --> 01:22:20.830
Ist das hier die Größe?

01:22:27.950 --> 01:22:29.730
Kann man hier jetzt einfach die Größe angeben?

01:22:31.570 --> 01:22:32.310
Okay, nice.

01:22:32.390 --> 01:22:33.650
Jetzt kann man uns das nämlich hier plus 1.

01:22:33.650 --> 01:22:35.910
Jetzt kann man uns nämlich das Resizen sparen.

01:22:38.560 --> 01:22:42.280
Nee, können wir uns nicht, weil wir erst hier unten checken, ob es Größe 1 ist.

01:22:43.260 --> 01:22:45.340
Okay, das war schon besser, so wie ich es gemacht habe.

01:22:47.700 --> 01:22:49.540
Ich glaube, ich mache das doch mit C-Arrays.

01:22:51.200 --> 01:22:53.740
Aber das müsste ja so jetzt auch funktionieren.

01:22:58.130 --> 01:22:58.930
Mein schön, ist es nett.

01:22:58.990 --> 01:23:00.530
Ich will einfach nur mal testen, ob es funktioniert.

01:23:03.210 --> 01:23:04.410
Was hat jemand hier noch geschrieben?

01:23:04.490 --> 01:23:05.390
Man kann es mit was?

01:23:05.870 --> 01:23:07.130
Mit Unique Point...

01:23:07.130 --> 01:23:07.730
Mit what?

01:23:12.980 --> 01:23:14.440
Unique Pointer U8.

01:23:14.740 --> 01:23:16.480
Jetzt wird es aber...

01:23:16.500 --> 01:23:26.250
Wir können es doch einfach mit C-Style-Arrays machen, weil...

01:23:26.250 --> 01:23:27.530
So, schauen wir mal, ob das jetzt funzt.

01:23:28.510 --> 01:23:29.630
Q-Chat, ja, hat funktioniert.

01:23:29.910 --> 01:23:31.050
Sogar das New Line ist drin.

01:23:31.990 --> 01:23:35.110
Also schöner finde ich es jetzt ehrlich gesagt auch nicht, wenn ich ehrlich bin.

01:23:44.750 --> 01:23:45.590
Aha, okay.

01:23:47.530 --> 01:23:50.010
Guck mal, ich brauche mal das, was der Gyrosgeier sagt.

01:23:51.870 --> 01:23:52.070
Ja.

01:23:53.470 --> 01:23:55.170
Aber die Size habe ich ja noch nicht.

01:24:05.020 --> 01:24:06.720
Das ist ja echt abartig, Alter.

01:24:15.480 --> 01:24:16.960
Ich habe jetzt ja die Size nicht.

01:24:16.960 --> 01:24:21.110
Warum ist das überhaupt ein Ding?

01:24:21.270 --> 01:24:22.290
Warum geht das hier?

01:24:22.350 --> 01:24:23.090
Was ist das jetzt?

01:24:23.150 --> 01:24:24.110
Buffer überhaupt für einen...

01:24:25.890 --> 01:24:26.630
Wisst ihr was?

01:24:26.870 --> 01:24:27.490
Scheiß drauf.

01:24:28.370 --> 01:24:29.050
Scheiß drauf.

01:24:39.860 --> 01:24:41.680
Wir machen das mit C-Style-Array.

01:24:44.200 --> 01:24:47.120
Das andere ist ja wirklich mal voll für den Arsch.

01:24:54.380 --> 01:24:54.500
Oder?

01:24:54.720 --> 01:24:58.020
Wobei, komm Leute, das mit dem Vector ist doch gar nicht so eklig gewesen, oder?

01:25:09.380 --> 01:25:10.180
Ist denn jetzt?

01:25:15.890 --> 01:25:19.610
Nein, wobei, da muss ich mich um 0 Termination und so...

01:25:19.610 --> 01:25:20.610
Sachen nicht kümmern.

01:25:20.690 --> 01:25:21.810
Ich glaube, das ist okay.

01:25:24.720 --> 01:25:25.720
Ich glaube, das ist gut so.

01:25:25.920 --> 01:25:26.220
Ja.

01:25:27.440 --> 01:25:28.440
Ich glaube, das können wir so lassen.

01:25:43.960 --> 01:25:44.860
Benutzt du was?

01:25:44.920 --> 01:25:45.460
Rule of...

01:25:45.520 --> 01:25:46.460
Was soll das sein?

01:25:50.260 --> 01:25:52.380
Okay, also das ist in Ordnung so.

01:25:53.420 --> 01:25:55.140
Okay, das können wir so lassen.

01:25:55.360 --> 01:25:56.600
Ich will jetzt erst mal, dass es funktioniert.

01:25:56.660 --> 01:25:57.980
Schön machen können wir das dann immer noch.

01:25:58.980 --> 01:25:59.660
Also...

01:26:08.480 --> 01:26:10.540
Und jetzt müssen wir sagen Return, weil...

01:26:12.360 --> 01:26:15.320
ESP, keine Ahnung, ESP Fail oder so.

01:26:15.400 --> 01:26:15.720
Mit was?

01:26:15.720 --> 01:26:17.400
Mit was returnt denn der hier?

01:26:19.940 --> 01:26:23.340
Ach so, der returnt natürlich mit dem Error, der da oben...

01:26:25.300 --> 01:26:26.540
So, und jetzt müssen wir Free?

01:26:27.540 --> 01:26:28.400
Nee, haha.

01:26:29.040 --> 01:26:30.640
Jetzt muss ich nix freeen, oder?

01:26:31.860 --> 01:26:35.180
Das wird doch automatisch gefreed, sobald es out of scope geht.

01:26:35.640 --> 01:26:36.700
Dann ist das schon mal besser.

01:26:37.680 --> 01:26:39.900
Als das selbst allocated Array.

01:26:39.940 --> 01:26:40.820
Da muss man sich nicht mehr drum kümmern.

01:26:41.140 --> 01:26:44.740
Also, sobald ich hier returne, freed sich der Buffer automatisch.

01:26:45.700 --> 01:26:46.320
Hoffe ich mal.

01:26:46.560 --> 01:26:50.300
Hoffe ich mal.

01:26:50.400 --> 01:26:52.400
Hoffe ich mal, dass der das macht.

01:26:55.900 --> 01:26:57.900
So, Receive Length.

01:27:05.540 --> 01:27:06.040
Okay.

01:27:06.940 --> 01:27:07.940
So, das Funst.

01:27:07.980 --> 01:27:08.980
Okay, wie geht's weiter?

01:27:09.540 --> 01:27:11.040
Also, das müsst ihr jetzt alles so tun.

01:27:17.440 --> 01:27:18.720
Doch auf den ESP Dingern.

01:27:19.880 --> 01:27:22.040
Die haben relativ viel modernes Zeug.

01:27:22.080 --> 01:27:24.200
Die haben sogar zum coolsten Teil schon...

01:27:24.960 --> 01:27:25.960
Kann ich dir zeigen?

01:27:28.500 --> 01:27:30.680
Die unterstützen sogar C++23.

01:27:31.340 --> 01:27:32.820
Aber nicht alles, nicht alles.

01:27:33.520 --> 01:27:35.160
Also Format ist beispielsweise nicht da.

01:27:35.240 --> 01:27:38.560
Die haben auch ein paar andere, bisschen obskurere...

01:27:40.860 --> 01:27:45.160
Ja stimmt, die brauchen also für super ultra low power, brauchen die ein bisschen zu viel Strom.

01:27:46.240 --> 01:27:48.080
Wobei man, wenn man die mit Deep Sleep...

01:27:48.120 --> 01:27:48.840
Ah, du hast schon recht.

01:27:49.140 --> 01:27:56.940
Aber was geht ist, wenn man jetzt nix braucht, was permanent läuft, sondern nur alle vier Stunden mal aufwacht und einen Sensor ausliest und dann wieder schickt.

01:27:57.440 --> 01:28:05.120
Dann funktioniert das mit Deep Sleep, wenn man einen Controller hat, ohne LEDs und ohne Spannungswerte.

01:28:05.200 --> 01:28:06.920
Die versorgt werden sowas ziemlich gut.

01:28:06.960 --> 01:28:16.560
Da kannst du das zwei, drei Jahre laufen lassen mit so einer normalen 800 Mikroampere Stunden Akku.

01:28:21.540 --> 01:28:23.220
Ja, Rauchmelder ist wieder was anderes.

01:28:23.520 --> 01:28:27.460
Rauchmelder muss ja viel aktiver sein.

01:28:29.580 --> 01:28:34.240
Das alle vier Stunden Rauch melden und dann wieder Deep Sleep ist nicht so gut für einen Rauchmelder.

01:28:35.400 --> 01:28:36.320
Monka Smoke.

01:28:37.640 --> 01:28:39.320
Hatten wir nicht sogar mal einen Emote dafür?

01:28:41.730 --> 01:28:42.350
Mikroampere.

01:28:43.030 --> 01:28:44.430
Nicht Milliampere, Mikroampere.

01:28:47.720 --> 01:28:48.460
Achso, Moment, sorry.

01:28:49.060 --> 01:28:55.540
Der Akku hat Milliampere Stunden, der Verbrauch im Deep Sleep sind Mikroampere.

01:28:55.540 --> 01:28:57.120
Ja, kommt mal durcheinander.

01:29:04.820 --> 01:29:05.920
So, was macht der denn jetzt hier?

01:29:06.000 --> 01:29:09.440
Hier liest er den Text aus und jetzt antwortet er drauf.

01:29:09.640 --> 01:29:11.480
So, jetzt, da wird es jetzt nochmal interessant.

01:29:12.020 --> 01:29:13.680
Träger Async Send.

01:29:16.320 --> 01:29:17.200
Äh, what?

01:29:17.400 --> 01:29:18.680
Das muss ich mir mal rauskopieren.

01:29:20.980 --> 01:29:22.020
So, also Buffer.

01:29:23.460 --> 01:29:24.860
So, das hier unten können wir auslesen.

01:29:24.860 --> 01:29:28.060
Wir kommen ja nur hier hin, wenn das Auslesen funktioniert hat.

01:29:33.430 --> 01:29:35.450
Glaube ich, wenn wir das richtig gemacht haben.

01:29:38.730 --> 01:29:39.270
Ja, genau.

01:29:40.990 --> 01:29:43.550
Wir kommen hier nur hin, wenn das hier funktioniert hat.

01:29:44.770 --> 01:29:48.830
So, jetzt machen wir das hier.

01:29:49.170 --> 01:29:52.230
Also, was ist hier am passieren?

01:29:55.920 --> 01:29:57.720
Async Respark.

01:29:59.280 --> 01:30:01.900
Moment, nee, das hat der Typ angelegt.

01:30:01.900 --> 01:30:03.900
Das, dann müssen wir uns mal das offiz...

01:30:03.900 --> 01:30:04.680
Das offiz...

01:30:04.680 --> 01:30:05.900
Moment, das legen die hier auch an.

01:30:05.940 --> 01:30:07.560
Das hat er einfach aus dem Beispiel kopiert.

01:30:08.760 --> 01:30:11.060
Dann gucken wir uns mal das offizielle Beispiel an hier.

01:30:11.140 --> 01:30:12.760
Träger Async Send.

01:30:14.020 --> 01:30:15.940
So, was, was macht der hier jetzt?

01:30:17.080 --> 01:30:18.660
HTTP Request to Socket.

01:30:19.020 --> 01:30:21.680
Okay, ich vermute, was hier passiert ist.

01:30:22.080 --> 01:30:29.280
Der Request-Händler wird aufgelöst zu einem TCP-Socket-Endpunkt.

01:30:29.580 --> 01:30:31.880
Den man dann sich speichern kann und da drauf eine Antwort schickt.

01:30:31.880 --> 01:30:33.300
Irgendwas in der Richtung.

01:30:34.060 --> 01:30:36.160
Und dann HTTPT-Queue-Work.

01:30:36.580 --> 01:30:39.900
Gut, man möchte ja nicht synchron antworten, dass es hängt.

01:30:40.280 --> 01:30:43.140
Sondern man legt das jetzt in irgendeine Queue, die dann abgearbeitet wird.

01:30:43.300 --> 01:30:45.220
Okay, leuchtet auch ein.

01:30:51.620 --> 01:30:53.640
Okay, also wie funktioniert das jetzt?

01:31:01.870 --> 01:31:03.470
Also, was muss man hier übergeben?

01:31:04.030 --> 01:31:05.450
Man übergibt hier einen Handle.

01:31:06.090 --> 01:31:07.990
Das Handle ist...

01:31:07.990 --> 01:31:08.410
Handle?

01:31:09.210 --> 01:31:10.110
Request-Händle?

01:31:12.030 --> 01:31:12.590
Okay.

01:31:12.590 --> 01:31:14.470
Dann übergibt man eine Methode.

01:31:14.550 --> 01:31:16.310
Die aufgerufen werden soll.

01:31:16.850 --> 01:31:18.230
Und jetzt übergibt man...

01:31:18.230 --> 01:31:20.810
Ah, jetzt übergibt man irgendwas.

01:31:23.810 --> 01:31:24.910
Irgendeinen Kontext.

01:31:28.340 --> 01:31:29.020
Okay, macht Sinn.

01:31:30.020 --> 01:31:31.840
Jetzt weiß ich auch, warum die das in den Struck packen.

01:31:34.300 --> 01:31:35.460
Jetzt verstehe ich das auch.

01:31:35.660 --> 01:31:35.860
Okay.

01:31:37.700 --> 01:31:42.180
Weil ich könnte wetten, hier in dem, was dann aufgerufen wird.

01:31:43.580 --> 01:31:44.980
Ja, Queue, wo ist das denn?

01:31:45.460 --> 01:31:46.380
Hier, Send.

01:31:46.380 --> 01:31:49.380
Hier wird das wieder ausgewählt.

01:31:49.760 --> 01:31:54.160
Und zwar, genau, holen sie sich jetzt das Handle raus.

01:31:56.670 --> 01:31:58.410
Oh, ey, okay, das hier ist die Antwort.

01:31:58.890 --> 01:32:00.550
Die Websocket-Antwort, die geschickt wird.

01:32:01.550 --> 01:32:04.450
Ne, jetzt weiß ich, was der macht.

01:32:05.150 --> 01:32:09.090
Der schickt die Antwort an alle connecteten Websocket-Clients.

01:32:09.550 --> 01:32:13.950
Oh, da können wir ja auch gleich sehen, ob Websockets, so Broadcast-Messages funktionieren.

01:32:15.510 --> 01:32:18.910
Der schickt die an alle connecteten Websocket-Clients.

01:32:21.120 --> 01:32:22.000
Ach so.

01:32:22.000 --> 01:32:22.120
Oh.

01:32:22.640 --> 01:32:26.260
Jetzt verstehe ich auch, warum der sich den Kram merken muss.

01:32:29.850 --> 01:32:31.950
Wofür braucht er dann dieses Ding jetzt nochmal hier?

01:32:32.150 --> 01:32:32.670
FD.

01:32:35.540 --> 01:32:36.720
Äh, gar nicht?

01:32:37.300 --> 01:32:38.460
Er braucht es gar nicht?

01:32:40.440 --> 01:32:42.120
Ja, dann können wir uns das auch schenken, oder?

01:32:44.640 --> 01:32:45.220
Lul weh.

01:32:45.540 --> 01:32:50.540
Der braucht im Prinzip nur das Client-Handle.

01:32:50.680 --> 01:32:51.340
Braucht er das überhaupt?

01:32:55.480 --> 01:32:55.700
Ja.

01:32:57.040 --> 01:33:01.820
Das braucht er, damit er überhaupt eine Antwort schenken kann.

01:33:05.510 --> 01:33:06.510
Was muss da rein?

01:33:07.510 --> 01:33:08.970
Vielleicht brauche ich das nämlich auch gar nicht.

01:33:09.090 --> 01:33:09.470
Warte mal.

01:33:10.490 --> 01:33:11.670
Was muss da rein?

01:33:16.870 --> 01:33:17.810
HTTPD-Handle.

01:33:19.310 --> 01:33:20.090
HTTPD-Handle.

01:33:21.790 --> 01:33:24.370
Also das da im Prinzip, was da drinne steht.

01:33:26.010 --> 01:33:28.050
Und das ist nicht das...

01:33:28.050 --> 01:33:30.530
Doch, das ist der Websocket.

01:33:31.270 --> 01:33:33.150
Ja, den habe ich doch hier in meiner Klasse drinstehen.

01:33:33.190 --> 01:33:33.770
Dann ist doch easy.

01:33:34.830 --> 01:33:38.350
Dann muss ich dieses ganze Geschiss hier doch gar nicht machen, was der macht.

01:33:38.930 --> 01:33:41.270
Dann ist doch eigentlich ganz einfach.

01:33:42.290 --> 01:33:44.110
So, dann...

01:33:44.110 --> 01:33:47.150
So, das ist erstmal 0, bis auf weiteres.

01:33:48.010 --> 01:33:48.930
Und das hier gibt...

01:33:51.440 --> 01:33:53.500
So, was braucht man da als Argumente für?

01:33:55.140 --> 01:33:56.340
Void, ja, irgendetwas.

01:33:56.500 --> 01:33:56.680
Okay.

01:33:58.220 --> 01:34:00.440
Void, Sternchen, Kontext.

01:34:01.360 --> 01:34:01.500
So.

01:34:02.940 --> 01:34:05.320
Und das war es dann im Prinzip.

01:34:05.540 --> 01:34:07.820
So, und jetzt müssen wir uns überlegen, wie kann man...

01:34:07.820 --> 01:34:09.460
Also das können wir alles ignorieren hier.

01:34:09.460 --> 01:34:09.520
Ja.

01:34:10.440 --> 01:34:11.880
Bla, blub, für LED-Handling.

01:34:11.960 --> 01:34:12.800
Das wollen wir nicht haben.

01:34:12.920 --> 01:34:14.120
Buffer, LED-State.

01:34:15.280 --> 01:34:16.680
Du musst 0 Pointer benutzen.

01:34:16.780 --> 01:34:16.980
Warum?

01:34:17.900 --> 01:34:19.000
Ist doch genau das Gleiche.

01:34:28.450 --> 01:34:29.650
Ist das Best Practice?

01:34:29.650 --> 01:34:29.970
Ich...

01:34:29.970 --> 01:34:32.310
Ich calle...

01:34:32.310 --> 01:34:34.010
Das ist Kekalu Best Practice.

01:34:38.320 --> 01:34:39.980
Moment, wo hat der jetzt Server her?

01:34:44.760 --> 01:34:46.180
Ach, hier oben hat der Server her.

01:34:46.340 --> 01:34:46.500
Okay.

01:34:54.880 --> 01:34:56.300
Ja gut, das haben wir ja hier auch.

01:34:56.480 --> 01:34:56.680
Also.

01:34:57.380 --> 01:34:58.220
Dann machen wir das doch mal.

01:34:58.240 --> 01:34:58.820
Holen wir uns mal den...

01:35:00.080 --> 01:35:01.720
Holen wir uns jetzt mal Client List.

01:35:04.900 --> 01:35:05.600
Client List?

01:35:05.620 --> 01:35:07.380
Und dann sendet er die Messages.

01:35:07.500 --> 01:35:09.380
Das ist jetzt das im Prinzip, was wir machen wollen.

01:35:10.040 --> 01:35:11.780
Der sollte mir jetzt irgendwas antworten.

01:35:12.220 --> 01:35:12.480
Äh.

01:35:18.970 --> 01:35:19.390
Äh.

01:35:20.530 --> 01:35:24.430
Kann das sein, dass meine IDE leicht überfordert ist mit...

01:35:24.430 --> 01:35:25.570
Autoformat?

01:35:27.350 --> 01:35:28.130
So ein bisschen?

01:35:30.820 --> 01:35:32.380
Oder habe ich einen Sonntagsfehler drin?

01:35:36.160 --> 01:35:37.520
Ich glaube, ich habe einen Sonntagsfehler drin, oder?

01:35:44.340 --> 01:35:45.820
Ich glaube, ich habe einen Sonntagsfehler drin.

01:35:45.960 --> 01:35:46.520
Lass mal kurz gucken.

01:35:47.340 --> 01:35:48.680
Also das brauchen wir auf jeden Fall.

01:35:49.340 --> 01:35:49.820
Ey, ey, ey!

01:35:50.060 --> 01:35:51.020
What the fuck?

01:35:54.210 --> 01:35:55.150
Da ist ja kein Sonntagsfehler drin.

01:35:55.170 --> 01:36:01.040
Hä, jetzt kannst du das auf einmal?

01:36:03.600 --> 01:36:04.660
Alter, Whistle Studio.

01:36:04.980 --> 01:36:05.280
Please.

01:36:05.580 --> 01:36:06.480
Was machst du denn da?

01:36:09.490 --> 01:36:09.830
No!

01:36:10.770 --> 01:36:12.130
Was wird hier formatiert, man?

01:36:13.290 --> 01:36:16.550
Was ist das für eine ultra hässliche Formatierung, man?

01:36:20.410 --> 01:36:22.190
Packt das Lambda mal in eine extra Zeile.

01:36:22.930 --> 01:36:23.530
So meinst du?

01:36:24.830 --> 01:36:25.570
Juckt das nicht.

01:36:27.870 --> 01:36:28.450
Juckt das nicht.

01:36:29.230 --> 01:36:29.650
Vielleicht so?

01:36:30.710 --> 01:36:31.090
Das nicht.

01:36:38.410 --> 01:36:39.930
Das ist unfähig, das Ding, ey.

01:36:41.190 --> 01:36:41.950
Kann ich so machen?

01:36:42.330 --> 01:36:42.490
Ne.

01:36:42.490 --> 01:36:43.330
Das ist das Format.

01:36:43.330 --> 01:36:44.350
Das Format hier ist immer wieder gleich.

01:36:52.900 --> 01:36:55.120
Du meinst es nicht inline schreiben, sondern hier.

01:36:55.720 --> 01:37:01.460
Ja, ist der Übersichtshalber wahrscheinlich die bessere Variante.

01:37:06.790 --> 01:37:07.390
Machen wir es mal so.

01:37:07.550 --> 01:37:07.990
Ja, hast du recht.

01:37:09.090 --> 01:37:09.450
Moment.

01:37:10.090 --> 01:37:11.350
Dann muss ich jetzt aber auch wieder hier.

01:37:20.800 --> 01:37:21.620
Kannst du es jetzt besser?

01:37:22.420 --> 01:37:22.820
Ja, okay.

01:37:22.880 --> 01:37:23.800
Das sieht schon besser aus.

01:37:27.680 --> 01:37:29.240
Aber kann man das vielleicht auf einer Zeile machen?

01:37:30.160 --> 01:37:32.060
Will ich das returnen an der Stelle?

01:37:40.900 --> 01:37:41.840
Moment, hier, ja.

01:37:42.160 --> 01:37:42.640
Ja, das ist okay.

01:37:49.940 --> 01:37:50.620
Okay, Server.

01:37:50.740 --> 01:37:51.100
Also.

01:37:51.120 --> 01:37:57.580
Jetzt wird es eklig, weil ja immer noch C++ und C Interop teilweise richtiger Paintschamp ist.

01:37:58.280 --> 01:38:02.120
Also, wenn ich jetzt will, dass ich...

01:38:02.900 --> 01:38:05.700
Ich muss das jetzt static machen, dann funktioniert es vielleicht besser.

01:38:08.410 --> 01:38:08.710
Also.

01:38:09.710 --> 01:38:10.010
Den Server...

01:38:12.510 --> 01:38:14.050
Was muss ich denn hier rein...

01:38:14.050 --> 01:38:15.010
Den HTTPD...

01:38:15.890 --> 01:38:19.090
So, bei mir heißt das Underscore, glaube ich, Server.

01:38:21.090 --> 01:38:21.330
Ne.

01:38:21.330 --> 01:38:21.370
Ne.

01:38:21.370 --> 01:38:23.730
Es ist einfach nur Server.

01:38:24.730 --> 01:38:32.340
So, und das funktioniert jetzt nicht, weil der mir jetzt gleich sagen wird, dass ich das nicht capturen kann.

01:38:33.200 --> 01:38:36.140
So, und wenn ich das capturen will, dann muss man hier so ein Und davor machen.

01:38:36.200 --> 01:38:37.100
Das ist richtig abartig.

01:38:37.620 --> 01:38:39.040
Und dann funzt es aber nicht.

01:38:42.840 --> 01:38:43.560
Äh, was?

01:38:44.820 --> 01:38:45.820
Okay, whatever.

01:38:46.400 --> 01:38:46.840
Das...

01:38:46.840 --> 01:38:49.600
Und dann funktioniert hier unten der Händler wieder nicht.

01:38:49.940 --> 01:38:52.560
Das heißt, wir müssen das im Prinzip static machen.

01:38:53.420 --> 01:38:54.600
Das geht gar nicht anders.

01:38:55.300 --> 01:38:56.000
Kann ich...

01:38:56.000 --> 01:38:57.080
Kann ich sagen static?

01:38:57.280 --> 01:38:58.380
Funzt das an der Stelle dann?

01:39:05.960 --> 01:39:08.500
Also, das heißt, wir müssen das hier...

01:39:08.500 --> 01:39:14.320
Müssen wir zu einer static Function machen.

01:39:15.440 --> 01:39:15.880
Oder?

01:39:17.860 --> 01:39:18.960
Müssen wir das?

01:39:21.980 --> 01:39:22.420
Ne.

01:39:22.960 --> 01:39:24.160
Müssen wir nicht.

01:39:25.280 --> 01:39:25.980
Wartet mal.

01:39:27.320 --> 01:39:28.980
Wir probieren das jetzt mal auf zwei Arten.

01:39:29.080 --> 01:39:29.580
Ich habe eine Idee.

01:39:30.260 --> 01:39:30.900
So, also.

01:39:31.400 --> 01:39:33.860
Wir können nämlich als User-Kontext auch this übergeben.

01:39:35.360 --> 01:39:36.060
Lass mal was ausprobieren.

01:39:36.160 --> 01:39:36.260
Also.

01:39:36.840 --> 01:39:52.480
Wir machen jetzt hier, äh, private, static, void, oh, äh, oh, WS-Händler, so, da kommt

01:39:52.480 --> 01:40:09.260
der Kram hier rein, äh, alter, wie lahm die Auto, die Auto-Formatierung ist, so, ich will

01:40:09.260 --> 01:40:16.640
hier übergeben, httpd-Server, so, und der Rest, den Rest kann man ja hier selbst anlegen.

01:40:16.640 --> 01:40:20.180
So, mal gucken, ob das jetzt theoretisch überhaupt kompilieren würde.

01:40:20.180 --> 01:40:24.020
Max-Clients ist, okay, das da, kopieren wir uns mal aus.

01:40:24.940 --> 01:40:27.280
Okay, ob das jetzt, schauen wir mal, ob das überhaupt bilden würde.

01:40:27.420 --> 01:40:28.180
Ich habe da so meine Zweifel.

01:40:28.920 --> 01:40:40.520
Ne, weil, achso, WS-Händler.

01:40:42.180 --> 01:40:42.980
WS-Händler?

01:40:44.840 --> 01:40:50.070
Äh, nö, es geht.

01:40:53.100 --> 01:40:53.840
Es funzt.

01:41:00.730 --> 01:41:03.190
So muss man das wahrscheinlich angeben, das Auto-Complete-Funst.

01:41:03.550 --> 01:41:04.150
Okay, so.

01:41:04.690 --> 01:41:08.150
Jetzt, okay, jetzt bin ich mal gespannt, ob das, ob das klappt.

01:41:08.550 --> 01:41:10.130
Also, das hier kann...

01:41:10.130 --> 01:41:10.770
Definition.

01:41:10.790 --> 01:41:13.310
Ich weiß nicht, was er für Schmerzen hat.

01:41:14.690 --> 01:41:18.650
So, und jetzt müssen wir uns noch gucken, wie das hier, hier wird zurück, hier wird

01:41:18.650 --> 01:41:19.510
was zurückgeschickt.

01:41:21.800 --> 01:41:27.620
Und wenn das jetzt funktioniert, HD, was war HD nochmal?

01:41:32.410 --> 01:41:33.510
HTTPD-Händel.

01:41:34.290 --> 01:41:38.410
Ja, ist denn das HTTPD-Händel gleich dem Server-Händel?

01:41:40.250 --> 01:41:41.690
Wahrscheinlich nicht, oder?

01:41:45.480 --> 01:41:49.660
Dann brauche ich doch was, wie das übergeben wird.

01:41:49.660 --> 01:41:49.780
Was?

01:41:52.410 --> 01:41:52.850
Schauen wir mal.

01:41:53.590 --> 01:41:55.650
Ich glaube nicht, dass es gleich dem Server-Händel ist.

01:41:55.730 --> 01:41:56.450
Schauen wir, gucken wir mal.

01:41:58.250 --> 01:41:59.770
WS-Packet ist undefined.

01:42:01.940 --> 01:42:02.960
Ja, WS-Packet.

01:42:05.480 --> 01:42:07.940
Muss WS-Packet hier noch irgendwie initialisiert werden?

01:42:11.120 --> 01:42:12.480
Aha, wieder mit diesem Krempel da.

01:42:12.660 --> 01:42:12.880
Okay.

01:42:15.940 --> 01:42:19.360
Copy-Paste jetzt einfach mal ganz wild hin und her.

01:42:24.910 --> 01:42:26.590
In der Hoffnung, dass es dann funktioniert.

01:42:26.990 --> 01:42:28.730
Wenn es funktioniert, bin ich erstmal...

01:42:28.730 --> 01:42:30.290
Ja, das wollen wir doch gar nicht, ja.

01:42:31.370 --> 01:42:32.350
Da soll überhaupt nichts rein.

01:42:32.350 --> 01:42:34.150
Hier, wir schreiben, wir schreiben da jetzt was rein.

01:42:35.050 --> 01:42:38.330
In den Buffer kommt, okay.

01:42:41.130 --> 01:42:42.450
Packen wir da jetzt einfach rein.

01:42:43.610 --> 01:42:45.530
So, jetzt bin ich mal gespannt, ob ich eine Antwort kriege.

01:42:47.330 --> 01:42:47.770
Flash.

01:42:49.830 --> 01:42:50.430
Meines...

01:42:50.430 --> 01:42:50.870
Fuck.

01:42:53.170 --> 01:42:53.470
Äh.

01:42:54.930 --> 01:42:56.490
Achso, mein D muss eine Nummer sein.

01:42:58.900 --> 01:42:59.180
Eins.

01:43:03.100 --> 01:43:04.320
Okay, meint ihr, es funktioniert?

01:43:04.820 --> 01:43:06.240
Meint ihr, ich kriege jetzt als Antwort...

01:43:07.040 --> 01:43:09.520
Ich müsste sogar auf beiden Sachen eine Antwort kriegen.

01:43:09.620 --> 01:43:09.900
Guck mal.

01:43:10.160 --> 01:43:13.220
Ich müsste einmal, wenn ich mich nur connecte, eine Antwort kriegen.

01:43:13.240 --> 01:43:14.340
Das probieren wir mal aus.

01:43:14.660 --> 01:43:17.920
Ich müsste, ich müsste als Antwort hier jetzt Cute Chat bekommen.

01:43:23.830 --> 01:43:24.230
Äh, nee.

01:43:24.510 --> 01:43:25.790
Eins als Antwort bekommen.

01:43:26.610 --> 01:43:27.470
Mach ich nicht.

01:43:29.890 --> 01:43:30.130
Moment.

01:43:30.290 --> 01:43:32.530
Wie, wie, wie listet man dann mit Websocket?

01:43:32.710 --> 01:43:33.370
Einfach listen?

01:43:39.630 --> 01:43:40.070
Äh.

01:43:41.690 --> 01:43:43.910
Das funktioniert nicht so, wie ich mir das gedacht habe.

01:43:47.260 --> 01:43:48.720
Macht der überhaupt was?

01:43:52.260 --> 01:43:53.060
WS-Händler.

01:43:53.160 --> 01:43:54.200
Wird das irgendwo aufgerufen?

01:43:54.340 --> 01:43:54.660
Ja, hier.

01:43:55.660 --> 01:43:56.180
QWork.

01:44:09.480 --> 01:44:10.040
Äh.

01:44:10.040 --> 01:44:10.080
Äh.

01:44:11.220 --> 01:44:11.740
Äh.

01:44:11.740 --> 01:44:14.620
Machen wir noch mal, was da rauskommt.

01:44:14.700 --> 01:44:15.100
Logger.

01:44:16.040 --> 01:44:19.400
Machen wir mal Error, falls das irgendwie, falls das ein Error ist.

01:44:30.500 --> 01:44:31.700
Ich kenne mein eigenes Zeichen.

01:44:31.900 --> 01:44:32.000
Achso.

01:44:33.160 --> 01:44:34.220
Ja, irgendwie, keine Ahnung.

01:44:36.000 --> 01:44:36.940
Q-Error.

01:44:38.080 --> 01:44:39.460
Und jetzt returnen wir das.

01:44:39.920 --> 01:44:44.540
So, jetzt müssen wir da oben noch ein bisschen Debug-Ausgabe reinmachen, weil ich keine Ahnung habe, ob das funktioniert.

01:44:45.180 --> 01:44:46.660
Und ich ja auch hier nix drinne logge.

01:44:48.260 --> 01:44:51.460
Wir machen uns jetzt, wir machen uns jetzt keine große Arbeit.

01:44:52.020 --> 01:44:53.060
Wir loggen jetzt.

01:44:53.140 --> 01:44:53.500
Eins.

01:44:55.660 --> 01:44:56.140
Zwei.

01:44:58.300 --> 01:44:58.780
Drei.

01:45:01.720 --> 01:45:04.200
Muss außer uns keiner die Debug-Ausgaben verstehen.

01:45:05.640 --> 01:45:06.100
Oh, fuck.

01:45:06.180 --> 01:45:06.500
Was jetzt?

01:45:11.910 --> 01:45:12.170
Ups.

01:45:14.390 --> 01:45:15.370
Was habe ich verkehrt gemacht?

01:45:17.130 --> 01:45:17.350
Hä?

01:45:27.100 --> 01:45:28.940
Was, was hat er für, für Schmerzen?

01:45:38.580 --> 01:45:39.420
Äh, warum nicht?

01:45:44.020 --> 01:45:45.340
Sollte aber doch eigentlich funktionieren.

01:45:45.440 --> 01:45:46.020
Log-Error?

01:45:47.040 --> 01:45:47.900
Kann er doch?

01:45:49.640 --> 01:45:50.120
Nee.

01:45:50.120 --> 01:45:55.880
Okay, mein eigenes Logging-Zeug funktioniert nicht richtig.

01:45:57.320 --> 01:45:59.320
Ich gebe jetzt einfach sowas aus.

01:46:01.160 --> 01:46:01.660
Oh.

01:46:01.660 --> 01:46:02.160
Oh.

01:46:02.160 --> 01:46:02.660
Besser.

01:46:09.130 --> 01:46:10.630
Ah, ich will ja einfach nur sehen, ob es funktioniert.

01:46:10.630 --> 01:46:12.630
Ja, warum auch immer der fehlt, ich weiß es nicht.

01:46:12.630 --> 01:46:13.630
Der müsste eigentlich da sein.

01:46:15.630 --> 01:46:17.630
Im Prinzip ist das ja gar nicht so, wie es bleiben soll.

01:46:17.630 --> 01:46:19.630
Ich will einfach wissen, was der macht.

01:46:19.630 --> 01:46:21.630
Weil ich hätte jetzt eigentlich vermutet, es funktioniert.

01:46:22.630 --> 01:46:30.460
Aber anscheinend nicht.

01:46:30.460 --> 01:46:31.460
Okay.

01:46:31.460 --> 01:46:35.280
Error null ist okay.

01:46:38.230 --> 01:46:41.230
Kann es sein, dass diese Message-Queue einfach nie funktioniert?

01:46:41.230 --> 01:46:42.230
Nie läuft?

01:46:42.230 --> 01:46:44.730
Ich sage httpd, Queue work.

01:46:44.730 --> 01:46:47.730
Aber es wird nirgendswo die work end queued.

01:46:47.730 --> 01:46:50.730
Weil Error null heißt, er hat, Moment, hier kommt eins.

01:46:51.730 --> 01:46:52.730
27.

01:46:56.770 --> 01:46:57.770
Ey, hat auch funktioniert.

01:46:58.270 --> 01:46:59.270
Hat funktioniert.

01:47:01.970 --> 01:47:03.470
Aber danach geht es nicht weiter.

01:47:03.470 --> 01:47:06.470
Okay, dann stimmt das doch nicht, was ich hier gemacht habe.

01:47:06.470 --> 01:47:14.850
Dann ist das hier nämlich, äh, okay.

01:47:24.980 --> 01:47:27.980
Also, das hier funktioniert nicht.

01:47:27.980 --> 01:47:29.980
Client list funktioniert nicht.

01:47:30.980 --> 01:47:32.980
Warum funktioniert Client list nicht?

01:47:33.980 --> 01:47:38.870
Okay, da muss ich mir, da muss ich mir die Ausgabe jetzt nochmal angucken.

01:47:38.870 --> 01:47:40.870
Was, was, was, was passiert hier?

01:47:41.870 --> 01:47:45.780
Server list.

01:47:45.780 --> 01:47:47.780
Der greift auf was gerade?

01:47:47.780 --> 01:47:50.780
Auf Server, wo kommt denn das her?

01:47:50.780 --> 01:47:58.320
Das ist bei dem static.

01:47:59.320 --> 01:48:02.320
Auf das httpd-Handle.

01:48:03.320 --> 01:48:12.380
Also, eigentlich doch okay, oder nicht?

01:48:19.420 --> 01:48:20.420
Oder nicht?

01:48:24.210 --> 01:48:27.210
Okay, dann machen wir das mal anders.

01:48:28.210 --> 01:48:30.210
Das Server-Handle kommt hier raus.

01:48:31.210 --> 01:48:33.210
Ja, das ist immer ein bisschen eklig, das zu machen.

01:48:33.210 --> 01:48:35.210
Das Server-Handle kommt hier raus.

01:48:36.210 --> 01:48:38.210
Das geht hier in diesen globalen Scope da.

01:48:39.210 --> 01:48:40.210
So.

01:48:40.210 --> 01:48:50.120
So, hier kann ich jetzt aber nicht drauf zugreifen, ne?

01:48:51.120 --> 01:48:56.500
Ich kann jetzt nicht hier auf Server zugreifen, weil es das nicht gibt.

01:48:56.500 --> 01:49:00.500
Das heißt, im Endeffekt, hier brauche ich jetzt wirklich nur,

01:49:00.500 --> 01:49:09.970
hier brauche ich jetzt wirklich sowas.

01:49:09.970 --> 01:49:18.250
Und da muss ich das jetzt übergeben.

01:49:18.250 --> 01:49:20.250
Hier unten, wo ich das aufrufe.

01:49:20.250 --> 01:49:21.250
Warte mal.

01:49:21.250 --> 01:49:23.250
Oh Mann, ich blick da immer durch.

01:49:23.250 --> 01:49:24.250
What?

01:49:24.250 --> 01:49:25.250
Queue.

01:49:25.250 --> 01:49:26.250
Queue work.

01:49:26.250 --> 01:49:30.250
So, da muss ich das übergeben, den Pointer.

01:49:30.250 --> 01:49:33.650
Und das funktioniert.

01:49:33.650 --> 01:49:35.650
Oh, ich raste aus.

01:49:35.650 --> 01:49:37.650
Ah, warum ist das so kompliziert schon wieder?

01:49:37.650 --> 01:49:38.650
Wonka ist.

01:49:38.650 --> 01:49:40.650
Oh.

01:49:40.650 --> 01:49:42.650
Die Sprache macht mich fertig.

01:49:42.650 --> 01:49:47.500
Da muss ich den, muss ich den Pointer.

01:49:47.500 --> 01:49:49.500
Na gut, wir haben, wir haben hier.

01:49:49.500 --> 01:49:51.500
Fuck, ist das wieder abartig, ey.

01:49:51.500 --> 01:49:52.500
Alter.

01:49:52.500 --> 01:49:56.600
Okay.

01:49:56.600 --> 01:49:59.600
Kommando, Kommando zurück.

01:49:59.600 --> 01:50:00.600
Kommando zurück.

01:50:00.600 --> 01:50:06.320
Ich will es erst mal funktionierend machen.

01:50:06.320 --> 01:50:09.320
Sobald es funktionierend ist, kann man immer noch dran rumwurschteln.

01:50:09.320 --> 01:50:17.740
Also, es scheitert daran, dass List Clients nicht geht.

01:50:17.740 --> 01:50:20.740
Das liegt bestimmt daran, dass Server nicht richtig übergeben wird.

01:50:20.740 --> 01:50:21.740
100 pro.

01:50:21.740 --> 01:50:22.740
Könnte ich wetten.

01:50:22.740 --> 01:50:23.740
So.

01:50:23.740 --> 01:50:27.460
Und das macht ja auch Sinn.

01:50:27.460 --> 01:50:30.460
Weil das überhaupt, weil das überhaupt nie richtig.

01:50:30.460 --> 01:50:35.020
Moment, das wird überhaupt nirgendswo übergeben, gell.

01:50:35.020 --> 01:50:37.020
Ja, kein Wunder.

01:50:37.020 --> 01:50:42.830
Das wird nirgendswo übergeben.

01:50:42.830 --> 01:50:44.830
Und ich kann.

01:50:44.830 --> 01:50:46.830
Boah, fuck.

01:50:46.830 --> 01:50:47.830
Alter.

01:50:47.830 --> 01:50:49.830
Wie mache ich denn das jetzt?

01:50:49.830 --> 01:50:56.130
Wie kriege ich denn das Ding jetzt hier rein?

01:50:56.130 --> 01:51:00.400
Wie kriege ich das hier?

01:51:00.400 --> 01:51:16.260
Kann man das hier static machen oder so?

01:51:16.260 --> 01:51:18.260
Wie kriege ich denn das jetzt hier rein?

01:51:18.260 --> 01:51:27.430
Weil das wird ja, das wird ja so auf jeden Fall nicht funktionieren.

01:51:27.430 --> 01:51:28.430
Oder?

01:51:28.430 --> 01:51:29.430
Oder doch?

01:51:29.430 --> 01:51:30.430
Und?

01:51:30.430 --> 01:51:31.430
Wait, funktioniert das jetzt?

01:51:31.430 --> 01:51:32.430
Nee, natürlich nicht.

01:51:32.430 --> 01:51:33.430
Weil.

01:51:33.430 --> 01:51:34.430
Server was not declared in the scope.

01:51:34.430 --> 01:51:35.430
Ja, das ist klar, dass das.

01:51:35.430 --> 01:51:36.430
Moment, das funktioniert jetzt.

01:51:36.430 --> 01:51:40.790
So.

01:51:40.790 --> 01:51:41.790
HTTPD.

01:51:41.790 --> 01:51:42.790
Server.

01:51:42.790 --> 01:51:43.790
Nee, wie heißt das?

01:51:43.790 --> 01:51:44.790
HTW.

01:51:44.790 --> 01:51:47.420
Händel.

01:51:47.420 --> 01:51:48.420
Händel.

01:51:48.420 --> 01:51:49.420
So, das ist jetzt ein Pointer da drauf.

01:51:49.420 --> 01:51:50.420
Ja.

01:51:50.420 --> 01:51:51.420
Ja.

01:51:51.420 --> 01:51:52.420
Ja.

01:51:52.420 --> 01:51:53.420
Ja.

01:51:53.420 --> 01:51:54.420
Ja.

01:51:54.420 --> 01:51:55.420
Ja.

01:51:55.420 --> 01:51:56.420
Ja.

01:51:56.420 --> 01:51:57.420
Ja.

01:51:57.420 --> 01:51:58.420
Ja.

01:51:58.420 --> 01:51:59.420
Ja.

01:51:59.420 --> 01:52:00.420
Ja.

01:52:00.420 --> 01:52:01.420
Ja.

01:52:01.420 --> 01:52:02.420
Ja.

01:52:02.420 --> 01:52:05.180
Ja.

01:52:05.180 --> 01:52:06.180
Fuck.

01:52:06.180 --> 01:52:07.180
C++.

01:52:07.180 --> 01:52:08.180
Please.

01:52:08.180 --> 01:52:09.180
Server.

01:52:09.180 --> 01:52:12.140
Gleich.

01:52:12.140 --> 01:52:22.980
Das ist ein Pointer auf den Server Händler.

01:52:22.980 --> 01:52:24.980
Warum kann ich da einen Pointer übergeben?

01:52:24.980 --> 01:52:26.980
Sollte das eigentlich nicht gehen?

01:52:26.980 --> 01:52:30.170
Ich bin verwirrt.

01:52:33.200 --> 01:52:34.200
Chat.

01:52:34.200 --> 01:52:35.200
Warum?

01:52:35.200 --> 01:52:36.200
Das müsst ihr jetzt mal erklären.

01:52:36.200 --> 01:52:43.200
Warum darf ich, wenn diese Funktion ein HTTPD Händel T haben will, einen Pointer übergeben?

01:52:43.200 --> 01:52:48.920
Das macht doch gar keinen Sinn.

01:52:48.920 --> 01:52:49.920
Oder?

01:52:49.920 --> 01:52:52.000
int unter der Haube und mein

01:52:52.000 --> 01:52:54.120
Pointer decayt dann quasi

01:52:54.120 --> 01:52:55.460
irgendwie wieder zu einem int

01:52:55.460 --> 01:52:57.880
und ich, er

01:52:57.880 --> 01:52:59.760
interpretiert eigentlich die Speicheradresse

01:52:59.760 --> 01:53:01.320
jetzt als den Content,

01:53:02.140 --> 01:53:03.760
was auch weirdchamp wäre, aber

01:53:03.760 --> 01:53:07.260
ja, das hat schon mal nicht funktioniert.

01:53:08.640 --> 01:53:09.380
Doch, das ist eins

01:53:09.380 --> 01:53:10.340
weitergekommen jetzt.

01:53:11.420 --> 01:53:13.020
Zwei, ist jetzt bis hierhin gekommen.

01:53:14.020 --> 01:53:18.610
Moment, ist

01:53:18.610 --> 01:53:19.930
http, Moment, Moment,

01:53:19.990 --> 01:53:21.650
httpd-handle ist was?

01:53:22.890 --> 01:53:24.490
Ach, das ist ein Void-Pointer.

01:53:25.230 --> 01:53:26.870
Boah,

01:53:27.210 --> 01:53:27.910
da fuck!

01:53:35.950 --> 01:53:38.070
Das heißt, ich kann das direkt übergeben, ohne

01:53:38.070 --> 01:53:39.390
einen und davor zu machen.

01:53:39.810 --> 01:53:41.990
Ich hatte jetzt einen Pointer zu einem

01:53:41.990 --> 01:53:43.970
Pointer drinnen.

01:53:46.090 --> 01:53:47.270
Wo geil ist das?

01:53:47.770 --> 01:53:49.870
So, das heißt, im Endeffekt, wenn ich einfach nur einen Server

01:53:49.870 --> 01:53:53.760
haben will, dann sage ich

01:53:53.760 --> 01:53:55.660
im Endeffekt, ich mach einfach

01:53:55.660 --> 01:53:59.210
gar nix. Ich mach einfach

01:53:59.210 --> 01:54:01.110
gar nix und sage ihm

01:54:01.110 --> 01:54:02.930
nur, ey, du bist eigentlich

01:54:02.930 --> 01:54:04.510
ein httpd-Handle.

01:54:05.570 --> 01:54:07.310
Das ist der Kontext, okay?

01:54:11.060 --> 01:54:12.300
Vielleicht sollte ich es noch Server nennen.

01:54:20.990 --> 01:54:21.730
Pointerstells, ja.

01:54:23.070 --> 01:54:23.610
Im Prinzip

01:54:23.610 --> 01:54:24.830
sowas hier dann, ne?

01:54:26.960 --> 01:54:34.510
Okay. Kannst du nicht direkt

01:54:34.510 --> 01:54:36.330
ctx übergeben? Stimmt, du hast

01:54:36.330 --> 01:54:38.570
recht, das müsst

01:54:38.570 --> 01:54:39.730
er doch eigentlich checken, oder?

01:54:41.070 --> 01:54:42.330
Wenn ich jetzt hier direkt ctx

01:54:42.330 --> 01:54:46.240
übergebe? Ja, check da.

01:54:46.780 --> 01:54:47.100
Geht.

01:54:48.380 --> 01:54:50.240
Da kann ich das auch nicht ctx, sondern das direkt

01:54:50.240 --> 01:54:50.800
Server nennen.

01:54:52.440 --> 01:54:56.710
So. Und das hier muss ja

01:54:56.710 --> 01:54:58.830
gar nicht. Das ist ja

01:54:58.830 --> 01:55:00.130
falsch an der Stelle.

01:55:01.750 --> 01:55:02.810
Das stimmt ja. Ich glaube

01:55:02.810 --> 01:55:04.630
gar nicht, dass ich hier den Server-Kontext überhaupt

01:55:04.630 --> 01:55:05.610
brauche an der Stelle.

01:55:06.630 --> 01:55:07.810
Schauen wir mal, was er jetzt macht.

01:55:09.030 --> 01:55:09.430
Ah!

01:55:10.510 --> 01:55:11.750
Es kommt eine Antwort!

01:55:12.390 --> 01:55:13.170
Es hat funktioniert!

01:55:17.860 --> 01:55:20.600
Easy as fuck! Easy, easy, easy,

01:55:20.800 --> 01:55:21.820
easy as fuck!

01:55:22.480 --> 01:55:24.240
Okay, es kompiliert nicht mehr. Ich hab's kaputt

01:55:24.240 --> 01:55:24.600
gemacht.

01:55:26.560 --> 01:55:28.520
Was not declared in this scope.

01:55:28.520 --> 01:55:29.740
Wie jetzt?

01:55:30.200 --> 01:55:31.640
Da ist es doch.

01:55:33.750 --> 01:55:33.930
Wie?

01:55:35.770 --> 01:55:37.270
Achso, ich kack nur. Ich hab's unbenannt

01:55:37.270 --> 01:55:37.690
in Server.

01:55:43.880 --> 01:55:45.560
Alter Pointer-Stelz, man!

01:55:55.640 --> 01:55:56.040
Harter

01:55:56.040 --> 01:55:56.980
Pointer-Stelz.

01:56:05.920 --> 01:56:09.210
Ja, ist Funst. So, und viel

01:56:09.210 --> 01:56:11.350
interessanter. Was ist jetzt, wenn ich

01:56:11.350 --> 01:56:13.230
mich anderweitig attache? Krieg ich dann

01:56:13.230 --> 01:56:14.030
auch eine Antwort?

01:56:17.960 --> 01:56:20.040
Bäm! Guck mal!

01:56:20.460 --> 01:56:22.220
Der ist broadcasten. Der Message ist

01:56:22.220 --> 01:56:23.360
über Websocket funktioniert.

01:56:23.360 --> 01:56:28.250
Das ist ja nice.

01:56:35.170 --> 01:56:35.890
Oh, ich hab jetzt drei...

01:56:35.970 --> 01:56:38.530
...Websocket-Verbindungen und alle drei kriegen die

01:56:38.530 --> 01:56:40.010
Message. Die Antwort.

01:56:41.010 --> 01:56:41.770
Excellent.

01:56:42.290 --> 01:56:43.850
Excellent. Five head time.

01:56:46.270 --> 01:56:47.230
Failed to read header.

01:56:48.230 --> 01:56:49.530
Socket FD invalid.

01:56:50.130 --> 01:56:51.050
Closing now.

01:56:54.060 --> 01:56:55.940
Vielleicht doch nicht so ganz richtig, was ich da

01:56:55.940 --> 01:56:56.580
gebaut hab.

01:56:58.320 --> 01:57:00.320
Nee, oder war das, weil ich die jetzt alle so schnell

01:57:00.320 --> 01:57:01.560
nacheinander geclosed hab?

01:57:04.450 --> 01:57:05.270
Gucken wir noch mal.

01:57:14.940 --> 01:57:16.880
Ja, tatsächlich. Das war nur, weil ich die Session irgendwie

01:57:16.880 --> 01:57:17.480
geclosed hab.

01:57:18.620 --> 01:57:19.920
Ah, jetzt funzt das nämlich alles.

01:57:20.440 --> 01:57:22.880
Ja, ja. Failed.

01:57:24.480 --> 01:57:26.160
Das ist nur, wenn ich die Session close.

01:57:28.120 --> 01:57:30.440
Oh, das ist ja cool, dass das funzt.

01:57:30.760 --> 01:57:32.680
Ich bin begeistert. Okay, das war ein bisschen

01:57:32.680 --> 01:57:34.740
schwere Geburt, aber Websocket-Stells

01:57:34.740 --> 01:57:35.560
funktioniert.

01:57:37.360 --> 01:57:38.980
So wirklich, so wirklich schön

01:57:38.980 --> 01:57:40.860
finde ich das noch nicht. Hier ist auch ein bisschen

01:57:40.860 --> 01:57:42.700
unübersichtlich, aber es funktioniert.

01:57:51.930 --> 01:57:53.570
Was? Moment, aber warum?

01:57:54.310 --> 01:57:55.910
Ich hab ein Tool, um eine Mausbewegung

01:57:55.910 --> 01:57:57.950
per Websocket an OBS zu schicken und damit

01:57:57.950 --> 01:57:58.310
eine Branche zu schicken.

01:57:58.310 --> 01:58:00.250
Eine Browserquelle auf die Maus reagieren

01:58:00.250 --> 01:58:01.650
kann. Aber

01:58:01.650 --> 01:58:03.450
also, und dann?

01:58:07.370 --> 01:58:09.130
Also, was ist der Anwendungszweck?

01:58:11.090 --> 01:58:13.650
Ich kriege übrigens auch viele Websocket-Events.

01:58:14.070 --> 01:58:14.270
Hups.

01:58:15.130 --> 01:58:16.650
Wenn ich ganz viele

01:58:16.650 --> 01:58:19.090
Emotes spamme,

01:58:19.790 --> 01:58:21.430
kriege ich auch Websocket-Events.

01:58:21.810 --> 01:58:23.190
Weil die über, äh, nicht

01:58:23.190 --> 01:58:25.210
Emotes spamme, weil die auch über Websocket

01:58:25.210 --> 01:58:30.000
gehen. Aha.

01:58:30.700 --> 01:58:31.420
Byfett-Time.

01:58:32.060 --> 01:58:35.820
Ja, Maus-Cursor-Events.

01:58:36.340 --> 01:58:37.260
Hast du viele.

01:58:40.220 --> 01:58:41.480
Okay, können wir das jetzt irgendwie

01:58:41.480 --> 01:58:43.760
vielleicht ein bisschen für normale Menschen

01:58:43.760 --> 01:58:45.980
verständlicher machen, was wir hier gebaut haben?

01:58:47.680 --> 01:58:48.740
Sodass man, sodass man es irgendwie

01:58:48.740 --> 01:58:50.440
halbwegs checkt, was, was hier

01:58:50.440 --> 01:58:52.340
passiert, ja? Ich muss mir noch mal

01:58:52.340 --> 01:58:53.180
eins angucken.

01:58:54.860 --> 01:58:56.200
Bei, nee, das Fundst...

01:58:56.200 --> 01:58:59.440
FD-Info?

01:59:03.720 --> 01:59:05.540
HD. Was ist HD

01:59:05.540 --> 01:59:06.460
in dem Fall nochmal?

01:59:08.220 --> 01:59:09.480
HTTP-D-Händel.

01:59:10.520 --> 01:59:11.920
HTTP-D-Händel-D.

01:59:11.920 --> 01:59:12.000
Okay.

01:59:14.720 --> 01:59:22.700
Das ist im Prinzip...

01:59:22.700 --> 01:59:24.600
Ja, nee, dann haben wir das richtig. Dann ist das richtig,

01:59:24.700 --> 01:59:26.660
so wie wir das gebaut haben. Alles gut.

01:59:27.320 --> 01:59:28.880
Okay, können wir das vielleicht noch ein bisschen schöner

01:59:28.880 --> 01:59:30.680
machen? Weil das hier ist wirklich super

01:59:30.680 --> 01:59:32.460
zu lesen. Jeder checkt, was passiert.

01:59:33.820 --> 01:59:34.520
Das hier so

01:59:34.520 --> 01:59:34.900
Semi.

01:59:38.210 --> 01:59:39.710
Aber das da oben ist ganz schlimm.

01:59:40.830 --> 01:59:41.770
Da checkt man gar nix.

01:59:48.100 --> 01:59:49.300
Wenn ich Static wegmache,

01:59:49.360 --> 01:59:51.400
wird's nicht mehr funktionieren, oder? Dann break

01:59:51.400 --> 01:59:56.280
das, ja. Kann ich das

01:59:56.280 --> 01:59:57.720
Static hier rausschieben irgendwie?

02:00:01.890 --> 02:00:03.470
Das Fundst? Nee, das Fundst nicht.

02:00:03.510 --> 02:00:03.630
Was?

02:00:06.920 --> 02:00:13.360
Äh, Static konstant, meinetwegen?

02:00:16.310 --> 02:00:16.710
Äh,

02:00:21.840 --> 02:00:22.920
alles klar.

02:00:24.540 --> 02:00:25.560
Warum ist das nicht

02:00:25.560 --> 02:00:27.140
erlaubt? Darf ich sowas hier machen?

02:00:28.940 --> 02:00:29.700
Okay, das

02:00:29.700 --> 02:00:31.100
ist aus irgendwelchen Gründen erlaubt.

02:00:33.400 --> 02:00:34.780
Was? Was auch immer?

02:00:49.920 --> 02:00:50.240
Leute,

02:00:50.820 --> 02:00:51.860
jetzt war ne blöde Frage.

02:00:56.120 --> 02:00:58.260
Also, wenn ich jetzt...

02:00:59.720 --> 02:01:00.400
Wenn das

02:01:00.400 --> 02:01:01.340
hier Static ist,

02:01:02.380 --> 02:01:03.520
dann ist das...

02:01:03.520 --> 02:01:05.100
Dann gilt diese Variable hier

02:01:05.100 --> 02:01:07.300
für jede Instanz von

02:01:07.300 --> 02:01:09.520
EasyWebServer. Das heißt, wenn

02:01:09.520 --> 02:01:11.540
ich zwei EasyWebServer anlegen

02:01:11.540 --> 02:01:13.440
würde, was ich nicht mache, aber

02:01:13.440 --> 02:01:14.940
was ich machen könnte,

02:01:16.380 --> 02:01:17.440
dann würde die zweite

02:01:17.440 --> 02:01:19.400
Instanz die erste kaputt machen,

02:01:19.560 --> 02:01:21.400
weil es die Server-Variable

02:01:21.400 --> 02:01:22.620
überschreibt. Richtig?

02:01:25.320 --> 02:01:27.540
Und wenn ich das hier reinschreibe,

02:01:28.420 --> 02:01:28.820
dann

02:01:28.820 --> 02:01:29.500
nicht?

02:01:29.500 --> 02:01:30.560
Fragezeichen.

02:01:30.980 --> 02:01:32.620
Was ist der Unterschied zwischen

02:01:32.620 --> 02:01:34.620
Static, so,

02:01:35.220 --> 02:01:37.300
ist das jetzt,

02:01:37.460 --> 02:01:38.200
ist das hier?

02:01:39.020 --> 02:01:41.220
Ich könnte wetten, Leute, das ist im Prinzip

02:01:41.220 --> 02:01:43.240
das Gleiche, nur das Scope

02:01:43.240 --> 02:01:45.220
ist unterschiedlich. Das hier ist

02:01:45.220 --> 02:01:47.120
auch in der zweiten

02:01:47.120 --> 02:01:49.040
Instanz dann kaputt,

02:01:49.240 --> 02:01:50.120
gehe ich mal von aus.

02:01:53.230 --> 02:01:55.430
Also, das heißt, eigentlich ist so, wie ich das gebaut

02:01:55.430 --> 02:01:57.550
habe, suboptimal.

02:01:58.250 --> 02:01:59.330
Es ist nicht schlimm,

02:02:00.630 --> 02:02:01.650
weil ich

02:02:01.650 --> 02:02:03.470
im Endeffekt eh

02:02:03.470 --> 02:02:05.410
keine zweite Instanz vom Web-Server

02:02:05.410 --> 02:02:07.250
anlege. Schön ist es,

02:02:07.250 --> 02:02:08.250
allerdings nett.

02:02:08.250 --> 02:02:11.250
Das heißt, schöner wäre es,

02:02:11.250 --> 02:02:13.250
wenn man das hier nicht Static machen

02:02:13.250 --> 02:02:18.350
müssten, dann ist aber die Frage,

02:02:18.350 --> 02:02:20.350
wenn das nicht Static ist,

02:02:20.350 --> 02:02:22.350
wie kriege ich das hier rein?

02:02:22.350 --> 02:02:28.420
Wenn du mehrere Instanzen

02:02:28.420 --> 02:02:30.420
gibt es trotzdem nur eine, genau.

02:02:30.420 --> 02:02:32.420
Ja, aber auch Static, wenn es innerhalb

02:02:32.420 --> 02:02:34.420
von einer Funktion ist, dann wird es nämlich

02:02:34.420 --> 02:02:36.420
kaputt, man. So,

02:02:36.420 --> 02:02:38.420
Lambda Capturen

02:02:38.420 --> 02:02:40.420
geht nicht, weil,

02:02:40.420 --> 02:02:44.750
wenn ich in dem Lambda Capturen will,

02:02:44.750 --> 02:02:46.050
Moment, wo will ich Capturen?

02:02:46.750 --> 02:02:48.750
Ja.

02:02:48.750 --> 02:02:52.060
Wenn ich hier Capturen will,

02:02:52.060 --> 02:02:54.060
dann sagt er mir,

02:02:54.060 --> 02:02:56.060
das kann man nicht mehr zuweisen, weil

02:02:56.060 --> 02:02:58.060
das dann eine C++ eigene Sache ist

02:02:58.060 --> 02:03:00.060
und das hier ein C Callback haben möchte.

02:03:00.060 --> 02:03:03.700
So, das heißt,

02:03:03.700 --> 02:03:05.700
im Endeffekt, doch, das könnte ich machen,

02:03:05.700 --> 02:03:07.700
ich könnte den Server

02:03:07.700 --> 02:03:09.700
hier übergeben.

02:03:09.700 --> 02:03:11.700
Und zwar als User

02:03:11.700 --> 02:03:13.700
Context

02:03:13.700 --> 02:03:15.700
und Server

02:03:15.700 --> 02:03:17.700
könnte ich

02:03:17.700 --> 02:03:19.700
den übergeben und dann

02:03:19.700 --> 02:03:24.800
kriege ich hier oben,

02:03:24.800 --> 02:03:26.800
wo ist denn der User Context?

02:03:26.800 --> 02:03:28.800
Stimmt, in Request.

02:03:28.800 --> 02:03:30.800
Request, User Context.

02:03:32.800 --> 02:03:37.900
Genau, so.

02:03:37.900 --> 02:03:39.900
So, jetzt müsste es auch funktionieren.

02:03:39.900 --> 02:03:41.900
Kannst du nicht

02:03:41.900 --> 02:03:43.900
This Capturen? Doch, das habe ich mir auch

02:03:43.900 --> 02:03:45.900
überlegt. Das habe ich mir auch schon

02:03:45.900 --> 02:03:47.900
überlegt, das müsste auch funktionieren.

02:03:47.900 --> 02:03:49.900
Also,

02:03:49.900 --> 02:03:54.500
erst mal so checken,

02:03:54.500 --> 02:03:56.500
erst mal so checken, dass es geht.

02:03:56.500 --> 02:03:58.500
By the way, und dass das hier static ist, ist auch

02:03:58.500 --> 02:04:00.500
eine richtig dumme Idee von mir, oder?

02:04:00.500 --> 02:04:02.500
Weil es dann auch wieder kaputt gehen würde.

02:04:02.500 --> 02:04:05.940
In der zweiten Instanz.

02:04:05.940 --> 02:04:10.460
Das habe ich aus dem Beispiel so

02:04:10.460 --> 02:04:17.550
rauskopiert.

02:04:17.550 --> 02:04:19.550
Oh, fuck.

02:04:19.550 --> 02:04:21.550
Es ist gecrashed jetzt.

02:04:21.550 --> 02:04:26.020
Okay, da ist

02:04:26.020 --> 02:04:38.670
irgendwas broken.

02:04:38.670 --> 02:04:40.670
Ah ja, natürlich,

02:04:40.670 --> 02:04:42.670
das, ne, wobei, das hier ist

02:04:42.670 --> 02:04:44.670
doch schon ein Void. Moment, ich muss da

02:04:44.670 --> 02:04:46.670
immer noch, ich muss immer noch keinen Pointer nehmen

02:04:46.670 --> 02:04:48.670
dafür, weil das ist immer noch ein Void.

02:04:48.670 --> 02:04:50.670
Also, das finde ich echt

02:04:50.670 --> 02:04:52.670
grenzwertig,

02:04:52.670 --> 02:04:54.670
einen Pointer zu aliassen auf irgendwas,

02:04:54.670 --> 02:04:56.670
was nicht nach Pointer aussieht.

02:04:56.670 --> 02:04:58.670
Das kann, das macht dich ja nur verrückt, im Endeffekt.

02:04:58.670 --> 02:05:00.670
Aber

02:05:00.670 --> 02:05:02.670
This Capturen wäre vielleicht auch keine schlechte Idee,

02:05:02.670 --> 02:05:14.750
ja.

02:05:14.750 --> 02:05:16.750
Haha, es hat funktioniert. Okay.

02:05:16.750 --> 02:05:18.750
Jetzt schauen wir mal, ob das mit This Capturen

02:05:18.750 --> 02:05:20.750
vielleicht nicht doch irgendwie

02:05:20.750 --> 02:05:22.750
schöner ist, weil dann kann ich auch auf alles

02:05:22.750 --> 02:05:24.750
drauf zugreifen.

02:05:24.750 --> 02:05:26.750
So, das heißt, im Endeffekt, dann müsste

02:05:26.750 --> 02:05:28.750
jetzt Server allerdings

02:05:28.750 --> 02:05:30.750
hier raus, ne.

02:05:30.750 --> 02:05:32.750
So, und auf

02:05:32.750 --> 02:05:34.750
Private hier oben und dann heißt es auch anders

02:05:34.750 --> 02:05:38.260
Underscore Server.

02:05:38.260 --> 02:05:40.260
Das müsste da hin.

02:05:40.260 --> 02:05:42.260
Dann muss ich das übrigens auch nicht mehr static machen.

02:05:42.260 --> 02:05:44.260
Eigentlich noch viel nicer.

02:05:44.260 --> 02:05:46.260
So.

02:05:46.260 --> 02:05:48.260
Jetzt gibt es Server natürlich nicht mehr.

02:05:48.260 --> 02:05:55.470
Aber ich kann

02:05:55.470 --> 02:05:57.470
ja hier und Server

02:05:57.470 --> 02:05:59.470
sagen.

02:05:59.470 --> 02:06:01.470
Ja, das funzt ja. So, und überall,

02:06:01.470 --> 02:06:03.470
wo Server steht,

02:06:03.470 --> 02:06:05.470
muss jetzt Underscore

02:06:05.470 --> 02:06:07.470
Server hin. Ne, Moment. Muss gar nicht

02:06:07.470 --> 02:06:09.470
hin. Hier muss This gecaptured

02:06:09.470 --> 02:06:15.600
werden. Ja.

02:06:15.600 --> 02:06:17.600
Das, das funktioniert besser. So, jetzt Auto.

02:06:17.600 --> 02:06:19.600
Nehmen wir das mal irgendwie, keine Ahnung, Context

02:06:19.600 --> 02:06:21.600
oder sowas.

02:06:21.600 --> 02:06:23.600
Request.

02:06:23.600 --> 02:06:26.910
User Context.

02:06:26.910 --> 02:06:28.910
Und das ist jetzt im Endeffekt

02:06:28.910 --> 02:06:30.910
ein Eats Web Server

02:06:30.910 --> 02:06:36.140
Pointer.

02:06:36.140 --> 02:06:38.140
Und da drauf kann ich zugreifen.

02:06:38.140 --> 02:06:40.140
Äh.

02:06:40.140 --> 02:06:42.140
Ich bin innerhalb von der Klasse.

02:06:42.140 --> 02:06:44.140
Ich glaub, okay.

02:06:44.140 --> 02:06:46.140
Es, es buggt einfach.

02:06:46.140 --> 02:06:48.140
Auf Server.

02:06:48.140 --> 02:06:50.140
Ja.

02:06:50.140 --> 02:06:52.140
Das müsste eigentlich auch funktionieren.

02:06:52.140 --> 02:06:54.140
Das ist glaube ich sogar die schönere Variante

02:06:54.140 --> 02:06:59.180
an der Stelle.

02:06:59.180 --> 02:07:01.180
So, und jetzt müsste

02:07:01.180 --> 02:07:08.140
ich eigentlich

02:07:08.140 --> 02:07:10.140
Muss das static sein?

02:07:10.140 --> 02:07:18.000
Ne, das muss jetzt nicht mehr static

02:07:18.000 --> 02:07:20.000
sein, oder?

02:07:20.000 --> 02:07:22.000
Ja, ob ich will oder nicht.

02:07:22.000 --> 02:07:24.000
Wir lassen mal Zwischenschritt machen.

02:07:24.000 --> 02:07:28.850
Ob das noch funzt.

02:07:28.850 --> 02:07:30.850
Aber das mit This Captured war schon mal ne

02:07:30.850 --> 02:07:32.850
Fuck.

02:07:32.850 --> 02:07:34.850
Was not declared? Warum? Hier?

02:07:34.850 --> 02:07:36.850
Wo? Achso, ja, ja, okay.

02:07:36.850 --> 02:07:38.850
Underscore, underscore, server, underscore, server.

02:07:38.850 --> 02:07:40.850
Bei der Gelegenheit machen wir das hier auch

02:07:40.850 --> 02:07:42.850
gleich mal nicht mehr static const.

02:07:42.850 --> 02:07:46.220
Weil es glaube ich keine allzu sinnvolle

02:07:46.220 --> 02:07:56.640
Idee ist. Okay.

02:07:56.640 --> 02:07:58.640
Jetzt bin ich mal gespannt.

02:07:58.640 --> 02:08:00.640
So, und dann muss ja,

02:08:00.640 --> 02:08:02.640
dann muss das hier ja eigentlich auch nicht mehr static

02:08:02.640 --> 02:08:04.640
sein, zwangsläufig.

02:08:04.640 --> 02:08:11.410
Guck mal, ob noch alles funzt.

02:08:11.410 --> 02:08:13.410
Ja, funzt noch alles.

02:08:13.410 --> 02:08:15.410
Sehr schön.

02:08:15.410 --> 02:08:17.410
Ich bin begeistert.

02:08:17.410 --> 02:08:19.410
Ja, das ist viel schöner jetzt. Das ist viel schöner.

02:08:19.410 --> 02:08:21.410
So, und.

02:08:21.410 --> 02:08:23.410
Wobei doch, das muss immer noch static sein.

02:08:23.410 --> 02:08:29.540
Sonst kann ich das ja hier nicht übergeben.

02:08:29.540 --> 02:08:31.540
Weil ich kann hier nicht

02:08:33.540 --> 02:08:35.540
Ne, ich kann hier keine Member Function

02:08:35.540 --> 02:08:40.000
übergeben. Das funzt nicht.

02:08:40.000 --> 02:08:42.000
Wir könnten das um drei Ecken

02:08:42.000 --> 02:08:45.950
machen, aber das passt

02:08:45.950 --> 02:08:47.950
so schon. Das ist erstmal in Ordnung.

02:08:47.950 --> 02:08:49.950
Ist zwar ziemliches Pointer,

02:08:49.950 --> 02:08:56.660
Ping-Pong, aber echt

02:08:56.660 --> 02:08:58.660
ganz okay. Gut, so.

02:08:58.660 --> 02:09:00.660
Das finde ich, das ist jetzt halbwegs

02:09:00.660 --> 02:09:02.660
übersichtlich.

02:09:02.660 --> 02:09:04.660
Jetzt die Frage,

02:09:04.660 --> 02:09:06.660
lass uns mal das hier oben noch ein bisschen aufräumen.

02:09:06.660 --> 02:09:12.140
Also,

02:09:12.140 --> 02:09:14.140
WS-Händler, so,

02:09:14.140 --> 02:09:16.140
Method interessiert mich eigentlich gar nicht.

02:09:16.140 --> 02:09:18.140
Handshake done, juckt mich

02:09:18.140 --> 02:09:20.140
juckt mich jetzt

02:09:20.140 --> 02:09:22.140
im Prinzip auch nicht wirklich.

02:09:22.140 --> 02:09:24.140
Das

02:09:24.140 --> 02:09:26.140
muss ich nicht, muss ich nicht loggen.

02:09:26.140 --> 02:09:28.140
Dann machen wir das, was hier super

02:09:28.140 --> 02:09:30.140
gehasst ist.

02:09:30.140 --> 02:09:38.640
Machen die Klammern raus.

02:09:38.640 --> 02:09:43.680
Ja, okay.

02:09:43.680 --> 02:09:45.680
Das hier müssen wir so lassen.

02:09:45.680 --> 02:09:47.680
Das müssen wir auch so lassen.

02:09:47.680 --> 02:09:49.680
Das ist zwar alles ein bisschen eklig, aber

02:09:49.680 --> 02:09:53.570
funzt. Framelänge,

02:09:53.570 --> 02:09:55.570
nachdem ich jetzt weiß, dass das

02:09:55.570 --> 02:09:57.570
richtig ist, was ich da programmiert habe, passt schon.

02:09:57.570 --> 02:10:02.160
Die Message, die würde ich

02:10:02.160 --> 02:10:04.160
tatsächlich mal weiterhin

02:10:04.160 --> 02:10:06.160
als Debug

02:10:06.160 --> 02:10:08.160
WS hier

02:10:08.160 --> 02:10:14.830
auf Message,

02:10:14.830 --> 02:10:16.830
die würde ich mal weiterhin rauspumpen.

02:10:16.830 --> 02:10:21.870
Ja, und ob das

02:10:21.870 --> 02:10:23.870
ein Error ist oder nicht. Ich meine, wir händeln den

02:10:23.870 --> 02:10:25.870
Error ja eh nicht.

02:10:25.870 --> 02:10:27.870
Also insofern,

02:10:27.870 --> 02:10:32.400
können wir das tatsächlich returnen.

02:10:32.400 --> 02:10:34.400
So, okay, dann sieht das

02:10:34.400 --> 02:10:36.400
doch jetzt schon mal ein bisschen übersichtlicher aus.

02:10:36.400 --> 02:10:38.400
Und jetzt widmen

02:10:38.400 --> 02:10:40.400
wir uns mal

02:10:40.400 --> 02:10:42.400
Chat, was sagt ihr?

02:10:42.400 --> 02:10:44.400
Klammern drum oder klammern nicht drum bei einem

02:10:44.400 --> 02:10:47.840
einzeiligen If?

02:10:47.840 --> 02:10:49.840
Jetzt widmen wir uns mal diesem Krempel, weil das ist wirklich

02:10:49.840 --> 02:10:51.840
potthässlich hier oben.

02:10:51.840 --> 02:10:53.840
MaxClient16, gut, das

02:10:53.840 --> 02:10:57.860
brauchen wir. WSPacket.

02:10:57.860 --> 02:10:59.860
Kannst du es nicht vereinfachen,

02:10:59.860 --> 02:11:01.860
indem du das direkt über Lambda

02:11:01.860 --> 02:11:07.090
capturest? Du meinst hier?

02:11:07.090 --> 02:11:09.090
Ne, das geht nicht.

02:11:09.090 --> 02:11:11.090
Das geht nicht,

02:11:11.090 --> 02:11:13.090
weil sobald ich hier das capturen will,

02:11:13.090 --> 02:11:15.090
dann sagt er mir,

02:11:15.090 --> 02:11:17.090
das geht nicht mehr, weil dann die

02:11:17.090 --> 02:11:19.090
Funktionsdefinition nicht mehr übereinstimmt

02:11:19.090 --> 02:11:21.090
mit dem, was das hier haben will.

02:11:21.090 --> 02:11:23.090
Weil sobald

02:11:23.090 --> 02:11:25.090
ich hier was reinschreibst, wird das automatisch

02:11:25.090 --> 02:11:27.090
zu irgendeinem C++-Ding.

02:11:27.090 --> 02:11:29.090
Und das hier möchte einen reinen C-Style

02:11:29.090 --> 02:11:31.090
Callback haben.

02:11:31.090 --> 02:11:33.090
Das funktioniert leider nicht.

02:11:33.090 --> 02:11:35.090
Ganz ehrlich, ich finde es

02:11:35.090 --> 02:11:37.090
richtig, richtig dumm, dass

02:11:37.090 --> 02:11:39.090
das nicht kompatibilitätsmäßig eingebaut

02:11:39.090 --> 02:11:46.750
ist in der Sprache.

02:11:46.750 --> 02:11:48.750
By the way, das hier können wir übrigens

02:11:48.750 --> 02:11:50.750
schöner handeln, wenn wir

02:11:50.750 --> 02:11:57.070
ihm einfach so sagen.

02:11:57.070 --> 02:11:59.070
Ne, können wir nicht.

02:11:59.070 --> 02:12:05.200
Can't wait.

02:12:05.200 --> 02:12:07.200
Ja okay, machen wir.

02:12:07.200 --> 02:12:11.920
Klammern drum.

02:12:11.920 --> 02:12:13.920
Richtig dumm, dass es das nicht kann.

02:12:13.920 --> 02:12:17.680
Wo war das andere if?

02:12:17.680 --> 02:12:19.680
Ich habe es doch gerade noch aus dem if rausgeschmissen.

02:12:19.680 --> 02:12:26.830
Hier oben.

02:12:26.830 --> 02:12:28.830
Ja ne, das lassen wir.

02:12:28.830 --> 02:12:30.830
Das ist auch so ganz gut lesbar.

02:12:30.830 --> 02:12:32.830
So, WebSocketFrame, das brauchen wir gleich wieder.

02:12:32.830 --> 02:12:34.830
BufferVector brauchen wir oben auch gleich wieder.

02:12:34.830 --> 02:12:36.830
Das können wir jetzt ein bisschen

02:12:36.830 --> 02:12:38.830
verschönern hier oben.

02:12:38.830 --> 02:12:40.830
So, WSWebSocketFrame.

02:12:40.830 --> 02:12:44.210
So, dann brauchen wir

02:12:44.210 --> 02:12:46.210
MaxClients.

02:12:46.210 --> 02:12:50.540
Im Prinzip,

02:12:50.540 --> 02:12:52.540
braucht das hier eine extra Variable.

02:12:52.540 --> 02:12:54.540
Warum nehme ich nicht einfach immer das Ding hier?

02:12:54.540 --> 02:13:01.540
Warum?

02:13:01.540 --> 02:13:03.540
Das brauche ich doch überhaupt alles gar nicht.

02:13:03.540 --> 02:13:05.540
Kann ich auch alles hier mitmachen?

02:13:05.540 --> 02:13:07.540
Ah Moment, FDs

02:13:07.540 --> 02:13:09.540
brauche ich.

02:13:09.540 --> 02:13:13.230
Aber das muss auch.

02:13:13.230 --> 02:13:15.230
Kann ich im Prinzip auch das gleiche setzen.

02:13:15.230 --> 02:13:17.230
So, das muss Frame

02:13:17.230 --> 02:13:21.820
sein.

02:13:21.820 --> 02:13:23.820
Kann man schon gleich viel besser lesen.

02:13:23.820 --> 02:13:25.820
So, das haben wir gesagt, das brauchen wir nicht.

02:13:25.820 --> 02:13:27.820
MemSet, weil

02:13:27.820 --> 02:13:29.820
das hier schon

02:13:29.820 --> 02:13:31.820
alles initialisiert, korrekt.

02:13:31.820 --> 02:13:33.820
Buffer, MemSet,

02:13:33.820 --> 02:13:35.820
Gedöns brauchen wir auch nicht.

02:13:35.820 --> 02:13:37.820
Weil wir hier schon

02:13:37.820 --> 02:13:41.650
unseren Buffer haben,

02:13:41.650 --> 02:13:45.790
können wir uns auch sparen.

02:13:45.790 --> 02:13:47.790
Ja, siehste, wird gleich viel.

02:13:47.790 --> 02:13:49.790
So, Payload

02:13:49.790 --> 02:13:51.790
wird

02:13:51.790 --> 02:13:53.790
BufferData

02:13:53.790 --> 02:13:58.510
BufferLength

02:13:58.510 --> 02:14:00.510
Size

02:14:00.510 --> 02:14:06.060
Ja.

02:14:06.060 --> 02:14:08.060
Siehste, passt schon viel besser.

02:14:08.060 --> 02:14:10.060
Text

02:14:10.060 --> 02:14:12.060
Kann man hier vielleicht auch direkt was initialisieren?

02:14:12.060 --> 02:14:16.210
Ah

02:14:16.210 --> 02:14:20.670
Kann ich hier direkt?

02:14:20.670 --> 02:14:24.620
Haha

02:14:24.620 --> 02:14:28.060
Guck mal hier.

02:14:28.060 --> 02:14:30.060
Ist das jetzt schöner? Ich weiß nicht.

02:14:30.060 --> 02:14:39.460
Ist das schöner?

02:14:39.460 --> 02:14:41.460
Ne, Moment, das funzt nicht so, wie ich mir das gedacht habe.

02:14:41.460 --> 02:14:43.460
Die

02:14:43.460 --> 02:14:47.020
Hier setze ich ja erst den Content.

02:14:47.020 --> 02:14:50.720
Ne, das mache ich ja noch nicht.

02:14:50.720 --> 02:14:52.720
Ne, ne.

02:14:52.720 --> 02:14:54.720
Sagt ihr mal, Leute.

02:14:54.720 --> 02:14:56.720
Warum bin ich eigentlich so ultra

02:14:56.720 --> 02:14:58.720
Pepega?

02:14:58.720 --> 02:15:00.720
Warum verwende ich den Vektor

02:15:00.720 --> 02:15:02.720
Uint8? Warum verwende ich nicht einfach

02:15:02.720 --> 02:15:06.670
einen Arduino String?

02:15:06.670 --> 02:15:11.010
Das kommt doch aufs gleiche raus.

02:15:11.010 --> 02:15:17.840
Oder nicht? Length?

02:15:17.840 --> 02:15:19.840
Und jetzt?

02:15:19.840 --> 02:15:23.150
RC String.

02:15:23.150 --> 02:15:25.150
Ah, dann muss ich es casten.

02:15:25.150 --> 02:15:27.150
Ja, aber das kommt trotzdem aufs gleiche

02:15:27.150 --> 02:15:31.100
raus. Das ist doch viel angenehmer.

02:15:31.100 --> 02:15:33.100
Uint8

02:15:33.100 --> 02:15:35.100
So.

02:15:35.100 --> 02:15:37.100
Das ist doch viel angenehmer, weil jetzt

02:15:37.100 --> 02:15:39.100
kann ich auch einfach sagen, hier Buffer,

02:15:39.100 --> 02:15:41.100
plus, gleich.

02:15:41.100 --> 02:15:43.100
Ja, was schreiben wir denn da rein? 0w.

02:15:43.100 --> 02:15:45.100
Fertig. Das ist doch viel besser, als

02:15:45.100 --> 02:15:47.100
mit irgendwelchen Low Level C Sachen

02:15:47.100 --> 02:15:50.860
rumzuhantieren.

02:15:50.860 --> 02:15:52.860
So, das kann man sogar noch Auto machen.

02:15:52.860 --> 02:16:04.660
Ja.

02:16:04.660 --> 02:16:06.660
Okay, das können wir uns dann hier sparen.

02:16:06.660 --> 02:16:08.660
Das setzen wir alles auf 0 und initialisieren

02:16:08.660 --> 02:16:10.660
das unten dann. So, das

02:16:10.660 --> 02:16:12.660
Logging hier lassen wir erstmal drinnen.

02:16:12.660 --> 02:16:14.660
So, wir gucken jetzt im Prinzip,

02:16:14.660 --> 02:16:16.660
ob Get Client List funktioniert hat.

02:16:16.660 --> 02:16:18.660
Wenn nicht, dann

02:16:18.660 --> 02:16:29.390
Bäm. Das ist okay.

02:16:29.390 --> 02:16:34.560
So, und das heißt Frame Socket.

02:16:34.560 --> 02:16:38.450
Was macht der denn hier

02:16:38.450 --> 02:16:40.450
im Endeffekt? Der

02:16:40.450 --> 02:16:42.450
iteratet einmal über

02:16:42.450 --> 02:16:44.450
Client

02:16:44.450 --> 02:16:46.450
FDCs drüber.

02:16:46.450 --> 02:16:55.390
Äh.

02:16:55.390 --> 02:16:57.390
Was ist das hier überhaupt für eine Syntax gerade?

02:16:57.390 --> 02:16:59.390
Das ist ein Int Array.

02:16:59.390 --> 02:17:05.650
Moment.

02:17:05.650 --> 02:17:07.650
Ach nee, warte mal. Das ist die Size.

02:17:07.650 --> 02:17:10.960
Ach ja, okay.

02:17:10.960 --> 02:17:14.590
Jetzt check ich's.

02:17:14.590 --> 02:17:16.590
Also heißt im Endeffekt,

02:17:16.590 --> 02:17:18.590
wir können noch

02:17:18.590 --> 02:17:26.000
an der Stelle

02:17:26.000 --> 02:17:28.000
wahrscheinlich muss das hier ein

02:17:28.000 --> 02:17:30.000
Ne, das muss ein Int

02:17:30.000 --> 02:17:32.000
Pointer sein auf

02:17:32.000 --> 02:17:40.820
Da kann ich, ich kann doch hier auch

02:17:40.820 --> 02:17:42.820
wieder einen Vektor nehmen, oder?

02:17:42.820 --> 02:17:44.820
Oder einen Array sogar.

02:17:44.820 --> 02:17:46.820
Warte mal.

02:17:46.820 --> 02:17:48.820
Standard Array.

02:17:48.820 --> 02:17:50.820
Ach nee, kann ich. Moment, aber das

02:17:50.820 --> 02:17:52.820
funktioniert doch jetzt. Int.

02:17:52.820 --> 02:17:54.820
So, weil das ist ja

02:17:54.820 --> 02:17:56.820
Compile Time jetzt.

02:17:56.820 --> 02:17:58.820
Das funzt doch so.

02:17:58.820 --> 02:18:00.820
So, dann

02:18:00.820 --> 02:18:02.820
brauch ich das hier nicht mehr.

02:18:02.820 --> 02:18:06.380
Client. FDCs.

02:18:06.380 --> 02:18:08.380
Was ist eigentlich ein FDC?

02:18:08.380 --> 02:18:11.950
Filedescriptor wahrscheinlich.

02:18:11.950 --> 02:18:13.950
So.

02:18:13.950 --> 02:18:15.950
Und hier brauch ich

02:18:15.950 --> 02:18:17.950
jetzt Length oder so.

02:18:17.950 --> 02:18:19.950
Äh, hallo?

02:18:19.950 --> 02:18:21.950
Autocomplete.

02:18:21.950 --> 02:18:26.670
Nice.

02:18:26.670 --> 02:18:28.670
Ich glaub mein Autocomplete hat sich gerade

02:18:28.670 --> 02:18:30.670
verabschiedet.

02:18:30.670 --> 02:18:37.120
But why?

02:18:37.120 --> 02:18:39.120
Das kann selbst C++ nicht mehr sehen.

02:18:39.120 --> 02:18:41.120
Starte sich das Autocomplete neu, wenn ich

02:18:41.120 --> 02:18:43.120
sag Reload, Reload Window?

02:18:43.120 --> 02:19:08.480
Reload anyway.

02:19:08.480 --> 02:19:10.480
Leute, ich glaube es ist broken.

02:19:10.480 --> 02:19:12.480
Ich mach mal kurz

02:19:12.480 --> 02:19:19.180
neu auf. Ich glaube es hat

02:19:19.180 --> 02:19:21.180
das Zeitliche gesegnet gerade.

02:19:21.180 --> 02:19:23.180
Nein.

02:19:23.180 --> 02:19:26.620
Nein.

02:19:26.620 --> 02:19:28.620
Äh, ehrlich gesagt auch nicht.

02:19:28.620 --> 02:19:38.910
Ich hab ne ernst gemeinte Frage.

02:19:38.910 --> 02:19:40.910
Warum ist das jetzt auf einmal random kaputt?

02:19:40.910 --> 02:19:48.480
Wie kann das sein?

02:19:48.480 --> 02:19:50.480
Wie kann das sein, dass das einfach random

02:19:50.480 --> 02:19:58.850
sich destroyed hat?

02:19:58.850 --> 02:20:10.740
Was?

02:20:10.740 --> 02:20:18.980
Warum hat sich das random

02:20:18.980 --> 02:20:34.260
destroyed jetzt?

02:20:34.260 --> 02:20:37.570
Ja wie jetzt? Ja was denn jetzt?

02:20:37.570 --> 02:20:41.970
Reload Window hab ich gerade gemacht.

02:20:41.970 --> 02:20:43.970
Äh, okay.

02:20:43.970 --> 02:20:45.970
Es hat sich, es hat sich gefixt.

02:20:45.970 --> 02:20:47.970
Es hat sich selbst, es hat sich von selbst

02:20:47.970 --> 02:20:49.970
gefixt. Okay.

02:20:49.970 --> 02:20:51.970
Es, das musste wahrscheinlich einfach nur

02:20:51.970 --> 02:20:53.970
indizieren im Hintergrund nochmal schnell.

02:20:53.970 --> 02:20:55.970
Also, wir brauchen nen Pointer auf die

02:20:55.970 --> 02:20:57.970
Insta. Das geht bestimmt so mit Data.

02:20:57.970 --> 02:20:59.970
So.

02:20:59.970 --> 02:21:01.970
Und das ist jetzt

02:21:01.970 --> 02:21:03.970
was? Ein

02:21:03.970 --> 02:21:05.970
Was? Ein Pointer auf

02:21:05.970 --> 02:21:10.880
Size?

02:21:10.880 --> 02:21:12.880
Oh, jetzt bin ich, jetzt bin ich sehr verwirrt.

02:21:12.880 --> 02:21:20.220
Ach so!

02:21:20.220 --> 02:21:27.060
Ach so!

02:21:27.060 --> 02:21:29.060
Jetzt, jetzt check ich

02:21:29.060 --> 02:21:31.060
das!

02:21:31.060 --> 02:21:33.060
Man gibt dem nen Array

02:21:33.060 --> 02:21:35.060
mit Max,

02:21:35.060 --> 02:21:37.060
Maximum möglicher Size

02:21:37.060 --> 02:21:39.060
und man kriegt hier zurück

02:21:39.060 --> 02:21:41.060
die Nummer, wieviel dann am Ende

02:21:41.060 --> 02:21:46.610
wirklich drin sind.

02:21:46.610 --> 02:21:48.610
Ey, wer hat sich das wieder ausgedacht, Mann?

02:21:48.610 --> 02:21:52.880
Dann, dann brauchen wir, dann brauchen wir

02:21:52.880 --> 02:21:54.880
das doch hier. Keine Ahnung.

02:21:54.880 --> 02:22:01.780
Aber nein, es muss, es muss

02:22:01.780 --> 02:22:08.860
ein Size T sein.

02:22:08.860 --> 02:22:10.860
Jetzt verstehe ich das, was die da

02:22:10.860 --> 02:22:14.430
vorhaben. Okay.

02:22:14.430 --> 02:22:16.430
Moment, das ist

02:22:16.430 --> 02:22:18.430
Size T

02:22:18.430 --> 02:22:20.430
ist ein Pointer? What?

02:22:20.430 --> 02:22:22.430
Ich hinterfrag's

02:22:22.430 --> 02:22:24.430
gar nicht. Das findest du einfach, okay?

02:22:24.430 --> 02:22:28.000
Ach nee, das hier ist, es passt

02:22:28.000 --> 02:22:30.000
schon. Da ist ein Unterform.

02:22:30.000 --> 02:22:36.640
Kann ich hier die

02:22:36.640 --> 02:22:38.640
Null weglassen eigentlich an der Stelle?

02:22:38.640 --> 02:22:43.870
Macht das nen Unterschied? Ist das

02:22:43.870 --> 02:22:45.870
ein Unterschied, ob ich so schreibe oder so?

02:22:47.870 --> 02:22:49.870
Das Type Gedeffe geht mir auch extrem

02:22:49.870 --> 02:22:51.870
auf den Sack, Mann.

02:22:51.870 --> 02:23:02.350
Ist das ein Unterschied?

02:23:02.350 --> 02:23:06.940
Stack Variable

02:23:06.940 --> 02:23:08.940
Null

02:23:08.940 --> 02:23:10.940
or Uninitialized

02:23:10.940 --> 02:23:14.700
Difference

02:23:14.700 --> 02:23:16.700
Da müsste man, da müsste man's

02:23:16.700 --> 02:23:18.700
ChatGPT jetzt fragen, aber ich bin nicht eingeloggt.

02:23:18.700 --> 02:23:20.700
Was der Unterschied

02:23:20.700 --> 02:23:24.270
ist zwischen so und so.

02:23:24.270 --> 02:23:26.270
Also ich will wissen, was der Unterschied ist zwischen dem

02:23:26.270 --> 02:23:30.480
und dem. Ich würd sagen gar

02:23:30.480 --> 02:23:34.690
nix in dem Fall.

02:23:34.690 --> 02:23:36.690
So, dann können wir das hier,

02:23:36.690 --> 02:23:38.690
muss das wieder ein Vector sein, dass das funktioniert?

02:23:38.690 --> 02:23:40.690
Mit

02:23:40.690 --> 02:23:42.690
der Size von dem hier.

02:23:42.690 --> 02:23:48.690
Okay, und jetzt,

02:23:48.690 --> 02:23:50.690
danach kann ich sagen,

02:23:50.690 --> 02:23:56.370
Client FDs

02:23:56.370 --> 02:23:58.370
Resize, ne Resize ist auch doof,

02:23:58.370 --> 02:24:00.370
ne, Resize of

02:24:00.370 --> 02:24:09.760
Okay, ich weiß nicht, ob das

02:24:09.760 --> 02:24:14.740
funzt, was ich hier gebaut hab.

02:24:14.740 --> 02:24:16.740
Schauen wir mal.

02:24:16.740 --> 02:24:20.750
Zumindest ist es nicht

02:24:20.750 --> 02:24:22.750
wirklich lesbar, ist das was ich hier gebaut hab

02:24:22.750 --> 02:24:24.750
jetzt auch net.

02:24:24.750 --> 02:24:26.750
So, aber das kann man

02:24:26.750 --> 02:24:28.750
jetzt zumindest übersetzen

02:24:28.750 --> 02:24:30.750
nach Length oder Size.

02:24:30.750 --> 02:24:34.640
Ah, wir können jetzt ne

02:24:34.640 --> 02:24:36.640
For Each Loop machen.

02:24:36.640 --> 02:24:38.640
Das ist schöner.

02:24:38.640 --> 02:24:40.640
For Range

02:24:40.640 --> 02:24:42.640
in Client FDs

02:24:44.640 --> 02:24:48.210
Das ist dann ein bisschen schöner.

02:24:48.210 --> 02:24:50.210
For Range

02:24:50.210 --> 02:24:52.210
äh, FD

02:24:52.210 --> 02:24:54.210
File Descriptor

02:24:54.210 --> 02:24:56.210
Wir können das da ausschreiben.

02:24:56.210 --> 02:25:03.040
Okay, das ist doch

02:25:03.040 --> 02:25:05.040
tatsächlich ein bisschen besser lesbar jetzt.

02:25:05.040 --> 02:25:07.040
Mal gucken, ob's noch funktioniert,

02:25:07.040 --> 02:25:09.040
was ich jetzt gebaut hab. Ob das so

02:25:09.040 --> 02:25:11.040
quasi immer noch äck, äckvivalent

02:25:11.040 --> 02:25:13.040
zu dem ist, was vorher in C

02:25:13.040 --> 02:25:15.040
da, da gestanden hat.

02:25:15.040 --> 02:25:20.910
Schauen wir mal.

02:25:20.910 --> 02:25:22.910
Meint ihr es geht, Chat? Ich bin recht

02:25:22.910 --> 02:25:24.910
zuversichtlich.

02:25:24.910 --> 02:25:26.910
Das schöne ist, wir sehen, ob's nicht geht.

02:25:26.910 --> 02:25:28.910
Es wird einfach instant crashen, wenn's nicht geht.

02:25:28.910 --> 02:25:34.590
Funst.

02:25:34.590 --> 02:25:36.590
So.

02:25:36.590 --> 02:25:38.590
Nochmal hier zum checken.

02:25:38.590 --> 02:25:40.590
Zack.

02:25:40.590 --> 02:25:42.590
Ich schick hier oben die Message und bei beiden

02:25:42.590 --> 02:25:44.590
kommt lul weh. Zack, nice.

02:25:44.590 --> 02:25:46.590
Funst. Ja, also ein bisschen

02:25:46.590 --> 02:25:48.590
widerstrebt mir ja dieses

02:25:48.590 --> 02:25:50.590
hier voll

02:25:50.590 --> 02:25:52.590
um die Ecke Gesetze von der Size.

02:25:52.590 --> 02:25:54.590
Schade, dass man das nicht

02:25:54.590 --> 02:25:56.590
schöner machen kann. Vielleicht fällt

02:25:56.590 --> 02:25:58.590
euch noch was schöneres ein, aber mir nicht.

02:25:58.590 --> 02:26:06.960
Das lassen wir jetzt einfach so. Wir halten uns

02:26:06.960 --> 02:26:08.960
nicht so sehr an Kleingram aus.

02:26:08.960 --> 02:26:10.960
Auf. So.

02:26:10.960 --> 02:26:12.960
Das Return machen wir genau dort, wo das

02:26:12.960 --> 02:26:14.960
Problem entstehen kann.

02:26:14.960 --> 02:26:16.960
Sonst checkt's da unten keiner mehr.

02:26:16.960 --> 02:26:26.350
Kann ich nicht sagen, gleich

02:26:26.350 --> 02:26:28.350
0? Das, das wenigstens

02:26:28.350 --> 02:26:30.350
initialisiert das auf irgendwas?

02:26:30.350 --> 02:26:32.350
Dann wird's hier resized.

02:26:32.350 --> 02:26:34.350
Weil, weil

02:26:34.350 --> 02:26:36.350
jetzt mal ernsthaft, wenn ich das so dastehen hab, ne?

02:26:36.350 --> 02:26:38.350
Mal angenommen,

02:26:38.350 --> 02:26:40.350
das hier schlägt fehl.

02:26:40.350 --> 02:26:42.350
Was steht an

02:26:42.350 --> 02:26:44.350
dieser Stelle dann in FDs drinne?

02:26:44.350 --> 02:26:46.350
Es ist

02:26:46.350 --> 02:26:51.840
defined, oder was?

02:26:51.840 --> 02:26:53.840
Also jetzt schreiben wir doch lieber 0 rein.

02:26:53.840 --> 02:26:55.840
Dann crasht's an der Stelle auch nicht,

02:26:55.840 --> 02:26:57.840
wenn da irgendein Müll

02:26:57.840 --> 02:26:59.840
drinne steht.

02:26:59.840 --> 02:27:01.840
Okay.

02:27:01.840 --> 02:27:03.840
Was gleich 0

02:27:03.840 --> 02:27:05.840
ist, oder?

02:27:05.840 --> 02:27:09.920
Defaultmäßig. Aber dann

02:27:09.920 --> 02:27:11.920
schreiben wir doch lieber 0 rein, dann

02:27:11.920 --> 02:27:13.920
versteht man's auch.

02:27:15.920 --> 02:27:17.920
Gibt es sowas hier in C Sharp?

02:27:17.920 --> 02:27:19.920
In C++ für

02:27:19.920 --> 02:27:23.680
C Sharp, dass man den Kram

02:27:23.680 --> 02:27:25.680
irgendwie so, oder zu size

02:27:25.680 --> 02:27:27.680
oder so? Sowas gibt's nicht, gell?

02:27:27.680 --> 02:27:31.310
Oder irgendwie 0.0d?

02:27:31.310 --> 02:27:33.310
Ne, sowas. Das wär zu lesbar

02:27:33.310 --> 02:27:56.340
dann. Okay, wir lassen das jetzt so.

02:27:56.340 --> 02:27:58.340
Ist in Ordnung.

02:27:58.340 --> 02:28:04.400
Passt. Buffer kommt jetzt

02:28:04.400 --> 02:28:06.400
noch hier runter.

02:28:06.400 --> 02:28:08.400
An der Stelle, wo man braucht.

02:28:08.400 --> 02:28:10.400
Ich finde, Chat,

02:28:10.400 --> 02:28:12.400
das haben wir ganz gut aufgeräumt.

02:28:12.400 --> 02:28:14.400
Ich finde, man kann jetzt durchaus verstehen,

02:28:14.400 --> 02:28:16.400
was hier passiert, oder?

02:28:16.400 --> 02:28:18.400
Es passt ohne Probleme hier auf ne Seite.

02:28:18.400 --> 02:28:20.400
Man kann, wenn man das liest, eigentlich

02:28:20.400 --> 02:28:22.400
relativ gut erkennen, was passiert.

02:28:22.400 --> 02:28:24.400
Das finde ich gut.

02:28:24.400 --> 02:28:26.400
Das gefällt mir.

02:28:26.400 --> 02:28:28.400
Es ist insgesamt, es ist jetzt gar nicht so lang geworden.

02:28:28.400 --> 02:28:30.400
Man kann das echt gut erkennen.

02:28:30.400 --> 02:28:32.400
Okay, also, unsere Websocket-Verbindung

02:28:32.400 --> 02:28:40.830
funktioniert.

02:28:40.830 --> 02:28:42.830
Websocket-Funst. Kommentare.

02:28:42.830 --> 02:28:44.830
Wozu braucht man da Kommentare? Das ist

02:28:44.830 --> 02:28:46.830
obviously self-documenting.

02:28:46.830 --> 02:28:50.140
Außerdem hat's keine Fehler.

02:28:50.140 --> 02:28:52.140
Muss es nie jemand anderes debuggen.

02:28:54.140 --> 02:28:56.140
Es gibt übrigens ein schönes Makro dafür.

02:28:56.140 --> 02:28:58.140
Für dieses ESP-Okay.

02:28:58.140 --> 02:29:00.140
Es gibt, ähm,

02:29:00.140 --> 02:29:02.140
ESP-Return oder sowas.

02:29:02.140 --> 02:29:06.670
ESP-Check.

02:29:06.670 --> 02:29:09.980
Sowas hier, genau.

02:29:09.980 --> 02:29:15.090
Ha.

02:29:15.090 --> 02:29:26.400
Es gab so nen Return-Makro.

02:29:26.400 --> 02:29:28.400
ESP-Return.

02:29:28.400 --> 02:29:30.400
Das ist

02:29:30.400 --> 02:29:32.400
eigentlich, ich hab, das hätt so

02:29:32.400 --> 02:29:37.380
ESP-Return heißt das.

02:29:37.380 --> 02:29:39.380
Da kann man sich sowas nämlich

02:29:39.380 --> 02:29:41.380
ESP-Return on

02:29:41.380 --> 02:29:43.380
False. Genau.

02:29:43.380 --> 02:29:52.830
So, was muss man dafür includen?

02:29:52.830 --> 02:30:01.650
Was braucht man dafür?

02:30:01.650 --> 02:30:03.650
ESP-Return on Error.

02:30:03.650 --> 02:30:05.650
Welches File muss ich dafür

02:30:05.650 --> 02:30:11.390
includen?

02:30:11.390 --> 02:30:13.390
Es ist zu obvious.

02:30:13.390 --> 02:30:26.720
Äh.

02:30:26.720 --> 02:30:32.340
ESP-Check.h

02:30:32.340 --> 02:30:36.030
ESP-Check.h

02:30:36.030 --> 02:30:39.600
Include.

02:30:39.600 --> 02:30:57.250
ESP-Check.h

02:30:57.250 --> 02:30:59.250
Äh.

02:30:59.250 --> 02:31:04.930
Warum ist das nicht?

02:31:04.930 --> 02:31:06.930
Ah, hier ist's doch. ESP-Return on Error.

02:31:06.930 --> 02:31:10.430
Ja, da ist es doch.

02:31:10.430 --> 02:31:14.000
Es ist doch definiert.

02:31:14.000 --> 02:31:18.270
ESP-Return on Error.

02:31:18.270 --> 02:31:20.270
Und wie benutzt man das jetzt?

02:31:20.270 --> 02:31:22.270
Ich hätte jetzt einfach gesagt, man gibt da den Return-Code und gut ist's.

02:31:22.270 --> 02:31:24.270
Aber das ist, so funktioniert das ja anscheinend nicht.

02:31:24.270 --> 02:31:26.270
ESP-Return on Error.

02:31:26.270 --> 02:31:28.270
Wie muss ich das jetzt aufrufen?

02:31:28.270 --> 02:31:32.860
ESP-Return

02:31:32.860 --> 02:31:37.520
on Error.

02:31:37.520 --> 02:31:39.520
Alter, wer soll denn

02:31:39.520 --> 02:31:41.520
diesen Scheiß lesen?

02:31:41.520 --> 02:31:43.520
Jetzt mal ernsthaft.

02:31:43.520 --> 02:31:45.520
X.

02:31:45.520 --> 02:31:47.520
Beste Bezeichnung.

02:31:47.520 --> 02:31:51.410
X. Achso, und der, der lockt

02:31:51.410 --> 02:31:53.410
dann auch noch.

02:31:53.410 --> 02:31:55.410
Ah, dann ist es doch irgendwie

02:31:55.410 --> 02:31:58.720
busy. Also im Prinzip

02:31:58.720 --> 02:32:00.720
möchten die jetzt, dass man

02:32:00.720 --> 02:32:02.720
sagt, ah, ähm

02:32:02.720 --> 02:32:04.720
WS-Händler

02:32:04.720 --> 02:32:06.720
Äh, ja.

02:32:06.720 --> 02:32:13.040
Failed.

02:32:13.040 --> 02:32:15.040
So, sowas, sowas wollen die haben.

02:32:15.040 --> 02:32:17.040
So, und jetzt funzt es auch, hm?

02:32:17.040 --> 02:32:21.120
Näh.

02:32:21.120 --> 02:32:23.120
Also, es ist teilweise schon

02:32:23.120 --> 02:32:25.120
ein bisschen abfacke, oder?

02:32:25.120 --> 02:32:31.630
Was hat der denn für Probleme?

02:32:31.630 --> 02:32:33.630
Ah, obviously. Jetzt ist klar.

02:32:33.630 --> 02:32:35.630
Jetzt ist, jetzt erkenne ich alles.

02:32:35.630 --> 02:32:37.630
Hätte das nicht mal früher sagen können.

02:32:37.630 --> 02:32:41.970
Chat, ich glaube, jetzt ist

02:32:41.970 --> 02:32:43.970
uns alles klar, wenn wir das gesehen haben.

02:32:43.970 --> 02:32:47.410
Obviously.

02:32:47.410 --> 02:32:49.410
Self-Documenting.

02:32:49.410 --> 02:33:00.210
Es ist wirklich sehr gut lesbar.

02:33:00.210 --> 02:33:02.210
Es ist wirklich exzellent.

02:33:02.210 --> 02:33:07.120
Also, ich behaupte

02:33:07.120 --> 02:33:09.120
immer noch, ich rufe das eigentlich richtig auf, aber

02:33:09.120 --> 02:33:11.120
anscheinend nicht.

02:33:11.120 --> 02:33:13.120
Ja, wie, wie, wie

02:33:13.120 --> 02:33:15.120
benutzt man diesen Chat denn überhaupt?

02:33:15.120 --> 02:33:17.120
Habt ihr da nicht mal ein Beispiel

02:33:17.120 --> 02:33:19.120
für? Ja,

02:33:19.120 --> 02:33:21.120
X.

02:33:21.120 --> 02:33:23.120
Log-Tag? Format.

02:33:23.120 --> 02:33:25.120
Mach ich doch. Und was ist X?

02:33:25.120 --> 02:33:29.140
X weiß man nicht.

02:33:29.140 --> 02:33:35.580
X ist X.

02:33:35.580 --> 02:33:37.580
Ich will das jetzt rauskriegen. Da muss es doch ein

02:33:37.580 --> 02:33:39.580
Exempel für geben.

02:33:39.580 --> 02:33:41.580
Das triggert mich jetzt schon wieder.

02:33:41.580 --> 02:33:47.650
Alter.

02:33:47.650 --> 02:33:55.820
Clarify. Ist schön, wenn ihr clarifiet.

02:33:55.820 --> 02:33:59.520
Okay, hier.

02:33:59.520 --> 02:34:01.520
Hier, hier.

02:34:01.520 --> 02:34:03.520
Äh, hallo? Angeblich ist das hier drinnen.

02:34:03.520 --> 02:34:09.140
Ist es nicht, okay.

02:34:09.140 --> 02:34:12.960
Tag. Ja, genau.

02:34:12.960 --> 02:34:19.540
Ich rufe das doch richtig auf.

02:34:19.540 --> 02:34:21.540
Log-Tag.

02:34:21.540 --> 02:34:23.540
Alter, wer soll denn den

02:34:23.540 --> 02:34:25.540
Scheiß lesen, Mann?

02:34:25.540 --> 02:34:27.540
Logge.

02:34:27.540 --> 02:34:38.080
Moment, ist der Tag zu hoch?

02:34:38.080 --> 02:34:40.080
Also,

02:34:40.080 --> 02:34:42.080
sorry, ich habe absolut keine Ahnung, wie man den Kram

02:34:42.080 --> 02:34:44.080
aufrufen soll.

02:34:44.080 --> 02:34:46.080
Ja, Software muss auf Disketten passen.

02:34:46.080 --> 02:34:53.230
Es ist mir komplett

02:34:53.230 --> 02:34:55.230
schleierhaft, wie das funktionieren soll.

02:34:55.230 --> 02:34:58.610
Okay, weißt du was?

02:34:58.610 --> 02:35:00.610
Scheiß drauf.

02:35:00.610 --> 02:35:02.610
Wir machen es leserlich.

02:35:02.610 --> 02:35:04.610
Okay?

02:35:04.610 --> 02:35:06.610
Wir checken, ob es nicht okay ist.

02:35:06.610 --> 02:35:08.610
Und dann

02:35:08.610 --> 02:35:10.610
returnen wir. Fertig.

02:35:10.610 --> 02:35:12.610
Das kann man, ganz ehrlich,

02:35:12.610 --> 02:35:14.610
besser lesen als den anderen Schrott da.

02:35:14.610 --> 02:35:16.610
Okay, gut. Websocket.

02:35:16.610 --> 02:35:18.610
Funst.

02:35:18.610 --> 02:35:20.610
Mission accomplished.

02:35:20.610 --> 02:35:22.610
Das packen wir noch.

02:35:22.610 --> 02:35:24.610
Das machen wir dann aus.

02:35:24.610 --> 02:35:26.610
Gut, also.

02:35:26.610 --> 02:35:28.610
Partitionstabelle.

02:35:28.610 --> 02:35:30.610
Als nächstes jetzt gemacht.

02:35:30.610 --> 02:35:32.610
Wobei, muss nicht wirklich gemacht werden.

02:35:32.610 --> 02:35:34.610
Geht auch ohne.

02:35:34.610 --> 02:35:36.610
Das Ding hat genug RAM.

02:35:36.610 --> 02:35:38.610
Aber als Funst. Jetzt haben wir unsere Websocket-Verbindung.

02:35:38.610 --> 02:35:40.610
Jetzt können wir ja testen, ob unsere

02:35:40.610 --> 02:35:42.610
Websocket-Verbindung auch ordentlich funktioniert.

02:35:42.610 --> 02:35:44.610
Das testen wir jetzt als nächstes.

02:35:44.610 --> 02:35:46.610
So, Websocket-Verbindung funktioniert.

02:35:46.610 --> 02:35:48.610
Ich muss jetzt natürlich von außen irgendwas

02:35:48.610 --> 02:35:50.610
verschicken können über Websocket.

02:35:50.610 --> 02:35:52.610
Also, machen wir sowas hier.

02:35:52.610 --> 02:35:54.610
Irgendwie Hue

02:35:54.610 --> 02:35:56.610
oder, wie nennen wir das Ding?

02:35:56.610 --> 02:35:58.610
WS

02:35:58.610 --> 02:36:00.610
Broadcast, wir nennen das Broadcast.

02:36:00.610 --> 02:36:02.610
Broadcast.

02:36:02.610 --> 02:36:04.610
Websocket

02:36:04.610 --> 02:36:06.610
Broadcast.

02:36:06.610 --> 02:36:08.610
Und zwar einen Ring.

02:36:08.610 --> 02:36:10.610
Hier, Message.

02:36:10.610 --> 02:36:12.610
Okay.

02:36:12.610 --> 02:36:17.900
Und jetzt,

02:36:17.900 --> 02:36:19.900
okay, wir machen es einfach so.

02:36:19.900 --> 02:36:23.920
Wir generieren random.

02:36:23.920 --> 02:36:25.920
Ne, wir

02:36:25.920 --> 02:36:27.920
generieren nicht random.

02:36:27.920 --> 02:36:29.920
Wir senden einfach die Millisekunden,

02:36:29.920 --> 02:36:31.920
die das Ding oben ist, per Websocket.

02:36:31.920 --> 02:36:33.920
So, alle

02:36:33.920 --> 02:36:35.920
100 Millisekunden

02:36:35.920 --> 02:36:37.920
senden wir das jetzt.

02:36:37.920 --> 02:36:39.920
Also, Web-Server,

02:36:39.920 --> 02:36:41.920
Websocket

02:36:41.920 --> 02:36:43.920
Broadcast,

02:36:43.920 --> 02:36:45.920
Broadcast,

02:36:45.920 --> 02:36:47.920
eines, eine, eine,

02:36:47.920 --> 02:36:49.920
ja,

02:36:49.920 --> 02:36:51.920
Millisekonds

02:36:51.920 --> 02:36:57.660
als String.

02:36:57.660 --> 02:36:59.660
Okay, so, und jetzt müssen wir gucken, wie wir das Ganze machen.

02:36:59.660 --> 02:37:01.660
Das hier ist

02:37:01.660 --> 02:37:03.660
ja eigentlich ziemlich unsinnig,

02:37:03.660 --> 02:37:05.660
wie wir es gebaut haben, weil das wollen wir an der Stelle

02:37:05.660 --> 02:37:09.360
ja gar nicht.

02:37:09.360 --> 02:37:12.670
Message juckt null,

02:37:12.670 --> 02:37:16.300
weil wir mit der Message nichts machen.

02:37:16.300 --> 02:37:20.510
Eigentlich ist das doch ziemlich,

02:37:20.510 --> 02:37:22.510
ja.

02:37:22.510 --> 02:37:24.510
Das kommt auf jeden Fall hier raus.

02:37:24.510 --> 02:37:27.890
Return, Return,

02:37:27.890 --> 02:37:29.890
ESP okay.

02:37:29.890 --> 02:37:31.890
Weil das Queuen wollen wir ja nicht

02:37:31.890 --> 02:37:33.890
hier bei jeder eingehenden Message

02:37:33.890 --> 02:37:35.890
machen,

02:37:35.890 --> 02:37:37.890
sondern immer,

02:37:37.890 --> 02:37:39.890
wenn wir einen neuen Wert haben.

02:37:39.890 --> 02:37:41.890
Heißt im Endeffekt,

02:37:41.890 --> 02:37:43.890
Broadcast,

02:37:43.890 --> 02:37:48.800
Broadcast,

02:37:48.800 --> 02:37:50.800
hier machen wir das drinnen.

02:37:50.800 --> 02:37:55.200
Da kann ich auch mal ein ordentliches

02:37:55.200 --> 02:37:57.200
Error-Objekt returnen, mit dem man was anfangen kann.

02:37:57.200 --> 02:38:01.020
Request Handle.

02:38:01.020 --> 02:38:11.570
Ich habe an der Stelle kein

02:38:11.570 --> 02:38:13.570
Request Handle. Ne, Moment, das muss

02:38:13.570 --> 02:38:15.570
nicht das Request Handle sein. Blödsinn.

02:38:15.570 --> 02:38:29.600
Warte mal, warte mal.

02:38:29.600 --> 02:38:31.600
Hätte ich mir den ganzen Kram sparen können?

02:38:31.600 --> 02:38:33.600
Bei den

02:38:33.600 --> 02:38:35.600
Request Handle steht ja alles drin, was man braucht.

02:38:35.600 --> 02:38:45.120
Schreibst du eine Wetterstation?

02:38:45.120 --> 02:38:47.120
Ne.

02:38:47.120 --> 02:38:49.120
Aber ich will trotzdem da

02:38:49.120 --> 02:38:52.880
Daten auf einer Webseite anzeigen.

02:38:52.880 --> 02:38:54.880
Okay, geil. Das kann ich mir sparen hier drin.

02:38:54.880 --> 02:38:56.880
Das brauche ich gar nicht. Nice.

02:38:56.880 --> 02:38:58.880
Gut, dass wir das gemacht haben.

02:39:00.880 --> 02:39:02.880
Aber zum Testen war es ja notwendig.

02:39:02.880 --> 02:39:04.880
So, Request Handle

02:39:04.880 --> 02:39:06.880
ist eigentlich ganz easy.

02:39:06.880 --> 02:39:08.880
Request Handle ist

02:39:08.880 --> 02:39:10.880
unser Server Handle.

02:39:10.880 --> 02:39:16.050
Server.

02:39:16.050 --> 02:39:18.050
Und

02:39:18.050 --> 02:39:20.050
wir übergeben wieder unser

02:39:20.050 --> 02:39:22.050
Server Handle. So.

02:39:22.050 --> 02:39:26.900
Ja, okay.

02:39:26.900 --> 02:39:28.900
Das sollte eigentlich jetzt funktionieren,

02:39:28.900 --> 02:39:34.580
was ich gebaut habe.

02:39:34.580 --> 02:39:36.580
Hoffe ich mal.

02:39:36.580 --> 02:39:38.580
Wir sollten jetzt über Websocket

02:39:38.580 --> 02:39:40.580
alle 100

02:39:40.580 --> 02:39:46.960
Millisekunden was

02:39:46.960 --> 02:39:50.530
bekommen.

02:39:50.530 --> 02:39:58.160
Wir bekommen nichts.

02:39:58.160 --> 02:40:01.600
Warum nicht?

02:40:01.600 --> 02:40:03.600
Was habe ich, was habe ich

02:40:03.600 --> 02:40:05.600
falsch

02:40:05.600 --> 02:40:11.090
gedacht?

02:40:11.090 --> 02:40:16.770
Was habe ich falsch gedacht?

02:40:16.770 --> 02:40:26.160
Was haben wir nicht?

02:40:26.160 --> 02:40:28.160
Aber was ist denn da jetzt der große

02:40:28.160 --> 02:40:30.160
Unterschied zwischen?

02:40:30.160 --> 02:40:32.160
Das verstehe ich jetzt nicht.

02:40:32.160 --> 02:40:34.160
Okay, das müssen wir dann doch nochmal

02:40:34.160 --> 02:40:36.160
rückgängig machen.

02:40:36.160 --> 02:40:38.160
Also das lassen wir so.

02:40:38.160 --> 02:40:40.160
Aber ich weiß,

02:40:40.160 --> 02:40:42.160
ich war blöd, dass ich das hier

02:40:42.160 --> 02:40:45.730
gelöscht habe.

02:40:45.730 --> 02:40:50.830
Wartet mal. Okay.

02:40:50.830 --> 02:40:52.830
Machen das, wir machen das jetzt nochmal.

02:40:52.830 --> 02:40:59.310
So, also

02:40:59.310 --> 02:41:01.310
ich lasse mal checken, ob noch alles funktioniert.

02:41:01.310 --> 02:41:03.310
So, was

02:41:03.310 --> 02:41:05.310
habe ich jetzt gemacht? Im Endeffekt

02:41:05.310 --> 02:41:07.310
ESP Error

02:41:07.310 --> 02:41:11.840
Server Handle.

02:41:11.840 --> 02:41:16.560
Ist denn Request Handle überhaupt

02:41:16.560 --> 02:41:18.560
das gleiche? Request Handle?

02:41:18.560 --> 02:41:20.560
Warte, ja, das ist das Server.

02:41:20.560 --> 02:41:29.380
Okay. Hm.

02:41:29.380 --> 02:41:36.660
Äh.

02:41:36.660 --> 02:41:38.660
Chatgear, was habe

02:41:38.660 --> 02:41:40.660
ich kaputt gemacht?

02:41:40.660 --> 02:41:48.830
Anno & Echo.

02:41:48.830 --> 02:41:50.830
Fuck! Was habe ich jetzt kaputt gemacht? Shit!

02:41:52.830 --> 02:42:04.720
Ah!

02:42:04.720 --> 02:42:06.720
Kann das sein, dass einfach die Queue voll ist?

02:42:06.720 --> 02:42:12.850
Lass mal kurz raus.

02:42:12.850 --> 02:42:14.850
Was habe ich denn jetzt, was habe ich denn jetzt zerstört?

02:42:14.850 --> 02:42:16.850
Was die,

02:42:16.850 --> 02:42:18.850
ich habe doch gar nichts mehr großartig geändert.

02:42:27.470 --> 02:42:32.000
Eben ging es doch noch.

02:42:32.000 --> 02:42:44.660
Hä? What the fuck?

02:42:46.660 --> 02:42:48.660
Was habe ich denn kaputt gemacht jetzt?

02:42:48.660 --> 02:42:50.660
Da hat sich doch gar nichts dran geändert, Mann.

02:42:50.660 --> 02:42:54.420
Ich hätte mal einen Comet

02:42:54.420 --> 02:42:56.420
machen sollen. Okay, scheiß drauf, ich muss mal

02:42:56.420 --> 02:42:58.420
kurz rückgängig machen. Wo hat es dann

02:42:58.420 --> 02:43:03.390
funktioniert?

02:43:03.390 --> 02:43:05.390
Wenn ich das finde, mache ich jetzt erst mal einen Git Comet.

02:43:05.390 --> 02:43:14.980
Ja, hier habe ich den komischen

02:43:14.980 --> 02:43:16.980
ESP-Check gedönst gemacht.

02:43:16.980 --> 02:43:18.980
Was

02:43:18.980 --> 02:43:26.380
unsinnig war. Und dann

02:43:26.380 --> 02:43:28.380
habe ich die Logs rausgeschmissen.

02:43:28.380 --> 02:43:30.380
Ach!

02:43:30.380 --> 02:43:32.380
Oh Mann, ich bin so dumm!

02:43:32.380 --> 02:43:34.380
Ich füge einfach nichts mehr ein!

02:43:34.380 --> 02:43:40.260
Das funzt wahrscheinlich alles!

02:43:40.260 --> 02:43:46.060
Wahrscheinlich funzt das alles.

02:43:46.060 --> 02:43:48.060
Ich habe vergessen, Text einzufügen.

02:43:48.060 --> 02:44:01.870
Ah, shit.

02:44:01.870 --> 02:44:03.870
Naja.

02:44:03.870 --> 02:44:05.870
Was soll ich so machen, ne?

02:44:05.870 --> 02:44:07.870
Okay.

02:44:07.870 --> 02:44:09.870
Okay, präge Chat, präge.

02:44:09.870 --> 02:44:15.620
Chat, bevor ich es jetzt ausprobiere.

02:44:15.620 --> 02:44:17.620
Eine Runde präge.

02:44:17.620 --> 02:44:21.120
Eine Runde präge in Chat.

02:44:21.120 --> 02:44:23.120
Ich habe echt Schiss, dass es jetzt nicht funktioniert

02:44:23.120 --> 02:44:26.820
und ich nicht finde, woran es liegt.

02:44:26.820 --> 02:44:28.820
In der Zwischenzeit

02:44:28.820 --> 02:44:36.540
trinke ich mal was. Fuck!

02:44:36.540 --> 02:44:43.020
Es funzt nicht.

02:44:43.020 --> 02:44:47.870
Warum? Scheiße!

02:44:47.870 --> 02:44:56.620
Warum?

02:44:56.620 --> 02:44:58.620
Was habe ich kaputt gemacht?

02:44:58.620 --> 02:45:00.620
Okay, ich muss doch noch mal rückgängig

02:45:00.620 --> 02:45:02.620
machen.

02:45:02.620 --> 02:45:12.590
Shit.

02:45:12.590 --> 02:45:15.970
Okay, ich mache jetzt einen Git-Commit, wenn es funktioniert.

02:45:15.970 --> 02:45:17.970
Ich habe doch gar nichts groß geändert hier.

02:45:17.970 --> 02:45:22.820
Ich habe die Logs

02:45:22.820 --> 02:45:27.730
hier wieder reingemacht.

02:45:27.730 --> 02:45:42.880
Wir haben den String-Buffer.

02:45:42.880 --> 02:45:44.880
So.

02:45:44.880 --> 02:45:53.950
Aber hier ging das doch noch. Erzählt mir doch nichts.

02:45:53.950 --> 02:45:55.950
Hier ging das doch noch.

02:45:55.950 --> 02:45:57.950
Chat, hätte ich mal einen Commit gemacht,

02:45:57.950 --> 02:45:59.950
anstatt weiter zu basteln.

02:45:59.950 --> 02:46:15.490
Ist das nicht noch die richtige IP?

02:46:15.490 --> 02:46:24.080
Hä?

02:46:24.080 --> 02:46:31.620
Das hat doch noch... Der ruft, das hat doch noch...

02:46:31.620 --> 02:46:48.050
Der ruft das gar nicht mehr auf.

02:46:48.050 --> 02:46:59.100
Jetzt blicke ich da mal durch.

02:46:59.100 --> 02:47:01.100
Ist das hier, dass das gleich Null ist, ein Problem?

02:47:01.100 --> 02:47:09.540
Ich weiß nicht, ob ich es seitdem ausprobiert habe.

02:47:09.540 --> 02:47:24.940
Wie hat es doch noch funktioniert?

02:47:24.940 --> 02:47:29.860
Wie hat es doch noch funktioniert?

02:47:29.860 --> 02:47:31.860
Oder

02:47:31.860 --> 02:47:33.860
war ich jetzt total durch...

02:47:33.860 --> 02:47:53.040
Hä?

02:47:53.040 --> 02:47:57.700
Ja, hier geht's!

02:47:57.700 --> 02:47:59.700
Moment, ist wirklich das Problem, das ich gesagt habe,

02:47:59.700 --> 02:48:01.700
gleich Null?

02:48:01.700 --> 02:48:03.700
Ist das das, was kaputt gemacht hat?

02:48:03.700 --> 02:48:08.100
Darf man das nicht?

02:48:08.100 --> 02:48:14.740
Jetzt könnte man ein bisschen schneller flashen.

02:48:14.740 --> 02:48:16.740
Da pennst du dir ein, weil...

02:48:16.740 --> 02:48:18.740
Ist das gleich Null, das was das kaputt gemacht hat?

02:48:18.740 --> 02:48:25.500
Ist das gleich Null, das was das kaputt gemacht hat?

02:48:25.500 --> 02:48:27.500
Ja! Warum?

02:48:27.500 --> 02:48:29.500
Warum ist das überhaupt ein Unterschied?

02:48:29.500 --> 02:48:31.500
Warum ist das überhaupt ein Unterschied?

02:48:31.500 --> 02:48:33.500
Sollte Null nicht default sein?

02:48:33.500 --> 02:48:37.780
Sollte Null nicht default sein?

02:48:37.780 --> 02:48:39.780
Und hier wird es doch eh überschrieben.

02:48:39.780 --> 02:48:41.780
Und hier wird es doch eh überschrieben.

02:48:41.780 --> 02:48:46.180
Okay, was macht der hier?

02:48:46.180 --> 02:48:48.180
Ach, das ist ne...

02:48:48.180 --> 02:48:50.180
Nee, ist es nicht.

02:48:50.180 --> 02:48:54.000
Nee, nee, ist okay.

02:48:54.000 --> 02:48:56.000
Der checkt, ob es gleich Null ist.

02:48:56.000 --> 02:48:58.000
Und dann sagt er

02:48:58.000 --> 02:49:00.000
invalid args.

02:49:00.000 --> 02:49:02.000
Es muss im Endeffekt...

02:49:02.000 --> 02:49:05.760
Nee.

02:49:05.760 --> 02:49:07.760
Doch.

02:49:07.760 --> 02:49:09.760
Nee. Hä?

02:49:09.760 --> 02:49:18.130
Jetzt bin ich...

02:49:18.130 --> 02:49:20.130
Jetzt, jetzt, jetzt bin ich verwirrt.

02:49:20.130 --> 02:49:31.310
Ja doch, der checkt, ob es

02:49:31.310 --> 02:49:35.140
Null ist, und dann...

02:49:35.140 --> 02:49:44.590
Aber, aber warum geht das so?

02:49:46.590 --> 02:49:48.590
Warum geht das so?

02:49:48.590 --> 02:49:50.590
Ach!

02:49:50.590 --> 02:49:52.590
Der checkt den Pointer, ob der Null ist.

02:49:52.590 --> 02:49:54.590
Dann...

02:49:54.590 --> 02:49:56.590
Und hier checkt er den Wert.

02:49:56.590 --> 02:49:58.590
Also, es darf explizit nicht...

02:49:58.590 --> 02:50:00.590
Es darf nicht auf Null gehen.

02:50:00.590 --> 02:50:02.590
Warum denn nicht?

02:50:02.590 --> 02:50:04.590
Das ist ja mal so krass häng...

02:50:04.590 --> 02:50:06.590
Ja, was ist denn...

02:50:06.590 --> 02:50:08.590
Was ist denn der Default-Wert von

02:50:08.590 --> 02:50:10.590
SizeT?

02:50:10.590 --> 02:50:12.590
Ist das jetzt hier...

02:50:12.590 --> 02:50:15.970
Undefined, oder was?

02:50:15.970 --> 02:50:17.970
Und deswegen schreiben sie gleich Null.

02:50:17.970 --> 02:50:19.970
Oh Mann, ey, Alter,

02:50:19.970 --> 02:50:21.970
diese Sprache, das ist so

02:50:21.970 --> 02:50:26.050
Painschamp, Mann.

02:50:26.050 --> 02:50:28.050
Ultra-Painschamp.

02:50:28.050 --> 02:50:30.050
Okay, wir sagen,

02:50:30.050 --> 02:50:32.050
wir tun das einfach mal so, als geht's.

02:50:32.050 --> 02:50:34.050
git add

02:50:34.050 --> 02:50:41.010
minus a

02:50:41.010 --> 02:50:43.010
Möchte einer einen onlinefähigen

02:50:43.010 --> 02:50:45.010
Bad-Company-1-Port für PC machen?

02:50:45.010 --> 02:50:47.010
Eventuell PS3-Modell.

02:50:47.010 --> 02:50:49.010
Ich glaube nicht, dass das mal jemand so einfach

02:50:49.010 --> 02:50:51.010
aus dem Ärmel tuttelt hier.

02:50:51.010 --> 02:50:53.010
Wobei ich mit meinen krassen C++-Skills...

02:50:53.010 --> 02:50:59.070
Viel Erfolg,

02:50:59.070 --> 02:51:03.220
Sgt2918.

02:51:03.220 --> 02:51:05.220
Äh,

02:51:05.220 --> 02:51:11.280
jetzt geht's nicht mehr?

02:51:11.280 --> 02:51:15.810
Hä? Muss das wirklich explizit

02:51:15.810 --> 02:51:17.810
auf un-initialize

02:51:17.810 --> 02:51:19.810
stehen, dass es funktioniert?

02:51:19.810 --> 02:51:21.810
Das macht mich fertig.

02:51:21.810 --> 02:51:23.810
Aber sogar

02:51:23.810 --> 02:51:25.810
in der

02:51:25.810 --> 02:51:31.300
Demo

02:51:31.300 --> 02:51:33.300
Size... Moment, was?

02:51:33.300 --> 02:51:35.300
FDs?

02:51:35.300 --> 02:51:37.300
Wo haben wir's denn

02:51:37.300 --> 02:51:41.760
jetzt?

02:51:41.760 --> 02:51:47.790
Äh...

02:51:47.790 --> 02:51:49.790
Ach, das musste auf Max

02:51:49.790 --> 02:51:51.790
Clients.

02:51:51.790 --> 02:51:53.790
Alter, bin ich doof.

02:51:53.790 --> 02:51:58.640
Ja.

02:51:58.640 --> 02:52:00.640
Deswegen funzt das auch, wenn es un-initialized

02:52:00.640 --> 02:52:05.580
ist.

02:52:05.580 --> 02:52:07.580
Okay, git commit.

02:52:07.580 --> 02:52:09.580
git add

02:52:09.580 --> 02:52:11.580
minus a

02:52:11.580 --> 02:52:17.010
minus m. Okay, komm.

02:52:17.010 --> 02:52:19.010
Wir schreiben keine Meme-Message rein.

02:52:19.010 --> 02:52:21.010
Irgendwas Sinnvolles.

02:52:21.010 --> 02:52:23.010
Funzt.

02:52:23.010 --> 02:52:25.010
Ja, alter.

02:52:25.010 --> 02:52:27.010
Meine Güte, was ein Rumgefrickel

02:52:27.010 --> 02:52:31.660
wieder. Okay, voll.

02:52:31.660 --> 02:52:33.660
Okay, jetzt.

02:52:33.660 --> 02:52:35.660
Meine Güte.

02:52:35.660 --> 02:52:37.660
So, Debugshit raus, braucht

02:52:37.660 --> 02:52:42.060
keiner. So, das hab ich

02:52:42.060 --> 02:52:44.060
hier hochgemoved, weil es

02:52:44.060 --> 02:52:46.060
bescheuert war da unten.

02:52:46.060 --> 02:52:48.060
Und die Buffer-Geschichte,

02:52:48.060 --> 02:52:50.060
die hab ich runtergemoved,

02:52:50.060 --> 02:52:52.060
dass das ein bisschen besser hier dazu passt.

02:52:52.060 --> 02:53:04.020
So. Gut.

02:53:04.020 --> 02:53:06.020
So. Funzt

02:53:06.020 --> 02:53:08.020
immer noch. Jetzt können wir das

02:53:08.020 --> 02:53:10.020
ganze nochmal machen hier. Also,

02:53:10.020 --> 02:53:12.020
public void

02:53:12.020 --> 02:53:14.020
websocket broadcast

02:53:14.020 --> 02:53:16.020
string

02:53:16.020 --> 02:53:22.660
message

02:53:22.660 --> 02:53:26.740
Das da.

02:53:26.740 --> 02:53:28.740
Und zwar mit

02:53:28.740 --> 02:53:30.740
server

02:53:30.740 --> 02:53:32.740
und das Handle ist auch der Server.

02:53:32.740 --> 02:53:36.110
Erhol.

02:53:36.110 --> 02:53:38.110
Message.

02:53:38.110 --> 02:53:40.110
Achso, haha. Wie übergeben

02:53:40.110 --> 02:53:42.110
wir denn jetzt die Message an den Handler?

02:53:42.110 --> 02:53:44.110
Dann ist es doch nicht mehr so

02:53:44.110 --> 02:53:46.110
einfach.

02:53:46.110 --> 02:53:48.110
Wie gedacht.

02:53:48.110 --> 02:53:50.110
Okay, wir returnen das einfach mal so

02:53:50.110 --> 02:53:52.110
und schauen, dass das funktioniert.

02:53:52.110 --> 02:53:54.110
Okay, kannst

02:53:54.110 --> 02:53:56.110
nochmal neu kompilieren.

02:53:56.110 --> 02:54:02.880
Warum er jetzt random einfach

02:54:02.880 --> 02:54:04.880
der Meinung ist, ich muss mal neu kompilieren, weiß ich

02:54:04.880 --> 02:54:06.880
auch nicht. So, mir ist es jetzt einfach danach

02:54:06.880 --> 02:54:08.880
mal 3000 Dateien neu zu kompilieren.

02:54:08.880 --> 02:54:10.880
Äh, jetzt nicht mehr.

02:54:10.880 --> 02:54:12.880
Jetzt hat er doch, jetzt will er es doch nicht mehr machen.

02:54:12.880 --> 02:54:17.150
Ey, die Sprache macht mich so fertig.

02:54:17.150 --> 02:54:19.150
So, also

02:54:19.150 --> 02:54:21.150
von der Idee her

02:54:21.150 --> 02:54:23.150
sollte es jetzt ja immer noch punzen. Hoffentlich.

02:54:23.150 --> 02:54:25.150
Ja.

02:54:25.150 --> 02:54:27.150
Okay, im Main

02:54:27.150 --> 02:54:29.150
broadcasten wir jetzt mal unsere

02:54:29.150 --> 02:54:34.770
Milliseconds.

02:54:34.770 --> 02:54:36.770
So, das heißt hier, wir machen hier unten

02:54:36.770 --> 02:54:38.770
Webs, wir machen ein

02:54:38.770 --> 02:54:52.580
Cat hier unten drauf.

02:54:52.580 --> 02:54:56.270
Okay, das funzt

02:54:56.270 --> 02:54:58.270
schon mal. Es sind keine

02:54:58.270 --> 02:55:00.270
Milliseconds, aber es

02:55:00.270 --> 02:55:02.270
kommen alle 100

02:55:02.270 --> 02:55:04.270
Millisekunden

02:55:04.270 --> 02:55:06.270
kommt da was rein.

02:55:06.270 --> 02:55:08.270
Das ist schon mal gut. Okay.

02:55:08.270 --> 02:55:10.270
Hat das übrigens so was wie einen

02:55:10.270 --> 02:55:12.270
Timeout Reconnect?

02:55:12.270 --> 02:55:14.270
War eine blöde, blöde Frage.

02:55:14.270 --> 02:55:16.270
So was wie, wenn ich jetzt Reset drücke an der

02:55:16.270 --> 02:55:18.270
Kiste. Reset.

02:55:18.270 --> 02:55:20.270
Dann hängt

02:55:20.270 --> 02:55:22.270
das und dann gibt es ein Failure.

02:55:22.270 --> 02:55:24.270
Na okay.

02:55:24.270 --> 02:55:26.270
Webs, so Cat. Gibt es irgendwie

02:55:26.270 --> 02:55:28.270
einen

02:55:28.270 --> 02:55:30.270
Reconnect?

02:55:30.270 --> 02:55:32.270
Auto Reconnect.

02:55:32.270 --> 02:55:37.700
Can Auto Reconnect be

02:55:37.700 --> 02:55:42.860
used?

02:55:42.860 --> 02:55:44.860
Auto Reconnect

02:55:44.860 --> 02:55:46.860
Punkt.

02:55:46.860 --> 02:55:48.860
Ja, obviously. Was denn sonst?

02:55:48.860 --> 02:55:52.880
Minus T?

02:55:52.880 --> 02:55:56.260
Minus.

02:55:56.260 --> 02:55:58.260
Bisschen kryptischer

02:55:58.260 --> 02:56:02.270
noch vielleicht.

02:56:02.270 --> 02:56:06.350
Was ist Minus T?

02:56:06.350 --> 02:56:08.350
Text.

02:56:08.350 --> 02:56:10.350
Send Message to Websocket as Text. Wollen wir nicht.

02:56:10.350 --> 02:56:13.980
Das ist nicht die ESP-Lib.

02:56:13.980 --> 02:56:15.980
Das ist

02:56:15.980 --> 02:56:17.980
das Dings für Websocket.

02:56:17.980 --> 02:56:19.980
Invalid Command Line Parameters.

02:56:19.980 --> 02:56:21.980
Nice. Excellent.

02:56:21.980 --> 02:56:26.830
Oder was muss man machen?

02:56:26.830 --> 02:56:28.830
Minus T. Minus.

02:56:28.830 --> 02:56:30.830
Ach das geht.

02:56:30.830 --> 02:56:32.830
Ich hinterfrage das jetzt

02:56:32.830 --> 02:56:34.830
einfach mal nicht. Okay und jetzt mache ich Reset.

02:56:34.830 --> 02:56:36.830
Und Auto Connectet

02:56:36.830 --> 02:56:38.830
sich das jetzt?

02:56:38.830 --> 02:56:40.830
Es Auto Connectet sich wieder. Nice.

02:56:40.830 --> 02:56:42.830
Da können wir das hier unten

02:56:42.830 --> 02:56:44.830
nämlich jetzt einfach laufen lassen.

02:56:44.830 --> 02:56:46.830
Und bei

02:56:46.830 --> 02:56:48.830
jedem Reboot sehen wir, ob es funktioniert noch.

02:56:48.830 --> 02:56:50.830
Da muss ich nicht immer den Kram neu starten.

02:56:52.830 --> 02:56:54.830
Also sehr nice.

02:56:54.830 --> 02:56:56.830
Nice.

02:56:56.830 --> 02:56:58.830
Jetzt ist nur die Frage, wie kriegen

02:56:58.830 --> 02:57:00.830
wir den eigentlichen Text da rein?

02:57:00.830 --> 02:57:02.830
Weil den Server

02:57:02.830 --> 02:57:04.830
übergebe ich aktuell hier

02:57:04.830 --> 02:57:06.830
als Händler. Und das ist ja nicht

02:57:06.830 --> 02:57:08.830
so Sinn und Zweck.

02:57:08.830 --> 02:57:10.830
Ich übergebe einfach

02:57:10.830 --> 02:57:14.140
Ne, ich muss mir

02:57:14.140 --> 02:57:16.140
ein eigenes

02:57:16.140 --> 02:57:18.140
Strukt bauen, dass das

02:57:18.140 --> 02:57:20.140
funktioniert. Etwas anderes sehe ich

02:57:20.140 --> 02:57:22.140
jetzt hier nicht. Oder

02:57:22.140 --> 02:57:24.140
kann man, meine blöde Frage.

02:57:24.140 --> 02:57:26.140
Kann man einen Tuppel oder sowas

02:57:26.140 --> 02:57:29.420
Anstatt so ein eigenes Struct kann ich quasi so was machen wie

02:57:29.420 --> 02:57:42.380
Also ich so als C++, C++, Keckel, gleich, New, Standard, Pair, besteht aus HTTP-Händler und nem String

02:57:42.380 --> 02:57:48.310
Jetzt mal seriously

02:57:48.310 --> 02:57:52.730
Wie hässlich möchte eine Sprache eigentlich sein?

02:57:52.730 --> 02:58:01.150
Okay, ich gebe zu, das sieht in C-Sharp fast genauso aus, aber irgendwie ist es trotzdem in C++ einfach meilenweit hässlicher

02:58:01.150 --> 02:58:14.240
Kann man sowas da jetzt übergeben?

02:58:20.040 --> 02:58:24.030
Also, würde das gehen?

02:58:27.180 --> 02:58:28.620
Und wer cleart das dann wieder?

02:58:35.690 --> 02:58:37.050
Ja, C++

02:58:37.050 --> 02:58:40.880
Okay, weiter im Text

02:58:40.880 --> 02:58:50.360
Wir übergeben dem Ding wirklich sowas

02:58:50.360 --> 02:58:55.650
Es besteht, ey, darf man das benennen irgendwie?

02:58:55.830 --> 02:58:58.550
Ne, ne, natürlich, das wäre auch zu einfach, wenn man das benennen würde

02:58:58.550 --> 02:59:02.370
Aber ich glaube, man kann sowas destructen

02:59:02.370 --> 02:59:08.620
Wobei, das ist ein Problem, wie das funktioniert

02:59:08.620 --> 02:59:23.040
Es würde theoretisch funktionieren

02:59:23.040 --> 02:59:27.560
Ah, jetzt müsste ich casten dann

02:59:27.560 --> 02:59:31.320
Vielleicht mache ich doch ein eigenes Struct, hä?

02:59:33.060 --> 02:59:35.040
Weil ich müsste im Endeffekt das jetzt

02:59:35.040 --> 02:59:38.500
Das jetzt quasi casten zu dem da

02:59:38.500 --> 02:59:46.420
Was kann man damit machen? Auch per Daten?

02:59:46.420 --> 02:59:48.000
Sim-Sensoren, Daten übertragen auf einer

02:59:48.000 --> 02:59:49.360
Könntest du machen?

02:59:49.700 --> 02:59:51.660
Also, was ich als Controller habe, ist das Ding

02:59:51.660 --> 02:59:57.000
Sogar mit einem eingebauten Display

02:59:57.000 --> 02:59:59.700
Du kannst damit potenziell so ziemlich alles machen

02:59:59.700 --> 03:00:02.620
Weil du hast 36 GPIOs, glaube ich

03:00:02.620 --> 03:00:04.620
Irgendwie, ne?

03:00:06.140 --> 03:00:08.320
Oder 28 GPIOs, glaube

03:00:08.320 --> 03:00:14.000
Und du kannst alle Sensoren der Welt gefühlt daran anschließen

03:00:14.000 --> 03:00:16.580
Die 3,3 Volt kompatibel sind

03:00:16.580 --> 03:00:20.640
Du kannst damit nahezu alles machen

03:00:20.640 --> 03:00:20.900
Und

03:00:20.900 --> 03:00:21.960
Sehr vieles

03:00:21.960 --> 03:00:25.480
Des Smart Home Equipments, was du so kaufen kannst

03:00:25.480 --> 03:00:27.160
Basiert ja auch auf ESP32

03:00:27.160 --> 03:00:29.400
Der ESP32-Familie

03:00:29.400 --> 03:00:35.520
So, Data

03:00:35.520 --> 03:00:37.120
Data ist immer die beste Bezeichnung

03:00:37.120 --> 03:00:41.130
By the way

03:00:41.130 --> 03:00:43.190
Kann man nicht

03:00:43.190 --> 03:00:46.050
Sowas hier machen?

03:00:47.150 --> 03:00:49.190
Und das dann hier drinnen verwenden?

03:00:50.930 --> 03:00:51.590
First, Second

03:00:51.590 --> 03:00:52.290
Äh

03:00:52.290 --> 03:00:54.730
Moment, Moment, Moment

03:00:54.730 --> 03:00:56.310
Wusstet ihr, passt mal auf

03:00:56.310 --> 03:00:57.490
Wusstet ihr

03:00:57.490 --> 03:00:58.390
Dass

03:00:58.390 --> 03:01:01.700
Ähm, C++

03:01:01.700 --> 03:01:03.960
Äh, Tuple Destructing kann?

03:01:20.920 --> 03:01:22.660
Ich hab keine Ahnung, was das sein soll

03:01:22.660 --> 03:01:26.280
Also, was ich schon gebaut habe, ist damit

03:01:26.280 --> 03:01:28.040
Bodenfeuchtigkeitssensoren

03:01:28.040 --> 03:01:29.500
Hört sich ein bisschen sowas an hier

03:01:29.500 --> 03:01:30.860
Ja

03:01:30.860 --> 03:01:33.200
Ja, mit Levelshifter geht auch 5 Volt, ja

03:01:33.200 --> 03:01:35.020
Und die meisten Boards

03:01:35.020 --> 03:01:36.840
Behaupte ich mal, die verkraften

03:01:36.840 --> 03:01:39.600
Wenn du Glück hast, 5 Volt sogar

03:01:39.600 --> 03:01:42.960
Wenn es nicht wirklich viel mehr ist auf den 3,3 Volt GPIOs

03:01:42.960 --> 03:01:44.880
Weil die doch recht tolerant gebaut sind

03:01:44.880 --> 03:01:46.620
Aber ich würde es nicht darauf ankommen lassen

03:01:46.620 --> 03:02:01.880
So, wusstet ihr, dass das destructen kann?

03:02:02.220 --> 03:02:03.360
Guck mal, ich kann jetzt hier sagen

03:02:03.360 --> 03:02:04.920
Server

03:02:04.920 --> 03:02:07.580
Und Message

03:02:07.580 --> 03:02:09.460
Gleich

03:02:09.460 --> 03:02:14.170
Äh, muss ich, muss ich die Dingsen?

03:02:14.730 --> 03:02:15.070
Guck mal

03:02:15.070 --> 03:02:16.230
Das kann C++

03:02:16.230 --> 03:02:20.770
Das ist eines der wenigen sinnvollen C++ Features, die dazu gekommen sind

03:02:20.770 --> 03:02:23.090
Kannst Tuple destructen

03:02:23.090 --> 03:02:31.960
Eigentlich ganz cool, oder?

03:02:45.420 --> 03:02:45.900
Okay

03:02:45.900 --> 03:02:47.860
Server, Message

03:02:47.860 --> 03:02:48.520
Und dann kann ich hier noch was machen

03:02:48.520 --> 03:02:48.660
Und dann kann ich hier noch was machen

03:02:48.680 --> 03:02:52.100
Message wird hier an den String dran gehängt

03:02:52.100 --> 03:02:54.320
Wobei, ha

03:02:54.320 --> 03:02:56.780
Message ist der String

03:02:56.780 --> 03:02:58.120
Den brauche ich hier gar nicht mehr

03:02:58.120 --> 03:03:00.240
Message

03:03:00.240 --> 03:03:03.240
Message

03:03:03.240 --> 03:03:12.460
So, Length

03:03:12.460 --> 03:03:13.980
Äh, what?

03:03:18.000 --> 03:03:18.580
Ach man

03:03:18.580 --> 03:03:21.320
Okay, Leute, ist okay

03:03:21.320 --> 03:03:29.180
Dann halt meinetwegen hier

03:03:29.180 --> 03:03:31.940
Okay, weil es besonders hässlich sein muss

03:03:31.940 --> 03:03:41.230
Oh ne

03:03:41.230 --> 03:03:45.040
Die Syntax würde, Alter

03:03:45.040 --> 03:03:45.240
Die Syntax würde, Alter

03:03:45.240 --> 03:03:46.500
Die Syntax

03:03:46.500 --> 03:03:50.440
Ich kann es mir nicht wieder angucken

03:03:50.440 --> 03:03:55.880
Wie hässlich will eine Sprache sein, man

03:03:55.880 --> 03:04:00.140
Okay, kann ich nicht

03:04:00.140 --> 03:04:01.280
Okay, pass mal auf

03:04:01.280 --> 03:04:04.540
Kann ich nicht einfach den Pointer dereferenzieren

03:04:04.540 --> 03:04:05.620
Und dann, ne, Void Pointer

03:04:05.620 --> 03:04:06.980
Deferencing geht nicht, ne?

03:04:07.500 --> 03:04:08.820
Wäre ja auch sehr weird

03:04:08.820 --> 03:04:11.700
Kannst du, kannst du auch keinem

03:04:11.700 --> 03:04:12.980
Keinen lesen lassen hier

03:04:12.980 --> 03:04:23.170
So, und jetzt

03:04:23.170 --> 03:04:25.290
Brauche das hier nicht Server

03:04:25.290 --> 03:04:26.810
Auf jeden Fall, sondern

03:04:26.810 --> 03:04:32.070
Kannst du die Funktionen

03:04:32.070 --> 03:04:33.470
Nicht so schreiben, dass es eine

03:04:33.470 --> 03:04:34.170
Rampage und Pointer

03:04:34.170 --> 03:04:35.490
Ne, weil die nicht

03:04:35.490 --> 03:04:37.990
Weil ich nicht die Definition dafür

03:04:37.990 --> 03:04:39.570
In der Hand habe, wie die aussehen muss

03:04:39.570 --> 03:04:44.590
So

03:04:44.590 --> 03:04:50.830
Standard, make, pair

03:04:50.830 --> 03:04:54.900
Fucking shit, man

03:04:54.900 --> 03:05:00.870
Es kann es doch keinem

03:05:01.730 --> 03:05:02.450
Zumuten

03:05:02.450 --> 03:05:03.950
Guckt euch das an

03:05:03.950 --> 03:05:12.280
Ah ne, das muss

03:05:12.280 --> 03:05:17.770
Was ist das Problem jetzt?

03:05:19.210 --> 03:05:20.450
Achso, ähm, ja

03:05:20.450 --> 03:05:21.810
HTTP, äh, Server

03:05:21.810 --> 03:05:24.870
Und Message

03:05:25.170 --> 03:05:39.450
Achso, das geht ja so natürlich wieder nicht

03:05:39.450 --> 03:05:42.880
Äh, ja

03:05:42.880 --> 03:05:45.620
Sondern

03:05:45.620 --> 03:05:47.960
Da muss man jetzt

03:05:47.960 --> 03:05:50.780
Was will der denn von mir?

03:05:53.720 --> 03:05:55.040
No instance of function

03:05:55.040 --> 03:05:56.920
Template matches the argument list

03:05:56.920 --> 03:05:58.800
Warum nicht?

03:05:59.860 --> 03:06:01.200
Ist doch vollkommen richtig alles

03:06:01.200 --> 03:06:05.060
Wie muss denn die

03:06:05.060 --> 03:06:06.180
Argument list aussehen?

03:06:07.020 --> 03:06:09.140
Ah ja, mhm, mhm, okay, alles klar

03:06:09.140 --> 03:06:10.740
Alles klar, verstehe, verstehe

03:06:10.740 --> 03:06:12.560
Also jetzt mal ganz ernsthaft

03:06:12.560 --> 03:06:13.340
Int

03:06:14.080 --> 03:06:14.860
Int

03:06:14.860 --> 03:06:16.680
1, 2

03:06:16.680 --> 03:06:20.350
Hä?

03:06:29.530 --> 03:06:30.950
Okay, prinzipiell funktioniert

03:06:30.950 --> 03:06:32.890
Aber warum stimmt das nicht?

03:06:34.090 --> 03:06:36.070
Das ist ein HTTPD-Handle

03:06:36.070 --> 03:06:36.530
T

03:06:36.530 --> 03:06:39.570
Und das ist ein String

03:06:39.570 --> 03:06:41.110
Was hat der denn für Schmerzen?

03:06:45.460 --> 03:06:47.280
Warum matcht das nicht die Argument list?

03:06:53.180 --> 03:06:55.120
Das ist exakt die Argument list

03:06:55.120 --> 03:06:58.580
Ja, mhm, alles klar, verstehe

03:06:58.580 --> 03:07:02.370
Ja

03:07:02.370 --> 03:07:06.370
HTTPD-Handle

03:07:06.370 --> 03:07:10.400
Das ist Type-Default-Handle

03:07:10.420 --> 03:07:11.700
Das läuft auf Void-Sternchen

03:07:11.700 --> 03:07:12.600
Was auch immer

03:07:12.600 --> 03:07:14.540
Pass mal auf, so

03:07:14.540 --> 03:07:23.980
Es ergibt für mich echt keinen Sinn

03:07:23.980 --> 03:07:26.660
Warum das nicht funktioniert

03:07:26.660 --> 03:07:30.560
Würde es denn mit String-String

03:07:30.560 --> 03:07:31.380
Funktionieren?

03:07:32.400 --> 03:07:34.440
Können da vielleicht einfach nur keine Pointer rein?

03:07:40.890 --> 03:07:41.230
Hä?

03:07:44.220 --> 03:07:46.320
Es ist doch genau das gleiche, Mann

03:07:46.320 --> 03:07:48.960
Exakt das gleiche

03:07:48.960 --> 03:07:53.530
Hä?

03:07:59.980 --> 03:08:00.840
Wait a minute

03:08:00.840 --> 03:08:02.180
Warum geht das nicht?

03:08:02.180 --> 03:08:03.060
Warum geht das nicht?

03:08:14.040 --> 03:08:16.500
Macht es aus eurer Sicht irgendwie Sinn?

03:08:17.560 --> 03:08:19.180
Dass das nicht funktioniert?

03:08:28.450 --> 03:08:28.670
Hä?

03:08:31.590 --> 03:08:31.970
What?

03:08:37.220 --> 03:08:40.680
Wie kompliziert möchte man eine Sache bitte schön noch machen?

03:08:45.850 --> 03:08:47.030
Okay, wisst ihr was?

03:08:47.550 --> 03:08:48.990
Scheiß drauf, juckt mich nicht

03:08:48.990 --> 03:08:50.490
Private, Struct

03:08:50.490 --> 03:08:54.730
Ähm

03:08:54.730 --> 03:08:57.030
WS

03:08:57.030 --> 03:08:59.950
WS Data

03:08:59.950 --> 03:09:04.850
Es ist eh übelst der Abfuck

03:09:04.850 --> 03:09:05.710
Soll ich euch das mal sagen?

03:09:05.810 --> 03:09:06.810
Übelst der Abfuck

03:09:06.810 --> 03:09:09.730
Dass ich nicht hier drinnen einfach da drauf zugreifen kann

03:09:09.730 --> 03:09:13.010
Warte mal, das Problem war

03:09:13.010 --> 03:09:17.620
Äh

03:09:17.620 --> 03:09:22.090
Was war das Problem nochmal?

03:09:23.550 --> 03:09:25.450
Ah, ja, weil man das hier nicht queuen kann

03:09:25.450 --> 03:09:26.070
Genau

03:09:26.070 --> 03:09:29.920
Wobei

03:09:29.920 --> 03:09:31.680
Moment

03:09:31.680 --> 03:09:37.170
Moment

03:09:37.170 --> 03:09:40.690
Wie, das kann man nicht queuen?

03:09:42.910 --> 03:09:43.510
Moment

03:09:43.510 --> 03:09:45.530
Wartet mal

03:09:45.530 --> 03:09:50.890
Man kann es davon abgesehen haben, dass mir das auch nichts bringt

03:09:50.890 --> 03:09:52.550
Oder? Doch, doch, doch, das bringt was

03:09:52.930 --> 03:09:54.490
Warte mal, warte mal, warte mal, warte mal

03:09:54.490 --> 03:09:58.990
So, jetzt wird das so nicht mehr funktionieren

03:09:58.990 --> 03:10:02.370
Ja, diesen Shit kann man mal rausschmeißen

03:10:02.370 --> 03:10:04.410
Moment

03:10:04.410 --> 03:10:07.210
So

03:10:07.210 --> 03:10:10.530
This WS Händler

03:10:10.530 --> 03:10:13.010
Das funktioniert so

03:10:13.010 --> 03:10:15.030
Obviously nicht

03:10:15.030 --> 03:10:17.630
Aber

03:10:17.630 --> 03:10:21.690
Was funktioniert ist

03:10:21.690 --> 03:10:22.910
Das WS Händler

03:10:22.930 --> 03:10:24.290
Da reinstecken

03:10:24.290 --> 03:10:25.490
Hier

03:10:25.490 --> 03:10:28.210
Das Ding in den Lambda Wrappen

03:10:28.210 --> 03:10:30.350
Der

03:10:30.350 --> 03:10:32.450
Sich selbst

03:10:32.450 --> 03:10:34.010
Als Kontext bekommt

03:10:34.010 --> 03:10:35.690
Und das

03:10:35.690 --> 03:10:37.550
Dann da drinnen

03:10:37.550 --> 03:10:42.210
Aufrufen

03:10:42.210 --> 03:10:45.970
Richtig?

03:10:46.450 --> 03:10:50.070
Korrekt

03:10:50.070 --> 03:10:52.930
So, und brauche ich nicht mehr

03:10:52.930 --> 03:10:57.860
So, und sich jetzt hier selbst

03:10:57.860 --> 03:10:58.940
Drinnen aufrufen

03:10:58.940 --> 03:11:00.940
Oh, jetzt ist mein Auto

03:11:00.940 --> 03:11:02.300
Auto komplett wieder kaputt

03:11:02.300 --> 03:11:02.420
Oh, jetzt ist mein Auto komplett wieder kaputt

03:11:02.420 --> 03:11:04.420
Oh, jetzt ist mein Auto komplett wieder kaputt

03:11:04.420 --> 03:11:08.180
Mein Auto queuen

03:11:08.180 --> 03:11:10.180
Äh, und jetzt kann ich sagen

03:11:10.180 --> 03:11:12.180
CTX WS Händler

03:11:12.180 --> 03:11:15.620
Alter, fuck mich schnell ab

03:11:15.620 --> 03:11:17.620
CTX WS Händler

03:11:17.620 --> 03:11:21.580
Alter, fuck mich schnell ab

03:11:21.580 --> 03:11:23.580
Doppelt kann ich das nicht nennen

03:11:23.580 --> 03:11:25.580
Self heißt es jetzt, okay

03:11:25.580 --> 03:11:27.580
Weil Python, okay, genau

03:11:27.580 --> 03:11:32.550
WS Händler

03:11:32.550 --> 03:11:34.550
Der ist vor uns doch jetzt an der Stelle

03:11:34.550 --> 03:11:41.380
Krasser Auto complete

03:11:41.380 --> 03:11:46.420
Function hier

03:11:46.420 --> 03:11:48.260
Nice!

03:11:48.260 --> 03:11:50.260
Genau so möchte ich das immer

03:11:50.260 --> 03:11:52.260
Äh, nicht Auto complete

03:11:52.260 --> 03:11:54.260
Genauso möchte ich das immer formatieren

03:11:54.260 --> 03:11:56.260
So und nicht anders

03:11:56.260 --> 03:11:58.260
Genau, genau das ist the way

03:11:58.260 --> 03:12:00.260
Das zu formatieren

03:12:00.260 --> 03:12:02.260
Exakt so, Leute, exakt

03:12:02.260 --> 03:12:04.260
Nicht irgendwie anders, genau so

03:12:04.260 --> 03:12:21.080
So muss das formatiert sein

03:12:21.080 --> 03:12:24.900
Warum ist das eigentlich so kaputt?

03:12:24.900 --> 03:12:28.220
Okay

03:12:28.220 --> 03:12:30.220
Ab, ab da geht das nicht mehr

03:12:30.220 --> 03:12:34.040
Okay, mehr als zwei, mehr als zwei Zeilen kann das nicht

03:12:34.040 --> 03:12:36.040
Moment

03:12:36.040 --> 03:12:38.040
WS Händler Auto

03:12:38.040 --> 03:12:40.040
WS Code

03:12:40.040 --> 03:12:42.040
CPP Auto Formatting

03:12:42.040 --> 03:12:44.040
WS Code CPP Auto Formatting

03:12:44.040 --> 03:12:59.450
Shit

03:12:59.450 --> 03:13:16.580
Gibt's nicht, oder?

03:13:16.580 --> 03:13:18.580
Alles klar, okay, mhm

03:13:18.580 --> 03:13:20.580
Funktioniert ja richtig gut

03:13:20.580 --> 03:13:24.660
Es ist so hässlich

03:13:24.660 --> 03:13:26.660
Es ist so hässlich

03:13:26.660 --> 03:13:28.660
Es kann's doch jetzt nicht sein

03:13:28.660 --> 03:13:30.660
Dass das, dass das das Formatieren

03:13:30.660 --> 03:13:32.660
Nicht

03:13:32.660 --> 03:13:34.660
Wie dem auch sei

03:13:34.660 --> 03:13:36.660
Wie dem auch sei

03:13:36.660 --> 03:13:38.660
So

03:13:38.660 --> 03:13:40.660
Funktionieren

03:13:40.660 --> 03:13:42.660
Und hier kann ich jetzt an der Stelle

03:13:44.660 --> 03:13:46.660
Meine Message übergeben

03:13:46.660 --> 03:13:48.660
So, die Message

03:13:48.660 --> 03:13:52.300
Die kann ich

03:13:52.300 --> 03:13:54.300
Fuck

03:13:54.300 --> 03:13:56.300
Die krieg ich da jetzt ja nicht rein

03:13:56.300 --> 03:14:08.180
Ah

03:14:08.180 --> 03:14:10.180
Shit

03:14:10.180 --> 03:14:12.180
Boah, warum ist das so scheiße gemacht?

03:14:12.180 --> 03:14:17.220
Warum ist das so scheiße

03:14:17.220 --> 03:14:22.840
Gemacht, man

03:14:22.840 --> 03:14:24.840
Du kannst versuchen in den WS Code Settings

03:14:24.840 --> 03:14:26.840
Den C++ Formatter zu changen

03:14:26.840 --> 03:14:28.840
Von Clang zum Beispiel Google

03:14:28.840 --> 03:14:30.840
Okay

03:14:30.840 --> 03:14:35.050
Äh, Settings

03:14:35.050 --> 03:14:38.940
UI

03:14:38.940 --> 03:14:40.940
Wo muss ich denn da hin?

03:14:40.940 --> 03:14:42.940
Extensions, C++

03:14:42.940 --> 03:14:47.020
Code Formatting

03:14:47.020 --> 03:14:49.020
Äh

03:14:49.020 --> 03:14:51.020
Formatting

03:14:51.020 --> 03:14:53.020
Aha

03:14:53.020 --> 03:15:00.680
Wir haben zur Auswahl

03:15:00.680 --> 03:15:02.680
WS Code

03:15:02.680 --> 03:15:04.680
Das ist wahrscheinlich der Default, oder?

03:15:04.680 --> 03:15:06.680
Ach nee!

03:15:06.680 --> 03:15:08.680
Okay, das sieht noch kaputter aus jetzt

03:15:08.680 --> 03:15:18.330
Äh

03:15:18.330 --> 03:15:22.280
Ich mein

03:15:22.280 --> 03:15:24.280
Der macht das wenigstens nicht komplett kaputt

03:15:24.280 --> 03:15:30.410
Vielleicht ist das

03:15:30.410 --> 03:15:39.100
Einfach sogar besser

03:15:39.100 --> 03:15:41.100
Ich mein, der interessiert sich nicht dafür

03:15:41.100 --> 03:15:43.100
Aber wenigstens rückt das richtig ein

03:15:43.100 --> 03:15:49.030
Oder?

03:15:49.030 --> 03:15:54.900
Ich mein, besser

03:15:54.900 --> 03:15:59.940
Besser als das andere

03:15:59.940 --> 03:16:01.940
Okay, das kann er jetzt schon wieder nicht mehr handeln

03:16:01.940 --> 03:16:03.940
Guck

03:16:03.940 --> 03:16:05.940
Das ist jetzt zu viel für den, das kriegt er jetzt nicht mehr gehandelt

03:16:05.940 --> 03:16:10.470
Wahnsinn!

03:16:10.470 --> 03:16:12.470
Welche Basics man sich hier rumschlagen muss, oder?

03:16:12.470 --> 03:16:16.810
Würde man eigentlich vermuten

03:16:16.810 --> 03:16:18.810
So, so, so Code Formatting

03:16:18.810 --> 03:16:20.810
Ist ein gelöstes Problem

03:16:20.810 --> 03:16:22.810
Für so eine bekannte Sprache

03:16:22.810 --> 03:16:24.810
Haha, guckt euch das mal an, Alter

03:16:30.380 --> 03:16:32.380
Äh, wie installiert man denn den Google Formatter?

03:16:32.380 --> 03:16:36.070
Probieren wir jetzt mal aus

03:16:36.070 --> 03:16:38.070
Chat, wenn der Chat das sagt

03:16:38.070 --> 03:16:43.940
Dass das, dass das gibt

03:16:43.940 --> 03:16:45.940
Das wird immer besser, das Format

03:16:45.940 --> 03:16:50.220
Oder?

03:16:50.220 --> 03:16:52.220
Es sieht immer besser aus

03:16:52.220 --> 03:16:54.220
Anscheinend ist das jetzt wieder was anderes

03:16:54.220 --> 03:16:56.220
Als Default

03:16:56.220 --> 03:16:59.720
Was ist denn, wenn ich jetzt Default einstelle?

03:16:59.720 --> 03:17:01.720
Ne, ne, das ist Default

03:17:01.720 --> 03:17:03.720
Also Default, Default ist anscheinend

03:17:03.720 --> 03:17:05.720
Diese hässliche Code Formata

03:17:07.720 --> 03:17:09.720
Du kannst da oben den verwendeten Style einstellen

03:17:11.720 --> 03:17:15.030
Äh

03:17:15.030 --> 03:17:17.030
Ah

03:17:17.030 --> 03:17:19.030
Coding Style, Current Support, Visual Studio

03:17:19.030 --> 03:17:21.030
File

03:17:21.030 --> 03:17:23.030
Use file to load the style from a

03:17:23.030 --> 03:17:25.030
.clang Format

03:17:25.030 --> 03:17:27.030
File in the Chrome, hab ich ja gar nicht

03:17:27.030 --> 03:17:29.030
Okay, ich möchte formatieren

03:17:29.030 --> 03:17:33.690
Wie Google

03:17:33.690 --> 03:17:35.690
Und jetzt?

03:17:35.690 --> 03:17:37.690
Hey

03:17:37.690 --> 03:17:42.660
Boah

03:17:42.660 --> 03:17:44.660
Er kann es, ich fass es nicht

03:17:46.660 --> 03:17:48.660
Und er kann sogar den hier formatieren

03:17:48.660 --> 03:17:51.980
Einzige, was mich abfuckt

03:17:51.980 --> 03:17:53.980
Jetzt ist

03:17:53.980 --> 03:17:55.980
Warum muss die Klammer auf gleicher

03:17:55.980 --> 03:17:57.980
Ebene, auf gleicher, auf gleicher

03:17:57.980 --> 03:17:59.980
Auf gleicher, auf gleicher, auf gleicher, auf gleicher

03:17:59.980 --> 03:18:01.980
Das ist was ich meine, ne

03:18:01.980 --> 03:18:03.980
Wie würde der mal Main umformatieren

03:18:03.980 --> 03:18:05.980
Jetzt? Der macht die Klammern auf die

03:18:05.980 --> 03:18:07.980
Gleichen Zeilen, ich mag das

03:18:07.980 --> 03:18:09.980
Nett

03:18:09.980 --> 03:18:13.420
Okay, dann machen wir hier

03:18:13.420 --> 03:18:15.420
Alman Style

03:18:15.420 --> 03:18:17.420
Ja, der ist gut

03:18:17.420 --> 03:18:19.420
Ach ne, Break Before Braces

03:18:19.420 --> 03:18:22.920
Alman

03:18:22.920 --> 03:18:28.280
Was? Okay

03:18:28.280 --> 03:18:30.280
Visual Studio Style

03:18:30.280 --> 03:18:35.700
Äh

03:18:35.700 --> 03:18:42.920
Ah ja, okay

03:18:42.920 --> 03:18:44.920
Damit kann ich, damit kann ich leben jetzt

03:18:44.920 --> 03:18:46.920
Gefällt mir, wobei jetzt hier die Einrockung

03:18:46.920 --> 03:18:48.920
Wieder nicht checkt

03:18:48.920 --> 03:18:50.920
Leute, ich, ich werd verrückt

03:18:50.920 --> 03:19:00.120
Ah doch

03:19:00.120 --> 03:19:02.120
Ich glaube, ich glaube es passt, ist okay

03:19:02.120 --> 03:19:04.120
So lass ich's jetzt, so lass ich's, okay

03:19:04.120 --> 03:19:06.120
Leute, ja

03:19:06.120 --> 03:19:08.120
Das hier, das triggert mich richtig hier mit dem

03:19:08.120 --> 03:19:10.120
Das Funst Nett

03:19:10.120 --> 03:19:12.120
Egal wie ich's dreh und wende

03:19:12.120 --> 03:19:14.120
Ich krieg in meinen Callback

03:19:14.120 --> 03:19:16.120
Den Krempel Nett rein

03:19:16.120 --> 03:19:18.120
Ja, ich muss sagen

03:19:18.120 --> 03:19:20.120
Man kann sich bei Go auch

03:19:20.120 --> 03:19:22.120
Drüber streiten, aber Go gibt's halt kein

03:19:22.120 --> 03:19:24.120
Eine Diskussion, wie das, wie die Formatierung

03:19:24.120 --> 03:19:26.120
Auszusehen hat, bei Go ist es ja

03:19:26.120 --> 03:19:28.120
Ganz krass, das kompiliert einfach

03:19:28.120 --> 03:19:31.750
Nicht, das, das kompiliert

03:19:31.750 --> 03:19:35.380
Einfach Nett

03:19:35.380 --> 03:19:37.380
Du hast Pech, es wird einfach nicht kompiliert

03:19:37.380 --> 03:19:39.380
Wenn die Formatierung

03:19:39.380 --> 03:19:41.380
Nicht stimmt, wenn du bei Go

03:19:41.380 --> 03:19:43.380
Die Klammer auf die untere Zeile machst

03:19:43.380 --> 03:19:45.380
Anstatt in die gleiche Zeile, kompiliert's einfach nicht

03:19:45.380 --> 03:19:49.590
Wie viele

03:19:49.590 --> 03:19:51.590
Programmiersprachen gibt's eigentlich

03:19:51.590 --> 03:19:53.590
Unendlich, obviously nicht

03:19:53.590 --> 03:19:55.590
Aber ich würd sagen

03:19:55.590 --> 03:19:57.590
Unendlich minus 1 gibt's es

03:19:57.590 --> 03:20:01.800
Jetzt kommt gleich wieder die

03:20:01.800 --> 03:20:03.800
Die Matheexperten, actually

03:20:03.800 --> 03:20:05.800
Unendlich ist keine Zahl

03:20:05.800 --> 03:20:26.390
Oder sowas

03:20:26.390 --> 03:20:28.390
Das nervt mich

03:20:28.390 --> 03:20:53.080
Das nervt mich echt richtig mit dem

03:20:53.080 --> 03:20:55.080
Können wir das hier nicht irgendwie rappen

03:20:55.080 --> 03:21:00.730
Ok, pass mal

03:21:00.730 --> 03:21:02.730
Auto

03:21:02.730 --> 03:21:04.730
Gleich

03:21:04.730 --> 03:21:06.730
Jetzt, jetzt, jetzt probieren wir das nochmal

03:21:06.730 --> 03:21:08.730
Standard

03:21:08.730 --> 03:21:10.730
Make Pair

03:21:10.730 --> 03:21:12.730
Ich bin immer noch unschlüssig

03:21:12.730 --> 03:21:14.730
Warum das hier nicht funktioniert

03:21:14.730 --> 03:21:16.730
String, String

03:21:16.730 --> 03:21:18.730
Message

03:21:18.730 --> 03:21:22.940
Message

03:21:22.940 --> 03:21:24.940
Vielleicht, weil es nicht kopiert

03:21:24.940 --> 03:21:28.310
Ja das kann schon sein

03:21:28.310 --> 03:21:30.310
Ja, ok

03:21:30.310 --> 03:21:32.310
Das Make Pair

03:21:32.310 --> 03:21:34.310
Muss den Content quasi

03:21:34.310 --> 03:21:36.310
Ownen, wie man in Rust sagen würde

03:21:36.310 --> 03:21:38.310
Dass das

03:21:38.310 --> 03:21:44.310
Funst verstehe

03:21:44.310 --> 03:21:46.310
httpd

03:21:46.310 --> 03:21:50.520
T

03:21:50.520 --> 03:21:52.520
Ne

03:21:52.520 --> 03:21:54.520
Server

03:21:54.520 --> 03:22:07.620
Wie, wie ist der Krempel?

03:22:07.620 --> 03:22:14.780
httpd Server handle

03:22:14.780 --> 03:22:23.140
Server

03:22:23.140 --> 03:22:25.140
Man kann da echt keine Pointer rein

03:22:25.140 --> 03:22:27.140
Pappen

03:22:27.140 --> 03:22:29.140
Das ist schon

03:22:29.140 --> 03:22:31.140
Ein wenig cringe, oder?

03:22:31.140 --> 03:22:33.140
Dass das nicht geht

03:22:33.140 --> 03:22:38.060
Was gibt es denn sonst noch?

03:22:38.060 --> 03:22:40.060
Make

03:22:40.060 --> 03:22:42.060
Promptruppel

03:22:42.060 --> 03:22:47.740
Move? Ich will es nicht moven

03:22:47.740 --> 03:22:51.560
Kann man sowas hier machen?

03:22:51.560 --> 03:23:01.020
Müsste doch im Prinzip das gleiche sein, oder?

03:23:01.020 --> 03:23:03.020
Ja, gleiches Problem

03:23:03.020 --> 03:23:05.020
Warum kann man da keine Pointer rein machen?

03:23:05.020 --> 03:23:07.020
Das ist doch echt bescheuert

03:23:07.020 --> 03:23:09.020
Ich meine, ich könnte den Kram jetzt hier

03:23:09.020 --> 03:23:14.570
Das ist, das ist, das ist

03:23:14.570 --> 03:23:16.570
Das ist echt

03:23:16.570 --> 03:23:18.570
Make Pair Pointer

03:23:18.570 --> 03:23:20.570
C++

03:23:20.570 --> 03:23:22.570
C++ Pairs and Pointers

03:23:22.570 --> 03:23:28.250
What?

03:23:28.250 --> 03:23:33.540
Ich verstehe das Beispiel noch nicht mal

03:23:33.540 --> 03:23:42.680
What the

03:23:42.680 --> 03:23:49.960
Ja genau, const char

03:23:49.960 --> 03:23:51.960
Ok, geht anscheinend nicht

03:23:51.960 --> 03:24:01.160
Moment, ein Star

03:24:01.160 --> 03:24:06.970
Ok, Pointer darf man da drinnen nicht

03:24:06.970 --> 03:24:08.970
Nicht reinpappen

03:24:08.970 --> 03:24:10.970
Ja, wie useless ist das denn?

03:24:10.970 --> 03:24:12.970
Ok, was sicherlich geht

03:24:12.970 --> 03:24:17.500
Was sicherlich geht

03:24:17.500 --> 03:24:19.500
Ist

03:24:19.500 --> 03:24:21.500
Standard Shared Pointer

03:24:21.500 --> 03:24:23.500
Oder wie geht das?

03:24:23.500 --> 03:24:25.500
Make Shared

03:24:25.500 --> 03:24:27.500
Jetzt wird es aber richtig abartig, Mann

03:24:27.500 --> 03:24:29.500
Server?

03:24:29.500 --> 03:24:35.460
Ne

03:24:35.460 --> 03:24:37.460
Moment, wie funzt denn das überhaupt?

03:24:37.460 --> 03:24:43.530
Alter, das ist so abfuck

03:24:43.530 --> 03:24:47.610
Sprache, Mann, what the fuck

03:24:47.610 --> 03:24:49.610
Ok, wie funzt das jetzt?

03:24:49.610 --> 03:24:51.610
Ah ja, ja ich finde, ich finde ja auch übrigens

03:24:51.610 --> 03:24:53.610
Die Autocomplete-Hilfen immer so hilfreich

03:24:53.610 --> 03:24:55.610
Mhm

03:24:55.610 --> 03:24:57.610
Const, Standard, Remove, Extend

03:24:57.610 --> 03:24:59.610
TP, Type

03:24:59.610 --> 03:25:01.610
Leerzeichen und

03:25:01.610 --> 03:25:03.610
Underscore, Underscore, U

03:25:03.610 --> 03:25:05.610
Logisch, oder?

03:25:05.610 --> 03:25:20.950
Ist doch ganz klar

03:25:20.950 --> 03:25:24.780
Jetzt vielleicht auch irgendwie ne

03:25:24.780 --> 03:25:26.780
Warum nimmst du nicht einfach C?

03:25:26.780 --> 03:25:28.780
Ganz ehrlich, ich bin ja kurz davor einfach ein Struck

03:25:28.780 --> 03:25:30.780
zu machen und das zu übergeben, ja

03:25:30.780 --> 03:25:37.540
Was ist C in dem Fall?

03:25:37.540 --> 03:25:43.740
Alter

03:25:43.740 --> 03:25:45.740
Ach Moment, damit rappt man nicht schon den bestehenden Pointer

03:25:45.740 --> 03:25:52.760
Was muss für ein

03:25:52.760 --> 03:25:54.760
Shared Pointer

03:25:54.760 --> 03:25:56.760
Aber da kann ich auch keinen

03:25:56.760 --> 03:26:07.430
Ne

03:26:07.430 --> 03:26:09.430
Ok, Leute

03:26:09.430 --> 03:26:11.430
Ich mache ein eigenes Struck zum übergeben und gut ist

03:26:11.430 --> 03:26:13.430
Alles andere

03:26:13.430 --> 03:26:15.430
halte ich geistig gerade nicht aus

03:26:15.430 --> 03:26:17.430
Wir brauchen

03:26:17.430 --> 03:26:19.430
ein Struck im Endeffekt

03:26:19.430 --> 03:26:27.540
mit

03:26:27.540 --> 03:26:29.540
Ja

03:26:29.540 --> 03:26:31.540
Mit ner Referenz zu nem Server und

03:26:31.540 --> 03:26:33.540
Ok

03:26:33.540 --> 03:26:35.540
Dann kann ich diesen ganzen Krempel auch wieder rückgängig

03:26:35.540 --> 03:26:37.540
machen und wir müssen

03:26:37.540 --> 03:26:46.870
Wir müssen uns kein Bein ausreißen

03:26:46.870 --> 03:26:48.870
Der Speiseplan

03:26:48.870 --> 03:26:50.870
Heute gab's, äh, Mozzarella Sticks

03:26:50.870 --> 03:26:52.870
Ne, stimmt gar nicht

03:26:52.870 --> 03:26:54.870
Heute gab's

03:26:54.870 --> 03:27:03.620
Chicken Nuggets

03:27:03.620 --> 03:27:07.830
Wo bin ich jetzt hier?

03:27:07.830 --> 03:27:09.830
Achso, ich hab jetzt die ganzen Formatierungssachen

03:27:09.830 --> 03:27:11.830
hier ausprobiert, na ok, dann machen wir's von Hand wieder

03:27:11.830 --> 03:27:13.830
Ok

03:27:13.830 --> 03:27:15.830
Dann lassen wir das jetzt hier, komm

03:27:15.830 --> 03:27:17.830
Wir lassen das Static, dann ist das wurscht

03:27:17.830 --> 03:27:19.830
Dieses ganze

03:27:19.830 --> 03:27:21.830
Schmodderzeug hier kommt weg

03:27:21.830 --> 03:27:23.830
Wir machen ein Struct

03:27:23.830 --> 03:27:25.830
Das enthält nen String

03:27:25.830 --> 03:27:27.830
Message

03:27:27.830 --> 03:27:29.830
Und das enthält nen Serverhandle

03:27:29.830 --> 03:27:33.140
Fertig, easy

03:27:33.140 --> 03:27:35.140
So einfach kann's sein

03:27:35.140 --> 03:27:37.140
Ich wollte fast C++ Build-In mäßiges nehmen

03:27:37.140 --> 03:27:39.140
Aber das war anscheinend

03:27:39.140 --> 03:27:41.140
Zu viel des guten

03:27:41.140 --> 03:27:45.290
Auto

03:27:45.290 --> 03:27:47.290
Constructs

03:27:47.290 --> 03:27:51.820
Deconstructen

03:27:51.820 --> 03:27:53.820
Ne, oder?

03:27:53.820 --> 03:27:55.820
Ich mein, macht auch nicht wirklich viel Sinn

03:27:55.820 --> 03:28:02.740
Aber vielleicht geht das ja

03:28:02.740 --> 03:28:04.740
Ähm

03:28:04.740 --> 03:28:06.740
Pointer auf WSData

03:28:06.740 --> 03:28:10.440
CTX

03:28:10.440 --> 03:28:12.440
Sternchen

03:28:12.440 --> 03:28:14.440
Ne, warte mal

03:28:14.440 --> 03:28:16.440
Der Sternchen muss dahin

03:28:16.440 --> 03:28:18.440
Jetzt haben wir nen Struct

03:28:18.440 --> 03:28:20.440
Data

03:28:20.440 --> 03:28:22.440
Server

03:28:22.440 --> 03:28:26.140
Ne, Handle

03:28:26.140 --> 03:28:29.900
Ähm, Data

03:28:29.900 --> 03:28:31.900
Message

03:28:31.900 --> 03:28:33.900
Data

03:28:33.900 --> 03:28:35.900
Message

03:28:35.900 --> 03:28:37.900
Kann man, ich bin immer noch, kann man nen

03:28:37.900 --> 03:28:39.900
Struct deconstructen

03:28:39.900 --> 03:28:41.900
Also quasi jetzt hier in

03:28:41.900 --> 03:28:43.900
Message

03:28:43.900 --> 03:28:47.340
Handle

03:28:47.340 --> 03:28:52.180
Ne, das geht natürlich nicht

03:28:52.180 --> 03:28:54.180
CPP

03:28:54.180 --> 03:28:56.180
Deconstruct

03:28:56.180 --> 03:28:58.180
Man würde eigentlich vermuten, dass ein Struct

03:28:58.180 --> 03:29:00.180
Das erste ist, was man deconstructen kann

03:29:00.180 --> 03:29:04.650
Aber

03:29:04.650 --> 03:29:10.160
Ne

03:29:10.160 --> 03:29:12.160
Ah, dann machen wir's so

03:29:12.160 --> 03:29:14.790
Ok

03:29:14.790 --> 03:29:15.790
Message

03:29:15.790 --> 03:29:16.790
Length

03:29:16.790 --> 03:29:20.190
Data

03:29:20.190 --> 03:29:21.190
Handle

03:29:21.190 --> 03:29:25.300
Handle

03:29:25.300 --> 03:29:26.300
Ok

03:29:26.300 --> 03:29:33.820
Und diesen Shit hier, den können wir uns jetzt einfach mal komplett sparen

03:29:34.820 --> 03:29:42.100
Den ganzen Schmodder

03:29:42.100 --> 03:29:44.100
Serde bringt uns jetzt hier nix, oder?

03:29:44.100 --> 03:29:46.100
Das ist doch irgendeine JSON-Serialisierungsgeschichte

03:29:46.100 --> 03:29:48.100
So

03:29:48.100 --> 03:29:50.100
WSData

03:29:50.100 --> 03:29:54.380
Gleich

03:29:54.380 --> 03:29:56.380
Handle gleich Server

03:29:56.380 --> 03:29:58.380
Und dann

03:29:58.380 --> 03:30:00.380
Und das war Server

03:30:00.380 --> 03:30:02.380
Ähm, wir müssen uns übrigens eine richtige Reihenfolge machen

03:30:02.380 --> 03:30:04.380
Message gleich Message

03:30:04.380 --> 03:30:06.380
Ne, ach hier muss man jetzt Kommas machen

03:30:06.380 --> 03:30:08.380
Ah

03:30:10.380 --> 03:30:12.380
Gerade die Formatierung nochmal gesaved

03:30:12.380 --> 03:30:21.260
Und?

03:30:21.260 --> 03:30:23.260
Und davor?

03:30:23.260 --> 03:30:25.260
Ah, ne, ne, ne, ne, ne, so einfach ist das

03:30:25.260 --> 03:30:27.260
Geht das an der Stelle nicht

03:30:27.260 --> 03:30:29.260
WS Handle

03:30:29.260 --> 03:30:35.320
Das, es geht out of Scope

03:30:35.320 --> 03:30:37.320
Und wird dann aufgeräumt

03:30:37.320 --> 03:30:38.500
Das funzt nicht.

03:30:40.360 --> 03:30:45.820
Das heißt, wir müssen da einen Pointer draus machen und das danach wieder selbst freeen.

03:30:46.200 --> 03:30:47.480
Aber in Ordnung, können wir machen.

03:30:48.500 --> 03:30:52.580
So, jetzt, ich hoffe, okay, das ist eigentlich das, was ich umgehen wollte.

03:30:52.720 --> 03:30:55.760
Aber seriously, das ist wahrscheinlich trotzdem immer noch die saubere Variante.

03:30:57.580 --> 03:31:01.780
Einfach einen Struck übergeben und fertig ist. Easy.

03:31:07.100 --> 03:31:08.580
Warum in C++ und nicht in Go?

03:31:08.580 --> 03:31:13.500
Weil du auf dem ESP32 mit Go nur schwerlich programmieren kannst.

03:31:13.580 --> 03:31:17.560
Es gibt Tiny Go, aber da hast du wieder die Probleme, dass du die ganzen Libraries drumherum nicht hast.

03:31:18.860 --> 03:31:22.940
Äh, New? Wie machen wir das jetzt richtig? New, WS-Data?

03:31:26.440 --> 03:31:29.780
Chatge, punzt das so jetzt?

03:31:30.400 --> 03:31:33.080
Ist das jetzt ein Pointer zu WS-Data? Ja, ist es.

03:31:36.050 --> 03:31:36.870
Okay, nice.

03:31:39.850 --> 03:31:46.380
So, und wenn wir hier fertig sind, sagen wir Delete.

03:31:47.420 --> 03:31:48.440
Ne, Delete.

03:31:50.590 --> 03:31:52.190
Aber wir müssen es auch hier sagen.

03:31:52.670 --> 03:31:54.990
Ja, das ist jetzt ja wieder...

03:31:54.990 --> 03:32:09.640
Oder können wir das mit einem Shared Pointer machen?

03:32:10.120 --> 03:32:11.980
Ich weiß, C++ gebastelt.

03:32:13.360 --> 03:32:15.340
Aber ich meine, wir müssen ein bisschen was lernen.

03:32:15.700 --> 03:32:20.960
Kann man jetzt hier sagen, make charrette.

03:32:20.960 --> 03:32:22.260
Make charrette.

03:32:24.140 --> 03:32:28.270
Und dann, okay, so, schau mal, nett.

03:32:29.830 --> 03:32:30.890
Wo kommt denn hier die Klammer her?

03:32:30.890 --> 03:32:32.450
Ah, von hier.

03:32:32.650 --> 03:32:35.670
Äh, wait a minute, what?

03:32:43.650 --> 03:32:44.710
Irgendwie funktioniert das jetzt.

03:32:44.990 --> 03:32:47.580
Make construct.

03:32:54.280 --> 03:32:54.640
Hä?

03:32:55.340 --> 03:32:58.680
Ich will einfach einen fucking Pointer erstellen da drauf.

03:32:59.280 --> 03:33:07.210
Das ist super advanced wieder hier.

03:33:08.510 --> 03:33:25.620
Aber ich habe keinen Constructor.

03:33:30.840 --> 03:33:34.160
Ich will den Kram so initialisieren.

03:33:34.260 --> 03:33:34.940
Warum geht denn das nicht?

03:33:36.100 --> 03:33:39.140
Also diese Sprache ist wirklich echt abfuck.

03:33:39.140 --> 03:33:43.430
Du musst dafür keine Instanz erstellen.

03:33:43.630 --> 03:33:45.210
Ja, aber wie würde ich das denn jetzt machen?

03:33:47.860 --> 03:33:49.200
Also, sagen wir mal so hier, ne?

03:33:49.280 --> 03:33:50.000
WS-Data?

03:33:50.640 --> 03:33:52.380
Aber das funktioniert ja nicht.

03:33:55.190 --> 03:33:55.350
So.

03:33:56.930 --> 03:33:58.170
Was sagt er? Das tut nicht.

03:34:00.490 --> 03:34:03.130
Muss ich dem vielleicht sagen, dass das so ist?

03:34:05.580 --> 03:34:05.800
Nee.

03:34:11.820 --> 03:34:13.860
Aber so wäre doch viel schöner.

03:34:16.780 --> 03:34:17.060
Message?

03:34:18.960 --> 03:34:19.360
Server.

03:34:21.780 --> 03:34:22.080
Oh, oh.

03:34:26.200 --> 03:34:26.560
Okay.

03:34:31.000 --> 03:34:32.480
Und das hat jetzt den Vorteil,

03:34:34.200 --> 03:34:35.480
dass er das automatisch aufwendet.

03:34:35.820 --> 03:34:36.380
Aufräumt.

03:34:36.660 --> 03:34:36.980
Oder?

03:34:38.800 --> 03:34:40.700
Räumt er das jetzt automatisch auf,

03:34:40.920 --> 03:34:43.340
wenn das überall aus dem Scope ist?

03:34:44.520 --> 03:34:46.460
Weil das ist ja, glaube ich, der Sinn davon, ne?

03:34:54.200 --> 03:34:54.580
Moment.

03:34:55.500 --> 03:34:58.940
Wie kann ich das zu einem Void-Pointer casten?

03:35:03.210 --> 03:35:05.270
Wie kriege ich denn das Ding jetzt in eine Funktion,

03:35:05.370 --> 03:35:06.890
die nur Void-Pointer akzeptiert?

03:35:09.200 --> 03:35:11.660
Ich kann das nicht einfach zu einem Void-Pointer casten, oder?

03:35:17.740 --> 03:35:18.020
Get.

03:35:21.360 --> 03:35:21.660
Aha.

03:35:24.090 --> 03:35:24.350
Ups.

03:35:26.890 --> 03:35:27.250
What, what?

03:35:27.690 --> 03:35:27.950
Get.

03:35:30.780 --> 03:35:31.620
Ein was?

03:35:31.720 --> 03:35:33.960
Standard-Remove-CV?

03:35:34.360 --> 03:35:41.830
What the f...

03:35:41.830 --> 03:35:44.610
Nach dem Return ist der Pointer dangling.

03:35:44.730 --> 03:35:46.770
Nee, mit einem Shared-Pointer ja eben nicht.

03:35:47.530 --> 03:35:48.470
Dafür ist es ja da.

03:35:51.420 --> 03:35:52.100
Was?

03:35:53.540 --> 03:35:53.840
Moment.

03:35:54.960 --> 03:35:57.660
Control reaches end of function 101?

03:35:58.220 --> 03:35:58.400
What?

03:36:06.490 --> 03:36:07.190
Äh...

03:36:07.190 --> 03:36:07.750
Was?

03:36:10.200 --> 03:36:10.560
Was?

03:36:11.460 --> 03:36:14.120
Da habe ich doch seit 100 Jahren nichts mehr dran gemacht.

03:36:36.810 --> 03:36:36.990
Hä?

03:36:37.830 --> 03:36:38.630
What?

03:36:45.320 --> 03:36:45.920
Was?

03:36:47.400 --> 03:36:48.500
Wie jetzt?

03:36:49.800 --> 03:36:50.920
Was will der von mir?

03:36:58.400 --> 03:36:58.740
What?

03:37:02.700 --> 03:37:03.100
Was?

03:37:06.000 --> 03:37:07.580
Damit habe ich doch überhaupt nichts gemacht.

03:37:18.030 --> 03:37:18.330
Alter.

03:37:20.370 --> 03:37:22.250
Wollt ihr mich komplett verarschen oder was?

03:37:37.450 --> 03:37:37.850
Was?

03:37:41.430 --> 03:37:43.310
Warum reached das das End?

03:37:44.310 --> 03:37:46.430
Vor allem, warum erkennt meine Idee das nicht?

03:37:51.190 --> 03:37:51.970
Moment, Return?

03:37:52.150 --> 03:37:53.770
Ich habe hier einen Return rausgeschmissen.

03:37:53.770 --> 03:37:57.510
Ah, jetzt weiß ich, was der will.

03:38:02.140 --> 03:38:04.580
Die Meldung ist einfach nur wieder richtig dumm.

03:38:34.700 --> 03:38:36.520
Ich habe keine Ahnung, Mann.

03:38:37.060 --> 03:38:40.140
Mit irgendwelchen random Dateien, Mann.

03:38:43.380 --> 03:38:45.360
Die Fehlermeldungen sind so scheiße.

03:38:45.740 --> 03:38:46.780
Guckt euch das mal an.

03:38:49.660 --> 03:38:51.060
Was will der überhaupt von mir?

03:38:51.540 --> 03:38:52.040
Wo ist das?

03:38:52.100 --> 03:38:54.020
Wo ist das Problem, Alter?

03:38:55.540 --> 03:38:56.640
Wo ist das Problem?

03:38:57.380 --> 03:38:57.680
Was?

03:38:57.680 --> 03:38:57.940
Was?

03:38:57.940 --> 03:39:04.220
Ich habe nie in meinem Leben in FNT in Clued irgendwas editiert.

03:39:10.340 --> 03:39:12.320
Ich habe die Datei noch nicht mal geöffnet.

03:39:14.080 --> 03:39:16.340
Und Mann, was soll uns das sagen?

03:39:22.090 --> 03:39:24.670
Seriously, ich habe absolut keine Ahnung, wo das herkommt.

03:39:27.480 --> 03:39:28.660
Sonst sieht man ja auch sonst.

03:39:28.720 --> 03:39:29.560
Sonst sieht man nichts, ne?

03:39:29.960 --> 03:39:31.080
Erkennt man da vielleicht noch irgendwas?

03:39:31.200 --> 03:39:35.540
Helper, Zeile 12.

03:39:35.940 --> 03:39:37.380
Main CPP-Zeile.

03:39:37.680 --> 03:39:39.120
Helper, Zeile 12.

03:39:39.260 --> 03:39:39.520
Okay.

03:39:40.980 --> 03:39:42.180
Aha, das ist irgendein Log.

03:39:42.460 --> 03:39:43.840
Irgendein Logging mag nicht.

03:39:45.040 --> 03:39:46.460
Irgendein Logging mag nicht.

03:39:48.680 --> 03:39:49.680
Zeile 12.

03:39:49.880 --> 03:39:51.480
Zeile 12 ist ziemlich weit oben.

03:39:52.620 --> 03:39:52.780
Ne.

03:39:56.890 --> 03:40:00.290
Ey, es kann auch alles kompliziert sein, Mann.

03:40:04.900 --> 03:40:06.920
Ist Significant überhaupt richtig geschrieben?

03:40:07.640 --> 03:40:07.840
Ne.

03:40:11.530 --> 03:40:12.050
Significant.

03:40:12.670 --> 03:40:20.010
Okay, ich meine, seriously, was hat sich hier getan?

03:40:28.690 --> 03:40:30.650
Was kann das sein?

03:40:37.070 --> 03:40:42.540
Ich meine, wo habe ich denn was gemacht?

03:40:42.740 --> 03:40:48.070
Ich habe hier gesagt Null?

03:40:50.720 --> 03:40:53.720
Ey, das ist doch wieder absoluter grausamer Scheiß, Mann.

03:40:54.980 --> 03:40:56.200
Ich mache das jetzt einfach rückgängig.

03:40:57.880 --> 03:40:58.680
Dass es geht.

03:40:59.580 --> 03:41:02.200
Ich drehe echt am Rad bei dem Scheiß gerade.

03:41:06.440 --> 03:41:08.640
Ich sehe das nicht ein, jetzt alles rückgängig zu machen.

03:41:08.720 --> 03:41:09.400
Ich sehe es nicht ein.

03:41:09.920 --> 03:41:10.920
Was könnte das sein?

03:41:11.000 --> 03:41:13.060
Okay, wir machen wieder die übliche Geschichte.

03:41:13.660 --> 03:41:14.400
Wir kommen hier hinaus.

03:41:15.240 --> 03:41:15.920
Was sollen wir machen?

03:41:16.540 --> 03:41:20.860
Nachdem die Fehlermeldung ja nicht zuordnenbar ist,

03:41:20.980 --> 03:41:21.260
irgendwie,

03:41:21.260 --> 03:41:22.480
kommentieren wir auch.

03:41:22.600 --> 03:41:23.480
Gucken, ob es funktioniert.

03:41:27.400 --> 03:41:28.600
Das ist schon mal nett.

03:41:31.480 --> 03:41:34.460
Also, in der Funktion ist es schon mal nichts.

03:41:38.500 --> 03:41:41.060
Ist es was in WS-Händler vielleicht?

03:41:52.630 --> 03:41:54.890
Ist hier irgendwas in Main oder so?

03:42:00.420 --> 03:42:00.640
Ey.

03:42:01.740 --> 03:42:02.380
What the fuck?

03:42:03.620 --> 03:42:04.920
Der Aufruf in Main ist es?

03:42:05.800 --> 03:42:06.060
What?

03:42:09.240 --> 03:42:10.500
Wollt ihr mich komplett verarschen?

03:42:16.630 --> 03:42:19.330
Der Aufruf von der leeren Funktion ist es?

03:42:29.300 --> 03:42:29.520
Ne.

03:42:30.260 --> 03:42:30.720
Doch nicht.

03:42:41.400 --> 03:42:41.800
Okay.

03:42:42.360 --> 03:42:43.560
Los, auskommentieren wir da.

03:42:44.560 --> 03:42:45.360
Okay, funzt.

03:42:47.000 --> 03:42:48.040
Einkommentieren wir da.

03:42:50.560 --> 03:42:51.000
Funzt.

03:42:59.540 --> 03:43:00.580
Einkommentieren wir da.

03:43:02.580 --> 03:43:03.080
Funzt.

03:43:08.430 --> 03:43:09.150
Ey, das war's.

03:43:09.750 --> 03:43:11.850
Das haben wir exakt den Stand erreicht, der eben nicht ging.

03:43:21.650 --> 03:43:23.570
Wir haben exakt das, was eben nicht lief.

03:43:24.350 --> 03:43:24.970
Haben wir wieder.

03:43:26.270 --> 03:43:27.150
Und es läuft jetzt.

03:43:30.860 --> 03:43:31.820
Ja gut, das haben wir noch.

03:43:32.000 --> 03:43:34.740
Das ist ja ein Fehler, den habe ich ja nachvollziehen können.

03:43:43.810 --> 03:43:44.850
Can't wait, man.

03:43:47.440 --> 03:43:47.840
So.

03:43:48.300 --> 03:43:50.020
Jetzt habe ich aber ganz vergessen, wo er stehen geblieben ist.

03:43:50.200 --> 03:43:52.220
Hat das jetzt hier eigentlich, war das hier jetzt fertig?

03:43:56.810 --> 03:43:58.190
Ey, passt doch eigentlich soweit, oder?

03:43:59.470 --> 03:43:59.830
Okay.

03:44:00.250 --> 03:44:00.610
Zack.

03:44:01.190 --> 03:44:01.590
Data.

03:44:03.670 --> 03:44:06.110
Diesen Shared Pointer Shit, den lassen wir jetzt einfach sein.

03:44:12.620 --> 03:44:13.860
Shared Pointer.

03:44:14.300 --> 03:44:15.540
S-Void Pointer.

03:44:15.740 --> 03:44:16.180
Geht das?

03:44:47.200 --> 03:44:48.060
Ne, ne, umgedreht.

03:44:48.720 --> 03:44:49.460
Shared Pointer.

03:44:49.840 --> 03:44:50.640
Shared Pointer.

03:44:51.020 --> 03:44:51.240
To.

03:44:52.060 --> 03:44:52.980
Void Pointer.

03:44:55.490 --> 03:44:56.370
Ach komm, scheiß drauf.

03:44:56.470 --> 03:44:56.990
Mir doch egal.

03:44:56.990 --> 03:44:59.410
Wir lassen es weg.

03:44:59.510 --> 03:45:00.870
Wir sagen jetzt WS-Data.

03:45:02.840 --> 03:45:04.520
New WS-Data.

03:45:04.740 --> 03:45:06.180
Das kannst du doch alles knicken, oder?

03:45:13.730 --> 03:45:13.990
Punkt.

03:45:16.850 --> 03:45:17.930
Visual Studio Code.

03:45:18.970 --> 03:45:19.570
Please.

03:45:21.710 --> 03:45:22.110
Handler.

03:45:22.430 --> 03:45:22.770
Gleich.

03:45:23.130 --> 03:45:23.470
Server.

03:45:26.740 --> 03:45:27.240
Oder auch nicht.

03:45:28.860 --> 03:45:29.540
Ach ne, Handle.

03:45:33.540 --> 03:45:34.540
Blöde Frage.

03:45:35.100 --> 03:45:37.780
Aber warum geht das mein Auto komplett nicht mehr?

03:45:40.040 --> 03:45:41.600
Warum geht mein Auto komplett nicht mehr?

03:45:43.200 --> 03:45:43.680
Message.

03:45:44.140 --> 03:45:45.100
Gleich Message.

03:45:45.260 --> 03:45:50.540
Egal, Autocomplete, Overrated, Outdated, Cheap Aided, brauchen wir nicht.

03:45:53.360 --> 03:45:56.160
Oh, und das ist jetzt Casten zu Void Pointer, okay, nice.

03:45:57.480 --> 03:46:00.380
So, jetzt müssen wir natürlich noch gucken, dass das richtig aufgelöst wird, aber mein...

03:46:00.680 --> 03:46:01.580
Okay, wurscht.

03:46:02.680 --> 03:46:03.180
Äh...

03:46:04.000 --> 03:46:04.500
Moment, was?

03:46:05.600 --> 03:46:06.100
Warum?

03:46:07.220 --> 03:46:09.380
Ah, mein Autocomplete ist wieder kaputt.

03:46:10.400 --> 03:46:12.660
Warum ist mein Autocomplete wieder kaputt?

03:46:17.440 --> 03:46:18.400
Äh, WS-Händel?

03:46:20.660 --> 03:46:22.300
Sollte eigentlich funktionieren.

03:46:25.750 --> 03:46:27.750
Ach so, ESP-Error.

03:46:33.360 --> 03:46:34.620
WS-Code ist ganz schön oft block...

03:46:34.620 --> 03:46:35.120
Okay.

03:46:36.540 --> 03:46:37.640
War's das jetzt?

03:46:37.640 --> 03:46:40.700
Kann ich jetzt endlich Text per Websocket anzeigen?

03:46:41.140 --> 03:46:44.500
Wir haben nur 3 Stunden 45 Minuten dafür gebraucht?

03:46:44.880 --> 03:46:46.140
Kompiliert das überhaupt?

03:46:49.010 --> 03:46:49.510
Okay.

03:46:49.510 --> 03:46:50.310
Pausechamp.

03:46:52.050 --> 03:46:52.870
Ist compiled.

03:46:56.500 --> 03:47:00.000
Das Daumen ist übrigens mittlerweile hängen geblieben, was kein allzu gutes Zeichen ist.

03:47:01.180 --> 03:47:01.680
Äh...

03:47:02.440 --> 03:47:03.300
Ja, alles klar.

03:47:05.000 --> 03:47:06.000
Jetzt bin ich mal gespannt.

03:47:06.000 --> 03:47:10.340
Es crasht jetzt garantiert, weil ich irgendwas beim Umbauen übersehen hab.

03:47:14.380 --> 03:47:14.880
Äh...

03:47:14.880 --> 03:47:16.420
Ne, es geht, Leute!

03:47:18.780 --> 03:47:19.280
Es geht!

03:47:20.000 --> 03:47:22.400
Ich kann per Websocket mir Zeug schicken lassen.

03:47:24.880 --> 03:47:27.620
Wobei das bisschen hakelig ist, oder?

03:47:29.320 --> 03:47:29.820
Guck mal.

03:47:33.930 --> 03:47:35.290
Wenn ich Enter drücke, dann geht's?

03:47:35.290 --> 03:47:35.790
Hä?

03:47:36.970 --> 03:47:37.590
Wie sie verbuggt.

03:47:38.250 --> 03:47:39.450
Wie sie verbuggt, das Ganze, hä?

03:47:44.860 --> 03:47:45.360
WS...

03:47:53.660 --> 03:47:54.160
Ja!

03:47:54.520 --> 03:47:56.360
Und das auf so vielen Verbindungen, wie ich will.

03:47:56.820 --> 03:47:57.980
Irgendwas ist noch sass.

03:47:57.980 --> 03:47:58.480
Nee.

03:47:58.480 --> 03:47:59.480
Ich glaube, das liegt...

03:48:00.020 --> 03:48:00.520
Oh.

03:48:01.400 --> 03:48:02.580
Ach, wenn ich Enter drück...

03:48:03.960 --> 03:48:06.360
Wenn ich Enter drück, da kommt jedes Mal die neue Message.

03:48:06.360 --> 03:48:06.860
Wett?

03:48:08.380 --> 03:48:10.060
Brauch ich das ganze Zeug überhaupt?

03:48:11.640 --> 03:48:12.560
Moment, wenn ich Enter...

03:48:12.560 --> 03:48:15.560
Ach so, wenn ich Enter drücke, dann schick ich ne Text-Message dahin.

03:48:15.940 --> 03:48:16.440
Ja, nee.

03:48:16.700 --> 03:48:18.900
Das ist ja nicht wirklich das, was ich... was ich haben will.

03:48:25.560 --> 03:48:27.740
Aber das klappt schon mal ganz brauchbar jetzt, oder?

03:48:32.480 --> 03:48:33.200
Mein Besser?

03:48:38.010 --> 03:48:39.290
Ich mein, der macht ja hier nix.

03:48:39.290 --> 03:48:43.370
Ja, der... der gibt einfach den Text aus, der geschickt wird und gut ist.

03:48:44.770 --> 03:48:47.530
Und ich will ja auch nicht vom Client zum Server kommunizieren.

03:48:47.610 --> 03:48:50.830
Ich will ja nur vom Server zum Client kommunizieren, wenn's neue Sensorwerte gibt.

03:48:51.530 --> 03:48:54.570
Okay, dann probieren wir das doch mal aus, hier.

03:48:55.830 --> 03:49:00.850
Schicken wir doch mal JSON-Werte zurück an unser Webfrontend.

03:49:01.210 --> 03:49:03.150
Und lassen das mal darstellen.

03:49:04.550 --> 03:49:07.350
Da bauen wir mal irgendeine JSON-Response da draus,

03:49:07.350 --> 03:49:09.270
die irgendwie halbwegs sinnvoll aussieht.

03:49:09.290 --> 03:49:11.290
Moment, nee, nicht hier, an der Stelle hier.

03:49:11.290 --> 03:49:16.290
Irgendwas, was man in JavaScript Frontend verarbeiten kann.

03:49:16.290 --> 03:49:19.290
Da ist sogar ne JSON-Library dabei, glaube.

03:49:19.290 --> 03:49:22.290
Wobei man diesen kur... dieses kurzes Zeug hier können wir auch...

03:49:22.290 --> 03:49:24.290
Können wir auch so bauen.

03:49:24.290 --> 03:49:28.290
Ähm, also, wir... wir antworten jetzt mal irgendwas mit...

03:49:28.290 --> 03:49:32.300
Einfach nennen wir's Uptime, okay?

03:49:32.300 --> 03:49:33.300
Ja, hier.

03:49:33.300 --> 03:49:34.300
Message.

03:49:34.300 --> 03:49:37.300
Message gleich.

03:49:37.300 --> 03:49:39.300
So.

03:49:39.300 --> 03:49:40.300
Ähm.

03:49:40.300 --> 03:49:40.780
String-Template.

03:49:40.780 --> 03:49:42.780
String-Templates gibt's ja net.

03:49:42.780 --> 03:49:43.780
Wir probieren das jetzt mal aus.

03:49:43.780 --> 03:49:45.780
Das heißt C-JSON.

03:49:45.780 --> 03:49:47.780
Heißt das Ganze C-JSON.

03:49:47.780 --> 03:49:50.420
Irgendwie so.

03:49:50.420 --> 03:49:52.420
Kann man das includen?

03:49:53.420 --> 03:49:55.860
Oh.

03:49:55.860 --> 03:49:57.860
C oder groß geschrieben.

03:49:57.860 --> 03:50:00.860
Wobei, sorry, Leute, ich meine natürlich J-JSON.

03:50:00.860 --> 03:50:04.620
C-JSON include.

03:50:06.620 --> 03:50:07.620
Und dann zähl ich Create.

03:50:07.620 --> 03:50:08.620
Object.

03:50:08.620 --> 03:50:11.570
Okay.

03:50:11.570 --> 03:50:12.570
So.

03:50:12.570 --> 03:50:13.570
Message.

03:50:13.570 --> 03:50:14.570
Jetzt können wir sagen, C...

03:50:14.570 --> 03:50:16.570
Das ist dann tatsächlich ne halbwegs brauchbare Library.

03:50:16.570 --> 03:50:17.570
Add String to...

03:50:17.570 --> 03:50:18.570
Oder nee.

03:50:18.570 --> 03:50:19.570
Add Number to Object.

03:50:19.570 --> 03:50:20.570
Message.

03:50:20.570 --> 03:50:21.570
Und da will ich jetzt mal ne Millisekunden hinzufügen.

03:50:21.570 --> 03:50:22.570
Ne, Moment.

03:50:22.570 --> 03:50:23.570
Moment, Moment.

03:50:23.570 --> 03:50:24.570
Brauch ich erst noch ne Key.

03:50:24.570 --> 03:50:25.570
So.

03:50:25.570 --> 03:50:28.010
Mein Key ist...

03:50:28.010 --> 03:50:29.010
Pja.

03:50:29.010 --> 03:50:30.010
Uptime.

03:50:30.010 --> 03:50:31.010
Moin Dark Assassin.

03:50:31.010 --> 03:50:32.010
Uptime.

03:50:32.010 --> 03:50:33.010
So.

03:50:33.010 --> 03:50:34.010
Und wir fügen noch ein bisschen anderes Zeug hinzu, um zu gucken, ob's funktioniert.

03:50:34.010 --> 03:50:35.010
Ähm.

03:50:35.010 --> 03:50:36.010
Keine Ahnung.

03:50:36.010 --> 03:50:37.010
So.

03:50:37.010 --> 03:50:38.010
So.

03:50:38.010 --> 03:50:39.010
So.

03:50:39.010 --> 03:50:40.010
So.

03:50:40.010 --> 03:50:41.010
So.

03:50:41.010 --> 03:50:42.010
So.

03:50:42.010 --> 03:50:43.010
So.

03:50:43.010 --> 03:50:44.010
So.

03:50:44.010 --> 03:50:45.010
So.

03:50:45.010 --> 03:50:47.700
So.

03:50:47.700 --> 03:50:48.700
So.

03:50:48.700 --> 03:50:49.700
So.

03:50:49.700 --> 03:50:50.700
Keine Ahnung.

03:50:50.700 --> 03:50:51.700
Habt ihr...

03:50:51.700 --> 03:50:54.020
Habt ihr irgendeine glorreiche Idee?

03:50:54.020 --> 03:50:57.420
Äh.

03:50:57.420 --> 03:50:58.420
Die IP.

03:50:58.420 --> 03:50:59.420
Die IP-Adresse.

03:50:59.420 --> 03:51:00.420
Okay.

03:51:00.420 --> 03:51:01.420
Die IP.

03:51:01.420 --> 03:51:02.420
Fügen wir hinzu.

03:51:02.420 --> 03:51:03.420
Okay.

03:51:03.420 --> 03:51:04.420
IP.

03:51:04.420 --> 03:51:05.420
Wifi.

03:51:05.420 --> 03:51:06.420
Äh.

03:51:06.420 --> 03:51:07.420
IP.

03:51:07.420 --> 03:51:08.420
Local...

03:51:08.420 --> 03:51:09.420
Local IP.

03:51:09.420 --> 03:51:12.670
Aber das ist nicht Number.

03:51:12.670 --> 03:51:14.830
To ähm.

03:51:14.830 --> 03:51:16.470
Add...

03:51:16.470 --> 03:51:20.350
String to Object.

03:51:20.350 --> 03:51:22.030
Und dann...

03:51:22.030 --> 03:51:22.930
Noch?

03:51:22.930 --> 03:51:23.810
Keine Ahnung.

03:51:24.370 --> 03:51:26.470
Freier Speicher.

03:51:29.870 --> 03:51:31.250
Hat mein Stream gerade ge-lagged, Chat?

03:51:32.850 --> 03:51:33.750
Gerade laggert?

03:51:45.480 --> 03:51:46.060
Freier RAM.

03:51:46.360 --> 03:51:47.400
Ja, freier RAM ist gut.

03:51:48.320 --> 03:51:49.840
Na klar, kannst fragen, was du willst.

03:51:50.740 --> 03:51:51.420
U-String.

03:51:54.100 --> 03:51:55.100
C-String.

03:51:55.660 --> 03:51:56.020
So.

03:51:57.920 --> 03:51:58.100
Ja.

03:51:58.540 --> 03:51:59.880
Okay, und jetzt noch freier RAM.

03:51:59.880 --> 03:52:00.900
Okay, freier RAM.

03:52:01.040 --> 03:52:01.680
Add number.

03:52:02.680 --> 03:52:03.080
Memory.

03:52:05.220 --> 03:52:08.060
Memory Usage machen wir.

03:52:08.440 --> 03:52:10.840
Memory Usage oder Memory Free?

03:52:10.940 --> 03:52:12.120
Wir machen Memory Usage.

03:52:12.500 --> 03:52:16.200
Und wir machen Memory Size.

03:52:17.060 --> 03:52:18.320
Da weiß ich nämlich, wie es funktioniert.

03:52:18.440 --> 03:52:19.480
Nämlich ESP.

03:52:20.880 --> 03:52:22.860
Oder irgendwie Heap Size.

03:52:23.200 --> 03:52:23.340
Genau.

03:52:24.020 --> 03:52:24.200
So.

03:52:24.800 --> 03:52:27.620
Und Memory Usage ist dementsprechend dann.

03:52:29.620 --> 03:52:30.740
Heap Size minus.

03:52:30.880 --> 03:52:32.160
Und dann gibt es auch so etwas wie Free.

03:52:38.870 --> 03:52:39.030
So.

03:52:39.030 --> 03:52:40.770
Beste.

03:52:42.050 --> 03:52:42.430
Okay.

03:52:44.610 --> 03:53:05.920
Und jetzt C-JSON Print Message.

03:53:07.860 --> 03:53:08.140
So.

03:53:09.000 --> 03:53:15.730
Und das muss ich nämlich danach löschen.

03:53:16.490 --> 03:53:18.210
Sonst gibt es eine Memory Leak.

03:53:24.830 --> 03:53:26.730
C-JSON Delete.

03:53:29.290 --> 03:53:32.650
Sonst leake ich ganz hart Memory.

03:53:33.710 --> 03:53:33.990
So.

03:53:33.990 --> 03:53:35.250
Das können wir jetzt schicken.

03:53:35.650 --> 03:53:37.650
Passt so.

03:53:37.890 --> 03:53:39.930
Eigentlich alles gut.

03:53:40.930 --> 03:53:42.690
Dann machen wir das mal.

03:53:42.930 --> 03:53:46.590
Und jetzt müssen wir das in unserem Webfrontend reinwurschteln.

03:53:48.310 --> 03:53:50.170
Machen wir das mal in den Browser hier mal zu.

03:53:51.630 --> 03:53:55.790
Ich bin am überlegen, meinen PC umzustellen von Gaming und editieren auf reines Gaming.

03:53:56.350 --> 03:53:58.130
Das hat doch sehr große Überschneidungen, oder?

03:53:58.570 --> 03:54:01.010
Hab aktuelle 5950 drin.

03:54:01.110 --> 03:54:01.650
Den komme ich jetzt nicht mehr.

03:54:03.030 --> 03:54:03.710
Ganz ehrlich.

03:54:03.710 --> 03:54:05.630
Wenn du ein System hast, wo du super drauf gehst.

03:54:05.630 --> 03:54:08.050
Hast du auch ein System, auf dem du super editieren kannst.

03:54:11.220 --> 03:54:15.240
Zu den aktuellen Ryzen CPUs kann ich dir nichts sagen.

03:54:16.660 --> 03:54:17.700
Ich kenne mich damit nicht aus.

03:54:17.800 --> 03:54:18.940
Ich kenne mich damit nur aus.

03:54:22.930 --> 03:54:23.690
Was war jetzt?

03:54:25.090 --> 03:54:26.070
WiFi failed?

03:54:26.950 --> 03:54:27.230
Okay.

03:54:27.790 --> 03:54:29.690
Ich habe mich, glaube ich, einfach zu oft verbunden.

03:54:31.910 --> 03:54:33.290
Okay, wir kriegen eine JSON Antwort.

03:54:33.470 --> 03:54:35.770
Das stimmt mich schon mal positiv.

03:54:36.950 --> 03:54:38.290
Okay, Browser aufmachen.

03:54:39.390 --> 03:54:40.830
Jetzt bauen wir das mal in unsere Webseite.

03:54:40.850 --> 03:54:42.850
Wir bauen eine Web-Anwendung ein.

03:54:42.850 --> 03:54:56.380
CD, Web-App, NPM, DEV, NPM, RUN, DEV, LOCAL HOST, 5, da war es doch, 5, 1, 7, 3, oh, Keckel.

03:54:56.380 --> 03:55:01.500
So, jetzt, jetzt, Chatgear, wie macht man eine ordentliche Websocket-Verbindung im Browser?

03:55:01.500 --> 03:55:20.780
Das, weiß ich nicht, JS-Websocket, wie funzt denn das?

03:55:22.780 --> 03:55:24.780
Da gibt es bestimmt eine schöne Library fertig, oder?

03:55:32.450 --> 03:55:33.370
New Websocket.

03:55:35.880 --> 03:55:40.760
Chat, würdet ihr die Web, würdet ihr Websockets direkt im Browser machen?

03:55:42.940 --> 03:55:46.040
Oder irgendeine Library verwenden, die das, die das handelt?

03:55:46.160 --> 03:55:48.500
Ich kenne mich damit, ich kenne mich damit nicht gut aus.

03:55:50.000 --> 03:55:51.040
Was ist das für ein Example?

03:55:59.910 --> 03:56:00.510
Im Browser.

03:56:00.810 --> 03:56:01.490
Wie funktioniert die?

03:56:01.650 --> 03:56:03.050
Okay, das sieht easy aus.

03:56:03.870 --> 03:56:05.290
Easy sieht das aus.

03:56:10.550 --> 03:56:12.850
So, ich meine, wir machen ja hier noch nichts großartig drin.

03:56:13.410 --> 03:56:15.430
Script, Websocket.

03:56:16.310 --> 03:56:18.330
Ja gut, gibt es keine Verbindung, das ist mir auch klar.

03:56:18.510 --> 03:56:21.690
So, das müssen wir höchstwahrscheinlich proxien.

03:56:21.810 --> 03:56:29.330
Ich gehe mal davon aus, dass das so nicht funktioniert, wenn ich direkt mich darauf connecte, oder?

03:56:32.720 --> 03:56:35.770
WS, oder?

03:56:36.370 --> 03:56:37.070
Wie funzt das hier?

03:56:38.450 --> 03:56:40.370
Was ist denn der zweite Parameter hier?

03:56:42.250 --> 03:56:43.090
Protokolls?

03:56:43.830 --> 03:56:44.030
What?

03:56:46.240 --> 03:56:47.420
Kann man doch bestimmt weglassen.

03:56:53.570 --> 03:56:53.790
Aha.

03:56:55.210 --> 03:56:55.590
Äh.

03:56:56.330 --> 03:56:58.590
Der mag nicht, der mag nicht, weil...

03:57:01.790 --> 03:57:03.590
Ja doch, hat doch, hat doch funktioniert, oder?

03:57:05.470 --> 03:57:06.930
WS-Message, Hello Server.

03:57:08.450 --> 03:57:09.410
Hat das...

03:57:09.410 --> 03:57:10.230
Ja doch, guck mal.

03:57:10.730 --> 03:57:10.930
Ha!

03:57:11.870 --> 03:57:13.310
Ich krieg mein Chasen-Zeug.

03:57:13.570 --> 03:57:13.810
Guck mal.

03:57:14.250 --> 03:57:14.750
Hat funktioniert.

03:57:15.950 --> 03:57:16.690
Bam, bä, bä, bam.

03:57:19.000 --> 03:57:23.600
Das juckt ihn überhaupt nicht, dass, dass der Server nicht trusted ist.

03:57:31.430 --> 03:57:33.810
Okay, ich sende auf jeden Fall nichts zu dem Server.

03:57:33.970 --> 03:57:34.410
On Open.

03:57:35.590 --> 03:57:36.470
On Message.

03:57:36.790 --> 03:57:37.410
On Close.

03:57:37.490 --> 03:57:38.210
Juckt mich auch nicht.

03:57:38.210 --> 03:57:40.370
Mich interessiert eigentlich wirklich nur das hier.

03:57:40.430 --> 03:57:52.870
Ja.

03:57:53.130 --> 03:57:53.630
Ja.

03:57:53.630 --> 03:57:54.970
Okay, das braucht ein bisschen.

03:57:55.870 --> 03:57:57.170
Das, das braucht ein bisschen.

03:57:59.220 --> 03:58:01.860
Weil, weil, weil der, weil der für den Handshake eine Weile braucht.

03:58:05.340 --> 03:58:05.840
Clear Lock.

03:58:15.220 --> 03:58:15.860
Sehr schick.

03:58:16.140 --> 03:58:16.640
Gefällt mir.

03:58:22.800 --> 03:58:28.600
Ich würde sagen, wir machen, wir tragen in unsere VEET-Config mal einen lokalen Proxy ein.

03:58:31.310 --> 03:58:32.950
Und gehen nicht direkt auf den Server.

03:58:37.480 --> 03:58:38.880
On Close machen wir.

03:58:41.140 --> 03:58:46.180
VEET-Config, wenn ich das jetzt noch zusammenkriege, irgendwas mit Server ist es.

03:58:46.680 --> 03:58:47.520
Aber weiter weiß ich nicht.

03:58:47.680 --> 03:58:50.360
VEET-Proxy-Server-Web-Socket.

03:58:51.680 --> 03:58:51.940
Ja.

03:58:53.840 --> 03:58:54.860
Web-Socket.

03:58:55.980 --> 03:58:57.060
Das da, genau.

03:58:59.200 --> 03:59:01.320
Proxy-slash-

03:59:01.320 --> 03:59:06.740
Wie, was?

03:59:07.800 --> 03:59:08.420
Ach, Proxy.

03:59:08.560 --> 03:59:09.260
Muss ich noch reinschreiben.

03:59:12.120 --> 03:59:12.680
Proxy.

03:59:14.320 --> 03:59:14.980
So, gell.

03:59:15.100 --> 03:59:15.280
So.

03:59:16.660 --> 03:59:17.260
Proxy.

03:59:20.020 --> 03:59:21.260
Und dann, was?

03:59:22.400 --> 03:59:23.820
Aha, nochmal, nochmal einen.

03:59:26.050 --> 03:59:27.310
Okay, Socket.io.

03:59:27.310 --> 03:59:45.540
Juckt mich ja nicht, sondern wir proxien slash WS auf WSS, äh, ups, WS.

03:59:47.280 --> 03:59:49.640
Und jetzt müssen wir irgendwie noch sagen, SSL ignore, glaube.

03:59:51.380 --> 03:59:53.360
Ja, Connection refused, weil?

03:59:55.970 --> 03:59:56.550
Weiß man nicht.

03:59:59.730 --> 04:00:04.550
Ach so, wenn man jetzt noch die richtige Adresse angibt, dann funzt das auch.

04:00:04.930 --> 04:00:09.170
5173.

04:00:12.070 --> 04:00:12.890
Ja, Handshake.

04:00:13.710 --> 04:00:14.110
Certificate.

04:00:14.250 --> 04:00:15.750
Äh, wie ignoriert man den Kram denn?

04:00:16.270 --> 04:00:18.790
VEET-Ignore-SSL-Certificate.

04:00:25.150 --> 04:00:26.370
Chad und Max, mal ne Frage.

04:00:26.530 --> 04:00:30.250
Wenn ihr ein Gerät eindeutig identifizieren müsst im Netzwerk, welchen Wert würdet ihr nehmen?

04:00:30.350 --> 04:00:30.790
Guid, Ui.

04:00:31.510 --> 04:00:33.150
Du meinst was, was du selbst programmierst.

04:00:33.450 --> 04:00:36.170
Ansonsten würde ich sagen, mach den Klassiker, nimm die MAC-Adresse.

04:00:37.310 --> 04:00:44.390
Das ist zwar nicht hundertprozentig sicher und fälschbar, aber die Arbeit macht sich kein Normal.

04:00:44.550 --> 04:00:49.360
Aber du willst irgendwas selbstprogrammiertes haben, ne?

04:00:49.420 --> 04:00:53.880
Also quasi eine Software willst du eindeutig identifizieren können.

04:01:10.350 --> 04:01:14.330
Also ganz ehrlich, für mich ist ne UID und ne GUID das gleiche.

04:01:14.330 --> 04:01:30.820
Also dementsprechend, secure of false muss man setzen.

04:01:32.460 --> 04:01:35.300
Chad, ihr dürft mich gerne erleuchten.

04:01:35.400 --> 04:01:38.040
Was ist der Unterschied zwischen ner GUID und ner UID?

04:01:47.120 --> 04:01:48.540
Okay, warum geht das jetzt nicht?

04:01:51.700 --> 04:01:52.360
Nothing, man.

04:01:52.380 --> 04:01:54.800
Ah, Slash WS, Slash WS.

04:01:55.820 --> 04:01:56.740
Ja, ja, das brauchen wir nicht.

04:02:00.770 --> 04:02:01.310
Es geht!

04:02:01.850 --> 04:02:02.130
Bam!

04:02:02.830 --> 04:02:03.450
Guckt's euch an.

04:02:09.400 --> 04:02:10.640
Ordentliche Konsolenausgabe.

04:02:10.860 --> 04:02:11.100
Nice.

04:02:11.760 --> 04:02:18.640
So, da kommt jetzt auch nicht Keckel hin, sondern jetzt machen wir mal hier Svelte, Svelte-Logik.

04:02:21.860 --> 04:02:27.980
Let lastMessage gleich leer.

04:02:33.470 --> 04:02:34.190
LastMessage.

04:02:34.190 --> 04:02:35.210
Ja, Object.

04:02:35.450 --> 04:02:35.670
Ach so.

04:02:35.670 --> 04:02:38.290
Äh, Jason, Stringify.

04:02:38.390 --> 04:02:40.810
Da gab's auch irgendeinen Trick, dass man das nicht gebraucht hat, ne?

04:02:43.320 --> 04:02:45.380
Und jetzt kann man irgendwie noch sagen, PrettyPrint.

04:02:46.100 --> 04:02:47.200
Oder wie ging das nochmal?

04:02:47.420 --> 04:02:47.780
Please.

04:02:49.400 --> 04:02:53.600
Jason, Stringify, PrettyPrint.

04:02:56.260 --> 04:02:57.500
Ach, 0 und dann 2.

04:02:57.800 --> 04:02:58.000
Okay.

04:02:59.240 --> 04:03:00.840
0, 2.

04:03:05.230 --> 04:03:07.470
Okay, LastMessage gleich.

04:03:11.490 --> 04:03:18.640
Äh, schönes was anderes.

04:03:18.640 --> 04:03:18.800
Was?

04:03:24.230 --> 04:03:25.730
Das ist nicht richtig geparst.

04:03:27.030 --> 04:03:29.310
Ach so, warte mal, das kommt als String.

04:03:29.670 --> 04:03:33.150
Ich muss erst mal sagen, Jason, Parse, oder?

04:03:33.570 --> 04:03:33.990
Vorher.

04:03:37.700 --> 04:03:44.140
Ja, okay.

04:03:46.360 --> 04:03:48.680
Und jetzt machen wir das Ganze preformatted.

04:03:52.310 --> 04:03:53.610
Okay, 4 vielleicht.

04:03:59.230 --> 04:04:01.530
Oh, jetzt haben wir, ich glaube, wir haben den RAM voll gemacht, oder?

04:04:04.860 --> 04:04:05.940
Fail to QWork.

04:04:07.700 --> 04:04:08.060
0.

04:04:09.140 --> 04:04:11.180
Ich glaube, das WiFi ist gerade einfach abgekackt.

04:04:20.140 --> 04:04:21.280
Oder ist der RAM voll?

04:04:21.460 --> 04:04:22.120
Wir sehen das ja.

04:04:22.120 --> 04:04:24.660
Wir sehen das ja hier, guck mal.

04:04:25.680 --> 04:04:26.080
Wow.

04:04:26.940 --> 04:04:31.920
Leute, unsere RAM-Usage stonks.

04:04:35.780 --> 04:04:38.160
Jetzt ist die Frage, haben wir irgendwie eine Memory-Leak?

04:04:39.020 --> 04:04:43.400
Oder queue ich einfach mehr Work, als der Server abarbeiten kann?

04:04:46.080 --> 04:04:47.100
Das kann ja auch sein.

04:04:54.460 --> 04:04:56.380
Du hast einen Call zu Neutrin ohne Delete.

04:04:56.800 --> 04:04:57.320
Stimmt.

04:04:58.140 --> 04:05:00.380
Da waren wir ja eigentlich dabei, das ist richtig.

04:05:00.380 --> 04:05:02.440
Wir haben hier dieses Data-Ding.

04:05:02.440 --> 04:05:04.440
Das löschen wir nicht.

04:05:04.440 --> 04:05:06.440
Hier, das da.

04:05:06.440 --> 04:05:08.440
Das da, löschen wir nicht.

04:05:08.440 --> 04:05:10.440
Ja, ja, du hast recht.

04:05:10.440 --> 04:05:12.440
Data wird nie gelöscht.

04:05:12.440 --> 04:05:31.880
Also, im Endeffekt sind Grid und UID gleich, aber Microsoft folgt wohl Special Stuff.

04:05:31.880 --> 04:05:38.920
Ja, und was ist, laut dem Special Stuff von Microsoft, ist der Unterschied?

04:05:38.920 --> 04:05:40.920
Also, ganz ehrlich.

04:05:40.920 --> 04:05:42.920
Äh, ups.

04:05:42.920 --> 04:05:46.920
Nehmen einfach das, was deine Standard-Library standardmäßig hat.

04:05:46.920 --> 04:05:48.920
Es macht teilweise wirklich Sinn.

04:05:48.920 --> 04:05:57.700
Es macht teilweise wirklich Sinn, sich die Unterschiede zwischen den verschiedenen Versionen anzugucken.

04:05:57.700 --> 04:06:07.280
Es gibt ja voll randomized, basierend auf Zeit teilweise drinne und so.

04:06:07.280 --> 04:06:10.280
Macht Sinn, aber ich würd einfach sagen,

04:06:10.280 --> 04:06:12.280
new, good und gut ist.

04:06:12.280 --> 04:06:24.760
Ey, ich glaube mittlerweile, Leute, wir queuen,

04:06:24.760 --> 04:06:28.760
wir queuen schneller Work, als das abarbeiten kann.

04:06:29.760 --> 04:06:32.760
Weil viel kann hier nicht, kann hier eigentlich nicht liegen drinne.

04:06:32.760 --> 04:06:35.520
Ja?

04:06:35.520 --> 04:06:38.520
Also, Data wird auf jeden Fall deleted.

04:06:38.520 --> 04:06:44.130
Benutzt man nicht free.

04:06:44.130 --> 04:06:52.680
Na, delete geht auch, weil ich hab's, ich hab ja new gemacht mit, ähm, mit C++.

04:06:52.680 --> 04:07:03.050
Also, das, äh, wenn du was mit new machst, kannst du's eigentlich auch mit delete wieder löschen.

04:07:03.050 --> 04:07:05.050
Ich glaube, wir queuen einfach zu viel.

04:07:05.050 --> 04:07:06.050
Komm.

04:07:06.050 --> 04:07:10.050
Wir, wir machen mal, wir, wir erhöhen das mal ein bisschen auf ne Sekunde.

04:07:10.050 --> 04:07:12.050
Das sollte ja eigentlich passen.

04:07:12.050 --> 04:07:17.050
Und ansonsten wüsste ich jetzt echt nicht, wo, wo könnte ich mein Memory Leak haben hier drinne.

04:07:17.050 --> 04:07:21.050
Aber das Einzige, wo ich was mache, ist ja wirklich das hier, ne, mit new.

04:07:21.050 --> 04:07:22.050
New.

04:07:22.050 --> 04:07:23.050
New vs. Data.

04:07:23.050 --> 04:07:39.650
Das ist das Einzige, was ich hier mache an der Stelle.

04:07:39.650 --> 04:07:40.650
Ich hab nen Memory Leak.

04:07:40.650 --> 04:07:42.650
Ich weiß nicht wo, Leute.

04:07:42.650 --> 04:07:46.630
Ist das Platform.io?

04:07:46.630 --> 04:07:50.630
Nein, das ist, ähm, ESP EDF.

04:07:50.630 --> 04:07:56.630
Weil Platform.io mir immer so, so lange hinten dranhängt mit Package Updates und allem.

04:07:56.630 --> 04:08:00.630
Wo hab ich denn da jetzt bitteschön nen Memory Leak?

04:08:00.630 --> 04:08:02.630
Bei meinem Jason irgendwie?

04:08:02.630 --> 04:08:04.630
Ach, ich weiß.

04:08:04.630 --> 04:08:05.630
Leute.

04:08:05.630 --> 04:08:07.630
Wisst ihr, wo ich das Memory Leak hab?

04:08:07.630 --> 04:08:11.630
Das ist, das Problem hatte ich schon mal mit genau dieser gleiche Library.

04:08:11.630 --> 04:08:12.630
Das hier.

04:08:12.630 --> 04:08:13.630
Das hier.

04:08:13.630 --> 04:08:15.630
Allocate in nen String Array.

04:08:15.630 --> 04:08:17.630
Und das muss man freeen.

04:08:17.630 --> 04:08:23.950
Und jetzt hab ich auch kein Memory Leak mehr.

04:08:23.950 --> 04:08:24.950
Moment, wir brechen mal ab.

04:08:24.950 --> 04:08:28.950
Machen jetzt wieder 100 Millisekunden draus.

04:08:28.950 --> 04:08:29.950
Das hatte ich schon mal.

04:08:29.950 --> 04:08:30.950
Das hatte ich schon mal.

04:08:30.950 --> 04:08:33.950
Das ist aber auch so nichtssagend, ja.

04:08:33.950 --> 04:08:35.950
Du denkst nicht dran, dass das irgendwie.

04:08:35.950 --> 04:08:37.950
Aber ich mein, das ist logisch.

04:08:37.950 --> 04:08:39.950
Es kommt nen Character Array raus.

04:08:39.950 --> 04:08:41.950
Das muss ja irgendwo allocated sein.

04:08:41.950 --> 04:08:45.580
Meint ihr auch, dass jetzt fixed ist?

04:08:45.580 --> 04:08:46.580
Chat, was meint ihr?

04:08:46.580 --> 04:08:47.580
Fixed oder not fixed?

04:08:47.580 --> 04:08:50.580
Memory Leak fixed oder nicht fixed?

04:08:50.580 --> 04:08:55.580
Also ich tippe auf zu 99% gefixt.

04:08:55.580 --> 04:08:57.580
Mit Rust, das stimmt.

04:08:57.580 --> 04:08:59.580
Das wäre tatsächlich mit Rust nicht passiert.

04:08:59.580 --> 04:09:02.580
Ich tippe auf 99% gefixt.

04:09:02.580 --> 04:09:04.580
Vielleicht noch irgendwo was Kleines, woanders.

04:09:04.580 --> 04:09:05.580
Aber nope.

04:09:05.580 --> 04:09:13.410
Da liegt nix, Leute.

04:09:13.410 --> 04:09:15.410
Nix liegt da mehr.

04:09:15.410 --> 04:09:19.750
Alles stable.

04:09:19.750 --> 04:09:21.750
Es schwankt ein bisschen.

04:09:21.750 --> 04:09:22.750
Das ist okay.

04:09:22.750 --> 04:09:24.750
Der muss ja Web Request und alles verarbeiten.

04:09:24.750 --> 04:09:28.700
Da liegt nix.

04:09:28.700 --> 04:09:41.960
Pog.

04:09:41.960 --> 04:13:22.000
So.

04:13:22.000 --> 04:13:28.390
Und läuft noch alles.

04:13:28.390 --> 04:13:29.390
Okay, scheint noch zu laufen.

04:13:29.390 --> 04:13:31.390
Keine Memory Leaks, oder?

04:13:31.390 --> 04:13:34.720
Keine Memory Leaks?

04:13:34.720 --> 04:13:36.720
Sieht immer noch gut aus.

04:13:36.720 --> 04:13:39.720
Wir haben ein bisschen mehr Memory Usage, weil wir jetzt 3 Sessions gleichzeitig aufhaben.

04:13:39.720 --> 04:13:40.720
Das ist ja klar.

04:13:40.720 --> 04:13:53.160
Guck, es wird auch weniger, wenn ich die Browser zumache.

04:13:53.160 --> 04:13:56.880
Ja.

04:13:56.880 --> 04:13:58.880
Richtig nice, Leute.

04:13:58.880 --> 04:14:01.880
Websocket stellt's am Start.

04:14:01.880 --> 04:14:06.390
Wie viele MB haben deine ESP32?

04:14:06.390 --> 04:14:08.390
Die normalen haben 4 MB.

04:14:08.390 --> 04:14:11.390
Das hier ist allerdings ein...

04:14:11.390 --> 04:14:15.760
Ich mach mal ein bisschen was zu, weil ich das alles nicht mehr brauch.

04:14:15.760 --> 04:14:21.760
Das hier ist allerdings ein ESP32 S3.

04:14:21.760 --> 04:14:23.760
Und der hat 16.

04:14:23.760 --> 04:14:24.760
Riesengroße 16.

04:14:24.760 --> 04:14:28.760
Riesengroße 16 MB RAM.

04:14:28.760 --> 04:14:30.760
Aber Partitionstabelle müssen wir jetzt machen.

04:14:30.760 --> 04:14:39.040
Deine haben 2?

04:14:39.040 --> 04:14:45.040
Dann müssen das aber ganz alte und ganz billige Module sein.

04:14:45.040 --> 04:14:49.040
Ja, 2 gab es.

04:14:49.040 --> 04:14:55.040
Aber die haben eigentlich schon ewig die bisschen schöneren, neueren 4.

04:14:55.040 --> 04:14:57.040
Mit 512 MB.

04:14:57.040 --> 04:14:58.040
What?

04:14:58.040 --> 04:15:07.960
Nee.

04:15:07.960 --> 04:15:09.960
Was hast du für welche?

04:15:09.960 --> 04:15:12.960
Ich mein, es gibt bestimmt noch...

04:15:12.960 --> 04:15:14.960
Also ich weiß, dass es welche mit...

04:15:14.960 --> 04:15:17.960
Aber das sind die ganz alten mit 2 MB Flash.

04:15:17.960 --> 04:15:20.960
Bist du sicher, dass das nicht 2 MB PS RAM sind?

04:15:20.960 --> 04:15:22.960
Wobei das sind S3, ja.

04:15:22.960 --> 04:15:24.960
Aber 2 MB Flash ist echt...

04:15:24.960 --> 04:15:26.960
Also 2 MB Flash ist kein Problem.

04:15:26.960 --> 04:15:28.960
Du kannst mit 2 MB Flash auch alles machen.

04:15:28.960 --> 04:15:31.960
Was du mit 2 MB Flash...

04:15:31.960 --> 04:15:35.960
Was mit 2 MB Flash schwierig wird, ist OTA zu machen.

04:15:35.960 --> 04:15:36.960
Also es ist kein Problem.

04:15:36.960 --> 04:15:39.960
Also es ist kein Problem, auch um einen umfangreicheren Sketch,

04:15:39.960 --> 04:15:43.960
auch mit einem Display dran und allem, unter 2 MB zu halten.

04:15:43.960 --> 04:15:44.960
Das geht.

04:15:44.960 --> 04:15:46.960
Was schwierig wird mit OTA.

04:15:46.960 --> 04:15:51.960
OTA heißt ja im Endeffekt, dass du Updates einspielen kannst über WiFi.

04:15:51.960 --> 04:15:58.960
Und dafür brauchst du immer die Größe deiner Firmware mal 2.

04:15:58.960 --> 04:15:59.960
Als Flash.

04:15:59.960 --> 04:16:02.960
Weil von einer Firmware läufst du ja gerade.

04:16:02.960 --> 04:16:05.960
Und dann brauchst du quasi noch einen anderen Speicher auf deinem Flash.

04:16:05.960 --> 04:16:09.960
Der genauso groß ist wie deine Firmware von der du gerade läufst.

04:16:09.960 --> 04:16:12.960
In den Bereich flashst du rein über WiFi.

04:16:12.960 --> 04:16:16.960
Und dann rebootest du das Ding und startest vom anderen Memory Bereich.

04:16:16.960 --> 04:16:19.960
Beim nächsten OTA Update schreibst du im ersten Bereich.

04:16:19.960 --> 04:16:21.960
Rebootest startest vom ersten Bereich.

04:16:21.960 --> 04:16:22.960
Und dann so hin und her.

04:16:22.960 --> 04:16:26.960
Also wenn du OTA machen willst, also Wireless WiFi Updates.

04:16:26.960 --> 04:16:29.960
Dann sind 2 MB ein bisschen knapp.

04:16:29.960 --> 04:16:34.960
Aber ansonsten kannst du ausnahmslos alles auch mit 2 MB Flash machen.

04:16:35.960 --> 04:16:44.990
Ja aber ich kenne kein Modul was irgendwie noch 2 MB hat.

04:16:44.990 --> 04:16:50.410
Was hast du denn nur für Module?

04:16:50.410 --> 04:16:56.480
Aber wenn der Bootloader.

04:16:56.480 --> 04:17:06.380
Mir fällt jetzt echt kein.

04:17:06.380 --> 04:17:14.570
Also mir fällt kein Modul ein was nur 2 MB hätte.

04:17:14.570 --> 04:17:33.280
Ist das vielleicht nochmal zusätzlich angebundener Flash?

04:17:33.280 --> 04:17:35.280
Speicher?

04:17:35.280 --> 04:17:46.300
Ansonsten weiß ich auch nicht.

04:17:46.300 --> 04:17:49.300
Vielleicht ist es noch ein ESP8266.

04:17:49.300 --> 04:17:51.300
Die hatten ein bisschen weniger manchmal.

04:17:51.300 --> 04:17:59.630
Okay.

04:17:59.630 --> 04:18:01.630
Ja gut.

04:18:01.630 --> 04:18:05.630
Die haben übrigens auch ganz schön verkackt, dass sie sich nicht Eats Delivery.

04:18:05.630 --> 04:18:12.200
Vroom ist das Chip Layout.

04:18:12.200 --> 04:18:14.200
Das hat nichts.

04:18:14.200 --> 04:18:16.200
Das da?

04:18:16.200 --> 04:18:18.200
Der NodeMCU Nachbau von denen.

04:18:18.200 --> 04:18:23.070
Den da?

04:18:23.070 --> 04:18:25.440
Der da?

04:18:25.440 --> 04:18:29.440
Die haben doch im Leben keine nur 2 MB.

04:18:29.440 --> 04:18:30.440
Flash.

04:18:30.440 --> 04:18:32.440
Ne der hat 4 MB Flash.

04:18:32.440 --> 04:18:36.010
Also.

04:18:36.010 --> 04:18:39.010
Ich würde mal versuchen 4 MB drauf zu flashen.

04:18:39.010 --> 04:18:44.900
Ich bin mir ziemlich sicher, dass deine auch mindestens 4 MB hat.

04:18:44.900 --> 04:18:52.600
Also mir ist kein Modul irgendwie jetzt so aus dem Kopf bekannt vom ESP32 der nur 2 MB hätte.

04:18:52.600 --> 04:18:55.600
Ich weiß, dass es das gibt, weil du kannst das in der IDE auswählen.

04:18:55.600 --> 04:18:57.600
Du hast nur 2 MB Flash.

04:18:57.600 --> 04:19:13.910
So was habe ich gesagt wollen wir jetzt machen?

04:19:13.910 --> 04:19:14.910
Ich.

04:19:14.910 --> 04:19:16.910
Also Websocket Campbell Funst ja.

04:19:16.910 --> 04:19:18.910
Partitionstabelle müssen wir machen.

04:19:18.910 --> 04:19:19.910
Genau.

04:19:19.910 --> 04:19:20.910
Partitionstabelle.

04:19:20.910 --> 04:19:21.910
So.

04:19:21.910 --> 04:19:22.910
Mal gucken was meiner sagt.

04:19:22.910 --> 04:19:24.910
SPI Boot Flash.

04:19:24.910 --> 04:19:30.270
Achso ich war ein bisschen lahm ja.

04:19:30.270 --> 04:19:35.340
Monitor.

04:19:35.340 --> 04:19:37.340
Also meiner sagt.

04:19:37.340 --> 04:19:39.340
Meiner sagt hier meine Boot.

04:19:39.340 --> 04:19:41.340
Ne das stimmt auch nicht wirklich.

04:19:41.340 --> 04:19:45.340
Ah doch hier meine Partition Table.

04:19:45.340 --> 04:19:48.340
SPI Flash Size 16 ja.

04:19:48.340 --> 04:19:56.600
Also wenn du da nur 2 hast wäre echt sehr sehr merkwürdig.

04:19:56.600 --> 04:19:57.600
Weißt du was?

04:19:57.600 --> 04:19:58.600
Weißt du was?

04:19:58.600 --> 04:20:02.480
Wir probieren jetzt mal was aus.

04:20:02.480 --> 04:20:04.480
Wenn ich in meine IDE umstelle.

04:20:04.480 --> 04:20:19.150
Warte mal.

04:20:19.150 --> 04:20:22.150
Ich stelle jetzt in meiner IDE das mal um.

04:20:22.150 --> 04:20:25.150
Flash Size.

04:20:25.150 --> 04:20:27.150
Ich habe es hier nämlich auf 16 gestellt.

04:20:27.150 --> 04:20:28.150
So.

04:20:28.150 --> 04:20:30.150
Ich stelle das bei mir jetzt auch mal auf 4 um.

04:20:30.150 --> 04:20:35.930
Und dann mal gucken.

04:20:35.930 --> 04:20:37.930
Was der beim Booten anzeigt.

04:20:37.930 --> 04:20:42.160
Ob das.

04:20:42.160 --> 04:20:43.160
Ah jetzt muss der neu kompiliert.

04:20:43.160 --> 04:20:44.160
Mal gucken was das damit.

04:20:44.160 --> 04:20:47.160
Wir machen übrigens.

04:20:47.160 --> 04:20:49.160
Und zwar eine neue Partition Table dafür.

04:20:49.160 --> 04:20:52.160
Wir haben hier 16 MB RAM.

04:20:52.160 --> 04:20:53.160
Generator.

04:20:53.160 --> 04:20:55.160
Da können wir wirklich.

04:20:55.160 --> 04:20:57.160
Sehr sehr großzügig sein.

04:20:57.160 --> 04:21:00.990
Ja.

04:21:00.990 --> 04:21:01.990
Kein ZigBee.

04:21:01.990 --> 04:21:03.990
Kein Storage.

04:21:03.990 --> 04:21:06.990
PINIT brauchen wir auch nicht.

04:21:06.990 --> 04:21:17.570
OTA 0.

04:21:17.570 --> 04:21:23.360
Genau ESP32.

04:21:23.360 --> 04:21:24.360
Lass mal gucken ob das.

04:21:24.360 --> 04:21:25.360
Nein ich ändere es ja gerade.

04:21:25.360 --> 04:21:26.360
Ich flashe es.

04:21:26.360 --> 04:21:27.360
Lass mal gucken.

04:21:27.360 --> 04:21:29.360
Ob das wirklich.

04:21:29.360 --> 04:21:30.360
Damit zusammenhängt.

04:21:30.360 --> 04:21:31.360
Ich flashe das jetzt.

04:21:31.360 --> 04:21:33.360
Dann gucken wir mal ob bei mir auch 2 MB drinnen steht.

04:21:33.360 --> 04:21:34.360
Also ich könnte wetten.

04:21:34.360 --> 04:21:35.360
Dein Modul hat 4 MB.

04:21:35.360 --> 04:21:39.360
Ich kenne kein ESP32 Modul.

04:21:39.360 --> 04:21:40.360
Ja.

04:21:40.360 --> 04:21:44.360
Guck jetzt steht hier auch 4 drinne.

04:21:44.360 --> 04:21:45.360
Das wurde.

04:21:45.360 --> 04:21:48.360
Das wurde wahrscheinlich einfach mit der Standardgröße geflasht.

04:21:48.360 --> 04:21:50.360
Aber du hast bestimmt.

04:21:50.360 --> 04:21:52.360
Du hast bestimmt mindestens 4 MB.

04:21:52.360 --> 04:21:56.360
Wenn du was Neues hast vielleicht sogar mehr.

04:21:56.360 --> 04:21:57.360
Guck mal.

04:21:57.360 --> 04:21:58.360
Das geht bis.

04:21:58.360 --> 04:21:59.360
Bis 128.

04:21:59.360 --> 04:22:00.360
Alter.

04:22:00.360 --> 04:22:01.360
Okay.

04:22:01.360 --> 04:22:02.360
128 habe ich auch noch nicht gesehen.

04:22:02.360 --> 04:22:03.360
Aber.

04:22:03.360 --> 04:22:08.910
Aber meins hat 16.

04:22:08.910 --> 04:22:09.910
So.

04:22:09.910 --> 04:22:10.910
Okay.

04:22:10.910 --> 04:22:13.910
Wir müssen uns mal eine Partitionstabelle generaten dafür.

04:22:13.910 --> 04:22:16.910
Ja die Arduino Partitionstabelle die können.

04:22:16.910 --> 04:22:17.910
Ach guck mal.

04:22:17.910 --> 04:22:20.800
Ja nee.

04:22:20.800 --> 04:22:21.800
Das ist ja.

04:22:21.800 --> 04:22:31.930
Ist ja für den Arsch.

04:22:31.930 --> 04:22:35.370
3 MB App.

04:22:35.370 --> 04:22:36.370
Und.

04:22:36.370 --> 04:22:42.920
Und 10 MB File System.

04:22:42.920 --> 04:22:50.080
Nee das brauche ich nicht.

04:22:50.080 --> 04:22:52.080
Recorddump brauche auch keiner.

04:22:52.080 --> 04:23:06.040
Woop.

04:23:06.040 --> 04:23:07.040
Woop woop.

04:23:07.040 --> 04:23:08.040
Woop woop.

04:23:09.040 --> 04:23:11.040
Doch das kann man einstellen.

04:23:11.040 --> 04:23:16.730
Wenn du Platform IO verwendest dann kannst du es in der Board Config einstellen.

04:23:16.730 --> 04:23:17.730
So okay.

04:23:17.730 --> 04:23:21.730
Wir müssen uns eine Partitionstabelle generaten.

04:23:21.730 --> 04:23:32.300
Wichtig ist der erste Offset muss bei aus welchen Gründen auch immer 9000 anfangen.

04:23:32.300 --> 04:23:36.300
Und der App Offset muss bei 10.000 anfangen.

04:23:36.300 --> 04:23:39.300
Also in Hex und beide Male.

04:23:39.300 --> 04:23:40.300
Größeres Vielfaches von 10.000 sein.

04:23:40.300 --> 04:23:41.300
Warum?

04:23:41.300 --> 04:23:45.120
Ich weiß es nicht.

04:23:45.120 --> 04:23:48.120
KB 2 MB.

04:23:48.120 --> 04:23:57.990
Okay.

04:23:57.990 --> 04:23:58.990
Ja.

04:23:58.990 --> 04:24:01.990
Also ich meine Leute wir haben.

04:24:01.990 --> 04:24:02.990
So viel RAM.

04:24:02.990 --> 04:24:05.990
Ich brauche eigentlich gar nicht so viel so viel Flash.

04:24:05.990 --> 04:24:10.990
3 MB ist mehr als genug für eine Firmware Partition.

04:24:10.990 --> 04:24:12.990
Wir machen einfach 4 oder?

04:24:12.990 --> 04:24:14.990
Wir machen 4 MB.

04:24:14.990 --> 04:24:18.990
4 MB 4 MB.

04:24:18.990 --> 04:24:19.990
Dann habe ich 8.

04:24:19.990 --> 04:24:22.990
Und den Rest machen wir.

04:24:22.990 --> 04:24:28.900
Den Rest brauche ich nicht.

04:24:28.900 --> 04:24:29.900
Ne komm.

04:24:29.900 --> 04:24:30.900
Wir machen.

04:24:30.900 --> 04:24:32.900
Dann machen wir es ist eine schöne Größe.

04:24:32.900 --> 04:24:35.900
Das File System brauche ich nur für ganz kleine Sachen.

04:24:35.900 --> 04:24:37.900
Eigentlich brauche ich das gar nicht.

04:24:37.900 --> 04:24:38.900
Also wir machen.

04:24:38.900 --> 04:24:39.900
Wir haben 16 MB RAM.

04:24:39.900 --> 04:24:41.900
Wir machen 7.

04:24:41.900 --> 04:24:45.900
7 7 für die für die für die Apps.

04:24:45.900 --> 04:24:51.040
7 MB 7 MB.

04:24:51.040 --> 04:24:53.040
Dann haben wir haben wir 14.

04:24:53.040 --> 04:24:58.750
Und den Rest für.

04:24:58.750 --> 04:24:59.750
Das ist okay.

04:24:59.750 --> 04:25:00.750
Ja.

04:25:00.750 --> 04:25:01.750
Okay.

04:25:01.750 --> 04:25:02.750
7 MB.

04:25:02.750 --> 04:25:05.250
Aber.

04:25:05.250 --> 04:25:06.250
Äh.

04:25:06.250 --> 04:25:07.250
Äh.

04:25:07.250 --> 04:25:11.100
7 MB zu.

04:25:11.100 --> 04:25:15.520
Äh.

04:25:15.520 --> 04:25:16.520
Warte mal.

04:25:16.520 --> 04:25:17.520
Ist das hier.

04:25:17.520 --> 04:25:18.520
Das ist hier nicht in KB.

04:25:18.520 --> 04:25:19.520
Das ist in.

04:25:19.520 --> 04:25:20.520
Das ist in Byte.

04:25:20.520 --> 04:25:21.520
Oder.

04:25:21.520 --> 04:25:22.520
Ja.

04:25:22.520 --> 04:25:23.520
Das sind Byte.

04:25:23.520 --> 04:25:24.520
Hat.

04:25:24.520 --> 04:25:28.630
Alter.

04:25:28.630 --> 04:25:29.630
Kann es mal das vielleicht ausschreiben.

04:25:29.630 --> 04:25:30.630
Ja.

04:25:30.630 --> 04:25:36.780
Ja.

04:25:36.780 --> 04:25:37.780
Ja.

04:25:37.780 --> 04:25:38.780
Ja.

04:25:38.780 --> 04:25:39.780
Ja.

04:25:39.780 --> 04:25:40.780
Ja.

04:25:40.780 --> 04:25:41.780
Ja.

04:25:41.780 --> 04:25:42.780
Ja.

04:25:42.780 --> 04:25:43.780
Ja.

04:25:43.780 --> 04:25:44.780
Ja.

04:25:44.780 --> 04:25:55.990
Ja.

04:25:55.990 --> 04:25:56.990
Ja.

04:25:56.990 --> 04:25:57.990
Beide müssen beschrieben.

04:25:57.990 --> 04:25:58.990
Was könntest du.

04:25:58.990 --> 04:25:59.990
Irgendwann.

04:25:59.990 --> 04:26:00.990
Aber.

04:26:00.990 --> 04:26:03.360
Was könnte je.

04:26:03.360 --> 04:26:04.360
7000.

04:26:04.360 --> 04:26:07.060
Aber wenn ich will.

04:26:07.060 --> 04:26:08.560
Maybe ich will Soul Med な thumbs up

04:26:08.560 --> 04:26:09.560
Maybe Beid.

04:26:09.560 --> 04:26:11.370
Ich will.

04:26:11.370 --> 04:26:13.370
Weil 1 024 die Feder ми Man die 1 024 haben.

04:26:13.370 --> 04:26:17.370
Der Google Calculator ist dafür doughірre wieder voll für.

04:26:17.370 --> 04:26:18.370
Mant DOT Deshalb !

04:26:18.370 --> 04:26:21.840
Gewinne!

04:26:21.840 --> 04:26:22.840
Woohoo.

04:26:22.840 --> 04:26:23.840
Dann.

04:26:23.840 --> 04:26:24.840
Wah, puedes serial.

04:26:24.840 --> 04:26:28.300
gran hac con Barcode.

04:26:28.300 --> 04:26:29.300
Das macht richtig usw.

04:26:29.300 --> 04:26:30.300
Und der glaubt nicht.

04:26:30.300 --> 04:26:32.300
Aber bekommt Wir können auch selbst Aussprache bringen.

04:26:32.300 --> 04:26:33.300
grievante Spur dünne Obd sushi increasing.

04:26:33.300 --> 04:26:34.040
Aber warum?

04:26:43.700 --> 04:26:46.500
Okay, das ist...

04:26:46.500 --> 04:26:47.780
Das soll bei...

04:26:47.780 --> 04:26:54.880
Okay, sieben.

04:26:57.760 --> 04:26:58.220
Sieben.

04:27:02.140 --> 04:27:04.080
Warum ist das alles so schrottig, Mann?

04:27:08.650 --> 04:27:10.190
Ich rechne es doch selbst aus, Kleiner.

04:27:10.590 --> 04:27:11.810
Ist das nicht irgendein ordentlicher...

04:27:11.810 --> 04:27:15.050
Alter, in welchem Jahrtausend leben wir denn?

04:27:16.470 --> 04:27:17.570
Guckt euch das mal an.

04:27:23.470 --> 04:27:25.410
Kilo ist 1024, okay.

04:27:25.410 --> 04:27:28.710
Es gibt es nicht, okay.

04:27:33.080 --> 04:27:36.920
Es muss doch irgendeinen ordentlichen Byte-Converter geben.

04:27:42.180 --> 04:27:42.880
Gibt es da... Warte mal.

04:27:43.780 --> 04:27:45.820
Byte, Size, Convert, Linux.

04:27:45.960 --> 04:27:47.580
Da gibt es doch bestimmt ein CLI-Tool.

04:27:53.000 --> 04:27:55.420
Ja, please, noch komplizierter.

04:27:58.620 --> 04:27:59.140
CLI.

04:28:03.570 --> 04:28:04.990
Ja, ich...

04:28:04.990 --> 04:28:07.150
Nur weil man es von Hand machen kann,

04:28:07.330 --> 04:28:09.290
heißt es nicht, dass man es von Hand machen möchte.

04:28:09.590 --> 04:28:10.330
What the hell?

04:28:11.950 --> 04:28:12.770
Gepiped nach hier.

04:28:12.790 --> 04:28:13.350
Units.

04:28:20.080 --> 04:28:21.180
Ah, BC.

04:28:27.460 --> 04:28:28.060
Jetzt...

04:28:28.060 --> 04:28:33.750
Ich finde das echt interessant, dass...

04:28:34.610 --> 04:28:38.820
dass es dann keine gescheite...

04:28:38.820 --> 04:28:39.440
Wahnsinn, oder?

04:28:40.180 --> 04:28:44.500
What the hell?

04:28:45.020 --> 04:28:47.080
Das ist doch das Simpelste auf der Welt.

04:28:47.620 --> 04:28:49.260
Warum gibt es sowas nicht?

04:28:53.130 --> 04:28:53.650
JavaScript.

04:28:54.110 --> 04:28:54.590
Ja, geil.

04:28:56.190 --> 04:28:56.710
Beste.

04:29:02.480 --> 04:29:04.400
Witzig eigentlich, dass es das nicht gibt, oder?

04:29:11.470 --> 04:29:11.910
Komisch.

04:29:11.910 --> 04:29:12.750
Naja, gut.

04:29:14.150 --> 04:29:18.860
Ich meine, das sind mal zwei.

04:29:19.480 --> 04:29:20.140
Oh, ein sechs.

04:29:20.600 --> 04:29:22.960
So, Bytes to Megabytes.

04:29:24.160 --> 04:29:24.840
Was?

04:29:25.580 --> 04:29:28.040
Was ist mit dem Google-Shit los, Alter?

04:29:29.120 --> 04:29:29.520
Nein!

04:29:36.590 --> 04:29:38.350
Es wird Zeit für den Byte-Champ.

04:29:38.530 --> 04:29:39.550
Ja, sehe ich auch so.

04:29:46.670 --> 04:29:48.350
Sechs Maybe-Byte.

04:29:48.750 --> 04:29:50.890
Genau, weil wir wollen 1024 haben.

04:29:53.440 --> 04:29:55.320
Ich dreh am Rad.

04:29:55.320 --> 04:29:55.400
Was?

04:29:57.120 --> 04:29:58.320
Warum kann das keine gescheite...

04:29:59.000 --> 04:29:59.500
Darstellung?

04:30:00.880 --> 04:30:02.200
So ein Shit, Mann.

04:30:04.300 --> 04:30:05.380
Guckt euch das an.

04:30:07.980 --> 04:30:09.600
Wir können es uns easy machen, ja?

04:30:09.660 --> 04:30:10.640
Wir können es uns easy machen.

04:30:12.600 --> 04:30:13.360
Das sind sechs.

04:30:16.730 --> 04:30:17.810
Geteilt durch sechs.

04:30:18.490 --> 04:30:19.270
Ist eins.

04:30:23.240 --> 04:30:24.360
Plus das da.

04:30:25.580 --> 04:30:26.020
Sieben.

04:30:28.380 --> 04:30:30.020
Bytes to Megabytes.

04:30:33.010 --> 04:30:33.210
Oh.

04:30:34.550 --> 04:30:35.450
Maybe-Byte.

04:30:36.730 --> 04:30:38.330
So, das will ich haben.

04:30:38.950 --> 04:30:41.850
Ich weiß nicht, warum das Flightpedia...

04:30:43.250 --> 04:30:45.190
Alles klar, ja, genau.

04:30:46.090 --> 04:30:47.130
Also, sieben MB.

04:30:48.330 --> 04:30:50.450
Ist das selbst gerechnet, ist das deutlich einfacher.

04:30:51.270 --> 04:30:52.070
Alles da drin.

04:30:52.310 --> 04:30:53.710
Okay, sieben MB...

04:30:54.710 --> 04:30:55.830
Äh...

04:30:56.830 --> 04:30:57.630
What?

04:31:02.560 --> 04:31:03.160
Ja, geht doch.

04:31:05.500 --> 04:31:10.200
So, jetzt muss natürlich der Offset hier eine ganze Ecke hoch, das muss auch sieben sein.

04:31:11.200 --> 04:31:14.280
Muss der Offset hier richtig weit hoch und zwar...

04:31:14.280 --> 04:31:15.640
Oh, nein.

04:31:19.740 --> 04:31:21.820
Wer programmiert denn diesen ganzen Mist hier?

04:31:23.240 --> 04:31:24.380
Wer programmiert das denn?

04:31:24.880 --> 04:31:25.540
Ist ja Wahnsinn.

04:31:26.160 --> 04:31:27.300
Dass das alles nicht funktioniert.

04:31:35.430 --> 04:31:36.390
What the...

04:31:46.170 --> 04:31:47.930
Drei, vier...

04:31:47.930 --> 04:31:49.470
Oh, Moment, ich bin zu viel, ich hab zu viel.

04:31:52.720 --> 04:31:53.460
Drei, vier...

04:31:56.210 --> 04:31:57.590
Nee, nee, nee, nee, das will ich nicht.

04:31:57.650 --> 04:31:58.450
Ich will das da haben.

04:32:02.070 --> 04:32:02.750
Drei, zwei...

04:32:07.280 --> 04:32:09.660
Ich glaube, ich überfordere die ganzen Tools, Leute.

04:32:11.580 --> 04:32:13.080
Ich glaube, ich über...

04:32:13.080 --> 04:32:13.160
Ich...

04:32:13.160 --> 04:32:15.120
Das macht da nicht mit.

04:32:26.970 --> 04:32:28.470
Ah, Moment, Moment, Moment.

04:32:28.970 --> 04:32:29.790
Two Hex.

04:32:31.630 --> 04:32:32.850
Ja, ja, ja, okay, okay.

04:32:32.930 --> 04:32:33.690
Ich hab nix gesagt.

04:32:34.070 --> 04:32:34.410
Alles klar.

04:32:43.540 --> 04:32:44.120
Okay, gut.

04:32:45.260 --> 04:32:47.100
Ich hab nix gesagt, ich hätt's in Hex umwandeln müssen.

04:32:47.980 --> 04:32:49.940
Also, jetzt haben wir sieben MB.

04:32:55.920 --> 04:32:57.720
Was soll ich subtracten?

04:33:00.600 --> 04:33:01.020
Äh, what?

04:33:09.770 --> 04:33:10.670
Was will es von mir?

04:33:15.270 --> 04:33:15.670
Please.

04:33:17.970 --> 04:33:19.890
Einmal Tools, die funktionieren.

04:33:25.170 --> 04:33:27.090
Ah, meine Flash Size.

04:33:27.090 --> 04:33:27.890
Das ist zu klein.

04:33:29.050 --> 04:33:30.930
4.096 mal vier.

04:33:34.000 --> 04:33:34.300
Okay.

04:33:35.260 --> 04:33:35.740
Alles klar.

04:33:36.380 --> 04:33:37.180
Gut, das hab ich gecheckt.

04:33:38.900 --> 04:33:40.480
So, NVS.

04:33:40.760 --> 04:33:42.280
Wie groß ist das NVS?

04:33:42.800 --> 04:33:44.260
20K reicht auch, Dicke.

04:33:45.000 --> 04:33:45.820
So, okay.

04:33:46.220 --> 04:33:49.870
Jetzt haben wir im Prinzip noch...

04:33:52.650 --> 04:33:53.390
Was ist denn das jetzt?

04:33:53.470 --> 04:33:54.430
Zwei MB ungefähr.

04:33:55.270 --> 04:33:56.230
Zwei MB frei.

04:33:57.930 --> 04:33:59.690
So, für was verwenden wir die jetzt?

04:33:59.690 --> 04:34:01.690
Einfach eine random...

04:34:02.630 --> 04:34:08.600
Partition für OTA-1, OTA-2.

04:34:09.980 --> 04:34:10.740
Äh, Data.

04:34:12.380 --> 04:34:12.640
Ja.

04:34:13.860 --> 04:34:15.040
Core-Dump brauchen wir nicht.

04:34:15.640 --> 04:34:20.560
Ich weiß bis heute nicht, was die Core-Dump-Partition, für was die eigentlich da ist.

04:34:22.240 --> 04:34:24.900
Also, ja, um einen Core-Dump aber zu speichern.

04:34:26.080 --> 04:34:27.340
Aber will ich das?

04:34:29.000 --> 04:34:34.840
Das ist doch nur, wenn der in freier Wildbahn abkackt und ich das Ding irgendwie analysieren will.

04:34:34.900 --> 04:34:35.500
Will ich doch nicht.

04:34:35.600 --> 04:34:38.100
Will ich doch überhaupt nicht machen.

04:34:57.160 --> 04:34:59.560
Okay, dann wollen wir hier jetzt...

04:35:00.240 --> 04:35:00.740
Spiffs.

04:35:00.880 --> 04:35:03.560
Wobei wir nicht Spiffs verwenden, sondern, ähm...

04:35:04.360 --> 04:35:05.480
Ich nenn das einfach nur so.

04:35:06.520 --> 04:35:08.520
Wir nehmen LittleFS.

04:35:08.980 --> 04:35:11.220
Das ist das modernere Spiffs.

04:35:13.470 --> 04:35:15.850
Mit einer 100% sicheren Code schreiben wir nicht.

04:35:15.910 --> 04:35:17.830
Wir schreiben 100% fehlerfreien Code.

04:35:18.510 --> 04:35:19.750
Ist ja nicht unbedingt das Gleiche.

04:35:22.060 --> 04:35:22.240
Oh.

04:35:22.940 --> 04:35:24.300
So lange klicke ich jetzt hier aber nicht.

04:35:24.300 --> 04:35:26.680
Also, wir brauchen wahrscheinlich...

04:35:26.680 --> 04:35:27.540
Also, wir brauchen wahrscheinlich...

04:35:27.540 --> 04:35:32.040
2, 0, 0, 0, 0, 0?

04:35:32.420 --> 04:35:36.960
Not a number.

04:35:37.380 --> 04:35:38.420
Okay, nice.

04:35:39.320 --> 04:35:58.740
Also, 7 MB OTA-Partition, 7 MB 2. OTA, 2 MB Filesystem und 20 KB Key-Value-Store für Settings.

04:35:59.420 --> 04:36:01.180
Das hört sich doch gut an.

04:36:07.740 --> 04:36:07.860
Oh.

04:36:10.020 --> 04:36:11.820
Äh, in dem wollte ich das jetzt nicht öffnen.

04:36:12.100 --> 04:36:28.300
Also brauchen wir jetzt hier newfile-partitions.csv, zack, ich hoffe das flasht jetzt, spiffs, soll littlefs sein, glaubt man, wir sollten das aber spiffs nennen, weil das der Default-Name ist.

04:36:28.300 --> 04:36:56.260
So, dann müssen wir hier reingehen und sagen, wir wollen eine Partition-Table, Custom-Partition-Table, die partitions.csv heißt, ESP-EDF, Partition-Table, gibt's hier nicht sowas wie Partition-Table-Generate, Partition-Table-Generate.

04:36:56.600 --> 04:36:58.900
Dann sehen wir mal, ob das richtig ist, was wir da gebaut haben.

04:37:00.120 --> 04:37:39.560
Ja, jetzt muss er nochmal neu kompilieren, weil ich hab Menü-Config auf, easy, okay, nice, also wir haben, haben wir doch gut ausgerechnet, 20 Kilobyte Key-Value-Store, 8 Kilobyte für irgendwelche State-Geschichten für Updates, 7 MB Partitions für die Anwendung, muss man ja mal 2 rechnen und knapp, knapp 2 MB High-System, das ist doch gut, Flash.

04:37:42.570 --> 04:37:49.850
Sehr nice, okay, also 18 Uhr muss ich was futtern, aber bis dahin machen wir auf jeden Fall noch Programmstells.

04:37:51.290 --> 04:38:12.050
Was haben wir denn als nächstes noch, was wir ausprobieren, nächstes Mal, nicht, ich sag absichtlich nicht nächsten Stream, weil nächsten Stream machen wir was anderes, ich dreh langsam am Rad hier von ganzen Microcontroller C++-Gramm, aber nächstes Mal, wenn wir mit dem Ding rumbasteln, dann mal mit Display, dann mach ich die Kamera an.

04:38:12.570 --> 04:38:44.700
Und wir versuchen mal das Display anzusprechen davon, hier schauen wir mal, ob noch alles funktioniert, nice, ich bin begeistert, also jetzt, jetzt, mal ehrlich Leute, wir haben uns zwar ein bisschen mit rumgequält hier, gell, aber insgesamt ist das Handling von diesem eingebauten Web-Server-Framework doch echt nicht verkehrt.

04:38:44.700 --> 04:38:48.600
Die Beispiele sind brauchbar.

04:38:50.340 --> 04:38:51.400
Und es funktioniert.

04:38:54.420 --> 04:38:55.920
Ich finde, da kann man sich nicht beschweren.

04:38:56.300 --> 04:38:58.600
Das war vor ein paar Jahren noch deutlich nerviger.

04:39:06.280 --> 04:39:12.670
Äh, by the way, ich hab ne Idee, wie wir das vielleicht noch verbessern könnten.

04:39:13.570 --> 04:39:38.380
Kann man nicht, hier drinnen jetzt nen Pointer draus machen, Shared Pointer, hier jetzt nen Pointer draus machen, und dann ihm sagen, wie er aufräumen soll?

04:39:44.260 --> 04:39:45.260
Das ging doch irgendwie.

04:39:45.340 --> 04:39:45.680
So, ne?

04:39:49.780 --> 04:40:04.140
Jetzt kann man sagen, hier, ähm, irgendwie so ging das doch.

04:40:06.680 --> 04:40:14.400
Aber ich bin natürlich, wie immer, zu Pepega, C++-Krams zu checken.

04:40:29.880 --> 04:40:33.780
Kannst du nicht einfach einen Destructor zu deinem Struct hinzufügen?

04:40:36.450 --> 04:40:39.750
Der Destructor läuft doch nur, wenn ich Delete calle, oder?

04:40:40.770 --> 04:40:42.730
Nicht, wenn es irgendwie aus dem Scope geht.

04:40:45.220 --> 04:40:48.440
Ah, ich weiß, warum das nicht funktioniert, weil es den falschen Wert hat hier.

04:40:48.440 --> 04:40:50.440
Ich muss das casten zu nem Web-Server.

04:40:51.360 --> 04:40:53.360
Ah, jetzt funktioniert's.

04:40:57.870 --> 04:40:59.690
Beides, Delete und aus dem Scope.

04:41:00.490 --> 04:41:02.950
Ne, aus dem Scope wird der Destructor nicht laufen.

04:41:03.390 --> 04:41:04.190
Das macht ja keinen Sinn.

04:41:04.290 --> 04:41:10.990
Ich mach ja explizit was mit New, dass die Lifetime länger ist als meine Funktion.

04:41:11.130 --> 04:41:12.230
Ne, das kann ja nicht sein.

04:41:12.670 --> 04:41:14.250
Aber das müsste jetzt funktionieren.

04:41:15.410 --> 04:41:17.590
Und jetzt brauche ich kein Delete mehr.

04:41:18.670 --> 04:41:19.450
Hier drinnen.

04:41:19.570 --> 04:41:20.790
Das müsste so funktionieren.

04:41:20.790 --> 04:41:23.670
Und das können wir auch mal ausprobieren, ob das so funktioniert.

04:41:24.310 --> 04:41:26.310
Indem wir jetzt einfach mal hier loggen.

04:41:27.170 --> 04:41:28.170
Machen wir mal Log.

04:41:28.170 --> 04:41:30.170
Wir loggen mal Warning, dass ich es auch sehe.

04:41:30.170 --> 04:41:30.670
Ja.

04:41:30.670 --> 04:41:33.670
Ähm, ja.

04:41:33.670 --> 04:41:35.670
Wobei, eigentlich muss ich gar nicht hier.

04:41:35.670 --> 04:41:36.170
Deleted.

04:41:39.250 --> 04:41:41.250
Sehen wir mal, sehen wir mal, ob das jetzt gecallt wird.

04:41:41.250 --> 04:41:54.080
Boah, das Flashen ist schon langsam mittlerweile.

04:41:54.080 --> 04:42:04.040
Ja, Funst.

04:42:04.040 --> 04:42:07.040
Es geht aus dem Scope und wird automatisch aufgeräumt.

04:42:07.040 --> 04:42:10.040
Okay, das ist mal eine sinnvolle Erfindung.

04:42:10.040 --> 04:42:12.040
C++-Hackermans.

04:42:12.040 --> 04:42:16.250
Es geht aus dem Scope und wird automatisch aufgeräumt.

04:42:16.250 --> 04:42:18.250
Nice.

04:42:18.250 --> 04:42:20.250
So, und das Ganze jetzt noch please in eine Zeile.

04:42:20.250 --> 04:42:21.250
Dann bin ich happy.

04:42:21.250 --> 04:42:23.250
Ja, das geht natürlich nicht.

04:42:23.250 --> 04:42:27.250
Es muss in irgendeiner Art und Weise immer hässlich formatiert sein.

04:42:27.250 --> 04:42:30.250
Einfach, dass so eine Zeile ist outdated, overrated.

04:42:30.250 --> 04:42:31.250
Das wollen sie nicht.

04:42:31.250 --> 04:42:33.250
Haben sie keinen Bock drauf.

04:42:33.250 --> 04:42:37.250
Wisst ihr, es gibt ja andere Programmiersprachen, die syntaktisch deutlich schöner sind.

04:42:37.250 --> 04:42:39.250
Da könnte man sowas hier schreiben.

04:42:39.250 --> 04:42:48.170
Aber das ist einfach zu hübsch.

04:42:48.170 --> 04:42:50.170
Das geht nicht.

04:42:50.170 --> 04:42:52.170
Das kann man nicht machen.

04:42:52.170 --> 04:42:54.170
Das muss hässlich sein.

04:42:54.170 --> 04:42:59.170
Das sind so die Sachen, so die Gedankengänge wahrscheinlich von den C++-Gremiums-Mitgliedern.

04:42:59.170 --> 04:43:06.170
Die sagen so, nee, nee, das auf den ersten Blick und keine komischen Klammern irgendwo.

04:43:06.170 --> 04:43:08.170
Ah, nee, nee, nee, nee.

04:43:08.170 --> 04:43:11.170
Und die Python-Leute sind noch besser.

04:43:11.170 --> 04:43:13.170
Lambda-Sachen maximal eine Zeile.

04:43:13.170 --> 04:43:17.170
Das sind auch so Dinge, wo ich mir denke, was ist mit denen los?

04:43:17.170 --> 04:43:21.170
Ich weiß, dass man damit explizit Sachen capturen kann.

04:43:21.170 --> 04:43:27.170
Ich glaube, das hier darf man theoretisch sogar weglassen.

04:43:27.170 --> 04:43:32.170
Ich glaube, die Klammern darfst du theoretisch weglassen, wenn du keine Argumente brauchst.

04:43:32.170 --> 04:43:43.050
Naja, schön ist was anderes.

04:43:43.050 --> 04:43:45.050
Was ist, wenn ich das so mache?

04:43:45.050 --> 04:43:48.050
Sieht ja immer beschissen aus.

04:43:48.050 --> 04:43:52.360
Dann darf er es so formatieren und gut ist.

04:43:52.360 --> 04:43:55.360
Python-Lambdas sind schrecklich, ja.

04:43:55.360 --> 04:44:18.200
Ich finde das echt ganz hübsch so.

04:44:18.200 --> 04:44:38.420
Okay, Partitionstabelle am Start.

04:44:38.420 --> 04:44:40.420
Mit dem ganzen Delete-Gespamme kommt man wieder weg.

04:44:40.420 --> 04:44:42.420
So, Partitionstabelle am Start.

04:44:42.420 --> 04:44:47.420
Dann würde ich sagen, machen wir als nächstes noch was Kleines.

04:44:47.420 --> 04:44:53.800
Macht das jetzt Sinn?

04:44:53.800 --> 04:45:10.620
Gerade überlegen.

04:45:10.620 --> 04:45:30.000
Wisst ihr was?

04:45:30.000 --> 04:45:34.200
Wie würde das denn aussehen?

04:45:34.200 --> 04:45:38.200
Okay, meine Web-Anwendung ist abgekackt, weil ich die Kiste neu gestartet habe.

04:45:40.840 --> 04:45:44.840
Ich meine, die Web-Anwendung ist ja nur wirklich äußerst minimal noch.

04:45:44.840 --> 04:45:48.840
Wir können auch noch eine halbe Stunde HTML und CSS und JavaScript machen.

04:45:48.840 --> 04:45:52.840
Wobei, das im Kopf umzuschalten mit mir, das ist zu anstrengend.

04:45:52.840 --> 04:46:01.780
Nee, nee, das machen wir mal heute nicht.

04:46:01.780 --> 04:46:10.850
Wie würde es denn mit Herzfrequenz aussehen?

04:46:10.850 --> 04:46:12.850
Die ist auf jeden Fall niedriger als bei C++.

04:46:12.850 --> 04:46:14.850
Was soll das werden?

04:46:14.850 --> 04:46:21.290
Das ist ein ESP32-S3 mit Display.

04:46:21.290 --> 04:46:24.290
So einer hier.

04:46:24.290 --> 04:46:27.290
Irgendwie gescheite Bilder davon haben.

04:46:27.290 --> 04:46:31.290
So einer hier mit Display.

04:46:31.290 --> 04:46:38.290
Und was ich damit ausprobieren wollte, ist ein Web-Server, der per HTTPS erreichbar ist.

04:46:38.290 --> 04:46:40.290
Was geht?

04:46:40.290 --> 04:46:43.290
Und ich möchte eine Embedded Web-Anwendung ausliefern.

04:46:43.290 --> 04:46:48.290
Das ist eine vollständige Client-Side Single-Page-Application in Svelte,

04:46:48.290 --> 04:46:52.290
die gebundelt wird zu einer Index-HTML.

04:46:52.290 --> 04:46:57.290
Alles zusammen, alles drin, alles JavaScript, alles HTML, alles CSS ist da drin.

04:46:57.290 --> 04:47:01.290
Dann wird die Index-HTML gezippt und in die Firmware Embedded.

04:47:01.290 --> 04:47:04.290
Und der ESP32-Web-Server liefert die aus.

04:47:04.290 --> 04:47:12.200
Heute haben wir einen Web-Socket-Endpunkt eingebaut,

04:47:12.200 --> 04:47:16.200
der eigentlich gar nicht so spektakulär aussieht, aber kompliziert war.

04:47:16.200 --> 04:47:22.670
Und jetzt kriege ich Werte über Web-Socket gepusht.

04:47:22.670 --> 04:47:25.670
Also, es ist nicht so, dass mein Frontend jetzt

04:47:25.670 --> 04:47:30.670
alle 100 Millisekunden den ESP bollt mit einem neuen Get-Request.

04:47:30.670 --> 04:47:41.670
Ne, der ESP schickt an das Frontend über Web-Socket zurück die neuesten Infos.

04:47:41.670 --> 04:47:49.330
Ich weiß, was wir machen.

04:47:49.330 --> 04:47:50.330
Wollen wir auch noch.

04:47:50.330 --> 04:47:53.330
Und zwar, das Ding hat einen Button.

04:47:53.330 --> 04:48:00.330
Und diesen Button möchte ich auch als Reset-Button verwenden können.

04:48:00.330 --> 04:48:07.330
Wir könnten mal kurz den Button-Händler noch programmieren.

04:48:07.330 --> 04:48:10.330
Ich überlege gerade, was sinnvoll ist, jetzt noch anzufangen,

04:48:10.330 --> 04:48:13.330
weil ich bin jetzt ja auch schon eine ganze Weile on.

04:48:13.330 --> 04:48:16.330
Übrigens, ich muss mal was Positives sagen, ja.

04:48:16.330 --> 04:48:23.690
Mein Chef auf der Arbeit, auf den kann man sich echt verlassen.

04:48:23.690 --> 04:48:28.090
Der ist wirklich zuverlässig.

04:48:28.090 --> 04:48:30.090
Das hatte ich selten bisher.

04:48:30.090 --> 04:48:32.090
Kam durchaus schon mal vor.

04:48:32.090 --> 04:48:34.090
Aber ich habe den am Freitag angeschrieben,

04:48:34.090 --> 04:48:35.090
ob wir unsere...

04:48:35.090 --> 04:48:37.090
unseren Termin nicht verschieben können.

04:48:37.090 --> 04:48:39.090
Auf, ob er zuschaut.

04:48:39.090 --> 04:48:41.090
Ne, das glaube ich eher nicht.

04:48:41.090 --> 04:48:43.090
Ja, selbst wenn.

04:48:43.090 --> 04:48:45.090
Gute Gelegenheit zum Schreiben war eine Runde.

04:48:47.090 --> 04:48:49.090
Also, falls du zuguckst, ne.

04:48:49.090 --> 04:48:51.090
Ich glaube es aber nicht.

04:48:51.090 --> 04:48:53.090
Ne, ähm, was wollte ich denn sagen?

04:48:53.090 --> 04:48:57.090
Ich habe am Freitag gesagt, hey, können wir unseren Termin nicht verschieben?

04:48:57.090 --> 04:48:59.090
Von Dienstag auf Mittwoch?

04:48:59.090 --> 04:49:01.090
Ne, genau, können wir...

04:49:01.090 --> 04:49:03.090
Ne, habe ich... Blödsinn, habe ich nicht geschrieben.

04:49:03.090 --> 04:49:04.090
Können wir nicht...

04:49:05.090 --> 04:49:07.090
Ich habe ihn gefragt, bist du Dienstag da?

04:49:07.090 --> 04:49:09.090
Weil, wenn nicht,

04:49:09.090 --> 04:49:11.090
dann lass doch mal unseren Termin,

04:49:11.090 --> 04:49:13.090
wenn es geht, verschieben.

04:49:13.090 --> 04:49:16.530
Von Dienstag

04:49:16.530 --> 04:49:18.530
auf Mittwoch?

04:49:18.530 --> 04:49:20.530
Oder, ne,

04:49:20.530 --> 04:49:22.530
ich komme dann Dienstag und nicht Mittwoch.

04:49:22.530 --> 04:49:24.530
Irgendwie so.

04:49:24.530 --> 04:49:26.530
Und dann habe ich ihm noch geschrieben, ach, ne,

04:49:26.530 --> 04:49:28.530
never mind.

04:49:28.530 --> 04:49:30.530
Wir haben ja Mittwoch Gruppenrunde

04:49:30.530 --> 04:49:32.530
mit Besuch.

04:49:32.530 --> 04:49:34.530
Und da wurden wir eh quasi gebeten,

04:49:34.530 --> 04:49:36.530
vor Ort zu sein.

04:49:36.530 --> 04:49:38.530
Also,

04:49:38.530 --> 04:49:40.530
ja, dann ist egal.

04:49:40.530 --> 04:49:42.530
Hat er noch geliked am Freitag

04:49:42.530 --> 04:49:44.530
und ich dachte mir so, okay,

04:49:44.530 --> 04:49:46.530
da kommt jetzt nichts mehr.

04:49:46.530 --> 04:49:48.530
Aber der hat mich echt gerade hier angeschrieben,

04:49:48.530 --> 04:49:50.530
hat gesagt, hier Max,

04:49:50.530 --> 04:49:52.530
ich habe mal gerade in den Kalender geguckt,

04:49:52.530 --> 04:49:54.530
was hältst du davon,

04:49:54.530 --> 04:49:56.530
dass du nur einmal, dass du nur am Dienstag,

04:49:56.530 --> 04:49:58.530
nur am Mittwoch reinkommen musst,

04:49:58.530 --> 04:50:00.530
wenn wir unseren Termin von Dienstag auf Mittwoch verschieben?

04:50:00.530 --> 04:50:03.840
Da kannst du dich nicht beschweren, dass der an sowas denkt, oder?

04:50:03.840 --> 04:50:05.840
Ich hätte eigentlich gedacht,

04:50:05.840 --> 04:50:07.840
ich muss jetzt mindestens noch dreimal nachfragen.

04:50:07.840 --> 04:50:09.840
Oder

04:50:09.840 --> 04:50:11.840
ich ignoriere es einfach

04:50:11.840 --> 04:50:13.840
und komme dann morgen nicht und sage,

04:50:13.840 --> 04:50:15.840
ja, hast du was dagegen.

04:50:15.840 --> 04:50:17.840
Aber dass der selbst sich das merkt,

04:50:17.840 --> 04:50:19.840
nachguckt und einen anschreibt,

04:50:19.840 --> 04:50:21.840
also, kannst du echt nichts sagen.

04:50:21.840 --> 04:50:23.840
Muss ich mal sagen,

04:50:23.840 --> 04:50:25.840
man kann sich auf den wirklich verlassen,

04:50:25.840 --> 04:50:27.840
in diesen Orga-Fragen.

04:50:27.840 --> 04:50:29.840
Dafür ist ja ein Vorgesetzter letztendlich auch

04:50:29.840 --> 04:50:31.840
eines seiner Hauptjobs,

04:50:31.840 --> 04:50:33.840
letztendlich.

04:50:33.840 --> 04:50:35.840
Organisation und dafür zu sorgen,

04:50:35.840 --> 04:50:37.840
dass, sofern du dich

04:50:37.840 --> 04:50:39.840
an die Vorgaben hältst,

04:50:39.840 --> 04:50:41.840
dir da keinen anderen Strick draus drehen kann.

04:50:41.840 --> 04:50:43.840
Es gibt viele Schwachsinn-Sachen,

04:50:43.840 --> 04:50:45.840
die man machen muss, aber die gewollt sind.

04:50:45.840 --> 04:50:47.840
Und ich bin mittlerweile

04:50:47.840 --> 04:50:49.840
auf dem Punkt, dass ich mir sage,

04:50:49.840 --> 04:50:51.840
Leute, ihr bezahlt mir so viel Kohle,

04:50:51.840 --> 04:50:53.840
ich mache auch Schwachsinn, ist mir vollkommen egal.

04:50:53.840 --> 04:50:55.840
Ich sage zwar, dass ich Schwachsinn halte,

04:50:55.840 --> 04:50:57.840
aber wenn ihr das wirklich haben wollt,

04:50:57.840 --> 04:50:59.840
zum Beispiel 60%, 70% der Zeit mieten,

04:50:59.840 --> 04:51:01.840
finde ich auch Schwachsinn.

04:51:01.840 --> 04:51:03.840
Wenn ihr mich für das Rumsitzen bezahlen wollt,

04:51:03.840 --> 04:51:05.840
mache ich.

04:51:05.840 --> 04:51:11.460
Meinetwegen.

04:51:11.460 --> 04:51:13.460
Was machst du beruflich?

04:51:13.460 --> 04:51:15.460
Ich bin Senior Linux-Engineer

04:51:15.460 --> 04:51:17.460
bei einer Versicherung in Frankfurt.

04:51:17.460 --> 04:51:20.960
Am Main.

04:51:20.960 --> 04:51:22.960
Letztendlich kannst du dir von dem Beruf

04:51:22.960 --> 04:51:24.960
nicht berufsbezeichnen sehen.

04:51:24.960 --> 04:51:26.960
Schall und Rauch.

04:51:26.960 --> 04:51:28.960
Nein, nicht Arch, by the way.

04:51:28.960 --> 04:51:30.960
Leider nicht Arch, by the way.

04:51:32.960 --> 04:51:34.960
Wobei ich auch privat auf Servern

04:51:34.960 --> 04:51:36.960
kein Arch installieren würde.

04:51:36.960 --> 04:51:38.960
Ich mache tatsächlich

04:51:38.960 --> 04:51:40.960
relativ

04:51:40.960 --> 04:51:42.960
wenig

04:51:42.960 --> 04:51:44.960
im Vergleich zu früher

04:51:44.960 --> 04:51:46.960
so

04:51:46.960 --> 04:51:48.960
klassisches Linux-Administrieren,

04:51:48.960 --> 04:51:50.960
wo du 90% des Tages

04:51:50.960 --> 04:51:52.960
bei SSH irgendwo eingeloggt bist.

04:51:52.960 --> 04:51:54.960
Das ist weniger. Mache ich auch.

04:51:54.960 --> 04:51:56.960
Wir haben noch genug Oldschool-Services.

04:51:56.960 --> 04:51:58.960
Ich habe übrigens

04:51:58.960 --> 04:52:00.960
für

04:52:00.960 --> 04:52:02.960
Tmux

04:52:02.960 --> 04:52:04.960
wie nennt man das heutzutage

04:52:04.960 --> 04:52:06.960
so schön gesimt.

04:52:06.960 --> 04:52:08.960
Hahaha.

04:52:08.960 --> 04:52:10.960
Ich habe versucht,

04:52:10.960 --> 04:52:12.960
meinen Teammates auf der Arbeit

04:52:12.960 --> 04:52:14.960
Tmux schmackhaft zu machen.

04:52:14.960 --> 04:52:16.960
Und das, obwohl ich selbst mittlerweile

04:52:16.960 --> 04:52:18.960
von lokalem Tmux weg bin.

04:52:18.960 --> 04:52:24.000
Aber hier habe ich halt auch ein ordentliches Terminal.

04:52:24.000 --> 04:52:26.000
Ja.

04:52:26.000 --> 04:52:28.000
Und ich habe das auf einem unserer letzten Termine

04:52:28.000 --> 04:52:30.000
mal eine halbe Stunde vorgestellt.

04:52:30.000 --> 04:52:32.000
So die üblichen Sachen, ja.

04:52:32.000 --> 04:52:34.000
Die üblichen Sachen, ja.

04:52:34.000 --> 04:52:36.000
Splits machen,

04:52:36.000 --> 04:52:38.000
Tabs machen,

04:52:38.000 --> 04:52:40.000
Detachn,

04:52:40.000 --> 04:52:42.000
Attachn,

04:52:42.000 --> 04:52:44.000
sich mit mehreren Leuten auf dem Server

04:52:44.000 --> 04:52:46.000
an die gleiche Kiste attachn und so was.

04:52:46.000 --> 04:52:48.000
Das habe ich mal gezeigt.

04:52:48.000 --> 04:52:50.000
Und das fanden die alle ganz toll.

04:52:50.000 --> 04:52:52.000
Und ich muss ja sagen, ihr kennt mich.

04:52:52.000 --> 04:52:54.000
Ich habe das natürlich nicht aus

04:52:54.000 --> 04:52:56.000
reiner Nächstenliebe vorgestellt.

04:52:56.000 --> 04:53:00.020
Mein Hintergedanke ist ja,

04:53:00.020 --> 04:53:02.020
ich möchte, dass es

04:53:02.020 --> 04:53:04.020
defaultmäßig auf allen unseren Servern

04:53:04.020 --> 04:53:06.020
installiert wird. Und wenn ich der einzige

04:53:06.020 --> 04:53:08.020
Benutzer bin,

04:53:08.020 --> 04:53:10.020
dann macht das ja keiner.

04:53:10.020 --> 04:53:12.020
Und ich will, dass es

04:53:12.020 --> 04:53:14.020
default auf allen unseren Servern wird.

04:53:14.020 --> 04:53:21.750
Ich habe es auf vielen schon nachinstalliert,

04:53:21.750 --> 04:53:23.750
aber beim nächsten Neuaufbau ist es wieder weg.

04:53:25.750 --> 04:53:27.750
Wenn das jetzt default wird, mich nervt es auf dem Server,

04:53:27.750 --> 04:53:29.750
mich einzuloggen und keinen T-Mox drauf zu haben.

04:53:29.750 --> 04:53:31.750
Sackt.

04:53:31.750 --> 04:53:38.200
Ja, wir haben auch Windows Server.

04:53:40.200 --> 04:53:42.200
Also ich muss mich glücklicherweise nicht da drum kümmern.

04:53:42.200 --> 04:53:45.830
Davon schon viel schlimmer,

04:53:45.830 --> 04:53:47.830
dass wir im Team jetzt,

04:53:47.830 --> 04:53:49.830
ich glücklicherweise nicht,

04:53:49.830 --> 04:53:51.830
aber jemand haben, der

04:53:51.830 --> 04:53:53.830
MSSQL Server betreut,

04:53:53.830 --> 04:54:06.420
muss auf Linux.

04:54:06.420 --> 04:54:08.420
Habt ihr einen Tipp für Arch auf einer virtuellen

04:54:08.420 --> 04:54:10.420
Maschine? Kann das sein, dass es absolut nicht gut läuft?

04:54:10.420 --> 04:54:12.420
Doch. Das, was du bei mir hier siehst,

04:54:12.420 --> 04:54:14.420
ist Arch Linux, by the way.

04:54:14.420 --> 04:54:16.420
In der VM. Und das läuft wunderbar.

04:54:18.420 --> 04:54:20.420
Ohne jegliche Probleme.

04:54:20.420 --> 04:54:22.420
Ich meine, ich habe natürlich auch ordentlich

04:54:22.420 --> 04:54:24.420
RAM und CPU

04:54:24.420 --> 04:54:26.420
der VM gegeben. Ich habe 8 Kerne

04:54:26.420 --> 04:54:28.420
und 24 GB RAM.

04:54:28.420 --> 04:54:30.420
Also quasi mehr, was

04:54:30.420 --> 04:54:32.420
viele Leute bei sich so im Rechner drin haben.

04:54:32.420 --> 04:54:34.420
Immerhin.

04:54:34.420 --> 04:54:36.420
Gibt es keine Probleme. Null.

04:54:36.420 --> 04:54:38.420
Sehr zackig. Ich kann dir nur empfehlen,

04:54:38.420 --> 04:54:40.420
kein Wayline zu verwenden in der VM.

04:54:40.420 --> 04:54:44.500
Das macht Probleme.

04:54:44.500 --> 04:54:46.500
Was gibt es gleich zu fordern?

04:54:46.500 --> 04:54:50.200
Irgendwelches Toastbrot.

04:54:50.200 --> 04:55:02.400
Sind mir keine bewusst gerade.

04:55:02.400 --> 04:55:04.400
Bin von Windows Engineering und auch in einer Firma.

04:55:04.400 --> 04:55:06.400
Ja, endlich. Nice.

04:55:06.400 --> 04:55:08.400
Ich würde durchdrehen, wenn ich mich um Windows

04:55:08.400 --> 04:55:11.910
kümmern müsste. Und?

04:55:11.910 --> 04:55:13.910
Wie ist es jetzt?

04:55:13.910 --> 04:55:15.910
Oh, du hast ja gerade schon geschrieben. Macht echt Bock.

04:55:15.910 --> 04:55:17.910
Heute kein Müsli. Doch, wahrscheinlich.

04:55:17.910 --> 04:55:24.800
Müsli und Toastbrot.

04:55:24.800 --> 04:55:26.800
Wayline ist doch echt unstable.

04:55:26.800 --> 04:55:28.800
Das wollen die Wayline Fans nicht hören.

04:55:28.800 --> 04:55:30.800
Ganz ehrlich, auch X ist für den Arsch

04:55:30.800 --> 04:55:32.800
mittlerweile. Es ist so krass outdated

04:55:32.800 --> 04:55:34.800
einfach nur.

04:55:34.800 --> 04:55:36.800
Und läuft auch nicht perfekt.

04:55:36.800 --> 04:55:38.800
Aber immerhin

04:55:38.800 --> 04:55:40.800
funktionieren so Basic Sachen

04:55:40.800 --> 04:55:42.800
wie Screen Refresh.

04:55:42.800 --> 04:55:44.800
Es ist einfach schlecht, eine grafische Oberfläche

04:55:44.800 --> 04:55:46.800
mit 0 FPS zu bedienen.

04:55:46.800 --> 04:55:48.800
Weil dann

04:55:48.800 --> 04:55:52.370
aktualisiert sich nichts.

04:55:52.370 --> 04:55:54.370
Die Basics funktionieren mit X wenigstens.

04:55:54.370 --> 04:56:02.550
Ja.

04:56:02.550 --> 04:56:06.630
Es gibt immer noch kein Memory Leak.

04:56:06.630 --> 04:56:08.630
Guck hier.

04:56:08.630 --> 04:56:10.630
Da liegt nix.

04:56:10.630 --> 04:56:14.390
Leakge.

04:56:14.390 --> 04:56:16.390
Schwankt immer so im gleichen

04:56:16.390 --> 04:56:32.280
Tü-tü-tü-tü.

04:56:32.280 --> 04:56:34.280
Wie wäre es denn, wenn wir

04:56:34.280 --> 04:56:36.280
in unserem

04:56:36.280 --> 04:56:38.280
Webserver, wir machen jetzt noch, wir brauchen nur noch

04:56:38.280 --> 04:56:40.280
eine halbe Stunde noch ein bisschen was zu tun.

04:56:40.280 --> 04:56:42.280
Wie wäre es denn, wenn wir in unserem Webserver

04:56:42.280 --> 04:56:44.280
noch ein paar Endpunkte einbauen würden?

04:56:44.280 --> 04:56:46.280
Nämlich einen, also wir brauchen

04:56:46.280 --> 04:56:48.280
auf jeden Fall später

04:56:48.280 --> 04:56:50.280
mindestens drei Endpunkte. Oder zwei.

04:56:50.280 --> 04:56:52.280
Einmal um WiFi

04:56:52.280 --> 04:56:54.280
Sachen auszulesen.

04:56:54.280 --> 04:56:56.280
Das könnten wir eigentlich jetzt machen.

04:56:56.280 --> 04:56:58.280
Ne, könnten wir nicht. Da seht ihr das

04:56:58.280 --> 04:57:00.280
im Stream.

04:57:00.280 --> 04:57:02.280
Wifi Sachen auszulesen und Wifi Sachen zu setzen.

04:57:02.280 --> 04:57:04.280
Mein Ziel ist ja, ein Web Interface

04:57:04.280 --> 04:57:06.280
zu machen, was nicht nur die Werte anzeigen kann, sondern auch

04:57:06.280 --> 04:57:08.280
Wifi Credentials setzen kann und

04:57:08.280 --> 04:57:12.040
Access Point aufmacht und sowas.

04:57:12.040 --> 04:57:14.040
Ja, das könnten wir eigentlich schon anfangen.

04:57:14.040 --> 04:57:16.040
Aber da muss ich mir erstmal Gedanken drüber machen.

04:57:16.040 --> 04:57:22.550
Ey, ich, ich, ich

04:57:22.550 --> 04:57:24.550
programmier mal den Button Händler. Das ist schön.

04:57:24.550 --> 04:57:31.380
Braindead.

04:57:31.380 --> 04:57:57.350
Machen das mal mit dem Button.

04:57:57.350 --> 04:57:59.350
Weil ich noch am überlegen bin,

04:57:59.350 --> 04:58:07.010
wie das überhaupt

04:58:07.010 --> 04:58:13.270
das ging.

04:58:13.270 --> 04:58:17.030
Es gibt ein neues Programmer, das da auch

04:58:17.030 --> 04:58:19.030
zu... Ja, die meisten finde ich gar nicht so lustig.

04:58:21.030 --> 04:58:34.520
Ja. Button.

04:58:34.520 --> 04:58:40.000
Button. Jawoll.

04:58:40.000 --> 04:58:44.850
Ähm.

04:58:44.850 --> 04:58:46.850
Warum ist die ESP-Seite kaputt?

04:58:46.850 --> 04:58:50.930
Button adden.

04:58:50.930 --> 04:58:52.930
Weil das Ding hat zwei Knöpfe.

04:58:52.930 --> 04:58:54.930
Das T-Display.

04:58:54.930 --> 04:58:56.930
Hier, zwei Knöpfe.

04:58:56.930 --> 04:58:58.930
Da brauche ich jetzt mal einen Datasheet.

04:58:58.930 --> 04:59:06.020
Seht ihr irgendwo einen Link zu

04:59:06.020 --> 04:59:10.100
einem Datasheet?

04:59:10.100 --> 04:59:13.670
Datasheet? Datasheet,

04:59:13.670 --> 04:59:15.670
da war noch was. Button.

04:59:15.670 --> 04:59:20.640
Äh.

04:59:20.640 --> 04:59:22.640
Welche Button sind was?

04:59:22.640 --> 04:59:24.640
Ne. Mhm. Mhm.

04:59:24.640 --> 04:59:27.960
Okay, alles klar.

04:59:27.960 --> 04:59:29.960
Was für China-Chinesen-Dokumente

04:59:29.960 --> 04:59:31.960
mache ich? What the f...

04:59:31.960 --> 04:59:41.920
Nee, die Buttons

04:59:41.920 --> 04:59:43.920
sind Push Buttons.

04:59:43.920 --> 04:59:45.920
Die eine sind für Boot

04:59:45.920 --> 04:59:47.920
und der eine ist für Reset, aber der an der Seite

04:59:47.920 --> 04:59:49.920
ist für Reset. Äh.

04:59:49.920 --> 04:59:54.580
Gibt es da eine Übersicht?

04:59:54.580 --> 04:59:56.580
Vielleicht so? Für Kack-Noobs? Für mich?

04:59:56.580 --> 04:59:58.580
T-Display

04:59:58.580 --> 05:00:03.680
Wiki.

05:00:03.680 --> 05:00:07.760
S3. Äh. Button.

05:00:07.760 --> 05:00:24.320
GPIO. Einfach mal

05:00:24.320 --> 05:00:26.320
drücken und gucken. Ja, da ist ja noch nichts attached.

05:00:26.320 --> 05:00:41.480
Ich hätte gern ein

05:00:41.480 --> 05:00:43.480
ordentliches Datasheet und

05:00:43.480 --> 05:00:45.480
eine ordentliche GPIO-Beschriftung.

05:00:45.480 --> 05:00:47.480
Gibt's das hier nit?

05:00:47.480 --> 05:00:53.600
Hier. Das ist der

05:00:53.600 --> 05:00:57.620
GPIO-Reset-Button. Äh.

05:00:57.620 --> 05:01:04.200
Und. Button. Hier. Da.

05:01:04.200 --> 05:01:06.200
Da. Hier. Da steht's.

05:01:06.200 --> 05:01:08.200
Ähm.

05:01:08.200 --> 05:01:10.200
Boot.

05:01:10.200 --> 05:01:12.200
IO14.

05:01:12.200 --> 05:01:14.200
IO14.

05:01:14.200 --> 05:01:16.200
Den Button kann man so verwenden.

05:01:16.200 --> 05:01:23.030
Ich bilde mir ein

05:01:23.030 --> 05:01:25.030
auf dem alten T-Display-Gamepad.

05:01:25.030 --> 05:01:27.030
Dankeschön. Für den Sub konnte man auch

05:01:27.030 --> 05:01:29.030
den Boot-Button verwenden,

05:01:29.030 --> 05:01:31.030
nachdem man gebootet

05:01:31.030 --> 05:01:39.780
hat. Was ist denn

05:01:39.780 --> 05:01:41.780
der Boot-Button? Immer GPIO 0.

05:01:41.780 --> 05:01:45.860
Oder? Ja. Dann kann man

05:01:45.860 --> 05:01:47.860
den Boot-Button verwenden

05:01:47.860 --> 05:01:49.860
im laufenden Betrieb mit GPIO 0.

05:01:49.860 --> 05:02:04.950
Höchstwahrscheinlich. Okay.

05:02:04.950 --> 05:02:06.950
Also. Dann gucken wir mal. GPIO

05:02:06.950 --> 05:02:08.950
14.

05:02:08.950 --> 05:02:10.950
Button. Merkt euch mal.

05:02:10.950 --> 05:02:12.950
GPIO 14. So.

05:02:12.950 --> 05:02:16.390
Ich brauch mal kurz ein Example.

05:02:16.390 --> 05:02:18.390
Wie das funktioniert hat.

05:02:18.390 --> 05:02:21.960
Button pressed.

05:02:21.960 --> 05:02:23.960
Ja.

05:02:23.960 --> 05:02:25.960
Alter. Ja. Übertreibt's

05:02:25.960 --> 05:02:27.960
halt hier. GPIO

05:02:27.960 --> 05:02:35.360
Button-Config.

05:02:35.360 --> 05:02:37.360
Wir kommentieren jetzt einfach mal

05:02:37.360 --> 05:02:41.890
alles aus,

05:02:41.890 --> 05:02:43.890
was wir hier haben. Alles weg.

05:02:43.890 --> 05:02:45.890
Weil das brauchen wir nicht.

05:02:45.890 --> 05:02:47.890
Für unseren Button-Krams.

05:02:47.890 --> 05:02:49.890
Für unseren Button-Test. Dann flasht er nämlich auch

05:02:49.890 --> 05:02:53.460
deutlich schneller.

05:02:53.460 --> 05:02:55.460
So. Sollen wir wieder einkommentieren.

05:02:55.460 --> 05:02:57.460
So. Button-Config.

05:02:57.460 --> 05:02:59.460
Include.

05:02:59.460 --> 05:03:01.460
Button.

05:03:01.460 --> 05:03:06.120
Ne. Ach ne. Ich muss erst mal

05:03:06.120 --> 05:03:08.120
ein Bild machen, dass es funktioniert.

05:03:08.120 --> 05:03:11.620
Du musst entprellen.

05:03:11.620 --> 05:03:13.620
Ja. Das macht die

05:03:13.620 --> 05:03:15.620
ESP Button

05:03:15.620 --> 05:03:17.620
Library schon für mich.

05:03:17.620 --> 05:03:19.620
Deswegen will ich ja auch nicht

05:03:19.620 --> 05:03:21.620
von Hand GPIO Read und sowas machen.

05:03:21.620 --> 05:03:42.660
So. Und wie benutzt

05:03:42.660 --> 05:03:44.660
man das jetzt? Register

05:03:44.660 --> 05:03:46.660
Callback. Ja. Genau. Das brauchen wir.

05:03:46.660 --> 05:03:48.660
Okay. Also

05:03:48.660 --> 05:03:50.660
Type GPI

05:03:50.660 --> 05:04:02.550
What?

05:04:02.550 --> 05:04:04.550
Include Button

05:04:04.550 --> 05:04:06.550
GPIO

05:04:06.550 --> 05:04:13.700
Undefined? Sicher?

05:04:13.700 --> 05:04:18.480
Äh.

05:04:18.480 --> 05:04:23.720
Was?

05:04:23.720 --> 05:04:25.720
Ist ja auch wieder nice, wie gut das funktioniert.

05:04:25.720 --> 05:04:27.720
Example

05:04:27.720 --> 05:04:31.480
vielleicht?

05:04:31.480 --> 05:04:33.480
Gibt's nicht. Kein Example. Ist outdated.

05:04:33.480 --> 05:04:35.480
Overrated.

05:04:35.480 --> 05:04:37.480
Ich hab das schon benutzt. Das war easy.

05:04:37.480 --> 05:04:43.990
Button GPIO

05:04:43.990 --> 05:04:45.990
Init. Button GPIO

05:04:45.990 --> 05:04:53.400
Config.

05:04:53.400 --> 05:04:55.400
Ja. Was muss ich denn includen dafür?

05:04:55.400 --> 05:04:58.770
Ist, ist, ist, sind die

05:04:58.770 --> 05:05:00.770
Docs einfach outdated as fuck?

05:05:00.770 --> 05:05:08.370
Was muss ich denn includen?

05:05:08.370 --> 05:05:10.370
Ja. Hier.

05:05:10.370 --> 05:05:12.370
Include I.O. Button.

05:05:12.370 --> 05:05:14.370
Äh.

05:05:14.370 --> 05:05:18.130
What?

05:05:18.130 --> 05:05:20.130
I.O.?

05:05:20.130 --> 05:05:22.130
I.O.T. Button.

05:05:22.130 --> 05:05:24.130
Auch nicht.

05:05:24.130 --> 05:05:26.130
Ja. Meine Güte, Mann.

05:05:26.130 --> 05:05:28.130
Elder.

05:05:28.130 --> 05:05:30.130
Ist doch hier.

05:05:30.130 --> 05:05:32.130
Geht doch. Das war halt einfach wieder ewig

05:05:32.130 --> 05:05:35.890
gebraucht. Okay.

05:05:35.890 --> 05:05:37.890
Button Type GPIO

05:05:37.890 --> 05:05:39.890
Config. Button Long Press.

05:05:39.890 --> 05:05:41.890
Button Short Press.

05:05:41.890 --> 05:05:46.100
Was gibt's denn sonst noch hier?

05:05:46.100 --> 05:05:48.100
Äh.

05:05:48.100 --> 05:05:50.100
Nix was verbrauchen. Button.

05:05:50.100 --> 05:05:52.100
GPIO Nummer. Okay. GPIO

05:05:52.100 --> 05:05:54.100
GPIO

05:05:54.100 --> 05:05:56.100
Nummer

05:05:56.100 --> 05:05:58.100
14 war das?

05:06:00.100 --> 05:06:02.100
Active Level 0. Ja. Okay.

05:06:02.100 --> 05:06:14.850
Register.

05:06:14.850 --> 05:06:16.850
Ist hier noch ein Example?

05:06:16.850 --> 05:06:22.340
Hier ist Simple Example.

05:06:22.340 --> 05:06:24.340
GPIO Button. Aber wir müssen es noch

05:06:24.340 --> 05:06:28.420
createn. Also die Beispiele

05:06:28.420 --> 05:06:30.420
sind teilweise schon

05:06:30.420 --> 05:06:32.420
abysi

05:06:32.420 --> 05:06:34.420
schwierig.

05:06:34.420 --> 05:06:36.420
Durcheinander.

05:06:36.420 --> 05:06:38.420
GPIO Button Config. Button

05:06:38.420 --> 05:06:40.420
Single Click. Machen wir jetzt hier mal

05:06:40.420 --> 05:06:42.420
so ein Callback.

05:06:42.420 --> 05:06:45.860
Button Single

05:06:45.860 --> 05:06:50.130
Click. Brauch.

05:06:50.130 --> 05:06:52.130
Void

05:06:52.130 --> 05:06:54.130
Arc User Data.

05:06:54.130 --> 05:06:57.570
Okay.

05:06:57.570 --> 05:06:59.570
Nix davon werden wir jetzt gerade verwenden.

05:06:59.570 --> 05:07:01.570
Logger. Log.

05:07:03.570 --> 05:07:05.570
Clicked.

05:07:05.570 --> 05:07:07.570
Oh. Dieses

05:07:07.570 --> 05:07:18.880
Formatting. Alter.

05:07:18.880 --> 05:07:20.880
Okay. Flaschen.

05:07:20.880 --> 05:07:22.880
Das Flaschen sollte jetzt

05:07:22.880 --> 05:07:24.880
deutlich schneller gehen.

05:07:24.880 --> 05:07:29.860
Ja. Okay.

05:07:29.860 --> 05:07:31.860
GPIO Button. Zeig mal hier. Clickety Click.

05:07:31.860 --> 05:07:35.170
Äh. Uh.

05:07:35.170 --> 05:07:46.130
Äh. Okay.

05:07:46.130 --> 05:07:56.610
Okay. Okay. Alles gut.

05:07:56.610 --> 05:07:58.610
Ah. Moment. Moment. Ich hab kein

05:07:58.610 --> 05:08:00.610
Delay da drinne. Ja. Das ist natürlich

05:08:00.610 --> 05:08:05.650
doof. Das sollte so nicht

05:08:05.650 --> 05:08:09.350
sein. Ohne Delay.

05:08:09.350 --> 05:08:19.600
Okay. Click. Click.

05:08:19.600 --> 05:08:21.600
Clicked.

05:08:21.600 --> 05:08:23.600
Clicked.

05:08:23.600 --> 05:08:25.600
Funst.

05:08:25.600 --> 05:08:27.600
Easy.

05:08:27.600 --> 05:08:40.520
Easy Button Stells.

05:08:40.520 --> 05:08:42.520
Minimales Delay hat das.

05:08:42.520 --> 05:08:47.300
Wahrscheinlich.

05:08:47.300 --> 05:08:49.300
Weil das hier auf 180 Millisekunden steht.

05:08:49.300 --> 05:09:00.360
GPIO Level

05:09:00.360 --> 05:09:04.240
when pressed down.

05:09:04.240 --> 05:09:06.240
Woran genau ich arbeite. Einem.

05:09:06.240 --> 05:09:08.240
Auf einem ESP32

05:09:08.240 --> 05:09:10.240
S3.

05:09:10.240 --> 05:09:12.240
Und wir haben einen Web Server

05:09:12.240 --> 05:09:14.240
drauf gebaut.

05:09:14.240 --> 05:09:16.240
Der per HTTPS

05:09:16.240 --> 05:09:18.240
eine Svelte Web Anwendung ausliefert.

05:09:18.240 --> 05:09:20.240
Die jetzt nicht sonderlich

05:09:20.240 --> 05:09:22.240
spektakulär aktueller aussieht. Aber

05:09:22.240 --> 05:09:24.240
eine vollständige Web Anwendung.

05:09:24.240 --> 05:09:26.240
Single Page Application.

05:09:26.240 --> 05:09:28.240
Die Embedded dann in der

05:09:28.240 --> 05:09:30.240
Firmware ausgeliefert wird. Und aktuell versuche ich

05:09:30.240 --> 05:09:32.240
den Button anzusprechen von dem Ding.

05:09:32.240 --> 05:09:34.240
Und das funktioniert ja auch schon ganz gut.

05:09:34.240 --> 05:09:37.680
Clickety Click. Click.

05:09:37.680 --> 05:09:39.680
Also das ist tatsächlich. Das ist jetzt

05:09:39.680 --> 05:09:41.680
in der Tat recht easy gewesen den Button anzusprechen.

05:09:41.680 --> 05:09:45.190
Wir können das

05:09:45.190 --> 05:09:47.190
jetzt nochmal. Just for fun.

05:09:47.190 --> 05:09:49.190
Machen wir nochmal

05:09:49.190 --> 05:09:51.190
was.

05:09:51.190 --> 05:09:53.190
Was da?

05:09:53.190 --> 05:13:04.980
Wir kommentieren das mal alles wieder ein.

05:13:04.980 --> 05:13:06.980
Warum muss das sein?

05:13:06.980 --> 05:13:08.980
Das ist auch so ein Schrott an C++.

05:13:08.980 --> 05:13:10.980
Das Include Reihenfolge von Header

05:13:10.980 --> 05:13:12.980
eine Rolle spielt und sowas.

05:13:12.980 --> 05:13:14.980
Wieso nicht JetPrinz?

05:13:14.980 --> 05:13:16.980
Wie gesagt ich habe eine C-Line Lizenz.

05:13:16.980 --> 05:13:18.980
Beziehungsweise eine All Desktop Lizenz.

05:13:18.980 --> 05:13:20.980
Aber da geht mir auch immer irgendwas auf den Keks.

05:13:20.980 --> 05:13:22.980
Zum Beispiel.

05:13:22.980 --> 05:13:26.930
Das C-Line immer noch nicht in der Lage

05:13:26.930 --> 05:13:28.930
ist Defines

05:13:28.930 --> 05:13:30.930
ordentlich zu finden teilweise.

05:13:30.930 --> 05:13:32.930
Wobei ich denke. Hä?

05:13:32.930 --> 05:13:40.280
Okay so.

05:13:40.280 --> 05:13:42.280
Wenn ich da jetzt drauf drücke.

05:13:42.280 --> 05:13:44.280
Okay zeigen wir mal.

05:13:44.280 --> 05:13:46.280
Äh.

05:13:46.280 --> 05:13:48.280
Also es läuft nicht mehr.

05:13:48.280 --> 05:13:50.280
CD, Web App.

05:13:50.280 --> 05:13:52.280
Def.

05:13:52.280 --> 05:13:54.280
So von der Idee her.

05:13:54.280 --> 05:13:56.280
Sollte ich jetzt.

05:13:56.280 --> 05:14:08.900
Hä?

05:14:08.900 --> 05:14:14.260
Wie?

05:14:14.260 --> 05:14:16.260
Mixed Connection Refuse.

05:14:16.260 --> 05:14:18.260
Was der denn für einen Scheiß erzählt.

05:14:18.260 --> 05:14:20.260
Du meinst Z.

05:14:20.260 --> 05:14:22.260
So wenn ich jetzt den Button drücke.

05:14:22.260 --> 05:14:24.260
Dann sollte im Web Interface was erscheinen.

05:14:24.260 --> 05:14:26.260
Okay.

05:14:26.260 --> 05:14:28.260
Klick.

05:14:28.260 --> 05:14:31.960
Zack.

05:14:31.960 --> 05:14:33.960
Nochmal. Klick.

05:14:33.960 --> 05:14:35.960
Klick.

05:14:35.960 --> 05:14:37.960
Klick.

05:14:37.960 --> 05:14:39.960
Bei jedem Klick wird er aktualisiert.

05:14:39.960 --> 05:14:41.960
Okay.

05:14:41.960 --> 05:14:43.960
Es funzt was wir gebaut haben.

05:14:43.960 --> 05:14:57.120
Easy Clap über Web Socket.

05:14:57.120 --> 05:14:59.120
Kann man eigentlich.

05:14:59.120 --> 05:15:01.120
Das hier.

05:15:01.120 --> 05:15:03.120
So da rein pasten.

05:15:03.120 --> 05:15:09.250
Ne ne.

05:15:09.250 --> 05:15:11.250
Ne ne.

05:15:11.250 --> 05:15:13.250
Das geht natürlich.

05:15:13.250 --> 05:15:15.250
Es geht natürlich.

05:15:15.250 --> 05:15:18.820
Das wäre wahrscheinlich wieder zu übersichtlich.

05:15:18.820 --> 05:15:20.820
Button.

05:15:20.820 --> 05:15:22.820
Config.

05:15:22.820 --> 05:15:24.820
Ich hasse dieses.

05:15:24.820 --> 05:15:26.820
Okay schreiben kann ich auch noch mehr.

05:15:26.820 --> 05:15:28.820
Dieses zwangshaft.

05:15:28.820 --> 05:15:30.820
Alter Config.

05:15:30.820 --> 05:15:38.100
Dieses zwangshafte abgekürze.

05:15:38.100 --> 05:15:51.200
Von allen.

05:15:51.200 --> 05:15:53.200
Warum soll ich das anders nennen.

05:15:53.200 --> 05:15:56.710
Gibt nur einen Button auf dem ganzen Ding.

05:15:56.710 --> 05:15:58.710
Genau.

05:15:58.710 --> 05:16:00.710
Die Verbindung ist quasi offen.

05:16:00.710 --> 05:16:02.710
Und ich kann.

05:16:02.710 --> 05:16:04.710
Ohne das mein Client laufend irgendwas polt.

05:16:04.710 --> 05:16:06.710
Vom Server zurückschicken.

05:16:06.710 --> 05:16:08.710
Es gibt ein paar Hacks.

05:16:08.710 --> 05:16:10.710
Wie man das anderweitig auch.

05:16:10.710 --> 05:16:14.980
Sagen wir mal.

05:16:14.980 --> 05:16:16.980
Vergleichbar.

05:16:16.980 --> 05:16:18.980
Umsetzen kann.

05:16:18.980 --> 05:16:20.980
Du kannst zum Beispiel.

05:16:20.980 --> 05:16:22.980
Eine HTML Verbindung.

05:16:22.980 --> 05:16:24.980
An Request aufmachen.

05:16:24.980 --> 05:16:26.980
Dann kann der Server auch immer wieder.

05:16:26.980 --> 05:16:28.980
Daten rein streamen.

05:16:28.980 --> 05:16:33.440
Was aber nicht geht.

05:16:33.440 --> 05:16:35.440
Ist.

05:16:35.440 --> 05:16:37.440
Kommunikation in beide Richtungen.

05:16:37.440 --> 05:16:39.440
Wie es mit Websock.

05:16:39.440 --> 05:16:41.440
Wie es mit Websock ins schöne geht.

05:16:41.440 --> 05:16:50.770
100 Zeichen Namen.

05:16:50.770 --> 05:16:54.340
Geil.

05:16:54.340 --> 05:16:56.340
Excellent.

05:16:56.340 --> 05:16:58.340
Kann ich hier nicht sagen.

05:16:58.340 --> 05:17:00.340
Hier auch.

05:17:00.340 --> 05:17:04.100
Ne hier nicht.

05:17:04.100 --> 05:17:06.100
Ja das finde ich ist doch ganz.

05:17:06.100 --> 05:17:14.150
Brauchbar.

05:17:14.150 --> 05:17:16.150
Ich weiß gar nicht.

05:17:16.150 --> 05:17:18.150
Ob sie Sharp ein wirkliches Limit hat.

05:17:18.150 --> 05:17:20.150
Was Methoden und Variablen Namen angeht.

05:17:20.150 --> 05:17:22.150
Wahrscheinlich.

05:17:22.150 --> 05:17:24.150
Wahrscheinlich so hoch.

05:17:24.150 --> 05:17:26.150
2048.

05:17:26.150 --> 05:17:28.150
Oder sowas.

05:17:28.150 --> 05:17:30.150
Und wahrscheinlich nicht.

05:17:30.150 --> 05:17:32.150
Wahrscheinlich hat sie nicht mal wirklich ein Limit.

05:17:32.150 --> 05:17:37.440
Also ich bin begeistert.

05:17:37.440 --> 05:17:39.440
Wie easy das hier.

05:17:39.440 --> 05:17:41.440
Umzusetzen war mit den.

05:17:41.440 --> 05:17:43.440
Mit dem Web Server.

05:17:43.440 --> 05:17:45.440
Wirklich ganz schlecht.

05:17:45.440 --> 05:17:47.440
Gute Ausgangsbasis.

05:17:47.440 --> 05:17:49.440
Für nächste Bastel.

05:17:49.440 --> 05:17:51.440
ESP 32 Bastelstunde.

05:17:51.440 --> 05:17:53.440
Aber wie gesagt.

05:17:53.440 --> 05:17:55.440
Nicht zwangsläufig nächster Stream.

05:17:55.440 --> 05:17:57.440
Weil ich brauche jetzt erstmal ein bisschen Ruhe von C++.

05:17:57.440 --> 05:17:59.440
5 Stunden 17 Minuten C++.

05:17:59.440 --> 05:18:07.240
Das reicht für heute.

05:18:07.240 --> 05:18:12.210
Genug.

05:18:12.210 --> 05:18:14.210
Chat ich gehe jetzt was essen.

05:18:14.210 --> 05:18:16.210
Schön das ihr am Start wart.

05:18:16.210 --> 05:18:18.210
Es waren erstaunlich viele.

05:18:18.210 --> 05:18:20.210
Für die Uhrzeit.

05:18:20.210 --> 05:18:22.210
Permanent am Start.

05:18:22.210 --> 05:18:24.210
160 plus Leute.

05:18:24.210 --> 05:18:26.210
Von Anfang an bis jetzt.

05:18:26.210 --> 05:18:28.210
Richtig nice.

05:18:28.210 --> 05:18:30.210
Hat mir gefallen.

05:18:30.210 --> 05:18:33.910
Macht auch richtig Bock das Ding zu proggern.

05:18:33.910 --> 05:18:35.910
Nächstes mal wenn wir basteln würde ich sagen.

05:18:35.910 --> 05:18:37.910
Gucken wir uns mal das Display an.

05:18:37.910 --> 05:18:39.910
Weil eines der großen.

05:18:39.910 --> 05:18:41.910
Ja herausstechende Dinger von dem Ding ist ja.

05:18:41.910 --> 05:18:43.910
Das es ein integriertes Display hat.

05:18:43.910 --> 05:18:45.910
Was sogar echt.

05:18:45.910 --> 05:18:47.910
Wirklich nice.

05:18:47.910 --> 05:18:49.910
Wenn ich mir das hier so angucke.

05:18:49.910 --> 05:18:51.910
Wirklich nice gemacht ist vorne.

05:18:51.910 --> 05:18:53.910
Mit so kleinen Plastik durchsichtigen.

05:18:53.910 --> 05:18:55.910
Ich wollte gerade sagen Glasrahmen.

05:18:55.910 --> 05:18:57.910
Ist es aber nicht.

05:18:57.910 --> 05:18:59.910
Plastikrahmen.

05:18:59.910 --> 05:19:01.910
Das heißt wenn man jetzt ein schönes Case dafür hat.

05:19:01.910 --> 05:19:23.970
Gibt es dafür schöne Cases?

05:19:23.970 --> 05:19:25.970
Ja gut.

05:19:25.970 --> 05:19:27.970
Man kann sich einen selbst drucken.

05:19:27.970 --> 05:19:29.970
Wenn es dafür schöne Cases gibt.

05:19:29.970 --> 05:19:31.970
Dann sieht das sogar richtig sauber aus.

05:19:31.970 --> 05:19:33.970
Weil die Dinger so einen.

05:19:33.970 --> 05:19:35.970
Plastikrahmen schon drin haben.

05:19:35.970 --> 05:19:37.970
Gut das ist jetzt mit wirklich.

05:19:37.970 --> 05:19:39.970
Sehr grob.

05:19:39.970 --> 05:19:41.970
3D gedruckt.

05:19:41.970 --> 05:19:51.490
Und das ist für das alte.

05:19:51.490 --> 05:19:53.490
Das ist nicht für das S3.

05:19:53.490 --> 05:20:02.180
Vielleicht haben die trotzdem Cases.

05:20:02.180 --> 05:20:04.180
Ne haben sie nicht.

05:20:04.180 --> 05:20:06.180
Moment DE?

05:20:06.180 --> 05:20:13.270
Warum kostet die deutsche Version mehr?

05:20:13.270 --> 05:20:22.080
Ach ne.

05:20:22.080 --> 05:20:30.000
Das Shell.

05:20:30.000 --> 05:20:32.000
Ist das hier die Shell?

05:20:32.000 --> 05:20:34.000
Die Shell bringt mir nichts.

05:20:34.000 --> 05:20:36.000
Wenn die nicht um das gesamte Gerät rum geht.

05:20:36.000 --> 05:20:41.940
Was bedeutet DE?

05:20:41.940 --> 05:20:43.940
Ach develop.

05:20:43.940 --> 05:20:52.370
Ne oder?

05:20:52.370 --> 05:21:16.420
Für was steht das DE?

05:21:16.420 --> 05:21:18.420
Für eine Shell?

05:21:18.420 --> 05:21:24.290
Ach hier.

05:21:24.290 --> 05:21:26.290
Prom 288 kostet.

05:21:26.290 --> 05:21:35.170
19 Euro.

05:21:35.170 --> 05:21:37.170
Die wollen einfach mal.

05:21:37.170 --> 05:21:39.170
Alter das ist teurer als auf AliExpress.

05:21:39.170 --> 05:21:50.610
Das Gerät selber.

05:21:50.610 --> 05:21:52.610
Wollt ihr mich verarschen?

05:21:52.610 --> 05:21:54.610
Aber ein ganz hübsches Case.

05:21:54.610 --> 05:21:56.610
Aber 19 Euro ganz bestimmt.

05:21:56.610 --> 05:22:00.180
Ganz bestimmt.

05:22:00.180 --> 05:22:05.540
Muss ich mal kurz checken.

05:22:05.540 --> 05:22:14.360
AliExpress vielleicht gibt es das da.

05:22:14.360 --> 05:22:16.360
Ich könnte es 3D drucken.

05:22:16.360 --> 05:22:18.360
In die Richtung wie ich mir das vorstelle.

05:22:18.360 --> 05:22:20.360
1,60.

05:22:20.360 --> 05:22:22.360
Ja.

05:22:22.360 --> 05:22:44.360
Das geht eher in die Richtung.

05:22:44.360 --> 05:22:46.360
Ja klar.

05:22:46.360 --> 05:22:48.360
Einen ESP32 Miner.

05:22:48.360 --> 05:22:50.360
Ganz sehr sehr sinnvoll.

05:22:50.360 --> 05:23:05.830
Was ein Schwachsinn.

05:23:05.830 --> 05:23:07.830
Ne.

05:23:07.830 --> 05:23:09.830
Das ist das für ohne.

05:23:09.830 --> 05:23:16.020
Ne ne ne.

05:23:16.020 --> 05:23:18.020
Das ist für das alte T-Display.

05:23:18.020 --> 05:23:20.020
Oder?

05:23:20.020 --> 05:23:22.020
Und das ist die S3.

05:23:22.020 --> 05:23:24.020
Das ist ein S3 mit einer Shell.

05:23:24.020 --> 05:23:26.020
Ich glaube das wollen die uns sagen.

05:23:26.020 --> 05:23:28.020
Ich hätte das so interpretiert.

05:23:28.020 --> 05:23:30.020
Das ist für das alte.

05:23:30.020 --> 05:23:32.020
Das ist für das neue.

05:23:32.020 --> 05:23:34.020
Ok.

05:23:34.020 --> 05:23:44.240
Ja.

05:23:44.240 --> 05:23:46.240
Ok.

05:23:46.240 --> 05:23:48.240
Ja dann geht es ja auch da ganz gut.

05:23:48.240 --> 05:23:50.240
Vielleicht bestelle ich mir tatsächlich mal so.

05:23:50.240 --> 05:23:52.240
5er Pack von den Shells.

05:23:52.240 --> 05:23:54.240
Weil ich mag den Controller.

05:23:54.240 --> 05:23:56.240
Gerade das mit dem Integrated Display.

05:23:56.240 --> 05:23:58.240
Ist sehr sehr nice.

05:23:58.240 --> 05:24:01.560
3D Druck habe ich letztes mal vor 3-4 Wochen benutzt.

05:24:01.560 --> 05:24:03.560
See you.
