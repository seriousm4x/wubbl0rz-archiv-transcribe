1
00:00:56,500 --> 00:01:41,550
Untertitelung des ZDF, 2020

2
00:01:41,570 --> 00:02:39,840
Untertitelung des ZDF, 2020

3
00:02:39,860 --> 00:03:16,810
Untertitelung des ZDF, 2020

4
00:03:16,830 --> 00:03:50,880
Untertitelung des ZDF, 2020

5
00:03:50,900 --> 00:04:28,810
Untertitelung des ZDF, 2020

6
00:04:28,830 --> 00:05:01,280
Untertitelung des ZDF, 2020

7
00:05:01,300 --> 00:05:52,970
Untertitelung des ZDF, 2020

8
00:05:52,990 --> 00:06:33,440
Untertitelung des ZDF, 2020

9
00:06:33,460 --> 00:07:03,440
Untertitelung des ZDF, 2020

10
00:07:03,460 --> 00:07:34,880
Untertitelung des ZDF, 2020

11
00:07:34,900 --> 00:08:14,760
Untertitelung des ZDF, 2020

12
00:08:14,780 --> 00:08:46,400
Untertitelung des ZDF, 2020

13
00:08:46,420 --> 00:09:21,840
Untertitelung des ZDF, 2020

14
00:09:21,860 --> 00:09:55,470
Untertitelung des ZDF, 2020

15
00:09:55,470 --> 00:09:55,590
Untertitelung des ZDF, 2020

16
00:09:55,590 --> 00:09:55,610
Untertitelung des ZDF, 2020

17
00:09:55,630 --> 00:10:30,730
Untertitelung des ZDF, 2020

18
00:10:30,750 --> 00:11:00,730
Untertitelung des ZDF, 2020

19
00:11:00,750 --> 00:11:34,760
Untertitelung des ZDF, 2020

20
00:11:34,760 --> 00:11:34,780
Untertitelung des ZDF, 2020

21
00:11:34,780 --> 00:12:11,840
Untertitelung des ZDF, 2020

22
00:12:11,860 --> 00:12:51,600
Untertitelung des ZDF, 2020

23
00:12:51,620 --> 00:13:23,100
Untertitelung des ZDF, 2020

24
00:13:23,120 --> 00:13:56,040
Untertitelung des ZDF, 2020

25
00:13:56,060 --> 00:14:38,100
Untertitelung des ZDF, 2020

26
00:14:38,100 --> 00:14:38,580
Untertitelung des ZDF, 2020

27
00:14:38,580 --> 00:14:38,600
Untertitelung des ZDF, 2020

28
00:14:38,600 --> 00:15:17,410
Untertitelung des ZDF, 2020

29
00:15:17,430 --> 00:15:47,410
Untertitelung des ZDF, 2020

30
00:15:47,410 --> 00:15:47,430
Untertitelung des ZDF, 2020

31
00:15:47,430 --> 00:16:17,410
Untertitelung des ZDF, 2020

32
00:16:17,430 --> 00:16:57,330
Untertitelung des ZDF, 2020

33
00:16:57,330 --> 00:16:57,570
Untertitelung des ZDF, 2020

34
00:16:57,570 --> 00:17:52,860
Untertitelung des ZDF, 2020

35
00:17:52,880 --> 00:18:36,080
Untertitelung des ZDF, 2020

36
00:18:36,100 --> 00:19:22,400
Untertitelung des ZDF, 2020

37
00:19:22,420 --> 00:19:54,290
Untertitelung des ZDF, 2020

38
00:19:54,310 --> 00:20:25,860
Untertitelung des ZDF, 2020

39
00:20:25,880 --> 00:20:58,900
Untertitelung des ZDF, 2020

40
00:20:58,920 --> 00:21:30,660
Untertitelung des ZDF, 2020

41
00:21:30,680 --> 00:22:05,780
Untertitelung des ZDF, 2020

42
00:22:05,800 --> 00:22:37,090
Untertitelung des ZDF, 2020

43
00:22:37,110 --> 00:23:10,740
Untertitelung des ZDF, 2020

44
00:23:10,760 --> 00:23:39,900
Untertitelung des ZDF, 2020

45
00:23:39,900 --> 00:23:40,600
Untertitelung des ZDF, 2020

46
00:23:40,600 --> 00:23:40,620
Untertitelung des ZDF, 2020

47
00:23:40,620 --> 00:24:10,600
Untertitelung des ZDF, 2020

48
00:24:10,600 --> 00:24:10,620
Untertitelung des ZDF, 2020

49
00:24:10,620 --> 00:24:52,530
Untertitelung des ZDF, 2020

50
00:24:52,550 --> 00:25:46,210
Untertitelung des ZDF, 2020

51
00:25:46,230 --> 00:26:55,280
Untertitelung des ZDF, 2020

52
00:26:55,300 --> 00:27:25,280
Untertitelung des ZDF, 2020

53
00:27:25,300 --> 00:27:55,280
Untertitelung des ZDF, 2020

54
00:27:55,300 --> 00:28:26,660
Untertitelung des ZDF, 2020

55
00:28:26,680 --> 00:29:07,250
Untertitelung des ZDF, 2020

56
00:29:07,270 --> 00:29:40,100
Untertitelung des ZDF, 2020

57
00:29:40,120 --> 00:30:14,900
Untertitelung des ZDF, 2020

58
00:30:14,920 --> 00:30:47,110
Untertitelung des ZDF, 2020

59
00:30:47,130 --> 00:31:23,220
Untertitelung des ZDF, 2020

60
00:31:23,240 --> 00:32:28,070
Untertitelung des ZDF, 2020

61
00:32:28,090 --> 00:33:01,620
Untertitelung des ZDF, 2020

62
00:33:01,640 --> 00:33:31,620
Untertitelung des ZDF, 2020

63
00:33:31,640 --> 00:34:17,240
Untertitelung des ZDF, 2020

64
00:34:17,260 --> 00:34:58,440
Untertitelung des ZDF, 2020

65
00:34:58,460 --> 00:35:17,720
Untertitelung des ZDF, 2020

66
00:35:17,720 --> 00:35:29,730
Untertitelung des ZDF, 2020

67
00:35:29,730 --> 00:35:34,910
Was ist hier los?

68
00:35:36,570 --> 00:35:37,450
Dropped Frames?

69
00:35:38,810 --> 00:35:39,570
MonkaS?

70
00:35:40,170 --> 00:35:40,970
MonkaW!

71
00:35:46,580 --> 00:35:48,080
Es kann nicht alles okay sein

72
00:35:48,080 --> 00:35:50,420
Das ist jetzt nur okay, weil Standbild ist

73
00:35:50,420 --> 00:35:55,240
Mein Gott, Vodafone

74
00:35:55,240 --> 00:35:58,060
Kriegt mal euren Scheiß auf die Reihe, Alter

75
00:35:58,060 --> 00:35:59,500
Das kann doch nicht sein

76
00:35:59,500 --> 00:36:01,700
Was ist hier?

77
00:36:02,120 --> 00:36:04,780
25, 28% Framedrops

78
00:36:04,780 --> 00:36:14,130
Wir müssen kurz warten, Leute

79
00:36:14,130 --> 00:36:16,970
Wir müssen kurz warten, bis das vorbei ist

80
00:36:16,970 --> 00:36:21,660
Sonst kann ich das, sonst kann ich das, sonst kann ich das gar nicht

81
00:36:21,660 --> 00:36:27,710
Ja, dann müssen wir das Ganze kurz überbrücken

82
00:36:27,710 --> 00:36:29,370
Bis es wieder funktioniert

83
00:36:29,370 --> 00:36:39,500
Gibt es irgendwelche anderen spannenden Themen, die wir noch schnell besprechen können

84
00:36:39,500 --> 00:36:41,100
Bis der Kempel wieder funktioniert?

85
00:36:45,090 --> 00:36:45,530
MonkaW!

86
00:36:47,170 --> 00:36:51,910
Okay, also, Chat sagt, das Schlimmste, was man am Anfang mit einem Elektroauto

87
00:36:51,910 --> 00:36:53,350
Was?

88
00:36:53,850 --> 00:36:55,210
Das Schlimmste, was man am Anfang hat

89
00:36:55,210 --> 00:36:59,230
Das Schlimmste, was man am Anfang hat mit einem Elektroauto ist die Reichweitenangst

90
00:36:59,230 --> 00:37:00,770
Aber die geht... Nö, hab ich nicht

91
00:37:00,770 --> 00:37:03,510
Hab ich nicht, ich weiß, dass ich nicht weit fahr

92
00:37:03,510 --> 00:37:07,170
Ich bin mir da ziemlich sicher, dass ich überall ankomme, wo ich hin will

93
00:37:07,170 --> 00:37:12,210
Wenn ich mal 100 Kilometer fahr, das kommt 1-2 Mal im Jahr vielleicht vor

94
00:37:12,210 --> 00:37:16,170
Alter, Vodafone, come on

95
00:37:16,170 --> 00:37:17,590
Was ist denn hier los?

96
00:37:27,150 --> 00:37:27,910
Guckt's euch an

97
00:37:27,910 --> 00:37:42,460
Beste Programmiersprache für Microservices, das ist tatsächlich eine gute Frage

98
00:37:42,460 --> 00:37:44,560
Der Sache können wir uns kurz widmen

99
00:37:44,560 --> 00:37:46,180
Bis Vodafone...

100
00:37:46,180 --> 00:37:48,000
Ich hoffe, ihr hört mich noch leckfrei, ja?

101
00:37:48,000 --> 00:37:48,640
Ich seh's schon, Mann!

102
00:37:48,660 --> 00:37:50,240
Mauszeiger ist nicht ganz leckfrei

103
00:37:50,240 --> 00:37:53,280
Aber ich hoffe, ihr hört mich noch leckfrei, wenn's ein bisschen buffert

104
00:37:53,280 --> 00:37:55,040
Und bis die Frames alle wieder in Ordnung sind

105
00:37:55,040 --> 00:37:57,840
Ah, ah, ah, aha, aha

106
00:37:57,840 --> 00:37:59,000
Okay, ich sag noch was zu

107
00:37:59,000 --> 00:38:01,720
Also, beste Programmiersprache für Microservices

108
00:38:01,720 --> 00:38:06,440
Natürlich ist das, wie in vielen Fällen, das die einzig beste Sprache

109
00:38:06,440 --> 00:38:07,540
Gibt's natürlich nicht

110
00:38:07,540 --> 00:38:08,700
Logisch

111
00:38:08,700 --> 00:38:12,540
Das hängt davon ab, was du machen willst

112
00:38:12,540 --> 00:38:14,400
Und was du kannst

113
00:38:14,400 --> 00:38:16,760
Also, wenn du jetzt, sagen wir mal

114
00:38:16,760 --> 00:38:18,640
Na, guck mal

115
00:38:18,660 --> 00:38:20,080
Okay, was du kannst, vielleicht nicht

116
00:38:20,080 --> 00:38:23,480
Weil, kannst du nur Kobol, ist Kobol vielleicht keine so gute Idee

117
00:38:23,480 --> 00:38:25,540
Aber es ist eine Kombination aus

118
00:38:25,540 --> 00:38:27,420
Was kannst du gut, beziehungsweise

119
00:38:27,420 --> 00:38:28,600
Wenn du's mit mehreren Leuten machst

120
00:38:28,600 --> 00:38:29,600
Was kann das Team gut

121
00:38:29,600 --> 00:38:31,480
Und was wollt ihr machen

122
00:38:31,480 --> 00:38:36,140
Das, was wollt ihr machen, kann tatsächlich

123
00:38:36,140 --> 00:38:39,780
Ja, schon ein bisschen Ausschlag geben

124
00:38:39,780 --> 00:38:41,160
Ja, wenn ihr irgendwelche

125
00:38:41,160 --> 00:38:43,240
Machine Learning Dinger machen wollt

126
00:38:43,240 --> 00:38:45,800
Und feststellt, die besten Frameworks

127
00:38:45,800 --> 00:38:46,680
Gibt's für Python

128
00:38:46,680 --> 00:38:48,620
Oder die besten Frameworks gibt's da und dafür

129
00:38:48,620 --> 00:38:50,060
Oder ihr wollt irgendwelche

130
00:38:51,060 --> 00:38:52,400
Java-Libraries verwenden

131
00:38:52,400 --> 00:38:53,800
Keine Ahnung, dann ist es vielleicht sinnvoll

132
00:38:53,800 --> 00:38:54,600
Das in Java zu machen

133
00:38:54,600 --> 00:38:56,300
Was sind, was sind, also

134
00:38:56,300 --> 00:38:59,440
Also, wenn's jetzt, wenn's jetzt egal ist, ja

135
00:38:59,440 --> 00:39:01,140
Also, ich kann dir sagen, was ich machen würde

136
00:39:01,140 --> 00:39:03,280
Ganz ehrlich, ich würde meine Microservices

137
00:39:03,280 --> 00:39:05,900
Genauso in .NET programmieren, wie das meiste andere auch

138
00:39:05,900 --> 00:39:07,560
Wenn ich Sachen nicht in .NET

139
00:39:07,560 --> 00:39:09,600
Programmiere, dann zum größten Teil nur, weil's wirklich

140
00:39:09,600 --> 00:39:11,220
Triftige Gründe gibt

141
00:39:11,220 --> 00:39:15,110
So, war ich jetzt gemutet

142
00:39:15,110 --> 00:39:16,790
Oder musst du, musst du dir hören, wie ich

143
00:39:16,790 --> 00:39:18,150
Lesen musste

144
00:39:18,150 --> 00:39:21,390
Weiß nicht, ob man's gehört hat

145
00:39:21,390 --> 00:39:23,650
Manchmal ist mein Muten ja nicht so hundertprozentig gemutet

146
00:39:24,130 --> 00:39:25,910
Also

147
00:39:25,910 --> 00:39:28,150
Ähm, ich würde wahrscheinlich

148
00:39:28,150 --> 00:39:29,850
Die meisten Microservices in .NET machen

149
00:39:29,850 --> 00:39:31,910
Wenn ich was nicht in .NET mache, dann ist es halt

150
00:39:31,910 --> 00:39:33,310
Weil sich was anderes besser eignet

151
00:39:33,310 --> 00:39:34,470
Zum Beispiel

152
00:39:34,470 --> 00:39:38,110
Wenn's halt irgendwas Frontend-mäßiges ist, dann JavaScript

153
00:39:38,110 --> 00:39:40,070
Ich bin kein großer Fan

154
00:39:40,070 --> 00:39:42,130
Von Blazor, du könntest da theoretisch

155
00:39:42,130 --> 00:39:43,610
Auch Blazor

156
00:39:43,610 --> 00:39:46,210
Sachen mit C-Sharp und .NET

157
00:39:46,210 --> 00:39:47,250
Für's Frontend machen

158
00:39:47,250 --> 00:39:49,970
Aber im Endeffekt muss ich ehrlich sagen, ich bin kein

159
00:39:49,970 --> 00:39:50,970
Großer Blazor-Fan

160
00:39:50,970 --> 00:39:53,750
Gerade wenn die Leute dann anfangen, sowas noch mit

161
00:39:54,130 --> 00:39:55,450
.NET zu kombinieren oder so

162
00:39:55,450 --> 00:39:56,450
Da ist bei mir komplett vorbei

163
00:39:56,450 --> 00:39:58,510
Ich find Maui-Kacke und ich find Blazor

164
00:39:58,510 --> 00:40:00,510
Auch nicht so geil

165
00:40:00,510 --> 00:40:01,510
Also da würd ich immer

166
00:40:01,510 --> 00:40:04,090
Frontend, immer JavaScript

167
00:40:04,090 --> 00:40:06,150
Oder dann ansonsten, je nachdem, was man machen will

168
00:40:06,150 --> 00:40:08,670
Letztens hab ich beispielsweise mal geguckt

169
00:40:08,670 --> 00:40:12,410
Nach ner kleinen, ähm

170
00:40:12,410 --> 00:40:13,410
Search-Engine

171
00:40:13,410 --> 00:40:14,410
Für Volltext-Suche

172
00:40:14,410 --> 00:40:15,690
Da hab ich was in Rust gefunden

173
00:40:15,690 --> 00:40:16,790
Da würd's sich vielleicht anbieten

174
00:40:16,790 --> 00:40:19,090
Zumindest so eine kleine Schnittstelle zu machen

175
00:40:19,090 --> 00:40:20,090
Mit äh

176
00:40:20,090 --> 00:40:21,910
Mit irgendeiner C-API in Rust

177
00:40:21,910 --> 00:40:22,910
Oder wo wir mal was mit Webmask machen können

178
00:40:22,910 --> 00:40:23,910
Oder wo wir mal was mit Webmask machen können

179
00:40:23,910 --> 00:40:25,070
Oder wo wir mal was mit Web-RTC gemacht haben

180
00:40:25,070 --> 00:40:26,490
Da haben wir beispielsweise

181
00:40:26,490 --> 00:40:28,830
Diesen Web-RTC-Teil in Go gemacht

182
00:40:28,830 --> 00:40:32,450
Also manchmal macht's schon Sinn

183
00:40:32,450 --> 00:40:33,590
Sich halt anzugucken

184
00:40:33,590 --> 00:40:35,390
Was ist denn so der Kern von dem, was man braucht

185
00:40:35,390 --> 00:40:36,990
Und wo gibt's die besten Libraries

186
00:40:36,990 --> 00:40:38,510
Und den besten Support

187
00:40:38,510 --> 00:40:40,030
Aber normalerweise, standardmäßig

188
00:40:40,030 --> 00:40:42,390
Ich würde mein Zeug immer in .NET machen

189
00:40:42,390 --> 00:40:44,350
Und gerade wenn du Azure verwendest

190
00:40:44,350 --> 00:40:46,910
Ist .NET natürlich nochmal doppelt gut

191
00:40:46,910 --> 00:40:51,830
Weil wenn du Functions oder halt ähm

192
00:40:51,830 --> 00:40:52,750
Cloud Native, wie man so schön nennt, äh sagen würde

193
00:40:52,750 --> 00:40:53,750
Cloud Native, wie man so schön nennt, äh sagen würde

194
00:40:53,750 --> 00:40:53,870
Cloud Native, wie man so schön nennt, äh sagen würde

195
00:40:53,910 --> 00:40:55,910
Sag mal Vodafone, meine Güte

196
00:40:55,910 --> 00:40:57,470
Also wenn du halt Sachen verwendest

197
00:40:57,470 --> 00:40:58,890
Nicht so die klassische Sache mit

198
00:40:58,890 --> 00:40:59,930
Ich mach ne VM

199
00:40:59,930 --> 00:41:01,730
Und da installier ich mir Linux drin

200
00:41:01,730 --> 00:41:03,450
Und lass mein Zeug drauflaufen

201
00:41:03,450 --> 00:41:04,570
Sondern du willst dann vielleicht

202
00:41:04,570 --> 00:41:06,990
Tatsächlich Azure Functions oder so verwenden

203
00:41:06,990 --> 00:41:08,670
Da ist .NET auch nochmal cool

204
00:41:08,670 --> 00:41:11,070
Weil .NET äh sehr gut unterstützt wird in Azure

205
00:41:11,070 --> 00:41:13,790
.NET ist tatsächlich

206
00:41:13,790 --> 00:41:15,670
.NET Unterstützung ist tatsächlich

207
00:41:15,670 --> 00:41:17,950
Bei anderen Cloud-Plattformen nicht so verbreitet

208
00:41:17,950 --> 00:41:20,290
Ich muss sagen, ich hab noch nie AWS Lambda

209
00:41:20,290 --> 00:41:22,210
Und ich hab auch noch nicht äh

210
00:41:22,210 --> 00:41:23,750
Äh GCP Functions

211
00:41:23,750 --> 00:41:25,070
Ich weiß gar nicht, wie der Krempel heißt

212
00:41:25,070 --> 00:41:26,150
Wie heißt denn der Kram bei Google?

213
00:41:27,310 --> 00:41:28,690
Wie heißt das Gegenstück von Lambda

214
00:41:28,690 --> 00:41:29,870
Von ähm

215
00:41:29,870 --> 00:41:34,510
Von Azure Functions und Amazon Lambda

216
00:41:34,510 --> 00:41:36,890
Functions Zeug, wie heißt denn das bei Google?

217
00:41:45,550 --> 00:41:46,350
Cloud Functions

218
00:41:46,350 --> 00:41:49,290
Ich weiß gar nicht, wer davon .NET unterstützt

219
00:41:49,290 --> 00:41:50,630
Aber wahrscheinlich die wenigsten

220
00:41:50,630 --> 00:41:54,560
So

221
00:41:54,560 --> 00:41:57,060
Das ist meine Antwort dazu

222
00:41:57,060 --> 00:41:59,360
Mehr kann ich dir nicht sagen, weil ich nicht weiß, was du machen willst

223
00:41:59,360 --> 00:42:12,290
C++ ist für das meiste nicht richtig gut

224
00:42:12,290 --> 00:42:14,150
Auch ich weiß, das ist T-Bait

225
00:42:14,150 --> 00:42:15,990
Ähm

226
00:42:15,990 --> 00:42:17,990
Es gibt Sachen, da glänzt C++

227
00:42:17,990 --> 00:42:18,990
Aber

228
00:42:18,990 --> 00:42:21,990
Hauptsächlich, weil es keine sinnige Alternative zu gibt

229
00:42:21,990 --> 00:42:24,490
Alter Mensch, wo davon, das kann doch jetzt nicht sein

230
00:42:24,490 --> 00:42:30,950
Kriegt euch doch mal ein

231
00:42:30,950 --> 00:42:32,950
Naja, es gibt schon ein schlechter oder besser

232
00:42:32,950 --> 00:42:35,950
Es hängt halt entscheidend davon ab, was man kann und was man nicht kann

233
00:42:35,950 --> 00:42:37,950
Gemutet, ich bin nicht gemutet

234
00:42:37,950 --> 00:42:41,950
Hm, achso, du meinst hier, wo ich niesen musste, achso

235
00:42:41,950 --> 00:42:44,950
Ja, das ist das Problem, wenn man so weit mit dem Chat hintendran ist

236
00:42:44,950 --> 00:42:48,950
Kannst du nicht Leitung switchen? Ich hab nur noch eine Internetverbindung

237
00:42:48,950 --> 00:42:51,950
Ich hab die zweite Internetverbindung abbestellt, schon vor drei, vier Jahren oder so

238
00:42:51,950 --> 00:42:53,950
Ist schon, ja, vielleicht zwei, drei Jahren

239
00:42:53,950 --> 00:42:56,950
Schon eine Weile her, weil es einfach sinnlos war, viel zu teuer

240
00:42:56,950 --> 00:43:00,950
An sich hätte ich Lust, nächstes Jahr eine Ausbildung zum Physi zu machen

241
00:43:00,950 --> 00:43:04,950
Jedoch klingen viele Stellenanzeigen in meiner Gegend nur nach First-Level-Support

242
00:43:04,950 --> 00:43:06,950
Was gibt's da so für Jobaussichten?

243
00:43:06,950 --> 00:43:10,950
First-Level-Support will man nicht machen, First-Level-Support ist einfach Rotz

244
00:43:10,950 --> 00:43:12,950
Meiner Einsicht nach

245
00:43:12,950 --> 00:43:15,950
Für mich, ja, ich sag nicht allgemein

246
00:43:15,950 --> 00:43:17,950
Also ich würde kein First-Level-Support machen

247
00:43:17,950 --> 00:43:21,950
Und für First-Level-Support brauchst du beim besten Willen auch keine Physis

248
00:43:21,950 --> 00:43:24,950
Für First-Level-Support kannst du einfach irgendwelche

249
00:43:24,950 --> 00:43:27,950
Das war beispielsweise, wo ich damals noch beim Provider gearbeitet hab

250
00:43:27,950 --> 00:43:30,950
Unser First-Level war ein Team aus drei Mädels

251
00:43:30,950 --> 00:43:35,950
Die alle super, wie nennt man das so, Social Telekommunikations-Skills hatten

252
00:43:35,950 --> 00:43:37,950
Aber halt von Technik, keine Ahnung

253
00:43:37,950 --> 00:43:41,950
Und die waren halt immer super beliebt, auch bei den Leuten, die angerufen haben

254
00:43:41,950 --> 00:43:44,950
Weil es waren Mädels und die konnten gut telefonieren, aber

255
00:43:44,950 --> 00:43:46,950
Ähm

256
00:43:46,950 --> 00:43:48,950
Die haben nur die netten Sachen gemacht

257
00:43:48,950 --> 00:43:50,950
Und wenn's dann nicht ging

258
00:43:50,950 --> 00:43:54,950
Haben sie die Leute durchgestellt oder weitergeleitet und irgendwas weitergeschickt

259
00:43:54,950 --> 00:43:59,800
Und dann haben die den Anschluss gekriegt

260
00:43:59,800 --> 00:44:01,800
Alter, so kann ich doch nicht streamen, Vodafone

261
00:44:01,800 --> 00:44:03,800
Was ist denn los mit euch?

262
00:44:03,800 --> 00:44:09,920
Ich mach mal kurz nen Speedtest vom zweiten

263
00:44:09,920 --> 00:44:11,920
Speedtest

264
00:44:11,920 --> 00:44:13,920
Ich mach mal kurz nen Speedtest vom zweiten Browser aus

265
00:44:13,920 --> 00:44:15,920
Schauen wir mal

266
00:44:17,920 --> 00:44:24,560
Ja, los

267
00:44:24,560 --> 00:44:26,560
Auf Speedtest, gib Gas!

268
00:44:26,560 --> 00:44:27,560
Auf Speedtest, gib Gas!

269
00:44:27,560 --> 00:44:29,560
Gib Gas!

270
00:44:29,560 --> 00:44:30,560
Hm

271
00:44:30,560 --> 00:44:32,560
400 MBit Download Speedtest

272
00:44:32,560 --> 00:44:34,560
Super, mal Upload checken

273
00:44:34,560 --> 00:44:36,560
Upload ist ja das eigentliche Problem

274
00:44:38,560 --> 00:44:41,560
406 MBit Upload sollte eigentlich reichen, oder?

275
00:44:41,560 --> 00:44:43,560
Äh, 406 MBit Download

276
00:44:43,560 --> 00:44:45,560
Sollte eigentlich reichen für das bisschen

277
00:44:45,560 --> 00:44:47,560
So, Upload, 40 MBit, auch gut

278
00:44:47,560 --> 00:44:51,560
Also, es scheint ein Problem zu sein auf der Route

279
00:44:51,560 --> 00:44:53,560
Zu den Twitch-Servern

280
00:44:53,560 --> 00:44:56,560
Also was ich probieren könnte Chat, also wisst ihr was wir machen?

281
00:44:56,560 --> 00:44:59,560
Ich starte jetzt mal das Battlefield-Video und wir gucken, ob es laggt

282
00:44:59,560 --> 00:45:01,560
Ich starte jetzt mal das Battlefield-Video und wir gucken, ob es laggt

283
00:45:01,560 --> 00:45:07,560
Wenn es laggt, mache ich den Stream kurz aus und wechsel den Twitch-Server

284
00:45:07,560 --> 00:45:10,560
Dann gehe ich auf den Twitch-Server in Barcelona oder so

285
00:45:10,560 --> 00:45:11,560
Dann gehe ich auf den Twitch-Server in Barcelona oder so

286
00:45:11,560 --> 00:45:13,560
und hoffe dann, also Amsterdam oder wo auch immer

287
00:45:13,560 --> 00:45:15,560
und hoffe, dass es funktioniert, ok?

288
00:45:15,560 --> 00:45:17,560
aber Leute, es wird ruckeln

289
00:45:17,560 --> 00:45:19,560
30% Dropped Frames

290
00:45:19,560 --> 00:45:25,640
Hat das erst angefangen zu laggen, als ich hier was ein...

291
00:45:25,640 --> 00:45:27,640
Leute, wir testen mal kurz was

292
00:45:37,060 --> 00:45:39,600
Jetzt habe ich keine Frametrops, aber jetzt sieht man ja auch nichts.

293
00:45:40,200 --> 00:45:41,340
Doch, ich habe immer noch Frametrops.

294
00:45:41,780 --> 00:45:42,080
Keckel.

295
00:45:42,400 --> 00:45:46,520
Leute, ich habe immer noch Frametrops mit einem komplett schwarzen Bildschirm.

296
00:45:47,820 --> 00:45:50,100
Also daran kann es jetzt ja schon mal nicht liegen.

297
00:45:52,000 --> 00:45:53,880
Ja, man merkt es bei den Mausbewegungen, gell?

298
00:45:54,300 --> 00:45:55,620
Sage ich, ja, ja, ja.

299
00:45:59,640 --> 00:46:01,800
Mensch, Vodafone, was ein Crap, Alter, wieder.

300
00:46:01,880 --> 00:46:02,540
Was ist das hier?

301
00:46:16,400 --> 00:46:18,380
Nee, das stimmt nicht.

302
00:46:18,860 --> 00:46:19,680
Das stimmt nicht.

303
00:46:19,680 --> 00:46:26,280
Nur weil Docker in Go programmiert ist, hat es doch absolut keinen Einfluss drauf,

304
00:46:26,360 --> 00:46:28,720
auf das, was du in deinem Container laufen lässt.

305
00:46:30,280 --> 00:46:31,140
Nee, nee.

306
00:46:32,040 --> 00:46:33,980
Sven, lass dir da nichts erzählen.

307
00:46:34,880 --> 00:46:37,380
Du kannst in Containern laufen lassen, was du willst.

308
00:46:37,500 --> 00:46:41,620
.NET-Anwendungen laufen auch wunderbar in Containern.

309
00:46:41,680 --> 00:46:43,460
Alles läuft wunderbar in Containern.

310
00:46:44,360 --> 00:46:46,120
Solange es keine Kerneldreiber braucht.

311
00:46:50,680 --> 00:46:52,800
Wo ich tatsächlich immer ein bisschen Angst habe, ist,

312
00:46:52,860 --> 00:46:53,040
wie Docker...

313
00:46:53,100 --> 00:46:54,120
...Docker die Leistung regelt.

314
00:46:54,580 --> 00:46:54,800
Warum?

315
00:46:57,880 --> 00:46:59,540
Docker frisst keine Performance.

316
00:47:00,360 --> 00:47:04,480
Du machst das beruflich?

317
00:47:05,280 --> 00:47:05,900
Ich auch.

318
00:47:08,740 --> 00:47:09,600
Und jetzt?

319
00:47:11,480 --> 00:47:12,100
Und nun?

320
00:47:14,860 --> 00:47:17,720
Also, da musst du dir keine Gedanken machen.

321
00:47:18,360 --> 00:47:20,000
Docker frisst keine Performance.

322
00:47:20,440 --> 00:47:23,100
Ich weiß, jetzt kommen die Leute und sagen, ja, theoretisch gesehen schon.

323
00:47:23,600 --> 00:47:23,820
Nein.

324
00:47:24,840 --> 00:47:25,520
Docker ist...

325
00:47:25,520 --> 00:47:35,100
Also, rechnerisch, vielleicht, wenn du dann irgendwie super krasse Benchmarks machst für fünf Stunden

326
00:47:35,100 --> 00:47:39,880
und das vergleicht, vielleicht, ja, vielleicht siehst du dann was.

327
00:47:40,220 --> 00:47:40,640
Keine Ahnung.

328
00:47:40,760 --> 00:47:45,520
Aber Docker macht in der Regel keine Performance-Probleme,

329
00:47:46,200 --> 00:47:50,280
weil ein Docker-Container, beziehungsweise die Anwendung, die du in einem Container laufen lässt,

330
00:47:50,280 --> 00:47:51,640
ein ganz normaler...

331
00:47:51,640 --> 00:47:53,400
50% Packet-Loss, Alter.

332
00:47:54,060 --> 00:47:55,280
Weil dein Docker-Container...

333
00:47:55,520 --> 00:47:59,880
Die Leute stellen sich das immer so ein bisschen als VM vor.

334
00:47:59,940 --> 00:48:00,640
Das ist es nicht.

335
00:48:01,900 --> 00:48:05,940
Ein Prozess, den du startest in einem Docker-Container, ist ein ganz normaler Prozess.

336
00:48:06,420 --> 00:48:09,160
Also, wenn du jetzt deine Anwendung auf dem Linux-System startest,

337
00:48:09,560 --> 00:48:11,520
oder die Anwendung in einem Docker-Container startest,

338
00:48:11,580 --> 00:48:15,280
das macht quasi keinen Unterschied.

339
00:48:15,900 --> 00:48:17,680
Das ist ein ganz normaler Prozess.

340
00:48:18,500 --> 00:48:20,240
Wie jeder andere Prozess auch.

341
00:48:20,720 --> 00:48:24,320
Der einzige Unterschied ist, dass noch ein paar zusätzliche Kernelfunktionen benutzt werden,

342
00:48:24,320 --> 00:48:25,320
nämlich sowas wie...

343
00:48:25,520 --> 00:48:26,660
Keygroups und Namespaces,

344
00:48:27,100 --> 00:48:29,920
dass du beispielsweise der Anwendung, die im Container läuft,

345
00:48:30,460 --> 00:48:32,440
andere IPs vorgaukeln kannst,

346
00:48:32,520 --> 00:48:34,500
oder andere Hostnamen vorgaukeln kannst,

347
00:48:35,720 --> 00:48:37,660
ein anderes Filesystem vorgaukeln kannst,

348
00:48:37,720 --> 00:48:38,460
und solche Geschichten.

349
00:48:39,100 --> 00:48:40,520
Aber die Performance...

350
00:48:41,440 --> 00:48:44,400
Also, wir reden hier von CPU und sowas, ja?

351
00:48:44,780 --> 00:48:46,720
Nicht zwangsläufig von Netzwerk und I.O.

352
00:48:47,500 --> 00:48:50,020
Macht keinen Unterschied in Docker.

353
00:48:51,120 --> 00:48:52,700
Und auch in der VM,

354
00:48:53,040 --> 00:48:55,300
weil die Leute ja da immer ein bisschen Bedenken vorhaben,

355
00:48:55,360 --> 00:48:55,500
ah,

356
00:48:55,520 --> 00:48:59,520
Vm-Docker, also eine VM hat, was CPU-Leistung angeht,

357
00:48:59,600 --> 00:49:00,940
nahezu keinen Overhead.

358
00:49:01,380 --> 00:49:03,080
Ihr könnt einen Benchmark laufen lassen,

359
00:49:03,200 --> 00:49:06,100
lasst einen Prime95-Benchmark laufen in einer VM,

360
00:49:06,860 --> 00:49:08,220
versus auf eurem Host.

361
00:49:08,320 --> 00:49:10,940
Ihr werdet feststellen, die Werte sind nahezu identisch.

362
00:49:11,740 --> 00:49:13,560
Was bei der VM das Problem ist,

363
00:49:13,620 --> 00:49:15,040
beziehungsweise warum man sagt,

364
00:49:15,100 --> 00:49:16,320
VMs brauchen mehr Ressourcen,

365
00:49:16,780 --> 00:49:19,020
ist, VMs brauchen deutlich mehr RAM.

366
00:49:20,660 --> 00:49:21,180
Warum?

367
00:49:21,700 --> 00:49:25,120
Naja, weil ein komplett eigenes System gestartet wird im Hintergrund.

368
00:49:25,120 --> 00:49:30,120
Also, VMs brauchen mehr RAM und mehr Disk, im Endeffekt.

369
00:49:30,200 --> 00:49:33,200
Weil Disk, glaube ich, zu vernachlässigen ist, aber RAM.

370
00:49:35,000 --> 00:49:37,000
VMs brauchen einfach mehr RAM,

371
00:49:37,060 --> 00:49:40,060
weil ein komplett eigenes System mit eigenem Kernel,

372
00:49:40,140 --> 00:49:42,140
mit eigenen Live-Suits, alles hochgefahren werden.

373
00:49:42,200 --> 00:49:44,200
Du kannst natürlich ein Minimalsystem nehmen,

374
00:49:44,280 --> 00:49:47,280
dann kommst du vielleicht, äh, tja,

375
00:49:48,540 --> 00:49:50,540
mit minimalstem Overhead aus,

376
00:49:50,620 --> 00:49:53,620
aber eine VM hat immer, was RAM angeht,

377
00:49:53,700 --> 00:49:54,900
einen gewissen Overhead.

378
00:49:54,900 --> 00:49:56,900
Um den du nicht drumherum kommst.

379
00:49:56,980 --> 00:49:58,980
Den hat ein Container nicht.

380
00:49:59,060 --> 00:50:01,060
CPU-technisch, Performance,

381
00:50:01,140 --> 00:50:13,110
CPU-Performance-technisch ist es überhaupt kein Unterschied.

382
00:50:13,190 --> 00:50:16,190
Also, das stimmt, er hat schon recht.

383
00:50:16,950 --> 00:50:19,950
Docker hat im Prinzip deutlich weniger Overhead als eine VM,

384
00:50:20,030 --> 00:50:21,530
allerdings nicht bei der CPU.

385
00:50:21,610 --> 00:50:23,450
Also, nicht unbedingt zwangsläufig bei dem,

386
00:50:23,530 --> 00:50:25,530
wo man an Performance denkt.

387
00:50:25,610 --> 00:50:28,610
Also, die CPU-Performance zwischen einer VM,

388
00:50:28,690 --> 00:50:30,610
zwischen einem Host

389
00:50:30,690 --> 00:50:33,830
und zwischen dem gleichen Ding im Docker-Container,

390
00:50:33,830 --> 00:50:35,130
ist nahezu identisch.

391
00:50:35,210 --> 00:50:39,210
Also, die CPU-Leistung ist mehr oder weniger das Gleiche überall.

392
00:50:39,290 --> 00:50:42,290
RAM-Auslastung ist ein bisschen das Problem.

393
00:50:42,370 --> 00:50:45,370
Und wenn's dann um, ähm, I.O. geht und Netzwerk,

394
00:50:45,450 --> 00:50:47,450
da sieht das noch mal anders aus.

395
00:50:47,530 --> 00:50:49,530
Da muss man eh gucken,

396
00:50:49,630 --> 00:50:51,630
gerade wie man die Sachen in einer VM anbindet.

397
00:50:51,710 --> 00:50:54,710
Ja, gerade I.O.-Performance ist in einer VM nicht ohne.

398
00:50:54,790 --> 00:50:58,790
Ähm, das kann schon eine ganze Ecke langsamer sein,

399
00:50:58,870 --> 00:51:00,870
je nachdem, was man da als Virtualisierung nimmt

400
00:51:00,950 --> 00:51:02,910
und was man für Anforderungen hat.

401
00:51:02,910 --> 00:51:03,910
Ja.

402
00:51:03,990 --> 00:51:07,790
Aber, also, bei Docker-Container musst du dir eigentlich keine Gedanken machen.

403
00:51:07,870 --> 00:51:10,250
Also, wenn du einen Prozess in einem Docker-Container startest,

404
00:51:10,330 --> 00:51:14,530
der hat die gleiche Performance wie auf dem Host,

405
00:51:14,610 --> 00:51:18,870
es ist ja auch ein ganz normaler Prozess auf deinem normalen Host.

406
00:51:18,950 --> 00:51:20,830
Deswegen kannst du ja in Docker-Container beispielsweise

407
00:51:20,910 --> 00:51:22,330
auch keine Kernel-Module nachladen

408
00:51:22,410 --> 00:51:25,210
oder Kernel-Module verwenden, die dein Host nicht verwendet oder so was.

409
00:51:25,290 --> 00:51:27,110
Es ist der gleiche Kernel wie dein Host.

410
00:51:27,210 --> 00:51:29,110
Das ist keine VM in dem Sinn.

411
00:51:29,210 --> 00:51:32,290
Also, da hast du performancetechnisch keine Unterschiede.

412
00:51:32,290 --> 00:51:37,050
Es ist sogar besser, du kannst deine Docker-Container deutlich einfacher,

413
00:51:37,130 --> 00:51:43,450
wenn du es denn bräuchtest, ähm, wir nennen das mal, ähm, nicht rate-limiten,

414
00:51:43,530 --> 00:51:48,590
na, resource groups, äh, wie heißt denn das?

415
00:51:48,670 --> 00:51:51,130
Also, Ressourcen besser managen.

416
00:51:51,210 --> 00:51:53,670
Du kannst zum Beispiel relativ einfach sagen,

417
00:51:53,750 --> 00:52:06,020
deinem Container benutzt maximal zwei CPU-Kerne oder so was.

418
00:52:06,120 --> 00:52:10,220
Okay, ich glaube, Leute, ich glaube, ich muss wirklich den Twitch-Server wechseln.

419
00:52:10,320 --> 00:52:17,220
Das klappt hier nicht. Wo, da vorn?

420
00:52:17,300 --> 00:52:18,640
Äh, wie war die Probefahrt?

421
00:52:18,720 --> 00:52:20,520
Also, ich war heute Probefahrt und ich bin begeistert.

422
00:52:20,600 --> 00:52:22,140
Ich finde das Auto wirklich nice.

423
00:52:22,220 --> 00:52:24,420
Ich muss jetzt bloß gucken, ob das dieses Jahr noch klappt.

424
00:52:24,520 --> 00:52:25,520
Möglich ist es.

425
00:52:25,600 --> 00:52:29,020
Ich habe heute auch mal gefragt, wie es mit Vorführ-Autos aussieht.

426
00:52:29,100 --> 00:52:31,520
Und wie gesagt, wenn es irgendwie hinhaut,

427
00:52:31,600 --> 00:52:34,020
dass ich es unter 30.000 Euro bekomme noch dieses Jahr,

428
00:52:34,100 --> 00:52:45,420
dann kaufe ich es, ansonsten nicht.

429
00:52:45,500 --> 00:52:47,800
Was es außer First-Level-Support gibt als Feezy,

430
00:52:47,880 --> 00:52:51,040
alles andere außer First-Level-Support.

431
00:52:51,120 --> 00:52:53,840
Alles. Du kannst alles machen als Feezy.

432
00:52:53,960 --> 00:52:58,250
Wenn du dich damit auskennst, wohlgemerkt.

433
00:52:58,330 --> 00:53:02,330
Alles. Wirklich, ich kann dir nicht sagen, was alles ist,

434
00:53:02,410 --> 00:53:05,410
weil alles ist alles und alles ist sehr viel.

435
00:53:05,490 --> 00:53:07,490
Du kannst alles Mögliche machen.

436
00:53:07,570 --> 00:53:10,330
Du musst dich halt in den Bereichen ein bisschen auskennen.

437
00:53:10,410 --> 00:53:13,330
Es bringt dir nichts, wenn du eine Feezy-Ausbildung gemacht hast

438
00:53:13,410 --> 00:53:26,840
und am Ende dich bewirbst als Cloud-Architekt und keine Ahnung davon hast.

439
00:53:26,920 --> 00:53:34,310
Mario, danke für den Sub.

440
00:53:34,390 --> 00:53:36,810
Okay, wenn wir von Windows-Containern reden,

441
00:53:36,890 --> 00:53:38,390
ist das noch mal was anderes.

442
00:53:38,470 --> 00:53:40,270
Windows-Container sind ja auch keine Container,

443
00:53:40,390 --> 00:53:42,230
sondern Hyper-V4Ms.

444
00:53:42,310 --> 00:53:45,350
Zumindest ist das mein letzter Stand, korrigiert mich, wenn ich falsch liege,

445
00:53:45,430 --> 00:53:48,150
aber ich glaube, Windows-Container sind Hyper-V4Ms.

446
00:53:48,230 --> 00:53:52,310
Windows-Container ist also quasi eigentlich kompletter ...

447
00:53:52,390 --> 00:53:55,610
G-Bait, der wahrscheinlich einfach nur da ist,

448
00:53:55,690 --> 00:53:57,890
dass Leute Docker unter Windows ausfüllen können.

449
00:53:57,970 --> 00:53:59,890
You've got G-Baited.

450
00:53:59,970 --> 00:54:02,190
Also Docker unter Windows ist so eins der bescheuerten Sachen,

451
00:54:02,270 --> 00:54:06,830
die man machen kann.

452
00:54:06,910 --> 00:54:12,790
Ja, da bin ich ja mal gespannt, ja.

453
00:54:12,870 --> 00:54:15,070
Nein, muss nicht. Muss gar nicht.

454
00:54:15,150 --> 00:54:16,410
Es muss im Prozess nichts übersetzen.

455
00:54:16,530 --> 00:54:19,990
Wenn du einen Prozess startest im Container oder nicht im Container,

456
00:54:20,070 --> 00:54:22,070
ist exakt das Gleiche.

457
00:54:22,150 --> 00:54:24,070
Es macht keinen Unterschied, ob du ...

458
00:54:24,150 --> 00:54:26,790
Also, wenn du auf die Konsole gehst unter Linux, ja,

459
00:54:26,870 --> 00:54:33,870
und du sagst hier ausführen, cackle.bin,

460
00:54:33,950 --> 00:54:36,370
dann ist es egal, ob du cackle.bin so startest

461
00:54:36,450 --> 00:54:41,570
oder ob du sagst docker run cackle container.

462
00:54:41,650 --> 00:54:44,610
Das macht erst einmal keinen Unterschied.

463
00:54:44,690 --> 00:54:46,290
Es ist ein bisschen ...

464
00:54:46,330 --> 00:54:49,710
Die Möglichkeit vorhanden, das ein bisschen besser zu sandboxen.

465
00:54:49,790 --> 00:54:57,230
Aber es ist nicht so, als wäre da irgendwie großartig was drumherum.

466
00:54:57,310 --> 00:55:04,760
Das ist ein ganz normaler Prozess, so wie jeder andere auch.

467
00:55:04,840 --> 00:55:08,340
Ich will es jetzt nicht ausschließen, dass es nicht doch irgendwie,

468
00:55:08,420 --> 00:55:11,020
wenn man es drauf anlegt, messbar ist.

469
00:55:11,100 --> 00:55:15,340
Ich meine, theoretisch hast du natürlich so die Möglichkeit,

470
00:55:15,420 --> 00:55:20,140
mit C-Groups und so was, Ressourcenlimitierung vorzunehmen.

471
00:55:20,140 --> 00:55:24,220
Heißt, da gibt es irgendwelche API-Funktionen, um das machen zu können.

472
00:55:24,300 --> 00:55:26,060
Das heißt, wenn man das machen kann, hat es vielleicht,

473
00:55:26,140 --> 00:55:30,220
auch wenn man das nicht macht, irgendwie rein theoretische Performance einbußen.

474
00:55:30,300 --> 00:55:33,680
Aber ganz im Ernst, mich würde es wirklich wundern,

475
00:55:33,760 --> 00:55:37,100
wenn einer das benchmarkt, und wir reden, der müsste es wirklich benchmarken,

476
00:55:37,180 --> 00:55:42,100
da müsste irgendjemand, keine Ahnung, Prime95 auf 24 Kerne laufen lassen,

477
00:55:42,180 --> 00:55:44,180
in Docker und ohne Docker, mal für 24 Stunden,

478
00:55:44,260 --> 00:55:48,440
und dann am Ende gucken, was kommt raus, oder was man heutzutage nimmt.

479
00:55:48,520 --> 00:55:50,100
Ich weiß nicht, ob Prime95 schon angesagt hat.

480
00:55:50,180 --> 00:55:54,600
Und ja, vielleicht ist es in irgendeiner Art und Weise dann messbar,

481
00:55:54,680 --> 00:56:05,660
aber nicht, dass es irgendeine Relevanz hätte.

482
00:56:05,740 --> 00:56:09,920
Ja, gut, du hast ein Overhead, was Libraries und Images angeht.

483
00:56:10,000 --> 00:56:11,580
Ja, das ist okay, das ist was anderes.

484
00:56:11,660 --> 00:56:14,960
Aber nicht performancetechnisch, und ihm ging es ja hier hauptsächlich,

485
00:56:15,040 --> 00:56:18,160
dass er Bedenken hat wegen Performance im Container.

486
00:56:18,240 --> 00:56:26,670
Und mir geht es ja hier rein um Leistung, und das ist wurscht.

487
00:56:26,750 --> 00:56:30,830
Und ja, und ganz ehrlich, ja, das ganze Container-Zeug,

488
00:56:30,910 --> 00:56:32,670
und gerade auch, was Kubernetes angeht,

489
00:56:32,710 --> 00:56:35,430
und Docker angeht, und viele Cloud-Sachen sind in Go programmiert,

490
00:56:35,510 --> 00:56:37,050
aber das heißt bei weitem nicht,

491
00:56:37,130 --> 00:56:41,330
dass man Software in Containern am besten in Go programmiert.

492
00:56:41,430 --> 00:56:43,370
Überhaupt nicht, genau das Gegenteil.

493
00:56:43,470 --> 00:56:46,370
Mach dir überhaupt keine Gedanken darüber, dass das im Container läuft,

494
00:56:46,470 --> 00:56:48,550
sondern programmier das mit dem, was du am besten kannst,

495
00:56:48,630 --> 00:56:50,170
was dein Team am besten kann,

496
00:56:50,250 --> 00:56:52,870
und dann packst du es am Ende in den Container rein.

497
00:56:52,970 --> 00:56:56,170
Ich meine, gut, wenn man weiß, dass man das in der Cloud laufen lassen will,

498
00:56:56,250 --> 00:56:58,830
wenn man weiß, dass man das vielleicht mit irgendeinem Orchestrator

499
00:56:58,910 --> 00:57:01,750
oder was auch immer laufen will, oder als Microservices, ne,

500
00:57:01,750 --> 00:57:04,670
im Hinblick auf dessen sollte man das schon entwickeln,

501
00:57:04,750 --> 00:57:08,590
aber nicht die Programmiersprachenauswahl davon abhängig machen.

502
00:57:08,670 --> 00:57:12,870
Du kannst containerisierte Microservices in jeder Programmiersprache entwickeln.

503
00:57:12,950 --> 00:57:17,190
Wahrscheinlich sogar COBOL.

504
00:57:17,270 --> 00:57:34,990
So, hat sich das jetzt mal beruhigt? Alter, 65% Packageloss, Mann.

505
00:57:35,070 --> 00:57:41,040
Ja, das stimmt.

506
00:57:41,120 --> 00:57:44,500
Habe ich große Einbußen, wenn ich einen Webserver nativ im Container laufen lasse?

507
00:57:44,580 --> 00:57:46,420
Tja, das kommt drauf an.

508
00:57:46,500 --> 00:57:50,760
Also, wenn du rein die Performance meinst, du, was das Ding, äh, was weiß ich,

509
00:57:50,760 --> 00:57:53,720
U-Performance, sonst was, nein, hast du nicht.

510
00:57:53,800 --> 00:57:55,800
Du hast quasi keine Einbußen.

511
00:57:55,880 --> 00:57:58,420
Netzwerktechnisch musst du dir aber Gedanken machen.

512
00:57:58,520 --> 00:58:02,300
Also, wenn du wirklich, wenn du einen Webserver im Container laufen lässt,

513
00:58:02,380 --> 00:58:07,760
wo es wirklich richtig brummt, also, wir reden hier von, keine Ahnung, Gigabit-weise,

514
00:58:07,840 --> 00:58:09,640
also, wenn es da richtig abgeht,

515
00:58:09,720 --> 00:58:14,410
dann würde ich mir überlegen, wie ich das Netzwerk mache.

516
00:58:14,490 --> 00:58:20,360
Und zwar, kurz ein bisschen leiser machen.

517
00:58:20,440 --> 00:58:25,220
Und zwar würde ich dann mal überlegen, ob ich das wirklich

518
00:58:25,220 --> 00:58:27,220
mit diesem Standard-Docker-Proxy mache.

519
00:58:27,300 --> 00:58:30,180
Also, Docker-Proxy proxyt das ja standardmäßig.

520
00:58:31,840 --> 00:58:34,840
Es gibt aber verschiedene Möglichkeiten, wie man ein Docker-Netzwerk machen kann.

521
00:58:34,920 --> 00:58:36,720
Ja, du kannst auch direkt eine Netzwerkkarte verwenden

522
00:58:36,800 --> 00:58:38,840
oder direkt das Bridgen und Host.

523
00:58:38,920 --> 00:58:39,920
Das würde ich mir dann überlegen.

524
00:58:40,020 --> 00:58:45,380
Also, wenn du eine Netzwerkanwendung hast, die wirklich mega krass Traffic hat,

525
00:58:45,460 --> 00:58:48,340
dann würde ich es vielleicht nicht über das Standard-Docker-Networking

526
00:58:48,420 --> 00:58:49,340
mit dem Proxy machen.

527
00:58:49,420 --> 00:58:54,260
Aber ansonsten, was Performance angeht, hast du da keine.

528
00:58:54,260 --> 00:58:59,760
Du hast nicht nur keine großen Einbußen, du hast im Prinzip keine Einbußen.

529
00:58:59,840 --> 00:59:03,030
So, was sieht es denn jetzt aus?

530
00:59:03,110 --> 00:59:05,070
Okay, Leute, ich wechsle jetzt den Twitch-Server,

531
00:59:05,150 --> 00:59:07,810
dass wir uns heute noch das Battlefield-Video angucken können.

532
00:59:07,910 --> 00:59:10,230
Und dann hoffen wir, dass es funktioniert, weil ich kann auch nichts machen.

533
00:59:10,330 --> 00:59:14,610
Wenn Vodafone mir das sagt, sagt Vodafone halt.

534
00:59:14,690 --> 00:59:16,650
Ja, und das ist natürlich auch ein großer Vorteil.

535
00:59:16,730 --> 00:59:18,230
Da hat er schon recht.

536
00:59:18,330 --> 00:59:20,570
Da hat Zarex in dem Fall schon recht.

537
00:59:20,650 --> 00:59:24,190
Wenn du die Sachen so baust, dass sie unabhängig voneinander sind

538
00:59:24,270 --> 00:59:25,330
und unabhängig voneinander,

539
00:59:25,330 --> 00:59:27,130
wenn du sie gut containerisieren kannst,

540
00:59:27,210 --> 00:59:30,790
spricht das meistens dafür, dass sie nicht so, wie sagt man,

541
00:59:30,870 --> 00:59:34,910
nicht so tightly coupled, wie sagt man das?

542
00:59:34,990 --> 00:59:37,870
Also, dass sie nicht so eng miteinander verbunden sind,

543
00:59:37,950 --> 00:59:40,530
dass das eine quasi zwangsläufig darauf laufen muss,

544
00:59:40,630 --> 00:59:41,830
wo das andere läuft und so.

545
00:59:41,910 --> 00:59:45,710
Also, wenn du deine Anwendung ein bisschen entcoupled konstruiert hast

546
00:59:45,790 --> 00:59:47,710
und die sie gut containerisieren kannst,

547
00:59:47,790 --> 00:59:50,630
dann ist das hier natürlich ein wahnsinns Vorteil.

548
00:59:50,710 --> 00:59:53,530
Weil wenn du wirklich mal in die blöde Situation kommst,

549
00:59:53,630 --> 00:59:54,910
dass du jetzt anstatt,

550
00:59:54,910 --> 00:59:57,790
wie man früher gesagt hat, früher gemacht hat, so,

551
00:59:57,870 --> 01:00:00,150
ich habe drei Applikationsserver VMs

552
01:00:00,250 --> 01:00:01,370
und wenn wir mehr Last brauchen,

553
01:00:01,450 --> 01:00:04,030
muss ich erst noch mal ein paar neue aufbauen.

554
01:00:04,110 --> 01:00:06,450
Richtig, genau.

555
01:00:06,530 --> 01:00:08,830
Und das ist halt wirklich ein Vorteil.

556
01:00:08,910 --> 01:00:09,910
Da kannst du einfach sagen,

557
01:00:09,990 --> 01:00:13,910
wie auf dem Loadbalancer ist die Last über 80 Prozent.

558
01:00:13,990 --> 01:00:15,750
Meistens machst du das ja schon vorher.

559
01:00:15,830 --> 01:00:18,570
Oder Loadbalancer ist die Last über 50 Prozent

560
01:00:18,670 --> 01:00:21,450
oder die Connections über so diesem Limit.

561
01:00:21,530 --> 01:00:24,710
Wir machen einfach drei neue Container und lassen die verteilen

562
01:00:24,710 --> 01:00:25,710
auf die Cluster.

563
01:00:25,790 --> 01:00:29,210
Das ist natürlich wahnsinnig geil, wenn das funktioniert.

564
01:00:29,290 --> 01:00:30,290
Auf jeden Fall.

565
01:00:30,370 --> 01:00:31,370
So, okay, Moin.

566
01:00:31,470 --> 01:00:33,470
Leute, ich bin in zwei Minuten wieder da.

567
01:00:33,550 --> 01:00:36,170
Also, ihr könnt gleich nach einer Minute F5 drücken.

568
01:00:36,250 --> 01:00:38,050
Ich werde jetzt den Stream ausmachen.

569
01:00:38,130 --> 01:00:40,290
Ich mache den Stream wieder an, suche meinen anderen Twitch-Server aus

570
01:00:40,370 --> 01:00:41,630
und wir hoffen, es funktioniert.

571
01:00:41,710 --> 01:00:43,910
Wenn es nicht funktioniert, haben wir wahrscheinlich gelitten

572
01:00:44,010 --> 01:00:46,130
und wir müssen mit lag leben noch für eine Stunde.

573
01:00:46,210 --> 01:00:47,830
Aber gucken wir mal, ich bin gleich wieder da.
