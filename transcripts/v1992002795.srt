1
00:00:03,050 --> 00:00:03,970
Pok, Pok.

2
00:00:04,530 --> 00:00:06,170
Pok, Pok, Pog, Pog, Pok.

3
00:00:10,350 --> 00:00:15,920
Pok, Pok, Pog, Pog.

4
00:00:16,340 --> 00:00:17,900
Pok, Pok, Pog, Pog.

5
00:00:18,360 --> 00:00:23,910
Pok, Pok, Pog, Pog, Pog.

6
00:00:24,410 --> 00:00:28,610
Pok, Pok, Pog, Pog, Pog.

7
00:00:29,190 --> 00:00:31,630
Ich muss gerade mal warten,

8
00:00:31,670 --> 00:00:33,270
bis mein Browser geupdatet ist

9
00:00:33,270 --> 00:00:34,330
auf der anderen Seite.

10
00:00:35,310 --> 00:00:35,330
radiant Bass.

11
00:00:35,330 --> 00:00:36,010
Kag Wait.

12
00:00:36,910 --> 00:00:37,970
Keg Waiting,

13
00:00:38,810 --> 00:00:40,390
dass mein Browser geupdatet ist.

14
00:00:40,390 --> 00:00:44,580
ich gebe zu, Freitag

15
00:00:44,580 --> 00:00:46,600
12.16 Uhr ist vielleicht nicht so der

16
00:00:46,600 --> 00:00:48,600
normalste Zeitpunkt zum Streamsauen

17
00:00:48,600 --> 00:00:53,650
für mich. Aber warum

18
00:00:53,650 --> 00:00:54,170
nicht, ne?

19
00:00:56,990 --> 00:00:59,630
Ja, ich hab Urlaub,

20
00:00:59,730 --> 00:01:01,570
richtig. Ich hab

21
00:01:01,570 --> 00:01:03,330
Urlaub seit...

22
00:01:03,330 --> 00:01:05,090
Ich mein, letzter Arbeitstag

23
00:01:05,090 --> 00:01:07,230
war

24
00:01:07,230 --> 00:01:11,020
am 24.

25
00:01:11,860 --> 00:01:13,540
Wobei, also

26
00:01:13,540 --> 00:01:15,600
streng genommen letzter Arbeitstag

27
00:01:15,600 --> 00:01:16,380
war am 24.

28
00:01:17,380 --> 00:01:19,580
Aber ich hatte ja quasi hier

29
00:01:19,580 --> 00:01:20,860
nochmal Bereitschaft

30
00:01:20,860 --> 00:01:23,480
und hier hatte

31
00:01:23,480 --> 00:01:25,300
ich nochmal Teambuilding-Workshop.

32
00:01:25,960 --> 00:01:27,280
Also insofern... Oh Leute,

33
00:01:27,380 --> 00:01:29,320
das war wieder was, ey. Ich sag's euch.

34
00:01:30,100 --> 00:01:31,600
Kann ich euch dann erzählen.

35
00:01:31,700 --> 00:01:32,580
Kann ich euch erzählen.

36
00:01:34,560 --> 00:01:35,400
Wobei, es ging.

37
00:01:35,560 --> 00:01:36,980
Es war bisher...

38
00:01:36,980 --> 00:01:39,460
Es war nervig wie alle Teambuilding-Workshops,

39
00:01:39,620 --> 00:01:41,220
aber insgesamt muss ich sagen,

40
00:01:41,280 --> 00:01:43,900
war das tatsächlich noch der beste Teambuilding-Workshop.

41
00:01:44,700 --> 00:01:45,180
Marabuna

42
00:01:45,180 --> 00:01:47,320
518. Moin.

43
00:01:49,320 --> 00:01:49,560
Düdü.

44
00:01:49,580 --> 00:01:51,200
Düdüt. Düdü. Düdüt.

45
00:01:51,960 --> 00:01:54,660
So. Und...

46
00:01:54,660 --> 00:01:56,680
Deswegen, also so, sag mal so,

47
00:01:57,360 --> 00:01:58,600
Soft-Urlaub

48
00:01:58,600 --> 00:02:00,260
hab ich quasi schon seit 24.

49
00:02:00,520 --> 00:02:02,420
Aber so richtig hart Urlaub, also wo dann auch

50
00:02:02,420 --> 00:02:03,400
wirklich gar nichts mehr ist,

51
00:02:04,060 --> 00:02:05,620
hab ich quasi seit

52
00:02:05,620 --> 00:02:06,620
gestern.

53
00:02:08,950 --> 00:02:10,250
Was war so toll bei dem Teambuilding?

54
00:02:10,490 --> 00:02:12,310
Naja, wie gesagt... Wartet mal kurz.

55
00:02:14,510 --> 00:02:14,690
Hä?

56
00:02:17,190 --> 00:02:18,030
Monk HS.

57
00:02:20,790 --> 00:02:22,390
Was so toll beim Teambuilding war?

58
00:02:22,650 --> 00:02:24,070
Naja, es war nix toll.

59
00:02:24,070 --> 00:02:25,310
Es war nur weniger nervig.

60
00:02:26,590 --> 00:02:28,130
Also toll hab ich's trotzdem nicht gefunden.

61
00:02:28,230 --> 00:02:29,610
Ich mag solche Sachen einfach nicht.

62
00:02:31,070 --> 00:02:32,010
Aber insgesamt

63
00:02:32,010 --> 00:02:34,090
war's tatsächlich ganz, ganz, ganz

64
00:02:34,090 --> 00:02:36,190
okay. Ja, wir haben natürlich

65
00:02:36,190 --> 00:02:38,030
wieder irgendwelche komischen Spielchen gemacht.

66
00:02:38,610 --> 00:02:40,370
Also wir haben... Passt mal auf, passt mal auf.

67
00:02:43,250 --> 00:02:43,730
Ähm...

68
00:02:43,730 --> 00:02:45,790
Typisches, typisches Teambuilding-Spiel,

69
00:02:45,870 --> 00:02:46,730
was wir gemacht haben.

70
00:02:47,570 --> 00:02:49,410
Wir hatten zwei Teams. Also, ne?

71
00:02:49,550 --> 00:02:52,170
Wir waren als ein Team da, aber wir wurden aufgeteilt

72
00:02:52,170 --> 00:02:53,010
in zwei Teams.

73
00:02:54,070 --> 00:02:56,350
Und beide Teams mussten

74
00:02:56,350 --> 00:02:58,710
einen Atomreaktor

75
00:02:58,710 --> 00:03:00,110
fixen.

76
00:03:01,010 --> 00:03:02,530
Natürlich war das logischerweise

77
00:03:02,530 --> 00:03:04,010
kein echter Atomreaktor

78
00:03:04,010 --> 00:03:06,690
und hatte mit Vorfällen in einem Atomreaktor

79
00:03:06,690 --> 00:03:07,890
auch gar nichts zu tun.

80
00:03:08,410 --> 00:03:10,690
Aber das ist so eine typische Story, die gerne bei solchen

81
00:03:10,690 --> 00:03:12,490
Spielchen auf

82
00:03:12,490 --> 00:03:14,110
auf Teambuildings gemacht wird.

83
00:03:14,170 --> 00:03:16,430
Also, das ging voll in der Maßen.

84
00:03:16,510 --> 00:03:18,210
Das ging voll in der Maßen. Also, guckt mal.

85
00:03:19,350 --> 00:03:20,690
Beide Teams...

86
00:03:20,690 --> 00:03:22,470
Beide Teams hatten

87
00:03:22,470 --> 00:03:24,170
einen roten Kreis auf der Erde.

88
00:03:24,770 --> 00:03:26,490
So. Äh, einen orangen Kreis

89
00:03:26,490 --> 00:03:28,450
auf der Erde. Das war der

90
00:03:28,450 --> 00:03:29,370
Atomreaktor.

91
00:03:30,870 --> 00:03:32,510
Und in der Mitte...

92
00:03:32,510 --> 00:03:33,250
In der Mitte...

93
00:03:33,250 --> 00:03:35,990
Was ist das hier? Warum macht es so komische Dinger?

94
00:03:36,650 --> 00:03:37,750
So, und in der Mitte...

95
00:03:37,750 --> 00:03:40,430
In der Mitte stand eine Flasche.

96
00:03:40,550 --> 00:03:42,590
Ich mach jetzt... Das wird kein

97
00:03:42,590 --> 00:03:44,370
Bubar, Leute. Es wird kein Bubar-Bild.

98
00:03:44,550 --> 00:03:46,770
Sieht doch vielleicht ein bisschen so aus. Okay, kein Bubar.

99
00:03:47,010 --> 00:03:48,290
Ja? So.

100
00:03:48,810 --> 00:03:50,630
Also, in der Mitte stand eine Flasche

101
00:03:50,630 --> 00:03:52,250
und da drauf...

102
00:03:52,470 --> 00:03:56,610
Da drauf

103
00:03:56,610 --> 00:03:58,290
lag ein Ei.

104
00:03:58,770 --> 00:03:59,070
Okay?

105
00:04:01,070 --> 00:04:02,950
Okay? So. Und dann hast du

106
00:04:02,950 --> 00:04:04,830
einen Rucksack bekommen. Das zweite machen wir einfach

107
00:04:04,830 --> 00:04:06,590
wieder weg. Und dann hast du...

108
00:04:06,590 --> 00:04:09,310
Alter, Paint. Mein Gott, Paint ist...

109
00:04:09,310 --> 00:04:10,850
Ich bin nicht wirklich traurig,

110
00:04:10,910 --> 00:04:12,670
dass Paint weg ist. Naja, zumindest

111
00:04:12,670 --> 00:04:15,010
hat man dann einen Rucksack bekommen mit Teilen

112
00:04:15,010 --> 00:04:15,230
drin.

113
00:04:16,850 --> 00:04:18,350
Und man musste quasi

114
00:04:18,350 --> 00:04:21,070
mit den Teilen aus dem Rucksack

115
00:04:21,070 --> 00:04:22,990
musste man was bauen

116
00:04:22,990 --> 00:04:24,170
im Team zusammen.

117
00:04:24,870 --> 00:04:26,870
Wie man das Ei

118
00:04:26,870 --> 00:04:28,210
ohne dass es kaputt geht

119
00:04:28,210 --> 00:04:30,850
von der Flasche bekommt aus dem Kreis

120
00:04:30,850 --> 00:04:31,250
raus

121
00:04:31,250 --> 00:04:34,770
und danach die Flasche rausbekommt

122
00:04:34,770 --> 00:04:35,970
ohne dass es kaputt geht.

123
00:04:38,110 --> 00:04:38,870
So. Und da

124
00:04:38,870 --> 00:04:40,770
hatte man dann so Sachen drinnen

125
00:04:40,770 --> 00:04:41,190
wie

126
00:04:41,190 --> 00:04:44,870
ein bisschen... Also, eine Schnur war drinnen.

127
00:04:45,510 --> 00:04:46,230
Es war

128
00:04:46,230 --> 00:04:48,050
ein Kleiderbügel drinnen.

129
00:04:48,670 --> 00:04:51,210
Eine Mausefalle. Ein paar Kabelbinder.

130
00:04:51,950 --> 00:04:52,690
Was es mit dem

131
00:04:52,690 --> 00:04:54,390
Atomreaktor zu tun hat. Also,

132
00:04:54,390 --> 00:04:56,150
es hat insofern was...

133
00:04:56,150 --> 00:04:58,590
Du darfst nicht in diesen Kreis

134
00:04:58,590 --> 00:05:00,290
reingehen, weil verstrahlt so

135
00:05:00,290 --> 00:05:02,410
nach dem Motto. Du musstest das alles

136
00:05:02,410 --> 00:05:04,050
von außen machen. Und wir haben das

137
00:05:04,050 --> 00:05:06,050
ohne Scheiß... Ich glaube, wir haben das mit

138
00:05:06,050 --> 00:05:08,330
am schnellsten von allen Teams, die es jemals

139
00:05:08,330 --> 00:05:09,830
gegeben hat, gepackt, weil

140
00:05:09,830 --> 00:05:12,050
wir haben einfach alle Teile links liegen lassen

141
00:05:12,050 --> 00:05:14,390
und haben uns die...

142
00:05:14,930 --> 00:05:16,010
Die...

143
00:05:16,010 --> 00:05:18,250
Wie ist das? Da war so eine aufgewickelte

144
00:05:18,250 --> 00:05:19,690
Schnur drinnen. Wir haben

145
00:05:19,690 --> 00:05:21,870
die Schnur einfach abgewickelt.

146
00:05:23,270 --> 00:05:24,310
Einer ist hierhin.

147
00:05:27,260 --> 00:05:28,380
Einer hat es hierhin gestellt.

148
00:05:28,860 --> 00:05:29,880
Einer hat es hierhin gestellt.

149
00:05:30,400 --> 00:05:32,300
Mit der Schnur drüber gespannt. Wir haben erst

150
00:05:32,300 --> 00:05:34,380
dann mit der Schnur langsam das Ei runter

151
00:05:34,380 --> 00:05:36,060
gekickt. Das ging,

152
00:05:36,720 --> 00:05:38,560
weil das war auf dem Gras.

153
00:05:38,560 --> 00:05:40,180
Es ist nicht viel passiert mit dem Ei.

154
00:05:40,740 --> 00:05:42,380
So. Dann haben wir an die Schnur

155
00:05:42,380 --> 00:05:44,280
ein bisschen Metall dran gemacht, das quasi

156
00:05:44,280 --> 00:05:46,420
hier immer weiter raus

157
00:05:46,420 --> 00:05:47,640
gedingst, das Ei.

158
00:05:48,680 --> 00:05:50,500
Und danach sind wir mit der Schnur einfach

159
00:05:50,500 --> 00:05:52,060
ein paar Mal im Kreis gelaufen,

160
00:05:52,420 --> 00:05:54,580
bis sie sich um die Flasche gewickelt hat. Dann haben wir die Flasche

161
00:05:54,580 --> 00:05:56,300
rausgehoben. Also, das hat

162
00:05:56,600 --> 00:05:58,500
wie, keine Ahnung, acht Minuten gedauert

163
00:05:58,500 --> 00:06:00,340
oder so. Dann war das fertig, obwohl 30

164
00:06:00,340 --> 00:06:01,540
angesetzt waren.

165
00:06:02,280 --> 00:06:03,300
Naja, das

166
00:06:03,300 --> 00:06:06,160
ist ein typisches Teambuilding-Spielchen, ja?

167
00:06:06,860 --> 00:06:08,660
Typisches Teambuilding-Spielchen.

168
00:06:09,500 --> 00:06:10,200
Jemand Oracle

169
00:06:10,200 --> 00:06:11,620
pfeifert euch, hoffe ja nicht.

170
00:06:17,430 --> 00:06:18,310
Ich habe keine Ahnung.

171
00:06:19,050 --> 00:06:21,090
Und ich fasse Datenbanken auch nicht an, weil ich weiß,

172
00:06:21,170 --> 00:06:22,370
dass ich davon keine Ahnung habe.

173
00:06:22,730 --> 00:06:24,970
Ihr wisst, wie das ist. Es ist wichtig zu wissen, wenn man

174
00:06:24,970 --> 00:06:25,690
keinen Plan hat.

175
00:06:27,030 --> 00:06:28,410
Und von Datenbanken, also

176
00:06:28,410 --> 00:06:30,670
insbesondere natürlich auch Oracle,

177
00:06:30,670 --> 00:06:32,470
weil da kommst du ja nur dran, wenn du

178
00:06:32,470 --> 00:06:34,270
viel Geld hast. Aber

179
00:06:34,270 --> 00:06:36,390
so alles, was es da gibt,

180
00:06:36,610 --> 00:06:38,450
ja, ich meine, von Postgres habe ich zumindest aus

181
00:06:38,450 --> 00:06:40,710
Anwendungsentwicklungssicht noch ein bisschen Ahnung.

182
00:06:45,050 --> 00:06:46,230
Aber von Oracle gar nicht.

183
00:06:46,310 --> 00:06:48,210
Deswegen halte ich da echt die Finger von weg.

184
00:06:48,350 --> 00:06:50,070
Ja, SAP HANA ist auch ganz, ganz

185
00:06:50,070 --> 00:06:50,670
grausam, Alter.

186
00:06:52,270 --> 00:06:54,010
Bei uns auf der Arbeit gab es eine Diskussion,

187
00:06:54,070 --> 00:06:56,010
was man nehmen sollte. Pass mal auf, müssen wir uns mal vorstellen.

188
00:06:57,290 --> 00:06:58,210
Gab es die Diskussion,

189
00:06:58,270 --> 00:06:59,810
was man nehmen sollte für irgendeine Anwendung?

190
00:06:59,870 --> 00:07:02,050
Ich glaube, es war keine neue Anwendung, aber sollte umgebaut

191
00:07:02,050 --> 00:07:03,570
werden. Gab es die Diskussion,

192
00:07:04,350 --> 00:07:06,470
Oracle, SAP HANA,

193
00:07:08,230 --> 00:07:08,950
Sybase

194
00:07:08,950 --> 00:07:10,770
oder Postgres?

195
00:07:11,810 --> 00:07:12,890
Und da haben wir uns

196
00:07:12,890 --> 00:07:14,050
alle angeguckt und haben gesagt, naja,

197
00:07:14,410 --> 00:07:16,790
obviously Postgres, weil

198
00:07:16,790 --> 00:07:18,810
macht alles, kann

199
00:07:18,810 --> 00:07:20,610
alles, funktioniert,

200
00:07:21,750 --> 00:07:22,890
ist etabliert,

201
00:07:23,550 --> 00:07:24,330
kostet nichts,

202
00:07:24,910 --> 00:07:26,830
läuft auf Linux. Also im

203
00:07:26,830 --> 00:07:28,610
Prinzip so, warum?

204
00:07:28,730 --> 00:07:30,570
Warum denkt ihr überhaupt über die anderen

205
00:07:30,570 --> 00:07:32,310
Optionen nach, wenn ihr einfach Postgres

206
00:07:32,310 --> 00:07:33,110
nehmen könnt?

207
00:07:34,350 --> 00:07:35,950
Am Ende hattest du dann da wirklich Leute drin,

208
00:07:36,390 --> 00:07:38,150
die, die ultrakrasse

209
00:07:38,150 --> 00:07:40,470
SAP HANA-Fans waren. Ich kann das nicht

210
00:07:40,470 --> 00:07:42,290
verstehen. Ich habe damit noch nie was gemacht.

211
00:07:42,390 --> 00:07:43,470
Ich will damit auch nichts machen.

212
00:07:44,210 --> 00:07:46,110
Allein schon, weil es SAP ist und wahrscheinlich wieder

213
00:07:46,110 --> 00:07:48,230
30 Trilliarden kostet.

214
00:07:49,330 --> 00:07:50,470
Und Oracle will man

215
00:07:50,470 --> 00:07:52,590
sich auch nicht mehr ans Bein binden, als notwendig

216
00:07:52,590 --> 00:07:54,890
ist. Und irgendeine uralte Sybase-Version

217
00:07:54,890 --> 00:07:56,290
von 1995, erst recht.

218
00:07:56,570 --> 00:07:58,370
Warum nicht, also warum nicht einfach

219
00:07:58,370 --> 00:08:00,270
stinknormales Postgres, wenn es doch schon

220
00:08:00,270 --> 00:08:01,290
zur Auswahl steht?

221
00:08:03,640 --> 00:08:05,840
Aber war's nicht, war's nicht. Ey, ist echt,

222
00:08:05,840 --> 00:08:08,380
ist echt. Böses Enterprise-Keckel

223
00:08:08,380 --> 00:08:08,880
teilweise.

224
00:08:11,450 --> 00:08:12,970
Am Morgen wird MMO gecrindet.

225
00:08:13,250 --> 00:08:15,470
Ich weiß nicht, ob ich MMO im Stream ein bisschen

226
00:08:15,470 --> 00:08:17,730
crinden soll, weil das ist ultra langweilig

227
00:08:17,730 --> 00:08:19,230
zum Zugucken, kann ich euch sagen. Das ist das

228
00:08:19,230 --> 00:08:20,610
langweiligste, was es gibt, ey.

229
00:08:21,430 --> 00:08:23,470
Leute beim MMO-Kreise-Crinden zu gucken.

230
00:08:23,850 --> 00:08:24,330
Zuzugucken.

231
00:08:33,580 --> 00:08:35,620
Postgres macht keine Werbung. Naja, gut.

232
00:08:35,860 --> 00:08:38,020
Postgres hat keine Lobby-Arbeitsleute,

233
00:08:38,140 --> 00:08:39,760
die vorbeikommen und, also

234
00:08:39,760 --> 00:08:41,820
Postgres hat keine so, so, so

235
00:08:41,820 --> 00:08:44,220
Lobby-Abteilung, Sales-Abteilung, die ankommt

236
00:08:44,220 --> 00:08:45,980
und dir das schmackhaft macht. Ja, da

237
00:08:45,980 --> 00:08:47,340
stimmt, das stimmt schon, ja.

238
00:08:47,960 --> 00:08:49,680
Aber in dem Fall mussten es ja nicht mal

239
00:08:49,680 --> 00:08:51,720
irgendwelche CEOs entscheiden, sondern wirklich

240
00:08:51,720 --> 00:08:53,880
Leute aus der Technik. Und wie man da

241
00:08:53,880 --> 00:08:55,600
ernsthaft auf die Idee kommen kann,

242
00:08:56,000 --> 00:08:57,700
SAP oder Oracle versus

243
00:08:57,700 --> 00:08:59,460
Postgres, also, verstehe ich nicht.

244
00:08:59,780 --> 00:09:01,480
Das ist überhaupt eine Frage, dass es überhaupt

245
00:09:01,480 --> 00:09:03,780
die Frage gibt, verstehe ich nicht.

246
00:09:04,060 --> 00:09:05,660
Wenn du Postgres nehmen kannst, sollst du

247
00:09:05,660 --> 00:09:06,680
immer Postgres nehmen.

248
00:09:07,560 --> 00:09:09,820
Raspberry Pi 5 sind es verfügbar, ich weiß, ich hab's gesehen.

249
00:09:10,600 --> 00:09:11,640
Da habe ich trotzdem noch keinen gekauft.

250
00:09:11,640 --> 00:09:13,700
Was sagt denn, was sagt denn Barry Base?

251
00:09:15,160 --> 00:09:15,840
What the

252
00:09:15,980 --> 00:09:18,320
Pi 6?

253
00:09:18,500 --> 00:09:19,880
Warum habe ich am Raspberry Pi 6

254
00:09:19,880 --> 00:09:20,220
gesucht?

255
00:09:23,120 --> 00:09:23,640
Okay.

256
00:09:24,980 --> 00:09:25,740
Die sind nicht

257
00:09:25,740 --> 00:09:26,340
verfügbar.

258
00:09:28,830 --> 00:09:34,450
Ja, die

259
00:09:34,450 --> 00:09:36,970
Sortierbarkeit war hier auch schon mal

260
00:09:36,970 --> 00:09:40,340
besser. Ja, ja,

261
00:09:40,500 --> 00:09:42,320
wir machen gleich, wir machen gleich weiter.

262
00:09:42,580 --> 00:09:44,400
Ich muss den ganzen, ich muss erstmal Betriebssystem

263
00:09:44,400 --> 00:09:45,980
OS-Update machen.

264
00:09:46,960 --> 00:09:47,640
OS-Update.

265
00:09:48,720 --> 00:09:49,720
Eggman-Update.

266
00:09:50,080 --> 00:09:51,080
Dings-Update.

267
00:09:51,520 --> 00:09:52,560
Sonst noch irgendwas Update?

268
00:09:52,660 --> 00:09:54,320
Ähm,

269
00:09:56,960 --> 00:09:59,000
ich weiß nicht, was das ist, aber irgendwas, was wir nicht

270
00:09:59,000 --> 00:09:59,520
mehr brauchen.

271
00:10:01,480 --> 00:10:03,100
Weiß auch nicht, warum das installiert ist.

272
00:10:04,020 --> 00:10:05,160
Wenn nicht, war das mal als irgendeine

273
00:10:05,160 --> 00:10:06,500
Dieb...

274
00:10:06,500 --> 00:10:14,070
Okay, wahrscheinlich,

275
00:10:14,290 --> 00:10:15,910
wahrscheinlich wurde das

276
00:10:15,910 --> 00:10:17,210
mal wegen irgendeiner

277
00:10:17,210 --> 00:10:19,910
Dependency

278
00:10:19,910 --> 00:10:20,870
mit installiert, hä?

279
00:10:20,870 --> 00:10:23,610
Ach komm, ich lass, ich,

280
00:10:23,750 --> 00:10:25,210
naja, ich aninstall das einfach.

281
00:10:26,350 --> 00:10:27,630
Wird sich schon wieder installieren,

282
00:10:27,690 --> 00:10:28,930
wenn man's braucht. So,

283
00:10:29,130 --> 00:10:30,970
also, Packages sind geupdatet.

284
00:10:31,290 --> 00:10:33,410
Wichtigster Check, ASCII-Quarium geht noch.

285
00:10:33,490 --> 00:10:35,290
ASCII-Quarium nach LOLCAT gepiped,

286
00:10:35,350 --> 00:10:37,430
geht auch noch gut. Nice, Reboot-Time.

287
00:10:43,400 --> 00:10:43,880
Meinst du nicht?

288
00:10:44,460 --> 00:10:46,640
Aber zeig mal, hier, wenn die lieferbar sind.

289
00:10:49,180 --> 00:10:50,600
Ja, Starter-Kit braucht keiner.

290
00:10:51,040 --> 00:10:51,340
Ja, doch.

291
00:10:51,980 --> 00:10:54,140
Doch, Starter-Kit. Starters brauchen Starter.

292
00:10:54,220 --> 00:10:56,200
Ja, wenn die noch ein Netzteil brauchen, vielleicht,

293
00:10:56,280 --> 00:10:58,520
oder so, ja, dann. Ich mein, es bietet sich an,

294
00:10:58,560 --> 00:11:00,440
für den aktuellen Raspberry Pi 5 auch ein Netzteil

295
00:11:00,440 --> 00:11:02,260
zu kaufen, weil die

296
00:11:02,260 --> 00:11:04,260
haben ja zum ersten Mal,

297
00:11:04,900 --> 00:11:05,960
also, nicht zum ersten,

298
00:11:05,980 --> 00:11:08,680
aber jetzt zum wiederholten Male

299
00:11:08,680 --> 00:11:10,320
bisschen, bisschen mehr

300
00:11:10,320 --> 00:11:11,980
Maximum Leistungsbedarf,

301
00:11:14,560 --> 00:11:15,080
aber

302
00:11:15,080 --> 00:11:16,980
das brauchen die ja meistens

303
00:11:16,980 --> 00:11:18,780
trotzdem nicht. Also, ich würde

304
00:11:18,780 --> 00:11:20,760
beim Raspberry Pi mit meinem alten Netzteil

305
00:11:20,760 --> 00:11:21,520
ins Rennen gehen.

306
00:11:23,400 --> 00:11:24,560
Das geht, glaube ich, immer noch

307
00:11:24,560 --> 00:11:33,190
voll klar. Was kostet

308
00:11:33,190 --> 00:11:34,410
das Starter-Kit?

309
00:11:36,390 --> 00:11:37,190
Starter-Kit

310
00:11:37,190 --> 00:11:38,890
kostet Raspberry Pi

311
00:11:38,890 --> 00:11:41,350
ja, vier gigreichen Digge.

312
00:11:42,470 --> 00:11:44,650
Äh, SD-Karten,

313
00:11:44,650 --> 00:11:47,010
Power-Sub-Platen, Case. Das Case ist halt auch

314
00:11:47,010 --> 00:11:47,370
kacke.

315
00:11:49,470 --> 00:11:50,870
Ja, sowas geht vielleicht noch nicht.

316
00:11:52,410 --> 00:11:53,110
Ich, ich,

317
00:11:53,370 --> 00:11:54,770
ich würd mir ja sofort wieder das

318
00:11:54,770 --> 00:11:55,790
Flir-Case kaufen.

319
00:11:56,610 --> 00:11:57,370
17 Euro.

320
00:11:58,710 --> 00:12:00,910
Also, ich würd mir ja wieder, das gibt's ja auch

321
00:12:00,910 --> 00:12:03,110
schon für den Fünfer-Pi-5

322
00:12:03,110 --> 00:12:04,770
Flir-Case.

323
00:12:06,430 --> 00:12:06,870
Ja,

324
00:12:07,150 --> 00:12:08,410
das da würd ich mir wieder kaufen.

325
00:12:11,570 --> 00:12:13,030
Das geht voll klar. Gibt's auch

326
00:12:13,030 --> 00:12:14,370
für Raspberry Pi 5.

327
00:12:14,550 --> 00:12:16,670
Ah, nee, das ist für den Vierer.

328
00:12:16,890 --> 00:12:18,810
Aber ich hab's letztens, ich hab's doch letztens

329
00:12:18,810 --> 00:12:20,330
auch schon für den Fünfer gesehen.

330
00:12:23,230 --> 00:12:25,190
Himba Pi Fall Gen 2.

331
00:12:25,850 --> 00:12:27,270
Alles klar, genau, das brauchen wir.

332
00:12:28,030 --> 00:12:29,170
Himba, Himba Pi

333
00:12:29,170 --> 00:12:31,310
Fall Gen 2. Ah, das ist sogar

334
00:12:31,310 --> 00:12:32,950
fürs, fürs Dreier.

335
00:12:33,310 --> 00:12:33,750
Also,

336
00:12:34,890 --> 00:12:36,750
ich hab das, ich hab das auf jeden Fall gesehen,

337
00:12:36,890 --> 00:12:37,910
dass es auch fürs

338
00:12:37,910 --> 00:12:40,970
für den Pi 5 schon gibt.

339
00:12:42,130 --> 00:12:42,770
Eher Flir-Case.

340
00:12:42,770 --> 00:12:43,510
Das ist für den Zero.

341
00:12:44,550 --> 00:12:45,990
Aber guck, die haben auch, die haben auch

342
00:12:45,990 --> 00:12:47,950
ein Pi 5 Case. Das ist, das ist

343
00:12:47,950 --> 00:12:49,710
so mein To-Go,

344
00:12:50,090 --> 00:12:52,090
äh, nee, To-Go ist das, also, falsches Wort.

345
00:12:52,410 --> 00:12:53,210
Das ist so mein, mein

346
00:12:53,210 --> 00:12:55,450
Default Raspberry Pi Case.

347
00:12:55,810 --> 00:12:57,770
Ich find das Ding super. Das sieht gut aus.

348
00:12:58,250 --> 00:12:59,850
Nicht, dass es so entscheidend wäre, aber es sieht

349
00:12:59,850 --> 00:13:02,090
clean aus. Du kannst unten dran relativ

350
00:13:02,090 --> 00:13:03,930
gut noch ne, ne SSD

351
00:13:03,930 --> 00:13:05,650
pappen, SATA-SSD,

352
00:13:05,930 --> 00:13:07,030
beziehungsweise auf USB

353
00:13:07,030 --> 00:13:09,830
SSD pappen. Ist auch genug Platz.

354
00:13:09,830 --> 00:13:11,790
Oder legst du oben drauf, nimmst da so ein bisschen

355
00:13:11,790 --> 00:13:12,870
Klebeband, machst dran.

356
00:13:14,550 --> 00:13:16,630
Und dadurch, dass das gesamte Gehäuse

357
00:13:16,630 --> 00:13:18,790
Alu ist, Kek, Kek-Alu,

358
00:13:19,450 --> 00:13:22,750
Ups, meine E-Mails sind vielleicht grad ein bisschen groß,

359
00:13:23,830 --> 00:13:25,210
weil das Kek-Alu-Case

360
00:13:25,210 --> 00:13:25,570
ist,

361
00:13:29,870 --> 00:13:31,650
verteilt sich die ganze Wärme auch gut rüber.

362
00:13:32,290 --> 00:13:34,190
Also, aber Leute, die ein Raspberry Pi

363
00:13:34,190 --> 00:13:35,690
quasi

364
00:13:35,690 --> 00:13:37,890
24-7 auf, ähm,

365
00:13:38,130 --> 00:13:39,950
hoher CPU-Last laufen lassen wollen,

366
00:13:40,090 --> 00:13:41,810
also mit 80% plus

367
00:13:41,810 --> 00:13:43,550
CPU-Auslastung, dann ist das Case nix.

368
00:13:43,970 --> 00:13:46,030
Das Case, dadurch, dass es so einen großen Metallkörper

369
00:13:46,030 --> 00:13:47,810
hat, ne, verteilt die Wärme ganz

370
00:13:47,910 --> 00:13:50,190
gut und hilft auch ein bisschen, die besser abzutransportieren.

371
00:13:50,670 --> 00:13:51,810
Aber natürlich wird's auch

372
00:13:51,810 --> 00:13:53,770
mit der Zeit zu heiß, wenn du's

373
00:13:53,770 --> 00:13:55,650
volle Pulle 24-7 in einem schlecht

374
00:13:55,650 --> 00:13:57,610
belüfteten Raum laufen lässt, das ist ja klar.

375
00:13:58,410 --> 00:13:59,510
Aber das sind ja

376
00:13:59,510 --> 00:14:02,030
die aller, aller, allermeisten Raspberry Pis

377
00:14:02,030 --> 00:14:07,120
nicht. Du brauchst

378
00:14:07,120 --> 00:14:09,000
dein neues Netzteil, weil der Raspberry Pi 5

379
00:14:09,000 --> 00:14:11,320
einen USB-C-Anschluss hat. Ne, brauch ich nicht.

380
00:14:12,280 --> 00:14:13,420
Weil ich ein ganz normales

381
00:14:13,420 --> 00:14:15,600
China-Chinesen-USB-Netzteil

382
00:14:15,600 --> 00:14:16,280
verwenden würde

383
00:14:16,280 --> 00:14:19,120
und dann ein

384
00:14:19,120 --> 00:14:20,420
USB-C-Kabel anschließe.

385
00:14:20,420 --> 00:14:24,570
Also ich hab Berge,

386
00:14:25,390 --> 00:14:26,690
ja, ich hab

387
00:14:26,690 --> 00:14:28,050
Berge von denen hier,

388
00:14:29,270 --> 00:14:31,290
ich hab aber auch welche mit Quick-Charge

389
00:14:31,290 --> 00:14:32,930
und bis zu

390
00:14:32,930 --> 00:14:35,050
was ist Quick-Charge?

391
00:14:36,050 --> 00:14:37,010
Bis zu 20

392
00:14:37,010 --> 00:14:38,950
20 Volt

393
00:14:38,950 --> 00:14:40,330
5 Ampere oder sowas?

394
00:14:47,040 --> 00:14:50,590
Irgendwie so? Ja, genau.

395
00:14:51,350 --> 00:14:51,450
Ja.

396
00:14:52,230 --> 00:14:54,710
Also sie können sogar Quick-Charge, also die sollten

397
00:14:54,710 --> 00:14:56,590
da nicht auseinanderfallen,

398
00:14:58,050 --> 00:14:58,450
wenn ich den

399
00:14:58,450 --> 00:14:59,590
Raspberry Pi dran anschließe.

400
00:14:59,610 --> 00:15:01,610
Zur Not habe ich noch meine Steckdosenleiste hier,

401
00:15:01,610 --> 00:15:03,010
die hat auch USB-Anschlüsse.

402
00:15:03,590 --> 00:15:06,050
Also insofern, ich denke, ich bin für den Raspberry Pi

403
00:15:06,050 --> 00:15:06,990
gerüstet. Fünfer.

404
00:15:07,450 --> 00:15:09,190
Aber dazu müsste ich mir erstmal einen Fünfer kaufen.

405
00:15:16,320 --> 00:15:16,840
Ja, macht's auch.

406
00:15:18,300 --> 00:15:19,520
Kennst du? Ja, kenn ich.

407
00:15:20,100 --> 00:15:21,600
Kenn ich. Ja, ja.

408
00:15:22,620 --> 00:15:23,200
Kenn ich.

409
00:15:24,820 --> 00:15:26,160
Hab ich aber noch nicht mitgemacht.

410
00:15:29,160 --> 00:15:29,940
So, jetzt,

411
00:15:30,100 --> 00:15:32,000
jetzt geht's los. Jetzt hören wir mal. Rust.

412
00:15:32,400 --> 00:15:34,140
Wobei, bevor wir, wir machen

413
00:15:34,140 --> 00:15:35,820
vielleicht, vielleicht erstmal

414
00:15:35,820 --> 00:15:38,080
die Docker-Geschichte. Bin mir gar nicht

415
00:15:38,080 --> 00:15:40,160
sicher, wo wir stehen geblieben sind. Wie immer,

416
00:15:40,480 --> 00:15:41,900
ihr müsst nicht wirklich bei den letzten

417
00:15:41,900 --> 00:15:44,020
Streams dabei gewesen sein, weil das ja immer ein bisschen

418
00:15:44,020 --> 00:15:45,520
unabhängig voneinander ist.

419
00:15:47,080 --> 00:15:48,180
Schadet allerdings auch

420
00:15:48,180 --> 00:15:49,920
nicht. Das heißt, wenn ihr öfters dabei sein wollt,

421
00:15:50,020 --> 00:15:51,440
könnt ihr ein Follow dalassen.

422
00:15:52,020 --> 00:15:54,020
Postchamp. So, also

423
00:15:54,020 --> 00:15:55,720
ich muss erstmal den ganzen Krempel starten.

424
00:15:56,240 --> 00:15:57,900
Repos. Campchamp.

425
00:16:00,570 --> 00:16:01,870
Hier haben wir ein paar uncommittete Sachen

426
00:16:01,870 --> 00:16:03,850
drinne. So, hier machen wir

427
00:16:03,850 --> 00:16:07,990
Rider auf. Für unser

428
00:16:07,990 --> 00:16:09,150
.NET Backend.

429
00:16:09,550 --> 00:16:11,250
Hier machen wir Rust

430
00:16:11,250 --> 00:16:13,450
auf. Für unser Low-Level-Web-RTC

431
00:16:13,450 --> 00:16:13,950
Zeug.

432
00:16:16,290 --> 00:16:17,330
Wie kommt's?

433
00:16:18,210 --> 00:16:20,490
Ich zeig dir gleich, was Sache ist.

434
00:16:21,350 --> 00:16:22,770
So, Rust. Und hier brauchen wir

435
00:16:22,770 --> 00:16:24,810
Visual Studio Code für unser Frontend-Zeug.

436
00:16:25,310 --> 00:16:26,530
Und zack, bumm, sind schon nochmal

437
00:16:26,530 --> 00:16:28,290
80% RAM voll wahrscheinlich.

438
00:16:29,030 --> 00:16:30,650
Haben wir hier einen Chrome. Oh, es

439
00:16:30,650 --> 00:16:31,830
laggt. Es laggt.

440
00:16:33,990 --> 00:16:34,350
Alter.

441
00:16:35,590 --> 00:16:36,430
Die VM, man.

442
00:16:37,790 --> 00:16:42,200
Was ist mit dem

443
00:16:42,200 --> 00:16:43,600
1CPU-Core los hier?

444
00:16:46,340 --> 00:16:47,500
VM? VM, was ist?

445
00:16:48,000 --> 00:16:49,640
Kriegt ihr schon mal wieder ein?

446
00:16:49,800 --> 00:16:51,980
Das da oben ist meine CPU-Auslastung. Also 8 Cores

447
00:16:51,980 --> 00:16:53,540
und jeweilige CPU-Auslastung.

448
00:16:53,760 --> 00:16:55,560
Was zum Teufel geht da im Hintergrund gerade ab?

449
00:16:57,480 --> 00:16:58,340
Ah, Jetbrains.

450
00:16:58,740 --> 00:16:59,680
Jetbrains macht's.

451
00:17:00,020 --> 00:17:01,100
Jetbrains-Java-Dinger.

452
00:17:05,890 --> 00:17:07,250
Mit Vim wäre es besser.

453
00:17:08,310 --> 00:17:08,470
Ne.

454
00:17:09,290 --> 00:17:10,510
Die CPU-Auslastung, ja.

455
00:17:10,950 --> 00:17:11,850
Aber die Möglichkeiten,

456
00:17:12,290 --> 00:17:14,830
angenehme Sachen zu benutzen, eher nicht.

457
00:17:19,880 --> 00:17:20,800
Es sei denn, du fragst

458
00:17:20,800 --> 00:17:23,080
die Hardcore-Vim-Fraktion

459
00:17:23,080 --> 00:17:24,660
hier auf YouTube, die für alles,

460
00:17:24,780 --> 00:17:25,560
was Vim-Only macht.

461
00:17:28,610 --> 00:17:28,950
So.

462
00:17:30,150 --> 00:17:30,470
Also.

463
00:17:31,130 --> 00:17:33,290
Dann müssen wir noch unseren RTSP-Server starten.

464
00:17:35,910 --> 00:17:37,470
Den haben wir, den hatte ich hier, glaube ich,

465
00:17:37,470 --> 00:17:38,430
hatte ich ein neues Tab auf.

466
00:17:39,090 --> 00:17:39,530
EMP.

467
00:17:40,510 --> 00:17:42,310
Dann hatte ich da den RTSP-Server drin.

468
00:17:42,410 --> 00:17:43,390
Ja, RTSP.

469
00:17:44,410 --> 00:17:44,810
So.

470
00:17:45,230 --> 00:17:46,910
Da liegt hoffentlich auch das Video drin.

471
00:17:47,970 --> 00:17:49,590
RTSP-Server starten.

472
00:17:50,710 --> 00:17:51,730
FFM-Pack.

473
00:17:54,640 --> 00:17:55,120
Restream.

474
00:17:55,260 --> 00:17:57,420
Plub 2. Ne, das TS-File

475
00:17:57,420 --> 00:17:58,640
haben wir gestreamt, gell.

476
00:18:00,380 --> 00:18:02,880
Okay, und jetzt schauen wir mal, ob alles funktioniert.

477
00:18:03,780 --> 00:18:04,640
Local Host,

478
00:18:04,740 --> 00:18:06,600
Port 80. Achso, ich muss

479
00:18:06,600 --> 00:18:07,600
die Anwendung ja noch starten.

480
00:18:09,040 --> 00:18:10,480
Tab. Das ist ein ganz schön

481
00:18:10,480 --> 00:18:12,720
langes Setup hier, bis es funktioniert.

482
00:18:13,420 --> 00:18:13,820
Okay.

483
00:18:15,000 --> 00:18:18,230
Run. Jetzt schauen wir mal,

484
00:18:18,310 --> 00:18:19,730
ob der Kram an sich noch funktioniert.

485
00:18:19,970 --> 00:18:21,250
Dann erzähle ich mal kurz was zu.

486
00:18:22,630 --> 00:18:23,410
Okay, Prage.

487
00:18:24,590 --> 00:18:26,070
Okay, es funktioniert. Nice.

488
00:18:26,070 --> 00:18:28,390
Also. Wir streamen das Video

489
00:18:28,390 --> 00:18:29,550
in den Browser.

490
00:18:29,910 --> 00:18:31,830
Alles gut. Schon frei.

491
00:18:31,890 --> 00:18:33,750
Ja, seit letzter Woche Freitag eigentlich

492
00:18:33,750 --> 00:18:35,910
die Arbeit vorbei. Aber ich hatte dann noch

493
00:18:35,910 --> 00:18:37,870
eine Woche als Wochenende Bereitschaft und jetzt

494
00:18:37,870 --> 00:18:39,530
noch zwei Tage Teambuilding. Also

495
00:18:39,530 --> 00:18:40,750
so richtig

496
00:18:40,750 --> 00:18:44,010
Hardcut so Urlaub. Erst seit

497
00:18:44,010 --> 00:18:45,710
gestern. Ja, und seit

498
00:18:45,710 --> 00:18:46,090
morgen

499
00:18:46,090 --> 00:18:49,610
So ist es. Und

500
00:18:49,610 --> 00:18:51,830
morgen muss ich da ein bisschen MMO-Kreisekund machen.

501
00:18:52,170 --> 00:18:54,150
Es hat jemand gefragt vorhin, welches

502
00:18:54,150 --> 00:18:54,770
MMO

503
00:18:54,770 --> 00:18:56,550
irgendwo

504
00:18:56,550 --> 00:18:58,430
hier

505
00:18:58,430 --> 00:18:58,590
hier

506
00:18:58,590 --> 00:19:03,440
der ältere Meier hat.

507
00:19:03,460 --> 00:19:05,460
Gefragt. Bist du noch da? Welches

508
00:19:05,460 --> 00:19:07,360
MMO kann ich dir sagen? Ich spiele

509
00:19:07,360 --> 00:19:08,420
ab morgen wieder

510
00:19:08,420 --> 00:19:14,380
Dark in

511
00:19:14,380 --> 00:19:16,500
Dark Age of Camelot.

512
00:19:17,000 --> 00:19:19,020
Das Spiel ist älter als

513
00:19:19,020 --> 00:19:21,240
viele von euch im Chat. Das kam 2001

514
00:19:21,240 --> 00:19:26,080
raus. Vor 22

515
00:19:26,080 --> 00:19:27,260
Jahren, Alter.

516
00:19:29,360 --> 00:19:29,900
Und ich hab's

517
00:19:29,900 --> 00:19:31,900
zu EU-Release angefangen zu spielen

518
00:19:31,900 --> 00:19:33,480
und spiele es eigentlich durchgehend immer wieder.

519
00:19:34,340 --> 00:19:35,560
Bestes MMO ever.

520
00:19:36,520 --> 00:19:36,700
Ever.

521
00:19:40,810 --> 00:19:42,590
Nee, gab noch keine Diskussion

522
00:19:42,590 --> 00:19:43,310
über die Azubi.

523
00:19:43,470 --> 00:19:45,370
Über die FISI-Abschlussprüfung oder

524
00:19:45,370 --> 00:19:46,670
Fachinformatik-Abschlussprüfung.

525
00:19:47,450 --> 00:19:49,410
Nee, nichts. Ich war auch hier nicht

526
00:19:49,410 --> 00:19:50,230
on seit

527
00:19:50,230 --> 00:19:53,550
Montag.

528
00:19:54,270 --> 00:19:55,590
Also gab's noch keine Diskussion

529
00:19:55,590 --> 00:19:57,470
drüber. War noch keine Möglichkeit drüber

530
00:19:57,470 --> 00:19:59,430
zu diskutieren. Und wie war die Abschlussprüfung?

531
00:20:01,150 --> 00:20:01,690
War die

532
00:20:01,690 --> 00:20:03,110
auch wieder unschaffbar wie die letzte?

533
00:20:17,510 --> 00:20:19,010
Also unser Videostreaming läuft.

534
00:20:19,110 --> 00:20:20,290
So, kurze Sache.

535
00:20:20,970 --> 00:20:22,950
Ihr könnt euch gerne über die

536
00:20:22,950 --> 00:20:24,770
Fachinformatik-Abschlussprüfung auslassen.

537
00:20:24,770 --> 00:20:26,870
Da sag ich auch gleich was zu. Wenn ein paar Leute

538
00:20:26,870 --> 00:20:28,630
First-Hands-Experience

539
00:20:28,630 --> 00:20:31,230
da haben. Also, ich sag noch

540
00:20:31,230 --> 00:20:32,870
ganz kurz was zur Anwendung. Wir werden das heute

541
00:20:32,870 --> 00:20:35,030
verdockerisieren, dass ich das ordentlich testen kann

542
00:20:35,030 --> 00:20:37,070
beziehungsweise ordentlich laufen lassen kann bei mir lokal.

543
00:20:37,810 --> 00:20:38,910
Ganz, ganz kurz,

544
00:20:39,150 --> 00:20:41,150
ganz simpel Übersicht, was es

545
00:20:41,150 --> 00:20:43,210
gibt. Wir haben eine Anwendung am Start

546
00:20:43,210 --> 00:20:45,350
mit etwas viel Debug-Output,

547
00:20:45,410 --> 00:20:47,010
wie es aussieht. Wir haben

548
00:20:47,010 --> 00:20:47,670
eine

549
00:20:47,670 --> 00:20:50,490
ASP.NET-Webanwendung

550
00:20:50,490 --> 00:20:53,150
für die, ja,

551
00:20:53,150 --> 00:20:55,370
für das Frontend, also als API-Endpunkte

552
00:20:55,370 --> 00:20:56,750
für das Frontend. Dann

553
00:20:56,870 --> 00:21:00,730
haben wir eine Rust-Low-Level-Web-RTC-Geschichte

554
00:21:00,730 --> 00:21:02,810
und wir haben ein bisschen JavaScript,

555
00:21:02,810 --> 00:21:04,990
HTML, CSS. Was passiert,

556
00:21:04,990 --> 00:21:06,990
ist folgendes in diesem Video nur

557
00:21:06,990 --> 00:21:08,990
ganz kurz, also heute auch

558
00:21:08,990 --> 00:21:10,990
nur ganz kurz.

559
00:21:10,990 --> 00:21:13,070
Provider, ich kann

560
00:21:13,070 --> 00:21:15,070
das nicht, ich kann das nicht. Keiner kann Provider

561
00:21:15,070 --> 00:21:17,070
so gut aussprechen wie SemperVideo, äh.

562
00:21:17,070 --> 00:21:19,070
Provider.

563
00:21:19,070 --> 00:21:21,070
Ich kann's

564
00:21:21,070 --> 00:21:23,070
nicht, das ist einfach original.

565
00:21:23,070 --> 00:21:29,740
Ähm, also

566
00:21:29,740 --> 00:21:31,540
im Prinzip, im Prinzip läuft's weiter.

567
00:21:31,540 --> 00:21:33,540
Folgendermaßen,

568
00:21:33,540 --> 00:21:35,540
Kamerastream läuft hier,

569
00:21:35,540 --> 00:21:37,540
der Kamerastream, er hat, ich stellverdient,

570
00:21:37,540 --> 00:21:39,540
gerade streamt er ein YouTube-Video von mir,

571
00:21:39,540 --> 00:21:41,540
okay? Also, das hier, Kamerastream,

572
00:21:41,540 --> 00:21:43,540
RTSP-Server, FFmpeg,

573
00:21:43,540 --> 00:21:45,540
pumpt da ein Video rein.

574
00:21:45,540 --> 00:21:47,540
Backend, das, äh,

575
00:21:47,540 --> 00:21:49,540
.NET-Backend geht per FFmpeg

576
00:21:49,540 --> 00:21:51,540
an den Stream dran

577
00:21:51,540 --> 00:21:53,540
und liest den Stream

578
00:21:53,540 --> 00:21:55,540
aus, dann baut es

579
00:21:55,540 --> 00:21:57,540
mit dem Browser eine WebRTC-Verbindung

580
00:21:57,540 --> 00:21:59,540
auf, mit Hilfe der Low-Level

581
00:21:59,540 --> 00:22:01,540
WebRTC-Rust-Library.

582
00:22:01,540 --> 00:22:03,540
Und dann streamt es das Video

583
00:22:03,540 --> 00:22:05,540
in den Browser. Okay, so, so,

584
00:22:05,540 --> 00:22:10,000
so funktioniert's gerade.

585
00:22:10,000 --> 00:22:12,000
Das ist jetzt wirklich absolut High-Level-Overview.

586
00:22:12,000 --> 00:22:14,000
So, nachdem ich das später ja

587
00:22:14,000 --> 00:22:17,640
laufen lassen möchte,

588
00:22:17,640 --> 00:22:19,640
in, in nem Container,

589
00:22:19,640 --> 00:22:21,640
müssen wir das Ganze jetzt erstmal

590
00:22:21,640 --> 00:22:23,640
vercontainerisieren.

591
00:22:23,640 --> 00:22:25,640
Das heißt, wir brauchen jetzt

592
00:22:25,640 --> 00:22:27,640
weder Rust, noch .NET, noch

593
00:22:27,640 --> 00:22:29,640
JavaScript, noch

594
00:22:29,640 --> 00:22:33,010
sonst irgendwas in der Richtung.

595
00:22:33,010 --> 00:22:35,010
Deswegen stoppe ich die Anwendung mal wieder.

596
00:22:35,010 --> 00:22:37,010
Und wir müssen uns jetzt mal ein Docker-File

597
00:22:37,010 --> 00:22:39,010
aus den Fingern saugen,

598
00:22:39,010 --> 00:22:41,010
das Sinn ergibt.

599
00:22:41,010 --> 00:22:43,010
Ich glaube, dass das tatsächlich ein etwas komplizierteres

600
00:22:43,010 --> 00:22:45,010
Docker-File wird,

601
00:22:45,010 --> 00:22:47,010
weil,

602
00:22:47,010 --> 00:22:49,010
.

603
00:22:49,010 --> 00:22:51,010
.

604
00:22:51,010 --> 00:22:53,010
.

605
00:22:53,010 --> 00:22:55,010
Was ist denn jetzt los hier?

606
00:22:55,010 --> 00:22:57,010
Das hört sich ja, hört sich ja fast schon hier

607
00:22:57,010 --> 00:22:59,010
...mäßig an.

608
00:22:59,010 --> 00:23:05,520
.

609
00:23:05,520 --> 00:23:07,520
.

610
00:23:07,520 --> 00:23:11,520
.

611
00:23:11,520 --> 00:23:13,520
.

612
00:23:13,520 --> 00:23:15,520
.

613
00:23:15,520 --> 00:23:17,520
.

614
00:23:17,520 --> 00:23:19,520
.

615
00:23:19,520 --> 00:23:21,520
.

616
00:23:21,520 --> 00:23:23,520
.

617
00:23:23,520 --> 00:23:25,520
.

618
00:23:25,520 --> 00:23:27,520
.

619
00:23:27,520 --> 00:23:29,520
.

620
00:23:29,520 --> 00:23:31,520
.

621
00:23:31,520 --> 00:23:33,520
.

622
00:23:33,520 --> 00:23:40,230
.

623
00:23:40,230 --> 00:23:44,230
.

624
00:23:44,230 --> 00:23:46,230
.

625
00:23:46,230 --> 00:23:48,230
.

626
00:23:48,230 --> 00:23:50,230
.

627
00:23:50,230 --> 00:23:52,230
.

628
00:23:52,230 --> 00:23:54,230
.

629
00:23:54,230 --> 00:23:57,600
.

630
00:23:57,600 --> 00:23:59,600
.

631
00:23:59,600 --> 00:24:01,600
.

632
00:24:01,600 --> 00:24:03,600
.

633
00:24:03,600 --> 00:24:05,600
.

634
00:24:05,600 --> 00:24:07,600
.

635
00:24:07,600 --> 00:24:09,600
.

636
00:24:09,600 --> 00:24:13,600
.

637
00:24:13,600 --> 00:24:15,600
.

638
00:24:15,600 --> 00:24:17,600
.

639
00:24:17,600 --> 00:24:19,600
.

640
00:24:19,600 --> 00:24:21,600
.

641
00:24:21,600 --> 00:24:23,600
.

642
00:24:23,600 --> 00:24:25,600
.

643
00:24:25,600 --> 00:24:27,600
.

644
00:24:27,600 --> 00:24:29,600
.

645
00:24:29,600 --> 00:24:31,600
.

646
00:24:31,600 --> 00:24:33,600
.

647
00:24:33,600 --> 00:24:35,600
.

648
00:24:35,600 --> 00:24:37,600
.

649
00:24:37,600 --> 00:24:39,600
. .

650
00:24:39,600 --> 00:24:41,600
. .

651
00:24:41,600 --> 00:24:43,600
. .

652
00:24:43,600 --> 00:24:45,600
. .

653
00:24:45,600 --> 00:24:54,930
. .

654
00:24:54,930 --> 00:24:59,080
. .

655
00:24:59,080 --> 00:25:01,080
. .

656
00:25:01,080 --> 00:25:03,080
. .

657
00:25:03,080 --> 00:25:05,080
. .

658
00:25:05,080 --> 00:25:07,080
. .

659
00:25:07,080 --> 00:25:12,560
. .

660
00:25:12,560 --> 00:25:16,070
. .

661
00:25:16,070 --> 00:25:18,070
. .

662
00:25:18,070 --> 00:25:20,070
. .

663
00:25:20,070 --> 00:25:22,230
Erlang, Fortran

664
00:25:22,230 --> 00:25:31,420
Okay, das muss ich mal in Ruhe durchlesen

665
00:25:31,420 --> 00:25:34,660
Ich schreibe mir das mal auf

666
00:25:34,660 --> 00:25:36,020
Leute, ich schreibe mir das mal auf, vielleicht machen wir das

667
00:25:36,020 --> 00:25:39,140
Vielleicht, vielleicht machen wir da echt mit

668
00:25:39,140 --> 00:25:39,780
Ja

669
00:25:39,780 --> 00:25:44,300
Warum nicht? Ist doch immer ganz nice

670
00:25:44,300 --> 00:25:49,700
In was?

671
00:25:52,970 --> 00:25:54,070
Was ist Vlang?

672
00:25:54,930 --> 00:25:56,030
The V-Programming

673
00:25:56,030 --> 00:25:58,090
The V-Programming Language

674
00:25:58,090 --> 00:25:59,010
Ich sag V

675
00:25:59,010 --> 00:26:02,430
Die V-Programmiersprache

676
00:26:02,430 --> 00:26:10,680
Das sieht ein bisschen aus

677
00:26:10,680 --> 00:26:11,800
Wie Go

678
00:26:11,800 --> 00:26:12,860
Ehrlich gesagt

679
00:26:12,860 --> 00:26:20,190
Das sieht Go doch

680
00:26:20,190 --> 00:26:21,870
Also außer, dass es

681
00:26:21,870 --> 00:26:23,430
FN ist und so, aber

682
00:26:23,430 --> 00:26:26,210
Moment mal, ist Go oder Rust

683
00:26:26,210 --> 00:26:27,950
FN? Ich bin gerade verwirrt

684
00:26:27,950 --> 00:26:28,450
Moment

685
00:26:28,450 --> 00:26:31,670
Rust ist FN, das sieht eine Mischung aus

686
00:26:31,670 --> 00:26:33,050
Zwischen Go und Rust

687
00:26:33,050 --> 00:26:44,270
Okay

688
00:26:44,270 --> 00:26:46,870
Na, ich weiß ja nicht

689
00:26:46,870 --> 00:26:54,820
Ja, aber

690
00:26:54,820 --> 00:26:56,780
Das ist jetzt ja nur wirklich kein Aushängeschild

691
00:26:56,780 --> 00:26:57,600
Von der Sprache

692
00:26:57,600 --> 00:27:00,220
Wie groß der Compiler und wie lange es dauert

693
00:27:00,220 --> 00:27:01,680
Den Compiler zu bauen, oder?

694
00:27:02,620 --> 00:27:03,420
Ich meine GCC

695
00:27:03,420 --> 00:27:04,520
Ich wollte gerade sagen

696
00:27:04,520 --> 00:27:07,160
Alter, GCC ist halt auch wieder so ein Ding

697
00:27:07,160 --> 00:27:09,280
Das dauert auch drei Stunden, bis das fertig ist

698
00:27:09,280 --> 00:27:12,660
Was aber nicht heißt, dass wenn ich GCC benutze

699
00:27:12,660 --> 00:27:14,100
Das schlecht sein muss dann

700
00:27:14,100 --> 00:27:16,160
Wobei GCC checkt halt auch keiner mehr

701
00:27:16,160 --> 00:27:23,270
Ist das so? Ich habe damit

702
00:27:23,270 --> 00:27:25,930
Keine Ahnung, ich kann dazu nichts sagen

703
00:27:25,930 --> 00:27:30,080
Okay, wir bauen jetzt ein Dogger-File

704
00:27:30,080 --> 00:27:31,040
Auf geht's

705
00:27:31,040 --> 00:27:33,460
Ich versuche mal

706
00:27:33,460 --> 00:27:35,100
Ein bisschen was dabei zu erklären, okay?

707
00:27:35,480 --> 00:27:37,240
Chatge, wer von euch

708
00:27:37,240 --> 00:27:37,880
Hat

709
00:27:37,880 --> 00:27:41,260
Viel Plan von Dogger? Also ich kriege das hin

710
00:27:41,260 --> 00:27:42,220
Ich will bloß mal so grob wissen

711
00:27:42,220 --> 00:27:43,800
Also machen wir es mal anders

712
00:27:43,800 --> 00:27:47,200
Wer von euch würde sagen

713
00:27:47,200 --> 00:27:50,580
Er ist der krasse Dogger-Container-Bau-Experte

714
00:27:50,580 --> 00:27:51,420
Wobei man sagen muss

715
00:27:51,420 --> 00:27:52,540
Streiche Dogger

716
00:27:52,540 --> 00:27:55,460
Er setzt es einfach durch Container

717
00:27:55,460 --> 00:27:57,320
Ja, weil Dogger hat ja

718
00:27:57,320 --> 00:27:59,040
Außer als CLI-Tool

719
00:27:59,040 --> 00:28:00,580
Mit den eigentlichen Containern und das

720
00:28:00,580 --> 00:28:03,440
Wie das heute im Enterprise-Umfeld läuft

721
00:28:03,460 --> 00:28:05,120
Eigentlich nur noch wenig zu tun

722
00:28:05,120 --> 00:28:07,960
Also seid ihr die krassen Container-Bau-Profis?

723
00:28:09,420 --> 00:28:09,940
Oder seid

724
00:28:09,940 --> 00:28:11,120
Würdet ihr eher sagen

725
00:28:11,120 --> 00:28:12,800
Würdet ihr eher sagen, naja

726
00:28:12,800 --> 00:28:16,160
Ich habe schon mal ein Dogger-File

727
00:28:16,160 --> 00:28:18,200
Erstellt, aber sonst nicht kompliziert war das nicht

728
00:28:18,200 --> 00:28:19,800
Also war das nicht

729
00:28:19,800 --> 00:28:21,160
War ein paar Zeilen und fertig ist

730
00:28:21,160 --> 00:28:23,860
Okay, also, denn wir müssen jetzt

731
00:28:23,860 --> 00:28:26,020
Ich versuche das mal zu erklären und dann hoffe ich

732
00:28:26,020 --> 00:28:27,420
Dass es funktioniert

733
00:28:27,420 --> 00:28:31,820
Also ich stelle mir das folgendermaßen vor

734
00:28:31,820 --> 00:28:32,640
Wir brauchen ja

735
00:28:33,460 --> 00:28:34,960
Moment

736
00:28:34,960 --> 00:28:37,800
Muss ich mal gucken

737
00:28:37,800 --> 00:28:39,360
Also, Ziel ist erstmal

738
00:28:39,360 --> 00:28:40,820
Ich weiß nämlich nicht, wie lange ich Zeit habe

739
00:28:40,820 --> 00:28:43,560
Vielleicht habe ich nur bis 15 Uhr oder 14.30 oder irgendwie so Zeit

740
00:28:43,560 --> 00:28:45,680
Ziel ist erstmal, dass wir ein Dogger-File bauen

741
00:28:45,680 --> 00:28:48,100
Was unsere Anwendung eben in ein Container-Image baut

742
00:28:48,100 --> 00:28:49,900
Das bisschen

743
00:28:49,900 --> 00:28:52,740
Unhandliche an dieser Anwendung ist

744
00:28:52,740 --> 00:28:53,220
Ihr seht

745
00:28:53,220 --> 00:28:54,940
Es gibt ein

746
00:28:54,940 --> 00:28:57,560
Low-Level-Part in Rust

747
00:28:57,560 --> 00:28:59,600
Das mit Go könnt ihr euch wegdenken

748
00:28:59,600 --> 00:29:01,580
Das mit Go gibt es nicht mehr

749
00:29:01,580 --> 00:29:03,420
Also das gibt es noch, aber das benutze ich

750
00:29:03,420 --> 00:29:04,240
Benutze ich aktuell nicht

751
00:29:04,240 --> 00:29:05,440
Das ist einfach nur da zum abgucken

752
00:29:05,440 --> 00:29:06,980
Es gibt

753
00:29:06,980 --> 00:29:08,240
Also es gibt eigentlich

754
00:29:08,240 --> 00:29:10,120
Mehrere Parts

755
00:29:10,120 --> 00:29:12,860
Wir brauchen einmal den Low-Level-Rust-Part

756
00:29:12,860 --> 00:29:15,920
Und wir brauchen den .NET-Backend-Part

757
00:29:15,920 --> 00:29:18,040
In Frontend ist noch nichts drin

758
00:29:18,040 --> 00:29:19,680
Das habe ich mir mal angelegt

759
00:29:19,680 --> 00:29:22,300
Falls ich ein bisschen mehr mache als eine HTML-Seite

760
00:29:22,300 --> 00:29:24,440
Und in

761
00:29:24,440 --> 00:29:25,360
Ja

762
00:29:25,360 --> 00:29:31,040
Hier ist das Rust-Zeug drin

763
00:29:31,040 --> 00:29:32,440
Und das Ding ist halt

764
00:29:32,440 --> 00:29:33,680
Ihr seht schon

765
00:29:33,680 --> 00:29:36,470
Die Dinger sind relativ gut

766
00:29:36,490 --> 00:29:37,490
Die Dinger sind relativ groß

767
00:29:37,490 --> 00:29:37,750
Also

768
00:29:37,750 --> 00:29:40,510
Rust ist 2,2 GB

769
00:29:40,510 --> 00:29:42,270
Erinnert mich ein bisschen an Node-Modules

770
00:29:42,270 --> 00:29:44,850
Die installieren ja auch immer Gott in die Welt

771
00:29:44,850 --> 00:29:46,990
Nicht ganz so schlimm wie Node-Modules

772
00:29:46,990 --> 00:29:48,950
Node-Modules wäre das Ding wahrscheinlich

773
00:29:48,950 --> 00:29:50,190
Eher 15G groß

774
00:29:50,190 --> 00:29:53,510
Aber Rust haut auch schon mal richtig rein

775
00:29:53,510 --> 00:29:54,930
So

776
00:29:54,930 --> 00:29:56,430
Dann haben wir unser .NET-Backend

777
00:29:56,430 --> 00:29:57,710
Und das war's

778
00:29:57,710 --> 00:30:00,330
So und wir können jetzt halt nicht einfach hergehen

779
00:30:00,330 --> 00:30:01,610
Und ein Docker-Image bauen

780
00:30:01,610 --> 00:30:03,150
Die Anwendung drin bauen

781
00:30:03,150 --> 00:30:04,930
Und das Docker-Image hochladen

782
00:30:04,930 --> 00:30:06,010
Was heißt können wir nicht

783
00:30:06,010 --> 00:30:06,210
Doch

784
00:30:06,210 --> 00:30:07,310
Das können wir schon

785
00:30:07,310 --> 00:30:08,010
Aber

786
00:30:08,010 --> 00:30:09,210
Das machen wir jetzt auch

787
00:30:09,210 --> 00:30:10,510
Dass ihr seht wo das Problem liegt

788
00:30:10,510 --> 00:30:13,610
Das Docker-Image ist dann am Ende halt saumäßig groß

789
00:30:13,610 --> 00:30:15,030
Weil der ganze Mist

790
00:30:15,030 --> 00:30:17,150
Den wir hier drinnen brauchen um es zu bauen

791
00:30:17,150 --> 00:30:19,270
Dann im Docker-Image landet

792
00:30:19,270 --> 00:30:21,490
Das will man ja eigentlich nicht

793
00:30:21,490 --> 00:30:23,390
Du willst ja eigentlich nur den Output haben

794
00:30:23,390 --> 00:30:27,790
Kann man für Rust kein Docker-Ignore mitgeben

795
00:30:27,790 --> 00:30:28,590
Doch kannst du

796
00:30:28,590 --> 00:30:30,450
Aber du brauchst dieses ganze Zeug hier drinnen

797
00:30:30,450 --> 00:30:32,290
Wenn du die Rust-Anwendung baust

798
00:30:32,290 --> 00:30:33,810
Also das heißt du brauchst es dann auch

799
00:30:33,810 --> 00:30:35,390
In den Build-Container

800
00:30:35,390 --> 00:30:39,610
Und ein Build-Container gleicht

801
00:30:39,610 --> 00:30:40,250
Der das

802
00:30:40,250 --> 00:30:42,870
Als Basis für das Image verwendet wird

803
00:30:42,870 --> 00:30:44,430
Sind die im Output-Image auch drinnen

804
00:30:44,430 --> 00:30:46,510
Und dann hast du im Endeffekt dann Docker-Images

805
00:30:46,510 --> 00:30:48,870
Die ja 3 GB groß sind

806
00:30:48,870 --> 00:30:49,790
Das ist natürlich kacke

807
00:30:49,790 --> 00:30:50,550
Das will man nicht haben

808
00:30:50,550 --> 00:30:54,390
Deswegen wird es wahrscheinlich auf ein Multi-Stage-Build rauslaufen

809
00:30:54,390 --> 00:30:55,310
Ich glaube so heißt das

810
00:30:55,310 --> 00:30:58,790
Dass wir erst einmal Rust bauen

811
00:30:58,790 --> 00:31:00,210
Dann .NET bauen

812
00:31:00,210 --> 00:31:01,870
Dann die Sachen rüber kopieren

813
00:31:01,870 --> 00:31:03,570
Und am Ende dann

814
00:31:03,570 --> 00:31:06,250
Einen möglichst kleinen Container bauen

815
00:31:06,250 --> 00:31:10,320
Doch doch doch

816
00:31:10,320 --> 00:31:10,760
Ja ja

817
00:31:10,760 --> 00:31:14,020
Also wir fangen jetzt erstmal an

818
00:31:14,020 --> 00:31:16,560
Wie alle anfangen mit Docker-Files

819
00:31:16,560 --> 00:31:17,080
Und zwar

820
00:31:17,080 --> 00:31:19,260
Wir schreiben das mal untereinander

821
00:31:19,260 --> 00:31:20,560
Und da werdet ihr auch gleich sehen

822
00:31:20,560 --> 00:31:22,480
Wo das eigentliche Problem ist

823
00:31:22,480 --> 00:31:25,840
Ich will ein Debian-Image

824
00:31:25,840 --> 00:31:26,600
Nach Möglichkeit

825
00:31:26,600 --> 00:31:33,620
Also wir fangen mal ganz unbedarft an

826
00:31:33,620 --> 00:31:34,700
Wir nehmen ein Debian-Image

827
00:31:34,700 --> 00:31:36,420
Installieren uns alle Abhängigkeiten

828
00:31:36,420 --> 00:31:38,960
Kompilieren das und gucken mal wie groß das Image ist

829
00:31:38,960 --> 00:31:41,480
Ich persönlich denke wir werden am Ende

830
00:31:41,480 --> 00:31:42,780
Ein Multi-Stage-Build haben

831
00:31:42,780 --> 00:31:44,440
Das offizielle Rust-Image

832
00:31:44,500 --> 00:31:46,660
Für Rust zum Kompilieren verwenden

833
00:31:46,660 --> 00:31:48,980
Das offizielle

834
00:31:48,980 --> 00:31:51,640
ASP.NET-Image verwenden

835
00:31:51,640 --> 00:31:52,820
Für das Output-Image

836
00:31:52,820 --> 00:31:55,140
Und wahrscheinlich ein stinknormales Debian oder so

837
00:31:55,140 --> 00:31:57,380
Um die .NET-Sache zu bauen

838
00:31:57,380 --> 00:31:58,280
Oder ne Moment

839
00:31:58,280 --> 00:31:59,720
Microsoft hat ja auch offizielle

840
00:31:59,720 --> 00:32:02,960
SDK-Images zum Bauen

841
00:32:02,960 --> 00:32:04,660
Wir machen das erstmal von Hand

842
00:32:04,660 --> 00:32:05,940
Und dann verbessern wir das

843
00:32:05,940 --> 00:32:07,440
Also from

844
00:32:07,440 --> 00:32:08,680
Jetzt habe ich keine Ahnung

845
00:32:08,680 --> 00:32:11,200
Debian-Docker-Hub

846
00:32:11,200 --> 00:32:12,940
Wie da die Tags heißen

847
00:32:12,940 --> 00:32:18,280
Bookworm

848
00:32:18,280 --> 00:32:24,010
Bookworm klingt gut

849
00:32:24,010 --> 00:32:27,350
Und das ist einfach Debian Bookworm oder?

850
00:32:27,350 --> 00:32:28,710
Debian

851
00:32:28,710 --> 00:32:32,270
Bookworm

852
00:32:32,270 --> 00:32:33,770
Und mich einfach gleich an Rust damit füllen

853
00:32:33,770 --> 00:32:34,630
Doch doch doch

854
00:32:34,630 --> 00:32:38,090
Wie gesagt da wirds wahrscheinlich drauf rauslaufen

855
00:32:38,090 --> 00:32:41,470
Da wirds wahrscheinlich drauf rauslaufen

856
00:32:41,470 --> 00:32:44,590
Aber ich bin mir noch unschlüssig wie wir das überhaupt bauen

857
00:32:44,590 --> 00:32:45,390
Also

858
00:32:45,390 --> 00:32:47,030
From Debian Bookworm

859
00:32:47,030 --> 00:32:59,750
Nenn ich mal ASP-Build oder sowas

860
00:32:59,750 --> 00:33:01,990
Na es juckt

861
00:33:01,990 --> 00:33:03,570
Wir bauen jetzt erstmal ganz

862
00:33:03,570 --> 00:33:04,570
Simpel

863
00:33:04,570 --> 00:33:06,570
So untereinander das was wir brauchen

864
00:33:06,570 --> 00:33:07,570
Damit die Anwendung baut

865
00:33:07,570 --> 00:33:08,570
Und dann machen wir es schön

866
00:33:08,570 --> 00:33:09,570
Das es auch klein wird

867
00:33:09,570 --> 00:33:10,570
Und das es nur das baut was es soll

868
00:33:10,570 --> 00:33:11,570
Und rüber kopiert

869
00:33:11,570 --> 00:33:12,570
Und das man dann auch sieht

870
00:33:12,570 --> 00:33:13,570
Das es durchaus Sinn macht

871
00:33:13,570 --> 00:33:14,570
Mal länger als 2 Minuten in seine Docker-Files zu stecken

872
00:33:14,570 --> 00:33:15,570
Also ich würde sagen

873
00:33:15,570 --> 00:33:16,570
Wir benutzen aktuelles Debian-Image

874
00:33:16,570 --> 00:33:17,570
Weil Debian beste

875
00:33:17,570 --> 00:33:18,570
Da haben wir sowas wie WorkDir

876
00:33:18,570 --> 00:33:19,570
Kann man das eigentlich auch kleinschreiben?

877
00:33:19,570 --> 00:33:20,570
Ich glaube man darf das kleinschreiben

878
00:33:20,570 --> 00:33:21,570
Irgendwie habe ich mir das so angewöhnt

879
00:33:21,570 --> 00:33:22,570
Das immer groß zu schreiben

880
00:33:22,570 --> 00:33:23,570
Aber ich glaube man darf das auch kleinschreiben

881
00:33:23,570 --> 00:33:24,570
Aber ich glaube man darf das auch kleinschreiben

882
00:33:24,570 --> 00:33:25,570
Aber ich glaube man darf das auch kleinschreiben

883
00:33:25,570 --> 00:33:26,570
Aber ich glaube man darf das auch kleinschreiben

884
00:33:26,570 --> 00:33:27,570
Das kann man aber auch mittlerweile mittlerweile auch kleinschreiben

885
00:33:27,570 --> 00:33:28,570
Die schreiben es auch groß

886
00:33:28,570 --> 00:33:29,570
Guck hier in ihren

887
00:33:29,570 --> 00:33:30,570
In ihren

888
00:33:30,570 --> 00:33:31,570
Examples

889
00:33:31,570 --> 00:33:32,570
Also wir fangen ohne MultiStage Build an

890
00:33:32,570 --> 00:33:33,570
Wir fangen ganz simpel mit einem Debian-Image an

891
00:33:33,570 --> 00:33:36,400
Und lassen es mal da drinnen bauen

892
00:33:36,400 --> 00:33:37,400
Also

893
00:33:37,400 --> 00:33:38,400
WorkDir

894
00:33:38,400 --> 00:33:41,540
Machen wir mal sowas wie

895
00:33:41,540 --> 00:33:42,540
Bild

896
00:33:42,540 --> 00:33:43,540
WorkDir heißt

897
00:33:43,540 --> 00:33:44,540
Alle Sachen

898
00:33:44,540 --> 00:33:45,540
Anbefehle

899
00:33:45,540 --> 00:33:46,540
Die jetzt hier

900
00:33:46,540 --> 00:33:47,540
Hier

901
00:33:47,540 --> 00:33:48,540
Da

902
00:33:48,540 --> 00:33:49,540
Da

903
00:33:49,540 --> 00:33:50,540
Hier

904
00:33:50,540 --> 00:33:51,540
Da

905
00:33:51,540 --> 00:33:54,560
Hier

906
00:33:54,560 --> 00:33:55,560
Hier

907
00:33:55,560 --> 00:33:56,560
Hier

908
00:33:56,560 --> 00:33:57,560
Hier

909
00:33:57,560 --> 00:33:58,560
Hier

910
00:33:58,560 --> 00:34:00,870
Hier

911
00:34:00,870 --> 00:34:01,870
Hier

912
00:34:01,870 --> 00:34:02,870
Hier

913
00:34:02,870 --> 00:34:03,870
Hier

914
00:34:03,870 --> 00:34:08,970
hier kommen kannst du ausführen ohne dass du von cd reinschreiben muss ja

915
00:34:08,970 --> 00:34:14,670
also wenn man jetzt zum beispiel so was hier macht wie copy oder sowas von a

916
00:34:14,670 --> 00:34:21,850
nach b dann bezieht sich das automatisch auf bild was ganz ach so und es sorgt

917
00:34:21,850 --> 00:34:26,470
dafür dass das verzeichnis glaubt sogar angelegt wird so als erstes weißen

918
00:34:26,470 --> 00:34:44,360
debian image ist run up get update ok also docker bild punkt es ist noch

919
00:34:44,360 --> 00:34:50,060
nicht viel passiert ab geht ab hat er jetzt wirklich geupdatet das erscheint

920
00:34:50,060 --> 00:34:57,420
mir erschien mir ein bisschen bisschen schnell ok dann run up geht install was

921
00:34:57,420 --> 00:35:02,040
brauche auf jeden fall wir brauchen bestimmt curl wie get curl und so und so

922
00:35:02,040 --> 00:35:02,380
zeug

923
00:35:02,840 --> 00:35:14,770
get bestimmt auch macht das jetzt was was y fehlt muss man machen wenn man das

924
00:35:14,770 --> 00:35:18,610
ins krebs verwenden will ansonsten will ja nämlich dass man jetzt ein tippt und

925
00:35:18,610 --> 00:35:23,110
man kann ich jetzt eintippen wenn es interaktive im skript läuft okay hat

926
00:35:23,110 --> 00:35:29,170
funktioniert übrigens auch so ein ding doch verwendet ja seit ein paar version

927
00:35:29,170 --> 00:35:36,010
bild kit also vielleicht kennt ihr noch docker bild von früher die waren ja dann

928
00:35:36,010 --> 00:35:36,590
anders aus

929
00:35:36,610 --> 00:35:40,090
auf jeden fall mittlerweile verwenden die ja glaube ich bild kit wenn es

930
00:35:40,090 --> 00:35:44,070
verfügbar ist ich muss sagen mir hat der output früher besser gefallen als der

931
00:35:44,070 --> 00:35:53,860
bild kit output der bild kit output sieht sehr fancy aus du hast recht das

932
00:35:53,860 --> 00:35:58,200
ist sinnvoll falls irgendwelche rückfrage rückfragen wir abkommen ja ja

933
00:35:58,200 --> 00:36:02,440
das stimmt das schenken wir uns jetzt mal weil ich wahrscheinlich das debian

934
00:36:02,440 --> 00:36:07,660
image dann nicht verwenden wird ich weiß gar nicht ob man das zum alten output

935
00:36:07,660 --> 00:36:12,470
wiederum formatieren kann

936
00:36:12,630 --> 00:36:18,330
also wie geht es weiter wir installieren paar sachen ich bin mir nicht sicher was wir sonst

937
00:36:18,330 --> 00:36:26,790
noch so brauchen so jetzt ich würde sagen wir bauen wir bilden erst mal rast okay wir bilden

938
00:36:26,790 --> 00:36:34,410
erst mal rast damit man rast bilden kann im container also die die rast app wo sich quasi

939
00:36:34,410 --> 00:36:41,910
alles was hier drin ist moment nicht alles was hierüber ist garantiert nicht alles was hierüber

940
00:36:41,910 --> 00:36:46,350
ist weil dann kopiere ich auch zwei gigabyte alleine das will ich ja garantiert nicht haben

941
00:36:46,350 --> 00:36:57,330
also ich will eigentlich nur aus web wie heißt das ding mein ordner aus web rtc rast will ich

942
00:36:57,330 --> 00:37:04,570
eigentlich nur source und die cargo falls rüber kopieren cargo ist das npm von rast und in so aus

943
00:37:04,570 --> 00:37:11,670
liegen halt fährt es gedacht so ausfalls also copy web rtc rast

944
00:37:11,910 --> 00:37:26,720
machen wir mal irgendwie so was cargo sternchen dahin copy all docker ignore komme auch machen

945
00:37:26,720 --> 00:37:30,080
aber es sind nur zwei sachen lieber kopieren müssen es sollte wahrscheinlich so auch gehen

946
00:37:30,080 --> 00:37:40,580
so und dann so opieren wir über source ich glaube das muss man so nennen damit das funktioniert was

947
00:37:40,580 --> 00:37:57,990
macht das denn es bezieht sich auf was was das rast programm rust was das macht das

948
00:37:58,130 --> 00:38:05,270
sorgt dafür, wenn du ein Update machst und Rückfragen kommen in Debian, dass es die Rückfragen

949
00:38:05,270 --> 00:38:13,130
halt einfach mit der Default-Antwort beantwortet, anstatt dass du eine Abfrage kriegst, weil

950
00:38:13,130 --> 00:38:17,370
du kannst ja in einem interaktiven Skript, in einem Docker-Bild keine interaktive Abfrage

951
00:38:17,370 --> 00:38:23,610
machen an den User, weil es gibt ja nichts zum Inputten. Also du hast zum Beispiel eine

952
00:38:23,610 --> 00:38:28,830
Sache. Stell dir vor, du hast von Hand in deiner ssh-Config rumeditiert. Du machst

953
00:38:28,830 --> 00:38:34,690
ein Upget oder ein Upgrade, was auch immer, eines der Update-Commands und dann sagt er

954
00:38:34,690 --> 00:38:41,930
dir, hey User, du musst mir jetzt sagen, ob du die Default-Maintainer-Version der ssh-Config

955
00:38:41,930 --> 00:38:46,750
installieren möchtest beim Package-Upgrade oder ob du deine Version behalten willst.

956
00:38:47,430 --> 00:38:53,490
Ich glaube, die Default-Antwort ist, deine Version behalten. Wenn du das ausschaltest,

957
00:38:53,610 --> 00:38:57,610
dann nimmt er immer die Default-Antwort und fragt dich nicht, weil er kann dich ja in

958
00:38:57,610 --> 00:39:02,920
einem interaktiven Skript, was ohne dich läuft, nicht fragen. So, schauen wir mal, ob das

959
00:39:02,920 --> 00:39:09,960
jetzt funktioniert, was ich hier gemacht habe. Bild. Ja, scheint funktioniert. Ist das nicht

960
00:39:09,960 --> 00:39:15,360
durch den Parameter Y? Nur halb, das bezieht sich nur auf die Abfragen von Upt, beziehungsweise

961
00:39:15,360 --> 00:39:23,640
von Upget. Wenn irgendwelche Packages, die Upt selbst upgradet, Abfragen haben, dann nicht.

962
00:39:24,040 --> 00:39:24,900
Das bezieht sich nur darauf, dass du die Abfragen von Upt, die du selbst upgradest,

963
00:39:24,900 --> 00:39:31,900
bezieht sich nur darauf, dass du nicht mehr Yes bei Upt eingeben musst. Okay, das hat funktioniert.

964
00:39:33,300 --> 00:39:43,100
Dann ist jetzt die große Preisfrage, Chatge. Wie kriegen wir Rust in unserem Debian-Image

965
00:39:43,100 --> 00:39:51,640
installiert? Ich würde sagen, Rust up. Perfekt, exzellent, das wollte ich haben. Gut, dass wir in

966
00:39:51,640 --> 00:39:58,700
weißer Voraussicht schon mal Curl installiert haben. Was ist das? Run, Curl, Proto, HTTPS, TLS, V1.2,

967
00:39:58,700 --> 00:40:12,500
SSF, X, genau das wollte ich haben. Das ist, genau so hätte ich es auch selbst geschrieben. So, Bild. Oh, was

968
00:40:12,500 --> 00:40:29,540
jetzt? Unable to run interactively. Run with minus Y to accept. Ach so, ach so, ach so. Jetzt bin ich mir unschlüssig. So?

969
00:40:29,540 --> 00:40:58,300
Nee. Moment, ich weiß, wo ich mir das abgucken kann. Warte mal. Dort, netz, hier, hier, exzellent. Minus Y. Ja, das stimmt.

970
00:40:59,700 --> 00:41:05,840
DPKG ist ja eigentlich die Debian-Geschichte für Packages. Okay, Rust wird gedownloadet. Das brauchen wir wahrscheinlich nicht.

971
00:41:05,940 --> 00:41:12,600
Wie gesagt, ich denke, ich werde dann auf das offizielle Rust-Image wechseln, was glaube ich auch auf Debian basiert, wenn ich das richtig im Kopf habe.

972
00:41:12,600 --> 00:41:12,800
Gell?

973
00:41:14,480 --> 00:41:29,840
Rust-Docker-Image basiert auch auf Debian. Debian, wie das die geilen Leute sagen. Ja, guckt hier. Buster. Gibt's Bookworm? Bullseye gibt's? Bookworm gibt's auch.

974
00:41:31,120 --> 00:41:35,840
Und Alpine haben sie auch am Start. Aber Alpine, scheiß drauf. Kein Bock. Geh weg.

975
00:41:38,360 --> 00:41:46,580
Müsste deine Variante mit minus, minus, minus Y auch gehen? Keine Ahnung. Nachdem ich mir da unschlüssig war, wir können es ja mal ausprobieren. Nachdem ich mir da unschlüssig war,

976
00:41:47,000 --> 00:41:47,920
habe ich es mal sein gelassen.

977
00:41:47,940 --> 00:41:49,420
Nee.

978
00:41:51,900 --> 00:41:52,620
Funktioniert nicht.

979
00:41:54,620 --> 00:41:58,060
Weil minus, minus heißt ja eigentlich, es kommen keine Options mehr. Keine Ahnung.

980
00:41:59,200 --> 00:42:03,240
Ehrlich gesagt, checke ich auch gar nicht, was das macht. Aber ich weiß, dass es funktioniert.

981
00:42:04,200 --> 00:42:04,940
Und deswegen...

982
00:42:06,660 --> 00:42:07,160
Ach so.

983
00:42:08,400 --> 00:42:12,480
Okay, Standard-In. Aber warum brauche ich Standard-In, wenn ich es doch schon reinpipe in Standard-In?

984
00:42:12,860 --> 00:42:15,560
Wie dem auch sei, keine Ahnung. Ist mir auch wurscht. Es funktioniert.

985
00:42:15,560 --> 00:42:16,060
Okay.

986
00:42:22,810 --> 00:42:30,250
Debian Alpine sehe ich tatsächlich auch so. Ich kann jetzt zumindest aus meiner Sicht erklären, warum ich der Meinung bin, dass Debian größer Alpine ist.

987
00:42:30,730 --> 00:42:34,930
Also, eines der riesen Vorteile von Alpine ist ja erstens, dass es minimalistisch ist.

988
00:42:35,970 --> 00:42:40,270
Minimalistische Containerdistributionen finde ich aber gar nicht mal so relevant.

989
00:42:41,310 --> 00:42:49,470
Weil, wenn du richtig dein Docker-File baust, kopierst du ja nicht quasi dein Bild-Image in dein Target-Image rein,

990
00:42:49,870 --> 00:42:51,330
sondern nur das, was du gebaut hast.

991
00:42:51,350 --> 00:42:54,750
Das heißt, also das Image, was du dann eigentlich startest.

992
00:42:55,030 --> 00:43:00,470
Das heißt, es ist eh gar nicht so wichtig, dass das ein besonders minimalistisches System ist,

993
00:43:00,510 --> 00:43:04,790
weil Debian ohne zusätzliche Sachen installiert ist auch relativ minimalistisch.

994
00:43:05,090 --> 00:43:10,570
Dann ist es vielleicht 15 MB mehr als Alpine oder so, aber so what? Juckt ja nicht.

995
00:43:11,390 --> 00:43:13,910
Dazu kommt, dass Alpine regelmäßig mal Problemchen hat.

996
00:43:14,710 --> 00:43:16,110
Zum Beispiel mit DNS-Auflösung.

997
00:43:16,790 --> 00:43:20,310
Ich weiß nicht, ob das mittlerweile gefixt ist, aber Debian...

998
00:43:20,310 --> 00:43:21,110
Äh, Alpine...

999
00:43:21,350 --> 00:43:24,950
Hat, glaube ich, mit DNS-Antworten größer...

1000
00:43:24,950 --> 00:43:27,330
Einem Kilobyte oder sowas Probleme.

1001
00:43:28,830 --> 00:43:30,690
Alpine DNS Error.

1002
00:43:33,010 --> 00:43:34,210
Ja, genau, ja.

1003
00:43:35,690 --> 00:43:37,230
DNS Resolution in Alpine.

1004
00:43:37,470 --> 00:43:42,410
Ach ja, und das liegt daran, dass Alpine, um besonders minimalistisch zu sein,

1005
00:43:42,410 --> 00:43:49,790
nicht die normale GLibc verwendet, sondern Musel-Libc.

1006
00:43:50,610 --> 00:43:51,410
Das ist quasi eine alternative...

1007
00:43:52,850 --> 00:43:54,890
Implementierung der C-Standard-Library.

1008
00:43:55,410 --> 00:44:00,370
Wobei man sagen muss, was in GLibc drin ist, ist nicht unbedingt alles rein Standard.

1009
00:44:01,330 --> 00:44:04,070
Es ist eine Neuimplementierung.

1010
00:44:05,270 --> 00:44:10,630
Und besonders minimalistisch und schön für Self-Content-Anwendungen und sowas.

1011
00:44:11,070 --> 00:44:16,570
Darauf basiert Alpine, aber die haben zum Beispiel Probleme aufgrund dessen mit größeren DNS-Antworten.

1012
00:44:16,570 --> 00:44:21,950
Ich bin mir gar nicht sicher, ob hier drin steht, was das eigentliche Problem ist.

1013
00:44:27,940 --> 00:44:30,400
Aber das Problem ist, wenn die DNS-Antworten zu groß sind,

1014
00:44:31,240 --> 00:44:35,980
dann gibt es einen Error in Alpine.

1015
00:44:36,920 --> 00:44:40,400
Zumindest war das mal ein größeres Problem vor einem halben Jahr oder so.

1016
00:44:40,460 --> 00:44:41,340
Und das habe ich mir gemerkt.

1017
00:44:43,640 --> 00:44:45,220
Das kann durchaus sein, dass es gefixt ist.

1018
00:44:45,380 --> 00:44:45,660
Ja, ja.

1019
00:44:46,780 --> 00:44:48,500
Das kann durchaus sein, dass es gefixt ist.

1020
00:44:48,580 --> 00:44:50,160
Das ist natürlich das, was mir als erstes...

1021
00:44:50,160 --> 00:44:52,000
Ich gehe auch mal stark von aus, dass es gefixt ist.

1022
00:44:52,000 --> 00:44:53,580
Aber Alpine hat öfters mal kleine Probleme.

1023
00:44:56,050 --> 00:44:57,950
Ja, das Debian-Image ist größer, das stimmt.

1024
00:44:58,450 --> 00:45:00,490
Aber so ein Riesenunterschied ist es am Ende nicht.

1025
00:45:00,950 --> 00:45:02,830
Und ich finde Debian einfach angenehmer.

1026
00:45:08,800 --> 00:45:09,240
Cargo-Chef.

1027
00:45:09,980 --> 00:45:11,360
Was es nicht alles gibt hier.

1028
00:45:14,160 --> 00:45:14,960
Cargo-Chef.

1029
00:45:23,640 --> 00:45:27,200
Das ist der Grund, warum ich Debian gerne verwende als Base-Image.

1030
00:45:28,060 --> 00:45:32,360
Wie gesagt, ich glaube auch gar nicht, dass wir hierbei bleiben werden, sondern das Rust-Base-Image verwenden.

1031
00:45:32,440 --> 00:45:32,640
Okay.

1032
00:45:33,680 --> 00:45:34,680
Jetgear, auf geht's.

1033
00:45:35,300 --> 00:45:36,960
Docker-Build am Start.

1034
00:45:36,960 --> 00:45:40,300
Und jetzt müssen wir Rust bilden.

1035
00:45:41,000 --> 00:45:45,320
Also, wir brauchen jetzt sowas wie Cargo-Build.

1036
00:45:45,380 --> 00:45:45,800
Release.

1037
00:45:46,400 --> 00:45:48,300
Wir testen erstmal, ob das so funktioniert.

1038
00:45:49,660 --> 00:45:50,620
Also, Run.

1039
00:45:51,360 --> 00:45:51,700
CD.

1040
00:45:54,360 --> 00:45:54,820
Ach so.

1041
00:45:55,360 --> 00:45:55,680
Moment.

1042
00:45:57,000 --> 00:45:59,520
Was muss man machen, nachdem man Rust abinstalliert hat?

1043
00:45:59,640 --> 00:46:00,400
Werden wir jetzt gleich sehen.

1044
00:46:00,920 --> 00:46:01,280
CD.

1045
00:46:01,420 --> 00:46:02,260
Web-RTC.

1046
00:46:02,720 --> 00:46:03,040
Rust.

1047
00:46:04,060 --> 00:46:05,960
Und da drin machen wir jetzt Cargo-Build.

1048
00:46:06,020 --> 00:46:06,320
Release.

1049
00:46:06,640 --> 00:46:08,020
Vermutlich wird das nicht funktionieren.

1050
00:46:09,660 --> 00:46:10,100
Bam.

1051
00:46:10,300 --> 00:46:11,160
Wer hätte das gedacht?

1052
00:46:11,820 --> 00:46:13,880
Can CD to Web-RTC Rust.

1053
00:46:15,620 --> 00:46:16,300
Warum nicht?

1054
00:46:16,660 --> 00:46:17,120
Was ist das Problem?

1055
00:46:17,140 --> 00:46:18,940
Ah, ich kack-Noob.

1056
00:46:19,860 --> 00:46:20,920
Ich muss gar nicht CD'en.

1057
00:46:21,040 --> 00:46:22,360
Ich hab doch alles hier richtig hinkopiert.

1058
00:46:22,620 --> 00:46:22,880
Lul.

1059
00:46:30,070 --> 00:46:37,410
Ich nehm wahrscheinlich einfach die offiziellen Microsoft-ASP.NET-Core-Images.

1060
00:46:41,030 --> 00:46:41,550
Oh, Build.

1061
00:46:42,650 --> 00:46:44,410
Geht nicht, weil...

1062
00:46:44,410 --> 00:46:45,250
Cargo-Not-Found.

1063
00:46:45,330 --> 00:46:45,950
Ja, wunderbar.

1064
00:46:48,050 --> 00:46:53,610
Alter, wo liegt denn bitte schon Cargo, nachdem man Rust abinstalliert hat?

1065
00:46:55,310 --> 00:46:55,830
Okay.

1066
00:46:55,830 --> 00:46:55,910
Okay.

1067
00:46:56,290 --> 00:46:56,770
Ähm...

1068
00:46:56,770 --> 00:46:58,430
Weiß ich...

1069
00:46:58,430 --> 00:47:02,130
Äh...

1070
00:47:02,130 --> 00:47:02,350
Moment.

1071
00:47:03,030 --> 00:47:04,690
Wir gucken mal nach, Leute.

1072
00:47:04,790 --> 00:47:05,550
Wir gucken mal nach.

1073
00:47:06,170 --> 00:47:06,350
Hier.

1074
00:47:08,350 --> 00:47:09,630
Wir machen uns mal einfach.

1075
00:47:09,770 --> 00:47:11,530
Wir taggen das Bild schon mal gleich.

1076
00:47:11,610 --> 00:47:14,470
Und zwar als CamChamp Version 0.1.

1077
00:47:15,010 --> 00:47:15,190
So.

1078
00:47:15,570 --> 00:47:17,350
Jetzt können wir sagen, Docker run.

1079
00:47:19,230 --> 00:47:19,650
Ja, ja.

1080
00:47:19,750 --> 00:47:20,590
Minus, minus, m.

1081
00:47:21,430 --> 00:47:22,730
Ist es minus it?

1082
00:47:22,850 --> 00:47:23,630
Oder ist es...

1083
00:47:23,630 --> 00:47:24,650
Ich kann mir...

1084
00:47:24,650 --> 00:47:27,950
Es gibt so ein paar Sachen, die mach ich prinzipiell immer falsch.

1085
00:47:27,950 --> 00:47:28,590
Falsch.

1086
00:47:28,950 --> 00:47:31,610
So, CamChamp.

1087
00:47:32,550 --> 00:47:32,970
Bash.

1088
00:47:34,670 --> 00:47:35,530
Hat's funktioniert?

1089
00:47:36,410 --> 00:47:37,270
Okay, hat funktioniert.

1090
00:47:37,790 --> 00:47:38,910
So, ähm...

1091
00:47:38,910 --> 00:47:39,710
Was wollte ich jetzt gucken?

1092
00:47:39,770 --> 00:47:40,850
Wo Cargo liegt, gell?

1093
00:47:41,970 --> 00:47:46,030
Also wir sind jetzt, nur mal zur Erklärung, falls man das so schnell nicht mitgekommen ist.

1094
00:47:46,050 --> 00:47:46,690
Ich zeig das nochmal.

1095
00:47:47,690 --> 00:47:49,770
Also ich hab das Container-Image gebaut.

1096
00:47:50,470 --> 00:47:52,650
Und da kommt ja so eine ID raus.

1097
00:47:52,790 --> 00:47:56,070
Oder man gibt dem Container-Image einen Namen, einen Tag.

1098
00:47:57,550 --> 00:47:58,870
Und ich hab das...

1099
00:47:58,870 --> 00:47:59,870
Ich hab das Image gebaut.

1100
00:47:59,970 --> 00:48:01,790
Ich hab das Image getaggt mit dem Name.

1101
00:48:02,690 --> 00:48:04,710
Und jetzt kann ich das Image starten.

1102
00:48:05,550 --> 00:48:05,730
So.

1103
00:48:06,230 --> 00:48:11,030
Und minus, minus, m heißt, nachdem ich das Image gestartet hab und quasi es wieder gestoppt wird,

1104
00:48:11,670 --> 00:48:13,190
soll es auch gleich gelöscht werden.

1105
00:48:13,910 --> 00:48:20,170
Minus i ist Interactive und t ist Konsolen-Allocation oder irgendwie sowas.

1106
00:48:20,830 --> 00:48:22,910
Das ist der Tag vom eben gebauten Image.

1107
00:48:23,010 --> 00:48:25,670
Und das ist das Programm, was er da drin starten soll.

1108
00:48:25,670 --> 00:48:28,830
Also im Prinzip startet er eine Shell im Container-Image.

1109
00:48:28,870 --> 00:48:34,730
Das heißt, wir können jetzt nachgucken, wo RustUp den Kram installiert hat.

1110
00:48:37,180 --> 00:48:37,860
Keine Ahnung.

1111
00:48:37,980 --> 00:48:39,480
Guck mal, es gibt da auch ein Cargo.

1112
00:48:40,140 --> 00:48:41,860
Cargo, Bin, Cargo.

1113
00:48:42,980 --> 00:48:45,100
Okay, vielleicht, soll ich das vielleicht direkt angeben?

1114
00:48:51,130 --> 00:48:51,910
Soll ich das vielleicht...

1115
00:48:51,910 --> 00:48:53,650
Wo ist eigentlich meine...

1116
00:48:54,190 --> 00:48:57,110
Wo ist eigentlich meine Cargo-Tommel und sowas?

1117
00:48:58,070 --> 00:48:58,590
Irgendwie...

1118
00:48:58,590 --> 00:48:59,290
Irgendwie ist die weg.

1119
00:49:00,510 --> 00:49:02,610
Bada-bum-dings-bums-dansch-fridens-ab.

1120
00:49:03,030 --> 00:49:03,590
Wo sind die hin?

1121
00:49:03,590 --> 00:49:04,970
Die hab ich doch rüber kopiert.

1122
00:49:05,030 --> 00:49:05,490
Die müsste doch eigentlich...

1123
00:49:05,490 --> 00:49:06,150
Die müsste auch da sein.

1124
00:49:09,810 --> 00:49:10,550
Aber war es das nicht?

1125
00:49:13,600 --> 00:49:16,160
So, Build, Cargo, Cargo...

1126
00:49:16,160 --> 00:49:18,140
Ne, Bin, Cargo.

1127
00:49:19,560 --> 00:49:19,760
Ja.

1128
00:49:20,360 --> 00:49:21,080
Äh, Build.

1129
00:49:23,660 --> 00:49:25,200
No Cargo-Tommel-Fawn.

1130
00:49:25,280 --> 00:49:25,960
Ja, ja, ist okay.

1131
00:49:26,420 --> 00:49:26,840
Ist gut.

1132
00:49:26,960 --> 00:49:27,340
Ist gut.

1133
00:49:28,000 --> 00:49:29,360
Also, nochmal bauen.

1134
00:49:29,820 --> 00:49:30,260
Run.

1135
00:49:30,920 --> 00:49:33,600
Und zwar Run Cargo Build Release.

1136
00:49:34,560 --> 00:49:36,820
Und wo ist das Problem?

1137
00:49:36,820 --> 00:49:37,840
Sorry for Bash.

1138
00:49:38,160 --> 00:49:38,820
Pog Subscription.

1139
00:49:38,820 --> 00:49:39,420
Subscription.

1140
00:49:39,900 --> 00:49:44,020
Wo ist das Problem, dass er meine Tommel-Config nicht rüber kopiert?

1141
00:49:44,160 --> 00:49:44,780
Da ist sie doch hier.

1142
00:49:44,840 --> 00:49:45,940
Guck, da ist noch Bestande.

1143
00:49:48,620 --> 00:49:48,860
Ach.

1144
00:49:49,360 --> 00:49:50,460
Guck mal, das ist klein geschrieben.

1145
00:49:50,580 --> 00:49:51,920
Muss das groß geschrieben sein vielleicht?

1146
00:49:52,780 --> 00:49:52,920
So.

1147
00:49:53,260 --> 00:49:58,360
Übrigens, jetzt sieht man eine Sache, worauf man unbedingt achten muss beim Docker.

1148
00:49:58,620 --> 00:50:00,160
Beim Docker-Image erstellen.

1149
00:50:00,720 --> 00:50:04,220
Was wird jetzt passieren, Leute, wenn ich das nochmal bilden lasse?

1150
00:50:05,240 --> 00:50:06,460
Also, ich zeige euch das mal.

1151
00:50:06,580 --> 00:50:07,240
So, ja.

1152
00:50:08,620 --> 00:50:09,280
Docker Run.

1153
00:50:09,380 --> 00:50:10,080
Nein, nicht Docker Run.

1154
00:50:10,200 --> 00:50:10,420
Build.

1155
00:50:11,300 --> 00:50:14,020
Ihr seht, zack, bumm, geht relativ schnell.

1156
00:50:14,160 --> 00:50:15,100
Und jetzt passt mal auf.

1157
00:50:15,860 --> 00:50:17,200
Wenn ich jetzt...

1158
00:50:17,200 --> 00:50:21,280
Was wird jetzt passieren, wenn ich das hier ändere an der Stelle?

1159
00:50:21,400 --> 00:50:22,820
Genau, Rebuild ab dem Step.

1160
00:50:23,120 --> 00:50:25,100
Der wird alles hier unten drunter neu ausführen.

1161
00:50:25,200 --> 00:50:26,660
Also, inklusive Download von Rust.

1162
00:50:26,660 --> 00:50:33,540
Das heißt, man sollte sich wirklich gut überlegen, wie man seine einzelnen Steps im Docker-File definiert.

1163
00:50:34,060 --> 00:50:40,660
Das heißt, es wäre deutlich sinnvoller, die Installation hier zu machen und das Kopieren...

1164
00:50:40,700 --> 00:50:42,980
...und das Installieren danach.

1165
00:50:43,300 --> 00:50:45,600
Weil das hier wird sich öfters ändern.

1166
00:50:46,320 --> 00:50:51,280
Download von der Rust-Runtime muss wahrscheinlich nicht öfters passieren.

1167
00:50:55,400 --> 00:50:55,760
Build.

1168
00:50:57,680 --> 00:50:57,980
Hey!

1169
00:50:57,980 --> 00:51:01,020
Ach nee, ich dachte, es kompiliert schon.

1170
00:51:01,140 --> 00:51:02,280
Es lädt gerade Rust runter.

1171
00:51:05,500 --> 00:51:05,940
Rust.

1172
00:51:18,060 --> 00:51:21,420
Du-du-du-du-du-du-du-du-du-du-du-du.

1173
00:51:22,100 --> 00:51:24,160
Au, au, au, au.

1174
00:51:37,080 --> 00:51:38,400
Ich weiß, woran es liegt.

1175
00:51:38,880 --> 00:51:39,480
Es ist Debian.

1176
00:51:39,980 --> 00:51:46,100
Dem fehlen seine ganzen Package-Devil-Library-Geschichten.

1177
00:51:47,920 --> 00:51:52,720
Und jetzt kommt wieder ein Problem, was ich habe, was ich mir bei Debian seit Jahren nicht merken kann.

1178
00:51:52,720 --> 00:51:54,800
Wie heißt dieses Package?

1179
00:51:55,500 --> 00:51:58,720
Heißt es BuildEssential oder heißt es BuildEssentials?

1180
00:52:00,240 --> 00:52:04,060
Upt, Install, BuildEssentials.

1181
00:52:05,080 --> 00:52:05,600
Essential?

1182
00:52:06,200 --> 00:52:06,720
Das heißt BuildEssential.

1183
00:52:08,460 --> 00:52:08,720
Nein, das heißt BuildEssentials.

1184
00:52:08,720 --> 00:52:09,320
Nein, das heißt BuildEssentials.

1185
00:52:09,700 --> 00:52:14,440
Ich bring das, ohne Scheiß, jedes Mal, ich schreib das jedes Mal falsch.

1186
00:52:14,580 --> 00:52:15,100
Jedes Mal.

1187
00:52:15,560 --> 00:52:18,140
Glücklicherweise hat mein Auto Komplett und meistens ist es kein Problem.

1188
00:52:19,820 --> 00:52:20,300
BuildEssential.

1189
00:52:20,660 --> 00:52:22,360
So, und jetzt seht ihr, was auch doof ist?

1190
00:52:23,220 --> 00:52:24,900
Ich passe diesen Step hier oben an.

1191
00:52:25,500 --> 00:52:27,420
Und jetzt wird alles nochmal neu ausgeführt.

1192
00:52:28,260 --> 00:52:30,840
Das heißt, man sollte schon seine Docker-Steps

1193
00:52:30,840 --> 00:52:39,500
careful wählen, dass das nicht ausartet in 500 neuen Installs und so.

1194
00:52:41,710 --> 00:52:45,710
Ah ja, und jedes Image ist lokal bei mir in der Registry noch drinne.

1195
00:52:45,710 --> 00:52:48,710
Und ich müsste jetzt erstmal Docker cleanen.

1196
00:52:48,710 --> 00:52:57,710
Ihr werdet sehen, guck mal, wir haben angefangen bei 100, wie viel haben wir, warte mal, Chat-Gate ist doch ganz einfach rauszufinden, bei wie viel Plattenplatz wir angefangen haben.

1197
00:52:57,710 --> 00:53:01,710
Also wir werden jetzt einige Gigabyte verschwinden, verschwenden.

1198
00:53:01,710 --> 00:53:12,100
Wir haben angefangen bei 100, guck mal, wir haben 3 Gig, 3 Gig haben wir schon verbraucht.

1199
00:53:12,100 --> 00:53:15,670
Oh, guck mal, es funzt.

1200
00:53:15,670 --> 00:53:19,110
Rust compiled.

1201
00:53:19,110 --> 00:53:31,230
Oh, Alter, Rust compiled, aber echt lange.

1202
00:53:31,230 --> 00:53:43,500
Rust.

1203
00:53:43,500 --> 00:53:45,500
Placingly fast.

1204
00:53:45,500 --> 00:53:51,780
Gut, ich mein, es dauert halt 20 Milliarden Dependencies zu...

1205
00:53:51,780 --> 00:53:54,780
Boah, Alter, guckt euch die CPU-Auslastung an, Mann.

1206
00:53:56,780 --> 00:53:58,780
Meine VM ist einfach komplett...

1207
00:53:58,780 --> 00:54:00,780
Alter!

1208
00:54:04,780 --> 00:54:06,780
Okay, er ist fertig, alles klar.

1209
00:54:06,780 --> 00:54:07,780
Die VM ist einfach komplett auslastet.

1210
00:54:07,780 --> 00:54:13,780
Aber es ist ja gut, es ist ja gut, unbenutzte CPU-Cores sind wasted CPU-Cores, ja?

1211
00:54:14,780 --> 00:54:16,780
Okay, es hat funktioniert, nice.

1212
00:54:16,780 --> 00:54:20,780
So, wenn ich jetzt nochmal bilde, geht's natürlich deutlich schneller, alles klar.

1213
00:54:20,780 --> 00:54:22,780
So, wenn das jetzt funktioniert hat...

1214
00:54:22,780 --> 00:54:23,780
Nicht exec, run.

1215
00:54:23,780 --> 00:54:26,780
Wenn das jetzt funktioniert hat, haben wir hier eine...

1216
00:54:28,780 --> 00:54:29,780
Target...

1217
00:54:30,780 --> 00:54:31,780
Release...

1218
00:54:31,780 --> 00:54:33,780
Haben wir die Library drinnen liegen, okay.

1219
00:54:33,780 --> 00:54:35,780
Excellent, hat funktioniert, nice.

1220
00:54:35,780 --> 00:54:36,780
Alles gut.

1221
00:54:36,780 --> 00:54:37,780
Alles gut.

1222
00:54:37,780 --> 00:54:39,780
So, Dogger-File.

1223
00:54:39,780 --> 00:54:44,780
Übrigens auch ein weiteres Problem, wo jetzt Multistage-Builds schon sehr sinnvoll wären.

1224
00:54:44,780 --> 00:54:46,780
Weil, wenn ich jetzt...

1225
00:54:46,780 --> 00:54:49,780
Was an meinem Rust-Source-Code ändere...

1226
00:54:49,780 --> 00:54:53,780
Macht er dir alle folgenden, ab hier, alle folgenden Steps...

1227
00:54:53,780 --> 00:54:54,780
Neu.

1228
00:54:54,780 --> 00:54:56,780
Das heißt, als nächstes kommt hier unser .NET-Build...

1229
00:54:56,780 --> 00:54:59,780
Und dann wird dann auch jedes Mal neu ausgeführt, also...

1230
00:54:59,780 --> 00:55:03,780
Das wird auf jeden Fall auf Multistage-Builds rauslaufen.

1231
00:55:03,780 --> 00:55:05,780
Dass das ordentlich funktioniert.

1232
00:55:05,780 --> 00:55:06,780
Okay.

1233
00:55:06,780 --> 00:55:07,780
Aber ich will...

1234
00:55:07,780 --> 00:55:10,780
Ich will es einmal zum Laufen bekommen, bevor wir es komplizierter machen.

1235
00:55:10,780 --> 00:55:12,780
Also, wir haben jetzt hier Cargo...

1236
00:55:12,780 --> 00:55:13,780
Cargo-Build...

1237
00:55:13,780 --> 00:55:14,780
Okay, das ist richtig.

1238
00:55:14,780 --> 00:55:15,780
Alles klar.

1239
00:55:15,780 --> 00:55:16,780
Wie war das übrigens nochmal?

1240
00:55:16,780 --> 00:55:17,780
Docker-Prune?

1241
00:55:17,780 --> 00:55:18,780
Ne.

1242
00:55:18,780 --> 00:55:19,780
Docker oder Docker-Prune?

1243
00:55:19,780 --> 00:55:26,090
Es gab doch so ein System-Prune.

1244
00:55:26,090 --> 00:55:28,090
Docker System Prune minus A.

1245
00:55:28,090 --> 00:55:29,090
Genau.

1246
00:55:29,090 --> 00:55:30,090
So, guck doch mal.

1247
00:55:30,090 --> 00:55:31,090
Jetzt haben wir 106...

1248
00:55:31,090 --> 00:55:32,090
106 Gig.

1249
00:55:32,090 --> 00:55:34,090
Ich sage Docker mal.

1250
00:55:34,090 --> 00:55:35,090
Alle...

1251
00:55:35,090 --> 00:55:36,090
Wo war ich jetzt irgendwie?

1252
00:55:36,090 --> 00:55:40,450
Ja.

1253
00:55:40,450 --> 00:55:46,450
Ich glaube, Ubuntu und Hello World und Traffic brauchen wir nicht mehr 7 Monate ago.

1254
00:55:46,450 --> 00:55:50,450
Jetzt sagen wir mal, Docker löscht einfach mal alles.

1255
00:55:50,450 --> 00:55:51,450
Oh, fuck.

1256
00:55:51,450 --> 00:55:53,450
Jetzt muss ich ein CamChamp neu bauen.

1257
00:55:53,450 --> 00:56:00,620
Egal.

1258
00:56:00,620 --> 00:56:01,620
Egal.

1259
00:56:01,620 --> 00:56:02,620
20, Leute.

1260
00:56:02,620 --> 00:56:03,620
20 Gig.

1261
00:56:03,620 --> 00:56:04,620
Einfach mal weg.

1262
00:56:04,620 --> 00:56:11,100
Ja.

1263
00:56:11,100 --> 00:56:12,100
Ja, ja.

1264
00:56:12,100 --> 00:56:13,100
Hast du recht.

1265
00:56:13,100 --> 00:56:14,100
Das geht jetzt aber nicht richtig.

1266
00:56:14,100 --> 00:56:15,100
Wobei, naja.

1267
00:56:15,100 --> 00:56:16,100
Es würde doch...

1268
00:56:16,100 --> 00:56:17,100
Doch, doch.

1269
00:56:17,100 --> 00:56:18,100
Es würde...

1270
00:56:18,100 --> 00:56:19,100
Es würde schon funktionieren.

1271
00:56:19,100 --> 00:56:20,100
Ich könnte jetzt...

1272
00:56:20,100 --> 00:56:22,100
Ich könnte jetzt die .NET Runtime installieren und sonst was.

1273
00:56:22,100 --> 00:56:24,100
Aber das Dumme ist halt, wenn man es...

1274
00:56:24,100 --> 00:56:28,100
Wenn man es einfach so logisch gruppieren will, so nach dem Motto, wir bauen erst Rust

1275
00:56:28,100 --> 00:56:34,100
und dann bauen wir .NET, dann würde ich ab diesem Step hier, sobald sich mein Rust-Source-Code

1276
00:56:34,100 --> 00:56:37,100
ändert, halt immer das ganze .NET-Zeug neu bauen.

1277
00:56:37,100 --> 00:56:40,100
Deswegen, das schreit eigentlich nach Multi-Stage-Build.

1278
00:56:40,100 --> 00:56:44,100
So, jetzt brauchen wir .NET als nächstes.

1279
00:56:44,100 --> 00:56:48,900
Gig.

1280
00:56:48,900 --> 00:56:50,900
Hört sich boomer an.

1281
00:56:50,900 --> 00:56:51,900
Echt, warum?

1282
00:56:51,900 --> 00:56:53,900
Was sagen die coolen Nichts...

1283
00:56:53,900 --> 00:56:56,900
Was sagen die coolen Nichts-Boomer zu Gigabyte?

1284
00:56:56,900 --> 00:56:59,280
GB?

1285
00:56:59,280 --> 00:57:03,360
Wobei es ja eigentlich Gibi...

1286
00:57:03,360 --> 00:57:04,360
Gibi...

1287
00:57:04,360 --> 00:57:05,360
Nee, Moment.

1288
00:57:05,360 --> 00:57:08,360
Gibi oder Gibi heißen müsste?

1289
00:57:08,360 --> 00:57:10,360
Gibi, gell?

1290
00:57:10,360 --> 00:57:13,630
Gibi?

1291
00:57:13,630 --> 00:57:15,630
Aber es ist Mebi und nicht Meebi.

1292
00:57:18,630 --> 00:57:19,630
Niemand...

1293
00:57:19,630 --> 00:57:20,630
Leute, ohne Scheiß.

1294
00:57:20,630 --> 00:57:23,630
Ich kenne niemand, der diese Einheiten verwendet.

1295
00:57:23,630 --> 00:57:24,630
In der Aussprache, ja?

1296
00:57:24,630 --> 00:57:25,630
Vielleicht zum Rechnen und so.

1297
00:57:25,630 --> 00:57:26,630
Aber in der Aussprache.

1298
00:57:26,630 --> 00:57:27,630
Niemand.

1299
00:57:27,630 --> 00:57:28,630
Niemand.

1300
00:57:28,630 --> 00:57:33,500
Okay, weiter.

1301
00:57:33,500 --> 00:57:34,500
Jetzt brauchen wir...

1302
00:57:34,500 --> 00:57:35,500
Jetzt brauchen wir unser .NET-Zeug.

1303
00:57:35,500 --> 00:57:36,500
Gibt es offizielle Node.js...

1304
00:57:36,500 --> 00:57:39,970
Äh...

1305
00:57:39,970 --> 00:57:40,970
Node.js...

1306
00:57:40,970 --> 00:57:41,970
Images.

1307
00:57:41,970 --> 00:57:42,970
Node.js Chiseled Images.

1308
00:57:42,970 --> 00:57:43,970
Es gibt auf jeden Fall offizielle Node-Images.

1309
00:57:43,970 --> 00:57:44,970
Relativ sicher.

1310
00:57:44,970 --> 00:57:45,970
Nachdem ich wenig Node-Anwendungen baue, weiß ich es nicht.

1311
00:57:45,970 --> 00:57:46,970
Aber es würde mich enorm wundern, wenn es die nicht gäbe.

1312
00:57:46,970 --> 00:57:47,970
So, also ich sehe schon, wir müssen trotzdem die Sachen in unterschiedlichen Verzeichnissen

1313
00:57:47,970 --> 00:57:48,970
machen.

1314
00:57:48,970 --> 00:57:49,970
Weil ich kann ja schlecht im gleichen Bild verzeichnen.

1315
00:57:49,970 --> 00:57:50,970
Ich kann ja schlecht im gleichen Bild verzeichnen.

1316
00:57:50,970 --> 00:57:51,970
Ich kann ja schlecht im gleichen Bild verzeichnen.

1317
00:57:51,970 --> 00:57:52,970
Ich kann ja schlecht im gleichen Bild verzeichnen.

1318
00:57:52,970 --> 00:57:53,970
Ich kann ja schlecht im gleichen Bild verzeichnen.

1319
00:58:07,420 --> 00:58:08,420
Ich kann ja schlecht im gleichen Bild verzeichnen.

1320
00:58:08,420 --> 00:58:09,420
Ich kann ja schlecht im gleichen Bild verzeichnen.

1321
00:58:09,420 --> 00:58:10,420
Ich kann ja schlecht im eigenen Bild verzeichnen.

1322
00:58:10,420 --> 00:58:11,420
So, den paragraf kann ich auch erst mal interpretation鹂nar.

1323
00:58:11,420 --> 00:58:12,420
Dann habe ich den operator Sci-Zak.

1324
00:58:12,420 --> 00:58:13,420
Verzeichnis.

1325
00:58:13,420 --> 00:58:14,420
Dotnet und Rust Build-ятся.

1326
00:58:14,420 --> 00:58:15,420
Wobei.

1327
00:58:15,420 --> 00:58:16,420
Warum eigentlich nicht!

1328
00:58:16,420 --> 00:58:19,300
Die kommen sich wirklich gar nicht so hinten Partikel in die Quere, oder?

1329
00:58:19,300 --> 00:58:20,300
Well, okay.

1330
00:58:20,300 --> 00:58:23,700
Das könnte durchaus ein bisschen verwirrend werden für den einen oder anderen Compiler,

1331
00:58:23,700 --> 00:58:24,980
wenn es mehrere...

1332
00:58:24,980 --> 00:58:26,940
Okay, schauen wir mal.

1333
00:58:26,940 --> 00:58:29,500
Also, als Erstes müssen wir jetzt Dotnet installieren.

1334
00:58:29,500 --> 00:58:32,880
Dotnet lässt sich relativ easy installieren, nämlich so.

1335
00:58:32,880 --> 00:58:34,100
Dotnet 8.

1336
00:58:34,100 --> 00:58:39,580
Ich schreibe jetzt mal was rein, bevor jetzt gleich...

1337
00:58:39,580 --> 00:58:40,580
Das hatten wir nämlich schon öfters im Chat.

1338
00:58:40,940 --> 00:58:42,940
dass ich 10 Minuten vorher was erzählt habe

1339
00:58:42,940 --> 00:58:44,460
und dann kam jemand rein,

1340
00:58:44,540 --> 00:58:46,340
beißt, danke schon für den Sub, Dennis, danke,

1341
00:58:46,700 --> 00:58:47,720
bock, Subscription, Leute.

1342
00:58:48,320 --> 00:58:50,500
Ich schreibe das jetzt oben als Kommentar rein, weil

1343
00:58:50,500 --> 00:58:52,380
viele im Chat

1344
00:58:52,380 --> 00:58:54,540
lacken critical information, wenn sie in den Stream

1345
00:58:54,540 --> 00:58:56,480
reinkommen. Und ich weiß nicht mehr, was

1346
00:58:56,480 --> 00:58:58,660
es für ein Thema war. Ich habe letztens,

1347
00:58:58,800 --> 00:59:00,640
glaube ich, 20 Minuten lang

1348
00:59:00,640 --> 00:59:02,500
fünfmal das Gleiche erklärt

1349
00:59:02,500 --> 00:59:04,440
und dann kamen immer Leute in den Stream

1350
00:59:04,440 --> 00:59:06,760
und sagen, Max, aber so macht man das doch gar nicht,

1351
00:59:06,760 --> 00:59:07,840
ich mach das doch so und so.

1352
00:59:07,840 --> 00:59:10,620
Ja, ich weiß, deswegen machen wir es erstmal

1353
00:59:10,620 --> 00:59:12,660
einfach und dann machen wir es ein bisschen komplizierter,

1354
00:59:12,740 --> 00:59:14,920
aber richtig. Fünf Minuten später kam wieder einer rein.

1355
00:59:15,140 --> 00:59:16,620
Max, aber das macht man doch gar nicht so.

1356
00:59:16,880 --> 00:59:18,620
Mach das doch mal anders. Wir schreiben das

1357
00:59:18,620 --> 00:59:20,600
da rein, deswegen schreibe ich das jetzt mal

1358
00:59:20,600 --> 00:59:22,400
da oben rein. Am Ende

1359
00:59:22,400 --> 00:59:24,360
machen wir Multistage,

1360
00:59:24,360 --> 00:59:26,540
heißt das Multistage oder Multistage-Build?

1361
00:59:28,580 --> 00:59:29,740
Soccer Multi, ups.

1362
00:59:31,200 --> 00:59:31,600
Soccer

1363
00:59:31,600 --> 00:59:33,480
Multistage-Build.

1364
00:59:36,020 --> 00:59:37,380
Das ist alles

1365
00:59:37,380 --> 00:59:39,820
an die

1366
00:59:39,820 --> 00:59:40,780
Five Hat

1367
00:59:40,780 --> 00:59:42,680
Community-Ges.

1368
00:59:44,790 --> 00:59:46,510
Lass das nicht wieder so ist, wie das letzte Mal.

1369
00:59:50,890 --> 00:59:52,130
H-Style

1370
00:59:52,130 --> 00:59:53,130
92

1371
00:59:53,130 --> 00:59:56,330
Pog-Subscription. Danke für die ganzen

1372
00:59:56,330 --> 00:59:57,830
Subs, Leute. Es ist sehr...

1373
00:59:57,830 --> 01:00:02,120
So, also jetzt installieren

1374
01:00:02,120 --> 01:00:03,740
wir erst einmal .NET.

1375
01:00:06,210 --> 01:00:06,470
Build.

1376
01:00:16,110 --> 01:00:20,940
Warum bildet er jetzt alles?

1377
01:00:21,260 --> 01:00:23,140
Ach so, weil ich gerade alle meine Images

1378
01:00:23,140 --> 01:00:24,020
weggeworfen habe.

1379
01:00:24,020 --> 01:00:24,620
Ja, das...

1380
01:00:24,640 --> 01:00:27,780
Das würde es erklären.

1381
01:00:32,520 --> 01:00:34,180
Wenn man alle Images löscht...

1382
01:00:34,180 --> 01:00:38,920
Alter, meine Nase läuft zu schlimm. Ich habe nichts zum Butzen.

1383
01:00:42,420 --> 01:00:43,700
Nicht, dass... Nicht, dass hier irgendwie...

1384
01:00:45,760 --> 01:00:47,380
Nochmal brauche ich das nicht.

1385
01:00:51,910 --> 01:00:52,610
Eine Sache

1386
01:00:52,610 --> 01:00:55,510
sieht man aber jetzt schon, was ein richtig

1387
01:00:55,510 --> 01:00:57,270
großer Vorteil von Docker ist.

1388
01:00:58,550 --> 01:00:59,430
Und es ist genau

1389
01:00:59,430 --> 01:01:01,350
eines der Dinger, wofür Docker ursprünglich

1390
01:01:01,350 --> 01:01:03,570
erfunden wurde. Für das ganze Zeug,

1391
01:01:03,670 --> 01:01:05,310
was daraus gewachsen ist

1392
01:01:05,310 --> 01:01:07,010
an Container-Ökosystemen und

1393
01:01:07,010 --> 01:01:08,610
wie teilweise Docker heute...

1394
01:01:08,810 --> 01:01:11,370
auch als Docker selbst, ja, für Sachen

1395
01:01:11,370 --> 01:01:12,350
verwendet wird, wofür es gar nicht

1396
01:01:12,350 --> 01:01:15,770
gedacht ist. Das war ja damals noch nicht

1397
01:01:15,770 --> 01:01:18,410
abzusehen, aber genau für sowas wurde

1398
01:01:18,410 --> 01:01:20,870
Docker ursprünglich entwickelt. Nämlich

1399
01:01:20,870 --> 01:01:23,310
um diese ganze Sache mit... Ich entwickle

1400
01:01:23,310 --> 01:01:26,450
was, auf meiner Kiste kompiliert es, auf

1401
01:01:26,450 --> 01:01:28,550
meiner Kiste läuft es, aber auf dem Server

1402
01:01:28,550 --> 01:01:30,570
läuft es nicht, auf der anderen

1403
01:01:30,570 --> 01:01:32,610
Entwicklerkiste läuft es nicht, zu vermeiden.

1404
01:01:32,610 --> 01:01:34,790
Hauptsächlich ursprüngliche Docker-Idee

1405
01:01:34,790 --> 01:01:36,830
war ja sogar, es funktioniert auf meiner

1406
01:01:36,830 --> 01:01:38,290
Entwicklerkiste, aber auf der anderen

1407
01:01:38,290 --> 01:01:40,030
Entwicklerkiste nicht. Das war eines der

1408
01:01:40,030 --> 01:01:41,950
ursprünglichen Ideen in der Docker. Und man

1409
01:01:41,950 --> 01:01:44,170
sieht auch schon, dass es genau hierfür

1410
01:01:44,170 --> 01:01:45,670
was bringt. Auch wenn wir das hier nicht

1411
01:01:45,670 --> 01:01:47,410
optimal machen und wenn das langsam ist

1412
01:01:47,410 --> 01:01:49,050
und wenn das nicht schön ist, es ist

1413
01:01:49,050 --> 01:01:51,430
nachvollziehbar. Das heißt, wenn es

1414
01:01:51,430 --> 01:01:54,250
funktioniert, das Bild jetzt, und ich das

1415
01:01:54,250 --> 01:01:55,810
Image lösche, dann funktioniert es das

1416
01:01:55,810 --> 01:01:59,530
nächste Mal wieder. Und wenn das Image weg

1417
01:01:59,530 --> 01:02:01,250
ist, ist der ganze Müll aus dem lokalen

1418
01:02:01,250 --> 01:02:06,500
System auch weg. Richtig, genau. So, jetzt

1419
01:02:06,500 --> 01:02:08,480
haben wir .NET installiert. Jetzt können wir

1420
01:02:08,480 --> 01:02:09,300
als nächstes...

1421
01:02:09,860 --> 01:02:14,540
Äh, Copy. Aus unserem Backend-Projekt können

1422
01:02:14,540 --> 01:02:16,820
wir die ganzen .cs-Files rüberkopieren.

1423
01:02:16,820 --> 01:02:18,960
Da muss ich jetzt aber mal nachgucken, was

1424
01:02:18,960 --> 01:02:20,920
wir noch so haben.

1425
01:02:20,920 --> 01:02:29,420
Wir brauchen ganzen .cs-Files und wir

1426
01:02:29,420 --> 01:02:34,670
brauchen das Projekt-File. Mehr brauchen

1427
01:02:34,670 --> 01:02:38,510
wir eigentlich nicht. Also alle .cs-Backend-

1428
01:02:38,510 --> 01:02:43,010
Files und das Sternchen.c... Wobei, Moment.

1429
01:02:43,010 --> 01:02:46,300
Nee, das... das...

1430
01:02:46,300 --> 01:02:48,240
Kopiert ihr hier nicht mit. So, die zwei

1431
01:02:48,240 --> 01:02:49,620
Files brauchen wir.

1432
01:02:49,620 --> 01:02:52,200
Danach können wir theoretisch schon mal

1433
01:02:52,200 --> 01:02:53,280
probieren,

1434
01:02:53,280 --> 01:02:58,500
wie ist mit .NET publish... warte mal, ich

1435
01:02:58,500 --> 01:02:59,680
glaube ich habe das um das Handy gekriegt...

1436
01:03:00,180 --> 01:03:01,240
Nix.

1437
01:03:01,240 --> 01:03:03,100
Da können wir gucken, wie es aussieht mit .NET

1438
01:03:03,100 --> 01:03:06,660
publish... wie geht das... iiih, die

1439
01:03:06,660 --> 01:03:09,940
.NET Bild oder, .NET publish-release?

1440
01:03:09,940 --> 01:03:14,490
Das habe ich. Ja und so, weil wir es ja

1441
01:03:14,490 --> 01:03:16,910
installieren mit Docker... äh, weil wir das ja

1442
01:03:16,910 --> 01:03:17,670
installieren mit

1443
01:03:17,870 --> 01:03:31,000
mit dem install skript ok.net publish minus series ob das funktioniert doch

1444
01:03:31,000 --> 01:03:33,340
haben wir das leben für meine bachelorarbeit leicht gemacht als

1445
01:03:33,340 --> 01:03:38,740
unterschied ja genau für sowas ist auch fast jetzt was er was hat er jetzt für

1446
01:03:38,740 --> 01:03:46,600
probleme please install lippi q machen wir ja das ist das ist eines der wenigen

1447
01:03:46,600 --> 01:04:02,050
dort netz die opfack opfack okay das ist das problem wenn ich das da oben

1448
01:04:02,050 --> 01:04:05,290
rein schreibe da muss ich den ganzen schiff noch mal durchlaufen lassen es

1449
01:04:05,290 --> 01:04:11,930
dauert wieder zwei minuten habe ich keinen bock drauf aber was lippi q gibt

1450
01:04:11,930 --> 01:04:19,650
es nicht ok exxon debian warum gibt es nein nein

1451
01:04:20,490 --> 01:04:25,090
debian warum gibt es das abt abt search

1452
01:04:25,090 --> 01:04:37,670
lippi q lippi q def muss ich jetzt sehen okay alles klar lippi q def high

1453
01:04:37,670 --> 01:04:51,640
iq library lippi iq das sieht doch schon besser aus so und jetzt haben wir

1454
01:04:51,640 --> 01:04:56,500
unser image am start mit gebauter anwendung drin das heißt nachdem die

1455
01:04:56,500 --> 01:05:00,940
anwendung jetzt fertig ist ach so moment eins brauchen wir noch eins brauchen wir

1456
01:05:00,940 --> 01:05:01,820
noch wir brauchen noch

1457
01:05:01,820 --> 01:05:08,540
kopie weil das kann man eigentlich dann nachmachen weil wenn sich das ändert

1458
01:05:08,540 --> 01:05:16,520
muss die anwendung noch mal kopie back end www root nach www also für unsere

1459
01:05:16,520 --> 01:05:22,520
webseite die muss ja auch noch mit reinkopiert werden bild ok jetzt können

1460
01:05:22,520 --> 01:05:26,120
wir gucken ob die anwendung funktioniert also unser unser container image würde

1461
01:05:26,120 --> 01:05:28,820
ich sagen jetzt erst mal fertig mal gucken ob es funktioniert was ich hier

1462
01:05:28,820 --> 01:05:44,540
gebaut habe

1463
01:05:44,940 --> 01:05:59,080
und jetzt muss man glaube ich angeben wo ist es denn bin release backend dll

1464
01:05:59,080 --> 01:06:05,420
und bämm es geht nicht weil unable to load shared library webrtc rust

1465
01:06:05,420 --> 01:06:14,790
ah so weil das im falschen ordner liegt das liegt nämlich unter target release

1466
01:06:14,790 --> 01:06:16,930
das liegt nämlich unter target release

1467
01:06:18,270 --> 01:06:19,650
release

1468
01:06:19,650 --> 01:06:21,970
libweb rtc rast

1469
01:06:23,010 --> 01:06:25,010
muss man auch noch gleich moven

1470
01:06:26,540 --> 01:06:28,540
jetzt gucken ob es jetzt läuft

1471
01:06:29,780 --> 01:06:33,570
ach

1472
01:06:33,570 --> 01:06:35,570
ne moment ne

1473
01:06:39,420 --> 01:06:41,120
vielleicht weil das nicht

1474
01:06:41,120 --> 01:06:43,120
im richtigen verzeichnis liegt

1475
01:06:44,000 --> 01:06:46,000
aber cp

1476
01:06:46,440 --> 01:06:52,260
libweb rtc rast kann sein ich bin mir nicht ganz sicher wo das hin muss release.net hier vielleicht

1477
01:06:52,260 --> 01:06:57,040
bin release

1478
01:06:57,040 --> 01:06:59,040
also wir müssen unser image auf jeden fall noch fixen

1479
01:06:59,040 --> 01:07:01,040
.net

1480
01:07:01,040 --> 01:07:03,040
run

1481
01:07:03,040 --> 01:07:05,040
backend dll

1482
01:07:05,040 --> 01:07:07,040
ey funzt

1483
01:07:07,040 --> 01:07:09,040
pog

1484
01:07:11,040 --> 01:07:15,040
warum funktioniert denn das ich hab doch gar kein ffm pack drauf sollte das jetzt nicht eigentlich

1485
01:07:15,040 --> 01:07:17,040
crashen

1486
01:07:17,040 --> 01:07:23,300
weil

1487
01:07:23,300 --> 01:07:25,300
ne das ist dumm was ich hier mache

1488
01:07:25,300 --> 01:07:27,300
wo sucht .net nach der library

1489
01:07:27,300 --> 01:07:29,300
im verzeichnis wo du startest

1490
01:07:29,300 --> 01:07:31,300
wenn du nichts spezielles angibst

1491
01:07:31,300 --> 01:07:33,300
ok also aber prinzipiell

1492
01:07:33,300 --> 01:07:35,300
das hier kommt von rast also prinzipiell funktioniert

1493
01:07:35,300 --> 01:07:37,300
das als erstes hat natürlich

1494
01:07:37,300 --> 01:07:39,300
kein www root

1495
01:07:39,300 --> 01:07:41,300
wir müssen das auf jeden fall noch ein bisschen umkopieren

1496
01:07:41,300 --> 01:07:43,300
das ist eklig so

1497
01:07:43,300 --> 01:07:45,300
ich will das image aber sowieso eh nicht

1498
01:07:45,300 --> 01:07:47,300
lassen insofern was mich wundert ist

1499
01:07:47,300 --> 01:07:49,300
dass der nicht meckert

1500
01:07:49,300 --> 01:07:51,300
dass ffm pack probleme hat

1501
01:07:51,300 --> 01:07:53,300
hier

1502
01:07:53,300 --> 01:07:55,300
ah ich weiß woran das liegt dass der nicht

1503
01:07:55,300 --> 01:07:57,300
meckert dass ffm pack probleme hat

1504
01:07:57,300 --> 01:07:59,300
das ist nämlich in nem thread drinne

1505
01:07:59,300 --> 01:08:01,300
und der thread der crasht einfach

1506
01:08:01,300 --> 01:08:03,300
und ich bekomm nix von mit

1507
01:08:03,300 --> 01:08:05,300
wir machen das jetzt mal anders

1508
01:08:05,300 --> 01:08:07,300
wir sagen jetzt mal ffm pack

1509
01:08:07,300 --> 01:08:09,300
loglevel oder sowas

1510
01:08:09,300 --> 01:08:15,420
konnte man doch hier setzen

1511
01:08:15,420 --> 01:08:17,420
das setzen wir jetzt hier auf quiet

1512
01:08:17,420 --> 01:08:19,420
oder sowas

1513
01:08:19,420 --> 01:08:23,820
wir setzen mal das loglevel

1514
01:08:23,820 --> 01:08:25,820
und dann sollten wir jetzt gleich

1515
01:08:25,820 --> 01:08:27,820
nen fehler bekommen

1516
01:08:27,820 --> 01:08:29,820
also was musste ich jetzt noch machen

1517
01:08:29,820 --> 01:08:31,820
ich musste es moven

1518
01:08:31,820 --> 01:08:33,820
kann man

1519
01:08:33,820 --> 01:08:35,820
bei .net publish nicht nen output

1520
01:08:35,820 --> 01:08:37,820
path angeben

1521
01:08:37,820 --> 01:08:39,820
das muss ich grad mal ausprobieren

1522
01:08:39,820 --> 01:08:41,820
konnte man nicht sagen

1523
01:08:41,820 --> 01:08:43,820
.net publish

1524
01:08:43,820 --> 01:08:45,820
minus o build doch konnte man

1525
01:08:45,820 --> 01:08:47,820
also .net minus o

1526
01:08:47,820 --> 01:08:49,820
kommt nach build rein

1527
01:08:49,820 --> 01:08:53,900
und dann

1528
01:08:53,900 --> 01:08:55,900
moven wir noch

1529
01:08:55,900 --> 01:08:59,540
dann moven wir noch

1530
01:08:59,540 --> 01:09:01,540
target

1531
01:09:01,540 --> 01:09:03,540
oh

1532
01:09:03,540 --> 01:09:05,540
vergessen wo es ist

1533
01:09:05,540 --> 01:09:07,540
target

1534
01:09:07,540 --> 01:09:09,540
release

1535
01:09:09,540 --> 01:09:11,540
libwebrtcrust.so

1536
01:09:11,540 --> 01:09:13,540
moven wir noch

1537
01:09:13,540 --> 01:09:15,540
nach

1538
01:09:15,540 --> 01:09:19,810
build

1539
01:09:19,810 --> 01:09:21,810
ok

1540
01:09:21,810 --> 01:09:23,810
so

1541
01:09:23,810 --> 01:09:25,810
und ich hoffe dass es jetzt ordentlich

1542
01:09:25,810 --> 01:09:27,810
crasht

1543
01:09:27,810 --> 01:09:29,810
weil wenn es ordentlich crasht

1544
01:09:29,810 --> 01:09:31,810
dann können wir nämlich

1545
01:09:31,810 --> 01:09:33,810
den container ordentlich bauen

1546
01:09:33,810 --> 01:09:40,190
so mal hier run

1547
01:09:40,190 --> 01:09:43,890
schauen wir mal ob das hier gut aussieht

1548
01:09:43,890 --> 01:09:45,890
jetzt haben wir nen ordner build

1549
01:09:45,890 --> 01:09:47,890
achso da haben wir www root

1550
01:09:47,890 --> 01:09:55,870
muss da auch noch rein

1551
01:09:55,870 --> 01:09:57,870
wieso lese ich immer webrc crust

1552
01:09:57,870 --> 01:09:59,870
passt doch

1553
01:09:59,870 --> 01:10:01,870
ganzen schalentiere

1554
01:10:01,870 --> 01:10:03,870
hier krustentiere

1555
01:10:03,870 --> 01:10:10,190
am start ok

1556
01:10:10,190 --> 01:10:12,190
.net

1557
01:10:12,190 --> 01:10:14,190
.net run ne nicht run

1558
01:10:14,190 --> 01:10:16,190
backend dll

1559
01:10:16,190 --> 01:10:18,190
jawoll

1560
01:10:18,190 --> 01:10:20,190
ffm pack crasht ok

1561
01:10:20,190 --> 01:10:22,190
das würde es natürlich erklären

1562
01:10:22,190 --> 01:10:24,190
und jetzt sagen wir mal apt install ffm pack

1563
01:10:24,190 --> 01:10:26,190
das brauchen wir nämlich

1564
01:10:26,190 --> 01:10:28,190
auch noch wir brauchen auch noch

1565
01:10:28,190 --> 01:10:30,190
ffm pack

1566
01:10:30,190 --> 01:10:32,190
oh da fällt mir grad was ein

1567
01:10:32,190 --> 01:10:34,190
leute es ist keine gute idee wie ich das gebaut hab

1568
01:10:34,190 --> 01:10:36,190
wir sollten vielleicht eine

1569
01:10:36,190 --> 01:10:38,190
statische feste ffm pack version

1570
01:10:38,190 --> 01:10:40,190
nehmen

1571
01:10:40,190 --> 01:10:42,190
weil ansonsten ist es immer davon abhängig

1572
01:10:42,190 --> 01:10:44,190
dass die betriebssystem version

1573
01:10:44,190 --> 01:10:47,570
also die betriebssystem ffm pack

1574
01:10:47,570 --> 01:10:49,570
version von dem

1575
01:10:49,570 --> 01:10:51,570
was ich benutze als base image

1576
01:10:51,570 --> 01:10:53,570
mit der von meiner entwicklerkiste übereinstimmt

1577
01:10:53,570 --> 01:10:55,570
weil ich will ja neues ffm pack benutzen

1578
01:10:55,570 --> 01:10:57,570
gucken wir mal ob das jetzt funktioniert

1579
01:10:57,570 --> 01:11:01,140
backend nope

1580
01:11:01,140 --> 01:11:03,140
der findet einfach mein ffm pack nicht

1581
01:11:03,140 --> 01:11:05,140
obwohl es installiert ist

1582
01:11:05,140 --> 01:11:07,140
das ist aber sehr

1583
01:11:07,140 --> 01:11:09,140
keck wait

1584
01:11:09,140 --> 01:11:11,140
gut der rest

1585
01:11:11,140 --> 01:11:13,140
funktioniert also container scheint schon mal

1586
01:11:13,140 --> 01:11:15,140
halbwegs brauchbar

1587
01:11:15,140 --> 01:11:18,450
zu sein

1588
01:11:18,450 --> 01:11:20,450
ld config lass mal kurz gucken wo ist denn

1589
01:11:20,450 --> 01:11:22,450
wo liegt meine library

1590
01:11:22,450 --> 01:11:24,450
what

1591
01:11:24,450 --> 01:11:26,450
alter was ist denn das für ein scheiß fad

1592
01:11:26,450 --> 01:11:28,450
lip x86

1593
01:11:28,450 --> 01:11:30,450
64 linux

1594
01:11:30,450 --> 01:11:32,450
knu

1595
01:11:32,450 --> 01:11:34,450
da hätte ich ja im leben nicht dran gedacht

1596
01:11:34,450 --> 01:11:36,450
dass das da liegt

1597
01:11:36,450 --> 01:11:38,450
ja da guckt meine anwendung natürlich auch nicht nach

1598
01:11:38,450 --> 01:11:45,150
ob das da liegt

1599
01:11:45,150 --> 01:11:47,150
außerdem ist es die falsche ffm pack version

1600
01:11:47,150 --> 01:11:49,150
ich entwickle mit ffm pack 6.1

1601
01:11:49,150 --> 01:11:51,150
glaube ich

1602
01:11:51,150 --> 01:11:53,150
und das hier ist ffm pack 5.9

1603
01:11:53,150 --> 01:11:55,150
sehe ich das richtig 5.1

1604
01:11:55,150 --> 01:11:57,150
ja das kann ja nicht funktionieren

1605
01:11:57,150 --> 01:11:59,150
ok

1606
01:11:59,150 --> 01:12:01,150
so dann fixen wir mal das docker image weiter

1607
01:12:01,150 --> 01:12:03,150
als nächstes mussten wir noch

1608
01:12:03,150 --> 01:12:06,720
ne das machen wir hier

1609
01:12:06,720 --> 01:12:08,720
wo ist die sache mit www root

1610
01:12:08,720 --> 01:12:10,720
hier www root

1611
01:12:10,720 --> 01:12:12,720
soll nicht dahin kopiert werden sondern nach

1612
01:12:12,720 --> 01:12:14,720
build

1613
01:12:14,720 --> 01:12:18,420
also das ist alles noch sehr

1614
01:12:18,420 --> 01:12:20,420
unoptimiert hier

1615
01:12:20,420 --> 01:12:22,420
wie ok

1616
01:12:22,420 --> 01:12:24,420
wo bekommen wir ne statische

1617
01:12:24,420 --> 01:12:27,730
also noch ne build step um ffm

1618
01:12:27,730 --> 01:12:29,730
pack zu bauen nee ich baue ffm

1619
01:12:29,730 --> 01:12:31,730
pack nicht es gibt ein projekt was

1620
01:12:31,730 --> 01:12:33,730
nightly builds von ffm pack macht

1621
01:12:33,730 --> 01:12:35,730
das werde ich verwenden ich bin

1622
01:12:35,730 --> 01:12:37,730
mir nur nicht mehr ganz sicher

1623
01:12:37,730 --> 01:12:39,730
wie das wie das es gibt ein paar

1624
01:12:39,730 --> 01:12:41,730
projekte die das machen das müssen wir uns gleich mal auf github

1625
01:12:41,730 --> 01:12:43,730
auf github raussuchen

1626
01:12:43,730 --> 01:12:49,920
ich will das aber erstmal

1627
01:12:49,920 --> 01:12:51,920
checken ob prinzipiell das

1628
01:12:51,920 --> 01:12:53,920
was ich hier gebaut habe funktioniert

1629
01:12:53,920 --> 01:12:55,920
also

1630
01:12:55,920 --> 01:12:57,920
.net

1631
01:12:57,920 --> 01:12:59,920
.net .net

1632
01:12:59,920 --> 01:13:01,920
backend

1633
01:13:01,920 --> 01:13:03,920
dll

1634
01:13:03,920 --> 01:13:05,920
ok gut funktioniert

1635
01:13:05,920 --> 01:13:07,920
alles www root ist auch

1636
01:13:07,920 --> 01:13:09,920
da ok es liegt echt nur an ffm pack

1637
01:13:09,920 --> 01:13:11,920
jetzt müssen wir uns ein ffm

1638
01:13:11,920 --> 01:13:13,920
pack build suchen

1639
01:13:13,920 --> 01:13:15,920
mit allen dependencies drinne

1640
01:13:15,920 --> 01:13:17,920
ffm pack build

1641
01:13:17,920 --> 01:13:19,920
für linux

1642
01:13:19,920 --> 01:13:21,920
und zwar nicht

1643
01:13:21,920 --> 01:13:23,920
ein binary ffm pack build

1644
01:13:23,920 --> 01:13:25,920
sondern mit

1645
01:13:25,920 --> 01:13:27,920
ja ich suche ja ein fertiges build sondern

1646
01:13:27,920 --> 01:13:29,920
ich suche ja nicht die binaries

1647
01:13:29,920 --> 01:13:31,920
das könnte sogar das richtige projekt sein was ich suche

1648
01:13:31,920 --> 01:13:33,920
lass mal gibt das denn nicht vielleicht sogar

1649
01:13:33,920 --> 01:13:35,920
ein offizielles docker image

1650
01:13:35,920 --> 01:13:37,920
mit ffm pack library

1651
01:13:37,920 --> 01:13:41,810
versioniert oder so

1652
01:13:41,810 --> 01:13:43,810
guck mal

1653
01:13:43,810 --> 01:13:45,810
aber das ist wahrscheinlich nur normales ffm

1654
01:13:45,810 --> 01:13:47,810
pack und nicht die ffm pack library oder

1655
01:13:47,810 --> 01:13:49,810
oder

1656
01:13:49,810 --> 01:13:51,810
oder

1657
01:13:51,810 --> 01:13:53,810
ne

1658
01:13:53,810 --> 01:13:55,810
das ist ja wobei man weiß es ja nicht

1659
01:13:55,810 --> 01:13:59,310
man weiß es nicht

1660
01:13:59,310 --> 01:14:03,140
probieren wir mal aus

1661
01:14:03,140 --> 01:14:05,140
holen wir das mal

1662
01:14:05,140 --> 01:14:07,140
cli

1663
01:14:07,140 --> 01:14:09,140
cli

1664
01:14:09,140 --> 01:14:11,140
haben die

1665
01:14:11,140 --> 01:14:13,140
auch ein nicht cli image

1666
01:14:13,140 --> 01:14:17,220
wobei bezieht sich

1667
01:14:17,220 --> 01:14:19,220
auf was bezieht sich denn cli

1668
01:14:19,220 --> 01:14:22,850
auf ffm pack

1669
01:14:22,850 --> 01:14:24,850
oder auf

1670
01:14:24,850 --> 01:14:26,850
dass es

1671
01:14:26,850 --> 01:14:30,670
shells und so dabei hat

1672
01:14:30,670 --> 01:14:32,670
cli ls

1673
01:14:32,670 --> 01:14:34,670
was sind denn die unterschiede

1674
01:14:34,670 --> 01:14:36,670
zwischen den einzelnen

1675
01:14:36,670 --> 01:14:38,670
sachen überhaupt

1676
01:14:38,670 --> 01:14:48,320
ja das

1677
01:14:48,320 --> 01:14:50,320
so schlau war ich auch

1678
01:14:50,320 --> 01:15:01,120
ich vermute da ist die

1679
01:15:01,120 --> 01:15:03,120
das sind

1680
01:15:03,120 --> 01:15:05,120
wahrscheinlich einfach nur binaries und da ist

1681
01:15:05,120 --> 01:15:08,620
die

1682
01:15:08,620 --> 01:15:10,620
da sind die ganzen ähm

1683
01:15:10,620 --> 01:15:12,620
äh die library

1684
01:15:12,620 --> 01:15:14,620
parts von ffm pack die ich brauche gar nicht

1685
01:15:14,620 --> 01:15:18,130
dabei ok gucken wir

1686
01:15:18,130 --> 01:15:20,130
gucken wir uns das mal an also

1687
01:15:20,130 --> 01:15:22,130
wir machen

1688
01:15:22,130 --> 01:15:24,130
jetzt mal wir starten einfach mal einen docker container

1689
01:15:24,130 --> 01:15:26,130
mit

1690
01:15:26,130 --> 01:15:28,130
mit dem image und zwar

1691
01:15:28,130 --> 01:15:30,130
ffm pack nehmen wir mal

1692
01:15:30,130 --> 01:15:32,130
amd 64 latest

1693
01:15:32,130 --> 01:15:34,130
bam

1694
01:15:34,130 --> 01:15:36,130
gucken wir mal rein

1695
01:15:36,130 --> 01:15:38,130
was es da so gibt

1696
01:15:38,130 --> 01:15:40,130
ob da ffm pack tatsächlich auch als

1697
01:15:40,130 --> 01:15:42,130
library drinne liegt weil da können wir nämlich

1698
01:15:42,130 --> 01:15:44,130
die images gleich verwenden

1699
01:15:44,130 --> 01:15:49,230
oh

1700
01:15:49,230 --> 01:15:51,230
ah

1701
01:15:51,230 --> 01:15:53,230
ok der versucht gerade ffm

1702
01:15:53,230 --> 01:15:55,230
pack direkt zu starten mit einer datei

1703
01:15:55,230 --> 01:15:57,230
die bash heißt das ist natürlich blöd

1704
01:15:57,230 --> 01:15:59,230
da müssen wir jetzt entry point

1705
01:15:59,230 --> 01:16:01,230
überschreiben

1706
01:16:01,230 --> 01:16:03,230
minus minus entry point

1707
01:16:03,230 --> 01:16:05,230
bash

1708
01:16:05,230 --> 01:16:07,230
kopf nicht gebacken jawoll doch gut

1709
01:16:07,230 --> 01:16:09,230
passt

1710
01:16:09,230 --> 01:16:11,230
hier ffm pack ist am

1711
01:16:11,230 --> 01:16:14,610
start

1712
01:16:14,610 --> 01:16:16,610
a v

1713
01:16:16,610 --> 01:16:20,750
ja

1714
01:16:20,750 --> 01:16:22,750
die bringen die libraries gar nicht

1715
01:16:22,750 --> 01:16:24,750
mit vermutlich

1716
01:16:24,750 --> 01:16:26,750
lip

1717
01:16:26,750 --> 01:16:31,920
äh

1718
01:16:31,920 --> 01:16:33,920
die bringen glaube ich die ganzen libraries

1719
01:16:33,920 --> 01:16:38,580
nicht mit

1720
01:16:38,580 --> 01:16:40,580
suchen wir mal irgendwie nach

1721
01:16:40,580 --> 01:16:46,320
die haben nur

1722
01:16:46,320 --> 01:16:48,320
ne na geil

1723
01:16:48,320 --> 01:16:50,320
die bringen nur ffm pack

1724
01:16:50,320 --> 01:16:52,320
die binaries mit das bringt mir ja gar nix

1725
01:16:52,320 --> 01:16:54,320
und

1726
01:16:54,320 --> 01:16:56,320
was ist das das ist das da

1727
01:16:56,320 --> 01:16:58,320
ne das ist natürlich

1728
01:16:58,320 --> 01:17:04,260
blöde

1729
01:17:04,260 --> 01:17:06,260
dann bringen mir die images

1730
01:17:06,260 --> 01:17:08,260
nicht wirklich was

1731
01:17:08,260 --> 01:17:12,460
weil

1732
01:17:12,460 --> 01:17:14,460
weil die ffm pack

1733
01:17:14,460 --> 01:17:16,460
binaries

1734
01:17:16,460 --> 01:17:18,460
die brauche ich ja gar nicht

1735
01:17:18,460 --> 01:17:20,460
gucken wir nochmal

1736
01:17:20,460 --> 01:17:22,460
was da jetzt drinne ist ob das irgendwie anders

1737
01:17:22,460 --> 01:17:29,040
ist

1738
01:17:29,040 --> 01:17:31,040
wer sich fragt was das ist das hier listet

1739
01:17:31,040 --> 01:17:33,040
alle libraries auf auf dem system hier guckt

1740
01:17:33,040 --> 01:17:35,040
und ähm

1741
01:17:35,040 --> 01:17:37,040
v format nennt sich eben

1742
01:17:37,040 --> 01:17:39,040
ein teil von ffm pack

1743
01:17:39,040 --> 01:17:41,040
das gibt es immer

1744
01:17:41,040 --> 01:17:43,040
wenn es ffm pack gibt

1745
01:17:43,040 --> 01:17:45,040
ja ok die images bringen mir nix weil in den images ist bloß

1746
01:17:45,040 --> 01:17:47,040
ffm pack als binary drin

1747
01:17:47,040 --> 01:17:49,040
aber immerhin

1748
01:17:49,040 --> 01:17:52,540
als halbwegs

1749
01:17:52,540 --> 01:17:54,540
aktuelle als als genau die version

1750
01:17:54,540 --> 01:17:56,540
die ich brauche ok

1751
01:17:56,540 --> 01:17:58,540
das heißt wir müssen das selbst machen

1752
01:17:58,540 --> 01:18:03,070
ffm pack einbauen

1753
01:18:03,070 --> 01:18:05,070
oder was haben wir sonst noch so für images auf docker hub

1754
01:18:05,070 --> 01:18:07,070
jellyfin

1755
01:18:07,070 --> 01:18:11,280
ne

1756
01:18:11,280 --> 01:18:13,280
I

1757
01:18:13,280 --> 01:18:15,280
ne

1758
01:18:15,280 --> 01:18:17,280
ich glaube ich verzichte auf ein 4 jahre altes

1759
01:18:17,280 --> 01:18:19,280
ffm pack

1760
01:18:19,280 --> 01:18:21,280
kannst du nicht einfach ein fertiges bild runterladen

1761
01:18:21,280 --> 01:18:23,280
doch doch machen wir jetzt

1762
01:18:23,280 --> 01:18:25,280
ich dachte nur vielleicht gibt es ein fertiges

1763
01:18:25,280 --> 01:18:27,280
fertiges image container image

1764
01:18:27,280 --> 01:18:29,280
was wir verwenden können

1765
01:18:29,280 --> 01:18:31,280
updated 8 years ago

1766
01:18:31,280 --> 01:18:33,280
und was zum teufel ist

1767
01:18:33,280 --> 01:18:37,040
open coconut

1768
01:18:37,040 --> 01:18:39,040
na gut brauchen wir nicht

1769
01:18:39,040 --> 01:18:41,040
gucken wir mal hier

1770
01:18:41,040 --> 01:18:43,040
ich glaube das sind die richtigen bilds das sind auch die die ich sonst immer

1771
01:18:43,040 --> 01:18:45,040
verwendet verwendet habe

1772
01:18:45,040 --> 01:18:47,040
weil man ein statisches

1773
01:18:47,040 --> 01:18:49,040
ffm pack gebraucht hat

1774
01:18:49,040 --> 01:18:59,010
ja

1775
01:18:59,010 --> 01:19:01,010
ffm pack

1776
01:19:01,010 --> 01:19:03,010
n1128

1777
01:19:03,010 --> 01:19:05,010
git commit hash linux gpl

1778
01:19:07,010 --> 01:19:09,010
linux gpl

1779
01:19:09,010 --> 01:19:11,010
shared

1780
01:19:11,010 --> 01:19:14,640
das klingt gut

1781
01:19:14,640 --> 01:19:16,640
kann es sein dass die libraries von ffm pack sich lib av

1782
01:19:16,640 --> 01:19:22,130
nennen

1783
01:19:22,130 --> 01:19:24,130
da gibt es mehrere

1784
01:19:24,130 --> 01:19:26,130
es gibt av format

1785
01:19:26,130 --> 01:19:28,130
gibt es auch

1786
01:19:28,130 --> 01:19:30,130
aber es kommt

1787
01:19:30,130 --> 01:19:32,130
also die dinger nennen sie immer lib av

1788
01:19:32,130 --> 01:19:34,130
und dann kommt dann der rest hinten dran

1789
01:19:34,130 --> 01:19:36,130
aber es ist ja egal ich habe nach av format

1790
01:19:36,130 --> 01:19:38,130
gesucht und das hätte er finden müssen

1791
01:19:38,130 --> 01:19:40,130
also sind

1792
01:19:40,130 --> 01:19:42,130
wir haben es ja auch gesehen da lagen keine rum

1793
01:19:42,130 --> 01:19:44,130
aber was haben die hier alles zur auswahl

1794
01:19:44,130 --> 01:19:46,130
die haben linux 64

1795
01:19:46,130 --> 01:19:48,130
haben die vielleicht auch

1796
01:19:48,130 --> 01:19:50,130
irgendeine tag version

1797
01:19:50,130 --> 01:19:52,130
anstatt master

1798
01:19:52,130 --> 01:19:54,130
so 661 oder so

1799
01:19:54,130 --> 01:19:56,130
ja

1800
01:19:56,130 --> 01:19:58,130
601

1801
01:19:58,130 --> 01:20:01,440
was für eine ffm pack version habe ich denn bei mir lokal

1802
01:20:01,440 --> 01:20:03,440
61

1803
01:20:03,440 --> 01:20:05,440
gibt es hier 61

1804
01:20:05,440 --> 01:20:07,440
ne gibt es nicht

1805
01:20:07,440 --> 01:20:15,100
ach das liegt daran

1806
01:20:15,100 --> 01:20:17,100
weil 61 wahrscheinlich gerade master ist

1807
01:20:17,100 --> 01:20:19,100
und 601

1808
01:20:19,100 --> 01:20:21,100
das letzte release

1809
01:20:21,100 --> 01:20:23,100
kann das sein

1810
01:20:23,100 --> 01:20:25,100
vermutlich

1811
01:20:25,100 --> 01:20:27,100
dann nehmen wir mal 601

1812
01:20:27,100 --> 01:20:29,100
601 müsste auch klar gehen

1813
01:20:29,100 --> 01:20:31,100
also 601

1814
01:20:31,100 --> 01:20:35,250
linux

1815
01:20:35,250 --> 01:20:37,250
601 linux

1816
01:20:37,250 --> 01:20:39,250
64 gpl

1817
01:20:39,250 --> 01:20:41,250
shared das brauchen wir

1818
01:20:41,250 --> 01:20:43,250
was damit gemeint ist folgendes

1819
01:20:43,250 --> 01:20:45,250
also rate ich jetzt einfach mal

1820
01:20:45,250 --> 01:20:47,250
gpl

1821
01:20:47,250 --> 01:20:49,250
gpl enthält nur die open source codex

1822
01:20:49,250 --> 01:20:51,250
gpl enthält nur die open source codex

1823
01:20:51,250 --> 01:20:53,250
und minus shared

1824
01:20:53,250 --> 01:20:55,250
bedeutet das ist nur die library komponente

1825
01:20:55,250 --> 01:20:57,250
und das hier ist library

1826
01:20:57,250 --> 01:20:59,250
plus oder eventuell nur

1827
01:20:59,250 --> 01:21:04,160
binaries

1828
01:21:04,160 --> 01:21:15,150
da gibt es aber keine oder

1829
01:21:15,150 --> 01:21:17,150
das ist das source code oder das ist kein

1830
01:21:17,150 --> 01:21:24,620
das ist doch nur das source code

1831
01:21:24,620 --> 01:21:28,130
das ist doch bestimmt kein

1832
01:21:28,130 --> 01:21:37,900
fertig gebautes

1833
01:21:37,900 --> 01:21:39,900
ich glaube nicht das ich glaube das das nur das source code ist

1834
01:21:39,900 --> 01:21:52,370
guck mal mal

1835
01:21:52,370 --> 01:21:54,370
ok ta xfz

1836
01:21:54,370 --> 01:21:56,370
moment das heißt ja anders

1837
01:21:56,370 --> 01:21:58,370
ta z muss weg

1838
01:21:58,370 --> 01:22:00,370
ja guck das ist nur das source code

1839
01:22:00,370 --> 01:22:02,370
das bringt mir nix

1840
01:22:02,370 --> 01:22:04,370
da müsste ich ffm pack

1841
01:22:04,370 --> 01:22:06,370
auch noch selbst kompilieren

1842
01:22:06,370 --> 01:22:08,370
da halten sich da halten sich

1843
01:22:08,370 --> 01:22:16,740
mein bock hält sich da in grenzen den ich da drauf habe

1844
01:22:16,740 --> 01:22:18,740
ffm pack kommt weg

1845
01:22:18,740 --> 01:22:20,740
ok docker file

1846
01:22:20,740 --> 01:22:22,740
wir benutzen das hier

1847
01:22:22,740 --> 01:22:24,740
linux 64

1848
01:22:24,740 --> 01:22:26,740
gpl shared

1849
01:22:26,740 --> 01:22:34,660
gehen wir mal in unseren docker container

1850
01:22:34,660 --> 01:22:36,660
rein den wir eben hatten

1851
01:22:36,660 --> 01:22:38,660
und probieren das da mal aus

1852
01:22:38,660 --> 01:22:40,660
wie das da aussieht

1853
01:22:40,660 --> 01:22:44,160
wget

1854
01:22:44,160 --> 01:22:46,160
zack genau

1855
01:22:46,160 --> 01:22:48,160
so

1856
01:22:48,160 --> 01:22:50,160
ta x

1857
01:22:50,160 --> 01:22:52,160
fz

1858
01:22:52,160 --> 01:22:54,160
ne z nicht

1859
01:22:54,160 --> 01:22:56,160
ja das sind das ist

1860
01:22:56,160 --> 01:22:58,160
ne fertig kompilierte library ok

1861
01:22:58,160 --> 01:23:00,160
das ist gut

1862
01:23:00,160 --> 01:23:02,160
hier haben wir es

1863
01:23:02,160 --> 01:23:04,160
binaries sind auch am start die wir nicht

1864
01:23:04,160 --> 01:23:06,160
brauchen die können wir theoretisch löschen

1865
01:23:06,160 --> 01:23:08,160
noch gleich aus dem image da es ein bisschen kleiner wird

1866
01:23:08,160 --> 01:23:10,160
lip

1867
01:23:10,160 --> 01:23:12,160
da ist alles drin was wir brauchen

1868
01:23:12,160 --> 01:23:14,160
genau

1869
01:23:14,160 --> 01:23:16,160
exzellent

1870
01:23:16,160 --> 01:23:18,160
ok wir bauen unsere anwendung kurz ein kleines

1871
01:23:18,160 --> 01:23:20,160
bisschen um

1872
01:23:20,160 --> 01:23:22,160
nämlich

1873
01:23:22,160 --> 01:23:24,160
ich lade das hier auch mal runter

1874
01:23:24,160 --> 01:23:29,260
und dann packen wir

1875
01:23:29,260 --> 01:23:32,640
das ganze

1876
01:23:32,640 --> 01:23:34,640
in unser docker ignore file

1877
01:23:34,640 --> 01:23:36,640
weil ich will garantiert nicht

1878
01:23:36,640 --> 01:23:38,640
aber docker file ist auch nicht

1879
01:23:38,640 --> 01:23:40,640
also weil ich will ja nicht

1880
01:23:40,640 --> 01:23:42,640
ffm pack da irgendwie drinnen liegen haben

1881
01:23:42,640 --> 01:23:44,640
also machen wir

1882
01:23:44,640 --> 01:23:46,640
in unser git ignore

1883
01:23:46,640 --> 01:23:48,640
in unser git ignore file

1884
01:23:48,640 --> 01:23:50,640
alles was ffm pack sternchen hast soll

1885
01:23:50,640 --> 01:23:52,640
weg ok

1886
01:23:52,640 --> 01:23:54,640
weil ich will nicht aus versehen

1887
01:23:54,640 --> 01:23:56,640
irgendwie 500 mb oder

1888
01:23:56,640 --> 01:23:58,640
wie groß ist das jetzt entpackt

1889
01:23:58,640 --> 01:24:04,900
ne

1890
01:24:04,900 --> 01:24:17,230
ach ne

1891
01:24:17,230 --> 01:24:19,230
aber ich habs noch gar nicht entpackt

1892
01:24:19,230 --> 01:24:21,230
kack noob alter

1893
01:24:21,230 --> 01:24:23,230
ich wundere mich schon die ganze zeit wo ist es

1894
01:24:23,230 --> 01:24:37,580
was

1895
01:24:37,580 --> 01:24:39,580
äh

1896
01:24:39,580 --> 01:24:41,580
ich bin verwirrt

1897
01:24:41,580 --> 01:24:43,580
achso f

1898
01:24:43,580 --> 01:24:48,750
steht ja sogar da lul

1899
01:24:48,750 --> 01:24:50,750
so ffm pack taucht hier nicht drinnen auf

1900
01:24:50,750 --> 01:24:56,240
ja ich hab keinen bock das

1901
01:24:56,240 --> 01:24:58,240
157 mb

1902
01:24:58,240 --> 01:25:00,240
bei mir im git landen

1903
01:25:00,240 --> 01:25:02,240
muss nicht sein

1904
01:25:02,240 --> 01:25:04,240
deswegen kommt das in das git ignore rein

1905
01:25:04,240 --> 01:25:06,240
so und jetzt müssen wir gucken

1906
01:25:06,240 --> 01:25:08,240
dass ich als library

1907
01:25:08,240 --> 01:25:10,240
fad nicht slash lib verwende

1908
01:25:10,240 --> 01:25:12,240
sondern

1909
01:25:12,240 --> 01:25:14,240
wir benennen das sogar noch um

1910
01:25:14,240 --> 01:25:16,240
komm wir benennen das um

1911
01:25:16,240 --> 01:25:18,240
den namen kann sich doch keiner merken

1912
01:25:18,240 --> 01:25:20,240
wir benennen das einfach in ffm pack um

1913
01:25:20,240 --> 01:25:22,240
und die library löschen wir

1914
01:25:22,240 --> 01:25:24,240
und das runtergeladene ta-archiv löschen wir wieder

1915
01:25:24,240 --> 01:25:26,240
das heißt mein ffm pack suche ich jetzt unterhalb von

1916
01:25:26,240 --> 01:25:28,240
ffm pack slash lib

1917
01:25:28,240 --> 01:25:30,240
ups

1918
01:25:30,240 --> 01:25:32,240
so mal gucken ob das jetzt startet

1919
01:25:32,240 --> 01:25:34,240
run

1920
01:25:34,240 --> 01:25:39,280
run

1921
01:25:39,280 --> 01:25:41,280
und funzt nice

1922
01:25:41,280 --> 01:25:43,280
ohne fehler

1923
01:25:43,280 --> 01:25:45,280
ja ja und es liest auch die sachen von der kamera

1924
01:25:45,280 --> 01:25:47,280
also alles gut

1925
01:25:47,280 --> 01:25:49,280
so ffm pack slash

1926
01:25:49,280 --> 01:25:51,280
also genau ffm pack slash lib

1927
01:25:51,280 --> 01:25:53,280
das heißt im endeffekt müssen wir jetzt

1928
01:25:53,280 --> 01:25:55,280
nur das gleiche noch für den docker container machen

1929
01:25:55,280 --> 01:26:00,450
und dann bauen wir den docker container

1930
01:26:00,450 --> 01:26:02,450
noch ordentlich

1931
01:26:02,450 --> 01:26:04,450
so jetzt haben wir das hier hin kopiert

1932
01:26:04,450 --> 01:26:06,450
ffm pack machen wir mal hier als letzten step

1933
01:26:06,450 --> 01:26:08,450
wget

1934
01:26:08,450 --> 01:26:22,450
ffm pack

1935
01:26:22,450 --> 01:26:24,450
wie

1936
01:26:24,450 --> 01:26:26,450
wie sagt man wget

1937
01:26:26,450 --> 01:26:28,450
dass er direkt entpacken soll

1938
01:26:28,450 --> 01:26:30,450
also ta kann man das einfach so rein

1939
01:26:30,450 --> 01:26:32,450
pipen

1940
01:26:32,450 --> 01:26:34,450
hx

1941
01:26:34,450 --> 01:26:36,450
vielleicht hat x nur z kein

1942
01:26:36,450 --> 01:26:38,450
pipe oder so hin

1943
01:26:38,450 --> 01:26:40,450
ne

1944
01:26:40,450 --> 01:26:42,450
unexpected end of file

1945
01:26:42,450 --> 01:26:46,850
ähm

1946
01:26:46,850 --> 01:26:48,850
ne moment

1947
01:26:48,850 --> 01:26:50,850
muss wget noch sagen

1948
01:26:50,850 --> 01:26:52,850
minus o glaub ich

1949
01:26:52,850 --> 01:26:54,850
für output

1950
01:26:54,850 --> 01:26:56,850
wget pipe ta

1951
01:26:56,850 --> 01:27:00,930
so wir fragen stackoverflow

1952
01:27:00,930 --> 01:27:02,930
wget

1953
01:27:02,930 --> 01:27:04,930
groß o minus

1954
01:27:04,930 --> 01:27:08,240
gepiped

1955
01:27:08,240 --> 01:27:10,240
ne moment das muss ich jetzt hier erstmal testen

1956
01:27:10,240 --> 01:27:15,090
wget

1957
01:27:15,090 --> 01:27:17,090
minus groß o minus

1958
01:27:17,090 --> 01:27:19,090
das ist wahrscheinlich der standard out

1959
01:27:19,090 --> 01:27:21,090
gepiped nach ta xzf

1960
01:27:21,090 --> 01:27:23,090
alles klar

1961
01:27:23,090 --> 01:27:25,090
okay nice stackoverflow gg

1962
01:27:25,090 --> 01:27:34,800
stackoverflow lügt

1963
01:27:34,800 --> 01:27:36,800
ah moment das ist kein z

1964
01:27:36,800 --> 01:27:38,800
ja das ist richtig

1965
01:27:38,800 --> 01:27:40,800
wat

1966
01:27:40,800 --> 01:27:42,800
archive is compressed

1967
01:27:42,800 --> 01:27:44,800
use minus j option

1968
01:27:44,800 --> 01:27:50,740
moment

1969
01:27:50,740 --> 01:27:52,740
ey warum ist

1970
01:27:52,740 --> 01:27:54,740
warum ist chat

1971
01:27:54,740 --> 01:27:56,740
äh nicht chat warum ist stackoverflow

1972
01:27:56,740 --> 01:28:01,780
falsch

1973
01:28:01,780 --> 01:28:03,780
okay minus xv so

1974
01:28:03,780 --> 01:28:05,780
irgendwie

1975
01:28:05,780 --> 01:28:07,780
hey das funktioniert

1976
01:28:07,780 --> 01:28:09,780
nice kaum macht mans richtig

1977
01:28:09,780 --> 01:28:15,520
okay so und jetzt ist die

1978
01:28:15,520 --> 01:28:17,520
große preisfrage ich lösch den ganzen kreml

1979
01:28:17,520 --> 01:28:19,520
grad nochmal jaja

1980
01:28:19,520 --> 01:28:21,520
jetzt ist die große preisfrage

1981
01:28:21,520 --> 01:28:23,520
wie kann man ta den output

1982
01:28:23,520 --> 01:28:25,520
ordnernamen angeben war das

1983
01:28:25,520 --> 01:28:27,520
minus c

1984
01:28:27,520 --> 01:28:29,520
ta output directory

1985
01:28:29,520 --> 01:28:33,020
name

1986
01:28:33,020 --> 01:28:35,020
how to choose directory

1987
01:28:35,020 --> 01:28:37,020
name

1988
01:28:37,020 --> 01:28:39,020
during untarring

1989
01:28:39,020 --> 01:28:43,490
genau das wollen wir haben

1990
01:28:43,490 --> 01:28:45,490
minus c pretty name strip

1991
01:28:45,490 --> 01:28:50,400
components one achso

1992
01:28:50,400 --> 01:28:52,400
das ist weil die m kardieren davor

1993
01:28:52,400 --> 01:28:55,710
anscheinend geht das nicht

1994
01:28:55,710 --> 01:29:02,610
what

1995
01:29:02,610 --> 01:29:04,610
jetzt okay jetzt wirds aber advanced

1996
01:29:04,610 --> 01:29:06,610
was

1997
01:29:06,610 --> 01:29:08,610
minus minus transform

1998
01:29:08,610 --> 01:29:10,610
und dann regex

1999
01:29:10,610 --> 01:29:12,610
für den dateinamen oder was

2000
01:29:12,610 --> 01:29:14,610
ja komm komm

2001
01:29:14,610 --> 01:29:16,610
mal nicht

2002
01:29:16,610 --> 01:29:18,610
wir wollen es mal nicht übertreiben

2003
01:29:18,610 --> 01:29:20,610
ich würde vorschlagen wir machen einfach nen move danach

2004
01:29:20,610 --> 01:29:22,610
und gut ist ja

2005
01:29:22,610 --> 01:29:24,610
es muss ja nicht

2006
01:29:24,610 --> 01:29:26,610
wir müssen es ja nicht komplett übertreiben

2007
01:29:26,610 --> 01:29:28,610
also ein move ffm pack

2008
01:29:28,610 --> 01:29:30,610
nach ffm pack okay alles gut

2009
01:29:30,610 --> 01:29:32,610
und schon ist es so wie wir es haben wollen

2010
01:29:32,610 --> 01:29:34,610
wunderbar

2011
01:29:34,610 --> 01:29:38,050
man kann es ja mit shell

2012
01:29:38,050 --> 01:29:40,050
hacks auch übertreiben

2013
01:29:40,050 --> 01:29:42,050
so

2014
01:29:42,050 --> 01:29:44,050
und als nächstes jetzt noch nen move

2015
01:29:44,050 --> 01:29:46,050
von ffm pack sternchen

2016
01:29:46,050 --> 01:29:48,050
nach ffm pack

2017
01:29:48,050 --> 01:29:50,050
so

2018
01:29:50,050 --> 01:29:53,740
und dann

2019
01:29:53,740 --> 01:29:55,740
nach build ffm pack

2020
01:29:55,740 --> 01:29:57,740
so und wenn ich jetzt alles

2021
01:29:57,740 --> 01:29:59,740
gemacht habe dann sollte

2022
01:29:59,740 --> 01:30:01,740
dann sollte

2023
01:30:01,740 --> 01:30:03,740
mein docker

2024
01:30:03,740 --> 01:30:05,740
dann sollte mein docker container

2025
01:30:05,740 --> 01:30:11,490
funktionieren

2026
01:30:11,490 --> 01:30:13,490
ich bin gespannt

2027
01:30:13,490 --> 01:30:17,180
dann löschen wir den container nochmal

2028
01:30:17,180 --> 01:30:22,160
wir könnten auch quiet

2029
01:30:22,160 --> 01:30:24,160
machen beim wget

2030
01:30:24,160 --> 01:30:26,160
ich glaub minus

2031
01:30:26,160 --> 01:30:28,160
minus q ist es bei wget

2032
01:30:28,160 --> 01:30:30,160
und ähm

2033
01:30:30,160 --> 01:30:32,160
minus minus s

2034
01:30:32,160 --> 01:30:34,160
ist es bei also bei wget

2035
01:30:34,160 --> 01:30:36,160
ist es minus q für quiet

2036
01:30:36,160 --> 01:30:38,160
und bei curl ist es glaube ich minus s für

2037
01:30:38,160 --> 01:30:40,160
silent wenn man nicht will

2038
01:30:40,160 --> 01:30:42,160
dass der unnötige

2039
01:30:42,160 --> 01:30:49,380
terminal outputs macht

2040
01:30:49,380 --> 01:30:51,380
okay run

2041
01:30:51,380 --> 01:30:53,380
jetzt bin ich ja mal

2042
01:30:53,380 --> 01:30:55,380
gespannt ob das funktioniert was ich hier gebaut habe

2043
01:30:55,380 --> 01:30:59,580
hier sind wir

2044
01:30:59,580 --> 01:31:01,580
also dotnet

2045
01:31:01,580 --> 01:31:03,580
dotnet

2046
01:31:03,580 --> 01:31:05,580
backend dln

2047
01:31:13,700 --> 01:31:19,120
falsche ffm pack version

2048
01:31:19,120 --> 01:31:21,120
fragezeichen

2049
01:31:21,120 --> 01:31:28,660
okay das ist ausgesprochen

2050
01:31:28,660 --> 01:31:34,660
doof jetzt

2051
01:31:34,660 --> 01:31:36,660
das ist wirklich doof

2052
01:31:43,300 --> 01:31:45,300
was hat er denn für schmerzen man

2053
01:31:45,300 --> 01:31:47,300
dotnet run okay

2054
01:31:47,300 --> 01:31:51,760
unable to load

2055
01:31:51,760 --> 01:31:53,760
ja ich weiß okay ich kopier das mal

2056
01:31:53,760 --> 01:32:00,080
kopier das mal wieder hoch

2057
01:32:00,080 --> 01:32:02,080
ja okay okay ffm pack

2058
01:32:02,080 --> 01:32:04,080
nicht gefunden habe ich

2059
01:32:04,080 --> 01:32:11,360
habe ich kapiert habe ich kapiert

2060
01:32:11,360 --> 01:32:16,400
oh

2061
01:32:16,400 --> 01:32:18,400
what alter der crasht einfach

2062
01:32:18,400 --> 01:32:20,400
was ist denn das jetzt

2063
01:32:20,400 --> 01:32:24,030
crash champ

2064
01:32:24,030 --> 01:32:32,530
einfach einfach

2065
01:32:32,530 --> 01:32:34,530
der crash champ am start

2066
01:32:34,530 --> 01:32:36,530
weil ich gerade versuche

2067
01:32:36,530 --> 01:32:38,530
rockercontainer zu bauen

2068
01:32:38,530 --> 01:32:40,530
für meine anwendung dafür brauche ich ffm pack

2069
01:32:40,530 --> 01:32:42,530
aber ffm pack zeigt sich

2070
01:32:42,530 --> 01:32:44,530
nicht

2071
01:32:44,530 --> 01:32:46,530
kooperativ

2072
01:32:46,530 --> 01:32:48,530
achso ich habe auch die falsche version

2073
01:32:48,530 --> 01:32:52,800
guck mal

2074
01:32:52,800 --> 01:32:54,800
meint ihr es könnte daran liegen

2075
01:32:54,800 --> 01:32:56,800
dass ich hier lokal

2076
01:32:56,800 --> 01:32:58,800
ffm pack

2077
01:32:58,800 --> 01:33:00,800
6 1 habe

2078
01:33:00,800 --> 01:33:02,800
und im container ffm pack

2079
01:33:02,800 --> 01:33:04,800
6 0 1

2080
01:33:04,800 --> 01:33:08,180
was meint ihr könnte das

2081
01:33:08,180 --> 01:33:10,180
das problem sein

2082
01:33:10,180 --> 01:33:12,180
ich mein es deutet schon ein bisschen drauf hin

2083
01:33:12,180 --> 01:33:14,180
ja wenn ich hier so sachen

2084
01:33:14,180 --> 01:33:16,180
sehe wie

2085
01:33:16,180 --> 01:33:21,660
einfach instant crash

2086
01:33:21,660 --> 01:33:23,660
warum crasht er denn

2087
01:33:23,660 --> 01:33:27,100
was ist das problem man

2088
01:33:27,100 --> 01:33:33,620
hm

2089
01:33:33,620 --> 01:33:35,620
okay was hat er denn

2090
01:33:35,620 --> 01:33:37,620
für schmerzen ffm pack lib

2091
01:33:37,620 --> 01:33:41,120
ist das überhaupt richtig

2092
01:33:41,120 --> 01:33:43,120
ffm pack lib

2093
01:33:43,120 --> 01:33:48,030
die sollten abwärts kompatibel sein

2094
01:33:48,030 --> 01:33:50,030
das hätte ich auch gedacht

2095
01:33:50,030 --> 01:33:52,030
aber

2096
01:33:52,030 --> 01:33:59,020
vielleicht doch nicht

2097
01:33:59,020 --> 01:34:01,020
was ist denn wenn ich hier irgendeinen mist angebe

2098
01:34:01,020 --> 01:34:03,020
und dann ausführe

2099
01:34:03,020 --> 01:34:05,020
run

2100
01:34:05,020 --> 01:34:08,850
dann sagt er method not supported

2101
01:34:08,850 --> 01:34:10,850
habe ich das richtige

2102
01:34:10,850 --> 01:34:12,850
runtergeladen

2103
01:34:12,850 --> 01:34:14,850
habe ich irgendeinen mist runtergeladen

2104
01:34:14,850 --> 01:34:16,850
ffm pack

2105
01:34:16,850 --> 01:34:18,850
der findet es offensichtlich ja auch

2106
01:34:18,850 --> 01:34:20,850
okay wir machen mal kurz hier einen return rein

2107
01:34:20,850 --> 01:34:25,120
um zu gucken ob es daran liegt

2108
01:34:25,120 --> 01:34:27,120
hier haben wir mal irgendwie console

2109
01:34:27,120 --> 01:34:29,120
aber irgendwas dass ich das nicht

2110
01:34:29,120 --> 01:34:31,120
jetzt schreiben wir console

2111
01:34:31,120 --> 01:34:33,120
console rightliner perfekt

2112
01:34:33,120 --> 01:34:35,120
was

2113
01:34:35,120 --> 01:34:37,120
das artet schon wieder aus

2114
01:34:37,120 --> 01:34:39,120
warum muss das alles warum kann das einfach nicht funktionieren

2115
01:34:39,120 --> 01:34:44,480
pack w

2116
01:34:44,480 --> 01:34:46,480
wieso der max von youtube erwischt

2117
01:34:46,480 --> 01:34:51,330
jetzt kann ich mich nicht mehr

2118
01:34:51,330 --> 01:34:56,050
raus reden

2119
01:34:56,050 --> 01:34:58,050
warum geht das

2120
01:34:58,050 --> 01:35:00,050
okay also bis hierhin funzt alles

2121
01:35:00,050 --> 01:35:02,050
aber dann crasht das hier

2122
01:35:02,050 --> 01:35:04,050
aus irgendwelchen gründen

2123
01:35:04,050 --> 01:35:06,050
das könnte aber auch woanders ran liegen

2124
01:35:06,050 --> 01:35:08,050
fuck it alter

2125
01:35:08,050 --> 01:35:12,830
der crash

2126
01:35:12,830 --> 01:35:14,830
okay der crasht

2127
01:35:14,830 --> 01:35:16,830
ach ich weiß warum der crasht

2128
01:35:16,830 --> 01:35:18,830
oh ich kack noob

2129
01:35:18,830 --> 01:35:20,830
alter es funktioniert alles

2130
01:35:20,830 --> 01:35:22,830
guck mal hier

2131
01:35:22,830 --> 01:35:24,830
fällt euch hier was auf

2132
01:35:24,830 --> 01:35:29,170
entdeckt ihr hier irgendwas

2133
01:35:29,170 --> 01:35:31,170
was im container so garantiert nicht funktionieren kann

2134
01:35:33,170 --> 01:35:35,170
der liest einfach hardcoded

2135
01:35:35,170 --> 01:35:37,170
von meinem lokalen rtsp server

2136
01:35:37,170 --> 01:35:39,170
was das kann ja so nicht funktionieren

2137
01:35:39,170 --> 01:35:41,170
das gibt es ja da gar nicht

2138
01:35:41,170 --> 01:35:43,170
mein error handling ist absolut erste sahne

2139
01:35:43,170 --> 01:35:45,170
der handelt einfach gar keine errors

2140
01:35:45,170 --> 01:35:47,170
und

2141
01:35:47,170 --> 01:35:49,170
und sagen wir mal so

2142
01:35:49,170 --> 01:35:51,170
so sollte man das ja auch nicht machen

2143
01:35:51,170 --> 01:35:53,170
das sollte normalerweise ein ordentlicher background service sein

2144
01:35:53,170 --> 01:35:55,170
der sich auch bei fehlern neu startet

2145
01:35:55,170 --> 01:35:57,170
und sowas

2146
01:35:57,170 --> 01:35:59,170
das machen wir dann noch

2147
01:35:59,170 --> 01:36:01,170
okay ich lasse es jetzt erstmal so wie es ist

2148
01:36:01,170 --> 01:36:03,170
mein docker container funktioniert auf jeden fall

2149
01:36:03,170 --> 01:36:05,170
jetzt

2150
01:36:05,170 --> 01:36:07,170
jetzt funktioniert er

2151
01:36:07,170 --> 01:36:09,170
also funktionieren bedeutet er crasht

2152
01:36:09,170 --> 01:36:12,990
okay ja aber aber

2153
01:36:12,990 --> 01:36:14,990
aber es funktioniert

2154
01:36:14,990 --> 01:36:18,560
also der docker container ist korrekt

2155
01:36:18,560 --> 01:36:20,560
ich kann euch das auch beweisen

2156
01:36:20,560 --> 01:36:22,560
dass der funktioniert

2157
01:36:22,560 --> 01:36:26,700
wir machen hier einfach mal ein

2158
01:36:26,700 --> 01:36:30,020
kann man hier eigentlich return machen direkt

2159
01:36:30,020 --> 01:36:32,020
ne ein return rein

2160
01:36:32,020 --> 01:36:34,020
und ihr seht

2161
01:36:34,020 --> 01:36:36,020
zack es läuft

2162
01:36:36,020 --> 01:36:38,020
bam

2163
01:36:38,020 --> 01:36:40,020
ah wir brauchen noch was

2164
01:36:40,020 --> 01:36:42,020
wir müssen die interfaces

2165
01:36:42,020 --> 01:36:44,020
überschreiben wo er dran bindet

2166
01:36:44,020 --> 01:36:46,020
und zwar

2167
01:36:46,020 --> 01:36:49,840
und zwar

2168
01:36:49,840 --> 01:36:51,840
asp.net core environment variables

2169
01:36:51,840 --> 01:36:53,840
für den port

2170
01:37:02,240 --> 01:37:06,000
das da will ich haben

2171
01:37:06,000 --> 01:37:08,000
minus minus urls

2172
01:37:08,000 --> 01:37:10,000
command line argument

2173
01:37:10,000 --> 01:37:12,000
okay das ist auch gut

2174
01:37:12,000 --> 01:37:14,000
minus minus urls

2175
01:37:14,000 --> 01:37:16,000
also da wollen wir dann haben

2176
01:37:16,000 --> 01:37:18,000
soll listen an http

2177
01:37:18,000 --> 01:37:20,000
doppelt punkt doppelt sternchen

2178
01:37:20,000 --> 01:37:22,000
punkt und jetzt brauchen wir mal irgendeine

2179
01:37:22,000 --> 01:37:24,000
port hier keine ahnung 80

2180
01:37:24,000 --> 01:37:26,000
44

2181
01:37:26,000 --> 01:37:29,700
funst nice

2182
01:37:29,700 --> 01:37:31,700
okay da muss das noch

2183
01:37:31,700 --> 01:37:33,700
als command in unseren docker container

2184
01:37:33,700 --> 01:37:35,700
rein

2185
01:37:35,700 --> 01:37:37,700
jetzt sind wir mal

2186
01:37:37,700 --> 01:37:39,700
so frei

2187
01:37:39,700 --> 01:37:41,700
und kommentieren den ganzen media

2188
01:37:41,700 --> 01:37:43,700
krempel aus

2189
01:37:43,700 --> 01:37:45,700
gehen wir mal in das docker

2190
01:37:45,700 --> 01:37:47,700
file rein und sagen am ende

2191
01:37:47,700 --> 01:37:59,200
cmd

2192
01:37:59,200 --> 01:38:01,200
ja also das würde

2193
01:38:01,200 --> 01:38:03,200
würde höchst wahrscheinlich

2194
01:38:03,200 --> 01:38:05,200
das ist das docker container

2195
01:38:05,200 --> 01:38:16,380
ok

2196
01:38:16,380 --> 01:38:18,380
ok

2197
01:38:18,380 --> 01:38:22,850
ok

2198
01:38:22,850 --> 01:38:24,850
ok

2199
01:38:24,850 --> 01:38:26,850
ok

2200
01:38:26,850 --> 01:38:28,850
ok

2201
01:38:28,850 --> 01:38:32,540
ok

2202
01:38:32,540 --> 01:38:34,540
ok

2203
01:38:34,540 --> 01:38:36,540
ok

2204
01:38:36,540 --> 01:38:38,540
ok

2205
01:38:38,540 --> 01:38:40,540
ok

2206
01:38:40,540 --> 01:38:42,540
ok

2207
01:38:42,540 --> 01:38:44,540
ok

2208
01:38:44,540 --> 01:39:14,540
ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok ok

2209
01:39:14,540 --> 01:39:15,660
Das sackt halt, ne?

2210
01:39:16,020 --> 01:39:16,940
Okay, probieren wir mal aus.

2211
01:39:17,040 --> 01:39:19,400
Docker, Run, CamChamp.

2212
01:39:19,960 --> 01:39:20,620
Schauen wir mal, ob es geht.

2213
01:39:21,420 --> 01:39:22,080
Zack, Funst.

2214
01:39:22,500 --> 01:39:24,720
Docker-Image tut.

2215
01:39:31,170 --> 01:39:36,350
So, ein weiterer Punkt, warum es eine blöde Idee ist, so ein Docker-Image zu bauen.

2216
01:39:37,010 --> 01:39:38,550
Euch fällt hier vielleicht was auf.

2217
01:39:39,250 --> 01:39:43,150
Das Docker-Image ist 3,6 Gigabyte.

2218
01:39:44,610 --> 01:39:47,070
Ich meine, das heißt nicht, dass es nicht funktioniert.

2219
01:39:47,070 --> 01:39:55,800
Aber ein bisschen groß ist es wahrscheinlich, ja?

2220
01:40:03,310 --> 01:40:07,490
Du kannst dein Zeug auch in einer Pipeline bauen und die Artefakte nur in den Container kopieren.

2221
01:40:22,320 --> 01:40:25,420
Ich wusste, dass gleich irgendjemand kommt und sowas in der Richtung erzählt.

2222
01:40:28,810 --> 01:40:31,150
Wobei, da warst du doch sogar da, wo ich das gesagt habe.

2223
01:40:31,550 --> 01:40:32,530
Lass mir das nicht so lassen.

2224
01:40:34,770 --> 01:40:37,590
Also, man sieht, es ist ein bisschen doof.

2225
01:40:39,210 --> 01:40:43,850
Ach so, du meinst, dass du irgendwie GitHub-Actions machst und dann den Output...

2226
01:40:44,270 --> 01:40:45,650
Ja, okay, das wäre nochmal.

2227
01:40:45,970 --> 01:40:47,710
Das wäre nochmal eine Nummer-Advancer.

2228
01:40:47,790 --> 01:40:49,350
Das machen wir vielleicht das nächste Mal.

2229
01:40:49,950 --> 01:40:50,650
Müssen wir mal gucken.

2230
01:40:51,250 --> 01:40:52,890
Also, das funktioniert.

2231
01:40:53,290 --> 01:40:56,130
Das ist allerdings, wie man sieht hier, echt sehr doof.

2232
01:40:56,410 --> 01:40:59,970
Ja, so ein 8,6 Gigabyte Container-Image sackt ein bisschen.

2233
01:41:00,490 --> 01:41:02,630
Ich schmeiße nochmal alle meine Container-Images weg.

2234
01:41:03,130 --> 01:41:03,830
Das wird man gleich sehen.

2235
01:41:03,910 --> 01:41:05,110
Da haben wir wieder 5 Gigabyte freigegeben.

2236
01:41:05,470 --> 01:41:06,990
Und jetzt machen wir das Ganze nochmal in hübsch.

2237
01:41:08,250 --> 01:41:09,750
Also, was ist denn...

2238
01:41:09,750 --> 01:41:10,090
Ach ja.

2239
01:41:10,330 --> 01:41:13,010
Was ist denn die Essenz aus dem Ganzen, was wir hier machen?

2240
01:41:15,570 --> 01:41:16,890
Wir installieren Rust.

2241
01:41:19,230 --> 01:41:20,350
Kompilieren die Rust-App.

2242
01:41:21,290 --> 01:41:22,190
Wir installieren .NET.

2243
01:41:23,130 --> 01:41:24,130
Kompilieren die .NET-App.

2244
01:41:24,230 --> 01:41:25,890
Installieren die Abhängigkeiten für .NET.

2245
01:41:26,530 --> 01:41:27,670
Kompilieren die .NET-App.

2246
01:41:28,930 --> 01:41:34,530
Kopieren die Rust-Library, die wir hier oben gebaut haben, in den Output-Folder, wo dann die Anwendung drin läuft.

2247
01:41:35,090 --> 01:41:39,710
Kopieren die Webseite in den Web-Server-Folder.

2248
01:41:40,430 --> 01:41:41,990
Wir downloaden den FFM-Pack.

2249
01:41:43,130 --> 01:41:44,770
Und kopieren es an die richtige Stelle.

2250
01:41:44,970 --> 01:41:46,850
Und am Ende sagen wir, wie man das Ganze starten kann.

2251
01:41:47,250 --> 01:41:47,350
So.

2252
01:41:49,630 --> 01:41:49,950
Also.

2253
01:41:49,950 --> 01:41:52,090
Das Ganze jetzt noch in schön.

2254
01:41:52,390 --> 01:41:53,230
Und es gibt sowas.

2255
01:41:53,530 --> 01:41:54,510
Also, ihr habt jetzt gesehen.

2256
01:41:55,210 --> 01:41:57,410
Chat, ich möchte, dass ihr das alle zur Kenntnis...

2257
01:41:57,410 --> 01:41:58,670
Ach so, fuck, das Image ist weg.

2258
01:41:58,810 --> 01:41:58,890
Okay.

2259
01:41:59,330 --> 01:42:05,970
Dass ihr das alle zur Kenntnis genommen habt, dass das Image, wenn man das so baut, 3,6 Gigabyte groß ist.

2260
01:42:07,450 --> 01:42:08,450
Chat, noted.

2261
01:42:08,650 --> 01:42:09,830
Das wird nachher abgefragt.

2262
01:42:12,790 --> 01:42:14,430
Da gibt es doch so ein nice noted Emote.

2263
01:42:15,050 --> 01:42:15,110
Ja.

2264
01:42:17,600 --> 01:42:19,580
Habt ihr das noted alle, ja?

2265
01:42:20,420 --> 01:42:22,040
Dass es 3,6 Gigabyte ist.

2266
01:42:22,040 --> 01:42:23,380
Dass es keine so gute Idee ist.

2267
01:42:23,720 --> 01:42:28,460
Die .NET-App ist wahrscheinlich recht groß.

2268
01:42:28,580 --> 01:42:29,620
Nee, die ist...

2269
01:42:29,620 --> 01:42:32,460
Das ist ja sogar eine Framework-dependent-App.

2270
01:42:33,280 --> 01:42:34,040
Die ist nicht groß.

2271
01:42:34,160 --> 01:42:35,840
Die ist, keine Ahnung, 10 MB oder sowas.

2272
01:42:37,760 --> 01:42:38,040
Okay.

2273
01:42:38,300 --> 01:42:39,600
Der Chat hat genoted.

2274
01:42:39,780 --> 01:42:40,180
Alles klar.

2275
01:42:40,760 --> 01:42:45,860
So, und das ist natürlich doof, weil die Images fressen halt...

2276
01:42:45,860 --> 01:42:47,620
Das ist deutlich zu groß.

2277
01:42:47,840 --> 01:42:50,620
Die Images fressen halt Speicher in der Registry.

2278
01:42:51,160 --> 01:42:54,340
Wenn das auch etwas optimierter da drinnen gespeichert wird.

2279
01:42:54,340 --> 01:42:56,340
Aber auch die Bildzeiten sind relativ...

2280
01:42:56,440 --> 01:43:00,160
relativ groß, weil ab jedem Step, wenn sich hier etwas ändert, muss das ganze Ding neu

2281
01:43:00,160 --> 01:43:01,160
durchlaufen werden.

2282
01:43:01,160 --> 01:43:06,580
Und dementsprechend sind natürlich auch die Updates zu den Images, die Diffs, relativ

2283
01:43:06,580 --> 01:43:07,580
groß.

2284
01:43:07,580 --> 01:43:11,940
Selbst wenn ihr nicht jedes Mal ein komplett neues Image speichert, der cached sich ja

2285
01:43:11,940 --> 01:43:12,940
nur die Stages.

2286
01:43:12,940 --> 01:43:18,760
Das heißt, eure Image-Registry wird über kurz oder lang echt viel Geld kosten, wenn

2287
01:43:18,760 --> 01:43:22,080
ihr nur solche Images reinhaut oder wenn ihr die selbst hostet, dann...

2288
01:43:22,080 --> 01:43:25,200
Na gut, ihr könnt es auch bei GitHub hosten, da weiß ich nicht, ab wann die was berechnen.

2289
01:43:25,200 --> 01:43:26,200
Haha.

2290
01:43:26,440 --> 01:43:30,800
Ist auf jeden Fall keine gute Idee, weil es dauert alles länger und suckt.

2291
01:43:30,800 --> 01:43:35,280
Deswegen gibt es bei Docker sowas, das nennt sich Multistage-Build.

2292
01:43:35,280 --> 01:43:37,580
Die Idee dahinter ist folgendes.

2293
01:43:37,580 --> 01:43:44,480
Man macht nicht nur ein Image, sondern man macht für jeden Build-Step, der ein bisschen

2294
01:43:44,480 --> 01:43:48,560
komplexer ist und Caching braucht, einen eigenen...

2295
01:43:48,560 --> 01:43:55,640
Ja, Build-Step mit eigenem Image draus und ganz am Ende macht man dann ein Image, wo

2296
01:43:55,640 --> 01:44:01,040
man die Sachen aus den vorherigen Build-Steps reinkopiert und das wird dann das Image, was

2297
01:44:01,040 --> 01:44:05,520
am Ende rausfällt und von Docker gestartet wird oder von Kubernetes oder von irgendeiner

2298
01:44:05,520 --> 01:44:06,520
Container-Runtime.

2299
01:44:06,520 --> 01:44:10,760
Hat den Vorteil, diesen ganzen Mist hier von...

2300
01:44:10,760 --> 01:44:15,480
Wir müssen Rust runterladen, wir brauchen hier komplettes Ding, wir brauchen Rust-Abhängigkeiten

2301
01:44:15,480 --> 01:44:21,680
von 1,2 Gigabyte, fällt weg, die fallen nur im Build-Prozess an, im eigentlichen Output-Image

2302
01:44:21,680 --> 01:44:22,800
sind die dann nicht mehr drinne.

2303
01:44:22,800 --> 01:44:23,800
Was wir im Output-Image brauchen und warum unsere Output-Image nicht mehr drin ist, ist,

2304
01:44:23,800 --> 01:44:24,800
dass...

2305
01:44:24,800 --> 01:44:28,520
Was wir brauchen und warum unsere Output-Image doch immer noch ein bisschen größer ist...

2306
01:44:28,520 --> 01:44:31,680
Ja gut, ist das hier, FFmpeg.

2307
01:44:31,680 --> 01:44:36,240
Aber auch FFmpeg kann gecached werden, weil FFmpeg-Updaten wir ja nicht laufen, sondern

2308
01:44:36,240 --> 01:44:39,340
immer nur dann, wenn es notwendig ist.

2309
01:44:39,340 --> 01:44:47,320
Also, würde ich sagen, legen wir mal los und bauen da mal ein Multistage-Build draus.

2310
01:44:47,320 --> 01:44:56,280
Ich würde vorschlagen, das erste, was wir machen ist, wir benennen das mal um, dass

2311
01:44:56,280 --> 01:44:57,280
wir abgucken können.

2312
01:44:57,280 --> 01:45:03,880
Docker-File-Old.

2313
01:45:03,880 --> 01:45:05,160
Docker-File-New.

2314
01:45:05,160 --> 01:45:06,160
Alles klar.

2315
01:45:06,160 --> 01:45:12,440
So, das erste, was wir machen ist, wir gucken mal nach dem offiziellen Rust-Image, weil

2316
01:45:12,440 --> 01:45:17,880
dieser Step hier gefällt mir beispielsweise überhaupt nicht, dass wir unser eigenes Rust

2317
01:45:17,880 --> 01:45:18,880
installieren müssen.

2318
01:45:18,880 --> 01:45:24,160
Und wenn wir eh schon mehrere Images verwenden und unser Image beim Bauen nicht gleich dem

2319
01:45:24,160 --> 01:45:30,200
Output-Image ist, können wir einfach auch das offizielle Rust-Image verwenden.

2320
01:45:30,200 --> 01:45:37,600
Und wir wollen...

2321
01:45:37,600 --> 01:45:38,600
Rust-174-Build.

2322
01:45:38,600 --> 01:45:39,600
Okay.

2323
01:45:39,600 --> 01:45:40,600
Gut.

2324
01:45:40,600 --> 01:45:41,600
Bookworm.

2325
01:45:41,600 --> 01:45:42,600
Wollen wir haben.

2326
01:45:42,600 --> 01:45:43,600
Das ist gut.

2327
01:45:43,600 --> 01:45:44,600
174.

2328
01:45:44,600 --> 01:45:45,600
Also.

2329
01:45:45,600 --> 01:45:53,000
Wir benutzen jetzt nicht Debian, sondern wir benutzen Rust 1.74 Bookworm.

2330
01:45:53,000 --> 01:45:56,720
Das ist zufälligerweise auch ein Debian, aber das ist echt nur Zufall.

2331
01:45:56,720 --> 01:45:57,720
Müsste nicht sein.

2332
01:45:57,720 --> 01:46:02,780
So, und wir müssen jetzt auch kein Slim-Image oder sonst was verwenden, weil wir kopieren

2333
01:46:02,780 --> 01:46:04,920
ja den Output rüber und wir verwenden das Image-Guide.

2334
01:46:04,920 --> 01:46:09,720
Also, wir könnten ein super fettes Image haben zum Bauen, wovon wir eigentlich am Ende

2335
01:46:09,720 --> 01:46:12,720
in dem Target-Image gar nichts verwenden.

2336
01:46:12,720 --> 01:46:14,720
So, Work-Dir-Build ist glaube ich okay.

2337
01:46:14,720 --> 01:46:19,720
Ähm.

2338
01:46:19,720 --> 01:46:20,720
Update.

2339
01:46:20,720 --> 01:46:21,720
Updaten.

2340
01:46:21,720 --> 01:46:22,720
Können wir uns schenken.

2341
01:46:22,720 --> 01:46:23,720
Ha.

2342
01:46:23,720 --> 01:46:26,720
Wer braucht geupdatetes Image?

2343
01:46:26,720 --> 01:46:30,560
Install.

2344
01:46:30,560 --> 01:46:37,560
WGAT werden wir weiterhin brauchen, weil wir ja noch FFM-Pack irgendwo runterladen müssen.

2345
01:46:37,560 --> 01:46:40,560
Das Curl können wir uns schenken.

2346
01:46:40,560 --> 01:46:43,560
Output kopieren.

2347
01:46:43,560 --> 01:46:45,560
Das müssen wir in der Tat machen.

2348
01:46:45,560 --> 01:46:46,560
Und...

2349
01:46:46,560 --> 01:46:53,290
Wir können uns aber...

2350
01:46:53,290 --> 01:46:54,290
Ne, wobei, ist eigentlich gut.

2351
01:46:54,290 --> 01:46:55,290
Wir können Cargo-Build machen nur noch, weil wir jetzt das offizielle Image benutzen.

2352
01:46:55,290 --> 01:46:56,290
Da ist Cargo im Path.

2353
01:46:56,290 --> 01:46:57,290
Kann er ohne Update überhaupt die Pakete finden?

2354
01:46:57,290 --> 01:46:58,290
Wir installieren...

2355
01:46:58,290 --> 01:46:59,290
Achso, ja, du hast recht.

2356
01:46:59,290 --> 01:47:00,290
Das könnte sein, dass das ein Problem macht.

2357
01:47:00,290 --> 01:47:01,290
Er würde eigentlich von ausgehen, dass das geht, aber...

2358
01:47:01,290 --> 01:47:02,290
Ja.

2359
01:47:02,290 --> 01:47:03,290
Ja, du hast recht.

2360
01:47:03,290 --> 01:47:04,290
Ja, wir lassen es drin.

2361
01:47:04,290 --> 01:47:05,290
Ja, ihr habt...

2362
01:47:05,290 --> 01:47:06,290
Ihr habt recht.

2363
01:47:06,290 --> 01:47:07,290
Wir lassen es.

2364
01:47:07,290 --> 01:47:08,290
Wir lassen es.

2365
01:47:08,290 --> 01:47:09,290
Wir lassen es.

2366
01:47:09,290 --> 01:47:10,290
Wir lassen es.

2367
01:47:10,290 --> 01:47:11,290
Wir lassen es.

2368
01:47:11,290 --> 01:47:12,290
Wir lassen es.

2369
01:47:12,290 --> 01:47:17,360
Wir lassen es.

2370
01:47:17,360 --> 01:47:18,360
Wir lassen es.

2371
01:47:18,360 --> 01:47:19,360
Wir lassen es.

2372
01:47:19,360 --> 01:47:20,360
Wir lassen es.

2373
01:47:20,360 --> 01:47:21,360
Wir lassen es.

2374
01:47:21,360 --> 01:47:22,360
Wir lassen es.

2375
01:47:22,360 --> 01:47:25,370
Ja, wir lassen es drin.

2376
01:47:25,370 --> 01:47:26,370
Ja, ihr habt...

2377
01:47:26,370 --> 01:47:27,370
Ihr habt recht.

2378
01:47:27,370 --> 01:47:28,370
Wir lassen es drin.

2379
01:47:28,370 --> 01:47:31,730
So, das können wir uns erstmal schenken hier.

2380
01:47:31,730 --> 01:47:32,730
Wir machen das mal weg hier.

2381
01:47:32,730 --> 01:47:33,730
Bam.

2382
01:47:33,730 --> 01:47:34,730
So, wir haben es ja da drüben noch stehen.

2383
01:47:34,730 --> 01:47:35,730
So, Cargo-Build-Release.

2384
01:47:35,730 --> 01:47:39,410
Bis zu dem Step sollte das jetzt eigentlich schon durchlaufen.

2385
01:47:39,410 --> 01:47:43,110
Probieren wir mal aus.

2386
01:47:43,110 --> 01:47:49,030
Ob das jetzt funzt.

2387
01:47:49,030 --> 01:47:50,030
Docker-Build.

2388
01:47:50,030 --> 01:47:51,030
Ah.

2389
01:47:51,030 --> 01:47:56,680
Sieht eigentlich schon mal ganz gut aus.

2390
01:47:56,680 --> 01:47:58,220
Okay, das ist nur Update aktuell.

2391
01:47:58,220 --> 01:48:10,560
Und warum macht der jetzt so Pause-Champ?

2392
01:48:10,560 --> 01:48:14,990
Warum pausiert Champ das gerade so?

2393
01:48:14,990 --> 01:48:15,990
Upget?

2394
01:48:15,990 --> 01:48:17,990
Ach ne, das war doch das Docker-Image-Pull.

2395
01:48:17,990 --> 01:48:18,990
Ach so.

2396
01:48:18,990 --> 01:48:23,490
Aber guck mal, Cargo-Build funktioniert jetzt.

2397
01:48:23,490 --> 01:48:25,310
Direkt out of the box.

2398
01:48:25,310 --> 01:48:28,910
Ohne dass man irgendwie einen Handstand machen muss, dass es funktioniert.

2399
01:48:28,910 --> 01:48:30,490
Alter, meine Kiste.

2400
01:48:30,490 --> 01:48:31,490
Guckt euch das mal an.

2401
01:48:31,490 --> 01:48:32,490
Die Feuerwehr ist jetzt...

2402
01:48:32,490 --> 01:48:33,490
Die Feuerwehr ist jetzt...

2403
01:48:33,490 --> 01:48:34,370
Die Feuerwehr ist jetzt...

2404
01:48:34,370 --> 01:48:37,070
Die Feuerwehr ist jetzt einfach mal komplett ausgelastet, wenn Rust baut.

2405
01:48:37,070 --> 01:48:41,230
Blazingly fast compile stellst.

2406
01:48:41,230 --> 01:48:52,260
Blazingly fast, aber CPU intensive.

2407
01:48:52,260 --> 01:49:00,070
Ja, das stimmt schon.

2408
01:49:00,070 --> 01:49:03,810
Sobald es jetzt in Docker läuft, wir könnten es ja theoretisch auch irgendwie limitieren.

2409
01:49:03,810 --> 01:49:04,810
Aber wozu?

2410
01:49:04,810 --> 01:49:05,810
Aber wozu?

2411
01:49:05,810 --> 01:49:06,810
Exporting Layers.

2412
01:49:06,810 --> 01:49:08,310
Okay, das ist noch kein...

2413
01:49:08,310 --> 01:49:10,390
Es hat jetzt bis jetzt noch nicht viel gebracht.

2414
01:49:10,390 --> 01:49:14,830
Weil wir haben ja noch kein Target-Image.

2415
01:49:14,830 --> 01:49:15,830
Wir haben jetzt so...

2416
01:49:15,830 --> 01:49:16,830
Okay, das ist der...

2417
01:49:16,830 --> 01:49:17,830
Das ist der Build-Step für...

2418
01:49:17,830 --> 01:49:18,830
Ja.

2419
01:49:18,830 --> 01:49:40,830
für für rast ich würde sagen wir machen in dem gleichen step die die ffm pack geschichte weil

2420
01:49:40,830 --> 01:49:47,430
sonst muss ich ja jede bei jeder änderung die machen wir übrigens auch davor uns müsste sich

2421
01:49:47,430 --> 01:49:52,670
ja bei jeder änderung quasi in rust jetzt wieder neu ffm pack runterladen das ist natürlich auch

2422
01:49:52,670 --> 01:50:12,670
nicht nicht irgendwie sinn und zweck der sache aber mal hier ran bewegt ffm pack wir können das

2423
01:50:12,670 --> 01:50:20,710
auch in einem in eigenem step aus also wie er wehrt ffm pack und dann wird ffm pack umbenannt

2424
01:50:20,710 --> 01:50:32,360
in vielleicht sollte ich das nicht einfach nur ffm pack nennen sondern ffm pack wie heißt der kram

2425
01:50:35,720 --> 01:50:47,820
ffm pack minus n sehr schön so das können wir machen gut so das ist der erste bild step

2426
01:50:47,820 --> 01:50:53,760
also ffm pack runterladen ffm pack entpacken rast zeug kompilieren und jetzt kommt der trick

2427
01:50:53,760 --> 01:51:01,920
beim multistage bild für den dotnet part machen wir ein neues bild image also wieder from jetzt

2428
01:51:01,920 --> 01:51:14,050
muss ich mal gucken dotnet docker images sdk brauchen wir jetzt genau

2429
01:51:15,610 --> 01:51:37,680
sdk from mcr das ist die microsoft docker sdk 8.0 muss dahinter als versions tag wenn ich jetzt

2430
01:51:37,680 --> 01:51:43,140
wüsste welche versions tag es gebe wäre schon sehr nice sieht man das wenn man hier drauf geht

2431
01:51:43,140 --> 01:51:53,280
nein das wäre auch deutlich zu einfach microsoft wenn das funktionieren würde feature tags wird

2432
01:51:53,280 --> 01:51:54,920
trotzdem ganz nice zu wissen was es ist

2433
01:51:55,440 --> 01:52:09,560
sonst noch gibt die haben garantiert noch mehr tags naja gut scheiß drauf wir machen es wir machen so

2434
01:52:09,560 --> 01:52:17,660
das ding nennen wir jetzt okay dass das heißt nicht bild sondern das heißt rast und das hier

2435
01:52:17,660 --> 01:52:23,840
heißt dotnet weil das dienst die namen brauche später weil man die dateien von den einzelnen

2436
01:52:23,840 --> 01:52:34,060
steps raus kopieren wollen aber immer hier kommen sie immer so was okay bild rast nächster step

2437
01:52:34,240 --> 01:52:44,860
bild dotnet so microsoft image wird gepublikiert und jetzt wir machen wieder wird wird dir bild

2438
01:52:44,860 --> 01:52:55,120
weil warum nicht so und jetzt können wir diesen kram hierüber kopieren said noiss Asko diesen

2439
01:52:55,120 --> 01:53:00,830
kram hierüber kopieren copy und jetzt kommt sich die dinge auch nicht mehr in die quere

2440
01:53:00,830 --> 01:53:05,750
dass hier ist ein eigener container mal bilden und das hier ist ein ein eigener container munter

2441
01:53:05,930 --> 01:53:08,570
okay, jetzt wird das Ganze wieder

2442
01:53:08,570 --> 01:53:10,650
.NET run, .NET

2443
01:53:10,650 --> 01:53:12,230
haben wir es noch hier, publish

2444
01:53:12,230 --> 01:53:19,320
okay, da ist, zack

2445
01:53:19,320 --> 01:53:21,660
das können wir uns

2446
01:53:21,660 --> 01:53:23,480
auch sparen, weil

2447
01:53:23,480 --> 01:53:25,640
.NET garantiert im .NET Container

2448
01:53:25,640 --> 01:53:26,640
verfügbar sein wird

2449
01:53:26,640 --> 01:53:29,740
werden die ganzen Stages nacheinander gleichzeitig

2450
01:53:29,740 --> 01:53:31,520
abgearbeitet, gleichzeitig

2451
01:53:31,520 --> 01:53:33,700
es sei denn, die eine hat Abhängigkeit

2452
01:53:33,700 --> 01:53:35,660
auf die andere, das ist relativ

2453
01:53:35,660 --> 01:53:37,500
schlau, mittlerweile

2454
01:53:37,500 --> 01:53:39,420
die ganze Buildkit, Docker

2455
01:53:39,420 --> 01:53:41,520
Buildgeschichte, du wirst

2456
01:53:41,520 --> 01:53:43,420
du wirst gleich sehen, der macht das parallel

2457
01:53:43,420 --> 01:53:45,000
es sei denn, es hängt voneinander ab

2458
01:53:45,000 --> 01:53:49,070
oh ja, gut, und wenn sie unterschiedlich schnell sind

2459
01:53:49,070 --> 01:53:51,150
dann sieht es halt auch nicht parallel

2460
01:53:51,150 --> 01:53:52,870
aus, aber sie sind parallel, okay

2461
01:53:52,870 --> 01:53:54,790
.NET publish, .NET release

2462
01:53:54,790 --> 01:53:57,090
Output, eigentlich

2463
01:53:57,090 --> 01:53:58,950
kann ich mir das komplett schenken, den

2464
01:53:58,950 --> 01:54:01,010
Output, das kann ruhig das Default Verzeichnis

2465
01:54:01,010 --> 01:54:02,790
sein, das ist okay

2466
01:54:02,790 --> 01:54:05,970
okay, und jetzt

2467
01:54:05,970 --> 01:54:08,510
kommt der eigentliche Trick

2468
01:54:08,510 --> 01:54:10,550
jetzt kann man unten nochmal sagen

2469
01:54:10,550 --> 01:54:11,810
hier, wieso

2470
01:54:11,810 --> 01:54:14,310
App oder so, nennen wir es einfach mal

2471
01:54:14,310 --> 01:54:14,770
App

2472
01:54:14,770 --> 01:54:16,530
so, und jetzt sagen wir

2473
01:54:16,530 --> 01:54:18,610
From, jetzt brauchen wir das Microsoft Image

2474
01:54:18,610 --> 01:54:19,270
für

2475
01:54:19,270 --> 01:54:21,750
ASP.NET Core

2476
01:54:21,750 --> 01:54:23,310
hier, das da, brauchen wir

2477
01:54:23,310 --> 01:54:34,090
wahrscheinlich einfach nur das, Moment, ach nicht Runtime

2478
01:54:34,090 --> 01:54:35,370
ASP.NET, da ist doch

2479
01:54:35,370 --> 01:54:42,250
genau, From, so, S

2480
01:54:42,250 --> 01:54:44,410
GachiBus

2481
01:54:44,410 --> 01:54:46,630
also Runtime oder sowas

2482
01:54:46,630 --> 01:54:48,330
keine Ahnung, ich glaube Microsoft

2483
01:54:48,330 --> 01:54:49,470
nennt das Zeug immer Runtime

2484
01:54:49,470 --> 01:54:52,730
so, WorkDir

2485
01:54:52,730 --> 01:54:52,770
so

2486
01:54:52,770 --> 01:54:52,930
so

2487
01:54:52,930 --> 01:54:52,950
so

2488
01:54:52,950 --> 01:54:52,970
so

2489
01:54:52,970 --> 01:54:52,990
so

2490
01:54:52,990 --> 01:54:53,010
so

2491
01:54:53,010 --> 01:54:53,030
so

2492
01:54:53,030 --> 01:54:53,050
so

2493
01:54:53,050 --> 01:54:53,070
so

2494
01:54:53,070 --> 01:54:53,110
so

2495
01:54:53,110 --> 01:54:53,130
so

2496
01:54:53,130 --> 01:54:53,150
so

2497
01:54:53,150 --> 01:54:53,170
so

2498
01:54:53,170 --> 01:54:53,190
so

2499
01:54:53,190 --> 01:54:53,230
so

2500
01:54:53,230 --> 01:54:53,250
so

2501
01:54:53,250 --> 01:54:53,270
so

2502
01:54:53,270 --> 01:54:53,310
so

2503
01:54:53,310 --> 01:54:53,350
so

2504
01:54:54,290 --> 01:54:54,630
so

2505
01:54:54,630 --> 01:54:54,650
so

2506
01:54:54,650 --> 01:54:54,690
so

2507
01:54:54,690 --> 01:54:54,730
so

2508
01:54:54,730 --> 01:54:54,750
so

2509
01:54:54,750 --> 01:54:54,790
so

2510
01:54:54,790 --> 01:54:54,830
so

2511
01:54:54,830 --> 01:54:54,850
so

2512
01:54:54,850 --> 01:54:54,870
so

2513
01:54:54,870 --> 01:54:54,890
so

2514
01:54:54,890 --> 01:54:54,910
so

2515
01:54:54,910 --> 01:54:54,930
so

2516
01:54:54,930 --> 01:54:54,950
so

2517
01:54:54,950 --> 01:54:54,970
so

2518
01:54:54,970 --> 01:54:54,990
so

2519
01:54:54,990 --> 01:54:55,010
so

2520
01:54:55,010 --> 01:54:55,030
so

2521
01:54:55,030 --> 01:54:55,050
so

2522
01:54:55,050 --> 01:54:55,070
so

2523
01:54:55,070 --> 01:54:55,130
so

2524
01:54:55,130 --> 01:54:55,150
so

2525
01:54:55,150 --> 01:54:55,170
so

2526
01:54:55,170 --> 01:54:55,190
so

2527
01:54:55,190 --> 01:54:55,210
so

2528
01:54:55,210 --> 01:54:55,230
so

2529
01:54:55,230 --> 01:54:55,250
so

2530
01:54:55,250 --> 01:54:55,270
so

2531
01:54:55,270 --> 01:54:55,290
so

2532
01:54:55,290 --> 01:54:55,310
so

2533
01:54:55,310 --> 01:54:55,330
so

2534
01:54:55,330 --> 01:54:55,350
so

2535
01:54:55,350 --> 01:54:55,370
so

2536
01:54:55,370 --> 01:54:55,390
so

2537
01:54:55,390 --> 01:54:55,430
so

2538
01:54:55,430 --> 01:54:55,450
so

2539
01:54:55,450 --> 01:54:55,470
so

2540
01:54:55,470 --> 01:54:55,490
so

2541
01:54:55,490 --> 01:54:55,510
so

2542
01:54:55,510 --> 01:54:55,530
so

2543
01:54:55,530 --> 01:54:55,550
so

2544
01:54:55,550 --> 01:54:55,570
so

2545
01:54:55,570 --> 01:54:55,590
so

2546
01:54:55,590 --> 01:54:55,610
so

2547
01:54:55,610 --> 01:54:55,630
so

2548
01:54:55,630 --> 01:54:55,650
so

2549
01:54:55,650 --> 01:54:55,670
so

2550
01:54:55,670 --> 01:54:55,710
so

2551
01:54:55,710 --> 01:54:55,730
so

2552
01:54:55,730 --> 01:54:55,750
so

2553
01:54:55,750 --> 01:54:55,770
so

2554
01:54:55,770 --> 01:54:55,790
so

2555
01:54:55,790 --> 01:54:57,870
so

2556
01:54:57,870 --> 01:54:57,890
so

2557
01:54:57,890 --> 01:54:57,910
so

2558
01:54:57,910 --> 01:54:57,930
so

2559
01:54:57,930 --> 01:54:57,950
so

2560
01:54:57,950 --> 01:54:58,010
so

2561
01:54:58,010 --> 01:54:58,070
so

2562
01:54:58,070 --> 01:54:58,110
so

2563
01:54:58,110 --> 01:54:58,130
so

2564
01:54:58,130 --> 01:54:58,150
so

2565
01:54:58,150 --> 01:54:58,170
so

2566
01:54:58,170 --> 01:54:58,190
so

2567
01:54:58,190 --> 01:54:58,210
so

2568
01:54:58,210 --> 01:54:58,230
so

2569
01:54:58,230 --> 01:54:58,250
so

2570
01:54:58,250 --> 01:54:58,270
so

2571
01:54:58,270 --> 01:54:58,290
so

2572
01:54:58,290 --> 01:54:58,310
so

2573
01:54:59,470 --> 01:55:00,410
so

2574
01:55:00,410 --> 01:55:00,430
so

2575
01:55:02,430 --> 01:55:02,710
so

2576
01:55:02,710 --> 01:55:02,750
so

2577
01:55:02,750 --> 01:55:03,110
so

2578
01:55:30,240 --> 01:55:35,820
ist schon was dran ich meine es sei denn es macht sinn dass man die einzelne cash für sich genommen

2579
01:55:35,820 --> 01:55:52,300
aber du hast du hast recht ja ok also docker bild jetzt werdet ihr sehen als sei das kackt ab es

2580
01:55:52,300 --> 01:55:56,920
sei es kackt ab wir müssen jetzt mehrere bilds parallel sehen nämlich einmal den rast konnte

2581
01:55:56,920 --> 01:56:03,940
einmal den dotnet container und den output container am ende ok er pullt erst mal dass

2582
01:56:03,940 --> 01:56:13,420
er pullt erst mal das image zack und schon ist er fertig das ging ach so doch er ist zu schlau

2583
01:56:13,420 --> 01:56:19,000
leute doch er ist zu schlau der erkennt dass der das von diesem image nichts benutzt werden

2584
01:56:19,000 --> 01:56:23,500
deswegen baut das nicht vermutlich ok also muss ich jetzt muss ich jetzt doch so tun als will ich

2585
01:56:23,500 --> 01:56:29,060
was davon haben und zwar man kann jetzt also wir haben ja hier oben die dort net app die dort net

2586
01:56:29,060 --> 01:56:33,880
app gebildet gebildet und hier die rast app und das ist mein mein ziel image das heißt

2587
01:56:33,880 --> 01:56:40,400
im endeffekt muss ich jetzt so was machen hier wie copy und jetzt from wobei ich glaube das

2588
01:56:40,400 --> 01:56:48,220
können wir uns sparen copy from hier den name von dem image zur bild zeit wo die dateien liegen also

2589
01:56:48,220 --> 01:56:57,340
copy from rast slash bild weil werkt ihr splash bild und da drin gibt es jetzt ein ffm pack folder

2590
01:57:03,880 --> 01:57:05,880
Als nächstes brauchen wir

2591
01:57:05,880 --> 01:57:07,680
from Rust noch

2592
01:57:07,680 --> 01:57:14,490
ja,

2593
01:57:19,140 --> 01:57:21,500
build target release libweb

2594
01:57:21,500 --> 01:57:23,200
rtc rust.so

2595
01:57:23,200 --> 01:57:26,830
Soll im Prinzip hier exakt

2596
01:57:26,830 --> 01:57:27,770
genauso heißen.

2597
01:57:29,310 --> 01:57:30,950
Und dann brauchen wir

2598
01:57:30,950 --> 01:57:32,850
als letzten Step noch, ich bin mir nicht

2599
01:57:32,850 --> 01:57:34,970
sicher, ob die Reihenfolge gerade die beste

2600
01:57:34,970 --> 01:57:36,950
ist. Und dann brauchen wir

2601
01:57:36,950 --> 01:57:38,650
als letzten Step noch

2602
01:57:38,650 --> 01:57:40,550
die .NET App. Und zwar

2603
01:57:40,550 --> 01:57:42,850
jetzt ist es from .NET

2604
01:57:42,850 --> 01:57:46,550
from .NET

2605
01:57:46,550 --> 01:57:46,930
und jetzt

2606
01:57:46,930 --> 01:57:48,910
kann ich mir immer nicht merken, wo dieser ganze Mist

2607
01:57:48,910 --> 01:57:50,370
liegt. Auf jeden Fall schon mal in build.

2608
01:57:51,090 --> 01:57:52,390
Habe ich das hier irgendwo stehen?

2609
01:57:52,790 --> 01:57:52,910
Ne.

2610
01:58:03,680 --> 01:58:05,600
Minus O. Ja, auch

2611
01:58:05,600 --> 01:58:12,610
in release, aber diesen...

2612
01:58:12,610 --> 01:58:13,970
Liegt FFmpeg nicht unter

2613
01:58:13,970 --> 01:58:15,710
slash build slash... Ne.

2614
01:58:17,530 --> 01:58:18,550
FFmpeg kommt hier...

2615
01:58:18,550 --> 01:58:20,510
Achso, Moment. Wait a minute.

2616
01:58:24,400 --> 01:58:24,840
Du hast recht.

2617
01:58:29,400 --> 01:58:30,960
Das hätte übrigens gar nicht funktioniert an der Stelle,

2618
01:58:30,960 --> 01:58:32,800
weil es Verzeichnis nicht gegeben hätte.

2619
01:58:33,620 --> 01:58:35,100
So ist richtig. So ist richtig.

2620
01:58:35,260 --> 01:58:37,180
Siehste? Chatge... HiIQ wieder.

2621
01:58:40,540 --> 01:58:41,480
So, from build.

2622
01:58:42,660 --> 01:58:44,000
Ich kann es mir einfach immer nicht

2623
01:58:44,000 --> 01:58:46,100
merken, wo die .NET... .NET

2624
01:58:46,100 --> 01:58:48,260
publish minus c release.

2625
01:58:48,420 --> 01:58:49,160
Alles klar, gib ihm.

2626
01:58:50,860 --> 01:58:51,120
Was?

2627
01:58:52,440 --> 01:58:53,440
Achso, ha. Ja.

2628
01:58:53,920 --> 01:58:57,670
Ja, ist ja gut. Nicht Docker.

2629
01:59:04,600 --> 01:59:04,920
Okay.

2630
01:59:07,540 --> 01:59:08,860
Bin release

2631
01:59:08,860 --> 01:59:10,320
net 8.

2632
01:59:10,320 --> 01:59:16,350
Publish.

2633
01:59:20,020 --> 01:59:22,000
Bin release...

2634
01:59:22,880 --> 01:59:24,880
net 8. Publish.

2635
01:59:24,880 --> 01:59:30,560
All right.

2636
01:59:30,560 --> 01:59:32,560
Bin release publish.

2637
01:59:32,560 --> 01:59:34,560
Okay.

2638
01:59:34,560 --> 01:59:36,560
Auch hier. Gleicher, gleicher.

2639
01:59:36,560 --> 01:59:38,560
Soll die ganzen Crampli einfach

2640
01:59:38,560 --> 01:59:40,560
in das Verzeichnis schmeißen.

2641
01:59:40,560 --> 01:59:42,560
Einfach eigenen Output setzen.

2642
01:59:42,560 --> 01:59:44,560
Ja, das wäre auch eine Möglichkeit.

2643
01:59:44,560 --> 01:59:46,560
So, und als letztes kopieren

2644
01:59:46,560 --> 01:59:48,560
wir noch von

2645
01:59:48,560 --> 01:59:50,560
backend www...

2646
01:59:50,560 --> 01:59:52,560
Das da machen wir

2647
01:59:52,560 --> 01:59:54,560
im Endeffekt. Moment, das machen wir nicht. www root

2648
01:59:54,560 --> 01:59:56,560
nach www root.

2649
01:59:56,560 --> 02:00:00,710
Alles klar.

2650
02:00:00,710 --> 02:00:02,710
So.

2651
02:00:02,710 --> 02:00:04,710
Das cmd sparen wir uns jetzt mal.

2652
02:00:04,710 --> 02:00:06,710
Ich hoffe, das funzt jetzt. Docker build. Bam.

2653
02:00:06,710 --> 02:00:08,710
Guck, man sieht,

2654
02:00:08,710 --> 02:00:10,710
er macht die Sachen auch parallel. Hier oben

2655
02:00:10,710 --> 02:00:12,710
ist er am .NET Image. Hier unten ist er am Rust Image.

2656
02:00:12,710 --> 02:00:19,220
.

2657
02:00:19,220 --> 02:00:21,220
.

2658
02:00:21,220 --> 02:00:23,220
Guck, hier oben lädt er noch das .NET Image runter.

2659
02:00:23,220 --> 02:00:25,220
Hier unten baut er schon Rust. Also es geht bis zu dem Punkt

2660
02:00:25,220 --> 02:00:27,220
parallel. Das letzte, das Output

2661
02:00:27,220 --> 02:00:29,220
Image kann er natürlich nicht parallel bauen, weil

2662
02:00:29,220 --> 02:00:31,220
das Abhängigkeiten zu diesen beiden Images hat.

2663
02:00:31,220 --> 02:00:36,320
.

2664
02:00:36,320 --> 02:00:38,320
.

2665
02:00:38,320 --> 02:00:40,320
.

2666
02:00:40,320 --> 02:00:42,320
.

2667
02:00:42,320 --> 02:00:44,320
.

2668
02:00:44,320 --> 02:00:46,320
.

2669
02:00:46,320 --> 02:00:48,320
.

2670
02:00:48,320 --> 02:00:50,320
.

2671
02:00:50,320 --> 02:00:52,320
.

2672
02:00:52,320 --> 02:00:54,320
.

2673
02:00:54,320 --> 02:00:56,320
.

2674
02:00:56,320 --> 02:00:58,320
.

2675
02:00:58,320 --> 02:01:00,320
.

2676
02:01:00,320 --> 02:01:02,320
.

2677
02:01:02,320 --> 02:01:06,320
.

2678
02:01:06,320 --> 02:01:10,020
.

2679
02:01:10,020 --> 02:01:12,020
.

2680
02:01:12,020 --> 02:01:14,020
.

2681
02:01:14,020 --> 02:01:16,020
.

2682
02:01:16,020 --> 02:01:18,020
.

2683
02:01:18,020 --> 02:01:20,020
.

2684
02:01:20,020 --> 02:01:22,020
.

2685
02:01:22,020 --> 02:01:24,020
.

2686
02:01:24,020 --> 02:01:26,020
.

2687
02:01:26,020 --> 02:01:31,510
.

2688
02:01:31,510 --> 02:01:33,510
.

2689
02:01:33,510 --> 02:01:35,510
.

2690
02:01:35,510 --> 02:01:39,510
.

2691
02:01:39,510 --> 02:01:41,510
.

2692
02:01:41,510 --> 02:01:43,510
.

2693
02:01:43,510 --> 02:01:45,510
.

2694
02:01:45,510 --> 02:01:47,510
.

2695
02:01:47,510 --> 02:01:49,510
.

2696
02:01:49,510 --> 02:01:53,840
.

2697
02:01:53,840 --> 02:01:55,840
.

2698
02:01:55,840 --> 02:01:57,840
.

2699
02:01:57,840 --> 02:01:59,840
.

2700
02:01:59,840 --> 02:02:01,840
.

2701
02:02:01,840 --> 02:02:03,840
.

2702
02:02:03,840 --> 02:02:05,840
.

2703
02:02:05,840 --> 02:02:07,840
.

2704
02:02:07,840 --> 02:02:09,840
.

2705
02:02:09,840 --> 02:02:11,840
.

2706
02:02:11,840 --> 02:02:13,840
.

2707
02:02:13,840 --> 02:02:17,480
.

2708
02:02:17,480 --> 02:02:19,480
.

2709
02:02:19,480 --> 02:02:21,480
.

2710
02:02:21,480 --> 02:02:23,480
.

2711
02:02:23,480 --> 02:02:25,480
.

2712
02:02:25,480 --> 02:02:27,480
.

2713
02:02:27,480 --> 02:02:29,480
.

2714
02:02:29,480 --> 02:02:31,480
.

2715
02:02:31,480 --> 02:02:33,480
.

2716
02:02:33,480 --> 02:02:35,480
.

2717
02:02:35,480 --> 02:02:41,480
.

2718
02:02:41,480 --> 02:02:43,480
.

2719
02:02:43,480 --> 02:02:45,480
.

2720
02:02:45,480 --> 02:02:47,480
.

2721
02:02:47,480 --> 02:02:49,480
.

2722
02:02:49,480 --> 02:02:53,480
.

2723
02:02:53,480 --> 02:02:55,480
.

2724
02:02:55,480 --> 02:02:57,480
.

2725
02:02:57,480 --> 02:02:59,480
.

2726
02:02:59,480 --> 02:03:01,480
.

2727
02:03:01,480 --> 02:03:05,430
.

2728
02:03:05,430 --> 02:03:07,430
.

2729
02:03:07,430 --> 02:03:09,430
.

2730
02:03:09,430 --> 02:03:11,430
.

2731
02:03:11,430 --> 02:03:13,430
.

2732
02:03:13,430 --> 02:03:15,430
.

2733
02:03:15,430 --> 02:03:17,430
.

2734
02:03:17,430 --> 02:03:24,280
.

2735
02:03:24,280 --> 02:03:26,280
.

2736
02:03:26,280 --> 02:03:28,280
.

2737
02:03:28,280 --> 02:03:30,280
.

2738
02:03:30,280 --> 02:03:32,280
.

2739
02:03:32,280 --> 02:03:34,280
.

2740
02:03:34,280 --> 02:03:36,280
.

2741
02:03:36,280 --> 02:03:41,890
.

2742
02:03:41,890 --> 02:03:43,890
.

2743
02:03:43,890 --> 02:03:45,890
.

2744
02:03:45,890 --> 02:03:47,890
.

2745
02:03:47,890 --> 02:03:49,890
.

2746
02:03:49,890 --> 02:03:51,890
.

2747
02:03:51,890 --> 02:03:53,890
.

2748
02:03:53,890 --> 02:03:57,200
.

2749
02:03:57,200 --> 02:04:05,650
.

2750
02:04:05,650 --> 02:04:07,650
.

2751
02:04:07,650 --> 02:04:09,650
.

2752
02:04:09,650 --> 02:04:11,650
.

2753
02:04:11,650 --> 02:04:13,650
.

2754
02:04:13,650 --> 02:04:15,650
.

2755
02:04:15,650 --> 02:04:17,650
.

2756
02:04:17,650 --> 02:04:19,650
.

2757
02:04:19,650 --> 02:04:21,650
.

2758
02:04:21,650 --> 02:04:23,650
.

2759
02:04:23,650 --> 02:04:25,650
.

2760
02:04:25,650 --> 02:04:27,650
.

2761
02:04:27,650 --> 02:04:29,650
.

2762
02:04:29,650 --> 02:04:31,650
.

2763
02:04:31,650 --> 02:04:33,650
.

2764
02:04:33,650 --> 02:04:35,650
.

2765
02:04:35,650 --> 02:04:37,650
.

2766
02:04:37,650 --> 02:04:39,650
.

2767
02:04:39,650 --> 02:04:41,650
.

2768
02:04:41,650 --> 02:04:50,360
.

2769
02:04:50,360 --> 02:04:52,360
.

2770
02:04:52,360 --> 02:04:55,860
.

2771
02:04:55,860 --> 02:04:57,860
.

2772
02:04:57,860 --> 02:05:02,130
.

2773
02:05:02,130 --> 02:05:04,130
.

2774
02:05:04,130 --> 02:05:06,130
.

2775
02:05:06,130 --> 02:05:08,130
.

2776
02:05:08,130 --> 02:05:11,890
.

2777
02:05:11,890 --> 02:05:15,890
.

2778
02:05:15,890 --> 02:05:22,850
.

2779
02:05:22,850 --> 02:05:24,850
.

2780
02:05:24,850 --> 02:05:30,080
.

2781
02:05:30,080 --> 02:05:32,080
.

2782
02:05:32,080 --> 02:05:36,800
.

2783
02:05:36,800 --> 02:05:38,800
.

2784
02:05:38,800 --> 02:05:40,800
.

2785
02:05:40,800 --> 02:05:42,800
.

2786
02:05:42,800 --> 02:05:47,330
.

2787
02:05:47,330 --> 02:05:49,330
.

2788
02:05:49,330 --> 02:05:51,330
.

2789
02:05:51,330 --> 02:05:53,330
.

2790
02:05:53,330 --> 02:05:55,330
.

2791
02:05:55,330 --> 02:05:57,330
.

2792
02:05:57,330 --> 02:05:59,330
.

2793
02:05:59,330 --> 02:06:03,030
.

2794
02:06:03,030 --> 02:06:05,030
.

2795
02:06:05,030 --> 02:06:07,030
.

2796
02:06:07,030 --> 02:06:17,700
.

2797
02:06:17,700 --> 02:06:23,970
.

2798
02:06:23,970 --> 02:06:25,970
.

2799
02:06:25,970 --> 02:06:27,970
.

2800
02:06:27,970 --> 02:06:29,970
.

2801
02:06:29,970 --> 02:06:31,970
.

2802
02:06:31,970 --> 02:06:33,970
.

2803
02:06:33,970 --> 02:06:35,970
.

2804
02:06:35,970 --> 02:06:37,970
.

2805
02:06:37,970 --> 02:06:41,970
.

2806
02:06:41,970 --> 02:06:47,590
.

2807
02:06:47,590 --> 02:06:54,160
.

2808
02:06:54,160 --> 02:06:56,160
.

2809
02:06:56,160 --> 02:06:58,160
.

2810
02:06:58,160 --> 02:07:00,160
.

2811
02:07:00,160 --> 02:07:04,690
.

2812
02:07:04,690 --> 02:07:06,690
.

2813
02:07:06,690 --> 02:07:12,690
.

2814
02:07:12,690 --> 02:07:16,840
.

2815
02:07:16,840 --> 02:07:18,840
.

2816
02:07:18,840 --> 02:07:36,870
.

2817
02:07:36,870 --> 02:07:41,840
.

2818
02:07:41,840 --> 02:07:43,840
.

2819
02:07:43,840 --> 02:07:47,840
.

2820
02:07:47,840 --> 02:07:49,840
.

2821
02:07:49,840 --> 02:07:51,840
.

2822
02:07:51,840 --> 02:07:53,840
.

2823
02:07:53,840 --> 02:07:55,840
.

2824
02:07:55,840 --> 02:08:00,500
.

2825
02:08:00,500 --> 02:08:02,500
.

2826
02:08:02,500 --> 02:08:04,500
.

2827
02:08:04,500 --> 02:08:06,500
.

2828
02:08:06,500 --> 02:08:14,680
.

2829
02:08:14,680 --> 02:08:23,430
.

2830
02:08:23,430 --> 02:08:25,430
.

2831
02:08:25,430 --> 02:08:27,430
.

2832
02:08:27,430 --> 02:08:31,320
.

2833
02:08:31,320 --> 02:08:35,320
.

2834
02:08:35,320 --> 02:08:37,320
.

2835
02:08:37,320 --> 02:08:43,440
.

2836
02:08:43,440 --> 02:08:45,440
.

2837
02:08:45,440 --> 02:08:50,230
.

2838
02:08:50,230 --> 02:08:52,230
.

2839
02:08:52,230 --> 02:08:54,230
.

2840
02:08:54,230 --> 02:08:56,230
.

2841
02:08:56,230 --> 02:08:58,230
.

2842
02:08:58,230 --> 02:09:00,230
.

2843
02:09:00,230 --> 02:09:05,010
.

2844
02:09:05,010 --> 02:09:07,010
.

2845
02:09:07,010 --> 02:09:09,010
.

2846
02:09:09,010 --> 02:09:11,010
.

2847
02:09:11,010 --> 02:09:16,960
.

2848
02:09:16,960 --> 02:09:18,960
.

2849
02:09:18,960 --> 02:09:20,960
.

2850
02:09:20,960 --> 02:09:22,960
.

2851
02:09:22,960 --> 02:09:24,960
.

2852
02:09:24,960 --> 02:09:26,960
.

2853
02:09:26,960 --> 02:09:30,960
.

2854
02:09:30,960 --> 02:09:32,960
.

2855
02:09:32,960 --> 02:09:34,960
.

2856
02:09:34,960 --> 02:09:36,960
.

2857
02:09:36,960 --> 02:09:38,960
.

2858
02:09:38,960 --> 02:09:40,960
.

2859
02:09:40,960 --> 02:09:44,920
.

2860
02:09:44,920 --> 02:09:56,950
.

2861
02:09:56,950 --> 02:09:58,950
.

2862
02:09:58,950 --> 02:10:03,030
.

2863
02:10:03,030 --> 02:10:05,030
.

2864
02:10:05,030 --> 02:10:09,490
.

2865
02:10:09,490 --> 02:10:11,490
.

2866
02:10:11,490 --> 02:10:13,490
.

2867
02:10:13,490 --> 02:10:15,490
.

2868
02:10:15,490 --> 02:10:17,490
.

2869
02:10:17,490 --> 02:10:19,490
.

2870
02:10:19,490 --> 02:10:21,490
.

2871
02:10:21,490 --> 02:10:25,250
.

2872
02:10:25,250 --> 02:10:33,040
.

2873
02:10:33,040 --> 02:10:35,040
.

2874
02:10:35,040 --> 02:10:39,040
.

2875
02:10:39,040 --> 02:10:44,400
.

2876
02:10:44,400 --> 02:10:47,910
.

2877
02:10:47,910 --> 02:10:49,910
.

2878
02:10:49,910 --> 02:10:51,910
.

2879
02:10:51,910 --> 02:10:53,910
.

2880
02:10:53,910 --> 02:10:55,910
.

2881
02:10:55,910 --> 02:11:01,080
.

2882
02:11:01,080 --> 02:11:03,080
.

2883
02:11:03,080 --> 02:11:05,080
.

2884
02:11:05,080 --> 02:11:06,080
.

2885
02:11:06,080 --> 02:11:07,080
.

2886
02:11:07,080 --> 02:11:08,080
.

2887
02:11:08,080 --> 02:11:09,080
.

2888
02:11:09,080 --> 02:11:10,080
.

2889
02:11:10,080 --> 02:11:11,080
.

2890
02:11:11,080 --> 02:11:12,080
.

2891
02:11:12,080 --> 02:11:13,080
.

2892
02:11:13,080 --> 02:11:14,080
.

2893
02:11:14,080 --> 02:11:15,080
.

2894
02:11:15,080 --> 02:11:16,080
.

2895
02:11:16,080 --> 02:11:17,080
.

2896
02:11:17,080 --> 02:11:18,080
.

2897
02:11:18,080 --> 02:11:19,080
.

2898
02:11:19,080 --> 02:11:20,080
.

2899
02:11:20,080 --> 02:11:23,670
.

2900
02:11:23,670 --> 02:11:24,670
.

2901
02:11:24,670 --> 02:11:25,670
.

2902
02:11:25,670 --> 02:11:26,670
.

2903
02:11:26,670 --> 02:11:27,670
.

2904
02:11:27,670 --> 02:11:28,670
.

2905
02:11:28,670 --> 02:11:29,670
.

2906
02:11:29,670 --> 02:11:30,670
.

2907
02:11:30,670 --> 02:11:33,750
.

2908
02:11:33,750 --> 02:11:34,750
.

2909
02:11:34,750 --> 02:11:35,750
.

2910
02:11:35,750 --> 02:11:36,750
.

2911
02:11:36,750 --> 02:11:37,750
.

2912
02:11:37,750 --> 02:11:38,750
.

2913
02:11:38,750 --> 02:11:39,750
.

2914
02:11:39,750 --> 02:11:49,750
ich meine vielleicht geht es ja doch okay es geht doch easy ich habe nichts

2915
02:11:49,750 --> 02:11:53,770
gesagt scheint doch zu funktionieren ja dann da können wir das ja auch wieder

2916
02:11:53,770 --> 02:11:58,770
rückgängig machen ffm per clip so also ich habe jetzt den source code geändert

2917
02:11:58,770 --> 02:12:03,010
von meiner net anwendung von der idee her sollte er dort net nur dort net

2918
02:12:03,010 --> 02:12:21,190
bilden und neues image bauen da stimmt was nicht leute warum ist das warum ist

2919
02:12:21,190 --> 02:12:29,900
das cash ich habe doch eindeutig hier geändert oder habe ich moment habe ich

2920
02:12:29,900 --> 02:12:37,500
vorher einfach nicht gespeichert kann das auch sein moment moment das muss ich

2921
02:12:37,500 --> 02:12:41,400
jetzt mal ausprobieren ich kopiere sie einfach noch ein paar

2922
02:12:41,400 --> 02:12:46,300
mal ja okay ich habe freundlich gespeichert

2923
02:12:46,300 --> 02:12:53,680
alles gut sehr gut gut alles klar also das sollte

2924
02:12:53,680 --> 02:12:59,680
jetzt funktionieren ja von uns und habe gesehen wie viel schneller das jetzt

2925
02:12:59,680 --> 02:13:04,600
bildet das image im vergleich zu vorher und wie viel kleiner das ist können

2926
02:13:04,600 --> 02:13:08,500
wir uns mal gucken was passiert wenn ich in der also wenn ich ihn wenn ich auf

2927
02:13:08,500 --> 02:13:12,040
der dort netz seite was ändere das jetzt relativ easy zu zeigen noch mal bumm

2928
02:13:12,040 --> 02:13:15,940
sagt okay cash weil er hat es schon mal gebildet mit diesen drei zeilen drin

2929
02:13:15,940 --> 02:13:21,640
so gehen wir mal in den rust path gehen wir man den rust path und ändern hier

2930
02:13:21,640 --> 02:13:30,410
irgendwas keine ahnung ihr active connections soll jetzt unbedingt haben

2931
02:13:30,410 --> 02:13:37,190
noch ausrufezeichen habe bild cook cargo run bild jetzt muss er nur den rust path

2932
02:13:37,190 --> 02:13:42,090
neu bilden das dauert natürlich lang weil ras lange braucht zum kombiniert

2933
02:13:42,090 --> 02:14:01,620
irgendjemand hat auch vorhin cargo chef angesprochen

2934
02:14:01,620 --> 02:14:08,070
du du du du Leute ich habe eine Idee

2935
02:14:08,070 --> 02:14:08,130
Leute ich habe eine Idee

2936
02:14:08,150 --> 02:14:11,570
die. Gibt es so was

2937
02:14:11,570 --> 02:14:12,510
wie Cargo

2938
02:14:12,510 --> 02:14:14,730
Pull oder so was?

2939
02:14:15,950 --> 02:14:17,630
Das könnte man tatsächlich noch

2940
02:14:17,630 --> 02:14:19,510
ausbrühen. Weil man könnte

2941
02:14:19,510 --> 02:14:20,690
jetzt ja an der Stelle

2942
02:14:20,690 --> 02:14:22,610
Machen wir das mal wieder weg.

2943
02:14:23,230 --> 02:14:25,610
Was macht ihr? Wir haben einen Multistage

2944
02:14:25,610 --> 02:14:27,270
Docker-File gebaut. Also

2945
02:14:27,270 --> 02:14:29,350
was ich mir überlegt habe ist folgendes. Guckt mal.

2946
02:14:29,790 --> 02:14:31,470
Hier kopiere ich den Source-Code Cargo

2947
02:14:31,470 --> 02:14:33,350
hin und mache ein Bild. Wenn ich so was

2948
02:14:33,350 --> 02:14:35,270
machen könnte, ich weiß nicht, ob es so was gibt,

2949
02:14:35,610 --> 02:14:37,510
ja, dann

2950
02:14:37,510 --> 02:14:38,890
würde ich

2951
02:14:38,890 --> 02:14:40,870
auch beim Ändern an der Go

2952
02:14:40,870 --> 02:14:43,550
äh, was labere ich mit Go? An der Rust

2953
02:14:43,550 --> 02:14:45,490
an einem

2954
02:14:45,490 --> 02:14:46,370
Rust-Source-Code

2955
02:14:46,370 --> 02:14:49,330
wenn sich nichts an den Dependencies

2956
02:14:49,330 --> 02:14:51,250
ändert, wäre das hier

2957
02:14:51,250 --> 02:14:53,330
gecached an der Stelle. Gibt es so was

2958
02:14:53,330 --> 02:14:54,990
wie Docker-Pull oder so was?

2959
02:14:55,330 --> 02:14:57,450
Oder Cargo-Pull, nicht Docker-Pull.

2960
02:14:58,230 --> 02:14:59,070
Cargo-Pull?

2961
02:15:01,050 --> 02:15:02,050
Was soll das tun?

2962
02:15:02,490 --> 02:15:04,290
Alle Dependencies runterladen,

2963
02:15:05,390 --> 02:15:05,550
die

2964
02:15:05,550 --> 02:15:08,530
man braucht, die in der

2965
02:15:08,530 --> 02:15:09,650
Cargo-Tommel stehen.

2966
02:15:10,390 --> 02:15:12,390
Weiß ich, ob es so was gibt.

2967
02:15:12,390 --> 02:15:15,390
Also bei .net heißt es Restore.

2968
02:15:15,390 --> 02:15:17,390
Cargo-Pull? Gibt es so was?

2969
02:15:17,390 --> 02:15:28,700
Was haben wir denn?

2970
02:15:28,700 --> 02:15:30,700
Build. Check.

2971
02:15:30,700 --> 02:15:35,100
Clean. New.

2972
02:15:35,100 --> 02:15:38,420
Init. Add. Remove.

2973
02:15:38,420 --> 02:15:40,420
Run. Bench. Update.

2974
02:15:40,420 --> 02:15:42,420
Bench. Update.

2975
02:15:42,420 --> 02:15:44,420
Ne.

2976
02:15:44,420 --> 02:15:46,420
Ne, gibt es nicht.

2977
02:15:46,420 --> 02:15:48,420
Cargo-Fetch. Ne, so was gibt es anscheinend nicht.

2978
02:15:48,420 --> 02:15:50,420
Oh we...

2979
02:15:50,420 --> 02:15:52,420
Hä? Das steht da nicht drüben.

2980
02:15:52,420 --> 02:16:45,790
da steht aber gar nicht hier dabei windows macht ein cargo patch minus list

2981
02:16:45,790 --> 02:16:48,790
werden alle okay weil das wäre natürlich gut da muss da nicht jedes mal diesen

2982
02:16:48,790 --> 02:17:07,510
ganzen krempel elb es gibt ja nicht alles bild c check clean klippi config

2983
02:17:07,510 --> 02:17:19,680
patch ok das ist schon mal gut install okay was auch immer miri ist

2984
02:17:19,680 --> 02:17:34,810
owner package remove reports ok patch ist glaube ich echt nicht verkehrt dass

2985
02:17:34,810 --> 02:17:40,590
an der stelle das probieren wir jetzt doch klart mal aus cargo patch so dann

2986
02:17:40,590 --> 02:17:46,680
hat er zumindest die dependencies gecached an der stelle das sollte doch

2987
02:17:46,680 --> 02:17:52,690
eigentlich ganz brauchbar sein aber er muss den kram trotzdem

2988
02:17:52,690 --> 02:17:57,570
kompilen ich glaube da ich glaube da kommen wir

2989
02:17:57,570 --> 02:17:58,070
jetzt nicht

2990
02:17:58,070 --> 02:17:58,110
ich glaube da kommen wir jetzt nicht

2991
02:17:58,110 --> 02:17:59,110
drumherum

2992
02:17:59,110 --> 02:18:22,850
fail to pass manifest warum ach so ja okay es funktioniert nicht dass das

2993
02:18:22,850 --> 02:18:25,210
funktioniert so nicht wie ich mir das gedacht habe ich glaube den compile step

2994
02:18:25,210 --> 02:18:29,590
den kann man nicht kann man nicht beschleunigt ich habe mir könnten dass

2995
02:18:29,590 --> 02:18:36,590
wenn wir also bei github actions könnte man den bild output vom letzten mal

2996
02:18:36,590 --> 02:18:41,390
cachen dann irgendwie wieder herstellen so dass er an der stelle dann nicht alles

2997
02:18:41,390 --> 02:18:44,530
hier hin und da da ist er nicht geschrieben ich habe das hier von dem

2998
02:18:44,530 --> 02:18:50,480
wurde ich kann das noch immer ich kann damit leben ja ich kann mir leben es

2999
02:18:50,480 --> 02:18:56,600
okay ich würde sagen passt soweit mission erfüllt ja mein schnelles relativ

3000
02:18:56,600 --> 02:19:09,980
kleines rocker image das ist gut hat funktioniert okay chat ich hoffe ich kotze

3001
02:19:09,980 --> 02:19:14,820
jetzt ein bisschen bei der arbeit noch abgabel im streamontag heim ist weiß ich

3002
02:19:14,820 --> 02:19:18,300
Ich weiß nicht, ob man das als Fortbildung verbuchen kann, wenn man nicht viel mit Docker gemacht hat, bestimmt.

3003
02:19:23,550 --> 02:19:32,050
Das Problem ist, glaube ich, nicht das Base-Image, dass Debian so groß wäre, sondern eben, weil halt die komplette .NET-Runtime drauf ist.

3004
02:19:32,410 --> 02:19:40,630
Sieht man ja auch. Und die .NET-Runtime, die ist halt unter Ubuntu auch nicht kleiner als mit Debian.

3005
02:19:42,490 --> 02:19:44,070
Echt? Ist das so? Ist das kleiner?

3006
02:19:46,350 --> 02:19:48,230
Okay, das probieren wir uns mal kurz aus.

3007
02:19:48,230 --> 02:20:02,530
Also, wir haben aktuell von unserem Image, der App, lassen wir mal außen vor, da werden wir nichts dran machen können.

3008
02:20:02,610 --> 02:20:11,550
Erstmal User. So, in User ist Lib, ist IQ, das Braumer, und Perl, was auch immer.

3009
02:20:12,110 --> 02:20:16,510
Und 100 MB davon sind .NET. Ja, probieren wir das mal aus.

3010
02:20:18,610 --> 02:20:19,090
Okay.

3011
02:20:22,740 --> 02:20:23,580
Also, was brauchen wir?

3012
02:20:23,900 --> 02:20:24,380
Jammy.

3013
02:20:24,660 --> 02:20:25,740
Sch-Schisselt.

3014
02:20:26,640 --> 02:20:27,360
Für ASP.

3015
02:20:27,780 --> 02:20:28,300
ASP.

3016
02:20:33,340 --> 02:20:33,580
So.

3017
02:20:39,860 --> 02:20:40,260
Äh.

3018
02:20:48,720 --> 02:20:51,240
Ja, nix Preview. Die gibt's wahrscheinlich schon komplett.

3019
02:20:52,580 --> 02:20:56,040
Äh, die gibt's... Okay, das... Da bin ich, da bin ich jetzt ja mal gespannt.

3020
02:20:57,480 --> 02:21:01,260
Also, im Prinzip brauchen wir jetzt nur ASP, ne?

3021
02:21:02,980 --> 02:21:03,540
Jammy.

3022
02:21:04,180 --> 02:21:04,740
Schiss.

3023
02:21:05,740 --> 02:21:06,040
Elite.

3024
02:21:07,380 --> 02:21:07,860
Isolet.

3025
02:21:09,160 --> 02:21:09,520
Bild.

3026
02:21:15,140 --> 02:21:16,140
Sehr nice.

3027
02:21:16,140 --> 02:21:17,140
Stalker-Image.

3028
02:21:18,960 --> 02:21:19,280
Ja!

3029
02:21:21,980 --> 02:21:23,360
Damit kann ich leben, oder?

3030
02:21:24,000 --> 02:21:25,660
260 MB.

3031
02:21:28,760 --> 02:21:31,860
Äh, Bash ist da natürlich, ist da SH drauf, irgendwas. Da ist nichts drauf.

3032
02:21:32,160 --> 02:21:34,160
Da ist einfach gar nichts drauf.

3033
02:21:34,620 --> 02:21:36,560
Ach so, funktioniert's noch? Das ist eine gute Frage, ja.

3034
02:21:37,660 --> 02:21:37,860
Ne.

3035
02:21:40,530 --> 02:21:41,010
Ne.

3036
02:21:49,890 --> 02:21:50,370
Ne.

3037
02:21:52,110 --> 02:21:52,870
Funktioniert nicht mehr.

3038
02:21:55,590 --> 02:21:57,090
Ah, ich glaube, ich weiß, warum.

3039
02:21:57,550 --> 02:21:59,110
Ich weiß, warum. Wir müssen es so schreiben.

3040
02:22:00,570 --> 02:22:02,170
Ne, ne, wir müssen es so schreiben, Leute.

3041
02:22:02,350 --> 02:22:03,450
Passt mal auf, ich weiß, woran das liegt.

3042
02:22:03,750 --> 02:22:07,210
Wenn das was... Wenn das... Wenn das jetzt geht, erkläre ich euch, woran das lag.

3043
02:22:12,880 --> 02:22:14,000
Wenn's nicht geht, dann nicht.

3044
02:22:19,620 --> 02:22:20,100
Ja, fuck.

3045
02:22:21,860 --> 02:22:24,780
The application.net does not exist.

3046
02:22:28,330 --> 02:22:28,530
Äh.

3047
02:22:28,870 --> 02:22:31,170
Ist das vielleicht nur für self-contained apps?

3048
02:22:44,860 --> 02:22:46,160
Bin ich denn zu viel geschisselt?

3049
02:22:46,160 --> 02:22:46,640
Hahaha.

3050
02:22:49,900 --> 02:23:10,200
Äh, da brauch ich...

3051
02:23:12,390 --> 02:23:13,810
Ich bräuchte mal ein Example.

3052
02:23:14,690 --> 02:23:16,190
Ein Example-Docker-File.

3053
02:23:17,830 --> 02:23:19,650
Publish.net, nicht auch eine Binary.

3054
02:23:20,450 --> 02:23:24,230
Die ist aber standardmäßig abhängig von der Runtime.

3055
02:23:24,990 --> 02:23:27,470
Und wenn die Runtime nicht da... Also, es ist ja nichts da.

3056
02:23:29,390 --> 02:23:31,430
Dann geht das nicht.

3057
02:23:31,490 --> 02:23:35,230
Die müsste ich als self-contained application raushauen.

3058
02:23:35,230 --> 02:23:36,650
Dann würde es funktionieren.

3059
02:23:38,700 --> 02:23:40,980
Das ist geschisselt im Entry-Point.

3060
02:23:45,450 --> 02:23:46,890
Also quasi so, oder wie?

3061
02:23:47,010 --> 02:23:47,450
Ne, also.

3062
02:23:48,730 --> 02:23:49,790
Ich brauch mal ein Example.

3063
02:23:49,810 --> 02:23:53,670
Ich brauch mal ein Example-Docker-File.

3064
02:23:57,020 --> 02:23:58,800
Gibt's hier irgendwie ein Example-Docker-File?

3065
02:23:59,720 --> 02:23:59,900
Ja.

3066
02:24:00,500 --> 02:24:01,240
Entry-Point.

3067
02:24:01,780 --> 02:24:03,260
Ach, tatsächlich, guck mal.

3068
02:24:04,440 --> 02:24:09,710
Man gibt da wirklich nur...

3069
02:24:09,710 --> 02:24:11,510
Gibt man da vielleicht so wirklich nur...

3070
02:24:12,170 --> 02:24:13,530
Das hinten gar nicht mit an?

3071
02:24:20,520 --> 02:24:22,220
Das braucht man wahrscheinlich gar nicht, ne?

3072
02:24:23,300 --> 02:24:23,620
Geht.

3073
02:24:24,000 --> 02:24:24,360
Nice.

3074
02:24:27,120 --> 02:24:27,360
Aha.

3075
02:24:28,940 --> 02:24:30,760
.net weggeschisselt, anscheinend.

3076
02:24:30,760 --> 02:24:33,640
Gut zu wissen.

3077
02:24:33,760 --> 02:24:34,460
Gut zu wissen.

3078
02:24:34,760 --> 02:24:35,660
Easy, easy.

3079
02:24:38,790 --> 02:24:41,470
Guck mal, und jetzt haben wir nur noch 260 MB.

3080
02:24:41,850 --> 02:24:43,490
Und jetzt abschließend mal den Test.

3081
02:24:43,930 --> 02:24:46,710
Wie lange würde so ein komplettes Bild jetzt brauchen?

3082
02:24:47,130 --> 02:24:48,490
Wahrscheinlich so eineinhalb Minuten.

3083
02:24:51,900 --> 02:24:52,460
So, Bild.

3084
02:24:52,840 --> 02:24:55,580
Weil ich hab jetzt alle meine Caches und sonst wie weggeschmissen.

3085
02:24:57,200 --> 02:24:58,320
Okay, also.

3086
02:24:58,640 --> 02:25:00,820
Gucken wir mal drauf, wie lange so ein komplettes Bild jetzt braucht.

3087
02:25:03,070 --> 02:25:05,190
Jetzt wird richtig drauf losgeschisselt, ey.

3088
02:25:06,770 --> 02:25:08,690
Das heißt, glaube ich, schmeißeln, gell?

3089
02:25:09,490 --> 02:25:10,830
Auf Deutsch.

3090
02:25:12,810 --> 02:25:13,750
Schisseln oder so.

3091
02:25:14,070 --> 02:25:15,090
Ich glaube, es heißt meißeln.

3092
02:25:21,350 --> 02:25:22,350
Da haben die...

3093
02:25:22,350 --> 02:25:25,130
Ja, ist das ein Image von Microsoft?

3094
02:25:25,450 --> 02:25:30,190
Oder ist das ein Image, was die Canonical-Leute schisseln?

3095
02:25:36,460 --> 02:25:37,280
Vielleicht finden wir nochmal.

3096
02:25:37,400 --> 02:25:37,940
Ich hab noch eine Idee.

3097
02:25:38,580 --> 02:25:40,120
Docker-File-Rust.

3098
02:25:41,100 --> 02:25:42,100
Vielleicht gibt's da noch...

3099
02:25:42,100 --> 02:25:44,180
Bald neu der Schissel-Champ.

3100
02:25:46,600 --> 02:25:48,780
Vielleicht gibt's ja da ein Exempel für...

3101
02:25:48,780 --> 02:25:57,470
Äh.

3102
02:25:57,510 --> 02:26:12,990
Nee, ich überlege gerade, ob es nicht vielleicht was gibt,

3103
02:26:13,110 --> 02:26:16,010
dass man irgendwie diesen Cargo-Bild...

3104
02:26:16,010 --> 02:26:18,510
Äh, dieses Cargo-Library-Gedöns...

3105
02:26:20,780 --> 02:26:21,760
Cachen könnte.

3106
02:26:23,280 --> 02:26:26,300
Habt ihr auch ein bisschen gemeißelt heute an euren Containern?

3107
02:26:26,540 --> 02:26:26,800
Sehr nice.

3108
02:26:33,320 --> 02:26:34,480
Cache Rust-Dependent.

3109
02:26:44,880 --> 02:26:48,100
You need a dummy AS and your Cargo-Yammel first.

3110
02:26:48,580 --> 02:26:51,520
Then build it to cache the dependencies and then copy your...

3111
02:26:51,520 --> 02:26:53,240
Ach so!

3112
02:26:55,920 --> 02:26:58,240
Hi-I-Q.

3113
02:27:05,920 --> 02:27:06,460
Hi...

3114
02:27:06,460 --> 02:27:07,320
Ach, guck mal.

3115
02:27:08,100 --> 02:27:10,200
Die legen so eine Fake-Lib-AS an.

3116
02:27:10,640 --> 02:27:15,120
Und danach in einem Build-Step die richtige.

3117
02:27:17,540 --> 02:27:19,520
Okay, das Bild, das probiere ich jetzt noch aus.

3118
02:27:19,860 --> 02:27:21,200
Jetzt wird Rust geschisselt, Leute.

3119
02:27:21,820 --> 02:27:23,600
Okay, Image hat gebildet jetzt...

3120
02:27:23,600 --> 02:27:23,920
Wie lang?

3121
02:27:24,180 --> 02:27:25,200
280 Sekunden.

3122
02:27:25,440 --> 02:27:25,840
Alles klar.

3123
02:27:26,340 --> 02:27:26,680
Pass auf.

3124
02:27:27,020 --> 02:27:28,680
Wir schisseln jetzt das Rust.

3125
02:27:29,420 --> 02:27:29,640
So.

3126
02:27:30,140 --> 02:27:30,760
Also, so.

3127
02:27:31,080 --> 02:27:31,560
Cargo.

3128
02:27:32,700 --> 02:27:33,560
So, an der Stelle.

3129
02:27:33,560 --> 02:27:35,560
Wenn man jetzt hier sagt Cargo-Bild...

3130
02:27:36,040 --> 02:27:39,560
Dann meckert er garantiert, weil...

3131
02:27:42,000 --> 02:27:42,200
Keine...

3132
02:27:43,620 --> 02:27:44,200
Äh...

3133
02:27:44,720 --> 02:27:45,860
Lib-AS da ist.

3134
02:27:46,280 --> 02:27:47,200
So, wenn ich jetzt sage run...

3135
02:27:48,320 --> 02:27:49,200
Touch...

3136
02:27:50,020 --> 02:27:50,200
Lib...

3137
02:27:50,940 --> 02:27:51,760
Ne, Moment, was?

3138
02:27:51,940 --> 02:27:52,200
Source...

3139
02:27:52,840 --> 02:27:56,980
Lib-AS...

3140
02:27:56,980 --> 02:27:57,680
Geht das jetzt?

3141
02:28:00,190 --> 02:28:01,670
No, such file or directory.

3142
02:28:04,670 --> 02:28:05,230
Äh...

3143
02:28:05,230 --> 02:28:07,850
Moment, kann das sein, dass es Touch einfach nicht gibt?

3144
02:28:09,230 --> 02:28:09,850
Das ist zu...

3145
02:28:10,610 --> 02:28:10,850
Hyper...

3146
02:28:11,670 --> 02:28:12,170
Touchy?

3147
02:28:13,170 --> 02:28:13,670
Ne.

3148
02:28:15,450 --> 02:28:15,950
What?

3149
02:28:18,290 --> 02:28:18,790
Jetzt.

3150
02:28:26,280 --> 02:28:28,780
Ist es nicht irgendein Base-Tool, was immer dabei ist?

3151
02:28:35,710 --> 02:28:36,810
Ach, der Source-Ordner wird...

3152
02:28:36,810 --> 02:28:37,610
Okay, okay.

3153
02:28:37,910 --> 02:28:38,830
MKDir...

3154
02:28:39,830 --> 02:28:40,330
Source.

3155
02:28:44,800 --> 02:28:45,560
Äh...

3156
02:28:46,620 --> 02:28:48,620
Ich dachte eigentlich, dass Touch Bash Build-In ist.

3157
02:28:50,460 --> 02:28:52,120
Okay, ne, passt, passt, passt, passt.

3158
02:28:53,760 --> 02:28:55,120
Ich glaub, Leute, das Funst...

3159
02:28:57,940 --> 02:28:58,440
Ist...

3160
02:28:58,740 --> 02:29:00,140
Better Twitch TV Schissel...

3161
02:29:00,140 --> 02:29:02,580
Ja, so oft werden wir das nicht brauchen, vermute ich.

3162
02:29:04,830 --> 02:29:06,950
Aber, Leute, ich glaub, das Funst, was ich hier vorhab.

3163
02:29:11,130 --> 02:29:12,710
Ich glaub, das Funst...

3164
02:29:12,710 --> 02:29:13,070
Guck mal.

3165
02:29:13,630 --> 02:29:17,430
Der hat jetzt die Datei angelegt, die leere Lib-Datei.

3166
02:29:18,250 --> 02:29:19,250
Jetzt kompiliert er.

3167
02:29:20,030 --> 02:29:26,130
Und jetzt, für den nächsten Step, sollten die Dependencies eigentlich gecached sein.

3168
02:29:28,980 --> 02:29:30,720
Ja, ich glaub, das Funst, Leute.

3169
02:29:30,920 --> 02:29:31,960
Ich glaub, ich glaub, das Funst.

3170
02:29:36,070 --> 02:29:36,870
Cargo-Bild...

3171
02:29:36,870 --> 02:29:41,670
So, probieren wir jetzt aus.

3172
02:29:42,270 --> 02:29:44,270
Wir ändern jetzt...

3173
02:29:44,270 --> 02:29:45,270
Also, eben hat's ja noch lange gedauert.

3174
02:29:45,270 --> 02:29:47,270
So, wir machen jetzt einfach hier doppelten Output.

3175
02:29:47,270 --> 02:29:48,270
So, ist ja eh egal.

3176
02:29:51,280 --> 02:29:52,680
Seven TV Emotes...

3177
02:29:56,150 --> 02:29:56,650
Rust.

3178
02:29:59,790 --> 02:30:00,990
Das ist ein gutes Emote.

3179
02:30:08,790 --> 02:30:11,130
Das find ich gut, das mach ich mal.

3180
02:30:16,730 --> 02:30:17,490
Use Emote.

3181
02:30:22,110 --> 02:30:23,250
Ich mein, das bezieht sich ja...

3182
02:30:23,570 --> 02:30:25,370
Das bezieht sich ja auf das Game, ja?

3183
02:30:25,370 --> 02:30:26,870
Aber es passt in dem Fall ja auch.

3184
02:30:26,870 --> 02:30:28,870
So, schau mal mal, wie schnell...

3185
02:30:28,870 --> 02:30:29,710
So, schau mal mal, wie schnell...

3186
02:30:29,710 --> 02:30:30,590
Wie schnell das jetzt geht.

3187
02:30:33,300 --> 02:30:33,740
Nice!

3188
02:30:33,960 --> 02:30:34,600
Es funktioniert!

3189
02:30:34,780 --> 02:30:35,040
Guck mal!

3190
02:30:35,340 --> 02:30:36,780
Die Dependencies sind gecached.

3191
02:30:37,060 --> 02:30:37,300
Jetzt.

3192
02:30:38,020 --> 02:30:39,660
Das ist richtig high IQ gewesen.

3193
02:30:40,000 --> 02:30:41,640
Guck mal, wie viel schneller das jetzt fertig ist.

3194
02:30:42,280 --> 02:30:42,800
Es funktioniert!

3195
02:30:43,600 --> 02:30:44,500
Okay, das ist nice.

3196
02:30:45,140 --> 02:30:45,520
Guck mal.

3197
02:30:46,060 --> 02:30:48,040
Dadurch, dass der hier eine leere Lib...

3198
02:30:48,040 --> 02:30:51,780
Also, hier holt er sich die neuesten Cargo...

3199
02:30:51,780 --> 02:30:53,960
Das neueste Cargo-Dependency-File.

3200
02:30:54,560 --> 02:30:58,560
Dann legt er eine Fake-Lib-RS an, sodass Cargo-Bild funktioniert.

3201
02:30:59,040 --> 02:31:00,560
Ab der Stelle ist es gecached.

3202
02:31:00,560 --> 02:31:04,560
Bis zu dem Zeitpunkt, wo sich an meinen Dependencies was ändert.

3203
02:31:04,560 --> 02:31:06,560
Und da ändert sich ja selten was dran.

3204
02:31:06,560 --> 02:31:11,560
Und nur dann, wenn sich die Dependencies ändern, dann bildet er Dependency und Anwendung neu.

3205
02:31:11,560 --> 02:31:13,560
Sonst bildet er nur die Anwendung neu.

3206
02:31:13,560 --> 02:31:15,560
Eigentlich sehr nice, oder?

3207
02:31:15,560 --> 02:31:17,560
Excellent!

3208
02:31:17,560 --> 02:31:24,720
Die Standard.net Docker-File-Templates machen das by the way auch.

3209
02:31:24,720 --> 02:31:26,720
Was? Die schisseln?

3210
02:31:26,720 --> 02:31:30,720
Ne, was machen die?

3211
02:31:30,720 --> 02:31:45,810
Ich committe das mal.

3212
02:31:45,810 --> 02:31:46,810
Ja.

3213
02:31:46,810 --> 02:31:47,810
Packweight.

3214
02:31:47,810 --> 02:31:52,850
Hier ist das Docker-File drin.

3215
02:31:52,850 --> 02:31:56,290
Der Urlaub wird ausgenutzt, ja.

3216
02:31:56,290 --> 02:31:58,290
Erst Restore, dann Source kopieren.

3217
02:31:58,290 --> 02:31:59,290
Ach das!

3218
02:31:59,290 --> 02:32:00,290
Ja.

3219
02:32:00,290 --> 02:32:04,290
Deswegen bin ich drauf gekommen mit dem Restore, weil ich bilde mir ein, weil ich das da mal gesehen hab.

3220
02:32:04,290 --> 02:32:06,290
Deswegen wollte ich gucken, ob Cargo auch sowas hat.

3221
02:32:06,290 --> 02:32:08,290
Aber muss ein bisschen tricksen.

3222
02:32:08,290 --> 02:32:09,290
Aber ist schon okay.

3223
02:32:09,290 --> 02:32:11,290
Geht eigentlich ziemlich gut.

3224
02:32:11,290 --> 02:32:13,290
Ähm...

3225
02:32:14,290 --> 02:32:15,290
Okay.

3226
02:32:16,290 --> 02:32:19,290
Ja, das ist noch die Sachen vom letzten Mal.

3227
02:32:20,290 --> 02:32:22,290
Die pushe ich jetzt einfach...

3228
02:32:23,290 --> 02:32:25,290
...mal ins...

3229
02:32:25,290 --> 02:32:27,290
...ins ChemChamp-Shit.

3230
02:32:29,600 --> 02:32:32,600
Git push origin master.

3231
02:32:32,600 --> 02:32:33,600
Bam.

3232
02:32:34,600 --> 02:32:36,600
Schau mal, was der ChemChamp macht auf GitHub.

3233
02:32:37,600 --> 02:32:39,600
Der hat jetzt ein Comet.

3234
02:32:40,600 --> 02:32:44,600
Und er hat mit Abstand die allerbesten Comet-Messages.

3235
02:32:45,600 --> 02:32:53,930
Das gefällt mir.

3236
02:32:53,930 --> 02:32:54,930
Nice.

3237
02:32:55,930 --> 02:32:57,930
Excellent, würde ich dazu sagen.

3238
02:32:57,930 --> 02:32:58,930
Excellent.

3239
02:32:58,930 --> 02:33:00,930
Guck mal, die machen hier super kompliziertes Zeug.

3240
02:33:00,930 --> 02:33:01,930
Das...

3241
02:33:01,930 --> 02:33:08,760
...müssen wir gar nicht machen.

3242
02:33:09,760 --> 02:33:10,760
Excellent.

3243
02:33:10,760 --> 02:33:13,520
Okay.

3244
02:33:14,520 --> 02:33:19,540
Ich würde sagen, wir waren heute highly effective.

3245
02:33:21,540 --> 02:33:22,540
Nee, effective ist das Fall.

3246
02:33:22,540 --> 02:33:23,540
Und highly...

3247
02:33:24,540 --> 02:33:26,540
...productive, nicht effective.

3248
02:33:27,540 --> 02:33:30,540
Image unter 200 MB.

3249
02:33:31,540 --> 02:33:33,540
Da muss so ein bisschen was weggeschisselt werden.

3250
02:33:33,540 --> 02:33:35,540
Also unter 200 MB ist enorm schwierig.

3251
02:33:35,540 --> 02:33:39,540
Wenn FFmpeg schon 140 MB groß ist.

3252
02:33:40,540 --> 02:33:43,540
Und dementsprechend das OS...

3253
02:33:44,540 --> 02:33:46,540
Ich glaube nicht, dass das funzt, ey.

3254
02:33:47,540 --> 02:33:52,300
Könnte man das Programm auch als Dienst programmieren?

3255
02:33:53,300 --> 02:33:54,300
Wie jetzt?

3256
02:33:54,300 --> 02:33:56,300
Du meinst Windows-Service oder was?

3257
02:33:57,300 --> 02:33:58,300
Ja, bestimmt.

3258
02:33:59,300 --> 02:34:00,300
Bestimmt.

3259
02:34:00,300 --> 02:34:02,300
Damit will ich mich nicht beschäftigen.

3260
02:34:03,300 --> 02:34:04,300
Also wir müssen...

3261
02:34:04,300 --> 02:34:06,300
Okay, wir könnten FFmpeg selbst programmieren.

3262
02:34:06,300 --> 02:34:08,300
Wir könnten FFmpeg selbst kompilieren.

3263
02:34:08,300 --> 02:34:10,300
Und wirklich nur das einbauen, was wir bräuchten.

3264
02:34:10,300 --> 02:34:11,300
Das wäre eine Möglichkeit.

3265
02:34:11,300 --> 02:34:12,300
Ey, Leute.

3266
02:34:12,300 --> 02:34:13,300
Das machen wir.

3267
02:34:13,300 --> 02:34:14,300
Leute, das machen wir.

3268
02:34:19,110 --> 02:34:20,110
Das machen wir.

3269
02:34:20,110 --> 02:34:21,110
Nicht jetzt.

3270
02:34:21,110 --> 02:34:22,110
Nicht jetzt.

3271
02:34:22,110 --> 02:34:23,110
Das machen wir.

3272
02:34:23,110 --> 02:34:26,110
Da habe ich schon lange Bock drauf, mal FFmpeg selbst zu bauen.

3273
02:34:26,110 --> 02:34:28,110
Mit genau den Options, die man braucht.

3274
02:34:28,110 --> 02:34:29,110
Weil wir brauchen nicht viel.

3275
02:34:29,110 --> 02:34:31,110
Wir brauchen RTSP-Support.

3276
02:34:31,110 --> 02:34:32,110
H264.

3277
02:34:32,110 --> 02:34:34,110
Nee, noch nicht mal H264-Support.

3278
02:34:34,110 --> 02:34:36,110
Wir decoden ja nix.

3279
02:34:36,110 --> 02:34:38,110
Wir brauchen eigentlich nur FFmpeg.

3280
02:34:38,110 --> 02:34:39,110
Nur mit RTSP-Support.

3281
02:34:39,110 --> 02:34:43,550
Da wird FFmpeg eine ganze Ecke kleiner.

3282
02:34:43,550 --> 02:34:44,550
Wir brauchen keine Filter.

3283
02:34:44,550 --> 02:34:46,550
Wir brauchen nix.

3284
02:34:46,550 --> 02:34:47,550
Netzwerk.

3285
02:34:47,550 --> 02:34:48,550
Wir brauchen Netzwerk.

3286
02:34:48,550 --> 02:34:49,550
RTSP-Support.

3287
02:34:49,550 --> 02:34:50,550
Das machen wir mal.

3288
02:34:50,550 --> 02:34:51,550
Ja, ja.

3289
02:34:51,550 --> 02:34:57,360
Und dann können wir...

3290
02:34:57,360 --> 02:34:58,360
Das ist...

3291
02:34:58,360 --> 02:34:59,360
Okay, Leute.

3292
02:34:59,360 --> 02:35:00,360
Unsere Mission wird sein.

3293
02:35:00,360 --> 02:35:02,360
Für den nächsten Stream.

3294
02:35:02,360 --> 02:35:04,360
Image...

3295
02:35:04,360 --> 02:35:06,360
Image kleiner...

3296
02:35:06,360 --> 02:35:07,360
Kleiner...

3297
02:35:07,360 --> 02:35:09,360
200 MB.

3298
02:35:10,360 --> 02:35:11,360
Das machen wir im nächsten Stream.

3299
02:35:11,360 --> 02:35:13,360
Image kleiner 200 MB.

3300
02:35:13,360 --> 02:35:17,860
Es kann sein, dass wir OpenSSL brauchen für RTSP.

3301
02:35:17,860 --> 02:35:19,860
Das ist möglich.

3302
02:35:19,860 --> 02:35:21,860
Was macht FFmpeg?

3303
02:35:21,860 --> 02:35:24,860
FFmpeg verbindet sich hier zu Webcams.

3304
02:35:24,860 --> 02:35:25,860
Also ich kann es ja mal starten.

3305
02:35:25,860 --> 02:35:26,860
Dann siehst du es.

3306
02:35:26,860 --> 02:35:29,860
Also Webcam ist jetzt ein bisschen das falsche Wort.

3307
02:35:29,860 --> 02:35:32,860
Webcam ist stellvertretend von einem lokalen RTSP-Server.

3308
02:35:32,860 --> 02:35:41,230
Aber im Prinzip Webcam...

3309
02:35:41,230 --> 02:35:43,230
Oh shit.

3310
02:35:43,230 --> 02:35:44,230
Jetzt habe ich irgendwas kaputt gemacht.

3311
02:35:44,230 --> 02:35:45,230
Warum?

3312
02:35:45,230 --> 02:35:48,050
Warum?

3313
02:35:48,050 --> 02:35:50,620
Da ist es doch.

3314
02:35:50,620 --> 02:35:54,320
Ach ich kack knub.

3315
02:35:54,320 --> 02:35:55,320
Wie jetzt?

3316
02:35:55,320 --> 02:36:01,090
Na ja.

3317
02:36:01,090 --> 02:36:02,090
Angular.

3318
02:36:02,090 --> 02:36:03,090
MonkaS.

3319
02:36:03,090 --> 02:36:04,090
No.

3320
02:36:04,090 --> 02:36:07,090
I'm no Angular...

3321
02:36:07,090 --> 02:36:09,090
Expert.

3322
02:36:09,090 --> 02:36:11,090
No Frontend Expert.

3323
02:36:11,090 --> 02:36:17,200
And especially no Angular Expert.

3324
02:36:17,200 --> 02:36:18,200
Okay.

3325
02:36:18,200 --> 02:36:19,200
Mv...

3326
02:36:19,200 --> 02:36:20,200
FFmpeg.

3327
02:36:20,200 --> 02:36:21,200
Zu FFmpeg.

3328
02:36:21,200 --> 02:36:24,200
So, jetzt sollte es eigentlich funktionieren.

3329
02:36:24,200 --> 02:36:25,200
Ja.

3330
02:36:25,200 --> 02:36:26,200
Funst.

3331
02:36:26,200 --> 02:36:27,200
Also was das macht ist folgendes.

3332
02:36:27,200 --> 02:36:28,200
Das verbindet sich zum...

3333
02:36:28,200 --> 02:36:29,200
Ach so.

3334
02:36:29,200 --> 02:36:30,200
Jetzt habe ich den Kram hier noch auskommentiert.

3335
02:36:30,200 --> 02:36:31,200
Kann ich ja gar nicht zeigen.

3336
02:36:31,200 --> 02:36:33,200
So, es verbindet sich lokal zu einer Webcam.

3337
02:36:33,200 --> 02:36:39,200
Und dann streamt es den Webcam-Output in den Browser.

3338
02:36:39,200 --> 02:36:42,700
Und der Trick dabei ist, wenn es denn jetzt funktioniert, wenn ich es nicht irgendwie

3339
02:36:42,700 --> 02:36:44,200
kaputt gemacht habe, habe ich nicht...

3340
02:36:44,200 --> 02:36:48,200
Also stellvertretend für Webcam-Output gibt es halt ein YouTube-Video von mir.

3341
02:36:48,200 --> 02:36:49,200
So.

3342
02:36:49,200 --> 02:36:51,200
Und ohne zu re-encoden.

3343
02:36:51,200 --> 02:36:52,200
Das ist halt das Ding.

3344
02:36:52,200 --> 02:36:54,200
Also, der nimmt einfach...

3345
02:36:54,200 --> 02:36:56,200
Der connectet sich per RTSP.

3346
02:36:56,200 --> 02:36:59,200
FFmpeg RTSP connectet er sich zum...

3347
02:36:59,200 --> 02:37:00,200
Zur Webcam.

3348
02:37:00,200 --> 02:37:05,200
Liest die einzelnen Frames oder ja, Packages aus.

3349
02:37:05,200 --> 02:37:07,200
Aus diesem H.264 encodeten Stream.

3350
02:37:07,200 --> 02:37:11,200
Und schickst die 1 zu 1 weiter per WebRTC in den Browser.

3351
02:37:11,200 --> 02:37:13,200
Und der Browser decodet dann.

3352
02:37:13,200 --> 02:37:14,200
Also das heißt, es ist...

3353
02:37:14,200 --> 02:37:17,200
Braucht nahezu keine CPU-Last auf Server-Seite.

3354
02:37:17,200 --> 02:37:19,200
Bloß ein bisschen zum decoden im Browser.

3355
02:37:19,200 --> 02:37:23,200
Und wie performant ist das jetzt im Vergleich zu Go?

3356
02:37:23,200 --> 02:37:28,200
Ich habe keine Ahnung, ob es in der Praxis überhaupt einen nennenswerten Unterschied macht.

3357
02:37:28,200 --> 02:37:30,200
Höchstwahrscheinlich nicht.

3358
02:37:30,200 --> 02:37:32,200
Höchstwahrscheinlich nicht.

3359
02:37:32,200 --> 02:37:33,200
Weil...

3360
02:37:33,200 --> 02:37:37,200
Der große Unterschied zwischen Rust und Go in dem Fall ist.

3361
02:37:37,200 --> 02:37:40,200
Also wo es wirklich richtig krass Performance gut machen könnte.

3362
02:37:40,200 --> 02:37:46,200
Ist an der Stelle, wo man oft callen muss nach Go von .NET aus.

3363
02:37:46,200 --> 02:37:48,200
Und so oft call ich nicht.

3364
02:37:48,200 --> 02:37:50,200
Ich meine, es sieht zwar hier viel aus.

3365
02:37:50,200 --> 02:37:51,200
Ihr seht es hier durchrattern.

3366
02:37:51,200 --> 02:37:55,200
Aber das sind halt auch nur alle 16 Millisekunden.

3367
02:37:55,200 --> 02:37:58,200
Alle 16 Millisekunden ist halt gar nichts.

3368
02:37:58,200 --> 02:38:04,960
Im Browser kann man das nicht siegen.

3369
02:38:04,960 --> 02:38:05,960
Korrekt.

3370
02:38:05,960 --> 02:38:07,960
Das geht um Live-Webcams.

3371
02:38:07,960 --> 02:38:09,960
Du kannst nicht siegen.

3372
02:38:10,960 --> 02:38:12,960
Wieso nicht Rust-Cam?

3373
02:38:12,960 --> 02:38:13,960
Weil CamChamp...

3374
02:38:13,960 --> 02:38:15,960
Weil meine Dinger immer Champ heißen.

3375
02:38:15,960 --> 02:38:18,960
Außerdem ist es nichts, was ich will, dass irgendjemand verwendet.

3376
02:38:18,960 --> 02:38:20,960
Sondern das ist gebastelt für mich.

3377
02:38:20,960 --> 02:38:26,980
Und ich werde es wahrscheinlich bei mir benutzen.

3378
02:38:26,980 --> 02:38:28,980
So, wo wir gerade dabei sind.

3379
02:38:28,980 --> 02:38:29,980
Lass mal gucken.

3380
02:38:29,980 --> 02:38:31,980
Ich glaube, der 4er-Champ hat immer noch keine Bugs.

3381
02:38:31,980 --> 02:38:32,980
Nee.

3382
02:38:32,980 --> 02:38:33,980
Obviously keine neuen Bugs.

3383
02:38:34,980 --> 02:38:36,980
Ist ja auch komplett bugfrei.

3384
02:38:36,980 --> 02:38:39,980
Der 4M-Champ hat natürlich auch keine neuen Bugs.

3385
02:38:39,980 --> 02:38:40,980
Okay.

3386
02:38:40,980 --> 02:38:41,980
Alles klar.

3387
02:38:41,980 --> 02:38:44,980
Weil Bugs produzieren wir hier ja nicht.

3388
02:38:44,980 --> 02:38:48,980
Bei uns ist alles immer first try.

3389
02:38:48,980 --> 02:38:52,980
5Head-Community-ge-fehlerfrei.

3390
02:38:52,980 --> 02:38:58,570
So, Chat.

3391
02:38:58,570 --> 02:39:00,570
Sehr schön.

3392
02:39:00,570 --> 02:39:02,570
Das hat heute wunderbar funktioniert.

3393
02:39:02,570 --> 02:39:03,570
Nächster Stream.

3394
02:39:03,570 --> 02:39:05,570
Ahead of Time Compilation.

3395
02:39:05,570 --> 02:39:06,570
FFmpeg selbst kompilieren.

3396
02:39:06,570 --> 02:39:09,570
Und gucken, dass wir das Image unter 200 MB kriegen.

3397
02:39:09,570 --> 02:39:11,570
Also mit AOT sollte es easy funktionieren.

3398
02:39:11,570 --> 02:39:13,570
Weil dann ist auch .NET kleiner.

3399
02:39:13,570 --> 02:39:15,570
Und FFmpeg, wenn das geht.

3400
02:39:15,570 --> 02:39:16,570
Also, nee.

3401
02:39:16,570 --> 02:39:18,570
AOT sollte easy funktionieren.

3402
02:39:18,570 --> 02:39:21,570
Da ist auch die ganze .NET-Anwendung kleiner.

3403
02:39:21,570 --> 02:39:24,570
Wir bräuchten theoretisch auch gar kein .NET-Image mehr.

3404
02:39:24,570 --> 02:39:28,570
Und FFmpeg, wenn das geht, kommen wir easy unter 200 MB.

3405
02:39:28,570 --> 02:39:31,570
Wenn das Custom sich kompiliert.

3406
02:39:31,570 --> 02:39:33,570
Was jetzt gemacht wird Offstream.

3407
02:39:33,570 --> 02:39:35,570
Ich bin heute noch nicht mal eine Runde gelaufen.

3408
02:39:35,570 --> 02:39:36,570
Das werde ich jetzt machen.

3409
02:39:36,570 --> 02:39:43,660
Vielleicht so in dem Dreh, ja.

3410
02:39:43,660 --> 02:39:45,660
Wobei man halt sagen muss.

3411
02:39:45,660 --> 02:39:49,660
Teile von der .NET Runtime müssen ja trotzdem rein.

3412
02:39:49,660 --> 02:39:52,660
Beziehungsweise nicht von der Runtime.

3413
02:39:52,660 --> 02:39:55,660
Aber von der Standard-Library trotzdem rein.

3414
02:39:55,660 --> 02:40:01,340
Weil sonst läuft das Zeug ja nicht.

3415
02:40:01,340 --> 02:40:02,340
Also, wir sehen uns, Leute.

3416
02:40:02,340 --> 02:40:03,340
Bis dann, macht's gut.

3417
02:40:03,340 --> 02:40:04,340
Ich hoffe, euch hat das Stream gefallen.

3418
02:40:04,340 --> 02:40:05,340
Wenn euch das Stream gefallen hat.

3419
02:40:05,340 --> 02:40:07,340
Dann könnt ihr mir jetzt followen.

3420
02:40:07,340 --> 02:40:10,340
Dass ihr beim nächsten Broadcast-Stream.

3421
02:40:10,340 --> 02:40:12,340
Oder bei was auch immer wir machen.

3422
02:40:12,340 --> 02:40:13,340
Wieder mit am Start seid.

3423
02:40:13,340 --> 02:40:14,340
Würde mich freuen.

3424
02:40:14,340 --> 02:40:16,340
Und schön, dass ihr da gewesen seid.

3425
02:40:16,340 --> 02:40:17,340
Wir sehen uns im nächsten Stream.

3426
02:40:17,340 --> 02:40:18,340
Bis dann.

3427
02:40:18,340 --> 02:40:20,720
Macht's gut.

3428
02:40:20,720 --> 02:40:21,720
See you.

3429
02:40:21,720 --> 02:40:22,720
Die ersten.

3430
02:40:22,720 --> 02:40:23,720
So, so muss das sein.

3431
02:40:23,720 --> 02:40:24,720
Bis dann.

3432
02:40:24,720 --> 02:40:25,720
Macht's gut.

3433
02:40:25,720 --> 02:40:26,720
See you.
