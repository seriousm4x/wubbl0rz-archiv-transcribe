so leute da sind wir mal wieder da sind wir mal wieder hier heute machen wir wieder ein
progress stream das auch schon ewig her mal gucken ob twitch heute funktioniert im vergleich
zu sonst weiß ja nie wieder kaputt aber es sieht eigentlich ganz gut aus heute ich fertig bin
hoste ich visual studio wir haben ja mittlerweile einen eigenen twitch channel ja ja ja man sonst
noch für musik zu bieten updaten mal den titel geupdatet big brain titel am start ich glaube
die musik ist mir zu gechillt jetzt overchillt ist die musik energetic brauchen wir garantiert
nicht relaxing study music
die ist nicht relaxing nervig no sleep chill mix das auch nicht was braucht hardware hat dieses
mal ja also ich zeige euch mal das bild was er mir geschickt hat dann gucken wir mal ob
jeder daraus schlau werden moment aber da muss ich kann man kurz auf twitter einloggen auf der
anderen seite ich zeige euch mal das bild was er geschickt hat copy image mal gucken ob das
funktioniert gucken ob das funktioniert
ok ich muss das jetzt in paint copy past oder so ja da ist es also ich hab dieses tolle alle die
musik die ist mit dem ist mir zu gechillt ich brauche irgendwas ich brauche irgendwas was nicht
nervt und was mich nicht zum einschlafen bringt ich brauche es inzwischen dingen dass mir zu
concentration concentration ist gut
ja
Okay, ja so flippe ich auch immer aus, wenn ich Musik höre.
Das ist auch nervig, irgendwie keine gescheite Musik am Start zu programmieren.
Focus-Music, das hatten wir letztens erst, Chill-Out-Mix, ja das geht auch halbwegs.
Nicht ganz so zum Einschlafen wie der Rest.
Lautstärke anpassen, gut.
So, neues Fenster, weil wir müssen wahrscheinlich wieder ein bisschen googlern, wie das ganze funktioniert.
So Leute, also ich zeige euch jetzt mal das Bild von dem, was wir machen sollen.
Genau, ich programmier heute einen Keylogger, dass ich alles mitkriege.
Werde heute auch schon auf Twitter gefragt, ob es nicht einen Shop gäbe, der ohne Cookies funktioniert.
Ganz einfach, einfach Keylogger auf allen Rechnern installieren, der Leute die kaufen wollen, dann weiß man auch was die kaufen wollen.
Also ich zeige euch jetzt mal, was wir machen.
Ich weiß nicht, wie das wirklich so aussieht.
Äh, TheAndy abonniert schon zwei Monate aktuell im ersten fortlaufenden Monat, was auch immer mir das sagen soll.
Aber das sagt mir auf jeden Fall BigBrain für den Chat wieder.
So, ich zeige euch jetzt mal, Fritek, Twitch Prime, geht noch weiter hier.
Massive Huge Brain, jetzt ist es ein bisschen laut, ne?
Okay, also ich zeige euch jetzt mal das Bild von dem, was wir machen sollen.
Und zwar, ähm, je nachdem, ihr müsst mir mal erklären, ob ihr daraus schlau werdet.
Also ich habe es nicht am Anfang so gecheckt, muss ich jetzt sagen.
Also, folgendes hat er gerne, hat er gefragt, ob er das nicht machen kann.
Er hat wohl auch bei einem, bei irgendeinem anderen Softwarehersteller angefragt und er wollte irgendeinen höheren dreistelligen Eurobetrag für.
Und ich habe ihm gesagt, wenn ich es im Stream programmieren darf, dann bastel ich ihm was raus.
Dann bastel ich ihm was zusammen.
Aber das wird keinen Schönheitspreis gewinnen, ähm, weil es eine Windows-Desktop-Anwendung wird.
Und Windows-Desktop-Anwendungen gewinnen in der Regel nie den Schönheitspreis.
Also, folgendes Bild hat er mir geschickt.
So.
Also.
Ich kann mich hier drinnen zoomen.
Also, der hätte gern ein Fenster.
Das sind ja die Big IQ, die Big IQ, äh, Zeichnungen.
Ähm.
Also.
Der will ein Fenster haben.
Also, folgendes Problem.
Er, er, so hat das beschrieben.
Wir machen das jetzt mal so.
Weil eine Sache ist immer wichtig, wenn man was programmiert für andere Leute.
Man muss, dass sich fünfmal erklären lassen, dass man es verstanden hat, was sie wirklich haben wollen.
Nicht, weil sie es beim ersten Mal nicht richtig erklären konnten, sondern erst, wenn sie fünfmal erklärt haben und man hat fünfmal das Gleiche verstanden, dann kann man anfangen, weil sonst macht man irgendwas, was nicht stimmt.
Also, das erste, was er geschrieben hat, ist, ähm.
Er will eine Mini, äh, er will ein Miniprogramm haben.
Okay.
Ähm.
Es soll, also er schreibt, es soll einfach das können.
Wenn eine neue Lieferung kommt, kann man die anlegen.
Dann scannt man die Seriennummer ein und speichert es ab.
Wenn man später nach der Seriennummer sucht, soll angezeigt werden, aus welcher Lieferung es stammt.
So, und da hat er mir jetzt auch folgendes Bild dazu gemalt.
Und zwar, er will irgendwie ein Fenster haben.
Das machen wir nicht ganz so, weil das kann man, das kann man schöner machen.
Aber so vom groben Ablauf her.
Ähm.
Man könnte das, man könnte das übrigens genauso in Excel oder so wahrscheinlich machen.
Oder aber in irgendwas X, in irgendeiner Kommandozeilen-Anwendung oder so.
Also, das ist jetzt nix, ähm.
Super kompliziert das wahrscheinlich, denke ich mal.
Mal gucken, was wir machen.
Ähm.
Das kann, das kann man übrigens in fast jeder Sprache machen, die mal lustig ist, ne.
Sowas Kleines.
Man braucht, man muss sich bloß überlegen, ähm.
Wie man die Daten speichern will.
Aber das wird ja im Endeffekt einfach nur ein bisschen Text sein.
Ich glaube, ich weiß schon, wie ich es mache.
Also, was er gerne hätte, ist.
Achso, übrigens, achso, was er noch, was er noch dazu gesagt hat, ist, ähm.
Dass irgendwie ihre Warenwirtschaft ist irgendwie ein DOS oder so.
Und, und alles kostet irgendwie übertrieben viel Geld und das wird ihm was helfen.
So.
Und wenn ihm das was hilft, ist gut.
Ich habe gesagt, solange ich es im Stream machen kann, ist, ist gut.
Ähm.
Ne, wir machen, wir machen keine Webseite.
Wir machen, ähm.
Wir machen, wir machen tatsächlich mal eine ganz Oldschool, entweder WPF oder Windows Form.
Wahrscheinlich machen wir sogar eine Windows Form Anwendung.
Irgendwas, irgendwas ganz, ganz Billiges, was.
Ich habe ja schon gesagt, das wird kein, wird kein Schönheitspreis gewinnen.
Naja, zumindest.
Also, was er gerne hätte, da will irgendwie so ein, wenn man das Ding startet.
Hätte er gerne einfach ein Fenster mit einem Feld, wo man, wo man nach Seriennummern suchen kann.
Oder man kann auf neue Bestellung klicken.
Wobei wir das anders machen.
Das habe ich mir schon überlegt.
Wir machen, wir machen an der Stelle schon den absolut High IQ Move.
Und zwar.
Ja, ich weiß, dass man damit grafische Sachen erstellen kann.
Das ist dieses, das ist dieses T, TCL ähm, Dings, was sie in Python eingebaut haben für grafische Oberfläche.
Ähm.
So, genau.
Also, wir machen, wir machen den Big Brain Move ganz am Anfang.
Wir machen hier kein Suchfeld.
Doch, ein Suchfeld machen.
Doch, ein Suchfeld machen wir.
Wir machen hier aber kein Button für neue Bestellungen.
Wir machen einfach nur, habe ich mir so überlegt.
Wir machen einfach nur ein Fenster.
Da ist eine Textbox drinne, wo man Seriennummern suchen kann.
Und unten drunter eine Liste, eine Liste mit allen Seriennummern.
Und die, die filtert das einfach, wenn du was in die Liste tippst.
So.
Und wenn du eine Seriennummer eintippst und er die nicht findet.
Dann erstellt er automatisch eine neue.
Das heißt, wir brauchen diesen, diesen neue Bestellungen erstellen Button gar nicht.
Vielleicht machen wir den doch hin, weil theoretisch können Seriennummern auch doppelt sein.
Theoretisch können Seriennummern auch doppelt sein, aber das ist recht unwahrscheinlich.
Und umso weniger Buttons man hat und umso einfacher das zu bedienen ist, umso besser natürlich.
So.
Danach soll er die Seriennummer suchen.
Und das machen wir so auch nicht.
Es gibt jetzt im Prinzip zwei Fälle.
Entweder wir finden eine Seriennummer.
Dann mache ich das Fenster auf, wo die Details zur Bestellung drinne stehen.
Also sprich, wie die Bestellung heißt und was alles für Sachen in der jeweiligen Bestellung drin sind.
Das ist dann ziemlich easy.
So.
Und das gleiche machen wir, wenn wir nach einer Seriennummer suchen.
Und er findet die Seriennummer nicht.
Und man drückt Enter.
Also dieses Zwischenfenster hier lassen wir auch weg.
Und man drückt Enter.
Ähm.
Dann geht einfach gleich das neue Fenster auf für die Erstellung.
Also im Prinzip wird das eine Anwendung aus zwei Fenstern.
Und also zwei Forms.
Und ein bisschen Logik oder so.
Also es hält sich, es hält sich in Grenzen.
Es ist jetzt nicht so.
Twitch Prime x Paul x.
Huge.
Big Brain Sub.
Dankeschön.
Ich muss immer.
Leute, ihr müsst mich heute mal wieder ein bisschen anscheißen, falls ich die Subs vergesse.
Weil, wenn ich mich konzentriere, dann kann das schon mal passieren, dass ich Subs übersehe.
Morgen gibt es übrigens ein neues Video auf YouTube.
Nur mal so angemerkt.
Mich fragen so viele Leute, was ich auf der Arbeit mache.
Sowohl im Stream, als auch hier auf YouTube in den Comments.
Dass ich mich mal hingesetzt habe und mir überlegt, was mache ich eigentlich so die ganze Zeit auf der Arbeit.
Dann mache ich so ein 10-15 Minuten Video darüber, was man so als DevOps Engineer treibt.
Wie gesagt, Berufsbezeichnungen sind eh Schall und Rauch.
Exakt steht das bei mir auch nicht drauf.
Aber ich mache es im Prinzip vom Aufgabenfeld her.
Das Zeug nennt eh jeder anders.
Morgen Pfeiffer Video.
Ja, das kriege ich bis morgen nicht fertig.
Ja, Siparo.
Du darfst nicht alles verraten.
So, ähm.
So, kann ich mich jetzt endlich mal in Steamlabs einloggen?
Steamlabs kann jetzt meine Worts schneiden.
Warum macht das Steamlabs?
Ich will gar nicht, dass Steamlabs das darf.
Also, wen haben wir hier heute gesubbt?
xpaulx, Fritek und Andy.
Ich glaube, die habe ich alle vorgelesen.
Gut, also fangen wir mal an.
Wie gesagt, das wird kein Schönheitspreis gewinnen, das Ding.
Wir machen mal eine neue Anwendung.
Und zwar eine Sache, die ich schon ganz lange nicht mehr gemacht habe.
Der Siparo, der hat wieder hier seine Fantasie mehr.
Also, wir machen jetzt eine Sache, die ich schon ewig nicht mehr gemacht habe.
Und zwar, ähm, wir erstellen eine Oldschool Windows Forms Anwendung.
Also, sowas, was dann auch richtig schön aussieht, wie von 2005 oder so.
Aber das dürfte am einfachsten und schnellsten sein.
So.
Und natürlich auch .NET Framework, nicht so neue Sachen wie .NET Core oder so.
Also, wir machen jetzt mal eine neue Anwendung.
Da kann ich ihm einfach das Programm schicken und er kann es ausführen und gut ist.
Ja, ist nichts Großartiges dabei.
So, ähm, wie nennen wir denn das Ding?
Wir brauchen jetzt einen guten Namen für das Teil.
Man könnte es, man könnte es Scansor nennen.
Wir brauchen Big Brain High IQ Name für das Ding.
Müsst ihr mal kreativ sein.
Nanosub.
Nanosub.
Nanosub.
Nanosub.
Nanosub.
Nanosub.
Nanosub.
Nanosub.
Nanosub.
Nanosub.
Nanosub.
Nanosub.
Nanosub.
Nanosub.
Nanosub.
Nanosub.
Nanosub.
Nanosub.
Nanosub.
Nanosub.
Nanosub.
Nanosub.
Nanosub.
Nanosub.
Nanosub.
Nanosub.
Nanosub.
Nanosub.
Nanosub.
Nanosub.
Nanosub.
Nanosub.
Nanosub.
Nanosub.
dass ich das für so normale
0815 Anwendungen, die man einfach
bereitstellen will, irgendwo zum Download
und zum Ausführen, nicht verwenden kann
weil, erstens
brauchst du Adminrechte, ich dachte eigentlich
wir haben es geschafft unter Windows
dass man kleine Programme
keine Adminrechte mehr braucht, allerdings für UWP
braucht man Adminrechte, weil
wenn man kein offizielles
Codesigning Zertifikat hat
und ich habe kein, ich kaufe mir
doch kein, ich gebe doch nicht viel Geld aus
für ein Codesign Zertifikat
dass ich kostenlose Anwendungen
bereitstellen darf, das ergibt doch irgendwie
keinen Sinn, so und deswegen kann man
UWP aus dem
Gesichtspunkt schon mal vergessen, leider
leider, an sich würde ich es in UWP machen
aber, was wisst ihr
was ich heute gesehen habe, was richtig cool ist
ähm
und zwar, Microsoft
ist es auch aufgefallen, dass
Windows GUI Entwicklung scheiße ist
das ist Microsoft auch
aufgefallen, weil wenn man ehrlich ist
Windows GUI Entwicklung ist halt
entweder scheiße mit UWP
was eigentlich ein gutes
GUI Framework hat, aber alles andere
Kacke drumherum ist
ähm, oder
es ist ur ur ur
alt mit Windows Forms
oder es ist nicht
ganz so alt, allerdings
ähm, mit
WPF auch nicht wirklich modern
WPF kann keine Emojis anzeigen
zum Beispiel und das im Jahr 2019
WPF kann nicht ordentlich mit der
Welt X interagieren, ich weiß, es geht, aber
es hat auch, mit modernen Windows Sachen hat es auch
generell Probleme, also du hast im Prinzip unter
Windows GUI nur die Auswahl, Crap
mit UWP
mit gutem GUI dafür, aber Restkacke
oder du hast die Auswahl
zwischen ur ur alt und alt
unter Windows, das sind so die zwei Sachen
wenn man mal die Sachen, die nicht
von Microsoft kommen, außen vor lassen, ja
also zum Beispiel, wenn man was mit
mit Qt macht oder so, dann geht
das natürlich auch
ähm, aber das muss es in C++ machen, oder ich
weiß, gibt auch Python Bindings
oder, oder auch Go Bindings oder Flutter
Flutter geht jetzt, ich habe jetzt was gefunden, Flutter
geht jetzt auch für den Desktop
ja, also
es ist scheiße unter Windows und das ist
Microsoft auch
aufgefallen
das war, oh, Killer47gea, Twitch Prime
Dankeschön
Huge Sub
benutzt doch Java, nä
Java ist eigentlich, was Cross-Plattform GUI
angeht, mit JavaFX gar nicht so schlecht
und man kann JavaFX auch ganz gut
aussehen lassen, aber ich habe so eine
Abneigung in Java, ich mache nichts und es
kann nicht sein, dass es keine Alternative
gescheit gibt, das Einzige, was es gibt
ist Qt, das geht nur mit C++ so richtig
ja, es ist Java4M, Java4M, das will ich
nicht, oder Flutter in Zukunft, aber das
kann so viel anderes noch nicht
ja, Flutter Desktop hat zum Beispiel, hat
zum Beispiel kein WebView, warum ist das so?
Warum ist, warum findest du Java so kacke?
Es hat keinen, keinen tieferen Grund
ich mag es nicht
so, zumindest, was ich sagen wollte
Microsoft ist es jetzt selber aufgefallen,
dass ihr das GUI-Programmierung
beziehungsweise Windows-Anwendungsprogrammieren
kacke ist und dass sie sich ein bisschen zu
sehr darauf versteift haben auf UWP
UWP war ja mal die, war ja mal die Idee von
Microsoft, dass du quasi eine Universal-
Plattform-App programmieren kannst und die
läuft dann auf Xbox, auf Hololens, auf Surface Hub und auf
Devices und Windows Phone und IoT und
alles mögliche, das war und natürlich
auch Windows, das war mal so die Idee von
Microsoft, das Problem bei der ganzen
Geschichte ist, keine Sau, bis auf eine
Handvoll, entwickeln Anwendungen für
Hololens, Surface Hub, Windows Phone, IoT, ein paar
vielleicht noch Xbox, aber da gibt es auch
andere Varianten. Kaum jemand. Die meisten
Leute wollen Anwendungen für Windows-PCs
entwickeln und das ist halt mit UWP kacke gewesen.
Du hattest eine Sandbox drumherum, dass du nicht mal Screenshots machen konntest.
Wohlgemerkt, du konntest nicht mal Screenshots machen in einer UWP-Anwendung.
Und du brauchst ein offizielles Code-Signing-Zertifikat, dass du UWP-Anwendungen verteilen darfst,
was sich keiner kauft, der einfach hobbymäßig mal was programmiert.
So, deswegen ist UWP-Crap.
Das einzig Gute an UWP ist tatsächlich das UI-Framework gewesen.
Das ist wirklich schick.
Man kann sagen, was man will.
Ich meine, der Calculator ist ein schlechtes Beispiel, weil der Calculator sieht kacke aus.
Aber dieses UI-Framework, was hinter diesen UWP-Apps steht, ist wirklich nice.
Unter Windows ist das das Beste, was es gibt.
So, und jetzt sind sie auf die glorreiche Idee gekommen bei Microsoft.
Und wenn Hardware gerade die App auf HoloLens nutzen will,
dann muss man sich erstmal überlegen, wie man in Windows Forms Listview anklickt unter HoloLens.
Kann sich jemand an Playstation Move erinnern?
So, und zumindest war das die Idee von Microsoft.
Ursprünglich.
Und es ist halt alles Kacke an UWP, außer das GUI-Framework.
Das ist Microsoft jetzt auch aufgefallen.
Und sie wollen Ende des Jahres, also viertes Quartal 2019,
möchte Microsoft was Neues bereitstellen.
Nämlich, also, das da stimmt nicht wirklich.
Sondern, das ist das Falsche.
Ja, doch, das ist das Richtige.
Sondern, man sieht es ja, der Unterschied ist das da.
Sondern, man kann jetzt das GUI-Framework,
was auf UWP, was aktuell UWP-exklusiv ist,
kann man jetzt für ganz normale Windows 32-Anwendungen verwenden.
Und das ist zum ersten Mal seit Windows, keine Ahnung,
mit wann hat UWP angefangen? Windows 8?
Oder schon Vista?
Ich glaube schon in Vista, oder?
Windows hat, Vista hat doch diese Geschichte mit WinRT und so Geschichten,
wie hat das angefangen?
Ich weiß es gar nicht mehr genau.
Vista oder Windows 8?
Eins, ein...
Aber WinRT-Geschiss gab...
Ach, ne, unter Vista war das dieses WinRT-JavaScript-Gedöns, oder?
Aber Windows 8, zumindest...
Die haben, die schaffen es jetzt quasi seit,
sagen wir mal seit fünf Jahren oder so,
dass man wieder, oder eigentlich schon länger,
weil unter den Teilen davor war es auch nicht.
Ich sage mal, seit zehn Jahren, ja?
Windows schafft es jetzt, Ende des Jahres, als Testversion,
zum ersten Mal wieder,
dass man GUI-Technologie,
beziehungsweise Anwendungen für Windows programmieren kann,
die nicht auf zehn Jahre plus alter Technik basieren.
Ich weiß nicht, was sich Microsoft gedacht hat die ganze Zeit.
Die haben sich gedacht, es werden schon die Leute UWP verwenden,
aber es hat keiner UWP verwendet.
Weil es auch kacke ist.
Und jetzt, endlich haben sie es gecheckt,
du kannst quasi das komplette UI von UWP auch für nicht-UWP verwenden.
Und das wird richtig gut.
So, so schreiben sie hier, viertes Quartal 2019.
So, und sollten sie jetzt noch auf die glorreiche Idee kommen,
bei Microsoft, aber ich glaube, das ist zu big brain
und zu viel Aufwand für Microsoft,
wenn sie das jetzt noch so rausbringen würden,
oder so programmieren würden, dass du es relativ einfach,
zumindest auf Mac und Linux laufen lassen könntest,
aber ich meine, das könnten sie nur machen,
wenn halt, wenn sie DirectX rausschmeißen
oder so flexibel machen, dass du es auch mit OpenGL rendern kannst,
ähm,
dann kann alles andere Cross-Plattform einpacken.
Wenn sie das richtig gut hinkriegen.
Ja, du kannst, äh, Diddy Holz, das kannst du jetzt schon.
Du kannst jetzt schon in WPF, äh, UWP, beziehungsweise WinUI verwenden,
nämlich mit SAML Islands kannst du das machen.
Die Sache ist bloß die, das ist ein bisschen, das ist ein bisschen eklig.
Also sprich, du musst quasi einen extra WinUI-Hosting-Control in dein UWP,
in dein WPF einbinden, um darin dann die neuen Controls zu hosten.
Das ist nicht so schön, ja, das ist ein bisschen eklig.
Ähm, aber ja, du könntest dann, hiermit könntest du tatsächlich komplett einfach sagen,
new, keine Ahnung, wie das Ding dann heißen wird,
new, new WinUI-Window oder so, und dann wird das funktionieren.
Ohne irgendwelchen Hosting-Geschiss.
Also, das wird richtig gut, wenn sie das richtig machen.
Und sollten die sich, äh,
hätten, also sollten die sich dazu entschließen, das Cross-Platform zu machen.
Irgendwann mal nicht, das werden sie nicht gleich machen.
Da kann, dann muss ich Qt warm anziehen, GTK kannst du eh vergessen.
Flutter ist auf dem Desktop noch viel zu unausgereift.
Ansonsten, ansonsten gibt's ja außer JavaScript Elektronen-Geschichten nix mehr.
Das war es ja eigentlich, ernst zu nehmen, Cross-Platform.
Sie versuchen ein bisschen so mit React Native,
aber was unter der Haube auch nur UWP ist unter Windows.
Ähm, es gibt ja nix Cross-Platform mehr so richtig.
Also, sollten sie das machen und das gut funktionieren,
das, das wird einschlei-, das, das, das, das wird einschlagen wie eine Bombe, ja.
Das werden ganz viele Leute benutzen, weil das ist, du kannst die Sharp verwenden,
was ne richtig geile Programmiersprache ist, und du hättest nen UI-Framework,
was von ner großen, ähm, von ner großen Company gebackt ist, quasi.
Ja, oder du musst halt weiter mit Elektron rumfrickeln.
Unter der Haube ist ja im Prinzip ganz vieles Elektron, ja.
Gibt's, es gibt da viele Sachen, die auch drauf auf, aufsetzen und so.
Kann ich sie Sharp direkt, wenn ich Java kann?
Ja, naja, es hat ein paar, es hat ein paar Eigenheiten, aber ansonsten eigentlich kein Problem.
Elektron ist toll, das stimmt, allerdings geht mir Elektron auf den Keks für kleine Anwendungen.
Ich find, Elektron ist viel zu aufgeblasen für irgendwelchen Kleinkram.
Ja, so, auf geht's.
Haben wir jetzt eigentlich nen ordentlichen Namen dafür?
Haben wir jetzt nen ordentlichen, ordentlichen Namen für?
Ja, richtig, UWP hebt seit Jahren nicht ab.
Deswegen, äh, ja,
UNO, UNO ist, ähm, UNO ist nen Aufsatz auf UWP, wiederum, unter Windows oder Xamarin Forms.
UNO ist ganz was Abgedrehtes, ähm, UNO ist ein, ein, ein, ein Aufsatz von einem Aufsatz von einem Aufsatz.
Also UNO setzt unter Windows auf UWP auf, ansonsten, also deine Anwendung setzt auf UNO auf und UNO setzt auf UWP unter Windows auf.
Und, ähm, unter anderen Betriebssystemen setzt du dann...
auf, dann setzt, setzt du auf UNO auf, UNO setzt auf Xamarin Forms auf und Xamarin Forms setzt auf Mono und die lokale, lokale Library von Android oder IOS.
Das ist ganz mir, das verwende ich erst gar nicht.
Ähm, ja.
Windows React Native ist im Prinzip auch UWP.
Also im Prinzip ist alles UWP und das wird alles hiermit besser, wenn sie das richtig machen.
Und um's abzuschließen, sollten sie es Cross-Plattform machen, wird das einschlagen wie eine Bombe.
Also, was heißt das?
Avalonia ist auch cool, ja, Avalonia ist auch cool, allerdings Avalonia fehlt noch ein bisschen viel.
Avalonia fehlt noch ein bisschen viel.
Avalonia rendert manche Sachen nicht selbst, Avalonia, ähm, hat keine Low-Level Implementierung für ihre, äh, zum malen.
Ich glaub die verwenden, was verwenden die aktuell zum malen?
Irgendeine 2D Library von Google oder so.
Also es wär auf jeden Fall deutlich schneller möglich.
unter Linux. Sie haben kein
Webview. Also es gibt für mich zwei
Sachen. Es gibt für mich zwei Sachen,
wo man, finde ich, erkennen kann, ob
ein GUI-Framework gut ist, ob ein GUI-Framework
was taucht, beziehungsweise wo man sich
mal angucken kann, was das Feature hat.
Ihr müsst erstmal natürlich gucken, ob es euch gefällt
von der Bedienung her. Zwei Sachen, die ihr
gucken müsst. Hat das Ding
einen aktuellen Embedded Webview
beziehungsweise irgendeine Möglichkeit, einen Browser
einzubinden in die Anwendung? Das ist das Erste.
Wenn es das kann,
das können nämlich die meisten nicht, weil
es auch eklig ist, Chrome zu embedden.
Wenn es das kann, ist gut.
Und das Zweite ist,
es muss 3D-beschleunigten
Content embedden können. Also
du musst irgendwie die Möglichkeit haben, DirectX
Content oder OpenGL Content
einzubetten. Wenn es die
zwei Sachen gibt,
dann taugt das GUI-Framework meistens was.
Wenn es eins davon nicht kann, ist es
eher noch
ein Projekt, was ein bisschen
reifen muss.
Avalonia geht aber auf jeden Fall in die richtige Richtung.
Aber es gibt nichts, außer Qt. Qt ist das
Einzige, was das Cross-Plattform
alles kann, was man braucht.
Allerdings ist Qt C++ und da kriege ich immer Anfälle
bei. So, wir nennen das Ding jetzt einfach
ScanZor, weil mir nichts anderes einfällt.
Bam, create.
Habe ich übrigens das Richtige rausgewählt?
Ja. Also ich sag euch gleich,
wie gesagt, Leute, die App wird keinen Schönheitspreis
gewinnen. So, wir haben jetzt mal
so eine gute, alte,
eklige Windows-Form.
Und wir benennen das Ding jetzt mal um in Main-Form.
Da ist das Ding schon mal richtig heiß.
So, zack.
Was brauchen wir jetzt?
Wir brauchen jetzt eine
Textbox.
So, und wir brauchen ein
ListView.
Also zumindest, wenn man
dem hier so glaubt,
was er da gemalt hat, brauchen wir das.
So.
Das sieht jetzt halt aus
wie 2003.
Oh, zack.
Zack.
Also schön ist was anderes, aber muss es ja auch.
Und da machen wir jetzt nichts anderes,
wie reinzuschreiben,
was es für Seriennummern gibt.
Button zum Schließen brauchen wir nicht.
Komplett overrated Button zum Schließen.
Warum Windows-Forms und kein WPF?
Weil ich finde, für so eine simple Anwendung
mit zwei Fenstern ist es mit Windows-Forms einfacher.
Das ist alles.
WPF ist immer so ein,
ich weiß nicht, immer so ein,
unter WPF
hat man immer den
Hang dazu, die Sachen
unnötig kompliziert zu machen.
Du musst bei zig Sachen extra Interfaces
implementieren, dann kommen die ersten
Leute an, die sagen, oh nein, Code Behind
darf man doch nicht verwenden unter WPF.
Ja.
Ach, guck mal, da ist er ja.
Ja, doch, doch, ich hab's schon
verstanden, also,
ich mein, äh, ich weiß, du hast ja meine
Handschrift noch nicht gesehen, da ist das, äh,
das hier, huge, big brain Handschrift
dagegen. Äh, WPF
ist auch deutlich
komplizierter als, als Windows-Form.
Dafür ist WPF
auch eindeutig die schönere Framework, da kann man
nix sagen. So, wir fangen jetzt mal an,
wie ändert man den Titel da noch? Ich hab schon, ich hab schon wirklich
ewig nix mehr in Windows-Forms gemacht.
Text, Ding heißt
Scansor.
Ewig nix mehr in Windows-Form gemacht.
Aber es dürfte das einfachste wahrscheinlich
sein dafür. So.
New Code.
Das ist abgekackt.
Ist die Schriftgröße gut oder soll ich es ein bisschen größer machen?
Warum nicht einfach Excel benutzen?
Ja, theoretisch in Excel könnt ihr das wahrscheinlich auch machen.
Passt. Okay.
Sehr gut. Nice.
Yeah.
Okay, so. Also, lass
mal überlegen. Wir brauchen,
wir brauchen zwei,
zwei Spalten. Und zwar
die erste Spalte
brauchen wir, die nennt sich,
keine Ahnung, Seriennummer.
Oh.
Okay.
Äh, vielleicht soll ich umschalten auf Details.
Seriennummer. Und die zweite
Spalte heißt,
ähm,
Order Header oder so. Ich mein, wir haben ja
zwei Sachen. Wir haben, im Prinzip haben wir Seriennummern
und Bestellungen. Das ist alles, was wir brauchen.
Order.
Zack. So.
Gut.
Fertig. Reicht, oder?
Genug. Achso, ganz wichtig, Leute.
Das Wichtigste, was ihr zuerst machen müsst,
bei jeder Windows-Anwendung,
ganz wichtig,
ganz, ganz extrem wichtig,
ihr müsst das Icon
ändern. Und zwar,
und das ist das einzig legitime Icon, was
ihr verwenden dürft. Jemals.
Wenn ihr was anderes bisher gehört habt, ist
das, ist das, hat er euch verarscht.
Das einzige Icon, was ihr verwenden dürft,
ist lul.ico.
Alles andere
geht nicht. Nein, das Default-Icon
darfst du, darfst du nur lul.
lul.w ist auch noch
okay. Und wub.lul wäre
auch noch okay. Allerdings, äh,
kek.w ist nicht okay. Denn,
nein, nein, nein, das geht nicht.
Das kek.w ist nicht, nein, das geht nicht.
Es geht nur lul, lul.w oder wub.lul.
Eins von beiden.
Okay. Ähm, ich würde sagen, jetzt mal
lang genug rumgeschwätzt.
Was machen wir jetzt? Wir brauchen
noch eine zweite Form.
Wir brauchen noch eine zweite
Form.
Und die nennen wir jetzt mal
Order Form.
Big IQ Naming, ich weiß.
Und die
kriegen einen Button.
Ups, Button.
Ups, ja, ich habe ja schon einen Button.
Die kriegen einen Button da unten in die Ecke irgendwo.
Achso, ich muss erst mal was gucken.
Und zwar, oh, oh, das, Leute,
das scaled nicht.
Die gingen das nochmal unter
Windows Forms mit dem Scalen.
Enker, ne?
Enker.
So.
Wow, Scales.
Huge.
Puck Airs.
So, und jetzt brauchen wir einen Button,
der heißt...
Wo ist das? Text?
Save? Mehr Buttons
brauchen wir nicht. Das ist der einzige
Button, der in die gesamte Anwendung reinkommt.
Ja, brauchen wir nicht.
Reicht. Wo hast du die Hintergrundmusik
her? Äh,
da.
Chill Out Mix. Einfach auf YouTube
gesucht.
So, und da machen wir jetzt oben wieder
eine Textbox rein.
Ja, Windows Forms UI
programmieren ist ganz dolle.
Die machen wir jetzt ungefähr so breit wie die andere.
Ähm...
Da oben kommt der Name
von der Bestellung rein, den kann man dann editieren.
Äh, und da unten
äh, nicht Listbox, habe ich List...
Ich brauche einen Listview, keinen Listbox.
Und da unten kommt ein
Listview rein, der die
aktuellen Bestellungen, äh, die aktuellen
Items in der jeweiligen Bestellung anzeigt. Fertig.
Reicht. Gut, und jetzt können wir
anfangen zu broggern.
Das hat sich auch übelst,
übelst Fremdschämen an, äh.
So, jetzt lass mal überlegen.
Was, was müssen wir jetzt machen?
Als erstes, ähm...
Mit was fangen, mit was fangen
wir denn jetzt am besten an?
Oh, MrPrice94.
Dankeschön.
Nice.
So, mit was fangen wir denn jetzt am besten an?
Fangen wir jetzt zuerst mit dem
Speichern an von den Daten?
Oder machen
wir mal testweise was in das
UI rein? Ich würde sagen, wir fangen mal,
wir fangen mal ganz simpel, Tempelritter
Twitch Prime, dankeschön. Nice.
Der IQ im Chat
explodiert ja heute fast förmlich.
Ich würde sagen, wir fangen mal mit der Datenbank
an. Also, Datenbank ist
zu viel gesagt für das, was wir jetzt hier machen, ja.
Mark G. Blaze sagt,
er kann jetzt auf dem iPad Videos gucken in der Dusche.
Das ist natürlich, äh, absolut
next level.
Immer noch keine Emotes. Ja, Leute, ich komme nicht
dazu, arbeiten zu gehen, Streams zu machen,
jeden zweiten Tag Videos aufzunehmen,
für YouTube und mich um Fiverr
und Emotes zu kümmern. Irgendwo,
ich meine, die einfachste Variante wäre,
ich gehe einfach nicht arbeiten.
Das wäre die einfachste Variante.
Hartz IV confirmed.
Flo690 verschenkt
zwei Abos. Und zwar
ein IamJinks LOL und Muffin
Cody. Dankeschön, huge big brain.
360 no scope.
Abo no scope.
Okay, also, wir machen jetzt
erstmal den Datenbank-Krempel. Und zwar,
so, so, also, das ist jetzt
so einfach so, so
Braindump. Ich weiß nicht, ob das so funktioniert,
wie ich mir das vorstelle. Ähm,
wir machen jetzt eine neue,
neue Klasse. Und zwar nennen wir
das, keine Ahnung, ganz primitiv
Repo. So.
Und das machen wir mal public.
Warum auch immer.
Hartz FPS.
Ein Hartz FPS.
Hahaha, das ist gut.
Easykiller Twitch Prime.
LOL.
Dazu kann ich nur sagen, WUP LOL.
Und jetzt bist du nämlich
sub. Und warst du vorher auch schon.
Jetzt kannst du auch WUP LOL verwenden,
weil WUP LOL ist eindeutig größer
LOL weh. Ist, ja,
genau. Also, Repo.
Was wir als Datenbank verwenden, ist das hier.
Das ist keine wirkliche Datenbank,
also keine, keine, so, kein
SQLite oder sowas.
Das ist eine NoSQL-Datenbank,
die man in jeder, äh, .net
Anwendung verwenden kann. Die kann nicht
sonderlich viel.
Aber, für ein paar Seriennummern
speichern und ein bisschen
zur Bestellung zuordnen,
ähm, wie kann ich
denn auf Mobile Sub, ist da nicht oben rechts,
da ist doch irgendein Knopf. Aber ich glaub du musst Paypal
oder so hinterlegt haben.
Oder nicht? Oder doch? Keine Ahnung.
Aber da ist oben rechts, ist doch irgendein Sub-Button, oder?
Aber wir verwenden LiteDB.
Als, als Datenbank.
Oder wie mein,
wie mein Lehrer an der Berufsschule immer gesagt hat,
Datenbranken.
Der hat, der hat das immer wirklich total, total hängen geblieben,
ausgesprochen immer. Der konnte nicht sagen
Datenbanken. Der hat immer gesagt Datenbanken,
die Datenbanken.
Okay, LiteDB.
Prime geht nicht Mobile.
Spaß ist nett. Ist das das Richtige?
Doch, das ist das Richtige.
So, wen soll den LiteDB?
Was, es kostet mehr von
Mobile zu subben? Warum?
Ah, weil Apple was abhaben will.
Zulol, äh.
Die sind ja, die sind ja next level.
Die, äh.
Das sind ja Drecksläge, äh.
So, und jetzt brauchen wir erst einmal
eine Klasse für
die Bestellung. Und zwar,
das könnte fast, das könnte fast
ein Tutorial sein hier, weil
das sind so Sachen, die, äh, Moment.
Was, was mach ich denn hier gerade? Ähm.
Das sind fast so WTF. Das sind fast so Sachen,
die macht man in Tutorials.
Also von den, von den Namen der Klassen her
und sowas. Also, jetzt machen wir eine
Klasse.
Ich mache mal, ich mache mal einen Ticken
größer, oder? So, so ist besser.
So oder so? Komm, ich mach schon, ich mach ein bisschen,
bisschen dicker hier das Ganze.
So, das heißt Order.
So, und was hat eine Order?
Eine Order hat eine ID für die Datenbank.
Das muss sein.
Die Order hat einen, hat einen Namen.
Ähm.
Dann hat
die Order noch, ähm.
Würde ich sagen
ein Up, updated
Add. Sonst noch was?
Ja gut, die, die
Items, ne? Die, also quasi
die, die, die, die
die Seriennummern.
Okay, wir können das in guter alter
Windows Tradition schreiben. Das sind die Serials.
Wobei, wir sind hier auf Twitch.
Da will ich ja gar nicht einen Anschein erwecken,
als machen wir irgendwas Illegales.
Wann die Bestellung getätigt wurde?
Weiß ich nicht. Soll das da rein?
Das weiß ja derjenige, der das scannt gar nicht.
Wir machen jetzt erstmal Basic. Erweitern kann man
den Kram ja immer noch.
Das war übrigens,
das war übrigens voll das falsche Emote gerade.
Ähm, ja.
Ähm.
Komm, ich nenn's Items. Warum soll ich Seriennummer nennen?
Items, Items nenn ich. Das sind einfach,
äh, das ist kein String.
Das ist ne, ne, ne, ne, ne,
aus, ein String
enumerable quasi.
Okay, ähm.
Gut. So.
Jetzt müssen wir lesen, jetzt müssen wir Daten
lesen und schreiben in die Datenbank.
Dazu gucken
wir uns mal hier den Beispielcode von LightDB an,
weil ich mir das nie merken kann, wie das Ganze aussieht.
Oh, so geht das.
Using var db
light db
Übrigens soll ich euch mal erzählen, warum ich keinen
.NET Core verwende?
Ich verwende keinen .NET Core,
weil es ist zwar Windows Forms unterstützt
seit .NET Core 3, aber
der Designer geht noch nicht.
Und niemand möchte Windows
Forms per Hand
programmiertechnisch designen.
Ich weiß nicht, warum man eine
Windows Forms Integration released, ohne dass
der Designer geht. Das ist eigentlich total
beknackt, das kann keiner verwenden.
Ähm.
Okay, also was. Deswegen sind wir
jetzt auch noch auf so einer alten C-Sharp Version.
Ich würde ja gerne ganz neues
C-Sharp verwenden,
aber das geht nicht.
Weil wir keinen .NET Core verwenden
können. Das ist mehr als FPP
gar. 500 Cent, dankeschön.
Der Weizenhainz hat gecheert.
Huge.
Ich habe kein Emote, was dazu passt.
Doch, das hier.
Unterscheidet sich das
E-Einnahme-Rable von dem, wie ich es
machen würde, Public List String Items?
Ja, der einzige Unterschied ist,
also unter der Haube ist es das gleiche,
aber ein
New Meal-Rable ist nicht
veränderbar.
Und eine Liste schon.
Kann durchaus sein, dass man...
Wir müssten da sogar eine Liste draus machen,
weil wir möchten ja da Sachen anhängen
können. Jaja, wir müssen da eine Liste
drauf machen.
Ist eigentlich total beknackt.
So, also mal Beispiel-Code angucken.
Using db light db
Okay, alles klar.
Machen wir. Light db
Usen.
Wo ist denn jetzt das Problem? Achso.
Vielleicht soll ich das auch mal reinschreiben
an der Stelle, wo es hingehört.
Okay, also, jetzt machen wir mal Public...
Okay, was brauchen wir?
Wir brauchen Methoden zum
Einfügen. Auf jeden Fall
Insert Order.
Update Order. Insert Order.
Insert Order.
Order. So.
Gehts. Wir probieren jetzt erstmal aus,
wie man Sachen in die Light db einfügen kann, weil
wie gesagt, ich hab schon ewig kein Windows 4 mehr
verwendet und ich hab auch schon den anderen Kram
eine ganze Weile nicht mehr gemacht.
Insert Order würde ich sagen,
wir geben da mal True oder False
zurück, weil es könnte ja sein,
dass das
Insert nicht funktioniert,
weil die Sache schon drinnen
ist. Das könnte man
machen.
Der Designer geht mit 3.0 nicht.
Es gibt einen extra
Designer für 3.0 und der ist noch so Alpha,
dass er nicht richtig funktioniert.
Ich hab vorgestern extra erst geguckt,
ob der Designer in 3.0 geht.
Guck, ich zeig's dir, dass der Designer
nicht geht in 3.0.
Pass mal auf.
Äh...
Jawoll.
So, jetzt werde ich jetzt zeigen, der Designer geht nicht.
Ich zeige euch, dass
der Designer nicht geht.
Ne, ich benutze Text für die Seriennummern.
Da kann alles rein.
So, pass mal auf.
Designer geht nicht.
Designer broken.
Windows Forms
.NET Core Designer rip.
Du kannst das
VSIX runter...
Ich sag doch, es gibt
einen Alpha Designer dafür.
Der soll aber noch so
krass rumbacken, dass ich ihn erstmal nicht verwende.
Außerdem ist das umzustellen auf .NET Core
übelst einfach.
So, wir müssen jetzt aber erstmal
bisschen was machen. Guck mal, es ist schon 19.50 Uhr.
So, nennen wir das Ding jetzt mal
ordersdb.
So, ähm...
Dann müssen wir...
Wie geht denn der Kram weiter hier?
Insert...
rtb customers bla...
Hier, ähm...
Ähm...
Hier, ähm...
Orders...
So...
Orders...
Insert...
Insert...
So...
Und wenn das nicht funktioniert...
So...
Dann gucken wir, ob das Ganze funktioniert.
Wenn das nicht funktioniert, sagen wir false.
So, und eine Sache müssen wir machen.
Wir müssen...
updated at auf datetime
now setzen.
Dass wir wissen, wann das Ding eingefüscht wurde, bzw. geupdatet wurde.
So, sehr schön.
Dann machen wir noch gleich mal das gleiche.
public... äh...
void... äh...
update... order...
Müssten wir mal überlegen, vielleicht könnte man auch eine Methode draus machen.
Mal schauen.
Könnte man eigentlich machen.
Wow, was hat der denn jetzt getrieben? Alter, ist ja gut.
What the fuck?
Gibt insert nicht auch ein bool zurück? Nee.
Insert gibt... also insert...
Insert wirft ne exception, das weiß ich noch.
Insert wirft ne exception, wenn du... ähm...
was einfügst, was es schon gibt.
People leave... äh...
Ich hab alle... ich hab alle Emotes voll.
Muss ich mal gucken. Äh...
Masker 95. Twitch Prime. Dankeschön.
Nice.
Nice.
Hardware-Rad. Twitch Prime. Oh.
Prime.
Der Auftraggeber selbst.
Ohne den hätten wir heute nichts zu programmieren im Stream.
So, äh...
update order. Das ist wahrscheinlich relativ einfach.
Das ist der gleiche Mist wie hier.
So, dass wir jetzt sagen...
Update...
Order.
Das ist easy. Ähm...
Gut.
Was wir noch machen müssen ist, wir brauchen nen Index.
Wir brauchen nen Index auf dem Name.
Wie geht denn das hier? So.
Ah ja, genau wie der das hier auch gemacht hat.
Weil wir wollen sicherstellen,
dass der Name
einer Bestellung...
Der Name einer Bestellung
soll immer eindeutig sein.
So.
Okay.
Dann würde ich sagen, legen wir mal hier was an.
Private
Read Only.
Was? Nicht Radio Button.
Read Only.
So. Und jetzt legen wir...
Wir machen jetzt... Wir haben doch hier...
Wir haben doch nen Button da drauf, oder?
Keinen Button da drauf.
Wir machen jetzt mal ganz hässlich da nen Button drauf,
ein paar Sachen anzulegen. So, hier. Huge Button.
So, da. Da genau muss der hin, der Button.
So, Button klick. Ähm...
Insert...
Order. Okay. Wir fügen jetzt einfach mal
Sachen ein, dass wir was drinnen haben.
Ja. Einfach, dass wir
wissen, dass in der Datenbank
was drinnen ist.
Also legen wir ne neue Order an.
Brauchen wir eigentlich gar nicht.
Wir sagen jetzt Order Items
Add. So. Wir machen
jetzt mal ein paar Seriennummern.
So. Seriennummer.
Seriennummer.
Ja. So. Und was machen wir noch?
So. Auch
Seriennummer. Ganz tolle Seriennummer.
Reicht ja zum testen
im Endeffekt. Ähm...
Dann sagen wir noch
Order Name.
Ähm... Keine Ahnung.
Default. Oder so.
Das ist jetzt einfach nur mal zum testen.
Das kommt danach gleich wieder weg.
Ich will einfach mal ein paar Sachen in die Datenbank einfügen.
So. Default.
Und dann irgendwie ne Nummer hinten dran.
Und dann sagen wir
Insert Order. Hab ich schon irgendwas vergessen?
Nö. Das war's.
So.
Order. Schauen wir mal.
Ach ja.
Wir machen noch eine Sache. Wir stellen das Ding um
auf Konsolenanwendung. Dass wir zugucken
können was das macht. Weil eins
ist klar. Console Debugging immer
beste. Äh...
Mate. Twitch Prime. Dankeschön.
Also Leute. Spamt mich mal ein bisschen an falls
ich's vergesse. Sorry Leute falls ich irgendjemand übersehe.
Ich muss mich ähm...
konzentrieren. Aber ich guck so alle halbe Stunde
mal in den ähm...
in mein Steamlabs rein.
Das seh ich wer...
Ok. Insert Order. Das müsst ihr doch jetzt eigentlich tun.
Mal gucken ob's abkackt.
Achso. Ne Moment. Nicht. Max nicht starten.
Nicht starten. Aus. Geh. Weg.
Ähm. Hier machen wir noch
ne andere Sache rein. Und zwar
machen wir hier in das Repo machen wir noch ein bisschen
ähm...
Machen wir mal ein bisschen...
Machen wir ne Debugausgabe rein.
Und zwar falls das Ding ne Exception wirft dann
dann printen wir die einfach in die Konsole.
So. Ähm.
Jetzt fügen wir mal ein bisschen was ein.
Ok. Ich hoffe er hat jetzt was eingefügt.
Ähm. Und dann
tragen wir das jetzt mal in die Liste ein.
Also ich hab jetzt paar random Sachen
paar random Order mit random... Ne.
Ne nicht mit random. Mit immer den gleichen Seriennummern.
Das ist eigentlich beknackt. Egal. Aber da
können wir auch gleich testen ob doppelte Seriennummer
funktionieren.
Ähm.
Wir können jetzt übrigens den Button wieder wegmachen.
Den Button brauchen wir nicht mehr.
Wow. Fuck.
Welcher Smoke.
Weiß aber woran es liegt.
So. Wenn ich den Button lösche dann darf ich auch die Methode löschen.
So.
Ähm. Wunderbar.
Und jetzt gucken wir mal was passiert.
Wenn ich das in die Liste ein... ein äh...
Unload. Unshow. Unload.
Ach was auch immer.
Ähm. Lists.
Gut. Da haben wir jetzt nämlich schon das nächste
was wir brauchen in unserem Repo.
Wir brauchen was zum Querien.
Public.
Und da gibt es jetzt eine Liste zurück
mit allen Ordern drinnen die wir
haben. So.
Dann müssen wir wieder diesen Müll
hier kopieren. So.
Ähm. Und jetzt sagen wir
return orders
what? Nein.
Orders
all.
Ähm. Wunderbar. Okay.
Äh. Vielleicht sollte ich das nochmal
schön schreiben.
All orders.
Gut. Und das fügen wir jetzt mal in die Liste.
List view ein.
Und dann gucken wir mal was passiert.
Ob das richtig war was ich da getrieben hab.
Order.
In orders. Und zack.
List view items add.
Äh.
Ach Quatsch. Nicht.
Haha. Moment.
Brauch noch ne Schleife.
So.
Jetzt können wir das ganze einfügen.
List view
items add.
Und dann gucken wir mal ob da irgendwas reinkommt.
Ob das funktioniert.
Item und dann.
Sollten wir da jetzt ein bisschen Text drinnen stehen haben.
Hey.
Das ist unser Zeug. Ich mein.
Es ist nicht richtig resized.
Es sieht übelst beschissen aus. Aber.
Da stehen schon mal Seriennummern drin.
Das ist schon mal gut. Ja.
Zwar irgendwelche random. Ich hab auch
face rolled auf der Tastatur stehen da drinnen.
Aber die stehen schon mal drinnen.
Ja.
Hat das Ding nicht add range?
Das ist ne gute Frage. Guck mal mal.
Add range.
Haha. Aber keine. Aber kein
String array.
Oh die Musik ist fertig.
Noch mal von vorne. Aber man kann.
Man kann kein. Guck mal.
Man kann keine Strings adden.
Geht nicht.
Grip.
Hast du eine Ulayout Tastatur? Ne.
Ganz normale.
So. Okay.
Das Einfügen funktioniert.
Weiß irgendjemand aus dem Kopf wie man.
Weil da muss ich jetzt nachgucken.
Nicht add range.
Weiß irgendjemand
wie man in verschiedene
in die unterschiedlichen Spalten
das einfügt. Weil ich will das hier
die Bestellung steht und da die Seriennummer.
Doch die Tastatur ist mechanisch.
Das ist ein Corsair
K95 Platinum sonst was.
Sub Items. Ich hab keine Ahnung.
Sub Items. Okay.
Ich weiß es ehrlich gesagt nicht.
List für Item.
Sub Item. Aber Sub Item kommt mir bekannt vor.
Sub Item. Ne wie.
Ach ne.
Warte mal. So ging das. Ne.
Sub Item. So.
Das war ganz ganz eklig. Alter.
Das war richtig eklig.
Genau. Sub Items.
Und jetzt kann man hier sagen.
Order Name. Ne.
So.
Ne.
Fuck.
So.
Ne.
Moment.
So.
Ich glaub so.
Oh. Oh.
Oh gucke.
Boah.
Aber warum steht da überall eins?
Ach so. Weil mein Count nie gecountet hat.
Richtig hängen geblieben.
Mein Count hab.
Das darf aber nicht funktionieren.
Der Count aber local.
Aber das hätte nicht funktionieren dürfen.
Der hätte eigentlich abkacken müssen.
Ich hab doch.
Ich hab doch gesagt.
Ich hab doch gesagt.
Index.
Index Aufnahme. Oder?
Wenn ich sag Index Aufnahme.
Moment. Wie geht das mit dem Index nochmal?
Doch.
Das ist Unique.
Warum hat der jetzt.
Warum hat der jetzt den.
Warum hat er das jetzt keinen Index gemacht?
GitHub.
Zeit DB. Mal gucken wie die das da machen.
Vielleicht sind einfach die Beispiele nicht aktuell bei ihnen.
Ah.
Okay. Dann sollten sie vielleicht mal ihre Beispiele.
Oh. Nein.
Dann sollten sie vielleicht mal ihre Beispiele aktualisieren.
Das wäre nicht verkehrt.
So. Okay. Aber bevor wir weitermachen.
Wir machen es jetzt mal so, dass man neue Sachen einfügen kann.
Ähm.
Dann lösche ich den Kram nämlich mal wieder.
Ähm.
Order DB. Weg damit.
Ähm. Das müsste aber so funktionieren.
So. Also.
Wir machen jetzt mal, dass man was einfügen kann.
Eingefügt werden soll was, wenn man.
Wenn man hier drinnen Enter drückt.
Wenn man hier drinnen Enter drückt.
Dann soll was eingefügt werden.
Also. Machen wir das mal.
Ähm.
Events.
Key.
Up.
Key Press. Key Up.
Okay. Wenn. Also.
Wenn jetzt irgend jemand hier oben drinnen was eingegeben hat.
Und Enter drückt.
Dann will ich.
Ähm.
Key Code.
Ich hab so lange damit nichts mehr gemacht.
Enter.
Also wenn der Key Code Enter ist.
Oder wir machen das anders.
Wenn der Key Code nicht Enter ist.
Dann machen wir einfach nichts.
Das heißt hier unten ist jetzt. Wenn der Key Code Enter ist.
Ähm.
Dann fügen wir mal was ein.
Und zwar.
Fügen wir dann ein.
Aus der Text Box.
Den Text.
Und sagen.
Insert.
Dann sehen wir nämlich gleich ob das funktioniert.
Oh.
Falsche.
Falsche Form. MonkaS.
Falsche Form.
Falsche Form. Leute.
Ah.
Richtige Form.
Wenn Key.
Up. So. Jetzt aber.
Dann. Insert.
Order.
So. Jetzt legen wir.
Jetzt legen wir nochmal random eine an.
Order gleich. New. Oh. Dann muss ich.
Das nochmal machen.
Order. Name.
Okay. Das sollte jetzt abkacken.
Wenn ich das einmal gemacht habe.
Wir fügen jetzt hier nochmal irgendeinen Blödsinn ein.
Um zu gucken ob das auch abkackt.
Weil.
Ist immer wichtig das man verifiziert das Dinge abkacken.
Order.
Okay.
Wenn ich da oben jetzt drinnen Enter drücke.
Dann sollte der was neues einfügen.
Ha. Funktioniert.
Guck das erste mal Enter hat er eingefügt.
Und das zweite mal sagt er Duplicate.
Sehr schön. So. Dann. Dann funktioniert das.
Das heißt das der Name.
Von der Order. In dem Fall 1.
Muss immer Unix sein. Sonst funktioniert es nicht.
Das ist gut. Das wollte ich jetzt nochmal ausprobieren.
An der Stelle. Das heißt wir gucken jetzt.
Ähm.
Ob Text.
Ob in Text was drinnen steht.
Und wenn in Text was drinnen steht.
Dann.
Machen wir.
Dann machen wir die ähm.
Diese Form auf.
Wo man was eintragen kann.
Ja.
Also. Wenn Enter gedrückt wird.
Und.
In dem Textfeld.
Was drinnen steht.
Dann öffnen wir.
Das da.
Probieren wir mal prinzipiell aus was funktioniert.
Achso Show.
Sollte ich vielleicht nochmal.
Achso is not. Omega lul.
Ah. Da ist die neue Form.
Okay.
Alles klar.
Habe ich Subs übersehen?
Nein habe ich nicht.
Den Easy Killer habe ich schon vorgelesen.
So. Okay.
Jetzt machen wir die Form hier auf.
Für neue Sachen wurden hinzugefügt.
Dann brauchen wir in dieser Order Form.
Noch einen neuen Konstruktor.
Und zwar.
Für.
Ähm.
Seriennummer.
Wir müssen auch noch den Base aufrufen.
So.
Und dort übergeben wir.
Nämlich das was aktuell.
Moment. Bin ich.
So. Und da übergeben wir.
Nämlich was aktuell hier in der Textbox drinnen steht.
Weil es ja die aktuelle Seriennummer ist.
Die wir einfügen wollen.
So. Ähm.
Blablabla.
Order.
So. Dann brauchen wir nochmal das ganze.
Und zwar für.
Wenn wir was bearbeiten was schon existiert.
Legen wir mal ein Feld an.
So.
So.
Und jetzt kann ich nämlich sagen.
Das er schon mal die ganzen Daten lädt.
Wenn das aufgeht.
Also würde ich sagen.
Da machen wir mal.
Der ganze Mist der kommt wieder weg.
Ähm.
So. Das wird jetzt.
Das kommt jetzt hier.
Das wird jetzt aufgerufen.
Wenn man eine neue Seriennummer eingibt.
Und Enter drückt.
Das ist für hinzufügen im Endeffekt.
Ähm.
Dann machen wir das ganze nämlich hier drinnen.
Wir legen eine neue Order an.
Add als Items.
Das was wir eingegeben haben.
Und Insert tun wir nichts.
So. Und Order Name.
Insert machen wir erst wenn wir auf den Save Button drücken.
So. Und Name ist.
Keine Ahnung.
Neue Bestellung oder so.
Falls ihr irgendwelche Spezialwünsche habt.
Kann ich das immer noch reinschreiben.
Neue Bestellung.
Order. Sehr schön.
Jetzt sagen wir noch.
Die globale Order ist das da.
Gut. Und von der Idee her.
Muss ich jetzt noch sagen.
Wenn diese.
Also sprich.
Wenn die Order Form das erste Mal angezeigt wird.
Dann setzen wir den Text auf.
Order.
Also den Titel.
Das was oben im Fenster steht.
Setzen wir dann auf den Name der aktuellen Bestellung.
So.
Das sollte jetzt funktionieren.
Also von der Idee her.
Wenn ich jetzt hier irgendwas eingebe.
Und Enter drücke.
Sollte.
Ein neues Fenster aufgehen.
Mit dem.
Name der Bestellung im Titel.
Fuck. Funktioniert nicht.
Warum nicht.
Vielleicht weil ich Base aufrufe.
Warum nicht. Geht das nicht.
Warum schreibst du das nicht in den Constructor.
Weil ich einen Constructor haben will.
Der einen Parameter braucht.
Und du musst einen defaulten.
Einen leeren Constructor verwenden.
Dass der Designer funktioniert.
Sonst ist der Designer kaputt.
Vielleicht on show.
Können wir ausprobieren.
Vielleicht.
Warte mal ich hab da irgendeine Logik.
Fehler drinne.
Ist Text überhaupt das richtige.
Text überhaupt das richtige.
Ja oder.
Schon.
Ich glaube das ist an der anderen Stelle irgendwie Fail.
Text.
Das muss doch funktionieren.
Leute ich muss mal 5 Minuten weg.
Unsere Heizung ist kaputt.
Ihr könnt euch mal überlegen woran es liegt.
Dass wir weiter machen können.
So Leute ich bin wieder am Start.
Meine Heizung war der Meinung.
Das der Befeuerungs.
Befeuerungs sonst was.
Automat versiegelt wurde.
Ich habe jetzt einfach gesagt.
Ok.
Reboot geht.
Keine Ahnung.
Wenn die Luft fliegt.
Dann ja.
Dann wissen wir was was ist.
Neue Bestellung.
Wieso stimmt doch was hier richtig.
Funktioniert doch alles.
Warum sage ich eigentlich das es nicht funktioniert.
Funktioniert doch alles.
Funktioniert doch alles.
Alles gut hier.
Neue Bestellung alles gut.
Wie macht man eigentlich.
Weiß jemand wie ich diesen komischen Ding Sound ausmache.
Wenn ich Enter drücke in der Textbox.
So.
Neue Form.
Neue Form.
Listbox Listview.
Listbox Listview.
Items Add.
Items Add.
Items Add.
Items Add.
Ne Quatsch.
Ne Quatsch.
Ich bin verwirrt wartet mal.
Ich bin verwirrt wartet mal.
Ich will alle hinzufügen.
Ich will alle hinzufügen.
Hmaja Sound ändern.
Hmaja Sound ändern.
Da freuen sich bestimmt alle dann.
Außer der Chat der Chat freut sich dann.
Der Chat freut sich dann.
Meint ihr ich soll
Was das bedeutet.
Hatte ich nicht gehört.
Heizung.
Feuerverfeuerung.
Dienkanaus figuriert.
backup version
Dienkanaus.
Aber ich habe einen Raspberry Pi dranhängen, der über die Opto-Link-Schnittstelle Status von der Heizung ausliest.
Und der hat mir nämlich gesagt, dass der Feuerungsautomat versiegelt wurde.
Also fast Custom-Firmware.
So, ist das jetzt was Schlimmes?
Äh, verriegelt, nicht versiegelt.
Ähm, F2 hatte ich Code.
Ich hatte Code F2.
Ich will nur mal gucken, ob das was Schlimmes ist.
Was? Über-Temperatur?
Was? Der Füllstand der Heizungsanlagen, die Umweltspumpe und der Brennraum.
So, oh, das kostet wieder Kohle, weil der Heizungsmehr anrücken muss.
Freust du dich auf das neue Blind Guardian-Altum?
Ich wusste gar nicht, dass ein neues rauskommt.
Wann ist es denn soweit?
Wann ist denn soweit?
Legacy of Darklands.
Okay.
Heiß.
Interessant.
Ähm, gut.
Also ich gehe mal davon aus, dass es nichts Schlimmes ist.
Mit meiner Heizung.
Hoffe ich mal, dass da jetzt nichts Schlimmes passiert.
Heizung Sprachausgabe, doch.
Was? Kannst du einen Standard-Button auswählen mit Form-Accept-Button gleich Button?
What?
Wie, da wie, warum, weil er nicht weiß, was Enter ist.
Der reagiert doch auf Enter, da muss man wissen, was Enter ist.
So, okay, bla, das funktioniert.
Alter, dieser Windows-Sound.
Textbox, Enter, Bling.
Stop, stop, Ding, wenn pressing Enter.
Genau.
Ähm, Ex, oh, tatsächlich.
Okay.
Handled, suppress key, true.
Okay, pock.
So.
Ähm, Moment, wo muss ich das machen?
Da.
Da muss ich das machen.
So, und jetzt?
Warum blinkt das noch?
Es soll nicht blingen.
Warum ist das so kompliziert, so ein hässliches Bling auszuschalten?
Check Form-Accept-Button, you can use...
What?
Was?
Hast du...
Accept-Button?
Was, was, was will mir das...
Was, was ist das überhaupt?
Ich hab's ja nie verwendet.
Accept-Button.
Und dann?
Gleich.
So?
Ne.
Wie geht das?
Was ist die schnellste Methode, um in Assembler 0 zu returnen?
Ähm.
Du musst, du musst 0, 0x0, move nach, was?
ix, ix.
Knallt Hupfel, das ist alt.
Ich muss jetzt mal hier konzentrieren, also, jetzt habe ich, jetzt habe ich auch einen Mute-Knopf geschlagen.
Ich muss jetzt mal hier konzentrieren, also, jetzt habe ich, jetzt habe ich auch einen Mute-Knopf geschlagen.
Ich muss jetzt mal hier konzentrieren, also, jetzt habe ich auch einen Mute-Knopf geschlagen.
Ähm.
Ich bin voll raus, wegen dieser komischen Heizungsgeschichte jetzt.
Also, addet er den Scheiß jetzt, wenn ich es neu mache.
Ja, hier, bam.
Okay.
Also, Order-Form-Design, zack.
List, zack.
Save.
On-Key-Down.
Ich will aber nicht On-Key-Down, sondern ich will On-Key-Up.
So.
Wartet mal, was muss ich jetzt machen?
Hat mich voll aus der Konzentration rausgebracht, diese komische Heizung.
So, bla bla bla.
Neue Bestandarten.
Neue Bestandarten.
Bestellung. Add
Items.
Weil eigentlich ist ja überhaupt nichts großartiges, was wir
noch machen müssen. Achso,
safen. Genau, wir wollen safen das Ganze.
Also, wir safen jetzt.
So, save. Wo ist
unser Speicherbutton? Da.
On save.
Repo. Achso,
hab ich ja hier gar nicht. Also brauchen wir das
von da. Order.
Save. Oder Insert.
Insert.
Order.
Okay, das heißt, wenn ich jetzt Speichern drücke
und die Anwendung neu starte,
dann sollte was Neues da sein.
Bla, bla, bla.
Save. Zumachen.
Neu starten. Zack, ist alles da.
Sehr gut. Ich meine, den Refresh muss ich noch
einbauen und sowas, aber okay.
Windows Forms, ey, hör mal auf.
Aber immer noch
besser, als
sowas Einfaches in
irgendwelchen
anderen, noch aufwendigeren Sachen zu basteln.
Okay, Insert Order, alles gut.
So, okay, passt.
Ähm, jetzt, jetzt machen wir,
jetzt machen wir noch, jetzt machen wir einen Big Brain Move.
Und zwar, wenn
Insert Order
okay ist,
dann machen wir das Feld grün.
Und wenn das nicht okay ist,
dann machen wir das Textfeld.
Passt mal auf, das wird jetzt richtig,
richtig Big, Big Brain
Color.
Light, Light,
Light.
Green. Ja.
Huge, Huge Brain.
Ist das jetzt? Red.
So. Also,
wenn das Einfügen geht,
Bam. Oh, Moment.
Ah, ich bin ja auch
ein Kack-Noob.
Stimmt ja auch überhaupt nicht, was ich mache.
Und zwar muss ich,
das hat mich voll aus der Konzentration
rausgebracht hier.
Und zwar muss ich ja hier natürlich noch onLoad
sagen, ähm,
this, ähm, Textbox
Order Name, dass ich den Kram, den ich hier habe,
nämlich editieren kann.
Und dann muss ich nämlich hier unten
drinnen sagen, Order Text
oder Order Name
gleich Textbox
Text, wieder umgedreht. So, und jetzt
funktioniert das Ganze nämlich auch.
Ups. What?
Ah ja. Text.
So, jetzt funktioniert das nämlich auch. Passt mal auf.
Zack. Jetzt ist es da.
Ich mache jetzt, passt mal auf Leute, ich mache jetzt
Big Brain, wie wir den Sound wegkriegen.
Bam.
Das war's, hä? Passt mal auf, jetzt ist der Sound weg.
Fuck.
Geht immer wieder neu an.
Ne, hm?
Ah ja. Das
gebetet mich. Es gibt überhaupt nichts, was
klingeln kann. Das ist aus.
Ist das gar nicht Main Window?
Ach, Main Window ist das da, ne?
Ist das andere?
Okay, System Sounds.
Ha! Aber das
müssen wir nachher wieder ausmachen.
Okay, ähm.
So, neue Bestellung. Save geht nicht,
weil es gibt schon was, was neue Bestellung heißt.
Neue Bestellung 2
geht.
Ah, guck mal. Seht ihr, Leute?
Ja, kaputt.
Oh. Ach so. Ja, doch.
Ja, klar. Das ist vollkommen in Ordnung.
Das ist, das ist vollkommen in Ordnung,
weil das Ding jetzt
die ID gleich ist.
Doch, klar. Genau richtig.
Genau das soll nicht, genau das soll nicht
funktionieren.
Das ist auch gut so.
Der kann ja die Sache mit der gleichen
ID nicht doppelt inserten.
So, das heißt, jetzt muss
ich nämlich noch gucken, wenn
die Order hier eine ID
hat, die größer 0 ist.
Else?
Ja, das ist dann manchmal sogar
ganz gut, wenn was nicht funktioniert.
Genau, wenn die Order ID nämlich
größer 0 ist, dann muss ich sagen,
äh, Update Order.
So, und da machen wir auch
green dahinter.
So, und jetzt geht das nämlich.
Guck.
Hinzufügen. Wird rot,
weil gibt's schon. Wird grün.
Und jetzt bleibt
grün. Weil jetzt, danach
wird er immer geupdatet.
Danach wird er immer geupdatet.
Und das Geile ist, jetzt kann ich die Bestellung
so nämlich auch automatisch umbenennen.
Jetzt benennt er nämlich, jetzt legt er nicht eine neue Bestellung
an, sondern jetzt benennt
er die alte um, weil das die ID,
weil das die gleiche ID ist.
Oh ja, das ist gut. Das gefällt mir.
So, und jetzt müssen wir
jetzt, jetzt müssen wir noch eine, einen richtigen
Big Brain Move müssen wir jetzt noch machen. Und zwar,
ähm, ich hätte gerne, dass
die Textbox nach
200 Millisekunden wieder weiß wird.
Also.
Textbox.
Da, da machen wir jetzt mal
ein kleines, ein kleines Quiz. Ihr müsst
mir mal erklären, warum das funktioniert.
Also ich weiß, warum es funktioniert, aber
ihr müsst mal nachdenken. Also.
Ähm, jetzt ist ja das Problem,
wenn ich das hier
wenn ich jetzt hier was einfüge, jetzt wird's
nie rot. Ja, weil
ich setze es ja danach gleich
wieder, gleich wieder auf weiß.
So, wenn ich jetzt 200
Millisekunden warten will, die, die
die Billigvariante, die wir aber
definitiv nicht verwenden, wäre das hier.
So.
Das könnte man machen, das will
man aber nicht machen, weil
wobei, selbst
das würde nicht mal funktionieren, weil
das hier freest, und das
freest wahrscheinlich noch, bevor die Hintergrundfarbe
geändert ist. Das würde wahrscheinlich nicht funktionieren.
Also das ist ganz schlecht.
Ähm, so.
Und jetzt, jetzt zeige ich euch mal was. Jetzt machen wir nämlich Task
Delay
200. Wait.
So.
Jetzt passt er mal auf.
Jetzt machen wir hier, den da.
Und ihr seht, es resetet nach kurzer Zeit
wieder. Seht ihr?
Zack.
Das resetet nach 200 Millisekunden.
Der Ui-Thread wird nicht blockiert.
Glaube ich zumindest.
Glaube zumindest,
dass er nicht blockiert wird.
Oder wird er blockiert? Oh doch, der wird blockiert.
Fuck. Na gut, dann funktioniert das
dann funktioniert das doch nicht so gut, wie ich gedacht
hab. Wir testen mal, ob der
Ui-Thread blockt. Testen wir mal.
Ja, der Ui-Thread blockt.
Okay. Dann machen wir doch kein Quiz,
weil es funktioniert nicht, was ich gedacht habe, dass der nicht
blockt. Aber ist eigentlich logisch, dass der blockt,
weil an der Stelle sag ich ja Hard Coded
Wait. Und ich könnte da
das jetzt mit, ich könnte das jetzt
S-Sync machen. Das würde funktionieren.
Aber ich weiß nicht, ob
das so einfach dann tut.
Da bin ich mir jetzt nicht sicher,
ob das einfach so geht dann.
Doch, das müsste gehen.
So, und jetzt.
Haha.
Und es wird
Big Brain, oder?
So, und jetzt wird das Ding
nach
200 Millisekunden
Jetzt weißt du nämlich, wenn du
speicherst. Äh, geht nicht.
Geht nicht, geht nicht.
Ah, geht. Update
Update geht. Update geht.
Das weißt du Bescheid. Das ist doch gut.
Da hat man gleich Feedback, dass es funktioniert
hat.
Neue Tweets zum Activision
gesehen, ey. Auch Produktnamen
einfügen kann.
Ach so, ja.
Das können wir machen. Ich mache es jetzt erstmal so mit
Seriennummer, weil es ist einfacher, mal die initiale
Version zu basteln, wenn man
ähm, für
das
da
wenn man für das da erstmal nur Basic
Basic
Datentypen nimmt, ja.
Wenn ich da jetzt ein eigenes Objekt nehme, was ich
jetzt noch zusätzlich
noch extra Werte speichern muss, dann muss ich
muss ich hier mal was überlegen.
Das können wir aber machen. Ich baue es jetzt erstmal so,
dass es funktioniert.
Ich bin halt im Stream nicht immer sonderlich geschwind.
So, okay, das funktioniert.
Einfügen kannst du den ganzen Krempel.
Es wird, es wird.
Grün. Kannst du mal eben
Essing Away, das kann ich kurz nicht
machen, ne. Das ist ein bisschen komplizierter.
Im Prinzip ist das
ein ganz, also, was der hieraus
macht ist, der macht ein ganz langes Switch
Switch Statement
und ähm, macht
einfach hier einen Return dahinter.
Der sagt, der sagt, der macht hier Switch,
schreibt er das hier rein
und an der Stelle macht er einen Return
und ähm,
nächsten Durchlauf wird
wird das aufgerufen mit einem anderen
Parameter, dass das Switch Statement
hier reingeht. Es gibt ein super Video
dazu, ähm,
auch einen, auch einen
Webcast, das heißt irgendwas
Avoid
Common Mistakes Essing Away.
Da zeigt er, das ist sogar IL-Code,
was der Compiler aus dem Essing Away
macht.
Was wird programmiert?
Ein, ein
Tool für Hardware-Rad, wo er checken kann,
ob Seriennummern doppelt sind.
So ganz billig gesagt.
Macht man das nicht so? Wie ist da der richtige
Style? Ich mach Essung eigentlich immer vorne dran.
Ich mach Essung
eigentlich immer vorne dran.
Weiß ich, weiß gar nicht, also wie, wie ist
der offizielle, wie ist da der offizielle
Style Guide?
Naja gut, was auch immer. Ähm.
Und auf diese Weise wird
auch ein COD entwickelt.
Ähm.
Ne.
Hehehe.
COD wird erstmal,
COD wird erstmal so entwickelt, dass
viel Copy-Paste wird aus dem alten Teil.
Aus dem alten Teil.
Vor allem Lauf- und Nachlade-Animationen.
Ok, also wenn euch das lieb ist,
machen wir zuerst Private.
Ok.
Dann würde ich sagen, ist unsere Order-Form
erstmal soweit fertig, dass
wir weitermachen können mit dem Rest.
So, dann nehmen wir,
dann nehmen wir uns jetzt mal die Main-Form vor.
Da müssen wir nämlich noch eine,
eine kleine, aber feine Sache
ändern.
Und zwar, ich überlege gerade,
wie wir das am besten machen.
Und zwar,
ja genau, natürlich.
Und zwar müssen wir jetzt noch einstellen, dass wenn
irgendjemand doppelklickt,
ähm,
Activate, Item
Activate, oder wie heißt das?
Item Activate, also wenn das Ding
jemand anklickt, so.
Und deswegen müssen wir jetzt, wir müssen
noch zwei Sachen einstellen. Wir müssen erstmal sagen,
man darf hier nur immer
eins selecten,
weil ansonsten ist die Logik kaputt.
Ähm, so, dann
sagen wir noch, dass
man irgendwas in der ganzen
Zeile anklicken kann.
So, und wenn das
Activated wird,
dann müssen wir nämlich das gleiche
machen im Endeffekt. Dann müssen
wir, ähm,
achso, haben wir das Filtern, haben wir das Filtern überhaupt
schon gemacht hier? Wenn wir danach, ach, wir suchen
ja noch gar nicht. Nee, nee, nee, nee, dann müssen wir
noch viel mehr machen. Wir müssen,
wir müssen erstmal auch die, die Suche,
die Suche basteln. Und zwar,
ähm, wenn man hier oben was
eintippt,
also sagen wir Text Changed, oder Changed,
oder irgendwie sowas, Changed,
Changed,
Text Changed,
dann wollen wir das Ganze filtern.
So, und nachdem Windows Forms nicht so clever
ist, ist die einzige Variante, die mir jetzt
einfällt, was zu filtern, indem man
die alten Sachen leert, und die
neuen Sachen einfügt. Ich geb zu, das
ist nicht wahnsinnig, äh, big, big
brain time, aber das sollte
funktionieren. Textbox
Text,
so, und dann clearen wir das,
und dann laden wir alles neu,
ähm,
Moment, da machen wir, ich
programmier das jetzt mal hier, aber da machen wir uns
im Repo eine neue Methode, weil das brauchen wir garantiert
öfter, das brauchen wir
garantiert öfter. So, alle
Order, und zwar alle
Order mit,
das machen wir in unserem Repo drin,
weil so ist das ein bisschen, ein bisschen hässlich,
alle Order mit
Items, das sieht mega
hässlich aus jetzt gleich,
die die Seriennummer enthalten.
Passt, guckt euch das mal an,
das sieht, das sieht richtig zum Kotzen
aus.
Sieht das, sieht das nicht wunderbar aus
hier?
So, und dann sagen wir noch,
to lower, weil wir wollen
das case insensitive
vergleichen, to lower, und hier
auch, to lower, und jetzt sieht es richtig geil aus.
So, und jetzt,
ähm, fügen wir das Ganze wieder ein.
Und zwar fügen wir das Ganze
wieder ein, wie hier
oben, und jetzt
müsste das Filtern funktionieren.
Oder auch nicht?
Ach, ich bin wieder in der falschen Form,
ey, meine Güte,
äh, ich bin ja,
ich bin in der falschen Form wieder.
Alter, she baited.
Ja, ah.
Schon gewundert, warum das nicht funktioniert, aber.
Ah, guckt mal.
Seht ihr das hier?
Huge.
Filtern funktioniert.
Wenn wir das jetzt noch richtig machen, dann auch richtig.
Guckt mal hier, ich kann jetzt suchen
nach, ich meine, meine
Seriennummern sind ein bisschen dumm, ne?
Neue Bestellung kann ich nicht suchen,
weil ich nur eine Seriennummer suche.
Ähm,
aber ich kann jetzt zum Beispiel so nach, keine Ahnung,
nach, nach, ähm,
ich füge mal was ein.
Äh, cute chat.
Ayaya.
Save.
Funktioniert. Das mit dem Reload muss ich auch noch einstellen.
So.
Jetzt haben wir hier cute chat und wenn ich jetzt hier suche
nach cute oder nach chat,
dann findet er es.
Das ist doch im Prinzip sowas, was, äh,
was die Jungs haben wollen.
Jetzt kannst du filtern hier nach.
So. Und hinten dran
siehst du dann halt auch, was für eine Bestellung das ist.
Und wenn du das Ganze anklickst,
was ich jetzt noch nicht programmiert habe,
dann, nein, nach POC
kann ich nicht suchen, ich suche aktuell nur
nach Seriennummern. Schon mal was von
MVVM gehört, ja. Hab ich.
Eines der Gründe, warum
ich es absichtlich hier nicht mit WPF mache,
weil ich irgendwie einfach was hinklatschen
will, was funktioniert und gut ist.
Das, das ist eine Anwendung, die hat insgesamt, keine Ahnung,
300 Zeilen oder so. Ähm,
okay. Wunderbar.
Funktioniert. So, das machen wir jetzt ein bisschen
anders, weil das ist an der Stelle natürlich sehr hässlich.
Ähm, wir machen
hier, wir gehen in
unser Repo rein.
Und sagen,
wir machen eine extra Methode für, äh,
Lookup Serial
oder sowas, oder Search,
Search Serial, Lookup Serial, irgendwie.
Ach komm, passt.
So.
Und jetzt kriegen wir alle Orders
zurück,
die die Seriennummer enthalten.
Das ist doch schon mal gut.
So. Da können wir jetzt sagen,
äh, Moment,
was hab ich vergessen? Klammern hab ich vergessen.
Find Serial, Lookup Serial,
Lookup, Lookup, schöner, weil hört sich irgendwie,
Lookup hört sich datenbankiger an.
So, get all orders.
Wir haben, nachdem das hier alles eingebettete,
äh, Dokumente sind, können wir jetzt hier keine
großartige, relationalen
Geschichten machen. Wir, wir können einfach alle
Order holen und die Dinger durchsuchen. Das war's.
Mehr, mehr können wir, mehr, mehr können wir
an der Stelle, äh, gar nicht machen.
Ähm,
irgendwie gefällt mir dieses, dieses Link
Statement. Ich mein, es ist zwar hässlich,
aber irgendwie gefällt mir das.
Weiß nicht warum.
Ir, irgendwie mag ich das.
Ah.
So. Ah.
Wobei man halt
sagen muss, wirklich schön
aussehen tut es an der Stelle echt nicht, ne?
Wir wollen das auf jeden Fall case
insensitive machen.
Beste Benahmung O, I
und S für Variablen, dass
jeder, jeder genau Bescheid
weiß, ähm,
was Sache ist. Aber wir können
es, wir können es aber auch einfach so reinschreiben,
ja. Ja, geht auch.
Ich mein, schön ist es nett, ne?
Also dann, vor allem wenn ich jetzt noch beispielsweise
nach,
nach der Order suchen will.
Also ich würd sagen,
in dem Fall wär das tatsächlich sogar mal, ähm,
gar nicht so schlecht
für diese, für diese, ähm,
DB-Style
Syntax, oder?
Das probieren wir mal aus. Da könnte man nämlich
sowas hier machen. Oh, wie ging das nochmal? Das mag ich,
das verwende ich zu selten irgendwie.
Hier, from
order in,
orders
where
order, Moment, Gott,
äh, in, in,
in,
in, where,
order,
und dann sagen wir mal,
from item in
order items
where item
contains
serial
to lower.
Ist das jetzt schöner?
Select.
Order.
Ist das jetzt schöner?
Ich weiß nicht so recht.
Ich mein, es ist ein bisschen besser zu lesen, oder?
Einmal wirklich schöner. Egal.
Muss funktionieren.
So, jetzt haben wir die Serial Number
gesucht. Jetzt gucken wir mal, ob das Ganze noch funktioniert.
Ui.
Äh, Epo, Serial,
Lookup, so.
Schon klammert so viel.
Mal gucken, ob
alles funktioniert.
Ah, geht noch.
Cute Chatte.
Okay, das funktioniert noch.
Ähm, wir könnten, wir könnten
noch Volltextsuche einbauen. Also das,
nein, was heißt Volltextsuche?
Dass der Name uns Serial Number
sucht. Können sich die Jungs bei
Hardware der Ratan überlegen, wie sie das haben wollen.
So, gut. Das, das, das
sucht er das erste Mal. Und jetzt, wenn man es doppelt anklickt,
soll die Order aufgehen. Und dann haben wir
die Basics eigentlich so weit drinnen.
Würde ich mal, würde ich mal behaupten.
Dann müssen wir noch einstellen, dass es sich im Hintergrund
updatet, aber das müsste eigentlich ganz gut
funktionieren. Dann würde ich sagen, passen
die Basics eigentlich
ganz okay.
Wubbel, wubbel, wubbel.
Dreh da durch, äh.
Muss grad mal was gucken. Ich hab irgendwie auf dem zweiten Rechner
noch Skype an.
Skype? Warum hab ich Skype überhaupt noch an?
MSNICQ.
Weil ich den zweiten Rechner ewig installiert hab,
als ich meinen WhatsApp genommen hab.
So, äh. Ok.
Listview, Activate Item.
So, also von der Idee her müsste ich jetzt
sagen, wenn man das doppelt anklickt.
Also.
Das aktuelle Item ist
Listview
Selected Items.
Das einzige, was es gibt. Sagen wir hier
First. Geht das gar nicht.
First.
Ähm. Und das öffnen
wir jetzt.
schon wieder vorbei jetzt noch mal dass wir jetzt zwei stunden fast also jetzt sagen wir hier dass
er quasi order repo look up serial number und zwar item text und dann was soll er dann machen
das erste und dann das erste öffnen oder so wobei dass das birgt die gefahr dass er nicht
das richtige öffnet oder form dass das wird jetzt das wird das nicht funktionieren also
zumindest hat die gefahr dass das falsche öffnet aber es sollte prinzipiell funktionieren wenn ich
jetzt das so oder herr first ich das jetzt öffne wenn ich das jetzt anklicke geht die
form auf mit allen sachen drin ok hier er lädt auch den kram so wunderbar
das ist alles aus der datenbank da hinten dran du kannst auch ändern du
kannst auch ändern und speichern funktioniert auch schon so q chat ja gut das klappt aber
wisst ihr was wartet mal ich muss mal kurz sachen doppelt also seriennummer waren wir
seriennummer 123456789 oder 123456 ist auch egal das ding nennen wir jetzt hier keine abc
Und, ähm, dann fügen wir noch die gleiche Seriennummer mal jetzt hinzu und nennen es A, B, B? Irgendwas, was davor ist.
So, und jetzt, nachdem das Reload noch nicht funktioniert, muss ich das speichern.
So, und wenn ich das jetzt anklicke, aber man kann nicht sortieren, das ist ja doof.
Wenn ich das hier jetzt anklicke, haha, guckt, she baited.
Das kann, sag ich doch, da besteht die Gefahr, dass ich was Falsches öffne.
Weil die Seriennummer ist jetzt doppelt, ne?
Die Seriennummer ist doppelt und ich nehme einfach das Erste, was er findet.
Das kann natürlich so nicht funktionieren.
Das heißt, ich muss jetzt das Erste nehmen, wo die Seriennummer auch drin, äh, wo die, wo der Name gleich, ähm,
äh, gleich dem, Moment, wo kriege ich denn das jetzt raus, äh, gleich dem Subitems Textes, oder?
Das müsste jetzt funktionieren.
So, oh, wow, was?
No elements?
Was?
Wie, keine, hä?
Wartet mal.
Moment, hä?
Ach, nicht 0, sondern 1.
Alter.
Weil, guckt, jetzt macht er auch immer das Richtige auf.
Okay, sehr schön.
Ich hab ne Unique ID, das passt, das bringt mir an der, an der Stelle bloß nix.
Wobei, Moment, warum mach ich überhaupt Lookups, Moment, warum mach ich überhaupt Lookups Serial?
Das ist doch total behämmert.
Äh, das ist doch total behämmert.
Ich brauch, ich brauch Lookup, ähm, ich brauch noch was.
Ups, wie macht man das wieder rauf?
Äh, ich brauch einfach noch ein, ein irgendwie Order, Order, keine Ahnung, Name, weil das ist ja auch Unique.
Ist es richtig, dass der Name der Ordner als Item im Textfeld gepreloadet wird?
Ja, ja, ja.
Das ist Absicht.
So.
Äh, wir machen das jetzt anders, wir machen das hier.
Load Order.
Name.
Find, find, find Order.
Lookup.
Wir machen auch Lookup.
Wir haben das oben Lookup genannt, dann nennen wir das hier auch Lookup.
Lookup Order.
So, und das ist jetzt relativ simpel.
Machen wir wieder den Kram hier.
Und sag, find, Order, Name, gleich, Name.
Und der Name muss aber auch gleich sein und gut ist.
Ja, find, find One.
Gibt ja nur einen.
Per Definition.
Der ist Unique.
So, und dann müsste das jetzt eigentlich passen.
So.
Order.
Und dann nicht Item Text.
So, und dann Item, das da.
Name.
Order, Name.
So.
Das sieht doch jetzt schon mal besser aus.
Ups.
Äh, ups.
Ah, ist okay.
Wofür ist das?
Das ist ein Zeiger auf die aktuelle Instanz von der jeweiligen Klasse.
Ey.
Ey.
Ey, es funktioniert.
Es funktioniert.
Es funktioniert.
Vollgas.
Nice!
Ja, wunderbar.
Würdest du mal sagen, oder?
Ist doch nice.
Ist doch mehr oder weniger, mehr oder weniger, schauen mal, die Basic.
Basic-Funktionalitäten drinnen, die sie haben wollen.
Du kannst suchen.
Profi-Hardzeit Twitch Prime, dankeschön.
Du kannst suchen.
So.
Klickst sie an.
thu.
Kriegst du die Sachen zu der jeweiligen Bestellung.
Du drückst enter hier drinne und kriegst ne neue, kannst ne neue Bestellung anlegen mit der eingegebenen Seriennummer.
Du kannst.
Neue Bestellung anlegen.
Mit der eingegebenen Seriennummer.
Das ist doch eigentlich schon mal genau das, was er hier aufgemalt hat.
Prime Sub, ja, huge, ja.
Dankeschön, Prime Sub.
So, ich meine, es ist nicht schön, aber es ist im Prinzip genau das, was sie haben wollen.
Oder?
Weiß ich, ob er noch am Start ist?
Also von der Idee her passt das doch.
Jetzt, die einzige Sache, die man jetzt noch vielleicht einbauen müsste, ist, dass man hier noch Sachen nachträglich hinzufügen kann.
Das wäre natürlich nicht so blöd, ne?
Ja?
Hier, guck mal, von der Idee her passt das doch.
Du kannst jetzt hier suchen nach Seriennummern, keine Ahnung, suchst du nach irgendwie, keine Ahnung, 3, 4, 5 oder so.
Und dann weißt du, okay, die Seriennummer kommt in zwei Order vor.
In der Order ABC und in der Order ABB.
Dann klickst du es an, kriegst die Sachen aufgelistet, kannst im Zweifelsfall die Sache auch ändern auf ABD oder so.
Das müssen wir eigentlich nur noch machen, dass hier ein Textfeld reinkommt.
Wo?
Wo man Sachen hinzufügen kann und löschen kann, oder?
Oder ein Listview oder so.
Das passt doch, das ist doch im Prinzip genau das, wie es sein soll.
So, eine Sache machen wir jetzt noch.
Vielleicht das hinzufügen mit Buttons und nicht direkt auf Enter.
Ja, ich mache immer gerne so wenig Buttons wie irgendwie möglich.
Ich habe mir gedacht, wir machen das so, wenn er die Seriennummer nicht findet.
Ach, komm.
Enter.
Nee, das ist doch ganz gut.
Wenn er die Seriennummer nicht findet, dann legt Enter an.
Ja, das ist doch eigentlich okay.
Ansonsten kann man ja hier unten in die Liste und auswählen.
Enter legt immer an.
Enter ist gut.
Enter soll anlegen, weil dieser komische Scanner, der drückt auch immer Enter.
So.
Gut.
Und das Wichtigste, was wir jetzt noch brauchen, ist, haben wir ganz vergessen, das Icon.
Das Icon.
Ganz furchtbar essentiell.
Low-Like.
Sehr gut.
So, ich meine, wie gesagt, schön ist es nicht, aber funktionell.
Wie kann man eigentlich die Größe von den Dingern ändern?
Weißt du, hast du jemanden?
Ich habe schon nie, keine Ahnung, wie das funktioniert.
Den Quellcode später.
Also, wenn du diesen Mist wirklich online haben willst, dann kann ich das machen, ja.
Ich meine, das ist so eine Sache, die ist jetzt mal schnell zusammengewurstet.
Kann man die Einträge auch wieder löschen?
Nee, das geht noch nicht.
Das können wir, das machen wir jetzt.
Aber wir müssen vorher noch was machen.
Was kannst du in den Attributen der Form machen?
Was denn?
Du meinst die Spalten oder was?
Wo denn?
Da musst du mir sagen, wo.
Ich will, dass die Spalten hier quasi so standardmäßig verteilt sind.
50-50 oder so.
Ich will, dass die Columns 50-50 sind, dann weiß ich nicht, wo das funktioniert.
Nee, nicht die ganze Form.
So.
So.
Einträge löschen müssen wir auch noch machen.
Aber, was wir vorher machen müssen ist, wir müssen gucken, dass das Ding sich aktualisiert.
Also, dass wir sagen, dass wir irgendeinen Background-Thread oder so machen,
der im Hintergrund einfach immer das Ding aktualisiert.
Das machen wir einfach jetzt auch.
Eats.
Zwar sagen wir irgendwie sowas wie Task Run.
Da muss ich mich jetzt mal kurz konzentrieren, überlegen, wie wir das machen.
Task Run.
Time.
Dann holen wir uns das zuletzt geupdatete Item holen wir uns.
Ich bin mir nur nicht ganz sicher, wie wir das gescheit machen.
Wie holen wir uns das zuletzt geupdatete Item?
Kann man das irgendwie hier machen?
Orders.
Sort.
Order by.
Can I find one?
Order by.
Ne, ne.
Wie macht man das jetzt am besten?
Kann diese Daten, diese LightDB irgendwas?
Ah, hier.
Min.
Sehr gut.
Ach, vom Index Field.
Ja, Moment.
Index will ich nicht haben.
Mein Daytime ist nicht indiziert.
Na gut.
Wisst ihr was?
Wir machen jetzt mal die Noob-Variante.
Wir sagen jetzt einfach, ähm, Repo.
Übrigens ist das, glaube ich, nicht gut.
Das ist nicht gut.
Das ist nicht gut.
Das ist nicht gut.
Das ist nicht gut.
Das ist nicht schlimm, dass wir das aus verschiedenen Threads aufrufen.
Wir lesen ja nur.
Wir updaten aber immer nur aus dem gleichen Thread.
So, wir holen uns einfach jetzt alle Orders.
Ähm, sortieren das Ganze.
Sortieren das Ganze nach updated at.
Und dann nehmen wir das Letzte.
So, und das müsste, und davon, und davon nehmen wir Daytime.
Also von der Idee her.
Ne, warte mal.
Kann ich nicht sowas hier sagen?
Ähm, oh, wenn's First ist.
Aber ich glaube, kann man jetzt Order By weglassen und nimmt Default.
Oh, das ist ja doof.
Kann das nicht weglassen.
Ja, dann, dann nehme ich das, was ich am Anfang gemacht habe.
So.
Visual Studio unterstützt kein Java.
Ne, aber da kannst du, für Java kannst du jetzt nicht andere Sachen.
Was Deck Overflow sagt?
Auto-Reset.
Resize Columns.
Column Header.
Auto-Resize.
Dann, was zum, okay.
Gleich.
Warum machst du das nicht scharf?
Weil das meine Lieblingssprache ist.
So, jetzt haben wir eine Schleife.
Endlos Schleife.
Das Ding soll ja im Hintergrund was machen.
Und jetzt können wir endlich mal unser geliebtes Thread Sleep verwenden.
Für, keine Ahnung, 500, 200 Millisekunden oder so.
Ist egal.
Ähm, und jetzt gucken wir.
Ja.
Das ganze holen wir uns jetzt dann noch mal in einem Durchlauf, mal 500, das, wobei man das bestimmt, bestimmt schöner machen könnte.
Wir könnten, wir könnten, wir machen einfach ein Event.
Wir machen in dem Repo ein Event, wir machen in dem Repo ein Event, wenn updated wurde.
Das ist doch viel schöner, oder?
Wir machen in dem Repo ein Event, wenn updated wurde, wenn updated wurde, werfen wir das Event.
Wobei, können wir nicht machen.
Nein.
Weil, wir kriegen das in dem Repo gar nicht mit, wenn geupdatet wurde, weil es zwei unterschiedliche Repo-Instanzen sind.
Also, das ist nicht schön.
Das ist, das ist hier eklig.
Da müssen wir uns was anderes für ausdenken.
So, und wenn das der Fall ist, wenn das der Fall ist, also sprich, wenn das nicht gleich ist, also sprich, wenn die Update Time sich unterscheidet zwischen dem, was wir uns gemerkt haben und dem, was aktuell ist, vom letzten Item, was geupdatet wurde,
dann wissen wir, es hat sich was geändert.
Und wir müssen die Liste updaten.
Dann können wir sagen, Filterlist, und das müssen wir auf jeden Fall in den Invoke packen.
Äh, Filter?
Hab ich nicht Filter?
Nee, ich hab's nicht, doch, warte mal, wie heißt das?
Äh, ach, Text, Moment, nee, Text Change kann ich an der Stelle gar nicht verwenden.
Weil, jetzt müsste ich das, jetzt müsste ich das neu laden, eigentlich.
Na gut, wisst ihr was?
Wir lagern das, wir lagern das einfach aus in, dann nennen wir das wirklich Filter.
Filter, Filterlist, Listview.
Ähm, und dann machen wir den ganzen Krempel da rein.
So.
Dann, Filter, dann noch Filtern an der Stelle, und hier kommt der ganze Mist rein.
Ähm, und dann kann ich nämlich an der Stelle hier auch sagen, Invoke, nee, wupp.
Wollt ihr das mal crashen sehen?
Passt mal auf, das crasht jetzt auf jeden Fall, weil unterschiedliche Threads auf unterschiedliche, auf, auf, auf, auf GUI-Sachen zugreifen.
Weil,
Schließender Form kann ich das updaten, ja, ja, kann ich mal.
Ich kann das beim Schließen der Form updaten, aber ich will es ja vielleicht gar nicht beim Schließen der Form updaten.
Ähm, weil ich die Form noch auflassen will.
Also, ich, ich drücke Save und, und scanne dann noch fünf weitere Sachen ein.
Ich glaube, so ist das eigentlich.
Ich, aber, ich glaube jetzt crashes.
Und zwar, sobald ich irgendwas editiere, sollte es, wir machen mal hier, wir, wir, wir, wir, wir, wir, wir, wir, wir, wir, wir, wir, wir, wir, wir, wir, wir, wir, wir, wir, wir, wir, wir, wir, wir, wir, wir, wir, wir, wir.
geben mal was aus refresh geupdatet hat sobald ich was update sollte er
eigentlich crashen er macht gar nichts warum nicht was was habe ich was habe
ich habe ich beim update im repo das vergessen da guck mal ich habe das hier
vergessen oder dass es funktioniert aber wenn ich die uhrzeit nicht setzte
dann kann es auch nicht funktionieren ok sobald ich das jetzt update wird
crashen ja ja hätte mich auch gewundert wenn ich so und das liegt daran weil ich
aus einem anderen red gui zeugs aufrufe und das geht immer in die hose
deswegen muss man sagen in volk nicht in volk in volk und dann kann man irgendwie
so
so kann man da nicht in lambda die rein schieben
ok warum nicht geht das nicht nun kann ich da kann man da reinpacken
aha ja okay was was was was ist denn das für eine abartig eklige sonntags warum
haben die da ein warum haben die nicht den overlaut gemacht wo ich lambda
reinstecken kann warum warum ist das so eklig
so
so und jetzt funktioniert das war auf jetzt kann ich nämlich updaten ich mache
da jetzt einfach mal schreibe mir ein so und das sollte sich jetzt update im
hintergrund wenn ich hierauf safe drücke naja hat das gesehen
big brain place okay okay das ist richtig schön das gefällt mir nicht
das ist ziemlich eklig aber es funktioniert erst mal wir können aber
ich mach das über events ich mache das irgendwie wir könnten wir könnten ein
ein globales Event machen, wir könnten
ein Static
Event machen, Repo
Updated oder so.
Was haltet ihr davon, wenn man
wir könnten,
weil wir brauchen ein Event
über alle Instanzen drüber.
Also könnten wir sowas machen hier, Public
Static
Event
Action
und dann irgendwie, keine Ahnung, Blub.
So, und das können wir alles, oder hier
Updated,
das ist glaube ich,
das ist glaube ich schöner,
Flonker, White People
Happy, ja aber wie,
Prime Sub, dankeschön, nice.
Was für ein Programm programmierst du für Adverat?
Was, wo man gucken kann, ob
Seriennummer doppelt sind, eigentlich
was recht, recht kleines,
kurzes.
Updated,
so ist das glaube ich schöner.
Daytime,
so,
Updated,
Invoke.
Ich meine, das ist doch eigentlich eine ganz
gute
Variante für
mal Static, Public Static
Sachen, oder?
Gabi Ralli, Twitch Prime, dankeschön.
Poggers, was nicht Seriennummer
doppelt, sondern welche zu welcher herrscht.
Genau, genau, ja,
stimmt, die Seriennummer
können nämlich doppelt sein.
So, und jetzt können wir uns nämlich
diesen ganzen Mist hier schenken,
den ich hier mache.
Das brauchen wir nämlich alles nicht mehr.
Was ich gerade gebastelt habe,
das können wir nämlich alles wieder wegschmeißen.
Außer den Invoke.
Das können wir nämlich komplett wegschmeißen, hier.
Den ganzen Task, können wir alles wieder
wegschmeißen. Und zwar
sagen wir hier
im Load,
passt eigentlich ganz gut,
im Load sagen wir einfach
Repo
und wir subscriben.
Subscriben.
War hier einfach das Event.
Und abdecken, dann.
Das ist doch viel besser, oder?
Das ist doch viel schöner als meine,
als mein komischer Background Thread,
wenn ich da gemacht habe, oder?
Das sieht doch jetzt, das sieht doch jetzt,
funktioniert doch jetzt schon klar besser.
Mal gucken, ob es funktioniert.
Lull, einfach nur Lull.
Ha, instant aktualisiert, Leute.
Viel besser, so.
Wie macht man denn jetzt diese komischen
Dinger da hier?
Wieso?
So?
Dass es nicht ganz so kacke aussieht.
Mit WPF ging es viel einfacher.
Ja, manche Sachen gehen mit WPF einfacher.
Und manche Sachen sind mit Windows Form so easy.
Also für so kleine Dinge.
Ich meine, das ist im Prinzip mehr oder weniger fertig.
Wir müssen jetzt nur noch gucken, dass man den Kram hinzufügen kann wieder.
Also dass man jetzt in der Order noch mehrere Sachen hinzufügen kann.
Manches geht mit WPF einfacher.
Und manchmal gehen so simple Sachen mit Windows Form einfacher.
So.
Passt doch so eigentlich ganz gut.
So, legen wir noch was an.
Hier sagen wir jetzt hier irgendwie eine neue Seriennummer.
So.
Das ist jetzt hier, wir machen das mal was realistisch.
Bestellung von Lull.
So, speichern.
Jetzt müssen wir nur noch hier die Möglichkeit einbauen, dass man hier neue Seriennummern hinzufügen kann.
Und da weiß er nicht genau, wie ich das GUI-mäßig machen will.
Aber wenn man das jetzt speichert, ist hier drin.
Und dann kann ich es immer noch umbenennen.
Und dann update.
Und dann update das im Hintergrund.
Seht ihr?
Das ist eigentlich wirklich ganz praktisch.
Löschen aus dem List-View ist einfach.
Da mache ich es einfach irgendwie, wenn man entfernen drückt, aktuell markiert das Element weg.
Das ist simpel.
Aber wie machen wir das mit hinzufügen?
Da muss ich mir noch was überlegen.
Da fällt mir gerade nichts Gescheites zu ein.
Weil ihr wollt ja einfach in diesem Feld drin sein, würde ich sagen.
Und dann einfach 20 Dinger scannen und es soll einfach hier drin aufploppen.
Ihr wollt ja nicht nach jedem Scan drücken.
Nach jedem Scan drücken ist doof.
Wäre es nicht sinnvoller, Order vor Serial zu machen und dann nach mehreren Eindringen zu sortieren?
Äh, weiß ich jetzt gerade nicht, was du meinst.
Ach da!
Naja, Serial ist die...
Pfff, vorbei.
Nee, nee, nee, nee, war aber nicht.
Ein extra Scan-Modus.
Es passt ja eigentlich.
Warum?
Ist das so eine Windows-Geschichte, dass man nicht mehr erkennt, wann Fenster aktiv sind?
Ja, das ist so eine Windows-Geschichte.
Aktive Fenster sehen aus wie inaktive Fenster.
Auch geile Windows-Logik.
Also.
So, wir scannen jetzt was, was es nicht gibt.
Und jetzt wollen wir einfach weiter scannen.
Kann man...
Das kommt jetzt auf den Scanner an.
Ich glaube, wir können das richtig cool machen.
Kann man dem Scanner auch sagen, dass der vor jeder Seriennummer was macht?
Dass der nach jeder Seriennummer Enter drücken kann, ist klar.
Kann der auch vor jeder Seriennummer irgendeine spezielle Taste drücken?
Weil dann hätte ich eine Idee.
Dann crabt nämlich den Input einfach, das komplette Fenster crabt einfach den Input und gut ist,
so werden die Daten gespeichert in einer LightDB.
Das ist eine NoSQL-Datenbank, die man einfach in die Anwendung einbinden kann.
Kannst du das nicht wie beim Keyserver machen mit dem Textfeld?
Ja, in dem Fall ist es ein bisschen doof, weil sie wollen nicht einfach nur Text,
sie wollen ja später auch noch dann hinzufügen können.
Also das hier ist, das hier muss schon ein eigenes Objekt sein.
Das man später auch hinzufügen kann, das mit der Seriennummer war ein i9-9900 oder so.
Ja, Cheat 195, genau das habe ich mir auch überlegt, aber es wäre viel cooler, wenn der Scanner vorher was drücken könnte.
Keine Ahnung, irgendwie eine Raute oder so oder irgendwas, was der sonst nicht verwendet.
Aber das können wir so machen, ja.
Kann man überhaupt Text, kann man Text craben einfach nur in der Form?
Okay, Form, oder Keypress machen wir einfach, oder?
Text Change gibt es hier natürlich nicht.
Text Changed in der Form, achso, das ist, wenn der Titel sich ändert, ne.
Also machen wir Keydown, machen wir jetzt Keydown.
Scanner können ein Präfix senden, aber müssen wir eigentlich gar nicht.
Keypress, ja.
Wir können auch sagen, wenn die Fokus, warte mal, wartet mal, was wird denn fokussiert,
wenn wir das hier neu aufmachen?
Was hat hier Fokus?
Der Button, der Button hat Fokus, das ist okay.
Ähm, Keypress.
Okay, ähm, checkt der das?
Ne.
Die Form, die Form kriegt keine Keypresses mit.
Okay, ähm, hast du eigentlich so einen Handscanner?
Ne.
Äh, Keypress.
Hä?
Ja.
Ja.
Ich mach mal Keypress.
Mach mal weg.
Kann man Keypress hier drinnen machen.
Keypress hier drinnen.
Ah.
Okay, hier kriegt er den Keypress mit, das ist schon mal gut.
Na, das passt doch.
Drei Eingabefelder, weiß nicht.
Ich will jetzt, ich will, dass man möglichst wenig klicken muss.
Ich will, dass man möglichst wenig klicken muss, um es einzufügen.
Dass man einfach so braindead das Ding anschmeißen kann.
Scan, scan, scan, scan, scan.
Achso.
Ähm, ah, okay.
Erstbestellung ABC?
Ne, ich glaub, das ist besser vom Ablauf her.
Können wir uns ja mal gucken.
Aber ich glaub, es ist vom Ablauf besser, wenn, wenn ihr erstmal scannen könnt, oder?
Einfach.
Ich mein, ich kann's auch so machen, dass der euch einfach nach jedem Scan in nem Popup fragt, ähm, was war das denn?
Oder so.
Oder aber, oder scannt ihr immer die gleichen Teile hintereinander?
Oder scannt ihr öfters die gleichen Teile hintereinander?
Oder scannt ihr öfters die gleichen Teile hintereinander?
Oder scannt ihr öfters die gleichen Teile hintereinander?
Dann könnten wir das nämlich wirklich so machen.
So nach dem Motto, das war jetzt ein, eine CPU.
Ah, die gleichen hintereinander.
Ja, nee, dann, dann machen wir das so, dann machen wir das so.
Dann machen wir hier oben.
Dann machen wir in das nächste sowas wie Typ rein.
Ähm, machen wir noch ein Typ, Typfeld oder so.
Und dann kannst du einfach eintippen, okay, alles, was jetzt kommt, ähm, alles, was jetzt kommt, ist dann, keine Ahnung, äh, 8700.
7700 Ks.
Blub, blub, blub, blub, blub, blub, blub.
Und wenn du dann fertig bist, ähm, machst du, alles, was jetzt kommt, ist ein Netzteil.
Blub, blub, blub, blub, blub, blub, blub, blub.
Ja, das ist wahrscheinlich sinnvoller.
Ja, das machen wir so.
Aber prinzipiell passt das doch schon mal, oder?
Ich mein, du kannst, du kannst suchen nach Dingern.
Kannst die, kannst die Bestellung dazu aufmachen und siehst dann, welche Seriennummer in der Bestellung drin waren.
Es ist zwar nicht schön, das habe ich aber ja auch schon von Anfang an gesagt.
Das wird kein Schönheitsbreit.
Preis, Gewinn.
Aber das macht, was es soll, ne?
Dann würde ich sagen, ähm, den Rest baue ich morgen ein.
Weil es ist jetzt, äh, halb 10.
Und um 10 muss ich eh pennen.
Da können wir uns jetzt noch ein bisschen was angucken.
Um 10 muss ich eh pennen.
Und wenn ich bis um 10 programmier, dann, ähm, kann ich nicht gescheit pennen.
Was, der Keyserver ist auch nicht schön.
Aber ich finde die optisch, also das Webinterface vom Keyserver ist eigentlich relativ hübsch.
Das sieht richtig aus wie Windows 95.
Wie kann man eigentlich Windows Forms hübsch machen?
Geht das irgendwie?
Gibt es da irgendwelche Skins oder so für?
Machst du das morgen Abend im Stream zu Ende?
Weiß ich noch nicht.
Gib.
Materialskin für Windows Forms.
Oh, das brauch ich.
Das brauch ich.
Ja.
Dann sieht Windows Forms aus wie eine Android App.
Jawoll.
Endlich.
Da haben wir schon drauf gewartet, äh.
Metro Framework.
Was ist das denn?
Was hab ich denn?
Laster?
Oh, das ist aber ganz schön outdated, hä?
Warum benutzt du eigentlich den WPF?
Weil das, weil das in der Anwendung ist mit zwei Fenstern, in denen jeweils 60 Zeilen Code passiert.
Da fand ich das einfacher.
Ich hab, das Metro Framework hab ich noch nie verwendet.
Keine Ahnung.
Elektron.
Das ist, das ist ganz schön alt.
Wobei man halt auch sagen muss, okay, ich mein, das ist Windows Forms, also.
Macht ja eigentlich nichts, dass das alt ist.
Der Kram ist halt alt.
Was willst du machen?
Aber wirklich schöner sieht das doch jetzt auch nicht aus, oder?
Ich mein, es sieht, sieht bisschen, bisschen moderner aus, aber ansonsten.
Wir probieren das jetzt mal aus.
Hat das, hat das ein List View oder sowas?
Wie, wie verwendet man den Kram?
Wie, wie, ich guck mir mal das andere an.
Da gibt's doch bestimmt was hier.
Material Design.
Ja, das hat, das hat richtig guten, richtig viel, gute Bewertung hier.
List View, jawoll.
Okay, wie verwendet man das?
Wie verwendet man das?
Was, VB, VB Net.
Wie, und das war's dann?
Das ist dann alles?
Ah, man erbt mit seiner Form von Material Form.
Okay, das, das probieren wir jetzt nochmal schnell aus.
Das probieren wir jetzt nochmal schnell aus.
Dann sieht das wenigstens nicht so hässlich aus.
Ähm, Updated.
Hä?
Was?
Releases.
Ist doch das gleiche.
Debated.
Releases.
Okay.
Tags.
Was auch immer.
Ist von dem gleichen Typ, ne?
Dann, wir nehmen das letzte, wir nehmen das letzte.
Wir nehmen das von 2017.
Warum hat er nicht einfach das alte Paket ersetzt?
Link zum Musikstream, ja, da.
Oblivion Chillout Mix.
Okay, also, was muss man, was, was muss man da jetzt machen?
Nougat Package.
Hat er das jetzt hinzugefügt?
Moment, wie hieß der, wie hieß der Kram?
Ich will nur mal gucken, dass ich das Richtige.
Updated.
Ich will nur gucken, dass ich das Richtige krieg.
Aha, und das andere ist von wem?
Nougat Package.
Ah, der, der andere Typ hat einfach, ähm, der hat die neuere Version, die neuere Version davon hochgeladen.
Weil es der Original-Maintainer nicht mehr gemacht hat.
Ja, okay, ähm, okay.
Wie, wie ging der Kram jetzt hier zu benutzen?
Vielleicht sieht's dann, sieht's dann gleich besser aus.
Ne, passt da.
Also, wie benutzt man das jetzt?
You can, äh, Nougat, bla bla bla.
Skin Components to your Toolbox.
Was soll man?
In die Toolbox soll ich das jetzt draggen?
Okay.
Warte mal.
Ach, da ist es doch schon.
Ah, verstehe, verstehe.
Man muss, ah, okay, man muss das extra machen.
Dann, dann machen wir unsere Form erstmal, lassen wir unsere Form erstmal erben von Materialform.
So.
Mal gucken, ob's jetzt anders, hohoho.
Es sieht schon materialt aus, äh.
Zwar nicht wirklich, wirklich gut, aber es sieht schon ein bisschen materialter aus.
Materialter aus, ne?
Aber ich glaube, das liegt daran, dass wir noch keinen Skin gesetzt haben.
Bam.
Sieht jetzt eklig aus jetzt eher.
Okay, da müssen wir uns einen Skin setzen.
Skin setzt man, wie setzt man einen Skin?
Da.
Okay.
Runter Initialize Components.
Also da setzt man das.
Okay.
Wow, nein.
Sieht's anders aus?
Ich glaube, ich muss einfach das Fenster ein bisschen re...
anders anordnen, dass es...
Oh, geh weg.
Ein bisschen anders anordnen, weil das dann einfach kacke aussieht gerade.
Guck mal.
Scansor.
Huge.
Huge Optik, Leute.
Ups.
Ah, geh weg.
Ich will es rückgängig machen, mein Verschieben.
Guck doch mal hier, ha.
Sieht doch jetzt schon mal besser aus.
So.
Was haben wir denn für, für Themes, Themes da drinnen, was man verwenden kann?
.
Hab ich noch nie ausprobiert.
Theme Slide.
Dark.
Dark.
Bam.
Ähm.
Slide.
Wir machen mal das Slide Theme und jetzt machen wir mal was anderes.
Wir verwenden mal den...
Kann man den, den List Viewer...
Wir verwenden erstmal, wir verwenden...
Alter, kann das mal...
Auf und rum zu spacken.
Wir verwenden jetzt mal als Text Box eine Material Text Box.
Ein Single Line Text Field.
Kann man, kann man da was rein?
Moment.
Ich mach mal wieder...
Warum kann ich denn das hier nicht mehr rückgängig machen?
Was ist das für ein kaputtes Zeugs?
Ähm.
Text Box.
Heißt das Ding auch wieder Text Box 1?
Hoffe ich mal.
18 Bit Keygen.
Nee.
Yo.
Das wäre natürlich was.
Single Text Field.
Kann man da jetzt was reinschreiben in das Text Field?
Ah, da kann man was reinschreiben.
Okay.
Sehr gut.
Dann...
Okay, was hat, was hat er denn alles für Controls hier?
Na gut, das ist alles.
So.
So.
So.
So.
So.
So.
So.
So.
So.
Ja gut, das ist alles.
Das ist im Prinzip alles.
Dann tauschen wir mal das Text Field aus zu einem...
Zu einer Material...
Wo ist es?
Single Line Text Field.
Oh, damn.
Okay.
Ja.
So, das wird jetzt natürlich abkacken, weil es Text...
Okay, das wird einfach.
Das Text Field ändern ist schon mal easy.
So.
Ah, die Events muss ich noch
registern, ne?
Tja, was haben wir denn hier? Text changed.
Nur Text, nur Text changed?
Ah, Key up und Text changed
haben wir. Search.
Ah, ne, nix, nix
rein. Äh,
Key up.
Wo ist hier? Key
up
und Text changed brauchen wir.
Moment, ich bin wieder in der falschen
Form. Und Text
changed. So.
Zack.
Und Key up.
Wo ist Key up?
So, mal gucken, wie es jetzt ausschaut.
Mal gucken, wie es funktioniert.
Oho, Leute.
Hä?
Bam. Nero Patron, Twitch Prime,
Dankeschön. Okay, es sieht jetzt nicht
mehr aus wie Windows 95.
So, und jetzt verwenden wir
noch, jetzt verwenden wir noch das Android
List View. Äh, ich werde
mal grad was machen, und zwar add
Source Control, dass wir wieder
zurück können. Falls wir es
jetzt verkacken, dann weiß
ich ja nie. Aber Leute,
irgendwie sieht es bei dem komplett anders aus, ne?
Oder?
Bei dem sieht es, bei dem sieht es komplett anders aus
als bei mir. Guck mal.
Ach, ne, der hat einfach nur andere Farben.
Im Prinzip sieht das genauso
aus. So.
Ähm, und jetzt
verwenden wir als Text, als, als
List View, nehmen wir
hier den, den, den List View,
den Material List View.
Der macht jetzt
natürlich ein bisschen was kaputt.
Ähm, wow, ist das fett.
Äh, Serial.
Und, ähm,
Order.
Wir machen jetzt die Playlist übrigens gerade zum dritten
oder vierten Mal. Kann man
den Text nicht ein bisschen, ein bisschen
kleiner machen, hä?
So minimal kleiner den Text.
Vielleicht ein bisschen fett.
Andere Schrift.
Ja, aber ich brauche die Schriftart von der, von der Column.
Nicht vom, wir, wir tauschen
es erstmal hier aus. List View,
äh,
List View
Multi Select,
Multi Rose.
Das ist richtig gut gemacht, dass es so
Drop-In Replacement ist. Du musst
einfach nur den Kram anpassen und gut ist.
Das finde ich
sehr gut. Das ist wirklich nice.
Da muss man gar nicht viel rum, rumwursten
und kann es einfach verwenden.
Okay, ähm,
ähm, wir brauchen noch
List View, Item,
Item Activate brauchen wir noch.
Item Activate.
Wo ist es? Ah.
Ah.
Vielleicht ist ja jemand
designtechnisch begabt von euch.
Nein. Und kann,
und kennt eine schöne Farbkombination,
die wir nehmen könnten.
So das Gui.
Öh! Öh!
Ih! Was ist das?
Öh!
Öh!
Font-Rendering in 2019.
Was ist das für ein Font?
Öh!
Bei dem, bei dem sieht der Font besser aus.
Guck mal, bei dem sieht der, bei dem sieht der Font viel besser aus.
Guck mal, bei dem sieht der Font viel besser aus.
Guck mal, bei dem sieht das viel besser aus.
Font. Font looks ugly.
Glitching Fo- Ah!
Glitching Font List View.
I'm currently using List View with a changed font because the original one is
a font I changed to is okay.
Das ist das gleiche Problem, was wir auch haben.
Okay, vielleicht, wir, wir machen mal, wir machen mal einen anderen Font.
Items.
Ich will einfach nur in dem Designer mal sehen.
Data.
Okay, im Designer sieht das okay aus.
Andere Schriftart.
Ist es egal, was ich hier für eine Schrift da rein stelle, die sieht immer kacke aus.
Ich glaube, das ist das, was der, ich glaube, das ist das, was der auch sagen wollte.
Ehm, das nach, nach dem Hinzufügen.
Glitch das rum.
Nach dem Hinzufügen glitcht das rum und man muss es wieder zurückstellen.
Kann das sein?
Dass er uns das damit sagen wollte?
Ja, äh, Schriftgröße funktionieren, Schriftgröße ändern funktioniert doch auch nicht.
Schriftart ändern funktioniert auch nicht.
Das ist immer eine klar hässliche Schriftart.
Äh, okay, dann machen wir das mal anders.
Mal gucken, ob das funktioniert.
Nachdem wir neue Items hinzufügen.
Load.
Moment, wo, wo lade ich denn den Kram hier?
Da.
Nachdem wir hinzugefügt haben, sag mal, das ist Listview.
Font.
Äh, wie macht man das jetzt?
Wie, wie, View, Font.
Kann ich sowas sagen wie Arial16 oder so?
Ey, das funktioniert.
Manchmal mag ich, wenn du aus Forms bist, relativ intuitiv, ähm, zu bedienen.
Öh!
Öh!
Alter, Leute, es wird immer schlimmer.
Es wird immer schlimmer.
Glitching Font in View.
Das juckt hier nicht, ne?
Font doesn't change.
If you want to replace all fonts.
Ah, aha.
Aha.
Okay, das sieht schon mal besser aus jetzt.
Das sieht schon mal besser aus.
Ah.
Das ist schon mal besser.
Woher weiß man denn, was man markiert hat?
Ich sehe überhaupt nicht, was ich selected habe.
Man sieht überhaupt nicht, was selected wurde, oder?
Okay, die haben alle, alle Probleme.
Irgendwie.
Aber das kriegen wir noch raus.
Ich meine, damit kann, damit kann ich jetzt zumindest halbwegs leben.
Äh, wir müssen uns nochmal andocken.
Das, das seist auch nicht mit, ne?
Na, der List View ist aber nicht schön.
Ah!
Deswegen seist das nicht mit, okay.
Habt ihr es eben gesehen?
Eben ging das.
Na, der List View ist ein bisschen kaputt.
Leute, der, der List View ist ein bisschen kaputt.
Der List View ist ein bisschen kaputt, also.
Aber es gefällt mir.
Es gefällt mir jetzt nicht.
Ich meine, er funktioniert.
Muss man mal gucken.
Vielleicht haben die noch irgendwelche Custom Settings.
Das ist...
Also, jetzt ist es halt doof, dass das Ding nicht mehr geupdatet wird.
Dieser Material-Skin ist ein bisschen kacke.
Einen anderen habe ich jetzt nicht gefunden.
Eventuell mal die Version vom Originalhersteller probieren.
Können wir machen.
Aber das ist, glaube ich, die Version vom Originalhersteller.
Nur die neuere.
Was?
Was zum Teufel macht der da drinnen?
Ih!
Fuck!
Jetzt, jetzt ist der Designer kaputt.
Wisst ihr was?
Die reverten das Ganze jetzt.
Wie revertet man eigentlich in Visual Studio?
Wie macht man das in Visual Studio?
Ich habe, ich habe in meinem Leben noch nicht in Visual Studio ein Git Reset gemacht.
Wie geht denn das?
Ansonsten brauchen wir das Kommandozeile.
View History.
Okay.
Reset.
Delete Changes.
Bam!
Ah!
Da sind wir wieder.
Da sind wir wieder.
Funktioniert wieder.
Aber interessant, dass es sowas für Windows Forms gibt.
Guck mal, da gibt es noch mehr Leute, die da dran rumbasteln.
Ah, der hat das einfach nur gef...
Das ist doch...
Der hat das doch einfach nur geforkt, oder?
Der hat doch nichts gemacht.
Der hat das doch einfach nur geforkt, der Typ.
Der hat doch doch nichts, der hat doch nichts gemacht, oder?
Der hat einfach nur so sein Repo eingetragen.
Letztes Update 2017.
Ja, da müssen wir mal gucken, wie man das verwenden kann.
Wir lassen das mal drin, ne?
Wir ziehen uns hier nochmal einen...
Oh, jetzt sind die Materialdinger weg.
Ähm...
Sonst hätte ich gesagt, wir tauschen das doch mal aus.
Wir tauschen...
Wie tauschen die denn das jetzt aus, die Library?
Voll für den Arsch.
Ich habe schon neu kompiliert.
Hat ihn jetzt nicht großartig gejuckt.
Löscht es nochmal und fügt nochmal das andere hinzu.
Wie hieß der Kram nochmal?
Material Skin.
Probier das nochmal.
Wir probieren das jetzt nochmal.
Jetzt zählen wir mal die alte Version von dem, der es offiziell gemacht hat.
Build Failed.
Wie, jetzt geht's?
Einfach so?
So, jetzt haben wir die alte Version von dem Typ drinnen.
Jetzt haben wir die alte Version.
Jetzt gucken wir mal, ob der Listview wieder funktioniert.
Warum merkt sich das eigentlich die History nicht?
Okay, jetzt probieren wir das nochmal aus.
Listview wieder weg.
Der Material Skin.
Oh, da gibt es doch gar kein Listview.
Ha!
Ja!
Debated.
Wir müssen das neuere nehmen.
Wir müssen das neuere nehmen.
Da gab es doch gar kein Listview.
Ja gut, dann.
Wie ging das jetzt nochmal?
View History.
Aber Leute, das war doch gutes Bauchgefühl, dass ich mal Git committed habe, oder?
Irgendwie.
Okay, das spackt jetzt übelst rum.
Weil ich resettet habe.
Ist irgendwie kaputt.
Aber es funktioniert noch.
Aber der Designer ist jetzt.
Der Designer.
Der Designer.
Der Designer ist RIP.
Der kann er mehr.
Ah, jetzt ist er wieder da.
Okay.
Ja gut, dann.
Dann gucken wir mal.
Wir starten jetzt mal kurz das Ding neu.
Das sieht aber hässlicher aus.
Dann lieber Metro Style.
Erkennt er jetzt das Materialzeug?
Wo ist es hin?
Ich habe nur fünf.
Okay, machen wir ein komplettes Rebuild.
Nö.
Das hat keinen Bock.
Will nicht wieder auftauchen.
Nee, nee, ich habe das nicht rausreverted.
Ich meine, guck dir mal an, wie das ausschaut.
Okay, dann.
Das ist LightDB, Nexus Meister.
Ah, da ist es wieder.
Reingedrackendropped.
Okay, mal gucken, ob wir es irgendwie gebacken kriegen, dass der Listview halbwegs gescheit
ausschaut.
Einfach nur mal Items adden.
Gucken, wie die ausschauen.
Hä?
Moment, wo sind die Items hin?
Alter, das sieht mega beknackt aus, äh.
Was hat der Typ da gemacht?
Riecht beschissen aus.
Ja gut, ich meine, wie gesagt, es ging ja eh nicht darum, dass es gut ausschaut, aber.
Was ist das, äh?
Wood Face.
Und vor allem, warum erkennt man nicht, wenn man da, wo man drauf ist, das ist doch voll
bescheuert.
Ich will wissen, was ich angeklickt habe.
Oh, das gefällt mir nicht, äh.
Und es spackt auch rum, wenn ich drüber gehe.
Ich glaube, da müssen wir den alten Listview verwenden.
Aber ich meine, es spricht ja nichts dagegen.
Es spricht ja nichts dagegen, unseren hässlichen Windows Form Listview zu verwenden und den
Android-Skin für den Rest zu behalten.
This hack tries to apply Robo...
Warum?
Okay, der Skin suckt.
Das ist Müll.
Das ist Mist.
Ich meine, der Rest ist okay.
Dann sieht es wenigstens nicht mehr ganz so vergimmt aus.
Wobei, vergimmt sagt man nicht mehr.
Guck mal, man kann, man kann auch nicht mal richtig resizen oben mehr.
Äh, das ist, das ist broken as fuck, das Ding.
Verwende ich nicht.
Bam.
Rage quit.
So, machen wir Moja fertig.
Ja.
Ich habe übrigens vorher gesehen, dass auf Twitch Visual Studio streamt.
Guck mal, ob die immer noch streamen.
Ne, jetzt sind sie off.
Guck mal, die haben einen offiziellen Twitch Channel.
Und soll ich euch mal was sagen?
Nicht auf Mixer, sondern auf Twitch.
Die finden, das ist der Beweis, dass Microsoft Mixer selber kacke findet.
Wenn Microsoft ihr eigenes, ihr eigenes Developer Zeug auf Twitch streamt und nicht auf Mixer.
Aber ich sollte das mal nicht so laut sagen.
Sonst kommen die auf die Ideen, auf Mixer, das auf Mixer zu streamen.
Oh, guck mal, ich werde mir empfohlen.
Oh, was spielt, was spielt er hier?
15er Streak.
Black Ops.
Was für ein Black Ops spielt er?
Black Ops 4.
Wow.
Black Ops 4.
Geh fort.
Der Co-Founder von Mixer hat das Team verlassen.
Ja und?
Ach, die streamen auch auf Mixer.
Ah, okay, na dann.
Ach, die streamen auch auf Mixer.
Das müssen wir jetzt mal überprüfen, ob das stimmt.
Wahrscheinlich ist das Fake Channel, wo irgendwelches Porn Zeugs jetzt drauf ist.
Wo sieht man bei Mixer die letzten...
What?
Äh, wo sieht man...
Ein paar, paar Streams hier.
Okay, die streamen tatsächlich auf Mixer und auf Twitch.
Na gut.
Aber auf Twitch haben die Views und auf Mixer nicht.
GitHub WinForms Skin.
Ich muss mal ganz kurz gucken, ob es da irgendwas gibt noch.
WinForms Modern UI.
Naja, so modern sieht das jetzt nicht aus, ne?
Wow.
Modern.
Hier, das scheint voll angesagt zu sein, dieses Windows 8 Metro Ding.
Ey, ich...
Ey, guck mal.
Wir haben was gefunden.
Es wurde 2018 geupdatet.
Das können wir tatsächlich mal probieren.
Ich meine, es sieht, es sieht, es sieht aus wie Windows...
Es sieht aus wie Windows Crap, ja.
Aber ich meine, das ist eine Windows Anwendung.
Ey, besser, besser.
Ey, das ist doch, das ist doch schon mal...
Haben die eine List View?
Oh, die haben auch eine List View.
Okay.
Gibt's da, gibt's da eine List View?
List View.
Metro List View.
Das probieren wir mal morgen.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Doch, ich finde die, ganz ehrlich, ich finde die Plattform nicht gut.
Das UI gefällt mir nicht und du erreichst halt keine Leute.
Okay, kann ich so nicht sagen, ich kann nichts über die Plattform sagen, ich habe die Plattform nicht verwendet.
Aber das UI gefällt mir auf den ersten Blick nicht, das kann auch Gewöhnungssache sein, aber du erreichst halt irgendwie kaum Leute.
Microsoft hat wohl irgendwo zwischen 50 und 100 Millionen.
Also 50 und 100 wäre schon krass viel.
Aber, ich sag mal so, dass das auf jeden Fall ein paar Millionen sein müssen, war klar.
Das war halt der Deal für die Rente, so.
Aber 50 Millionen scheint immer ein bisschen, bisschen, bisschen orschviel zu sein.
Aber, ganz ehrlich, keine Ahnung, der hat den Deal für die Rente gemacht, nicht für, nicht für irgendwie Community erfreuen oder so.
Das war, dass er in Rente gehen kann.
War Ninja schon jemals ein Pionier der E-Sports Szene?
Maska95, also, ich verbinde Ninja jetzt nicht unbedingt als mit, als Pionier der E-Sports Szene.
Naja, Leute, ich gehe ins Bett.
Wir hosten jetzt, mal gucken, ob wir jemanden hosten können.
Es streamt gerade keiner was von denen, denen ich folge, was mich interessieren würde, deswegen hoste ich keinen.
Bob Ross, genau.
Ja, okay, das stimmt.
Äh, Ninja hat diese...
Dieses ganze Livestream-Geschichte so ein bisschen in, in den Fokus der, der Noobs gebracht.
Also, der, der Casuals, die keine Ahnung davon haben.
Aber ich würde es nicht E-Sport-Pionier nennen.
Ja, Fatality ist zum Beispiel E-Sport-Pionier.
Aber nicht, aber nicht, äh, Ninja.
Ninja hat halt dafür gesorgt, dass viele Leute jetzt wissen, dass es Livestreaming gibt.
Weil die Noobs, da ist es natürlich an den ganzen Bobs immer wieder vorbei geht, was angesagt ist im Internet.
Oh, okay, Leute, mal ein neues Video auf YouTube.
Wir sehen uns, macht's gut.
Bis morgen, tschüss, see you.
Bis morgen, tschüss, tschüss, tschüss, tschüss, tschüss.
