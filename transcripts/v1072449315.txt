Aber Mittwoch eine Projektpräsentation.
Ist es ein GIF oder ein GIF?
Ist es ein GIF?
Auch wenn der Erfinder angeblich mal GIF gesagt hat.
Manchmal wissen auch Erfinder nicht Bescheid über ihr eigenes Zeug.
Was hast du denn für ein Projekt gemacht?
Giantmaster 95.
Wieso? Reicht doch.
Scheiß drauf. Reicht.
Ganz ehrlich. Hauptsache du bestehst.
Note. Who cares.
Ernsthaft?
Wirklich?
Die haben die verloren.
Aber wenn du neu schreiben darfst.
Heißt das du schreibst eine andere Prüfung oder die gleiche nochmal?
Die IHK ist ein Haufen inkompetenter Volldeppen.
Ist echter Wahnsinn.
Abgeändert. Okay.
Bei mir waren die ja auch total unfähig.
Bei mir haben sie meine...
Sie haben mein Abschlussprojekt verloren.
Ihr Server ist gecrashed und hat meine Projektdokumentation nicht gespeichert.
Und haben dann gesagt ich bin durchgefallen.
Da habe ich ja schon mal ein Video zu aufgenommen.
Hauptsache bestanden.
Genau. So sehe ich das auch.
Moin. Michael Fuftspieljahren.
Also. Zeig mal was.
Er hatte das Projekt mit der Digitalisierung eines...
Ah. Ich erinnere mich.
Ich erinnere mich.
Das war wo man...
Ja. Ja. Ja. Ja. Ich kann mich dran erinnern.
Wo du geguckt hast was es für Automatisierungslösungen und Sensoren gibt und sowas.
Italiener Shop?
Ah. Hier. Du meinst...
Du meinst wo es die Nudeln gibt. Ja. Die sind richtig pock.
Warum ist das Stream in 48 FPS?
Ganz einfach.
48 FPS sind flüssiger als 30 FPS.
Aber du hast mehr Bitrate für jedes einzelne Bild übrig als bei 60 FPS.
Also only high IQ Stream...
Also. Schwachsinn.
Ich kann nicht reden aber mein Stream ist in 48 FPS.
Nur high IQ Streamer haben 48 FPS.
Und auch in Gaming Streams ist das top.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Auch für Leute die keine...
... keine gute Internet Verbindung haben.
Die beste Quali ist 986P at 48 FPS.
Klingt jetzt irgendwie schepp.
Aber wenn man auch...
Wenn man Gamestreams machen will und die Leute zugucken sollen
mit, mit...
... Potato Internet in Deutschland.
936P at 48 FPS.
So will ich das machen.
Leute ich hab...
Das...
ja es ist ungünstig platziert habe ich irgendwie gekratzt an der hand unten
oder die katze hat mich ich würde ja mal sagen die katze hat mich gekratzt
äußerst ungünstig ist genau an der stelle wo man über das mauspad schleift
wenn man die hand bewegt naja gut ich werde überleben genau 42 fps bedeutet
24 fps für jedes auge so sieht es aus so endlich mal einer der das gut mister
army war oft genug im stream der hat die erkenntnis da mittlerweile natürlich
jetzt big brain mäßig auch irgendwann mal ja also ob man nicht dran vorbei
auf dem stream ist hast du schon mal versucht was am ipad zu programmieren
habe ich nicht gibt es gibt es kann man machen es gibt ein paar javascript dinger
und so fürs ipad aber warum sollte ich alles in der welt auf dem ipad
programmieren wenn man auch tastatur verwenden kann
jane law moin ach so wie sie ganzen subs habe ich gar nicht vorgelesen
klocks hd ist wieder der abo falle 20
monate hyper subs tribün hier bock und hinterher gleich der kommentator als 19
monat am start der tainser vielen monate hier post repair each up muss die
freeksam statt drei monate wenigstens mal normaler subscriber nicht alle zwei
jahre plus hier rock heißt dankeschön leute für die ganze tzaps weißt du das
lohnt sich warum nicht warum nicht wegs dachte weg ist die neue chip coin
schlechthin. Toxie, danke für den
Sub. 17 Monate, auch Hyper-Subscription, ja.
Das brauchen wir?
Nee, das brauchen wir nicht.
Zu welchem Anlass, zu welchem Anlass
würdest du das denn verwenden?
KitKat, drei Monate lang
für den Sub. Huge Subscriptions, ja.
Ich hab schon so viele
Warum zeigt der das nicht an?
Warum zeigen der meine ganzen
FFZ und Bailout Twitch TV Emotes
nicht an? Was ist denn das hier?
Scammed.
Scammed, alle.
Sollte er normalerweise anzeigen.
Übrigens, hab ich euch schon erzählt, ich hab einen Impftermin nächsten Donnerstag.
Endlich krieg ich auch mal
eine Runde 5G injiziert.
Felix, dankeschön, 20 Monate.
IRQ-Subscription, ja.
5G-Injection, genau.
Zweite, da brauch ich keine Access-Points mehr,
wenn ich mich hab impfen lassen.
Ich bin dann quasi
Wandel der 5G-Mast.
Erinnert mich an so einen alten Witz,
den die Leute früher in der Schule immer gebracht haben.
Aber dazu müsst ihr wissen,
da waren so Sachen wie
Tschernobyl und sowas noch nicht so,
also nicht so extrem lange her,
wo ich in die Schule gegangen bin.
Und da gab's dann so einen Witz, so keine Ahnung.
Früher hat Max gelacht, jetzt strahlt er.
Oder sowas in der Richtung.
Heute strahlt man 5G.
Wenn man sich impfen lässt.
Richtig 3H-Joke, ja.
So, also.
Ah ja, was soll ich?
Was soll ich denn sagen, wann bin ich in die Schule gegangen?
Mit wieviel kommt man in die Schule?
Mit 7, oder? Mit 6?
Mit 6 oder 7 kommt man in die Schule.
Das war 1990.
Oder 1991.
Bin ich in die Schule
gekommen.
Das heißt,
in dem Alter, wo man dann dumme Witze gemacht hat,
war ich, keine Ahnung, 5 Jahre später.
Also
96.
Ja, ist halt so.
Soll ich euch mal sagen, ich werd bald 37.
Genauso wie der Frasier.
Alter, richtiger Pains-Champ.
Ich muss euch mal ehrlich sagen,
früher hab ich mir so Leute mit 36
oder 37 anders vorgestellt.
Ich hätte mir nie im Traum
früher denken können,
dass es Leute gibt,
die mit fast 37
den ganzen Tag vorm PC
sitzen, Twitch streamen
und sagen, keck weh.
Das hätte ich mir nie denken können. Ich hab gedacht, mit 36,
37
musst du,
keine Ahnung,
Haus,
Frau und zwei Kinder
haben und
zwei Autos
und irgendeinen dummen BWL
Bürojob machen.
So hab ich mir damals 37-jährige
Bausprachvertrag, genau.
So hab ich mir damals 37-jährige
vorgestellt. Aber
so haben sich die Zeiten geändert.
Man muss ja auch mal sagen,
so persönliche Entfaltung mäßig.
Kannst du heute schon halt viel mehr machen,
als früher.
Also, wäre ich
damals 37 gewesen,
wäre ich garantiert scherb angeguckt worden.
So nach dem Motto, wie, was ist los?
Und heute, heute juckt das keinen mehr.
Die heutige Generation
kriegt nichts mehr auf mich rein. Die heutige Generation
kann zumindest immer noch dick
und titten Fotos per Snapchat verschicken.
Das ist was, was ich beispielsweise nicht auf die Reihe
krieg. Das liegt aber zum größten Teil
daran, weil ich kein Snapchat hab.
Ich bin immer noch ganz hip.
Genau.
Ich bin ehrlich gesagt weder hip noch anti.
Wie nennt man das eigentlich?
Was ist das Gegenteil von hip? Rückständig?
Ich mach einfach das, was ich,
wo es mir danach ist.
Reaction-Stream auf was?
Twitch biggest Emote missed resolved.
Boppa.
Oder Boppa-Spin.
Jawoll. Das gucken wir uns jetzt aber nicht an.
Also heute machen wir Big Brain Programming, sag ich euch.
Wobei, wie Big Brain das wird,
bin ich mir noch gar nicht so sicher.
Ähm.
Weiß nämlich noch nicht genau, wie das Ganze
funktionieren wird. Ich zeige euch mal was.
Ich hab hier nämlich so ein Blog,
Blogpost gefunden von Microsoft.
Also, ich zeige euch jetzt erstmal das Problem,
was wir fixen müssen. Und zwar,
ich hab ja hier dieses, dieses Tool,
mit dem ich hier Overlay-Bildchen einblenden kann, ne?
So.
Also, das ist so ein Webinterface.
Das kann man, das hab ich auf dem zweiten Monitor
immer laufen. Normalerweise, das seht ihr nicht.
Und da kann ich hier so Bildchen einblenden.
Und unter anderem halt auch GIFs.
So. Und das Problem ist jetzt,
manche GIFs funktionieren wunderbar.
Manche GIFs vollkommen
okay.
Manche GIFs sind viel zu schnell.
So wie der hier am
Hypershitten ist. Weiß ich nicht, was der da treibt.
Genau.
Web Application 11 ist das.
Und dann gibt es GIFs,
die GIFs, die ewig
brauchen zum Laden. Guckt mal.
Ich klicke jetzt mal hier. Achtung.
Habt ihr gesehen, wie lange das braucht?
So. Und ich glaube, das liegt daran,
weil dieses
Overlay, was die Bilder malt,
das ist ein
ganz wild zusammengestückeltes
WPF
Programm.
Was weder Hardware beschleunigt läuft,
noch irgendwas. Es sagt einfach nur richtig
hart. Deswegen habe ich mir gedacht,
wir programmieren einfach ein neues
Overlay. Eins, was
per FFmpeg die GIFs
einliest und rendert.
Oder einliest und Bilder
draus macht. Und dann mit
DirectX oder Direct3D rendern wir das
in Fenster rein. Ich habe sowas
schon mal gemacht.
Vor ein paar Jahren. Da müssen wir vielleicht auch mal
abgucken später. Das Problem ist,
dass das Projekt, was ich damals dafür verwendet
habe. Also ich habe das nie fertig gemacht.
Und das Projekt, was ich damals für verwendet habe, gibt es
nicht. Das heißt, wir machen das jetzt
selbst. Und ich bin mir jetzt noch nicht
ganz sicher, ob wir Visual Studio verwenden.
Könnte man machen.
Oder ob wir uns Rider für Windows
installieren. Weiß ich noch nicht genau.
Nee.
Dann müsste es jetzt gecached sein.
Guck, es ist bei jedem Klick so.
Es müsste schneller gehen.
Also wenn es an der Dateigröße liegt,
müsste das schneller gehen, wenn es eingelesen
ist einmal. Soll ich Rider unter
Windows? Dann muss ich nachher gucken, wie ich das wieder runter kriege.
Herunterladen.
Rider. Nee. Ich hätte das ganze gern
auf äh
Kokona Language.
Kann man die Sprache hier umstellen?
Ja. Ja, ja. Ich will das auf
Englisch haben. Continue.
Guck mal. Das, das,
das verstehe ich manchmal nicht.
Warum gibt es denn die Auswahl
zwischen Echse und Zip?
Die Echse ist doch auch nur ein self-extracting
Zip, oder?
Das kann ich aber auch so
extracten. Das ist für die Leute,
die ein Programm nicht rechtsklick anklicken
können und sagen entpacken.
Oder wie? Oder was? Das müssen wir jetzt gleich mal ausprobieren.
Zip ist doch portable.
Ein self-extracting Echse ist äh
Zip als Echse ist auch portable.
Ah, manche Netzwerke lassen
Echse nicht zu.
Leute, Echse oder E-X-E?
Da scheiden, da scheiden,
ach nee, das ist gar nichts zum entpacken, oder?
Doch, ist es. Lull.
Da scheiden sich ja auch
die Geister. Echse?
Also
so wie der neue PogChamp. Okay.
Dann installieren wir das jetzt mal.
Ihh, Adminrechte.
Wofür brauchst du Adminrechte?
Adminrechte, lull.
Okay, also Echse ist anscheinend
beliebter. 64-Bit-Launcher.
Das ist mir doch vollkommen egal, wenn du hast das gelauncht,
Hauptsache das funktioniert.
Install JetBrains
Service. Was ist der
JetBrains ETV Service?
JetBrains ETV
Service. Was ist das?
Ja, erzähl, was ist das?
Performance Profiler
Dynamic Programmer. Brauch ich alles net.
Brauch ich net, weg damit.
Piss dich, Alter.
Diagnosedaten, lull.
Habt ihr das mit LinkedIn mitgekriegt?
Wo wir grad dabei sind?
Bei Diagnosedaten?
Habt ihr das mit LinkedIn mitgekriegt?
Yep, yep, leak.
Die Mario-Musik quackt überhaupt nicht ab.
Das Beste.
Oder hast du irgendeinen anderen Vorschlag?
Leaked in ist es jetzt, genau.
Ja, äh,
diesmal sind es angeblich 90%, 90%
der Benutzerdaten, was sich natürlich ein bisschen
bitter für mich ist, da ist mein Profil
auch dabei. Leider.
Leider ist da mein Profil auch dabei in dem
Leak. Flashbang.
Ja, ich wurde geleakt.
Mein LinkedIn-Profil wurde auch
geleakt. Wisst ihr, was ich
nicht verstehe, warum es dieses Profil noch gibt?
Normalerweise ist LinkedIn
immer ziemlich zackig dabei,
Fake-Accounts zu löschen.
Weil LinkedIn immer saumäßig
schnell Fake-Accounts löscht.
Aber den löschen sie irgendwie nicht. Ich weiß auch nicht,
warum. Der sieht wahrscheinlich
legit aus.
Die denken wahrscheinlich, der ist nicht fake.
Ich mein, als Cloud-Native
Agile Github-Solution
Chief-Engineer-Officer, da...
Kann man schon mal...
Übrigens, ich hab mich letztens mal eingeloggt.
Ich hab wirklich irgendwelche Headhunter-Messages bekommen.
Also, ich glaube, da sind Bots
dahinter.
Da müssen Bots dahinter sein.
Niemand würde mir sonst irgendeine...
Wer noch bei Verstand ist, würde mir hier irgendeine
Job-Anfrage schicken. Vor allem,
was soll das überhaupt sein?
Cloud-Native Agile Github-Solution
Chief-Engineer-Officer.
Okay, dann installieren wir den Kramer.
Warum ist das so langsam? Bestimmt,
wegen Windows Defender.
Bestimmt wegen dem Windows Defender.
Es ist einfach so langsam,
ohne Windows Defender. Wahrscheinlich
Java.
Aber ich glaube, das Ding hat mit Java noch überhaupt nichts zu tun.
Das entzippt einfach nur.
Na gut. Da kommen wir noch ein bisschen Chat.
Suche gerade nach einer
Stelle als Data Scientist oder
bisschen Python Backend.
Und da habe ich echt eine Job-Beschreibung gesehen, die mit Agile...
Das ist ja normal.
Das ist ja schon Standard mittlerweile.
Ja, ja, das
kommt schon vor.
Auch beliebt in Kombination
mit Cloud-Native.
Wie wäre es denn mit Cloud-Native
Agilist?
Nicht so Evangelist, haben sie ja gerne
bei Microsoft, sondern
Cloud-Native
Agile, das kann man gar nicht aussprechen.
Agilist.
GG Eats.
Was Cloud-Native eigentlich?
Ja, je nachdem, wen du fragst. Ein bisschen was anderes.
Also ich verstehe unter
Cloud-Native zum Beispiel sowas wie
Functions oder Lambda,
also AWS,
ist Lambda, ist das Amazon?
Also Azure Functions gibt's?
Oder war das
Google?
Ne, AWS Lambda ist das, ne?
Also ich verstehe unter Cloud-Native sowas wie beispielsweise
irgendwie, wie nennt man das eigentlich
korrekt?
Serverless Functions? Irgendwie sowas?
Also wurde ich halt im Prinzip
selbst nicht mehr um...
die Infrastruktur
kümmerst, sondern einfach nur
das benutzt, was die
Cloud dir zur Verfügung stellt, um darauf direkt
deine Dienste laufen zu lassen.
Das kann, das kann, das kann
unter anderem, meinetwegen nen
Azure, nen Azure Kubernetes Service sein,
das kann aber auch sowas wie AWS
Lambda sein, das ist egal, also irgendwas,
was dir nen Cloud-Anbieter zur Verfügung
stellt, wo du direkt Serverless
dein Zeug drauflaufen lassen kannst.
Wobei Serverless ja der größte Gbait
aller Zeiten ist. Serverless ist ja
alles nur
nicht Serverless. Du
hast keinen Server, aber ausgeliefert
wird dein Zeug trotzdem.
50 was? 50 plus? 50 Minuten
plus?
Oder 50 Sekunden?
Nice. Excellent.
Agiler Software-Engineer.
Männlich, weiß, deutsch, dann ist ja alles gut.
Wenigstens suchen sie die richtigen Leute dafür.
Ach 50 habe ich... Das können wir uns auch mal
irgendwann angucken.
Serverless, Brainless, ja.
Können wir uns auch mal angucken.
So, hat das jetzt installiert?
Nice. JetBrains.
Nein.
Nein.
Kann man damit überhaupt Windows Forms gedöhnt
machen? Kann das JetBrains?
Kann, kann... Leute, wisst ihr das?
Kann JetBrains Windows Forms unter
Windows, ja?
Sollt... Ja, ich hab das noch
nie ausprobiert.
Ich benutze das nur unter Linux. Ihr wisst ja, ich
programmier im Prinzip die letzten 3-4
Jahre fast, wenn es .NET ist, fast exklusiv
mit Rhino unter Linux.
Es sei denn, ich muss halt Windows Zeug machen.
Doch, hast du... Hab ich... Was?
Nee, wann soll ich das gemacht haben?
Hab ich das... Nee, kann ich mich nicht dran erinnern.
Gut, das heißt mittlerweile
nichts mehr, wenn ich mich da nicht dran erinnern kann.
.NET 6 testen?
Das kann sein, dass du sagst, das kann
tatsächlich sein.
Ja, du hast recht. Ich glaub, ich glaub,
dass... Ja, ja, das kann sein.
Disable Unity Support
Team Foundation Server, Alter.
Das ist so schlecht,
das ist so schlecht,
dass sogar bei mir auf der Arbeit, wo
sie alle totale Microsoft Fans sind, das
keiner wollte.
Wir sind sogar mittlerweile so advanced, dass
wir Sachen auf GitHub, auf GitHub legen.
Übrigens, muss ich wieder, muss ich wieder
geile, geile Story von der Arbeit erzählen.
Bei uns haben sie so seit 1-2 Jahren
haben sie so, haben sie den
die...
Wie umschreib ich denn das jetzt?
Da haben sie so
das, das
gelobte Cloud-Land
ausgerufen vor so 2 Jahren. Also sprich,
sie haben gesagt, alles was
wir machen, nur noch Cloud.
Cloud only.
Vorher haben sie gesagt, wie Microsoft,
wir machen Cloud first.
Jetzt haben sie gesagt, seit letztem Jahr, wir machen
Cloud only. Nur noch
Cloud. Alles Cloud machen wir.
So, und das ging so
sogar so weit, dass jemand von unseren
von unseren Managerleuten
sich hingestellt hat
und sinngemäß sowas gesagt hat, wie
man dürfte eigentlich schon gar nicht mehr
erwähnen, dass man
Bedenken hat, einen Service in die Cloud
zu packen. Es gibt keinen Grund mehr, etwas
nicht in die Cloud zu packen.
Cloud only. So, das haben sie jetzt
ungefähr ein Jahr durchgezogen, haben auch
richtig krasse
Präsentationen
und so gehalten, so nach dem Motto, wie
visionär man ist und alles.
Okay,
und jetzt, und jetzt
ist ihnen
aufgefallen, fuck,
das geht ja gar nicht.
Und jetzt, also wir haben
relativ viele Teilsysteme,
aber wir haben drei große Systeme.
Wir haben drei richtig große Systeme,
die ungefähr zusammen aus
bestimmt
5000 VMs
aktuell bestehen.
Also da ist wirklich, das ist wirklich
relativ, relativ viel, so.
Und da hat man jetzt gesagt, ach nee.
Ja, da ist ja der
Aufwand viel zu groß, das in die Cloud umzuziehen.
Das heißt, wir machen
jetzt weiterhin Cloud only,
aber die drei größten
unserer Systeme machen wir nicht Cloud.
Das wurde erstmal aufgeschoben.
Also ist halt die Frage, inwieweit
Cloud only eigentlich noch Cloud only
ist. Also da
habe ich heute, das habe ich heute nicht genau verstanden,
muss ich ehrlich sagen.
Zumindest hat man sich dafür entschieden, die
schwierigsten und größten Systeme erstmal nicht in die Cloud
zu packen. Und
ja, ja,
Keeper XY, so ist es.
Ich habe es für dich ausgedacht.
So, also das macht mir jetzt nichts.
Also wir haben beispielsweise einmal, ich kann euch das ja grob umschreiben,
wir haben einmal ein System
für den Außendienst,
das unterstützt den Außendienst.
Dann haben wir noch ein
zweites System für den Außendienst.
Da können die sich beispielsweise News
angucken und irgendwelche
ähm
Sachen bestellen und sowas.
Und dann haben wir noch ein System,
wo
Leute, wo der Außendienst
ihre iPads besser verwenden kann.
So, diese drei Sachen haben wir.
Und diese drei Sachen, das sind die
mit der Abstand größten Systeme, die wir haben.
Die wollen wir jetzt nicht mehr in die Cloud packen.
Das hat man sich jetzt anders überlegt.
Also es heißt im Prinzip
aus Cloud only
wurde ähm
Cloud only außer fast alles.
Und da habe ich mir gedacht so,
heck wait, Moment.
Irgendwie
ist only, only
bedeutet für mich ein bisschen was anderes.
Aber gut, ich muss den Kram
nicht entscheiden und ich sage euch ganz ehrlich, mir ist es auch
ehrlich gesagt vollkommen egal.
Ähm
Nein, wollen sie nicht.
Ich kann dir das morgen, kannst du mich morgen anschreiben, dann kann ich es genau erklären.
Das kannst du jetzt hier im Chat nicht sagen.
Ne, wollen sie nicht, wollen sie nicht.
Genau, ja.
Also man könnte alles easy als VM machen,
aber das wollen sie erstmal nicht, weil auch der
Umzugaufwand zu groß ist.
Denen ist dann aufgefallen, dafür bräuchte es der irgendwie
100 Mann, die sich da drum kümmern,
dass es bis Ende des Jahres was wird und dann
wollten sie nicht mehr.
Nun gut, also so viel zum Thema Cloud only.
Und was auch witzig war,
was auch noch geil war,
ähm
der letzte
Versuch was in die Cloud zu packen,
was ein bisschen bedeutsameres,
ist auch richtig massiv
in die Hose gegangen.
Wisst ihr eigentlich, wie teuer
das ist, 200 Terabyte
in SSD
Storage in die Cloud zu legen?
Ich glaube, das habe ich euch schon mal
erzählt. Es ist teurer,
als man sich gedacht hat.
Und zwar müsst ihr euch vorstellen,
die wollten ein paar VMs
in die Cloud stellen und
ähm, insgesamt
sollten dann 200, ich glaube
250 Terabyte sind es sogar,
Daten an diese VMs hängen.
So, und
da haben wir dann Teststellungen
aufge...
aufgebaut und
auf einmal kommt dann irgendjemand
von der Kostenstelle von Cloud
und sagt, Jungs, Jungs, macht alles aus!
Macht alles aus!
Hä?
Warum?
Warum soll man alles ausmachen?
Und da meinte er, jaja, wenn wir das einen Monat laufen lassen,
dann kostet es 80.000 Euro!
Er sagt, ah,
okay, aber
wir brauchen das
wir
also, wir brauchen das aber
eigentlich noch
noch mindestens 12 Mal
und ja, dann
naja.
Und da hat man sich dann dafür entschieden,
das ist dann doch ein bisschen zu teuer und man lässt
es lieber bleiben. Also unsere
aktuelle Cloud
ähm, Roadmap
ist nicht so erfolgreich,
wie man sich das ausgemalt hat.
Ich hab das vorhin aus...
Ich hab das vorher ausgerechnet. Natürlich,
sogar im Calculator siehst du, dass das teuer ist.
Wir haben das doch mal zusammen ausgerechnet.
Wir hatten das doch mal zusammen im Azure Calculator
ausgerechnet.
Da hat doch allein schon eine VM
irgendwie 9000 Euro
oder sowas gekostet.
Premium-SSDs, Premium-SSDs
sind teuer, ja.
Tja.
Weil Speicherplatz in Azure
verdammt teuer ist.
Ja, SSD-Speicher.
Genau, genau.
Jetzt hast du getwittert.
Ja, ich muss ja mal gucken, dass ich die Sachen möglichst
vage twittere, ja.
Ja, AWS nimmt sich nicht so viel.
Das nimmt sich alles nicht so viel.
Ja, das ist auch geil.
Ja, es ist eh geil.
Ach ja, und übrigens noch viel besser,
dann kam ein Microsoft-Experte
oder besser gesagt, wir haben noch einen Microsoft-Experte
hinzugezogen,
weil du hast ja in Azure mehrere Varianten,
wie du Files verwendest.
Du kannst entweder eine VM nehmen
und hängst eine SSD dran.
Das ist teuer.
Äh, Hetzner, ich habe sogar vorgeschlagen,
wir gehen zu Hetzner, wollten sie aber nicht.
Ich habe gesagt,
ich habe sogar Startkapital.
Ich kann euch einen 20-Euro-Gutschein geben.
Ausrufezeichen Hetzner,
wer seinen 20-Euro-Hetzner-Startgutschein
noch nicht abgeholt hat.
Nur für Neukunden, by the way.
Für euch ist das eine super Geschichte.
Wer schon immer mal Hetzner
sich ein paar VMs oder Cloud-Server ausprobieren will,
kann das jetzt machen.
20-Euro-Startgut haben Hetzner Cloud.
Gültig bis Ende des Jahres.
Und da könnt ihr ein paar Server
durchaus zwei, drei Monate laufen lassen.
Auch richtig Server mit ein bisschen Wumms.
Gar kein Problem.
Einmal mit Bitcoin zahlen.
Musst du anonym bleiben
oder was, weil du da irgendwelche
komischen Dinge hosten willst?
Nein, ich glaube, man kann da nicht mit Bitcoin bezahlen.
Du kannst mit PayPal bezahlen
und
du kannst überweisen, glaube ich.
Kreditkarte bin ich mir gar nicht so sicher.
Ich glaube, das geht auch nicht.
Nö. Haben sie nicht.
Die haben keine.
Da hat eh kaum einer irgendwie...
Es ist merkwürdig.
Auf der einen Seite
sagen sie bei uns immer so nach dem Motto,
ja, ja, das machen wir jetzt
und es darf eigentlich keiner was gegen sagen.
Und ein halbes Jahr später
kommen sie dann alle selbst auf die Idee.
Das war doch keine allzu gute Idee.
Die Sachen mit Hirn machen.
Und dementsprechend muss man auch erstmal
Leute, die Ahnung von der Materie
haben, fragen und ein bisschen
forschen lassen, bevor man irgendwas
sagt. Aber wenn man halt einfach nur irgendwelche
Dinge raushaut, ohne sich das genauer angeguckt
zu haben, dann kommen halt solche
Sachen bei raus.
Datenbank-Tools brauchen wir nicht. Version-Control
brauchen wir auch nicht. Wir checken doch nichts
ein. Wozu?
Overrated, she baited.
Ah, komm. Zumindest
Shit können wir aktivieren.
Brauchen wir alles, ne?
Next.
Ah, next.
Ja, unter Windows mach ich das
sogar lieber, weil
die Git-Shell unter Windows ist wirklich
richtig massiver
Hardcore-Paints-Champ.
Continue.
Okay, new solution. Wie nennen wir das Ding?
Overlay.
Overlay-Champ nennen wir das.
Wir machen eine
.NET Core
Desktop-Application
Und zwar Windows Forms, was sonst?
Oldschool-Geschichte. Wir werden übrigens
Weil ich ne Windows-Anwendung
machen will, da muss ich mit
Windows machen. Da bleibt mir nicht viel anderes übrig.
Elektron ist tatsächlich nice.
Ich muss sagen, ich find Elektron echt nicht
übel. Ich flame Elektron ja immer
so, aber das liegt daran, dass Elektron an sich
sackt, was Arbeitsspeicherverbrauch und
Binary-Größe
angeht. Aber
wenn man ein bisschen Web-Entwicklung kann, ist
Elektron wirklich ne super Geschichte.
So, also Overlay-Champ.
Same Directory.
So, wir werden von Windows Forms nicht viel verwenden.
Wir machen ein Fenster und dann löschen wir den Hintergrund
und das war's. Den Rest malen wir selbst.
Ich muss aber echt noch gucken. Ich hab
beinahe echt keinen Plan, wie das funktioniert.
Create.
Ich glaube nicht, also
mein Ziel ist heute, dass ich irgendwas
auf dem Bildschirm gemalt bekomme.
Ne Kreise oder sowas. Irgendwas
mit DirectX.
Rest.
Er bitte noch kleiner.
So.
Hat das nen Forms-Editor?
Hat kein Forms-Editor. Oh,
Open Designer.
Massive.
Zeig mal her. Ist das jetzt wirklich
ein Windows Forms Designer in
Java implementiert? Das ist wirklich
Next Level Shit.
Schnell ist er nicht.
Tatsächlich. Oh, sieht...
Gut.
Wir müssen da ja nichts machen. By the way, ich muss...
Ich brauch den Designer gar nicht, ne?
Also ich brauch den Designer. Ich werd 0 im Designer
machen.
Kann man den Krempel hier mal wieder wegmachen?
So ein bisschen was sieht.
Wo ist das Terminal?
Terminal.
Terminal Plugin.
Terminal. Jawoll.
Git.
Unter Windows, Alter.
.NET Run.
Da ist es. Bam. Huge.
Massive. Window.
Am Start.
Was? Mal ne Frage.
Ich bin von...
Ich bin von Windows
auf Debian umgestiegen fürs Entwickeln.
Aber die VM-Geschichte geht mir ein wenig
auf den Nerv. Überlege jetzt als Zwischenlöser
ein MacBook
zu kaufen. Was nervt
dich denn an der VM?
Wie gesagt, ich benutze es ja im Prinzip auch
täglich.
Linux über die VM.
Da gibt's wenig Probleme,
muss ich ehrlich sagen.
Man muss es einfach auf dem zweiten Desktop machen,
im Fullscreen, und dann ist gut.
Benutzt ihr auf der Arbeit
ESC-Sharp oder Java?
Java.
Ich glaub, ich bin der einzige .NET-Fan
bei uns auf der Arbeit.
Klar kann ich mich da dran erinnern.
Warum? Ich bin doch jeder einzige, der das verwendet.
Ja, also
von mir nicht.
Was machst du gerade?
Ein GIF-Player, genau.
Ich glaube nicht, dass wir heute
so weit kommen, dass da ein GIF drinläuft.
Ich bin froh, wenn ich es schaffe, mit DirectX
einen Kreis zu malen
oder sowas.
Und einen transparenten Hintergrund zu haben.
Sarusmaster, danke für den Sub.
Du kannst die VM nicht mitnehmen.
Achso, ja, okay.
Das verstehe ich. Wenn du was mobiles haben willst,
dann brauchst du natürlich irgendeinen
Notebook. Aber ich meine, da könntest du dir auch
einen Notebook holen und direkt Linux drauf
installieren. Läuft ganz okay.
Vor allem, wenn das ein IBM, äh, ein
Lenovo ist.
Wird überhaupt viel C-Sharp benutzt?
Ja, ja. Richtig
viel. Es gibt mittlerweile
auch ziemlich viel C-Sharp-Software. Muss mal gucken.
Das ist auf GitHub ziemlich
aufsteigend. Ja, aber Unity ist natürlich
bei der Game-Entwicklung ganz vorne mit dabei.
Ne, ne, gibt aber auch noch jede Menge anderes Zeug.
Haben wir versucht.
Haben wir es sogar im Stream gemacht. Ging ohne
Probleme. Lief aber nicht
so gut.
Halt relativ lahm.
Nö, das nimmt sich nicht viel. Ja,
finde ich auch. Das nimmt
sich nicht viel.
Java-Performance, C-Sharp-Performance, das nimmt sich nicht
viel. Okay, also, wo fangen wir jetzt mal
an? Das erste, was wir machen müssen ist,
wir brauchen ein durchsichtiges Fenster.
So, und jetzt, und jetzt, jetzt passt
mal auf, ich hab mega Big Brain-Artikel
bei Microsoft gelesen dazu.
Und zwar,
und zwar,
ich hab mir das doch hier irgendwie kopiert.
Ja.
Massive Artikel von Microsoft
gelesen von superaktuell
2014.
Ist aber egal. An diesem ganzen
DirectX-Windows-Krams erinnert sich ja eh nix.
Hier wurde alles schon mal gemacht.
Sogar Kobold programmiert. Das ist richtig.
Wir haben letzten Weihnachten Kobold programmiert.
Und nicht zu knapp.
Inklusive Dateien auslesen und schreiben
und sowas. Und das war richtig Kacke.
Das war richtig Kacke.
So, aber wir
lesen das jetzt nicht. Übrigens, Microsoft
schafft es immer noch nicht richtig Code ordentlich
zu formatieren. Und hier sieht man wieder schön
C++ ist
einfach eine brutalst
zutiefst hässliche
Programmiersprache.
Ne, FORTRAN hatten wir noch nicht.
Aber wir machen ja auch kein C++. Also,
es gibt zwei
Probleme. Oder wie sagt man so schön?
Zwei Herausforderungen, die wir
hier bewältigen müssen.
Das erste ist, der Beispielcode
ist in C++.
Und
ich mach das in .NET.
Das heißt, ich muss irgendwie C++ zu C Sharp
übersetzen. Und das zweite
ist, ich habe
früher immer Sharp DX verwendet
als Direct, also immer. Ist nicht so,
dass ich da viel mitgemacht hätte. Aber wenn ich es verwendet habe,
dann das.
Das ist ein DirectX
Wrapper gewesen für C Sharp.
Das Problem ist nur, das wird seit
drei Jahren oder so nicht mehr aktualisiert. Bäm.
End of life.
Das heißt, wir verwenden heute was Neues
dafür. Als erstes
muss ich jetzt aber mal gucken, da ist schon mal ein Fenster dran.
Und das sollte relativ
easy sein. Das kann ich mir nämlich sogar abgucken.
Hallo?
So, um sein Fenster transparent zu
bekommen, so, gibt es hier nämlich
neun, also
wir können nicht einfach das normale
transparent verwenden. Leute, jetzt wird's
Six Head Time. Also,
es gibt unter Windows
zwei Möglichkeiten, Fenster transparent zu
machen. Es gibt
Layered Windows und
Make Transparent oder VS Transparent
oder sowas.
Das funktioniert.
Das Problem ist aber, dass der komplette
Fensterinhalt dann
CPU gerendert wird.
Software gerendert wird. Das ist übrigens
auch eines der Probleme, die
mein aktuelles Overlay haben.
Das hier ist alles
Software gerendert, das Overlay.
Also, die müssen jeden
einzelnen Pixel checken, ob der durchsichtig
ist oder nicht und dann den passenden
Hintergrund machen. Also, das ist lahm.
Das seht ihr auch daran, wenn ich
ein Spiel laufen hab und hier
die Bilder als Overlay mache,
dann ruckelt das.
Das liegt daran, weil das
unter der Haube CPU gerendert ist.
Das geht nicht anders
mit der alten Variante. Also, man kann
diesen Kram nicht
transparent machen
und
mit dem alten Verfahren.
Also, das ist ein Problem. Das wird zwangsläufig
dann CPU gerendert.
Jetzt gibt's was Neues, also
Neu. Neu.
Seit 2014.
Jetzt gibt's was Neues. Und zwar,
man kann jetzt sagen, hey,
man macht das Fenster
man macht das Fenster
WSX No Redirect
Bitmap.
So, Chat. Und jetzt sollte eigentlich
alles klar sein, oder?
Also, jetzt sollte glaube ich jeder
wissen, was gemein ist.
Obvious.
Nein, ich hab ehrlich gesagt keinen blassen Schimmer, was
es macht.
Ähm.
Ist das neu seit Windows
8
und das ist die schnellste
Variante, um
transparente Fenster
zu
rendern. Also,
die schnellste Variante, um
komplett
transparente Overlays zu rendern.
So. Ähm.
Das heißt, wir müssen das Fenster
jetzt transparent machen und dann
müssen wir dort irgendwie mit DirectX reinmalen.
Das Schöne ist, wir machen das mit Windows Forms.
Das ist zwar oldschool,
aber für diese Variante ist das richtig gut,
weil wir brauchen ja nur ein Fenster.
Warum nicht direkt zu OBS einspeisen?
Äh, ganz einfach, weil ich es dann selbst
nicht sehe. Ich hab das ja so gemacht, dass
ich selbst die Bilder sehe.
So. Und das heißt, wir müssen
es jetzt transparent machen und dann
dort per DirectX
oder Direct2D
selbst was reinmalen.
Und das Ziel ist, dass ich dann quasi mit
FFmpeg die GIFs decode
und die einzelnen Bilder
dann per Direct2D
reinmale in das transparente Fenster.
Man könnte das sicherlich
mit Vulkan machen.
Da habe ich noch weniger Ahnung von.
He lacks critical information.
Aber ich kann das, wenn ihr wollt,
auf GitHub pushen und wenn irgendjemand eine Vulkan
Variante implementieren will,
kann er das machen, habe ich keine Schmerzen mit.
Ich werde ihn nicht
bannen dafür.
Wenn einer denkt, ja, ich will das mit Vulkan machen,
dann soll er machen.
Also, wir fangen jetzt mal an.
Das erste kann ich mir abgucken.
Das ist ganz einfach.
Wäre es nicht auch eine Idee, das mit Unity zu machen?
Kenne ich mich noch weniger aus.
Gehen tut es bestimmt auch ohne Probleme.
Wahrscheinlich ist das, wenn man
eine Ahnung davon hat, das mit Unity
sogar relativ easy zu machen.
Kann man das in Ruby machen?
Ah, KeeperXY ist noch da.
Weil er das Ruby sagt.
Den kennst du auch noch, oder?
Den Ruby-Mann bei uns.
Er ist schon weg.
Okay, also fangen wir mal an.
Wir müssen jetzt etwas fenstertransparent machen.
Aktuell sieht das Fenster halt so wie ein Standard-Fenster aus.
Okay.
Das kann ich mir abgucken.
Da weiß ich nämlich, wie das funktioniert.
Das habe ich nämlich schon mal gemacht.
Das ist easy.
Naja, verhältnismäßig easy.
Und zwar muss man sagen,
wenn das Fenster erstellt wird,
möchte man ein paar Optionen
setzen.
Äh.
Da muss ich hier was reinschreiben.
Genau.
Und da kann man jetzt was reinschreiben.
Und ich werde jetzt was copy-pasten aus einem alten Projekt.
Und euch zeigen, dass es funktioniert.
Easy.
Ich erkläre es dann auch gleich.
Aber ich muss ja hier nicht so tun, als habe ich keine Ahnung,
wie es funktioniert, wenn ich es eigentlich schon fertig habe.
Ähm, genau.
Oh, das allerwichtigste habe ich vergessen.
Spaces.
Äh, Spaces.
Wo macht man das nochmal?
Wo macht man...
Indent...
Oh, fuck. Wo ging das nochmal?
Wo kann ich nochmal einstellen?
Weiß das jemand? Wo stellt man diesem
Intelli-J-Kram nochmal ein,
wie viel Spaces eine Datei
verwenden soll?
Ist das irgendwie Code?
Coding-Guides oder irgendwie sowas?
Tabs?
Ne. Ha! VB-Net.
Indent.
Ne, das ist VB.
Wieso nicht mal Visual Studio?
Weil der Chat hat sich
Rider mal unter Windows gewünscht.
Okay.
Das muss ich jetzt.
Rider to Spaces.
Indent.
Settings, Editor, Code-Style.
Genau. Settings, Editor, Code-Style.
C-Sharp, sind wir doch richtig?
Hier ist es doch.
Indent-Style, Spaces und wir wollen...
Ups, was habe ich jetzt gemacht?
Wir wollen 2.
2.
Save.
Und jetzt reformat.
Ja.
Oh.
Der hat es nicht gecheckt. Guck mal.
Äh.
Kequate?
Das sind nicht 2. Ne, passt nicht.
Ich will 2 Spaces haben.
Das sind 4.
Das sind nicht 2, das sind 4.
1, 2, 3, 4.
Ähm.
Okay.
Ja, ist es jetzt.
Achso. Ja, das stimmt. Ihr habt ja recht.
Guck mal. Was mich verwirrt ist, ist das hier.
Das sieht nicht richtig aus.
Das sieht nicht richtig aus.
Irgendwas stimmt hier nicht.
Das sieht nicht richtig aus.
Das hier ist richtig.
Aber die Einrückungen stimmen doch irgendwie nicht.
Ah.
Ich start mal neu.
Ich glaube, das ist Broken.
Der Overlay-Champ.
So sieht das viel besser.
Okay.
Alles klar.
Aus irgendwelchen Gründen hat sich jetzt die Schrift geändert.
Aber okay.
Also, passt.
So, von der Idee her sollte jetzt folgendes passieren.
Jetzt stimmen die Dinger.
Also, von der Idee her sollte jetzt folgendes passieren.
Das ist Magic.
Das ist Windows-Magic.
Also, ähm.
Der sagt jetzt, es soll ein Popup-Window sein.
Popup-Window hat keinen Rahmen drumherum.
Popup-Window hat keinen Rahmen drumherum.
Äh, kein Background.
Das da
ist, by the way,
das da aus diesem Blog-Artikel.
Äh, wo ist der?
Das da ist, ist, äh,
das da.
Aus irgendwelchen Gründen habe ich das damals so genannt.
Aber, wenn man mal nachguckt.
Das ist ja Windows-Logik.
Also, das ist
ein 0x002
ein 0x002
und das ist 0e002.
Was auch immer.
Und damit kann man sich da eigentlich sparen.
Es ist Windows.
Es ist egal.
Das muss man nicht verstehen.
Zumindest, es ist ein Popup-Window, ein Popup-Fenster.
Ohne Hintergrund.
Was keinen Fokus kriegen kann.
Äh.
Das transparent und layered ist egal.
In diesem Punkt.
Hat eigentlich nichts zu tun.
Das muss ich nur machen, dass ich durchklicken kann.
So, und wenn ich das jetzt ausführe,
seht ihr, dass ihr nichts seht.
Weil das Fenster ist transparent.
Also, das Fenster ist da.
Ihr seht es bloß nicht.
Und aus irgendwelchen Gründen kann ich es jetzt nicht stoppen.
Warum kann ich es nicht stoppen?
Hallo?
Wie bricht man in Windows was ab?
Steuerung C ist es nicht.
Wie beendet man in Windows was?
Ich beweise euch, dass es übrigens läuft.
Das hier ist der Overlay-Champ.
Echse. Da ist er.
Zack.
Kann man nicht Ctrl-C drücken?
Dann starten wir jetzt hier Ubuntu drinnen.
Jetzt haben wir eine Bash.
Ach nee, da kann ich es ja nicht ausführen.
So schlecht.
So schlecht, dieser Windows-Crap, Alter.
Doch, wir können Ubuntu drinnen starten.
Dann gehen wir jetzt einfach nach...
Äh...
By the way, warum?
Ich kann es doch eigentlich auch einfach hier drüber starten, oder?
Ja, ist vielleicht sogar besser.
So, also das Fenster ist unsichtbar.
Ich zeige euch jetzt, dass das prinzipiell funktioniert.
Weil, ich mache jetzt mal das Popup weg.
Dann sollte man eigentlich was sehen.
Oder auch nicht.
Ach so.
Transparency machen wir auch noch weg.
Nur
No-Background lassen wir da.
Guck, da ist es.
Leute, seht ihr?
Das ist ein Fenster mit transparentem Hintergrund.
Also mit nicht vorhandenem Hintergrund.
So.
Und der riesen Vorteil versus
der anderen Variante, wie ich es jetzt mache.
Also jetzt hier mit diesem Overlay ist.
Das hier ist komplette
GPU
gerenderte Transparenz.
Also hier muss der keine einzelnen
Pixel abgleichen auf der CPU.
Sondern es ist einfach komplett
Hardware Accelerated Transparenz.
So.
Also pock. Also schneller.
So, das ist aber gar nicht das eigentliche Problem.
Das ist nicht das einzige
Das ist nicht das eigentliche Problem.
Das ist easy. Das wusste ich schon, wie das
Wie das funktioniert.
Wie bekomme ich jetzt was rein
in dieses Fenster, ist das eigentliche Problem.
Weil
das Fenster ist kein
klassisches Windows Forms Fenster mehr,
wo man was reinmalen könnte.
Man muss jetzt wirklich sagen, hey
DirectX Device
anlegen und von Hand in dieses
Window reinrendern.
Weil ihr seht, das aus einem
Rand hat das Ding nichts.
Und da bin ich jetzt aufgeschmissen.
Ich weiß prinzipiell, wie es funktioniert.
Ich kann einen Button
drauf platzieren, den wirst du aber nicht
sehen.
Weil ich sicher bin, ob man
den kannst du
den wirst du nicht sehen, den Button.
Ich mache einen Button drauf, weil ihr seid hier
Button
Button? Okay, wunderbar.
Button am Start.
Und man sieht, dass der
Button
nicht da ist.
Weil der keinen Inhalt rendert.
Also ich muss alles selber
rendern. Was ist das eigentlich für ein Kack
mit der Schriftgröße?
Warum kein WPF? Mein Akt
aktuelles Overlay ist WPF.
Also das, wo die ganzen Bilder sind,
das ist WPF.
Das Problem ist nur, dass das erstens
ziemlich langsam ist, gerade wenn man Spiele
drunter laufen hat. Und zweitens
aus irgendwelchen Gründen
manche, ich zeige es dir
mal, manche GIFs
extrem
langsam laden oder
verbuggt sind. Zum Beispiel das GIF
ist verbuggt, das erkennt man sofort, das ist viel zu schnell.
Und dieses GIF braucht
hier, Moment, Klick.
5 Sekunden
bis es überhaupt geladen wird.
Das ist ein Zusammenspiel aus diesem
WPF GIF Plugin
oder wie auch immer das heißt.
Diese GIF Komponente
und WPF selbst.
Gerade die
Performance, wenn du ein
Vollbildspiel im Hintergrund hast, ist das Problem,
dass WPF Transparenz
komplett CPU gerendert ist.
Weil er halt gucken muss, wo man
durchklicken kann.
Obwohl ich eigentlich komplett alles
klickbar haben will.
Es ist auch egal, es ist ein schöner Anlass
mal zu gucken, wie man sowas selbst malt.
So, ich weiß prinzipiell, wie es funktioniert.
Wir haben vor
2 Jahren oder so mal was ähnliches gemacht.
Die Sache ist nur die,
das habe ich damals gemacht mit SharpDX
und SharpDX gibt es nicht mehr.
Ich habe jetzt gesehen, es gibt ein neues Projekt
und zwar, das nennt sich
also ich brauche irgendeinen DirectX
Wrapper für
.NET. Ich habe gesehen, es gibt ein neues
Projekt, das nennt sich
Fortis.
Fortis?
Das ist
auch ein Csharp
DirectX Wrapper.
Das da.
I.
Das heißt, das installieren wir jetzt mal
und gucken, ob wir es irgendwie schaffen
unter Zuhilfenahme,
ich muss jetzt das Projekt nochmal raussuchen,
was wir vor 2 Jahren verwendet haben.
Unter Zuhilfenahme des alten
Projekts von vor 2 Jahren
und schauen, dass wir da irgendwas
fenster rein gerendert bekommen über über direct 2d und ich bin auch
normalerweise nicht der grafikprogrammierer ich habe da
eigentlich gar keine ahnung von aber irgendwie kriegen wir das schon
gebacken sondern nächste schritt ist zu gucken wie kriege ich da bilder rein
pp pp please musik ok also ich installieren kann jetzt mal hier nur
jetzt wortes oder wo word ist keine ahnung was ausspricht also das brauchen
wir nicht wir brauchen direct 2d würde ich sagen
auf jeden fall ich habe damit übrigens respekt mehr ich
habe damit ich habe damit auch noch nie was gemacht
so und dann auchляu 3df mit zwölf fange ich nicht an bin ich zu nudig für ich
bleibe das was schon mal benutzt habe
glück
okay passt also und jetzt muss ich mich im studio aufmachen und schauen dass ich das projekt wieder
finde was wir vor zwei jahren oder so mal gemacht haben wird das gif allerdings mit dem alten und es
hat nie richtig funktioniert muss ich auch dazu sagen aber zumindest zumindest teile davon kann
ich mir raussuchen welches davon könnte es sein windows form app 3 windows 11 oder ist es vielleicht
sogar web application 11 ja was könnte es denn sein oder es ist app 1 oder console app 13 ja
wenn ich meine sachen so gut benennt oder okay was könnte es denn sein es ist es ist windows
forms auf jeden fall guck mal windows forms geht doch gar nicht so so viel ich brauche eine windows
form app die ffm pack drin hat windows form app 2 ffm pack
das ist ja nicht so einfach das ist ja nicht so einfach das ist ja nicht so einfach das ist ja nicht so einfach
ist es wahrscheinlich sogar gift decoder form 1 ist es wahrscheinlich sogar gift decoder form 1
das ist es glaube ich boah ist viel zu groß was ist das für eine schrift man guck mal da habe ich
auch so komisches zeug hier gemacht das ist ffm pack hier ist das ganze directx zeug genau das
brauche ich jetzt monka s okay also mein ziel für heute ist eigentlich was total einfaches
ich will ein fenster haben in das ich per directx was reinnehmen kann ich will ein fenster haben in das ich per directx was reinnehmen kann
ich will ein fenster haben in das ich per directx was reinnehmen kann damit bin ich schon mal zufrieden
damit bin ich schon mal zufrieden wenn ich schaffe per directx einen rechteck
wenn ich schaffe per directx einen rechteck
wenn ich schaffe per directx einen rechteck rein zu malen bin ich schon komplett happy
rein zu malen bin ich schon komplett happy
rein zu malen bin ich schon komplett happy für heute also wir haben diesen blog
für heute also wir haben diesen blog
für heute also wir haben diesen blog artikel an diesem blog artikel handeln
artikel an diesem blog artikel handeln
artikel an diesem blog artikel handeln wir uns jetzt mal ein bisschen lang das
wir uns jetzt mal ein bisschen lang das
wir uns jetzt mal ein bisschen lang das problem ist nur dass der blog artikel
problem ist nur dass der blog artikel
eben in C++ programmiert.
Das haben wir alle schon gemacht.
Fenster erstellt haben wir auch schon.
Das heißt, jetzt geht's
los mit DirectX-Krempel.
So.
Also, wir brauchen ein Device.
D3D-11
Create Device.
Okay, das copy-paste ich mir
jetzt mal und mal gucken, ob das funktioniert.
Wohlgemerkt, C++.
Also, wie funktioniert denn das jetzt?
Wortes
und dann gibt's wahrscheinlich
Direct3D-11
Create
Device. Ne.
Einfach nur Device.
Haben die Examples?
Haben die Examples irgendwie?
Example?
Samples.
Hello Direct11.
Ja, das ist doch schon mal gut.
Wisst ihr,
Leute, ich mag
Libraries mit Examples.
Da weiß man nämlich schon
wenigstens ungefähr, wie man
den Kram benutzen muss.
Sealed Cl...
What the...
Was macht der da?
Monk, hey, es...
Monk?
Ah!
What is happening?
Okay, hello world,
Example 300 Zeilen.
Excellent. So mag ich das.
So mag ich das.
Okay, wir...
Wir probieren das nachzuprogrammieren,
was der Typ hier macht.
Wir tun einfach mal so, als...
Wollen wir einfach das
C++ nur zu C-Sharp übersetzen.
By the way, was ich hier gemacht habe,
im Alten kann ich euch zeigen,
mit SharpDX war das relativ
einfach, da konntest du so ein Device
anlegen. Du hast hier die Options
gesagt und du hast hier gesagt,
was das...
Ich hab bis heute nicht genau verstanden, was ein Device ist,
übrigens in DirectX. Es ist nicht wirklich
die Grafikkarte.
Okay, also, was haben wir hier? Device.
Wie created man denn hier jetzt was?
Device?
Hier.
Ja.
ID3D11 Device.
Device. Alles klar?
Nein. Okay.
Wie funktioniert der Kamp?
D3D11.
Man muss erst mal verstehen, wie die das gerappt haben.
Ach, guck mal da.
D3D11 Create Device.
Das ist doch genau das, was dieser Typ
hier in C++ auch verwendet.
Ist die Mikro-Audio ein bisschen kacke?
Oh, wartet mal.
Habe ich meine Lautstärke nicht eingestellt?
Nö.
Äh, hört mir anders an als sonst.
Es kann sein, dass ich es ein bisschen schlecht platziert habe.
Warte, gerade.
Wubbel, wubbel, wubbel, test, test, test.
Wubbel, wubbel, wubbel, test, test, test.
Äh, klingt eigentlich normal.
Einfach, wenn es ein bisschen lauter wird.
Low-Quality.
Äh.
Es kann sein, wenn es im Hintergrund...
Es ist gerade ein Zug vorbeigefahren.
Und ich habe so eine Rauschunterdrückung.
Äh, nicht Rausch,
so eine Art RTX Voice.
Laufen.
Und vielleicht hat das einfach versucht,
den Zug rauszufahren.
Das kann sein.
Okay, wir müssen den Mist jetzt irgendwie nachprogrammieren von dem.
Also.
Was macht der denn hier?
Null.
Erst mal mit Null anfangen.
Perfekt, perfekt, perfekt.
Also, was gibt es hier?
Okay, easy, Null.
Wir machen das genauso wieder.
Null.
So, als nächstes kommt was?
D3D Driver Hardware.
Ach, guck mal, das hat er sogar schon vorgeschlagen.
Hardware, okay, okay.
Als nächstes kommen noch mal Null.
Was auch immer.
Aber der sagt, ich soll Creation Flag nehmen.
Create Device BGRA Support.
Alles klar.
Übrigens, in dem Fall sagt mir das sogar was.
Das ist das Gegenteil von RGB.
RGB ist ja Rot-Grün-Blau.
Und das ist umgedreht.
Das ist Blau-Grün-Rot.
Und Alpha Channel.
Das ist für alle,
denen RGB zu nubig ist.
Die machen BGR.
But why?
Ich glaube, das hat irgendwas mit der Bit-Reihenfolge zu tun.
Also, ob das achte Bit das höchste...
Also, ne, je nachdem.
Also, ob das linke Bit das niedrigste ist
oder ob das linke Bit das höchste ist.
So, und dementsprechend wird aus dem einen im anderen Format dann BGRA.
Ach, was weiß ich.
Ich mache das jetzt einfach so, wie das der Artikel auch macht.
So, BGRA.
BGRA Support.
Next.
Was machen wir jetzt?
New.
Feature Level.
Feature Level.
Was brauche ich denn für ein Feature Level?
Feature Level.
Highest Available Feature Level.
Äh.
Was habe ich denn?
Was habe ich denn bei dem anderen gemacht?
Hier.
Feature Level.
11.1.
Easy.
Also.
Alter, die Yoshi-Musik fuckt mich gerade richtig.
Okay.
Feature Level.
Äh.
Rede.
Sollte der?
Wollte ich jetzt hier eigentlich was vorschlagen?
Ah, hier.
Hier.
Feature Level.
11.
11.1.
Oh, no Documentation.
Perfekt.
11.0.
11.11.1.
Beste.
Wir wollen 11.1 Feature Level.
Oder, oder was?
Ich, ich, ich checke, ich checke ja schon mal gar nicht, was der eigentlich will in diesem
Blogartikel.
Ich muss mir mal die, die Parameter von dem, von der originalen Methode durchlesen.
Also.
Also.
Also.
Also.
Also.
Also.
Also.
Also.
Also.
Also.
Also.
0.
Software gibt es nicht.
Flags.
Feature Level.
Tatsächlich.
Moment.
Ich kann Feature Levels.
Ah.
Brain Lag.
Alter.
Windows.
Ich kann Feature Levels entweder als Array übergeben oder Feature Levels als, als Int.
Was?
Okay.
Wurscht.
11.
11.
Reicht.
Next.
Warum ist denn das, warum geht denn das jetzt so?
Warum ist das hier jetzt nicht?
Ich glaube da, da.
Und als nächstes.
Ich glaube da.
Irgendwie überfordert das Ding gerade.
Feature-Level.
So, und was brauchen wir jetzt als nächstes?
Also allein schon, bis ich das
angelegt habe hier.
SDK-Version.
SDK-Version.
Ich bin total überfordert.
Ich weiß nicht mal, wie ich den ganzen Müll hier überhaupt anlegen muss.
Nochmal, Klammer zu.
Okay. So, als nächstes
soll ich Feature-Levels. Features.
Mach ich doch. Features. So, next.
Was kommt jetzt?
Null.
Okay, was habe ich denn zur Auswahl?
Feature-Levels.
Out. Was?
Mehr kann ich da gar nicht
angeben, oder?
Ich habe ja nur diese drei Dinge hier.
Zur Auswahl.
Feature-Level.
Out-Device.
Also im Prinzip.
Okay, also im Prinzip eigentlich
so was wie Out-Device.
So. Okay, es gibt schon mal
keinen Fehler. Es ist schon mal gut.
Null.
Okay.
Und das funktioniert jetzt?
Das ist Rider.
Benutzt du für C-Sharp
auch manchmal Visual Studio?
Ja.
Normalerweise unter Windows, aber der Chat hat sich
diesmal auch Rider unter Windows gewünscht.
Normalerweise verwende ich Rider nur unter Linux, aber...
So, und das geht jetzt.
Okay, wir gucken jetzt mal, ob das crasht.
Wir gucken jetzt mal, ob das crasht.
Easy. Terminal.
Run.
Es crasht nicht.
Das ist schon mal äußerst nice.
By the way, warum kann man
in dieser Kack-Windows-Konsole eigentlich
das nicht canceln?
Ich muss es halt zumachen.
Okay.
Okay, das geht nicht kaputt.
Ich bin begeistert.
Es funktioniert. Okay.
Okay, wie geht es denn weiter?
Nothing surprising here.
Okay, für mich schon.
Also das scheint funktioniert zu haben.
Guck mal, das scheint geklappt.
So, hallo?
What the fuck?
Läuft das jetzt vielleicht noch im Hintergrund? Kann das sein?
Overlay Champ?
Ne.
Sag mal, die Konsole
in Windows ist krass verbuggt.
Und warum funktioniert hier, by the way,
warum funktioniert hier jetzt an der Stelle
Rideline nicht?
Wahrscheinlich, wahrscheinlich, weil es
wahrscheinlich... Ach Quatsch, Debugger.
Debugger ist doch für...
Hier wird nicht debuggt.
Ne, Steuerung C, es geht nix.
Hier in dieser komischen,
PowerShell geht gar nix.
Geht überhaupt nix.
Das geht standardmäßig nicht, ne?
Da muss man die...
Da muss man das umstellen,
dass das ein Konsole-Projekt ist.
Tja, wie geht denn das den Rider?
In Visual Studio weiß ich, wie das funktioniert.
Da klickt man das rechts an
und sagt, wir wollen ein Konsole...
Ah, hier.
Konsole-Application, easy.
Alles jetzt gecheckt.
She baited.
She baited.
Ich darf das nicht umstellen.
So, hier.
Konsole-Application, okay.
Restore.
Also, ich könnte werden unter...
Also, ich weiß, dass das ging.
Zumindest unter .NET Framework in Visual Studio
ging das auf jeden Fall.
So, ich brauch erstmal hier eine gescheite
Konsole unten, sonst krieg ich Anfälle.
Das Ding muss weg. Ich will keine PowerShell.
Meinetwegen Ubuntu, irgendwas.
Irgendwas. Okay.
Okay.
Äh, wo ist denn der Kram hier?
C.
Alter, die haben auch noch das Gebimmel an.
Die machen mich fertig.
Stream.
Rider.
Overlay.
So, kann ich das jetzt hier wenigstens ordentlich beenden?
Ich kann...
What the fuck?
Warum kann ich hier nicht einfach STRG-C drücken?
Was ist denn das?
Okay, langsam glaube ich,
langsam glaube ich, das ist ein Bug.
Das ist ein Rider-Problem.
Tja, ähm...
Wir probieren das mal hier so in PowerShell.
Oh Gott, wenn ich das schon sehe.
Wenn ich das schon sehe, Windows, please.
Ich will nix in Windows machen.
Overlay.
.NET, run.
Ich kann einmal schreiben.
Okay.
Ich... Das geht nicht!
What the fuck?
Wahnsinn.
Okay, machen wir doch einen Breakpoint.
Man muss es aber hier drüber machen.
Sollte der jetzt nicht eigentlich...
Sollte der jetzt nicht eigentlich Breakpointen?
Ach, man muss auf das Ding klicken.
Ah.
Siehste?
Ich mach das nie da drüber, über die Buttons.
Ah.
Ja, das ist doch schön.
Ja, jetzt funktioniert das auch.
Okay.
Bam.
Stopp.
Der könnte diesen ganzen Müll übrigens wieder ausblenden,
wenn man da auf Stop drückt.
Okay, also das funktioniert schon mal.
Wir haben hier so ein Special Massive Big Brain Device.
Ich hätte jetzt aber trotzdem gern Konsolen-Output.
Ähm...
.NET Core WinForms Console Out.
Ja, ich könnte Debug oder Trace nehmen,
aber ich will einfach...
So ein ganz normales Konsol-Out, das kann man...
Ich weiß, dass man das in .NET Framework einschalten konnte.
Aha.
Mach mal ein Projekt-File auf.
Okay.
Warte mal, dazu muss man das erst unloaden, irgendwie, ne?
Dass das funktioniert.
So.
Dann schieß mal los.
Ah.
Ne.
Output-Type weg.
Echt?
Okay.
Und das hilft?
Guck mal, probieren wir mal aus.
Reload.
So, kann ich jetzt?
Kann ich jetzt umschalten hier auf...
Ah, jetzt ist es Glass Library.
Kann ich ihm sagen, Konsol-Application checkt er...
Ah, das...
Lull.
Cake Wait.
Okay, ich mach...
Das ist komplizierter, als ich mir das Ganze vorgestellt hab.
Okay, er hat's gecheckt.
Zwei Jahre hier, Patrick.
Ja, das ist zwei Jahre.
Mir kommt's auch nicht so lang vor, aber danke schon für den Sub.
Massive Subscription.
Richtig pock.
So, mal gucken, ob das jetzt mit der Konsole funktioniert.
Schauen wir mal.
Ich will einfach nur nen fucking Konsolen-Output-Windows, ey.
Und ich würde gern Steuerung C ver...
Ne.
Okay, das geht nicht.
Halt klar.
Das ist, äh...
Nicht...
Im...
Da ist Microsoft noch nicht auf die Idee gekommen, dass man Konsolen-Output vielleicht machen will, alles klar.
Ja.
Geht nicht.
Warum auch immer.
Das ist zu...
Zu Advanced-Konsolen-Output.
Das wollen wir nicht.
Und vor allem, wisst ihr, was mich richtig triggert?
Was mich massive triggert?
Dass ich keine Steuerung C drücken kann.
Warum kann ich hier keine Steuerung C drinnen drücken?
Was ist das für ein Müll?
Was soll das?
Kann ich...
Warte mal, ich mach jetzt mal das hier auf.
So.
Ich muss erst mal die Basics fixen, ja.
Der Overlay-Champ.
Es geht kein Control-C?
Das kann doch nicht sein.
Okay, wir haben...
Haben wir das neue Windows-Terminal installiert.
Ich probier das jetzt mit allem aus.
Rider.
Das geht...
Okay, vielleicht ist das irgendwie so ein Windows-Ding.
Es geht kein Control-C?
Das ist...
Krass.
Hätte ich...
Hätte ich nett für möglich gehalten.
Okay, wir starten mal ein Ubuntu.
Och, nicht mal...
Das Fenster...
Leute, das Fenster frisst Control-C.
Ich weiß nicht, warum.
Aber es ist so.
Nee, das...
Das ist ja...
Die Applikation kriegt das ja gar nicht.
Okay, sehr, sehr merkwürdig.
Was?
In Output taucht das auf.
Frist Control-C wegen Pop-Up?
Eigentlich...
Nee, ich aktiviere das Fenster ja noch nicht mal.
Zumal ich hab ja auch gar kein Pop-Up auf.
Leute, ich hab ernsthaft keine Ahnung, warum.
Aber das ist jetzt ja auch nicht so...
So wild.
Tja, okay.
Okay, Konsolen-Output ist massiv.
Massiv overrated.
Das geht anscheinend nicht.
Ich hab ne Idee.
Pass mal auf.
Jetzt...
Jetzt werden sie cheap-baited.
Jetzt werden sie massiv cheap-baited.
Wartet mal, ich hab ne Idee.
Jetzt, jetzt.
Ach nee, ich kann keine Konsolen-Anwendung machen.
Ich kann keine Konsolen-Anwendung machen und einfach sagen, auf Windows-Forms ändern.
Das funktioniert ja auch nicht.
Egal, ich will jetzt mal irgendwas.
Ich will jetzt eigentlich weitermachen.
Okay, dann müssen wir es halt über den Debug-Knopf machen.
Meinetwegen.
Okay, also wir haben...
Jetzt ein Device.
Ich will jetzt was ins Fenster malen.
Wie geht's denn weiter?
Wie geht's denn weiter?
Zeig mal hier dieser Blog-Artikel.
Also, nothing too surprising hier.
Mach doch Web-Server rein und das rausschicken.
Ja klar, ich könnte auch USB-Redirect machen, meinen eigenen USB-Treiber programmieren
und das dann über WLAN an mein Tablet schicken.
Könnte man alles machen.
Ist ja einfach so eine Konsolen-Ausgabe.
Wäre doch eigentlich ganz praktisch, oder?
Guck mal, WinForms.net-Core-Konsole-Output.
Das kann doch nicht so...
Oh, jetzt wird's...
Big Brain, Leute.
Massive Brain.
Ja, das kenne ich.
Das kenne ich.
Das geht ja nicht mehr.
Jetzt wird's advanced.
Guckt euch das mal an.
Passt mal auf.
Biggest Brain of all time hier.
Windows-API-Import.
Jawoll.
Das habe ich gebraucht.
Next-Level-Shit.
Warum geht das nicht?
Ach, ich bin im Namespace.
Ich bin ja im Namespace drin.
Wait.
So, perfekt.
Doch, doch, das machen wir jetzt.
So, pass mal auf.
Bam, bam, pass mal auf.
Was meint ihr?
Meint ihr, ob es jetzt geht?
Ah, guck mal, da ist eine Konsole.
Seht ihr?
Da ist eine Poggers-Konsole war da.
Habt ihr?
Nice.
So, und jetzt mal.
Konsole, Konsole, Konsole.
Ah, jetzt.
Score, wir haben Konsole-Output.
Viel, viel besser.
Perfekt, perfekter Konsole-Output.
Excellent, excellent.
Das ist ja die hässlichste,
der hässlichste Konsolen-Output aller Zeiten.
Einfach Big Brain Time, ja.
Okay, perfekt, perfekt.
Oder auch nicht.
Also, wir haben jetzt,
wir haben jetzt einen
Direct 2D-Device,
den DirectX-Device.
Guck mal, es funktioniert.
Huge.
So, was können wir mit dem Device denn jetzt machen?
18.
18.
18.
18.
18.
18.
18.
18.
18.
18.
18.
18.
18.
18.
18.
19.
19.
20.
21.
22.
23.
24.
25.
26.
27.
28.
29.
30.
31.
31.
32.
32.
33.
34.
35.
36.
37.
38.
39.
40.
41.
41.
42.
42.
43.
44.
44.
44.
45.
45.
46.
46.
47.
48.
49.
49.
50.
51.
51.
51.
52.
52.
52.
53.
53.
54.
Ich habe doch hier mein Webinterface mit den ganzen Bildchen,
die ich immer einblende.
Und aktuell habe ich da ein Overlay für,
was die GIFs anzeigt in einem transparenten WPF-Fenster als Overlay.
Also ich klicke das normalerweise vom zweiten Bildschirm an,
ihr seht das gar nicht.
Das ist aber verbuggt.
Diese GIFs laufen teilweise viel zu schnell
oder manche GIFs laden extrem langsam.
Guckt mal hier.
Und das ist eine Kombination aus einmal der GIF-Komponente,
die ich für WPF verwende,
und einmal WPF selbst,
weil Transparenz,
in WPF, also Transparenz,
sodass der Hintergrund durch Schein von anderen Fenstern,
ist rein CPU-gerendert.
Und das heißt,
wenn du Spiele im Hintergrund hast,
ist es auch massive langsam.
Deswegen male ich heute den Kram selbst in Direct2D.
Irgendwann mal zumindest.
So, hier ist mein transparentes Fenster.
Habe ich schon mal.
Ja.
Ich muss da nur noch den Rahmen wegmachen.
Und dann müssen wir noch gucken,
wie man da Videobilder reinmalt.
Aber das kriegen wir wahrscheinlich heute nicht hin.
Wie gesagt, ich versuche jetzt einfach mal.
Ich bin heute zufrieden,
wenn ich einen Dreieck oder einen Viereck,
irgendeinen Rectangle malen kann.
Das reicht mir schon.
So, also wir haben jetzt hier einen Device.
Ich muss jetzt mal weitergucken.
So, das haben wir gemacht.
Das haben wir gemacht.
Nothing surprising here.
Backed GPU, BGRA-Support.
BGRA-Support, weil RGB für Loops ist.
Richtig cool, Leute.
Wir verwenden BGRA.
RGB ist out.
BGRA ist das neue RGB.
Demnächst verkaufe ich übrigens auch BGRA RAM,
habe ich mir überlegt.
Weil RGB ist ja nur wirklich für Loops.
RGB hat jeder.
Nächster RAM-Baustein kriegt BGR-Beleuchtung.
Das Dumme ist, das sieht überhaupt nicht anders aus als RGB.
Weil es ist ja RGB, einfach nur die Reihenfolge ist anders.
Es fängt halt mit dem blauen Pixel an, anstatt mit dem roten Pixel,
äh,
mit dem, ja, mit dem roten Pixel.
So, ähm, also held to D-X-G-I, which provides common GPU resource management.
I must query direct 3D device for its D-X-G-I-Interface.
Was?
Okay, ach du große Scheiße, was ist das?
Okay, was zum?
Okay, device S.
Gibt's nicht.
Query?
Ach, guck mal, das funktioniert.
Query Interface.
D-X-G-I.
Ach bloß, das funktioniert.
D-X-G-I-Device.
Jetzt, jetzt wird's richtig wild, ja.
I-D-X-G-I-Device.
I-D-X-G-I-Device.
Okay, wenn das nicht crasht, dann, dann weiß ich auch nicht.
Es crasht nicht, es funktioniert.
Okay.
Alles klar.
Ich, keine Ahnung, keine Ahnung.
Wirklich, absolut null Plan.
Was, was da überhaupt, äh, gerade passiert.
Okay.
Next.
Äh, was?
Com-Pointer create swap chain that will be used for composition.
To do that, I first need to get hold of D-X, die D-X-G-I-Factory.
Alles klar.
Alles klar, okay.
Factory?
Nee.
Ähm, der GTK bringt dir in dem Fall nix.
Mit GTK kannst du kein transparentes, äh, Fenster-Gedöns unter Windows-GPU beschleunigt malen.
Zum.
Was?
Was bin ich hier überhaupt sehend an der Stelle?
Was?
Ah, wir brauchen, Moment, Moment.
Wir brauchen create D-X-G-I-Factory 2.
Alles klar.
Ähm.
D-X-G-I-Factory 2.
Äh, übrigens.
Leute, wichtig, wichtig anscheinend.
Nicht Factory 1.
Ja?
Factory 2.
Nicht, dass ihr auf die Idee kommt, Factory 1 zu nehmen.
Factory 2.
Create Factory 2.
Pool Debug.
Klar, Debug schadet nix.
Out Factory.
Leute, ich hab wirklich, ich, falls es irgendwie so, ich hab absolut keine Ahnung, was ich hier mach.
Oh, das geht nicht.
Warum?
Oder einfach so?
Muss ich da, muss ich da sowas angeben?
Wie, sowas?
Aber, warum macht er das nicht von sich aus?
Wer hat sich das denn wieder ausgedacht?
Okay.
Mal gucken, ob da jetzt was Sinnvolles bei rauskommt am Ende oder ob es crasht.
Funktioniert.
Pock.
Was auch immer ich da gerade mache.
Ich weiß es nicht.
Aber warum will er einen Generic?
Ich mein, das Ding heißt, wie sagen die Amis so schön?
Literally, ja?
Create D-X-G-I-Factory 2.
Warum muss ich dann sagen, ich möchte eine D-X-G-I-Factory 2?
D-X-G-I-Factory 2 vom Typ D-X-G-I-Factory...
Alter.
Windows-Logik.
Okay.
Also, weiter, weiter, weiter im Text.
Okay, Swap Chain Description.
Das kenn ich noch, das kenn ich noch vom anderen.
Ähm.
D-X-G-I-Swap Chain Description.
D-X-G-I-Swap.
Also, wo, wo, wo würde das sein?
Swap.
Swap Chain Description 1.
Bitteschön wieder.
Ja.
By the way.
Ich importiere den Kram absichtlich nicht, weil eins habe ich gemerkt, dass zwischen diesen ganzen DirectX-Namespaces die Sachen oftmals gleich heißen.
Und wenn du die nicht per, per Namespace hier ansprichst, hast du dann 50 Devices und sowas und 50 mal Surface und Texture und, und deswegen...
Okay.
Swap Chain Description.
Description.
Warte mal, was, was will der jetzt haben?
Okay, ja.
In C++ könnten wir jetzt sowas machen, aber das geht jetzt, das geht jetzt zum Glück nicht.
So.
Also.
Mal sowas hier machen.
Also.
Was, was brauchen wir?
Wir brauchen Format.
Format.
Äh, oh, was, was?
B-8-G-8-R-8.
Also, okay.
8, 8-Bit-Blau, 8-Bit-Grün, 8-Bit-Rot, 8-Bit-Alpha-Channel.
Okay.
B-G-R-8.
Was ist das da?
B-G-R-8.
U-Norm.
Alles klar.
Hauptsache U-Norm.
Okay, next.
Buffer Usage.
Oh, das gibt's schon immer nicht.
Das fängt ja gut an.
Das gibt's schon mal nicht.
Ah, jetzt ist es vielleicht einfach Use.
Ah, einfach nur Usage.
Okay, das ist dumm.
Das ist dumm, wenn die den direkten Rapper basteln, die Felder anders zu nennen.
Das ist, das ist dumm.
Da findest du es am Ende nicht.
Render Target Output.
Okay.
Äh, Effekt.
Sequent meinetwegen.
Äh, Count 2.
Alles klar.
Also Buffer Count, nur mal für die Kack-Noobs wie mich.
Buffer Count 2 in der Swap-Chain heißt Front Buffer, Back Buffer, ne?
Also wir haben, weil es wird ja dann geflippt.
Also sprich, hier schreibst du das neue Bild rein.
Und dann sagst du Flip und dann tauscht das, was angezeigt wird, mit dem, wo du dein Bild reingeschrieben hast.
Das ist Rider, ja?
So, Sample, Description, Count.
Ne, das...
Count?
Ne, das muss ich dann unten drunter machen, oder?
Count gleich.
Haha, ist das hässlich.
Das ist hässlich, das Fuck.
Okay.
Ähm.
Alpha.
Das ist wichtig.
Oh, was hab ich jetzt grad verschoben?
Äh.
Was?
Was?
Ich weiß nicht, was ich verschoben hab.
Guck mal.
Alpha-Mode brauch ich, dass es auch transparent werden kann.
Pre-Multiplied.
Okay, das passt.
Alles klar.
Description.
Soweit haben wir das.
Okay.
Okay, okay.
Und jetzt brauchen wir was?
Ja, Windows Rectangle.
Wen interessiert denn das?
So, Create.
Jetzt muss ich folgendes machen.
Okay, okay.
Create Swap-Chain for Composition.
Wo finde ich das denn?
Wo ruft der denn das überhaupt drauf auf?
Auf der Factory ruft der das auf.
Okay.
Ähm.
Warte mal.
Ich guck noch mal schnell, ob noch alles läuft.
Okay, funktioniert noch alles?
Funktioniert noch alles?
Factory.
Create Swap-Chain for Composition.
Alles klar.
I unknown.
Ist das...
Da wussten die Windows-Leute selbst nicht mehr weiter.
Die haben einfach nur gedacht, ich hoff...
Hoffentlich...
Lass es vorbeigehen.
Lass es vorbeigehen.
Lass es vorbeigehen.
Lass es vorbeigehen.
Lass es vorbeigehen.
Lass es vorbeigehen.
Lass es vorbeigehen.
Lass es vorbeigehen.
Lass es vorbeigehen.
Lass es vorbeigehen.
Lass es vorbeigehen.
Lass es vorbeigehen.
Lass es vorbeigehen.
Lass es vorbeigehen.
Lass es vorbeigehen.
Lass es vorbeigehen.
Lass es vorbeigehen.
D-X-G-I-Device.
Ach so.
Äh.
Was?
Da muss ich wahrscheinlich...
Muss ich da das D-X-G-I-Device
oder das Device angeben?
D-X-G-I-Device.
D-X-G-I-Device.
Warte mal.
Ich nenn das mal Device.
Sonst find ich das nachher nicht mehr.
Äh.
Swap-Chain Description.
Haben wir hier.
Und dann...
Äh.
Null.
Null.
Und dann kommt da ne Swap-Chain bei raus.
Äh.
Oh.
Okay.
Wir schreiben das wie die coolen Leute.
Swap-Chain.
Hat das jetzt soweit funktioniert?
Das wär jetzt ja auch so schön gewesen,
wenn das einfach funktionieren würde, oder?
Okay.
Wir haben was falsch gemacht.
Ich weiß nur nicht was.
Was haben wir falsch gemacht?
Okay.
Wir empfinden es mal in der Konsole aus,
dass ich...
Also.
Ich kann das mal warten.
Please.
Okay.
Wir machen es einfach im Debugger.
Dann kriegen wir die Fehlermeldung.
Okay.
Was?
Application made a call that is invalid.
Warum?
Warum ist das invalid?
Geht das denn ohne?
Ich hab das doch genau gemacht,
wie der Dude das auch gemacht hat im Artikel.
Das funktioniert.
Also.
Das geht so nicht.
Nee.
Die Konsole-Read-Key bringt dir nix,
wenn du...
Kann man die Exception irgendwie...
catchen?
Kann man das...
Kann man das irgendwie catchen?
Geht wahrscheinlich nicht.
Das ist irgendeine Low-Level-Exception.
Die kannst du wahrscheinlich nicht catchen.
Nee, ne?
Aber doch.
Kannste catchen.
Tatsächlich.
Ausgleiche.
So.
Was hab ich verkehrt gemacht?
Also, das können wir uns sparen.
So, was ist...
Was ist...
Was ist an der Logik jetzt falsch?
Ich mein, ich hab genau das gemacht,
was der andere Typ auch gemacht hat.
Vielleicht...
Moment.
Äh, ich hab...
Das dumme...
Das dumme ist, die Dinger sind so kacke beschrieben,
ich hab gar keine Ahnung, was da rein muss.
Device or Command-Q.
Device haben wir ja.
Vielleicht...
Vielleicht soll ich mal das...
Das...
Das...
Das...
Das Device ausprobieren?
Das ist alles so...
So...
So nice typisiert,
dass man sofort weiß, dass es funktioniert.
Nee.
Okay.
Das klappt nicht.
Also, das müsste doch eigentlich richtig sein,
was ich hier mache.
Hab ich noch irgendwas vergessen?
Query Interface oben wahrscheinlich falsch.
Aber da müsste es doch oben schon ab...
...kacken, oder?
Da müsste es doch eigentlich schon hier abkacken, oder nicht?
Doch!
Ich hab das ja...
Ich hab...
Ich hab's ja zumindest oben schon mal rausgegeben.
Ja, aber hier...
Da geben wir mal irgendwas aus.
Oh, bam.
Null.
Das funktioniert anscheinend.
Ja, ich mein...
Das haben wir da gemacht.
Du musst die Size noch mitgeben in der Description.
Das...
Warum...
Warum...
Warum...
Warum...
...muss ich das und der Typ nicht?
Ach, Moment.
Ach, das meint er hiermit.
Das macht er doch hier.
Ah, so.
Ja.
Okay.
Size.
Nee, wie hieß der Kram?
Was noch?
Ah, Komma.
Width gleich, ähm...
Wobei, das funktioniert wahrscheinlich hier in...
...in...
...in Create.
Nee, oder?
Okay, wir machen jetzt einfach mal 200 mal 200.
Einfach mal gucken, ob es funktioniert.
Einfach mal gucken, ob es funktioniert.
Gucken ob es geht.
Und...
Und...
Ahhhh.
Es funktioniert.
Ähh...
Warum funktioniert das jetzt, wenn ich das falsche Device verwende?
Pack Weight.
Okay, anscheinend ist es egal.
Egal, lassen wir mal.
Das...
Ich lass das einfach...
Okay, funktioniert.
Funktioniert.
Okay, 200 mal 200.
Perfekt.
Also dann...
Äh...
Wie sieht es eigentlich an der Stelle aus?
Ist es...
Ist hier...
Ist hier Höhe und so schon gesetzt?
Weil die Form wird da noch gar nicht gezeigt.
Doch, ist schon gesetzt.
Alles klar, dann kann ich es hier tatsächlich auch schon bis breite Höhe.
Oh, Leute, ich spüre es.
Wir sind nicht weit davon entfernt, da was selbst zu malen scheint zu funktionieren.
Was, was, Frage?
Moment, Moment, was?
Ernst gemeinte Frage.
So arbeitet, was?
Moment, das check ich gar nicht.
Warte mal, ja.
Also, äh, ernste Frage.
Sie so arbeitet eines Informatikers.
Sieht so, ach, sieht so die Arbeit eines Informatikers aus.
Circa, zumindest würde mich mal interessieren, was du für Weisheit erzählst.
Naja, gut, kommt drauf an, was du machst.
Aber ja, diese Mischung aus, ich probiere was aus, es geht nicht, ich suche in Google und habe keine Ahnung, worum es danach geht, ist in der Tat relativ akkurat.
Wie er schon sagt.
Ähm, nur mit dem Unterschied.
Ähm, dass, äh, diese Windows internen Geschichten auch absoluter Painschamp sind.
Also, wenn ich was mache, wo ich ein bisschen Ahnung von habe, dann muss ich nicht ganz so viel Google gucken.
Aber das hat tatsächlich, es kommt, es kommt der Realität doch schon relativ nahe, ja.
Also, ich würde mal sagen, mindestens 50 Prozent, also wenn man was macht, sind mindestens 50 Prozent Google suchen.
Egal was.
Letztens habe ich auch.
Azure Functions versucht irgendwas zu deployen, hat nicht funktioniert.
Google, Google, Google, Google.
Eineinhalb Stunden später geht.
Ist halt so.
Deswegen ist der wichtigste Skill, den du brauchst, ähm, gar nicht so sehr, dass du alles weißt.
Das wird meiner Ansicht nach total überschätzt.
Du musst genug wissen, dass du weißt, wonach du suchen musst.
Das klingt jetzt doof, aber im Prinzip ist es so.
Die Sachen ändern sich täglich.
Gerade, wenn Microsoft wieder der Meinung ist, irgendwas zu pushen, was nicht funktioniert hat oder sonst was.
Die Sachen ändern sich täglich.
Du musst im Endeffekt wissen, wie das, wie du das Themengebiet heißt, was du suchst, die einzelnen Elemente heißen, dass du weißt, nach was du googeln musst.
Dann gehst du auf Google und suchst, gehst du auf GitHub und suchst, gehst du auf Stack Overflow oder was auch immer und suchst danach und guckst, okay.
Und dann findest du vielleicht auf GitHub ein Issue, was fünf Stunden alt ist, wo sich schon jemand drüber beschwert hat.
Du musst wissen, nach was du suchen musst und das ist die halbe Miete.
Du musst keine Ahnung haben von der konkreten Sache.
Also du musst jetzt nicht hundertprozentig wissen, wie du was machen musst.
Du musst wissen, wie du dich da langhangeln kannst.
So, okay, also das, ich will, ich will heute, will ich noch, also bis 21, ich will noch ein, noch, noch ein Viereck, ein Viereck malen auf dem, dem Hintergrund, mindestens.
Okay, wo sind wir stehen geblieben?
Also wir haben die Größe angegeben, das können wir alles hier überspringen, das haben wir gemacht.
Drawing, Leute, Leute, wir können angeblich, angeblich.
Können wir jetzt direkt malen.
Das glaube ich erst, wenn ich sehe.
Oh, fuck.
Das ist ja erstmal, okay, jetzt kommt erstmal Wall of Code hier.
Creating a single threaded direct-to-the-factory.
Die mögen das mit irgendwelchen komischen Factories und, und, und sowas.
Okay, das muss ich erstmal geistig verarbeiten.
Microsoft hat ja auch Syntax-Highlighting und sowas auf diesen Seiten noch nicht, noch nicht hinbekommen.
D2D Create Factory.
Single threaded.
Ja, meinetwegen, das glaubt, das werde ich überleben.
Create direct-to-the-device that links back to the direct-to-the-device.
Wisst ihr was, das machen wir jetzt.
Wir machen als C++-Highlighting draus.
Mit, mit hier.
So.
C++.
Jetzt kann man das Weg schon ein bisschen lesen.
Ach du Scheiße, was passiert hier denn jetzt alles?
Ach.
Okay, hier unten mal, Alter, alles klar.
Also, wir, wir, jetzt, jetzt brauchen wir erst, okay, was brauchen wir jetzt?
D2D 1 Create Factory.
Okay, die zwei Dinger brauchen wir jetzt.
Okay, ich mach, ich mach jetzt die zwei Dinger.
Also.
Okay.
Das ist das dann Ganze, ist das, das ist wahrscheinlich, äh.
Ne, wie heißt das?
Ich hab schon wieder vergessen, wie heißt das?
Wortes.
Wortes.
Direkt 2D Factory.
Äh.
Eie.
Create, Create Factory.
Das muss ich bestimmt wieder so kacke angeben wie da oben.
Ähm.
Und jetzt.
Options.
Ne, was, was, was will ich denn überhaupt für eine Factory haben?
Ich will eine.
Ach du Christ.
Eine I.
Eine.
Eine.
Eine I.
ID-2D1 Factory 2.
Ach.
St...
Streit nicht dreh am Arsch, Alter.
Ähm.
I.
Okay.
So.
Und das geht jetzt einfach.
Ja.
Debug Information.
Was juckt mich?
Debug Informations, Alter.
Okay.
Das ist jetzt, was ist das jetzt?
Die, das ist jetzt die D2, die Direct 2D Factory.
So viele Factories.
Obviously, ja.
Ne, also der, der das
Also, mir kann auch keiner erzählen
Bei Microsoft, dass die Bock haben, daran zu entwickeln
Ach, Single Threaded
Ja, das kommt jetzt, ne, das
Moment
Ach, Moment, da muss ich auch
Factory Single Threaded machen
Äh
Okay
Wie
Mach ich das Single Threaded
Da muss ich wahrscheinlich jetzt hier
Single
Back
Factory Type
Single Threaded
Okay, perfekt
So, das haben wir jetzt erledigt
Guck mal, eine Zeile C Sharp ist einfach
Fünf Zeilen C++
So, und jetzt Create
Okay, das ist jetzt 2D Device
Das, das tut wirklich
Das tut wirklich weh
So, und jetzt brauchen wir die, die
Factory
Create Device
Ich mein, Microsoft hätte übrigens auch einen ordentlichen
Ähm, also Direct 2D
Ist ja quasi, nen, nen Rapper für
Direct 3D, für 2D malen
Hätten die das nicht irgendwie benutzerfreundlicher
Machen können
Äh, ich blick, Sirius Max
Ich blick doch da auch nicht durch
So, ähm
Einfach nur
Create Device machen
Ach, ne, jetzt, ah, da muss jetzt
Das DXGI Device rein
Weil
Alles klar, alles klar, machen wir, gut
So, jetzt mal kurz checken
Ob das bis hierhin funktioniert
Hat
Funktioniert, funktioniert, progress, progress, funktioniert
Okay
Jetzt geht's
Weiter damit
Create
Direct 2D Device
Context
Okay, die zwei Sachen machen wir jetzt
Also, falls noch irgendjemand denkt, ich hätte Ahnung
Was ich mache, hab ich nicht
Vollkommen, voll, absolut
Komplett planlos
Ähm
Alles klar, okay, also
DXG Device, und jetzt muss
Man was, äh, Device Context
Okay, D2D Device
Device Context, und da muss man
Jetzt was übergeben
Device Context Options
Null
Device Context Options
None, okay, das war's anscheinend
Und das ist jetzt ein
Was, Moment, was kommt da als, was, was kommt
Da jetzt, D2D
Device
Context
Die coolen Leute bei Microsoft nennen das anscheinend
Einfach nur DC für Device Context
Ich persönlich mag ja als Context
CTX als Abkürzung
Okay, D2D Device, das haben wir das gemacht
Was machen die?
Retrieve the Swap Chains Back Buffer
Ah, okay, ich glaube, ich verstehe
Ich, ich verstehe, was passiert
Die holen sich jetzt den Back Buffer
Um da mit Direct 2D reinzumalen
Also der Back Buffer ist ja
Bei, bei, bei, bei
Bei grafischen, äh, wie soll ich das
Grafische Sachen, äh, Hardware nah programmiert
Du hast ja einen Front Buffer und einen Back Buffer
Front Buffer, äh, Front Buffer, äh, Front Buffer, äh, Front Buffer
Front Buffer ist quasi
Ganz, sind, sind, äh, ganz einfach gesagt
Der RAM von deiner Grafikkarte
Wo das Bild drin ist
Was dein Monitor gerade anzeigt
So
Und der Back Buffer ist das
Wo du dein neues Bild reinmalst
Und wenn du dann das
Fertig gemalt hast
Und willst das anzeigen
Dann kopierst du einfach den, den Back Buffer
In den Front Buffer
Also kopierst den drüber
Und dann hast du ein neues Bild
So weit von der D2D Buffer
Okay, was macht der denn jetzt hier
Jetzt kommt ein
IDXGI2 Surface
Boah, die machen mich fertig bei Microsoft
Die machen mich echt, die machen mich echt fertig
Also Swap Chain
Get Buffer
Ah, da muss man wieder was angeben
Und zwar, jetzt wollen wir ein IDX
GI
Surface
2, bitteschön, 2
Nicht 1, Surface 2
Äh, und dann
Und dann, Index 0
Äh, müsste 0
Ach, keine Ahnung, ich hinterfrag das einfach nicht
Okay, ich nenn's jetzt mal Buffer
Weil ich keine Ahnung hab was, oder Surface
Surface
Okay, das haben wir, haben wir
Okay, mal checken, ob das alles funktioniert hat
Oder ob's irgendwie in irgendeiner Art und Weise crasht
Naja, funktioniert noch, alles klar
Okay, wie geht's weiter
Ups
Wie geht's weiter
Okay, ich sag bloß, wir können jetzt malen gleich
Was gibt das, wenn's fertig ist
OpenGL find ich, find ich fast noch komplizierter
Was ich bisher davon gesehen hab
Okay, jetzt, jetzt
Erstellen wir nen, nen Bitmap
Und das ist das Bitmap wahrscheinlich
Wo wir reinmalen, vermute ich mal
Das ist nicht das Bitmap, was wir malen
Sondern da, wo wir quasi reinmalen
Was dann im Endeffekt im Fenster angezeigt wird
Okay
Also, machen wir das doch mal
Machen wir das mal, easy, easy
Leute, glaubt ihr, dass wir es hinkriegen
Dass wir heute noch ein, ein, ein, ein, ein Viereck
Auf dem Bildschirm malen können
Nope, da seid ihr sehr zuversichtlich
Okay, jetzt brauchen wir
D2D, D2D1
Guck mal hier
Bitmap, ne
Bitmap
D2D
Alter, ich kann ja, D2D
1
Bitmap
Properties, ne
Das ist da nicht drinne
Das gibt es wahrscheinlich nur in
Ja, wo ist das jetzt drinne
D2D
Bitmap, Bitmap Properties 1
Natürlich
Ich, ich, ich geb einfach irgendwas, irgendwas an
So
Okay, was brauchen wir, was brauchen wir da jetzt
Wir brauchen
Pixel Format
Ach ne, das, das geht so schon mal net
Okay, das müssen wir
Pixel Format
Format
Format ist, ähm
BGRA
Unorm
Es macht mich
Es macht mich fertig, also wenn das funktioniert
Da beiß ich mir echt in den Arsch
Also werdet ihr da nicht sehen, aber hören
So
Unorm
Pixel, hatten wir das oben nicht schon mal gemacht
Pixel Format
Alpha Mode
Remultiply, das haben wir oben auch schon
gemacht, irgendwo, irgendwo haben wir hier mal gemacht
Hier, unsere Swap Chain ist auch
Alpha Mode Remultiply
Fragt mich jetzt nicht genau, was Alpha Mode
Remultiply ist
Das liegt irgendwie da dran
Wie die Transparenz
Werte gespeichert werden, ob die
Fragt mich, keine Ahnung
Kann ich euch, kann ich aus dem Kopf nicht beantworten
In 12 Minuten ist
Schlafenszeit, ne wie kommst du da drauf
Es ist 20 Uhr 49
Nicht 21 Uhr 49
Genau, jeder Alpha Kanal wird mit dem Farb
Wert multipliziert
Jeder Farbkanal wird mit dem Alpha Wert multipliziert
Jeder Farbkanal wird mit dem Alpha Wert multipliziert
Du
Oder ne, ne nicht, wird
Ist, ist schon, also in dem Format
Ist, ach keine Ahnung
Äh
Romano macht dir keine Gedanken
Ich hab auch keine Ahnung
Ok, also weiter Format, jetzt kommt was
Bitmap Options
Bitmap Options
Gleich, ne
Was
Target und Cannot
Target
Und was
Bitmap Options
Cannot Draw
Obvious, Leute
Obvious, komplett
Ich mein Target und Cannot Draw
Da hätte ich auch selbst drauf kommen können
Wer braucht denn dafür
Ein Tutorial
Ok, und jetzt müssen wir sagen
D2D Device Context
Äh
Create Bitmap
From DXGi Surface
From DXGi Surface
What the fuck
Ok
Bitmap Properties
Oh, muss, darf ich das da überhaupt angeben an der Stelle
Jaja, Bitmap Properties
Ähm
Das war's, oder?
Das war's, oder?
Und dann ist, das ist jetzt, das ist jetzt mal ein Bitmap
Und dann ist, das ist jetzt, das ist jetzt mal ein Bitmap
Oh, Poggers
Wir haben ein Bitmap
Und dann muss man, ups, aber checken ob das bis hierhin
Läuft und nicht, ups
Läuft und nicht crasht
Ja, oh, funktioniert, funktioniert
Ne, ne, ich nehm nicht das was der Compiler vorschlägt
Also, ich nehm hier manchmal
Autocomplete, ja
Weil ich nicht weiß wie die einzelnen Dinger heißen
Aber ich muss schon wissen was, grob nach was ich gucke
Ja, überlegt euch mal
Wenn das schon so hässlich ist, was meint ihr
Wie die, wie die Eingeweide von Unreal aussehen
Die sind noch viel viel hässlicher
Die sind wahrscheinlich so hässlich
Dass die seit 15 Jahren keiner mehr angefasst hat
Okay, es geht, es geht
Weiter
Okay, CryEngine kannst du eh knicken
Ich glaub, okay, jetzt müssen wir das Bitmap
Irgendwie setzen
Was auch, was, was
Okay, DeviceContextD2D
DeviceContextSet
Oh, geht nicht
Das gibt es nicht
SetTarget, gibt es nicht
Target, aber Target gibt es
Target gleich
Bitmap, alles klar
Äh
Und jetzt
Leute, wir können malen
Wir können malen angeblich
Was ich aber noch nicht so ganz verstehe ist
Woher weiß der jetzt, dass der
In dieses Fenster malen soll
Das kann der doch noch gar nicht wissen
Moment, das muss ich mal hier durchlesen
Woher weiß der, dass der in das Fenster malen
Das ist doch
Weiß der noch gar nicht
Ach du
Ach hier, hier sagt er eben das erst
Guck mal
TargetForHandle
Hier, das weiß der noch gar nicht
Also ich kann jetzt was malen
Aber es passiert nix
Okay, ich mal jetzt mal
Ich mal jetzt mal was
Äh
Wobei, es bringt mir ja nix
Jetzt seh ich das ja gar nicht
Aber ich kann gucken, ob es nicht crasht
Okay, also probier mal aus
Ähm
DeviceContext
Was begin Draw
Vielleicht soll ich das kürzer machen
Kann ich jetzt einfach sagen
DrawRectangle
Jawoll
Ich brauch nen Brush
Ich mein wer hat sich diese API ausgedacht
Wer hat sich diese API ausgedacht
Warum kann ich nicht
Warum kann ich nicht einfach sowas hier machen
Irgendwie sowas
Ist das zu
Zu advanced gewesen für Microsoft oder wie
Es geht nicht
Nein, das ist nicht gedacht
Ich mach mal nen extra
Rectangle F
Brauchen wir jetzt
Ist nicht abstrakt genug
Rectangle F
Okay, und da kann ich jetzt sagen
0, 0, 200, 200
Okay, soweit so gut
Und jetzt brauch ich noch nen Brush
Wie leg ich den Brush an
Was ist das kompliziert
Ähm
Was
D2D Color F
D2D Color F
Und dann muss ich auch noch sagen
CreateSolidBrush
Fuck it ey
Wir müssen übrigens noch das Clear vorher machen
Hat er das Clear davor
Oder nach dem Begin Draw gemacht
Danach
D2D DeviceContextClear
Gibt es
Kann man
Haben die das vielleicht irgendwie gerappt
Dass ich sagen kann
D2D Brush
Oder Color
Gibt es schon Color
Ah
Brush
Okay, äh
Was brauch ich denn für nen Brush
Äh, SolidColorBrush
Ne
Das wär zu viel gewesen
Da einfach schon fertige Farben reinzubauen
Kann man sowas machen
Ne
Okay, Brush
Ne, fuck
Ich bin überfordert
Wie leg ich denn jetzt hier nen Brush an
Wie leg ich denn jetzt hier nen Brush an
Ah, man kann in der Farbe clearen
Ah, man kann in der Farbe clearen
Color
Geht da einfach diese Color
Geht da einfach diese Color
Was zum Teufel ist Color 4
Color 4
Okay, okay
Wir clearen einfach mit Red
Das sollte ja auch funktionieren
Kann ich dann hier nicht einfach auch sagen
Color 4
Red oder so
Ne, das geht nicht
Das ist besser, besser
Color 4
Warum muss ich hier übrigens was angeben
Und hier der C++ Mensch muss da nix angeben
Und hier der C++ Mensch muss da nix angeben
Das ist wahrscheinlich die Hintergrundfarbe
So
Wie lege ich denn jetzt so nen fucking Brush an
Wie lege ich denn jetzt so nen fucking Brush an
Create, okay, okay
D2D
Device Context Create Brush
Create Solid Color
Was haben die sich bei Microsoft
Ah, jetzt kann ich wieder Color 4
Color 4 Black
Okay, wir nehmen mal Red
Das sieht man besser
Ähm
Reicht doch, oder?
Black
Brush, okay, wunderbar
Alles, alles weg
So, und das kann ich jetzt malen
Hier
Aber man sieht, man sieht auf dem Fenster noch nix
Man sieht auf dem Fenster
So, okay, wie geht's jetzt weiter
Ja, Fill Ellipse
Ich hab Rectangle gemacht, ist auch okay
Ähm
End Draw
End Draw
So, und jetzt muss ich bei der Swap Chain
Swap Chain noch sagen
Present
Genau, also Swap Chain
Present
Äh, was hat der hier angegeben
Eins
Null
Flex, alles, Flex
Na gut, Flex ist Intervall
Das ist wahrscheinlich, ob Vsync oder nicht
Kein Schimmer
So, das dürfte jetzt nicht funktionieren
Also sollte nicht crashen, aber ich sollte nix sehen
Richtig
Weil ich hab ja noch nicht gesagt, dass er auf das Fenster malen soll
Also, soweit ich das verstehe
Funktioniert das folgendermaßen
Der malt gerade
Nen schwarzes Recht, äh, übrigens
Black, das Ding ist kein Black Brush
Das ist ein Red Brush
Ey, passt, also, der malt jetzt
Nen rotes Rechteck
Auf
Rote Fläche, das ist natürlich
Äußerst Big Brain
Da machen wir jetzt hier mal Black
Siehst du viel
Okay, der malt jetzt
Nen rotes Rechteck auf nen schwarzen Hintergrund
Auf dieses Bitmap, nur
Wird das Bitmap nirgendswo angezeigt
Das heißt, als nächstes müssen wir jetzt
Irgendwie, Alter, die Yoshi Musik, please
Als nächstes müssen wir jetzt irgendwie
Schauen
Dass ich das Bitmap
Auf das Fenster bekomme
Okay, was macht der denn hier für schwarze
Magie wieder, der Kerl
Also, was, was gibt das hier jetzt
IDC
Composition Device, okay, das gibt's nicht
Ah, das muss ich wahrscheinlich per Nougat erst noch
Einbinden
Weil das im Standard Package nicht dabei ist
Komm
Direct Composition
Jawohl
Else Install
Dafür brauchst du ein Device, immer, immer
Das hab ich
Mittlerweile auch schon durch, bin ich schon
Durchgestiegen, man braucht immer nen Device
Für alles bei dem
Also, wir brauchen
Wieder Wortes
Und jetzt brauchen wir allerdings zur Abwechslung wahrscheinlich
Composition
Äh
Funktioniert denn das jetzt
Decomposition
Ah
Der hat keinen Bock zweimal Direct Composition zu schreiben
Jetzt ist es einfach Decomp
Decomposition
Create Device
Da muss das DxGi
Device
Lol, Alter
Out, das ist jetzt was
Das Comp Device ist es jetzt, okay
Das ist jetzt das Comp Device
Ah, Moment, Moment
Nicht so, nicht so, nicht so schnell Max
Nicht so schnell, du brauchst ein
Ein
Moment, Moment, Moment, langsam, langsam
Ein, ein, ein
I
Decomposition Device
Natürlich, was sonst
Diese Api
Ist top, ne
Ich brauch Comp Device 4
Nee, oder? Nee, brauche ich nicht, stimmt überhaupt nicht
Ich brauche nicht Comp Device 4
Ich hab die Auswahl zwischen
Comp Device 2, 3
1, 2, 3
Und Comp Device Debug
Und Comp Device Desktop Device
Natürlich
Okay, so, next
Meine Güte ist das hässlich, so, jetzt haben wir
Moment, jetzt haben wir das Composition Device
Jetzt, jetzt kommt das
Jetzt kommt der Trick
Jetzt kommt der Trick
Jetzt weiß er, dass er auf das Fenster malen soll
Hast du Visual
Moment, Moment, wie, wie lang
Geht das, okay, nee, geht nicht mal lang, geht nicht mal lang
Ist das deren
Art von Versionierung, ja
Das, das zieht sich durch die ganzen Microsoft
Apis, das zieht sich
Durch die ganze Microsoft Apis
Wenn der, ähm
Wenn die
Eine neue Version bringen, dann machen die einfach
Irgendwas erweitern
Machen die einfach eins dran
Deswegen ist, das ist der Grund
Gerade die Office Apis, habe ich immer
Sagen lassen, ist ganz schrecklich in der Richtung
Das ist eines der Gründe, warum die jetzt gesagt
Haben, dass man in C Sharp
Äh, Default Methoden in Interfaces machen kann
Okay, weiter geht's
Weiter geht's, weiter geht's
Comp Device
Create
Create
Create
Target from haven't
Ist irgendein Handle
This handle, bam
Von meinem Fenster
Topmost, klar
Out
I composition target
Comp
Target
Okay, top, top
Huge
Okay, crasht
Es schon oder geht's noch
Es geht immer noch
Leute, ich bin da langsam, langsam echt
Zuversichtlich, dass es gleich funktioniert
So, also jetzt haben wir das geschafft, wie geht's, wie geht's?
Weiter, wie geht's, wie geht's weiter?
Nee, Moment, wo, ah
Wo sind wir? Hier
Ähm, okay
True, habe ich schon angegeben, top
Alles klar
Handle returned by create windows
Second parameter
Will become
But I need
At least one visual object
Warum?
Egal
Egal, einfach weil's, einfach weil's geht
Easy, also was machen wir?
Was macht er jetzt?
Visual brauchen wir jetzt, also
De, comp, device
Nee, Moment, comp, comp device
Create visual
Brauchst du jetzt irgendwas?
Ja, out, var
Äh
Comp visual, mir gehen langsam
Die variablen Namen für den Chat aus
Let's do the source code of github
Kann ich machen, falls ich den
Diese Ausgeburt des Bösen jemand
Angucken will
Okay, jetzt habe ich den visual, wie geht's jetzt weiter?
Set Content, ah, jetzt wird's
Jetzt, jetzt, jetzt funktioniert
Jetzt, glaub jetzt
Komma, jetzt komma dahinter
Jetzt benutzen die quasi den
Window Manager von Windows
DWM Zeug, dafür
Um, also das ist
Quasi die Verbindung zwischen dem Fenster
Und dem Windows
Und diesem Windows Composition Manager
So, und jetzt
Setzen wir
Dieses
Was auch immer das von diesem Windows
Composition Manager
Auf das Bitmap
Wo wir gerade rauf gemalt haben
Wenn ich's, wenn ich's, wenn ich's jetzt
Irgendwie der Sache noch folgen kann
Okay
Content
Ah, ne Moment, Punkt, Punkt
Set, ach hier ist das Set Content
Da oben war's Target
Okay, Swap Chain
Get
Get Buffer
Oh, fuck
Swap Chain angeben
I unknown
Ja geil, was muss denn da rein?
Die wissen selber nicht
Microsoft hat legit
Keine Ahnung, was man da rein
Reinstecken muss
Gachi Bass
Kann man da reinstecken
Okay, ich check's nicht, was, was
Swap Chain Get
Das hat er doch oben schon mal gemacht, was hat er denn da
Ne, einfach die
Swap Chain, einfach, einfach die Swap Chain
machen, Set Content
Einfach nur so, vielleicht, vielleicht ist es das echt
Ja, mal kurz schauen, ob's crasht
Es crasht immer noch nicht, alles klar
Okay, Visual is ready
Target, Set Root
Visual, Get
Moment, was, welches
Target, Target
Comp, Comp Target, wir haben nur ein Target
W, äh
Set, Set
Root
Comp, hahaha
Ich blicke nicht durch
Was
Hahaha
Was zum Teufel war nochmal
Comp Target
Ah, mein Fenster, mein Fenster ist
Comp Target
Okay, und jetzt geht es?
Ah ne, Commit, natürlich, natürlich
Wie kommt man denn jetzt da hin, dass das jetzt einfach fertig wär
Ähm
Comp Device, Commit
Alles klar, easy as
Fuck, und
Funktioniert's
Das geht, das geht
Lol
Hahaha
Das funktioniert einfach
Hättet ihr das gedacht?
Also ich nicht, ganz ehrlich
Jetzt war, also, legit, ich hätte
Ich hätte nicht gedacht, dass das funktioniert
Jetzt wird, ja genau, jetzt wird in den
Arsch gebissen gerade
Leute, ein Hardware beschleunigtes
Ach so, jetzt, jetzt
Die Transparenz ist ja rip
Ich muss, ich mein, ich muss Clear machen
Ich muss Clear machen
Clear?
Ohne
Transparent muss ich Clearen
Leute, es ist ein Transparentes
Transparenz
Rodes, Rodes
Äh, Viereck
Ist das nicht Poggers?
So, und jetzt zeige ich euch mal, dass das
Auch ohne Fenster funktioniert
Dann muss ich das einfach mal wieder hier
Klauen aus dem anderen
Moment, ne
Wo hatte ich das, ich hatte es mir doch irgendwo rauskopiert
Hier
So
Guckt, seht ihr Leute
Overlay, oh
Topmost funktioniert aus irgendwelchen Gründen nicht
Habe ich gar nicht gesetzt
Moment, habe ich gar nicht gesetzt
Muss, ich muss jetzt noch
Sagen, dass es
Topmost true ist
Leute, ich habe ein Overlay
Was
Wo ich durchklicken kann und was einfach
Overlayt, Hardware accelerated
Overlay, allerdings
Das malt kein Bild
Das malt halt nur eine rote
Rotes Viereck, aber es ist ein Overlay
Es funktioniert, ja
Ich kann euch zeigen, dass das wirklich geht
Ich kann jetzt zum Beispiel auch sagen, ich mache das hier
Ich fange ab 100 an
Dann dürfte das hier so ungefähr starten
Bam, guck hier, da ist es
Wahnsinn
Wie viel FPS? 1
Also, ne, 0, 0
Das malt einmal und danach nie wieder
Overlayt das auch
Die Taskbar
Das ist eine gute Frage
Das können wir ausprobieren
Ob es auch die Taskbar Overlayt
Wir machen einfach alles
Ne, das wird die Taskbar nicht Overlayn
Ne, das wird die Taskbar nicht Overlayn
Weil Fenster gehen ja nur bis hier
Wobei
Ne, ich glaube nicht
Ich glaube nicht, dass es die Taskbar Overlayt
Wie ist das denn
Mit meinen aktuellen Bildchen
Verschwinden die in einer Taskbar?
Ah ne, guck mal hier
Dann funktioniert es mit dem wahrscheinlich auch
Wenn es die Taskbar Overlayt
Ähm
Wartet mal
Das Overlayt die Taskbar
Das Overlayt die Taskbar
Okay, das funktioniert
By the way, das ist übrigens richtig, richtig geil
Fällt mir gerade auf
Ähm
Für Cheater
Also für Cheatprogrammierer
Ist das eigentlich richtig nice
Nicht, dass ich irgendjemanden anstiften möchte
Zum Cheatsprogrammieren oder so
Aber das ist auch gut
Was man wunderbar zum Cheatsprogrammieren
Verwenden könnte, gehe ich mal von aus
So ein Overlay
Ein halbwegs performantes Overlay
Klickt man danach in die Taskbar
Ja gut, das kann ich jetzt
Nicht machen, weil ich das Fenster nicht auf durch
Durchklickbar
Gemacht habe
Da müsste ich das Fenster hier so machen, dass ich durchklicken kann
Und dann weiß ich aber nicht
Wie ich das über die Taskbar platziere
Da müsste ich wahrscheinlich Position oder irgendwie
Sowas angeben
Position
Äh
Wie macht man das in Windows Forms überhaupt nochmal
Äh
Location
Ja, also
Ich habe 1920x1080
Also
Wir fangen an auf keine Ahnung
X auf 100
So und das machen wir jetzt irgendwie
Auf 1000
1000 so
Jetzt sollte das Fenster hier unten
Irgendwo rumhängen
Warum nicht
Ich draw das Rechteck
Ja das macht nix
Ich draw das Rechteck bei 100 100
Aber 100 100 im Fenster
Und das ist die Fenster Location
Äh
Wie kriege ich denn das Fenster da jetzt runter
Legit keine Ahnung
Ich habe keine Ahnung
Dachte eigentlich, dass das so funktioniert
Muss man hier vielleicht sagen Start Position
Äh
Vielleicht muss man das machen, nachdem es angezeigt wird
Override
Äh On
Äh
Shown ist es glaube ich
Location
0 und jetzt 1000
Ob das jetzt besser funktioniert
Ah
Okay das scheint besser zu funktionieren
Nur das ich jetzt irgendwohin geschoben habe, wo ich es nicht mal sehe
Sollte das jetzt nicht
Sollte das nicht eigentlich einfach jetzt gehen
Ah okay, hä
Ich bin
Ich bin sehr, ich bin stark verwirrt
Ich checke nicht
Okay, aber das scheint zu klappen
Ja guck es ist Overlaid
Es ist Overlaid die Startleiste
Und ich kann durchklicken, seht ihr
So muss das sein
Ach guck mal, ha
Jetzt wird es Overlaid wieder
Bam, schreckt
Die Taskleiste schummelt
Die Taskleiste bescheißt
Aber das macht nichts, ich Overlaid die Taskleiste sonst eh nicht
Guck mal, das heißt die Taskleiste
Crabt sich
Nach einer Zeit, die
Oder auch nicht
Eben hat es die Taskleiste sich das wieder zurück
Ach keine Ahnung
Windows Logik ist mir
Also wunderbar
Das funktioniert doch schon mal ganz gut
Und wohlgemerkt
Ich mein
Es ist schon mega hässlich
Der ganze Kram hier
Aber es funktioniert
Es ist schon mal
Es ist ein rotes Viereck
Es ist übrigens nicht mein Ziel
Ein rotes Viereck zu malen
Und ich habe nämlich jetzt
Jeweils die einzelnen Bilder von einem GIF
Von einem animierten GIF
Aber ich fürchte das kriegen wir jetzt heute in 40 Minuten nicht mehr gebacken
Mit FFmpeg Gif decoden
Und sonst was
Wir könnten mal probieren einfach
Einen
Einen Bitmap anzuzeigen
Von einer Festplatte
Das müsste doch irgendwie funktionieren
Wie malt man ein Bitmap mit
Wie malt man ein Bitmap jetzt mit
Mit Direct2D
Also D2D Device Context
Draw
Image
Aha
Image
Bitmap
Wie kriege ich da jetzt ein Bitmap von einer Festplatte geladen
Alter die Musik
Kannst doch bestimmt einfach ein Drawing Bitmap da rein schieben
Ne
Ne
Ne ne ne
Eher nicht
System Drawing Bitmap
Load from File
Brauch mal ein Bitmap
Äh
Hab ich hier irgendwo eins
Ist das eins
Ist das eins
Ich mach einfach ein Paint Bild
Paint
Brrrr
Exquisite das will ich jetzt malen unbedingt
Genau das hier
Das und nix anderes
Safe
Nicht PNG
Äh
Dip
Moment
24 Bit
Bitmap
Ja RGB 24 Bit
8 8 Bit pro
Ja genau
Ok Untitled Untitled beste beste
Hier rein
Untitled BMP
Perfekt
From File
Ok also wir laden das ganze jetzt
C Doppelpunkt Backslash User
Stream
Untitled BMP
So und das lade ich aber hier oben mal
Ganz am Anfang
Dass ich gleich sehe ob es crasht
Bitmap ne so muss ich das nennen
Bitmap hab ich ja schon
Was hat er jetzt hier für Schmerzen
Volifier is redundant
Ok
Was wo ist das Problem
Image
What
Äh ist mir recht
Oh
Habe ich jetzt das Bild falsch angegeben
Es ist Users ne
Users
Was How to load direct to the bitmap from file
Pass mal auf das ist bestimmt auch wieder hässlich
Hässlich wie die Nacht
Was Vic
iVic Factory
Das hört sich aber schon fast
Ein bisschen unanständig an oder
iVic Factory
Generic kann man nicht einfach
Microsoft Microsoft
Hättet ihr nicht einfach sowas machen können
Wie bitmap.load
Oder irgendwie sowas
Das ist zu
Zu kompliziert glaube ich
Ok also wir haben den bitmap geladen
Kann ich das denn jetzt irgendwie irgendwie
Überschreiben guck mal
Wir könnten das doch eigentlich richtig
Richtig big brain machen
Wir nehmen jetzt einfach unser bitmap
Copy gibt es da sowas wie
Copy pixels oder sowas
Copy from memory
Guck mal hier copy from memory
Äh wie kriege ich jetzt das memory davon
Das wird zu hoch für heute
How to create
Hier werden schon wieder die stack overflow links
Ausgetauscht
Äh wat
Das habe ich doch gerade gefunden copy from memory
Blablabla
Ok genau so schlau
Das habe ich auch hier gerade gefunden
Nur mit dem unterschied ich muss das jetzt irgendwie
Aus diesem bitmap raus kriegen
Äh bytes
Data haben die irgendwie sowas pixels
Irgendwie byte byte array oder so
Gibt es
Gibt es da sowas
Wie komme ich
Wie komme ich an die bytes von diesem
Bild ran
Hm tja
Pointer zu dem bitmap
Stream safe
A raw format
Ne das ist was anderes
Ok
Get bytes from bitmap
Convert it
By the way perfekt perfekt
But
Was
Memory wirklich ernsthaft
Weil ihr seid microsoft
Weil ihr seid microsoft
Ok
Es ist kein bmp
Das ist es
Stream to array
Achso ne ne ne
Moment nicht return
Ja
Using war
So
Ok
Copy from memory
Gibt es auch so copy from stream oder sowas
Ne natürlich nicht
Ok copy from
Alter
Copy from memory
Data
Byte data
Ok
Also einfach stream to array
Und dann was pitch
Äh
Oh fuck
Das ist glaube ich wie viele pixel oder wie viele bytes
Pro pro zeile oder sowas
Äh
Wie kriege ich denn das jetzt da raus
Äh
Ich hab auch keine Ahnung was ich da mache
Wie kriege ich das da raus
Bitmap data
Wie kriege ich denn das da raus
Das ist wie viele
Wie viele pro zeile
Ach das ist das falsche was ich hab
Das da brauche ich ja
Oh fuck
Ich brauche wie breit das ganze ist
Size
Ne
Also das ist die alternative
Ok das brauche ich immer
Ne das ist
Also das ist wie
Wie viel bytes
Oder wie viel bits
Eine zeile hat
Und anhand dessen kann sich das dann irgendwie errechnen
Weil es ist ja die
Es ist ja so
Das ist ja nicht immer ein 24 bit
Bitmap das kann auch ne also ne
24 bit bedeutet ja du hast
8 bit für rot 8 bit für grün 8 bit für blau
Das muss es ja nicht sein
Das muss ein anderes sein
Bitmap data
Wie kriege ich das
Bitmap data
Ich check nicht wie verwende ich den
Scheiß denn
Bitmap data
Bitmap data
Also das heißt einfach so
Was new bitmap data
Ich check es nicht
Wie verwende ich den shit denn jetzt
Bitmap data
Bitmap data
Hä
Das kann doch nicht so kompliziert sein
Ne ne das bringt mir nichts
Ich muss einfach wissen wie ich das
Wie ich die info da raus bekomme
Log bits
Ok anscheinend muss ich wirklich sagen
Was auch immer
Ich muss sagen
Log
Ne ich bin zu unfähig
Das zu verwenden
Breite mal bytes
Ja gut das wäre ja dann im Endeffekt einfach
Breite
Breite mal 3
Ne achso mal
Äh
Doch mal 3
Ok funktioniert das jetzt
Passt auf Leute jetzt crasht es gleich
Jetzt crasht es
Es crasht nicht
Aber es funktioniert auch nicht
Achso ich mache ja clear
Moment ich mache ja hier clear
Du du du
Wo mache ich hier clear
Ja das machen wir
Vor dem clear
Oder nach dem
Es stimmt zwar nicht
Es stimmt zwar hinten und vorne nicht
Von den Farben her
Aber vom Prinzip her
Ist es schon mal sowas wie mein Bild im Hintergrund
Nur das
Was ich angegeben habe nicht stimmt
Ihr seht es ja auch das ist Shep
Das mit mal 3
Ist dann doch nicht so einfach
Es müsste mal 4 sein by the way
Aber jetzt crasht
Aber wir nähern uns
Wir nähern uns der Sache
Ok Leute
Ich werde das jetzt
Für heute dabei belassen
Wir machen dann vielleicht morgen weiter
Ähm ich
Ich musste jetzt erstmal mich ein bisschen beruhigen wieder
Das war mir zu big big brain time
Für heute
Wir gucken uns
Wir gucken uns jetzt noch ein Video zusammen an
Which biggest mystery solved
Das gucken wir uns
Das gucken wir uns am Sonntag an
Boapa
Wir gucken uns jetzt noch ein bisschen big brain time an
50 AWS services explained in 10 Minuten
Übrigens ich kann den Channel nicht oft
Nicht oft genug empfehlen
Die machen echt gute Videos
Ok nice also
50 services explained
Only big brain time content hier wieder
Amazon web services launched in 2006
With a total of 3 products
Storage buckets, compute instances
And a messaging queue
Ja S3 war das erste
Und einzige was ich überhaupt jemals richtig
Benutzt habe von Amazon
Mind numming 200 and something services
Es blickt bei
Ohne Scheiß Leute sowohl bei Asher als auch bei AWS
Blickt keiner mal durch
Es gibt so vieles
Und gefühlt doppelt und dreifach
Das du also ich blicke
Ich blicke dann immer durch das ist mir zu hoch
Is that many of them appear to do almost the exact same thing
Is that many of them appear to do almost the exact same thing
It's kind of like shopping at a big grocery store
Where you have different aisles of product categories
Filled with things to buy
That meet the needs of virtually every developer on the planet
In todays video we'll walk down these aisles
Where I see these icons
This triggers me with Azure
Azure also has icons
I can't keep all of them apart
Luckily
In the Azure Web Interface
Is mostly right next to what it is
But I can't keep the icons
Apart
The only thing I can notice
Is the Azure Functions
They have a flash icon
A flash but otherwise
To gain an understanding
Of over 50 different AWS products
So first let's start with a few
That are above my paygrade
That you may not know exist
If you're building RoboMaker
You can use RoboMaker to simulate and test your robots at scale
And once your robots are in people's homes
Das ist ein AWS Service?
RobotMaker?
You can use IoT Core
To collect data from them
Update their software and manage them remotely
If you happen to have a satellite orbiting Earth
You can tap into...
Ist bei ernsthaft
Was ist das für eine Frage?
Ob ihr einen Satellit habt?
Ich würde einfach davon ausgehen
Dass mittlerweile jeder einen Satellit hat
Verstehe nicht
Peinlich
Peinlich wer es nicht hat
And if you want to start experimenting
And researching the future of computing
You can use Bracket to interact
With a quantum computer
QZ fliegt schon seit
Fünf Jahren um die Erde
But most developers
Go to the cloud to solve more problems
To solve more practical problems
That's a practical problem
Jetzt habe ich nicht zugehört
Groundstation
Amazons global network of antenna
To connect data through its groundstation service
And if you want to start experimenting
And researching the future of computing
You can use Bracket to interact
With a quantum computer
Die haben bei AWS wirklich
Einen quantum computer as a service
Or was
...to solve more practical problems
Das ist das, wo Elasticsearch komplett abgefuckt war, dass das Zeug Elastic heißt bei Amazon.
Weil Amazon hat, also AWS hat auch Elasticsearch angeboten, hat aber mit Elastic erst mal gar nichts zu tun gehabt.
Und da haben die sich richtig getopft vor einem halben Jahr.
Da wird hyperscaled diagonal skaliert.
Ja, sowas haben die bei Azure auch.
Und ich muss euch ehrlich sagen, ich finde diese Services mega painstamp zu benutzen.
Also, ja, aber da muss man ja sagen, auch wenn ich der Hetzner Sellout-Mann hier bin auf Twitch,
das kann Hetzner nicht in dem Detail wie das Azure und AWS.
Wollen sie wahrscheinlich auch nicht.
Aber ich finde diese Metrix, diese App-Metrix heißt glaube ich bei Azure, extrem painstamp zu bedienen.
Das ist alles so kleine Furz, ich zeige euch das mal, so kleine Furzfenster mit zig Unterfenster nochmal.
Ne, Service, Application Insight heißt es, genau.
Die wissen schon, warum die davon kein Bild zeigen.
Ne, ne, so sieht das nicht aus.
Das sieht viel zu ordentlich aus für Azure.
Natürlich haben die da kein Bild, weil es kacke ausschaut, ja, so in der Richtung.
Ja, ja, das ist komplett voll, das ist komplett voll, dieses Fenster immer.
Du blickst, du, ja, ja, du blickst, du blickst nicht durch.
Ja, so sieht das aus.
Das ist einfach nur, ne, das ist gar nicht das, ist egal, wir machen jetzt weiter.
Was bedeutet denn Elastic in dem Fall?
Einfach nur ein Name bei Amazon.
Das heißt einfach nur, es heißt einfach nur Elastic.
Das ist so, wie Twitch, Twitch heißt.
Das ist einfach, Amazon hat es gedacht, wir nennen das jetzt so, so eine gute Idee.
Cloudwatch.
Oh, Autos, das, das, das war's für, für KLS hier.
Da wird skaliert, ganz automatisch.
... based on the traffic and utilization of your current infrastructure.
These tools were revolutionary at the time, but developers still wanted an easier way to get things done.
And that's where Elastic Beanstalk comes in.
Most developers in 2011 just wanted to deploy a Ruby on Rails app.
Elastic Beanstalk made that...
Ruby, wer will denn das machen? Aber das war vor 2009, oder was hat er gesagt?
... deploy a Ruby on Rails app.
Beanstalk comes in.
Most developers in 2011 just wanted...
Ah, 2011, ja, okay, das passt.
In 2011 war Ruby on Rails noch angesagt, das stimmt.
... meant to deploy...
Ich bin übrigens richtiger Ruby-Fan, ne?
Also wenn ich die Auswahl hab, zwischen, also, nicht Auswahl, wenn ich mir's aussuchen kann,
mach ich die Sachen entweder in C-Sharp oder in Ruby.
Leider bin ich die letzten Jahre nicht mehr so viel zu Ruby gekommen, weil Ruby so ein bisschen so aus,
wie heißt das so, nicht mehr favorisiert.
Also keiner, keiner macht mehr was in Ruby.
Aber wenn ich's mir aussuchen kann, würde ich's in Ruby machen oder in C-Sharp.
Ich mag Ruby.
Ruby ist echt so eine meiner Lieblingssprachen, aber, ja, wird leider nicht mehr benutzt.
Also, Ruby hat gegen Python komplett abgeschissen in 2020, ja.
Also spätestens.
Pass.
Pass.
Pass.
Pass.
Pass.
Pass.
Pass.
Pass.
Pass.
Pass.
Pass.
Pass.
Pass.
Pass.
Pass.
Pass.
Pass.
Pass.
Pass.
Pass.
Pass.
Pass.
Pass.
Pass.
Pass.
Pass.
Pass.
Pass.
Kann ihr euch noch daran erinnern?
Wo die bei Microsoft Windows 11 so rumgeschwallt haben?
Platform as a platform?
Want to deploy a WordPress site?
LightSail is an alternative option, where you can point and click at what you want to
deploy and worry even less about the underlying configuration.
In all these cases, you are deploying a static server that is always running in the cloud.
But you don't have to worry about the underlying configuration.
But many computing jobs are ephemeral, which means they don't rely on any persistent state on the server.
So why bother deploying a server for a code like that?
Ah, jetzt kommen die Function-Geschichte.
Which are functions as a service.
Was ist das jetzt?
Bullshit as a service. Ja, brainless.
Brainless functions, nicht serverless.
Aber das Zeug ist wirklich ganz cool.
Für das, wofür es gut ist.
Also, ich würde nicht so weit gehen und sagen, hey, ich baue jetzt alles nur noch damit.
Letztendlich, dieses ganze Cloud-Zeug, so angenehm das vielleicht auch ist, das ist halt teuer.
Das ist halt teuer.
Also, diese ganze Sache, die sich da eingeredet wird von wegen Kostenersparnis, die stimmt ja überhaupt nicht.
Kostenersparnis hast du in zwei Fällen.
Wenn du in der Cloud so wenig benutzt, dass dieses quasi, ähm, dieses, äh,
was weiß ich, du hast fünf Aufrufe im Monat und dann bezahlst du wirklich nur die Aufrufe und musst keine VM bezahlen.
Dann ist es billiger, ne, da kostet dich nix im Endeffekt, wenn du es quasi in Azure Functions oder Lambda laufen lässt.
Umgekehrter Fall ist, du hast sehr viel, aber ungleichmäßig.
Also mal angenommen, du hast einen Service, der mal 10 aktive Benutzer hat und mal 5000 aktive Benutzer.
Und du willst halt nicht diese Informationen.
Du willst nicht die Infrastruktur vorhalten oder dich selbst ums, ums, äh, skalieren kümmern.
Dann ist das, ist das auch was.
Aber ansonsten, also, ich hab da noch nicht, ich muss euch ehrlich sagen, ich hab da noch nicht so den Riesen-Anwendungs,
also ich seh da noch nicht den Riesensinn dahinter.
Ich hab da in letzter Zeit relativ, relativ viel mit rumgebastelt.
Für kleine Sachen ist das cool, für so kleine Service-Dinger zum Beispiel, die irgendwas synken oder so.
Eventuell, eventuell.
Auch für, für Anmeldung.
Ja, wenn man irgendeinen Authentifizierung-Service in Azure oder in AWS verwendet und sich darüber anmeldet.
Aber für die eigentliche Application, die würde ich nicht als irgendwie Function verpacken.
Einfach eine VM irgendwo hinstellen, truff und gut ist.
Das ist billiger und du hast viel weniger Probleme, weil du komplett drumherum alles selbst machen kannst.
Ja.
Es ist halt wie bei vielem in diesem, in diesem Bereich.
Ich, da wird sehr viel heiße Luft verbreitet und es gibt dann irgendwelche Leute, die Talks zu halten und der Meinung sind,
man müsste das jetzt alles nur noch damit machen und sowas, dass sie schwach sind.
Man muss, man muss sich angucken, was man machen will und dann das richtige Tool dafür raussuchen.
Und nicht nur, weil das irgendein, irgendein super Big-Brain-Typ gesagt hat, das jetzt machen.
Wenn es um Big-Brain-Sachen geht, wir haben bei uns auf der Arbeit jetzt, mussten wir wegen Microsoft,
kann ich euch jetzt nicht genau erzählen, warum, wir haben jetzt auf jedem Server, auch auf Linux-Servern,
haben wir Windows Defender installiert und das Ding macht richtig Probleme.
So von 100% ausgelasten CPU-Kern zu, ähm, auf unserem File-Server ist Windows Defender der Meinung,
wir haben ein Virus, weil es offene File-Handles hat, wo ich mir dann denke, ja klar, das ist ein File-Server,
also aber da ist ein offener File-Handles, das kommt vor.
Der macht dann sowas.
Also bei uns im Rechenzentrum, früher, früher im Rechenzentrum, jetzt nicht da, wo ich jetzt bin, aber, ähm,
Früher im Rechenzentrum, da sah unsere Patchpanel, das waren so zwei große Schränke mit Patchpanels, die sahen jetzt auch nicht so viel anders aus.
Nur, dass die Kabel selten so rumgingen, sondern immer noch oben rumgeführt wurden, aber du hast auch sehr schwer was gefunden.
Post is a way to run AWS APIs on your own infrastructure without needing to throw your old servers in the garbage.
In other cases, you may want to interact with AWS from remote or extreme environments.
Wisst ihr, was ich kacke finde bei AWS? Fällt mir jetzt gerade wieder auf.
Die ganzen Services haben zu 80% vom Namen her nichts mit der Funktion zu tun.
Light Sale. Woher sollst du wissen, dass Light Sale für irgendwelche, oder Beanstalk,
irgendwas mit Ruby zu tun hat und sowas?
... a scientist in the Arctic. Snow Devices are like little mini data centers that can work without internet in hostile environments.
So that gives us some fundamental ways to compute things, but many apps today are standardized with Docker containers,
allowing them to run on multiple different clouds or computing environments with very little effort.
To run a container, you first need to create a Docker image and store it somewhere.
Elastic Container Registry allows you to upload an image, allowing other tools like Elastic Container,
a container service, to pull it back down and run it.
ECS is an API for starting, stopping, and allocating virtual machines to your containers,
and allows you to connect them to other products like load balancers.
Some companies may want more control over how their app scales, in which case EKS is a tool for running Kubernetes.
But in other cases, you may want your containers to behave in a more automated way.
Fargate is a tool that will make your containers...
Alter, wer blickt denn da noch durch?
... containers behave like serverless functions, removing the need to allocate EC2-instances,
Azure On-Prem, nein, das haben wir nicht.
... containers.
But if you're building an application and already have it containerized,
the easiest way to deploy it to AWS is...
Okay, das hat mal wenigstens einen Namen, wo man sich was darunter vorstellen kann.
... where you simply point it to a container image,
while it handles all the orchestration and scaling behind the scenes.
But running an application is only half the battle.
We also need to store data in the cloud.
Simple Storage Service, or S3, was the very first product offered by AWS.
Ja, das kenne ich. Das ist, glaube ich, das Einzige, wovon jeder schon mal irgendwie,
was gehört hat, was von Amazon Cloud gedöhnt am Start ist.
... it can store any type of file or object, like an image or video,
and is based on the same infrastructure as Amazon's e-commerce site.
It's great for general-purpose file storage, but if you don't access your files very often,
you can archive them in Glacier, which has a higher latency...
Das ist auch wieder so ein Ding, niemand kann sich das in Zusammenhang merken,
dass die File-Archivierung, ja, also,
könntest du das nicht einfach AWS Archive nennen oder so,
dann weißt du wenigstens, wie es heißt.
... much lower cost.
On the other end of the spectrum, you may need storage that is extremely fast
and can handle a lot of throughput.
Elastic Block Storage is ideal for applications that have intensive data processing requirements,
but requires more manual configuration by the developer.
Now, if you want something that's highly performant and also fully managed,
Elastic File System provides all the bells and whistles, but at a much higher cost.
In addition to raw files, developers also need to store structured data for their end users.
And that brings us to the database aisle, which has a lot of different products...
Ja.
... which has a lot of different products...
... also, wie wir machen, für 80.000 Euro SSDs dranhängen.
... the first ever database on AWS...
Im Monat.
... was SimpleDB.
Im Monat.
... a general purpose no-SQL database, but it tends to be a little too simple for most people.
Everybody knows you never go full retard.
... it was followed up a few years later with DynamoDB...
DynamoDB, das kenne ich auch.
... which is a document database that's very easy to scale horizontally.
It's inexpensive and provides...
Das ist, das, das, CosmoDB, Cosmos, Cosmo?
Ich kann mir nicht merken, wie es bei Azure heißt, aber die haben auch so Zeug.
... fast read performance.
... but it isn't very good at modeling relational data.
If you're familiar with MongoDB...
Cosmos, ja.
... another document database option is DocumentDB.
It's a controversial option that's technically not MongoDB, that has a one-to-one mapping of the MongoDB API...
Da blinkt keiner mehr durch.
... to get around restrictive open source licensing.
Speaking of which, Amazon also did a similar thing with Elasticsearch, which itself is a great option...
Ja, by the way, das Produkt heißt wirklich Elasticsearch.
Es hat nichts mit diesem Elastic zu tun, was Amazon sonst überall traut.
... which itself is a great option if you want to build something like a full-text search engine.
But the majority of developers out there will opt for a traditional relational SQL database.
Da haben die sich drüber beschwert bei Elasticsearch, dass das zu ähnlich an ihrem Namen dran ist.
Da gab es richtig Stress vor so einem halben Jahr.
... supports a variety of different SQL flavors and can fully manage things like backups...
Leute, der Teufel! Zweite von rechts! Fällt mir jetzt erst auf! Gehst du weg!
... patching and scale.
But Amazon also offers its own proprietary flavor of SQL called Aurora.
It's compatible with Postgres or MySQL and can be operated with better performance at a lower cost.
In addition, Aurora offers a new serverless option that makes it even easier to scale and you only pay for the actual time...
Mein Gehirn ist durch jetzt nach dem Video.
... relational databases are a great general purpose option, but they're not the only option.
Neptune is a graph database that can achieve better performance on highly connected datasets.
Like a social graph or recommendation engine.
If your current database is too slow, you may want to bring in Elastic Cache, which is a fully managed version of Redis...
... der wiederum nichts mit Elasticsearch zu tun hat.
Man darf sich das jetzt nicht...
Also wer jetzt etwa denkt, dass Elasticsearch und Elastic Cache was mit Mana zu tun haben?
Nee, nee, nee, nee!
... an in-memory database that delivers data to your end users with extremely low latency.
If you work with time series data, like the stock market for example...
Stonks!
... you might benefit from Timestream.
... a time series database with built-in functions for time-based queries and additional features for analytics.
Yet another option is the quantum ledger database, which allows you to build an immutable set of cryptographically signed transactions...
Das hört ja gar nicht mal auf!
... to decentralize blockchain technology.
Now let's shift gears and talk about analytics.
To analyze data, you first need a place to store it.
And a popular option for doing that is Redshift, which is a data warehouse that tries to get you to shift away from Oracle.
Warehouses are often used by big enterprises.
To dump multiple data sources from the business, where they can be analyzed together.
When all your data is in one place, it's easier to generate meaningful analytics...
Nee, hab ich noch nicht gelesen.
... and machine learning on it.
Data in a warehouse is structured, so it can be queried.
But if you need a place to put a large amount of unstructured data...
Wo ist jetzt der Unterschied zwischen der normalen Datenbank und Redshift?
Ich meine, in der normalen Datenbank kann ich auch Sachen querien.
Oder ist das so eine Metadatenbank über andere Datenbanken drüber?
Oder? Oder wie?
Oder was? Oder wie? Oder wo?
... Lake Formation, which is a tool for creating data lakes or repositories that store a large amount of unstructured data,
which can be used in addition to data warehouses to query...
Unstructured data? Man könnte auch einfach einen File-Share machen für unstructured data.
... a larger variety of data sources.
If you want to analyze real-time data, you can use Kinesis to capture real-time streams from your infrastructure.
Then visualize them in your favorite business intelligence.
Or you can use a stream-processing framework, like Apache Spark, that runs on Elastic MapReduce,
which itself is a service that allows you to operate on massive datasets efficiently with a parallel distributed algorithm.
Now, if you don't want to use Kinesis for streaming data, a popular alternative is Apache Kafka.
It's open-sourced and Amazon MSK...
Das ist der neueste Chat aktuell.
Kafka Message Queue gedöhnt, da stehen sie alle gerade drauf.
... is a fully managed service to get you started.
But for the average developer, all this data can be used...
Das ist der neueste Chat aktuell. Kafka Message Queue gedöhnt, da stehen sie alle gerade drauf.
... is a fully managed service to get you started.
... also this data processing could be a little too complicated.
Gluue is a serverless product that makes it much easier...
Das hört gar nicht mehr auf!
... to extract, transform and load your data.
It can auto connect to other data sources on AWS, like Aurora, Redshift and S3...
Alles klar, alles klar!
... and it has a tool called Gluestudio, so you can create jobs without having to write any actual source code.
... but one of the biggest advantages of collecting massive amounts of data
is that you can use it to help predict the future.
Oh, Blockchain Big Brain AI...
... and AWS has a single machine learning aisle to make that process easier.
Oh mein Gott, die haben explodiert.
Too smart.
Gibt's auch Leute, die alle Surfaces...
Nee, glaub ich nicht.
Was?
Jetzt ernsthaft, Leute.
Bis...
Bis zu diesem Video.
Wusstet ihr, dass das überhaupt existiert?
Habt ihr davon jemals schon was gehört, bevor ihr dieses Video gesehen habt?
Ich auch nicht.
Cognito.
Cognito.
Cognito ist ein Tool, das sie ermöglicht, mit einer Reihe von verschiedenen Authentikation-Methoden zu loggen und die User-Sessionen für euch managet.
Dann, wenn ihr ein paar User in eure App loggt, müsst ihr sie vielleicht Push-Notifications schicken.
SNS ist ein Tool, das diesen Job machen kann.
Oder vielleicht willst du...
Dank Apple ist Push-Notifications ja immer noch ein unglaublich beschissen kompliziertes Problem.
...E-Mails zu euren Users schicken.
SES ist das Tool für das.
Jetzt, dass du all diese Tools kennst, willst du einen organisierten Weg, um sie zu verpflichten.
Cloud-Formation ist ein Weg, um Template aufgrund eurer Infrastruktur...
Das ist im Prinzip sowas wie Terraform, nur von Amazon selbst.
...oder JSON.
...die zumindest ein bisschen in der Richtung aus...
...hunderts von verschiedenen Services mit einem einzigen Klick eines Knopfdrucks.
Von da an willst du wahrscheinlich mit diesen Services von einer Frontend-Applikation wie iOS, Android oder der Web interagieren.
Amplify bietet SDKs, die sich mit eurer Infrastruktur verbinden können, von JavaScript-Frameworks und anderen Frontend-Applikationen.
Nun, das letzte, was du erinnerst, ist, dass all das dir einiges kostet, was direkt zu Jeffs Rocket-Up geht.
Also versuche, AWS Cost Explorer und Budgets zu verwenden, wenn du nicht für diese großen, bulgierenden Raketen bezahlen willst.
Das ist das Ende des Videos.
Es hat viel Arbeit gedauert, also bitte like und abonniere den Kanal, um ein Pro-Mitglied zu werden bei Fireship.io.
Bis zum nächsten Mal, tschüss.
In Ansätzen vorhanden, im Vergleich zur Magenta-Cloud ist das gar nichts.
Ja, die Magenta-Cloud ist wahrscheinlich gar nichts.
Ich habe ja mal auf so einer Azure-Schule gefragt, weil er gemeint hat, ja, man kann auch super Daten migrieren von anderen Clouds und sonst wie.
Und da habe ich ihn gefragt, und wie sieht es aus mit der Magenta-Cloud?
Da hat er einfach nur gelacht und nichts dazu gesagt.
Also für diesen Microsoft-Trainer war die Magenta-Cloud schon so lächerlich, dass er gedacht hat, er muss da nicht mal drauf anfangen.
Doch, ich glaube, das ist OpenStack-Telekom, ja, das kann sein.
Ich habe schon öfters gesehen, dass die OpenStack-Leute suchen.
Aber gut, es ist ein Microsoft-Trainer, warum soll der auch was zur Magenta-Cloud sagen?
Echt? Wirklich? Es gibt Leute, die das benutzen? Warum?
Warum habt ihr euch für Magenta-Cloud entschieden?
Äh, ja, sagt mir irgendwas.
Genau, ja, ne, habe ich mir noch nicht angeguckt.
Was ist das?
Das gucken wir uns, das gucken wir uns, das gucken wir uns demnächst mal an.
Zumindest mal kurz.
So, nächsten Tage gucken wir uns, spätestens am Wochenende gucken wir uns die Insider-Preview an, die neue.
Ihr seid Google Cloud, also bei uns ist alles Azure.
Letztendlich ist es aber auch fast egal, ob Google Cloud oder AWS oder Microsoft.
Ist auch ein paar Feinheiten, kannst du überall die Basics machen.
Und mehr.
Problem ist nur, dass man nicht mehr durchblickt.
Okay.
Wollte ich gerade noch irgendwas beantworten?
Hat vorhin jemand gefragt?
Was?
Ne, das habe ich nicht gelesen, aber irgendwas anderes.
Azure hat wilde Fehlermeldungen, ja.
Irgendjemand hat noch irgendwas langes gefragt.
Also, was mich die Woche richtig abgefuckt hat, wir brauchen ein kleines Tool, das sollte nur ein paar Dateien manipulieren.
Und das sollte relativ performant laufen.
Ich hoffe, ihr habt es nicht in C++ gemacht.
Das ist dann zwar schnell, aber keiner blickt durch.
Oder in Kobol, ihr hättet es in Kobol machen sollen.
Egal, anstatt sich da mal moderne Technologien, Kobol, Kobol, Kobol, beste.
Und etwas Expertises damit aufzubauen, wird das einfach in Java geschrieben.
Naja, das ist doch gar nicht so schlimm.
Du kannst die Sachen auch ziemlich schnell in Java machen.
Du musst halt wissen, was du machst.
Ne?
Also, ich würde, also ganz ehrlich.
Also, ganz ehrlich.
Java hat zwar einen schlechten Ruf, das liegt aber zum größten Teil an Leuten, die nicht Java programmieren können.
Sage ich jetzt einfach, weil ich kann auch kein Java programmieren.
Ich kann es zwar lesen und ich könnte es wahrscheinlich auch programmieren, aber ich mache es so gut wie nie.
Aber dass viele Java-Software so kacke ist, das liegt an den Programmierern, gar nicht so sehr an Java selbst.
Vielleicht fördert es das auch ein bisschen, weiß ich nicht.
Aber, also, einfache Sachen schnell in Java machen ist kein Problem.
Also, Java ist relativ zackig.
Java, das ist nicht so, das ist nicht langsam.
Ich habe was in C Sharp programmiert letztens, übertragen wir das mal auf Java.
Ähm, wir haben irgendeine Log-Auswertung machen müssen.
Und da hat jemand, da hat ein Kollege von mir auf der Arbeit einen Bash-Skript zusammengewurstet.
Was ganz wildes.
Mit verschiedenen Dateien, wo dann MD5-Summen gespeichert wurden, zu unter Verzeichnis zu, frag mich nicht, ganz, ganz wildes Zeug.
So, und die hatten das Problem, dass das quasi schon in der Test-Untersuchung war.
In der Test-Umgebung, glaube ich, fünf Tage oder so gelaufen ist, bis, ich kriege es nicht mehr genau zusammen.
Ich sage jetzt einfach mal, fünf Tage gelaufen ist, bis es ein Ergebnis hatte.
So, da bin ich hingegangen, habe ein .NET Core-Programm gemacht, halt ordentlich multithreaded.
Das Ding lief ja auf einer, glaube ich, 48-Core-Kiste.
Und ich habe es noch limitiert auf irgendwie 40 Threads und habe das durchflutschen lassen.
Das war in 30 Minuten fertig.
Also, das Bash-Ding lief fünf Tage, das .NET-Programm lief, keine Ahnung, eine Viertelstunde, 20, 30 Minuten.
Also, das ist in Java, wäre das genauso möglich.
Man muss einfach wissen, was man da programmiert.
Das Zeug ist schnell genug.
Sogar JavaScript, hey, JavaScript ist viel schneller, als alle denken.
JavaScript ist eigentlich eines der schnellsten Sprachen, die es so gibt.
Ich meine, wir reden jetzt nicht von Rust oder C oder sowas.
Aber, ähm...
JavaScript ist jetzt nicht so viel langsamer als die schnellsten.
Also, ich würde mal sagen, der Unterschied...
Also, bei normalem Zeugs, ja...
Ich rede jetzt nicht von irgendwelchem hochoptimierten Inline-Assembler-C mit CPU-Caches und bla bla bla.
Also, von normalem Zeug, ja.
Weil, wenn man das da drin macht, dann ist JavaScript nicht so viel bedeutend langsamer.
Wie, sagen wir mal, ein C oder C++-Programm.
Vielleicht, vielleicht zwei-, dreimal langsamer.
Es sei denn, man trifft auf einen JavaScript-Bug.
Dass der, äh, dieser Hotpass-Jit-Compiler oder sowas da haben, dass der das nicht ordentlich optimieren kann.
Dann ist es viel, viel langsamer.
JavaScript ist gar nicht so schlecht.
Ja, das stimmt wohl.
Aber das Problem haben wir hier im Stream nicht.
Weil, ich meine, es kann ja keiner ernsthaft behaupten, dass das hier in irgendeiner Art und Weise schlecht wartbar wäre.
Also, das ist ja wohl wirklich komplett selbsterklärend, komplett ohne Kommentare lesbar und zu verstehen.
Ich glaube, da gibt es keine Fragen mehr.
Also, die müssten einfach alle mehr bei mir im Stream gucken und schauen, wie man sowas macht.
Gerade heute, ich meine, gerade heute war der Source-Code besonders, besonders, besonders hübsch.
Die Hex-Code, ja klar.
Sowas macht es immer besonders lesbar.
Wobei, an der Stelle sind die Dinger sogar halbwegs gescheit benannt.
Weißt du wenigstens, was es macht?
Push malen, ey, jetzt nicht.
Was zum...
Was zum...
Was bin ich denn hier am sehen gerade?
Irgendeiner, der Rust und JavaScript vergleicht oder so.
Na gut, kann man ja machen, dank WebAssembly.
Leider ist vieles in WebAssembly noch nicht so schnell, wie es sein könnte.
Das wird noch besser.
Also, es wird immer besser.
Hehehe.
Ich habe noch einen Udemy-Kurs, lul.
Wozu soll ich einen Udemy-Kurs verkaufen?
Mir gucken mittlerweile auch bei so abgedrehten Sachen wie heute 300 Leute auf Twitch zu.
Da verdiene ich mit Subs ja mehr, als mit einem Udemy-Kurs.
Außerdem bin ich viel zu faul, einen Kurs zu erstellen.
Ich habe die Woche Bashcode gesehen, damit man...
Oh, ja, ja, kann man, kann man.
Kann man.
Wisst ihr, was das ekligste auf der Welt...
Also, was richtig eklig ist als Bash?
Äh, in Bash, Bash-Array-Syntax.
Guckt euch das mal an.
Äh, ja.
Ist das, ist das nicht fein?
Ach ja, und das hier, und das hier, und das hier, die einen sind Elemente und sowas.
Und so, zum, zum, zum, äh, für eine Schleife drüber dann natürlich so, bitteschön, ja?
Oh, genau so, nicht anders.
Richtig agil.
Ja, das ist Bash, Bash-Array-Syntax.
Ja, das ist Bash, Bash-Array-Syntax.
Verwendet man aber eigentlich auch so gut wie nie.
Ich hätte jetzt eigentlich gedacht,
dass vieles in WebAssembly, oder zumindest
so, wie wir es in letzter Zeit drüber gelesen haben,
äh, gerade wenn du
äh, DOM-Zugriffe brauchst,
in, in WebAssembly viel, viel langsamer ist als in JavaScript.
Oder je nachdem, welche Sprache
du verwendest, dass in WebAssembly
oftmals immer noch langsamer
ist, also standardmäßig noch langsamer ist als in JavaScript.
Ja,
Pearl ist auch richtig Painschamp.
Ich hab Pearl in meinem
ersten Vorstellungsgespräch, äh,
erwähnt, was,
da ging's drum so, was ich, äh,
so Programmiersprachen-mäßig
schon gemacht hab und so,
da hab ich damals gesagt, Pearl.
Obwohl ich mit Pearl
außer mal die ersten paar Seiten
von nem Buch eigentlich gar nix zu tun hatte,
aber es hat funktioniert, die haben mich genommen damals.
Naja, sodass, ich guck mal kurz,
wen wir hosten können. Können wir irgendjemanden hosten?
Irgendjemand, der ist, der ist
der, den ich brauchen kann, von dem ich follow?
Nö.
Ja gut, Leute, äh,
ich würd sagen, wir machen dann eventuell
sogar morgen schon weiter.
Das war mir zu big brain. Leute, was sagt
ihr denn zum Stream heute?
Äh, way, way, way
too, too, too big brain, oder?
Ich glaub oft, also,
so kann ich, kann ich nicht oft machen, da platzt mein,
da platzt mein Kopf, also das kann ich, morgen
kann ich das noch fertig machen, also wieder gut, äh.
Wobei wir das Programm
morgen garantier nicht fertig bekommen werden.
Morgen kriegen wir es vielleicht hin, das GIF, das GIF
zu rendern, aber da gehören ja noch Feinheiten dazu,
wie Resizen vom Fenster,
Sound abspielen können
und sowas. Also, dass
dieses Overlay hier funktioniert,
und auch Sounds abspielen kann,
wie zum Beispiel den hier,
äh, ist gar nicht so einfach.
Aber ich weiß, wie es geht, das kann ich abgucken
vom Alten.
Mit FFmpeg, genau, mit FFmpeg machen wir das.
FFmpeg GIF
einlesen und dann die einzelnen Bilder mit
Direct2D rendern.
Ich auch nicht.
Ich auch nicht.
Ich mach, also, hat man ja glaub ich gesehen.
Ich hab davon
keine Ahnung.
Ich hab einfach Tutorial durchgebastelt.
Das, ne ne, passt schon, das ist kein Problem.
Ähm,
Text-to-Speech, die hab ich als Waff gespeichert
alles, muss ich einfach nur abspielen.
Alles klar Leute, wir sehen uns bis morgen. See you.
