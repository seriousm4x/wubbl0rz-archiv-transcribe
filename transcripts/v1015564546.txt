Fick dich weg, du Homo-Fürst!
Ja, das ist teilweise schon ganz schön langsam, also nicht die Discord-Notification, sondern bis Twitch teilweise checkt, dass der Stream on ist, weil es ist schon über zwei Minuten.
Also ich habe schon vor über zwei Minuten auf Stream gedrückt und jetzt kriegt man es erst mit.
Nicht so Poggers!
So, machen wir kurz die VM an, die brauchen wir jetzt gleich.
Not Poggers, genau.
Eine Güte, warum habe ich so viele VMs, ey, ich muss mal ein bisschen was wegschmeißen.
Leute, kann ich die Qt-VM löschen oder brauchen wir die noch?
Okay, die Qt-VM muss da bleiben.
Wir haben aus irgendwelchen Gründen zweimal Windows 10.
Warum haben wir zweimal Windows 10?
Delete me 2, guck mal, guck mal, die VM heißt Delete me.
Und die VM heißt auch Delete me.
Also komm, wenn zwei VMs Delete me heißen, dann würde ich sagen, die können wir löschen, oder?
Ja, ich glaube, das war hier der Test für WSL 2 mit GUI-Zeugs.
Und das hier, muss ich mal kurz gucken, was wir hier getestet haben, wünsche ich mir gerne.
Also den können wir auf jeden Fall schon mal wegschmeißen.
So, off der Discord.
Das eine war die VM, VM, VM.
Ja, ich weiß halt nicht, welche.
Muss man mal schauen.
Ja, Windows.
Kegweight.
Was ist hier drauf?
Ist hier irgendwas drauf?
Wollen wir das löschen?
Test, willkommen.
Test 2 ist die VM, VM, VM.
Ah, okay, dann können wir beides löschen.
Guck mal, wie der Chat, der Chat weiß das besser als ich, was ich für VMs habe.
Oh.
Oh.
Ach, das Ding geht mir auch auf den Keks bei mir auf dem Haustrechner.
Ja, ja, ja.
Ja, das ist die Windows-Test-Copy.
Die Insider, das Windows-Insider-Bild.
Das können wir in der Tat löschen.
Okay, passt.
Wunderbar.
Da kriegen wir nämlich ein bisschen Platz, weil, ich zeige euch das mal, es gibt so ein kleines Problem.
Laufwerk E.
Ich habe nicht mehr so viel Platz.
Okay.
VMs, also.
Chubandu, kann man nicht, aber delete me 1.
Und delete me 2 können wir löschen.
Ja, remove.
Keine Sorge, Leute, die Qt4M bleibt da.
Too big.
Kann überhaupt nicht sein.
So, yes.
Wunderbar.
Wir haben es geschafft.
So, erst einmal gucken, habe ich hier noch irgendwas im Papierkorb drin?
Nope.
So.
So.
Kannst du die Qt4M sharen?
Nee, da muss ich, was soll ich dabei?
Was soll ich da sharen?
Das ist ein GTK-Theme, was du in zwei Minuten selbst installieren kannst.
So, ich glaube, hier sind wir gestern.
Ups, gestern stehen geblieben.
Und wisst ihr, was mich gestern noch beeindruckt hat?
Und zwar, ich habe gestern Space...
Space X Lounge geguckt.
Da, wo so viele Wolken waren.
Ich weiß nicht, ob das das war.
Genau, da, wo das habe ich geguckt.
Da, wo so viele Wolken waren.
Und da ist mir aufgefallen,
passt mal auf, wo ist der Start?
So, also man sieht, man sieht nichts.
Also man sieht, es ist so viele Wolken.
Also im Prinzip sieht man nur Rakete.
Aber was mir hier schon auffällt, es gibt einen 4K-Stream.
Und anscheinend, anscheinend, muss man sich mal überlegen.
Warte mal hier.
Muss man sich überlegen.
Die haben aus dem Raketen, wie nennt man das?
Triebra...
Wie heißt das?
Nicht aus dem Triebwerk, sondern aus dem Raketen...
Maschinenraum.
Wie soll man das nennen?
Die schaffen es, aus dem Raketentrieb-Antriebswerk-Raum,
Booster-Raum,
einen 4K-Video, zumindest meistens flüssig zu übertragen.
Ja, es gab so ein paar Übertragungsprobleme mit den Wolken und so, ja.
Aber die schaffen das, ein 4K-Video aus der Rakete zu übertragen.
So, und wenn man sich jetzt überlegt, wir tun uns teilweise schon schwierig, schwer mit unserer Bandbreite, die wir so durchschnittlich haben hier im Internet,
ein 4K-Video zu streamen.
Also die streamen ein 4K-Video aus der fucking Rakete runter, halbwegs flüssig, wahrscheinlich auch noch 60 FPS oder sowas.
Und wir können uns das meistens hier noch nicht mal angucken.
Vielleicht haben sie auch ein iPhone dran geklebt mit Heißkleber, ich weiß es ja nicht.
Aber es war auf jeden Fall echt cool.
Man hat nämlich nix gesehen, also man hat im Prinzip vom ganzen Flug nix gesehen,
bis das Ding dann wieder durch die Wolken runtergekommen ist.
So, und ich finde, das sieht irgendwie schon geil aus, wie das Ding landet, oder?
Ah, Kokona-Style.
Das sieht schon nice aus.
Was ich noch nicht so genau gecheckt habe, ist, warum die zum Landen immer nur zwei Booster anhaben und keine drei.
Das muss ja irgendwas mit den Tanks zu tun haben.
Ich habe mich damit aber auch nicht näher beschäftigt.
Aber es sind immer zwei, wenn die landen, nur.
Vielleicht wiegt es auch weniger oder so, kein Schimmer.
Und man sieht nix, aber danach sieht man, dass es gelandet ist.
Guck mal hier.
Leute, IP-Leak.
SpaceX IP-Leak.
Das bringt aber, glaubt, nix zu pingen.
Das ist eine Multicast-Adresse, oder?
Ist das Multicast?
Ich glaube, das ist eine Multicast-Adresse.
2, 3, 4, 70.
Ich dachte, der dritte ist nur an und kann einspringen.
Das kann auch sein.
Aber ich bin mir ziemlich sicher, beim Start haben die drei Stück an.
Warte mal.
Vielleicht klicke ich auch falsch.
Kann ja auch sein.
Okay, man sieht das einfach nur nicht so großartig.
Ja, also ich bilde mir ein, die haben drei Stück an beim Starten.
Weiß nicht, ob man hier irgendwie was aus dem Antriebs...
Ja, guck.
Die haben drei Stück an zum Starten.
Wahrscheinlich benutzen die drei Stück an, wenn sie starten.
Wahrscheinlich benutzen die drei Stück an, wenn sie starten.
Ich warte mal, bis die erstmal durch die unteren Atmosphäre-Schichten durch sind.
Dass der Luftwiderstand nicht mehr so hoch ist.
Und dann gib ihm.
Plu Media, Dankeschön.
Vier Monate Subscription.
Massive.
Ja.
20 Euro für den Raspberry Pi.
Ich meine, wenn es in Ordnung...
Ob was in Ordnung ist, musst du einfach nur gucken, was der Kram bei Amazon gerade kostet.
Und...
Da gibt es gar keinen mehr, hä?
Moment.
20...
Haha.
46 Euro.
Loh...
Was ist das für ein Scheißpreis?
Da kriegst du ja schon einen Vierer mit mindestens 2G für.
Ja, ja, aber 20 Euro sind schon in Ordnung.
Kann man schon machen.
Ja.
Bei Starlink bin ich ja immer gespannt, was da rauskommt.
Also ich bin ja da ein bisschen skeptisch.
Erstens wegen dem ganzen Schrott, den es da potenziell gibt.
Und ob die Bandbreite für viele User reicht.
Also es muss ja...
Es reicht ja in dem Fall bei Starlink nicht.
Bei Starlink reicht ja nicht nur Bandbreite von A nach B oder irgendein fettes Unterseekabel oder sowas.
Das muss ja quasi...
Ich sag jetzt mal ganz irgendwie so...
P2P von Satellit zu Satellit zu Satellit zu Satellit zu Satellit zu Satellit...
So durch dieses Satellit-Mesh durch, bis es dann runtergeschickt werden kann.
Also da habe ich so meine Zweifel, ob das so wahnsinnig gut funktioniert.
Wofür...
Wofür Starlink aber auf jeden Fall richtig gut funktioniert von den Übertragungsgeschwindigkeiten,
ist...
Wie heißt's?
High-Frequence-Trading.
Weil du bist schneller von New York nach Europa oder sonst wo
durch Starlink-Satelliten als beispielsweise durch ein Unterseekabel.
Rein latenztechnisch.
Habe ich am Anfang auch nicht gedacht.
Aber ist anscheinend so.
Also im Prinzip ist das wieder was für Big Stonks.
Starlink.
Ich habe bei uns auch mal ein paar Drohnen gesehen am Himmel.
Also heute gehe ich davon aus, dass es Drohnen sind.
Das war bei uns so ein bisschen...
Wenn du ein bisschen weiter rausfährst, da sind relativ viele Felder und sowas.
Da bin ich auch immer lang.
Abends.
Und da sind auch so...
Keine Ahnung.
Acht...
Acht leuchtende Dinger am Himmel lang geflogen.
Das könnten auch Aliens gewesen sein.
Aber ich tippe eher drauf, dass das Drohnen waren.
Der hat im Stream erklärt.
Na dann.
Ob es ein eigenes Funkprotokoll ist, weiß man nicht.
An der Endstation war es auf jeden Fall stinknormales Multicast-UDP.
Okay, ich habe nichts übersehen.
Exzellent.
Also, nur mal so für die Erklärung, was wir heute fertig machen.
Wir haben ja gestern...
Ich zeige das mal schnell.
Ich muss mich erstmal ordentlich hier an den Computer setzen.
Ich sitze ungefähr...
Ich weiß gar nicht, ob es da irgendwie so ein Bild zu gibt.
Also ich sitze gerade irgendwie so eineinhalb Meter weg vom Computer.
Und es guckt im Prinzip nur mein Kopf über dem Schreibtisch raus.
Um es jetzt mal übertrieben zu sagen.
Ich hänge so halb unter dem Schreibtisch gerade.
Ich muss glaube ich erst mal aufstehen.
So.
Excellent.
Ja.
So, okay.
Alles klar.
Jetzt sitze ich nochmal da.
Alex.de.
Dankeschön für den Sub.
Ich interpretiere das mal als Alex.
Verlied speakter Alex.
Wahrscheinlich sitzt du so da.
Ne.
Also ungefähr.
So sitze ich nicht da.
Aber ähnlich.
Ich habe kein Bein hoch.
Ich habe die Beine hier so drunter komplett.
Wollten wir nicht ein Video angucken nach gestern noch, wo sich Linus irgendwie drüber aufregt,
dass der Linux-Desktop so sagt.
Ich meine, das ist er von 2014, aber wahrscheinlich sagt es immer noch.
Ich meine, Linus auf dem Desktop sagt halt auch.
Es ist halt zumindest nichts für den 0815-Noob.
Was macht...
Moment, Moment.
Bevor wir anfangen.
Was sagen denn so die aktuellen Battlefield-Leaks?
Was?
Audio-Spur zum Trailer aufgetaucht.
Das ist ein Witz, oder?
Zumindest der Trailer...
Was zum...
Die wollen nicht ernsthaft...
Leaks?
Ja, genau.
Das habe ich gelesen vorhin.
Und da geht es um die Audio-Spur.
Der nächste Leak zu Battlefield 6 lässt uns den Reveal-Trailer hören.
Meine Güte, die haben echt Probleme.
Trailer-Audio.
Trailer-Leak.
Alter, was ein Schwachsinn.
Den Discord habe ich gestern nicht...
Was ein Schwachsinn.
Die haben echt Probleme, ey.
Das ist doch nicht mehr normal.
Die leaken sich den Bobbeswund, ey.
Und wisst ihr, was das...
Was der Witz ist?
Wisst ihr, was der größte Witz bei der ganzen Sache ist?
Das sind überhaupt keine Leaks im klassischen Sinn.
Das wird garantiert alles...
Das lässt garantiert alles EA durchsickern.
Das ist Taktik.
Das hat mit Leaks gar nichts zu tun.
Es sei denn, ein Leak ist neuerdings,
wenn ich absichtlich ein Loch reinschneide
und dann was rausläuft.
Starlink sucht gerade CDN-Engineers.
Das brauchen wir.
Braucht man da...
Braucht man da gute Englisch-Kenntnisse für?
Das geht bestimmt auch ohne, oder?
We are all sitting in one boat.
Ich glaube, ich glaube, das geht bestimmt auch ohne.
So, also, was wollen die denn haben?
Senior Content Distribution Network Engineer.
Achtung, Leute.
Flashbang.
Bla, bla, bla.
Basic Qualification.
Bachelor Degree.
Da kommst du nicht weiter mit einer fiesen Ausbildung.
Goodbye, SpaceX.
Ähm.
5 plus years experience.
5 plus years of working in cross-functional Hardware-Software-Operation-Teams.
Was hast du alles für Chrome-Plugins?
Ähm.
Quasi kaum welche.
Was hab ich denn hier?
U-Block, Darkreader, FFZ, das allerwichtigste Add-on.
Und so ein komisches Add-on, um die Lautstärke zu steuern.
Preferred Skills.
Master-Decree.
Ja, okay.
Ja.
Wie gesagt, also mit der FISI-Ausbildung ist da nix hier.
Hehehe.
An der Stelle.
Ähm.
FFZ, denn das ist das, dass du die ganzen, dass du, dass du zum Beispiel sowas hier sehen
kannst in, im Twitch-Chat.
Bei dir steht wahrscheinlich einfach nur Flashbang da, in Wirklichkeit ist es ja ein Emote.
Ja, ja.
Das ist, das ist nix für Kack-Noobs.
Null.
Ja.
Das ist, das ist nix.
Was ist denn der GMAT-Score?
Was ist denn der GMAT-Score?
Ah, das ist wie gut man was kann.
Okay.
Da siehst du mal, die wollen schon gescheite Leute haben.
Ja, so als, so als Kack-Kack-Noob muss man sich da nicht bewerben.
Veteran-Status.
Aha.
Ja, also so als Kack-Noob muss man sich nicht bewerben.
Hier.
Bei, bei SpaceX.
So mit ein bisschen, so mit ein bisschen Shit-Repo und äh FISI-Ausbildung ist da nix.
Wie funktioniert das mit dem Windows-Linux-Switchen?
Du drückst Control-Windows-rechte-Pfeiltaste und Control-Windows-linke-Pfeiltaste.
Da kannst du durch die, ne du hast doch hier unten verschiedene Desktops und die kannst
du so durchschalten und du musst einfach auf deinem zweiten Windows-Desktop ne 4M mit Linux
haben.
Und dann funktioniert das schon.
Easy.
Um, um, um nicht zu sagen.
Easy.
Wir machen genau da weiter, wo ich gestern aufgehört hab.
Exakt.
Deswegen zeig ich jetzt auch nochmal.
Ne, hab ich doch nicht ausprobiert.
Deswegen zeig ich jetzt auch nochmal, wo wir gestern C äh äh.
Ich hab grad in dem Moment C++ gelesen, ne.
Wo wir gestern so stehen geblieben sind.
Stand da C++-Experience?
Wirklich?
Wonka-S.
Huiuiui.
Bei SpaceX wollen sie es aber wissen.
Ich dachte die, die Panels sind JavaScript bei SpaceX.
Ich hab das Kanalpunkte sammeln gar nicht.
Ähm.
Ja, könnte ich.
Es ist die Frage, was du damit machen willst.
Was hast du denn vor?
Weil da ganz hängt es ja ganz entscheidend davon ab, äh, wie leistungsfähig du was brauchst,
ne.
Also was ich dir, also die Einstiegssache ist natürlich ein Raspberry Pi.
Ich persönlich empfehle Low Power Intel x86 Hardware, weil es einfach noch ein bisschen
mehr Wumms hat, nicht wirklich so viel mehr Strom braucht und meistens noch ein bisschen
flexibler ist, was man damit machen kann.
Aber, ähm.
Ja, könnte ich.
Es ist die Frage, was du damit machen willst.
Was hast du denn vor?
Weil da ganz hängt es ja ganz entscheidend davon ab, äh, wie leistungsfähig du was
brauchst, ne.
Also was ich dir, also die Einstiegssache ist natürlich ein Raspberry Pi.
Ich persönlich empfehle Low Power Intel x86 Hardware, weil es einfach noch ein bisschen
mehr Wumms hat, nicht wirklich so viel mehr Strom braucht und meistens noch ein bisschen
flexibler ist, was man damit machen kann.
Ansonsten, wenn du richtig, wir können ja mal auf Ebay gucken, wenn du was richtig dickes
brauchst, kannst du beispielsweise nach alten Dell-Servern oder, äh, HP-Servern, sind
es ja, suchen, ne.
Da gibt es dann schon die ein oder anderen dickeren, dickeren Teile.
Ja.
Müssen wir halt gucken, was es für eine ist.
Der hier ist jetzt relativ alt.
Was hat denn der hier drinne?
CPU.
Prozessortyp nicht zutreffender, ja gut, das bringt natürlich gar nichts, ne.
Und dann musst du dir schon fertige, fertige kaufen.
Absolut nichtssagend, was das jetzt hier sein soll.
No-CPU.
Server-Shop kannst du auch, ja, da war ich mal kurz davor, mir was zu kaufen, vor zwei,
drei Jahren, bei denen hier.
Habe ich dann aber nicht gemacht.
Ich kling nicht gesund.
Echt nicht.
Warum?
Merkt ihr was, was ich nicht merke?
Stimme ist safe anders.
Wirklich.
Sekunde.
Nö.
Moment.
Das muss ich mir jetzt anhören, ob das wirklich so ist.
Echt?
Kling ich so?
Bla, bla, bla, test, test, test, test, test, test.
Ja, ja, ich habe gepennt vorhin eine Runde, nach dem Mittagessen.
Haha.
Aber.
Ja, test, test, test, test, test.
Spiel anders als sonst, klingt das doch auch nicht.
Audacity hat jetzt ein PR für Analytics auf GitHub, okay.
Guck mal, die, die, die, die bieten hier auch DL380 an.
DL380 sind recht nice.
Mir, mir, mir kratzt es auch schon so im Hals.
Was haben die hier denn zu bieten drinne?
Zweimal Intel Xeon 8 Core.
Das heißt, du kriegst 16 Kerne, 16G RAM, das ist doch schon mal ganz gut.
Besteuer vielleicht das Ganze.
Dann lieber sowas hier.
Alter, das Ding schaut aus, wo hat denn das gestanden?
Sag mal, ist das die gesamte Artikelbeschreibung, gibt es da nicht noch mehr dazu?
Ja, also wenn du Power brauchst, kannst du danach suchen, die Sache ist halt die, du musst
auch ein bisschen auf den Stromverbrauch achten.
Also es hat keinen Sinn, also wenn du die Leistung brauchst, klar, aber ansonsten hat
es keinen Sinn, sich übertrieben fette Kisten daheim hinzustellen.
Weil das vielleicht im Einkauf jetzt ebay billig ist, aber dann doppelt so hohe Stromrechnung
hast.
Ja, genau.
Also es ist halt die Frage, was du machen willst.
Ja, das kommt drauf an, was man machen will.
Also du hast ja lokal versus AWS immer den Vorteil, dass es halt nur lokal ist.
Sprich, wenn du dein Passwort safe hast oder deine Heimautomatisierung oder sonst was,
dann ist das lokal halt einfach schöner.
Also ich würde zum Beispiel mein Passwort safe nicht öffentlich in AWS hosten, zumindest
das Webfrontend für.
Und meine Heimautomatisierung würde ich auch nicht in AWS hosten, weil ich will, dass sie
lokal funktioniert ohne Internetzugang.
Ja, die Dinger sind richtig fett und die ältere Arch Gen 5, Gen 5 ist noch der mit den, mit
diesen roten Sachen vorne, ne?
Ja, ja, genau.
Mit den roten Festplattenwechseldingern und so.
Ja.
Ja.
Kommt halt drauf an.
Das ist immer die Frage, was man machen will.
Genau, hier, Headstack Code immer noch am Start.
Also ganz ehrlich, wenn du, wenn du noch nichts Großartiges vorhast, dann würde ich dir empfehlen,
hol dir sowas hier.
Musst du aber mal gucken, was es da Aktuelleres gibt.
Hol dir sowas hier, äh, hol dir irgendwie sowas hier in der Richtung.
Irgendwie sowas.
Da bekommst du für 80 Euro.
Musst du mal gucken, was der Kram hier gerade neu kostet.
Ah, 90 Euro.
Da bekommst du für 90 Euro ne Low Power Plattform, die braucht 8 Watt im Idle, äh, 4 CPU-Kerne
und das ist immer noch schneller als ein Raspberry Pi und es ist x86 und du kriegst noch nen
PCI-Express-Slot.
Das ist, finde ich, ne echt gute Plattform für, zum Einsteigen daheim.
Das kannst du auch in irgendein x-beliebiges olles Gehäuse schmeißen.
Wie gesagt, du musst da am Anfang erst mal gar nicht so viel Geld ausgeben.
Weiß gar nicht, was das ist.
Eine Thing Station.
Ah, das sind diese Grifft, das mit dem Griff zum Wegschmeißen von, von IBM, äh, Lenovo.
Was ist der lila ne Port?
Das ist ein Parallelport.
Ich mein, sowas kennt man heutzutage nicht mehr, das ist auch ziemlich antik, aber das
Mainboard an allen Ernstes ist auch ein Parallelport und ein serieller Port, also eine serielle
Schnittstelle.
Ne, Moment.
Sag ich, das ist VGA, ne?
Leute, ich bin verwirrt.
Das ist VGA und das ist Serial, oder?
Oder umgedreht?
Keck, wait.
Ne, ich glaub, das hier ist Serial, das ist Parallel, das ist VGA.
Was ist eigentlich von Honey...
Was?
Hä?
Was soll das sein?
Weiß ich nicht.
Sagt mir nix.
Ja, aber das ist zum Einstieg auf jeden Fall ganz...
Das mit den Exposed Pins, also das hier.
Ne?
Das Blaue.
Blaue ist Serial.
Ne?
Ne?
Ne?
Ne?
Ne?
Ne?
Ne?
Ne?
Ne?
Ne?
Ne?
Ne?
Ne?
Ne?
Jetzt wird's Seriell.
Jetzt mal wieder Boomer-Time.
Wer von euch hat Null-Modem-Netzwerk-Verbindung gemacht über Serielle Schnittstelle?
Gibt es überhaupt noch Leute, die wissen, was das für Painschamp bedeutet?
Oder Serielle Null-Modem-Kabel über Parallel.
Hannibal, das ist garantiert Werbung, oder?
Das ist einfach nur gut getarnte Werbung.
Hahaha, 100 Pro.
Null-wait, keck, wait.
Echt? Haben ein paar gemacht? Na, immerhin.
Immerhin.
Ja, für ISDN-Anlagen musst du das auch machen.
Das war auf jeden Fall für die damalige Zeit richtig Poggers.
Da weiß ich noch, wir haben damals Sachen geshared über Parallelport-Null-Modem-Kabel.
Da hat dann quasi eine Half-Life-1-Installation mit allen Mods, hat dann erstmal drei Stunden kopiert.
Das war ja nicht schnell.
Ne, du konntest richtig Windows-Netzwerk machen, glaube ich, über Parallelport.
So richtig IP-Windows-Netz über Parallelport.
Ich weiß noch, wir haben damals Dateien geshared über Windows.
Da musstest du dann net Bios und so painstampige Sachen anmachen.
Wer hat noch IDE-Festplatten gejumpert?
Ach, das haben, glaube ich, noch einige gemacht.
Das war noch ein bisschen länger, also das hat man noch ein bisschen später gemacht als Null-Modem-Kabel.
Echt, die Firmware-Updates gehen mittlerweile nur noch mit...
...mit offiziellem HP-Account.
Na dann, heck, wait.
Throbyorn, deine Chat-Nachricht wurde vom Auto-Mod geblockt, weil du hast geschrieben, Jap.
Und Jap wurde erkannt als rassistische Anspielung auf Japaner, hat der Auto-Mod gerade gesagt.
Also, hier, ne.
Anzeige ist raus.
Der ist, glaube ich, nicht für deutschen Chat.
Ausgelegt, der Auto-Mod.
Da hat's Lust, Jap.
Jetzt, jetzt ging's durch.
Jetzt ging's durch.
Warum auch immer das vorher nicht durchging.
Keine Ahnung.
So, Leute, wir machen jetzt mal weiter.
Wartet mal, irgendwie...
Lust...
Delta, deins wurde jetzt auch geblockt.
Leute, ich bin übelst irgendwie noch nicht richtig wach.
Ich weiß auch nicht.
Ich hätte nicht...
Ich hätte keine Stunde pennen sollen nach Mittagessen.
Aber ich war so voll gefressen.
Ich hab wieder Big Brain Noodle gemacht hier.
Da hab ich wieder Nudeln bestellt vor einem Monat.
Die haben absolute Painschamp-Website, aber das Essen schmeckt richtig geil.
So, Nudeln, Nudeln.
Moment.
Da.
Da hab ich vorhin eine Packung...
Also, haben wir...
Also, nicht ich alleine, ne.
Hab eine Packung vorhin gefuttert.
Und da war ich so pepo-fett danach.
Da war ich so müde, da musste ich erstmal eine Stunde pennen.
Zumal ich heute schon Stunde, eineinhalb Stunden...
Sport gemacht hab heute Morgen.
Ja, man kann sich das kaum vorstellen.
So, ich muss mich jetzt mal hinstellen hier und...
Dass ich mal wach werde, dass wir was machen können hier.
Was ist denn hier los?
Übrigens, Leute, ich hab jetzt hier neben mir mal hier Flexchamp.
Aber ihr wisst, dass ich dafür kein Geld ausgegeben hab.
Ich hab jetzt hier neben mir liegen...
Ein iPhone 6, ein iPhone XR und ein iPhone 11.
Ihr wisst ja, ich bekomme so ein...
Von der Firma, ne...
Ich nenn's mal Diensthandy.
Und irgendwie war gestern in der Post ein iPhone 11 drinne.
So nach dem Motto, ich soll mein XR durch ein iPhone 11 austauschen.
Okay.
Mach ich, warum nicht?
Nicht, dass es schlecht gewesen wäre oder so.
Ja, aber die kann ich übrigens...
iPhone 12 kriegst du wahrscheinlich erst ab Vorstand.
Keine Ahnung.
Übrigens, die kann ich euch echt nur empfehlen, die Nudel von denen.
Das einzige Problem ist, dass die halt relativ teuer sind.
Ich mein, guck mal.
Hier bezahlst du 14 Euro für 6 Packen jeweils 500 Gramm.
Also das ist irgendwie erstmal 80% teurer als die Lidl-Nudel.
Aber die schmecken auch 80% besser als die Lidl-Nudel.
Wenn nicht mehr als 80% besser als die Lidl-Nudel.
Gab es keine bessere Schriftdaten als Times New Roman?
Ohne Scheiß, die Website ist Hardcore-Paints-Champ.
Wenn du hier was...
Wenn du hier was bestellen willst, dann klickst du auch nicht auf in Warenkorb hinzufügen,
sondern drückst hier hinten auf 1.
Dann musst du runterscrollen.
Dann musst du auf den Warenkorb...
Genau, runterscrollen.
Und dann kannst du hier nochmal, wenn du mehr bestellen willst, 2 reinschreiben.
Dann musst du hier aus...
Jetzt ist richtig Paints-Champ die Seite.
Ganz, ganz grausam.
Aber das Essen schmeckt echt gut.
StarMech, 6 Monate.
Dankeschön für den Zap.
Oh ne, ist das ein ASP?
Äh, ne, ne, ne, ähm...
ASP.net 6?
Oder was ist das?
Öh!
Okay, das ist echt Paints-Champig.
Server-Pages.
2002, ja.
Okay, so sieht die Seite ja auch aus, als ist die von 2002.
ASP Webforms, ja, grausam.
Richtig, also...
Also, kaum größerer Paints-Champ möglich in der Webentwicklung.
So, Leute, ich zeige euch jetzt mal kurz, was wir gestern gemacht haben.
Also, ich habe gestern im Stream gezeigt, wie man das hinkriegt, wenn man eine Domain hat.
Wohlgemerkt, man muss eine Domain besitzen dafür, sonst geht das nicht.
Es muss auch keine kostenpflichtige Domain sein.
Es kann auch irgendeine kostenlose DAG-DNS oder sonst wie Domain sein.
Man braucht eine Domain.
Und ich habe gestern im Stream gezeigt, wie man kostenlos Let's Encrypt-Zertifikate,
gültige Let's Encrypt-Zertifikate bekommen kann, für Services, die nur lokal laufen.
Guckt hier zum Beispiel das da.
Ist ein Service.
Kek, Kek, www.
Der läuft nur lokal.
Und wenn ich die Seite aufmache, dann geht es nicht.
Wahrscheinlich, weil mein Docker-Container schnell abgekackt ist, durchs VMware starten.
Gucken wir mal, ob es jetzt geht.
Geht immer noch nicht.
Okay, wisst ihr, was wir jetzt machen, wenn es immer noch nicht geht?
Erstmal eine Runde rebooten, dann geht es bestimmt wieder.
Mach mal ein Head-Request.
Wohin soll ich ein Head-Request machen?
Ein Five-Head-Request.
Das, ich finde, also in HTTP3, oder gibt es das schon?
Ja, also, ja, ja, klar.
Da sollte nicht nur ein Head-Request drin sein, sondern ein Five-Head-Request.
Das wäre schon besser.
Um zu zeigen, wie modern das Ganze ist.
So, jetzt mal gucken.
In welchem Ordner war ich denn gestern?
Hier?
Ne.
Kek-Wait.
War ich im Kek-Wait-Ordner?
Kek-Wait, ja.
Meine Ordner sind ja immer so gut benannt, dass man gleich Bescheid weiß.
Okay.
Ha, da sind wir.
Okay, also ihr seht, wir haben einen lokalen Service laufen, der nur lokal erreichbar ist.
Ihr seht, wenn ich den ganzen Krempel pinge.
Hier, lokale Kiste.
Wird aufgelöst.
Ihr könnt es bei euch daheim probieren.
Also ihr könnt kek-www.mau.haus nicht auflösen.
Die Domain habe ich mir mal gekauft.
Also, deswegen habe ich auch Zugriff auf den DNS.
Okay.
Und wir haben ein gültiges Zertifikat.
Ein gültiges Zertifikat für drei Monate.
Das Ganze läuft am 5.
Gestern ausgestellt, läuft am 5. August ab.
So.
So sieht es aus.
Chat ist eh schon drin.
Mist.
Ah, zu spät.
Nicht aufgepasst.
Habe ich da Critical Information geleckt.
Dein Geburtstag.
Ja, da läuft das Zertifikat aus.
So.
Und.
Und.
Ich mache gerade mal Visual Studio auf.
Wo genau hängt es?
IP geleakt.
Monka S.
OMG IP Leak.
Fuck.
So.
Und das Ganze haben wir natürlich, weil wir Next Level Big Brain DevOps Stells machen müssen.
Wobei der richtige Next Level wäre natürlich, dass wir das nicht von Hand alles starten,
sondern dass wir noch irgendwo eine GitHub Actions oder irgendein Continuous Deployment,
haben, was das Ganze dann natürlich auf unsere Kubernetes Cluster deployt in AWS.
Also wenn schon, wenn schon, dann richtig.
Ja, also wir haben das Ganze lokal laufen.
Und zumindest haben wir die DevOps Light Variante gemacht, haben das natürlich alles auch ins
Shit Repo eingecheckt und damit das Ganze besser läuft.
Im Shit Repo haben wir auch noch ein Frontend dafür aufgesetzt.
Und zwar Shit.
Shit.
Out.
Haus.
So.
Da haben wir hier einen Repo mit Docker Compose, Docker Compose File, sonst ist da nix, nix
drinne.
So, und jetzt machen wir weiter an der Stelle.
Eigentlich wollte ich nämlich noch zusätzlich, das war so der Aufhänger der ganzen Geschichte,
noch einen Passwort Manager installieren, weil es gibt ein paar Sachen, die Leute fragen
mich immer, was hältst du denn davon?
Das Ganze hieß übrigens Bitwarden RS früher.
Das mussten die umbenennen, weil die glaub irgendwie, frag mich nicht, Lizenzprobleme
oder so oder oder.
Pff.
Keine Ahnung.
Oder keine Ahnung.
Sie mussten sich zumindest umbenennen.
Und da werde ich oft danach gefragt, was hältst du denn davon?
Gucken wir uns jetzt mal an.
Wir haben uns das vor drei Jahren oder so schon mal angeguckt, aber da hat es bestimmt
einiges getan.
Ihr wisst ja, dass ich den KeyPass Fan bin.
Seit wann die sich umbenannt haben?
Seit ungefähr einem Monat.
Aber Biba, du kannst das irgendwie nicht richtig mit den Emotes.
Das ist das richtige Emote.
Hackerman.
Du kannst aber auch, wir haben auch ein richtiges Subscriber Hacker Emote.
Ich habe, ich habe hier KeyPass, KeyPass 2 bitteschön.
Ja, habe ich mir auch schon mal im Stream angeguckt, fand ich relativ gut.
Ihr habt recht, ich habe irgendwas im Hals.
Ihr habt das schon gehört, bevor ich das gemerkt habe.
Habe ich euch eigentlich schon erzählt, dass ich Prioritätsgruppe 3 bin für die Corona
Impfung?
Also warum auch immer, mein Arbeitgeber war der Meinung, ich bin wichtig für kritische
Infrastruktur.
Deswegen muss ich Prioritätsgruppe 3 sein.
Bin mir da ehrlich gesagt persönlich jetzt nicht so sicher, ob ich wirklich wichtig bin
für kritische Infrastruktur.
Weil bei uns geht es immerhin nur um Geld und nicht um Menschenleben.
Aber gut.
Geld ist natürlich das Wichtigere.
Sind wir, ne?
Also so in der heutigen Zeit.
Strongst größer Menschenleben.
Ja, natürlich.
Natürlich.
Deswegen habe ich mich angemeldet.
Jetzt mal gucken, wann ich einen Termin kriege.
Heute Morgen habe ich im Radio.
Ja, ich weiß.
Boomer Medium und so.
Manchmal habe ich zum Frühstücken noch noch Radio an.
Haben sie erzählt.
Jetzt wird der Impfturbo gestartet.
Bam.
Wie der aussieht, habe ich nicht genau verstanden.
Aber der Turbo ist jetzt.
Wird gestartet.
Das wirkt für mich wie so eine typische Management-Aussage.
Wenn man eigentlich nichts Neues zu vermelden hat, sagt man halt mal irgendwas.
Was?
Turbi?
Nee, das passt nicht, das Wort.
Radio ist richtig.
Boomer.
Ja.
So, und nachdem wir jetzt unser Git-Repo haben mit der Docker-Compose-Config mit gültigen
Zertifikaten, da gibt es jetzt auch ein paar Sachen, die wir machen müssen, um unseren
Passwort-Save zum Laufen zu bekommen.
Als erstes müssen wir hier einen Eintrag für den Passwort-Save machen und dann sollten
wir noch zusätzlich einen Eintrag machen, dass die Docker-Container regelmäßig aktualisiert
werden, weil ich habe es ja schon gesagt.
Also man sollte darauf achten, dass man immer einen ordentlichen Tag beim Image dabei schreibt.
Also wenn wir jetzt nochmal auf Docker-Hub gehen und jetzt nehmen wir mal beispielsweise
hier den Container, den wir gleich installieren wollen.
Da muss man sich immer einen passenden Tag raussuchen, weil ansonsten machst du deine
Container einmal neu und hast komplett andere Versionen, die sich vielleicht mit deiner Config
nicht mehr vertragen.
Also das ist keine allzu gute Idee.
Man sollte sich immer einen ordentlichen Tag raussuchen.
Am besten ist natürlich ein Tag, der noch Security-Updates bekommt.
Und in dem Fall ist es hier nicht Version 1.14, sondern die versionieren das so.
Also es ist die Version 1.14 und dann gibt es Security-Updates, gibt es dann beispielsweise
sowas.
Und die bekomme ich zusätzlich auch, wenn ich diesen Tag hier verwende.
Natürlich kann man auch einfach Latest nehmen, so wie ich es standardmäßig mache.
Da hat man ein paar Probleme damit.
Aber wir nehmen jetzt, wir können für Vault-Waben auf jeden Fall erstmal Latest nehmen zum Ausprobieren.
Wie man das Docker-File deployt, du checkst dein Git-Repo aus und sagst Docker-Compose
ab auf einer neuen Kiste.
Fertig.
Krass.
Ich meine, du kannst natürlich auch irgendwelche Git-Hooks oder sonst was machen.
Aber gibt es irgendwie...
YAML?
Wieso?
Was gibt es da an YAML großartig nicht zu verstehen?
Das einzige, wo du bei YAML drauf achten musst, ist, dass du den Kram richtig einrückst.
Das ist das einzige.
Du musst den Kram richtig einrücken, sonst geht es nicht.
Also das hier ist kein gültiges YAML.
Das hier schon.
Ich finde YAML eigentlich ganz angenehm.
Wobei ich sagen muss...
Nee.
Ja, okay, stimmt.
Wenn wir die Umfrage gestern gesehen haben, haben wir.
Wobei ich ja persönlich JSON tatsächlich angenehmer finde.
Wobei man sagen muss, ich weiß nicht, ob ihr das wisst, wahrscheinlich weiß das jeder,
aber ich denke nur, dass ihr das nicht weißt, weil Boomer-Gedanken und so, dass YAML quasi
ein erweitertes JSON ist, auch wenn es komplett anders aussieht.
Also gültiges JSON ist auch automatisch gültiges YAML.
Also ich könnte...
Ich könnte hier beispielsweise auch ohne Probleme, glaub, das da schreiben.
Ja.
Also das, das, das funktioniert.
Aber JSON hat so ein paar Probleme.
Also mir fehlt ehrlich gesagt nur ein Feature in JSON, sonst würde ich es für alles verwenden,
dass man Kommentare reinmachen kann.
Das geht nicht.
Es gibt, es gibt in JSON keine, keine, keine Comments, die man machen kann.
JSON, genau.
Das, das wird mir eigentlich schon reichen, weil auf dieses ganze YAML-Einrückungszeug
habe ich jetzt persönlich auch nicht so wahnsinnig Bock.
Man kann auch TOML verwenden.
Ich finde es halt doof, dass es schon wieder so zig verschiedene Sachen gibt.
Du kannst INI verwenden, du kannst YAML verwenden, du kannst TOML verwenden, du kannst JSON verwenden,
du kannst XML verwenden.
Also nee, kann man.
Das nehme ich zurück.
Man kann XML eigentlich nie wirklich verwenden.
Was gibt es denn sonst noch so?
CSV.
CSV ist eh das Beste.
So ein richtig, so ein richtig schönes, so ein richtig schönes CSV, oder?
Sowas da.
Ja, exquisite.
So ein richtig schönes CSV, da geht doch eigentlich nichts drüber.
Sag doch mal.
So ein richtig schönes, gut lesbares CSV.
Na TXT ist ja kein, kein Format in dem Sinn.
Das ist ja einfach Plain Text.
Wir haben auf der Arbeit auch noch ein paar CSV-Dateien, die im, die im...
Einsatz sind.
Manche Leute kommen bei uns auf der Arbeit sogar noch auf die glorreiche Idee, Host,
also Hostlisten in CSV zu machen.
So.
Aber jetzt fangen wir mal an.
Also, wir müssen unser Passwort-Safe drinnen einrichten.
Wir wissen jetzt ja, dass ohne Probleme funktioniert, Zertifikate anzufordern und neue Services
anzulegen.
Das ist kein Problem.
By the way, ich muss mein Token, ich leake wieder mein aktuelles Token.
Moment, Moment.
Ich habe nämlich das Token von gestern gelöscht.
Ich habe das Token von gestern gelöscht.
Ich brauche ein neues Token.
Ja.
Neues Token.
Bam.
Schon wieder Token-Leak.
Token-Leak.
Aber ich habe es wieder so eingeschränkt, dass es nur von meiner Absender-IP geht.
So.
Also.
Dann legen wir mal den Service für unseren, äh, Bid, äh, Service ein.
So.
So.
Dann legen wir mal den Service für unseren, äh, Bid, äh, Vault, Vault, Vaultwarden an.
Bitwarden?
Vaultwarden?
Also, ich finde Bitwarden geht deutlich einfacher von der Zunge als Vaultwarden.
Das liegt aber wahrscheinlich an meinen nicht vorhandenen Englisch-Skills.
Du kannst Env nutzen für Token.
Ich kann auch einfach den Secrets, ich kann auch einfach die, ähm, die Secrets-Geschichte
von, äh, von Docker Compose verwenden.
Aber wozu?
Das Token fliegt eh direkt nach dem Stream wieder weg.
Ist es nicht der Token?
Das ist eine gute Frage.
Der Token, das Token.
Der oder das Token.
Korrekturen.de.
Also.
Pfeifertime activated, Leute.
Der, die, das Token.
Moment, Moment.
In seiner ursprünglichen wissenschaftlichen Bewertung ist das Token eine definierte Abfolge
von Zeichen und Bits.
Das Maskulinum der Token wird hingegen verwendet, wenn man damit eine Methode oder einen Schlüssel
zur Identifizierung von Authentifizierungen.
Ja, dann ist in dem Fall das Token doch richtig.
Siehste?
Instinktiv haben wir es richtig gemacht, Chat.
Big-Brain-Time.
Das liegt einfach an den vielen Prime-Subs.
Letztendlich ist es aber auch egal, wie man es nennt.
Die meisten Leute verstehen es eh.
Was mich immer, Leute, eine Frage, eine Frage, die ich bis heute nicht beantworten konnte,
die auch immer irrelevanter wird, weil die Software keiner mehr verwendet.
Aber, vielleicht kennt ihr noch jemand, die Monitoring-Software Nagios.
So, wenn man jetzt, wenn man jetzt eine Nagios Instanz hat, ist das, ist das ein Nagios.
So.
Und wie ist die Mehrzahl davon?
Nagi-Josse?
Nagi-I?
Nagi, Nagi, ja.
Was ist?
Ist, ist die Mehrzahl ein Nagios, zwei Nagios?
Matt, dein, der Auto-Mod hat, äh, dein Comment geblockt, weil es, äh, zu viel Ähnlichkeit
zu einem anderen Wort aufweist.
Zwei agile Nagi-Josse.
Nagi-Jossos?
Weil Spanisch?
Weiß nicht.
Nagios, Mehrzahl.
Tja.
Okay, wir müssen da Plural dabei schreiben.
Dann, wahrscheinlich besser.
So, Plural auf ein Nagios ist, äh, Nagio, oh, oh, da, da will einer lustig sein.
Das heißt, es ist ein Nagios, zwei Nagios.
Ha.
Da kann ich, da kann ich mich nicht damit anfreunden.
Let's see.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
ist ja mittlerweile alles heute massive brain so also was für einen tag
verwenden wir dann waldwaren latest latest einfach wir suchen mal nach einem
example compose example vielleicht muss man nämlich noch auf mehr
sachen achten an die ich jetzt gar nicht denke
sommer compose wiki using docker compose kommt man ja tatsächlich
einträge wie lange streamst du heute abend noch mal oder erst früh es ist ja
schon fast abend also da haben wir doch ein beispiel für wie das ganze
funktioniert also im mit latest natürlich natürlich immer latest was
sonst latest restart always das lasse ich das lasse ich eigentlich immer weg
das lasse ich eigentlich immer weg das lasse ich eigentlich immer weg
services haben nicht zu crashen
wieso benutzen die einen fork die benutzen keinen fork was meinst du wer
wer benutzt einen fork das ist das offizielle das ist das offizielle repo
ach so ach jetzt ach jetzt habe ich verstanden
weil der offizielle bit one server wohl ziemlich paint champ zu sein scheint und
früher hieß das projekt der bit one rs und wahrscheinlich haben die sich
dieảo momentan auf drängen des ursprungsprojekts repo ja chocolate
da muss man mir das video zugesehen haben dass man es versteht wir hatten
man azubi der hand gett ausgesprochen wie scott endpunkt gehts gut mit dem
habe ich letztens telefoniert der macht jetzt richtig big brain geschichten
so ok volumes so also jetzt müssen wir uns angucken haben die hier fleischten
ein Traffic-Example drinne.
Haben die vielleicht ein Traffic-Example, wo ich
mir einfach mal kopieren kann,
ob es irgendwelche Besonderheiten gibt.
Hier, Proxy-Examples.
Traffic-Force.
What the fuck? Wollen die mich verarschen?
Was ist das?
Das brauche ich doch
zur Hälfte alles gar nicht.
Das brauche ich doch eigentlich alles gar nicht.
Richtig
wupp weh ist das.
Ich mach das
jetzt mal selbst.
Ich mach das mal selbst.
Das braucht man alles nicht. Also.
PW-Safe. Kriegt das Ding als
Url. Entry is Web-Secure.
Zertifikate stellen
wir über die normale DNS-Challenge aus.
Load-Balancer-Port.
Das ist die Frage, ob wir da überhaupt einen
Load-Balancer-Port brauchen.
Auf welchem Port
läuft es denn standardmäßig?
Was machen die denn hier?
Load-Balancer-Port. 3012?
Wer nimmt denn standardmäßig
3012? Ach ne, ah, das ist für
die Web-Socket-Verbindung.
Ah, Port 80 ist der normale.
Okay, dann müssen wir hier Port 80
nehmen.
So, und das sollte
jetzt eigentlich, Web-Socket können wir rausschmeißen.
Das sollte jetzt von der Theorie her
reichen. Also was der jetzt machen sollte ist,
hingehen,
ein neues Zertifikat ausstellen
für PW-Safe, was
übrigens schon auf die richtige IP auflöst,
weil ich das in meinem DNS eingetragen hab.
Da. Löst auch nur lokal
auf. Weil alles auf
die gleiche IP, aber das macht ja nix.
Der sollte
jetzt hingehen, sich ein gültiges Zertifikat
ausstellen lassen für
PW-Safe. Und dann
sollte der auf Port 80
Reverse-Proxien.
Soweit von der Theorie her.
Gucken wir mal, ob er das
macht. Okay, er lädt sich erstmal
das Image runter. Das ist okay, das ist
genehmigt.
Browser auf, gucken wir uns das an.
So, äh,
ja, validation,
also sprich, okay.
Äh. Okay, schauen wir mal,
ob er sich jetzt ein Zertifikat ausgestellt hat.
PW-Safe.
Hier, noch nicht, noch nicht.
Scheint Braucher
noch ein bisschen für.
Der hau mich blau, das hab ich nicht mal selbst gemacht.
Das war, glaub ich, der
Chainlord, der die Katze ausgestellt hat.
Wo ist jetzt das Problem? Warum hat er sich kein Zertifikat
ausgestellt? Ah doch, jetzt
macht das, oder? Jetzt macht das.
Ich muss einfach nur ein bisschen warten.
PW-Safe.
Ja. Einfach nur kurz
abwarten, bis er das Passwort sich ausgestellt hat.
Äh, das, das, das Zertifikat sich ausgestellt
hat. Okay, passt.
Jetzt, jetzt sollte auch das Passwort
gültig, äh, was hab ich mit dem Passwort,
Alter? Das Zertifikat gültig sein.
Da ist er!
Ja, okay.
Warum auch immer die so ein komisches
Gedöns machen.
Es scheint mir, ehrlich gesagt, relativ easy
zu sein. Einfach,
äh, einfach so, wie man
es erwarten würde.
Load-Balancen und gut ist.
So, schieben wir es mal auf
dritten Desktop. So, jetzt ist
die große, große
Master-Passwort.
Was ist denn die
Default-Passwort
davon?
Default-Passwort.
Ich muss mich ja mit irgendwas einloggen, ne?
Schreibt er das
vielleicht auf die Konsole irgendwo?
Gibt's nicht? Ja, wie soll ich mich
denn dann anmelden, wenn es das nicht gibt?
Mal Logs gucken von dem Ding.
Ne.
Ah, Moment.
Passwort? Ne, kein Passwort.
Du musst ein Account erstellen.
Okay, das heißt, der
erste Account, der erste
Account ist dann gleich
der Admin-Account.
Okay.
Muss das gültig sein?
Was ist denn das? Master-Passwort?
Okay, muss wahrscheinlich nicht gültig sein.
Ach so, Create-Account.
Okay, E-Mail-Adresse.
Ähm.
Cute-Chat.
Endlich egal.
Ich hoffe, das muss keine...
Ich hoffe,
das muss keine gültige E-Mail-Adresse
sein.
Your name? Ah ja, alles klar.
Passt. Passwort. 1, 2, 3, 4,
5, 6. Mal gucken, ob... Oh, weak!
Was? Das ist doch Best-Practice-Passwort.
Was will der mir erzählen?
Seit wann ist das denn weakes Passwort?
Hint.
Der Hint ist natürlich
0w größer.
Keck, weh.
Ich agree zu den Terms of Services.
Submit.
Okay, dann ist mein neues
Master-Passwort. 1, 2, 3, 4, 5, 6,
7, 8, 9.
1, 2, 3, 4, 5, 6, 7, 8, 9.
Wie, das ist immer noch weak?
Wie kann das? Weak?
Okay, jetzt ist es strong.
So, jetzt aber. 1, 2, 3, 4, 5, 6,
7, 8, 9. Submit.
Weak Master-Passwort.
Wie gesagt,
Millionen Leute können sich nicht irren.
Ja.
Yes.
Log in. 1, 2, 3, 4, 5, 6,
7, 8, 9.
Log in. Zack, da sind wir.
Bam, in your face. Hat funktioniert.
So, unser Passwort-Manager ist auch am Start.
Und das Schöne ist jetzt,
um das nochmal hervorzuheben,
warum das Setup äußerst praktisch ist.
Wir haben ein gültiges Zertifikat
über Let's Encrypt,
obwohl der Service
nur
von innen zu erreichen.
Also sprich, wenn ihr bei euch
jetzt daheim das hier auflöst,
wird das nicht auflösen.
Das ist eine super Geschichte.
Ich meine, man braucht
das nicht unbedingt über HTTPS,
aber, wie gestern schon gesagt,
manche Krypto-Sachen
im Browser gehen nur
mit HTTPS und
gültigem Zertifikat.
WebRTC gehen manche Sachen nur
über HTTPS und gültigem Zertifikat.
Und spätestens, wenn du eine Anwendung als PWA
verwenden willst auf dem Smartphone,
dann geht das auch nur mit HTTPS
und gültigem Zertifikat.
Also, so unsinnig lokal das zu machen, ist das nicht.
Hast du das Video von gestern
als Wort? Klar.
Sieh doch hier, guck.
Also, ob es schon
im Archiv ist, weiß ich nicht.
Ob es schon im Archiv ist.
Aber aktuell ist es auf jeden Fall
hier noch auf YouTube.
Wir können aber mal gucken, ob es im Archiv ist.
Oder im Archive,
wie das die coolen Leute dann sagen.
Search.
Ui.
Moment, wo sind die Streams?
Ah.
Ich blick in meinem eigenen Archiv
immer durch.
Hier. Da.
Okay, das ist noch nicht drin.
Oh, Leute. Wir müssen Archiv.
Wo ist der Sibaro?
Der Cute Mod.
Der Cute Mod muss hochladen, sonst sind die
Streams ja verloren.
Ich meine, ich hab bei mir auf...
Ich hab ja hier nur noch zwei, glaubt's,
eineinhalb oder zwei Monate Videos
haben wir ja hier nur drin.
Also, das letzte Video, was ich hier drin hab, ist
vor zwei Monaten.
Oh, da müssen wir uns aber ein bisschen sputen jetzt.
Also, wir bedeutet jemand anderes.
Oh.
Wir müssen den Cute Mod mal nerven im Discord.
Dass er das wieder aktualisiert.
Okay.
Also, das hat funktioniert.
Bevor wir uns jetzt näher mit dem Passwortmanager
beschäftigen, sollten wir erst
nochmal natürlich
so richtig Big Brain DevOps
stylisch, natürlich,
erstmal ein neues Commit machen.
Also, git commit.
Das ist an sich nicht so schön, dass wir
die eigentlichen Daten da drinnen liegen haben.
Also, es wäre beispielsweise schöner,
wir würden einen Unterordner dafür
machen oder wir machen einen Data-Ordner und
den Data-Ordner packen wir dann ins
git ignore oder sowas
in der Richtung. Das könnten wir eigentlich
noch machen jetzt. Das machen wir jetzt noch.
Weil das Problem ist jetzt, wenn ihr das hier
deployen wollt oder wenn ihr das committen wollt,
ihr habt immer im gleichen Verzeichnis,
irgendwelche untracked Files rumliegen. Das ist
doof.
Nicht, dass ihr die da aus Versehen mal
committet. Wenn ihr die aus Versehen committet, ist doof.
Weil dann ladet ihr
eventuell euren Passwort
safe auf GitHub hoch.
Das ist nicht so schön.
gut, ohne Masterpasswort
bringt das nichts, aber man will es vielleicht trotzdem nicht.
Und git mag
Binaries nicht so sehr. Also, wir könnten
jetzt beispielsweise mal hier einen Ordner anlegen,
keine Ahnung, Data. Ich mach das mal aus.
Wieder zu.
Data,
dann machen wir ein git ignore File
und sagen
hier diesen Ordner, lass
mal in Ruhe.
Jetzt sehen wir auch schon, der taucht hier drinnen
gar nicht auf. Und jetzt können wir diesen Kram
beispielsweise auch mal verschieben
in den Data Ordner.
Was? Permission denied,
kequate. Aha, gut.
Gut tut gut.
Data.
So, da ist es.
Jetzt müssen wir hier noch ändern, wo er das
findet. Data slash
slash
so.
Und jetzt sollte das Ganze funktionieren.
Wenn ich das richtig gemacht hab.
Ja, sieht gut aus.
Er findet sein Kram wieder.
Er hat
das Repo wieder gefunden.
Alles gut, alles richtig gemacht.
Und jetzt haben wir den Vorteil, wir können
ich werd das jetzt mal
anders machen.
Warum hängt das eigentlich jetzt manchmal?
Binaries in Git immer gut.
Zu Binaries in Git fällt mir eine lustige Geschichte ein.
Ganz zu Anfang, als wir noch selbst nicht wussten, was wir damit getrieben haben,
sind wir mal auf die glorreiche Idee gekommen, Java Updates, also Java Runtime Updates ins Git einzuchecken.
Und die sind ja immer so 200, 300 MB groß oder teilweise sogar 700.
Und irgendwann war unser Git-Repo 2,5 Gigabyte groß.
Und jedes Mal, wenn du das Git-Repo geklont hast,
hast du irgendwie fünf Minuten gewartet, bis es durch war.
Und ein Nachteil hat das ja, du kriegst es nie im Leben wieder raus.
Also hast du eine Sache einmal eingecheckt in dein Git-Repo und gepusht, du kriegst es nicht wieder raus.
Also ich meine, mir ist selbst klar, dass es theoretisch Möglichkeiten gibt, aber die sind alle nicht praktikabel.
Vor allem nicht, wenn es über ein Jahr her ist und du da quasi ab diesem Zeitpunkt die komplette History umschreiben müsstest.
Nein, ein Force-Push.
Ein Force-Push alleine bringt dir auch nichts.
Du musst alle Verknüpfungen entfernen, die irgendwo in diesem Git-Repo existieren.
Und dann musst du einen Git-Clean oder sowas, glaube ich, machen.
Und das ist gar nicht so einfach.
Das sagt richtig.
Also du musst, genau, genau.
Also das ist nicht wirklich praktikabel.
Wir haben es dann einfach anders gemacht.
Wir haben die ganze Config, die ganzen Configs einfach in ein neues Repo kopiert und das mit Binary sein gelassen.
Das war eine blöde Idee damals.
Wir haben sogar Software-Updates und Adress-Datenbanken und sowas da eingecheckt.
Deswegen war es am Ende, glaube ich, sogar größer als 2.5G.
Das war keine so clevere Idee.
Zumindest, was wir jetzt machen können,
ist erstmal erst mal das Git ignore adden.
So, und jetzt kann man quasi dieses ganze Repo klonen auf eine neue Kiste.
Docker-Compose abmachen
und man hat exakt die gleiche Config
die wir hier lokal haben
wieder hochgefragt.
auf einem anderen rechner und da sieht man auch was der ursprüngliche gedanke
dahinter war einer der einer der ursprünglichen ideen hinter dahinter ist
dass man wenn man software entwickelt und abhängigkeiten davon hat oder oder
gewisse gewisse services braucht zum testen dass man die sich damit starten
kann so dass jeder entwickler quasi das gleiche oder ungefähr das gleiche hat
das war so eines der ursprünglichen gedanken hinter docker container also
dass die leute dann auf die idee gekommen sind docker container in
produktion mit sich dinger laufen zu lassen das war nichts im sinne dass er
des ursprünglichen gedankens und erfinders kann man machen aber das war
nicht die ursprüngliche idee dahinter die ursprüngliche idee war dass man
selbst content anwendungen verpacken kann und abhängigkeiten dazu sodass du
dann nicht beispielsweise
drei verschiedene libraries hast weil die weil deine drei entwickler
unterschiedliche betriebssysteme verwenden und sowas geht ad docker
compose und wenn man jetzt ein commit macht ist ganz wichtig dass man ein
gutes dass man ein gutes gute gutes git commit macht und ein richtig gutes
git commit beispielsweise an der stelle wäre jetzt so was wie five hat zum beispiel das zum
beispiel geht für das kommt besser ist da weiß jeder was gemeint ist wenn er das
liest das würde ich euch wärmstens ans herz legen so was zu machen als
kommentare und ich meine besser als meine git commit history geht ja
eigentlich gar nicht ich meine wir haben kommt pfeiffert kommt pluppen und
komme damit also wer damit nichts anfangen kann dann weiß ich auch nicht
ja und wenn man das ganze gepusht hat in das schritt repo ja die adresse ist nicht liegt
Das ist die öffentliche Adresse auf dem Channel und da, wo auch die PayPal-Donations draufgehen.
Da ist nix liegt.
Und wenn einem dann doch einfällt,
Ha, Mist.
Ich hätte das doch lieber gern anders genannt.
Oder sagen wir mal so, es fällt einem vielleicht ein,
man hat sich hier verschrieben, man wollte hier unbedingt noch ein Leerzeichen mehr hinten dran machen.
Man sagt, es gibt natürlich eine Änderung.
Und jetzt, und jetzt, passt auf.
Wir sagen jetzt einfach, wir hängen an das letzte Comet die aktuelle Änderung noch dran
und ändern die Comet-Message noch dabei.
Jetzt haben wir es geändert, jetzt ist es Gachi-Buzz.
Aber das Problem dabei ist, was man jetzt hier auch gleich sieht,
was man zum Beispiel bei meiner Shell hier an dem Prompt mit den zwei Pfeilen sieht,
was man jetzt sieht ist, jetzt können wir nicht mehr so einfach planen.
Wir müssen einfach mal pushen.
Wenn ich jetzt versuche zu pushen, dann sagt er mir, das geht nicht.
Und warum geht das nicht?
Na ja, guckt euch mal meine lokale Historie an.
Das sind die drei Comets lokal.
Und guckt euch das mal remote an.
Das sind die drei Comets remote.
Die passen nicht zusammen.
Das heißt, er erlaubt mir so jetzt nicht, ohne weiteres zu pushen,
weil er sagt, hey, da würdest du ja was überschreiben.
Das kann man fixen, indem man einen Force hinten dran macht.
In der Regel,
und das ist, sagen wir mal so, so eine 95%-Geschichte,
Ausnahmen bestätigen die Regel in dem Fall,
macht man das nur auf eigenen Branches,
nie auf öffentlichen Branches.
Also mit öffentlichen Branches meine ich Branches,
die andere Leute auch verwenden.
Also man kann das zum Beispiel machen,
wenn man an irgendeinem Feature bastelt,
macht man sich den eigenen Branch
und wurstelt dann da drinnen rum
und macht dann 150 Kack-Comets
und am Ende macht man mal ein paar ordentliche draus.
Ja, und Force pusht das dann und macht einen Pull-Request.
Das ist okay.
Das hier ist in der Regel äußerst schlecht,
weil, mal angenommen der Chat,
wir haben jetzt 270 Zuschauer,
also mal angenommen,
ihr hättet jetzt auch dieses Repo ausgecheckt
und ich würde das hier jetzt machen,
da wären alle eure Repos kaputt.
Kaputt in der Form,
dass ihr keine Updates mehr pullen könnt.
Ihr könnt's natürlich dann das Ganze selbst beheben,
ja, das geht,
aber erstes Mal ist euer Repo dann kaputt.
Zumindest das zum Upstream funktioniert nicht.
Deswegen öffentliche Branches oder Branches,
wo mehrere Leute mitarbeiten,
nie Force pushen.
Das bedeutet auch nicht irgendwie
History umschreiben.
Aber wir sind die Einzigen, die da dran arbeiten.
Wir können das jetzt machen.
Wir sehen's hier auch.
Hier ist noch das letzte Comet Fivehead
und wenn ich das jetzt überschreibe,
ist das letzte Comet Gachibuzz.
Das versteht außerhalb von Twitch auch keiner.
Ich dachte so,
ich dachte so,
als wäre das das Normalste von der Welt.
So nach dem Motto,
hier sehen wir das letzte Comet Fivehead
und jetzt das nächste Comet Gachibuzz.
So wie das Normalste von der Welt
das nächste Comet ist Gachibuzz, ja.
So und auch wenn man sich die History anguckt,
sieht man,
hier ist nichts mehr von meinem Comet übrig.
Aber und jetzt zeige ich euch mal
den massive, hugesten Githack,
Lifehack aller Zeiten.
Was macht ihr denn jetzt,
wenn ihr feststellt,
Mist,
in diesem Comet,
was ich eben überschrieben habe,
war noch was Wichtiges drin.
Was macht ihr dann?
Ich mein,
hier ist es nicht mehr.
Hier ist es auch nicht mehr.
Wo ist das Comet?
Eine schöne Sache an Git ist,
es ist immer noch da.
Es ist immer noch da.
Alles, was euer lokales Repo je gesehen hat,
ist in der Regel immer noch da.
Es sei denn, ihr habt es explizit weggeschmissen,
aber das macht man normalerweise nicht.
So und es gibt eine Sache,
die ist in Git nicht so offensichtlich,
das wissen viele nicht,
aber es ist eines der praktischsten Sachen überhaupt
und zwar ist das Git RevLog.
Da sieht man nämlich,
das ist quasi eine History für alle Aktionen,
die man lokal in seinem Git-Repo gemacht hat.
Ich weiß nicht,
wie lang die History standardmäßig ist,
ob es da ein Limit gibt,
weiß ich nicht,
aber in der Regel ist die lang genug.
So und ihr seht,
guckt mal da,
da ist das Comet noch.
Und wenn ich jetzt wissen will,
wie war denn der Stand
oder ich brauche noch was aus diesem Comet,
dann kann ich ganz einfach einen Checkout da drauf machen.
Man kann ja in Git alles auschecken.
Du kannst Comets auschecken,
Tags ausstecken und Branches auschecken.
Unter der Haube sind das eigentlich alles nur Zeiger auf Comet-IDs.
Und jetzt habe ich wieder den Stand,
den ich vorher hatte.
Zumindest jetzt temporär
und ich kann sagen,
ah ok,
was war denn hier nochmal das,
was ich brauche?
Ach guck mal hier,
das habe ich gelöscht,
das kopiere ich mir jetzt raus oder sowas.
Man kann das Ganze auch diffen,
geht auch.
Da wird man jetzt allerdings wohl nicht allzu viel sehen,
außer dass es hier zwei Leerzeilen hinten dran gibt.
So und auch ein Comet,
was ich persönlich sehr praktisch finde,
ne was ist kein Comet,
ein Command,
was ich auch sehr praktisch finde,
ist git cherry-v master.
Git cherry-v ist quasi ein Comet-basiertes Diff,
nur ein bisschen übersichtlicher.
Und zwar das zeigt dir kein komplettes Diff an,
was sich geändert hat zwischen den Branchen,
sondern das zeigt dir,
welche Comets in diesem Branch drin sind
oder in diesem Working Tree drin,
Checkout drin sind
und nicht in dem Branch,
mit dem du es vergleichst.
Das ist sehr praktisch,
das brauche ich auf der Arbeit täglich,
zum Beispiel um zu gucken,
ob es bei irgendeiner Feature-Branche Sachen gibt,
die noch nicht gemerged wurden.
Es gibt nämlich Leute bei uns,
die machen beispielsweise in den Feature-Branche,
da machen sie dann Merch-Requests auf,
dann machen sie von diesem Feature-Branche
einen neuen Feature-Branche auf,
mit einem anderen Feature,
wo das dann noch mit,
teilweise sind sie ein bisschen unordentlich,
ja und da bin ich dann öfters mal hier am gucken,
so nach dem Motto,
haben wir denn schon alles gemerged?
Kann ich diesen Cometing-Kram jetzt wegschmeißen?
Und da ist das hier das beste Command für,
du siehst alle Comets,
die hier drin sind,
aber nicht im Master.
Was zum Henker ist das für eine Sprache?
Was?
Was?
Hä?
Vanilla-Eis,
vier Monate,
danke schön für den Sub,
exzellent.
Massive Subscription.
So, ich glaube,
das hat man jetzt halbwegs verstanden,
aber das, also wie gesagt,
Revlog könnt ihr euch merken,
das rettet einem den Ass,
wenn man aus Versehen mal was gelöscht hat.
Rechts,
das ist gar keine Sprache,
das ist YAML,
das ist ein YAML-Config-File
für unsere Container.
Wieder was gelernt,
siehste?
Genau.
Ich lerne ja auch fast jeden Stream was.
So.
Machen wir hier den ganzen Krempel mal zu.
Ach so,
was war mein Masterpasswort?
123456789, ne?
So, jetzt haben wir wieder was gelernt,
exzellent.
Gut.
Ja, was gibt es denn sonst jetzt noch Schönes dazu zu sagen?
Also, wir sollten noch,
wir sollten noch eine Sache machen.
Wie gesagt,
wir sollten uns hier einen ordentlichen Tag aussuchen,
weil Latest ist immer ein bisschen problematisch.
Kannst du grob erklären,
wie du das mit Traffic umgesetzt hast?
Ja, ich kann dir das jetzt zeigen,
das ist relativ easy.
Das hier ist eigentlich alles egal.
Wichtig ist das hier.
Du musst dem sagen,
du musst dem sagen,
du musst dem sagen,
du musst dem sagen,
du musst dem sagen,
du musst dem sagen,
du musst dem sagen,
du musst dem sagen,
du musst dem sagen,
du musst dem sagen,
du musst dem sagen,
du musst dem sagen,
dass du DNS-Challenge machen willst für Let's Encrypt.
Dann musst du ihm sagen,
welchen Let's Encrypt Provider du verwendest,
in dem Fall das Cloudflare Plugin.
Und dann musst du eine Umgebungsvariable suchen
mit einem API-Key von deinem Cloudflare.
Das war es im Endeffekt.
Mehr musst du nicht machen,
dass Let's Encrypt funktioniert.
Ich meine,
es muss auch kein Cloudflare sein.
Das kann Namecheap oder was auch immer
oder irgendwas sein,
irgendwas, was das halt unterstützt.
Das ist halt,
So, und dann habe ich ihm gesagt, er soll standardmäßig einfach alle Docker-Container aus diesem Compose-File standardmäßig gucken, ob die eine Domain gemappt haben und dafür sich ein Zertifikat abrufen.
Das war's, mehr musst du nicht machen. Also das ist tatsächlich relativ einfach.
Allerdings muss man sagen, für advancedere Sachen ist die Traffic-Config schon sehr painstamp.
Jetzt meint ihr, wie lange, bis ich das hier gecheckt habe, dass man Redirect machen kann automatisch von HTTP auf HTTPS.
Ich meine, da kommt doch niemand drauf, dass das die richtige Syntax dafür ist, oder?
Also die haben sich schon ein bisschen das Leben schwer gemacht. Also die Traffic-Config ist nicht so schön.
Wann würdest du die Config auslagern? Gar nicht. Wozu soll ich die Config auslagern?
Das Schöne am Docker-Compose-File ist ja, dass alles drinsteht, was du brauchst.
Du kannst das einfach rüberkopieren auf einen anderen Rechner und starten und es funktioniert.
Bei Traffic musst du für manche Sachen eine extra Config-Datei anlegen.
Zum Beispiel, wenn du Services loadbalancen willst, die nicht in diesem Docker-Compose-File drinstehen.
Ich glaube, dafür brauchst du dann eine extra Traffic-Config, aber die ist richtig painstamp.
Ich bin auch kein allzu großer Traffic-Fan, muss ich sagen.
Ich benutze das nur hier im Zusammenhang mit so Docker-Compose-Geschichten.
Für andere Sachen würde ich es nicht verwenden.
Ich persönlich mag Kadi für einfache Sachen, wo man nichts Großartiges, Advances braucht.
Und wenn man was braucht, was alles irgendwie kann, dann nimmt man einen Nginx.
Es gibt ja manche Leute, die schwören heute immer noch auf Apache Loadbalancer, aber da bin ich mir nicht so sicher.
Ja, HA-Proxy kann man auch nehmen, wobei HA-Proxy eher eine Loadbalancer ist, aber im Prinzip kannst du damit auch alles machen.
So, genau.
Jetzt können wir uns mal den Passwort-Manager angucken.
Kannst du die Docker-Compose irgendwie veröffentlichen?
Äh, kann ich machen, ja.
Kann ich machen.
Wir machen einfach mal ein Pastebin.
Aber weil viel, viel kompliziertes ist da nicht dabei, das lohnt sich keine extra Git-Repo zu machen.
Hier, Pastebin.
So, was ich mache, ich mach mal meinen Token raus.
Also erstens funktioniert es von euch aus eh nicht.
Zweitens lösche ich das nachher wieder.
Sonntagshighlight Jamme.
Jara, was ist denn Jara?
Ich hab mal gehört, dass auf Türkisch Jarak oder Jarak heißt Schwanz.
Stimmt das?
Hört mir da gerade so auf bei der Gelegenheit.
Ähm, woher ich das weiß, ist folgendes.
Der Friseur, also der Fabian, der hat ja immer eine gewisse Namenskombination in MMOs.
Und das ist meistens irgendeine Abwandlung.
Von Jia, Ja, Yara oder sowas in der Richtung.
Und er hat sich mal einen männlichen Charakter erstellt in einem MMO.
Und der hieß Jarak, ein bisschen anders geschrieben.
Und irgendwie haben ihn die Leute laufend angeschrieben und was mit Schwanz erzählt.
Bis wir dann irgendwann drauf gekommen sind, dass der Name auf Türkisch Schwanz bedeutet.
Ich glaub, seitdem hat er seinen Char nicht mehr so genannt.
Theoretisch hättest du dafür sogar Temp-Bann bekommen können.
Okay, also ich veröffentlich den Kram mal schnell.
Ich mein, die Domain, komm wir...
Ja, die Domain, ich kann das einfach drinnen stehen lassen.
Ich mein, Domain können wir auch sowas hier reinschreiben.
Domain.domain.de
Aber ich lass das einfach drin stehen.
Oder machen wir einfach XXXYY.
Ups.
Okay.
Ähm, ähm.
Muss man, kann man das irgendwo...
Oh, Exposure unlisted.
Bam.
Zack.
Also wer's haben will, da ist es.
Massive Dogger Compose File.
Huge.
Gut, so, jetzt können wir uns dem Passwortmanager mal widmen.
Und uns das Ganze mal anschauen.
Also, ähm, wir haben uns das vor einem Jahr oder...
Ne.
Ist länger her.
Wahrscheinlich zwei, drei Jahre her.
Haben wir uns das schon mal angeguckt.
Und ich muss sagen, ich fand das ganz gut.
Wie gesagt, ich verwende seit Jahren ja schon KeyPass.
Und ich sehe jetzt, ich weiß, man kann das irgendwie da auch importieren.
Aber ich habe jetzt noch keinen großartigen Grund gesehen, das umzustellen.
Im Browser brauche ich es nicht.
Aber wir schauen mal, was man damit alles machen kann.
Also, Add Item.
Was haben wir denn hier schon alles?
Zack.
Add Item.
Okay.
Credit Card Identity Secure Note.
Okay, Notizen kann man auch speichern.
Das ist schon mal ganz praktisch.
Also sagen wir mal Login.
Äh, zum Beispiel für, keine Ahnung, für Google.
Folder.
Brauchen wir nicht.
Username.
Äh.
Äh.
Peter Aguilé at googlemail.com.
Keine Ahnung, ob das die richtige Art ist.
Also, Passwort 123456789 oder so.
Wahrscheinlich wieder.
So wie ich mich, so wie ich mich kenne.
Ähm.
Ach, guck mal, der kann direkt Authentificator-Apps synchen.
Das ist natürlich cool.
Kannst du das auch einfach auf Deutsch stellen?
Puh, das weiß ich nicht.
Das müssen wir gleich mal gucken.
So, was ich praktisch finde, ist, dass man Notizen dabei machen kann.
Weil, gerade wenn man zwei Faktor authentifiziert,
dann ist das immer ganz praktisch, dass man die Recovery-Codes hier reinschreiben kann.
Er ist das Center of Excellence.
Der arbeitet nicht nur da.
Ah, der sieht sich nach wie vor als, äh, agiler Enabler für Cloud-Native-Solutions.
Oh, safe.
Was ist TOTP?
Ähm, das ist das, was du bei Authentificator-Apps verwendest.
Diese Dinger hier.
Also, wo du die QR-Codes,
scannst und wo du dann eine Authentificator-App hast,
die dir einen Code anzeigt.
Na, es gibt zwei Sachen.
Das, was du meinst, ist zwei Faktor mit SMS.
Es gibt aber mittlerweile auch schon zig Authentificator-Apps.
Ja, Microsoft-Authentificator, Blizzard-Authentificator,
Steam hat, glaube ich, auch so ein Ding.
Ach so, man kann die, in Settings kann man die Sprache umstellen.
Können wir machen.
Also, ich würde es persönlich auf Englisch lassen,
aber, weil ihr es seid,
wir stellen das mal um.
Language.
Auf, okay.
Ah, DE ist es nicht, nicht German, okay.
Oh, ne. 1, 2, 3, 4, 5, 6, 7, 8, 9.
Bam.
So.
Mind-Resort haben wir jetzt.
Mind-Resort.
So.
Massive, für was ist das Häkchen hier?
Ah, da kann man alles verschieben und sowas.
So, wie editiert man das jetzt?
Benutzername kopieren, Passwort kopieren.
Okay.
Nice.
SilverDark, Dankeschön, 10 Monate Subscription.
Ähm, wie kann man es bearbeiten?
Ach, hier einfach draufklicken, okay.
Ja, das ist nice.
So, und jetzt müssen wir natürlich mal gucken,
ob es da noch ein Browser-Add-on für gibt oder sowas,
was man sinnvoll verwenden kann.
Neue Uhr.
HTTPS, genau, okay.
Mal gucken, ob der jetzt automatisch das ausfüllen will,
wenn ich auf Google gehe.
Also, Bitwarden, Chrome, ne, das ist ein Firefox, oder?
Ne, warte mal, Chrome, Fire, das ist ein Chrome.
Hat das jemand schon verwendet?
Also, was, äh, nimmt man da die offizielle Browser-Extension für?
Du benutzt Docker, haben wir noch 2014.
Wir gucken uns gleich, stimmt, wir wollten uns noch
einen Konferenztalk von 2014 angucken gleich.
Was verwenden denn die coolen Leute heute?
Also, für so einfache Anwendungszwecke, jetzt kommt mir keiner irgendwie mit, mit, mit, mit, mit, mit, mit, mit, mit, mit, mit, mit, mit, mit, mit, mit, mit, mit, mit, mit, mit, mit, mit, mit, mit, mit, mit.
Mit Azure Kubernetes Cluster, Cluster oder sowas an.
Creo.
Okay, Container, die ist, okay, Creo sagt mir gar nix.
Creo.
Ich dachte, die coolen Leute verwenden Potman.
Ah, so, so.
Ich dachte, also, Potman ist schon wieder out, oder?
Die coolen Leute vor einer Weile haben alle gesagt, Potman, beste, weil kein Root und sonst wie.
Aber, aber Container, die ist doch mittlerweile auch unter Docker standardmäßig drunter, oder?
Ja.
Firecracker.
Firecracker kenne ich, das ist das Zeug von Amazon, ne?
War das nicht von Amazon, das?
Ja, genau, genau, das kenne ich.
Aber ich muss dir auch ehrlich sagen, für so einfache Dinger, ja, also vier Services starten, lokal, da ist mir Docker Compose und Docker immer noch mit Abstand am liebsten.
Das funktioniert einfach und ist easy.
Ich meine, ich will keinen dran hindern, sich, äh, so zu verändern.
16 Raspberry Pis lokal irgendwie zu verteilen und den super agilen, äh, Kupernedes-Cluster da aufzuspannen, wenn er das will.
Kann er das ruhig machen?
Wir wollten da auch mal einen lokalen Kupernedes-Cluster machen im Stream.
Es gibt so viele Sachen.
Eine Zeit lang gab es mal CoreOS, CoreOS gibt es ja nicht mehr.
CoreOS heißt jetzt ja Flatcar, weil man sich dort gerne umbenennt.
CoreOS ist out, jetzt gibt es Flatcar.
Ja.
Ich sag euch, ich sag euch, Leute, also im Container-Umfeld da irgendwie halbwegs up-to-date zu bleiben, ist fast schlimmer als im JavaScript-Umfeld.
Äh.
Das ist was.
Ach nee, das ist nur der Tracker.
Und JavaScript aktuell zu bleiben, ist schon nicht ohne.
Ups.
So, also Passwort-Manager-Bild ist in der Edge-to-Chrome, alles klar.
Add-Extension.
Bitwarden-Extension installed.
So, und dem kann ich jetzt irgendwie einstellen, dass er YouTube-Common-Search, was hat man da jetzt alles?
Ne.
Wie sag ich dem denn jetzt, was der dafür verwenden soll?
Ich hab das noch nie verwendet.
Ich muss dem doch irgendwie sagen können, dass der meinen lokalen Passwort-Safe verwenden soll.
Ah.
Ne.
Settings.
Ah, hier.
Okay, Settings, ist das da?
Ja, da bin ich jetzt mal gespannt, wie gut der, wie gut der Kram funktioniert.
Settings.
Lokaler Server, das da.
Ja, mehr muss ich doch nicht machen, oder?
Einfach so, Save.
Login.
Äh, was hab ich denn für ein...
Was hab ich denn nochmal genommen?
Ah, ja, ja.
Mein Konto, hier.
QChat-Add-PW-Save, alles klar, alles klar.
Ja, meine Güte, ich kann mir doch den ganzen Crap nicht merken, den ich da...
Ja, meine Güte, ich kann mir doch den ganzen Crap nicht merken, den ich da...
Ja, meine Güte, ich kann mir doch den ganzen Crap nicht merken, den ich da...
Ja, meine Güte, ich kann mir doch den ganzen Crap nicht merken, den ich da so eingabe.
Ja, meine Güte, ich kann mir doch den ganzen Crap nicht merken, den ich da so eingabe.
Okay, login.
Ach, 9.
Enter.
Bam, da sind wir, nice!
Okay, jetzt funktioniert sogar die Browser Extension.
Sehr cool.
Ja?
Jetzt gucken wir mal, ob er das auf Google, ob er das auf Google eintragen will.
Nope.
Wie funktioniert das? Ich hab das noch nie verwendet.
Wir sagen dem erstmal, er soll die Extension anzeigen.
Ach, guck mal, er erkennt das wir auf der Webseite sind.
Zeigt er jetzt alles?
Ah, guck mal da.
Macht er Autocom...
Was? Ctrl? Shift? I?
Ne.
Sucht er jetzt da nur die Sachen raus,
die mit Google was zu tun haben?
Ach, L.
Ah, okay.
Das ist mir sogar lieber als Autocomplete, ja.
So, jetzt gucken wir mal, was passiert,
wenn ich hier jetzt noch einen anderen Eintrag hinzufüge.
Wir machen jetzt noch mal einen anderen Eintrag.
Keine Ahnung.
Äh, YouTube...
Cagweight...
Das da...
Ist ja egal.
So, und jetzt hier YouTube.com.
Das heißt, wenn ich jetzt hier drauf bin,
dann zeigt er mir auch kein Kram von YouTube an.
Okay, das ist cool.
Das gefällt mir.
So, sprich, wenn ich jetzt hier draufklicke,
weiter, weiter...
Ha, stimmt nicht.
Gut, ich hab ja auch Mist eingetippt.
Alles klar.
Das ist schick. Das gefällt mir. Das hat was.
So, wenn ich jetzt auf YouTube gehe,
schlägt er mir da den Kram vor.
Wobei, YouTube-Login ist ja...
Ha, YouTube-Login ist ja jebaited.
Das ist ja Google's Sign-in.
Bekommt man den auch in Home Assisted integriert?
Äh, inwiefern?
Was willst du da integrieren?
Ich mach gucken, ob es da eine Integration für gibt.
Es gibt...
Es gibt einen Add-on, dass du das einfach...
starten kannst. Okay.
Aber was willst du da...
Was willst du da großartig...
integrieren?
Ach so, du meinst, ob du aus deiner...
Home Assistant-Config irgendwie auch die Passwörter
zugreifen kannst?
Oh, bestimmt irgendwie, aber das...
das damit zu verheiraten, weiß ich nicht,
ob das so sinnig ist.
Das weiß ich nicht.
Aber, ich mein, du kannst ja
eine extra Secrets-Datei machen in Home Assistant.
Und die checkst du halt nicht mit ins Kind ein.
Mach mal so, du kriegst das bestimmt
irgendwie integriert, ja?
Aber wüsste ich jetzt nicht, wie...
Kein Plan. Alter Lan.
Ähm...
Max, hast du Bitwarn oder Bitwarn-RS installiert?
Ich hab Vault Warden installiert.
Echt?
Haben die das gemacht?
Ich hab das gar nicht mehr verfolgt.
Das kann auch relativ schnell passieren.
Deswegen am besten
die Dinger gar nicht da reinlegen
oder gleich als erstes einen Git-Ignore-Eintrag
erstellen.
Ich hab ja Secrets eigentlich nie
im Git-Repo liegen. Also gar nicht im gleichen
Verzeichnis. Nach Möglichkeit.
Wofür das... Wofür das...
Das Lokale gemacht ist?
Naja.
Du musst ja irgendwo deine Passwörter speichern.
Die Extension greift ja nur auf diesen...
Also die Extension hier im Browser,
die greift ja nur auf diese Sache hier zu.
Ohne das würde die Extension nicht funktionieren.
Es gibt ja irgendwo eine Suchmaschine,
die explizit dafür gemacht ist,
dass du GitHub durchsuchst
nach irgendwelchen Secrets.
Ohne Mist, Leute.
Wenn man nach...
Wenn man nach GitHub geht
und dort sucht
nach irgendwelchen bekannten Environment-Variablen
oder so. Machen wir doch mal.
Machen wir uns doch mal den Spaß.
Machen wir uns doch mal den Spaß und suchen nach
CFDNS-API-Token in GitHub.
So.
Und wir werden hier garantiert irgendwo fündig.
Leider bin ich nicht eingeloggt.
Das heißt, ich kann keine Codesuche machen.
Das ist ein bisschen doof.
Ich müsste Codesuche machen können.
Ich bin nicht eingeloggt auf...
Auf Shithub.
Bin ich hier eingeloggt?
Nee, auch nicht.
Tja, dann weiß ich nicht.
Also du wirst garantiert, garantiert
wirst du es finden.
Machen wir einfach mal Google.
Ja.
Und also GitHub ist voll.
Und das Problem ist, wenn du es einmal gepusht hast,
du kriegst es eigentlich nicht wieder aus dem Internet raus.
Du musst es löschen und ein neues
API-Token generieren.
Nee, aber das Browser-Add-on
finde ich wirklich cool.
Ich meine, sowas gibt es für Keepers auch.
Aber es macht es sicherlich einfacher,
wenn das Ganze ein Webservice ist.
Auf der anderen Seite ist ein Webservice halt auch wieder
einfacher darauf zuzugreifen,
als eine lokale Datei.
Nee, selbst Force Push kriegt die Sachen nicht zwangsläufig wieder weg.
Ich habe hier gerade...
Du hast es ja gerade gesehen im Stream.
Ich habe hier Sachen Force Push gelöscht und es war noch da.
Kann man da eigentlich noch verschiedene Typen anlegen?
Was ist denn Send?
Es gibt keine Sends aufzulisten.
Sends.
Was ist ein Send?
Text.
Lull.
Copy link to share this Send to...
Was?
Ah, das ist irgendwie sowas, was...
Ach so, ja gut.
Das bringt ja nur was, wenn es öffentlich ist.
Ne?
Das bringt ja nur was, wenn es öffentlich ist.
Da könnt ihr ja nach wie vor nicht drauf zugreifen.
Da kann man Sachen sharen, wenn man sowas öffentlich hat.
Okay.
Ja, das kann man machen.
Aber ich würde, also ganz ehrlich, ich würde niemals auf die Idee kommen,
mein Passwort safe, egal wie sehr ich denen traue, irgendwie ins Internet zu stellen.
Klar, das mag alles noch kleinseitig verschlüsselt sein.
Ohne Passwort kannst du damit nichts anfangen.
Es ist ja nicht so, als hätte das Backend da drauf Zugriff, hoffe ich mal zumindest.
Aber das würde ich nicht machen.
Das Einfachste, irgendwelchen Sachen vorzubeugen, ist,
es einfach, also, ne, Problemen vorzubeugen, ist einfach nirgendwo hinzulegen.
Wenn es nirgendwo liegt, kann damit auch keiner irgendwas machen.
Wenn man das natürlich, natürlich ist das nur gültig, wenn man es alleine verwendet.
Sollte man das jetzt beispielsweise mit der Familie zusammen verwenden oder von unterwegs verwenden wollen oder vielleicht sogar irgendwie so einem kleinen Team so ein Passwort safe verwenden wollen, dann ist das was anderes.
Ja, aber nie übers Internet.
Also ich würde es nie übers Internet machen, ehrlich gesagt.
VPN nach Hause.
Ja, das, das, das finde ich noch okay.
Das werde ich, würde ich noch okay finden, wenn man sich erst per VPN einloggen muss, aber ich hätte da trotzdem so meine Bedenken.
Also wie gesagt, ich verwende seit Jahren schon KeePass und ich habe KeePass gesynkt auf zwei Rechner fertig.
Das liegt nirgendwo.
Ich habe, ich habe meinen KeePass hier auf dem Rechner und ich habe meinen KeePass auf dem Streaming Rechner und es reicht fertig.
Du kannst mit zwei Faktor Authentifizierung absichern.
Ja, bestimmt, bestimmt.
Wie gesagt, du kannst.
Also es gibt ja zwei Grundsätze.
Ja.
Zwei grundsätzliche Ansätze.
Entweder du sagst okay, ich will das ins Internet packen, weil ich Zugriff drauf brauche und dann versuchst du es so dicht wie möglich zu machen oder so schwierig wie möglich irgendwie dran kommen, dran zu kommen oder die viel bessere Variante ist, sich überlegen, brauche ich da wirklich Zugriff von außen für und wenn man nicht unbedingt Zugriff von außen für braucht, dann ist einfach nicht machen, weil dann muss man sich das auch nicht zubauen und dicht machen und sonst wo.
Dort, wo es keinen Zugriff gibt und da, wo die Sachen nicht liegen, kann damit auch keiner was machen.
KeePass funktioniert nicht mit mehreren Leuten.
Ja, das kenne ich.
KeePass ist gerade.
Also wir hatten auch mal eine Weile früher einen KeePass auf einem Windows Laufwerk.
Das funktioniert nicht richtig.
Aber das finde ich echt nützlich hier.
Das hat was, finde ich wirklich cool gemacht.
Aber wie gesagt, ich werde wahrscheinlich bei KeePass bleiben.
Das ist der Screenshot.
Das ist ein Screenshot aus dem Repo.
Zeig mal her.
Auch noch den Server-Key eingecheckt.
Besonders clever.
Tja, keine allzu gute Idee, würde ich mal sagen.
Why is there a private SSL-Key?
Oh, die sind wahrscheinlich nicht auf GitHub, weil GitHub zu Microsoft ist.
Das ist, das ist, ob das stimmt, sei mal dahingestellt.
Aber die Antwort ist in Ordnung.
Ich würde sagen, das ist eine gute Idee.
Ich würde es trotzdem nicht einchecken.
Oh, hier haben wir richtige Cloud-Native-Leute wieder am Start.
Ich betreibe VoltWarn on-prem in Kombination mit WireGuard.
Ja, also on-prem, ich betreibe übrigens auch, wollte ich jetzt nur mal erwähnen,
ich betreibe gerade BitWarn auch on-prem, weil es ist einfach besser als lokal.
Klingt cooler, gebe ich dir recht.
Ja, also mit VPN, das ist das super Funst, will ich gar nicht in...
Frage stellen, das funktioniert sicherlich super.
Wenn man Zugriff von unterwegs braucht, wäre das auch mein bevorzugte Variante.
Entweder über OpenVPN oder WireGuard.
Das würde ich genauso machen.
Also würde ich, würde ich genauso machen.
Aber wenn man dann wirklich sagt, man braucht den Zugriff eigentlich gar nicht von außen,
dann ist das Beste, man lässt es dicht und kann sich alles sparen, es abzusichern,
weil was nicht auf ist, muss man auch nicht absichern.
Das ist halt einfach nicht da.
Local Private Cloud.
Oh, das ist natürlich auch gut.
Private Cloud.
On-Prem Private Cloud.
Ja, die haben wahrscheinlich einfach nicht die hochbezahlten SAP-Consultants wie die Corona-App.
Da kann sowas schon mal passieren.
Ja, aber das ist trotzdem Fail.
Das Erste, was ich mache, ist eigentlich, also auch wenn es irgendwelche Projekte sind,
die für Microcontroller mit WLAN-Secrets und sonst was.
Das Erste, was ich mache, ist, ich mache eine extra Secrets-Datei und packe die ins Git-Ignore.
Oder noch besser.
Die Dateien mit den Keys gar nicht erst im gleichen Ordner haben, wo das Git-Repo ist.
Das Kellerkind ist am Start.
Fünf Monate, danke schön für den SAP.
So, ähm.
Wartet mal, ich muss mal kurz in mein Dashboard gucken.
Ich habe bestimmt ein paar SAPs überlesen.
Das habe ich mich übrigens schon die ganze Zeit gefragt, warum man das nicht einfach in die Corona-App einbaut.
An der elf Monate, eins für Hyper-Subscription hier.
Danke für den SAP.
Oh, eins habe ich gekündigt, das wert sieben.
Hat Subscribed, dankeschön.
Und StarMech, sechs Monate.
Huge SAPs, Leute, hier.
Zwei habe ich übersehen vorhin.
Was machst du?
Äh, dann würde ich das nicht unbedingt in dem Git-Repo machen, sondern du kannst ja oftmals, also bei GitHub Actions ist das so,
da kannst du Secrets in deinem, also an einer anderen Stelle hinterlegen und kannst sie dann referenzieren aus deinem Bild, Bild-Jammel.
Also du musst das dann nicht.
In, äh, das gleiche Repo legen, sondern du kannst das quasi als, als Variable darauf zugreifen.
Guckt sie dann so aus.
Gibt's Secrets.
Wir haben es sogar mal, wir haben das sogar mal im Stream gemacht zusammen.
Add Secret, genau, hier.
Du gehst, du gehst in das, in das, in das Projekt.
Ich glaube, es geht auch Account-weit.
Legst das Secret hinzu, also sprich, das Secret kommt nicht in das Git-Repo rein.
Äh, und dann kannst du in deine Action.
Kannst du verlinken auf diesen Example-Key, genau, hier, guck, Super Secret, Dollar, Secrets, kannst du verlinken, ja, also so, so machst du es zumindest mit, machst du das zumindest mit GitHub Actions, also sprich, dass du, dass du das Passwort erst gar nicht einschränken musst.
Wie gesagt, GitHub Actions geht es auch, das geht ja, das geht ja hier übrigens auch, ne, also ich habe jetzt hier meinen Token im Klartext reingeschrieben, das würde ich in normaler Weise nicht so machen, du kannst hier auch, du kannst hier oben in Secrets.
Secrets anlegen, dann, ich, ich kriege das aus dem Kopf jetzt nicht zusammen, sondern nimmst, da kannst du einen Pfeil irgendwie reinschreiben, Secrets.Key oder was auch immer und dann kannst du darauf, das dann quasi hier drauf zugreifen und ich glaube, dieses Pfeil muss doch nicht mal im gleichen Repo liegen.
Also es ist auch, es ist auch da möglich, da drauf zuzugreifen, ohne dass man das einscheckt, so.
So, wo wir gerade dabei sind, wollten wir nicht das Video gucken, wo Linus Torvalds über Linux Desktop lästert?
Okay.
Das Video ist aber schon ein bisschen älter, also das ist anscheinend Debian Konferenz, es geht auch nur 11 Minuten, Debian Konferenz von 2014.
2014 war er noch nicht reformt.
Ich weiß nicht, wer es mitgekriegt hat, der hat ja vor einer Weile mal einen Post gemacht auf der Linux Mailing Liste, also die sind ja auch so, das ist ja alles noch ein bisschen oldschool, damit er noch per Mailing Listen und so Sachen gemacht und da hat er gesagt, er zieht sich jetzt eine Weile aus der Mailing Liste zurück.
Und, ähm, äh, wird an sich arbeiten, dass er nicht mehr so oft schimpft.
Der, der ging ja teilweise, der hat ja schon übelst krass gerantet teilweise.
Oftmals mit Grund, es ist gar nicht so, dass man sagen könnte, der hat einfach nur geflamed, um des Flamens willen, der hatte schon immer, der hatte schon immer da einen wahren Punkt und die Finnen sind ja auch dafür bekannt, dass die im Alltag viel flamen, hab ich mir sagen lassen, von einem Däne, weiß nicht, ob das stimmt, aber ich glaub das dem einfach mal.
Also finnische Umgangsformen sind wohl recht rau.
Und dementsprechend, ähm, das, deswegen ist er da immer am meckern gewesen.
Und das heißt, der Vortrag ist von 2014, das bedeutet, das kann durchaus sein, dass der öfters mal Fuck sagt.
Mal gucken, vielleicht brauchen wir einen Fuck-Counter.
Äh, oh, der Scam-Train ist am Start, Leute.
Eins Sub noch, lasst euch nochmal scammen.
Nils FPS, danke schon für 8 Monate Subs.
Gebt Jeff noch ein bisschen Geld, da brauchen wir unbedingt noch mehr Kohle.
Aber ich krieg ja immerhin die Hälfte ab, also gebt ihr quasi, macht ihr Jeff noch reicher und mich auch.
Wobei ich bei mir nicht von reich sprechen würde.
Captain Pit, danke schön fürs Prime Gaming.
Hups, ha, ich wollte dich nicht auslachen, sorry, falsches, falscher Knopf.
Aber wenn du dich die Welt lassen lässt, ich wollte den Subscriber-Button drücken.
Nice.
So, ähm, also gucken wir uns das mal an.
Gucken wir uns mal, wie er am Flamen ist, also.
One of the problems.
Desktop has.
Ist laut genug.
I mean, ignoring all the purely market and.
480p, das sagt alles über Linux-Konferenzen im Jahr 2014.
Ich mein, ich hab, man darf nicht vergessen, man darf nicht vergessen.
Ich hab 2010 Gameplay hochgeladen, 720p, 60fps.
Dass es 2014 unter Linux noch nicht möglich war.
Kann er ja verstehen, ja.
So that, right?
Ähm, one of the problems Desktop has.
So ist okay.
I mean, ignoring all the purely market and getting free installs and making it just so that normal people.
And by normal people I mean, obviously not.
Doch, YouTube hatte relativ schnell 60fps.
Ganz am Anfang, das stimmt, ganz am Anfang nicht, das ist richtig.
Aber ich hab ziemlich schnell 60fps hochgeladen, als es dann ging.
Und außerdem 4 zu 3.
Warum ist das fucking 4 zu 3?
Na, egal.
Das kannst du vergessen unter Linux.
Snap, snap.
Damals wusste er noch nicht, was auf ihn zukommt.
Snap.
Der hat da gar nicht gedacht.
Der hat gedacht, es wird besser.
Aber in Wirklichkeit wurde es noch schlimmer.
Ähm, und jetzt wird jemand sagen.
Hey, D-Package ist way improved and much better than RPM.
And that's not at all what I'm talking about.
I'm talking about actual application writers that want to make a package of their application for Linux.
Das stimmt.
Das gibt's wenig.
...with the other project I've been involved with, which is my DiveLog application, right?
Okay.
We make binaries for Windows and OSX.
Ja, das ist ja heute immer noch so.
...don't make binaries for Linux.
Ja.
Why?
Because making binaries for Linux desktop applications is a major fucking pain in the ass.
Okay, fucking Counter Nummer 1.
Ich wusste, da kommen ein paar Fuckings dabei.
Das geht nicht anders.
Er hat nicht unrecht.
Wobei das ein bisschen...
...wobei das ein bisschen...
das ein bisschen, ich meine, natürlich hat er nicht unrecht,
er ist, also, wenn
einer weiß, was bei Linux Sache ist, dann er,
aber es ist in den letzten sechs Jahren,
hat sich, sechs, sieben Jahren, hat sich schon ein bisschen was
getan in die Richtung, dank Docker und
Go, ist das mit Binarys
für Linux viel einfacher und
besser geworden. Also,
mit Go Binarys zu erzeugen,
ist easy as fuck, und
mit Docker Anwendungen zu
packagen, ist auch deutlich einfacher als
früher. Also, ein bisschen zum Besseren hat sich's
gewendet, es kamen allerdings auch so komische
Sachen wie Snap und so dabei,
da, ja, das ist der
Teufel in Person, ja.
Das Geile ist, es ist eine
Debian-Konferenz.
Es war Debian geflamed.
Das hat sich
tatsächlich mit Docker
gebessert, für
Sachen, Packagen,
und mit Go hast du das Problem nicht mehr.
Mit Go, kompiliertes
Binary läuft rückwärts
kompatibel auf jedem Linux-
Kernel bis Kernel
2.6.16
oder so.
App-Images sind auch okay.
Das Problem, was er anspricht, ist
aber immer noch da.
Halt, man hat es ein bisschen
umschifft mit
Container-Packaging und dass viele Sachen
Go, dass es viele Go-Binarys
mittlerweile gibt. Ich mein,
App-Image und sonst was, das ist ja
auch im Prinzip alles so ein ähnlicher Gedanke.
Und zwar,
man macht es ähnlich wie
unter Windows.
Jede Anwendung bringt seinen eigenen
Kram mit, worauf er sich nicht drauf verlassen kann.
Dass es da ist. Unter Windows
hast du halt den Vorteil, dass die System-Binarys
an sich, also die System-Libraries,
da weißt du halt,
dass die da sind und wie man die anspricht.
Und die ändern sich auch nicht alle drei Tage mal.
Das Problem hast du, wie gesagt, prinzipiell
unter Linux immer noch, gerade weil
solche Basic-Libraries, wie irgendwelche
C-Sachen, sich nicht
nur entweder komplett unterscheiden können.
Ich mein, es gibt ja
nicht nur die LibC-
Standard-Geschichten, sondern auch andere,
die man theoretisch auch verwenden könnte.
Also, und dann kommt noch die Version
dazu und sonst was. Also,
das Problem hast du immer noch, und das hast
du hauptsächlich unter Linux. Das hast du nicht so sehr
unter Windows und weg. Und man umgeht
das eben mit
Self-Contained-Binarys, App-Images,
Docker-Packages und so, umgeht man das halt nur.
Man hat dann aber auch die gleichen
Probleme im Prinzip wie unter Windows,
dass da jeder seine eigenen Sachen mitbringt.
Ich finde es aber auch in der heutigen Zeit nicht
schlecht.
Ich finde es nicht übel. Früher konnte man
sagen, ja, okay, wenn du es über
einen Paketmanager installierst, musst du halt von der
Library immer nur eine Version installiert haben,
anstatt dass jede von deinen 15 Anwendungen
die eigene hat. Also zum Beispiel
eine Library, die super
beliebt dafür war, ist
Zip
Library. Frag mich nicht, wie die Standards
Standard-Lib-Zip
oder so heißt. Z-Lib,
Z-Lib meine ich, genau. Also,
Z-Lib ist so eine Sache,
die war früher, oder
SQLite ist auch so eine Sache, die total
oft gebundelt wurde. Ja, du hattest dann quasi,
also unter Windows hast du dann halt
15 Anwendungen, jeder bringt sein SQLite
mit und jeder bringt eine andere Version
Z-Lib mit.
So, unter Linux war das halt die ganze Zeit
nicht so.
Da hast du über Package Manager
hast du deine
Version X installiert und
alles musst du dann halt aufbauen auf Version X.
Das ist aber, wie er sagt, schon
Pain in the Ass.
Für Portierbarkeit ist das
nicht so schön. Und jetzt,
wie macht man es unter Linux?
Ja gut, man macht mit App-Image,
Docker oder Self-Contained-Go-Binaries
machst du im Prinzip das,
du packst alles mit ein, was du brauchst
und hast dabei, also du hast
es im Prinzip so ähnlich wie unter Mac oder
auf Windows jetzt.
Außer das, was du über ein Package Manager
installierst. Das Problem gibt es, da hat er
voll und ganz recht auch 2021
noch. Wow, ein Linux-Streamer,
bin ich dabei.
Exzellent.
Schön, dass du deinen Weg hergefunden hast.
Pferd-Korall.
Setge.
Richtig, Setge.
Das stimmt,
das stimmt, das stimmt, da sind
die sogar richtig gut drin. Das muss man
ihnen mal sagen. Also, dass
das Kernel-Interface,
das funktioniert
wirklich gut. Das ist auch der Grund,
warum du Go-Binaries laufen lassen
kannst. Also, wenn du jetzt ein Go-Binary
machst und
kopierst das auf ein
Kernel 2.6.16 oder so zurück,
das läuft noch.
Und das geht nur,
weil das stable ist.
Ich meine, irgendeine Mindestversion
musst du dich mal drauf festlegen,
was du nimmst.
Aber ich bin mir,
ich bin mir relativ sicher,
es war irgendein 2.6.
Mindestversion, wo Go-Binaries
drauf laufen.
2.6.
Ich weiß nicht,
ob es ein 2.6.16 oder so.
Ah.
2.6.23,
nicht 2.6.16. Okay.
Okay.
Leute, ich hab mich vertan.
Ich hab 2.6.16 gesagt,
und es ist 2.6.23 gewesen.
Anzeige ist raus.
Ja, und das kriegen die wirklich gut hin.
Das muss man ihnen wirklich lassen.
That we shouldn't do stupid shit.
Right.
Okay, shit, shit, shit, fuck
und stupid counter, wir sind glaube ich schon bei 5
oder so. Ich finde das geil.
Aber wie gesagt, die Konferenz war noch
bevor er sich
selbst reformt hat.
The whole security thing,
it's a guideline that we
shouldn't do stupid shit.
Right. But that's not a hard rule.
People do stupid shit all the time.
I don't get that upset.
People break user space. I get really,
really angry. I mean, this is
something that is religious
for me. Ja, das ein Video,
ein Mittelfinger-Video gibt es auch noch.
Every single release, I have people
saying, okay,
I'm changing this ABI because
it's cleaning stuff up.
And I'm like,
no.
You're not changing that ABI because I will
crush you.
Right.
And actually,
it's often okay to change ABI.
Also, I crush you bedeutet bei ihm,
er schreibt einen Zwei-Seiten-Mailing-Listen-Post,
indem er ihn komplett zur Sau macht.
Wobei, wie gesagt,
er ist ja reformt mittlerweile.
Und ja, ich möchte ihm auch noch mal
Recht geben an der Stelle.
Ähm,
es ist 2021
immer noch so, und man sieht es
bei GTK wunderbar,
du kannst GTK eigentlich nicht verwenden.
Außer für, außer
Gnome selbst.
Sagen wir mal so, Gnome-only-Anwendungen,
die auch aktiv
oft gepflegt werden.
Du kannst GTK nicht verwenden.
GTK geht laufend kaputt.
Das ist auch der Grund,
warum keiner GTK-Cross-Plattformen
programmiert, obwohl es prinzipiell funktioniert.
GTK läuft ja eigentlich auch auf Windows.
GTK
geht immer kaputt,
wenn die Gnome-Leute der Meinung sind,
ah, das machen wir jetzt ein bisschen anders. Immer.
Deswegen benutzt keiner GTK
so wirklich für Cross-Plattform-Sachen.
Ist Inkscape GTK
unter Windows? Also VLC
sieht ja auch nicht schön aus, hat aber
vor einer Weile umgestellt von GTK auf Qt.
Die machen es besser.
Ja, so lange, bis niemand
es bemerkt. Aber sofort, wenn jemand
es bemerkt, ist es eine schlechte Sache.
Und das ist ein großer Deal für den Colonel.
Und ich spende viel
Arbeit, um den ganzen Entwicklern zu erklären,
dass das eine wirklich, wirklich
wichtige Sache ist. Und dann kommen
alle Distributions rein, und sie schlagen es
alles ab. Weil sie
brechen die Binary-Kompatibilität links und rechts.
Sie updaten GLibc,
und alles brechen.
Hey, du kannst alles wieder kompilen.
Richtig? Das ist wirklich
das Mindset.
Es ist so...
Ja, da hat er recht.
Die GLibc-Leute sagen, es war ein Bug.
Schau, hier ist der Standard. Es sagt,
du kannst darauf nicht aufhören. Niemand
interessiert sich. Ja.
Wenn es ein Bug ist, auf den die Leute aufhören,
ist es nicht ein Bug, sondern eine Feature.
Und... Hat er nicht Unrecht.
Ja.
I won't even get into all the other
libraries. But it's really sad
when the most core library in
the whole system is okay
with breaking stuff.
And as long as
things improve and they fix the
ABI. So that's my
rant. And that's what I really
fundamentally think needs to change
for Linux to work
on the desktop. Because you can't have
application writers
do 15 billion
on different versions.
And I'm
on record as saying that maybe
Valve will
actually save the Linux desktop.
Nein, das hat man 2014
eventuell gedacht.
Leider
war selbst Gaben
himself nicht in der Lage, da was zu machen.
It's actually not because
I think games are important.
I don't care. I don't play games.
I think some people do. So games
are important. But the really important
issue is, I guarantee you,
Valve will not make 15 different
binaries.
And I also guarantee you that every single desktop
distribution
will care about Valve binaries.
So
the problem is, Valve will
build everything statically linked.
And create
huge binaries. Und dann ist Steam
200 MB groß oder so. Was glaube ich ja auch ist.
Ich meine, Steam
kann das insofern auch machen. Steam ist ja unter
Haube im Prinzip erstmal nur ein Browser.
Also das Frontend, ja.
Das ist irgendein Embedded Chrome
Gedöns. Und das
bringen die mit, plus halt alles was es braucht
um zu laufen.
And that's kind of sad.
But it's what you have to do right now.
I would like to come back
to the topic of getting
application running everywhere on every distribution.
And compare it
to the out of three modules in the kernel
where the rule is
to get your
module in the kernel.
Could we
ask maybe the same for
the application to get them merged into distributions?
I think that's what actually
happens quite often.
Okay, der Rant ist fertig.
Die Fragerunde müssen wir uns nicht mehr angucken,
oder? Der Rant ist fertig.
Ja, da hat er natürlich
auch 2021 immer noch recht
mit, ja. Oh, guck mal!
Oh ne, 44 Minuten. 44 Minuten
gucken wir uns jetzt nicht an.
Die Lux Desktop.
Da kommt noch ein Rant, okay, okay.
Also 30% of the core stuff
that is Open Source
should just be in the distribution.
But then there is the crazy stuff.
Right.
There is something like some Surface
is Open Source, but let's face it,
we have maybe a thousand
users worldwide
out of which maybe
a couple of hundred
are running on Debian.
Out of which maybe 10
are running on Debian.
We do have some numbers, so those numbers are not completely made up, but my point is, if you have 10 users on Debian, and you have 10 users on Fedora, and I know we have a couple of users on Arch, and we have most...
Arch, by the way, das ist wieder bezeichnend, dass die Arch, übrigens ich verwende auch Arch-Linux, muss ich an der Stelle nochmal anmerken, das muss man ja immer machen, wenn es um das Thema geht, sonst wird man den Arch-Linux-Memes nicht gerecht, dass der Typ im Hintergrund gleich noch Arch-Linux gesagt hat, habt ihr das gehört?
Der im Hintergrund gerade noch, wo Linus überlegt hat, gleich im Hintergrund, Arch, Arch.
Die Linux-User sind auf Ubuntu, was eigentlich Sinn macht, weil Divers sind nicht unbedingt...
Computer-technische Leute, und Ubuntu hat sich an dieser Art und Weise verkauft, also wenn man so eine Situation hat, macht es Sinn, dass man Leute in jeder Distribution hat, die diese Applikation für diese Distribution packen und das in einer wirklich zeitgemäßen Art und Weise machen, wenn wir...
Verderben euch, dass das so eine tolle Idee war.
Hey, Debian-Maintainer sind komische Leute teilweise.
Also...
Naja, egal. Ne, das kann ich euch jetzt nicht erzählen, weil dann müsste ich erzählen, wo ich damals gearbeitet habe.
Das ist ein Beispiel von etwas, wo es für uns mehr Sinn machen würde, wie für Windows, wir haben nachts Gebäude, und bei wir, ich meine nicht mich, weil ich die Windows nicht getroffen habe, aber Dirk Hondel, der wirkliche Maintainer, baut im Grunde nachts.
Und es ist wirklich einfach, weil diese User, die Probleme mit einem bestimmten Modell von Dive-Computer haben, er kann ein Windows-Binary machen und sagen, hey...
Install that package and see if it fixes your problem.
This is what you want for real users.
Right?
For Linux we can't do that.
The Debian-Package is out of date.
It's not a nightly build.
There's no way to create a nightly build.
The only thing you can tell these kind of people is, hey, take the Git-Tree and compile it and see if it works or not.
And that works if you're people like us.
But if you're a diver who's in Hawaii and has trouble with his dive computer and you want to print Zodiac services, you can't say, okay, we'll maybe start with a zip file.
It's just gonna be different.
It's not a big deal, it's not a big deal.
erst mal erst mal chrome kompilieren hat schon einmal hat habt ihr schon mal
versucht chrome zu kompilieren chat also ich habe schon gemacht es ist nicht schön
brauchst erstmal 50 gb 200 gb festplatte und muss 50 prebuild steps machen und dann
kompiliert es da auch noch lange ich finde es geil erst mal die debian leute flamen
ich finde es geil erst mal die debian leute flamen
du kannst das auch in einem docker compiler kompiliert ja wahrscheinlich sogar besser
ja gut er ist fertig du kannst es du kannst ja auch einen fetten cloud surfer mieten mit
48 kern um chrome zu kompilieren aber es ist es ist auf jeden fall paints champ und du brauchst
richtig viel richtig viel ram und auch platten platz dafür dass du das machen kannst ich habe
jetzt einfach mal 50 g ram gesagt wahrscheinlich
reichen auch 20 g aber du brauchst auf jeden fall viel es war definitiv zu viel für meine
vm und meine vm hat ja schon einmal hier hat ja nur 16 g also 16 g hat nicht gereicht an
ram zum chrome kompilieren was muss ich unter chrome kompilieren verstehen du lädst dir den
du lädst dir den git chrome du lädst dir den source code von chrome runter
das ist auch eine ganze ganze ecke es gibt da auch so ein how to get code checkout step by step
checking building chrome ja das musste alles machen genau also du checkst dir das chrome repo
aus und dann kompiliert du den das am ende ein fertiger chrome rauskommt das braucht viel ram
und das dauert lange ich meine machen muss man es nicht
aber ich weiß gar nicht mehr weshalb weshalb wollten wir das damals machen ich glaube
irgendwelche naja ich weiß wieder warum wir chrome kompilieren wollten wegen gpu gpu decoding von von
videos zwar damals so experimental dass das nur im selbst kompilierten chrome überhaupt funktioniert
hat weiß gar nicht ob es jetzt mittlerweile funktioniert richtig wahrscheinlich immer noch
nicht ja also du brauchst du um chrome zu bilden brauchst du irgendwie keine ahnung pearl rubio
python installiert ich übertreibe jetzt mal ein bisschen muss 50 pre build stritte machen und dann
kannst du irgendwann mal versuchen zu zu kompilieren ja schön schön ist es nicht weil ich gehe jetzt
was essen ich habe hunger wir sehen uns morgen früh zum aufwachen stream schön dass ihr dabei
wart danke für die ganzen subs wir sehen uns bis dann macht's gut guck ob ich jemanden hosten kann
schnell gucke keiner ist da ich weiß nicht ob ich jemanden hosten kann aber schnell gucke keiner ist da
ich weiß nicht ob ich jemanden hosten kann aber schnell gucke keiner ist da ich weiß nicht ob ich jemanden hosten kann aber schnell gucke keiner ist da
da gibt es zu fordern brötchen egal ich gucke jetzt nicht weiter ich gehe jetzt auf leute wir sehen uns bis der ncu
