WEBVTT

01:03.220 --> 02:08.460
Hallo, warum nicht früher?

02:08.920 --> 02:10.680
Das ist die genauere Frage, wie warum nicht später.

02:16.060 --> 02:17.740
Wahrscheinlich sind die meisten gerade auf dem Heimweg.

02:24.130 --> 02:25.450
Ich kann dir sagen, warum nicht früher.

02:26.150 --> 02:27.510
Weil ich früher keinen Bock hatte.

02:33.400 --> 02:35.140
Kannst du mal mitbekommen, kannst du mal noch ins Wort gucken.

02:36.600 --> 02:39.560
Ansonsten gibt es ja noch mehr.

02:41.380 --> 02:47.150
Oh Mann, mir tut das Bein weh, Leute.

02:49.090 --> 02:50.230
Was es heute zum Mittagessen gab?

02:53.640 --> 02:54.880
Nudeln mit Lachs?

02:55.480 --> 02:57.400
Ne, es gab keinen Nudeln mit Lachs.

02:58.560 --> 03:03.760
Es gab, oh ja, ja, Leute, furchtbar gesund, furchtbar gesund gab es heute zum Mittagessen.

03:05.880 --> 03:07.500
Mozzarella Sticks und Pommes Frites.

03:09.120 --> 03:16.160
Highly, highly, äh, Bio Pommes Frites und Mozzarella Sticks.

03:16.300 --> 03:23.840
Aber kurz die VM an- und Updater mal.

03:25.020 --> 03:28.660
Ja, furchtbar gesund, ultra gesund, hyper gesund.

03:28.980 --> 03:30.280
Es reicht ultra gesund, reicht nicht mehr.

03:30.320 --> 03:32.020
Hyper gesundes Mittagessen gab es heute.

03:34.460 --> 03:39.120
Wisst ihr, meine VMs sind so dämlich benannt, dass ich meistens auf den ersten Blick nicht weiß, welche ich benutzen muss.

03:39.520 --> 03:41.760
Muss ich Poggers benutzen oder muss ich Stream benutzen?

03:41.800 --> 03:45.060
Nein, ich muss Stream benutzen, weil Poggers ist die alte Stream-VM.

03:45.300 --> 03:46.320
Warum habe ich die überhaupt noch?

03:46.880 --> 03:49.200
Wahrscheinlich zum Zeug nachgucken, falls ich mal was brauche.

03:49.940 --> 03:50.500
Ahem.

03:52.770 --> 03:53.950
Spaghetti mit Lachs.

03:54.570 --> 03:59.250
Äh, mal gucken, ob es das passende Hintergrundbild heute gibt.

04:01.780 --> 04:04.620
Gucken, was für ein random Hintergrundbild ausgewählt wird heute.

04:16.960 --> 04:18.680
Moment, Moment, das hat er noch nicht geupdatet.

04:19.100 --> 04:21.660
Ich muss erstmal Package-Updates machen und dann rebooten.

04:21.720 --> 04:23.660
Dann mal gucken, was für ein random Bild ich bekomme.

04:25.240 --> 04:28.020
Ich schreibe am 28., ach, ist es mal wieder soweit, ja.

04:30.240 --> 04:32.480
Meine erste AP1.

04:32.480 --> 04:37.370
Ach ja, ich dachte, ich dachte, das ist...

04:37.650 --> 04:42.480
Eher sowas wie Zwischenprüfung im Februar.

04:43.860 --> 04:44.120
Naja.

04:45.780 --> 04:47.240
Immer so zwei bis drei.

04:49.620 --> 04:51.780
Ah, ne, habe in den Probe-Prüfe immer so zwei bis drei.

04:52.220 --> 04:56.020
Und habe mich mit so einem Vorbereitungskurs und ein Vorbereitung durch...

04:57.100 --> 04:59.020
Und ein Vorbereitung-Buch vorbereitet.

04:59.980 --> 05:01.060
Meinst du, das reicht aus?

05:04.070 --> 05:04.310
Ja.

05:05.650 --> 05:07.510
Wenn du immer ganz gut durchkommst.

05:07.870 --> 05:10.310
Ich würde dir allerdings empfehlen, trotzdem noch ein paar Probe-Prüfungen...

05:11.170 --> 05:16.510
...zu machen, weil in der Probe-Prüfung ist es immer einfacher, als wenn man dann echt vor Ort da sitzt.

05:16.650 --> 05:21.330
Also guck lieber, dass du bei der Probe-Prüfung das nicht gerade so packst, sondern wirklich easy.

05:22.010 --> 05:24.590
Und dann schaffst du es auch ganz gut vor Ort.

05:24.890 --> 05:28.050
Weil das ist wirklich was anderes, ob man dann da sitzt und es ist ja zu weit.

05:28.390 --> 05:33.530
Und dann teilen die IHK-Leute das aus und man versteht die Hälfte der Fragen nicht, weil die schon so scheiße formuliert sind.

05:34.790 --> 05:41.060
Also es ist immer ganz gut, wenn man im Vorfeld besser ist und nicht gerade so...

05:41.060 --> 05:42.140
Oh, ich denke...

05:42.140 --> 05:43.900
Ich denke, das reicht aus.

05:45.680 --> 05:46.680
Mein Vorbereitungs...

05:46.680 --> 05:47.380
Was hast du gemacht?

05:47.460 --> 05:48.620
Ein Vorbereitungskurs.

05:49.000 --> 05:50.460
Du hast Probe-Prüfungen gemacht.

05:50.600 --> 05:53.220
Also ganz ehrlich, viel mehr kannst du nicht machen.

05:53.840 --> 05:54.620
Es wird schon hinhauen.

05:55.180 --> 05:55.900
Aber es ist schade.

05:56.020 --> 05:57.940
Ich mache ruhig noch ein paar Probe-Prüfungen.

05:58.920 --> 05:59.240
Bis...

05:59.240 --> 06:01.780
Ich meine, guck mal, es ist ja noch jetzt eine Woche Zeit.

06:01.920 --> 06:03.560
Ach, das ist nächste Woche Montag, gell?

06:04.200 --> 06:05.360
An die nächste Woche Mittwoch.

06:05.720 --> 06:07.640
Ja, da kannst du schon noch mal so ein paar Prüfungen machen.

06:08.720 --> 06:11.980
Umso mehr du dich in diesen IHK-Speak und in diesen ganzen Plänen...

06:11.980 --> 06:16.580
in diese Blödsinn da reindenken kannst, umso besser.

06:19.360 --> 06:20.820
Ja, mach dir aber nicht zu viele Gedanken.

06:20.960 --> 06:22.420
Im Prinzip sind die Prüfungen einfach.

06:22.980 --> 06:29.400
Das Schwierige an den Prüfungen ist, die IHK-Sprechweise und die IHK-Logik verstanden zu haben.

06:29.740 --> 06:31.140
Die Prüfungen selbst sind nicht schwer.

06:31.560 --> 06:33.080
Äh, ich kann nicht mehr richtig reden, Alter.

06:33.400 --> 06:35.540
Die Prüfungen selbst sind nicht schwer.

06:36.380 --> 06:40.440
Zu verstehen, was die wissen wollen und wie die Fragen stellen, das ist das Schwierige dran.

06:40.440 --> 06:43.720
Die Fragen selbst, wenn man wirklich verstanden hat, was die wollen,

06:43.720 --> 06:45.720
sind teilweise so trivial, simpel.

06:46.860 --> 06:49.620
So, ihr kennt ja diese typischen IHK-Prüfungen so.

06:50.000 --> 06:51.520
Ordnen sie die Punkte zu.

06:51.980 --> 06:53.600
Dass du links dann so...

06:53.600 --> 06:56.320
Oder bringen sie die Punkte in die richtige Reihenfolge.

06:57.040 --> 07:00.140
Das ist meistens so hirnverbrannt easy,

07:00.580 --> 07:02.560
wenn man verstanden hat, was die eigentlich wollen.

07:12.840 --> 07:14.180
Ach, AP1 ist jetzt...

07:14.180 --> 07:16.920
Ach, das ist die Zwischenprüfung. Heißt das jetzt AP1?

07:18.300 --> 07:19.940
Bei mir hieß das noch Zwischenprüfung.

07:20.660 --> 07:23.460
Aber es kann sein, ja, macht ja Sinn, dass das jetzt AP1 heißt.

07:23.480 --> 07:29.660
Weil, die Zwischenprüfung zählt jetzt ja auch zur Abschlussprüfung irgendwie, gell?

07:29.660 --> 07:33.780
Ich blicke da nicht durch. Ich habe mich da ehrlich gesagt nie wieder damit beschäftigt.

07:33.780 --> 07:35.780
Habe ich auch keinen Bock, weil warum?

07:35.780 --> 07:40.360
Ich bin... Warum sollte ich mich jemals wieder mit IHK-Prüfungen beschäftigen?

07:40.360 --> 07:43.870
Warte mal, habe ich jetzt Reboot oder nicht?

07:43.870 --> 07:45.870
Ja, habe ich. Moment.

07:45.870 --> 07:47.870
Alter, was ist denn das für ein Zufall, Mann?

07:48.870 --> 07:50.870
Guck mal, Leute. Ich habe rebooted.

07:50.870 --> 07:53.130
Und er hat von irgendwie 20 möglichen Hintergrundbildern exakt das Gleiche.

07:53.130 --> 07:54.970
Und er hat von irgendwie 20 möglichen Hintergrundbildern exakt das Gleiche.

07:54.990 --> 07:56.990
Und er hat von irgendwie 20 möglichen Hintergrundbildern exakt das Gleiche.

07:56.990 --> 07:58.990
Moment, das muss ich jetzt checken, dass wir hier nicht gebetet werden.

07:58.990 --> 08:06.810
Der Gebet-Test.

08:06.810 --> 08:08.810
20% zählt die, okay.

08:08.810 --> 08:12.320
Ja, tatsächlich.

08:12.320 --> 08:14.320
Das war Glück.

08:14.320 --> 08:16.320
Jetzt haben wir den Workout-Champ im Hintergrund.

08:16.320 --> 08:18.320
Den Workout-Pepo im Hintergrund.

08:18.320 --> 08:26.040
Tü-tü-tü-tü-tü-tü-tü.

08:26.040 --> 08:30.830
So, diesen ganzen Krempel hier mal zu.

08:30.830 --> 08:34.400
Tü-tü-tü-tü-tü-tü-tü.

08:34.400 --> 08:36.400
Tü-tü-tü-tü-tü-tü.

08:36.400 --> 08:38.400
Ja, also macht dir keine allzu vielen Gedanken.

08:38.400 --> 08:40.400
Wie gesagt, die Prüfungen sind easy.

08:40.400 --> 08:42.400
Und solange du das nicht machst, dann ist das alles.

08:42.400 --> 08:44.400
Das IHK, die IHK-Sprechweise,

08:44.400 --> 08:46.400
was die wissen wollen, verstanden hast, schaffst du das locker.

08:46.400 --> 08:48.400
Ich würde trotzdem noch mal

08:48.400 --> 08:50.400
bis 28.2.

08:50.400 --> 08:52.400
Also, wie gesagt, mach ruhig noch die Woche

08:52.400 --> 08:54.400
noch ein paar Prüfungen.

08:54.400 --> 08:56.400
Weil, sonst vergisst man es ja auch wieder.

08:56.400 --> 09:01.050
Es schadet nicht, noch mal so

09:01.050 --> 09:03.050
zwei, drei Prüfungen zu machen.

09:03.050 --> 09:05.050
Mach noch mal irgendwie die Woche

09:05.050 --> 09:07.050
zwei, drei Stück.

09:07.050 --> 09:09.050
Nächste Woche musst du dann, ich mein, hier ist gut.

09:09.050 --> 09:11.050
Bis kurz davor muss man das nicht machen.

09:11.050 --> 09:13.050
Das schadet nicht. Es gibt ja auch mittlerweile genug.

09:13.050 --> 09:15.050
Ich weiß gar nicht.

09:15.050 --> 09:17.050
Gibt es eigentlich mittlerweile eine offizielle

09:17.050 --> 09:19.050
Quelle für alte

09:19.050 --> 09:21.050
IHK-Prüfungen? Oder ist

09:21.050 --> 09:23.050
das immer noch so ein Ding,

09:23.050 --> 09:25.050
irgendeinen File-Hoster

09:25.050 --> 09:27.050
suchen, wo es mal einer drauf abgelegt hat?

09:27.050 --> 09:29.050
Also, ich meine

09:29.050 --> 09:31.050
offizielle, kostenlose Quelle.

09:31.050 --> 09:33.050
Dass man die sich kaufen kann, irgendwo

09:33.050 --> 09:38.160
weiß ich, ja.

09:38.160 --> 09:40.160
Soll ich euch mal sagen, ich

09:40.160 --> 09:42.160
finde das nach wie vor ein komplettes

09:42.160 --> 09:44.160
Unding, dass ein Azubi sich alte

09:44.160 --> 09:47.600
Prüfungen kaufen sollte.

09:47.600 --> 09:49.600
Ich weiß gar nicht, was kosten die eigentlich?

09:49.600 --> 09:53.800
Was kosten

09:53.800 --> 09:55.800
sowas eigentlich?

09:55.800 --> 09:57.800
Ja, ja, später.

09:57.800 --> 09:59.800
Fachinformatiker-Prüfung.

09:59.800 --> 10:01.800
Was ist das für eine Webseite, Mann?

10:01.800 --> 10:06.270
Was ist das für eine Webseite,

10:06.270 --> 10:08.270
Alter?

10:08.270 --> 10:10.270
Optimiert für Microsoft Internet Explorer

10:10.270 --> 10:12.270
in 1024x768,

10:12.270 --> 10:14.270
oder was?

10:14.270 --> 10:16.270
Exzellente Bewertung haben die, guck mal.

10:16.270 --> 10:18.270
Exzellent.

10:18.270 --> 10:20.270
Ecomi.

10:20.270 --> 10:22.270
Exzellente Bewertung. Alle ablehnen.

10:22.270 --> 10:24.270
Exzellent.

10:24.270 --> 10:27.710
Das Wordpress?

10:27.710 --> 10:29.710
Mal kurz gucken, was das ist.

10:29.710 --> 10:31.710
Ähm.

10:31.710 --> 10:35.080
Webstyles?

10:35.080 --> 10:37.080
Wie?

10:37.080 --> 10:39.080
Ws?

10:39.080 --> 10:41.080
Ist das Wordpress?

10:41.080 --> 10:43.080
Chatge?

10:43.080 --> 10:45.080
Ihr kennt euch mit sowas besser aus.

10:45.080 --> 10:47.080
Websale.

10:47.080 --> 10:49.080
Websale ist das.

10:49.080 --> 10:51.080
Was ist Websale?

10:51.080 --> 10:57.660
Shopify für Arme, oder wie?

10:57.660 --> 11:02.890
Webshop as a Service.

11:02.890 --> 11:04.890
Also, seriously.

11:04.890 --> 11:06.890
Wenn das ein Webshop as a Service ist,

11:06.890 --> 11:08.890
dann verstehe ich die Welt nicht mehr.

11:08.890 --> 11:10.890
Das sieht aus,

11:10.890 --> 11:12.890
als hätte das mal vor 20 Jahren einer gebaut

11:12.890 --> 11:14.890
und danach wurde das nie wieder angepasst.

11:14.890 --> 11:16.890
Also nach einer Service-Anwendung

11:16.890 --> 11:18.890
sieht das beim besten Willen nicht aus.

11:18.890 --> 11:20.890
Okay.

11:20.890 --> 11:22.890
Wie dem auch sei, Systemintegration.

11:22.890 --> 11:24.890
Was kosten so Abschlussprüfungen?

11:24.890 --> 11:26.890
Fachinformatiker

11:26.890 --> 11:28.890
Erfolgs-Paket

11:28.890 --> 11:30.890
plus Abschlussprüfung Teil 1.

11:30.890 --> 11:34.840
Was genau ist denn das Erfolgs-Paket?

11:34.840 --> 11:36.840
Was genau ist denn das Erfolgs-Paket?

11:36.840 --> 11:43.480
Was ist das Erfolgs-Paket?

11:43.480 --> 11:45.480
Was ist das Erfolgs-Paket?

11:45.480 --> 11:47.480
Erfolgs-Garantie auch noch.

11:47.480 --> 11:49.480
Da wäre ich aber mal zurückhaltender.

11:49.480 --> 11:53.240
Da wäre ich aber mal zurückhaltender.

11:53.240 --> 12:10.060
Was ist denn da drinnen?

12:10.060 --> 12:12.060
Ihre Vorteile.

12:12.060 --> 12:16.140
Perfekt gepackt.

12:16.140 --> 12:18.140
Ja, und was ist jetzt dabei?

12:18.140 --> 12:25.550
Ja, und was ist denn jetzt dabei?

12:25.550 --> 12:28.990
Erfolg.

12:28.990 --> 12:30.990
Das Selbstcoaching-Buch.

12:30.990 --> 12:32.990
Meine Güte, machen die jetzt auf keinen Fall

12:32.990 --> 12:37.390
KLS oder was?

12:37.390 --> 12:39.390
Die Versandkostenfreilieferung schont ihr Budget.

12:39.390 --> 12:41.390
Der Shit kostet 74 Euro, Mann.

12:41.390 --> 12:43.390
Der Shit kostet 74 Euro, Mann.

12:43.390 --> 12:47.790
Okay.

12:47.790 --> 12:49.790
Im Prinzip sind das einfach nur Abschlussinhalte.

12:49.790 --> 12:51.790
Prüfungstrainer-IT-Berufe.

12:51.790 --> 12:53.790
Braucht keiner. Lernkarten braucht auch keiner.

12:53.790 --> 12:55.790
Prüfungs...

12:55.790 --> 12:57.790
Ja, das vielleicht schon eher.

12:57.790 --> 12:59.790
Original-IHK-Abschlussprüfung Dezember.

12:59.790 --> 13:01.790
Moment, da ist nur eine Prüfung dabei.

13:01.790 --> 13:03.790
Herbst 2003. Nur eine Prüfung?

13:03.790 --> 13:08.440
Die wollen dich doch verarschen, oder?

13:08.440 --> 13:17.000
Die wollen dich doch verarschen, oder?

13:17.000 --> 13:19.000
Ganz ehrlich, Leute.

13:21.000 --> 13:23.000
Wir haben das damals von RapidShare oder so

13:23.000 --> 13:27.340
runtergeladen.

13:27.340 --> 13:29.340
Mich würde nicht wundern...

13:29.340 --> 13:31.340
Ich möchte natürlich keinen dazu auffordern.

13:31.340 --> 13:33.340
Mich würde nicht wundern,

13:33.340 --> 13:35.340
dass es das heute auch noch gibt.

13:35.340 --> 13:37.340
Vielleicht nicht auf RapidShare.

13:37.340 --> 13:39.340
Weil ich glaube, RapidShare selbst gibt das nicht mehr.

13:39.340 --> 13:41.340
RapidShare hat auch ein bisschen

13:41.340 --> 13:43.340
die Arschkarte gehabt, dass sie so einer der ersten

13:43.340 --> 13:45.340
so OneClick...

13:45.340 --> 13:47.340
Wie hieß das?

13:47.340 --> 13:49.340
Free...

13:49.340 --> 13:51.340
So Share...

13:51.340 --> 13:53.340
OneClick-Hoster?

13:53.340 --> 13:55.340
Wie nannte sich der Krempel denn?

14:03.450 --> 14:05.450
Davon will ich gar nichts wissen.

14:05.450 --> 14:07.450
Wenn ich sehe, wird es gelöscht.

14:07.450 --> 14:14.030
Kappa.

14:14.030 --> 14:16.030
Share-Hoster.

14:16.030 --> 14:19.980
Guck mal, es ist die eine Sache,

14:19.980 --> 14:21.980
was ich offiziell sagen muss,

14:21.980 --> 14:23.980
und das andere, was ich mache.

14:23.980 --> 14:25.980
Ich erlaube nicht, dass auf meinem Discord

14:25.980 --> 14:27.980
solche Sachen gepostet werden.

14:27.980 --> 14:29.980
Wo kämen wir denn dahin, Mann?

14:29.980 --> 14:31.980
Wo kämen wir denn dahin, Mann?

14:31.980 --> 14:33.980
Wo hast du die Programmiersprache Java?

14:33.980 --> 14:35.980
Viel wichtiger ist die Frage,

14:35.980 --> 14:37.980
wie man das ausspricht.

14:37.980 --> 14:39.980
Ist es Java?

14:39.980 --> 14:41.980
Ist es Java?

14:41.980 --> 14:46.380
Bisschen die Frage wie bei Kubernetes.

14:46.380 --> 14:51.870
Ich mag Java

14:51.870 --> 14:53.870
nicht sonderlich,

14:53.870 --> 14:55.870
ich habe aber auch nichts dagegen.

14:55.870 --> 15:02.440
Ich würde zumindest meine Projekte

15:02.440 --> 15:04.440
nicht in Java machen.

15:04.440 --> 15:06.440
Java ist zumindest alles,

15:06.440 --> 15:08.440
was ich bisher gesehen habe,

15:08.440 --> 15:10.440
beziehungsweise gelesen habe,

15:10.440 --> 15:12.440
ist ultra verbose

15:12.440 --> 15:14.440
oder verbis,

15:14.440 --> 15:16.440
wenn man das ganz richtig aussprechen muss.

15:16.440 --> 15:18.440
Also es sieht irgendwie so bloated aus.

15:18.440 --> 15:20.440
Man könnte dann sagen,

15:20.440 --> 15:22.440
dass es bei .NET und C-Sharp ähnlich ist,

15:22.440 --> 15:24.440
aber ich finde es bei weitem

15:24.440 --> 15:38.190
nicht so krass wie in Java.

15:38.190 --> 15:40.190
Gibt es eigentlich wirklich noch Unternehmen,

15:40.190 --> 15:42.190
die Programmierer nach programmierten Zeilen bezahlen?

15:42.190 --> 15:44.190
Gibt es eigentlich wirklich noch Unternehmen,

15:44.190 --> 15:46.190
die Programmierer nach programmierten Zeilen bezahlen?

15:46.190 --> 15:48.190
Das gibt es doch nicht mehr, oder?

15:48.190 --> 15:50.190
Das macht doch 2024 niemand mehr.

15:50.190 --> 15:57.790
Go ist nice.

15:57.790 --> 15:59.790
Viele Java-Leute schwärmen ja von Kotlin,

15:59.790 --> 16:01.790
so ein bisschen,

16:01.790 --> 16:03.790
aber sind dann richtig sätge,

16:03.790 --> 16:05.790
dass sie im Beruf nicht Kotlin verwenden dürfen,

16:05.790 --> 16:07.790
sondern weiter mit Java rumhantieren.

16:07.790 --> 16:11.550
Ja, dass sie weiter mit Java rumhantieren müssen.

16:11.550 --> 16:17.680
Ja, dass sie weiter mit Java rumhantieren müssen.

16:17.680 --> 16:19.680
Ja, das schadet nicht.

16:19.680 --> 16:21.680
Es ist jetzt nicht so, als wäre Java und das Java-Ökosystem

16:21.680 --> 16:23.680
unerträglich kacke.

16:23.680 --> 16:25.680
Ich glaube das Schlimmste

16:25.680 --> 16:27.680
am Java-Umfeld ist tatsächlich Oracle.

16:27.680 --> 16:29.680
Wobei es ja mittlerweile

16:29.680 --> 16:31.680
mit OpenJDK und was es sonst nicht gibt,

16:31.680 --> 16:33.680
ich bin da nicht so drin,

16:33.680 --> 16:35.680
was das Java-Ökosystem angeht,

16:35.680 --> 16:37.680
sicherlich ja auch vieles gibt,

16:37.680 --> 16:39.680
wo man einen großen Bogen

16:39.680 --> 16:41.680
um Oracle machen kann.

16:41.680 --> 16:49.150
Ein Kollege von mir auf der Arbeit

16:49.150 --> 16:51.150
mag Oracle auch nicht.

16:51.150 --> 16:53.150
Man muss aber wissen,

16:53.150 --> 16:55.150
der hat früher bei Sun gearbeitet

16:55.150 --> 16:57.150
und wurde dann zwangseinverleibt

16:57.150 --> 16:59.150
von Oracle

16:59.150 --> 17:01.150
und hatte dann nach ein paar Jahren keinen Bock mehr.

17:01.150 --> 17:13.160
Das finde ich

17:13.160 --> 17:15.160
das trifft echt ganz gut.

17:15.160 --> 17:17.160
Das trifft echt ganz gut.

17:17.160 --> 17:19.160
Go, wenn es schnell gehen soll

17:19.160 --> 17:21.160
und Rust, wenn man nichts von Bugs wissen will.

17:21.160 --> 17:23.160
Das ist natürlich im Detail

17:23.160 --> 17:25.160
nicht so,

17:25.160 --> 17:27.160
aber so ganz grob finde ich das gar nicht so schlecht.

17:27.160 --> 17:29.160
In Go kann man wirklich auf die Schnelle

17:29.160 --> 17:31.160
was zusammenzimmern,

17:31.160 --> 17:33.160
was man übrigens in C-Sharp und Python

17:33.160 --> 17:35.160
und anderen Programmiersprachen auch kann.

17:35.160 --> 17:37.160
Kommt dann ein bisschen drauf an, was man machen will.

17:37.160 --> 17:39.160
Und Rust ist die einzige Programmiersprache,

17:39.160 --> 17:41.160
die ich kenne, wo man sagen kann,

17:41.160 --> 17:43.160
dass es in der Regel,

17:43.160 --> 17:45.160
sobald es kompiliert, das macht, was da steht

17:45.160 --> 17:47.160
zu sehen glaubt.

17:47.160 --> 17:49.160
Dass man jetzt selbst irgendwie einen Denkfehler gemacht hat

17:49.160 --> 17:51.160
und der Ablauf nicht richtig ist,

17:51.160 --> 17:53.160
da kann Rust auch nichts dagegen.

17:53.160 --> 17:55.160
Aber zumindest in der Regel

17:55.160 --> 17:57.160
macht Rust Code das, was da steht.

17:57.160 --> 17:59.160
macht Rust Code das, was da steht.

17:59.160 --> 18:01.160
Also ne, was da steht,

18:01.160 --> 18:03.160
sollten sie alle machen, außer C++.

18:03.160 --> 18:05.160
C++ macht noch nicht mal das, was da steht.

18:05.160 --> 18:07.160
Das ist kein Witz.

18:07.160 --> 18:09.160
Letztens habe ich euch wieder was gezeigt,

18:09.160 --> 18:11.160
wo in C++ was anderes gemacht wird,

18:11.160 --> 18:15.180
als da steht.

18:15.180 --> 18:17.180
Aber bei Rust ist es so,

18:17.180 --> 18:19.180
das, was da steht und das, was du verstehst,

18:19.180 --> 18:21.180
ist in der Regel, sobald es sich kompilieren lässt,

18:21.180 --> 18:23.180
auch das, was es macht.

18:23.180 --> 18:25.180
Also Rust ist da schon ganz gut.

18:25.180 --> 18:27.180
Wenn du natürlich Blödsinn reinschreibst

18:27.180 --> 19:03.320
und einen Denkfehler drin hast,

19:03.320 --> 19:05.320
da kann Rust auch nichts dagegen machen.

19:05.320 --> 19:07.320
Ich finde das auch ganz gut gemacht.

19:07.320 --> 19:09.320
Rust hat ja von Anfang an gesagt,

19:09.320 --> 19:11.320
Exceptions wollen wir nicht,

19:11.320 --> 19:13.320
wir haben nur Result Types und Option Types

19:13.320 --> 19:15.320
und sowas.

19:15.320 --> 19:17.320
Die haben das halt konsequent gemacht.

19:17.320 --> 19:19.320
In Go haben sie es nicht konsequent gemacht.

19:19.320 --> 19:21.320
Und in C++ kann man das auch machen

19:21.320 --> 19:23.320
und Recovern.

19:23.320 --> 19:25.320
So halbe halbe ist das.

19:25.320 --> 19:27.320
Und in C Sharp kannst du auch beides machen.

19:27.320 --> 19:29.320
In C Sharp kannst du auch Error Types verwenden

19:29.320 --> 19:31.320
oder

19:31.320 --> 19:33.320
also ich glaube,

19:33.320 --> 19:35.320
offizielle Option und Error Types

19:35.320 --> 19:37.320
gibt es in der Standard Library nicht,

19:37.320 --> 19:39.320
aber kannst du ohne Probleme verwenden.

19:39.320 --> 19:41.320
Und Exceptions,

19:41.320 --> 19:44.960
was halt richtig nice wäre,

19:44.960 --> 19:46.960
in C Sharp, wenn sie es mal hinkriegen,

19:46.960 --> 19:50.330
würden, dass du

19:50.330 --> 19:52.330
also ohne den gleichen Base Type zu haben,

19:52.330 --> 19:54.330
mehrere Sachen,

19:54.330 --> 19:56.330
unterschiedliche Types returnen könntest.

19:56.330 --> 20:00.860
Irgendwelche Union Types,

20:00.860 --> 20:02.860
aber das wollen sie irgendwie nicht.

20:02.860 --> 20:04.860
Hast du auch studiert

20:04.860 --> 20:06.860
oder Ausbildung als Fachinformatiker?

20:06.860 --> 20:08.860
Ich habe 2007,

20:08.860 --> 20:10.860
also das jetzt vor,

20:10.860 --> 20:12.860
ach du Scheiße, ist das schon lange her, Mann.

20:12.860 --> 20:14.860
Das ist ernsthaft,

20:14.860 --> 20:16.860
17 Jahre her schon.

20:16.860 --> 20:18.860
Quick Maths, stimmt das?

20:18.860 --> 20:20.860
17 Jahre her

20:20.860 --> 20:22.860
habe ich eine Ausbildung als Fachinformatiker,

20:22.860 --> 20:24.860
Systemintegration gemacht.

20:24.860 --> 20:26.860
Das gab es zu dem Zeitpunkt noch nicht so lang.

20:26.860 --> 20:31.640
Schon ein paar Jahre, aber noch nicht so lang.

20:31.640 --> 20:33.640
Meinungen zu Broadcom Lizenzmodell der Zukunft?

20:33.640 --> 20:35.640
Meinungen zu Broadcom Lizenzmodell der Zukunft?

20:35.640 --> 20:37.640
Ich habe absolut keine Ahnung,

20:37.640 --> 20:39.640
was das Broadcom Lizenzmodell der Zukunft ist.

20:39.640 --> 20:41.640
Was das Broadcom Lizenzmodell der Zukunft ist.

20:41.640 --> 20:43.640
Was das Broadcom Lizenzmodell der Zukunft ist.

20:43.640 --> 20:45.640
Nein, nein, nein, da fangen wir jetzt nicht hin.

20:45.640 --> 20:47.640
Übrigens, das ist das einzige,

20:47.640 --> 20:49.640
was ich jetzt zu C++ sage.

20:49.640 --> 20:51.640
Wisst ihr eigentlich,

20:51.640 --> 20:53.640
dass in C++

20:53.640 --> 20:55.640
das hier

20:55.640 --> 20:57.640
while

20:57.640 --> 21:01.600
oder while true

21:01.600 --> 21:03.600
ich kann C++ nicht aus dem Kopf gescheit

21:03.600 --> 21:05.600
while true, hier

21:05.600 --> 21:07.600
print

21:07.600 --> 21:09.600
print

21:09.600 --> 21:11.600
Was glaubt der denn jetzt eigentlich

21:11.600 --> 21:13.600
Ach ja, was kacke.

21:13.600 --> 21:15.600
Wisst ihr eigentlich, dass in C++

21:15.600 --> 21:20.250
es nicht klar ist, was hier

21:20.250 --> 21:22.250
passiert?

21:22.250 --> 21:24.250
Habe ich schon mal erzählt, ja, aber

21:24.250 --> 21:26.250
in C++ ist es tatsächlich nicht

21:26.250 --> 21:28.250
so, dass das passiert, was man

21:28.250 --> 21:30.250
denkt. Was würdet ihr denken

21:30.250 --> 21:32.250
bei diesem Code? Was

21:32.250 --> 21:34.250
passiert da? Es ist jetzt übrigens keine

21:34.250 --> 21:36.250
konkrete Programmiersprache.

21:36.250 --> 21:38.250
Nur vom Ablauf. Wenn ihr sowas

21:38.250 --> 21:40.250
ähnliches in C++ stehen hättet,

21:40.250 --> 21:42.250
in C++ ist es dann nochmal

21:42.250 --> 21:44.250
Standard, ne, ähm,

21:44.250 --> 21:48.010
doch Standard

21:48.010 --> 21:50.010
so irgendwie. Allein schon,

21:50.010 --> 21:52.010
wenn ich diese Syntaxe immer sehe, kriege ich

21:52.010 --> 21:54.010
Anfälle.

21:54.010 --> 22:00.270
Kommt auf den Compiler an. Das ist

22:00.270 --> 22:03.960
korrekt. Die Schleife ist

22:03.960 --> 22:05.960
leer und wird je nach

22:05.960 --> 22:16.570
Dings wegoptimiert.

22:16.570 --> 22:18.570
Korrekt. Psytech. Genau so

22:18.570 --> 22:20.570
finde ich sollte das auch sein. Es ist aber

22:20.570 --> 22:22.570
nicht zwangsläufig.

22:22.570 --> 22:24.570
Also ich würde auch sagen, es muss eindeutig

22:24.570 --> 22:26.570
so sein, damit das halt passt, was

22:26.570 --> 22:28.570
da steht. Es gibt das aus und

22:28.570 --> 22:30.570
dann hängt es unendlich. Aber nein, das ist

22:30.570 --> 22:32.570
nicht so. Und es ist übrigens nicht

22:32.570 --> 22:34.570
so, weil die Schleife wegoptimiert

22:34.570 --> 22:36.570
wird.

22:36.570 --> 22:38.570
Es ist so, weil

22:38.570 --> 22:40.570
while ohne Abbruchbedingungen

22:40.570 --> 22:42.570
undefined behavior ist. Warum auch immer.

22:42.570 --> 22:44.570
Das haben sich die Leute im

22:44.570 --> 22:46.570
C++-Gremium sicherlich gut überlegt.

22:46.570 --> 22:48.570
Und das ist so schlimm, dass es

22:48.570 --> 22:50.570
zwischen Compiler-Versionen und

22:50.570 --> 22:52.570
Compiler-Upgrades sich ändert. Also sprich,

22:52.570 --> 22:54.570
wenn du das hier, sagen wir mal, mit GCC9

22:54.570 --> 22:56.570
kompilierst, dann hängt es in der

22:56.570 --> 22:58.570
Endlosschleife. Kompilierst du es mit

22:58.570 --> 23:00.570
GCC10, dann gibt es

23:00.570 --> 23:02.570
Keckel 1 und Keckel 2 aus.

23:02.570 --> 23:04.570
Es ist so ein Bullshit,

23:04.570 --> 23:06.570
diese Sprache und was die

23:06.570 --> 23:08.570
Standard-Leute da bauen. Ich meine,

23:08.570 --> 23:10.570
allein schon, dass eine leere,

23:10.570 --> 23:12.570
ich weiß gar nicht, ob das leer sein muss,

23:12.570 --> 23:14.570
eine Endlosschleife ohne

23:14.570 --> 23:16.570
Abbruchbedingungen undefined behavior ist.

23:16.570 --> 23:18.570
Wer hat sich diesen dummen

23:18.570 --> 23:23.870
Schwachsinn ausgedacht?

23:23.870 --> 23:25.870
Ja, also C++ kannst du echt knicken.

23:25.870 --> 23:27.870
Zumindest ist C++ die einzige Sprache,

23:27.870 --> 23:29.870
wo du wirklich vom angucken

23:29.870 --> 23:31.870
nicht wissen kannst, was es macht.

23:31.870 --> 23:35.690
Aber Rust ist schon gut

23:35.690 --> 23:54.300
in der Beziehung.

23:54.300 --> 23:56.300
Das weiß ich nicht. Es geht aber

23:56.300 --> 24:01.600
hauptsächlich darum, warte mal.

24:03.600 --> 24:05.600
Zumindest hat der Typ das

24:05.600 --> 24:07.600
in der Präsentation so erzählt.

24:07.600 --> 24:09.600
Ich habe den Standard nicht gelesen.

24:09.600 --> 24:11.600
Ich habe in der C++-Con-Präsentation

24:11.600 --> 24:13.600
geguckt, wo es um undefined behavior

24:13.600 --> 24:15.600
geht.

24:15.600 --> 24:17.600
Und der meinte, das Problem ist

24:17.600 --> 24:19.600
die Endlosschleife ohne

24:19.600 --> 24:21.600
Abbruchbedingungen, das wäre nicht definiert.

24:21.600 --> 24:30.990
Ne, kann man nicht.

24:30.990 --> 24:32.990
Das schaffen die doch nicht mal selbst.

24:34.990 --> 24:36.990
C++ ist einfach komplett für'n Arsch.

24:38.990 --> 24:40.990
So, machen wir das mal zu.

24:40.990 --> 24:42.990
Machen wir das mal zu. Wobei, einen Browser brauchen wir schon noch.

24:42.990 --> 24:44.990
Wie gucken wir uns heute

24:44.990 --> 24:46.990
Welt 5 an?

24:46.990 --> 24:48.990
Ich gebe zu, die Streamingzeit

24:48.990 --> 24:50.990
ist vielleicht nicht für alle so

24:50.990 --> 24:52.990
praktisch.

24:52.990 --> 24:54.990
Die meisten Leute sind jetzt fertig mit der Arbeit, fahren jetzt heim.

24:54.990 --> 24:56.990
Aber ich schwätz ja lang genug rum.

24:56.990 --> 24:58.990
Vielleicht seid ihr ja mittlerweile schon daheim

24:58.990 --> 25:00.990
und könnt gucken. Ansonsten gibt's immer noch

25:00.990 --> 25:02.990
das Wort.

25:02.990 --> 25:04.990
Oder wir machen ja demnächst noch ein paar mehr Streams

25:04.990 --> 25:06.990
in der Richtung. Zumindest

25:06.990 --> 25:08.990
ich wollte mir heute mal das

25:08.990 --> 25:10.990
Welt 5 angucken, weil

25:10.990 --> 25:12.990
das ist ja irgendwann gescheduled

25:12.990 --> 25:14.990
bis 2024 irgendwann,

25:14.990 --> 25:16.990
wenn ich das richtig gelesen hab.

25:16.990 --> 25:18.990
Und, das Welt 5 hat

25:18.990 --> 25:20.990
bei der Ankündigung

25:20.990 --> 25:22.990
einen riesen Aufschrei

25:22.990 --> 25:24.990
in der Svelte Community verursacht.

25:24.990 --> 25:26.990
Weil sich die Syntax

25:26.990 --> 25:30.430
etwas ändert.

25:30.430 --> 25:32.430
Als ich das das erste Mal gesehen hab,

25:32.430 --> 25:34.430
wir gucken uns das gleich an. Ich hab ne coole Seite

25:34.430 --> 25:36.430
gefunden in nem Video auf Youtube,

25:36.430 --> 25:38.430
wo man schön die alten und neuen Versionen

25:38.430 --> 25:40.430
vergleichen kann.

25:40.430 --> 25:42.430
Zumindest war der Aufschrei relativ groß,

25:42.430 --> 25:44.430
weil sich an der Syntax ein bisschen was

25:44.430 --> 25:46.430
geändert hat.

25:46.430 --> 25:48.430
Und ich dachte mir am Anfang auch,

25:48.430 --> 25:50.430
ich weiß nicht,

25:50.430 --> 25:52.430
irgendwie falte ich die alte Sache

25:52.430 --> 25:54.430
ja ganz cool.

25:54.430 --> 25:56.430
Aber jetzt nachdem ich's mir ne

25:56.430 --> 25:58.430
Weile überlegt hab, glaub ich das neue ist wirklich

25:58.430 --> 26:00.430
besser und

26:00.430 --> 26:02.430
eindeutiger. Ihr könnt

26:02.430 --> 26:04.430
das ja gleich selbst entscheiden, wenn wir's uns angeguckt

26:04.430 --> 26:06.430
haben. Ich bin übrigens bei weitem kein

26:06.430 --> 26:08.430
Frontender oder Svelte Professional.

26:08.430 --> 26:10.430
Also es kann durchaus sein,

26:10.430 --> 26:12.430
dass ich auch in Svelte 4 bei einigen Sachen

26:12.430 --> 26:14.430
gar nicht so genau weiß aus dem Kopf, wieso

26:14.430 --> 26:17.740
ich das so richtig ausdrücke,

26:17.740 --> 26:19.740
aber ich will das jetzt mal einfach mal

26:19.740 --> 26:21.740
definieren.

26:21.740 --> 26:23.740
Kein TypeScript mehr? Ne, wir machen hier

26:23.740 --> 26:25.740
nie TypeScript.

26:25.740 --> 26:27.740
Oder was meinst du?

26:27.740 --> 26:29.740
Ach, Svelte 5 kein TypeScript mehr?

26:29.740 --> 26:31.740
Ne, du kannst das mit TypeScript verwenden,

26:31.740 --> 26:33.740
wenn du willst. Du kannst es auch sein lassen.

26:33.740 --> 26:35.740
Ne ne ne ne. Das einzige, wo die kein Type...

26:35.740 --> 26:37.740
Das hat auch nen riesen Aufschrei verursacht.

26:37.740 --> 26:39.740
Als die, äh, angeblich

26:39.740 --> 26:41.740
verwendet Svelte 5 kein TypeScript mehr.

26:41.740 --> 26:43.740
Das ist auch Blödsinn.

26:43.740 --> 26:54.820
so wie sie es welt bauen quasi verwenden sie intern kein typescript mehr aber du kannst welt

26:54.820 --> 26:58.760
selbstverständlich mit typescript benutzen und die offiziellen beispiele sind auch zum größten

26:58.760 --> 27:09.600
teil mit typescript ja genau das heißt nicht dass du es welt nicht benutzen kannst mit typescript

27:09.600 --> 27:14.720
sie verwenden intern ins welt kein typescript mehr das liegt daran ich habe auch ein video gesehen

27:14.720 --> 27:20.720
mit dem mit dem es welterfinder die haben gesagt weil sie große probleme haben es welt kompiliert

27:20.720 --> 27:26.720
das ja dann zu playen javascript alles was du da an syntaktischen zucker ins welt machen kannst

27:26.720 --> 27:32.960
die ein große probleme typescript da zwischendrin zu passen deswegen machen sie glaube ich jetzt

27:32.960 --> 27:38.420
js docs intern und verzichten auf typescript du kannst aber das welt wunderbar mit typescript

27:38.420 --> 27:43.000
verwenden und du wirst sogar glaube ich in offiziellen docs dazu ermutigt so nach dem

27:43.000 --> 27:44.420
motto macht es mit typescript

27:44.720 --> 27:49.100
also dass das was die intern machen und das wie du es dann am ende verwenden kannst hat ja gar nichts

27:49.100 --> 27:58.040
miteinander zu tun so und ich habe eine seite gefunden in einem youtube-video ich zeige euch

27:58.040 --> 28:04.020
das youtube-video mal also wir gucken uns das jetzt an ich habe ein youtube-video gefunden und

28:04.020 --> 28:09.500
zwar das da und er hat da drin eine wirklich coole seite gezeigt und zwar guckt mal hier

28:09.500 --> 28:18.540
component-party.dev kanntet ihr das also ich kannte das vorher nicht das ist aber extremly nice

28:19.040 --> 28:27.140
denn man kann hier beispielsweise alle möglichen frontend frameworks vergleichen wie ähnliche

28:27.140 --> 28:32.840
konstrukte untereinander aussehen also wir können jetzt zum beispiel sagen wie sieht dann state

28:32.840 --> 28:39.960
handeling aus in concertville versus react oder wie sieht state handling aus ins welt 5 versus

28:39.960 --> 28:47.990
wird oder imanu drei oder view 2 oder so sieht man sieht man die unterschiede es aber richtig nice also sieht es in

28:47.990 --> 28:55.550
also aber richtig nice also sieht es in 12 4 aus so sieht es im react aus 12 5 aus so sieht es so

28:55.550 --> 29:05.900
sah es in view 2 aus view 2 fand ich super nice damals das war so das erste frontend framework

29:05.900 --> 29:10.680
wo ich so wo ich so richtig wo mir so richtig gefallen hat ich habe das interesse ein bisschen

29:10.680 --> 29:16.400
verloren weil das upgrade zu view 30 so schleppend so schleppend hingezogen hatten irgendwann bin ich

29:16.400 --> 29:23.740
dann was welt gelandet um alle anderen mache ich ein bisschen den bogen was ich mir irgendwann mal

29:23.740 --> 29:33.320
angucken wollte ist tatsächlich soll weil soll es ja dachte ich eigentlich ich dachte eigentlich

29:33.320 --> 29:41.000
dass soll quasi wie react ist nur ohne jsx aber anscheinend anscheinend doch nicht weil das ist

29:41.000 --> 29:51.560
doch eindeutig jsx hier unten oder es ist es ist html in javascript vielleicht haben sie das auch

29:51.560 --> 29:53.520
nur für die einfachheit halber der beispiele gemacht

29:53.540 --> 30:04.490
egal zumindest wir planten hier mal alles aus wir planten solid aus für planten view aus für

30:04.490 --> 30:15.110
pländen react mussten react react aus da bleibt jetzt nur übrig fällt 4 und 12 5 die seite ist

30:15.110 --> 30:21.510
mega podcast muss man sagen und wir kommen zwar ein paar beispiele an ich habe sogar gesehen man

30:21.510 --> 30:25.850
kann das mittlerweile ziemlich easy ausprobieren man muss das nicht mehr offiziell in diesem

30:25.850 --> 30:26.430
offiziellen

30:26.450 --> 30:34.950
baulkasten machen sondern man ein neues source-kit projekt anlegt mkr die das dumme ist ich guck mal

30:34.950 --> 31:05.480
hier bei einem ordner namen alter fiel aber das npx nee alter javascript ökosystem wie ging das

31:05.480 --> 31:20.000
nochmal mpx auf der conversation und das welt mit zwei ist es ankea 2 intersects war in japan aber

31:20.000 --> 31:23.480
für dich muss ich das den ersten hier zu Ende geben und du kannst mir gehen sie citizens also du kannst

31:23.480 --> 31:25.540
mich nicht Tool Day für die buchhaltung gucken kommentieren wie mach ich hier so ans polygon die

31:25.540 --> 31:26.340
ich hab mir center gallery das anticipier y что habe ich wirklich bei dennis werden sie zuowie verbunden

31:26.340 --> 31:43.880
heutzutage ja ich kenne fcf ich mag das aber für die history nicht benutzt das sogar auf

31:43.880 --> 31:51.400
der arbeit für host auto completion so nach dem motto ich suche die web server kiste aus dem und

31:51.400 --> 32:03.860
dem projekt ja ich kenne dass ich habe das glaube ich sogar installiert ja das sogar installiert

32:03.860 --> 32:14.060
kennst du c oxide ja das kenne ich das ist ein cd in rust verwende ich aber auch nicht

32:14.060 --> 32:23.980
aus genau dem gleichen grund warum ich auch kein fcf verwende für sachen wie shell history und

32:23.980 --> 32:29.480
sowas und das liegt darin das liegt daran dass ich ein nicht unerheblichen teil meiner arbeitszeit

32:29.480 --> 32:33.840
auf remote system verbringen per ssh und dort ist dieser ganze kram die

32:33.840 --> 32:38.460
nicht drauf und wenn du dich daran gewöhnt dass du nur noch cd navigieren kannst mit sie auch

32:38.460 --> 32:43.500
sei dass ich nur noch dran gewöhnt dass seine best history fasi searchable ist dann drehst

32:43.500 --> 32:49.740
du durch auf server system weil es hat sehr viel damit zu tun was man gewöhnt ist zu tippen und

32:49.740 --> 32:58.560
man tippt ja oftmals schneller als man wirklich realisiert was passiert man denkt sich im kopf

32:58.560 --> 33:02.340
schon immer das was dann kommt und tippt dann weiter bis man feststellt auch fakt das ist ja

33:02.340 --> 33:06.600
hier gar nicht drauf ganz vergessen also dass das ist der grund warum ich das nicht verwende

33:06.600 --> 33:17.450
ist auch der grund warum ich bei allen standard tools die standardsachen verwende warum ich bei

33:17.450 --> 33:31.200
ls und auch ls verwende und nicht etwa eines der 5000 ls rewrites in rust so wie ging das jetzt hier

33:31.200 --> 33:40.810
nochmal svelte create latest my app nein nein nicht latest via example so angeblich svelte demo app skeleton pro

33:40.810 --> 33:46.730
so angeblich svelte demo app skeleton pro

33:46.750 --> 33:54.250
check angeblich soll er mich jetzt fragen ob ich nicht ein svelte 5 testprojekte ach hier guck mal

33:54.250 --> 34:05.860
try the svelte 5 preview unstable genau das will ich haben browser testing wer braucht tests wenn

34:05.860 --> 34:23.090
alles immer first try funktioniert ok npm install mal schauen mal schauen wie viele

34:23.090 --> 34:38.270
pakete gleich wieder installiert sind das sparen wir uns das brauchen wir gleich ok node modules

34:39.950 --> 34:46.630
was ist das warum sind es nur 28 mb bei einem neuen projekt

34:46.630 --> 34:54.220
das ist viel zu wenig also ich glaube unter zwei gigabyte node modules ist

34:54.220 --> 35:10.980
irgendwas verkehrt und das funktioniert jetzt ja na gut immerhin 48 node package ist am start

35:10.980 --> 35:19.620
was ist der da so installiert eigentlich übrigens kam er minus r und das war nicht minus r dass er die farbe macht also guck mal hier was hat er gemacht ganz einfach

35:20.540 --> 35:21.340
Was installiert er?

35:21.460 --> 35:23.200
Acorn, was auch immer das ist.

35:24.140 --> 35:25.640
Am Projekt, keine Ahnung.

35:26.880 --> 35:28.460
Cookie Debug, Deep Merge.

35:29.560 --> 35:30.340
Cleor.

35:31.160 --> 35:32.360
Magic String.

35:33.800 --> 35:35.100
MS, Nano ID.

35:35.720 --> 35:36.680
Pico Colors.

35:38.080 --> 35:38.560
Sirf.

35:41.060 --> 35:42.380
Wied und Wiedfu.

35:43.280 --> 35:44.180
Zimmer Frame.

35:45.480 --> 35:45.940
Zertke.

35:46.540 --> 35:48.060
Installiert, guck mal, der installiert Zertke.

35:49.820 --> 35:51.320
Okay, dann starten wir das mal.

35:51.980 --> 35:54.100
Und gucken, wie es mit Svelte 5 aussieht.

35:54.480 --> 35:55.380
Achso, ne Moment, Moment.

35:55.500 --> 35:56.680
Das machen wir jetzt nicht, das starten wir jetzt nicht.

35:57.120 --> 35:59.260
Wir starten jetzt erstmal Visual Studio Code hier drinnen.

36:00.600 --> 36:02.460
Schieben Visual Studio Code auf den zweiten Bildschirm.

36:02.580 --> 36:03.780
Und jetzt starten wir den Camp.

36:04.100 --> 36:04.240
So.

36:06.160 --> 36:07.440
Und jetzt können wir es auch rüberschieben.

36:07.600 --> 36:11.040
So, Demo-Anwendung sieht noch genauso aus, wie die alte Demo-Anwendung.

36:11.880 --> 36:15.760
Nur, dass es jetzt Svelte 5 ist.

36:18.000 --> 36:18.440
Source.

36:19.700 --> 36:21.360
Was fällt mir denn auf?

36:21.360 --> 36:29.700
Als erstes, dass ich nicht weiß, wo meine, sag ich jetzt mal eine Startzeit.

36:30.020 --> 36:33.400
Gut, da kann da noch nichts auffallen, weil das mehr oder weniger plain HTML ist.

36:33.840 --> 36:34.780
Ohne Spirenzien.

36:37.050 --> 36:37.990
Svelte ist pfeifert.

36:38.250 --> 36:39.810
Ja, Svelte ist richtig pfeifert.

36:41.650 --> 36:45.350
So, und jetzt können wir das mal vergleichen, was der Unterschied ist zwischen 4 und 5.

36:46.310 --> 36:50.250
Zum Beispiel eine Sache, die sehr kontrovers war.

36:50.510 --> 36:52.550
Also als Svelte 5 angekündigt wurde.

36:53.590 --> 36:55.490
Announcing Svelte 5.

36:57.850 --> 36:59.350
Svelte 5.

37:05.250 --> 37:10.390
Hier, das war so eines der ersten Sachen, die bekannt wurde über Svelte 5.

37:11.070 --> 37:12.750
Das haben die dann hier gezeigt.

37:13.270 --> 37:21.780
Und da war dann auf Reddit, gingen sie alle wieder ab, dass sie das scheiße finden.

37:22.660 --> 37:26.640
Und ein paar fanden es auch gut, aber der überwiegende Teil fand es ziemlich kacke.

37:27.360 --> 37:30.860
Ich musste mich auch erst mal am Anfang dran gewöhnen.

37:41.860 --> 37:42.340
Ja.

37:47.180 --> 37:47.660
Naja.

37:48.140 --> 37:51.260
Zumindest ist das jetzt der Unterschied zwischen alt und neu.

37:51.400 --> 37:54.320
Also früher hat man, wir nehmen das hier einfach mal als Beispiel.

37:54.480 --> 37:55.840
Ja, wir kopieren uns das mal als Beispiel.

37:56.520 --> 37:57.740
Ja, cute chat.

37:59.000 --> 37:59.460
Wenn man das...

38:01.600 --> 38:01.760
Ja.

38:02.280 --> 38:04.820
Also früher hat man State so deklariert.

38:04.940 --> 38:07.180
Also man hat überhaupt nicht erkannt, dass das State ist.

38:07.620 --> 38:10.700
Das war in Svelte gewisserweise irgendwie Magic.

38:14.400 --> 38:17.900
Da hat man eine Variable deklariert im Skriptteil und konnte das dann hier verwenden.

38:25.120 --> 38:27.720
Ich meine, das ist ein bisschen minimalistisch, das Beispiel.

38:27.840 --> 38:34.820
Weil hier auch nix geupdatet wird oder irgendwas passiert.

38:39.000 --> 38:43.220
Zumindest in Svelte 5 ist das gleiche Beispiel, ein Ticken länger.

38:44.100 --> 38:44.600
Und...

38:46.100 --> 38:50.540
Also der einzige Unterschied zwischen Svelte 4 und 5 ist, dass du hier noch State drumherum machen musst.

38:51.000 --> 38:52.880
Also dass das hier nicht mehr automatisch passiert.

38:53.660 --> 38:57.180
Ich fand es am Anfang doof, als ich das erste Mal das Beispiel gesehen habe.

38:57.500 --> 39:00.400
Habe ich mir gedacht, warum muss man das noch...

39:00.500 --> 39:01.000
Also warum...

39:01.000 --> 39:04.700
Muss man da noch was drumherum schreiben, wenn man das noch automatisch machen kann?

39:05.820 --> 39:11.480
Ich glaube, den Vorteil erkennt man erst, wenn man ein bisschen mehr als 3, 4 Variablen hat.

39:13.180 --> 39:16.820
Spätestens wenn man Variablen anlegen will, die kein...

39:16.820 --> 39:17.380
Wie soll man sagen?

39:17.700 --> 39:20.840
Kein State sind, den du irgendwie im View verwenden willst.

39:22.360 --> 39:26.760
Aber Svelte automatisch das versucht irgendwie zu tracken, dann bringt es wahrscheinlich was.

39:27.440 --> 39:28.600
Fehlt mir ein bisschen die Erfahrung.

39:29.780 --> 39:30.480
Auf der anderen Seite...

39:31.000 --> 39:35.560
Auch als jemand, der jetzt nicht hauptberuflich als Frontend-Entwickler arbeitet.

39:35.700 --> 39:39.100
Eine Sache, die ich an der neuen Syntax persönlich ganz gut finde, ist,

39:40.400 --> 39:46.400
dass man eben halt genau sieht, wann was Reactive ist und wann nicht.

39:52.480 --> 39:54.000
Oder ist Reactive das richtige Wort?

39:59.970 --> 40:07.090
Also das ist der Unterschied zwischen Svelte 4 und Svelte 5, wenn es um State geht.

40:07.170 --> 40:10.070
Ich weiß nicht, ob man dazu Reactive sagen darf.

40:12.720 --> 40:14.220
Weil ist es ja im Endeffekt auch.

40:15.080 --> 40:18.920
Du kannst jetzt da ja auch Two-Way-Binding oder sowas machen.

40:19.100 --> 40:24.020
Oder man kann ja auch zum Beispiel an der Stelle jetzt sagen, hier, das ist Count.

40:25.080 --> 40:26.960
Count fängt an mit 1.

40:30.890 --> 40:40.190
Fängt an mit 1 und dann machen wir irgendwie einen Button dahin und sagen hier On, Klick.

40:40.350 --> 40:41.730
Das geht übrigens jetzt auch anders.

40:41.730 --> 40:43.950
Ich glaube, man kann jetzt einfach sagen direkt On, Klick.

40:44.650 --> 40:46.190
Also On, Klick.

40:46.390 --> 40:55.570
Und dann sagen wir jetzt hier Count, Count, Plus, Plus.

40:56.210 --> 41:02.090
Und jetzt sollte der hochzählen, wenn ich hier unten draufklicke.

41:03.950 --> 41:05.890
Also sieht man, das geht Two-Way.

41:06.150 --> 41:10.970
Das geht einmal in den View rein und einmal quasi von Interaktiv klicken, dann auch wieder.

41:16.960 --> 41:20.720
So, und ich glaube, das Problem, was die versuchen damit zu lösen ist,

41:21.900 --> 41:24.640
dass wenn ich jetzt noch mehr solcher Dinge habe, hier Count,

41:24.960 --> 41:27.180
hier, was weiß ich, wenn ich mal angenommen habe, ich habe jetzt Name

41:27.180 --> 41:33.500
und das soll halt wirklich nur intern in meinem JavaScript hier oben verwendet werden,

41:34.400 --> 41:40.900
dann würde Svelte das trotzdem tracken, ob damit nicht was passiert,

41:41.320 --> 41:43.180
obwohl man eigentlich genau weiß, es passiert nichts damit.

41:44.500 --> 41:47.440
Und in Svelte 5 passiert das nicht, weil man sagen muss, hier Dollar State.

41:50.540 --> 41:52.600
Das sieht mir zu sehr nach PHP aus.

41:56.120 --> 41:58.180
Das sieht legit null aus wie PHP.

41:58.360 --> 42:07.920
Ich meine, es ist JavaScript und HTML.

42:09.200 --> 42:12.020
Das machst du inline in PHP oftmals auch, ja.

42:14.700 --> 42:22.520
Das Ding ist nur, das Ding ist nur, wie verwendet man das jetzt?

42:22.900 --> 42:26.300
Also machen wir da mal jetzt Svelte 5 draus, ja.

42:26.500 --> 42:28.700
Dollar State muss da im Endeffekt bloß hin.

42:29.520 --> 42:30.380
Dollar State.

42:33.130 --> 42:34.170
Und es funktioniert wieder, ne?

42:35.830 --> 42:37.870
Ansonsten muss man da nichts ändern.

42:39.230 --> 42:41.310
Muss man das nicht irgendwie includen oder so?

42:41.310 --> 42:41.330
Ja, das ist so.

42:41.330 --> 42:41.410
Das ist so.

42:41.410 --> 42:41.470
Das ist so.

42:41.470 --> 42:41.530
Das ist so.

42:41.530 --> 42:41.590
Das ist so.

42:41.590 --> 42:41.650
Das ist so.

42:41.650 --> 42:41.750
Das ist so.

42:41.750 --> 42:41.790
Das ist so.

42:41.790 --> 42:41.850
Das ist so.

42:42.050 --> 42:45.890
Dollar State, das scheint Standard Library zu sein.

42:49.830 --> 42:52.090
Okay, und das in den Klammern ist der Initial Value.

42:52.410 --> 42:59.630
Dollar State ist insofern schon mal ein bisschen verwirrend für mich, weil Dollar war in Svelte immer Stores.

42:59.990 --> 43:02.030
Aber das scheint jetzt kein Store zu sein.

43:03.750 --> 43:05.550
Das ist jetzt irgendwas anderes.

43:05.610 --> 43:06.610
Moment, das ist nicht TypeScript.

43:07.470 --> 43:07.950
Definition.

43:08.030 --> 43:09.230
Das ist jetzt irgendwas anderes.

43:10.730 --> 43:11.130
Gut.

43:11.130 --> 43:11.170
Gut.

43:11.570 --> 43:12.770
Wie dem auch sei, das von uns.

43:13.050 --> 43:15.150
Ich muss mal den Hintergrund hier ein bisschen anders machen.

43:15.710 --> 43:17.350
Das sieht ja abartig aus.

43:40.390 --> 43:41.010
Ach so.

43:42.130 --> 43:43.710
Moment, wir haben ja gar keinen Tailwind.

43:44.110 --> 43:48.910
Wie macht man mit Plain CSS Background Color?

43:50.390 --> 43:51.030
Machen wir irgendwas?

43:51.210 --> 43:51.650
Keine Ahnung.

43:51.930 --> 43:53.270
Was ist eine schöne Background Color?

44:02.090 --> 44:04.670
Monke ist...

44:04.670 --> 44:05.550
Ah, hier ist...

44:05.550 --> 44:06.410
Alter, sieht das kacke aus.

44:06.410 --> 44:11.030
Kann man da nicht irgendwas, kann man da nicht irgendwie ein bisschen angenehmeres verwenden, so?

44:12.550 --> 44:13.050
Hier.

44:15.430 --> 44:16.330
Ach nee, das ist Alpha.

44:16.330 --> 44:17.010
Alpha will ich nicht.

44:18.390 --> 44:19.590
Irgendwie sowas hier oder so.

44:24.000 --> 44:26.340
Ah, okay, schon nicht mal ganz so schlimm.

44:31.270 --> 44:34.130
Oder kannst du Syntax aus 4 und auch in 5 verwenden?

44:34.790 --> 44:40.890
Also, Freesay, dankeschön für den Sub 420, Prog Subscription.

44:41.270 --> 44:43.630
Oder kannst du Syntax aus 4 auch in 5 verwenden?

44:44.070 --> 44:44.570
Also.

44:44.950 --> 44:48.850
Soweit ich das gelesen habe, kannst du die alte Syntax weiterverwenden.

44:50.190 --> 44:54.650
Du musst nicht jetzt deine komplette Anwendung umschreiben, wenn du Upgradest auf Svelte 5.

44:55.670 --> 45:00.230
Was wohl Probleme machen kann ist, oder was schlicht und ergreifend dann gar nicht kompiliert ist,

45:00.830 --> 45:06.530
manche Svelte 5 Konstrukte im gleichen File mit manchen Svelte 4 Konstrukten.

45:07.050 --> 45:12.090
Also was wohl nicht funktionieren muss, ist $state und die alte...

45:12.090 --> 45:14.090
Und diese alte...

45:14.950 --> 45:16.110
Schreibweise.

45:16.490 --> 45:17.170
Da mag er nicht.

45:18.670 --> 45:19.890
Guck, da sagt...

45:19.890 --> 45:23.030
Dollar Doppelpunkt ist not allowed in Runes Mode.

45:24.290 --> 45:31.850
Das ist die alte Schreibweise für mach irgendwas reaktiv und update das immer, wenn davon sich was ändert.

45:32.550 --> 45:34.430
Das kann man nicht verwenden zusammen mit der neuen.

45:34.430 --> 45:42.570
Aber was du machen kannst ist, wenn du jetzt eine Komponente hast, die noch mit der Svelte 4 Syntax geschrieben ist,

45:42.630 --> 45:44.790
dann kannst du sie in einem Svelte 5 Projekt einbinden.

45:44.950 --> 45:46.950
Beziehungsweise kannst du die auch weiterhin...

45:46.950 --> 45:48.950
Hast du ja gesehen.

45:48.950 --> 45:50.950
Ich kann es auch weiterhin so machen.

45:50.950 --> 45:52.950
Und das funktioniert jetzt auch.

45:52.950 --> 46:00.580
Also man kann bloß manche Sachen nicht zusammen im gleichen File verwenden.

46:00.580 --> 46:04.580
Aber im besten Fall macht man diese einzelnen Komponenten-Files ja eh halbwegs übersichtlich.

46:04.580 --> 46:06.580
Class machen wir jetzt mal.

46:06.580 --> 46:08.580
Nicht Class, Style.

46:08.580 --> 46:10.580
Text.

46:10.580 --> 46:12.580
Color?

46:12.580 --> 46:14.580
Ne, ne, Moment. Es ist einfach nur Color in CSS, oder?

46:14.580 --> 46:16.580
Ja.

46:16.580 --> 46:18.580
Excellent.

46:18.580 --> 46:20.580
Massive Web Design.

46:22.580 --> 46:24.580
Font, Family.

46:24.580 --> 46:30.200
Wow, huge.

46:30.200 --> 46:32.200
Massive Web Design.

46:32.200 --> 46:34.200
So Skills wieder am Start hier.

46:36.200 --> 46:38.200
Magst du an's Trinken erinnern? Ja.

46:38.200 --> 46:40.200
Mein Wasser ist leer. Ich hab nur noch ein bisschen hier.

46:40.200 --> 46:42.200
So, also es geht weiter.

46:42.200 --> 46:46.200
Declare State wissen wir jetzt, dass das funktioniert mit Dollar State.

46:48.200 --> 46:49.200
Das hat vorher auch schon funktioniert.

46:49.200 --> 46:51.200
Das war jetzt rechtsübersichtlich.

46:51.200 --> 46:53.200
You have Docker installed on your system.

46:53.200 --> 46:55.200
You have Docker installed on your system.

46:55.200 --> 46:58.640
Ja, no shit Microsoft.

46:58.640 --> 47:00.640
Sag mal, sind die Icons hier neben anders als früher?

47:00.640 --> 47:02.640
Sag mal, sind die Icons hier neben anders als früher?

47:02.640 --> 47:04.640
Oder bin ich einfach nur...

47:04.640 --> 47:06.640
Möchte mir Microsoft irgendwas mitteilen,

47:06.640 --> 47:08.640
Möchte mir Microsoft irgendwas mitteilen,

47:08.640 --> 47:10.640
dass die C++ Extensions ganz oben stehen?

47:10.640 --> 47:12.640
dass die C++ Extensions ganz oben stehen?

47:12.640 --> 47:14.640
Ne, die sind wahrscheinlich einfach alphabetisch sortiert.

47:14.640 --> 47:26.780
Ne, die sind wahrscheinlich einfach alphabetisch sortiert.

47:26.780 --> 47:28.780
Ja, das alles ohne Konzeptzeichnung.

47:28.780 --> 47:37.660
So, jetzt geht's weiter mit Update State.

47:37.660 --> 47:39.660
So, jetzt geht's weiter mit Update State.

47:39.660 --> 47:45.860
Gut, das haben wir ja schon mehr oder weniger grad ausprobiert,

47:45.860 --> 47:47.860
Gut, das haben wir ja schon mehr oder weniger grad ausprobiert,

47:47.860 --> 47:49.860
indem ich hier unten bei dem Button der ganzen Sache was zugeordnet hab.

47:49.860 --> 47:51.860
indem ich hier unten bei dem Button der ganzen Sache was zugeordnet hab.

47:51.860 --> 47:53.860
Also sprich, das müssen wir nicht ausprobieren.

47:53.860 --> 47:55.860
Ändert sich nix.

47:55.860 --> 47:57.860
Bleibt weiterhin das mal Dollar State.

47:57.860 --> 47:59.860
Computed State.

47:59.860 --> 48:01.860
Okay, jetzt wird's spannend,

48:01.860 --> 48:03.860
weil in Svelte 4, und das ist das, was viele

48:03.860 --> 48:05.860
weil in Svelte 4, und das ist das, was viele extrem mochten an Svelte,

48:05.860 --> 48:07.860
extrem mochten an Svelte,

48:07.860 --> 48:09.860
ist diese Syntax hier,

48:09.860 --> 48:11.860
dass man Sachen Reactive macht,

48:11.860 --> 48:13.860
beziehungsweise automatisch

48:13.860 --> 48:15.860
sich ändern lässt,

48:15.860 --> 48:17.860
wenn es Abhängigkeiten

48:17.860 --> 48:19.860
untereinander gibt. Also was man in Svelte 4

48:19.860 --> 48:21.860
machen konnte,

48:21.860 --> 48:23.860
machen wir jetzt mal ein Beispiel,

48:23.860 --> 48:25.860
oder brauchen wir das gar nicht, machen wir das mal weg.

48:25.860 --> 48:27.860
Also was man in Svelte 4 machen konnte ist,

48:27.860 --> 48:29.860
man kann zum Beispiel,

48:29.860 --> 48:31.860
das einfachste Beispiel ist wahrscheinlich

48:31.860 --> 48:33.860
mit nem Console Log.

48:33.860 --> 48:35.860
Also mal angenommen, ich möchte jetzt was ausführen,

48:35.860 --> 48:37.860
jedes Mal, wenn sich

48:37.860 --> 48:39.860
was verändert, dann konntest du in Svelte 4

48:39.860 --> 48:41.860
einfach sowas hier sagen,

48:41.860 --> 48:43.860
Log Count.

48:43.860 --> 48:45.860
Und jedes Mal,

48:45.860 --> 48:47.860
guckt, seht ihr's hier unten,

48:47.860 --> 48:49.860
jedes Mal, wenn sich Count ändert,

48:49.860 --> 48:51.860
wird das hier

48:51.860 --> 48:53.860
ausgeführt. Das war so diese

48:53.860 --> 48:55.860
Reactivity Syntax von Svelte 4.

48:55.860 --> 48:57.860
Und das haben ganz viele Leute

48:57.860 --> 48:59.860
extrem gemocht an Svelte.

48:59.860 --> 49:01.860
Das war für viele so ein bisschen wie damals

49:01.860 --> 49:03.860
in Vue 2 eben diese so

49:03.860 --> 49:05.860
Klassenschreibweise von den Komponenten,

49:05.860 --> 49:07.860
die viele gut fanden.

49:07.860 --> 49:09.860
Viele extrem gemocht in Svelte.

49:09.860 --> 49:11.860
Und das gibt es in der Form jetzt nicht mehr.

49:11.860 --> 49:13.860
Ja und nächstes Beispiel, was man

49:13.860 --> 49:15.860
hier drinnen machen kann zum Beispiel ist,

49:15.860 --> 49:17.860
ja okay, ich will jetzt jedes Mal,

49:17.860 --> 49:19.860
jedes Mal irgendwie, wenn sich

49:19.860 --> 49:21.860
Count ändert, will ich

49:21.860 --> 49:23.860
irgendwas damit

49:23.860 --> 49:25.860
machen. Ja zum Beispiel könnt ihr sagen,

49:25.860 --> 49:27.860
let name

49:27.860 --> 49:29.860
keckel oder so.

49:29.860 --> 49:31.860
So und jetzt geben wir nicht

49:31.860 --> 49:33.860
Count aus,

49:33.860 --> 49:35.860
sondern geben Name aus.

49:35.860 --> 49:37.860
Und jedes Mal, wenn sich eben

49:37.860 --> 49:39.860
Count ändert, sage ich

49:39.860 --> 49:41.860
name gleich

49:41.860 --> 49:43.860
ja name plus

49:43.860 --> 49:45.860
das ist jetzt Javascript,

49:45.860 --> 49:47.860
dass das funktioniert.

49:47.860 --> 49:53.920
Guckt, das geht auch nur

49:53.920 --> 49:55.920
in Javascript, ein String und

49:55.920 --> 49:57.920
eine 1 und ein Plus.

49:57.920 --> 49:59.920
Keine Ahnung, fragt nicht, aber das funktioniert.

49:59.920 --> 50:04.060
Das war so die Reactivity

50:04.060 --> 50:06.060
Syntax von Svelte 4. So,

50:06.060 --> 50:08.060
das hat sich jetzt geändert und zwar

50:08.060 --> 50:10.060
kann man,

50:10.060 --> 50:12.060
achso das war die Kurzschreibweise.

50:12.060 --> 50:14.060
Das war die Kurzschreibweise von

50:14.060 --> 50:16.060
dem, was ich euch gezeigt habe. Also

50:16.060 --> 50:18.060
anstatt das so zu machen,

50:18.060 --> 50:20.060
könnte ich auch, solange es einzeilig

50:20.060 --> 50:22.060
bleibt, das war auch so ein Ding, was mich immer ein bisschen

50:22.060 --> 50:24.060
genervt hat in Svelte 4, dass

50:24.060 --> 50:26.060
das nur einzeilig ging.

50:26.060 --> 50:28.060
Ja also sprich, anstatt

50:28.060 --> 50:30.060
so, hätte ich quasi auch

50:30.060 --> 50:33.380
schreiben können, Dollar

50:33.380 --> 50:35.380
name gleich

50:35.380 --> 50:40.220
name

50:40.220 --> 50:42.220
weiß gar nicht, ob das funktioniert hätte überhaupt.

50:42.220 --> 50:45.660
Plus 1?

50:45.660 --> 50:47.660
Kann ich das hier weg machen? Keine Ahnung, ob das funktioniert.

50:47.660 --> 50:49.660
Not the number?

50:49.660 --> 50:51.660
Nee, fand's gar nicht, guck mal.

50:51.660 --> 50:53.660
Ha!

50:53.660 --> 50:55.660
Ah nee, nicht plus 1, plus count, ich kack nur, weil da.

50:55.660 --> 50:59.040
Nee, das geht gar nicht.

50:59.040 --> 51:01.040
Wahrscheinlich, weil das nicht belegt ist.

51:01.040 --> 51:06.080
Ah jetzt, jetzt, jetzt.

51:08.080 --> 51:10.080
So, und das haben sie jetzt abgeschafft.

51:10.080 --> 51:12.080
Das haben sie jetzt

51:12.080 --> 51:14.080
abgeschafft.

51:14.080 --> 51:16.080
Und die neue Syntax ist jetzt

51:16.080 --> 51:18.080
explizit,

51:18.080 --> 51:20.080
dass man explizit

51:20.080 --> 51:22.080
definieren muss, wenn man

51:22.080 --> 51:24.080
ab-

51:24.080 --> 51:26.080
hängigkeiten hat.

51:26.080 --> 51:28.080
So genau, warum das derived

51:28.080 --> 51:30.080
heißt, habe ich ehrlich gesagt

51:30.080 --> 51:34.670
nur semi-kapiert.

51:34.670 --> 51:42.080
Hm. Achso,

51:42.080 --> 51:44.080
Moment, derived, dann muss das hier Dollar

51:44.080 --> 51:46.080
State sein, dass das funktioniert, oder?

51:46.080 --> 51:54.130
Derived wahrscheinlich,

51:54.130 --> 51:56.130
weil das, was in derived

51:56.130 --> 51:58.130
drinne steht, hier hinten dann die Abhängigkeiten

51:58.130 --> 52:00.130
sind. Also es ist jetzt nicht mal Magic

52:00.130 --> 52:02.130
wie in Svelte 4, wo

52:02.130 --> 52:04.130
das hier im Endeffekt dafür gesorgt hat, dass der

52:04.130 --> 52:06.130
gepasst hat, so, was

52:06.130 --> 52:08.130
ist da hinten drinne, ist das Reactive, wie hängt das

52:08.130 --> 52:10.130
von ab? Jetzt musst du explizit sagen, ey,

52:10.130 --> 52:12.130
ich will eine Variable

52:12.130 --> 52:14.130
haben, und wenn sich an dieser Variable

52:14.130 --> 52:16.130
was ändert, möchte ich das hier neu ausführen.

52:16.130 --> 52:18.130
Das geht halt mit dieser derived

52:18.130 --> 52:20.130
Geschichte. Übrigens, ich habe bis heute nicht gecheckt,

52:20.130 --> 52:22.130
warum sich das Runes nennt.

52:22.130 --> 52:24.130
Brauche mir

52:24.130 --> 52:32.180
ein cooles Wort für. Ja, also

52:32.180 --> 52:34.180
ich könnte da jetzt natürlich auch sowas hier machen.

52:34.180 --> 52:36.180
Cackle

52:36.180 --> 52:38.180
plus count

52:38.180 --> 52:40.180
und dann wird das auch hochzählen.

52:40.180 --> 52:44.130
Wo ich mir nicht ganz sicher

52:44.130 --> 52:46.130
bin,

52:46.130 --> 52:48.130
geht sowas?

52:48.130 --> 52:50.130
Wahrscheinlich nicht, oder?

52:50.130 --> 52:52.130
Das mag er nicht, also

52:52.130 --> 52:54.130
man kann da nicht auf sich selbst referenzieren, okay.

52:54.130 --> 52:59.680
Ich bin mir

52:59.680 --> 53:01.680
ehrlich gesagt auch nicht sicher, wie oft ich das

53:01.680 --> 53:03.680
verwenden werde, weil so einzeilige Sachen

53:03.680 --> 53:05.680
reichen mir meistens nicht.

53:05.680 --> 53:07.680
Die Frage

53:07.680 --> 53:09.680
ist jetzt ja auch, kann man dort

53:09.680 --> 53:11.680
kann man dort irgendwie sowas?

53:11.680 --> 53:18.130
Achso, ja gut, name.

53:18.130 --> 53:20.130
Okay, warte mal, ich schreibe wieder count

53:20.130 --> 53:22.130
rein. Kann man da sowas

53:22.130 --> 53:24.130
machen, wie ausführen bei jeder

53:24.130 --> 53:26.130
State-Änderung?

53:26.130 --> 53:32.510
Wird auch nicht funktionieren, oder?

53:32.510 --> 53:37.420
Ne, das mag der nicht.

53:37.420 --> 53:39.420
Das ist irgendein Objekt,

53:39.420 --> 53:41.420
das ist keine Function, aber ich kann bestimmt sowas machen, ne?

53:41.420 --> 53:46.210
Haben wir jetzt nicht ausgeführt.

53:46.210 --> 53:48.210
Okay, keine Ahnung.

53:48.210 --> 53:52.990
Kann man andere derived Variablen

53:52.990 --> 53:54.990
in derived reinmachen?

53:54.990 --> 53:56.990
Das ist eine gute Frage, das probieren wir mal aus.

53:56.990 --> 53:58.990
Machen wir nochmal, name.

53:58.990 --> 54:00.990
So, name ist derived

54:00.990 --> 54:02.990
Okay, jetzt machen wir mal

54:02.990 --> 54:04.990
name2

54:04.990 --> 54:06.990
name2

54:06.990 --> 54:08.990
is derived from

54:08.990 --> 54:14.480
name

54:16.480 --> 54:18.480
plus 1, oder plus 0

54:18.480 --> 54:23.650
und jetzt gehen wir mal

54:23.650 --> 54:29.200
hier name2 aus.

54:29.200 --> 54:31.200
Ja, das funktioniert.

54:31.200 --> 54:33.200
Das geht. Also man kann

54:33.200 --> 54:35.200
Abhängigkeit

54:35.200 --> 54:37.200
von Abhängigkeit von Abhängigkeit machen.

54:37.200 --> 54:52.540
Das funktioniert.

54:52.540 --> 54:54.540
Oh ne, nicht

54:54.540 --> 54:56.540
nicht wieder heute.

54:56.540 --> 54:58.540
Fangt nicht damit an. Dann rege ich mich jetzt

54:58.540 --> 55:00.540
zwei Stunden über C++ auf und dann ist das

55:00.540 --> 55:02.540
Stream vorbei.

55:02.540 --> 55:04.540
Heute nicht.

55:04.540 --> 55:06.540
Aber ganz grundsätzlich

55:06.540 --> 55:08.540
gesagt, finde ich sehr schwach von

55:08.540 --> 55:10.540
einer Programmiersprache, dass eine

55:10.540 --> 55:12.540
Endlosschleife ohne Abbruchbedingungen

55:12.540 --> 55:14.540
undefined behavior ist.

55:14.540 --> 55:16.540
Es sollte das machen,

55:16.540 --> 55:38.860
was da steht.

55:38.860 --> 55:40.860
Ist egal, was der Fall ist. Solange es

55:40.860 --> 55:42.860
da steht, sollte mein Code genau das machen,

55:42.860 --> 55:44.860
was da steht. In jeder normalen Programmiersprache

55:44.860 --> 55:46.860
ist das ja auch so, aber nicht in C++.

55:46.860 --> 55:53.180
Zumal

55:53.180 --> 55:55.180
die eigentliche Sache ja ist, dass

55:55.180 --> 55:57.180
die Schleife keine Abbruchbedingungen hat.

55:57.180 --> 56:02.860
Was ja wohl das Problem ist.

56:02.860 --> 56:04.860
Und dass sich das dann noch zwischen zwei Compilerversionen

56:04.860 --> 56:06.860
ändert von logisch zu unlogisch

56:06.860 --> 56:08.860
ist ja auch nochmal bescheuert.

56:08.860 --> 56:10.860
Aber wir machen jetzt weiter mit

56:10.860 --> 56:14.180
Svelte 5. Also das funktioniert

56:14.180 --> 56:16.180
schonmal. Jetzt habe ich mal

56:16.180 --> 56:18.180
eine Frage an euch Chat.

56:18.180 --> 56:20.180
Welche der beiden Sachen

56:20.180 --> 56:22.180
denkt ihr ist besser?

56:22.180 --> 56:24.180
Nehmen wir

56:24.180 --> 56:26.180
jetzt, nehmen wir mal das Beispiel

56:26.180 --> 56:28.180
hier unten. Da hat man halt die zwei Sachen drinnen.

56:28.180 --> 56:30.180
Also, das ist die Svelte 4 Variante.

56:30.180 --> 56:32.180
Das ist so quasi der Klassiker,

56:32.180 --> 56:34.180
den ganz viele mochten.

56:34.180 --> 56:36.180
Also sprich, ohne

56:36.180 --> 56:38.180
dass du explizit sagen musst,

56:38.180 --> 56:40.180
hier, tracke mir die Variable.

56:40.180 --> 56:42.180
Ohne dass du hier explizit sagen musst,

56:42.180 --> 56:44.180
sei reactive, wenn sich

56:44.180 --> 56:46.180
was ändert.

56:46.180 --> 56:48.180
Bevor ich jetzt sage, was ich denke,

56:48.180 --> 56:50.180
frage ich mal, was ihr denkt.

56:50.180 --> 56:52.180
Was findet ihr besser? Man könnte

56:52.180 --> 56:54.180
auf den ersten Blick natürlich schon sagen, ey,

56:54.180 --> 56:56.180
warum machen wir es komplizierter,

56:56.180 --> 56:58.180
Svelte 5 ist ja doppelt gemoppelt

56:58.180 --> 57:00.180
irgendwie hier mit den Dingen.

57:00.180 --> 57:02.180
Svelte 5 ist im Endeffekt nur länger.

57:02.180 --> 57:08.300
Für jemanden, der die Sprache zum ersten

57:08.300 --> 57:10.300
Mal sieht, ist das neue besser.

57:10.300 --> 57:12.300
Also viele mochten ja gerade

57:12.300 --> 57:14.300
das hier und sind deswegen bei Svelte hängen geblieben.

57:14.300 --> 57:16.300
Also unter anderem mochten sie sowas hier.

57:16.300 --> 57:18.300
Also ich muss sagen,

57:18.300 --> 57:20.300
für

57:20.300 --> 57:22.300
um Leute zu

57:22.300 --> 57:24.300
beeindrucken, um zu sagen, boah ist das

57:24.300 --> 57:26.300
eine coole Sache, ist die Svelte 4

57:26.300 --> 57:31.790
sonntags besser.

57:31.790 --> 57:33.790
Aber für

57:33.790 --> 57:35.790
Klarheit,

57:35.790 --> 57:37.790
dass das, was du siehst, auch das ist

57:37.790 --> 57:39.790
ja

57:39.790 --> 57:41.790
also das, was du erwartest,

57:41.790 --> 57:43.790
auch das ist, was passiert

57:43.790 --> 57:45.790
und dass man die

57:45.790 --> 57:47.790
dass man es auch besser erkennt,

57:47.790 --> 57:49.790
was reactive ist und was nicht.

57:49.790 --> 57:51.790
Also im Gegensatz zu

57:51.790 --> 57:53.790
und defined behavior und C++, wo eine

57:53.790 --> 57:55.790
Endlosschleife und Abbruchbedingungen

57:55.790 --> 57:57.790
Dinger macht, die es nicht machen sollte,

57:57.790 --> 58:03.860
finde ich Svelte 5 besser.

58:03.860 --> 58:05.860
Aber gibt es denn jetzt mehrzeitige

58:05.860 --> 58:07.860
Abbruchbedingungen?

58:07.860 --> 58:09.860
Oder geht es analog zu Sternchen,

58:09.860 --> 58:11.860
Doppelpunkte?

58:11.860 --> 58:13.860
Das habe ich mich auch gerade gefragt.

58:13.860 --> 58:15.860
Das habe ich mir auch gerade gefragt.

58:15.860 --> 58:21.790
Das habe ich zumindest in dem Beispiel nicht gefunden.

58:21.790 --> 58:23.790
Deswegen habe ich ja eben probiert,

58:23.790 --> 58:25.790
ob man da nicht jetzt irgendwie

58:25.790 --> 58:27.790
zum Beispiel

58:27.790 --> 58:29.790
Ich habe eine Idee.

58:29.790 --> 58:31.790
Dollar Effect, ja aber das kommt wahrscheinlich gleich noch.

58:31.790 --> 58:33.790
Weiß ich nicht, jetzt habe ich auch schon

58:33.790 --> 58:35.790
Also

58:35.790 --> 58:37.790
was man vielleicht machen kann ist

58:37.790 --> 58:39.790
...

58:39.790 --> 58:46.110
Wie sieht denn sowas hier aus?

58:48.110 --> 58:50.110
Nicht wirklich.

58:50.110 --> 58:52.110
Das wäre jetzt fast schon React.

58:52.110 --> 58:55.810
Jetzt muss ich wahrscheinlich Klammer machen.

58:55.810 --> 58:59.180
Das funzt.

58:59.180 --> 59:01.180
Das funzt.

59:01.180 --> 59:03.180
Das ist aber glaube ich nicht im Sinne des

59:03.180 --> 59:05.180
Erfinders, oder?

59:05.180 --> 59:07.180
Wenn man das so macht.

59:07.180 --> 59:09.180
Das funktioniert.

59:09.180 --> 59:13.780
Das ist aber glaube ich nicht so gedacht,

59:13.780 --> 59:15.780
ehrlich gesagt.

59:15.780 --> 59:17.780
Und das sieht auch schon ein bisschen hässlich aus.

59:17.780 --> 59:19.780
Wobei man immer noch sagen muss, man versteht,

59:19.780 --> 59:21.780
man versteht tatsächlich ganz gut,

59:21.780 --> 59:27.900
was von uns passiert.

59:27.900 --> 59:29.900
Also alles in allem,

59:29.900 --> 59:31.900
das hat ja für sehr viele Diskussionen

59:31.900 --> 59:33.900
und Kontroverse gesorgt.

59:33.900 --> 59:35.900
Am Anfang von 2005, von der Ankündigung.

59:35.900 --> 59:37.900
Ich fand es auch am Anfang doof.

59:37.900 --> 59:39.900
Aber

59:39.900 --> 59:41.900
es ist schwer zu beschreiben.

59:41.900 --> 59:43.900
Kennt ihr das? Ihr habt so einen,

59:43.900 --> 59:45.900
als Programmierer oder auch als Admin

59:45.900 --> 59:47.900
oder generell als jemand, der in IT arbeitet,

59:47.900 --> 59:49.900
hat man so einen gewissen inneren

59:49.900 --> 59:51.900
Ordnungssinn.

59:51.900 --> 59:53.900
Man hat bei Sachen, die richtig aussehen,

59:53.900 --> 59:55.900
ein gutes Gefühl. Wisst ihr, was ich meine?

59:55.900 --> 59:57.900
Und ich habe,

59:57.900 --> 59:59.900
wenn ich die Svelte 5 Sonntags sehe,

59:59.900 --> 01:00:01.900
das bessere Gefühl.

01:00:01.900 --> 01:00:03.900
Als bei der 4er.

01:00:03.900 --> 01:00:05.900
Die 4er ist so Magic

01:00:05.900 --> 01:00:07.900
und du erkennst

01:00:07.900 --> 01:00:09.900
vom angucken her,

01:00:09.900 --> 01:00:11.900
nicht genau, es sei denn du kennst Svelte gut,

01:00:11.900 --> 01:00:13.900
was es macht.

01:00:13.900 --> 01:00:15.900
Wohingegen du die Svelte 5 Sonntags

01:00:15.900 --> 01:00:17.900
anguckst und dir eigentlich sofort klar ist,

01:00:17.900 --> 01:00:19.900
okay, hier passiert irgendwas mit.

01:00:19.900 --> 01:00:21.900
Vielleicht weißt du nicht hundertprozentig genau, was es ist.

01:00:21.900 --> 01:00:23.900
Aber du siehst schon mal, okay,

01:00:23.900 --> 01:00:29.460
das ist keine normale Variable.

01:00:29.460 --> 01:00:31.460
Also ich muss sagen, ich finde das Svelte 5 besser.

01:00:31.460 --> 01:00:36.620
Findest du, dass Svelte 5

01:00:36.620 --> 01:00:38.620
weniger intuitiv aussieht?

01:00:38.620 --> 01:00:43.340
Ich finde, es ist viel eindeutiger,

01:00:43.340 --> 01:00:45.340
was es macht.

01:00:45.340 --> 01:00:52.820
Ja, nimm Svelte.

01:00:52.820 --> 01:00:56.130
Svelte ist nice.

01:00:56.130 --> 01:00:58.130
Es gibt schon ein Releasedate, irgendwann 2024.

01:00:58.130 --> 01:01:06.820
Ach ja, und

01:01:06.820 --> 01:01:08.820
ein weiterer Nachteil ist natürlich

01:01:08.820 --> 01:01:10.820
von der Svelte 4 Geschichte,

01:01:10.820 --> 01:01:12.820
dass Svelte

01:01:12.820 --> 01:01:14.820
alles, was du hinschreibst, irgendwie

01:01:14.820 --> 01:01:16.820
retten muss.

01:01:16.820 --> 01:01:18.820
Und hier nur das, was du explizit markierst,

01:01:18.820 --> 01:01:20.820
als dass es getrackt werden muss.

01:01:20.820 --> 01:01:26.430
Also ich glaube, das hat

01:01:26.430 --> 01:01:28.430
mehrere Vorteile. Über die, sagen wir so,

01:01:28.430 --> 01:01:30.430
was schöner ist, kann man sich sicherlich drüber streiten.

01:01:30.430 --> 01:01:32.430
Auch was intuitiver ist, kann man sich

01:01:32.430 --> 01:01:34.430
sicher drüber streiten, ja.

01:01:34.430 --> 01:01:36.430
Ich persönlich kann das Svelte 5 Sache

01:01:36.430 --> 01:01:38.430
tatsächlich mehr abgewinnen, jetzt nachdem ich mir das

01:01:38.430 --> 01:01:40.430
ein paar mal angeguckt habe, als das

01:01:40.430 --> 01:01:42.430
Svelte 4 Sache. Aber es wird

01:01:42.430 --> 01:01:44.430
auch handfeste Vorteile haben.

01:01:44.430 --> 01:01:46.430
Bei bisschen größeren Anwendungen.

01:01:46.430 --> 01:01:48.430
Ich glaube nicht, dass sie das einfach

01:01:48.430 --> 01:01:50.430
ganz vor Fun gemacht haben.

01:01:50.430 --> 01:01:52.430
Ich kann euch nicht sagen, was, weil ich keine größeres

01:01:52.430 --> 01:01:54.430
Weltanwendung irgendwie betreue.

01:01:54.430 --> 01:01:56.430
Aber ich gehe davon aus, dass es noch weitere Vorteile haben wird.

01:01:56.430 --> 01:01:58.430
Und nicht nur, dass es schneller ist.

01:01:58.430 --> 01:02:02.700
Wobei das bestimmt auch eines der Punkte

01:02:02.700 --> 01:02:06.660
sein wird.

01:02:06.660 --> 01:02:08.660
Die Seite zeigt ja nur an, was der Unterschied ist,

01:02:08.660 --> 01:02:10.660
und nicht, was sie sich dabei gedacht haben.

01:02:10.660 --> 01:02:12.660
Da müsste man irgendwelche Blogposts lesen.

01:02:12.660 --> 01:02:14.660
Ja, wie zum Beispiel hier, das da.

01:02:16.660 --> 01:02:18.660
Ok, gucken wir mal weiter.

01:02:18.660 --> 01:02:20.660
Also so sieht das mit Variablen und State aus.

01:02:20.660 --> 01:02:22.660
Ich bin mal gespannt,

01:02:22.660 --> 01:02:24.660
was sie bei, was sie mit

01:02:24.660 --> 01:02:26.660
mit Stores

01:02:26.660 --> 01:02:29.970
jetzt machen.

01:02:29.970 --> 01:02:31.970
Weil ich habe im Vorfeld schon gelesen, es gibt

01:02:31.970 --> 01:02:33.970
keine Svelte Stores mehr.

01:02:33.970 --> 01:02:38.820
Stores war, um es kurz zu erklären,

01:02:38.820 --> 01:02:40.820
Stores war eine Möglichkeit

01:02:40.820 --> 01:02:42.820
ins Welt, Variablen

01:02:42.820 --> 01:02:44.820
anwendungsweit zur Verfügung zu

01:02:44.820 --> 01:02:46.820
stellen. Quasi global Variablen.

01:02:46.820 --> 01:02:48.820
Also quasi sowas

01:02:48.820 --> 01:02:52.130
hier, nur global.

01:02:52.130 --> 01:02:55.570
Was durchaus sinnvoll ist,

01:02:55.570 --> 01:02:57.570
zum Beispiel, stellt euch vor,

01:02:57.570 --> 01:02:59.570
euer User lockt sich ein,

01:02:59.570 --> 01:03:01.570
und ihr braucht den Username

01:03:01.570 --> 01:03:03.570
auf mehreren Unterseiten,

01:03:03.570 --> 01:03:05.570
in mehreren Unterkomponenten.

01:03:05.570 --> 01:03:07.570
Wie wollt ihr das

01:03:07.570 --> 01:03:09.570
sharen?

01:03:09.570 --> 01:03:11.570
Und da hast du dann

01:03:11.570 --> 01:03:13.570
beispielsweise einen Svelte Store gemacht,

01:03:13.570 --> 01:03:15.570
der war dann anwendungsweit verfügbar,

01:03:15.570 --> 01:03:17.570
und du konntest das in jeder Komponente importieren,

01:03:17.570 --> 01:03:19.570
und dann konntest du auf den Username zugreifen.

01:03:19.570 --> 01:03:21.570
Das gibt's jetzt nicht mehr,

01:03:21.570 --> 01:03:23.570
habe ich gelesen. Moin, Sarix.

01:03:23.570 --> 01:03:25.570
Also, weiter geht's. Update State,

01:03:25.570 --> 01:03:27.570
Computed State, haben wir uns jetzt auch schon

01:03:27.570 --> 01:03:29.570
angeguckt. So,

01:03:29.570 --> 01:03:31.570
Templating.

01:03:31.570 --> 01:03:33.570
Geht's jetzt weiter.

01:03:33.570 --> 01:03:35.570
Minimal Template.

01:03:35.570 --> 01:03:40.740
Da ist

01:03:40.740 --> 01:03:42.740
legit kein Unterschied.

01:03:42.740 --> 01:03:47.580
Styling. Da ist

01:03:47.580 --> 01:03:49.580
auch kein Unterschied,

01:03:49.580 --> 01:03:51.580
oder?

01:03:51.580 --> 01:04:01.040
Seht ihr da einen Unterschied?

01:04:01.040 --> 01:04:03.040
Ne, ich seh keinen Unterschied.

01:04:03.040 --> 01:04:12.270
Loop.

01:04:12.270 --> 01:04:14.270
Seh ich auch keinen Unterschied.

01:04:14.270 --> 01:04:16.270
Ach ja, und übrigens, eines der coolen Sachen

01:04:16.270 --> 01:04:18.270
ist, ich hab's am Anfang ja schon gesagt,

01:04:18.270 --> 01:04:20.270
weil jemand gefragt hat, man kann

01:04:20.270 --> 01:04:22.270
Svelte 4 Syntax auch in Svelte 5

01:04:22.270 --> 01:04:24.270
benutzen. Man kann bloß nicht

01:04:24.270 --> 01:04:28.670
alles mixen und matchen, wie man will.

01:04:28.670 --> 01:04:30.670
Loop ist das gleiche.

01:04:30.670 --> 01:04:39.650
Event-Click.

01:04:39.650 --> 01:04:41.650
Ah, das ist

01:04:41.650 --> 01:04:43.650
nicht das gleiche. Also, einmal hier

01:04:43.650 --> 01:04:45.650
die State-Geschichte, aber auch

01:04:45.650 --> 01:04:47.650
OnClick.

01:04:47.650 --> 01:04:49.650
Jetzt bin

01:04:49.650 --> 01:04:54.110
ich irritiert.

01:04:54.110 --> 01:04:56.110
Ist das nicht hier der normale Vanilla

01:04:56.110 --> 01:04:58.110
Plain JavaScript

01:04:58.110 --> 01:05:00.110
OnClick-Händler von einem Button?

01:05:00.110 --> 01:05:04.320
Also, wenn ich Button

01:05:04.320 --> 01:05:06.320
Klick schreibe in Plain JavaScript,

01:05:06.320 --> 01:05:08.320
dann sieht das genauso aus.

01:05:08.320 --> 01:05:10.320
Anscheinend haben die ihre eigene

01:05:10.320 --> 01:05:12.320
Event-Syntax

01:05:12.320 --> 01:05:20.180
in die Tonne gekloppt jetzt.

01:05:20.180 --> 01:05:22.180
Das ist in der Tat recht interessant.

01:05:24.180 --> 01:05:27.740
Also, das müssen wir mal ausprobieren.

01:05:27.740 --> 01:05:29.740
Also sprich, das sollte jetzt funktionieren.

01:05:29.740 --> 01:05:31.740
Ah, es

01:05:31.740 --> 01:05:33.740
funktioniert beides noch, okay.

01:05:33.740 --> 01:05:35.740
Hätte das denn auch funktioniert

01:05:35.740 --> 01:05:39.440
in der alten

01:05:39.440 --> 01:05:46.460
in der alten Schreibweise?

01:05:46.460 --> 01:05:50.930
Okay, genau so. Ja, das

01:05:50.930 --> 01:05:52.930
ist anscheinend das eine nicht vom anderen abhängig.

01:05:52.930 --> 01:05:54.930
Okay, es geht jetzt

01:05:54.930 --> 01:05:56.930
beides. Man

01:05:56.930 --> 01:05:58.930
kann jetzt, also wahrscheinlich sollte

01:05:58.930 --> 01:06:00.930
man, sollte man jetzt das neue verwenden.

01:06:00.930 --> 01:06:02.930
Man braucht keine spezielle Event-Syntax

01:06:02.930 --> 01:06:04.930
mehr ins Welt, sondern

01:06:04.930 --> 01:06:06.930
kann einfach die Build-In

01:06:06.930 --> 01:06:08.930
Das ist, gut, ganz ehrlich,

01:06:08.930 --> 01:06:10.930
da würde ich einfach sagen, das ist grundlegend einfach

01:06:10.930 --> 01:06:12.930
mal besser. Warum eine extra Spezial-

01:06:12.930 --> 01:06:14.930
Syntax, wenn man auch, weil man auch die

01:06:14.930 --> 01:06:16.930
Build-In-Syntax benutzen kann. Die Frage ist

01:06:16.930 --> 01:06:18.930
jetzt viel eher, gehen damit auch solche

01:06:18.930 --> 01:06:20.930
Sachen wie, oh, was war das? Prevent?

01:06:20.930 --> 01:06:22.930
Oder, oh, fuck, das weiß ich nicht mehr.

01:06:22.930 --> 01:06:24.930
Svelte, Prevent, Default,

01:06:24.930 --> 01:06:30.420
gab's doch irgendwie so ein On-Click.

01:06:30.420 --> 01:06:32.420
Ja, Prevent,

01:06:32.420 --> 01:06:34.420
Default konnte man in Svelte machen.

01:06:34.420 --> 01:06:36.420
Geht das jetzt hier auch?

01:06:36.420 --> 01:06:38.420
Ah, das geht nicht. Und das geht nur noch so?

01:06:38.420 --> 01:06:44.740
Jetzt bin ich

01:06:44.740 --> 01:06:46.740
unschlüssig,

01:06:46.740 --> 01:06:48.740
ob das neue jetzt so viel geiler

01:06:48.740 --> 01:06:50.740
ist, weil man die Modifier nicht mal verwenden

01:06:50.740 --> 01:06:52.740
kann. Aber habe ich

01:06:52.740 --> 01:06:54.740
zu wenig Beispiel von gesehen jetzt.

01:06:54.740 --> 01:06:56.740
Keine Ahnung.

01:06:56.740 --> 01:06:58.740
Aber die braucht man auch relativ selten. Braucht man eigentlich hauptsächlich

01:06:58.740 --> 01:07:02.110
Performance und solche Sachen.

01:07:02.110 --> 01:07:04.110
Finde ich aber gut, dass man jetzt normale

01:07:04.110 --> 01:07:06.110
Event-Händler-Syntax

01:07:06.110 --> 01:07:08.110
verwenden kann.

01:07:08.110 --> 01:07:10.110
Anstatt, dass man Doppelpunkt braucht.

01:07:10.110 --> 01:07:12.110
Was macht Prevent-Default?

01:07:12.110 --> 01:07:17.020
Wenn ich dir sage,

01:07:17.020 --> 01:07:19.020
dass Prevented das Default-Verhalten

01:07:19.020 --> 01:07:21.020
sagt dir das wahrscheinlich nichts.

01:07:21.020 --> 01:07:23.020
Stell dir mal vor, du hast eine Form mit einem Submit-Button.

01:07:23.020 --> 01:07:25.020
Der Submit-Button macht

01:07:25.020 --> 01:07:27.020
standardmäßig ein Post-Request gegen

01:07:27.020 --> 01:07:29.020
den Server. Wenn du das nicht willst, brauchst

01:07:29.020 --> 01:07:33.040
du Prevent-Default.

01:07:33.040 --> 01:07:35.040
Wenn du sagst, type

01:07:35.040 --> 01:07:37.040
submit und du

01:07:37.040 --> 01:07:39.040
klickst hier drauf. Achso, Moment, das ist ja nicht

01:07:39.040 --> 01:07:41.040
innerhalb von einer Form.

01:07:43.040 --> 01:07:45.040
Wie geht das?

01:07:45.040 --> 01:07:48.480
Form?

01:07:48.480 --> 01:07:50.480
Ich bin kein JavaScript-Hacker, man.

01:07:50.480 --> 01:07:52.480
Also, er macht jetzt

01:07:52.480 --> 01:07:54.480
Server-Requests, wenn du das hier ...

01:07:54.480 --> 01:07:56.480
Ich weiß gar nicht,

01:07:56.480 --> 01:07:58.480
wie das funktioniert.

01:07:58.480 --> 01:08:00.480
Ja, guck. Genau.

01:08:00.480 --> 01:08:02.480
So.

01:08:02.480 --> 01:08:04.480
Der Default-Verhalten von so einem Button

01:08:04.480 --> 01:08:06.480
ist, dass er einen Post macht

01:08:06.480 --> 01:08:08.480
auf den Form-Endpunkt.

01:08:08.480 --> 01:08:10.480
So, und wenn du jetzt sagst hier

01:08:10.480 --> 01:08:12.480
onClick

01:08:12.480 --> 01:08:14.480
Prevent-Default

01:08:17.860 --> 01:08:19.860
Achso, ich brauch einen Händler, ja.

01:08:19.860 --> 01:08:27.900
Dann macht er nix mehr.

01:08:27.900 --> 01:08:32.940
Dann führt er nur noch mein Event aus

01:08:32.940 --> 01:08:34.940
und macht kein Post-Request mehr.

01:08:34.940 --> 01:08:36.940
Wenn ich Prevent-Default weg mache,

01:08:36.940 --> 01:08:38.940
dann schickt er das.

01:08:38.940 --> 01:08:40.940
Dann schickt er wieder ein Post-Request.

01:08:40.940 --> 01:08:42.940
Also, das braucht man bei so Sachen wie beispielsweise

01:08:42.940 --> 01:08:44.940
Submit-Buttons in der Form und sowas.

01:08:44.940 --> 01:08:46.940
Kommt nicht oft vor, dass man's braucht.

01:08:46.940 --> 01:08:51.090
Aber wenn man's braucht,

01:08:51.090 --> 01:08:53.090
ist man froh, dass es da ist.

01:08:53.090 --> 01:08:55.090
Gut, anscheinend kann man in Svelte 5

01:08:55.090 --> 01:08:57.090
jetzt die normale Event-Syntax verwenden

01:08:57.090 --> 01:08:59.090
von Buttons. Okay, das ist doch schon mal

01:08:59.090 --> 01:09:04.830
auch nicht verkehrt.

01:09:04.830 --> 01:09:06.830
Das heißt, wenn man onClick definiert, wird das Default-File

01:09:06.830 --> 01:09:08.830
immer nicht überschritten. Ne.

01:09:08.830 --> 01:09:10.830
Tatsächlich. Ja.

01:09:10.830 --> 01:09:12.830
Ja, so ist es.

01:09:12.830 --> 01:09:14.830
Nur wenn du onClick

01:09:14.830 --> 01:09:16.830
definierst, heißt das nicht, dass er das nicht

01:09:16.830 --> 01:09:18.830
Default macht.

01:09:18.830 --> 01:09:20.830
Du könntest in der Funktion selber,

01:09:20.830 --> 01:09:22.830
du kannst ja auch noch sagen, Event

01:09:22.830 --> 01:09:24.830
Event

01:09:24.830 --> 01:09:26.830
Prevent-Default.

01:09:26.830 --> 01:09:28.830
Das würde auch funktionieren.

01:09:28.830 --> 01:09:30.830
Guck, jetzt macht er's auch nicht.

01:09:30.830 --> 01:09:32.830
Das ist quasi ein Short, Shortcut

01:09:32.830 --> 01:09:34.830
dafür, dass du's

01:09:34.830 --> 01:09:36.830
selbst im onClick überschreiben musst.

01:09:36.830 --> 01:09:38.830
Find ich eigentlich ganz nice, dass das

01:09:38.830 --> 01:09:40.830
gibt. Gibt's übrigens in Vue auch.

01:09:40.830 --> 01:09:42.830
Ich geh mal davon aus, in vielen anderen Frontend-Frameworks

01:09:42.830 --> 01:09:44.830
tut das, wird das auch so funktionieren.

01:09:44.830 --> 01:09:46.830
Okay, also, jo.

01:09:46.830 --> 01:09:48.830
Kann man jetzt, kann man jetzt verwenden.

01:09:48.830 --> 01:09:50.830
Alles gut. Nice.

01:09:50.830 --> 01:09:52.830
DOMREF. Oh, das ist eine ganze

01:09:52.830 --> 01:09:58.130
Ecke kürzer geworden.

01:09:58.130 --> 01:10:00.130
OnMount.

01:10:00.130 --> 01:10:04.340
Ah.

01:10:04.340 --> 01:10:07.650
Guck mal, es gibt keine

01:10:07.650 --> 01:10:09.650
Lifecycle-Events mehr. Kann das sein?

01:10:09.650 --> 01:10:14.880
Also, bisher hat man

01:10:14.880 --> 01:10:16.880
ins Welt, beispielsweise, wenn man, wenn

01:10:16.880 --> 01:10:18.880
die Komponente

01:10:18.880 --> 01:10:20.880
eingehängt wird in dein HTML

01:10:20.880 --> 01:10:22.880
Element, äh, in dein, in dein

01:10:22.880 --> 01:10:24.880
HTML-Baum, konnte man

01:10:24.880 --> 01:10:26.880
beispielsweise bei OnMount

01:10:26.880 --> 01:10:28.880
einmalig was ausführen lassen. Also,

01:10:28.880 --> 01:10:30.880
stellt euch jetzt mal vor, ihr habt

01:10:30.880 --> 01:10:35.920
ein Formular

01:10:35.920 --> 01:10:37.920
und ihr wollt, dass dort

01:10:37.920 --> 01:10:39.920
sobald das eingefügt wird

01:10:39.920 --> 01:10:41.920
in die Webseite

01:10:41.920 --> 01:10:43.920
die erste, die erste Zeile

01:10:43.920 --> 01:10:45.920
Input

01:10:45.920 --> 01:10:47.920
fokussiert wird.

01:10:47.920 --> 01:10:49.920
Dann hättet ihr das früher so machen

01:10:49.920 --> 01:10:51.920
müssen. OnMount und dann

01:10:51.920 --> 01:10:53.920
InputElementFocus.

01:10:53.920 --> 01:10:55.920
Und damit man auf das InputElement

01:10:55.920 --> 01:10:57.920
referenzieren kann, musste man das

01:10:57.920 --> 01:10:59.920
quasi hier so binden dran. Das, das

01:10:59.920 --> 01:11:01.920
ist übrigens, das, das fand ich damals

01:11:01.920 --> 01:11:03.920
schon übelst umständig. Anscheinend

01:11:03.920 --> 01:11:05.920
immer noch das gleiche. Und jetzt gibt

01:11:05.920 --> 01:11:07.920
es wohl Effect oder DollarEffect, was

01:11:07.920 --> 01:11:13.730
mich ein bisschen an React erinnert, ja.

01:11:13.730 --> 01:11:15.730
Dollar, ach, ist DollarEffect

01:11:15.730 --> 01:11:17.730
sowas wie, wie früher

01:11:17.730 --> 01:11:19.730
Doppelpunkt?

01:11:19.730 --> 01:11:21.730
DollarDoppelpunkt? Also,

01:11:21.730 --> 01:11:25.040
machen wir hier DollarEffect.

01:11:25.040 --> 01:11:32.130
Dann kann man da einfach,

01:11:32.130 --> 01:11:34.130
probieren wir mal, lock.

01:11:34.130 --> 01:11:36.130
Und jetzt immer, wenn sich

01:11:36.130 --> 01:11:38.130
Count ändert, wird das gelockt.

01:11:38.130 --> 01:11:40.130
Ah, ja. Okay.

01:11:40.130 --> 01:11:42.130
Also DollarEffect.

01:11:42.130 --> 01:11:46.530
Das heißt, im Endeffekt

01:11:46.530 --> 01:11:48.530
Doppelpunkt, also

01:11:48.530 --> 01:11:50.530
DollarDoppelpunkt

01:11:50.530 --> 01:11:53.840
ist das alte

01:11:53.840 --> 01:11:55.840
Effect, beziehungsweise Effect ist das neue

01:11:55.840 --> 01:11:57.840
Doppelpunkt, äh

01:11:57.840 --> 01:12:02.820
DollarDoppelpunkt.

01:12:02.820 --> 01:12:04.820
Ja, da kann man sich jetzt drüber streiten,

01:12:04.820 --> 01:12:08.960
was da geiler ist.

01:12:08.960 --> 01:12:10.960
Ich denke mal, im Endeffekt ist Effect

01:12:10.960 --> 01:12:12.960
wahrscheinlich

01:12:12.960 --> 01:12:14.960
weniger Magic.

01:12:14.960 --> 01:12:16.960
Weil,

01:12:16.960 --> 01:12:18.960
wenn du's Welt nicht kennst, hast du keine Ahnung, was DollarEffect ist.

01:12:18.960 --> 01:12:20.960
DollarDoppelpunkt ist.

01:12:20.960 --> 01:12:22.960
Auf der anderen Seite, jeder, der sich fünf Minuten mit's Welt beschäftigt hat,

01:12:22.960 --> 01:12:24.960
wird DollarDoppelpunkt

01:12:24.960 --> 01:12:26.960
kennen.

01:12:26.960 --> 01:12:28.960
Ansonsten ist es einfach nur ein bisschen mehr.

01:12:28.960 --> 01:12:30.960
Aber ich bin da auch nicht

01:12:30.960 --> 01:12:32.960
tief genug drin, um die Unterschiede jetzt

01:12:32.960 --> 01:12:34.960
so direkt rauslesen zu können.

01:12:34.960 --> 01:12:36.960
Zumindest ist DollarEffect

01:12:36.960 --> 01:12:38.960
anscheinend jetzt das gleiche, wie

01:12:38.960 --> 01:12:44.060
DollarDoppelpunkt.

01:12:44.060 --> 01:12:46.060
Okay, warum nicht?

01:12:46.060 --> 01:12:48.060
Gewöhnt man sich auch dran.

01:12:48.060 --> 01:12:50.060
Ich persönlich find's gut.

01:12:50.060 --> 01:12:52.060
Ich finde, es ist weniger Magic.

01:12:52.060 --> 01:12:54.060
Und ich gehe ganz stark

01:12:54.060 --> 01:12:56.060
davon aus,

01:12:56.060 --> 01:12:58.060
dass das

01:12:58.060 --> 01:13:00.060
absichtlich gemacht wurde, weil's auch nicht

01:13:00.060 --> 01:13:02.060
nur die, wie soll man sagen,

01:13:02.060 --> 01:13:04.060
die Optik hier im Sourcecode

01:13:04.060 --> 01:13:07.820
verbessert, sondern

01:13:07.820 --> 01:13:09.820
auch anderweitig Vorteile hat.

01:13:09.820 --> 01:13:11.820
Sei es nur Performance.

01:13:11.820 --> 01:13:13.820
Gut, DOM-Referenz vom Element müssen wir uns nicht angucken.

01:13:13.820 --> 01:13:15.820
Das funktioniert noch genauso wie

01:13:15.820 --> 01:13:17.820
in der alten Svelte-Version.

01:13:17.820 --> 01:13:19.820
Du definierst ne Variable.

01:13:19.820 --> 01:13:21.820
Die machst du jetzt witzigerweise mit let

01:13:21.820 --> 01:13:25.710
und nicht mit state.

01:13:25.710 --> 01:13:27.710
Weil's kein state ist.

01:13:27.710 --> 01:13:29.710
Weil's einmalig

01:13:29.710 --> 01:13:31.710
reingeschrieben wird und dann war's das.

01:13:31.710 --> 01:13:37.840
Aber dass es OnMount nicht

01:13:37.840 --> 01:13:39.840
mehr gibt, find ich schade. Wobei ist die Frage,

01:13:39.840 --> 01:13:41.840
gibt es denn OnMount auch gar nicht mehr?

01:13:41.840 --> 01:13:43.840
OnMount? Doch, gibt es immer noch.

01:13:43.840 --> 01:13:45.840
Also kann man

01:13:45.840 --> 01:13:47.840
immer noch verwenden, wenn man will.

01:13:47.840 --> 01:13:52.940
Der Unterschied ist jetzt halt hier,

01:13:52.940 --> 01:13:56.320
dass

01:13:56.320 --> 01:14:00.980
guck, der Unterschied ist halt hier,

01:14:00.980 --> 01:14:02.980
dass DollarEffect

01:14:02.980 --> 01:14:04.980
jedes Mal

01:14:04.980 --> 01:14:06.980
ausgeführt wird.

01:14:06.980 --> 01:14:08.980
Und DollarMount wird nur einmalig

01:14:08.980 --> 01:14:10.980
ausgeführt,

01:14:10.980 --> 01:14:12.980
beim Einhängen der

01:14:12.980 --> 01:14:14.980
Komponente.

01:14:14.980 --> 01:14:18.800
Ja, das ist aber dann

01:14:18.800 --> 01:14:20.800
ein doofes Beispiel.

01:14:20.800 --> 01:14:22.800
Es gibt ja durchaus Sachen, die man einmalig

01:14:22.800 --> 01:14:24.800
nur machen möchte und nicht bei jedem Mal ändern

01:14:24.800 --> 01:14:26.800
von der Variable.

01:14:26.800 --> 01:14:28.800
Zum Beispiel initial irgendwie was runterladen

01:14:28.800 --> 01:14:30.800
von irgendeiner API oder so.

01:14:30.800 --> 01:14:34.110
Aber wisst ihr, ich glaube

01:14:34.110 --> 01:14:36.110
auch eines der Änderungs-

01:14:36.110 --> 01:14:38.110
Gründe, warum die so viel geändert

01:14:38.110 --> 01:14:40.110
haben ist, dass Server-Site-Rendering

01:14:40.110 --> 01:14:42.110
besser funktioniert.

01:14:42.110 --> 01:14:44.110
Was ich ja bei SvelteKit sehr, sehr selten benutze.

01:14:44.110 --> 01:14:48.380
Ich glaube, das liegt auch

01:14:48.380 --> 01:14:50.380
mit daran.

01:14:50.380 --> 01:14:52.380
Weil das waren hier so Dinger, die sind nur im Browser

01:14:52.380 --> 01:14:54.380
gelaufen.

01:14:54.380 --> 01:14:56.380
Und da weiß ich nicht, wie es hier ist. Ob das

01:14:56.380 --> 01:14:58.380
dazu beiträgt, dass du die Seiten schon besser

01:14:58.380 --> 01:15:00.380
vorrendern kannst, bevor du sie initial

01:15:00.380 --> 01:15:02.380
auslieferst.

01:15:02.380 --> 01:15:04.380
Kein Schimmer.

01:15:04.380 --> 01:15:06.380
Aber zumindest muss man doch mit Effect auch irgendwas,

01:15:06.380 --> 01:15:10.980
dass es nur einmalig

01:15:10.980 --> 01:15:12.980
ausgeführt wird. Es wäre doch blöd, wenn das

01:15:12.980 --> 01:15:26.980
nicht funktioniert.

01:15:26.980 --> 01:15:28.980
DollarState, ja das haben wir gerade schon ausprobiert.

01:15:28.980 --> 01:15:30.980
Ja, Effect.

01:15:30.980 --> 01:15:34.740
ToRunSideEffects.

01:15:34.740 --> 01:15:36.740
Ja, das haben wir auch

01:15:36.740 --> 01:15:38.740
schon gecheckt. Wow!

01:15:38.740 --> 01:15:44.480
Jetzt wird es aber advanced hier.

01:15:56.560 --> 01:15:58.560
Aha!

01:15:58.560 --> 01:16:00.560
So macht man jetzt OnMount.

01:16:00.560 --> 01:16:02.560
Okay, das ist komplizierter als früher.

01:16:02.560 --> 01:16:04.560
So, also entweder

01:16:04.560 --> 01:16:06.560
kann man Effect benutzen, so als

01:16:06.560 --> 01:16:08.560
jedes Mal ausführen.

01:16:08.560 --> 01:16:10.560
Wenn sich der Value ändert.

01:16:10.560 --> 01:16:12.560
Oder man kann einen Callback

01:16:12.560 --> 01:16:15.940
zurückliefern.

01:16:15.940 --> 01:16:17.940
Ne.

01:16:17.940 --> 01:16:19.940
If a Callback is provided, it will run.

01:16:19.940 --> 01:16:21.940
Immediately before the Effect reruns,

01:16:21.940 --> 01:16:23.940
be when the Component is

01:16:23.940 --> 01:16:25.940
destroyed.

01:16:25.940 --> 01:16:30.140
Hä?

01:16:30.140 --> 01:16:32.140
Da kann man irgendwie...

01:16:32.140 --> 01:16:34.140
Hä?

01:16:34.140 --> 01:16:36.140
Da kann man doch irgendwie aufräumen lassen

01:16:36.140 --> 01:16:38.140
oder so danach.

01:16:38.140 --> 01:16:40.140
Okay, das wird man...

01:16:40.140 --> 01:16:42.140
Okay, guck, das ist das, was ich schon

01:16:42.140 --> 01:16:44.140
vermutet habe. Das replaced

01:16:44.140 --> 01:16:48.990
Dollar-Doppelpunkt.

01:16:48.990 --> 01:16:50.990
Effect only run in browser, not

01:16:50.990 --> 01:16:52.990
during server-side rendering.

01:16:52.990 --> 01:17:17.680
Aha.

01:17:17.680 --> 01:17:26.240
Untrack. What?

01:17:26.240 --> 01:17:29.620
Effect pre?

01:17:29.620 --> 01:17:36.380
Das wollen sie es aber wissen, ja.

01:17:36.380 --> 01:17:38.380
Okay, da muss man im Ursprungs

01:17:38.380 --> 01:17:40.380
nochmal wissen. Aber ich sehe jetzt noch nicht,

01:17:40.380 --> 01:17:42.380
wie sich Effect... Die schreiben mir was von

01:17:42.380 --> 01:17:44.380
OnMount, aber ich sehe jetzt nicht, wie sich

01:17:44.380 --> 01:17:46.380
damit OnMount ersetzen kann.

01:17:46.380 --> 01:17:52.700
Gibt es hier vielleicht

01:17:52.700 --> 01:18:00.240
irgendwelche...

01:18:00.240 --> 01:18:02.240
Ne. Ja, keine Ahnung.

01:18:02.240 --> 01:18:07.600
Ich dachte, vielleicht gibt es

01:18:07.600 --> 01:18:09.600
irgendwelche Effect-Arcs

01:18:09.600 --> 01:18:11.600
oder so, aber das ist undefined.

01:18:11.600 --> 01:18:13.600
Ja, keine Ahnung. Weiß ich nicht.

01:18:13.600 --> 01:18:15.600
Also...

01:18:15.600 --> 01:18:17.600
Ich wüsste jetzt nicht, wie ich damit

01:18:17.600 --> 01:18:19.600
OnMount ersetzen soll.

01:18:19.600 --> 01:18:25.470
Wenn die Variable

01:18:25.470 --> 01:18:30.380
untrack ist...

01:18:30.380 --> 01:18:32.380
Ja.

01:18:32.380 --> 01:18:34.380
Aber was soll untrack?

01:18:34.380 --> 01:18:40.130
Aha!

01:18:40.130 --> 01:18:42.130
Oh, das ist aber schon ziemlich magic,

01:18:42.130 --> 01:18:44.130
oder? Also würde ich jetzt sagen

01:18:44.130 --> 01:18:47.700
untrack count?

01:18:47.700 --> 01:18:58.780
Ne. Hä?

01:18:58.780 --> 01:19:00.780
Das macht es schon ein bisschen komplizierter.

01:19:00.780 --> 01:19:07.170
Ach so, da muss der Callback

01:19:07.170 --> 01:19:09.170
dann rein. Also im

01:19:09.170 --> 01:19:11.170
Endeffekt...

01:19:11.170 --> 01:19:13.170
Oh, das ist ja...

01:19:13.170 --> 01:19:15.170
Hä? Was ist denn das, Mann?

01:19:15.170 --> 01:19:17.170
Und jetzt kann ich

01:19:17.170 --> 01:19:19.170
sagen, lock count...

01:19:19.170 --> 01:19:21.170
Und das ist jetzt quasi der Ersatz für OnMount.

01:19:21.170 --> 01:19:23.170
Guck, jetzt wird es nämlich auch

01:19:23.170 --> 01:19:25.170
nicht ausgeführt.

01:19:25.170 --> 01:19:27.170
Jetzt wird es auch nur einmalig.

01:19:27.170 --> 01:19:29.170
Ich weiß

01:19:29.170 --> 01:19:31.170
ja nicht.

01:19:31.170 --> 01:19:33.170
Ich weiß ja nicht. Ganz

01:19:33.170 --> 01:19:35.170
ehrlich, da ist

01:19:35.170 --> 01:19:37.170
OnMount doch schon irgendwie

01:19:37.170 --> 01:19:39.170
die schönere Variante, oder? Was denkt ihr?

01:19:39.170 --> 01:19:41.170
Ich meine, OnMount ist vollkommen

01:19:41.170 --> 01:19:43.170
klar, was passiert. Wird einmal beim

01:19:43.170 --> 01:19:45.170
Einhängen der Komponente ausgeführt und

01:19:45.170 --> 01:19:47.170
ja, zum Glück gibt es OnMount noch. Aber

01:19:47.170 --> 01:19:49.170
das ist doch echt ein bisschen durch die Brust

01:19:49.170 --> 01:19:51.170
ins Auge.

01:19:51.170 --> 01:19:53.170
Aber es hat auch

01:19:53.170 --> 01:19:55.170
seinen Vorteil,

01:19:55.170 --> 01:19:57.170
wenn ich irgendwo mal auf

01:19:57.170 --> 01:19:59.170
einen State zugreifen

01:19:59.170 --> 01:20:01.170
möchte, innerhalb von

01:20:01.170 --> 01:20:03.170
Effekt, will aber nicht,

01:20:03.170 --> 01:20:05.170
dass durch diesen State

01:20:05.170 --> 01:20:07.170
getriggert

01:20:07.170 --> 01:20:09.170
jedes Mal die ganze Funktion

01:20:09.170 --> 01:20:11.170
läuft, dann ist untrack

01:20:11.170 --> 01:20:13.170
sinnvoll.

01:20:13.170 --> 01:20:15.170
Weil das war tatsächlich

01:20:15.170 --> 01:20:17.170
ein Problem, wenn man die alte

01:20:17.170 --> 01:20:19.170
syntax verwendet hat. Also

01:20:19.170 --> 01:20:21.170
mal angenommen,

01:20:21.170 --> 01:20:23.170
wir machen jetzt mal ein sinnloses

01:20:23.170 --> 01:20:25.170
Beispiel, mal angenommen, ich wollte

01:20:25.170 --> 01:20:27.170
jedes Mal, wenn sich count ändert, count

01:20:27.170 --> 01:20:29.170
ausgeben, aber zusätzlich

01:20:29.170 --> 01:20:31.170
wollte ich auch noch name ausgeben,

01:20:31.170 --> 01:20:33.170
dann wurde jetzt bei jeder

01:20:33.170 --> 01:20:35.170
Änderung von name und bei jeder

01:20:35.170 --> 01:20:37.170
Änderung von count das ganze getriggert.

01:20:37.170 --> 01:20:39.170
Und jetzt würde ich dann quasi sagen

01:20:39.170 --> 01:20:41.170
untrack an der Stelle,

01:20:41.170 --> 01:20:43.170
ja gut, so an der Stelle,

01:20:43.170 --> 01:20:45.170
und jetzt wird das nicht

01:20:45.170 --> 01:20:47.170
jedes Mal ausgeführt, wenn sich count

01:20:47.170 --> 01:20:50.800
ändert. Das macht durchaus

01:20:50.800 --> 01:20:54.240
Sinn, dass es das gibt.

01:20:54.240 --> 01:20:56.240
Okay, ja, okay, leuchtet

01:20:56.240 --> 01:21:04.350
ein. Also es gibt keinen direkt

01:21:04.350 --> 01:21:06.350
Ersatz für Dollar-Doppelpunkt.

01:21:06.350 --> 01:21:08.350
Weiß ich noch nicht.

01:21:08.350 --> 01:21:10.350
Sie haben auch viele Verbesserungen

01:21:10.350 --> 01:21:12.350
für Server-Site-Rendering drinne. Ich gehe

01:21:12.350 --> 01:21:14.350
davon aus, dass es da schon einen Ersatz für gibt.

01:21:14.350 --> 01:21:22.590
Hallo Max, bist du am merken? Ja,

01:21:22.590 --> 01:21:26.420
ich bin gerade in deinem Twitch-Account drinne.

01:21:26.420 --> 01:21:28.420
She baited. Eigentlich habe ich die Chat-Nachricht selbst

01:21:28.420 --> 01:21:41.520
geschrieben. Oh man, wir brauchen

01:21:41.520 --> 01:21:45.860
die richtige. Jetzt.

01:21:45.860 --> 01:21:50.320
Okay. Wobei ich ja mittlerweile

01:21:50.320 --> 01:21:52.320
die Variante bevorzuge.

01:21:52.320 --> 01:22:06.450
Alter, ich bin müde, warum?

01:22:06.450 --> 01:22:08.450
Weil es ist 17.33 Uhr,

01:22:08.450 --> 01:22:10.450
kekwait. Okay, also

01:22:10.450 --> 01:22:12.450
lasst uns mal weiter gucken. Event-Click.

01:22:12.450 --> 01:22:14.450
Das hatten

01:22:14.450 --> 01:22:16.450
wir schon. DOM-REF hatten wir auch schon.

01:22:16.450 --> 01:22:18.450
Conditional. Okay,

01:22:18.450 --> 01:22:20.450
was ist der Unterschied?

01:22:20.450 --> 01:22:24.720
Const-Traffic-Lights.

01:22:24.720 --> 01:22:26.720
Okay,

01:22:26.720 --> 01:22:28.720
das ist State, das hatten wir schon.

01:22:28.720 --> 01:22:30.720
Es ist nicht mehr

01:22:30.720 --> 01:22:32.720
Dollar-Doppelpunkt, sondern es ist

01:22:32.720 --> 01:22:34.720
Derived.

01:22:34.720 --> 01:22:39.500
Und Click ist

01:22:39.500 --> 01:22:45.820
anders. Und der Rest ist gleich.

01:22:45.820 --> 01:22:47.820
Ja, das Beispiel, keine Ahnung.

01:22:47.820 --> 01:22:49.820
Lifecycle.

01:22:49.820 --> 01:23:00.690
Ah, ja.

01:23:00.690 --> 01:23:02.690
Aber das Beispiel ist doof.

01:23:02.690 --> 01:23:04.690
Weil, wie wir jetzt gerade schon gelernt haben,

01:23:06.690 --> 01:23:08.690
ist OnMount nicht exakt

01:23:08.690 --> 01:23:10.690
äquivalent zu Dollar-Effekt.

01:23:10.690 --> 01:23:19.630
Sollte sich

01:23:19.630 --> 01:23:21.630
nämlich

01:23:21.630 --> 01:23:26.030
Page-Titel ändern,

01:23:26.030 --> 01:23:28.030
dann wird das hier neu

01:23:28.030 --> 01:23:30.030
ausgeführt.

01:23:30.030 --> 01:23:32.030
Und hier nur einmalig beim Seite laden.

01:23:32.030 --> 01:23:34.030
Beziehungsweise beim

01:23:34.030 --> 01:23:36.030
Komponente einfügen.

01:23:36.030 --> 01:23:38.030
Also das Beispiel ist

01:23:38.030 --> 01:23:41.730
nicht richtig, was hier steht.

01:23:41.730 --> 01:23:43.730
OnUnmount.

01:23:43.730 --> 01:23:45.730
Ah, ja, gut. Guck, hier sieht

01:23:45.730 --> 01:23:47.730
man das, was wir eben gelesen haben in der Hilfeseite

01:23:47.730 --> 01:23:49.730
von Effekt.

01:23:49.730 --> 01:23:51.730
Wenn auch super umständliches Beispiel.

01:23:51.730 --> 01:23:53.730
Aber okay, man kann

01:23:53.730 --> 01:23:55.730
eine Funktion zurückliefern und die wird dann quasi

01:23:55.730 --> 01:23:57.730
so als Cleanup ausgeführt.

01:23:57.730 --> 01:23:59.730
Das finde ich gar nicht schlecht.

01:23:59.730 --> 01:24:01.730
Aber ich meine, seriously,

01:24:01.730 --> 01:24:03.730
warum nicht einfach OnDestroy verwenden?

01:24:03.730 --> 01:24:05.730
Ich finde das deutlich

01:24:05.730 --> 01:24:07.730
wahrer als Effekt

01:24:07.730 --> 01:24:09.730
für OnMount und

01:24:09.730 --> 01:24:18.860
OnDestroy. Aber es bleibt

01:24:18.860 --> 01:24:20.860
ja weiterhin drinne. Man kann es ja weiterhin verwenden.

01:24:20.860 --> 01:24:22.860
Also für solche Sachen werde ich

01:24:22.860 --> 01:24:24.860
weiterhin OnMount und OnDestroy verwenden.

01:24:24.860 --> 01:24:26.860
Das finde ich unnötig kompliziert hier.

01:24:26.860 --> 01:24:28.860
Hier versteht jeder,

01:24:28.860 --> 01:24:30.860
was passiert, oder?

01:24:30.860 --> 01:24:32.860
Und das war ja auch mein Argument für die andere Sache oben,

01:24:32.860 --> 01:24:34.860
dass man in der Welt 5

01:24:34.860 --> 01:24:36.860
das besser versteht, was passiert.

01:24:36.860 --> 01:24:38.860
Aber hier versteht man eindeutig die 4er-Version,

01:24:38.860 --> 01:24:40.860
wie sie es schreiben, besser.

01:24:40.860 --> 01:24:42.860
Was passiert, wenn die Komponente quasi rausgeschmissen

01:24:42.860 --> 01:24:44.860
wird aus der DOM?

01:24:44.860 --> 01:24:46.860
Dann wird ClearInterval ausgeführt.

01:24:46.860 --> 01:24:48.860
Und hier, hä, what?

01:24:48.860 --> 01:24:54.670
Werde ich weiterverwenden.

01:24:54.670 --> 01:24:56.670
12.5, ja. Wir gucken uns gerade Unterschiede an.

01:24:56.670 --> 01:25:00.050
Also finde ich das hier schöner.

01:25:00.050 --> 01:25:02.050
Okay, was geht weiter?

01:25:02.050 --> 01:25:04.050
Component Composition.

01:25:04.050 --> 01:25:09.540
Import User Profile.

01:25:09.540 --> 01:25:11.540
Okay, importiere nochmal Svelte-Komponente.

01:25:11.540 --> 01:25:15.300
Weiß nicht, ob du schon gesagt hast,

01:25:15.300 --> 01:25:17.300
aber das ist 1 zu 1

01:25:17.300 --> 01:25:19.300
UseEffect aus React.

01:25:19.300 --> 01:25:23.120
Ne, das habe ich noch nicht gesagt.

01:25:23.120 --> 01:25:25.120
Und ich weiß auch nicht, ob es so ist.

01:25:25.120 --> 01:25:27.120
Weil ich bin kein React-User.

01:25:27.120 --> 01:25:29.120
Ich habe

01:25:29.120 --> 01:25:35.120
keine Ahnung von React.

01:25:35.120 --> 01:25:37.120
Was genau ist hier der Unterschied? Nichts, oder?

01:25:39.120 --> 01:25:46.910
Genau das Gleiche.

01:25:46.910 --> 01:25:48.910
Was? Emit to Parent. Ah, Event Handling.

01:25:48.910 --> 01:25:54.910
Okay. Ach stimmt, da gibt es ja

01:25:54.910 --> 01:25:56.910
noch eine zweite Datei, tatsächlich.

01:25:56.910 --> 01:25:58.910
Oh, das sieht tatsächlich

01:25:58.910 --> 01:26:00.910
anders an. Anders aus

01:26:00.910 --> 01:26:02.910
jetzt.

01:26:02.910 --> 01:26:04.910
Was haben wir denn hier jetzt? Export

01:26:04.910 --> 01:26:06.910
Let Name

01:26:06.910 --> 01:26:08.910
Page Favorite Color is available.

01:26:08.910 --> 01:26:10.910
Da unten drunter

01:26:10.910 --> 01:26:12.910
der Kram ist alles gleich.

01:26:12.910 --> 01:26:14.910
Und jetzt, was ist das?

01:26:14.910 --> 01:26:16.910
Const?

01:26:16.910 --> 01:26:26.430
Ne.

01:26:26.430 --> 01:26:28.430
Okay, das finde ich jetzt auf den

01:26:28.430 --> 01:26:30.430
ersten Blick

01:26:30.430 --> 01:26:32.430
irgendwie

01:26:32.430 --> 01:26:39.260
unintuitiver.

01:26:39.260 --> 01:26:41.260
Das hat aber bestimmt auch seinen Sinn.

01:26:43.260 --> 01:26:45.260
Wahrscheinlich kann man jetzt einfacher

01:26:45.260 --> 01:26:47.260
Properties durchreichen oder sowas.

01:26:47.260 --> 01:26:49.260
Aber das sagt mir jetzt ehrlich gesagt

01:26:49.260 --> 01:26:57.120
nicht zu.

01:26:57.120 --> 01:26:59.120
Lasst uns das mal ausprobieren.

01:26:59.120 --> 01:27:01.120
Irgendeinen Vorteil muss das Ganze ja haben.

01:27:01.120 --> 01:27:03.120
Legen wir mal eine Komponente an.

01:27:03.120 --> 01:27:05.120
Irgendwas Kleines.

01:27:05.120 --> 01:27:07.120
Das ganze Lib.

01:27:07.120 --> 01:27:13.250
Wie machen die coolen Leute

01:27:13.250 --> 01:27:15.250
unter Lib einen Components-Ordner?

01:27:15.250 --> 01:27:19.460
Oder? Wie machen das die coolen

01:27:19.460 --> 01:27:21.460
Svelte-Leute?

01:27:21.460 --> 01:27:23.460
So, machen wir jetzt hier

01:27:23.460 --> 01:27:25.460
keckel.svelt

01:27:25.460 --> 01:27:27.460
Bestes Svelt-Komponente überhaupt.

01:27:27.460 --> 01:27:29.460
Die kann nur eine Sache ausgeben, nämlich

01:27:29.460 --> 01:27:31.460
keckel. Und das binden wir jetzt

01:27:31.460 --> 01:27:34.830
in unsere Page ein.

01:27:34.830 --> 01:27:36.830
Und zwar

01:27:36.830 --> 01:27:38.830
hier oben drüber, keckel.

01:27:38.830 --> 01:27:40.830
Oh ne, Visual Studio Code hat's

01:27:40.830 --> 01:27:42.830
mal wieder nicht gecheckt, Mann.

01:27:42.830 --> 01:27:44.830
Warum ist Visual Studio Code

01:27:44.830 --> 01:27:46.830
so pepega teilweise? Reicht das, wenn ich

01:27:46.830 --> 01:27:55.900
reloade? Oder muss das

01:27:55.900 --> 01:27:57.900
groß geschrieben sein? Das muss groß

01:27:57.900 --> 01:28:08.510
geschrieben sein, gell?

01:28:08.510 --> 01:28:13.620
Oder nicht? Bin mir jetzt gar nicht sicher,

01:28:13.620 --> 01:28:15.620
wo das hin muss.

01:28:15.620 --> 01:28:17.620
Import

01:28:17.620 --> 01:28:19.620
from

01:28:19.620 --> 01:28:46.260
underlib?

01:28:46.260 --> 01:28:48.260
Muss das groß geschrieben sein?

01:28:48.260 --> 01:28:57.200
Oh ne, wie funktioniert

01:28:57.200 --> 01:29:02.370
das jetzt nochmal?

01:29:02.370 --> 01:29:04.370
Achso, ah ne, das muss man nicht.

01:29:04.370 --> 01:29:07.810
Ah, okay.

01:29:07.810 --> 01:29:12.530
Keine Klammern.

01:29:12.530 --> 01:29:14.530
Dann funzt das auch.

01:29:14.530 --> 01:29:16.530
Warum erkennt

01:29:16.530 --> 01:29:18.530
Visual Studio Code das nicht?

01:29:18.530 --> 01:29:23.060
Ja, da ist es doch.

01:29:23.060 --> 01:29:25.060
Und stylen wir das

01:29:25.060 --> 01:29:27.060
jetzt mal. Super high IQ.

01:29:27.060 --> 01:29:29.060
Styling.

01:29:29.060 --> 01:29:31.060
Style.

01:29:31.060 --> 01:29:33.060
Color.

01:29:33.060 --> 01:29:35.060
Color.

01:29:35.060 --> 01:29:37.060
Color.

01:29:37.060 --> 01:29:39.060
Brown.

01:29:39.060 --> 01:29:41.060
Red.

01:29:41.060 --> 01:29:43.060
Und jetzt machen wir da mal eine H2

01:29:43.060 --> 01:29:46.370
draus, dann ist schön fett.

01:29:46.370 --> 01:29:48.370
So, unsere Keckel Component ist am Start.

01:29:48.370 --> 01:29:50.370
So, und was

01:29:50.370 --> 01:29:52.370
kann die jetzt? Was kann die jetzt

01:29:52.370 --> 01:29:54.370
exportieren? Das muss ich jetzt versuchen mal zu checken.

01:29:54.370 --> 01:29:56.370
Also früher

01:29:56.370 --> 01:29:58.370
hätte ich da jetzt

01:29:58.370 --> 01:30:00.370
gesagt, okay.

01:30:00.370 --> 01:30:02.370
Früher hätte ich gesagt, Script

01:30:02.370 --> 01:30:13.470
script und jetzt export let text zum beispiel default text ist keckel und hier ändern wir

01:30:13.470 --> 01:30:22.670
jetzt den text den wir übergeben ja das funzt so jetzt kann ich das ganze hier drinnen überschreiben

01:30:22.670 --> 01:30:27.010
ich kann jetzt zum beispiel sagen text ist jetzt nicht keckel sondern lul und dann steht da lul

01:30:27.010 --> 01:30:39.910
drin so und was ist jetzt der vorteil von dieser komischen geschichte hier also wenn man darf das

01:30:39.910 --> 01:30:52.860
nicht mischen ok also anstelle also anstelle von export let sage ich jetzt text gleich sowas hier

01:30:52.860 --> 01:30:59.700
sondern funzt wieder aber was ist jetzt der vorteil davon oder dass es komplizierter ausschaut

01:30:59.700 --> 01:31:00.000
und

01:31:00.300 --> 01:31:28.370
das check ich nicht was bringt das jetzt guck mal doch mal ok props to declare komponent props

01:31:28.370 --> 01:31:37.280
use the props rune ok ja haben wir gemacht dass du alle props in einem projekt in einem objekt ja und

01:31:37.280 --> 01:31:42.360
was interessiert mich das ob ich jetzt fünf exports untereinander schreiben oder das hier geklammert

01:31:42.360 --> 01:31:52.360
macht doch für mich keinen unterschied aha ok ok ok you can use familiar destructing syntax

01:31:52.360 --> 01:31:59.460
should have props in case

01:31:59.460 --> 01:32:06.440
ja gut das ist ja sehr sagen wir mal nische jetzt das man schlüsselwörter dass man quasi

01:32:06.440 --> 01:32:13.740
pop namen wie schrüsselwörter braucht aber okay gut dass to get all properties used 그랬onds

01:32:13.740 --> 01:32:20.740
so

01:32:26.640 --> 01:32:28.920
ok das ist glaube ich ganz nice gj

01:32:28.920 --> 01:32:32.130
nice. Da bin ich

01:32:32.130 --> 01:32:34.030
mir jetzt, also ich glaube, das ist ganz

01:32:34.030 --> 01:32:36.310
nice. Da kann ich jetzt zum Beispiel

01:32:36.310 --> 01:32:37.130
sowas hier machen.

01:32:40.130 --> 01:32:41.870
Rest, nennen wir es mal. So.

01:32:42.730 --> 01:32:43.650
Okay, okay.

01:32:44.290 --> 01:32:46.090
Und mal angenommen, ich übergebe jetzt hier sowas wie

01:32:46.090 --> 01:32:47.510
optional, ja, irgendwie.

01:32:48.090 --> 01:32:49.710
Ich übergebe jetzt sowas wie, wie

01:32:49.710 --> 01:32:55.940
onClick. Okay, ich glaube,

01:32:55.940 --> 01:32:57.400
das ist tatsächlich sehr nice.

01:32:57.760 --> 01:32:59.280
Ich übergebe jetzt onClick.

01:33:01.760 --> 01:33:02.160
Count

01:33:02.160 --> 01:33:03.060
plus plus.

01:33:03.820 --> 01:33:08.520
So, und in diesem Rest ist

01:33:08.520 --> 01:33:10.500
jetzt, so mal angenommen, ich habe jetzt hier

01:33:10.500 --> 01:33:11.880
drinnen, wir machen das mal weg.

01:33:12.300 --> 01:33:14.380
Ich habe jetzt hier drinnen einen Button, wir kopieren uns mal

01:33:14.380 --> 01:33:14.820
den Button.

01:33:16.320 --> 01:33:18.120
Ich habe jetzt hier drinnen einen Button

01:33:18.120 --> 01:33:20.440
und

01:33:20.440 --> 01:33:22.660
der kriegt jetzt, ja, wie mache ich denn das?

01:33:23.800 --> 01:33:24.680
Dollar, Dollar, Rest

01:33:24.680 --> 01:33:26.540
vielleicht? Ne, what the fuck?

01:33:29.540 --> 01:33:30.260
Ops, so?

01:33:32.340 --> 01:33:32.700
Rest?

01:33:32.880 --> 01:33:33.000
Ne.

01:33:37.450 --> 01:33:38.010
Einfach so?

01:33:38.230 --> 01:33:46.020
Ne. Ah, ich habe gedacht,

01:33:46.140 --> 01:33:46.680
das funktioniert.

01:33:48.660 --> 01:33:49.860
Das sind Runes.

01:33:50.200 --> 01:33:50.400
Ne.

01:33:51.760 --> 01:33:53.400
Ich dachte, so funktioniert das.

01:33:53.700 --> 01:33:56.320
Das wäre nämlich nice, wenn man das machen könnte,

01:33:56.420 --> 01:33:56.840
aber so.

01:34:01.550 --> 01:34:03.350
Also man kann es destructen.

01:34:09.730 --> 01:34:11.370
This replaces export, let

01:34:11.370 --> 01:34:12.510
export, ja, ja.

01:34:12.510 --> 01:34:13.290
Was hat der gesagt?

01:34:14.450 --> 01:34:16.650
It also replaces dollar, dollar

01:34:16.650 --> 01:34:18.530
props and rest props.

01:34:22.800 --> 01:34:23.920
So richtig checken

01:34:23.920 --> 01:34:25.000
tue ich sein? Also,

01:34:25.620 --> 01:34:26.320
wisst ihr,

01:34:26.340 --> 01:34:28.420
wisst ihr, was ich jetzt eigentlich dachte ist?

01:34:28.420 --> 01:34:41.680
Man kann so quasi Sachen durchreichen an Child-Elemente innerhalb dieser Component, ohne, dass ich jeden Mist extra definieren muss.

01:34:41.680 --> 01:34:44.520
Das ging vorher auch schon, war aber vorher ein bisschen.

01:34:45.900 --> 01:34:47.180
Ach so, ja, weiß ich nicht.

01:34:48.960 --> 01:34:52.500
Was ist mit der Chat, als er da immer bist?

01:34:52.500 --> 01:34:55.000
Alter, ich kann ja mal hinschreiben, ich glaube, what the fuck?

01:34:55.000 --> 01:35:01.970
Ah, das Funst.

01:35:03.730 --> 01:35:04.090
Nice!

01:35:04.750 --> 01:35:06.110
Ja, das ist cool!

01:35:07.290 --> 01:35:08.190
Das ist cool!

01:35:08.510 --> 01:35:10.210
Okay, das gefällt mir, das hat was.

01:35:10.470 --> 01:35:12.110
Ich mache mal kurz hier unten den Kram weg.

01:35:12.970 --> 01:35:13.410
Guckt mal.

01:35:14.830 --> 01:35:15.910
Äh, Moment, okay, count,

01:35:16.030 --> 01:35:18.090
count muss ich da lassen, ich mache mal nur den Button weg.

01:35:18.630 --> 01:35:21.130
Ja, das ist in der Tat jetzt wirklich nice.

01:35:22.850 --> 01:35:24.170
Also, nur mal zur Erklärung.

01:35:24.570 --> 01:35:24.930
Guckt mal.

01:35:25.650 --> 01:35:26.690
Ich übergebe hier,

01:35:26.690 --> 01:35:28.450
das kennt er jetzt natürlich nicht, oder?

01:35:29.770 --> 01:35:31.770
Weiß der, dass ich on...

01:35:33.090 --> 01:35:34.090
key oder so?

01:35:34.590 --> 01:35:36.090
Weiß der, dass das in einem Button sitzt?

01:35:36.090 --> 01:35:37.090
Ist der so schlau?

01:35:37.090 --> 01:35:39.090
Also, guck mal, ich übergebe hier,

01:35:41.920 --> 01:35:43.920
als Property gibt es Text.

01:35:44.480 --> 01:35:46.480
Text ist das einzige, was ich definiert habe.

01:35:47.040 --> 01:35:49.600
Aber ich kann auch onClick zum Beispiel übergeben.

01:35:50.040 --> 01:35:53.480
Und onClick hänge ich dann hier unten drunter an den Button.

01:35:54.240 --> 01:35:58.320
Das heißt, ich kann jetzt hier alles durchreichen an den Button in der Component.

01:35:58.320 --> 01:36:00.320
Also, auch sowas wie,

01:36:00.320 --> 01:36:01.260
ja, onClick,

01:36:01.280 --> 01:36:03.280
keyDown und solche Sachen.

01:36:04.600 --> 01:36:05.600
Das ist cool.

01:36:11.040 --> 01:36:12.040
Das finde ich ganz nice.

01:36:12.640 --> 01:36:15.640
Kann ich auch sowas durchreichen wie class gleich?

01:36:17.360 --> 01:36:18.360
Class gleich?

01:36:19.320 --> 01:36:19.820
Ähm,

01:36:20.560 --> 01:36:21.560
ja, keine Ahnung.

01:36:23.080 --> 01:36:23.580
Hallo?

01:36:25.980 --> 01:36:26.480
Red?

01:36:27.300 --> 01:36:28.220
Nee, das funktioniert nicht.

01:36:29.660 --> 01:36:32.540
Das liegt aber bestimmt daran, weil das irgendwie, äh, reserved ist.

01:36:33.300 --> 01:36:35.300
Das, das funktioniert bestimmt auch irgendwie,

01:36:35.300 --> 01:36:36.300
wenn man es gescheit macht.

01:36:41.580 --> 01:36:43.580
Aber, aber nicht, aber nicht direkt.

01:36:44.740 --> 01:36:45.740
Aber Moment, das ist ja auch nicht class.

01:36:45.740 --> 01:36:47.220
Style will ich durchreichen.

01:36:47.220 --> 01:36:50.500
Das Funst, ja, das ist cool, dass das geht.

01:36:58.840 --> 01:37:00.840
Das gefällt mir in der Tat ganz gut.

01:37:06.240 --> 01:37:08.720
Da kann man, da kann man quasi jetzt auch

01:37:09.480 --> 01:37:12.240
Komponenten stylen, wie man das in View machen konnte.

01:37:13.240 --> 01:37:15.240
Ohne, ohne Trick 17.

01:37:23.810 --> 01:37:24.810
Das finde ich gut.

01:37:27.400 --> 01:37:28.400
Das gefällt mir.

01:37:33.600 --> 01:37:34.120
Ja.

01:37:35.000 --> 01:37:36.160
Ja, das hat was.

01:37:36.480 --> 01:37:37.080
Das hat was.

01:37:37.880 --> 01:37:39.000
Das ist eine gute Änderung.

01:37:39.640 --> 01:37:43.520
Also, ich werde immer noch nicht so ganz mit dieser Syntax da oben warm, ehrlich gesagt.

01:37:45.730 --> 01:37:46.810
Aber das gefällt mir.

01:37:46.890 --> 01:37:47.590
Das, das ist cool.

01:37:49.940 --> 01:37:51.160
Was schreiben die sonst noch so?

01:37:57.250 --> 01:37:58.270
Oh, nix weiter, oder?

01:38:03.040 --> 01:38:04.220
Das wird, das wird gebaut.

01:38:04.360 --> 01:38:04.740
Gar nix.

01:38:04.820 --> 01:38:07.440
Wir gucken uns die Unterschiede zwischen 12.5 und 12.4 an.

01:38:08.040 --> 01:38:08.240
Ups.

01:38:09.880 --> 01:38:10.740
Nee, das gefällt mir.

01:38:11.080 --> 01:38:11.780
Das ist nice.

01:38:12.240 --> 01:38:12.920
Das ist nice.

01:38:15.120 --> 01:38:16.520
Dass man das so durchreichen kann.

01:38:16.520 --> 01:38:20.520
Ohne, vor allem durchreichen kann, ohne irgendwelche Magic Sachen.

01:38:20.840 --> 01:38:23.060
Es gab ja vorher auch schon so komische Dinger hier.

01:38:23.440 --> 01:38:24.840
Aber das ist jetzt relativ klar.

01:38:25.000 --> 01:38:27.920
Du siehst hier oben, okay, Reste, restliche Sachen stecken hier drin.

01:38:28.000 --> 01:38:29.600
Und hier werden die dann quasi destructed.

01:38:32.250 --> 01:38:32.770
Sehr nice.

01:38:32.970 --> 01:38:33.730
Das ist eine gute Sache.

01:38:33.910 --> 01:38:34.590
Das gefällt mir.

01:38:35.770 --> 01:38:36.010
Okay.

01:38:37.230 --> 01:38:37.910
Also, proper.

01:38:38.190 --> 01:38:40.310
Ja, und ansonsten, hat das sonst irgendwelche Vorteile?

01:38:40.470 --> 01:38:40.770
Nö, oder?

01:38:41.050 --> 01:38:42.330
Einfach, dass es ein bisschen hübscher ist.

01:38:43.250 --> 01:38:45.410
Wobei, das hier, da kann man sich jetzt echt drüber streiten.

01:38:45.410 --> 01:38:46.710
Also, ich muss sagen, Export Let.

01:38:47.470 --> 01:38:48.130
Finde ich.

01:38:48.350 --> 01:38:54.630
Optisch schon etwas schöner als so, wie es jetzt ist in 5.

01:38:56.370 --> 01:39:00.350
Aber das Destructing finde ich tatsächlich in 5 sehr nice.

01:39:04.670 --> 01:39:04.990
Ja, gut.

01:39:06.150 --> 01:39:07.370
Da muss man sich dran gewöhnen.

01:39:08.130 --> 01:39:11.650
Es ist aber nicht so eine große Umstellung wie damals von View 2 auf View 3,

01:39:12.030 --> 01:39:13.470
wo gefühlt alles anders aussah.

01:39:14.830 --> 01:39:17.030
Man konnte zwar das alte noch verwenden, aber keiner wollte es.

01:39:17.030 --> 01:39:20.890
Übrigens, vieles davon ist ähnlich, wie sie es auch in View 3 gemacht haben.

01:39:25.100 --> 01:39:25.240
Ja.

01:39:25.260 --> 01:39:28.040
In View 3 heißt es ein, dann Use Ref und so Zeug.

01:39:31.840 --> 01:39:32.380
Okay, nice.

01:39:32.480 --> 01:39:33.920
Ah, das gefällt mir schon mal.

01:39:34.500 --> 01:39:35.540
Emit to Parent.

01:39:46.940 --> 01:39:48.200
Ich sehe keinen Unterschied.

01:39:50.800 --> 01:39:52.220
Ach so, ich muss den Button gucken.

01:39:55.170 --> 01:39:56.150
Oh, okay.

01:39:59.020 --> 01:40:00.300
Ach so.

01:40:01.760 --> 01:40:05.300
Jetzt ergibt das mit den Props noch einmal ein bisschen mehr Sinn.

01:40:11.600 --> 01:40:17.540
Man kann quasi auch darüber logischerweise dann Events, beziehungsweise Funktionen austauschen.

01:40:17.800 --> 01:40:19.300
Ja, das ist cool.

01:40:19.500 --> 01:40:19.820
Wobei.

01:40:23.960 --> 01:40:25.960
Warum ging das eigentlich im Alten nicht schon?

01:40:33.660 --> 01:40:36.660
Ich hätte das eigentlich fast erwartet, das ging im Alten auch schon, aber anscheinend nicht.

01:40:37.560 --> 01:40:42.460
Ja, also in, ins Welt 4, da kann ich mich noch dunkel dran erinnern, da musste man so komische Dinger hier machen.

01:40:43.040 --> 01:40:49.020
Also wenn du, wenn du eine Custom-Komponente hattest und ich sollte ein Event werfen

01:40:49.020 --> 01:40:54.820
oder auch nur, oder auch nur das Button-Event irgendwie durchreichen,

01:40:54.820 --> 01:41:07.060
dann musste man das mit Create Event Dispatcher machen.

01:41:07.280 --> 01:41:07.380
Okay.

01:41:08.200 --> 01:41:14.720
Ja, also sprich, das, was wir hier gemacht haben, wir haben, wir haben quasi intuitiv das gemacht, was wir in dem nächsten Beispiel erklären.

01:41:24.950 --> 01:41:25.910
Ne, keine Ahnung.

01:41:26.230 --> 01:41:26.790
Odol mit.

01:41:29.030 --> 01:41:32.630
Wir haben das, wir haben das nächste Beispiel schon vorweg gegriffen, ohne dass wir es gesehen haben.

01:41:33.130 --> 01:41:34.270
Die machen nämlich genau das hier.

01:41:34.330 --> 01:41:34.550
Guck mal.

01:41:34.550 --> 01:41:47.190
Die reichen quasi Child-Elemente, Events, durch an die Parent-Komponente hier mit OnClick in dem Fall.

01:41:47.490 --> 01:41:50.830
Also wir geben die Funktion da rein, aber das OnClick-Event kommt ja von.

01:41:50.830 --> 01:41:56.430
Von dem Button hier in der Child-Component.

01:41:57.150 --> 01:41:58.710
Und das ging anscheinend vorher nicht.

01:41:59.350 --> 01:42:08.190
Vorher musste man wohl jedes Event, was man weiterreichen möchte von einem, ja quasi Nested-Element in der Child-Component,

01:42:08.250 --> 01:42:10.210
musste man irgendwie explizit nochmal exporten.

01:42:11.930 --> 01:42:15.050
Ja, das ist nice, dass das jetzt nicht mehr braucht, dass man das jetzt nicht mehr braucht.

01:42:15.130 --> 01:42:16.430
Das finde ich schon mal viel besser so.

01:42:17.070 --> 01:42:19.850
Dann nehme ich auch diese komische Prop-Syntax in Kauf.

01:42:20.830 --> 01:42:22.470
Das finde ich cool.

01:42:23.230 --> 01:42:26.170
Doch, das hat tatsächlich was.

01:42:32.150 --> 01:42:49.150
Ein Stream ist super, das ist schön, dass ihr das gefällt.

01:42:50.430 --> 01:42:58.440
Oder um nicht zu sagen, sehr, sehr.

01:43:03.620 --> 01:43:05.880
Chat wieder super freundlich zu neuen Leuten.

01:43:06.040 --> 01:43:06.840
Jaja, ich sehe es schon.

01:43:16.440 --> 01:43:17.080
Ja, das ist gut.

01:43:17.080 --> 01:43:21.080
Ich glaube, das werde ich ausgiebig benutzen.

01:43:22.080 --> 01:43:23.340
Wenn dann Svelte 5.

01:43:25.080 --> 01:43:28.660
Wenn der Fiat Champ irgendwann mal weiterentwickelt wird,

01:43:31.220 --> 01:43:33.960
was er ja nicht notwendig hat, weil es sind ja keine Probleme bekannt,

01:43:34.600 --> 01:43:35.320
wie man hier sieht.

01:43:36.060 --> 01:43:39.660
Das ist alles Skill-Issues auf User-Seite.

01:43:40.880 --> 01:43:43.000
Wenn er mal irgendwann weiterentwickelt wird,

01:43:44.440 --> 01:43:46.300
dann, oh, guck mal, ich habe die 80 Sterne.

01:43:46.480 --> 01:43:46.700
Nice.

01:43:47.840 --> 01:43:49.760
Dann kriegt er Svelte 5 Frontend.

01:43:56.950 --> 01:43:57.830
Nicht won't fix.

01:43:57.950 --> 01:43:58.950
Ich brauche Hashtag Skill-Issue.

01:43:58.970 --> 01:44:09.240
Es ist ja offensichtlich der User-Fehler, dass es keine AM64-Version gibt, oder?

01:44:10.920 --> 01:44:12.100
Kann ich doch nichts für.

01:44:14.360 --> 01:44:20.020
Wobei, jetzt so blöd es klingt, ich glaube, es gibt wirklich eine AM64-Version davon.

01:44:20.820 --> 01:44:21.060
Moment.

01:44:22.000 --> 01:44:22.320
Moment.

01:44:25.130 --> 01:44:26.190
Ach, nee, gibt es nicht.

01:44:26.410 --> 01:44:27.410
Okay, ich habe nichts gesagt.

01:44:30.280 --> 01:44:34.200
Es gibt nur eine AMD64 und eine AMV7-Version.

01:44:34.200 --> 01:44:35.800
Auf der anderen Seite.

01:44:36.720 --> 01:44:41.940
Der kann doch ohne Probleme die AMV7 auf AM64 laufen lassen, oder?

01:44:43.860 --> 01:44:44.940
Natürlich geht das.

01:44:46.000 --> 01:44:48.760
Also, ich bin jetzt immer fest davon ausgegangen, dass das funktioniert.

01:44:51.490 --> 01:44:54.010
Guck mal hier, gar nicht so wenige Downloadzahlen, der Fiat Champ.

01:45:00.200 --> 01:45:02.300
13.000 Downloads hier.

01:45:02.580 --> 01:45:02.920
Pog.

01:45:22.300 --> 01:45:24.400
Leute, ich habe Hunger.

01:45:24.680 --> 01:45:25.800
Ich muss mir gleich was zu essen holen.

01:45:25.940 --> 01:45:26.780
Aber wir sind noch nicht fertig.

01:45:32.240 --> 01:45:33.600
Wir können auch kurze Pause machen.

01:45:33.600 --> 01:45:36.080
Ich esse was, wir gucken irgendwas und danach machen wir weiter.

01:45:36.320 --> 01:45:38.280
Könnte man auch machen.

01:45:41.330 --> 01:45:42.490
Pause Champ, sozusagen.

01:45:43.470 --> 01:45:44.390
Real Life Pause Champ.

01:45:53.400 --> 01:45:54.720
Eat, Eating Champ, ja.

01:45:55.060 --> 01:45:55.760
Dinner Champ.

01:46:01.420 --> 01:46:02.520
Okay, was ändert sich noch?

01:46:02.700 --> 01:46:03.900
Slot ändert sich.

01:46:04.580 --> 01:46:06.660
12.4 vs. 12.5.

01:46:06.820 --> 01:46:07.820
Ich sehe keinen Unterschied.

01:46:07.960 --> 01:46:08.480
Da müssen wir hingucken.

01:46:08.600 --> 01:46:09.180
Funny Button.

01:46:10.460 --> 01:46:12.800
Okay, ich sehe einfach, dass es größer, dass es länger ist.

01:46:13.780 --> 01:46:14.000
Let.

01:46:14.960 --> 01:46:16.660
Okay, was bin ich hier sehend?

01:46:18.830 --> 01:46:20.910
Let Children Props?

01:46:23.200 --> 01:46:23.600
Render?

01:46:27.620 --> 01:46:28.460
But why?

01:46:35.450 --> 01:46:36.750
Was ist der Sinn davon?

01:46:40.290 --> 01:46:45.250
Also Slot ist bei Svelte quasi ein Platzhalter,

01:46:45.930 --> 01:46:51.510
wo andere Komponenten, also andere Sachen eingesetzt werden.

01:46:53.210 --> 01:46:55.690
Also ich kann zum Beispiel, ich zeige euch das mal.

01:46:56.030 --> 01:46:57.490
Ich kann jetzt zum Beispiel hier sagen,

01:46:58.210 --> 01:47:00.090
keine Ahnung, Div.

01:47:00.090 --> 01:47:02.390
Da schreibe ich rein Slot.

01:47:04.580 --> 01:47:05.300
Slot.

01:47:06.020 --> 01:47:06.640
Und.

01:47:06.680 --> 01:47:12.740
Jetzt kann ich in die Komponente, kann ich noch was reinschreiben, was dann in den Slot gerendert wird.

01:47:12.800 --> 01:47:14.140
Zum Beispiel Keck W.

01:47:15.040 --> 01:47:16.580
Guck, dann taucht das da drin auf.

01:47:18.020 --> 01:47:21.060
Der rendert quasi das, was ich hier reinstecke in den ersten Slot.

01:47:24.030 --> 01:47:27.630
Vorher konnte man nicht selektieren, wo was angezeigt wird, wenn es mehrere sind.

01:47:28.010 --> 01:47:28.450
Doch, oder?

01:47:28.770 --> 01:47:30.630
Du konntest doch Name Slots verwenden.

01:47:30.770 --> 01:47:32.750
Du konntest sagen Name Keck W.

01:47:34.010 --> 01:47:34.830
Und dann konntest du das irgendwie...

01:47:35.970 --> 01:47:37.870
Fragt mich nicht mehr, wie das genau funktioniert hat.

01:47:37.870 --> 01:47:42.590
Ich weiß jetzt nicht, wie man da...

01:47:42.590 --> 01:47:51.590
Also, da bin ich jetzt überfragt, wie man das jetzt dort richtig rein gerendert hat.

01:47:51.590 --> 01:47:54.150
Musste man dann hier irgendwie sagen Slot oder so?

01:47:55.910 --> 01:47:57.250
Keck W.

01:47:57.250 --> 01:48:03.700
Ja, so ging das, kannst du...

01:48:03.700 --> 01:48:08.500
Aber, da verstehe ich jetzt den Sinn davon ehrlich gesagt nicht.

01:48:08.500 --> 01:48:14.240
Slot Render.

01:48:14.240 --> 01:48:24.910
Ja, if...

01:48:24.910 --> 01:48:26.910
Ja, okay, okay, das leuchtet mir alles ein.

01:48:26.910 --> 01:48:27.410
Aber...

01:48:27.410 --> 01:48:34.320
Slot.

01:48:34.600 --> 01:48:35.880
Da müssen wir uns jetzt mal...

01:48:35.880 --> 01:48:39.280
Render.

01:48:45.750 --> 01:48:45.890
Ja.

01:48:47.130 --> 01:48:48.130
Snippets?

01:48:49.410 --> 01:48:50.450
Ist hier drinne?

01:48:51.990 --> 01:48:52.670
Äh.

01:48:53.390 --> 01:48:54.530
Endhändler Functions?

01:48:56.070 --> 01:48:56.710
Render.

01:48:58.290 --> 01:48:59.250
Add Render.

01:48:59.730 --> 01:49:00.590
Hier ist nix drinne.

01:49:01.210 --> 01:49:02.350
Ah, doch, tatsächlich.

01:49:05.140 --> 01:49:05.380
Okay.

01:49:05.980 --> 01:49:09.740
Also, das Ganze ist wohl ein Bestandteil von Snippets.

01:49:12.180 --> 01:49:12.840
Was auch immer.

01:49:12.840 --> 01:49:13.700
Okay, Beispiel.

01:49:14.920 --> 01:49:20.680
Snippets and Render Tags are a way to create reusable chunks of markup inside your Components.

01:49:20.680 --> 01:49:23.720
Also, quasi kleine Subkomponenten in der Kompon...

01:49:23.720 --> 01:49:24.720
Naja, ne.

01:49:24.720 --> 01:49:25.720
Ne, nicht Komponenten.

01:49:25.720 --> 01:49:26.720
Klein...

01:49:26.720 --> 01:49:27.720
HTML...

01:49:27.720 --> 01:49:28.720
Ja, Snippets halt.

01:49:28.720 --> 01:49:29.720
Wiederverwendbare...

01:49:29.720 --> 01:49:30.720
Ach, so!

01:49:30.720 --> 01:49:39.000
Ich glaub, so langsam aber sicher check ich, worauf das rausläuft.

01:49:39.000 --> 01:49:42.840
Ich könnte jetzt quasi sowas hier reinschreiben.

01:49:42.840 --> 01:49:44.760
Und das irgendwie mehrfach verwenden.

01:49:44.760 --> 01:49:49.690
Wie...

01:49:49.690 --> 01:49:51.690
Wie referenziert man da jetzt drauf?

01:49:51.690 --> 01:49:52.690
Also, hier.

01:49:52.690 --> 01:49:53.690
Kein Slot.

01:49:53.690 --> 01:49:54.690
Oder wie auch immer.

01:49:54.690 --> 01:49:55.690
Wie referenziert...

01:49:55.690 --> 01:49:56.690
Das muss ich auch mal durch...

01:49:56.690 --> 01:49:57.690
Das könnte tatsächlich was Cooles sein.

01:49:57.690 --> 01:49:58.690
If Image...

01:49:58.690 --> 01:49:59.690
Snippet.

01:49:59.690 --> 01:50:04.050
Ah!

01:50:04.050 --> 01:50:05.050
Ach so!

01:50:05.050 --> 01:50:06.050
Okay, das ist in der Tat doch ganz cool.

01:50:06.050 --> 01:50:07.050
Ich checke noch nicht, was es mit Slots zu tun hat, ehrlich gesagt.

01:50:07.050 --> 01:50:10.200
Aber okay.

01:50:10.200 --> 01:50:11.200
Das ist in der Tat ganz cool.

01:50:11.200 --> 01:50:12.200
Okay.

01:50:12.200 --> 01:50:13.200
So.

01:50:13.200 --> 01:50:14.200
So.

01:50:14.200 --> 01:50:15.200
So.

01:50:15.200 --> 01:50:16.200
So.

01:50:16.200 --> 01:50:17.200
So.

01:50:17.200 --> 01:50:18.200
So.

01:50:18.200 --> 01:50:19.200
So.

01:50:19.200 --> 01:50:20.200
So.

01:50:20.200 --> 01:50:21.200
So.

01:50:21.200 --> 01:50:22.200
So.

01:50:22.200 --> 01:50:23.200
So.

01:50:23.200 --> 01:50:24.200
So.

01:50:24.200 --> 01:50:27.470
So.

01:50:27.470 --> 01:50:28.470
So.

01:50:28.470 --> 01:50:29.470
So.

01:50:29.470 --> 01:50:30.470
So.

01:50:30.470 --> 01:50:31.470
Also.

01:50:31.470 --> 01:50:32.470
ッ

01:50:54.880 --> 01:51:02.180
Also.

01:51:02.180 --> 01:51:08.540
Die Kette und die Olmキ forma.

01:51:08.540 --> 01:51:09.520
Ay.

01:51:09.520 --> 01:51:17.120
nichts macht und jetzt kann ich sagen ich will das mehrfach rennen dann an

01:51:17.120 --> 01:51:31.000
unterschiedlichen stellen und wie adrender ok also adrender kecke da ist

01:51:31.000 --> 01:51:41.970
es einmal und jetzt aha ok das ist nicht übel

01:51:41.970 --> 01:51:45.910
das ist tatsächlich ganz cool ich habe jetzt ich habe jetzt wirklich

01:51:45.910 --> 01:51:52.400
gerade nicht greifbar weil ich das gebraucht hätte aber ich gehe davon aus

01:51:52.400 --> 01:51:56.600
wenn es das gibt man braucht es tatsächlich öfters das beispiel ist doch

01:51:56.600 --> 01:52:01.840
gar nicht so schlecht guck mal die wollen beide male wollen

01:52:01.840 --> 01:52:07.880
sie hier image sachen rennen einmal bei der bedingung und einmal die fault im

01:52:07.880 --> 01:52:16.530
endeffekt einmal wenn das gesetz sind einmal das

01:52:16.530 --> 01:52:17.790
findet wenn das gilt ok

01:52:17.790 --> 01:52:21.750
heißt im endeffekt wenn ich beispiel

01:52:21.750 --> 01:52:25.590
beispielsweise ich habe ich habe ein gutes ich habe gutes beispiel avatar

01:52:25.590 --> 01:52:31.350
bilder zum beispiel ja avatar bilder avatar bilder braucht man mehrfach auf

01:52:31.350 --> 01:52:36.510
der seite mit ein paar unterschiedlichen settings vielleicht und dann legt man

01:52:36.510 --> 01:52:43.050
sich einmal hier das snippet für avatar bilder an und kann das dann rendern ja

01:52:43.050 --> 01:52:46.350
irgendwie was weiß ich oben links in der komponente und dann irgendwie noch mal

01:52:46.350 --> 01:52:47.770
in der mitte von der komponente was auch immer

01:52:47.770 --> 01:52:52.210
ich habe gerade noch kein wirklich so richtig greifbares richtig gutes

01:52:52.210 --> 01:52:54.570
beispiel für aber ich glaube das kann man gut verwenden

01:52:54.570 --> 01:52:59.710
ich meine an der stelle ist es natürlich bescheuert was ich hier gemacht habe das

01:52:59.710 --> 01:53:04.510
beispiel weil ich könnte genauso gut dass hier alles weglassen eine schleife

01:53:04.510 --> 01:53:08.510
machen ja eine schleife machen fünf mal image rein passen da brauche ich brauche

01:53:08.510 --> 01:53:14.770
ich kein mager was ist natürlich in der tat ganz interessant macht ist dass man

01:53:14.770 --> 01:53:17.570
jetzt hier verschiedene parameter reinstecken kann

01:53:21.450 --> 01:53:26.910
also ich kann beispielsweise hier parameter einstellen sie über name gibt

01:53:26.910 --> 01:53:35.720
das default parameter bei javascript geht es im snippet höchstwahrscheinlich

01:53:35.720 --> 01:53:42.560
ja gucken wir doch mal gucken wir doch mal sagen die ford name ist leer da

01:53:42.560 --> 01:53:49.720
machen wir jetzt mal so wenn es welt

01:53:49.720 --> 01:53:55.520
if not name dann kecke

01:53:55.680 --> 01:54:14.460
okay name ist diplomatic ich glaube javascript spinnt spinnt einfach nur um

01:54:14.460 --> 01:54:20.780
aber jetzt ist es weg ja okay oder alternativ will ich einfach ja neben

01:54:20.780 --> 01:54:26.440
anzeigen ja das funktioniert guck mal wenn ich etwas rein schreibe dann wird

01:54:26.440 --> 01:54:30.100
das gerendert und wenn ich nicht reinschreiben

01:54:30.100 --> 01:54:35.540
also wenn ich irgendwas rein treibt mit das geredet und ansonsten wird das gar

01:54:35.540 --> 01:54:45.070
das gerendert das ist wirklich cool vor allem kann man das jetzt mehrfach an der seite verwenden mir

01:54:45.070 --> 01:54:53.990
fehlt leider so richtig gutes beispiel jetzt dafür aber ich habe so irgendwie das juckt so in den

01:54:53.990 --> 01:55:02.690
fingern zu sagen so das ist sehr praktisch und was hat es jetzt mit slots replacement zu tun

01:55:02.690 --> 01:55:09.410
snippet params can be destructed aber wieso ist welt wenn man auf

01:55:09.410 --> 01:55:21.750
you nutzen kann warum benutzt review nicht react oder jquery oder solid oder knockout

01:55:21.750 --> 01:55:59.360
js oder gar angular doch das gefällt mir das hat was snippet scope passing snippets zu

01:55:59.360 --> 01:56:12.100
components das ist cool gut passt

01:56:12.100 --> 01:56:21.920
ist im prinzip genau das was die was die mit slot slot ist ein sonderfall von passing snippets

01:56:21.920 --> 01:56:38.420
zu components mit jquery 2024 noch maintained du wirst überrascht sein jquery wird nicht nur

01:56:38.420 --> 01:57:01.580
maintained sondern es kam vor noch nicht allzu langer zeit sogar jquery 4 am start anstatt es

01:57:01.580 --> 01:57:03.280
ist noch beta ja aber guck hier

01:57:03.440 --> 01:57:14.210
6 februar 2024 jquery 4.0 beta das ist nicht nur maintained das ist noch voll active in development

01:57:14.210 --> 01:57:48.710
doch das feature gefällt mir hier snippets and slots in zwelt 4 content can be passed using

01:57:48.710 --> 01:57:58.840
slots snippets are more powerful and flexible ja man kann weiterhin slot verwenden finde ich

01:57:58.840 --> 01:58:05.540
eine gute sache ich fand es erstmal jetzt unsinnig das ist so ein ding wisst ihr man neigt ja persönlich

01:58:05.860 --> 01:58:10.720
immer dazu sobald man so was hier sieht zum ersten mal sagt man das will ich nicht warum

01:58:10.720 --> 01:58:15.620
nicht so ist doch viel einfacher wenn man sich mal mit ist mit vielen sachen soja wenn man sich

01:58:15.620 --> 01:58:20.260
damit beschäftigt ein bisschen reicht manchmal ein bisschen an der oberfläche zu kratzen sich

01:58:20.260 --> 01:58:26.080
anzugucken warum das gemacht wurde ergibt das durchaus sinn also oftmals durchaus sind und

01:58:26.080 --> 01:58:32.280
hier ist es genauso wenn ich mir die sache hier mit den snippets angucke finde ich das

01:58:32.280 --> 01:58:37.820
sehr sinnvolle sache und dementsprechend verstehe ich auch dass slots deprecated

01:58:37.940 --> 01:58:42.800
sind weil snippets ersetzen im prinzip slots meine weiterhin slot slot verwenden kannst

01:58:42.800 --> 01:58:57.190
für einfach sein okay interessant gefällt mir wie geht es weiter kontext jetzt kommt der ersatz von

01:58:57.190 --> 01:59:06.550
stores das ist vielleicht zu kompliziert jetzt für den user store get context create user store

01:59:06.550 --> 01:59:15.850
okay was ist der unterschied get content ich will sie ich will sie nicht und was bin ich

01:59:16.350 --> 01:59:27.240
okay das ist das eigentlich interessante es gibt keine stores mehr aber es gibt jetzt

01:59:27.240 --> 01:59:34.540
punkt welt punkt js files um sowas ähnliches zu machen oder wird es da wird es aber langsam

01:59:34.540 --> 01:59:47.140
abgedreht also eine kombination aus export function und state ist quasi ein replacement

01:59:47.140 --> 01:59:51.520
für stores es gibt keine stores mehr auch eines der features was ganz viele leute

01:59:51.540 --> 02:00:04.040
super toll ins welt fanden weil das schon eingebaut ist das heißt jetzt braucht man

02:00:04.040 --> 02:00:12.500
keine stores mehr jetzt kann man das mit was mit get und set erinnert mich ein bisschen an java wenn

02:00:12.500 --> 02:00:38.780
ich ehrlich bin das muss ich mal ausprobieren blip nennen wir das jetzt mal einfach store

02:00:38.780 --> 02:00:41.420
nee nicht store store ist blödsinn

02:00:41.420 --> 02:00:48.480
ja

02:00:48.480 --> 02:00:50.380
um es egal wie ich es nennen will

02:00:50.380 --> 02:00:50.980
create

02:00:50.980 --> 02:00:52.880
create

02:00:52.880 --> 02:00:53.380
create

02:00:53.760 --> 02:00:54.760
state

02:00:54.760 --> 02:00:55.760
state

02:00:55.760 --> 02:00:57.760
punkt welt punkt ne

02:00:57.760 --> 02:00:59.760
punkt welt ich kann es aber schnell

02:00:59.760 --> 02:01:01.760
punkt js

02:01:01.760 --> 02:01:03.760
hauen wir das jetzt mal

02:01:03.760 --> 02:01:05.760
rein initial username bla bla bla

02:01:05.760 --> 02:01:07.760
bla

02:01:07.760 --> 02:01:09.760
so und jetzt importieren

02:01:09.760 --> 02:01:14.930
importieren wir das ganze mal

02:01:14.930 --> 02:01:16.930
create ja das funktioniert nicht

02:01:16.930 --> 02:01:18.930
also brauchen wir jetzt hier

02:01:18.930 --> 02:01:22.300
wie importiert man den kram

02:01:22.300 --> 02:01:29.300
hier create

02:01:29.300 --> 02:01:31.300
state from ja ich hätte es mal

02:01:31.300 --> 02:01:36.080
anders nennen sollen blip

02:01:36.080 --> 02:01:39.580
okay das hat funktioniert

02:01:39.580 --> 02:01:40.580
okay das hat funktioniert

02:01:40.580 --> 02:01:41.580
create users date

02:01:41.580 --> 02:01:48.580
aber hier let blub gleich zur initial state

02:01:48.580 --> 02:01:49.580
aber hier let blub gleich zur initial state

02:01:49.580 --> 02:02:05.400
omegle lullen

02:02:05.400 --> 02:02:06.400
omegle lullen

02:02:06.400 --> 02:02:10.400
das ist erstmal testen ob das ersatz für stores ist also wenn es ersatz für stores ist

02:02:10.400 --> 02:02:13.400
dann machen wir das mal das hier mal weg

02:02:13.400 --> 02:02:17.400
das waren die ganzen kämpfe marke geht's ganzen krempel und mal weg brauchen jetzt alles nicht

02:02:17.400 --> 02:02:20.290
das waren die ganzen kämpfe marke geht es ganzen kräften und mal weg von jetzt alles nicht

02:02:20.290 --> 02:02:21.290
und on klick

02:02:21.290 --> 02:02:22.290
und on klick

02:02:22.290 --> 02:02:23.290
und on klick

02:02:23.290 --> 02:02:29.350
ändern wir jetzt nicht count die kommen wir machen hier wir machen hier eins rein ja und

02:02:29.350 --> 02:02:47.730
wir ändern das anklick das geht ihr muss den dollar davor machen ms markt count
