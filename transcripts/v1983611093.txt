so da bin ich omega pock ich bin ja ich will nach dem im ort nicht suchen weil
im zweifelsfall gibt es das auch natürlich gibt es omega pock was was
was denke ich mir selbstverständlich gibt es omega pock so ziemlich alle
emotes die ich mir so kurz oder fly ausdenken kann ist schon jemand drauf
gekommen omega pock ggg aktiviert auch ein sehr
beliebtes im ort wir haben glaube ich ich wurde und
scheiße wir haben so unglaublich viele keck emotes das hört gar nicht mehr aus
der ist auch nicht schnell business business muss sagen die sind
eigentlich alle gut javascript auch nichts
vergessen und das ist der twitch versuch keck w nachzumachen das hat
nicht wirklich geklappt naja so jetzt waren wir ja so ein bisschen
riemen richtig angelaufen ist und dann zeige ich dann erst nicht zeigen auch
aber dann erzähle ich euch mal was wir werden heute etwas was kleines machen
nicht ganz so kompliziert hoffe ich zumindest dass es nicht ganz so
kompliziert ist ein bisschen mal ein bisschen was anderes
ja beach beach music das muss jetzt
sein passt optimal exzellent passt exquisit und wie war das mit wärmster
september aller zeiten november ja heute habe roxy gseto danke
für den sab dr pro noob sport gar kein nur halb park ans trinken ich habe es
wenn es ab eine subscription gewesen aber bisher noch subscribe trinken habe
ich hier steht ich bin auch schlau ich habe mir hier neue wasserflasche trinken
hier stehen aber ich bin auch schlau ich habe hier wasserflasche trinken hier stehen
aber ich bin auch schlau ich habe hier wasserflasche trinken hier stehen aber
ich habe kein glas mit gut muss ich also das ist eine plastikflasche trinkt
ich ungern raus aber immerhin für heute geht es unter daniel wieder am start
daniel lul lul hd 3d für die saps leute ja und zwar ich schalte mal ich schalte
man die vm an das wird das wird etwas kurzes knackiges denke ich war es ist
schon 20 23 10 uhr spätestens muss ich wieder pennen deswegen müssen wir als
bastel champ machen ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja
ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja ja
dass die kategorie hier besser ist glaubt ich glaube die kategorie hier ist besser erst mal
erst mal absehen ja also ich erzähle euch jetzt einfach was und zwar bei uns auf der arbeit wir
machen ja in letzter zeit relativ viele hipster block chain zeug und jetzt haltet euch mal fest
haltet euch mal fest ich weiß gar nicht wo ich am besten anfangen anfange zu erzählen also ich
habe euch ja schon erzählt dass das selbst betreiben diverser crypto block chain notes
ziemlich pain in gachi bus ist also das ziemlich ziemlich von arsch ist die software ist übelst
buggy das kackt ab die so übelst langsam und gerade gerade polygon notes sind ganz abartig
zumindest zumindest sie sind jetzt sie sind es auf die glorreiche idee gekommen bzw ich glaube
gar nicht dass sie wirklich auch
die idee gekommen sind ich glaube ein eine eine sehr gute wie heißt das wie nennen die sich sales
abteilung oder die die leute was verkaufen wollen hat ihn versucht das aufzuschätzen und zwar haben
sie sich überlegt ob sie sich ja block chain ist bei design langsam ist die frage bei was langsam
ja bei was zumindest war irgend so eine tolle sales abteilung hat irgendwie war was vorgestellt
starbucks danke für den start
wir fangen wir fangen gleich an und irgendwie sind sie jetzt was ist denn cia mu wird sowieso
das so gtk teams einpassen zumindest selbst jetzt auf die glorreiche idee gekommen sie wollen sich
also weil das so schwierig ist eigene eigene chlorpoints zu betreiben und die immer mal
probleme machen wollen sie sich jetzt eine block ist haltet euch halt euch fest leute halten kann
ein block chain tour surveillance klagenвидet tier
eine lok train load balancer pi ins kinday
die euch aufketzten angst nicht die dust entertainment
load balancer appliance kaufen von den herstellern sage ich euch nicht von dem
hersteller hat niemand irgendwas gehört bisher die machen ansonsten nix
wahrscheinlich irgendwie startup eine also quasi eine premium block chain load
balancer appliance die irgendwie ab 50.000 euro losgeht so und und jetzt
haltet euch mal fest für was sie die benutzen wollen es ist es ist es ist
blödsinn deluxe aber jetzt haltet euch mal fest für für was sie die benutzen
wollen es blickser danke für den sub die wollen man angenommen man hat ja 67 wie
auch immer verschiedene nodes für eine spezielle block chain ist egal was es ist
ja nehmen wir mal polygon weil polygon ist recht recht beliebt in der richtung
da und jetzt kommt es ja vor dass manche nodes mal out of sync gehen weil die
software scheiße ist und buggy ist ja mal out of sync gehen
dass die das pudel给ena nick ist so verknüttelt dass sie das die nuts maar
brechen dass man was bei maintenance neu gestartet werden muss umso was und jetzt
könnte man ja einfach auf die idee komme man machte einen ganz normalen路
balancer vor und der fackel das ganze ab was ein normaler load balancer
allerdings nicht kann ist die ap endpunkte dieser notes abzufragen und zu
welcher note der neueste ist weil wie gesagt die sünden sich alle und manche
sind ein bisschen schneller gesunken als andere ja also einer der notes ist halt
der der den aktuellsten stand hat oftmals oder unser mama sagen wir 123
not sind relativ aktuell manche hinten dran und diese super krasse premium
load balancer appliance die kann halt die api endpunkte abfragen und dort
checken quasi wie weit welcher not gesünd ist und da habe ich gesagt leute
ganz im ernst ob es laut irgendwie habe ich das leute ganz im ernst ja wenn wir
sowas haben wollen da müssen wir uns doch keine 50.000 euro premium block
chain load balancer appliance kaufen da stellen wir eine proxy hin machen drei
zeilen best script als health check und dann funktioniert das auch und ich
habe mir gedacht ich teste jetzt mal im stream ob an der aussage überhaupt was
dran ist ob das wirklich nur drei zeilen best script sind okay da so wenn es 20
zeilen best script sind ist auch okay und proxys und proxys konflikt schreibe
ich jetzt auch nicht einfach runter macht zu selten was dafür
das wollte ich mal ausbringen aber von der idee her von der idee her muss das
super simpel sein wir machen und custom health check
in dem custom health check fragen wir die api endpunkte das machen wir jetzt
so quasi wir bauen jetzt keine block chain sachen auf wir machen ein paar endpunkte
die unterschiedliche werte liefern und da gucken wir welche so der health check
fragt einfach alle unterschiedlichen api endpunkte ab sortiert die nach dem
höchsten block und die api response mit dem höchsten block die wird halt
selected im health check für kriegt allen traffic
wir können sogar so weit gehen wir können sogar super advanced sein wir
können sogar mehrere aktivieren also und ich wie gesagt ich hab gesagt
leute wir brauchen keine wir brauchen keine 50 ja ich weiß nicht ob ha proxy
und zählzeilen best script business enterprise genug sind
ganz ehrlich die sollen die 50.000 euro lieber mir geben oder zwischen den
leuten die ein projekt auf mitarbeiten aufteilen anstatt sinnlose sinnlose
appliance zu kaufen die können die können leute ich habe die
idee die sollen mir die 50.000 euro überweisen und dann bezahle ich meine
modgis da gibt es dann gibt es dann modgis gehalt da wirst du mal sehen wir
haben ein paar mods teilweise die waren jetzt irgendwie gefühlt jahre nicht mehr
da da wirst du sehen die spawnen auf einmal wieder sind auf einmal alle sind
sie wieder da so aktuell sind sie immer so die gleichen 45 da kommt doch der
separo wieder her
hat er genug kohle dann da kann er seine referendar grills beeindrucken nicht
trägt 69 lange für den subs blicks aufs blicks abbox aufs krebs studieren
ja jetzt jetzt will ich bloß mal testen ob das ob meine aussage stimmt dass das
ja eigentlich nur ha proxy und zählzeilen best script sind das werden
wir jetzt mal ausprobieren also ziel ist ich ich rekapituliere das
noch mal kurz für euch wir bauen exemplarisch quasi
jetzt wir starten im prinzip drei web server alle drei web server liefern auf
einem api endpunkt die die gleiche response nur mit unterschiedlichen ja
unterschiedlichem stand und dann bauen wir paar zeilen best script health check
in herr proxy der dann den richtigen das richtige back end selected irgendwie so
ich weiß selbst noch nicht genau wie das man beide way wie ich sehe hast du auch
windows 11 ja leider vielleicht kannst du mir helfen ich habe folgendes probleme
vielleicht kannst du mir helfen ich habe folgendes problem ich habe folgendes problem
mit windows 11 wenn die app im hintergrund läuft bzw kann fokus mit
mit windows 11 wenn die app im hintergrund läuft bzw kann fokus mit
mit windows 11 wenn die app im hintergrund läuft bzw kann fokus mit der maus drauf ist läuft die app
der maus drauf ist läuft die app
der maus drauf ist läuft die app nur auf vier von 16 kursen windows magic keine
nur auf vier von 16 kursen windows magic keine
nur auf vier von 16 kursen windows magic keine ahnung ich habe absolut nicht den
ahnung ich habe absolut nicht den
ahnung ich habe absolut nicht den leisen schon mal was da abgeht stimmt
leisen schon mal was da abgeht stimmt
leisen schon mal was da abgeht stimmt irgendwelche energiesparen ab was du
irgendwelche energiesparen ab was du
irgendwelche energiesparen ab was du machen kannst du kannst deine
machen kannst du kannst deine
Energiespar-Settings auf
Performance und Unlimited stellen.
Das müsste
funzen, ja.
Dann geht das wahrscheinlich.
So, also heute
kein krasser IDE-Progress-Stells,
sondern Command-Line-WIM.
Wir machen mal einen neuen Ordner.
Nehmen wir mal Aproxy. Wir machen es auch nicht,
Leute, wir machen es auch nicht
vercontainerisiert. Wir machen das ganz simpel.
Oh, guck mal, ich hab hier einen Snapshot.
Snapshot von was auch immer genau.
Also, ich weiß nicht,
was das hier ist auf dem Vorschau-Bild.
Es ist nicht das, was ihr
eventuell denken könntet.
Man könnte das Vorschau-Bild was reininterpretieren,
aber das ist es nicht.
Weil das
ein Vorschau-Bild von meiner Streaming-VM ist.
Und da geht's nur
löblich zu.
Erstmal löschen.
Für was setzt du den
Aproxy ein? Was ist das Ziel? Kann leider nicht
zurückspulen. Okay.
Ich erklär's nochmal kurz.
Ich
erklär's nochmal kurz.
Ja, die Konfektion-Taxi ist ein bisschen kryptisch.
Ich erklär's nochmal kurz. Also,
bei mir auf der Arbeit wollen sie sich eine 50,
mindestens, mindestens, 50.000
Euro teure
Premium-Blockchain-Loadbalancer-
Appliance kaufen.
Warum das so teuer ist?
Ich hab keine Ahnung.
Was das im Endeffekt macht, ist folgendes.
Das ist ein Loadbalancer,
der
die
API-Endpunkte,
verschiedenster, verschiedenster
Blockchain-Node-Server
abfragen kann, weil man die selbst
hostet, ja.
Und dann
die Nodes, die einen
besonders aktuellen Stand haben,
hauptsächlich
dorthin den Traffic schickt.
Nee, nee, Blockchain ist
voll angesagt. So.
Das ist natürlich eine fertige Lösung mit
einem Web-UI und ganz nice.
Und ich hab heute gesagt, Jungs,
eigentlich total unsinnig,
das Gleiche
mach ich mit HA-Proxy und 10 Zeilen
Bash-Skript. Da können sie mir die
50.000 Euro ja dann überweisen.
Kann ich endlich mal meine Mods bezahlen.
So.
Und ich dachte mir, ich probier das jetzt mal im Stream
aus, ob an meiner Aussage,
dass man das mit
HA-Proxy und 10 Zeilen Bash-Skript
auch lösen kann, was die 50.000 Euro
Appliance kann,
ob da was dran ist.
Beide
Mal, was hältst du vom OpenAI-Beat?
Oh, ich hab's, ich hab heute Morgen
das Beheise gelesen, dass der
Chef und der stellvertretende Chef
irgendwie weggesetzt bei Microsoft.
Microsoft irgendwie allen
OpenAI-Mitarbeitern, die kündigen wollen,
einen Job angeboten hat und irgendwie
ein Drittel oder zwei Drittel der
Belegschaft haben unterschrieben,
dass sie keinen Bock mehr haben, wenn die
nicht den alten Chef zurückholen.
Was auch immer.
Wir werden sehen, wir werden sehen.
Wie findest du Security-Keys?
Das ist jetzt eine äußerst allgemeine
Frage.
Oder meinst du sowas wie YubiKey,
YubiKey und sowas?
Das ist ganz praktisch.
Nein, das geht mit Bash.
Man kann Custom Health-Checks mit Bash machen.
Das habe ich sogar schon gemacht.
Ja, ist eine gute Sache.
Finde ich ist eine gute Sache.
Das probieren wir jetzt, das probieren wir jetzt einfach mal aus.
So, Vince, ich mach mir mal, wie gesagt,
wir vercontainerisieren das
auch gar nicht oder sonst was.
Das ist einfach direkt auf der VM und gut.
Ist jetzt einfach mal Proxy und gut ist.
Man muss es ja nicht übertreiben.
Also ich habe gedacht, unser Setup, unser Setup zum
Testen wird ganz easy.
Ja, wir haben, wir haben nicht.
Wir haben nur eineinhalb Stunden heute Zeit.
Und das wird ganz easy.
Wir machen ein Verzeichnis.
Da kommt eine Proxy Conf rein.
Proxy Conf muss mir gleich minimal Beispiele im Internet suchen,
weil ich, weil ich die immer nicht nicht auf die Reihe kriege.
Und dann machen wir, dann starten wir selber mal zwei Endpunkte.
Reicht.
Wenn man das Lokal mal mit zwei probiert.
Wir machen hier, wir starten, wir starten zwei, zwei HTTP Server.
Ein auf Port 8000 und ein auf Port 8001.
Das machen wir jetzt.
Das machen wir jetzt auch gleich mal nach Port 8000 und nach Port 8001.
Und da drinne HTTP Server.
Da starten wir jetzt ein auf Port 8000 und auf 8000, äh Moment, falsch rum, auf 8000.
Eins und auf 8000.
So, das ist unser Setup.
Aktuell machen die beiden HTTP Server noch nix, außer ein leeres, ein leeres Directory Listing zurückzugeben.
Gibt es da irgendeinen Grund für HA-Proxy?
Ja, ich habe es jetzt schon dreimal erklärt, aber ich erkläre es noch einmal schnell.
Der Stream, Stream fängt ja an.
Was ist das für eine Shell?
Nee, das ist ZSH.
Also ich erkläre es noch mal kurz.
Bei mir auf der Arbeit wollen sie sich eine 50.000 Euro teure,
loadbalancer Appliance kaufen und ich war mal so mutig und habe gesagt, Jungs, warum kaufen wir so einen Schwachsinn?
Das gleiche kann man mit HA-Proxy und 10 Zeilen Bash-Script machen.
Und ich wollte jetzt mal ausprobieren, ob das etwas zu übertrieben war, meine Aussage, oder ob das wirklich geht.
Ich bin mir ziemlich sicher, dass es geht, sonst hätte ich das nicht einfach erzählt.
Nee, das will ich nicht.
Wie gesagt, man kann Custom Bash Healthchecks machen, das weiß ich, das weiß ich.
Habe ich sogar schon gemacht, aber ich weiß aus dem Kopf nicht wie.
Ja, gibt's.
Gibt's.
Aber HA-Proxy ist POG für sowas, finde ich.
Für so, für so Custom-Bastelleien finde ich das HA-Proxy gut.
Also die haben alle seine Vorteile, finde ich.
Cuddy hat der Vorteil, Let's Encrypts integriert und super easy aufzusetzen.
Dafür sind komplizierte Resetups nicht richtig möglich.
Traffic ist gut im Containerisierungsumfeld, hat aber eine abartige Upfuck-Config.
Nginx ist eigentlich so ein schönes Allround-Ding.
Und HA-Proxy finde ich top, wenn man, wenn man, wenn man ein bisschen Custom basteln will.
Nee, ja.
Habe ich mir auch schon gedacht.
Die sollen mir das überweisen, dann kann ich meine Mods bezahlen.
Es ist schon ganz schön wenig, oder?
Dafür gibt's keinen super Premium-Business-Loadbalancer.
Aber wie gesagt, die gehen ab 50.000 Euro los.
Und wahrscheinlich, also das sind ja, das sind ja Hardware-Appliance-Dinger.
Und da, da wird man sich wahrscheinlich auch nicht einkaufen, sondern wahrscheinlich drei oder so.
Also, es ist, es ist unsinnig.
Wir probieren das jetzt mal aus.
Also, ich versuche, ich versuche das Ganze mal nachzustellen.
Also, wir haben zwei, wir haben zwei Backends.
Ja, auf Port 8000 und Port 8001.
So, die Backends, die sollen, ähm, ja, wir tun mal so, als hätten die einen API-Endpunkt.
Und legen jetzt einfach mal da der Datei hin.
API-JSON, okay?
So, API-JSON.
Und da, und da kommt jetzt als, als Antwort, wenn man den Endpunkt curlt, zurück.
Block.
ID.
Oder einfach nur Block.
Wir simulieren mal die, die Krypto, Krypto-Node, API.
Block-ID, so, beste, beste Block-ID.
So sieht die aus.
Und hier unten machen wir das Gleiche.
API-Punkt-JSON.
Und der liefert, so, und der liefert Block-ID.
Der muss jetzt halt irgendeine, eine, eine, eine höhere liefern.
Der liefert, na, Moment, jetzt habe ich Mist gemacht, ja.
Äh, der liefert, keine Ahnung, hier, äh, 8.
1, 1, so, irgendwie so.
Also, also der Server, der auf, äh.
Also, der, der Dienst, der auf 8.000 läuft, der, der liefert eine höhere, äh, äh, Block-ID über, über den Endpunkt.
So.
Das reicht eigentlich auch schon, was wir am Backend brauchen.
So, und wenn man das jetzt curlt.
API-JSON, dann kriegt man hier einmal Block, äh, 7, 6, 3.
Und hier kriegt man Block 7, 8, 3.
So.
Also, wenn unser HA-Proxy, äh, Health-Check.
Bash-Health-Check funktioniert, sollte der immer diesen Endpoint selecten, weil der die höhere Block-ID hat.
Ja.
Negative Latency.
Ja.
Genau, ich, ich returne einfach Daten, die es noch gar nicht gibt.
Man hat ja gesehen, wie gut es bei Stadia lief mit Negative Latency.
So, Frage an euch, Chat, hat man verstanden, was ich machen will?
Kurz was trinken.
Ja, stimmt, wir sollten, das sollte AI selecten.
So.
So ein einfaches Crep tut's nicht.
Okay.
Excellent.
Excellent.
Da müssen wir jetzt erstmal anfangen, eine HA-Proxy-Conf zu bauen.
Und HA-Proxy minus C oder sowas ist es wahrscheinlich.
Nein, ist es nicht.
Es ist HA-Proxy minus F.
Der paid respects die ganze Zeit.
HA-Proxy-Conf.
Gut.
Dann starten wir das mal.
Wie sieht so eine HA-Proxy-Conf aus?
Ich kann's mir immer umsetzen.
Verrecken, nicht merken.
HA-Proxy-Conf-Minimal-Example.
HA-Config-File-Example.
HA-Proxy-Config.
HA-Proxy-Basics.
Ich bilde mir ein mit Frontend, das geht so gar nicht.
Ja.
Ja, genau, genau, genau.
Der Übertreibung ist aber hier.
HA-Proxy-Config.
Ja, hier ist es doch.
Das ist die offizielle Anleitung.
Das Beste.
Minimal-Config.
Sehr schön.
Sehr gut.
Also, Minimal-Config.
Mode-TCP.
Und ich erkläre euch jetzt auch warum.
Weil, willst du da Lua-Skripts auswählen?
Nein, ich will ein Bash-Health-Check.
Bash-Health-Check-Skript hinterlegen, was alle 5 Sekunden ausgeführt wird.
Wenn du irgendwie eine Ahnung hast, wie man Lua-Skripts in der HA-Proxy-Lua,
haben die irgendeinen Lua-Plugin?
5 Ways to Extend HA-Proxy with Lua.
Okay, gucken wir mal, ob das meine HA-Proxy überhaupt hat.
Ja, hat's.
Global Lua-Load.
Und was macht das jetzt?
Attaches, Converters, Action, Service...
Nee, ich glaube, ich glaube, ich will kein Lua-Skript verwenden, ehrlich gesagt.
Also, es ist mir, glaube ich, etwas zu High-IQ jetzt.
Ich meine, das ist ein Lua-Skript.
Das ist ein Lua-Skript.
Das ist ein Lua-Skript.
Das hier ist schon, das ist schon, ehrlich gesagt, ähnlich zu dem,
das ist schon ähnlich zu dem, das muss ich mir mal speichern.
Also, das ist, das ist tatsächlich sowas ähnliches, sowas ähnliches, wie ich will.
Aber gucken wir mal, gucken wir mal.
Also, ähm, so, wir wollen hier nicht Frontend, sondern wir wollen, glaube ich,
was wollen wir denn, Listen?
Wie war das?
Nee.
Nee, ist schon gut so.
Doch, Listen.
Listen, Listen, glaube ich, wollen wir.
Listen, weil da kann man hier irgendwie sowas sagen, wenn ich das richtig aus dem Kopf hinkriege.
Oder Sternchen?
Sternchen?
Irgendwie, dass es auf 8000 lauscht.
Lass mal kurz checken, ob das jetzt funktioniert.
HA-Proxy minus F.
Nein.
Was?
Parsing Characters not supported.
Permitted name list.
Oh, wie ging das nochmal?
Oder war das einfach nur Listen App?
Ach, Moment, hier unten steht ja die Bind, die Bind-Adresse.
Okay, HA-Proxy soll auf 8080 lauschen.
Okay, HA-Proxy läuft.
Gucken wir mal.
HA-Proxy leitet weiter auf Port.
Ähm, mein Server weiterleiten.
Geht.
Konnte man, konnte man die Server nicht einfach hier unten reinschreiben?
Doch, ne, das ging auch.
Okay, geht auf Port 8000.
Okay, das sollte, das sollte jetzt schon funktionieren.
Gucken wir mal.
Curl, also wir gehen auf die Load, wir gehen auf die Load, auf den Load-Balancer-Endpunkt.
Und wir kommen hier unten auf dem, auf Port 8000 raus.
Okay, das funktioniert.
Also Minimal-Config-HA-Proxy funzt schon mal.
Ja, das könnte man auch machen.
Aber, wie gesagt, ich, ich, ich, ich setze aktuell auf einen External-Health-Check im HA-Proxy.
War da in der Aufsicht jemand, ob man...
Hab ich, hab ich vor langer Zeit verwendet, hab ich aufgegeben, war mir zu, war mir zu ätzend.
Deswegen hab ich jetzt das in der VM laufen.
So.
Dann machen wir mal...
Ey, wie war das, warte mal.
HA-Proxy...
...External-Checks.
Ich hab das schon mal gemacht.
Das ist zwar schon bestimmt...
...fünf Jahre oder so her.
Aber ich kann mich noch...
...verhältnismäßig gut für das, wie lange das her ist, dran erinnern.
Also ich weiß, es gab...
Genau, External-Checks...
...Example.
Es gibt...
...genau, Option...
...genau, das, genau, genau, genau, das kommt mir noch bekannt vor.
Das bräu... das braucht man.
Option, External-Check...
...da kann man nämlich, also wenn ich das, wenn ich das noch richtig in Erinnerung habe...
...dann konnte man, ich bin mir jetzt nicht sicher, ob das auf Global musste oder hierhin, ich glaub, das muss hierhin...
...also man kann HA-Proxy sagen...
...dass er...
...also wir brauchen übrigens zwei Server im Backend, ne?
Also einen auf 8001 und einen auch auf 8000.
Also man kann, wenn ich das richtig im Hinterkopf habe...
...HA-Proxy sagen...
...führe...
...einen Custom Health-Check aus, und zwar in dem Fall hier den da, den...
...machen wir jetzt mal einen eigenen hier...
...touch...
...check.sh...
...bin...
...bash...
...chmod...
...plus x...
...check...
...hier...
...so...
...und...
...ups...
...so, External-Command...
...so, und wenn ich das richtig zusammenkriege noch aus dem Kopf, dann ist das jetzt so...
...dass HA-Proxy...
...alle Sekunde oder alle fünf Sekunden, das kann man dann irgendwie einstellen...
...dass der...
...diesen Check ausführt...
...und wenn der Check erfolgreich ist für das jeweilige Backend...
...dann wird das...bleibt das aktiv, ansonsten wird das down genommen.
Das heißt, alle Backends...
...von denen ich nicht möchte...
...dass die Traffic abbekommen...
...sollen down sein.
So, und...
...das, das müsste, das müsste eigentlich funktionieren.
Ich, ich führe mal...
...HA-Proxy jetzt aus und gucke, ob es prinzipiell geht und nicht crasht...
...bäm, geht kaputt.
Was hat er für Schmerzen?
Option External Check...
...Unable to Find Global External Check.
Okay.
Brauche ich noch eine Global Section?
Okay.
Was, was hat er hier?
Insecure Fork Wanted Not Enabled in the Global Section.
Also, eins muss man HA-Proxy nämlich zugute halten...
...die haben erstaunlich gute Docs.
Sieht zwar aus wie 1995, aber die sind, sind wirklich ganz gut beschrieben.
By default, HA-Proxy tries hard to prevent any threats and process creation of the...
Okay, ja, das brauche ich, das ergibt Sinn.
So, und wenn ich das jetzt richtig gemacht habe, dann sollte...
...dieses, dieses Checkscript, schreibe mal echo123 rein...
...sollte dieses Checkscript...
...regelmäßig ausgeführt werden.
Wird es aber nicht.
Warum?
Chat, wenn ihr irgendwelche Questions habt, dann schreibt es mit AdWoblos rein, weil ich muss mich gerade konzentrieren.
Habe ich irgendwas vergessen?
Can't use external check.
Wie hat der das konfiguriert?
Server...
Ah!
Ah, man muss Check dahinter schreiben, dass er was checkt.
Ja, die Syntax, die Syntax von HA-Proxy ist etwas kryptisch.
Aber es funktioniert gut.
Jawoll!
Okay, er führt mein Custom-Script aus.
Sehr gut, sehr gut.
Excellent!
Das finde ich gut.
Okay, und jetzt brauche ich nur noch ein Example.
HA-Proxy external check.
Weil, ich kann mich noch daran erinnern, da werden, genau, da werden, also da werden Variablen übergeben an das, an das Script.
Anhand dessen kann man erkennen, für welchen Endpunkt das gerade ausgeführt wird.
Mario!
Oh, wir sind wieder am Start.
Moin, danke für den Sub.
How to write an external health check.
External...
Ach, guck mal!
Hier haben, hier haben sie doch ein Beispiel für.
Variablen sind...
Hier.
Also, $1 ist Virtual-Service-IP, also im Prinzip die IP vom Server, okay.
Port...
Real Server, also der eigentliche Endpunkt, der angesprochen wird.
Und...
Check Source IP.
Check Source IP?
Was soll die Check Source IP sein?
Okay, wir gucken, wir gucken mal, was der HA-Proxy dazu sagt.
Die IP vom Server?
Ah!
Ja.
Das, das kann tatsächlich sein.
Das, das kann tatsächlich sein, ja.
Ja.
Command ist der external command to run.
The arguments passed...
To the commands are proxy address, proxy port, server address, service port.
Okay, das war's, der andere geschrieben.
Andere war bestimmt JetGPT generated.
Some values are also provided through environment variables.
Okay.
HA-Proxy address, backend ID, backend name, HA-Proxy port, server address, connection, server ID, server name,
Ports, Protokoll, Pfad, ja, eigentlich nix, nix, was ich brauche.
Kriegst du beim external Script alle Backends oder muss das Script sehr statisch sein?
Nee, ich krieg nicht alle Backends.
Aber das ist nicht schlimm, ich kenne ja alle Backends, die, die schreibe ich, die schreibe ich da rein.
Ansonsten krabbe ich sie mir aus der HA-Proxy-Conf.
Guck mal, ich auch mal, wir krabben uns die einfach aus der HA-Proxy-Conf, easy.
Ja.
Grab, server, ähm, grab, check, ah, Mist, grab, server, okay.
Alter, HA-Proxy, Mensch, so, jetzt aber, ähm, und dann, cut.
So, jetzt haben wir, guck, jetzt haben wir uns sogar die, jetzt haben wir uns sogar die IPs rausgeholt aus der HA-Proxy-Conf.
Excellent.
So, dann, dann probieren wir das mal auf.
Ich, ich, ich bin gespannt.
Dann machen wir das genau so, wir holen uns das hier raus.
Gucken mal, ob das, ob das läuft.
Easy-Hackerman-Stells, genau.
Minus F.
Ups, HA-Proxy, minus F.
Es läuft, okay, er kriegt's, er kriegt's raus, sehr schön.
Nice, du.
Dann, okay, jetzt kommen die ersten an, Useless Use of Cat, ja, meinetwegen.
HA-Proxy, aber ich find das einfach viel angenehmer so.
So, dann nennen wir das mal Endpoints.
Das ist so der beste Name, der mir einfällt dafür.
Endpoints, so, Chat, Five-Hat-Time.
Dann, was übergibt er für Variablen?
Proxy-Adress, Proxy-Port, okay, machen wir mal sowas hier wie Service, IP, oder Service, Service-Host oder sowas, äh, Dollar 1.
Service-Port.
Dollar 2, was war das nächste?
Server-Address, also quasi, äh, ja, Check, Check-Host, eigentlich egal.
Weiß gar nicht, ob wir das überhaupt brauchen.
Und Check-Port, dann zählen wir das noch hoch.
Gut, jetzt bin ich mal gespannt.
Erhältst du dann, welche OS könnt ihr für einen Home-Server empfehlen?
Debian, nehm Debian, und gut ist.
Dann sei denn du hast spezielle Anforderungen, dann eventuell was anderes.
Debian, kannst auch Ubuntu nehmen, kannst auch, wenn du ganz hart drauf bist, ähm, CentOS nehmen oder sowas, aber das ist im Enterprise-Umfeld, geht mir das schon auf den Sack.
Ich, ich würde einfach Default Debian nehmen, und gut ist.
Ja, Rocky, genau, Rocky, einmal Linux, wenn man eher die Red Hat, Red Hat-Schiene will.
So, also, was machen wir denn jetzt?
Jetzt machen wir eine Schleife vor Endpoint, vor Endpoint in Endpoints.
Do, Echo, Endpoint.
Ah, Mann, das ist jetzt, das ist jetzt noch nicht die hohe Kunst.
Wir führen das mal von Hand aus, um zu gucken, ob es funktioniert.
Also, das interessiert mich nicht.
Kunst, Kunst hast du wirklich?
Kunst wirklich?
So.
So, vor Endpoint in Endpoints.
Was wollen wir jetzt machen?
Ich will jetzt checken, ob die Server hier, meine Web-Server-Endpunkte, also meine Web-Server, ähm, API-Endpunkte, ob die laufen.
Das mache ich einfach mal mit einem Curl.
Leute, ich habe ein Problem.
Ich habe vorhin zwei, zwei Riesenteller Nudeln gefuttert.
Ich muss mal kurz, ich muss mal kurz, auf Klo.
Ich bin in fünf Minuten wieder da.
Und, und dann haben wir noch eine Stunde genau Zeit, das zu vollenden.
Ich bin gleich wieder da.
Ich bin wieder am Start.
Weiter geht's.
Wo sind wir stehen geblieben?
Ahem, genau.
Bash, Bash-Skript.
So, wir gehen alle Endpunkte aus der HA-Proxy-Config durch.
Und jetzt muss ich mal überlegen, was machen wir.
Ich will fest, also ich brauche hier erstmal so eine Art Health-Check.
Da machen wir einfach einen Curl.
So, Curl.
Local Host, API.
Sagen wir das immer mal korrekt.
Schreiben wir mal http davor.
Machen wir einen Curl.
Auf 8080 läuft nichts.
Weil HA-Proxy aus ist.
Das ist schon mal gut.
So, auf 8001 läuft was.
Auf 8002 läuft nichts.
Wir wollen keine Error-Ausgabe haben.
Okay, gut.
Und hier kriegen wir Jason zurück.
Das heißt, das pipen wir nach JQ.
Und holen uns...
Das fällt mit Block raus.
Genau das wollen wir haben.
Eats.
Nudeln mit Lachs, Alter.
Ist klar, Leute.
Ich weiß nur, weil ich euch nicht viel mehr erzähle, was ich sonst so esse.
Heißt nicht, dass ich nur immer Nudeln mit Lachs-Futter...
So, nehmen wir das mal so hier.
Irgendwie Response.
So, was brauchen wir denn jetzt?
Jetzt muss ich mal kurz in mich gehen.
Also, hier muss auf jeden Fall schon mal Quotes drumherum.
Bin mir auch nicht ganz sicher, warum.
Aber ist auf jeden Fall nicht verkehrt.
Und hier kommt der Endpoint rein.
Aber auch nicht auf Port 8001, sondern direkt so.
Mach doch mal einen Koch-Stream.
Na, ich weiß net.
Ich weiß ja net.
Da gibt's noch Leak im Kochdeckel oder so.
Im Topfdeckel.
So.
Jetzt haben wir hier das Result drinne.
Von diesem Curl.
Die einzige Sache, wo ich mir nicht ganz sicher bin, ist...
Was passiert, wenn es JSON, was der Server returnt, ein Error hat?
Zumindest würde ich sagen, wir checken jetzt einfach erstmal, ob in der Response was drinne ist.
Weil, ihr habt's ja gesehen...
Oder wir können's ja mal ausprobieren.
Okay, nix macht das JQ. Das ist gut.
Also, wenn man was curlt von einem nicht erreichbaren Server, dann gibt's keine Ausgabe.
Das heißt, wir checken jetzt erstmal...
Leute, wenn ihr übrigens bessere Ideen habt, wie man das...
Wie man das nicer machen kann, in Bash oder was ich hier mache, ne?
Könnt ihr ruhig in den Chat schreiben.
Vielleicht haben wir hier die richtig krassen Bash-Hackermans dabei.
So, wir checken jetzt, ob...
Ob das nicht leer ist.
Übrigens, das ist Bash-Logik.
Wer sich fragt, ein if muss man immer mit einem phi beenden.
Warum? Man weiß es nicht.
Und ein for beendet man mit done und nicht mit rof.
Bash-Logik.
Das hat sich irgendeiner vor 65 Jahren ausgedacht.
Man weiß nicht mehr, warum das so ist.
Letztens Video von meinem Klo gesehen, ja.
Das ist so beliebt, das Video von meinem Klo,
dass sogar irgendein russischer... russischer...
ähm...
Ja, so Sanitärhandel-Lampen...
äh... russischer Sanitärhandels-Shop
das Video geklaut hat davon.
Und hochge... und reuploaded hat.
Kann man sich nicht vorstellen, was da los ist, ne?
Dass die sich selbst da einfach ein Video machen können.
Vor allem auf einem russischen Channel.
So ein Typ, der auf Deutsch redet und in seinem...
in seinem Badezimmer ist.
Komplett random.
Was denken sich die Zuschauer da?
Einfach mal ein Video gerippt.
So, also wir testen, ob das...
Ah, ich bin mir nicht ganz sicher.
Okay, Chat, ich muss mal...
ich muss mal überlegen, wie wir das jetzt machen.
Wo findet man das Klo-Video?
Auf YouTube.
Wo ist es einfach bei mir?
Hier.
Klo.
Es gibt zwei... es gibt zwei Klo-Videos.
Eins von 2017, wo ich das Ding...
so neu gar nicht hatte.
Weil wir sind 2013 hier eingezogen.
Also im Prinzip so lang... so lang habe ich das dann schon.
Und...
Ja.
Hier habe ich Fazit gemacht.
Acht Jahre Premium-Klo.
Das ist richtig, ja.
Ich habe mir das noch gar nicht so genau überlegt.
Zumindest...
Also, wenn... wenn das Ergebnis nicht leer ist, dann...
geben... wir geben das einfach mal aus.
Okay, wir geben das einfach mal aus.
Wir geben...
Leute, ich weiß...
Ich weiß, wie wir das machen.
Ich weiß, wie wir das machen.
Pfeifert-Idee.
Ich glaube, das funktioniert richtig gut.
Das... das müssen wir mal ausbrennen.
Okay, wir geben...
Wir geben die Response aus...
von dem Endpunkt.
Und...
dann...
schreiben wir uns noch den End...
Endpoint dahinter.
So, und jetzt... und jetzt passt mal auf.
Passt mal auf.
Wenn ich das jetzt von Hand ausführe...
dann kommt jetzt hier raus...
der ist bei dieser Blocknummer...
also, der ist bei dieser Blocknummer...
und der ist bei dieser Blocknummer.
Was ich jetzt machen kann, ist...
ich kann das einfach...
numerisch sortieren...
und reverse sorten.
Und dann habe ich immer...
die...
äh, reverse sorten?
Ja, reverse sorten, genau.
Dann habe ich immer... immer den höchsten...
den... den Endpoint mit dem höchsten Block...
als erstes.
Heißt...
Heißt, wir können das eigentlich so lassen...
und schreiben die gesamte Schleifenausgabe...
wobei, ja...
Ne, das geht doch, glaube ich, noch einfach.
Ich kann doch... ich kann doch theoretisch hier einfach ein sort-n-r hintendran hängen...
und dann machen wir ein head-1...
und nehmen immer... äh, ein head-n-1...
und dann kriegen wir immer...
den Endpoint raus... genau!
Dann kriegen wir immer den Endpoint raus mit der höchsten...
mit der höchsten... mit den höchsten Blocks.
So, jetzt kriegen wir aktuell den hier raus.
Jetzt schalte ich den mal aus...
und jetzt kriege ich den da oben raus.
Das passt doch wunderbar.
Was passiert, wenn beide aus sind?
Dann geht's bestimmt kaputt.
Dann kommt nichts als Ausgabe.
Eigentlich ziemlich gut.
Easy 5k, denke ich auch.
Äh, 50k.
So...
Und was müssen wir jetzt machen?
Ähm...
Ich brauche den Output nochmal.
Den capturen wir auch nochmal, eine Variable.
Das ist ja immer der...
Endpunkt, der jetzt quasi ausgewählt wurde...
mit... mit dem aktuellsten Stand.
Schreibt noch eine Error-Message, ja?
Nennen wir das mal selected.
Se-lected.
Nennen wir das mal selected.
So...
Und jetzt...
Jetzt muss ich erstmal testen, ob das überhaupt funktioniert.
Was ich hier...
Was ich hier gebaut hab.
Ich...
Ich lass das grad nochmal kurz ausführen vom HA-Proxy und guck mal, was dann passiert.
Okay, er...
Er...
Er fragt beide Endpunkte regelmäßig ab.
Nice, nice.
Das ist schonmal gut.
So, dann machen wir jetzt mal eine Ausgabe.
Machen wir mal irgendwie...
Ähm...
Ja...
Highest Block...
Achso, den hab ich ja gar nicht an der Stelle.
Den muss ich mir erstmal irgendwie rausholen.
Highest Block...
Und...
Und...
Dann...
Dann machen wir noch irgendwie...
Was ich für einen Endpunkt ausgewählt hab.
Äh, ja...
Endpoint...
Nennen wir einfach Block.
Endpoint...
So.
Zumindest das sollte jetzt schonmal leer in der HA-Proxy, in dem Log auftauchen.
Ja.
War für eine Zeit weg.
Haben drei Zeilen Bash bisher gereicht?
Naja...
Drei Zeilen Bash ist vielleicht ein bisschen übertrieben gewesen.
Aber mit 20 kommen wir vielleicht hin.
Mal gucken.
So.
Ne, ich glaub mit 20 kommen wir auch nicht ganz hin.
So.
Jetzt muss ich mir dort erstmal rausholen.
Warte mal hier.
Echo.
Selected.
Was steht denn da jetzt drinnen nochmal?
Was steht drinnen?
Das da.
Okay.
Also, das heißt...
Das cutten wir...
An einem Leerzeichen.
Nehmen dann Feld 1.
Und das wird unser...
Unser Target.
Oder Selected.
Oder...
Ach, wie auch immer.
Mein Endpoint.
Ne, wenn...
Wenn...
Ist doch wurscht, wie das heißt.
So.
Target.
Also das, wo wir dann im Endeffekt...
Was wir ausgewählt haben.
Dann brauchen wir das gleiche nochmal.
Und das nennen wir...
Die...
Ist die Block I...
Ne, falsch rum.
Das ist das Target.
Das ist die Block...
Oder?
Ja.
So.
Block ID.
Target.
Gut.
Gucken wir mal, ob das bis hierhin funzt.
Okay.
Block ist der höchste.
7, 8 ist der höchste.
Lass mal...
Mach mal...
Ich mach...
Ich mach mal kurz aus.
Ich mach mal kurz aus.
7, 6.
Guck mal, wie gut das funktioniert.
Guck mal, wie gut das funktioniert.
Erst Rest und Endpoint in Selected kombinieren und dann wieder splitten.
Aber geht das denn...
Geht das denn anders irgendwie?
Ne, das muss ich kombinieren, damit ich es...
Damit ich es sortieren kann.
Und danach, wenn ich das Ergebnis hab, will ich es wieder splitten.
Ja, Bash...
Bash ist halt ein bisschen pepeger in der Richtung, aber muss ich halt dran gewöhnen mal.
Wenn man ne Zeit lang mit Linux unterwegs ist, denkt man so ein bisschen in Bash-Logik schon.
Okay.
Dann...
Wollen wir das so überhaupt ausgeben?
Ich hab ne Idee.
Wir machen nochmal nen If.
Wir machen nochmal nen If.
Und gucken jetzt, ob Target...
Ob Target leer ist.
Weil Target ist...
Wobei, ja...
Ist...
Ja, doch.
Target ist leer.
Klar, muss ja leer sein.
Wenn er nix...
Wenn er nix...
Wenn...
Wenn die Backends...
Wenn die Backends down sind, dann ist es leer.
Ja?
Dann...
Dann...
Dann machen wir das so.
Wir gucken...
Wir gucken, ob Target leer ist.
Wenn Target leer ist, dann geben wir aus...
Ähm...
No valid backend found.
Und wenn es...
Nicht leer ist...
Dann...
Geben wir aus...
Block...
Und...
Backend.
So...
Nenn das einfach jetzt nicht Target, sondern Backend.
Ja, weil ansonsten...
So...
So, funzt...
Funzt das jetzt schon mal.
Lasst uns mal checken.
Backend...
Backend 80...
80...
80...
Okay.
Aus.
81...
Ah...
8001 wird select.
Und jetzt...
Pass auf, jetzt mach ich mal beides aus.
Wie gehen denn eigentlich die Clients damit um, wenn die Session gekillt wird, weil das Backend sich wechselt?
Äh...
Die werden wahrscheinlich...
Äh...
Timeouten.
Vermutlich.
Wenn das...
Wenn das Stick...
Wobei, ich weiß es gar nicht.
Eine gute Frage.
Weil, werden die Timeouten?
Die machen ja immer neue Requests.
Ach...
Da...
Muss man mal gucken.
Ja, die machen neue Requests.
Der nächste Request geht dann halt dahin.
HTTP ist zustandslos.
Ich meine, die könnten natürlich eine bestehende TCP-Verbindung benutzen, um irgendwie über Websocket oder sowas.
Dann wird es wahrscheinlich abkacken.
Ja.
Oh ja.
Gut.
Dann Timeout und das Bauen neu auf.
Gut ist.
Aber ich meine, wenn das Backend ausgeschaltet wird, dann ist es halt...
Ist halt weg.
In dem Fall...
In dem Fall wird es halt...
Wird es halt aus...
Ausgeschaltet.
Müssen wir mal gucken.
Das ist ja nur so eine rudimentäre so Implementierung jetzt.
Kann man bestimmt noch verfeinern, wenn man das möchte.
Ja.
Das ist ein Backend.
So, jetzt schalten wir mal aus.
Mal gucken, was dann passiert.
So.
No valid Backend Found.
Guck mal.
Unser Custom Health Check.
Der ist gar nicht mal so kacke.
Schalten wir mal wieder eins ein.
Schalten wir mal das hier ein.
Ups.
Ja.
Und schalten wir mal das hier ein.
Jetzt hatten wir den anderen.
Zack.
Okay.
Ich muss sagen, Leute.
Das funktioniert wirklich erstaunlich gut.
Das hätte ich jetzt gar nicht so gedacht.
Das funktioniert gar nicht mal so schlecht.
So.
Und jetzt?
Jetzt ist die Frage.
Moment.
Moment.
Wir haben, glaube ich, eine wichtige Sache noch vergessen.
Das ist ja alles nur Textausgabe bisher.
Wir müssen jetzt noch gucken, ob das ausgewählte Backend das Backend ist, was von HAproxy gerade
gecheckt wird.
Wenn es das ist, dann soll es aktiv sein.
Wenn es das nicht ist, dann nicht.
Ich glaube, anhand des Return Codes kann man sagen, ob HAproxy das anschalten soll oder nicht.
Hier.
Guck mal.
Hier.
Hier.
Hier steht irgendwas.
Exit Code 0 for a healthy Server.
Okay.
Also, machen wir mal irgendwie.
Ich weiß noch nicht, was ich für eine Bedingung brauche.
If true.
Also, if was auch immer dann da reinkommt.
So.
Und dann sagen wir so was wie hier Exit 0.
Und dann so beides.
Und dann so beides.
Können wir doch eigentlich viel.
Warte mal.
Wie macht man das in Bash jetzt schön?
Wie würde man das?
Also, ich meine, wir könnten so schreiben.
Oder 255.
Aber das kann man doch in Bash bestimmt.
Das kann man doch in Bash bestimmt kurzer und knackiger schreiben, oder?
In irgendeiner anderen Programmiersprache würde ich jetzt so was machen.
Hier irgendwie Exit.
Und ja, hier keine Ahnung.
Bedingungen.
Bedingungen.
So irgendwie.
Null.
Aber ich glaube, das geht in Bash nicht.
Bash.
Ternary Operator.
Hat Bash so was?
Ja, Andreas.
Das ist gar nicht schlecht.
Dieses Short.
Diese.
If.
If.
Kurz.
Moment.
Bash hat so was?
Wirklich?
Wait a minute.
Bash hat so was?
Ach.
Only with numbers.
Okay.
Okay.
Okay.
Okay.
Okay.
Okay.
Das, Haus.
Okay.
Das.
Okay.
Okay.
Okay.
Okay.
Ja.
Ja, das, da wäre ich auch drauf gekommen.
Wir können auch einfach ein If da stehen lassen und gut ist.
Jetzt ist die Frage, was wir eigentlich checken wollen.
Wir wollen checken, ob.
Lasst uns das mal doch in If schreiben.
Wir wollen checken, ob Dollar Backend, gleich, gleich, ich weiß, dass das so in Bash nicht
geht.
Checkhost und Checkport.
Checkhost.
Checkport.
Warte mal.
Bash String
Compare.
Auto Compare Strings in Bash.
Das ist nämlich, glaube ich, ein einfaches
Gleich.
Ach, mit Bash Magic.
Doppelten, doppelten Klammern.
Ja, Bash ist auch nicht die schönste Sprache, ne?
Chat, was sagt ihr? Was findet ihr
optisch hübscher?
Bash oder Rust?
Ich weiß, es ist eine schwierige Wahl.
Ist beides ziemlich hässlich.
So, wie geht das jetzt weiter?
Check if...
Ach, ne. Doch nur ein...
Moment.
Ey, zweifach mit
Bash, aber uff, ja.
Finde ich auch.
Okay, dann stimmt das sogar, was ich hier
fabriziert hab.
Okay.
Und was sagt ihr? Wir müssen das
eindampfen.
Wir müssen das eindampfen
in One-Liner, weil
Bash...
Äh...
Ähm...
Observer 2 ist down?
Warum?
Ich bin verwirrt, Leute.
Ja.
Ach, weil der niedriger ist.
Ja, das ist ja auch korrekt.
Das ist ja auch richtig so.
Das ist ja auch richtig so.
Das ist ja der Held.
Genau deswegen mach ich das ja auch.
Haha, lol.
Wunderbar. Weißt du, der ganze Sinn
der Geschichte ist, dass ein Server
down ist, aber nein, das ist verwundert sein.
Ja.
Das ist genau das, was ich haben wollte, ja.
Ja.
Ja, das funktioniert. Das funktioniert tatsächlich.
Guck mal. Jetzt machen wir den aus.
Moment, ich hab den falschen...
falschen ausgeschaltet.
Jetzt, jetzt, jetzt, jetzt machen wir
den hier aus.
Und jetzt
switcht das rüber. So.
Guck, jetzt kommen meine Requests
hier raus. Oder auch nicht.
Oh. Ach, Moment. Ich muss
auf 80, 80 gehen. Ist ja auch falsch.
Jetzt kommen meine Requests
hier raus. Jetzt
kommen meine Requests nirgendwo raus.
Und jetzt kommen meine Requests
auf 8000 raus.
Naja. So, jetzt kommen wir auf Request 8000.
So. Und wenn ich den hier anmache,
dann kommen
meine Requests oben raus.
Nachdem der wieder gecheckt hat, dass der Server wieder da ist.
So.
Jetzt mach ich den unteren an
und dann sollten sie wieder auf die
8000 switchen.
Ups.
Ja, guck.
Und?
Ja, das funktioniert doch eigentlich erstaunlich
gut, oder?
Das einzige Ding, wo ich mir nicht ganz sicher bin, ist,
wie es mit bestehenden
TCP-Verbindungen aussieht, wie ihr gefragt habt.
Beispielsweise WebSockets oder sowas.
Das wird halt nicht funktionieren.
Dann
wird das Backend down genommen und
ist halt
weg.
Die fliegen weg im Endeffekt.
Da muss halt neu
aufgebaut werden.
Was ich okay finde.
Du könntest über
irgendwelche Skript-Sachen das
also über Sokka die Befehle
das Wait anpassen.
Ja.
Ja. Warum?
Du meinst, dass nicht dasteht, dass
der down ist, sondern dass der
quasi
einer kriegt Wait
200 und der andere 0 oder sowas.
Ja, das ist, das ist,
das wäre, das wäre
eine Idee.
Wobei ich sagen muss,
das funktioniert
jetzt ja eigentlich auch relativ gut.
Ja.
Also insofern,
ich tendiere, ich meine,
es ist doof, dass in der Ausgabe
drin steht, einer ist down, obwohl der noch
da ist, ja.
Aber was willst du machen?
Ich glaube, Wait anpassen über den Health-Check
ist nicht drinne.
Dann werden die Connections nicht
gekillt und die neuen Verbindungen gehen auf dein
gewünschtes Backend, ja.
Warte mal. Ja, das ist
eine gute Idee, das kriege ich heute, aber
das nehme ich auf die Reihe. Das ist eine gute
Idee. Ich kriege dafür
bestimmt keine 50k.
Bei mir auf der Arbeit wollen sie sich eine super teure
Loadbalancer-Appliance für sowas kaufen.
Und ich habe gesagt, das kann man auch mit
HA-Proxy machen und 3-Zeilen-Bash-Skript.
Was ich
was im Endeffekt, ja,
so
Proof-of-Concept-mäßig bewiesen ist,
dass das funktioniert, ne.
Ihr seht, der geht immer nur auf unten
rechts, meine Requests.
Okay.
Ja, dann würde ich das aber nicht als Health-Check
oder? Dann würde ich das nicht als
Health-Check machen, sondern als
irgendwas,
was außerhalb vom HA-Proxy
läuft. Was programmierst
du gerade? Ein Custom
Health-Check für HA-Proxy.
Der auch besser funktioniert, als ich es mir vorgestellt
habe, ehrlich gesagt. Das ist wichtig für
Stonks, da gebe ich dir recht. So muss das, so muss
das sein. So, jetzt müssen wir noch mal was anpassen an der
HA-Proxy-Content. Und zwar, wie kann man denn den
Intervall hochstellen?
HA-Proxy Check-Intervall, HA-Proxy Aloha.
Was? Moment, hatten wir nicht die HA-Proxy-Docs?
Okay.
Server. Server and
Default-Server-Options. Server.
Ja, wie, wie, Moment.
Check. Server.
Check.
Health-Check. Oh, ich bin zu dumm
in die HA-Proxy.
Wie macht man denn, wie macht man denn
Health-Check?
HA-Proxy
Check-Intervall. Da muss man
doch setzen können.
Stack. Stack-Overflow.
Ja.
Default-HA-Proxy-Option. Fallback ist 3.
Error-Limit.
Tune Health-Check-Intervall.
Was? Inter, Faster-Inter, Down-Inter.
What?
Inter-Parameter. Setze Intervall between two Health-Checks.
Milliseconds. Das übertreibt man nicht, Alter.
In Milliseconds, also eine Sekunde, eine Sekunde reicht
mir, da muss ich halt 1000 Milliseconds machen.
Was? Just as with every time-based parameter,
they can be answered in any other explicit
you immer. Ah, man kann auch Sekunden
hinschreiben, okay. Also sprich,
ich schreibe jetzt da hinten, was denn?
Inter, was haben wir, 5 Sekunden
oder wie? Inter.
Ja, viel besser, viel besser.
Ja, gut.
Gefällt mir. Das finde ich
äußerst nice, wie gut das
funktioniert. Ne, das ist, das ist
nicht, das ist ein anderer Hersteller.
Ist doch jetzt höher als Default, ja.
Ist es. Will ich auch.
Ich will es ja auch höher als Default.
5 Sekunden reicht dicker aus.
So schnell synchronisieren
die sich nicht.
Muss ja nicht so rumspammen.
Guck mal, das Log ist auch, es eskaliert
auch komplett, Alter.
Ähm.
Guck mal, HA-Proxy
Log, Log
Directory, wie kann man,
ja, was?
HA-Proxy
doesn't support
Logging to Files?
What? Ach, der kann nur
syslog. Der kann echt nur
syslog? Ja, ich mein, ich kann
den Output in eine Logdatei pipen.
Ja, das ist mir auch klar.
Aber schön ist was anderes.
Also, also
mein, das, ich mein,
so schlau, ups, so schlau wär ich
jetzt auch gewesen.
Ja.
So was machen können.
Guck, jetzt haben wir, haben wir ein Logfile.
Ganz schön spammiges Logfile.
Das gefällt mir aber gut.
Also, Leute, mal ganz im Ernst,
für so übers Knie gebrochene
Lösung, ist das doch gar
net übel. Ich glaub,
das zeigt doch
erstmal, dass man keine
50.000 Euro teure Loadbalancer braucht,
um sowas zu machen, oder?
Weil, also ich mein,
was haben die eigentlich auf ihrer
krassen Loadbalancer Appliance laufen?
Dann 60 Zeilen
Bash-Skript oder was?
Ein bisschen mehr muss das ja schon sein.
Ja, okay, sie haben ein schönes
React-Webinterface gebaut.
Drumherum.
Um 30 Zeilen Bash-Skript.
Ein bisschen advancer wird's
schon sein. Ja, okay.
So schön ist es nicht,
hier, dass man die HAProxy-Konf-Sicht
rausgribbt und sowas. Aber trotzdem,
mein, es funktioniert.
Warum nicht Caddy ohne Nginx?
Weil man mit HAProxy schön
rumbasteln kann, was Custom-Checks
und sowas angeht.
Loadbalancer is written in Rust blazingly fast.
Bestimmt, bestimmt.
Du hast recht, du hast recht.
Aber die Frage, die ich mir stelle,
warum?
Ich mein, das läuft ja auf dem normalen Lino.
Und selbst, wenn du es im Docker-Container laufen lässt,
installierst du dir halt Curl.
Ich mein, und?
Also,
ich verstehe, was du meinst.
Man könnte es super minimalistisch
machen.
Man könnte auch, man könnte sich da auch
irgendwas in Go basteln oder
in Rust oder in .NET
oder in Java oder so, was das
wahrscheinlich
ähnlich macht.
Pusht du das? Hab so viel
verpasst. Ähm, es gibt
nicht viel zu pushen. Ich hab nen Custom-Health-Check
für HAProxy gebaut. Das war's.
Mehr hat er nicht.
Und ich, also,
das, was
der Strafo,
was Strafo vorhin geschrieben hat,
das würde ich auch gern nochmal ausprobieren.
Dass man
ein Programm nebenbei laufen lässt
und die,
das Wait, also was er,
was er, wann er, welches
Backend bevorzugt.
Auf der anderen Seite, ich glaube
fast, dass es besser wäre,
so, also, dass es besser
ist, wie
ich das mache, weil
der soll ruhig
die Verbindung abbrechen.
Wenn er nämlich ne langlaufende TCP-Verbindung
hat und auf
alten outdateden Server gelandet
ist, dann wird die ja quasi nie
abgebaut. Dann ist besser,
die wird gekappt und die
andere Seite verbindet sich neu.
Aber eine Sache, die man
noch einbauen müsste hier,
ja, eine Sache sollte man noch einbauen,
nicht,
sag ich oft, nicht zu oft
switchen.
Ja, das wäre tatsächlich ne Sache, die man
noch einbauen müsste, weil
stellt euch mal vor,
beide Server sind ganz
knapp, sind ganz
knapp, gleich auf
und switchen
quasi im Sekundentakt,
dann würde der Health-Check
permanent die Verbindung, das wäre dann
eher nicht so geil, ja.
Das ist ja gerade das tolle an der Blockchain,
da geht nichts verloren. Im Zweifelsfall
synchst du und dann ist er da.
Alle anderen Nodes,
von denen du synchst, haben die ja.
Also, nicht zu oft
switchen ist auf jeden Fall, wäre
auf jeden Fall nicht verkehrt. Also, man
könnte, man könnte zum Beispiel sich noch
merken, wann das letzte Mal
geswitcht wurde und
für fünf Minuten nicht mal
switchen so. Das, das, das könnte
man machen, wobei er dann auch nicht
erkennt, ob das down ist. Da muss
ich mir nochmal Gedanken drüber machen,
aber, ja, sagen wir mal so, als
Proof of Concept finde ich das eigentlich ganz gut.
Du kannst ja einen zweistufigen
Check einbauen, ist Port offen? Ja, nein.
Ach so, du meinst, dass ich
prinzipiell abfackeln kann,
falls der, falls
ich unter fünf Minuten bin
und der wirklich ausfällt, dass er
dann doch auf den geht, der noch da ist.
Ja. Ja,
das, das könnte man machen.
Das muss ich mir nochmal durch den Kopf gehen lassen,
wie ich das am besten mache. Aber
das, das gefällt mir erstmal.
Und wisst ihr, was das coole ist? Wenn man jetzt,
wenn man irgendwie
fünf Server hat oder so,
könnte man, könnte man theoretisch auch sagen,
aber wie gesagt, mit dem Lua,
das finde ich richtig cool mit dem
Lua Plugin, ja, ja, ja.
Ich würde das wahrscheinlich in Lua auch
hinkriegen. Ich meine, meine Terminal
Config ist in Lua, ja.
Ist zwar nicht, ist zwar nicht die,
ist zwar nicht das schönste Lua, aber
meine Terminal Config ist in Lua.
So, so,
so ein bisschen was in Lua kriege ich zur Not hin.
Selbst, selbst
irgendein Lua Plugin gebaut.
Ja, da hatten wir hier den,
hier das, hier das Beispiel.
Also das Beispiel hier von denen ist ziemlich
gut. Hier, Backend with
Least, Least Connection. Hier müsste ich halt
in Lua den,
genau, hier kriegst du auch alle
Backend, Backend Namen und Server Namen.
Und hier müsste ich dann den
AP, die, die, die AP Abfrage
drin machen.
AProxy Lua.
Kann man da Curl benutzen drin?
Dynamic Backend Selection
with Lua Script. Oh, jetzt,
jetzt aber advanced
hier. Local
Function Pick Backend.
Ja,
genau, sowas.
If Backend Name Master, then
Filter out, Build in Backend
Name. Ja.
Ja, das ist natürlich cool. Dann hast
du, dann hast du Zugriff auf den
internen Status halt von, von
HA-Proxy. Ja, das
gefällt mir. Das, das, das bookmarke ich
mir mal.
Das finde ich nice.
Und, wo, ach hier.
TCP Connect.
Moment, Moment.
Der macht, der macht HTTP
von Hand, sehe ich das richtig
in seinem, oje.
Und
JSON Parser dann auch von Hand, oder wie?
Kann man da irgendwelche Lua Libs laden
vielleicht?
Lua HA-Proxy
JSON Parser. Da kann man
wahrscheinlich auch Curl aufrufen, ja.
Was?
Lua HTTP Client
Library for HA-Proxy. Alter,
was es nicht alles gibt.
Mann. Ich geb dir Header,
Alter. Was es
nicht alles gibt, Alter. Lua, Lua
HA-Proxy
Libraries. Meine Güte.
Ja, also das ist, das ist ne gute
Idee, das da drüber
zu machen. Das wäre äußerst
Business Enterprise.
Macht er das hier mit Wait?
Oder wie macht er das eigentlich?
Nee, der setzt nicht die, der
macht das, was ich mache.
Nur mit Lua.
Ja, weil wenn er das gleich mit Lua macht, kann ich's auch nicht machen.
Wenn er mit dem Bash-Script macht.
Also, ich werd mir nochmal Gedanken drüber machen.
Wie ich das, wie ich das am besten bauen kann.
Noch, dass der nicht, dass der
nicht zu oft, zu oft
switcht. Und dann
würde ich sagen, Chat,
das war heute kurz und knackig,
aber wir haben was auf die Reihe gekriegt.
Ich muss jeden 20 Minuten pennen.
Dann geh ich jetzt schon auf.
Und wir sehen uns morgen oder die Tage.
Macht's gut, bis denn. See you.
