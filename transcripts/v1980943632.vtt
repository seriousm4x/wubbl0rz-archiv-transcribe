WEBVTT

00:48.690 --> 01:00.560
Was ist mit meinem Startmenü?

01:04.080 --> 01:05.780
Leute, mein Startmenü ist kaputt.

01:07.400 --> 01:08.800
Mein Startmenü ist broken.

01:10.460 --> 01:11.860
Wie kriege ich das wieder gefixt?

01:18.030 --> 01:19.450
Alter, mein Startmenü ist kaputt.

01:21.960 --> 01:22.440
Keck, wait.

01:28.380 --> 01:29.500
Mach schon mal die VM an.

01:29.500 --> 01:29.980
Vielleicht

01:29.980 --> 01:33.720
fixt sich das gleich von allein.

01:35.160 --> 01:36.120
Hoffe ich mal.

01:36.120 --> 01:40.000
Mein fucking Startmenü ist kaputt, man.

01:46.520 --> 01:46.760
Chat,

01:46.840 --> 01:48.280
habt ihr schon mal ein kaputtes Startmenü?

01:48.420 --> 01:50.240
Dann mach ich mal ein bisschen was entspannteres machen.

02:01.040 --> 02:02.540
Okay, Leute, mein Startmenü ist kaputt.

02:02.600 --> 02:04.800
Ich kann nix mal starten und nix mal reintippen.

02:07.490 --> 02:08.450
Ja, unter Linux

02:08.450 --> 02:10.550
ist das kein Problem. Unter Linux geht das einfach.

02:10.750 --> 02:10.850
Guck.

02:13.410 --> 02:14.670
It's, it's.

02:15.830 --> 02:16.770
Unter Linux wird es einfach

02:16.770 --> 02:17.310
funktionieren.

02:18.390 --> 02:20.350
Aber wie kriege ich das jetzt wieder gefixt?

02:20.450 --> 02:22.030
Go Wizard, danke schön für den Sub.

02:22.370 --> 02:24.470
Ein bisschen Go machen. Alter, was ist mit

02:24.470 --> 02:26.270
meinem Startmenü los? Ein bisschen Go machen

02:26.270 --> 02:27.690
wir heute auch. Okay.

02:28.370 --> 02:29.190
Task Manager.

02:30.150 --> 02:32.390
Kann man Explorer irgendwie abschießen oder so?

02:33.330 --> 02:34.270
Okay, Explorer ist

02:34.270 --> 02:37.530
weg. Hier.

02:38.130 --> 02:39.170
YOLO Inject.

02:40.270 --> 02:42.090
Klingt, als hätte ich irgendein Virus. Ist es aber nicht.

02:42.750 --> 02:44.010
Das ist so ein Maushighlighter.

02:49.060 --> 02:49.320
Hey,

02:49.320 --> 02:50.460
es geht wieder. Nice.

02:51.140 --> 02:51.280
Ja.

02:55.640 --> 02:57.940
Super. Gut, dass es im Hintergrund läuft.

02:59.180 --> 02:59.540
Aber.

03:02.180 --> 03:16.080
Guck hier. YOLO Inject.

03:20.640 --> 03:21.760
Das gehört zu

03:21.760 --> 03:23.180
YOLO Maus.

03:24.340 --> 03:25.720
Damit kann man, damit kann man

03:25.720 --> 03:27.520
seinen Mauszeiger beispielsweise

03:27.520 --> 03:29.820
in allen MMOs, wo das

03:29.820 --> 03:32.020
heute viel zu klein ist, alles in der Mauszeiger zu klein

03:32.020 --> 03:33.800
groß machen und rot färben und sowas.

03:34.480 --> 03:35.260
Ganz praktisch.

03:37.380 --> 03:37.840
Okay, mein

03:37.840 --> 03:39.980
Startmenü funzt wieder. Das ist schon mal nice.

03:41.220 --> 03:41.860
Jetzt ist es auch

03:41.860 --> 03:43.880
blazingly fast, so wie das

03:43.880 --> 03:44.760
heute sein muss.

03:55.560 --> 03:55.920
Okay.

03:56.220 --> 03:57.640
Wir machen mal Package-Updates in der

03:57.640 --> 03:59.940
VRM. Dann zeige ich euch, was wir heute machen.

04:00.040 --> 04:01.080
Also wir machen dort weiter.

04:01.940 --> 04:03.660
Was will der denn? Wo wir das letzte Mal aufgehört haben.

04:04.220 --> 04:06.060
Was möchte der hier denn jetzt? FFM-Pack.

04:06.120 --> 04:07.600
Ja, okay. Gib ihm. Jawohl.

04:07.780 --> 04:09.020
Halbes Internet runterladen.

04:10.200 --> 04:11.400
Ach, Qt 6 ist raus.

04:11.840 --> 04:14.180
Ich habe meine Zeit lang wirklich sehr interessiert

04:14.180 --> 04:15.420
und fand das sehr spannend,

04:15.980 --> 04:17.900
die neuen Qt-Versionen verfolgt, aber ich habe

04:17.900 --> 04:19.160
schon ewig nicht mehr reingeguckt.

04:19.640 --> 04:21.740
Die hatten tatsächlich jede Version irgendwas Cooles drin,

04:21.860 --> 04:23.280
auf was man sich freuen konnte.

04:23.780 --> 04:25.600
Ich frage mich aber, wie groß

04:25.600 --> 04:27.560
die Verbreitung da in der aktuellen Zeit

04:27.560 --> 04:28.000
noch ist.

04:29.260 --> 04:31.920
Ich meine, von allen Cross-Plattform-Frameworks

04:31.920 --> 04:33.340
auf dem Desktop wird das

04:33.340 --> 04:35.160
wahrscheinlich eines der weitesten

04:35.160 --> 04:36.680
verbreitetsten sein.

04:37.980 --> 04:39.520
Jetzt bei Elektron und so außen

04:39.520 --> 04:41.440
vor, aber wie weit die

04:41.440 --> 04:43.360
Verbreitung insgesamt ist, weiß nicht.

04:43.680 --> 04:45.060
Weil das ist halt hauptsächlich C++.

04:45.540 --> 04:47.320
Man kann es aber ein bisschen peisend machen, aber letztendlich

04:47.320 --> 04:49.440
kommt es bei Qt und C++ früher oder

04:49.440 --> 04:51.380
später nicht rum und C++ ist halt einfach

04:51.380 --> 04:52.280
der Sack.

04:53.920 --> 04:55.380
Schon irgendwas Spannendes

04:55.600 --> 04:57.040
von Black Friday gefunden.

04:57.540 --> 04:59.700
Ich habe ehrlich gesagt auch gar nicht groß geguckt.

05:00.360 --> 05:04.330
Ich habe, ich habe mal nach

05:04.330 --> 05:06.550
SSDs geguckt, weil SSDs kann man nie

05:06.570 --> 05:07.330
nie genug haben.

05:07.330 --> 05:07.590
Ja,

05:08.930 --> 05:11.290
ach, guck mal, Inhalationsgerät

05:11.310 --> 05:13.370
Bäm, wie es

05:13.370 --> 05:15.650
mir einfach, wie es mir einfach Copium-Gerät

05:15.650 --> 05:16.550
vorschlägt hier.

05:20.540 --> 05:22.800
Ja, ja, die Kinder sind voll glücklich,

05:22.820 --> 05:24.260
wenn ihnen die Mama das aufsetzt.

05:26.360 --> 05:27.280
Copium-Time.

05:34.650 --> 05:36.570
Ansonsten es gibt halt nur Schrott, das gucken wir.

05:36.850 --> 05:38.970
Vielleicht, vielleicht gucke ich mir

05:38.970 --> 05:39.130
nachher mal.

05:39.130 --> 05:39.270
Vielleicht, vielleicht gucke ich mir nachher mal.

05:39.290 --> 05:42.150
Mal ne Runde an, wenn ich, wenn ich keinen Bock mehr auf Rast hab,

05:42.150 --> 05:43.470
wenn mich Rast zu sehr aufregt.

05:44.230 --> 05:45.110
Woow, woow, woow, woow.

05:45.110 --> 05:46.910
Ganz ruhig, ganz ruhig.

05:49.070 --> 05:50.950
Was für ein Smartphone verwendest du eigentlich?

05:51.330 --> 05:51.910
Ein iPhone.

05:55.320 --> 05:57.440
Also, um genau zu sein, zwei iPhones.

05:58.400 --> 05:59.360
Ein iPhone

05:59.360 --> 06:01.660
14, ist 15

06:01.660 --> 06:02.220
das aktuelle?

06:04.280 --> 06:05.520
Dann ist, ist, also

06:05.520 --> 06:07.400
wenn 15 das ganz aktuelle Top, also

06:07.400 --> 06:09.340
der erst letztens releast ist, dann hab ich ein iPhone

06:09.340 --> 06:11.500
14 Pro, aber nicht Pro Max,

06:11.500 --> 06:18.520
weil mir das zu groß ist das mit 120 hertz display und dann habe ich von der firma habe

06:18.520 --> 06:22.960
ich noch ein iphone 12 aber benutzen tue ich eigentlich fast ausschließlich wenn ich was

06:22.960 --> 06:32.020
mache außer ich muss für die firma irgendwas gucken das iphone 14 wir haben erstaunlich viel

06:32.020 --> 06:49.140
apple zeug wir haben drei ipads dreieinhalb iphones im einsatz hat zwei personen 0w aber

06:49.140 --> 06:54.420
android-geräte habe ich auch noch ein paar ich sage halt immer es ist sinnvoll das zu

06:54.420 --> 07:02.520
verwenden wo das jeweilige system seine stärken hat ganz ehrlich wenn das iphone

07:02.520 --> 07:06.580
2 11 gut funktioniert und wie schnell genug ist warum feature

07:06.580 --> 07:06.700
management

07:06.720 --> 07:12.600
tut sich doch die letzten jahre über eh nicht viel guck mal ich mein wenn das meiste worüber

07:12.600 --> 07:17.580
du ausflippen kannst irgendein komischer neuer side button ist das sagt doch schon mal alles

07:17.580 --> 07:23.320
daraus wie sinnvoll das upgrade ist ich meine ich hätte den auch gern den neuen action button aber

07:23.320 --> 07:35.460
es ist wirklich nicht wert da irgendwie 1000 plus euro auszugeben und 70% batterie ja gut wenn die

07:35.460 --> 07:43.140
batterie nachlässt aber muss das ding jeden tag aufladen insofern ob das jetzt bei 20 prozent

07:43.140 --> 07:57.700
oder 30 prozent neu auslässt mann macht ja auch kein großer unterschied so alles Faculty silvier

07:57.700 --> 08:02.910
renault

08:02.910 --> 08:09.180
sozusagen

08:09.180 --> 08:10.620
interaktion

08:10.620 --> 08:12.820
aus

08:12.820 --> 08:20.540
hacken

08:20.540 --> 08:26.960
zeug

08:26.960 --> 08:28.060
regular

08:28.060 --> 08:28.960
zeska

08:28.960 --> 08:30.060
raum

08:30.060 --> 08:30.980
3 2 1

08:30.980 --> 08:31.020
uzzit

08:31.060 --> 08:36.340
wie mein i3 und es wird mir auf den keks gehen weil es kein i3 ist also insofern macht für mich

08:36.340 --> 08:43.660
wenig sinn ja das kommt noch dazu wobei wobei das ja nun wirklich irgendwo noch gewöhnungs aber das

08:43.660 --> 08:54.460
würde mir auch auf den keks aber das ist das ist gewöhnungs wenn du einwendungszweck für hast warum

08:54.460 --> 09:00.880
nicht weil ich muss ich muss kann ein bisschen husten weil also keine keine sorge nicht monka

09:00.880 --> 09:07.060
corona oder sowas in der richtung sondern ich habe hier direkt davor gerade noch meine runde

09:07.060 --> 09:14.380
auf dem fahrrad gefahren also nicht real life sondern trainer daheim spiel zu spät jetzt gewesen

09:14.380 --> 09:19.360
im dunklen kein bock außerdem ist mein fahrrad immer noch kaputt das kann ich fahren gerade die

09:19.360 --> 09:31.200
versicherung hat übrigens immer noch nicht bezahlt das fahrrad ich habe zum ersten mal versucht hat

09:31.200 --> 09:38.100
er jetzt eigentlich alles geupdatet ich habe zum ersten mal versucht auf zwift mit den 2 watt pro

09:38.100 --> 09:41.580
kilogramm mit der 2 watt pro kilogramm gruppe mit

09:41.580 --> 09:50.940
zu fahren da das ist echt gar nicht so ohne über 45 minuten für 50 minuten das ist ein das sind

09:50.940 --> 10:00.420
das sind absolute einsteigerwerte jeder kack newt ist auf dem fahrrad besser als ich aber ich habe

10:00.420 --> 10:08.340
angefangen mit mit ich glaube irgendwie 1,1 bis 1,5 watt pro kilogramm und habe sie letzten paar

10:08.340 --> 10:13.080
wochen richtig reingetreten jeden zweiten dritten tag da bin ich schon mal zwei wacht pro kilogramm

10:13.080 --> 10:14.280
über ein 2 watt pro kilogramm

10:14.560 --> 10:27.720
heißt bei mir auch durchgehend 45 minuten 180 watt also da geht was ein rechner spielt immer

10:27.720 --> 10:39.610
ab wenn ich wsl starte komischerweise ist erst seitdem ich meine ram vielleicht hast du kaputten

10:39.610 --> 10:49.150
ramsig erwischt also rechner abschmieren ist so ein ganz klassisches zeichen von ram error es

10:49.150 --> 10:57.190
gibt es gibt eigentlich zwei sachen cpu übertaktet und zu heiß und rahmenprobleme das sind so dick

10:57.190 --> 11:03.980
die klassiker schlechthin warum der rechner komplett abkackt nur wenn wsl statt das ist

11:03.980 --> 11:09.260
in der tat sehr merkwürdig da würde ich mir mal genauer die fehlermeldung angucken was er sagt

11:09.260 --> 11:15.980
ob man da irgendwie auf wsl hindeuten kann ich meine wsl startet in der vm was auch immer das

11:15.980 --> 11:20.480
sagt aber ich kenne mich nicht

11:20.780 --> 11:29.820
die syntax ist grauenhaft guck dir das an man hier grauenhafte syntax leute lul weh guckt euch

11:29.820 --> 11:34.760
guckt euch das hier an alter ich mein und das ist jetzt hier das ist noch hübsches das ist wirklich

11:34.760 --> 11:40.700
noch relativ hübsches rust was wir gemacht haben hier das geht deutlich schlimmer glaubt mir

11:40.700 --> 11:48.190
deutlich schlimmer ja also was ich mir überlegt habe für heute wir müssen gleich noch mal fünf

11:48.190 --> 11:54.050
minuten schwätzen bevor es richtig los geht aber ich zeige euch schon mal was heute ansteht

11:54.430 --> 12:16.200
und das ist ja auch schon mal so die kombination und ja da taktet sich dann runter aber gerade beim

12:16.200 --> 12:21.580
übertakten wenn die cpu auch an den maximalen werten kratzt wird es dann schnell instabil im

12:21.580 --> 12:28.360
vergleich zu wenn der auer um die ecke kommt mit flüssigstickstoff und das ding minus 150 grad ist

12:28.360 --> 12:32.200
was für ein trainer ich habe ich habe ein

12:32.520 --> 12:44.220
kicker core ohne ohne lüftung und ohne dieses hoch und runter fahrdingen einfach so ein ganz

12:44.220 --> 12:52.310
normal die meine dinger sind teuer genug das einzige was ich gemacht habe für mein setup

12:52.310 --> 12:59.310
hier daheim ist logischerweise mein fahrrad dran gemacht ja drauf drauf drauf gemacht also da muss

12:59.310 --> 13:05.430
man die kette drüber machen und habe das auf eine matte gestellt dass wenn ich schwitze dass ich nicht

13:05.690 --> 13:10.430
auf dem fußboden schwitze und ein handtuch hängt neben beim lenker das ist eigentlich mein

13:10.430 --> 13:18.290
gesamtes setup und zwölft habe ich auf dem ipad laufen was neben dran steht auf meinem lenker

13:18.290 --> 13:24.290
habe ich meinen iphone drauf das brauche ich da lasse ich ein bisschen musik laufen und die

13:24.290 --> 13:29.270
companion app um es besser sehen zu können aber meistens auch im youtube und musik und sowas laufen

13:29.270 --> 13:34.910
zu lassen einfach um zu gucken und mein garmin vorne drauf habe ich auch gepaart mit dem mit dem

13:35.690 --> 13:41.090
app oder schwitzt fahre ich hin und dann kann ich nämlich für die app aufzeichnen weiß ich

13:41.090 --> 13:47.170
gefahren bin und ich finde die an sich auf dem garmin viel angenehmer als auf der companion

13:47.170 --> 13:52.870
app oder in svt selbst zumal man bei garmen mittlerweile ziemlich gut gibt es ein indoor

13:52.870 --> 14:04.120
cycling profil und wenn man den gepaart hat mit seinem trainer ist es eigentlich recht

14:04.120 --> 14:09.060
also windows windows support bin ich echt überfragt als freak danke für den sub

14:09.060 --> 14:10.360
power

14:10.360 --> 14:11.360
subscription

14:11.360 --> 14:29.470
kann ich nur sagen sehr sehr und und moment ja also ich habe schon mal ein bisschen vorgebastelt

14:29.470 --> 14:40.590
also ich habe das klonen uns das repo jetzt von von schritt ab nur limit xo danke für den

14:40.590 --> 14:45.450
sub ich habe schon ein bisschen was vorgebastelt im prinzip ist es das gleiche was wir auch gebaut

14:45.450 --> 14:51.870
haben nur ich habe ich habe mir das folgendermaßen überlegt bevor wir heute mit rust anfangen und es

14:51.870 --> 14:56.610
funktioniert irgendwas nicht und ich habe gar keine ahnung wie ich am besten mache habe ich

14:56.610 --> 15:03.870
die original web rtc library genommen und das ganze kurz in go gebaut und wir bauen quasi das

15:03.870 --> 15:08.450
was ich in go gebaut habe nach in rust dann muss ich nicht so viel überlegen wie man es jetzt am

15:08.450 --> 15:16.580
besten macht sondern kann mich hauptsächlich auf auf rast geduld konzentrieren deswegen wenn wir

15:16.580 --> 15:17.640
einfach mal den ganzen camp lösen

15:17.660 --> 15:32.530
dem was letzte gemalt wobei kommt wir löschen den nicht wir wir benennen den mal um und jetzt

15:32.530 --> 15:38.050
klären wir das repo das übrigens public das könnt ihr auch klonen aber ich glaube nicht

15:38.050 --> 15:49.710
dass dieses projekt irgendjemand was bringt der hat das auch letztens gemacht was ist das ja den

15:49.710 --> 15:57.250
den kenne ich gucke ich nicht regelmäßig aber sagt mir was sagt mir was ich überlege gerade was also

15:58.350 --> 16:04.900
Was sind so meine Lieblingsprogrammier-Channels so auf YouTube?

16:05.300 --> 16:07.400
Also .NET gucke ich Nick Chapsas gerne.

16:08.300 --> 16:10.120
Da merkst du auch, dass der Erfahrung hat.

16:10.500 --> 16:13.160
Auch wenn er mir teilweise ein bisschen zu viel benchmarkt.

16:13.440 --> 16:17.780
Der hat ja teilweise Zeiten gehabt, da war jedes zweite Video, ich benchmarke jenes und ich benchmarke das.

16:18.980 --> 16:25.560
Dann gucke ich mir gerne die NDC-Konferenztalks an, wenn denn mal was Gescheites dabei ist.

16:25.560 --> 16:35.500
In letzter Zeit war das oftmals der hundertste Aufguss vom gleichen Talk oder irgendwas, was mich, zumindest wenn es um Technik-Themen geht, echt nicht interessiert.

16:39.910 --> 16:45.970
Und ansonsten, ich habe saumäßig viele subscribed und gucke.

16:47.970 --> 16:54.950
Ich würde mal fast sagen, ich kenne die meisten Programmier-Influencer-Channels, Software-Entwicklung-Sachen auf YouTube.

16:55.550 --> 16:58.170
Also deutschsprachig und vor allem englischsprachig.

17:02.790 --> 17:06.870
Mir fallen jetzt aber so spontan, wenn ihr den Namen sagt, kann ich euch direkt sagen, ob ich den kenne oder nicht.

17:07.270 --> 17:10.250
Mir fallen jetzt aber so aus dem Kopf gar nicht mal so viele ein.

17:13.370 --> 17:15.050
Ein paar JavaScript-Leute gucke ich noch.

17:15.050 --> 17:19.670
Wen ich auch gerne gucke, ist dieser CSS-Wizard-Typ.

17:19.730 --> 17:24.050
Der heißt nicht CSS-Wizard, aber der macht immer Magic mit CSS.

17:24.630 --> 17:26.250
Kevin irgendwas heißt er, glaube ich.

17:28.350 --> 17:30.170
Den gucke ich teilweise ganz gern.

17:30.530 --> 17:31.950
Da lernt man neues CSS-Zeug.

17:35.520 --> 17:37.060
Ich weiß nicht, ja, kann sein.

17:37.980 --> 17:47.000
Wen ich auch immer gerne geguckt habe, ist Academia Mind oder so früher, aber die machen wenig Videos in letzter Zeit.

17:47.480 --> 17:51.420
Und wenn dann über Angular, und Angular ist halt wirklich Massive Weird Champ.

17:53.160 --> 17:55.600
Also, nein, nein, nein, den meine ich nicht.

17:55.700 --> 17:59.520
Nein, ich meine englischsprachig und der CSS-Zeug macht.

18:00.600 --> 18:05.360
Aber CSS, YouTube, da gibt es nicht so viele, die CSS machen.

18:05.940 --> 18:07.600
Ist da Kevin? Hast du nicht Kevin?

18:07.980 --> 18:11.300
Ja, den hier, den hier, genau.

18:11.920 --> 18:13.220
Den gucke ich noch ganz gerne.

18:13.980 --> 18:20.120
Ich meine, du musst es erst mal schaffen, mit CSS-only 829.000 Abonnenten zu bekommen.

18:20.540 --> 18:23.660
Also, das ist wirklich der absolute CSS-Checker, was das angeht.

18:26.270 --> 18:28.730
Das gucke ich ganz gerne noch ab und zu.

18:28.830 --> 18:31.910
Da ist man so ein bisschen up-to-date, was Frontend-Shit angeht.

18:35.130 --> 18:37.090
Und ansonsten müsste ich jetzt mal auf meine Historie gucken.

18:39.340 --> 18:40.460
Ich gucke, ich gucke.

18:41.080 --> 18:42.500
Also, ich habe sehr viele Channels da.

18:42.620 --> 18:44.880
Schon mal on und off geguckt und auch abonniert.

18:44.980 --> 18:47.520
Aber ich gucke das immer so bei Bedarf.

18:47.780 --> 18:50.280
Ach so, wen ich auch gerne gucke, ist...

18:50.280 --> 18:52.160
Mein FireShip ist ja klar, den kennen wir alle.

18:52.820 --> 18:55.760
Den gucke ich auch ganz gerne, wenn es um Svelte geht.

19:01.130 --> 19:02.690
Der ist für Svelte-Sachen echt gut.

19:04.310 --> 19:05.310
Wenn auch nicht so wahnsinnig.

19:05.350 --> 19:08.150
Also, wenn ich sage, nicht so wahnsinnig hoher Output.

19:08.590 --> 19:10.930
Jeder Channel auf YouTube hat mehr Video-Output als ich.

19:19.030 --> 19:23.330
Ich, ganz ehrlich, ich glaube, er sagt bei Friends & Friends,

19:24.330 --> 19:26.810
aber es könnte auch genauso gut sagen,

19:26.990 --> 19:28.090
my Frontend-Friends.

19:28.430 --> 19:30.630
Aber ich glaube, der sagt, hello, my Friends & Friends.

19:39.100 --> 19:41.720
Der Scam-Journey ist vorbei, jetzt kann Bezos nicht ins Weltall.

19:42.820 --> 19:43.260
Sädge.

19:44.080 --> 19:49.240
Die Frage ist jetzt ja, ist es Sädge oder ist es Sätsch, wie das manche sagen.

19:49.640 --> 19:51.040
Ich bin ja eindeutig für Sädge.

19:54.570 --> 19:56.010
Sädge, genauso wie Bädge.

19:56.750 --> 19:59.230
Weil es heißt ja auch nicht Bädge oder so.

20:01.050 --> 20:02.950
Oder Soske-Agreedge.

20:04.570 --> 20:13.040
Aber du kannst jetzt eigentlich davon ausgehen,

20:13.380 --> 20:15.820
nachdem ich die letzten 13 Jahre nicht aufgehört habe,

20:16.240 --> 20:17.820
werde ich auch nicht einfach random aufhören,

20:17.900 --> 20:19.640
nur wenn mal irgendwie im Monat nichts hochgeladen wird.

20:19.860 --> 20:20.340
Oder zwei.

20:20.920 --> 20:22.760
Oder teilweise zweieinhalb, drei Monate.

20:26.330 --> 20:27.490
Ja, oder ansonsten.

20:27.910 --> 20:29.030
Es ist alles Mögliche.

20:29.250 --> 20:30.870
Ich gucke das halt immer bei Bedarf.

20:31.190 --> 20:33.310
Wenn ich gerade relativ viel Frontend-Zeug mache,

20:34.510 --> 20:36.610
dann gucke ich halt JavaScript, CSS-Channels.

20:37.070 --> 20:38.670
Wenn ich Microcontroller-Zeug mache,

20:38.670 --> 20:40.470
gucke ich manchmal halt auch die einen oder anderen

20:40.470 --> 20:40.670
Embedded-Channels.

20:41.350 --> 20:42.650
Da gibt es Sachen und C++-Sachen.

20:42.790 --> 20:43.990
Ja, leider, leider.

20:45.090 --> 20:49.250
Und ansonsten halt irgendwie auch .NET und Go und Python,

20:49.370 --> 20:50.870
je nachdem, was gerade angesagt ist.

20:52.530 --> 20:53.990
So, aber ich zeige euch mal,

20:54.010 --> 20:55.350
ich zeige euch mal, was wir heute versuchen.

20:56.090 --> 20:58.050
Ach so, hat jetzt eigentlich er erklärt,

20:58.330 --> 21:00.670
was das ist.

21:00.870 --> 21:03.290
Ach so, App von Go in Rust umgeschrieben.

21:03.490 --> 21:06.050
Ja, wobei meins, mein Beispiel, ziemlich klein ist.

21:06.130 --> 21:07.870
Und glücklicherweise gibt es quasi einen,

21:09.530 --> 21:11.330
also die Haupt-Library, die ich verwende in Go,

21:11.430 --> 21:16.350
die gibt es quasi auch neu implementiert in Rust

21:16.450 --> 21:17.450
von einem anderen Typ.

21:17.550 --> 21:20.050
Das heißt, ich hoffe, man kann es relativ ähnlich machen

21:20.150 --> 21:21.150
zu dem, wie es in Go ist.

21:21.250 --> 21:26.960
Ja, Fireship gucken wir alle.

21:27.060 --> 21:29.960
Ben Eater macht auch sehr nice Videos.

21:30.060 --> 21:33.960
Was ich auch noch cool finde, was ich in letzter Zeit öfters gucke,

21:34.060 --> 21:38.960
ist auch Simple Low-Code oder irgendwie sowas.

21:39.060 --> 21:41.960
Hat mit Low-Code-Plattformen überhaupt nichts zu tun.

21:42.060 --> 21:44.080
Der erzählt wirklich ultra abgefahrenen,

21:44.080 --> 21:47.980
so Low-Level-Kram.

21:48.080 --> 21:53.710
Weil, der erzählt dir dann sowas wie Virtual-Memory-Adress-Translation

21:53.810 --> 21:55.710
funktioniert im Kernel und so ganze...

21:55.810 --> 21:58.710
Wieso? Was ist mit Fireship?

21:58.810 --> 22:03.410
Habe ich irgendwas verpasst?

22:04.820 --> 22:07.720
Ich habe schon zwei, drei Wochen... War irgendwas?

22:07.820 --> 22:16.130
Ach so, siehste? Siehste, habe ich gar nicht mitgekriegt.

22:22.470 --> 22:26.370
Ja, ich mache meistens Sachen, auf die ich Bock habe.

22:26.470 --> 22:28.370
Und dann baue ich damit irgendwas.

22:28.470 --> 22:30.350
Und sobald es Probleme gibt,

22:30.450 --> 22:33.350
wird gegoogelt, bis es die Probleme nicht mehr gibt.

22:33.450 --> 22:35.350
Und gebastelt, gegoogelt und gebastelt.

22:35.450 --> 22:37.350
Dann lese ich Sachen, die andere programmiert haben,

22:37.450 --> 22:39.350
die andere gemacht haben.

22:39.450 --> 22:41.350
Und versuche das halt so hinzubekommen,

22:41.450 --> 22:43.350
wie es mir persönlich gefällt.

22:43.450 --> 22:45.350
Ihr wisst ja, ich habe da so einen ganz speziellen...

22:45.450 --> 22:48.350
Ich will nicht sagen Ordnungsanspruch.

22:48.450 --> 22:50.350
Das ist falsch, weil ich bin nicht ordentlich.

22:50.450 --> 22:53.350
Aber ich habe so eine ganz spezielle Vorstellung immer,

22:53.450 --> 22:57.350
wie Sachen halt eben gut implementiert und gut gemacht sind.

22:57.450 --> 22:58.350
Und so lange baue ich dann halt daran rum,

22:58.450 --> 23:00.250
wie es mir gefällt im Endeffekt.

23:00.450 --> 23:04.350
Und bis man halt eine Sache von neu bis ganz gut umgesetzt hat,

23:04.450 --> 23:07.350
kann das durchaus mal zwei, drei Monate dauern,

23:07.450 --> 23:08.350
bis man dann wirklich den Durchblick hat.

23:08.450 --> 23:10.350
Aber dann hat man den Durchblick.

23:10.450 --> 23:17.850
Und habe ich, glaube ich, schon mal geguckt,

23:17.950 --> 23:19.850
sagt mir so spontan nichts.

23:19.950 --> 23:22.850
Das sind die meisten Sachen, die mich persönlich interessieren.

23:22.950 --> 23:25.850
Deswegen gefällt mir das Lernen einfach.

23:25.950 --> 23:30.850
Ich glaube, ich war noch nie...

23:30.850 --> 23:32.850
Ich meine, ich sage nicht nie,

23:32.950 --> 23:35.850
aber nicht, dass ich mich jetzt so direkt erinnern könnte.

23:35.950 --> 23:37.850
Nick, danke für den Zap.

23:37.950 --> 23:41.850
...gezwungen, Zeug zu lernen,

23:41.950 --> 23:45.850
also tiefgreifend und langfristig,

23:45.950 --> 23:47.850
wo ich gar keinen Bock drauf hatte.

23:47.950 --> 23:49.850
Also an Technik-Sachen.

23:49.950 --> 23:51.850
Also wenn man jetzt von BWL-Zeug anfängt, dann schon.

23:51.950 --> 23:54.850
Es ist nicht so, als hätte ich Bock auf BWL-Sachen gehabt.

23:54.950 --> 23:57.850
Das Einzige, was wir mal gemacht haben, ist über Kobold.

23:57.950 --> 23:58.950
Da hatte ich eigentlich überhaupt keinen Bock drauf.

23:59.050 --> 24:00.750
Aber war dann trotzdem ganz lustig.

24:00.850 --> 24:02.850
Ja.

24:02.950 --> 24:13.090
Ich meine, was kommt als Nächstes dann?

24:13.190 --> 24:22.020
Fortran oder so?

24:22.120 --> 24:29.340
Also, Chatge, ich zeige euch jetzt mal...

24:29.440 --> 24:33.290
Wir machen das einfach hier auf.

24:33.390 --> 24:35.290
Ich glaube, da blickt man deutlich besser durch.

24:35.390 --> 24:37.290
Ich zeige euch jetzt mal...

24:37.390 --> 24:40.560
Prolo...

24:40.660 --> 24:41.560
Oh, ja.

24:41.660 --> 24:42.560
Und was kommt als Nächstes?

24:42.660 --> 24:43.560
Ada, oder wie?

24:43.660 --> 24:54.580
Moment.

24:54.680 --> 24:55.580
Was?

24:55.680 --> 24:57.580
Trustge.

24:57.680 --> 25:01.810
Trustproject.

25:01.910 --> 25:03.710
Also, ich zeige euch jetzt mal,

25:03.710 --> 25:05.710
was ich gebaut habe und was wir...

25:05.810 --> 25:08.710
Also, die App ist, was man sieht, relativ unspektakulär.

25:08.810 --> 25:11.710
Aber es ist ganz cool, dass es funktioniert.

25:11.810 --> 25:12.710
So.

25:12.810 --> 25:14.710
Machen wir mal Rust hier auf.

25:14.810 --> 25:18.710
Dann gehen wir mal ins Backend.

25:18.810 --> 25:20.710
Machen Rider auf.

25:20.810 --> 25:24.470
Also, das ist eine Mischung.

25:24.570 --> 25:26.470
Es geht darum...

25:26.570 --> 25:27.470
Was?

25:29.520 --> 25:30.420
Ja, ja.

25:30.520 --> 25:36.190
Okay, Rider.

25:36.290 --> 25:41.130
Ach, Mist.

25:41.230 --> 25:42.130
Ich kann...

25:42.230 --> 25:44.130
Soll ich auch noch mal im Background starten?

25:44.130 --> 25:48.140
So, Rider.

25:48.240 --> 25:49.140
Also, wir haben...

25:49.240 --> 25:54.140
Letztendlich ist das eine ASP.NET Core-Web-Anwendung

25:54.240 --> 26:00.140
mit einem Low-Level-Go-Backend für WebRTC

26:00.240 --> 26:04.140
und, ja, eine Index-HTML mit ein bisschen JavaScript.

26:04.240 --> 26:06.140
Zeige ich euch jetzt.

26:06.240 --> 26:12.740
So, ich glaube, jetzt habe ich echt alles geöffnet,

26:12.840 --> 26:15.740
was es so zu öffnen gibt.

26:15.840 --> 26:18.640
Heute brauchen wir echt fünf Desktop-Anwendungen.

26:18.640 --> 26:19.640
Dafür...

26:19.740 --> 26:22.640
Also, Index-HTML ist äußerst basic.

26:22.740 --> 26:23.640
Was es da gibt...

26:23.740 --> 26:25.640
Ich zeige euch, wie das Ganze aussieht.

26:25.740 --> 26:28.640
Also, bevor wir uns das jetzt im Detail angucken...

26:28.740 --> 26:30.640
Oh, ein bisschen klein, hä?

26:30.740 --> 26:31.640
So, ist gut.

26:31.740 --> 26:32.640
Und hier...

26:32.740 --> 26:34.640
Was hat der für Schmerzen?

26:34.740 --> 26:37.640
Ach, er findet mal wieder mein .NET-Framework nicht.

26:37.740 --> 26:38.640
Gibt...

26:38.740 --> 26:41.640
Hat der eigentlich .NET mittlerweile aktualisiert?

26:41.740 --> 26:42.640
.NET-Version?

26:42.740 --> 26:44.640
Nee, ist immer noch 7.0.

26:44.740 --> 26:45.640
Nice.

26:45.740 --> 26:47.640
Also, müssen wir das noch mal...

26:47.640 --> 26:50.640
noch mal umstellen, dass er erkennt, dass ich...

26:50.740 --> 26:53.640
Hallo?

26:53.740 --> 26:56.640
...dass ich .NET 8 installiert habe.

26:56.740 --> 27:00.720
.NET 8.

27:00.820 --> 27:02.720
Äh...

27:02.820 --> 27:04.720
Äh...

27:04.820 --> 27:06.720
Ja, save.

27:06.820 --> 27:15.720
So.

27:15.820 --> 27:17.720
Also, ich habe mit Prolog noch nie was gemacht.

27:17.820 --> 27:20.720
Mich wundert es, dass an der Uni auch ernsthaft irgendwie noch einer Prolo...

27:20.820 --> 27:22.720
Ich meine, sollte man nicht...

27:22.820 --> 27:24.720
Machen die meisten Leute an der Uni nicht Java?

27:24.720 --> 27:29.680
Auch Java genannt von manchen Leuten.

27:29.780 --> 27:35.330
Deswegen gibt es auch manche Leute, die sagen JavaScript.

27:35.430 --> 27:40.590
Ups.

27:40.690 --> 27:42.590
Komplett falsch, C-Mode.

27:42.690 --> 27:44.590
Eigentlich wollte ich das mal...

27:44.690 --> 27:49.350
FireShip sagt auch immer JavaScript.

27:49.450 --> 27:51.350
JavaScript.

27:56.410 --> 27:59.310
Also, auf Prolog hätte ich wirklich wenig... wenig Bock.

27:59.410 --> 28:07.960
Okay, auf geht's!

28:08.060 --> 28:10.960
Also, ich zeige euch mal schnell, was hier am Start ist.

28:11.060 --> 28:12.960
Wir gehen hier in das Backend.

28:13.060 --> 28:14.960
Starten das hier.

28:15.060 --> 28:16.960
äh... .NET run.

28:16.960 --> 28:19.590
Bäm.

28:19.690 --> 28:20.590
Hallo?

28:20.690 --> 28:21.590
Und es crasht!

28:21.690 --> 28:23.590
Perfekt!

28:23.690 --> 28:25.590
Perfekt zum Einstieg, Leute!

28:25.690 --> 28:27.590
.NET run.

28:27.690 --> 28:28.590
Ja.

28:28.690 --> 28:31.590
Erst mal kurz die Experten über Teams anschreiben.

28:31.690 --> 28:33.590
Ähm, warum crasht das?

28:33.690 --> 28:34.590
Ach so!

28:34.690 --> 28:37.590
Es crasht, weil ich die Go-Geschichte nicht kompiliert habe vorher.

28:37.690 --> 28:39.590
Ja, das ist natürlich klar.

28:39.690 --> 28:40.590
Also.

28:40.690 --> 28:41.590
So.

28:41.690 --> 28:43.590
Ihr müsst noch nichts verstehen.

28:43.690 --> 28:45.590
Ich zeige es euch dann, wenn es soweit ist.

28:45.690 --> 28:47.490
Äh... äh...

28:47.590 --> 28:48.490
Go...

28:48.490 --> 28:49.490
Build...

28:49.590 --> 28:50.490
Build...

28:50.590 --> 28:51.490
Mode...

28:51.590 --> 28:54.760
Chat...

28:54.860 --> 28:55.760
Library...

28:58.580 --> 28:59.480
Minus...

28:59.580 --> 29:00.480
O...

29:00.580 --> 29:03.110
Ach so.

29:03.210 --> 29:04.110
Äh...

29:04.210 --> 29:05.110
Ja...

29:05.210 --> 29:06.110
Meinetwegen heißt das so.

29:06.210 --> 29:11.500
Und jetzt moven wir...

29:11.600 --> 29:12.500
Oh, shit!

29:12.600 --> 29:13.500
Ah!

29:13.600 --> 29:14.500
Alter, was?

29:14.600 --> 29:15.500
Äh...

29:15.600 --> 29:16.500
Eigentlich bin ich keine Mathe mehr.

29:16.600 --> 29:17.500
Ähm...

29:17.600 --> 29:18.500
Go...

29:18.600 --> 29:19.500
Build...

29:19.600 --> 29:20.500
Hier, Bench...

29:20.600 --> 29:21.500
Also, wie heißt das?

29:21.600 --> 29:22.500
WebRTC?

29:22.600 --> 29:23.500
Wie habe ich das genannt?

29:23.600 --> 29:27.280
Wie soll...

29:27.380 --> 29:28.280
Wie soll das heißen?

29:28.380 --> 29:30.180
WebRTCLinux.so.

29:30.280 --> 29:31.280
Okay.

29:31.280 --> 29:32.380
Ich hoffe, dass das funktioniert.

29:32.480 --> 29:35.590
Okay.

29:35.690 --> 29:39.670
So.

29:39.770 --> 29:41.670
Die Go-Geschichte kompiliert.

29:41.770 --> 29:46.390
Warum heißt das GoLib?

29:46.490 --> 29:48.390
Das soll nicht so heißen, Mann.

29:48.490 --> 29:58.640
Ach so.

29:58.740 --> 29:59.640
Hä?

29:59.740 --> 30:06.790
Warum funzt denn das nicht, Leute?

30:06.890 --> 30:25.330
Ist halt beim Output gleich so, Mann.

30:25.430 --> 30:28.410
Soll mir recht sein.

30:28.510 --> 30:31.410
Außerdem kann ich den Output direkt erstellen lassen, doch in...

30:31.510 --> 30:33.410
Backend...

30:33.510 --> 30:35.410
WebRTCLinux.so.

30:35.510 --> 30:36.410
Genau.

30:36.510 --> 30:37.410
So.

30:37.510 --> 30:39.410
Da muss ich doch gar nichts moven.

30:39.510 --> 30:51.610
So.

30:51.610 --> 30:52.610
So.

30:52.710 --> 30:53.610
Da sind wir.

30:53.710 --> 30:54.610
So.

30:54.710 --> 30:55.610
Jetzt kann ich starten.

30:55.710 --> 30:57.610
Jetzt kann ich euch zeigen, was passiert.

30:57.710 --> 30:58.610
Also.

30:58.710 --> 31:02.610
Copy always.net.

31:02.710 --> 31:07.560
Wir sind hier.

31:07.660 --> 31:08.560
Run.

31:08.660 --> 31:11.900
Gut.

31:12.000 --> 31:12.900
Alles klar.

31:13.000 --> 31:13.900
So.

31:14.000 --> 31:14.900
Chrome aufmachen.

31:15.000 --> 31:16.900
Und wenn wir jetzt auf Localhost...

31:17.000 --> 31:24.000
Localhost Port 8080 gehen, werdet ihr was sehr unspektakuläres sehen, und zwar Connection

31:24.000 --> 31:26.000
und Network Connected.

31:26.100 --> 31:28.000
Also, was passiert, ist folgendes.

31:28.100 --> 31:32.000
Kann man mal vielleicht die Browser Tools irgendwie ein bisschen...

31:32.100 --> 31:34.000
Wo ist denn der Button dafür?

31:34.100 --> 31:38.000
Irgendwie so, dass man es nicht total übertrieben...

31:38.100 --> 31:43.000
Also, der baut eine WebRTC-Verbindung auf, vom Browser zum Backend.

31:43.100 --> 31:45.000
Und das funktioniert folgendermaßen.

31:45.100 --> 31:48.000
Also, WebRTC ist eine...

31:48.100 --> 31:50.000
Blazingly Fast Connection, ja.

31:50.100 --> 31:53.100
Der WebRTC ist eigentlich für Echtzeit-Audio-Video-Konfigurationen.

31:53.100 --> 31:56.100
Kann auch für Chat-Nachrichten und so benutzt werden.

31:56.200 --> 32:03.100
Aber hauptsächlich, muss man sagen, ist WebRTC im Audio-Video-Sektor zu Hause.

32:03.200 --> 32:10.100
Und das heißt, wenn ihr Teams verwendet oder Zoom verwendet oder sowas, was wahrscheinlich

32:10.200 --> 32:11.100
jeder von uns...

32:11.200 --> 32:13.100
Ist eigentlich Slack noch angesagt.

32:13.200 --> 32:16.100
Wobei Slack ist eher Chat, weniger Videokram, ne?

32:16.200 --> 32:20.100
Und das ist alles WebRTC unter der Haube.

32:20.200 --> 32:21.100
So.

32:21.100 --> 32:24.920
Und...

32:25.020 --> 32:27.920
Das funktioniert jetzt...

32:28.020 --> 32:30.920
Ich glaube, mittlerweile schon.

32:31.020 --> 32:33.920
Aber ich habe ehrlich gesagt Slack seit Ewigkeiten nicht mehr gesehen.

32:34.020 --> 32:37.920
Also, Teams hat ziemlich zugeschlagen und eigentlich benutzt so gut...

32:38.020 --> 32:40.920
Slack war mal eine Zeit lang richtig, richtig groß, ja.

32:41.020 --> 32:43.920
Aber irgendwie ist mittlerweile echt Teams einfach nur...

32:44.020 --> 32:51.240
Eigentlich das verbreitetste schlechthin.

32:51.340 --> 32:55.240
Es kommt ab und zu mal vor, gerade wenn man mit irgendwelchen Ambitionen...

32:55.240 --> 32:59.240
Konferieren muss, dass sie irgendwie Zoom-Calls einladen oder so.

32:59.340 --> 33:00.240
Okay.

33:00.340 --> 33:01.240
So.

33:01.340 --> 33:06.580
Also, ich zeige euch jetzt mal, was ich gebaut habe, was wir umstellen auf Go.

33:06.680 --> 33:07.580
Es ist...

33:07.680 --> 33:08.580
Umstellen auf Rust.

33:08.680 --> 33:09.580
Es ist relativ...

33:09.680 --> 33:10.580
Relativ übersichtlich.

33:10.680 --> 33:11.580
Also.

33:11.680 --> 33:15.580
Ausgangspunkt des Ganzen ist ein .NET Backend.

33:15.680 --> 33:17.580
Ihr seht, das ist sehr überschaubar.

33:17.680 --> 33:21.740
Das ist alles.

33:21.840 --> 33:22.740
Aus mehr besteht das nicht.

33:22.840 --> 33:24.740
Das macht hier ein bisschen...

33:24.840 --> 33:26.740
Das callt hier ein paar Sachen in Go.

33:26.840 --> 33:27.840
Das gucken wir uns gleich an.

33:27.940 --> 33:28.740
Und...

33:28.740 --> 33:30.740
Das gucken wir uns gleich an.

33:30.840 --> 33:34.740
Dann gibt es einen AP Endpunkt mit http get.

33:34.840 --> 33:37.740
Slash WebRTC Start.

33:37.840 --> 33:40.740
Dort erzeugt er eine neue WebRTC Connection.

33:40.840 --> 33:43.740
Und schickt an den Client, also an den Browser zurück.

33:43.840 --> 33:47.740
Die Magic WebRTC Verbindungsaufbau Dinger.

33:47.840 --> 33:49.740
Das sieht dann so aus zum Beispiel.

33:49.840 --> 33:50.740
Ist vollkommen egal.

33:50.840 --> 33:51.740
Dafür fände ich eine Library.

33:51.840 --> 33:53.740
Muss mich nicht mit auseinandersetzen.

33:53.840 --> 33:55.740
Schickt er zurück an den Browser.

33:55.840 --> 33:57.740
Der Browser nimmt das Ganze.

33:57.740 --> 33:58.740
Der sagt, der baut auch eine Web...

33:58.840 --> 34:01.740
Also der Browser versucht auch eine WebRTC Verbindung aufzubauen.

34:01.840 --> 34:04.740
Callt diesen Endpunkt.

34:04.840 --> 34:10.740
Und dann nimmt er das, was er von dem Backend geschickt kriegt.

34:10.840 --> 34:13.740
Setzt das als Remote Description.

34:13.840 --> 34:16.740
Das ist so eine WebRTC Verbindungsaufbau Geschichte.

34:16.840 --> 34:19.740
Warum das so heißt, man weiß es nicht.

34:19.840 --> 34:22.740
Aber WebRTC Handshake funktioniert so.

34:22.840 --> 34:25.740
Eine der beiden Seiten, also bei WebRTC.

34:25.740 --> 34:28.740
Das ist ja wie gesagt für Echtzeit per to per Videoübertragung eigentlich gedacht.

34:28.840 --> 34:32.740
Bei WebRTC sind beide Seiten gleichzeitig Server und Client.

34:32.840 --> 34:35.740
Und es können beide Seiten die Verbindung initiieren.

34:35.840 --> 34:36.740
Das funktioniert so.

34:36.840 --> 34:41.740
Eine Seite erstellt so ein Offer Package hier.

34:41.840 --> 34:42.740
So ein Offer.

34:42.840 --> 34:43.740
Wie heißt das?

34:43.840 --> 34:45.740
SDP heißt das glaube ich.

34:45.840 --> 34:50.500
So eine Offer Anfrage.

34:50.600 --> 34:52.500
Schickt das an die andere Seite.

34:52.600 --> 34:56.500
Und die erstellt darauf dann eine Antwort und schickt das zurück.

34:56.500 --> 35:01.500
Und wenn beide sich darauf einigen können, dann wird die Verbindung aufgebaut.

35:01.600 --> 35:03.500
Darauf einigen heißt, die tauschen.

35:03.600 --> 35:05.500
Ihr seht das hier vielleicht auch.

35:05.600 --> 35:07.500
Die tauschen zum Beispiel aus.

35:07.600 --> 35:09.500
Hups.

35:13.030 --> 35:13.930
Hat der irgendwie ein bisschen.

35:14.030 --> 35:14.930
Ne, jetzt geht es doch.

35:15.030 --> 35:17.930
Die tauschen hier zum Beispiel Endpoints aus für Video.

35:18.030 --> 35:21.930
Man sieht ja mein Docker Interface wird auch mit geschickt, was ziemlich pepeger ist.

35:22.030 --> 35:25.820
Ja, das ist UDP.

35:25.920 --> 35:26.820
Das ist UDP tatsächlich.

35:26.920 --> 35:28.820
Komplett UDP.

35:28.920 --> 35:30.820
Man kann auch TCP verwenden.

35:30.820 --> 35:34.820
Aber das ist für Videosachen ja meistens nicht so wichtig.

35:34.920 --> 35:37.820
Die tauschen sich beispielsweise die Endpunkte aus für das Video.

35:37.920 --> 35:39.820
Also ihre IPs.

35:39.920 --> 35:42.820
Und sie tauschen sich aus, welche Codecs sie unterstützen.

35:42.920 --> 35:49.820
In dem Fall unterstützt mein Server, meine Serverseite nur H264 mit diesem Profil.

35:49.920 --> 35:50.820
Sonst nichts.

35:50.920 --> 35:57.820
Und im Endeffekt einigen sich die zwei Seiten darauf, was sie denn jetzt als Videos austauschen wollen.

35:57.920 --> 35:59.820
Also in der Offer steht drinnen.

35:59.820 --> 36:03.820
Hey, Hallo, ich bin Client oder beziehungsweise Server XY.

36:03.920 --> 36:05.820
Das sind meine Endpoints.

36:05.920 --> 36:08.820
Das sind meine Video Audio Codecs, die ich unterstütze.

36:08.920 --> 36:11.820
Und.

36:11.920 --> 36:19.820
Dann antwortet, dann antwortet die die andere Seite drauf und sagt Hey, alles klar.

36:19.920 --> 36:20.820
Ich unterstütze.

36:20.920 --> 36:24.820
Ich unterstütze auch dieses Video Format.

36:24.920 --> 36:25.820
Lass uns mal.

36:25.920 --> 36:28.820
Lass uns mal anfangen, Video auszutauschen, sondern mit die Verbindung aufgebaut.

36:28.820 --> 36:32.820
Also das ist im Prinzip das, wofür ich die WebRTC Library verwende.

36:32.920 --> 36:34.820
Kann man, kann man da einen Key hinterlegen?

36:34.920 --> 36:36.820
Ja, kann man irgendwo.

36:36.920 --> 36:40.820
Aber ich lasse das aktuell alles die Library handeln.

36:40.920 --> 36:41.820
Es geht, es geht auch.

36:41.920 --> 36:43.820
Es geht auch mit mit mit TCP.

36:43.920 --> 36:47.820
Du kannst, wenn du.

36:47.920 --> 36:52.820
Also normalerweise muss man sagen, geht das, geht das verhältnismäßig gut.

36:52.920 --> 36:57.820
Ich habe das auch schon mal gemacht, indem ich beispielsweise meine Tür Gegensprecheranlage auf mein Handy gestreamt habe.

36:57.820 --> 36:58.820
Da drüber.

36:58.920 --> 37:00.820
Per WebRTC.

37:00.920 --> 37:05.820
Da habe ich den SIP Call gemacht und mit dem SIP Call dann die Sachen, die Sachen gepusht.

37:05.920 --> 37:10.820
Aber das ging, das ging tatsächlich erstaunlich gut von außen.

37:10.920 --> 37:13.820
Wenn es gar nicht geht, kann man noch so einen.

37:13.920 --> 37:16.820
Ich habe vergessen, wie der Kram heißt.

37:16.920 --> 37:23.820
Turn, Stun, wie auch immer Server einbauen, wo das dann quasi einmal über eine externe IP läuft.

37:23.820 --> 37:29.820
Der Verbindungsaufbau, um schön Löcher ins jeweilige Nat zu machen.

37:29.920 --> 37:32.820
Aber es geht erstaunlich, erstaunlich gut, ehrlich gesagt.

37:32.920 --> 37:40.660
Und intern im Netzwerk ohne Nat dazwischen ist es eh kein Problem.

37:40.760 --> 37:42.660
So, wo bin ich jetzt stehen geblieben?

37:42.760 --> 37:46.660
Also das ist so die Basics, wie so ein WebRTC Aufbau funktioniert.

37:46.760 --> 37:50.660
Und eigentlich ist jetzt, nachdem die Verbindung steht.

37:50.760 --> 37:53.660
Ich kann euch übrigens auch zeigen, dass die Verbindung steht.

37:53.760 --> 37:54.660
Moment.

37:54.660 --> 37:57.660
About Web, ah ne Moment, wir sind in.

37:57.760 --> 37:59.660
Ha, guck mal.

37:59.760 --> 38:01.660
Chrome ist schlau genug.

38:01.760 --> 38:03.660
About WebRTC.

38:03.760 --> 38:16.180
Das hier suche ich, genau.

38:16.280 --> 38:19.180
Guck, und jetzt kann man sich hier den Verbindungsaufbau ansehen.

38:19.280 --> 38:22.180
Also man sieht, sie sind lokal connected.

38:22.280 --> 38:24.180
Signaling State ist stable.

38:24.280 --> 38:26.180
Connection ist aufgebaut.

38:26.280 --> 38:30.180
Und ja, der Transport darunter ist auch aufgebaut.

38:30.280 --> 38:32.180
So, und.

38:32.180 --> 38:37.340
Also das ist die komplette .NET-Seite.

38:37.440 --> 38:38.340
Mehr passiert nicht.

38:38.440 --> 38:45.340
Der, also die Server-Seite generiert so einen Offer-Package.

38:45.440 --> 38:47.340
Das kommt dann hier rein.

38:47.440 --> 38:49.340
Also Client sagt, add CPU-Connection.

38:49.440 --> 38:51.340
Das ist, das ist alles wurscht.

38:51.440 --> 38:53.340
Dann callt er diesen Endpunkt.

38:53.440 --> 38:55.340
Dann kriegt er diesen Klampel hier zurück.

38:55.440 --> 38:58.340
Mit den Endpoints und dem supportenden Codex.

38:58.440 --> 39:03.340
Das muss er sich dann setzen als Remote Description.

39:03.340 --> 39:06.340
Nachdem beide Seiten, Server und Client, gleichzeitig sein können,

39:06.440 --> 39:10.340
muss man immer einstellen, was er selbst ist und was die andere Seite ist.

39:10.440 --> 39:13.340
Dann setze ich quasi das.

39:13.440 --> 39:16.340
Dann erzeugt der Browser eine Antwort da drauf.

39:16.440 --> 39:19.340
In der Antwort steht dann drauf, okay, ich unterstütze mindestens einen Codex,

39:19.440 --> 39:20.340
den du auch unterstützt.

39:20.440 --> 39:22.340
Wir können Videos miteinander austauschen.

39:22.440 --> 39:24.340
Und dann schickt er das Ganze zurück.

39:24.440 --> 39:28.340
Und das geht dann hier an den Post-Endpunkt von der .NET-Anwendung.

39:28.440 --> 39:31.440
Und dann ruft er hier jeweils go-low-level-web-rtc-Sachen aus.

39:31.540 --> 39:33.240
So.

39:33.340 --> 39:38.240
Also hier am Anfang ruft er einmal in go die Sachen auf,

39:38.340 --> 39:42.240
dass er UDP-Netzwerk-Geschichten setupt.

39:42.340 --> 39:46.240
Dann, dass es einen Video-Track gibt, in dem man was reinschreiben kann.

39:46.340 --> 39:50.240
Hier lässt er sich die Connection-Sachen generieren.

39:50.340 --> 39:57.240
Und hier setzt er dann die Antwort vom Browser für die Connection.

39:57.340 --> 40:02.240
Ich glaube, wenn wir das jetzt gleich in Rust bauen, das ist relativ klar.

40:02.240 --> 40:04.240
Es ist auf jeden Fall recht übersichtlich.

40:04.340 --> 40:06.240
Ich zeige euch jetzt noch mal schnell die go-Seite.

40:06.340 --> 40:10.240
Ja, und am Ende, jetzt könnten die eigentlich Videos austauschen.

40:10.340 --> 40:14.240
Warum ich das hier so ein bisschen bundig gemacht habe, einfach weil es schöner aussieht.

40:14.340 --> 40:21.240
Also, der guckt hier, sobald sich der Connection-State ändert, schreibt er das halt hier rein.

40:21.340 --> 40:25.240
Wichtig ist, dass beides connected ist, sowohl hier quasi der Transport

40:25.340 --> 40:28.240
und die eigentliche Web-RTC-Connection an sich.

40:28.340 --> 40:31.340
Ich könnte jetzt darüber beispielsweise Audio austauschen, Video austauschen,

40:31.440 --> 40:32.140
mehr oder weniger.

40:32.240 --> 40:33.140
Fast in Echtzeit.

40:33.240 --> 40:38.140
Oder auch einen Data-Channel aufmachen, wo man den zum Beispiel für Chat oder sowas verwenden kann.

40:38.240 --> 40:44.160
So, also das Frontend ist übersichtlich, 67 Zeichen.

40:44.260 --> 40:46.160
Da müssen wir heute nichts dran machen.

40:46.260 --> 40:49.160
Und an dem C-Sharp-Backend müssen wir auch so gut wie nichts machen.

40:49.260 --> 40:53.160
Weil, das stellen wir ja um von go auf Rust.

40:53.260 --> 40:55.160
Ich zeige euch jetzt, was go macht.

40:55.260 --> 40:58.160
Und das ist das, was wir heute in Rust versuchen nachzubauen.

40:58.260 --> 41:04.060
Und zwar ist, es ist auch recht übersichtlich, wobei es noch der komplexeste ist.

41:04.160 --> 41:10.060
Das sind die ganzen Funktionen, die vom .NET-Backend aufgerufen werden.

41:10.160 --> 41:14.060
Das erste, was der macht, ist init-Network.

41:14.160 --> 41:15.060
Sieht man auch hier.

41:15.160 --> 41:17.060
Init-Network, passiert folgendes.

41:17.160 --> 41:23.060
Der erstellt so eine Liste mit supportetem Codex.

41:23.160 --> 41:29.060
Also in dem Fall supporten wir nur, das steht hier oben, in dem Fall supporten wir nur H264.

41:29.160 --> 41:33.160
Das ist das, was ihr auch eben gesehen habt in diesem langen Text.

41:33.260 --> 41:33.960
In diesem langen Text.

41:34.060 --> 41:38.230
Text-Output.

41:38.330 --> 41:42.230
Doch, das habe ich selbst geschrieben, mit Error-Handling.

41:42.330 --> 41:45.230
Allerdings nicht überall Error-Handling.

41:45.330 --> 41:53.040
An vielen Stellen schreibe ich, wird der Error auch einfach weggeschmissen.

41:53.140 --> 41:55.040
Ne, wird nicht rausgeschmissen.

41:55.140 --> 41:59.040
Es wird go rausgeschmissen zu Rust.

41:59.140 --> 42:01.040
Oder mal gucken, ob es in Rust funktioniert.

42:01.140 --> 42:06.040
Ne, das habt ihr eben auch gesehen in diesem Verbindungsaufbau.

42:06.140 --> 42:09.040
Wir unterstützen nur H264.

42:09.040 --> 42:15.040
Und das ist halt so die Codec-Parameter für unser Video, was wir unterstützen.

42:15.140 --> 42:20.040
So, also, als erstes legt ihr eine Liste an mit supportetem Codex.

42:20.140 --> 42:23.040
Warum brauchst du noch das .NET Projekt?

42:23.140 --> 42:28.040
Das .NET Projekt brauche ich, weil das eine noch ein bisschen umfangreichere Web-Anwendung wird.

42:28.140 --> 42:32.040
Und ich keinen Bock habe, das in Go zu machen.

42:32.140 --> 42:46.620
Auf der anderen Seite, so mega umfangreich wird die Web-Anwendung gar nicht.

42:46.620 --> 42:54.620
Also, vielleicht ist das nächste, was wir machen, .NET noch rauszuschmeißen.

42:54.720 --> 42:57.620
Mal ganz davon abgesehen, Go fliegt ja auch raus.

42:57.720 --> 42:59.620
Das wird ja heute in Rust neu gebaut.

42:59.720 --> 43:05.620
Vielleicht, vielleicht alles in Rust, aber das glaube ich nicht, dass ich mir das antue so abartig wie...

43:05.720 --> 43:12.620
Ja, das ist, das ist wirklich, also, interop mit anderen Sachen ist Go echt pepega.

43:12.720 --> 43:14.620
Das habe ich auch schon gemerkt.

43:14.620 --> 43:17.620
Was es am Ende bringt, ja, das kann ich auch noch mal kurz erzählen.

43:17.720 --> 43:33.620
Also, du kannst damit zum Beispiel jede x-beliebige Webcam oder, ja, also, alles, alles, was FFmpeg einlesen kann und was ein H.264-Stream hat, bekommst du damit eben als Video im Browser.

43:33.720 --> 43:39.620
Also sprich, du hast irgendeine billige China-Chinesen-Webcam, die kannst du dir damit im Browser anzeigen lassen.

43:39.620 --> 43:48.120
Du wirst jetzt sagen, hey, normalerweise kann man auch Webcams im Browser anzeigen lassen.

43:48.220 --> 43:51.120
Kann man und kann man auch gleichzeitig nicht.

43:51.220 --> 43:57.120
Es kommt immer drauf an, was die, was die Webcam unterstützt und was die Webcam anbietet.

43:57.220 --> 44:06.120
Die aller, allerwenigsten Webcams bieten WebRTC, also quasi mehr oder weniger Real-Time-Streaming an und dann hast du auch nur eine Webcam drauf.

44:06.220 --> 44:10.120
Also sprich, ich will ja eine Webseite haben, wo einfach meine ganzen Webcams drauf sind.

44:10.120 --> 44:13.120
Ich habe, glaube ich, aktuell sieben Stück hier im Haus.

44:13.220 --> 44:15.120
Also ich habe, warte mal, lass mal überlegen.

44:15.220 --> 44:26.120
Ich habe zwei, drei Stück draußen, eine in dem Raum, wo die Katze immer abchillt und eine im Flur und eine im Keller.

44:26.220 --> 44:31.620
Sechs Stück, sechs Stück sind das. Sechs Stück.

44:31.720 --> 44:39.980
Und, ja, da will ich eine Webseite haben, wo die alle drauf angezeigt werden.

44:40.080 --> 44:43.980
Mehr oder weniger, ach so, und das Ganze lasse ich in Home Assistant letztendlich anzeigen.

44:44.080 --> 44:44.980
Entweder hier.

44:45.080 --> 44:49.980
Entweder als iFrame oder als Pop-Up oder so, aber das hat ja mit Home Assistant nichts zu tun.

44:50.080 --> 44:54.980
Seite. Und ich will das halt möglichst Echtzeit haben und auch Connection-Abrüche handeln.

44:55.080 --> 44:57.980
Also das Backend wird eine Web-Anwendung in .NET.

44:58.080 --> 45:07.870
Das macht nicht viel mehr als die, als die Webseite ausliefern und das ganze FFmpeg-Zeug.

45:07.970 --> 45:10.870
Wir brauchen ja auch noch FFmpeg zum Auslesen von den Videostreams.

45:10.970 --> 45:13.870
Das ist relativ simpel, das haben wir im Stream auch schon gemacht.

45:13.970 --> 45:15.870
Also wenn man, wenn man weiß, wie der FFmpeg funktioniert.

45:15.970 --> 45:20.970
Also die, das C, das C-Interface von FFmpeg geht das erstaunlich gut.

45:21.070 --> 45:29.350
Ja, wie gesagt, vielleicht, vielleicht gefällt mir das in Rust dann auch so gut, dass ich auch .NET noch rausschmeiße und das einfach komplett in Rust mache.

45:29.450 --> 45:33.350
Wobei ich, dann mache ich, dann würde ich es lieber komplett in Go machen.

45:33.450 --> 45:42.350
Weil wenn ich es komplett in Go mache, ist letztendlich ja auch kein Interop mehr nötig mit anderen Sprachen und dementsprechend, ja.

45:42.450 --> 45:46.350
Aber ich habe schon mal FFmpeg in Go gemacht, das ist auch Pains Champ.

45:46.350 --> 45:48.450
Weil du da C-Sachen callen musst.

45:48.550 --> 45:52.450
Wie dem auch sei, es geht ja auch darum, dass man ein bisschen was, was lernt.

45:52.550 --> 45:56.450
Nicht so sehr, dass was super auch nie dagewesenes rauskommt.

45:56.550 --> 46:00.450
So, und ich wollte euch noch mal kurz zeigen.

46:00.550 --> 46:06.340
Ja, ganz ehrlich, die .NET Templates kannst du, kannst du vergessen.

46:06.440 --> 46:08.340
Du brauchst eigentlich nur zwei Templates in .NET.

46:08.440 --> 46:10.340
Du brauchst Console und Web.

46:10.440 --> 46:12.340
Rest reicht.

46:12.440 --> 46:18.100
Das ist aber schwierig mit CMD.

46:18.200 --> 46:19.900
Einzelne Frames.

46:20.000 --> 46:25.000
Aus einem RTSP H.264 Stream abzugreifen.

46:25.100 --> 46:29.000
Und die dann weiterzuleiten über WebRTC.

46:29.100 --> 46:36.000
Da wüsste ich jetzt nicht, wie ich das mit rein mit CLI und Streamen irgendwie über Standard in oder so machen soll.

46:36.100 --> 46:53.600
So, also.

46:53.700 --> 46:58.360
Die Go als erstes macht der .NET Network.

46:58.460 --> 47:01.360
Ich zeige euch jetzt erst mal das, was wir neu bauen müssen in Rust.

47:01.460 --> 47:03.360
.NET Network ist relativ simpel.

47:03.360 --> 47:06.460
Der erstellt einfach eine Liste mit Codecs, die supportend sind.

47:06.560 --> 47:08.460
Aktuell, wir supporten plus H.264.

47:08.560 --> 47:11.460
Und mit, in dem Fall, kriegt es halt die ID 96.

47:11.560 --> 47:14.460
So, dann gibt es ein bisschen Error Handling, der nicht wirklich viel macht.

47:14.560 --> 47:17.460
Ihr könnt übrigens auch paniken.

47:17.560 --> 47:20.460
Weil, will ich nicht returnen, kann man nicht gleich sagen Panic.

47:20.560 --> 47:22.460
Kackel.

47:22.560 --> 47:23.460
So.

47:23.560 --> 47:26.460
Ist eigentlich wurscht, weil wir wollen Go gar nicht weiter verwenden.

47:26.560 --> 47:28.460
So, dann.

47:28.560 --> 47:29.460
Settings Engine.

47:29.560 --> 47:32.460
Wir wollen UDP verwenden, anstatt TCP.

47:32.460 --> 47:33.560
Beides mal angelegt.

47:33.660 --> 47:34.560
Kann ich dazwischen umschalten.

47:34.660 --> 47:36.560
Aber wir verwenden UDP.

47:36.660 --> 47:37.560
Sieht man auch hier.

47:37.660 --> 47:41.560
Der legt eine neue Settings Engine an, sagt Network-Typ UDP.

47:41.660 --> 47:46.560
Und dann als Port verwenden wir 36.36.3.

47:46.660 --> 47:51.560
Das heißt, alle WebRTC-Verbindungen werden multiplexed über diesen Port.

47:51.660 --> 47:59.560
Normalerweise ist es bei WebRTC und Videokram so, dass für jede neue Verbindung und jedes neue Video ein eigener Port aufgemacht wird.

47:59.660 --> 48:01.560
Das ist okay.

48:01.560 --> 48:02.660
Das ist nicht schlimm.

48:02.760 --> 48:07.660
Das einzige, wo das mega nervig ist, ist, wenn du Firewall freischalten musst.

48:07.760 --> 48:14.670
Und mir ist es lieber, ich muss nur ein Port freischalten, als alle.

48:14.770 --> 48:15.670
So.

48:15.770 --> 48:21.670
Also, der listen auf UDP 36.36.3.

48:21.770 --> 48:23.670
Mit TCP geht es auch auf einem Port, ja?

48:23.770 --> 48:25.670
Hier, 35.35.3.

48:25.770 --> 48:27.670
Ich kann dir auch gleich zeigen, dass es funktioniert.

48:27.770 --> 48:28.670
So.

48:28.770 --> 48:31.670
Dann erstellt er so eine komische WebRTC-API.

48:31.770 --> 48:32.670
Das muss man machen.

48:32.670 --> 48:33.770
Weil die Library das will.

48:33.870 --> 48:38.770
Dann als nächstes wird ein Video-Track created, in den ich noch nichts reinschreibe.

48:38.870 --> 48:41.770
Aber ich brauche ein Video-Track, dass die Verbindung ordentlich funktioniert.

48:41.870 --> 48:43.770
Create Track.

48:43.870 --> 48:46.770
Er generiert eine Unique-Track-ID.

48:46.870 --> 48:48.770
Erzeugt einen neuen Track.

48:48.870 --> 48:53.770
Und pusht den Track in ein Array, äh, in eine Liste.

48:53.870 --> 48:54.770
Für später.

48:54.870 --> 48:59.770
Dann als nächstes callt er Create Connection.

48:59.870 --> 49:01.770
Create Connection ist das hier.

49:01.770 --> 49:05.870
Create Connection wird eine neue WebRTC-Verbindung erzeugt.

49:05.970 --> 49:08.870
Nicht fährtzeugt, erzeugt.

49:08.970 --> 49:12.870
Der Track, der vorhin angelegt wurde, wird der WebRTC-Verbindung hinzugefügt.

49:12.970 --> 49:14.870
Als neuer Video-Track.

49:14.970 --> 49:16.870
Dann passiert das, was ich euch schon erzählt habe.

49:16.970 --> 49:18.870
Es wird eine Offer erstellt.

49:18.970 --> 49:20.870
Das ist dieses Ding hier.

49:20.970 --> 49:22.870
Also, eine Offer erstellt.

49:22.970 --> 49:25.870
Dann wird eingesammelt, was er für Endpunkte hat.

49:25.970 --> 49:28.870
Also, im Prinzip sind das die Interface-IP-Adressen.

49:28.970 --> 49:31.670
Dann wird gesammelt.

49:31.770 --> 49:33.670
Connection-ID generiert.

49:33.770 --> 49:35.670
Connection in eine Liste gepusht.

49:35.770 --> 49:38.670
Und hier zurückgegeben an den C-Sharp-Teil.

49:38.770 --> 49:41.670
Die Client-ID und den Text.

49:41.770 --> 49:44.670
Und das kommt dann letztendlich im Browser raus.

49:44.770 --> 49:47.670
Und wenn der Browser antwortet, wird das hier gecallt.

49:47.770 --> 49:49.670
Und das ist auch das letzte, was es gibt.

49:49.770 --> 49:51.670
Dann wird das hier gecallt.

49:51.770 --> 49:53.670
Er holt sich die Connection raus dazu.

49:53.770 --> 49:55.670
Passt den String raus.

49:55.770 --> 49:57.670
Also wieder den C-String. Umwandelt es in den Go-String.

49:57.770 --> 49:59.670
Was hat er hier für Schmerzen?

49:59.770 --> 50:00.670
Use CamelCase instead.

50:00.670 --> 50:04.570
So, und dann setzt er die Antwort vom Browser in die WebRTC-Verbindung.

50:04.670 --> 50:08.570
Und dann ist der Handshake fertig und die Verbindung aufgebaut.

50:08.670 --> 50:10.570
So, das ist im Prinzip alles.

50:10.670 --> 50:13.570
Hat man das halbwegs verstanden?

50:13.670 --> 50:24.570
Also, im Prinzip besteht das aktuell aus 155 Zeilen Go, 37 Zeilen C-Sharp und ein bisschen HTML.

50:24.670 --> 50:28.570
Also, wir sind so ungefähr bei, keine Ahnung, 300 Zeilen.

50:28.670 --> 50:30.570
Also, ich denke, es ist relativ übersichtlich.

50:30.670 --> 50:33.470
Ach ja, eine Sache, die ich noch nicht gezeigt habe.

50:33.570 --> 50:40.470
Damit man Go-Sachen aufrufen kann auf C-Sharp, muss man ein bisschen Interop-Magic machen.

50:40.570 --> 50:43.780
Und das passiert hier.

50:43.880 --> 50:45.780
Rust kommt jetzt.

50:45.880 --> 50:47.780
Und das passiert hier.

50:47.880 --> 50:51.780
Also, man muss dem quasi sagen, wie die Funktionen heißen, die man in Go definiert hat.

50:51.880 --> 50:59.780
Und welche Return-Werte und Parameter-Argumente die haben, dass er die aufrufen kann.

50:59.780 --> 51:04.250
Aber ansonsten, an Logik passiert hier eigentlich nichts drin.

51:04.350 --> 51:06.250
Das ist alles.

51:06.350 --> 51:11.250
Mag vielleicht jetzt erstmal verwirrend sein, aber wir bauen das jetzt in Rust nach und ich hoffe, das funktioniert.

51:11.350 --> 51:13.250
Lazingly fast, natürlich.

51:13.350 --> 51:17.720
Was sonst?

51:17.820 --> 51:19.720
Und abfuck-kompliziert.

51:19.820 --> 51:21.720
Wahrscheinlich auch.

51:21.820 --> 51:23.720
Okay, also dann.

51:23.820 --> 51:29.720
Dann verschieben wir das mal, das Go-Ding auf Desktop 8, das ich ja nachher nachgucken kann.

51:29.820 --> 51:35.160
Und erstellen jetzt das Rust-Projekt.

51:35.360 --> 51:39.160
Rust-New-Project.

51:39.260 --> 51:50.160
Nennen wir es mal WebRTC Rust, weil ich glaube, ich habe den anderen Krempel ja auch WebRTC Go genannt.

51:50.260 --> 51:52.160
Dann nenne ich es WebRTC Rust.

51:52.260 --> 51:54.160
Create.

51:54.260 --> 51:57.660
Gut.

51:57.760 --> 51:59.660
So, jetzt müssen wir erst ein paar Sachen setzen.

51:59.760 --> 52:06.660
Also das Ziel ist, wie gesagt, eine Library erzeugen in Rust mit Interfaces, die wir dann aus .NET aufrufen können.

52:06.760 --> 52:12.560
Das funktioniert auf exakt die gleiche Art und Weise, wie das mit Go funktioniert.

52:12.660 --> 52:18.560
Hier in dem Fall erzeugt Go eine Library, wo es eben diese Funktionen drinne gibt, die dann aufgerufen werden können.

52:18.660 --> 52:20.560
Und Rust wird genau das gleiche machen.

52:20.660 --> 52:26.560
Also sprich, Rust erzeugt eine Library, wo es dann so eine Funktion zum Beispiel drin gibt.

52:26.660 --> 52:28.560
So.

52:28.660 --> 52:31.560
Dass mit das funktioniert, da müssen wir jetzt erstmal abgucken.

52:31.660 --> 52:36.060
Wir haben das alte doch gebackupt.

52:36.060 --> 52:41.470
Weil da haben wir doch schon ein bisschen Rust-mäßig gebastelt.

52:41.570 --> 52:43.470
Welches ZSH-Theme benutzt du?

52:43.570 --> 52:49.470
Das ist selbst gebaut, allerdings basiert das auf einem.

52:49.570 --> 52:53.470
Also als Prompt ist das Starship-AS.

52:53.570 --> 52:58.470
Und dort gibt es Configuration.

52:58.570 --> 53:05.640
Wo haben sie denn hier Beispiele für?

53:05.740 --> 53:06.640
Theme?

53:06.740 --> 53:15.610
Ja.

53:15.710 --> 53:17.610
Keine Ahnung.

53:17.610 --> 53:26.620
Ich habe diese Beispiele für Themes, aber ich bin gerade zu pepega, das zu finden.

53:26.720 --> 53:28.620
Zumindest, ah, Presets, hier unten.

53:28.720 --> 53:30.620
Das heißt nicht Themes, das heißt Presets.

53:30.720 --> 53:34.620
Und das hat nicht so viele Presets dabei, Starship.

53:34.720 --> 53:39.620
Und ich habe das hier genommen als Basis.

53:39.720 --> 53:44.620
Pastel Powerline, basiert auf M365 Princes.

53:44.720 --> 53:50.620
Also da haben sie sich alle gegenseitig befruchtet, inspirationstechnisch.

53:50.720 --> 53:52.620
Nur, dass ich das noch ein bisschen angepasst habe.

53:52.720 --> 53:57.620
Also ich habe die Schrift beispielsweise, die Farbe ein bisschen kontrastreicher gemacht.

53:57.720 --> 54:01.620
Ich habe beispielsweise einen 2-zeiligen Prompt daraus gemacht.

54:01.720 --> 54:03.620
Hier ist es ein 1-zeiliger Prompt.

54:03.720 --> 54:05.620
Also ihr wisst, ich mag 1-zeilige Prompte nicht.

54:05.720 --> 54:07.620
Ich mag eher 2-zeilige Prompts.

54:07.720 --> 54:09.620
Was man auch hier dran sieht.

54:09.720 --> 54:11.620
Das hier 1-zeilig wäre ja richtig noch ekliger.

54:11.720 --> 54:13.620
Ja, da wirst du gar nichts sehen.

54:13.720 --> 54:17.250
2-zeilig geht das hier halbwegs.

54:17.350 --> 54:19.250
Und meine .Files hast du tatsächlich.

54:19.350 --> 54:20.250
Hat ja gerade schon jemand im Chat.

54:20.350 --> 54:32.780
.Config.

54:32.880 --> 54:34.680
Starship.

54:34.780 --> 54:36.680
Da ist meine .Config drinne.

54:36.780 --> 54:37.680
Ja.

54:37.780 --> 54:39.680
Und da kannst du dir das abgucken.

54:39.780 --> 54:41.680
Also ich habe noch ein paar zusätzliche Sachen gemacht.

54:41.780 --> 54:48.680
Ich habe zum Beispiel bei .NET Projekten noch reingeschrieben, was es für Projekt Framework ist.

54:48.780 --> 54:51.680
Versus was systemweit installiert ist.

54:51.780 --> 54:54.680
Unser Zeug.

54:54.780 --> 54:57.680
Was das hier vorne ist, habe ich keine Ahnung.

54:57.780 --> 55:01.560
Warum das da überhaupt angezeigt wird.

55:01.660 --> 55:04.560
Achso.

55:04.760 --> 55:07.560
Weil ein Header-File drin ist oder was.

55:07.660 --> 55:14.560
Zeigt ja noch meine installierte GCC oder was auch immer das ist.

55:14.660 --> 55:16.560
Für eine Version an.

55:16.660 --> 55:17.560
Naja, gut.

55:17.660 --> 55:22.600
Alles klar.

55:22.700 --> 55:24.600
So, wir müssen jetzt noch ein bisschen was rüber kopieren.

55:24.700 --> 55:26.600
Damit das funktioniert in Rust.

55:26.700 --> 55:32.600
Und zwar, wir haben ja letztens schon mal ein bisschen gebastelt, was Interop zwischen .NET und Rust angeht.

55:32.700 --> 55:40.990
Wir müssen im Prinzip das da.

55:40.990 --> 55:42.890
Das da brauchen wir.

55:42.990 --> 55:44.890
Cargo-Tommel.

55:47.520 --> 55:48.420
Dependencies.

55:48.520 --> 55:50.420
Lib.

55:50.520 --> 55:51.420
Name.

55:51.520 --> 55:52.420
WebRTC.

55:52.520 --> 55:53.420
Rust.

55:53.520 --> 55:54.420
Vollkommen ok.

55:54.520 --> 55:55.420
Source.

55:55.520 --> 55:56.420
Muss nicht main.rs sein.

55:56.520 --> 55:59.420
Sondern.

55:59.520 --> 56:01.420
Wo ist der Rename-Knopf?

56:01.520 --> 56:02.420
Man.

56:02.520 --> 56:05.420
Lib.rs muss das Ganze sein.

56:05.520 --> 56:10.920
Und ich glaube, das war es schon.

56:11.020 --> 56:15.300
Gehen wir mal in den Ordner rein.

56:15.300 --> 56:19.890
Der Musikhof war immer so laut.

56:19.990 --> 56:22.890
So, gehen wir mal in den Ordner rein.

56:22.990 --> 56:23.890
Repos.

56:23.990 --> 56:24.890
WebRTC.

56:24.990 --> 56:25.890
Rust.

56:25.990 --> 56:26.890
Cargo.

56:26.990 --> 56:27.890
Build.

56:27.990 --> 56:28.890
Ok.

56:28.990 --> 56:29.890
Alter.

56:29.990 --> 56:32.890
Das halbe Internet wird wieder runtergeladen und kompiliert erstmal.

56:32.990 --> 56:43.420
So, dann müssen wir uns nämlich noch was rauskopieren hier aus dem alten Projekt, wo wir gebastelt haben.

56:43.520 --> 56:47.310
Lib.rs.

56:47.410 --> 56:49.310
Im Prinzip.

56:49.310 --> 56:57.210
Können wir eigentlich, weil wir haben ja schon damit mehr oder weniger angefangen.

56:57.310 --> 56:59.210
Das hier mal rüber kopieren.

56:59.310 --> 57:01.210
Wie, ich habe keinen Vim?

57:01.310 --> 57:02.210
Wait a minute.

57:02.310 --> 57:04.210
Ich habe kein.

57:04.310 --> 57:06.210
Ich habe keinen Vim mit.

57:06.310 --> 57:10.670
Mit Clipboard?

57:10.770 --> 57:19.040
Was ist das?

57:19.140 --> 57:23.670
Warum habe ich keinen Vim mit Clipboard-Funktion installiert?

57:23.770 --> 57:24.670
Moment, was?

57:24.770 --> 57:29.520
Habe ich nicht.

57:29.620 --> 57:32.280
Ich habe den normalen Vim.

57:32.380 --> 57:34.280
Der hat, glaube ich, gar keinen.

57:34.280 --> 57:35.180
Egal.

57:35.280 --> 57:38.180
Wir wollen uns jetzt nicht mit Vim-Gedöns aufhalten.

57:38.280 --> 57:41.640
Ok?

57:41.740 --> 57:42.640
Ist das Sway oder E3?

57:42.740 --> 57:43.640
Das ist E3.

57:43.740 --> 57:48.000
So.

57:48.100 --> 57:49.000
Gut.

57:49.100 --> 57:50.000
Ja, ja.

57:50.100 --> 57:51.000
Geh mal weg.

57:51.100 --> 57:52.000
Geh mal weg.

57:52.100 --> 57:53.000
Geh mal weg.

57:53.100 --> 57:54.000
Hier oben.

57:54.100 --> 57:55.000
Rust.

57:55.100 --> 57:56.000
Alter.

57:56.100 --> 57:59.530
Rust.

57:59.630 --> 58:00.530
Geh weg.

58:00.630 --> 58:01.530
Ok.

58:01.630 --> 58:02.530
Main.

58:04.900 --> 58:05.800
So.

58:05.900 --> 58:06.800
Also.

58:06.900 --> 58:09.800
Jetzt müssen wir gucken, wie wir den Krempel.

58:14.930 --> 58:16.830
Was hat er denn eigentlich für Schmerzen?

58:16.930 --> 58:18.830
Das müsst ihr doch nach wie vor erkennen hier.

58:18.830 --> 58:21.490
Bild.

58:21.590 --> 58:23.490
Bildet doch auch.

58:23.590 --> 58:26.490
Aber meine IDE ist der Meinung, es bildet nicht.

58:26.590 --> 58:28.490
Null.

58:28.590 --> 58:29.490
Na geil.

58:29.590 --> 58:40.000
Wollen wir neu starten?

58:40.100 --> 58:41.000
Wie lädt man hier?

58:41.100 --> 58:43.000
Kann man hier irgendwie ein Projekt reloaden?

58:43.100 --> 58:51.240
Ist ja noch Beta.

58:51.340 --> 58:52.240
Ist ja noch Beta.

58:52.340 --> 58:54.240
Was ich programmiere?

58:54.340 --> 59:04.240
Ein WebRTC, also ein Web-Backend für WebRTC mit einer WebRTC Rust Library.

59:04.240 --> 59:12.080
Ok.

59:12.180 --> 59:14.080
Ach, jetzt hat er es gecheckt.

59:14.180 --> 59:17.080
Ja, das ist die Rust IDE von JetBrains.

59:17.180 --> 59:19.080
Ob die was taugt?

59:19.180 --> 59:20.080
Keine Ahnung.

59:20.180 --> 59:21.080
Also ganz ehrlich.

59:21.180 --> 59:23.080
Ich bin ja nicht der große Rust Checker.

59:23.180 --> 59:24.080
Ja.

59:24.180 --> 59:28.080
Was ich bisher an IDE Support gesehen habe für Rust, ist alles bisschen Pains Champ.

59:28.180 --> 59:30.080
Und das auch.

59:30.180 --> 59:35.040
Aber das ist noch mit am wenigsten nervig.

59:35.140 --> 59:36.040
Ok.

59:36.140 --> 59:40.140
Also.

59:40.240 --> 59:45.140
Jetzt müssen wir diesen Krempel erstmal übersetzen von Go nach Rust.

59:45.140 --> 59:47.040
Da fangen wir jetzt mal an.

59:47.140 --> 59:50.040
Also das erste was wir haben ist diese InitNetwork Funktion.

59:50.140 --> 59:54.040
Ich kopiere mir mal kurz das Go hier rüber.

59:54.140 --> 59:57.040
Und dann vergleichen wir das mal mit dem was wir hier gebaut haben.

59:57.140 --> 59:58.040
In Rust.

59:58.140 --> 01:00:00.040
Ob das so halbwegs passt.

01:00:00.140 --> 01:00:01.040
Also.

01:00:01.140 --> 01:00:03.040
Wir legen eine Media Engine an.

01:00:03.140 --> 01:00:05.040
Das mache ich hier auch.

01:00:05.140 --> 01:00:06.040
So.

01:00:06.140 --> 01:00:09.040
Dann registern wir einen Codec.

01:00:09.140 --> 01:00:15.020
PayloadType, ok 96.

01:00:15.120 --> 01:00:18.020
PayloadType 96.

01:00:18.220 --> 01:00:20.020
Typ Video.

01:00:20.120 --> 01:00:23.540
Ja.

01:00:23.640 --> 01:00:24.540
Ne, ne, ne.

01:00:24.640 --> 01:00:26.540
Das mache ich nicht mit ChatGPT.

01:00:26.640 --> 01:00:27.540
Selbst.

01:00:27.640 --> 01:00:30.050
So.

01:00:30.150 --> 01:00:31.050
Das sieht.

01:00:31.150 --> 01:00:32.050
Das sieht.

01:00:32.150 --> 01:00:33.050
Also ich würde sagen.

01:00:33.150 --> 01:00:35.050
So weit haben wir das schon mal drinne.

01:00:35.150 --> 01:00:38.050
Dann eine Settings Engine.

01:00:38.150 --> 01:00:40.050
Dann eine Settings Engine.

01:00:40.150 --> 01:00:41.050
Wobei.

01:00:41.150 --> 01:00:42.050
Sagen wir mal so.

01:00:42.150 --> 01:00:43.050
Ich habe es hier umgedreht.

01:00:43.150 --> 01:00:44.050
Aber mein.

01:00:44.150 --> 01:00:48.050
Das macht jetzt ja nicht wirklich einen großen Unterschied.

01:00:48.150 --> 01:00:50.050
Dann eine Settings Engine.

01:00:50.150 --> 01:00:52.050
Mit Settings für UDP.

01:00:52.150 --> 01:00:52.950
Habe ich auch.

01:00:53.050 --> 01:00:55.950
Zur UDP Port 35353.

01:00:56.050 --> 01:00:57.950
Wobei ich hatte 36363.

01:00:58.050 --> 01:00:58.950
Ne.

01:00:59.050 --> 01:00:59.950
Glaube ich.

01:01:00.050 --> 01:01:01.950
UDP Port.

01:01:02.050 --> 01:01:03.950
36363.

01:01:04.050 --> 01:01:04.950
Ok.

01:01:05.050 --> 01:01:05.950
So.

01:01:06.050 --> 01:01:06.950
Und als letztes.

01:01:07.050 --> 01:01:08.950
Gibt es noch das hier.

01:01:09.050 --> 01:01:10.950
Was übrig ist von Go.

01:01:11.050 --> 01:01:14.950
Und das habe ich hier glaube ich auch schon das letzte mal gebaut.

01:01:15.050 --> 01:01:15.950
In Rust.

01:01:16.050 --> 01:01:16.950
Aber das.

01:01:17.050 --> 01:01:17.950
Viel mehr.

01:01:18.050 --> 01:01:18.950
Viel mehr hatten wir da.

01:01:19.050 --> 01:01:20.050
Hatten wir da glaube ich nicht mehr gemacht.

01:01:20.150 --> 01:01:20.950
Also.

01:01:20.950 --> 01:01:22.850
Also in Go sieht das so aus.

01:01:22.950 --> 01:01:25.850
RP gleich WebRTC New RP.

01:01:25.950 --> 01:01:26.850
With Settings Engine.

01:01:26.950 --> 01:01:27.850
Settings Engine.

01:01:27.950 --> 01:01:29.850
With Media Engine M.

01:01:29.950 --> 01:01:30.850
So.

01:01:30.950 --> 01:01:31.850
Das habe ich hier auch.

01:01:31.950 --> 01:01:32.850
With Settings Engine.

01:01:32.950 --> 01:01:33.850
Settings Engine.

01:01:33.950 --> 01:01:34.850
With Media Engine.

01:01:34.950 --> 01:01:39.460
Media Engine.

01:01:39.560 --> 01:01:40.460
Und.

01:01:40.560 --> 01:01:41.460
Das hier ist.

01:01:41.560 --> 01:01:44.460
Um es als globale Variable zu haben.

01:01:44.560 --> 01:01:45.460
Ne.

01:01:45.560 --> 01:01:46.460
Genau.

01:01:46.560 --> 01:01:47.460
Das ist Rust Magic dafür.

01:01:47.560 --> 01:01:49.460
Um es als globale Variable zu haben.

01:01:49.560 --> 01:01:50.460
Ui.

01:01:50.560 --> 01:01:51.460
Ja gut.

01:01:51.560 --> 01:01:52.460
Dann.

01:01:52.560 --> 01:01:53.460
Würde ich sagen.

01:01:53.460 --> 01:01:55.360
Der Teil.

01:01:55.460 --> 01:01:57.360
Der Teil passt schon mal in Rust.

01:01:57.460 --> 01:01:59.360
Der sieht genauso aus wie in Go.

01:01:59.460 --> 01:02:01.360
Nicht viel Unterschied dazwischen.

01:02:01.460 --> 01:02:02.360
So.

01:02:02.460 --> 01:02:03.360
Dann machen wir mal weiter.

01:02:03.460 --> 01:02:04.360
Mit.

01:02:04.460 --> 01:02:05.360
Also.

01:02:05.460 --> 01:02:06.360
Das.

01:02:06.460 --> 01:02:08.360
Das klappen wir mal ein.

01:02:08.460 --> 01:02:09.360
Das haben wir.

01:02:09.460 --> 01:02:10.360
Das haben wir.

01:02:10.460 --> 01:02:11.360
Ja.

01:02:11.460 --> 01:02:14.360
Memory Leaks sind erstmal nicht so wild.

01:02:14.460 --> 01:02:17.360
Create Track brauchen wir jetzt.

01:02:17.460 --> 01:02:19.360
Da bin ich nicht sicher ob wir sowas.

01:02:19.460 --> 01:02:20.360
Ne.

01:02:20.460 --> 01:02:21.360
Siehste.

01:02:21.460 --> 01:02:22.360
Haben wir noch nicht gemacht.

01:02:22.360 --> 01:02:23.260
Also.

01:02:23.360 --> 01:02:24.260
Create Track.

01:02:24.360 --> 01:02:27.260
In Go sieht das ganze so aus.

01:02:27.360 --> 01:02:30.260
Erzeugt sich eine Random Track ID.

01:02:30.360 --> 01:02:35.580
Und dann legt er nen Track an.

01:02:35.680 --> 01:02:42.950
Und speichert den sich in eine Liste.

01:02:43.050 --> 01:02:43.950
Da gehts jetzt los.

01:02:44.050 --> 01:02:45.950
Das wüsste ich schon mal nicht.

01:02:46.050 --> 01:02:46.950
Wie ich das in Go.

01:02:47.050 --> 01:02:48.950
Wie ich das in Rust gescheit mache.

01:02:50.360 --> 01:02:54.260
Bei der Sache hier flippen die ganzen Rust Liebhaber schon aus.

01:02:54.360 --> 01:02:56.260
Aber wenn du Interrupt mit anderen Sprachen machst.

01:02:56.260 --> 01:02:59.160
Wüsste ich nicht wie man das gescheit machen soll.

01:02:59.260 --> 01:03:01.160
Zum Stage sharen.

01:03:01.260 --> 01:03:03.160
Wir bräuchten jetzt sowas wie.

01:03:03.260 --> 01:03:05.160
Eine.

01:03:05.260 --> 01:03:07.160
Eine Track Liste.

01:03:07.260 --> 01:03:09.160
Enver Tracks.

01:03:09.260 --> 01:03:11.160
Und das ist.

01:03:11.260 --> 01:03:13.160
Tja.

01:03:13.260 --> 01:03:15.160
Collection Typen.

01:03:15.260 --> 01:03:17.160
In Rust.

01:03:17.260 --> 01:03:19.160
Ich brauch eine Hash Map sowas in der Richtung.

01:03:19.260 --> 01:03:21.160
So nen Dictionary quasi.

01:03:21.260 --> 01:03:23.160
Hash Map.

01:03:23.260 --> 01:03:24.160
Gibt es.

01:03:24.260 --> 01:03:25.160
Nice.

01:03:25.160 --> 01:03:27.060
Zwar eine Hash Map.

01:03:27.160 --> 01:03:28.060
Aus Track ID.

01:03:28.160 --> 01:03:30.060
Also quasi ein.

01:03:30.160 --> 01:03:31.060
Sagen wir mal nen Int.

01:03:31.160 --> 01:03:33.060
Zum Beispiel.

01:03:33.160 --> 01:03:35.060
Nen Int.

01:03:35.160 --> 01:03:37.060
Und einer.

01:03:37.160 --> 01:03:39.060
Einem Track.

01:03:39.160 --> 01:03:41.060
Also einem.

01:03:41.160 --> 01:03:42.060
Ja.

01:03:42.160 --> 01:03:43.060
Wie heißt das auch.

01:03:43.160 --> 01:03:45.060
Local Static Sample.

01:03:45.160 --> 01:03:46.060
Ja.

01:03:46.160 --> 01:03:48.500
Nice.

01:03:48.600 --> 01:03:49.500
Top.

01:03:49.600 --> 01:03:54.950
Dann ist die Musik schon vorbei.

01:03:55.050 --> 01:03:56.950
Ist das dann ein Server pro Client.

01:03:57.050 --> 01:03:57.950
1 zu 1.

01:03:58.050 --> 01:03:58.950
Ne.

01:03:59.050 --> 01:03:59.950
Da können belieb.

01:03:59.950 --> 01:04:00.850
Beliebig.

01:04:00.950 --> 01:04:01.850
Bis der RAM ausgeht.

01:04:01.950 --> 01:04:03.850
Viele Clients hin connecten.

01:04:03.950 --> 01:04:07.850
Und die kriegen alle dann die gleichen Video Streams geschickt.

01:04:07.950 --> 01:04:08.850
Ne ne.

01:04:08.950 --> 01:04:09.850
Da können so viele.

01:04:09.950 --> 01:04:10.850
Und alle über den gleichen Port.

01:04:10.950 --> 01:04:11.850
Das ist ja das coole.

01:04:11.950 --> 01:04:13.850
Das wird alles multiplex über den gleichen Port.

01:04:13.950 --> 01:04:15.850
Deswegen musst du nur eine Sache in der Firewall freischalten.

01:04:15.950 --> 01:04:20.980
Stimmt.

01:04:21.080 --> 01:04:22.980
Da war irgendwas.

01:04:23.080 --> 01:04:24.980
Ich weiß aber nicht mehr was.

01:04:25.080 --> 01:04:28.420
Ich glaube ich musste.

01:04:28.520 --> 01:04:30.420
Ich musste.

01:04:30.520 --> 01:04:32.420
In Rust noch was aufrufen.

01:04:32.520 --> 01:04:33.420
Für free.

01:04:33.420 --> 01:04:35.890
Naja.

01:04:35.990 --> 01:04:36.890
Wie gesagt.

01:04:36.990 --> 01:04:37.890
Scheiß auf Memory Leaks.

01:04:37.990 --> 01:04:39.890
Hauptsache es funktioniert erstmal.

01:04:39.990 --> 01:04:40.890
So.

01:04:40.990 --> 01:04:41.890
Cargo Build.

01:04:41.990 --> 01:04:42.890
Moment.

01:04:42.990 --> 01:04:43.890
Es funktioniert noch.

01:04:43.990 --> 01:04:46.520
Da kann irgendwas nicht stimmen.

01:04:46.620 --> 01:04:50.340
Da stimmt irgendwas nicht Leute.

01:04:50.440 --> 01:04:51.340
Da stimmt.

01:04:51.440 --> 01:04:52.340
Ich.

01:04:52.440 --> 01:04:59.000
Wenn in Rust einfach was kompiliert dann stimmt was nicht.

01:04:59.100 --> 01:05:00.000
Ok.

01:05:00.100 --> 01:05:01.000
Also.

01:05:01.100 --> 01:05:03.000
Dann legen wir mal los.

01:05:03.100 --> 01:05:05.000
Wir tun mal.

01:05:05.100 --> 01:05:06.000
Wir hardconen erstmal.

01:05:06.100 --> 01:05:07.000
Ok.

01:05:07.100 --> 01:05:08.000
Also.

01:05:08.100 --> 01:05:09.000
Wir brauchen eine Track ID.

01:05:09.100 --> 01:05:10.000
Wir sind in Rust.

01:05:10.000 --> 01:05:14.490
Also Track ID.

01:05:14.590 --> 01:05:15.490
Zwei.

01:05:15.590 --> 01:05:16.490
So.

01:05:16.590 --> 01:05:17.490
Hardcoded Track ID.

01:05:17.590 --> 01:05:18.490
Ok.

01:05:18.590 --> 01:05:20.490
Das hier lassen wir weg.

01:05:20.590 --> 01:05:21.490
So.

01:05:21.590 --> 01:05:22.490
Und das heißt wir brauchen jetzt einen Track.

01:05:22.590 --> 01:05:24.490
Let Track gleich.

01:05:24.590 --> 01:05:25.490
Und jetzt ist die Frage.

01:05:25.590 --> 01:05:27.490
Wie lege ich das in Rust an?

01:05:27.590 --> 01:05:30.490
Track Local Static Sample.

01:05:30.590 --> 01:05:31.490
Irgendwie so.

01:05:31.590 --> 01:05:32.490
Ah.

01:05:32.590 --> 01:05:33.490
New.

01:05:33.590 --> 01:05:34.490
Guck mal da.

01:05:34.590 --> 01:05:41.800
Der braucht ein Codec, eine ID und eine Stream ID.

01:05:41.900 --> 01:05:43.800
Oh Camel.

01:05:43.800 --> 01:05:44.700
Never.

01:05:44.800 --> 01:05:49.400
But I've tried Erlang.

01:05:49.500 --> 01:05:54.440
And.

01:05:54.540 --> 01:05:56.440
Also.

01:05:56.540 --> 01:06:01.440
Also for languages with many parentheses.

01:06:01.540 --> 01:06:03.440
Erlang.

01:06:03.540 --> 01:06:04.440
And.

01:06:04.540 --> 01:06:09.800
Can't remember.

01:06:09.900 --> 01:06:12.800
I think it was Clojure.

01:06:12.900 --> 01:06:16.800
Or something on Java base.

01:06:16.900 --> 01:06:22.070
Also Camel ist gleich Rust mit GC.

01:06:22.170 --> 01:06:23.070
Ok.

01:06:23.070 --> 01:06:50.660
Also ich weiß, dass der ursprüngliche Rust Compiler in OCaml war.

01:06:50.760 --> 01:06:51.660
So.

01:06:51.760 --> 01:06:52.660
Wie funsten das hier jetzt?

01:06:52.760 --> 01:06:54.660
Track Local Static Sample.

01:06:54.760 --> 01:06:56.660
Also wir brauchen eine RTC.

01:06:56.760 --> 01:06:57.660
Was?

01:06:57.760 --> 01:06:58.660
Eine was?

01:06:58.760 --> 01:06:59.660
Eine RTC.

01:06:59.760 --> 01:07:02.660
RTP Codec Capability.

01:07:02.760 --> 01:07:04.660
Ich glaube das ist das gleiche was wir hier.

01:07:04.760 --> 01:07:05.660
Ne.

01:07:05.760 --> 01:07:06.660
Ok.

01:07:06.760 --> 01:07:07.660
Rust.

01:07:07.760 --> 01:07:08.660
Das geht schon los.

01:07:08.760 --> 01:07:10.660
Also was brauchen wir jetzt?

01:07:10.660 --> 01:07:12.560
Ok.

01:07:12.660 --> 01:07:14.560
Und jetzt Klammer auf.

01:07:14.660 --> 01:07:16.560
Mime Type.

01:07:16.660 --> 01:07:18.560
Channels.

01:07:18.660 --> 01:07:20.560
Yep Clock Rate.

01:07:20.660 --> 01:07:27.580
Was will der von mir?

01:07:27.680 --> 01:07:29.580
Ah Default.

01:07:29.680 --> 01:07:31.580
PyFat.

01:07:31.680 --> 01:07:34.580
Ey können wir nicht.

01:07:34.680 --> 01:07:35.580
Moment.

01:07:35.680 --> 01:07:36.580
Hier ist es doch.

01:07:36.680 --> 01:07:37.580
Hier steht es doch.

01:07:37.680 --> 01:07:38.580
Moment.

01:07:38.680 --> 01:07:39.580
Warte mal.

01:07:39.680 --> 01:07:40.580
Hier ist es doch.

01:07:40.680 --> 01:07:44.050
Hier ist es doch.

01:07:44.150 --> 01:07:45.050
Hier ist doch hier.

01:07:45.150 --> 01:07:46.050
Guck mal.

01:07:46.150 --> 01:07:47.050
Hier ist doch alles.

01:07:47.050 --> 01:07:50.640
Kann ich nicht.

01:07:50.740 --> 01:07:53.980
Warte mal.

01:07:54.080 --> 01:07:54.980
Kann man.

01:07:55.080 --> 01:07:55.980
So was.

01:07:56.080 --> 01:07:58.980
So was geht in Rust wahrscheinlich nicht.

01:07:59.080 --> 01:07:59.980
Ne.

01:08:00.080 --> 01:08:02.980
Das dachte ich mir fast schon.

01:08:03.080 --> 01:08:03.980
Static.

01:08:04.080 --> 01:08:04.980
Ne.

01:08:05.080 --> 01:08:05.980
Geht nicht.

01:08:06.080 --> 01:08:06.980
Weil.

01:08:07.080 --> 01:08:08.980
Missing the Type for Static.

01:08:09.080 --> 01:08:10.980
Wieso steht doch da?

01:08:11.080 --> 01:08:12.980
Muss ich irgendwie noch so was machen?

01:08:13.080 --> 01:08:18.080
Habe ich das von uns?

01:08:18.180 --> 01:08:26.900
Das kompiliert doch im Leben nicht.

01:08:27.000 --> 01:08:27.900
Alter.

01:08:28.000 --> 01:08:28.900
Es war.

01:08:29.000 --> 01:08:29.900
Ja.

01:08:29.900 --> 01:08:31.800
Hätte mich auch.

01:08:31.900 --> 01:08:34.800
Hätte mich auch ganz stark gewundert wenn das jetzt einfach kompiliert.

01:08:34.900 --> 01:08:36.800
Wobei der meckert gar nicht da drüber.

01:08:36.900 --> 01:08:38.800
Der meckert hier drüber.

01:08:38.900 --> 01:08:40.800
Sack.

01:08:40.900 --> 01:08:41.800
Ähm.

01:08:41.900 --> 01:08:44.240
Ne.

01:08:44.340 --> 01:08:49.410
Was?

01:08:49.510 --> 01:08:53.410
Ok das geht in Static aus irgendwelchen Gründen nicht.

01:08:53.510 --> 01:08:55.410
Warum auch immer.

01:08:55.510 --> 01:08:56.410
Keine Ahnung.

01:08:56.510 --> 01:08:57.410
Weil.

01:08:57.510 --> 01:08:58.410
PyFat Rust.

01:08:58.510 --> 01:08:59.410
Wir machen.

01:08:59.510 --> 01:09:01.410
Wir machen jetzt einfach eine Funktion draus.

01:09:01.510 --> 01:09:02.410
Public.

01:09:02.510 --> 01:09:03.410
Ok.

01:09:03.410 --> 01:09:04.310
Keine Ahnung.

01:09:04.410 --> 01:09:05.310
Get.

01:09:05.410 --> 01:09:11.400
Ja.

01:09:11.500 --> 01:09:12.400
Ja.

01:09:12.500 --> 01:09:13.400
Ja.

01:09:13.500 --> 01:09:18.400
Ja.

01:09:18.500 --> 01:09:19.400
Ja.

01:09:19.500 --> 01:09:20.400
Ja.

01:09:20.500 --> 01:09:21.400
Ist gut.

01:09:21.500 --> 01:09:30.750
Ich.

01:09:30.850 --> 01:09:31.750
Ich habe schon was getrunken.

01:09:31.850 --> 01:09:39.880
Wie sowas hier.

01:09:39.980 --> 01:09:40.880
Ja.

01:09:40.980 --> 01:09:41.880
Und wie funzt das jetzt?

01:09:41.980 --> 01:09:43.880
Kann man das hier nicht?

01:09:43.980 --> 01:09:44.880
Returnen einfach?

01:09:44.980 --> 01:09:45.880
Moment.

01:09:45.980 --> 01:09:46.880
Moment.

01:09:46.980 --> 01:09:47.880
Oh.

01:09:47.980 --> 01:09:48.880
Warte mal.

01:09:48.980 --> 01:09:49.880
Warte mal.

01:09:49.980 --> 01:09:50.880
Rust.

01:09:50.980 --> 01:09:51.880
FN muss da noch davor.

01:09:51.980 --> 01:09:59.250
Pub FN.

01:09:59.350 --> 01:10:00.250
Ja.

01:10:00.350 --> 01:10:05.740
Und jetzt will er Return Type.

01:10:05.840 --> 01:10:07.740
Mach mal deinen Cargo Check unten an.

01:10:07.940 --> 01:10:10.240
Ah.

01:10:10.340 --> 01:10:20.300
Was.

01:10:20.400 --> 01:10:21.300
Was will das von mir?

01:10:21.400 --> 01:10:31.290
Anschein.

01:10:31.390 --> 01:10:32.290
Anscheinend ist es aus.

01:10:32.390 --> 01:10:34.290
Aber die große Preisfrage ist.

01:10:34.390 --> 01:10:35.290
Wie mache ich es an?

01:10:35.390 --> 01:10:42.080
Ok.

01:10:42.180 --> 01:10:43.080
Gut.

01:10:43.180 --> 01:10:44.080
Das heißt.

01:10:44.180 --> 01:10:47.870
Wenn ich jetzt da irgendeinen Shit reinschreibe.

01:10:47.970 --> 01:10:48.870
Ok.

01:10:48.970 --> 01:10:49.870
Werden wir gleich sehen.

01:10:49.970 --> 01:10:50.870
Also.

01:10:50.970 --> 01:10:51.870
Get Capabilities.

01:10:51.970 --> 01:10:52.870
Schreibt man das so?

01:10:52.970 --> 01:10:53.870
Das schreibt man doch im Leben nicht so.

01:10:53.970 --> 01:10:54.870
Oder?

01:10:54.970 --> 01:10:55.870
Weißt du.

01:10:55.970 --> 01:10:56.870
Kappa.

01:10:56.970 --> 01:10:57.870
Bilities.

01:10:57.970 --> 01:11:01.460
Ok.

01:11:01.560 --> 01:11:02.460
Das.

01:11:02.560 --> 01:11:04.960
Das.

01:11:05.060 --> 01:11:05.960
Kompiliert das jetzt?

01:11:06.060 --> 01:11:06.960
Ja.

01:11:07.060 --> 01:11:07.960
Nice.

01:11:08.060 --> 01:11:08.960
So.

01:11:08.960 --> 01:11:09.860
Das heißt.

01:11:09.960 --> 01:11:12.860
Wir können jetzt an der Stelle das einfach wegschmeißen.

01:11:12.960 --> 01:11:14.860
Track Local Static Sample.

01:11:14.960 --> 01:11:15.860
Gut.

01:11:15.960 --> 01:11:16.860
So.

01:11:16.960 --> 01:11:17.860
Da kriegt man jetzt.

01:11:17.960 --> 01:11:20.860
RTC Code Capability.

01:11:20.960 --> 01:11:22.860
Das da.

01:11:22.960 --> 01:11:24.860
Können wir da reinhauen jetzt.

01:11:24.960 --> 01:11:27.860
Stream Track ID.

01:11:27.960 --> 01:11:28.860
Keine Ahnung.

01:11:28.960 --> 01:11:29.860
1.

01:11:29.960 --> 01:11:30.860
1.

01:11:30.960 --> 01:11:31.860
Wir wollen jetzt.

01:11:31.960 --> 01:11:32.860
Drauf geschissen.

01:11:32.960 --> 01:11:36.710
Erstmal.

01:11:36.810 --> 01:11:37.710
To Owned.

01:11:37.810 --> 01:11:40.280
Nur mal gucken.

01:11:40.380 --> 01:11:42.280
Ob das auch ordentlich läuft.

01:11:42.280 --> 01:11:44.180
So.

01:11:51.100 --> 01:11:52.000
Das Funst.

01:11:52.100 --> 01:11:54.820
Kompiliert noch.

01:11:54.920 --> 01:11:55.820
Ja.

01:11:55.920 --> 01:11:56.820
Gut.

01:11:56.920 --> 01:11:57.820
Gut.

01:11:57.920 --> 01:11:58.820
Gut.

01:11:58.920 --> 01:11:59.820
Also.

01:11:59.920 --> 01:12:00.820
Das brauchen wir nicht.

01:12:00.920 --> 01:12:01.820
Das haben wir.

01:12:01.920 --> 01:12:02.820
Wir haben den Track.

01:12:02.920 --> 01:12:03.820
Track Panic.

01:12:03.920 --> 01:12:04.820
Kommt weg.

01:12:04.920 --> 01:12:05.820
Ja.

01:12:05.920 --> 01:12:06.820
Das wird ja viel kürzer sogar als in Rust.

01:12:06.920 --> 01:12:07.820
So.

01:12:07.920 --> 01:12:09.820
Und jetzt muss ich den Track hier drinnen irgendwie speichern.

01:12:09.920 --> 01:12:11.820
Welchen Package Manager benutzt du?

01:12:11.920 --> 01:12:12.820
Für was?

01:12:12.920 --> 01:12:13.820
So.

01:12:13.920 --> 01:12:18.820
Jetzt haben wir hier irgendwie eine Hash Map.

01:12:18.920 --> 01:12:19.820
Für Tracks.

01:12:19.820 --> 01:12:21.720
Linux.

01:12:21.820 --> 01:12:22.720
Ja.

01:12:22.820 --> 01:12:23.720
Pacman.

01:12:23.820 --> 01:12:26.160
Arch by the way.

01:12:26.260 --> 01:12:27.160
Ach so.

01:12:27.260 --> 01:12:28.160
Das da meinste.

01:12:28.260 --> 01:12:29.160
Das hier.

01:12:29.260 --> 01:12:33.460
Okay.

01:12:33.560 --> 01:12:36.460
Wie kriegt man jetzt in die Hash Map was Gescheites rein?

01:12:36.560 --> 01:12:37.460
Moment.

01:12:37.560 --> 01:12:39.460
Den haben wir noch gar nicht initialisiert.

01:12:39.560 --> 01:12:41.460
Das wird er mir hier auch sagen.

01:12:41.560 --> 01:12:42.460
Ne.

01:12:42.560 --> 01:12:43.460
Ich.

01:12:43.560 --> 01:12:44.460
Das hier unten müssen wir.

01:12:44.560 --> 01:12:46.460
Wir müssen das glaube ich nochmal initialisieren.

01:12:46.560 --> 01:12:47.460
Set.

01:12:47.560 --> 01:12:48.460
Hash Map.

01:12:48.560 --> 01:12:49.460
New.

01:12:49.560 --> 01:12:53.020
Hoffe das funst jetzt.

01:12:53.120 --> 01:12:54.020
Prager.

01:12:54.120 --> 01:12:57.230
Prager.

01:12:57.230 --> 01:12:58.130
Prager.

01:12:58.230 --> 01:12:59.130
Prager.

01:12:59.230 --> 01:13:00.130
Okay.

01:13:00.230 --> 01:13:01.130
Noch.

01:13:01.230 --> 01:13:02.130
Noch.

01:13:02.230 --> 01:13:03.130
Kompiliert.

01:13:03.230 --> 01:13:04.130
Alles.

01:13:04.230 --> 01:13:05.130
Was ich bastle.

01:13:05.230 --> 01:13:08.130
Ein Frontend wo ich per Web RTC Videos hin streamen kann.

01:13:08.230 --> 01:13:14.760
Mischung aus Go.net für die Web Anwendung und bisschen HTML.

01:13:14.860 --> 01:13:17.760
Hauptsächlich bisschen um Rust zu lernen.

01:13:17.860 --> 01:13:20.760
Also ich hab das schon in Go gebaut.

01:13:20.860 --> 01:13:23.760
Ich hab das schon in Go gebaut um zu testen ob es funktioniert.

01:13:23.860 --> 01:13:26.760
Es funktioniert und jetzt bauen wir das in Rust nach.

01:13:26.860 --> 01:13:27.760
Genau.

01:13:27.760 --> 01:13:28.660
Genau.

01:13:28.760 --> 01:13:30.660
Der Twitch Killer.

01:13:30.760 --> 01:13:32.660
Was macht eigentlich Dings hier?

01:13:32.760 --> 01:13:34.660
Kick.

01:13:34.760 --> 01:13:35.660
Letztens.

01:13:35.760 --> 01:13:37.660
Letztes Mal wieder reingeguckt.

01:13:37.760 --> 01:13:40.660
Übelst zwielichtiges Zeug wieder gesehen und gleich wieder ausgemacht.

01:13:40.760 --> 01:13:42.660
Also das ist echt nicht.

01:13:42.760 --> 01:13:44.660
Das ist echt nicht die Twitch Konkurrenz.

01:13:44.760 --> 01:13:45.660
Keine Ahnung ey.

01:13:45.760 --> 01:13:52.730
Das deckt glaube ich ein ganz anderen.

01:13:52.830 --> 01:13:55.730
Ein ganz anderes Klientel ab als Twitch.

01:13:55.830 --> 01:13:58.490
Okay.

01:13:58.590 --> 01:14:01.490
Und jetzt müssen wir den Track inserten in die Hash Map.

01:14:01.590 --> 01:14:02.490
Also.

01:14:02.490 --> 01:14:06.170
Tracks.

01:14:06.270 --> 01:14:08.170
Insert.

01:14:08.270 --> 01:14:09.170
Ne Moment.

01:14:09.270 --> 01:14:12.170
Das ist in einem Once Log.

01:14:12.270 --> 01:14:15.170
Das heißt ich brauch jetzt ähm.

01:14:15.270 --> 01:14:16.170
Write.

01:14:16.270 --> 01:14:18.170
Ne.

01:14:18.270 --> 01:14:25.260
Brauch ich denn jetzt?

01:14:25.360 --> 01:14:31.800
Get.

01:14:31.900 --> 01:14:38.200
Get Mud.

01:14:38.300 --> 01:14:39.200
Okay.

01:14:39.300 --> 01:14:40.200
Get Mud.

01:14:40.300 --> 01:14:42.200
Alles klar.

01:14:42.300 --> 01:14:43.200
Rust.

01:14:43.300 --> 01:14:44.200
Rust.

01:14:44.300 --> 01:14:45.200
Things.

01:14:45.300 --> 01:14:46.200
Unwrap.

01:14:46.300 --> 01:14:48.200
Zack.

01:14:48.300 --> 01:14:50.200
Natürlich geht es.

01:14:50.200 --> 01:14:53.100
Es wäre viel zu einfach wenn das irgendwie.

01:14:53.200 --> 01:14:54.100
Moment.

01:14:54.200 --> 01:14:55.100
Das muss ja Mutt vorne hin wahrscheinlich noch.

01:14:55.200 --> 01:14:57.100
Ne.

01:14:57.200 --> 01:15:03.100
Es wäre viel zu einfach wenn das in Rust einfach gleich funktionieren würde.

01:15:03.200 --> 01:15:04.100
Das.

01:15:04.200 --> 01:15:05.100
Okay.

01:15:05.200 --> 01:15:06.100
Jetzt geht es wieder los Mann.

01:15:06.200 --> 01:15:08.100
Was hat er jetzt für Schmerzen Mann?

01:15:08.200 --> 01:15:09.100
Also.

01:15:09.200 --> 01:15:11.100
Wie habe ich das denn mit API gemacht?

01:15:11.200 --> 01:15:13.100
Bisher habe ich das überhaupt schon mal irgendwo gemacht.

01:15:13.200 --> 01:15:14.100
Ah.

01:15:14.200 --> 01:15:15.100
Get.

01:15:15.200 --> 01:15:16.100
Get muss man machen.

01:15:16.200 --> 01:15:17.100
Moment.

01:15:17.200 --> 01:15:18.100
Get Mutt.

01:15:18.100 --> 01:15:21.000
Jetzt habe ich das doch schon mal hier.

01:15:21.100 --> 01:15:23.800
Cannot borrow immutable local variable tracks.

01:15:24.000 --> 01:15:26.000
Cannot borrow immutable static..

01:15:26.100 --> 01:15:27.000
What?

01:15:27.100 --> 01:15:32.320
Was willst du?

01:15:32.420 --> 01:15:33.320
What?

01:15:33.420 --> 01:15:46.390
Rust.

01:15:47.390 --> 01:15:49.390
Ne das kann es nicht sein hier oder?

01:15:49.490 --> 01:15:54.920
Das geht dann nämlich mit static das geht nicht.

01:15:55.020 --> 01:15:55.920
Oh Gott.

01:15:56.020 --> 01:15:56.920
Rust.

01:15:57.020 --> 01:15:57.920
Alter.

01:15:58.020 --> 01:15:58.920
Hier geht das.

01:15:59.020 --> 01:15:59.920
Okay.

01:16:00.020 --> 01:16:00.920
Get.

01:16:01.020 --> 01:16:01.920
Get funktioniert.

01:16:02.020 --> 01:16:02.920
Ne.

01:16:03.020 --> 01:16:04.920
Get wird schon mal funktionieren.

01:16:05.020 --> 01:16:05.920
Okay.

01:16:05.920 --> 01:16:12.880
das geht jetzt nicht weil es nicht nicht nicht mut ist oh je jetzt kommen wieder rast geschichten

01:16:12.880 --> 01:16:28.160
anstatt er sagt er nicht track id track nun okay hier sagt er mir geht nicht weil not mutable ist

01:16:28.160 --> 01:16:43.300
und jetzt bin ich schon wieder beim lateinern ende am ende was rast angeht what let's track

01:16:43.300 --> 01:17:16.500
was was was will er von mir genau doppelpunkt das geht doch nicht aber aber gett mut funktioniert

01:17:16.500 --> 01:17:35.660
nicht man aber gett mut funktioniert nicht weil ich kenne keine bono im youtube

01:17:35.660 --> 01:17:42.640
okay wahrscheinlich ist den one slot nicht genug ich

01:17:42.640 --> 01:17:42.820
brauche keinen und beides hat nicht genug ich brauche nichts aber es ist ein one slot

01:17:42.820 --> 01:18:37.850
wahrscheinlich noch einen Mutax oder irgendwas. Rust, jetzt komm. Rust, please. Okay, once lock, mutable. Okay, hier, da, also. Rust, erklär es. Once. What you want is a Mutax or RW-Lock. Ja, Moment, RW-Lock?

01:18:37.850 --> 01:19:09.680
RW-Lock. RW-Lock alleine reicht mir doch gar nicht. Oder? RW-Lock. Nee, RW-Lock alleine reicht mir, glaube ich, nicht. RW-Lock. Im Moment, ah, fucking shit. Fertig? Ich, ich, ich bin verwirrt.

01:19:10.920 --> 01:19:19.480
Warte mal, RW-Lock geht doch gar nicht, weil ich, weil ich hier jetzt nicht, nicht sagen kann, oder, weil ich jetzt hier nicht sagen kann, Hashmap,

01:19:19.480 --> 01:20:05.630
New drinne. Oder doch? Oder doch? Ich bin mir da unschlüssig. Okay. Okay, RW-Lock. RW-Lock. Und jetzt, muss ich sagen, Ride, ne? Ride, unwrap. Oh man, Alter. Was? Alter, Rust.

01:20:09.990 --> 01:20:13.650
Okay, mutable. Okay, Prage, Prage. Oh.

01:20:14.950 --> 01:20:44.400
Cannot call non-const. Okay, das dachte ich mir doch. Das heißt, okay, okay, Leute, okay, ich, ich, ich, Achtung. Outplayed, Rust. Outplayed. Ich weiß, was Rust von mir will. Die will, die wollen ein Once-Lock, gerapptes RW-Lock. Wollen wir wetten. Das wollen die haben. Die wollen ein Once-Lock, RW-Lock.

01:20:52.310 --> 01:20:54.110
Kannst du mal abholen, was du da machst?

01:20:54.390 --> 01:21:10.820
Ich baue was, das ich in Go gebaut hab, um in Rust. Und aktuell versuche ich, Rust dazu zu bringen, dass ich in die Liste was reinschreiben kann. Und das ist in Rust schon mal gar nicht so einfach. So, RW-Lock.

01:21:10.820 --> 01:21:33.180
New. Achso, und jetzt Hashmap. Hashmap. New. Jetzt, Prage, Prage, Prage, Prage. Okay, Tracks. Okay. Also, RW-Lock. Jetzt brauchen wir Get.

01:21:33.860 --> 01:21:48.040
Dann brauchen wir Unwrap. Right? Unwrap. Okay, guck mal, es gibt keine Fehler mehr. Es gibt keine Fehler mehr. Easy. Es kompiliert. Also, okay.

01:21:48.040 --> 01:22:03.740
Wir brauchen ein RW-Lock, gerappt in Once-Lock. Obviously. Ich meine, wem das nicht klar gewesen ist, dem ist auch nicht mehr zu helfen. Wir brauchen eine Hashmap. Also, eine generic Hashmap, gerappt in RW-Lock, gerappt in Once-Lock.

01:22:03.860 --> 01:22:15.020
Klar ist klar. Alright. Easy, würde ich sagen, ist das. Das ist nicht einfach nur easy, das ist ultra easy.

01:22:15.020 --> 01:22:24.000
Warum ich mir das antue, weil alle coolen Leute Rust verwenden. Und ich will auch cool sein.

01:22:26.440 --> 01:22:38.110
Intuitiv, ich hätte die Sprache auch so designt. Was ich gerade verstanden habe. Also, ich habe eine Mischung verstanden aus Kekkel und Kekweight,

01:22:38.650 --> 01:22:39.490
gepaart mit Weird.

01:22:39.530 --> 01:23:13.260
Ja. Wobei, ich glaube, die richtig coolen Rust-Leute, die schreiben das sogar so, gell? Also, Chatge, es hat funktioniert. Wir haben einen Track erstellt. Also, wir haben das Go-Zeug nachgebaut. Wir haben einen Track erstellt mit der ID.

01:23:13.260 --> 01:23:25.320
Okay. Achso, ja, Moment. Mit der ID. Wie macht man denn? Gibt es ein To-String? Ah, nice.

01:23:25.320 --> 01:23:42.010
Eventuell gibt es auch eine einfachere Lösung. Wenn ihr eine kennt, Leute, keine Ahnung.

01:23:44.010 --> 01:24:07.540
Also, Static RW-Lock Rusts. Also, das Problem ist ja, dass in diesem globalen Kontext hier nur statische Sachen erlaubt sind und keine Initialisierung von zum Beispiel einer Hash-Map.

01:24:08.060 --> 01:24:13.980
Also, insofern bleibt ja nur Once-Lock, weil ich das so eine Art Constructor-mäßig initialisieren muss.

01:24:14.000 --> 01:24:22.060
Und dann noch ein RW-Lock da drinnen, weil ich die Mutable Reference nicht aus dem Once-Lock rauskriege. Was auch immer.

01:24:23.240 --> 01:24:37.300
Okay. Wieso ich die IDE benutze? Weil ich sie ausprobieren will. Und weil das Chatplanes-Zeug in der Regel ziemlich nice ist.

01:24:40.040 --> 01:24:44.820
Okay, weiter. Insert Track. Wie geht das Go-Zeug weiter jetzt?

01:24:45.260 --> 01:24:51.320
Also, in Go haben wir als nächstes jetzt Create Connection, Leute.

01:24:52.160 --> 01:24:57.880
Connection. Das bauen wir jetzt nach in Rust.

01:24:59.460 --> 01:25:06.820
Also, Create Connection. Als erstes brauchen wir die API-Funktion und legen eine neue Pair-Connection an.

01:25:07.280 --> 01:25:10.460
Das habe ich auch schon gemacht in Rust. Das gibt es hier.

01:25:12.770 --> 01:25:15.790
Dann adden wir die Tracks. Okay, das klingt auch logisch.

01:25:19.220 --> 01:25:24.380
Also, hier haben wir unser API-Objekt, wo wir neue Connections anlegen können.

01:25:24.700 --> 01:25:27.380
Okay.

01:25:27.380 --> 01:25:28.260
Die Offer, die wir hier eröffnen.

01:25:28.280 --> 01:25:31.380
Das kommt erst später. Und das hier kommt auch erst später.

01:25:31.980 --> 01:25:33.940
So, hier haben wir die Pair-Connection.

01:25:34.900 --> 01:25:37.600
Jetzt brauchen wir eine Loop über alle Tracks.

01:25:40.070 --> 01:25:41.050
Jetzt bin ich mal gespannt.

01:25:41.850 --> 01:25:46.330
For I in Tracks. Das geht so im Leben nicht.

01:25:46.510 --> 01:25:50.910
Tracks. Moment. Ich brauche jetzt Get Unwrap.

01:25:53.330 --> 01:25:56.850
Read. Jetzt tatsächlich nur Read Unwrap.

01:25:56.850 --> 01:25:59.470
Ne. Unwrap?

01:25:59.910 --> 01:26:00.670
Einfach so.

01:26:08.990 --> 01:26:12.450
Let Tracks. Da haben wir hier eine lokale Variable draus, ja.

01:26:13.230 --> 01:26:13.810
Tracks.

01:26:15.110 --> 01:26:16.130
Funktionst du das jetzt?

01:26:17.210 --> 01:26:17.810
Tracks.

01:26:20.190 --> 01:26:22.170
Und jetzt Iteraten.

01:26:24.430 --> 01:26:25.710
Okay, nice, nice, nice.

01:26:28.260 --> 01:26:29.760
Kann die IDE irgendwie...

01:26:31.740 --> 01:26:33.900
Use Destructing Declaration. Okay.

01:26:33.900 --> 01:26:40.260
Also, einmal für ID und einmal für Pair Connection.

01:26:40.760 --> 01:26:43.960
Aber ich merke schon, die Rust-Leute schreiben das nicht gerne aus.

01:26:43.960 --> 01:26:45.360
So, kompiliert es noch?

01:26:45.360 --> 01:26:47.360
Okay, nice, nice, nice, nice, nice, nice.

01:26:47.360 --> 01:26:52.460
Also, das habe ich bei Rust gelernt. Sobald es kompiliert ist, dann geht das auch.

01:26:52.460 --> 01:26:54.960
Meistens.

01:26:54.960 --> 01:27:00.130
Kann man das hier irgendwie umbrechen, dass man das irgendwie ein bisschen besser lesen kann?

01:27:00.130 --> 01:27:02.760
So, ha.

01:27:02.760 --> 01:27:12.840
Ich weiß nicht, ob das die korrekte Formatierung ist für Rust.

01:27:12.840 --> 01:27:17.960
Aber es fällt mir einfacher zu lesen, als das 500-mal Unwrap hintereinander zu machen.

01:27:17.960 --> 01:27:21.420
Hintereinander.

01:27:21.420 --> 01:27:23.420
Vorloop ist verboten.

01:27:23.420 --> 01:27:25.420
Wieso, was ist... Hä?

01:27:25.420 --> 01:27:28.420
Also, ich meine verboten offensichtlich ja nicht.

01:27:28.420 --> 01:27:37.420
Aber was ist der Vorteil zum Loopen von einer Collection keine Loop zu nehmen?

01:27:38.420 --> 01:27:41.420
Das klingt doch schon beim Aussprechen weird, oder?

01:27:52.440 --> 01:27:55.440
Siehst du, verständlich. Ja, das stimmt.

01:27:55.440 --> 01:27:58.440
Das ist ein gutes Rust-Kriterium.

01:27:58.440 --> 01:27:59.440
So.

01:27:59.440 --> 01:28:04.440
Jetzt muss ich die Pair-Connection, die braucht jetzt Add-Track.

01:28:04.440 --> 01:28:06.440
So was gibt es hier bestimmt auch.

01:28:06.440 --> 01:28:10.010
Natürlich nicht.

01:28:10.010 --> 01:28:11.010
Moment.

01:28:11.010 --> 01:28:14.010
Ich bin ja auch Massive, Massive-Pepega.

01:28:14.010 --> 01:28:16.010
Das ist ja auch nicht Pair-Connected.

01:28:16.010 --> 01:28:18.010
Was mache ich denn für einen Blödsinn?

01:28:18.010 --> 01:28:20.010
Das hier sind ja die Tracks.

01:28:20.010 --> 01:28:22.010
Nicht die Pair-Connections.

01:28:22.010 --> 01:28:23.010
Das sind die Tracks.

01:28:23.010 --> 01:28:27.010
Und die Pair-Connection, die habe ich hier.

01:28:27.010 --> 01:28:29.010
So, Add-Track.

01:28:29.010 --> 01:28:30.010
Track.

01:28:30.010 --> 01:28:32.010
So.

01:28:33.010 --> 01:28:34.010
Geht nicht.

01:28:34.010 --> 01:28:35.010
Weil?

01:28:35.010 --> 01:28:36.010
Warum?

01:28:36.010 --> 01:28:37.010
Unused.

01:28:39.010 --> 01:28:40.010
Await.

01:28:40.010 --> 01:28:41.010
Perfekt.

01:28:42.010 --> 01:28:43.010
Unwrap.

01:28:43.010 --> 01:28:44.010
Noch besser.

01:28:44.010 --> 01:28:45.010
Excellent.

01:28:45.010 --> 01:28:47.010
Und jetzt mag er nicht.

01:28:47.010 --> 01:28:48.010
Weil?

01:28:48.010 --> 01:28:49.010
What?

01:28:50.010 --> 01:28:52.010
Expected.

01:28:52.010 --> 01:28:53.010
Arc.

01:28:53.010 --> 01:28:54.010
Dünn.

01:28:54.010 --> 01:28:55.010
Track.

01:28:55.010 --> 01:28:56.010
Local.

01:28:56.010 --> 01:28:57.010
Plus Send.

01:28:57.010 --> 01:28:58.010
Plus Sync.

01:28:58.010 --> 01:28:59.010
But found.

01:28:59.010 --> 01:29:00.010
Artic Sample.

01:29:00.010 --> 01:29:08.120
Was expectet der?

01:29:08.120 --> 01:29:11.120
Ein Arc.

01:29:11.120 --> 01:29:12.120
Dünn.

01:29:12.120 --> 01:29:13.120
Track.

01:29:13.120 --> 01:29:14.120
Local.

01:29:14.120 --> 01:29:18.290
Send.

01:29:18.290 --> 01:29:19.290
Sync.

01:29:19.290 --> 01:29:21.290
Das ist ja fast schon schlimmer als C++, die Syntax hier.

01:29:21.290 --> 01:29:22.290
Okay.

01:29:22.290 --> 01:29:28.330
Ich kopiere mir das einfach mal raus und frage ihn, ob es das überhaupt gibt.

01:29:28.330 --> 01:29:29.330
Ne.

01:29:29.330 --> 01:29:30.330
Das gibt es gar nicht.

01:29:30.330 --> 01:29:31.330
Okay.

01:29:31.330 --> 01:29:32.330
Arc kenne ich.

01:29:32.330 --> 01:29:34.330
Das ist, das ist Reference Counting Zeug.

01:29:34.330 --> 01:29:36.330
Machen wir jetzt einfach.

01:29:36.330 --> 01:29:37.330
Arc.

01:29:37.330 --> 01:29:38.330
New.

01:29:38.330 --> 01:29:42.370
Arc.

01:29:42.370 --> 01:29:43.370
New.

01:29:43.370 --> 01:29:44.370
Track.

01:29:44.370 --> 01:29:45.370
Track.

01:29:45.370 --> 01:29:46.370
Local.

01:29:46.370 --> 01:29:47.370
Ne.

01:29:47.370 --> 01:29:48.370
Einfach nur Track.

01:29:48.370 --> 01:29:49.370
Okay.

01:29:49.370 --> 01:29:50.370
Das geht nicht.

01:29:50.370 --> 01:29:51.370
Weil?

01:29:51.370 --> 01:29:52.370
Ach.

01:29:52.370 --> 01:29:55.370
Der will das Objekt direkt haben und nicht einfach dereferenzieren.

01:29:55.370 --> 01:29:56.370
Geht nicht.

01:29:56.370 --> 01:29:57.370
Vermutlich.

01:29:57.370 --> 01:29:58.370
Weil er sagt.

01:29:58.370 --> 01:29:59.370
Cannot move.

01:29:59.370 --> 01:30:02.770
Oh.

01:30:02.770 --> 01:30:03.770
Oh.

01:30:03.770 --> 01:30:09.790
Nein.

01:30:09.790 --> 01:30:10.790
Nein.

01:30:10.790 --> 01:30:11.790
Nein.

01:30:11.790 --> 01:30:14.230
Nein.

01:30:14.230 --> 01:30:15.230
Nein.

01:30:15.230 --> 01:30:16.230
Nein.

01:30:16.230 --> 01:30:17.230
Nein.

01:30:17.230 --> 01:30:18.230
Nein.

01:30:18.230 --> 01:30:19.230
Nein.

01:30:19.230 --> 01:30:20.230
Nein.

01:30:20.230 --> 01:30:21.230
Nein.

01:30:21.230 --> 01:30:23.740
Nein.

01:30:23.740 --> 01:30:24.740
Nein.

01:30:24.740 --> 01:30:25.740
Nein.

01:30:25.740 --> 01:30:26.740
Nein.

01:30:26.740 --> 01:30:27.740
Nein.

01:30:27.740 --> 01:30:28.740
Nein.

01:30:28.740 --> 01:30:29.740
Nein.

01:30:29.740 --> 01:30:30.740
Nein.

01:30:30.740 --> 01:30:31.740
Nein.

01:30:31.740 --> 01:30:32.740
Nein.

01:30:32.740 --> 01:30:33.740
Nein.

01:30:33.740 --> 01:30:34.740
Nein.

01:30:34.740 --> 01:30:35.740
Nein.

01:30:35.740 --> 01:30:36.740
Nein.

01:30:36.740 --> 01:30:37.740
Nein.

01:30:37.740 --> 01:30:38.740
Nein.

01:30:38.740 --> 01:30:39.740
Nein.

01:30:39.740 --> 01:30:40.740
Nein.

01:30:40.740 --> 01:30:41.740
Nein.

01:30:41.740 --> 01:30:42.740
Nein.

01:30:42.740 --> 01:30:45.180
Nein.

01:30:45.180 --> 01:30:46.180
Nein.

01:30:46.180 --> 01:30:47.180
Nein.

01:30:47.180 --> 01:30:48.180
Nein.

01:30:48.180 --> 01:30:49.180
Nein.

01:30:49.180 --> 01:30:50.180
Nein.

01:30:50.180 --> 01:30:51.180
Nein.

01:30:51.180 --> 01:30:52.180
Nein.

01:30:52.180 --> 01:31:08.540
und und das ist für irgendwelche callbacks also ich weiß ich weiß was wir machen müssen und zwar

01:31:08.540 --> 01:31:19.820
ob wir es lieb wie jeder weiß ist dass hier oben noch nicht lang genug das heißt wir brauchen jetzt

01:31:19.820 --> 01:31:43.870
kein oneslog rw log hashmap wir brauchen einen oneslog rw log hashmap arg das war eindeutig zu

01:31:43.870 --> 01:31:51.850
kurz noch wir brauchen noch einen weiteres unwrap irgendwo wieso über die hashmap weil die weil die

01:31:51.850 --> 01:32:05.130
random ids oder random also theoretisch random ids bekommt jede jeder track so und jetzt muss

01:32:05.130 --> 01:32:05.290
ich sagen

01:32:05.290 --> 01:32:19.730
natürlich beim track hinzufügen schon sagen arg new track track ah ja jetzt seht ihr seht ihr und

01:32:19.730 --> 01:32:26.170
jetzt machen wir das ganze noch mal arg und jetzt kann ich das hinzufügen weil jetzt ist es ja schon

01:32:26.170 --> 01:32:33.130
in einem arg drin nein kann ich nicht das war fucking shit weil aber warum nicht expected arg

01:32:33.130 --> 01:32:34.530
dünn found arg

01:32:35.290 --> 01:32:42.790
ok das ist ein referencounter da habe ich was drüber gelesen das ist ein referencounter ich

01:32:42.790 --> 01:32:51.550
muss jetzt quasi sowas sagen wie klon ja pfeifertime die sache ist bloß die klone ich jetzt in track

01:32:51.550 --> 01:32:58.750
oder klon ich jetzt den arg ich will den arg klonen und nicht den track ok track hat gar keinen klon

01:33:00.650 --> 01:33:05.250
nee twoowned will ich wahrscheinlich twoowned will ich nicht weil das ja in der collection

01:33:05.290 --> 01:33:06.590
weiterbleiben soll.

01:33:08.230 --> 01:33:09.670
Ich clone den Arc.

01:33:10.330 --> 01:33:11.430
Dann passt das doch, oder?

01:33:12.850 --> 01:33:13.610
Was convert

01:33:13.610 --> 01:33:14.630
to UFKZ?

01:33:22.910 --> 01:33:24.750
Äh, was ist

01:33:24.750 --> 01:33:25.630
UFKZ?

01:33:30.040 --> 01:33:32.200
Universal Function Call Syntax.

01:33:32.540 --> 01:33:33.160
UFKZ.

01:33:35.020 --> 01:33:36.620
Okay, Chad, was ist, was ist,

01:33:36.620 --> 01:33:38.480
was ist geileres, was ist

01:33:38.480 --> 01:33:40.640
geileres Rust? Punkt Clone?

01:33:41.520 --> 01:33:42.300
Oder Arc

01:33:42.300 --> 01:33:43.280
Clone Track?

01:33:46.240 --> 01:33:48.400
Was, was machen die wahren Rust

01:33:48.400 --> 01:33:53.900
Könner? Moment, so funktioniert

01:33:53.900 --> 01:33:54.620
es überhaupt nicht, oder?

01:33:58.290 --> 01:33:59.610
Aber mit Clone funktioniert es.

01:34:02.960 --> 01:34:13.540
Äh, das ist ja super,

01:34:13.700 --> 01:34:13.860
wir.

01:34:15.420 --> 01:34:17.680
Guck mal, die IDE bietet mir

01:34:17.680 --> 01:34:20.000
an, das umzuwandeln, aber das umgewandelte

01:34:20.000 --> 01:34:21.740
ist gar nicht äquivalent zu dem

01:34:21.740 --> 01:34:29.260
hier. Seht ihr das?

01:34:29.260 --> 01:34:30.240
So geht das nicht.

01:34:30.820 --> 01:34:32.440
Aber, aber so geht es.

01:34:34.800 --> 01:34:36.480
Ich verstehe aber gar nicht, warum nicht.

01:34:38.320 --> 01:34:38.720
Weil unter

01:34:38.720 --> 01:34:40.580
der Haube macht Clone doch wahrscheinlich auch

01:34:40.580 --> 01:34:42.660
Wow, what? Also, okay,

01:34:42.980 --> 01:34:43.220
Leute,

01:34:43.860 --> 01:34:46.620
eins kann man den Rust-Leuten nicht

01:34:46.620 --> 01:34:48.520
vorwerfen, sie hätten zu wenig

01:34:48.520 --> 01:34:50.540
Docs. Ich meine, seriously,

01:34:50.980 --> 01:34:52.480
die Funktion besteht aus

01:34:52.480 --> 01:34:54.680
drei Zeilen Rust. Drei Zeilen

01:34:54.680 --> 01:34:56.740
Rust und 80 Zeilen Docs.

01:34:58.700 --> 01:35:00.500
Also das Gegenteil von meinem Kram.

01:35:04.150 --> 01:35:05.350
Ne, heute, heute muss

01:35:05.350 --> 01:35:07.350
Rust, heute musst du durch

01:35:07.350 --> 01:35:08.030
mit Rust, so.

01:35:09.790 --> 01:35:10.930
Okay, das haben wir auch.

01:35:11.570 --> 01:35:13.450
Also den, den Go-Part

01:35:13.450 --> 01:35:15.390
haben wir auch umgewandelt. Jetzt geht es

01:35:15.390 --> 01:35:15.890
darum,

01:35:17.630 --> 01:35:19.250
die Offer für den Browser zu

01:35:19.250 --> 01:35:21.230
createn. Das können wir uns hier schon mal

01:35:21.230 --> 01:35:23.230
merken. Okay,

01:35:23.450 --> 01:35:24.250
Create Offer.

01:35:25.310 --> 01:35:27.050
Bei Go ist es 0.

01:35:27.870 --> 01:35:28.930
Hier ist es None.

01:35:44.890 --> 01:35:46.070
Neue Zeilen kommen.

01:35:46.070 --> 01:35:48.010
So, und jetzt

01:35:48.010 --> 01:35:50.130
brauchen, okay, das, jetzt, okay, das

01:35:50.130 --> 01:35:51.750
weiß ich nicht, wie es funktioniert. Jetzt müssen wir

01:35:51.750 --> 01:35:53.550
IP-Adressen einsammeln. Also,

01:35:53.690 --> 01:35:56.010
Endpoints, wohin das Video geschickt

01:35:56.010 --> 01:35:58.030
werden soll. Da muss ich

01:35:58.030 --> 01:35:59.870
GitHub WebRTC,

01:36:02.800 --> 01:36:04.840
da muss ich bei denen gucken, wie das, wie das

01:36:04.840 --> 01:36:06.020
funzt in den Examples.

01:36:07.640 --> 01:36:08.080
Examples.

01:36:10.710 --> 01:36:11.990
Wir hatten doch hier so einen Single

01:36:11.990 --> 01:36:12.890
Port hier.

01:36:14.890 --> 01:36:15.990
Ice Restart.

01:36:17.210 --> 01:36:17.650
Gather.

01:36:19.650 --> 01:36:20.130
Gather

01:36:20.130 --> 01:36:22.090
Complete. Create a channel that is

01:36:22.090 --> 01:36:24.130
blocked until Ice Gathering

01:36:24.130 --> 01:36:28.260
is complete. Wir blocken

01:36:28.260 --> 01:36:29.960
until Ice Gathering is complete.

01:36:30.120 --> 01:36:31.900
Leute, ihr wollt auch schon immer, bis, bis

01:36:31.900 --> 01:36:33.760
das Eis gesammelt ist, blocken.

01:36:33.940 --> 01:36:35.200
Gibt es, gibt es zu.

01:36:38.910 --> 01:36:40.350
Nicer, nicer Blocker.

01:36:41.450 --> 01:36:42.910
So, let mut

01:36:42.910 --> 01:36:45.090
per connection

01:36:45.090 --> 01:36:47.210
gathering completed

01:36:47.210 --> 01:36:48.470
promise await.

01:36:48.890 --> 01:36:51.150
Lass mich raten, unwrap. Ach ne, hier kein unwrap.

01:36:55.510 --> 01:36:56.870
Ach so, ja, Moment, weil ich da später

01:36:56.870 --> 01:36:57.790
drauf warten will.

01:36:58.470 --> 01:37:00.810
Meine Güte. Und jetzt,

01:37:01.690 --> 01:37:02.910
okay, per connection

01:37:02.910 --> 01:37:11.190
set, set

01:37:11.190 --> 01:37:12.290
local description.

01:37:15.520 --> 01:37:16.760
Set local description.

01:37:20.780 --> 01:37:22.140
Ich baue ein

01:37:22.140 --> 01:37:24.200
Programm mit,

01:37:24.460 --> 01:37:27.040
.net, backend und

01:37:27.040 --> 01:37:28.840
low-level Rust WebRTC

01:37:28.840 --> 01:37:29.340
Zeug.

01:37:30.640 --> 01:37:32.880
Und ich hab nicht so super viel Ahnung von Rust.

01:37:33.880 --> 01:37:35.040
Okay, per connection

01:37:35.040 --> 01:37:36.900
set local. Da müssen wir jetzt wahrscheinlich

01:37:36.900 --> 01:37:38.920
diese Offer da rein schieben,

01:37:39.080 --> 01:37:40.740
dass das funktioniert. Natürlich nicht.

01:37:41.160 --> 01:37:42.800
Das wäre viel zu einfach, wenn das einfach

01:37:42.800 --> 01:37:44.280
funktionieren würde. Ach so.

01:37:46.610 --> 01:37:46.910
Vielleicht.

01:37:48.490 --> 01:37:50.530
Await. Unwrap. Unwrap.

01:37:51.910 --> 01:37:53.050
Die sind so hässlich,

01:37:53.210 --> 01:37:54.610
man. So, und jetzt muss ich warten,

01:37:54.690 --> 01:37:56.010
bis er alle IP-Adressen diskretiert.

01:37:56.030 --> 01:37:57.390
Wie funktioniert das so?

01:37:58.050 --> 01:38:00.430
Gather completed, receive async.

01:38:00.650 --> 01:38:02.150
Unwrap? Nochmal unwrap.

01:38:02.250 --> 01:38:03.070
Alles unwrappen.

01:38:04.350 --> 01:38:06.230
Guck mal, die unwrappen das hier auch nicht.

01:38:06.410 --> 01:38:08.130
Warum nicht? Ach so,

01:38:08.210 --> 01:38:08.990
weil sie es einfach,

01:38:09.170 --> 01:38:11.630
weil sie es einfach droppen.

01:38:12.570 --> 01:38:13.010
Auch gut.

01:38:13.890 --> 01:38:15.930
Wir machen das exakt so, wie das

01:38:15.930 --> 01:38:19.780
Beispiel das sagt. Also,

01:38:19.900 --> 01:38:21.640
da hätten wir doch das hier auch schon geschafft.

01:38:21.900 --> 01:38:23.720
Ja, unique. Ach so,

01:38:23.880 --> 01:38:24.840
ja, track ID.

01:38:24.840 --> 01:38:26.940
Track ID

01:38:26.940 --> 01:38:27.700
habe ich, ähm,

01:38:27.740 --> 01:38:28.720
nee, nicht track ID, ähm,

01:38:28.740 --> 01:38:30.260
per-connection-ID habe ich nicht.

01:38:30.980 --> 01:38:32.020
Brauche ich auch nicht.

01:38:32.420 --> 01:38:34.480
Wird, werde ich einfach ignorieren.

01:38:41.190 --> 01:38:41.350
So.

01:38:43.210 --> 01:38:44.850
Also, heißt im Endeffekt,

01:38:44.950 --> 01:38:45.850
wir brauchen jetzt,

01:38:47.210 --> 01:38:48.710
ah, wir brauchen noch, okay, wir brauchen

01:38:48.710 --> 01:38:50.470
das gleiche nochmal für Connections.

01:38:53.450 --> 01:38:54.650
Tracks, once log,

01:38:54.730 --> 01:38:56.570
log, Hashmap, arg,

01:38:57.730 --> 01:38:58.530
per-connection.

01:39:04.340 --> 01:39:04.780
Connections.

01:39:07.270 --> 01:39:08.970
Ja, okay. Nice. Ritter Ross,

01:39:08.970 --> 01:39:09.810
danke schön für den Sub.

01:39:10.470 --> 01:39:12.230
Du bist mir auch heute auf GitHub gefollowt.

01:39:12.310 --> 01:39:12.830
Habe ich gesehen.

01:39:13.630 --> 01:39:15.330
War nämlich heute mal wieder auf GitHub eingeloggt,

01:39:15.370 --> 01:39:17.090
auf der Startseite, da habe ich deinen Namen gesehen.

01:39:17.470 --> 01:39:19.070
Fällt mir gerade ein, wo ich dich hier im Chat sehe.

01:39:19.910 --> 01:39:21.770
So, Connections, das passt.

01:39:23.710 --> 01:39:24.070
Okay.

01:39:24.790 --> 01:39:25.350
Also, jetzt,

01:39:25.630 --> 01:39:27.670
jetzt müssen wir die Connections speichern,

01:39:27.770 --> 01:39:29.770
hier in dem Array, beziehungsweise in der Liste.

01:39:32.960 --> 01:39:34.400
Du kannst mit Rust auf WebAssembly

01:39:34.400 --> 01:39:36.340
aber keine UDP-Pakete versenden.

01:39:36.740 --> 01:39:38.200
Nee, aber das ist ja auch nicht

01:39:38.200 --> 01:39:40.020
auf WebAssembly-Basis, das ist ein

01:39:40.020 --> 01:39:41.020
Server-Backend.

01:39:42.140 --> 01:39:43.660
Letztendlich ruft der Server

01:39:43.660 --> 01:39:46.020
per RTSP von Webcams

01:39:46.020 --> 01:39:47.800
die Streams ab und schickt die an

01:39:47.800 --> 01:39:49.700
beliebig viele Browser, die sich verbinden.

01:39:52.000 --> 01:39:53.380
Okay, wie geht das jetzt nochmal hier?

01:39:53.940 --> 01:39:54.420
Connections,

01:39:56.980 --> 01:39:57.660
get,

01:39:59.240 --> 01:39:59.840
unwrap,

01:40:00.240 --> 01:40:02.100
write,

01:40:04.000 --> 01:40:04.560
unwrap,

01:40:05.860 --> 01:40:06.400
keck, wait.

01:40:08.640 --> 01:40:09.020
Machen wir das,

01:40:09.020 --> 01:40:10.360
machen wir das richtig so, okay.

01:40:11.360 --> 01:40:12.840
So, nochmal die, die,

01:40:12.840 --> 01:40:14.160
wie die Rust-Pros,

01:40:14.980 --> 01:40:16.260
Zeilen und Brüche rein,

01:40:16.620 --> 01:40:17.160
okay, so.

01:40:17.180 --> 01:40:18.700
So, Connections,

01:40:18.960 --> 01:40:19.680
Insert,

01:40:20.220 --> 01:40:24.340
eine ID, okay, ich brauch ne Random,

01:40:24.460 --> 01:40:26.360
ne Random, okay, komm, 1.

01:40:26.780 --> 01:40:27.800
Das ist doch vollkommen egal.

01:40:29.180 --> 01:40:29.960
Und jetzt,

01:40:30.360 --> 01:40:32.500
die per Connection inserten.

01:40:33.880 --> 01:40:34.600
Please, einfach

01:40:34.600 --> 01:40:36.500
Funktionieren. Ah man, was ist

01:40:36.500 --> 01:40:38.480
denn das Problem jetzt schon wieder? Achso, Arc,

01:40:38.700 --> 01:40:40.100
okay, Arc, New,

01:40:40.800 --> 01:40:42.520
brauch ich, muss das überhaupt in den Arc rein

01:40:42.520 --> 01:40:44.340
jetzt? Warum haben wir das

01:40:44.340 --> 01:40:45.440
nochmal in den Arc gemacht?

01:40:48.770 --> 01:40:49.690
Okay, keine Ahnung,

01:40:49.830 --> 01:40:50.930
ich, ich lass es ein.

01:40:50.950 --> 01:40:52.950
Einfach mal als Arc, okay.

01:40:53.270 --> 01:40:55.270
Connections geht nicht, weil

01:40:55.750 --> 01:40:56.750
es mutable.

01:40:59.400 --> 01:40:59.900
Ah ja.

01:41:00.760 --> 01:41:02.760
Das musst du hier oben bei Tracks auch machen.

01:41:06.850 --> 01:41:08.850
Heu, Ritter Rust heute, ja.

01:41:10.710 --> 01:41:11.810
Vorkname, Build.

01:41:11.810 --> 01:41:13.810
Hey, Leute, es, es, es, es

01:41:13.810 --> 01:41:15.810
bildet, das ist schon mal top.

01:41:17.030 --> 01:41:19.030
Okay, hier müssen wir jetzt, jetzt wird's

01:41:19.030 --> 01:41:21.030
tatsächlich, tatsächlich noch ein bisschen komplizierter,

01:41:21.030 --> 01:41:23.030
hier müssen wir jetzt ein

01:41:23.030 --> 01:41:25.030
Struct returnen.

01:41:25.030 --> 01:41:25.630
Struct returnen.

01:41:26.010 --> 01:41:30.810
Und zwar soll das Struct folgendermaßen aussehen.

01:41:30.810 --> 01:41:36.980
Offer und dann Client ID.

01:41:36.980 --> 01:41:38.980
Ja gut, das ist relativ easy.

01:41:40.140 --> 01:41:42.140
Also brauchen wir noch ein Struct,

01:41:42.140 --> 01:41:44.300
Struct,

01:41:44.300 --> 01:41:46.360
wenn wir das, nennen wir das einfach,

01:41:46.360 --> 01:41:49.260
ähm ja, Connection result,

01:41:49.260 --> 01:41:51.100
wie in C sharp

01:41:51.100 --> 01:41:53.320
auch, Struct, Connection result

01:41:53.320 --> 01:41:55.060
und da drin, okay,

01:41:55.060 --> 01:41:57.280
PAP, wir machen das, nee, wir machen das PAP.

01:41:57.280 --> 01:41:59.540
So, und da drin,

01:41:59.560 --> 01:42:16.340
brauchen wir jetzt was wir brauchen client id das ist ein 32 oder so und wir brauchen offer

01:42:16.340 --> 01:42:29.840
offer das ist ein moment wie mache ich denn da jetzt ein c string konst das ist das ist das ist

01:42:29.840 --> 01:42:46.280
gold konst bei oder so es gibt c string das ist aber glaube ich nur zum zurückwarten hier brauche

01:42:46.280 --> 01:43:23.660
ich das ist ein konst okay moment rast strakt inter opc return of ffi ja strakt von stars wie

01:43:23.660 --> 01:43:28.200
geht das jetzt wenn er sich letztens im stream schon mal ausprobiert

01:43:28.200 --> 01:43:56.330
und ich habe es irgendwie wieder gelöscht ja c char gibt's will er hier das ist das ist die das

01:43:56.330 --> 01:44:06.760
ist die go variante so connection result muss man das nicht noch irgendwie muss man nicht

01:44:06.760 --> 01:44:29.060
gut repräsent c rep c oder sowas wieso ja okay ich hoffe ich hoffe dass von so ich hoffe dass

01:44:29.060 --> 01:44:35.000
von so connection result das heißt wir brauchen jetzt ein strakt was man hier returnen und zwar

01:44:35.000 --> 01:44:40.520
mit dass ab jetzt werden wir es auch erst mal in c sharp testen ob es prinzipiell funktioniert

01:44:40.520 --> 01:44:53.560
was ich da gebaut habe ok also return connection result client id 1 machen wir mal hier eine

01:44:53.560 --> 01:45:04.840
variable da können wir die später oder ja id 1 da können wir die später austauschen ja also

01:45:05.080 --> 01:45:12.940
id id und offer ja das muss jetzt in c string werden jetzt wird es jetzt evaciticade spannend

01:45:12.940 --> 01:45:30.180
jetzt jetzt was hat er hier für schmerzen introduces was will er von mir ach so der will mir sagen dass

01:45:30.180 --> 01:45:50.140
meine funktion nix return ich verwende dies zweimal wohl nicht oder ich verwende id nicht,

01:45:50.140 --> 01:45:51.020
ich verwende id nicht zweimal wo ich nicht oder ich verwende die id nicht zweimal wie jetzt carbon tonic

01:45:51.020 --> 01:45:57.350
jetzt die id ist ein int das sollte er doch kopieren oder das sollte er das sollte er

01:45:57.350 --> 01:46:07.910
doch checken das will er nicht weil es ein u32 ist und das hier okay das ist ein i32 dann ist

01:46:07.910 --> 01:46:26.300
okay so jetzt ist die große preisfrage wie krieg ich hier raus einen konst also wie kriege ich

01:46:26.300 --> 01:46:40.440
jetzt moment herr connection wie habe ich das jetzt wie habe ich das jetzt in grau gemacht ja

01:46:40.440 --> 01:46:50.460
pc lokal description okay das brauche ich hier auch lokal description an rap aus irgendwelchen

01:46:50.460 --> 01:46:58.700
gründen wieder ein rap ok und jetzt scp so dass die große frage wie kriege ich das jetzt in den

01:46:58.700 --> 01:47:01.120
c string ja ich glaube das ist ein c string ja ich glaube das ist ein c string ja ich glaube das ist

01:47:01.120 --> 01:47:04.280
bilden wir auch ein dass ich das dass ich das vorgestern schon mal hatte aber irgendwie habe

01:47:04.280 --> 01:47:14.200
ich hier drin hatte ich das vielleicht moment moment hatte ich das vielleicht hatte ich das

01:47:14.200 --> 01:47:28.320
im benchmark champ trainer ja ja genau da habe ich doch da habe ich doch das habe ich die ganze

01:47:28.320 --> 01:47:46.540
zeit gesucht man ist okay cstr new an rap und hier oben sternchen mut wobei es ist eigentlich egal so

01:47:48.200 --> 01:47:51.820
optique zweckletter zu Government livreblue so das ist natürlich keine어가 austauschen

01:47:51.820 --> 01:47:55.780
also was cstring to also per connect schlossen overweight also ist es ja im prinzip 눈kelauf

01:47:55.780 --> 01:47:56.540
und ich weiß nicht wie

01:48:00.660 --> 01:48:02.160
also im ver talvez gmaal ja was heißt darauf meint see string nie also per connect schl dl

01:48:02.160 --> 01:48:04.480
a weight also im prinzip will ich das dahin

01:48:04.480 --> 01:48:15.950
im kann

01:48:15.950 --> 01:48:22.230
genau raus sehr gut sehr gut

01:48:22.230 --> 01:48:31.200
ja ist auf meine und jetzt so natürlich nicht warum

01:48:31.200 --> 01:48:32.920
warfaren e-phonewood warum ist dass unfeier 60

01:48:32.920 --> 01:48:34.020
Ey, die auf einmal in U64.

01:48:34.100 --> 01:48:36.160
Ist das der Default-Typ dafür, oder wie?

01:48:38.340 --> 01:48:40.240
Ey, dann meinetwegen in U64.

01:48:40.460 --> 01:48:41.340
Soll mir recht sein.

01:48:43.080 --> 01:48:45.060
Und das will er nicht, weil...

01:48:45.060 --> 01:48:47.040
Const but found C-String.

01:48:47.440 --> 01:48:48.900
Und das war das Into...

01:48:48.900 --> 01:48:50.560
Into Raw.

01:48:54.070 --> 01:48:54.950
S-Pointer.

01:48:58.060 --> 01:48:59.460
Okay, was hat er wieder für Schmerzen?

01:49:01.730 --> 01:49:04.450
Value borrowed here after move.

01:49:05.470 --> 01:49:06.650
Okay, er gibt Sinn.

01:49:06.930 --> 01:49:07.930
Dafür ist Rust gut.

01:49:08.010 --> 01:49:10.550
Ich hab's zuerst in die Collection eingefügt, anstatt da.

01:49:10.550 --> 01:49:11.630
Okay, nice. Bild.

01:49:12.750 --> 01:49:15.290
Okay, jetzt bin ich gespannt, ob das...

01:49:15.290 --> 01:49:15.650
Chat hier.

01:49:16.070 --> 01:49:16.710
Was meint ihr?

01:49:17.870 --> 01:49:18.690
Funds das jetzt?

01:49:22.400 --> 01:49:23.620
Oder Pepega Crash?

01:49:27.560 --> 01:49:31.080
Stimmt, dass man das Ding STR nennen darf?

01:49:31.220 --> 01:49:31.740
Komisch, ne?

01:49:32.540 --> 01:49:33.640
Ich glaube auch...

01:49:33.640 --> 01:49:34.940
Ich glaube, dass es funktioniert.

01:49:35.220 --> 01:49:38.200
Weil in der Regel, wenn Rust kompiliert, dann crasht es selten.

01:49:40.350 --> 01:49:41.330
Dann geht's einfach.

01:49:42.370 --> 01:49:44.470
Ob's dann das macht, was man will, sei mal dahingestellt.

01:49:44.910 --> 01:49:46.910
So, jetzt müssen wir das hier noch ein bisschen anpassen.

01:49:46.910 --> 01:49:50.490
Wir haben eine Rust-Methode, die sich Init nennt.

01:49:50.590 --> 01:49:51.370
Das ist korrekt.

01:49:52.170 --> 01:49:55.270
Wir haben eine Rust-Methode, die sich CreateConnection nennt.

01:49:55.370 --> 01:49:56.070
Das brauchen wir noch.

01:49:56.610 --> 01:49:58.910
Und das ist übrigens auch nicht libRTC, sondern...

01:49:59.790 --> 01:50:01.730
libRTC Linux heißt das hier.

01:50:03.470 --> 01:50:04.530
So, Init haben wir.

01:50:04.650 --> 01:50:05.910
Dann brauchen wir CreateConnection.

01:50:08.980 --> 01:50:10.060
Schauen wir uns das mal von Go.

01:50:11.420 --> 01:50:14.580
CreateConnection liefert zurück ein Struct,

01:50:14.580 --> 01:50:18.460
das besteht aus einem U64.

01:50:18.480 --> 01:50:20.480
U64 und einem CharArray.

01:50:22.500 --> 01:50:23.000
Also.

01:50:23.780 --> 01:50:25.500
ConnectionResult haben wir doch hier schon drin.

01:50:26.380 --> 01:50:26.900
ConnectionResult.

01:50:28.320 --> 01:50:28.840
Idisposable.

01:50:29.000 --> 01:50:30.900
Okay, das Scheiß auf Memory leaks.

01:50:31.040 --> 01:50:33.020
Bevor es kaputt geht, ich schmeiß das mal raus.

01:50:33.860 --> 01:50:34.480
Ein IntPointer.

01:50:37.940 --> 01:50:38.500
Uint64.

01:50:40.500 --> 01:50:43.740
Gefolgt von einem Pointer zu einem String.

01:50:43.960 --> 01:50:45.940
Ja, das sieht gut aus.

01:50:51.330 --> 01:50:51.990
Nehme ich SessionConnection.

01:50:52.990 --> 01:50:54.150
SessionResult.

01:50:55.450 --> 01:50:58.890
Jetzt bin ich mal gespannt, ob das funzt.

01:51:02.260 --> 01:51:03.280
Ich werde das mal...

01:51:03.280 --> 01:51:04.560
Äh.

01:51:10.090 --> 01:51:11.450
Warum ist es jetzt auf einmal kaputt?

01:51:17.780 --> 01:51:18.240
Ah!

01:51:18.780 --> 01:51:22.700
Weil ich Idisposable weggelöscht habe.

01:51:23.820 --> 01:51:24.500
Ja, komm.

01:51:25.660 --> 01:51:28.220
Dann sind wir halt Memory-safe.

01:51:28.440 --> 01:51:29.700
Halbwegs, wenn es sein...

01:51:29.700 --> 01:51:30.840
Wir tun einfach so.

01:51:30.840 --> 01:51:32.200
Wir jibäden einfach.

01:51:32.660 --> 01:51:34.440
Wir machen einfach in das Dispose nix.

01:51:34.520 --> 01:51:35.360
Dann ist er zufrieden.

01:51:36.080 --> 01:51:36.920
So.

01:51:37.400 --> 01:51:40.740
Letztendlich, wir returnen jetzt mal E an der Stelle und sagen jetzt

01:51:40.740 --> 01:51:43.780
Interop Rust Init.

01:51:45.660 --> 01:51:49.280
Interop Rust Create Connection.

01:51:50.280 --> 01:51:53.340
Und jetzt bin ich mal gespannt, ob das funktioniert.

01:51:54.040 --> 01:51:55.960
ClientID sollte 1 sein.

01:51:56.500 --> 01:52:00.920
Und Offer sollte irgendwie ja langer Text bei rauskommen.

01:52:01.820 --> 01:52:02.700
Brage, Leute.

01:52:02.700 --> 01:52:05.900
Ich brauche mindestens 5 Brages, bevor ich das ausstelle.

01:52:06.080 --> 01:52:06.600
Ich brauche mindestens 5 Brages, bevor ich das ausführen kann.

01:52:07.160 --> 01:52:08.740
Damit das funktioniert.

01:52:11.620 --> 01:52:12.940
Eine Runde Brage, please.

01:52:13.800 --> 01:52:15.060
Ich trinke mal was in der Zwischenzeit.

01:52:16.780 --> 01:52:18.360
Okay, 5 Brages sind zusammen.

01:52:18.760 --> 01:52:19.440
Wir haben es geschafft.

01:52:26.540 --> 01:52:26.780
Also.

01:52:27.760 --> 01:52:28.240
.NET

01:52:28.240 --> 01:52:29.960
Run.

01:52:31.120 --> 01:52:31.480
Oh.

01:52:33.600 --> 01:52:34.160
Was?

01:52:34.240 --> 01:52:35.260
Entry Point not found?

01:52:42.920 --> 01:52:45.080
Ich habe Rust gar nicht compiled und rüberkopiert.

01:52:45.240 --> 01:52:45.800
Ich kack noob.

01:52:46.000 --> 01:52:46.200
Lull.

01:52:50.830 --> 01:52:51.270
Release?

01:52:52.270 --> 01:52:52.630
Nee.

01:52:53.390 --> 01:52:53.790
Ähm.

01:52:55.090 --> 01:52:55.950
Cargo Build.

01:52:57.230 --> 01:52:58.530
Minus Minus Release.

01:53:04.960 --> 01:53:06.060
Okay, das zählt jetzt nicht.

01:53:07.800 --> 01:53:10.200
Ich habe vergessen, Rust zu kompilieren.

01:53:10.320 --> 01:53:11.480
Das macht ja keinen Sinn.

01:53:12.780 --> 01:53:19.480
Kann man mit Cargo, Cargo Output Path, kann man einstellen, wohin der outputet?

01:53:20.740 --> 01:53:22.740
So wie mit Minus O zum Beispiel.

01:53:33.080 --> 01:53:34.620
Nee, das ist mir zu doof.

01:53:35.240 --> 01:53:36.340
Dann kopiere ich es.

01:53:36.340 --> 01:53:39.200
Ihr Schmolz-Dring ist auch wieder am Start.

01:53:39.200 --> 01:53:41.600
Ich kopiere es, ich kopiere es von Hand.

01:53:42.240 --> 01:53:43.860
Soll mir, soll mir auch recht sein.

01:53:46.840 --> 01:53:47.300
Auf jetzt.

01:53:48.040 --> 01:53:50.040
Alter, der benutzt einfach, guck mal.

01:53:50.400 --> 01:53:51.860
Das sind meine CPU-Cores hier oben.

01:53:52.340 --> 01:53:55.580
Der kompiliert blazingly fast, highly efficient.

01:53:56.300 --> 01:54:01.000
So, MV, Target, Release, Web, nee, Linux.

01:54:04.250 --> 01:54:05.490
Warum heißt denn das so dumm?

01:54:11.670 --> 01:54:14.250
Ach so, weil ich das einfach so eingestellt habe.

01:54:14.530 --> 01:54:14.790
Arsch.

01:54:15.370 --> 01:54:24.260
Da fällt mir nämlich ein, dass ja...

01:54:24.360 --> 01:54:32.100
Das Go-Binary und das Rust-Binary nicht gleich heißen können.

01:54:32.660 --> 01:54:33.320
Okay, komm.

01:54:34.000 --> 01:54:36.360
WebRTC, dann heißt das hier so, ja.

01:54:37.080 --> 01:54:38.140
WebRTC Rust.

01:54:39.800 --> 01:54:41.160
Da kann man es wenigstens unterscheiden.

01:54:41.740 --> 01:54:46.580
So, WebRTC Rust.so hoch nach Backend.

01:54:47.400 --> 01:54:48.080
Alles klar.

01:54:48.080 --> 01:54:52.140
So, LibWebRTC Rust und kopieren in den Output.

01:54:52.880 --> 01:54:53.820
Alles klar, auf geht's.

01:54:53.920 --> 01:54:54.100
Bam.

01:54:54.360 --> 01:55:05.420
Also, Chat, ich würde sagen, der erste Part hat funktioniert mit dem Struct.

01:55:06.500 --> 01:55:10.320
Die zweite Sache mit dem String, nicht so richtig.

01:55:21.860 --> 01:55:22.620
Warum nicht?

01:55:24.560 --> 01:55:28.300
Pointer to UTF-8-Dings.

01:55:28.900 --> 01:55:33.700
Das sieht, also der C-Sharp-Teil sieht, finde ich, richtig aus.

01:55:35.120 --> 01:55:36.920
Was mache ich denn in den Go falsch?

01:55:36.920 --> 01:55:48.360
Was mache ich in den Go falsch?

01:55:48.940 --> 01:55:51.140
Das hatten wir vorgestern auch, ja.

01:55:53.860 --> 01:55:54.220
Möglich?

01:56:11.870 --> 01:56:13.110
Ich weiß, woran das liegt.

01:56:13.990 --> 01:56:15.650
Chat, ich weiß, woran das liegt.

01:56:16.390 --> 01:56:16.770
Guck mal.

01:56:17.970 --> 01:56:20.570
Ich glaube zumindest, dass ich weiß, woran das liegt.

01:56:21.570 --> 01:56:23.250
Das sind keine Encoding-Errors.

01:56:23.370 --> 01:56:25.470
Das ist, weil das Memory freigegeben ist.

01:56:26.610 --> 01:56:27.510
Nee, ich weiß, woran das liegt.

01:56:27.550 --> 01:56:29.630
Guck mal hier.

01:56:31.010 --> 01:56:38.550
Das da wird wahrscheinlich freed, wenn die Funktion returnt.

01:56:46.220 --> 01:56:46.920
Der will ja.

01:56:50.770 --> 01:56:52.170
Wobei, kopiert er das vielleicht?

01:56:53.650 --> 01:56:54.750
Kopiert er das vielleicht?

01:56:57.220 --> 01:56:58.080
Kann man das klonen?

01:56:59.220 --> 01:56:59.860
Okay, klonen.

01:57:00.580 --> 01:57:04.440
Mein Gott, Alter, das ist schon wirklich extrem hässlich, oder?

01:57:04.620 --> 01:57:04.760
Hier.

01:57:05.460 --> 01:57:06.080
Await unwrap.

01:57:06.080 --> 01:57:06.920
Unwrap.

01:57:08.060 --> 01:57:19.960
Und dann machen wir gleich hier S-Pointer drunter.

01:57:23.660 --> 01:57:23.820
Oh.

01:57:27.040 --> 01:57:27.640
Unsafe.

01:57:27.900 --> 01:57:28.160
Ja, und?

01:57:31.370 --> 01:57:33.450
Alter, ich weiß, dass das unsafe ist, Mann.

01:57:36.640 --> 01:57:37.580
Dann lasse ich es halt weg.

01:57:38.240 --> 01:57:39.460
Und mache es hier unten erst.

01:57:40.220 --> 01:57:51.900
Okay, so.

01:57:53.200 --> 01:57:54.180
Compile-Action.

01:57:56.940 --> 01:57:57.460
Run.

01:57:58.940 --> 01:57:59.300
Fuck.

01:57:59.760 --> 01:58:05.380
Mach ich denn verkehrt?

01:58:09.020 --> 01:58:13.800
Okay, lasst uns mal checken, ob das überhaupt in Rust richtig ist.

01:58:15.940 --> 01:58:18.200
Okay, wir müssen mal was gucken.

01:58:19.460 --> 01:58:20.660
Das hier ist Client-ID.

01:58:20.920 --> 01:58:22.520
Client-ID ist ein U64.

01:58:28.490 --> 01:58:30.790
Und das hier ist auch ein U in 64.

01:58:31.030 --> 01:58:32.470
Das kann es schon mal nett sein.

01:58:36.050 --> 01:58:37.230
Into Raw ist richtig.

01:58:41.700 --> 01:58:42.700
Okay, ja.

01:58:43.420 --> 01:58:45.260
Ja, ihr habt recht.

01:58:46.480 --> 01:58:47.320
Ihr habt recht.

01:58:47.600 --> 01:58:49.480
Das stand sogar in der Hilfe drin, gell?

01:58:51.240 --> 01:58:52.540
Into Raw.

01:58:53.740 --> 01:58:56.920
Und dann...

01:58:56.920 --> 01:58:57.940
Moment, will der das jetzt?

01:58:58.420 --> 01:58:59.320
Moment, warum geht denn das?

01:59:02.680 --> 01:59:03.640
Warum geht denn das?

01:59:03.780 --> 01:59:05.960
Das ist doch hier oben Kunst und nicht Mutt.

01:59:09.730 --> 01:59:11.150
Rust-Ugly-Syntax.

01:59:11.230 --> 01:59:12.470
Ja, Rust ist Ugly.

01:59:12.650 --> 01:59:13.690
Das sehe ich auch so.

01:59:28.370 --> 01:59:29.510
So, Funst ist jetzt.

01:59:29.510 --> 01:59:31.350
Jetzt ausprobieren.

01:59:33.500 --> 01:59:34.440
Auf Kompilieren.

01:59:34.440 --> 01:59:35.440
Mach ich eine...

01:59:35.440 --> 01:59:39.240
Ist nicht Blazingly-Fast-Compiler gerade?

01:59:40.180 --> 01:59:43.220
Ah, viel besser.

01:59:43.720 --> 01:59:44.920
Viel besser schon.

01:59:55.200 --> 01:59:56.540
Da fehlt aber noch was, oder?

01:59:57.520 --> 01:59:59.020
Das ist ein bisschen wenig.

02:00:12.060 --> 02:00:14.280
Wir geben das hier trotzdem noch mal aus, kurz.

02:00:16.340 --> 02:00:16.900
FMT.

02:00:18.380 --> 02:00:19.000
Nee, nicht FMT.

02:00:19.220 --> 02:00:19.500
Print.

02:00:19.700 --> 02:00:20.480
Wir sind ja nicht in Go.

02:00:21.420 --> 02:00:22.020
Print.

02:00:22.480 --> 02:00:23.460
Fair Connection.

02:00:24.220 --> 02:00:25.180
Local Description.

02:00:25.180 --> 02:00:28.580
Oh Mann, was?

02:00:29.280 --> 02:00:29.800
Await.

02:00:31.140 --> 02:00:31.660
Unwrap.

02:00:32.920 --> 02:00:34.400
Ja, okay, toll.

02:00:34.680 --> 02:00:35.720
Ganz toll, Rust.

02:00:36.040 --> 02:00:36.400
Perfekt.

02:00:37.440 --> 02:00:37.960
Formatstring.

02:00:38.180 --> 02:00:38.500
Sehr gut.

02:00:38.900 --> 02:00:41.160
Wir lassen es auch noch mal hier ausgeben.

02:00:42.300 --> 02:00:42.980
Aber ein bisschen...

02:00:42.980 --> 02:00:44.300
Das ist ein bisschen kurz.

02:00:45.520 --> 02:00:46.480
Das ist ein bisschen wenig.

02:00:47.160 --> 02:00:50.080
Und ich glaube auch nicht, dass der eigentlich hiermit aufhören soll.

02:00:50.840 --> 02:00:51.880
Ehrlich gesagt.

02:00:58.800 --> 02:00:59.300
Doch.

02:00:59.300 --> 02:01:00.300
Das ist...

02:01:01.360 --> 02:01:02.080
Das ist zu wenig.

02:01:04.720 --> 02:01:05.420
Das ist nicht...

02:01:05.420 --> 02:01:06.520
Das ist nicht genug.

02:01:07.200 --> 02:01:09.560
Da fehlen die ganzen Tracks und sowas drin.

02:01:12.320 --> 02:01:14.540
Aber ich habe die Tracks hinzugefügt.

02:01:23.500 --> 02:01:26.240
Warum offert der kein Track?

02:01:27.420 --> 02:01:28.440
Das verstehe ich jetzt.

02:01:29.120 --> 02:01:29.480
Null.

02:01:30.740 --> 02:01:31.900
Haben wir hier irgendwas falsch?

02:01:32.040 --> 02:01:32.700
Media Engine?

02:01:33.680 --> 02:01:35.260
Payload Type 690.

02:01:37.550 --> 02:01:39.590
Okay, das können wir noch später schreiben.

02:01:47.270 --> 02:01:48.070
Wie weit wir sind.

02:01:48.070 --> 02:01:48.150
Und?

02:01:49.850 --> 02:01:50.470
Schwer zu sagen.

02:01:52.150 --> 02:01:54.410
Also, das ist auf jeden Fall verkehrt.

02:01:55.170 --> 02:01:58.130
Das ist zu wenig, was der hier zurückliefert.

02:01:59.050 --> 02:02:00.030
With Media Engine.

02:02:00.510 --> 02:02:01.330
Media Engine.

02:02:01.530 --> 02:02:02.310
Haben wir hier alles?

02:02:04.250 --> 02:02:05.070
Settings Engine.

02:02:05.170 --> 02:02:05.410
UDP.

02:02:05.710 --> 02:02:06.450
Das ist zu wenig.

02:02:06.570 --> 02:02:07.310
Das ist zu kurz.

02:02:08.110 --> 02:02:09.250
Was da zurückkommt.

02:02:09.390 --> 02:02:11.050
Also, ihr habt es ja gesehen vorhin.

02:02:11.710 --> 02:02:13.470
In Go kommt da viel mehr zurück.

02:02:15.070 --> 02:02:17.310
Da fehlen beispielsweise auch die ganzen Tracks.

02:02:21.640 --> 02:02:22.720
Mir ist fast so, dass ich hier nicht mehr so viel mehr zurückkomme.

02:02:22.720 --> 02:02:25.060
Mir ist fast so, als ist Tracks leer.

02:02:25.220 --> 02:02:26.100
Könnte das sein.

02:02:26.920 --> 02:02:27.400
Sind drin.

02:02:28.560 --> 02:02:29.120
Keck weh.

02:02:29.300 --> 02:02:31.000
Wir können es leider nicht anders debuggen gerade.

02:02:32.720 --> 02:02:35.380
Mir ist fast so, als wäre Tracks leer.

02:02:39.680 --> 02:02:41.180
Die Once-Vlogs mache ich nicht leer.

02:02:42.080 --> 02:02:44.180
Außerdem kann man Once-Vlogs gar nicht leer machen.

02:02:45.460 --> 02:02:46.360
Dann müsste er meckern.

02:02:49.900 --> 02:02:50.260
Siehste?

02:02:50.660 --> 02:02:51.560
Tracks ist leer.

02:02:51.800 --> 02:02:53.100
Das wird gar nicht ausgeführt.

02:02:54.300 --> 02:02:55.920
Ich glaube, habe ich Add Track vergessen?

02:02:56.420 --> 02:02:56.700
Oh.

02:02:57.200 --> 02:02:57.920
Ich habe, Leute.

02:02:58.540 --> 02:03:01.460
Add Track habe ich vergessen.

02:03:01.720 --> 02:03:01.960
Lull.

02:03:03.540 --> 02:03:05.120
Ja, kein Wunder, dass es nicht funktioniert.

02:03:09.130 --> 02:03:09.970
Add Track.

02:03:13.940 --> 02:03:14.800
Ist das so?

02:03:15.000 --> 02:03:15.560
Add Track?

02:03:17.280 --> 02:03:18.180
Create Track.

02:03:18.320 --> 02:03:18.540
Okay.

02:03:21.300 --> 02:03:21.480
Ja.

02:03:21.820 --> 02:03:25.420
Ja, dann ist klar, dass es nicht drinnen auftaucht, wenn man es gar nicht aufruft.

02:03:26.200 --> 02:03:27.180
Interop Rust.

02:03:27.500 --> 02:03:28.360
Create Track.

02:03:28.940 --> 02:03:30.080
So, jetzt nochmal, please.

02:03:30.300 --> 02:03:31.280
Und jetzt einfach funktionieren.

02:03:31.740 --> 02:03:34.500
Ja, das sieht schon deutlich besser aus.

02:03:35.340 --> 02:03:35.820
Keck weh.

02:03:36.260 --> 02:03:38.120
Das sieht viel besser aus.

02:03:38.180 --> 02:03:39.000
So muss das sein.

02:03:39.360 --> 02:03:39.840
Sehr schön.

02:03:41.200 --> 02:03:41.900
Das ist gut so.

02:03:43.200 --> 02:03:43.740
Das ist gut.

02:03:43.900 --> 02:03:47.180
So, so sieht das in Go, so, so ungefähr sieht das in Go auch aus.

02:03:49.060 --> 02:03:52.780
Du kannst auch was, das DBG-Makro benutzen.

02:03:54.200 --> 02:03:55.160
Was, was macht das?

02:04:05.200 --> 02:04:10.500
Das macht Zeug.

02:04:14.510 --> 02:04:15.930
Ach, das gibt die Zeile aus.

02:04:16.310 --> 02:04:16.870
Gut zu wissen.

02:04:17.030 --> 02:04:17.630
Das ist nice.

02:04:17.730 --> 02:04:18.370
Das brauche ich.

02:04:19.390 --> 02:04:19.830
Okay.

02:04:19.830 --> 02:04:19.910
Okay.

02:04:20.270 --> 02:04:20.550
Also.

02:04:21.070 --> 02:04:22.130
Der Part funzt.

02:04:22.610 --> 02:04:23.650
Dann geht es weiter.

02:04:24.410 --> 02:04:26.310
So viel ist es gar nicht mehr, was wir umziehen müssen.

02:04:26.810 --> 02:04:28.750
Und dann kommt der Moment der Wahrheit, ob es funktioniert.

02:04:29.490 --> 02:04:30.410
Aber das sieht gut aus.

02:04:30.590 --> 02:04:32.370
Es sieht wirklich, es sieht wirklich gut aus.

02:04:34.990 --> 02:04:39.310
Also jetzt nicht, nicht Rust Code an sich, sondern das sieht funktionierend aus gerade.

02:04:41.450 --> 02:04:42.630
So, also weiter.

02:04:43.110 --> 02:04:43.750
Das funzt.

02:04:44.130 --> 02:04:45.150
Wir kriegen jetzt die.

02:04:45.770 --> 02:04:47.510
Komm, lass uns, lass uns der Ordnung halber.

02:04:47.590 --> 02:04:48.890
Ne, habe ich schon mutt hingeschrieben.

02:04:49.370 --> 02:04:50.510
So, also das haben wir.

02:04:50.510 --> 02:04:52.050
Wir haben, wir haben ja fast alles.

02:04:52.250 --> 02:04:52.350
Guck.

02:04:52.350 --> 02:04:53.350
Das haben wir umgezogen.

02:04:54.070 --> 02:04:55.190
Das haben wir umgezogen.

02:04:55.830 --> 02:04:58.670
Uns fehlt eigentlich nur noch das hier.

02:04:59.010 --> 02:05:00.830
Und das ist echt überschaubar.

02:05:03.660 --> 02:05:05.200
Nur noch das hier fehlt uns.

02:05:07.180 --> 02:05:09.640
So, also das heißt, wir brauchen jetzt eine Function.

02:05:10.480 --> 02:05:11.380
Gleiche hier nochmal.

02:05:12.620 --> 02:05:15.380
Die heißt jetzt allerdings Set Answer.

02:05:15.880 --> 02:05:19.460
Da kriegen wir als Parameter jetzt allerdings einen.

02:05:22.110 --> 02:05:24.770
Das ist natürlich die Frage, ob das denn.

02:05:24.770 --> 02:05:25.250
Ja.

02:05:27.500 --> 02:05:32.460
Ja, das eigentlich, eigentlich kann das kann es auch Konst, ein Konstring sein.

02:05:36.810 --> 02:05:38.730
Konst C Char.

02:05:43.970 --> 02:05:45.890
Ja, komm, das heißt einfach Pointer.

02:05:45.990 --> 02:05:47.430
Bester, beste Benahme gehabt.

02:05:49.580 --> 02:05:50.520
Types mismatch.

02:05:50.580 --> 02:05:52.680
Hier muss nichts returned werden.

02:05:56.720 --> 02:06:00.140
Okay, wir brauchen das gleiche wieder wie hier.

02:06:01.940 --> 02:06:08.640
Wir brauchen die Connections, die Connections, also die, die, die, die per Handshake schon aufgebaut wurden.

02:06:08.760 --> 02:06:09.440
Wo ist das hier?

02:06:09.440 --> 02:06:10.400
Connections.

02:06:10.560 --> 02:06:16.310
Ah, Moment, Moment, Moment, Moment, eins habe ich ja noch vergessen.

02:06:18.230 --> 02:06:19.010
Brauchen die Connections.

02:06:19.010 --> 02:06:22.210
Wir brauchen, wir brauchen noch einen zweiten Parameter und zwar wir brauchen noch was?

02:06:22.210 --> 02:06:28.970
Ein U64 und zwar die ID von dem Ding brauchen wir noch.

02:06:30.350 --> 02:06:34.730
Das muss hier, das muss ja auch noch übergeben werden, sonst funktioniert das nicht.

02:06:35.270 --> 02:06:35.770
Ich hoffe.

02:06:37.950 --> 02:06:39.410
Ich hoffe, ich mache das hier schon.

02:06:40.950 --> 02:06:42.050
Okay, also.

02:06:42.050 --> 02:06:42.610
Set.

02:06:51.130 --> 02:06:54.050
Äh, gibt ein Connection Result, kompletter Schwachsinn, Max.

02:06:54.150 --> 02:06:55.430
Keine Ahnung, was du da gebaut hast.

02:06:57.270 --> 02:07:01.750
So, und das ist jetzt genau das gleiche, genau das gleiche wie bei Go.

02:07:03.950 --> 02:07:06.850
Ähm, ne, Uint64.

02:07:07.710 --> 02:07:12.410
Und das Ganze soll als UTF-8 C-String Pointer da reingeschoben werden.

02:07:12.710 --> 02:07:13.310
Gachi Bass.

02:07:14.690 --> 02:07:16.070
Also wir bekommen eine ID.

02:07:16.070 --> 02:07:19.070
Wir bekommen hier das Array mit den Connections.

02:07:19.250 --> 02:07:23.310
In das ich jetzt übrigens nur lesen möchte.

02:07:23.690 --> 02:07:25.170
Das ist so hässlich, oder?

02:07:25.970 --> 02:07:27.530
So, jetzt kommt's, Traummann.

02:07:27.710 --> 02:07:30.270
Also, get die ID.

02:07:33.470 --> 02:07:36.950
Und dann ist, kriege ich die Connection raus.

02:07:39.070 --> 02:07:40.350
Unwrapped, was sonst?

02:07:41.150 --> 02:07:41.730
Was sonst?

02:07:42.890 --> 02:07:44.130
Was hat der hier für Schmerzen?

02:07:45.710 --> 02:07:47.550
Wir brauchen ein und.

02:07:47.550 --> 02:07:49.550
Und wir brauchen eine Referenz.

02:07:50.950 --> 02:07:51.170
ID.

02:07:57.020 --> 02:07:59.140
Die C-Sharp-Methoden-Namen sind aber nicht, doch.

02:08:00.740 --> 02:08:02.340
Das ist, das ist korrekte.

02:08:04.340 --> 02:08:06.320
Korrekte .NET Naming Convention.

02:08:08.120 --> 02:08:09.660
Die Rust-Sachen nicht, ne.

02:08:09.840 --> 02:08:13.180
Die, die Rust-Sachen sind so gemacht, wie das die Rust-Leute gerne hätten.

02:08:14.060 --> 02:08:15.660
Okay, Per Connection.

02:08:15.920 --> 02:08:16.920
Da müssen wir jetzt.

02:08:17.620 --> 02:08:18.060
Set.

02:08:18.060 --> 02:08:18.140
Set.

02:08:20.600 --> 02:08:21.820
Remote Description.

02:08:21.940 --> 02:08:22.760
Brauchen wir da jetzt.

02:08:23.420 --> 02:08:25.440
Und irgendwie müssen wir jetzt den String.

02:08:25.460 --> 02:08:27.560
Pointer wieder zurück umwandeln.

02:08:29.060 --> 02:08:30.120
In einen.

02:08:30.580 --> 02:08:30.880
Oh.

02:08:32.680 --> 02:08:33.180
Geht das?

02:08:36.290 --> 02:08:36.970
Wie wandle ich?

02:08:36.970 --> 02:08:37.730
Das muss ich googeln.

02:08:38.790 --> 02:08:39.430
Das muss ich googeln.

02:08:41.650 --> 02:08:42.150
C.

02:08:42.970 --> 02:08:45.610
Sharp Pointer Rust to String.

02:08:47.690 --> 02:08:48.850
How do I convert to uns?

02:08:48.850 --> 02:08:50.230
Nein, ich will.

02:08:52.530 --> 02:08:54.910
Ja, das will ich sowas in der Richtung.

02:08:56.850 --> 02:08:57.250
C.

02:08:57.250 --> 02:08:58.090
String from.

02:08:58.330 --> 02:09:00.570
Okay, das ist einfacher als gedacht, ehrlich gesagt.

02:09:01.610 --> 02:09:01.850
C.

02:09:02.010 --> 02:09:03.530
String from Pointer.

02:09:10.100 --> 02:09:11.220
Let still.

02:09:14.660 --> 02:09:15.680
Was, was hat er jetzt?

02:09:15.820 --> 02:09:16.760
Was hat er für Schmerzen?

02:09:18.120 --> 02:09:20.540
In .NET sind doch Methoden-Namen immer groß.

02:09:26.560 --> 02:09:26.740
Ja.

02:09:27.560 --> 02:09:27.860
Ähm.

02:09:31.300 --> 02:09:31.800
Du hast recht.

02:09:35.470 --> 02:09:35.690
No.

02:09:35.690 --> 02:09:43.650
I never tried to compile WebAssembly and I never used STL in Rust.

02:09:44.370 --> 02:09:47.260
Du hast recht.

02:09:47.260 --> 02:09:48.940
Die Methodennamen sind falsch.

02:09:48.940 --> 02:09:49.820
Die sollen tatsächlich.

02:09:49.820 --> 02:09:51.220
Komm, wir machen, wir machen es korrekt.

02:09:51.220 --> 02:09:53.500
Wir machen, wir machen, dass sich Microsoft freut.

02:09:56.780 --> 02:10:00.720
Können die mir gleich paar Influencer Millionen überweisen.

02:10:03.800 --> 02:10:05.400
So gut.

02:10:06.240 --> 02:10:08.640
Okay, was kommt jetzt als nächstes?

02:10:08.640 --> 02:10:09.600
Also das funzt nicht.

02:10:09.600 --> 02:10:10.800
Warum funsten das nicht?

02:10:11.480 --> 02:10:12.760
Weil unsafe.

02:10:13.320 --> 02:10:14.400
Okay, unsafe.

02:10:17.390 --> 02:10:19.310
Alter, was ist mit der Idee los?

02:10:19.310 --> 02:10:20.430
Die ist ja voll im Arsch.

02:10:21.310 --> 02:10:22.750
Ja, unsafe to function.

02:10:22.750 --> 02:10:23.350
Bam, geht nicht.

02:10:29.770 --> 02:10:31.210
Wahrscheinlich, weil an der falschen Stelle.

02:10:31.350 --> 02:10:32.090
Muss bestimmt hier hin.

02:10:32.790 --> 02:10:35.130
Nee, muss dahin.

02:10:36.310 --> 02:10:37.010
Ja, nice.

02:10:37.210 --> 02:10:37.350
Gut.

02:10:38.050 --> 02:10:38.670
Try and error.

02:10:38.770 --> 02:10:39.690
Wo muss unsafe hin?

02:10:40.250 --> 02:10:43.290
Also an der, an der Rust-Idee müssen die echt noch ein bisschen arbeiten.

02:10:44.770 --> 02:10:47.870
Und jetzt müssen wir hier die Remote Description setzen.

02:10:50.420 --> 02:10:51.420
Wie macht man das jetzt?

02:10:52.720 --> 02:10:53.200
RTC?

02:10:54.160 --> 02:10:55.060
Wie hieß das?

02:10:56.080 --> 02:10:58.480
RTC Session Description.

02:10:59.920 --> 02:11:01.920
Gibt es da irgendwie so ein Parse oder sowas?

02:11:10.570 --> 02:11:11.070
Was?

02:11:14.030 --> 02:11:15.030
Was soll ich umbenennen?

02:11:21.250 --> 02:11:22.250
Ach, unsafe drumherum.

02:11:22.250 --> 02:11:25.250
Ach Quatsch, das, das alles, was ich hier mache, ist unsafe.

02:11:25.250 --> 02:11:27.250
Okay, Parse gibt es nicht.

02:11:27.750 --> 02:11:28.250
From?

02:11:28.250 --> 02:11:28.750
From.

02:11:28.750 --> 02:11:30.750
From klingt gut, aber das ist from.

02:11:33.330 --> 02:11:43.140
Jetzt ist die Frage, wie, wie parse ich denn jetzt meinen String als RTC Session Description?

02:11:43.140 --> 02:11:44.140
Marschal.

02:11:44.140 --> 02:11:45.140
Marsch?

02:11:45.140 --> 02:11:46.140
Anmarsch?

02:11:46.140 --> 02:11:50.050
Nee.

02:11:50.050 --> 02:11:52.050
Ja, das ist jetzt wieder sehr fmt.

02:11:52.050 --> 02:11:53.050
Nee.

02:11:53.050 --> 02:11:54.050
Into? What?

02:11:55.050 --> 02:11:57.050
Das ist jetzt wieder sehr pfeifert.

02:11:57.050 --> 02:12:02.640
Ich kapier wieder die einfachsten Sachen nicht.

02:12:02.640 --> 02:12:03.640
Vielleicht so?

02:12:03.640 --> 02:12:04.640
Answer?

02:12:05.640 --> 02:12:06.640
Achso, guck mal da.

02:12:06.640 --> 02:12:07.640
SCP String.

02:12:08.640 --> 02:12:09.640
Strrr.

02:12:09.640 --> 02:12:12.400
Let's...

02:12:13.400 --> 02:12:14.400
Ah.

02:12:14.400 --> 02:12:17.220
Äh, Unwrap?

02:12:17.220 --> 02:12:18.220
Was sonst?

02:12:18.220 --> 02:12:19.220
Selbstverständlich.

02:12:19.220 --> 02:12:20.220
Obviously immer Unwrap.

02:12:23.690 --> 02:12:24.690
Okay.

02:12:24.690 --> 02:12:25.690
Und hier.

02:12:25.690 --> 02:12:27.690
Awaiten und Unwrappen.

02:12:27.690 --> 02:12:33.690
Ich träume heute Nacht von Unwraps.

02:12:33.690 --> 02:12:37.770
Das geht nicht, weil...

02:12:37.770 --> 02:12:39.770
Ah, weil es ein C-String ist.

02:12:39.770 --> 02:12:41.770
Jetzt ist die Frage, wie ich ein C-String...

02:12:41.770 --> 02:12:43.770
Kann ich To String sagen?

02:12:43.770 --> 02:12:45.770
Sehr schön.

02:12:45.770 --> 02:12:47.770
Ex...

02:12:47.770 --> 02:12:50.460
Moment, da gibt es einfach...

02:12:50.460 --> 02:12:51.460
Wait a minute.

02:12:52.460 --> 02:12:53.460
Das geht doch im Leben nicht.

02:12:53.460 --> 02:12:56.460
Ich kann doch garantiert nicht sagen In To St...

02:12:56.460 --> 02:12:57.460
Nee, Moment.

02:12:58.460 --> 02:12:59.460
To String.

02:12:59.460 --> 02:13:00.460
Nee, nee.

02:13:00.460 --> 02:13:01.460
Es ist...

02:13:01.460 --> 02:13:03.460
Jetzt habe ich mir schon fast gedacht, wenn das...

02:13:03.460 --> 02:13:04.460
Was?

02:13:04.460 --> 02:13:05.460
Okay.

02:13:05.460 --> 02:13:06.460
Obviously.

02:13:06.460 --> 02:13:07.460
Alles klar.

02:13:07.460 --> 02:13:08.460
Rust Fehlermeldung.

02:13:08.460 --> 02:13:10.460
Consti 8 doesn't implement standard format display.

02:13:10.460 --> 02:13:12.460
Consti 8 cannot be formatted.

02:13:12.460 --> 02:13:13.460
Beste.

02:13:13.460 --> 02:13:14.460
Alles klar.

02:13:15.460 --> 02:13:16.460
In To.

02:13:17.460 --> 02:13:19.900
To Owned.

02:13:20.900 --> 02:13:21.900
So.

02:13:21.900 --> 02:13:22.900
Also das hat schon mal nicht funktioniert.

02:13:23.900 --> 02:13:26.900
Aber kann ich vielleicht den hier To String machen?

02:13:27.900 --> 02:13:29.900
In To C-String.

02:13:30.900 --> 02:13:37.670
In To String.

02:13:37.670 --> 02:13:47.260
Ich bin immer noch etwas verwirrt.

02:13:47.260 --> 02:13:58.030
Etwas verwirrt, wie ich das da hinbekomme.

02:13:58.030 --> 02:13:59.030
C-String.

02:13:59.030 --> 02:14:01.730
From Pointer.

02:14:01.730 --> 02:14:02.730
To String.

02:14:02.730 --> 02:14:03.730
Und was?

02:14:03.730 --> 02:14:04.730
To Owned.

02:14:05.730 --> 02:14:06.730
Unwrap.

02:14:07.730 --> 02:14:08.730
Alter.

02:14:09.730 --> 02:14:10.730
Was ist...

02:14:10.730 --> 02:14:13.300
Moment.

02:14:13.300 --> 02:14:15.300
Alter, was ist das wieder?

02:14:15.300 --> 02:14:16.300
Das ist ja Ausge...

02:14:16.300 --> 02:14:17.300
Ausgeburt der Hölle.

02:14:17.300 --> 02:14:20.300
Das könnte ja direkt aus irgendeiner C++ Anleitung entspringen.

02:14:20.300 --> 02:14:21.300
From Pointer.

02:14:21.300 --> 02:14:22.300
To String.

02:14:22.300 --> 02:14:23.300
To Owned.

02:14:23.300 --> 02:14:24.300
Unwrap.

02:14:24.300 --> 02:14:25.300
So.

02:14:25.300 --> 02:14:26.300
Jetzt haben wir ein...

02:14:26.300 --> 02:14:27.300
Das geht immer noch nicht.

02:14:27.300 --> 02:14:31.300
Und da muss ich jetzt wahrscheinlich nochmal hinten dran machen.

02:14:31.300 --> 02:14:35.890
Nochmal To String.

02:14:35.890 --> 02:14:38.890
Oder To Owned.

02:14:38.890 --> 02:14:39.890
Nee.

02:14:39.890 --> 02:14:40.890
To String.

02:14:40.890 --> 02:14:41.890
MonkaS.

02:14:41.890 --> 02:14:42.890
MonkaS, Mann.

02:14:42.890 --> 02:14:43.890
Was?

02:14:43.890 --> 02:14:44.890
To Owned?

02:14:44.890 --> 02:14:56.610
Können wir auch machen.

02:14:56.610 --> 02:14:57.610
Okay.

02:14:57.610 --> 02:15:08.630
Hier habe ich To String ja schon drin.

02:15:08.630 --> 02:15:10.630
Warum gibt es To String und Owned?

02:15:10.630 --> 02:15:11.630
Nee.

02:15:11.630 --> 02:15:12.630
Das ist wieder was anderes.

02:15:12.630 --> 02:15:18.390
Der will hier einen String.

02:15:18.390 --> 02:15:20.390
Das funktioniert...

02:15:20.390 --> 02:15:21.390
Hä?

02:15:21.390 --> 02:15:22.390
Hä?

02:15:22.390 --> 02:15:23.390
Moment.

02:15:23.390 --> 02:15:25.390
To Owned sagt doch ganz klar...

02:15:25.390 --> 02:15:26.390
Ach nee.

02:15:26.390 --> 02:15:27.390
Es returnt einen String.

02:15:27.390 --> 02:15:28.390
Okay.

02:15:28.390 --> 02:15:29.390
Warum gibt es...

02:15:29.390 --> 02:15:37.390
Hier sagt To Owned ganz klar, es returnt einen Slice und keinen String.

02:15:37.390 --> 02:15:41.390
Und wenn man es dann einfügt, dann returnt es doch einen String.

02:15:41.390 --> 02:15:54.600
string ok man muss das nicht verstehen ob das funktioniert meint es liegt an

02:15:54.600 --> 02:16:03.550
der idee ok prägen ob es funktioniert ich glaube wir haben alles umgezogen

02:16:03.550 --> 02:16:08.570
also haben wir gemacht set answer

02:16:09.170 --> 02:16:15.480
set remote description haben wir gemacht ok leute der moment der wahrheit

02:16:15.480 --> 02:16:21.600
wir haben wir haben wir haben das portiert von rust von go nach rust jetzt

02:16:21.600 --> 02:16:28.000
jetzt jetzt kommt es darauf an ob das funktioniert also interop rust create

02:16:28.000 --> 02:16:39.040
track offer interop rust create connection ich meine wir haben nichts

02:16:39.040 --> 02:16:43.280
wirklich an den interfaces geändert die haben alle die gleichen datentypen und

02:16:43.280 --> 02:16:47.340
so das müsste jetzt eins zu eins austauschbar sein präge richtig hart

02:16:47.340 --> 02:16:47.860
rein

02:16:47.860 --> 02:16:53.900
prägen chat es muss jetzt muss massive geprägt werden dass das funktioniert so

02:16:53.900 --> 02:17:09.250
und jetzt haben wir set interop rust set answer ach so weil es ein int64 ist

02:17:09.250 --> 02:17:24.870
int64 so jetzt bin ich ja mal gespannt ob das funst man es crasht schon mal

02:17:24.870 --> 02:17:27.750
net beim start

02:17:27.750 --> 02:17:47.860
denn dann

02:17:47.860 --> 02:18:00.720
oh shit es ist crasht es ist geclashd ich weiß nicht genau wo es gecrasht ist

02:18:00.720 --> 02:18:08.850
credibility

02:18:08.850 --> 02:18:09.470
feeling all shit es ist gecrashed es ist gecrasht ich weiß nicht genau wo esữ

02:18:09.470 --> 02:18:27.770
crasht okay warum warum sind wir hier gecrasht das sieht alles gut aus warum

02:18:27.770 --> 02:18:44.050
sind wir hier gecrasht was was was ist hier crash ich glaube wir

02:18:44.050 --> 02:18:57.410
crasht weil stand da auch irgendwas result unwrapped mpsc sent channel

02:18:57.410 --> 02:19:26.380
closed was soll das jetzt bedeuten der fehlerbehandlung ist überbewertet was

02:19:26.380 --> 02:19:39.180
ist mpsc send channel closed was möchte mir es sagen wir suchen wir gucken uns

02:19:39.180 --> 02:19:55.520
noch mal ein beispiel an set remote description offer await ja so ähnlich

02:19:55.520 --> 02:20:13.380
ja so ähnlich können wir das moment wie heißt das ding ich brauche mal ein

02:20:13.380 --> 02:20:16.880
ordentliches beispiel set remote description

02:20:16.880 --> 02:20:27.400
code kann man nicht durchsuchen weil ich eingeloggt bin dann gibt es gibt es

02:20:27.400 --> 02:20:33.240
eigentlich nur eine möglichkeit wir klonen uns da schnell und creppen da

02:20:33.240 --> 02:20:50.170
drin immer ganz ganz ruhig terminal ganz ruhig ganz ruhig examples examples

02:20:50.170 --> 02:20:53.770
grepp nach set remote description

02:20:53.770 --> 02:20:54.410
ups

02:20:54.410 --> 02:21:09.080
ja ice ice restart haben wir auch irgendwas wo wo ich die erst wo ich die

02:21:09.080 --> 02:21:23.280
anfrage schick und nicht umgedreht hier set remote description answer data

02:21:23.280 --> 02:21:33.400
channels create der rest ist eigentlich offer answer

02:21:33.720 --> 02:21:39.670
ja eigentlich okay wir können uns so dass date data channels create rast beispiel

02:21:39.670 --> 02:21:46.990
angucken so sollen wir auch recht recht sein wie man okay remote await

02:21:46.990 --> 02:21:59.130
fragezeichen macht der typ ist das was was was direkt weg räumt möglich ich habe

02:21:59.130 --> 02:22:09.160
keine ahnung was mir was sagen möchte ja ja connection set remote also irgendwas

02:22:09.160 --> 02:22:18.800
ist close es ist gut dass an der stelle ein rap steht

02:22:18.800 --> 02:22:23.520
weil das sehen wir wenigstens woran es liegt also wenn ich das richtig verstehe

02:22:23.520 --> 02:22:29.050
der macht das hier auch so ein weight fragezeichen ist glaube ich das gleiche

02:22:29.050 --> 02:22:36.450
wie an rap oder wenn es wenn man den passenden result type hat oben das geht

02:22:36.450 --> 02:22:39.850
nur über den passenden result type hat hier was ich nicht habe weil es erzählt

02:22:39.850 --> 02:22:51.690
weil weil es eine funktion ist für c ok aber heißt im endeffekt so was was räumt

02:22:51.690 --> 02:22:54.270
er hier auf

02:22:54.270 --> 02:23:24.030
channel close wir gucken einfach mal die issues rein super geil ja so toll geil

02:23:24.030 --> 02:23:34.170
okay wir finden nichts dazu es ist closed ja ja die frage ist warum das

02:23:34.170 --> 02:23:51.790
klaus ist ich meine das hier funst ja offensichtlich das ist die antwort so ok

02:23:51.790 --> 02:23:52.990
chat

02:23:52.990 --> 02:23:55.090
ich

02:24:41.760 --> 02:24:50.620
notiert so machen okay da bin ich zu peter für keine ahnung wie das fonds

02:24:50.620 --> 02:24:55.080
prinz

02:24:55.080 --> 02:25:06.080
nach so format ach so man ach so man kann das

02:25:06.080 --> 02:25:21.170
man macht das hier rein ok das ergibt sinn ja verstehe wieso sind die augen

02:25:21.170 --> 02:25:31.660
kaputt wegen rast oder wegen dem kontrast vom editor chat ich muss mal

02:25:31.660 --> 02:25:33.160
chat gucken ich habe bestimmt was

02:25:33.480 --> 02:26:06.480
es ist keine idea dasrom mehr tatsächlichУng poirot

02:26:06.480 --> 02:26:19.200
steht noch nicht klquisite

02:26:19.220 --> 02:26:21.140
falsch

02:26:21.140 --> 02:26:21.260
suas

02:26:21.260 --> 02:26:42.440
ahnung was das ding von mir will null was macht denn set remote description

02:26:42.440 --> 02:26:47.120
guck mal rein wirklich kein plan was das was das macht

02:26:47.120 --> 02:27:25.150
mps mps c gathering complete hattest du nicht irgendwo kreislein code shows

02:27:25.150 --> 02:27:37.340
watch ist non-blocking von alter was die syntax man da fuck ich mache doch gar nichts direkt mit

02:27:37.340 --> 02:27:45.390
diesem channel das verstehe ich nicht was sie mir damit sagen wollen also was ich auch nicht

02:27:45.390 --> 02:28:02.840
checke ist was der wo hier irgendwas ich blocke ich ich ich erwarte und rappe öfters mal aber

02:28:02.840 --> 02:28:13.170
das kann ja nicht verboten sein also ich habe keine ahnung was sie hier sagen da drin was

02:28:13.170 --> 02:28:28.130
irgendwie relevant ist so was könnte was könnte das denn sein man was hat was hat er hier für

02:28:28.130 --> 02:28:38.500
schmerzen sollen wir einfach mal soll man einfach mal das ignorieren das wird nicht

02:28:38.500 --> 02:28:52.540
funktionieren ich war ein fehler schon seinen sinn räumt er vielleicht wirklich irgendwo was

02:28:52.540 --> 02:29:00.370
auf ich meine wo wo create ich denn die connection ich meine eigentlich

02:29:00.370 --> 02:29:14.530
ach so das receive ja das ist bei hier ist das gathering complete ist das ja das erwähnt das

02:29:14.530 --> 02:29:21.910
erwähnte ich bis das fertig ist aber das machen die auch das machen die auch hier das machen die

02:29:21.910 --> 02:29:38.900
hier auch feuer und das muss ich auch machen sonst kann ich an den browser ja gar nichts

02:29:38.900 --> 02:29:54.700
schicken ja keine also ich habe ich habe legit ich meine wir haben das gute ist wir haben den code

02:29:54.880 --> 02:30:00.340
eins zu eins von go rüber übersetzt und da funktioniert das heißt also an der an der

02:30:00.340 --> 02:30:07.840
prinzipiellen logik kann das nicht liegen eine sache die ich halt nicht checke ist wo macht er

02:30:07.840 --> 02:30:27.040
überhaupt was mit ihr ihr selbst ist close return error ok kann man irgendwie sagen wait jetzt wie

02:30:27.040 --> 02:30:34.970
geht das mit pattern matching kann man sich nicht irgendwie den den error irgendwie ja genau result

02:30:37.430 --> 02:31:25.160
at

02:31:26.460 --> 02:31:33.880
du kommst außerdem ruf werden was da denn ist dort ok ich dachte irgendwie speziell tearout typ oder so wir machen an various schon ok hier was macht er hier log await sie die jedenfalls nach dem channel aus und ja ich bekomme ich bekomme eine antwort wisst ihr was wir komp 발ieren das ganze noch einmal kurz im debug bekommt man im debug mot jetzt bekommt man da mehr infos irgendwas irgendwas sinnvolles wenn ich die leiter im debug get мар lại

02:31:35.080 --> 02:32:10.610
modus kompilieren rast backtrace 1 to display ok hoffentlich geht das auch so

02:32:10.610 --> 02:32:31.390
sieht man sogar was da ist so also wo kackt er jetzt ab an web 59 58 dass das

02:32:31.390 --> 02:32:38.700
das also wo das ist habe ich schon gecheckt 58 hier bei dem an web ja das

02:32:38.700 --> 02:32:45.460
ist mir auch klar dass das das ist so und jetzt sagt er was choris alt an web

02:32:45.460 --> 02:33:15.730
set answer ja okay was cash park what blocking region guard aber das wird hier

02:33:15.730 --> 02:33:18.590
nirgendwo aufgerufen ich habe es dann zumindest nicht gefunden

02:33:18.590 --> 02:33:22.850
ok die fehlermeldung ist

02:33:22.850 --> 02:33:33.510
für mich jetzt zumindest an set rast backtrace kann man das kann man das ganze also wieder

02:33:33.510 --> 02:33:42.960
wieder kompilieren komplett lass uns mal weiter gucken was er hier macht so desk

02:33:42.960 --> 02:33:54.320
passt passt so wo könnte der hier getrenn sie was vielleicht hier irgendwo getrenn sie was self

02:33:54.320 --> 02:33:55.480
remote description

02:33:55.640 --> 02:34:46.870
du bekommst von der library einen channel receiver ach so du meinst das ist gar keine fehlermeldung in dem sinn sondern es gibt eine fehlermeldung weil der hier aus dem scope raus geht aber warum aber warum moment aber warum nee nee nee nee aber warum kackt er dann ab beim an web und nicht irgendwie erst danach oder aber wo bekomme ich irgendwas ich sehe hier nichts meinst du das ding

02:34:47.270 --> 02:34:48.750
für die

02:34:48.750 --> 02:34:51.070
dikata komplett das ist doch was ganz was

02:34:51.070 --> 02:34:53.150
was anderes

02:34:53.150 --> 02:34:55.270
das ist doch hier fertig

02:34:55.270 --> 02:35:02.390
das kann das hat auch damit nichts zu tun also das wäre doch wer ultra weird hat das was damit zu tun

02:35:02.390 --> 02:35:13.160
also das ist ja für für ip adressen look up und und endpunkte sammeln was hat das jetzt das hat das eine mit dem anderen zu tun

02:35:13.160 --> 02:35:23.360
du meinst das hier müsste ich quasi speichern sozusagen den

02:35:23.360 --> 02:35:25.000
option

02:35:25.000 --> 02:35:25.200
option

02:35:25.200 --> 02:35:25.260
option

02:35:27.160 --> 02:35:28.820
Oder was kommt denn da überhaupt raus?

02:35:33.860 --> 02:35:36.380
Meinst du, ich muss das hier irgendwo speichern?

02:35:38.480 --> 02:35:38.860
Das hier?

02:35:39.700 --> 02:35:40.120
Nee.

02:35:45.920 --> 02:35:47.300
Nee, das...

02:35:47.300 --> 02:35:49.740
Das ergibt keinen Sinn.

02:35:52.110 --> 02:35:53.750
Ich meine, wisst ihr, was wir machen können?

02:35:54.810 --> 02:35:55.270
Kick, wait.

02:36:00.400 --> 02:36:02.640
Also, wir lassen das einfach mal weg.

02:36:02.860 --> 02:36:03.700
Wir lassen das mal weg.

02:36:06.140 --> 02:36:06.580
Und...

02:36:06.580 --> 02:36:14.350
Kann man in Rust irgendwie Async sleep?

02:36:14.350 --> 02:36:18.190
Also, quasi sowas wie Task Delay.

02:36:23.850 --> 02:36:24.890
Tokyo Timers.

02:36:27.040 --> 02:36:27.520
Time.

02:36:28.480 --> 02:36:29.020
Sleep.

02:36:30.760 --> 02:36:31.280
Duration.

02:36:31.500 --> 02:36:32.140
Okay, das ist gut.

02:36:33.240 --> 02:36:34.100
Äh, Duration.

02:36:36.100 --> 02:36:37.360
Oh Gott, wie fünften das jetzt?

02:36:39.240 --> 02:36:40.820
Äh, gibt's da nicht irgendwie einen gescheiten...

02:36:42.840 --> 02:36:43.940
From seconds.

02:36:44.200 --> 02:36:44.400
Okay.

02:36:45.060 --> 02:36:47.040
Wir lassen den einfach mal 5 Sekunden schlafen.

02:36:47.760 --> 02:36:49.120
Und jetzt await.

02:36:50.260 --> 02:36:50.700
Unwrap.

02:36:50.820 --> 02:36:51.900
Nee, einfach so?

02:36:57.880 --> 02:36:59.860
Wartet das jetzt an der Stelle 5 Sekunden?

02:37:01.980 --> 02:37:03.480
Nee, im CamChamp ist das nicht drin.

02:37:03.600 --> 02:37:04.580
Das hab ich noch nicht gepusht.

02:37:04.880 --> 02:37:06.340
Außerdem geht's ja um den Library Code.

02:37:07.520 --> 02:37:08.820
Wartet er jetzt hier 5 Sekunden?

02:37:09.600 --> 02:37:10.120
Schauen wir mal.

02:37:15.130 --> 02:37:16.130
Jetzt bin ich mal gespannt.

02:37:25.410 --> 02:37:29.440
Okay, äh...

02:37:29.440 --> 02:37:29.680
Nee.

02:37:31.810 --> 02:37:32.210
Send.

02:37:33.470 --> 02:37:35.890
Also, auch wenn ich das hier nicht verwende,

02:37:36.670 --> 02:37:37.550
juckt ihn das nicht.

02:37:38.670 --> 02:37:39.610
Das ist schon mal nett.

02:37:42.020 --> 02:37:43.540
Das ist schon mal nett.

02:37:50.580 --> 02:37:51.240
Okay, was?

02:37:51.660 --> 02:37:54.720
Ähm...

02:37:54.720 --> 02:37:55.180
Answer.

02:38:06.190 --> 02:38:08.090
Ja, die machen hier auch nix Spezielles, ne?

02:38:11.990 --> 02:38:13.030
Oh, was ist denn das hier?

02:38:13.150 --> 02:38:13.410
Done?

02:38:15.580 --> 02:38:16.660
Nee, das ist...

02:38:16.660 --> 02:38:17.380
Das hat nichts...

02:38:17.380 --> 02:38:18.640
Das hat nichts damit zu tun.

02:38:19.180 --> 02:38:20.780
Das hier ist ihr komisches Signaling.

02:38:20.900 --> 02:38:22.760
Das hat mit dem Kram nichts zu tun.

02:38:23.000 --> 02:38:23.300
Okay.

02:38:23.720 --> 02:38:24.700
Das ist für die Shell.

02:38:26.340 --> 02:38:27.660
Danach wird geclosed.

02:38:31.140 --> 02:38:34.260
Ich hab legit keine Ahnung, was das Problem ist.

02:38:48.380 --> 02:38:51.220
Also, jede FFI-Funktion bekommt ihre eigene Runtime.

02:38:51.860 --> 02:38:52.580
Ja, ist das schlimm?

02:38:52.580 --> 02:38:56.620
Ich mein...

02:38:57.920 --> 02:38:59.880
Ich hab hier so ein paar globale Dinger.

02:39:00.580 --> 02:39:03.180
Ich würd den Tokio-Krempel ehrlich gesagt auch weglassen.

02:39:04.960 --> 02:39:06.800
Aber dann funzt die Hälfte nicht,

02:39:06.900 --> 02:39:09.220
weil die intern Tokio-Zeug verwenden.

02:39:15.540 --> 02:39:18.040
Wenn die Library ein Background-Task spawnt,

02:39:18.100 --> 02:39:19.140
dann ist das weg.

02:39:20.240 --> 02:39:22.360
Du kannst auch eine Static-Runtime machen.

02:39:24.450 --> 02:39:24.710
Aha.

02:39:26.350 --> 02:39:28.770
Ich mach das nur, damit es funktioniert, ja?

02:39:28.910 --> 02:39:29.330
Also...

02:39:29.330 --> 02:39:31.490
Ich hab keine Ahnung, was...

02:39:31.490 --> 02:39:32.810
Ich will das gar nicht verwenden.

02:39:32.810 --> 02:39:33.990
Ich muss das aber verwenden,

02:39:33.990 --> 02:39:36.470
weil die Library das irgendwie benutzt.

02:39:48.850 --> 02:39:50.170
Ey, ich hab echt keinen Plan.

02:39:52.160 --> 02:39:54.480
Wir haben eins zu eins von Go umgezogen.

02:39:54.480 --> 02:39:58.320
Also, das muss jetzt irgendwelche Rust-Spezialitäten sein.

02:39:58.560 --> 02:39:59.980
Was ist denn, wenn ich das einfach...

02:40:01.600 --> 02:40:03.260
ignoriere, was der hier macht?

02:40:07.620 --> 02:40:09.560
Dann wird's halt wahrscheinlich einfach nicht gehen,

02:40:09.560 --> 02:40:10.520
aber nicht abkacken.

02:40:21.530 --> 02:40:22.030
Ja.

02:40:25.330 --> 02:40:26.190
Ja, äh, äh, äh...

02:40:26.350 --> 02:40:27.490
Nee, jetzt kackt er nicht ab.

02:40:28.170 --> 02:40:29.150
Jetzt kackt er nicht ab.

02:40:30.350 --> 02:40:31.650
Aber es funktioniert halt nicht.

02:40:32.990 --> 02:40:33.610
Alter, was ist das?

02:40:33.610 --> 02:40:34.610
Hier, Remote Description.

02:40:34.610 --> 02:40:35.610
Das Zeug kann halt keiner lesen.

02:40:35.610 --> 02:40:36.610
Was?

02:40:36.610 --> 02:40:39.630
Media, Media, RTC.

02:40:39.630 --> 02:40:40.630
Ist mir wurscht, ob du das empfehlen würdest oder nicht.

02:40:40.630 --> 02:40:41.630
Der einzige Grund, warum ich Rust verwende, ist,

02:40:41.630 --> 02:40:42.630
weil ich die Library verwenden will und gucken will,

02:40:42.630 --> 02:40:43.630
ob man das noch ein bisschen schneller als mit Go hinkriegt.

02:40:43.630 --> 02:40:44.630
So.

02:40:44.630 --> 02:40:48.800
Was macht der hier unten für Dinger?

02:40:48.800 --> 02:40:49.800
Hier.

02:40:49.800 --> 02:40:50.800
Komm mal da.

02:40:50.800 --> 02:40:51.800
Hier.

02:40:51.800 --> 02:40:52.800
Hier.

02:40:52.800 --> 02:40:53.800
Hier.

02:40:53.800 --> 02:40:54.800
Hier.

02:40:54.800 --> 02:40:55.800
Hier.

02:40:55.800 --> 02:40:56.800
Hier.

02:40:56.800 --> 02:40:57.800
Hier.

02:40:57.800 --> 02:40:58.800
Hier.

02:40:58.800 --> 02:40:59.800
Hier.

02:40:59.800 --> 02:41:00.800
Hier.

02:41:00.800 --> 02:41:01.800
Hier.

02:41:01.800 --> 02:41:02.800
Hier.

02:41:02.800 --> 02:41:05.620
Hier.

02:41:05.620 --> 02:41:06.620
Hier.

02:41:06.620 --> 02:41:07.620
Hier.

02:41:07.620 --> 02:41:12.110
Hier.

02:41:12.110 --> 02:41:13.110
Hier.

02:41:13.110 --> 02:41:16.250
Hier.

02:41:16.250 --> 02:41:17.250
Hier.

02:41:17.250 --> 02:41:18.250
Hier.

02:41:18.250 --> 02:41:19.250
Hier.

02:41:19.250 --> 02:41:20.250
Hier.

02:41:20.250 --> 02:41:21.250
Hier.

02:41:21.250 --> 02:41:22.250
Hier.

02:41:22.250 --> 02:41:23.250
Hier.

02:41:23.250 --> 02:41:24.250
Hier.

02:41:24.250 --> 02:41:25.250
Hier.

02:41:25.250 --> 02:41:26.250
Hier.

02:41:26.250 --> 02:41:27.250
Hier.

02:41:27.250 --> 02:41:28.250
Hier.

02:41:28.250 --> 02:41:29.250
Hier.

02:41:29.250 --> 02:41:30.250
Hier.

02:41:30.250 --> 02:41:31.250
Hier.

02:41:31.250 --> 02:41:32.250
Hier.

02:41:32.250 --> 02:41:33.250
Hier.

02:41:33.250 --> 02:41:34.250
Hier.

02:41:34.250 --> 02:41:35.250
Hier.

02:41:35.250 --> 02:41:36.250
Hier.

02:41:36.250 --> 02:41:37.250
Hier.

02:41:37.250 --> 02:41:38.250
Hier.

02:41:38.250 --> 02:41:39.250
Hier.

02:41:39.250 --> 02:41:40.250
Hier.

02:41:40.250 --> 02:41:42.880
Hier.

02:41:42.880 --> 02:41:43.880
Hier.

02:41:43.880 --> 02:41:44.880
Hier.

02:41:44.880 --> 02:41:45.880
Hier.

02:41:45.880 --> 02:41:46.880
Hier.

02:41:47.440 --> 02:41:48.140
Wen juckt's?

02:41:49.220 --> 02:41:51.140
Ich muss wissen, wo der hier abkackt.

02:41:58.860 --> 02:42:00.100
Ich hab keinen Plan,

02:42:00.220 --> 02:42:01.940
was die hier dreimal...

02:42:01.940 --> 02:42:04.460
Der Backtrace

02:42:04.460 --> 02:42:04.720
hat

02:42:04.720 --> 02:42:07.840
Rust interne Sachen gesagt.

02:42:07.840 --> 02:42:08.300
Moment.

02:42:09.280 --> 02:42:11.680
Der war nicht so wirklich aussagekräftig.

02:42:11.840 --> 02:42:12.200
Guck hier.

02:42:12.840 --> 02:42:14.500
Der erzählt, dass er

02:42:14.500 --> 02:42:16.620
Probleme hat.

02:42:19.830 --> 02:42:21.490
In meiner Zeile 65.

02:42:22.030 --> 02:42:23.150
Runtime RS

02:42:23.150 --> 02:42:25.690
von Tokio blocked on

02:42:25.690 --> 02:42:27.150
multi-threaded

02:42:27.150 --> 02:42:28.670
enter runtime

02:42:28.670 --> 02:42:30.670
cache park

02:42:30.670 --> 02:42:32.510
unwrap

02:42:32.510 --> 02:42:34.870
core result unwrap

02:42:34.870 --> 02:42:37.270
Bam. Was auch immer.

02:42:43.130 --> 02:42:44.490
Das ist Rust Rover.

02:42:45.950 --> 02:42:46.870
Ey, das ist ja

02:42:46.870 --> 02:42:47.810
mega kacke, Alter.

02:42:49.150 --> 02:42:50.350
Also jetzt mal ernsthaft.

02:42:50.550 --> 02:42:52.290
Ich benutze das

02:42:52.290 --> 02:42:54.370
mit diesem Tokio Main

02:42:54.370 --> 02:42:56.130
ja nicht, weil ich da so scharf drauf bin,

02:42:56.570 --> 02:42:58.410
sondern

02:42:58.410 --> 02:43:01.010
weil das das Einzige ist, wie es funktioniert hat.

02:43:01.030 --> 02:43:04.400
Ich hab halt absolut

02:43:04.400 --> 02:43:05.020
keine Ahnung.

02:43:06.920 --> 02:43:08.580
Also wenn ich das, wenn ich das lösche

02:43:08.580 --> 02:43:10.140
hier zum Beispiel, dann

02:43:10.140 --> 02:43:12.680
geht's

02:43:12.680 --> 02:43:13.100
immer noch.

02:43:14.860 --> 02:43:15.260
Okay.

02:43:20.040 --> 02:43:22.080
Nee, er kompiliert, aber er funktioniert nicht.

02:43:23.780 --> 02:43:24.580
Er erzählt

02:43:24.580 --> 02:43:26.220
ja auch hier, dass das jetzt, dass das nicht

02:43:26.220 --> 02:43:27.900
safe ist, weil das Async ist.

02:43:32.660 --> 02:43:33.560
Ja, und ich kann's jetzt nicht

02:43:33.560 --> 02:43:36.280
ja, und ich kann's jetzt nicht

02:43:36.280 --> 02:43:38.320
awaiten. Gibt es, gibt es

02:43:38.320 --> 02:43:39.900
sowas wie ein hartes Wait,

02:43:39.900 --> 02:43:40.180
oder?

02:43:40.220 --> 02:43:41.000
Ohne Await, oder?

02:43:41.280 --> 02:43:42.160
Nee, gibt's nicht.

02:43:44.720 --> 02:43:46.580
Gibt es nicht ein normales Wait?

02:43:47.740 --> 02:43:48.180
Einfach?

02:43:50.260 --> 02:43:50.620
Äh.

02:43:52.800 --> 02:43:53.740
Mehr Error Handling.

02:43:53.840 --> 02:43:55.580
Es gibt keine Errors, die ich handeln kann.

02:43:58.720 --> 02:43:59.700
Ey, das geht nicht ohne.

02:44:01.840 --> 02:44:03.000
Ey, das ist halt doof.

02:44:06.880 --> 02:44:08.080
Wie würde ich dem denn sagen,

02:44:08.220 --> 02:44:09.920
dass der alles mit der gleichen

02:44:09.920 --> 02:44:11.600
Runtime, was auch immer, das

02:44:11.600 --> 02:44:13.060
Okay.

02:44:13.880 --> 02:44:15.060
Tokio Rust

02:44:15.060 --> 02:44:16.620
Main.

02:44:21.560 --> 02:44:22.200
Max, ey,

02:44:22.220 --> 02:44:24.040
du bist echt bei der Selected Runtime.

02:44:25.180 --> 02:44:26.160
Set up a Runtime with us.

02:44:27.780 --> 02:44:29.280
Runtime or Builder directly.

02:44:35.430 --> 02:44:35.830
Hier.

02:44:35.830 --> 02:44:37.770
Das Marco can be used on any Function,

02:44:37.770 --> 02:44:38.830
not just the main Function.

02:44:38.830 --> 02:44:41.230
Using it on a non-main makes the Function

02:44:41.230 --> 02:44:45.470
behaves as it, as it, if it was synchronously.

02:44:47.820 --> 02:44:48.180
Was?

02:44:51.320 --> 02:44:54.700
Starting a new Runtime each time it is con.

02:44:55.220 --> 02:44:58.120
Ich meine, es stört mich nicht, aber es ist

02:44:58.120 --> 02:45:00.340
wahrscheinlich nicht so schlau.

02:45:00.340 --> 02:45:10.310
One Cell ist Standard Library mittlerweile.

02:45:10.310 --> 02:45:33.080
Use current Thread Runtime.

02:45:33.080 --> 02:45:36.350
Aha.

02:45:36.350 --> 02:45:47.860
To use the single Thread Runtime known as the current Thread Runtime, the Marco can be configured.

02:45:47.860 --> 02:45:50.860
Und dann werden die alle auf dem gleichen Thread ausgeführt, oder wie?

02:45:50.860 --> 02:45:52.860
Okay.

02:45:52.860 --> 02:45:56.860
Ich copy-paste es jetzt einfach mal rein.

02:45:56.860 --> 02:46:02.780
Ich habe absolut keine Ahnung, was das macht, ey.

02:46:02.780 --> 02:46:05.780
Das wird es nicht bringen, ne.

02:46:05.780 --> 02:46:11.860
Moment, Moment.

02:46:11.860 --> 02:46:20.180
Das ist Massive 5-Head Rust, ey.

02:46:20.180 --> 02:46:22.180
Unwrap.

02:46:22.180 --> 02:46:26.900
Die Fehlermeldung im Chat.

02:46:26.900 --> 02:46:31.940
Hier.

02:46:31.940 --> 02:46:33.940
Moment, ich habe die Hälfte.

02:46:33.940 --> 02:46:38.220
Hier.

02:46:38.220 --> 02:46:40.220
Oh!

02:46:40.220 --> 02:46:43.220
Mein Copy-Paste ist wieder on point.

02:46:43.220 --> 02:46:48.490
Zweifel, dass man damit groß was anfangen kann.

02:46:48.490 --> 02:46:53.890
Habe ich jetzt überall? Single Threaded?

02:46:53.890 --> 02:47:12.820
Excellent.

02:47:12.820 --> 02:47:14.820
Schauen wir mal aus.

02:47:14.820 --> 02:47:20.900
Äh.

02:47:20.900 --> 02:47:22.900
Wird abgekackt.

02:47:22.900 --> 02:47:29.600
Wir wissen ja noch nicht mal, ob das an irgendwelchen Tokio-Sachen liegt.

02:47:29.600 --> 02:47:33.700
Bad-Kit-Time.

02:47:33.700 --> 02:47:38.100
Ne, heute ist es ein bisschen länger.

02:47:38.100 --> 02:47:39.100
Equivalent Code.

02:47:39.100 --> 02:47:44.460
Not using Tokio Main.

02:47:44.460 --> 02:47:45.460
Tokio Runtime.

02:47:45.460 --> 02:47:46.460
Build a new Multithread.

02:47:46.460 --> 02:47:47.460
Enable all.

02:47:47.460 --> 02:47:48.460
Build.

02:47:48.460 --> 02:47:49.460
Unwrap.

02:47:49.460 --> 02:47:50.460
Block on.

02:47:50.460 --> 02:47:51.460
Alles klar.

02:47:51.460 --> 02:48:15.730
Aber wenn ich das mache, muss ich dann allen Code, den ich ausführen will, in irgend so ein komisches Ding hier reinwrappen?

02:48:15.730 --> 02:48:17.730
Das kann es doch nicht sein.

02:48:17.730 --> 02:48:18.730
All das.

02:48:18.730 --> 02:48:19.730
Alles.

02:48:19.730 --> 02:48:23.000
Also.

02:48:23.000 --> 02:48:24.000
Oder.

02:48:24.000 --> 02:48:28.000
Oder schreibe ich dann irgendwie da oben, oben hin.

02:48:28.000 --> 02:48:29.000
Tokio.

02:48:29.000 --> 02:48:36.510
Ich bezweifle auch irgendwie, dass das das Problem ist.

02:48:36.510 --> 02:48:48.020
Warte, warte mal.

02:48:48.020 --> 02:48:50.020
Wir suchen jetzt mal hier drinnen.

02:48:50.020 --> 02:49:14.470
Silver.

02:49:14.470 --> 02:49:15.470
Captain Sergeant Silver.

02:49:15.470 --> 02:49:16.470
Danke.

02:49:16.470 --> 02:49:19.470
Du musst nur die Funktion per Runtime get.

02:49:19.470 --> 02:49:20.470
Unwrap.

02:49:20.470 --> 02:49:21.470
Block.

02:49:21.470 --> 02:49:28.260
Action.

02:49:28.260 --> 02:49:29.260
Aber wenn ich das so habe.

02:49:29.260 --> 02:49:30.260
Guck mal.

02:49:30.260 --> 02:49:39.860
Wenn ich das so habe, ist das dann nicht auch alles in der gleichen Runtime, weil hier irgendwie was dransteht?

02:49:39.860 --> 02:49:42.860
Also da wüsste ich jetzt nicht, wie ich das machen soll.

02:49:42.860 --> 02:49:46.860
Das heißt, das heißt ja im Endeffekt, ich bräuchte.

02:49:46.860 --> 02:49:48.860
Jede Funktion doppelt.

02:49:48.860 --> 02:49:53.870
Im Prinzip jede Funktion doppelt.

02:49:53.870 --> 02:50:03.520
Das ist super weird, Champ.

02:50:03.520 --> 02:50:06.410
Das heißt, ich brauche.

02:50:06.410 --> 02:50:13.410
Ich brauche jede Funktion hier doppelt und würde dann aus der aus der C-Funktion nur noch eine Runtime.

02:50:13.410 --> 02:50:14.410
Get.

02:50:14.410 --> 02:50:15.410
Unwrap.

02:50:15.410 --> 02:50:16.410
Block.

02:50:16.410 --> 02:50:17.410
On.

02:50:17.410 --> 02:50:18.410
Das macht.

02:50:18.410 --> 02:50:22.130
Macht dir das Bock?

02:50:22.130 --> 02:50:23.130
Na dann.

02:50:23.130 --> 02:50:24.130
Ich.

02:50:24.130 --> 02:50:25.130
Das wirkt äußerst planlos gerade.

02:50:25.130 --> 02:50:26.130
Ich glaube auch nicht, dass ich das hinkriege, heute das zu beseitigen.

02:50:26.130 --> 02:50:27.130
Also ich meine, im Endeffekt bräuchte ich dann quasi.

02:50:27.130 --> 02:50:28.130
So was.

02:50:28.130 --> 02:50:29.130
Ja, das mal so.

02:50:29.130 --> 02:50:30.130
So ein paar Blablabla.

02:50:30.130 --> 02:50:31.130
In it.

02:50:31.130 --> 02:50:32.130
Dann machen wir das hier weg.

02:50:32.130 --> 02:50:33.130
Oh, das kommt dahin.

02:50:33.130 --> 02:50:34.130
Das kommt weg.

02:50:34.130 --> 02:50:35.130
So.

02:50:35.130 --> 02:50:36.130
Ja.

02:50:36.130 --> 02:50:37.130
Ja.

02:50:37.130 --> 02:50:38.130
Ja.

02:50:38.130 --> 02:50:39.130
Ja.

02:50:39.130 --> 02:50:40.130
Ja.

02:50:40.130 --> 02:50:41.130
Ja.

02:50:41.130 --> 02:50:42.130
Ja.

02:50:42.130 --> 02:50:43.130
Ja.

02:50:43.130 --> 02:50:44.130
Ja.

02:50:44.130 --> 02:50:45.130
Ja.

02:50:45.130 --> 02:50:46.130
Ja.

02:50:46.130 --> 02:50:47.130
Ja.

02:50:47.130 --> 02:50:48.130
Ja.

02:50:48.130 --> 02:51:01.240
Alles gut schon lobbying gut das warumonsstoss so und dann würde ich und dann würde

02:51:01.240 --> 02:51:07.020
ich quasi sagen, dass es das muss ich habe, das muss ja schon mal.

02:51:07.020 --> 02:51:08.140
Nicht extra extern sein.

02:51:08.140 --> 02:51:11.540
Und dann würde ich quasi sinngemäß sagen.

02:51:11.540 --> 02:51:12.540
So.

02:51:12.540 --> 02:51:20.430
So oder okay und.

02:51:20.430 --> 02:51:26.250
Da bin ich ja mal gespannt jetzt.

02:51:26.250 --> 02:51:27.430
Also ich baue mir.

02:51:27.430 --> 02:51:32.750
Ich baue mir einen ran tay Suflower.

02:51:32.750 --> 02:51:34.490
In es sollte nicht mehr es.

02:51:34.490 --> 02:51:44.440
ach das hier ja ja ok ok so heißt im endeffekt ihr erinnert da kann ich das

02:51:44.440 --> 02:51:50.200
ja machen so heißt im endeffekt tokyo runter bilder new multithreader blog

02:51:50.200 --> 02:52:01.830
blog und hier das brauchen wir nicht wir brauchen den runtime und das muss in

02:52:01.830 --> 02:52:20.770
so einen lock lock once rein was ist wirklich man runtime runtime was hat er

02:52:20.770 --> 02:52:41.920
jetzt ach so ja das kann so so in it runtime geht's an rap ok also das heißt

02:52:41.920 --> 02:52:42.420
wir sagen

02:52:42.480 --> 02:52:58.400
jetzt runtime set runtime ok er ja nicht gedacht dass das überhaupt an rap

02:52:58.400 --> 02:53:10.190
was das kombiniert er wirklich so meinst du das so so und jetzt würde ich im

02:53:10.190 --> 02:53:21.840
endeffekt jedes mal wenn ich das aufrufe so in etwa so wir gucken mal was passiert

02:53:21.840 --> 02:53:24.560
wenn ich es ja auch vor ob das nicht gleich crasht

02:53:24.560 --> 02:53:25.060
es kräft

02:53:25.060 --> 02:53:25.100
es kräft

02:53:25.100 --> 02:53:29.420
noch nicht funktionieren aber eltern

02:53:29.420 --> 02:53:33.780
ja so mein nicht gut das heißt wir haben das es ist ja gar kein so großer akt das

02:53:33.780 --> 02:53:37.540
möchte ich nicht gleich weil es weht auch nicht funktionieren aber ja gleiche

02:53:37.540 --> 02:53:40.480
error zumindest kommt als ausschließen dass das

02:53:40.480 --> 02:53:45.100
eben in tokio schickt ist gut also dass heißt wir haben ja seither fall so

02:53:45.100 --> 02:53:51.420
großer akt dass zu fixen also im endeffekt das dass das kann ich mir copy

02:53:51.420 --> 02:54:08.700
interne sagt das kommt hierüber das kommt weg das kommt so hin so und das

02:54:08.700 --> 02:54:12.840
muss nicht mehr es doch das muss das muss nicht mehr sein und das muss nicht

02:54:12.840 --> 02:54:19.460
mehr extern c sein okay was habe ich jetzt vergessen

02:54:19.460 --> 02:54:34.090
und worum es geht web rtc mit rust webcams stream in browser runtime an

02:54:34.090 --> 02:54:50.680
web runtime get unwrap und unwrap so ach jetzt haben wir den return code krempel

02:54:50.680 --> 02:54:57.740
am start create moment was hat er denn jetzt überhaupt für probleme hier oben

02:54:57.740 --> 02:54:58.240
und

02:54:58.240 --> 02:55:17.420
was will er hier nach multiple times und jetzt will er was ach so ja wie

02:55:17.420 --> 02:55:29.340
kriege ich wie kriege ich denn da jetzt return types zurück oder machte das

02:55:29.340 --> 02:55:36.140
automatisch ach so das checkt er automatisch okay ich muss gar nichts

02:55:36.140 --> 02:55:42.040
machen nice ja das ist okay das ist wirklich nicht so um kompliziert das

02:55:42.040 --> 02:55:45.640
jetzt umzustellen da brauchen wir nur die zwei funktionen

02:55:45.640 --> 02:55:46.140
haben wir schon

02:55:46.160 --> 02:55:51.980
so enko biver sowie continuer das hier gerade noch mal drüber so und das heißt

02:55:51.980 --> 02:56:01.360
jetzt das ist gut so dann ruft das set estava auf den trend das hat kein

02:56:01.360 --> 02:56:10.040
return type und das hier muss zwar noch an z èwl sein aber kein extern her jetzt

02:56:10.040 --> 02:56:14.700
wird dir mal mit auf kochen chat dass ich nicht irgendwas vergisst dass es jetzt für ein bisschen wiem dass der check tennis friendly da als ich nicht irgendwas vergessen

02:56:14.700 --> 02:56:18.540
Was ist jetzt für ein Problem? Achso, das ist hier noch dran.

02:56:19.100 --> 02:56:23.760
So, jetzt sollte der eigentlich... Ich lecke Critical Information. Was ist jetzt?

02:56:25.300 --> 02:56:28.900
Achso, Takes to Arguments. Okay, MonkaS, logisch.

02:56:29.960 --> 02:56:36.800
Und Async weg. Takes to Arguments heißt im Endeffekt das da.

02:56:36.800 --> 02:56:47.250
Und das Taked ID und Pointer. Bis in Dark Zone.

02:56:50.430 --> 02:56:53.830
Äh, ja, komm. Unsafe. Equate.

02:56:55.830 --> 02:56:58.130
Warum darf Unsafe nicht überall hin?

02:57:01.530 --> 02:57:02.170
Was ist jetzt?

02:57:04.370 --> 02:57:11.830
Oh je. Jetzt ist Deadge... Was?

02:57:12.730 --> 02:57:19.050
Trade future is not implemented for... No, it's not English.

02:57:20.330 --> 02:57:22.150
Was will der von mir überhaupt jetzt?

02:57:24.860 --> 02:57:29.560
Ach, Async wieder rein. Oh man, da muss man sich echt voll konzentrieren.

02:57:32.620 --> 02:57:54.720
Compiliert's? Ja. Gut, dann fehlt jetzt eigentlich nur noch eine Sache.

02:57:57.560 --> 02:57:59.400
Dann, okay, dann blenden wir das um.

02:57:59.540 --> 02:58:03.380
Internal, das hier ist easy. Da gibt's nix Input, nix Output.

02:58:04.240 --> 02:58:05.140
Das kommt weg.

02:58:06.780 --> 02:58:08.260
Extern C kommt weg.

02:58:14.120 --> 02:58:15.120
So, das kommt auch weg.

02:58:17.810 --> 02:58:19.270
Das kann, by the way, auch weg.

02:58:22.730 --> 02:58:23.590
Ja, ja, ja, okay.

02:58:29.160 --> 02:58:30.900
Create Track muss das heißen.

02:58:30.900 --> 02:58:33.380
Hat keinen Input.

02:58:34.820 --> 02:58:38.380
Internal bekommt auch keine ID.

02:58:40.680 --> 02:58:42.660
So, hab ich irgendwas gecheckt?

02:58:44.500 --> 02:58:47.980
If you have any questions, you can ask them in the chat.

02:58:48.680 --> 02:58:51.420
But my English is not a yellow from the egg.

02:58:54.480 --> 02:59:02.100
Ich hab keine Ahnung, ob ich irgendwas verkehrt gemacht hab.

02:59:02.980 --> 02:59:05.000
Nutella rein soll ich ohne Butter drunter.

02:59:12.200 --> 02:59:12.680
Okay.

02:59:13.260 --> 02:59:15.000
Jetzt, wir gucken mal, ob's funktioniert.

02:59:16.580 --> 02:59:18.140
Wir gucken mal, ob's funktioniert. Ich glaube, ich hab...

02:59:18.140 --> 02:59:20.780
Blixkrone, hast du irgendwas gesehen? Hab ich irgendwo was vergessen?

02:59:21.000 --> 02:59:21.620
Ich glaube nicht.

02:59:23.760 --> 02:59:24.760
Glaube, glaube nicht.

02:59:27.260 --> 02:59:28.740
Okay, Brake Time, Chat.

02:59:29.120 --> 02:59:30.780
Chat, Brake, Brake.

02:59:32.260 --> 02:59:33.840
Lass das jetzt funktionieren, ey.

02:59:36.320 --> 02:59:38.220
Es geht! Es geht!

02:59:41.620 --> 02:59:42.360
Es funktioniert!

02:59:42.640 --> 02:59:45.860
Nice, nice, nice, nice.

02:59:46.020 --> 02:59:47.900
Chat, ich muss, ich muss ehrlich sagen,

02:59:47.900 --> 02:59:52.120
das ist eines der wenigen Vorkommnisse,

02:59:52.440 --> 02:59:54.200
kommt ja sonst nie vor, ne, aber

02:59:54.200 --> 02:59:56.700
ohne den Chat

02:59:56.700 --> 03:00:00.440
hätte ich das diesmal nicht hingekriegt.

03:00:03.650 --> 03:00:05.730
Der Chat ist ja sonst oftmals ziemlich

03:00:05.730 --> 03:00:07.950
Community-ge,

03:00:08.910 --> 03:00:10.950
aber heute war der Chat sehr hilfreich,

03:00:11.030 --> 03:00:13.810
der Blixkrone auch gerade, und nicht nur der Odolmed und so,

03:00:13.850 --> 03:00:15.770
also viele, also alle, die da waren.

03:00:16.630 --> 03:00:20.030
Aber ein paar kennen sich eindeutig besser mit Rust aus als ich.

03:00:20.170 --> 03:00:20.870
Und andere im Chat.

03:00:24.280 --> 03:00:26.580
Okay, zweimal Refreshen von der Seite

03:00:26.580 --> 03:00:27.740
funktioniert übrigens nicht.

03:00:28.360 --> 03:00:28.880
Gescheit.

03:00:30.820 --> 03:00:32.740
Weil ich Massive-Pepega bin

03:00:32.740 --> 03:00:34.680
und die gleiche Connection-ID

03:00:34.680 --> 03:00:35.720
wiederverwende. Also,

03:00:36.460 --> 03:00:38.080
das ist noch nicht sonderlich

03:00:38.080 --> 03:00:40.920
schlau gebaut alles, aber es funktioniert.

03:00:45.570 --> 03:00:46.510
Boah, ist das...

03:00:46.510 --> 03:00:47.830
Alter, das ist aber wirklich...

03:00:47.830 --> 03:00:50.310
Also, Chat, da wäre ich ohne euch nicht drauf gekommen hier.

03:00:51.270 --> 03:00:52.950
Beim besten Willen nicht.

03:00:54.150 --> 03:00:57.540
Was war jetzt eigentlich nochmal das Problem?

03:00:57.760 --> 03:01:03.270
Ich weiß... Moment, ich hab's gefixt,

03:01:03.370 --> 03:01:04.690
aber ich weiß das Problem nicht mehr.

03:01:07.420 --> 03:01:08.900
Wir wissen das nicht genau.

03:01:14.890 --> 03:01:15.730
Tokyo Main

03:01:15.730 --> 03:01:18.250
spawns every time

03:01:18.250 --> 03:01:19.870
the function is called

03:01:19.870 --> 03:01:21.950
a new runtime.

03:01:23.150 --> 03:01:24.290
At least the readme

03:01:24.290 --> 03:01:25.050
says so.

03:01:26.330 --> 03:01:28.170
I have no idea what this

03:01:28.170 --> 03:01:28.690
means.

03:01:32.900 --> 03:01:33.000
Also,

03:01:34.160 --> 03:01:36.800
ich gehe davon aus, dass eines...

03:01:36.800 --> 03:01:38.480
Also, das Problem ist aufgetreten,

03:01:38.740 --> 03:01:40.180
weil die...

03:01:40.180 --> 03:01:42.420
weil die Funktionen in unterschiedlichen

03:01:42.420 --> 03:01:44.280
Runtimes gelaufen sind.

03:01:47.540 --> 03:01:48.820
Async Runtimes.

03:01:49.280 --> 03:01:51.220
Warum es doch immer sowas gibt und nicht eingebaut ist,

03:01:51.280 --> 03:01:51.940
man weiß es nicht.

03:01:53.740 --> 03:01:55.220
Jetzt sorgen wir dafür,

03:01:55.360 --> 03:01:57.340
dass es immer die gleiche Runtime ist,

03:01:57.400 --> 03:01:58.460
die das Ganze ausführt.

03:01:59.460 --> 03:02:01.000
Was genau das Problem war,

03:02:01.040 --> 03:02:02.260
wissen wir aber trotzdem nicht.

03:02:02.460 --> 03:02:04.300
Also, warum er sich daran gestört hat.

03:02:04.300 --> 03:02:05.820
Wir wissen nur, dass er sich daran gestört hat.

03:02:06.120 --> 03:02:07.500
Also, ich habe jetzt noch 20 Minuten Zeit.

03:02:08.020 --> 03:02:09.580
Ich würde jetzt gerne das noch so bauen,

03:02:09.680 --> 03:02:12.220
dass ich die Seite mehr als einmal refreshen kann,

03:02:12.260 --> 03:02:14.300
dass ich die Seite mehr als einmal...

03:02:14.300 --> 03:02:15.120
Das liegt daran.

03:02:15.640 --> 03:02:16.120
Guck hier.

03:02:22.670 --> 03:02:24.870
Now I use the same runtime.

03:02:26.110 --> 03:02:27.930
But only because Flixcoder

03:02:27.930 --> 03:02:29.650
ist 5-Head-Chatter.

03:02:32.900 --> 03:02:33.180
Ich...

03:02:33.180 --> 03:02:34.740
Ich frag mich jetzt.

03:02:37.570 --> 03:02:38.970
Rust ist zu optimiert. Genau.

03:02:39.330 --> 03:02:41.990
Also, wir können das doch...

03:02:41.990 --> 03:02:43.990
Also, ich brauch... Okay, ich brauch random...

03:02:43.990 --> 03:02:46.370
Was heißt random IDs? Ich brauch nicht random IDs.

03:02:46.930 --> 03:02:48.330
Ich brauch unique IDs

03:02:48.330 --> 03:02:50.610
für jeden Track und für jede Connection.

03:02:52.150 --> 03:02:53.650
Track ist nicht so wild.

03:02:55.170 --> 03:02:56.510
Track gibt es eh nur einen.

03:02:57.890 --> 03:02:59.510
Gibt es sowas wie einen Atomic?

03:03:03.980 --> 03:03:05.560
ID-Connect ist immer dieselbe.

03:03:05.620 --> 03:03:07.040
Ja, das ist das Problem. Ja, ja, genau.

03:03:08.500 --> 03:03:10.960
Gibt es irgendwie einen Atomic-Counter oder sowas?

03:03:16.520 --> 03:03:17.000
Atomic...

03:03:17.000 --> 03:03:17.940
Wow, what?

03:03:17.940 --> 03:03:18.100
Ne.

03:03:20.620 --> 03:03:22.800
Da habe ich auch schon dran gedacht.

03:03:24.080 --> 03:03:24.720
UIDs.

03:03:25.360 --> 03:03:26.460
Wobei, Leute,

03:03:26.640 --> 03:03:27.680
ich habe die Idee.

03:03:29.160 --> 03:03:29.680
Wir nehmen UIDs,

03:03:29.680 --> 03:03:33.540
UIDs sind 128-Bit, richtig?

03:03:35.920 --> 03:03:37.620
Und 128-Bit

03:03:37.620 --> 03:03:41.300
ist relativ neu.

03:03:41.680 --> 03:03:42.860
In .NET gibt es

03:03:42.860 --> 03:03:44.640
einen U128.

03:03:44.900 --> 03:03:47.160
Das machen wir. UID-Time, Leute.

03:03:47.560 --> 03:03:49.360
Poggers. UID-Stells.

03:03:52.410 --> 03:03:54.050
UID-Rusts.

03:03:56.220 --> 03:03:56.800
Das brauchen wir.

03:04:01.490 --> 03:04:02.330
Welches...

03:04:02.330 --> 03:04:03.490
Welches...

03:04:03.490 --> 03:04:05.110
Ist das das letzte Crate?

03:04:05.110 --> 03:04:07.110
In Documentation?

03:04:07.170 --> 03:04:08.170
Homepage?

03:04:10.870 --> 03:04:11.870
1.5.

03:04:12.910 --> 03:04:13.390
Okay.

03:04:14.050 --> 03:04:14.570
Wie geht das?

03:04:14.830 --> 03:04:15.330
Cargo?

03:04:16.730 --> 03:04:18.230
Cargo-Add, gell?

03:04:18.450 --> 03:04:19.230
Cargo-Add.

03:04:19.930 --> 03:04:20.690
UUID.

03:04:22.070 --> 03:04:23.350
Und jetzt Build.

03:04:24.810 --> 03:04:26.510
Und jetzt erstmal wieder das halbe Internet

03:04:26.510 --> 03:04:27.270
kompilieren.

03:04:31.690 --> 03:04:34.250
Also, wo? Per Connection.

03:04:35.550 --> 03:04:36.410
Gehe ich übrigens

03:04:36.410 --> 03:04:37.630
richtig in der Annahme,

03:04:38.130 --> 03:04:40.030
dass das jetzt auch deutlich schneller ist

03:04:40.030 --> 03:04:41.470
beim Aufrufen der Funktion,

03:04:41.470 --> 03:04:44.470
weil er nicht für jeden Funktionsaufruf

03:04:44.470 --> 03:04:47.470
eine extra Runtime starten muss?

03:04:47.470 --> 03:04:51.940
Minus FV4?

03:04:51.940 --> 03:04:55.950
Was V4 ist?

03:04:55.950 --> 03:04:57.950
V4 ist die

03:04:57.950 --> 03:04:59.950
Random UID, gell?

03:04:59.950 --> 03:05:01.950
V4 ist random und die anderen

03:05:01.950 --> 03:05:03.950
sind irgendwie mit Date-Time-Stamp oder sowas.

03:05:03.950 --> 03:05:07.900
Wenn ich das richtig im Kopf hab.

03:05:07.900 --> 03:05:20.370
Chat, ich habe eine Zusage

03:05:20.370 --> 03:05:22.370
für ein duales Studio bekommen. Kann jetzt für die

03:05:22.370 --> 03:05:24.370
Theorie-Phasen für speziell

03:05:24.370 --> 03:05:26.370
entscheiden. Einmal IT-Security

03:05:26.370 --> 03:05:28.370
und einmal KI. Sollte ich einrollen, kann ich das auch machen?

03:05:28.370 --> 03:05:30.370
Von beiden nehmen?

03:05:30.370 --> 03:05:32.370
Was dir besser gefällt? Also,

03:05:32.370 --> 03:05:34.370
keine Ahnung, was besser für dein Studium ist.

03:05:34.370 --> 03:05:36.370
Das kann ich nicht beurteilen. Ich würde sagen, was dir

03:05:36.370 --> 03:05:38.370
gefällt.

03:05:38.370 --> 03:05:40.370
Also, Zukunft haben mit Sicherheit

03:05:40.370 --> 03:05:42.370
beide Sachen. IT-Security

03:05:42.370 --> 03:05:44.370
ist auf jeden Fall, sagen wir mal, safer.

03:05:44.370 --> 03:05:46.370
Da weiß ich,

03:05:46.370 --> 03:05:48.370
dass auf jeden Fall Leute gebraucht werden.

03:05:48.370 --> 03:05:50.370
KI ist so ein Zukunftsding, wo man sagen würde,

03:05:50.370 --> 03:05:52.370
ja, da werden auch Leute gebraucht und wahrscheinlich

03:05:52.370 --> 03:05:54.370
in Zukunft noch mehr. Also, KI

03:05:54.370 --> 03:05:56.370
ist ein bisschen vager, wo man jetzt nicht

03:05:56.370 --> 03:05:58.370
so hundertprozentig weiß, wie viel

03:05:58.370 --> 03:06:00.370
werden es mal wirklich, die da gesucht werden.

03:06:00.370 --> 03:06:02.370
Aber IT-Security ist auf jeden Fall immer nicht

03:06:02.370 --> 03:06:07.540
verkehrt. Wenn das nicht HackerMan

03:06:07.540 --> 03:06:11.420
ist, dann hätte ich keinen Bock drauf.

03:06:11.420 --> 03:06:13.420
So, lass mal hier kurz weitermachen.

03:06:13.420 --> 03:06:15.420
Also, hier. Wie gehen das jetzt? UUID?

03:06:15.420 --> 03:06:40.910
Import?

03:06:40.910 --> 03:06:42.910
Warum?

03:06:42.910 --> 03:06:44.910
Warum?

03:06:44.910 --> 03:06:46.910
Hier steht doch bestimmt... Ja, V4.

03:06:46.910 --> 03:06:48.910
Let's... Random... Was ist denn hier?

03:06:48.910 --> 03:06:50.910
Hier, V1. Timestamp

03:06:50.910 --> 03:06:52.910
und Counter. Ist doch für mich vollkommen

03:06:52.910 --> 03:06:58.530
okay. Timestamp und Counter.

03:06:58.530 --> 03:07:03.700
Random Data.

03:07:03.700 --> 03:07:05.700
Was ist denn der Default überhaupt?

03:07:07.700 --> 03:07:09.700
Wir können das mit Random Data machen.

03:07:09.700 --> 03:07:11.700
Aber

03:07:11.700 --> 03:07:13.700
wir testen ja erstmal prinzipiell, wie es funktioniert.

03:07:13.700 --> 03:07:15.700
Okay, wie benutzt man den Kram

03:07:15.700 --> 03:07:17.700
denn jetzt eigentlich? New?

03:07:17.700 --> 03:07:19.700
New V4?

03:07:19.700 --> 03:07:21.700
Moment,

03:07:21.700 --> 03:07:23.700
kann das sein, dass nur V4

03:07:23.700 --> 03:07:27.010
überhaupt... Moment,

03:07:27.010 --> 03:07:29.010
wir machen das jetzt mal... Ich glaube, es ist

03:07:29.010 --> 03:07:34.690
sogar nur V4 da.

03:07:34.690 --> 03:07:36.690
ID 2.

03:07:36.690 --> 03:07:38.690
Ich glaube, es gibt gar nichts anderes als V4

03:07:38.690 --> 03:07:42.320
bei mir.

03:07:42.320 --> 03:07:44.320
Cargo Run. Ne.

03:07:44.320 --> 03:07:47.890
Run? Ach ne, das geht ja nicht.

03:07:47.890 --> 03:07:51.460
Oder?

03:07:51.460 --> 03:07:53.460
Weil Library.

03:07:53.460 --> 03:08:10.400
Kackel. Moment.

03:08:10.400 --> 03:08:12.400
Ich bin gerade etwas

03:08:12.400 --> 03:08:22.110
verwirrt.

03:08:22.110 --> 03:08:24.110
SU128.

03:08:24.110 --> 03:08:27.740
Das ist top. Das brauchen wir.

03:08:27.740 --> 03:08:29.740
Heißt im Endeffekt, auch den anderen

03:08:29.740 --> 03:08:31.740
Krempel müssen

03:08:31.740 --> 03:08:33.740
wir umstellen auf U128.

03:08:33.740 --> 03:08:41.980
Client ID.

03:08:41.980 --> 03:08:48.820
Achso.

03:08:48.820 --> 03:08:53.660
Moment, Moment,

03:08:53.660 --> 03:08:55.660
Moment, Leute. Gibt es überhaupt

03:08:55.660 --> 03:08:57.660
in C ein...

03:08:57.660 --> 03:08:59.660
Na ja, gucken wir einfach mal,

03:08:59.660 --> 03:09:05.090
was er sagt.

03:09:05.090 --> 03:09:07.090
Ja, ja, ich mach das dann.

03:09:07.090 --> 03:09:12.830
What the fuck?

03:09:12.830 --> 03:09:14.830
Found U64?

03:09:14.830 --> 03:09:16.830
Achso, bei Connections.

03:09:16.830 --> 03:09:18.830
Ja, Moment, bei Connections ist ja wurscht.

03:09:18.830 --> 03:09:20.830
Bei Connections

03:09:20.830 --> 03:09:22.830
kann das noch U64

03:09:22.830 --> 03:09:28.960
bleiben.

03:09:28.960 --> 03:09:30.960
Moment, ich blicke gerade nicht mehr durch.

03:09:30.960 --> 03:09:32.960
Okay.

03:09:32.960 --> 03:09:38.130
Ähm.

03:09:38.130 --> 03:09:40.130
Wo sind wir jetzt?

03:09:40.130 --> 03:09:43.700
Insert.

03:09:43.700 --> 03:09:54.910
ID. Hä?

03:09:54.910 --> 03:09:56.910
Expected U64?

03:09:56.910 --> 03:10:02.020
Warum?

03:10:02.020 --> 03:10:04.020
Ne, hä? Wieso?

03:10:04.020 --> 03:10:10.980
Es sind doch beides

03:10:10.980 --> 03:10:18.260
128.

03:10:18.260 --> 03:10:20.260
Found U64? Hä?

03:10:20.260 --> 03:10:22.260
Was?

03:10:22.260 --> 03:10:26.270
Ach, jetzt sind wir bei Get.

03:10:26.270 --> 03:10:28.270
Wo sind wir jetzt?

03:10:28.270 --> 03:10:32.160
Connections.

03:10:32.160 --> 03:10:36.750
Ach, hier.

03:10:36.750 --> 03:10:50.500
Ah.

03:10:50.500 --> 03:10:54.190
Not FFI safe, ja.

03:10:54.190 --> 03:10:56.190
Ich weiß.

03:10:56.190 --> 03:11:03.220
Ich weiß.

03:11:03.220 --> 03:11:05.220
Es ist not FFI safe.

03:11:05.220 --> 03:11:07.220
FFI, das ist so

03:11:07.220 --> 03:11:09.220
ein allgemeiner Begriff, nur wenn du

03:11:09.220 --> 03:11:11.220
Interop zwischen verschiedenen Sprachen machst.

03:11:11.220 --> 03:11:13.220
Genau, Foreign Function Interface.

03:11:13.220 --> 03:11:15.220
In der Regel ist damit gemeint,

03:11:15.220 --> 03:11:17.220
dass beide

03:11:17.220 --> 03:11:19.220
Sprachen quasi miteinander reden

03:11:19.220 --> 03:11:21.220
können, so wie es C auch gemacht hätte.

03:11:21.220 --> 03:11:23.220
Also, der kleinste

03:11:23.220 --> 03:11:25.220
gemeinsame Nenner ist quasi die Art und Weise,

03:11:25.220 --> 03:11:27.220
wie C aufgerufen wird.

03:11:27.220 --> 03:11:29.220
Und das können so gut wie alle

03:11:29.220 --> 03:11:31.220
Sprachen. GoCans,

03:11:31.220 --> 03:11:33.220
PythonCans, RubyCans. Mir fällt eigentlich

03:11:33.220 --> 03:11:36.660
keine, mir fällt eigentlich keine

03:11:36.660 --> 03:11:38.660
Sprache ein, die kein C-Interface hat.

03:11:38.660 --> 03:11:40.660
Wahrscheinlich sogar Fortran und

03:11:40.660 --> 03:11:42.660
COBOL haben wahrscheinlich ein C-Interface.

03:11:42.660 --> 03:11:44.660
Mit Sicherheit, die sind noch älter.

03:11:44.660 --> 03:11:46.660
So, also, er sagt, das geht nicht.

03:11:46.660 --> 03:11:48.660
Ich glaube ihm auch, dass das

03:11:48.660 --> 03:11:50.660
nicht geht. Okay, ja, Chatge.

03:11:50.660 --> 03:11:52.660
Ich glaube, dass das nicht

03:11:52.660 --> 03:11:54.660
funktioniert, aber wir testen das jetzt.

03:11:54.660 --> 03:11:56.660
Mal. Und zwar,

03:11:56.660 --> 03:11:58.660
Run.

03:11:58.660 --> 03:12:00.660
Kackt auf jeden Fall

03:12:00.660 --> 03:12:02.660
nicht ab. Okay.

03:12:02.660 --> 03:12:04.660
Und jetzt sagen wir, Interop

03:12:04.660 --> 03:12:06.660
Rust Create

03:12:06.660 --> 03:12:13.420
Connection.

03:12:13.420 --> 03:12:15.420
Rust Create Connection.

03:12:15.420 --> 03:12:20.080
Oder Splitten, dann hast

03:12:20.080 --> 03:12:22.080
du 64. Nee, das ist aber nicht Unique

03:12:22.080 --> 03:12:24.080
genug. Wenn dann einmal erst

03:12:24.080 --> 03:12:26.080
die 20.000 User da drauf gehen.

03:12:28.080 --> 03:12:30.080
Bei mir daheim auf die Webcams vor allem.

03:12:30.080 --> 03:12:32.080
Null. Dann

03:12:32.080 --> 03:12:34.080
geht das.

03:12:34.080 --> 03:12:36.080
Okay, das Funst.

03:12:36.080 --> 03:12:38.080
So, also, jetzt bin ich ja mal gespannt,

03:12:38.080 --> 03:12:40.080
ob das funktioniert.

03:12:40.080 --> 03:12:42.080
Connection Reset.

03:12:42.080 --> 03:12:44.080
Das ist noch

03:12:44.080 --> 03:12:46.080
Client ID. Ach, Moment.

03:12:46.080 --> 03:12:48.080
Das ist ja das Falsche.

03:12:48.080 --> 03:12:50.080
Das sind jetzt nur die ersten 64 Bit.

03:12:50.080 --> 03:12:52.080
Das sind noch die ersten 64 Bit.

03:12:52.080 --> 03:12:54.080
Das muss jetzt ein...

03:12:54.080 --> 03:12:56.080
Ja, mal gucken, ob das überhaupt

03:12:56.080 --> 03:12:58.080
funktioniert. Uint 128.

03:12:58.080 --> 03:13:00.080
Ob das jetzt tut.

03:13:00.080 --> 03:13:02.080
Oh, Shit. Was ist?

03:13:02.080 --> 03:13:05.520
Int and System

03:13:05.520 --> 03:13:07.520
cannot be passed by value

03:13:07.520 --> 03:13:13.070
to unmanaged. Chat,

03:13:13.070 --> 03:13:15.070
wir tricksen C Sharp jetzt aus.

03:13:15.070 --> 03:13:17.070
Ich sag euch, wie wir das machen.

03:13:17.070 --> 03:13:19.070
Passt mal auf. Absolut

03:13:19.070 --> 03:13:21.070
Five Head Modus. Hatte ich gerade

03:13:21.070 --> 03:13:23.070
spontan so eine Idee.

03:13:23.070 --> 03:13:25.070
Nee, ich hatte nicht spontan so eine Idee.

03:13:25.070 --> 03:13:27.070
Ich hab sowas ähnliches schon mal gemacht.

03:13:27.070 --> 03:13:29.070
Ich hoffe, das funktioniert jetzt auch.

03:13:29.070 --> 03:13:31.070
So, Struct. Wir nennen das jetzt einfach C

03:13:31.070 --> 03:13:33.070
Uint

03:13:33.070 --> 03:13:37.730
32.

03:13:37.730 --> 03:13:39.730
Und sagen jetzt Public

03:13:39.730 --> 03:13:41.730
Uint 64

03:13:41.730 --> 03:13:45.230
Upper

03:13:45.230 --> 03:13:47.230
Lower

03:13:47.230 --> 03:13:49.230
Und jetzt ist das sowas hier.

03:13:49.230 --> 03:13:51.230
Jetzt sollte es zumindest nicht mal

03:13:51.230 --> 03:13:53.230
crashen. Es crasht nicht.

03:13:53.230 --> 03:13:55.230
Passt mal auf. Und jetzt

03:13:55.230 --> 03:14:03.980
Six Head Mode.

03:14:03.980 --> 03:14:05.980
Uint 128

03:14:07.980 --> 03:14:09.980
Pass

03:14:09.980 --> 03:14:11.980
Convert

03:14:11.980 --> 03:14:13.980
Moment.

03:14:13.980 --> 03:14:15.980
Shit.

03:14:15.980 --> 03:14:17.980
Convert?

03:14:17.980 --> 03:14:19.980
Uint 128 gibts da nicht.

03:14:19.980 --> 03:14:21.980
Hat das Ding ein

03:14:21.980 --> 03:14:23.980
Constructor vielleicht? Uint 128?

03:14:23.980 --> 03:14:25.980
Alter,

03:14:25.980 --> 03:14:27.980
genau. Ich wusste es doch. Ich wusste es.

03:14:27.980 --> 03:14:29.980
Ich hab das schon mal gemacht.

03:14:29.980 --> 03:14:31.980
Ich hab schon mal Uint 128

03:14:31.980 --> 03:14:33.980
gebaut aus zwei

03:14:33.980 --> 03:14:35.980
Int 64s.

03:14:35.980 --> 03:14:37.980
Deswegen.

03:14:37.980 --> 03:14:39.980
Ich hab mich doch da richtig dran erinnert.

03:14:52.030 --> 03:14:54.030
So, passt mal auf Chat.

03:14:54.030 --> 03:14:56.030
Easy.

03:14:56.030 --> 03:14:59.790
Jetzt müssen wir nur noch überprüfen, ob das

03:14:59.790 --> 03:15:01.790
stimmt. Jetzt müssen wir nur noch checken,

03:15:01.790 --> 03:15:03.790
ob das stimmt.

03:15:03.790 --> 03:15:05.790
Du warst mit dem Splitten, ne, du warst mit dem

03:15:05.790 --> 03:15:07.790
Splitten unwissentlich relativ gut dabei.

03:15:09.790 --> 03:15:14.640
Jetzt müssen wir nur noch gucken, ob das

03:15:14.640 --> 03:15:16.640
stimmt. FMT, ach

03:15:16.640 --> 03:15:18.640
Mann, Alter. Moment, gibt es

03:15:18.640 --> 03:15:26.240
sowas hier?

03:15:26.240 --> 03:15:28.240
Das ist eklig.

03:15:28.240 --> 03:15:32.190
Ist hier was cool, wenn man

03:15:32.190 --> 03:15:34.190
einfach. Ah!

03:15:34.190 --> 03:15:38.210
Kann man ja.

03:15:38.210 --> 03:15:40.210
Kann man auch DBG machen?

03:15:40.210 --> 03:15:42.210
HiIQ

03:15:42.210 --> 03:15:54.290
IDE, Mann.

03:15:54.290 --> 03:15:56.290
Einfach 8 CPU-Kerne voll.

03:15:56.290 --> 03:16:02.700
Okay.

03:16:02.700 --> 03:16:04.700
Shit.

03:16:06.700 --> 03:16:08.700
Das sind unterschiedliche

03:16:08.700 --> 03:16:10.700
Zahlen.

03:16:10.700 --> 03:16:14.590
Das sind unterschiedliche

03:16:14.590 --> 03:16:19.380
Zahlen. Okay.

03:16:19.380 --> 03:16:21.380
Passt mal auf. Nur für den

03:16:21.380 --> 03:16:23.380
Fall, dass ich es vertauscht hab, okay?

03:16:23.380 --> 03:16:25.380
Nur für den

03:16:25.380 --> 03:16:27.380
Fall, dass ich es vertauscht hab.

03:16:27.380 --> 03:16:29.380
Easy. Ich hab's vertauscht.

03:16:29.380 --> 03:16:31.380
Ich hab's vertauscht.

03:16:31.380 --> 03:16:34.820
Ich hab's vertauscht.

03:16:34.820 --> 03:16:36.820
An welcher Stelle? Moment, wo hab ich's denn

03:16:36.820 --> 03:16:38.820
vertauscht hier nochmal? Upper?

03:16:38.820 --> 03:16:40.820
Lower? Okay.

03:16:40.820 --> 03:16:42.820
Wo hab ich's denn vertauscht?

03:16:42.820 --> 03:16:49.710
Ähm.

03:16:49.710 --> 03:16:53.600
Struct?

03:16:53.600 --> 03:16:55.600
Wo ist das denn überhaupt?

03:16:55.600 --> 03:17:00.610
Ach, ich bin doch falsch.

03:17:00.610 --> 03:17:02.610
Hä?

03:17:02.610 --> 03:17:04.610
Ich find mein eigenes Zeug nicht mehr.

03:17:04.610 --> 03:17:06.610
Hier.

03:17:06.610 --> 03:17:17.220
Ach, Rust, schick die

03:17:17.220 --> 03:17:19.220
einfach andersrum.

03:17:19.220 --> 03:17:23.870
Ach so.

03:17:23.870 --> 03:17:34.320
Wobei,

03:17:34.320 --> 03:17:36.320
ich hab, ich hab die

03:17:36.320 --> 03:17:42.190
einfach falsch rum hier, oder?

03:17:42.190 --> 03:17:44.190
Ich hab die nicht falsch rum, das ist doch richtig rum.

03:17:44.190 --> 03:17:46.190
Upper zuerst, Lower

03:17:46.190 --> 03:17:52.130
als zweites. Warum ist die

03:17:52.130 --> 03:17:54.130
Warum ist die in Rust? Mal ganz

03:17:54.130 --> 03:17:56.130
davon abgesehen,

03:17:56.130 --> 03:17:58.130
es ist eh keine allzu schlaue Idee.

03:17:58.130 --> 03:18:04.580
Es ist eh keine

03:18:04.580 --> 03:18:06.580
allzu schlaue Idee,

03:18:06.580 --> 03:18:08.580
das so zu machen, wenn der hier schon

03:18:08.580 --> 03:18:10.580
drüber meckert. Ich meine,

03:18:10.580 --> 03:18:14.720
ich hab keinen Aufruf,

03:18:14.720 --> 03:18:18.160
ich return das Int einfach.

03:18:18.160 --> 03:18:20.160
Aber,

03:18:20.160 --> 03:18:22.160
wir sollten das, wir sollten das wahrscheinlich eh anders

03:18:22.160 --> 03:18:26.750
machen, weil man

03:18:26.750 --> 03:18:28.750
kein U128 returnen

03:18:28.750 --> 03:18:34.180
kann. Ähm.

03:18:34.180 --> 03:18:36.180
Was mach ich denn da jetzt

03:18:36.180 --> 03:18:39.740
am besten? Ich mein,

03:18:39.740 --> 03:18:41.740
ich kann doch einfach auf die Meldung scheißen, ja?

03:18:41.740 --> 03:18:45.700
Und sagen, ist mir doch

03:18:45.700 --> 03:18:47.700
egal, ob das

03:18:47.700 --> 03:19:02.400
safe ist oder nicht.

03:19:02.400 --> 03:19:08.080
Jaja, mach ich, mach ich.

03:19:08.080 --> 03:19:10.080
Aber hier muss ich's vertauschen.

03:19:10.080 --> 03:19:12.080
Als String,

03:19:12.080 --> 03:19:14.080
nee, als String schick,

03:19:14.080 --> 03:19:16.080
schick ich das nicht.

03:19:16.080 --> 03:19:19.460
Das ist nicht blazingly fast.

03:19:19.460 --> 03:19:21.460
Als String wär ja easy, nee, nee, nee,

03:19:21.460 --> 03:19:27.520
das muss schon als Int.

03:19:27.520 --> 03:19:31.410
Gibt es, Moment,

03:19:31.410 --> 03:19:33.410
Int U128 Rust Fwe, gibt's das?

03:19:33.410 --> 03:19:35.410
Als Byte Array?

03:19:35.410 --> 03:19:37.410
Byte Arrays kann man nicht,

03:19:37.410 --> 03:19:39.410
kann man nicht als Value schicken,

03:19:39.410 --> 03:19:41.410
vermute

03:19:41.410 --> 03:19:44.910
ich.

03:19:44.910 --> 03:19:46.910
Byte Arrays kannst du eigentlich nur als Pointer

03:19:46.910 --> 03:19:48.910
schicken.

03:19:48.910 --> 03:19:50.910
Oder? Ja, doch.

03:19:50.910 --> 03:19:54.800
Ich könnte, ich könnte

03:19:54.800 --> 03:19:56.800
zwei, ich könnte einfach

03:19:56.800 --> 03:19:58.800
zwei Sachen schicken, ja? Ich könnte

03:19:58.800 --> 03:20:00.800
hier so, so

03:20:00.800 --> 03:20:02.800
Upper, Lower und so, das könnte ich schicken.

03:20:02.800 --> 03:20:04.800
Zwei, zweimal, aber

03:20:04.800 --> 03:20:06.800
das ist doch trotzdem doof.

03:20:06.800 --> 03:20:08.800
Wir können doch einfach echt auf die Meldung scheißen,

03:20:08.800 --> 03:20:15.500
das scheint ja trotzdem zu funktionieren.

03:20:15.500 --> 03:20:17.500
Und wisst ihr was? Soll ich euch mal was sagen?

03:20:17.500 --> 03:20:19.500
Es ist auch vollkommen egal,

03:20:19.500 --> 03:20:21.500
ob Upper oder Lower,

03:20:21.500 --> 03:20:23.500
die Zahl, die am Ende rauskommt,

03:20:23.500 --> 03:20:25.500
ist trotzdem Unique, wenn es in der Mitte

03:20:25.500 --> 03:20:27.500
gesplittet ist. Also wenn es,

03:20:27.500 --> 03:20:29.500
wenn es, wenn die erste Hälfte

03:20:29.500 --> 03:20:31.500
plus die zweite Hälfte

03:20:31.500 --> 03:20:33.500
Unique ist zusammen,

03:20:33.500 --> 03:20:35.500
dann ist auch die zweite Hälfte

03:20:35.500 --> 03:20:43.360
plus die erste Hälfte Unique.

03:20:43.360 --> 03:20:47.760
Also insofern, die Hälfte

03:20:47.760 --> 03:20:49.760
würde schon ausreichen, nein,

03:20:49.760 --> 03:20:55.760
komplett muss das.

03:20:55.760 --> 03:21:01.310
Ey, da muss ich mir mal Gedanken drüber

03:21:01.310 --> 03:21:04.620
machen. Chatge, weil ihr

03:21:04.620 --> 03:21:06.620
so nice heute wart,

03:21:06.620 --> 03:21:08.620
push ich das jetzt auch auf GitHub, okay?

03:21:08.620 --> 03:21:12.320
Weil ich muss gleich Badge.

03:21:12.320 --> 03:21:16.020
Git ignore musst du

03:21:16.020 --> 03:21:26.880
auf jeden Fall, musst du es rein.

03:21:26.880 --> 03:21:28.880
Git add.

03:21:28.880 --> 03:21:30.880
Oh shit, ich glaube,

03:21:30.880 --> 03:21:32.880
ich füge gerade den ganzen Output da hinzu.

03:21:32.880 --> 03:21:34.880
Max, ganz schlechte Idee.

03:21:34.880 --> 03:21:36.880
Ich, ich, ich füge

03:21:36.880 --> 03:21:38.880
30 Milliarden Rust-Sachen.

03:21:38.880 --> 03:21:40.880
Wollen wir

03:21:40.880 --> 03:21:42.880
weitermachen? Ja.

03:21:42.880 --> 03:21:44.880
Oh shit, ich füge gerade,

03:21:44.880 --> 03:21:46.880
wie groß ist denn mein Rust-Ordner, bitteschön?

03:21:46.880 --> 03:21:51.150
2,7 Gig in's Git.

03:21:51.150 --> 03:21:53.150
.

03:21:53.150 --> 03:21:56.530
.

03:21:56.530 --> 03:21:58.530
.

03:21:58.530 --> 03:22:00.530
.

03:22:00.530 --> 03:22:04.860
.

03:22:04.860 --> 03:22:06.860
.

03:22:06.860 --> 03:22:12.160
.

03:22:12.160 --> 03:22:14.160
.

03:22:14.160 --> 03:22:16.160
.

03:22:16.160 --> 03:22:19.980
.

03:22:19.980 --> 03:22:21.980
.

03:22:21.980 --> 03:22:23.980
.

03:22:23.980 --> 03:22:27.740
.

03:22:27.740 --> 03:22:29.740
.

03:22:29.740 --> 03:22:31.740
.

03:22:31.740 --> 03:22:33.740
.

03:22:33.740 --> 03:22:35.740
.

03:22:35.740 --> 03:22:37.740
.

03:22:37.740 --> 03:22:39.740
.

03:22:39.740 --> 03:22:41.740
.

03:22:41.740 --> 03:22:43.740
.

03:22:43.740 --> 03:22:45.740
.

03:22:45.740 --> 03:22:47.740
.

03:22:47.740 --> 03:22:49.740
.

03:22:49.740 --> 03:22:51.740
.

03:22:51.740 --> 03:22:53.740
.

03:22:53.740 --> 03:22:59.620
.

03:22:59.620 --> 03:23:01.620
.

03:23:01.620 --> 03:23:03.620
.

03:23:03.620 --> 03:23:05.620
.

03:23:05.620 --> 03:23:17.250
.

03:23:17.250 --> 03:23:19.250
.

03:23:19.250 --> 03:23:21.250
.

03:23:21.250 --> 03:23:23.250
.

03:23:23.250 --> 03:23:24.250
.

03:23:24.250 --> 03:23:25.250
.

03:23:25.250 --> 03:23:27.250
.

03:23:27.250 --> 03:23:31.250
.

03:23:31.250 --> 03:23:41.330
.

03:23:41.330 --> 03:23:44.230
Wie um alles in der Welt kommen da Windows-Line-Endings rein.

03:23:49.280 --> 03:23:50.520
Der Rest ist alles gut.

03:23:53.310 --> 03:23:54.150
Wo, wo, hä?

03:23:54.710 --> 03:23:57.330
Das ist Linux-only entstanden.

03:23:57.470 --> 03:23:59.650
Warum macht Rider, nee, nicht Rider, doch Rider.

03:24:00.190 --> 03:24:02.670
Warum macht Rider Windows-Line-Endings da rein?

03:24:02.770 --> 03:24:03.370
Was ist das für ein Shit?

03:24:04.210 --> 03:24:06.470
Okay, wir müssen eben mal was anpassen, schnell.

03:24:07.570 --> 03:24:09.290
Wir machen das jetzt einfach mal rückgängig.

03:24:09.410 --> 03:24:09.910
Okay, ja.

03:24:10.470 --> 03:24:11.510
Nee, das funzt aber nicht mehr.

03:24:11.830 --> 03:24:13.830
Egal, das ist temporärer Stand.

03:24:13.930 --> 03:24:14.890
Will eh keiner ausprobieren.

03:24:15.870 --> 03:24:16.670
Ähm, hier.

03:24:17.410 --> 03:24:18.550
Da, nee.

03:24:19.050 --> 03:24:21.900
So, und jetzt?

03:24:22.320 --> 03:24:24.220
Jetzt muss er bestimmt Reformat oder so machen.

03:24:27.250 --> 03:24:29.790
Wie kommt das auf Windows-Line-Endings, Mann?

03:24:40.750 --> 03:24:41.070
Okay.

03:24:46.860 --> 03:24:47.720
Ja, das ist schon besser.

03:24:48.140 --> 03:24:48.900
Schon besser.

03:24:49.500 --> 03:24:50.900
Keine Windows-Line-Endings mehr drin.

03:24:50.940 --> 03:24:52.500
Richtig ekelhaft gewesen, Mann.

03:24:54.220 --> 03:25:02.090
Nee, das ist in Rider.

03:25:02.770 --> 03:25:03.630
Nicht in Rust.

03:25:08.230 --> 03:25:09.410
Ihr, ihr auch, guckt.

03:25:09.870 --> 03:25:10.910
In der Projektdatei.

03:25:11.450 --> 03:25:12.110
In, Alter.

03:25:21.740 --> 03:25:24.020
In, in der Projektdatei, Mann.

03:25:24.940 --> 03:25:26.100
Unload.

03:25:28.400 --> 03:25:29.460
Hier.

03:25:30.740 --> 03:25:32.360
Das ist nicht Default.

03:25:35.710 --> 03:25:40.290
Also, vielleicht ist es Default, aber ich hab das ja vorher auch mit Rider erstellt, aber es nicht so.

03:25:41.550 --> 03:25:42.050
Oh.

03:25:45.080 --> 03:25:46.740
Jetzt Status.

03:25:47.260 --> 03:25:48.640
Oh, wow, wow, wow, wow, wow.

03:25:48.920 --> 03:25:49.720
Oh, Java.

03:25:51.910 --> 03:25:52.690
Okay, please.

03:25:53.070 --> 03:25:57.270
Ich, ich sollte mir mal n Hook einbauen, dass ich keine Windows-Line-Endings mehr hab.

03:25:57.370 --> 03:25:58.750
Okay, keine Windows-Line-Endings mehr.

03:25:58.850 --> 03:25:59.350
Alles gut.

03:25:59.950 --> 03:26:00.450
Oh.

03:26:00.810 --> 03:26:01.850
Nice, niceke.

03:26:02.010 --> 03:26:02.750
Niceke.

03:26:03.970 --> 03:26:05.750
Okay, nix mehr.

03:26:05.850 --> 03:26:07.890
Uncommitted, Git, Push,

03:26:09.370 --> 03:26:09.770
Origin,

03:26:10.150 --> 03:26:10.590
Master,

03:26:11.430 --> 03:26:13.130
Ah,

03:26:15.920 --> 03:26:16.580
ich kack noob.

03:26:17.060 --> 03:26:18.020
Git, Remote,

03:26:18.360 --> 03:26:20.100
Remote, AM,

03:26:21.200 --> 03:26:23.540
Origin, Git, Remote,

03:26:23.800 --> 03:26:24.120
Add,

03:26:25.200 --> 03:26:28.490
Cam,

03:26:29.030 --> 03:26:30.310
Champ, Git,

03:26:30.990 --> 03:26:34.060
Push, nice.

03:26:34.900 --> 03:26:36.260
Da brauchen wir keine

03:26:36.260 --> 03:26:37.740
Force-Pushers sein aktuell.

03:26:37.740 --> 03:26:39.680
Aber ich Force-Pushe gerne.

03:26:41.280 --> 03:26:43.440
Ich bin meistens auch der Einzige, der

03:26:43.440 --> 03:26:45.620
quasi Master-Force-Push-Berechtigung

03:26:45.620 --> 03:26:47.940
auf der aktuellen Arbeit

03:26:47.940 --> 03:26:49.740
nicht, aber auf der aktuellen Arbeit gewesen ist.

03:26:50.320 --> 03:26:51.680
Auf der aktuellen Arbeit

03:26:51.680 --> 03:26:53.680
stelle ich mir das aber auch immer ein.

03:26:54.900 --> 03:26:56.280
Ich darf Force-Pushern.

03:27:01.260 --> 03:27:02.120
So, gut.

03:27:03.780 --> 03:27:04.400
Ich würde sagen,

03:27:04.480 --> 03:27:05.560
wir haben ordentlich was...

03:27:05.560 --> 03:27:06.360
Äh.

03:27:07.380 --> 03:27:09.000
Das wurde eh entfernt.

03:27:09.000 --> 03:27:10.800
Wir haben ordentlich was auf die Reihe gekriegt,

03:27:10.900 --> 03:27:11.460
Chat-Gehäute.

03:27:11.460 --> 03:27:12.220
Viel gelernt.

03:27:12.740 --> 03:27:13.460
Pfeifern, Rust,

03:27:14.100 --> 03:27:14.660
High IQ.

03:27:16.810 --> 03:27:17.610
Und ich würde sagen,

03:27:17.750 --> 03:27:19.590
schön, dass ihr so lange mit am Start wart.

03:27:19.910 --> 03:27:20.750
Ging ja heute lang.

03:27:21.110 --> 03:27:21.810
23 Uhr.

03:27:22.490 --> 03:27:22.950
Wir sehen uns.

03:27:23.010 --> 03:27:23.290
Bis denn.

03:27:23.690 --> 03:27:24.290
Bis morgen früh.

03:27:24.770 --> 03:27:25.690
Denkt dran, morgen früh,

03:27:25.870 --> 03:27:26.590
Aufwach-Stream.

03:27:27.110 --> 03:27:27.770
Es kann sein,

03:27:27.870 --> 03:27:29.910
dass ich erst kurz nach 9 da bin,

03:27:30.870 --> 03:27:32.790
weil ich eventuell,

03:27:32.970 --> 03:27:34.450
wenn es morgen früh nicht pisst,

03:27:34.550 --> 03:27:35.430
wie aus, äh,

03:27:36.050 --> 03:27:37.630
regnet aus Strömen, so,

03:27:38.350 --> 03:27:40.470
äh, 10 Kilometer Runde mache.

03:27:41.670 --> 03:27:42.090
Wieder.

03:27:42.770 --> 03:27:46.770
Und das bietet sich sonntags immer an.

03:27:46.870 --> 03:27:53.190
100 Kilometer, ja.

03:27:53.290 --> 03:27:55.290
Nee, morgen probiere ich noch mal 10 Kilometer Runde.

03:27:55.390 --> 03:27:57.390
Ich bin ja, äh...

03:27:57.490 --> 03:27:57.990
Wann war das?

03:27:58.090 --> 03:28:00.090
Letzten oder vorletzten Sonntag?

03:28:01.630 --> 03:28:03.630
Auch schon die Runde gelaufen?

03:28:03.730 --> 03:28:09.920
Also, ich muss sagen, war gar nicht...

03:28:10.020 --> 03:28:10.420
War gar nicht...

03:28:10.520 --> 03:28:11.020
Muss ich mich...

03:28:11.120 --> 03:28:13.120
Ich muss mich ja kurz, mal kurz, ähm...

03:28:13.220 --> 03:28:16.220
Eine Runde selber lobpreisen.

03:28:16.320 --> 03:28:19.350
Ähm...

03:28:19.450 --> 03:28:20.550
Am 5. November, okay,

03:28:20.650 --> 03:28:22.850
ist vorletzten Sonntag gewesen.

03:28:22.950 --> 03:28:23.590
Guck mal hier.

03:28:23.590 --> 03:28:25.390
Gar nicht mal so kacke, oder?

03:28:25.490 --> 03:28:29.590
10,3 Kilometer mit 6,34 pro Kilometer im Schnitt.

03:28:29.690 --> 03:28:31.590
Geht auch voll in Ordnung.

03:28:31.690 --> 03:28:35.530
Irgendwann schaffe ich es auch noch mal unter einer Stunde.

03:28:35.630 --> 03:28:38.630
Also, unter einer Stunde heißt...

03:28:38.730 --> 03:28:41.830
Man glaubt gar nicht, wie viel schneller das ist,

03:28:41.930 --> 03:28:43.830
aber das ist sehr viel schneller.

03:28:43.930 --> 03:28:48.230
Also, man denkt so, das ist easy.

03:28:48.330 --> 03:28:51.230
Man bekommt doch da ohne Probleme 7 Minuten weg.

03:28:51.330 --> 03:28:53.030
Aber, Leute, lasst euch gesagt sein,

03:28:53.130 --> 03:28:54.930
...

03:28:55.030 --> 03:28:56.830
Jeweils...

03:28:56.930 --> 03:28:59.330
Jeweils, sagen wir mal, 40 Sekunden schnell...

03:28:59.430 --> 03:29:01.630
Das ist echt...

03:29:01.730 --> 03:29:02.930
Also, es sieht nicht so viel aus,

03:29:03.030 --> 03:29:05.330
aber es ist echt viel anstrengender,

03:29:05.430 --> 03:29:07.330
das zu rennen.

03:29:07.430 --> 03:29:09.430
Das heißt, weil bei einer Stunde

03:29:09.530 --> 03:29:12.630
muss ich ja quasi permanent unter 6...

03:29:12.730 --> 03:29:16.030
Und knapp unter 6 Minuten pro Kilometer rennen.

03:29:16.130 --> 03:29:26.800
Das ist deutlich anstrengender als 6,34.

03:29:26.900 --> 03:29:27.900
Wir sehen uns, Leute.

03:29:28.000 --> 03:29:28.600
Bis morgen.

03:29:28.700 --> 03:29:30.200
See you.
