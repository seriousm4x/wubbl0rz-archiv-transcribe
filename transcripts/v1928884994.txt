Moin Leute, Twitch Base, danke für den Sub.
Oh, ich muss mein Headset noch umstöpseln, sehe ich gerade.
Kurz mal eine Runde Headbang.
Hörst du sowas privat? Ja.
Jetzt nicht unbedingt exakt das, aber sowas in der Richtung.
Also das auch, aber...
Leider kann ich euch nichts im Stream spielen, weil Toss...
Doof, dass sich Twitch so entwickelt hat.
Jetzt könnten wir jetzt die Wikinger anschmeißen.
Moin.
Zum Einschlafen, du wirst lachen.
Man kann bei sowas tatsächlich ganz gut pennen.
Ich meine, man darf das nicht mega laut machen.
Also du kannst das jetzt nicht, dass du...
Aber das ist gar nicht schlecht, wenn sowas so als Hintergrundrauschen läuft.
Ich finde das geht voll klar.
Das sind meine Lieblings-Kopfhörer.
Ganz ehrlich, mein MMX 300...
Was im Endeffekt auch nur ein ByteDynamics...
Ich glaube, was ist denn da drunter?
Was ist unter dem MMX 300 drunter?
Ein DT 770 oder sowas, glaube ich.
Ich weiß jetzt gar nicht genau.
Das ist sicherlich nicht der geilste Kopfhörer.
Ich habe tatsächlich noch deutlich mehr hier hinten hängen, die ich aber so gut wie nicht benutze.
Weil ich es einfach zu anstrengend finde, mehrere Kopfhörer zu haben.
Linkin Park, Linkin Park geht auch.
Ist jetzt aber nicht unbedingt so mein...
Meine Lieblingsband.
Wusstet ihr, dass Linkin Park, glaube ich, die erfolgreichste...
Ich will nicht sagen Metalband, aber die erfolgreichste so in Richtung Metalband ist der jüngeren Geschichte.
Die haben übelst viel verkauft.
Linkin Park sind...
Die waren richtig fett im Business.
Baumhausstock, Pog Subscription, dankeschön.
Okay, genug.
Hat gebankt.
Übrigens, das Game, ich habe mir das gekauft, zu Release, nie gespielt.
Ja, deswegen, ich weiß gar nicht, ob die vorhaben, noch irgendwas zu machen.
Das Letzte, was man von Linkin Park gehört hat, ist, dass die irgendwelches altes, unveröffentlichtes Zeug noch mal irgendwie ein bisschen raushauen wollen.
Aber ansonsten, glaube ich, weiß ich nicht, ob da je wieder was kommt.
Und eigentlich Wave machen.
Aber Linkin Park war zur damaligen Zeit schon nice.
Das war ja, sagen wir mal, so um 2000 noch etwas rum.
Da habe ich das auch relativ viel gehört.
Die hatten ja quasi so ein, zwei Alben, die richtig durch die Denke gegangen sind damals.
Was auch, sagen wir mal, so die ganzen Jugendlichen und ein bisschen, ein bisschen kurz danach rauf und runter gehört haben.
Wobei, was ich ungefähr zur Zeit rauf und runter gehört habe, damals als Linkin Park angesagt war, war nicht unbedingt Linkin Park, sondern Evanescence.
Und es gab...
Also, ich hatte nie irgendwie großartig so einen, wie nennt man das, so einen, so einen Gommi-Crush oder sowas, wie man das nennt, ja.
Also, dass manche Leute, die gehen ja voll ab auf irgendwelche Boybands oder so und fallen dann in Ohnmacht, wenn er in ihre Richtung guckt und sowas.
Hatte ich nie.
Die Einzige, die ich wirklich sehr, sehr nice fand, war Amy Lee von Evanescence.
Da...
Da habe ich gefanboyt.
Weil die ist jetzt auch alt.
Die ist, glaube ich, ziemlich großartig.
Die ist, glaube ich, ziemlich großartig.
Die ist ziemlich genau so alt wie ich.
Ich glaube, eins, zwei Jahre älter.
Die ist...
Wie alt wollen wir gucken?
Wie alt ist Amy Lee?
Amy Lee ist...
Ja, okay, die ist drei Jahre älter als ich.
Sieht aber immer noch nicht schlecht aus.
Für 42 oder 43.
Zu Recht, ja.
Die war nice damals.
Aber ansonsten hat mich das nie sonderlich interessiert.
Muss man seinem Gruppleiter sagen, dass man sich intern woanders beworben hat?
Am Ende sieht er sich...
Also, müssen musst du wahrscheinlich erst mal gar nichts.
Er wird es früher oder später mitbekommen.
Und ich weiß nicht, in deiner Situation, was taktisch geschickter ist.
Dass an die große Glocke hängen oder nicht.
Also, wenn er dir auf den Sack geht, wenn er mit der Grund ist oder deine Gruppe so mit der Grund ist,
dass du sagst, Alter, gehen die mir alle auf den Sack und ich habe schon 500 Mal was gesagt
und jetzt habe ich mich woanders beworben,
da würde ich möglichst viel Zeit verstreichen lassen, bis ich das offiziell bekannt gebe
oder bis das mitkriegt, dass sie dir einfach weniger auf den Sack gehen können.
Ansonsten...
Keine Ahnung.
Das kann man jetzt wirklich so pauschal nicht sagen.
Das hängt wahrscheinlich ganz von der Situation ab.
JBO mochte ich noch nie.
Da habe ich die Faszination nicht dran verstanden.
Das war damals bei uns natürlich total angesagt,
zu Zeiten, wo ich noch ab und zu mal was gesoffen habe.
Mit Leuten aus der Schule oder ein bisschen später.
Mittlerweile, ihr wisst ja, ich trinke nahezu gar nichts mehr.
Ich vertrage auch nichts.
Wenn ich irgendwie mal...
Das ist so schlimm bei mir.
Wenn ich zu, sagen wir mal, zu Silvester oder so,
wie so ein halbes Glas Sekt trinke, merke ich das gleich.
Instant.
Ich bin das absolut nichts, null.
Gar nichts mehr gewöhnt.
Und zu den Zeiten war das halt super Saufmusik.
Wobei ich ehrlich sagen muss, ich habe die Faszination davon nie verstanden.
Mir hat es auch nie gut gefallen.
Es gab sicherlich noch ein paar andere Bands, wo ich die Faszination nicht verstanden habe,
aber JBO ist tatsächlich so eines der Dinger.
Keine Ahnung.
Wow.
Alter.
Ja, ist ja gut.
Alter, mach dir mal die Mappe.
Riesen Krach wieder hier.
Tokio.
Ja gut, das habe ich...
Okay, das konnte ich eh nicht nachvollziehen.
Da war ich aber schon zu alt damals, ja.
Da war ich schon zu alt.
Aber ein paar Sachen, muss ich sagen, ein paar Sachen...
Ich bin ja eigentlich schon seit jeher so der Anti-Mainstream-Typ.
Also ich mag Sachen, sobald sie Mainstream sind, nicht mehr.
Irgendwie merkwürdig.
Auch wenn ich es vorher gemacht habe, was auch immer.
Aber...
So ein paar Sachen war gar nicht so kacke.
Also ganz im Ernst, zu der Zeit, wo ich jung war,
eines der gehyptesten Filme überhaupt war Titanic.
So.
Später, später haben die Mädels dann nicht mehr Titanic geguckt,
sondern Twilight.
Oh, ganz ehrlich, seriously.
Wenn ich die Auswahl habe zwischen Titanic oder Twilight,
da fällt meine Wahl immer auf.
Titanic.
Auch wenn ich jetzt...
Fight Club, ja klar, habe ich das geguckt.
Auch wenn ich nicht unbedingt jetzt Titanic mir jedes Jahr nochmal angucken müsste.
Aber wenn ich wirklich die Auswahl hätte zwischen Twilight und Titanic,
dann würde ich eigentlich Titanic nehmen.
Fight Club war nice.
Ich muss aber sagen...
Also mein absoluter Lieblingsfilm...
Ich habe es wahrscheinlich schon oft genug erzählt, aber...
Mein absoluter Lieblingsfilm ist Matrix.
Und zwar der erste von 1999.
Der neunzigste, glaube ich.
Ja, bester.
Bester Film.
Den gucke ich mir fast einmal im Jahr noch an.
Matrix ist der beste Film überhaupt.
Es gibt viele...
Das will ich nicht sagen.
Mein persönlicher Lieblingsfilm.
Heißt nicht, dass es...
Dass mir nicht andere Sachen auch gefallen, aber Matrix ist wirklich so ein Ding.
Es gibt wenig Filme, die kann ich mir immer mal wieder so einmal alle ein, zwei Jahre angucken.
So, Leute, ich muss mal kurz mein Headset umstöpseln.
Sonst...
Ich muss euch mal muten, weil sonst knackst es gleich ganz eklig laut.
So, da bin ich wieder.
Hört sich auch gleich viel besser an, ne?
Viel cleaner und crisper.
Boah.
Ganz ehrlich, was Filme angeht, ich bin da kein großer Filmliebhaber.
Ich gucke zwar auch mal ganz gerne einen Film.
Ich finde aber selten was, was mir wirklich gefällt.
Auch an Serien.
Also es gibt allgemein wenig Sachen.
Es gibt ein paar wirklich nice Filme.
Da müsst ihr jetzt mal drüber nachdenken.
Also von Animationsfilmen...
Wisst ihr, was mein mit Abstand...
Ja, das waren die Zeiten, wo man Sachen noch in X-Width und Diffix und so gezogen hat.
Was mein mit Abstand liebster Animationsfilm ist...
Und dann mal eine Frage an euch.
Was ist euer Lieblingsanimationsfilm?
Und ich meine nicht den...
Nicht den Hoverwatch-Film oder sowas.
Was ist euer echter Lieblingsanimationsfilm?
Meinetwegen können wir da auch Animes dabei erzählen.
Toy Story 1.
Toy Story finde ich auch gut.
Okay, es wurde schon genannt.
WALL-E.
Meine auch.
WALL-E und was ich auch mega finde, ist Monster AG.
Wobei Monster AG noch ein bisschen early war.
Also da siehst du schon teilweise die technischen Probleme noch.
Aber WALL-E ist das.
Also ich würde sagen, WALL-E ist mein mit Abstand Lieblingsanimationsfilm.
Ice Age war auch cool, ja.
Aber ansonsten, wie gesagt, bin ich nicht so der große Filme-Gucker.
Bei mir ist bei Filmen wie bei Spielen so ähnlich.
Es dauert total lang, bis ich irgendwas gefunden habe, was so genau nach meinem Geschmack ist.
Ich meine, ich gucke mir die einen oder anderen Filme.
Aber ich finde die wenigsten Filme richtig.
Ich finde die wenigsten Filme richtig geil, wo ich sage, boah, Alter.
Also wenn das fertig ist, so nach dem Motto, Film durch, dann sage ich dann, boah, geil.
Da gibt es wenig.
Gibt ein paar, da sage ich, ja, nice, kann man sich durchaus angucken.
Ach, schwer zu sagen.
Aber apropos Filme, da fällt mir immer wieder ein, wie gestalkt ich mich mittlerweile fühle von Twitter, Amazon und Google.
Und egal, was die sagen, sie sharen keine Daten.
Ich glaube denen kein Wort.
Und zwar, als es damals losging, so mit Ukraine und Russland, da habe ich mal ein bisschen auf Twitter rumgelesen, was geht denn da gerade so ab.
Und auch die einen oder anderen Google-Sachen eingegeben und geguckt.
Pass auf, jetzt kommt, ich weiß, super keck, Alu.
Aber, da gehe ich in Prime Video.
Und wisst ihr, was mir in Prime Video empfohlen wird?
Jagd auf Roter Oktober.
Das kann kein Zufall sein.
Random.
Das ist ein Film.
Das ist ein Film.
Das ist ein Film.
Das ist ein Film.
Das ist ein Film.
Das ist ein Film.
Das ist ein Film.
Das ist ein Film.
Das ist ein Film.
Das ist ein Film.
Das ist ein Film.
Das ist ein Film.
Das ist ein Film.
Das ist ein Film.
Das ist ein Film.
Das ist ein Film.
Das ist ein Film.
Fragt mich nicht.
1985 oder so.
Oder 1990.
Keine Ahnung.
Random einfach.
Hat überhaupt nichts damit zu tun.
Wahrscheinlich einfach nur, weil ich irgendwie Russland gegoogelt habe.
Oder auf Twitter gesucht habe, als da losging.
Jagd auf Roter Oktober.
Ich meine, realistischer betrachtet, anstatt keck Alu, realistischer betrachtet ist es so,
es gibt Action.
wo Russland was mit zu tun hat
und die Leute suchen
dann halt auf Amazon mehr
nach
russischen Sachen und
deswegen wird dann auch so
Filme mit russischem Thema empfohlen, aber
also
da war ich
da hab ich mir echt gedacht, Leute
ihr könnt mir nicht erzählen, dass ihr keine
Werbedaten irgendwie austauscht
einmal nach was russischem gesucht
Bäm, Filmempfehlung
Ja, die Vorschläge sind
meistens übelst Müll
Avatar 2 werde ich mir nicht
antun
Ich hab Avatar 1 auch
Jahre
nachdem das rausgekommen ist
gesehen und mir gedacht
Okay
Next
Was ist eigentlich
Chat, geh mal eine Frage an die etwas
jüngeren unter euch
Was ist denn eigentlich so, dass Titanic und
Twilight
der heutigen Zeit
Was gucken sich die Mädels heute
15 mal an im Kino oder über Streaming
Es gibt immer
Jede Generation hat sowas
Bei meiner Mutter war es Dirty Dancing und sowas
Barbie
Barbie ist kein
Barbie ist kein so
Love
Frauenfilm glaube ich nicht, oder
Frozen, okay
Ja, vielleicht, okay
Aber
Wer zählt zu den Jüngeren?
Okay, jetzt kann ich euch genau sagen, wer zu den Jüngeren zählt
Und zwar, wann kam
Wann kam Twilight raus?
2009, okay
2009
Also, wenn du
Twilight nicht mehr als
Hype-Film mitbekommen hast, dann zählst du
zu den Jüngeren
Ich weiß wirklich nicht, was da heute
Ja gut, du kannst 2009 schon auf der Welt
gewesen sein, mit 5 interessiert man sich ja dafür nicht
Also ich mein, wenn du so 2009
so irgendwie was zwischen
12 und 16 und so so
warst
Ich auch nicht, ich bin 1984, für mich auch nicht
Also bei mir, bei mir war's, bei mir war's tatsächlich, was die Mädels 10 mal im Kino
sehen wollten, Titanic
Und das haben manche auch gemacht, die sind da
6, 7, 8 mal rein, hab ich das angeguckt
Aber ich finde, so schlimm war der Film gar nicht
Stimmt, eigentlich korrekt, korrekter Einwand
Wir sind hier Informatik-Cross-Stream, da gibt's sowas nicht
Hm
American Pie ist auch so ein Film, wo ich die Faszination nicht habe, dass ich so ein Film
wo ich die Faszination nicht nachvollziehen konnte
Das war in meiner Jugend auch, so, so nach dem Motto
Wahrscheinlich, weil's so
der erste, der erste etwas
unanständigere war Film, den Leute geguckt haben
Und ich, ich ganz ehrlich
Genau, genau das, genau das
Und ich fand's mit 14 oder
Wann kam das raus?
Da gibt's ja auch mittlerweile 30 Milliarden Teile von 2000, okay
2000 war ich 16
Ja, ja, wenn man so, wenn man so, sag mal so zwischen 12 und 18 war, fand man den lustig, weil man zwischen 12 und 18 war
Aber ansonsten ehrlich gesagt
Das war so ein Ding, wo ich die Faszination nicht nachvollziehen konnte
Okay, Fast and the Furious ist auch so ein Ding, was ich nicht nachvollziehen kann
Warum's die Leute toll fanden
Wie gesagt, es gibt wenig Filme, die ich so richtig, die ich so richtig feier
So wenige, dass ich tatsächlich jetzt, dass ich wirklich eine ganze Weile nachdenken müsste.
Also wie gesagt, Wall-E als Animationsfilm und Matrix als, ja, wie nennt man das, echter Film.
Herr der Ringe, auch mega nice.
Das ist auch was, was ich mir immer mal wieder angucken kann.
Zwar jetzt nicht unbedingt alle drei Teile in der Super-Ultra-Directors-Cut-Extended-HD-Plus-Edition.
Aber ab und zu mal einen davon schon.
Da geht ja auch dann irgendwie schon 203 Stunden oder, oder.
Ja, also Matrix 1 ist das Einzige, was ich mir angucken kann.
Die anderen habe ich mir auch angeguckt, damals.
Aber ehrlich gesagt, da hast, das hat einfach nicht mehr gepasst.
Also Matrix 1 war einfach der beste Film.
Und wusstet ihr eigentlich, dass in Matrix 1, Matrix, ähm, Helikopter-Scene,
dass in der Helikopter-Szene von Matrix,
dass diesen Hintergrund, den ihr hier seht,
dass das kein CGI ist, sondern,
ich glaube, das habe ich schon mal erzählt,
also der Hintergrund hier, den man hier sieht,
das ist, das ist kein CGI.
Das ist auch kein echtes Hochhaus.
Das ist das größte, die größte Leinwand, die jemals für einen Film hergestellt wurde.
Bis die Dame in der Zeit.
Das ist gemalt im Hintergrund.
Oder gedruckt, wahrscheinlich.
Das ist, das ist, das ist ein Poster, ein großes Poster, eine große Leinwand im Hintergrund.
Das sieht aber gut aus, oder?
Sieht, sieht, sieht aber, sieht aber echt, sieht aber gut gemacht aus.
Generell, ihr müsst euch mal, also, ich, ich habe wenig, wenig Making-of von Filmen bisher geguckt.
Aber das Matrix-Making-of habe ich geguckt.
Und das ist wirklich sehr spannend, wie sie damals die Effekte gemacht haben.
Also, Greenscreen war halt,
sag mal so, Greenscreen mit CGI war halt schon,
war schon ein Ding, aber halt sehr, sehr rudimentär.
Man darf nicht vergessen, Matrix wurde, wurde irgendwie 1997, 1998 aufgenommen.
Also, sprich, da war, das war Zeiten von Half-Life-1-Graphics auf dem PC.
Natürlich mit ordentlichen Workstations und, und fetten Dingern konnte da schon was machen.
Aber das war, das war alles super rudimentär.
Und, und der erste Matrix-Film hatte auch noch sehr viele, ja, ganz, ganz praktische Effekte.
Zum Beispiel dieser, dieses, dieser Lobby-Shootout, der da war.
Den es da gab, unten in der Bank oder was das ist.
Die Szene, die jeder aus Matrix kennt, da wo die ganze, die ganzen Kacheln und so abplatzen.
Das ist auch nahezu, wenn nicht komplett, ohne CGI gefilmt.
Und da, da, da zeigen die auch im Making-of, wie sie das gedreht haben.
So mit, ähm, mit, mit, mit Seilen, wo sie die, wo sie die Leute dann durch die Luft gezogen haben und solche Dinger.
Und, und wer sich fragt, warum Neo in Matrix 1,
so gut wie nu, so gut wie nie kickt, außer ganz am Ende, was sie auch ganz am Ende aufgenommen haben.
Neo, Neo kickt so gut wie, wie nie. Neo boxt im Endeffekt nur und schlägt.
Das liegt daran, weil sich Keanu Reeves irgendwie sein Bein verletzt hat.
Entweder während dem Dreh oder vor dem Dreh und er konnte nicht richtig kicken.
Die waren schon froh, dass er überhaupt auch sich ordentlich bewegen konnte.
Also Matrix ist eines der wenigen Filme, wo ich, wo ich das Making-of geguckt hab.
Ja.
Und ich, ich fand, das fand ich auch in Matrix mega nice, dass man irgendwie wusste, dass, dass der Typ einen hintergeht.
Ja, oder dass, dass der Typ dir hintergeht.
Aber es war doch gut gemacht.
Man, also, seriously, zum ersten Mal, wo ich den Dude gesehen hab, hab ich mir gedacht, okay, der hat Dreck am Stecken.
Das hast du sofort gesehen.
Das war ein bisschen wie in alten Filmen früher, wenn der Held irgendeinen schwarzen Kumpel hatte,
wusstest du sofort, oder irgendwie einen schwarzen Partner hattest, wusstest du sofort, okay, der wird gleich angeschossen oder sowas.
Und bei Matrix war es auch so, als ich den Typ gesehen hab, ich hab, wie hieß das, Cypher hieß er, glaub ich, oder?
Ist das Cypher? Der Typ?
Da wusste ich gleich, der hintergeht die.
Ja, das kann sein.
Der erste Trans... Den hab ich auch geguckt, ja.
Das ging, das ging auch klar.
Und wisst ihr, wisst ihr, welcher Film mich...
Also, es gab, es gab ein paar Sachen, die mich, die mich die letzten Jahre über so überrascht, überrascht haben, aber ein Film, mit dem ich nie gerechnet hätte, dass er was taugt, ist der letzte Dungeons & Dragons Film.
Als ich das, als ich den Trailer gesehen hab, und, beziehungsweise die Ankündigung, hab ich mir gedacht, Leute, das wird Ultraschrott.
Und als ich den Trailer gesehen hab, hab ich mir gedacht, okay, es sieht gar nicht so kacke aus, aber Trailer sehen oftmals viel besser aus.
Wird bestimmt mega kacke.
Ich hatte überhaupt keinerlei Hoffnung darin, dass da ein gescheiter Film rauskommt.
Und ich muss sagen, der ist wirklich nicht übel.
Also, wer auf so Fantasy-Sachen steht, also Fantasy-Sachen, die vielleicht auch mal zwischendurch ein bisschen lustig sind, aber eigentlich an sich dann doch eine, eine so ernste Story haben, kann ich echt empfehlen.
Viel, viel besser, als ich gedacht hab.
Ja, und wer so auf Star Trek Science-Fiction-Sachen steht...
Weil ich's grad im Chat lese, wer's noch nicht geguckt hat...
Ich hoffe, da gibt's eine vierte Staffel bald noch.
Wäre schade, wenn nicht.
Aber wer das noch nicht geguckt hat, dem kann ich auch Staffel 1, 2, 3 tatsächlich empfehlen.
Find ich, find ich auch nice.
Weil ich persönlich Staffel 1 am besten fand, aber die anderen gehen auch voll klar.
Also, wer so auf die alten Star Trek-Sachen steht, dem wird das hier gefallen.
So.
Gut.
Eigentlich wollte ich mich da gar nicht drüber auslassen, aber wenn wir schon mal dabei sind...
Leute, ich bin immer noch am überlegen, welches Fahrrad ich mir kaufe.
Haben wir hier irgendwelche Poggers, Poggers-Fahrradfahrer unter uns?
Also, ich hab mir mal ein bisschen auf Reddit, auf Reddit geguckt.
Und...
Also, was ich machen will, ist...
Also, eine Sache, die ganz gut klingt, ist das Teil hier.
Hallo?
Please, öffnen.
Eine Sache, die ganz gut klingt, ist das Teil hier.
Ich will nämlich das für unterschiedlichste Sachen benutzen.
Ich will Waldwege fahren können damit.
Ich will damit aber auch von der Arbeit zurückfahren können und alle auch auf Straßen fahren.
Also, irgendwas relativ Vielzeitiges.
Ja, da muss man raus.
Ich find das hier eigentlich ganz gut.
Preis-Leistungs-mäßig ist auch ganz nice.
Das kostet irgendwas zwischen 2.000 und 2.500, je nachdem was man nimmt.
Aber ich will kein E-Bike.
Ja, aber...
Also, erstens sind die ziemlich schwer lieferbar, also ziemlich alle.
Sondern das zweite ist...
Ich muss gucken, wie ich das mache, weil...
Nimm keinen Carbon-Rahmen.
Nee, hab ich auch nicht.
Warum nicht?
Aber hab ich auch nicht vor.
Das ist ein Alu-Rahmen, hat aber eine Carbon-Gabel.
Das ist irgendwie ein bisschen...
Ja, geh mal auf Bike.
Was?
Bike minus Components.
Ich will das ja auch aus Fitness...
Also, ich will das zu 90% aus Fitnessgründen fahren.
Ab und zu mal vielleicht irgendwie zum Lidl oder so.
Aber...
Also, eine Sache, die mir noch ein bisschen Kopfzerbrechen macht beim Fahrrad, also beim Fahrradkauf ist...
Ich hab mir überlegt...
Also, ich muss ja irgendwie das in meinen Tagesablauf so ein bisschen einbauen ab und zu, dass ich Fahrrad fahren kann.
Und ich hab mir überlegt, ich werde das so machen.
Ich fahr dann einfach morgens mit dem Zug...
Da ist noch nicht allzu viel los und gerade das Fahrradabteil ist eigentlich immer genug Platz.
Ich fahr morgens mit dem Zug nach Frankfurt.
Ich hab ein Auto.
Aber ich will kein Auto fahren, um fit zu werden.
Also, das ergibt ja wenig Sinn.
Ich hab jetzt angefangen, seit über einem Monat schon, jeden zweiten Tag ordentlich zu rennen.
Ich mein, ich mach zwar schon die letzten Jahre über was, aber noch nicht so...
Nicht so oft.
Und ich hab mega Bock auf Fahrradfahren.
Und ich hab mir das überlegt, ich steig in die Bahn.
Nehm das Fahrrad morgens mit.
Und dann fahr ich einfach zurück mittags.
Ist kein Ding.
Fahrradstrecke ist ungefähr 24 Kilometer.
23, 24 Kilometer.
Und da brauch ich dann so, was weiß ich, eineinhalb Stunden oder sowas für.
Ich weiß nicht, ich kann es schlecht einschätzen, wie viel man da als nicht so geübter Fahrradfahrer braucht.
Ich werd das vorher auf jeden Fall mal ausprobieren.
Und zumindest ein Ding ist halt...
Normalerweise hab ich einen Rucksack dabei.
Rucksack ist dabei...
Rucksack ist drinnen.
Mein Laptop.
Kopfhörer.
Ladekabel.
Und...
Und eine kurze Hose zum Umziehen.
Also nicht so viel.
Es ist jetzt auch nicht super schwer, der Rucksack.
Aber ich will kein Fahrradfahren mit Rucksack.
Da drehste durch.
Das heißt, im Endeffekt brauch ich irgendwie eine Möglichkeit, dort noch ein paar Taschen anzubringen.
Ich will kein E-Bike.
Ich will treten.
Auf das Ding hab ich keinen Bock mit fest installiertem Licht.
Licht will ich bei Bedarf dran machen können.
Und irgendwelche Schutzbleche brauch ich auch nicht.
Da muss ich halt gucken, wie ich da irgendwie eine Seitentasche oder so dran krieg für den Weg heim.
Also die Strecke von Frankfurt nach Hanau...
Ja, einen großen Rucksack ist nervig.
Gerade wenn man so fitnessmäßig fährt und dann schwitzt und einen Rucksack auf dem Rücken hat.
Das sackt.
Also...
Ich will es ja nicht übertreiben.
Was wollte ich jetzt sagen?
Was ist ums Eck für mich?
Was ist ums Eck für mich?
Was meinste?
Schutzblech würde ich schon.
Sonst ist dein Arsch nass, wenn die Straße nass ist.
Ah.
Gut, aber sowas kann man im Nachhinein auch da noch dran machen.
Ja.
Wir haben einen eigenen Fahrrad...
Fahrrad...
Das ist kein wirklicher Keller.
Eine eigene...
Also in der Firma so einen eigenen Fahrradabstell...
Raum.
Irgendwas wollte ich doch gerade noch ansprechen.
Ja.
Ja, mach.
Das würde mich interessieren.
Hier.
Also...
Kommt...
Ich komm drauf...
Stark an, wie rauf die Strecke...
Also die Strecke von Frankfurt nach Hanau hat über die gesamten 24 Kilometer 70 Meter Steigung.
Also du kannst sagen, die ist ziemlich flach.
Die ist nach...
Die ist quasi eben.
Jetzt halbe Stunde, 40 Minuten.
Naja.
Also dass du die Strecke in unter einer Stunde fast packst, musst du über 30 kmh im Durchschnitt
fahren.
Vielleicht für jemanden, der jetzt nicht so super geübt ist im Fahrradfahren, nicht
so das Ding.
Als E-Bike vielleicht.
Ne.
Ich will kein reines Rennrad, weil ich will ja auch Waldwege und andere Strecken fahren,
so zum größten Teil.
Aber ab und zu will ich halt auch mal von Frankfurt zurückfahren.
Mittagsheim.
Ja.
Okay.
Danach habe ich doch gerade schon geguckt.
Das habe ich euch doch sogar schon gezeigt.
Hast du mittlerweile ein Sixpack?
Ne.
Gibt es in der Firma Duschen?
Ja.
Aber wie gesagt, ich fahre nicht auf die Arbeit mit dem Fahrrad.
Ich fahre von der Arbeit heim mit dem Fahrrad.
Hast du schon unterschiedliche Shops angeguckt?
Ja.
Wie kommt das?
Ich weiß...
Ich weiß noch nicht genau, welches mir kaufen soll.
Ja, genau so habe ich das geplant.
Biete dein AG-Jobrad an.
Ja, aber ich will nicht, dass mein Arbeitgeber irgendwie das...
Es geht mir keinen Bock.
Ich kaufe mir ein Fahrrad und fertig ist.
Ich meine...
Okay.
Seriously.
Es ist jetzt nicht billig.
Ja.
Okay.
2000 bis 2500 Euro sind nicht billig für ein Fahrrad, aber wirklich angemessener Preis.
Und außerdem, Leute.
Irgendwas muss ich mir von der Kohle doch auch mal kaufen.
Ja.
Ich kann das nicht alles immer vergammeln lassen und nur ETFs kaufen.
Ja, da bezahlst du wahrscheinlich den Namen mit.
Mit Schutzblech.
Nein, eigentlich...
Eigentlich nicht.
Mich juckt das ehrlich gesagt.
Also, Schutzblech hätte ich mal gedacht, brauchst du nicht, weil ob die Hose nass wird
oder so, juckt mich nicht.
Ich ziehe das...
Ich ziehe etwas anderes auf dem Heimweg an.
Nein, definitiv kein E-Bike.
Kannst du ETFs empfehlen?
Ich kann dir den ETF empfehlen, den ich habe.
Und...
Wo ist mein Handy?
Ach, fuck.
Habe ich im Klo vergessen.
Ich habe einen Org.
Ich habe einen Org.
Ich habe einen Org.
Ich habe einen Org.
Ich habe einen Org.
Ich habe einen Org.
Ich habe einen Org.
Ich habe einen Org.
Erster Thing.
MSCI.
All World Ac copulating.
Das ist der Brainedet ETF, den man immer kaufen kann, wenn man keinen Plan hat.
So wie ich!
Hat das Fahrrad WI-FI?
Nein.
Naja, ich habe ja mein Handy dabei.
Also, wie gesagt, ich habe schon gesehen, dass das Thema Fahrrad ist fast wie ein Fass ohne Boden.
Ja, man muss ja dann auch gucken, dass man noch passende Reflektoraufkleber dran macht und sowas.
Ach, mal gucken.
Also, ich gehe davon aus, dass ich mir irgendwie sowas hier in der Richtung kaufen werde.
Ob mit 1x11 oder 2x11, weiß ich noch nicht genau.
Mal gucken.
So, und hier Bike Components sollte ich mal gucken.
Alle Cookies akzeptieren.
Nice.
Susi stimmt zu.
Okay, Angebote, Komponenten.
Angebote.
Fahrräder.
Ich sollte vielleicht bei Fahrrädern gucken.
E-Bikes.
Rennräder.
Gravel Bike.
Gucken wir mal.
Open U.
Okay, die Dinger sagen mir halt überhaupt gar nichts.
Jetzt geht es aber langsam schon ins Geld.
Ich werde mir das mal bookmarken, Tom.
Ich werde mir das mal bookmarken.
Und ich komme darauf zurück.
Schau mal, nice.
Unser Lager muss werden.
Ja, also was mir aufgefallen ist bei vielen anderen Herstellern, dass die teilweise 3-10 Wochen Lieferzeit haben.
Oder manchmal auch gar nichts irgendwie gerade liefern.
Weiß nicht, was da los ist.
Also ich kann dir schon mal ungefähr sagen, was ich ungefähr brauche.
Also ich bin 1,74 groß.
Und ich habe vergessen.
Ich habe den Weg in den Schritt schon gemessen.
Aber ich weiß es gerade aus dem Kopf nicht.
Ich brauche wahrscheinlich 53 Zentimeter oder sowas.
Jetzt glaube ich, Größe...
Ist das Größe M?
Ach, ich weiß es nicht.
Ich bin 1,74.
Also sprich, ich brauche jetzt kein Riesenfahrrad.
Okay.
Fahrrad-Tierlist, ja, das wäre es.
Ja, aber so sieht es aus.
Also demnächst bin ich auch mit Fahrrad unterwegs.
Leute, ich bin gestern...
Ich bin gestern über 8,2 oder so Kilometer gelaufen zum ersten Mal.
Also längste Runde überhaupt.
Mit ungefähr 7 Minuten pro Kilometer.
Und ich hätte noch eine ganze Ecke schneller gekonnt.
Hätte ich wirklich Vollgas gegeben.
Ich bin eigentlich relativ entspannt gerannt.
Und ich bin jetzt...
Ich bin jetzt...
Ich bin jetzt...
Wenn ich mir überlege, dass ich bei 7 Minuten den Kilometer
vor einem Monat noch gestorben wäre,
auch wenn ich nur einen Kilometer gerannt wäre,
ich finde, ist der Procure schon ganz okay.
Ich laufe ja und fahre Fahrrad.
Dann müsste ich nur noch schwimmen.
Dann next Ironman.
Wie kam es zu der Entscheidung, Sport zu machen?
Das ist eine sehr gute Frage.
Ja, das ist eine sehr gute Frage.
Na, Leute, wo kriege ich die Spritzen her?
Also das ist eine wirklich sehr gute Frage.
Wie kam es zu der Entscheidung, Sport zu machen?
Also, so hundertprozentig kann ich das gar nicht sagen.
Ich kann es mir aber mal versuchen, so herzuleiten.
Also, ich meine, was ich jetzt ja schon lange mache,
sogar schon vor Corona ist, dass ich jeden Tag
und mit jeden Tag meine ich wirklich jeden Tag,
außer manchmal sonntags, aber sonst wirklich jeden Tag,
egal ob arbeiten oder nicht,
und was auch dank Homeoffice erst so richtig möglich ist,
dass ich jeden Tag eineinhalb Stunden wandern, mindestens.
Eineinhalb Stunden wandern gegangen bin.
Nicht super langsam, aber auch nicht mega schweißtreibend schnell,
aber ordentlich zügig, ja.
So, und irgendwann habe ich mir dann so mal gedacht,
okay, Max, weißt du was, lasst doch mal testen,
wie viel Ausdauer du eigentlich mittlerweile hast.
Also, wie weit kannst du eigentlich rennen?
Ich habe das jahrelang nicht ausprobiert und ich dachte mir so,
hey, nach dem Valomat könnten wir vielleicht machen, ja.
Bin mir nicht sicher, ob ich da heute Brain-Kapazitäten für habe.
So, und weißt du was?
Lass doch mal ausprobieren.
Hast du das nie getestet?
So deine tägliche Runde?
Die geht richtig, richtig gut vonstatten.
Ich habe mir dann irgendwann auch so eine Garmin Fitness-Tracker-Uhr gekauft
und habe ein paar Mal aufgezeichnet dabei und habe mir so gedacht,
ja, ist doch eigentlich alles ganz nice.
Sieht doch alles ganz gut aus.
Und dann habe ich einfach gesagt, okay, easy, ich renne jetzt einfach mal.
Ich habe einfach von heute auf morgen gesagt, ich renne jetzt mal.
So, erste Runde weiß ich noch, mega brutal.
Okay.
Ich glaube, es waren nur fünf Kilometer oder sowas und ich bin die nicht durchgehend gerannt.
Ich bin von den fünf Kilometern, glaube ich, weiß ich, dreimal ein Kilometer gerannt oder so.
Und Leute, mir haben die Beine wehgetan, die Füße, die Oberschenkel, die sogar,
man kann es sich kaum vorstellen, mir haben meine Ärmel wehgetan vom Laufen.
Fragt man sich jetzt, warum tun einem die Ärmel weh vom Laufen?
Aber ja, allein schon, weil man da auch Ärmel für braucht beim Rennen.
So hin und her und so.
Das heißt, mir hat alles wehgetan.
Da habe ich erst mal drei, vier Tage nichts gemacht, weil ich Muskelkater erst fuck hatte.
Und dann habe ich mir überlegt, okay, eigentlich lief das besser als gedacht.
Weil ich weiß, früher hatte ich schon Probleme, einen Kilometer durchzurennen.
Und jetzt mit knapp 40, ich bin ewig, ewig nicht gerannt.
Also, früher habe ich mehr gepackt.
So, und dann, okay, weißt du was?
Jetzt probierst du das einfach nochmal.
Jetzt machst du es einfach nochmal.
Und dann habe ich gesagt, weißt du was?
Du läufst jetzt einfach so schnell wie geht, sodass du fünf Kilometer durchgerannt kriegst.
Und das habe ich auf First Try geschafft.
Ich war aber danach ultra im Arsch wieder.
Also wirklich, mir haben die Waden weh, alles, alles wehgetan.
So, alles, also komplett.
Mir hat sogar mein Nacken wehgetan.
Es hat mir alles, Ärmel, Beine, ich wusste gar nicht.
Leute, ich wusste nicht, dass es so ist.
Ich wusste nicht mal, dass einem Fußzehen wehtun können.
Das war mir nicht klar bis zu dem Zeitpunkt, dass das überhaupt möglich ist, dass man Fußzehenschmerzen haben kann.
Zumindest das lag aber auch hauptsächlich daran, dass ich das in so 0815 Turnschuhen gerannt bin.
Ohne jegliche Dämpfung oder irgendwas.
Und auch noch ausgeleiert dazu.
So, und dann habe ich mir gedacht, wieder zwei, drei Tage später.
Weißt du was, Max?
Das lief jetzt auch besser als gedacht.
Du machst jetzt einfach in dem Tempo weiter, jeden zweiten Tag.
Und seitdem, das ist jetzt ungefähr, ungefähr so vielleicht 1, 1,5 Monate her, renne ich jeden zweiten Tag.
Manchmal ist es, ist es jeden zweiten, dann jeden dritten Tag, wenn ich beispielsweise auf die Arbeit muss und mittags so heiß ist.
Aber mein Ziel ist, und das klappt auch in 90% der Fälle, jeden, jeden zweiten Tag.
Und mittlerweile ist es so, rennen oder laufen.
Rennen, also gut, joggen, ja.
Also nicht laufen, laufen mache ich schon eine Weile.
Aber halt schneller als einfach nur gehen.
Ja, oder einfach nur, als einfach nur spazieren gehen, als einfach nur laufen.
Also man kann sich jetzt streiten, ob es, ob es joggen ist oder schon rennen.
Gibt ja da Diskussionen drüber, ab wann man rennt, ab wann man noch joggt.
Aber letztendlich, in meiner Fitnesswatch wähle ich Running aus.
Und.
Mittlerweile ist es tatsächlich so gut geworden, dass ich, wenn ich, wenn ich gerannt bin, den Tag merke ich es noch übelst auch teilweise so in den Beinen, wenn ich die Treppe runter laufe und sowas.
Und den Tag danach, danach merke ich es auch noch ein bisschen.
Aber den Tag dann, wenn ich wieder dran bin mit, mit Rennen, ist eigentlich fast alles wieder weg.
So.
Und das, das hat, das ist jetzt so seit den letzten, sag mal seit der letzten, seit den letzten 1,5, 2 Wochen ist das so.
Also es hat sich immer weiter gebessert.
Und ich kann jetzt quasi jeden zweiten Tag rennen, ohne dass mir noch das Rennen vom letzten Mal in den Beinen wehtut, wenn ich wieder anfange.
Also es läuft ganz gut.
Also ich finde für knapp einen Monat, sag mal so, ja doch, sag mal Monat, 1,5 Monate, ist das eigentlich ganz gut.
Also mein schnellstes, meine schnellste Runde, 5 Kilometer, war 5 Minuten, weiß nicht, 55 oder sowas.
Und jetzt, also mein, mein Ziel ist, mein kurz-, oder sag mal kurz-, mittelfristiges Ziel ist,
10 Kilometer unter einer Stunde.
Und ich glaube, da bin ich, bin ich sogar echt auf einem guten Weg.
Ich bin letztens 8 Kilometer gerannt, oder 8,2 Kilometer, schön so entspannt wie ging, mit 7 Minuten, ziemlich genau 7 Minuten pro Kilometer.
Das heißt, wenn ich, wenn ich mich mal ein bisschen an die Geschwindigkeit, ein bisschen an die Länge gewöhnt habe,
denke ich, ist das durchaus realistisch, noch, sagen wir mal, 1,8 Kilometer weiter und ein bisschen schneller zu laufen.
Wobei man sagen muss, das täuscht, das hätte ich selbst nicht gedacht.
Der Unterschied zwischen 7 auf 6 Minuten ist wirklich enorm.
Also, denkt man sich so, pff, so eine Minute schneller, halt mal ein bisschen anstrengend, ein bisschen schwitzen.
Leute, 7 Minuten ist easy going, 7 Minuten pro Kilometer, 6 Minuten pro Kilometer ist echt anstrengend.
Das glaubt man gar nicht so, wenn man das selbst noch nicht erlebt hat.
Der Unterschied ist wirklich riesig.
Also.
7 Minuten pro Kilometer sind so, ah ja, hm, man könnte jetzt irgendwann auch mal wieder Schluss machen.
Und 6 Minuten pro Kilometer, oder knapp unter 6 Minuten, weil man muss ja auch ein bisschen Puffer haben,
sagen wir mal so, 5,45 pro Kilometer ist so, ist so, nach dem ersten Kilometer schon, Alter, wann ist endlich vorbei?
Das Gefühl, dass ich unendlich lang laufen konnte, naja.
Also bei, bei den längeren, bei den längeren Runden, so letztens,
die Kilometer-Runde, wo ich schon langsam gelaufen bin, die hätt ich auch 10 Kilometer rennen können, ja.
Wobei ich halt auch schon ein bisschen in den Beinen dann gemerkt hab, aber das war recht entspannt.
Aber bei, bei dem letzten, wo ich halt versucht hab, wie schnell schaffst du 5 Kilometer?
Da hatte ich keine Zeit, high zu sein.
Da war ich nach dem ersten Kilometer schon im Alter, wann ist endlich vorbei-Modus.
Ich komm, ne, ich wohne neben Frankfurt, ich komm nicht direkt aus Frankfurt.
Ne.
Garantiert werd ich das nicht testen.
Naja, auf Schwimmen hab ich keinen Bock.
Früher, es ist eigentlich witzig, wie sich die, wie sich da so die, die Vorlieben ändern.
Früher hab ich Laufen gehen richtig gehasst.
Fahrradfahren war ganz okay.
Ähm, aber Schwimmen war mega.
Schwimmen konnte ich damals auch richtig gut.
Ich konnte echt ohne Scheiß, ich konnte wahrscheinlich, ich weiß nicht, was mein, was mein Meistes war, aber ich hätte ohne Probleme 10 Kilometer schwimmen können.
Also 5, 5 Kilometer.
10 Kilometer plus konnte ich easy schwimmen damals.
Das war überhaupt kein Ding.
Ich konnte, ich konnte da, was will ich, 2 Stunden im Wasser schwimmen, das war überhaupt kein Ding.
Und jetzt war ich bestimmt 15 Jahre so nicht mehr im Schwimmbad und hatte keinen Bock mehr zu schwimmen.
Ja, also.
Ja, so sieht's aus.
Weg.
Ich hab grad meinen Chat irgendwie...
...gerade verklickt.
Äh, wait a minute, wo ist mein Chat-Gil?
Hier.
Ja, auf Schwimmen hab ich irgendwie keinen Bock.
Hörst du Musik während dem Laufen?
Nein.
Die meisten Leute, die mir so entgegenkommen morgens am Main, die haben irgendwas auf dem Ohr.
Manche sehen so richtig Elite aus, ja.
Mir kommt manchmal so ein Opa entgegen und ich hab keine Ahnung, wie alt er ist, weil ich noch nie sein Gesicht richtig gesehen hab.
Aber ich glaube, der ist schon ein bisschen älter.
Manchmal kommt mir morgens so ein Opa entgegen gerannt.
Ja, irgendwie einen Drittel so schnell wie ich.
Aber ist kein Ding, der ist wahrscheinlich auch fast doppelt so alt oder so.
Wobei, ja, 80 wird dann nicht sein.
Aber der ist so ein ganz erkelter.
Aber der hat die Ultra-Elite-Ausrüstung, ne.
Der hat so ein komisches Käppi, was oben frei ist.
Dann hat er so eine richtig nice, verspiegelte Sonnenbrille an.
Dann hat er irgendwie so ein Trikot an.
So eine Tasche nebendran.
Der hat die Ultra-Professional-Ausrüstung, der Kerl.
Und ich...
Ja, und Musik und alles.
Ist voll ausgestattet.
Und ich seh dagegen...
Ich seh dagegen übelst reudig aus.
Ich hab ne Kappe auf.
Nen China-Chinesen-Funktions-T-Shirt.
Und ne kurze Hose.
Das war's.
Kein Musik.
Kein sonstwas.
So.
Und das einzige, was ich unter dem T-Shirt hab, ist so ein Gurt.
Wo man das Handy reinmachen kann.
Max liegt sein Aussehen.
Ich hab mir so ne laufende Handytasche gekauft.
Sowas hier in der Richtung.
Das ist eigentlich ganz nice.
Das kannst du nämlich ziemlich eng machen.
Das liegt dann ziemlich eng an.
Und das mach ich...
Hier, die haben das oben drüber.
Ich hab das auch nicht vorne, sondern auf dem Rücken.
Ich dreh das immer auf den Rücken und mach's unter das Hemd.
Aber ich hab weder Sonnenbrille, noch Musik, noch irgendwas.
Aber manche sehen mega professional aus, die mir entgegenkommen.
Na gut, das Handy hab ich allein schon deswegen dabei.
Wenn mal wirklich irgendwas ist unterwegs, ja.
Überlegt euch mal, man knickt um.
Und hat kein Handy dabei oder so.
Das ist schon kacke.
Kein Tacho.
Ich mach mir so ein Fahrradcomputer vorne dran.
Ja, sowas.
Welches Tier hat zehn Augen, aber kann man nicht sehen?
Das sind so Fragen, die nicht gemacht sind, die zu erraten.
Aber ich bin mir sicher, du wirst das gleich erzählen.
Ähm...
Du meintest doch, dass du während deiner Ausbildung noch eine Schlankerin warst.
Das ist korrekt. War ich auch.
Das heißt aber nicht, dass ich gut in Form gewesen bin während der Ausbildung.
Ich war nur nicht so dick wie die anderen.
Das waren die Zeiten, wo sie Felix und mich noch in enge Technikräume geschickt haben,
weil wir die einzigen waren, die durchgepasst haben, ohne die Kabel aus den Zwitschern rauszureißen.
Mit dem Bauch.
Watch mit LTE...
Nee, ich nehm's Handy mit.
Ja, die sind dann verloren gegangen, wenn sie sich das Bein gebrochen haben unterwegs.
Aber genug erzählt jetzt.
Also demnächst Fahrradstelz am Start.
Ich sag's euch.
Ich bin fest davon überzeugt.
Ich weiß noch nicht genau, was und wo.
Ich will halt auch irgendwas Lieferbares haben.
Aha.
Man of Cultures United hier wieder.
Was haben wir denn hier schon?
Das können wir uns doch irgendwas angucken.
Ja, nur eineinhalb Stunden Zeit. Was haben wir denn hier?
They fix Titanfall 2 and it's amazing.
Okay. Lass mich raten. Okay. Jackfrax wieder.
Okay. Lass mich raten. Okay. Jackfrax wieder.
Solange wir nicht levelcapped, jebaited werden.
Was haben die denn gefixt?
Die haben gefixt, dass die Server gededosed werden und zugespampt von irgendwelchen komischen...
Dudes, sodass es nicht mehr spielbar ist.
Ja, ich bezweifle, dass das lange hält, dass da irgendwas gefixt wird.
Obwohl sie jetzt mit Apex eigentlich das Geld hätten, mal wenigstens Titanfall ein bisschen...
Ja, in Form zu bringen.
Samt zockt halt neues Video über Unity Toss.
Samt zockt halt neues Video über Unity Toss.
Ah, das ist gut. Der macht...
Der macht gute Videos.
Und das interessiert mich was.
Der Tod von Unity.
Das interessiert mich tats... Oh, Leute, mein...
Oh, Leute, mein... Ich habe zu viele Tabs.
Confirmed. Ich habe zu viele Tabs, mehr Tabs...
mehr Tabs als Chrome darstellen kann.
Okay, machen wir erstmal die ganzen Shit hier zu?
Okay, machen wir erstmal die ganzen Shit hier zu?
Oh, close, close, close.
Oh, close, close, close.
gerade noch so geschafft.
Perfektes Ziel.
Zeit, was zu ändern.
Ach, das ist... Ich dachte, ich habe mich schon gewundert,
seit wann heißt der Channel so?
Ach, das ist nicht Native Web,
sondern ein privater Channel.
Ach so.
Okay. Dann lass uns doch mal kurz
gucken, was sagt er denn zu
der Tod von Unity?
Also, wenn ich in einer deutschsprachigen
YouTube-Szene einem vertraue,
fachkundig was zum Thema
Unity zu sagen, dann ist es
er. Da bin ich
mal gespannt, ob er sagt,
dass Unity jetzt...
Also, ob er in dieses
Unity wird sterben einstimmt,
oder ob er sagen wird,
alles
übertrieben.
Kurz Lautstärke checken.
Ich habe viele bescheuerte
Sachen gesehen, die Firmen in der Videospielbranche
versuchen durchzusetzen. Was Unity
plant, ist aber so ziemlich das bescheuertste
und absolut dümmste, das ich je gesehen habe.
Noch nie habe ich es erlebt,
wie die Entscheidung einer Firma so komplett
an dem, was möglich und sinnvoll
ist, vorbeigeht.
Unity Technologies, die Firma hinter dem Autoren-System
Unity, verändert ihr Lizenzmodell,
was womöglich illegal ist,
in mehrerlei Hinsicht. Aber dazu kommen wir noch.
Laut dem neuen Lizenzmodell...
Wisst ihr, was ich mich frage?
Wie machen die das mit Spielen
im Game Pass?
Erwarten die ernsthaft, dass Microsoft
ab 1.1. neue Lizenzgebühren
bezahlt, oder wie?
Der Gaming-Clerks-Dude. Ja, aber ich glaube, der hat damit
gar nichts mehr zu tun.
Auch schon ewig nicht mehr geguckt. Ich glaube,
der ist sogar komplett raus da mittlerweile.
Soll der Vertreiber eines Spiels
bis zu 20 Cent pro Installation
eines Spiels... Das habe ich verpasst.
Soll der Vertreiber eines Spiels bis zu 20 Cent
pro Installation... Der Vertreiber, das wäre ja
dann quasi Microsoft für den Game Pass.
... eine Spiel zahlen,
wenn er die Schwelle von 200.000 Dollar
verdienst und 200.000 Installationen
überschreitet. Und ja,
es geht um Installationen,
nicht dem Kauf eines Spiels.
Okay, das heißt im Endeffekt
auch irgendwelche Free Games...
Okay, das heißt, man müsste
dann für Slender
auf einmal was bezahlen, weil
Installationen und so.
Falls sich da jemand noch dran erinnert.
Kennt ihr noch diese Videos, wo
die Leute sich alle so super krass fake erschreckt
haben?
... pro verkauften Spiel würde ja noch irgendwo Sinn
machen. Wenn jemand ein Spiel via Steam
runterlädt auf seinen PC und dann noch
ein weiteres Mal auf sein Steam Deck, sind das
zwei Installationen, also 40 Cent,
die an Unity gezahlt werden müssen.
Das ist so absurd,
dass es wirklich mindestens eine
Sache einfällt, wodurch diese Idee wie
ein Kartenhaus in sich zusammenfällt.
Aber gehen wir... Ob wetten die Rudern
da wieder zurück in einem Monat oder so
und sagen, oh, ihr habt uns alle falsch verstanden.
We, we, we,
we apologize, we listen
to the community, bla bla bla.
Äh, the community
is the most important
and most valuable, bla bla bla
bla bla. Kommt bestimmt wieder
in einem Monat oder sowas.
... paar Probleme mal durch.
Mal davon abgesehen, dass Unity sehr vage ist mit den
genauen Details, was schlecht ist,
da diese Regel ab... Sag mal,
schläft der Dude oder was ist mit dem
los? ... dass Unity sehr vage ist mit den
genauen Details... Der ist doch am pennen, oder?
Der haben die doch irgendeine Leiche
hingestellt.
Das ist doch... Das ist doch
computer-generated, oder?
... genauen Details, was schlecht ist,
da diese Regel ab 1. Januar 2024
in Kraft treten soll, sind die Dinge,
die wir wissen, technisch gar nicht möglich.
Zum Beispiel wurde ursprünglich gesagt,
dass jede Installation Geld kostet.
Du lädst auf Steam das Spiel runter,
startest es, es wird ein Ping
an den Unity-Server geschickt und der Entwickler
bzw. Vertreiber des Spiels muss 20 Cent
zahlen. Solltest du das Spiel löschen...
Hier das offizielle Statement. Okay, das gucken wir uns
jetzt gleich mal kurz an.
We have heard you!
Hahaha, ich wusste es!
Leute, ich schwöre,
ich habe dieses Statement noch nicht gesehen.
Hahaha,
ich wusste es!
Es ist einfach so lächerlich,
Leute, seriously,
ernsthaft, ich habe dieses
Statement nicht gelesen, aber
diese Statements sind immer
der exakt
gleiche Marketingtext.
Nur leicht abgeändert, es ist immer
exakt der gleiche Scheiß.
Ihr müsst mal
lesen. Habt ihr die Entschuldigung gelesen
für Herr der Ringe Gollum?
Das ist auch genau, bisschen
länger, aber genau der gleiche
Scheiß, ja? Guckt euch
die, guckt euch das Zeug an,
guckt euch die Marketing-Messages
an, die Blizzard rausgehauen hat,
wo es da um sexuelle Belästigung bei
Blizzard ging. Genau
der gleiche Bullshit-Text immer.
Ich habe das Gefühl, es gibt so eine Master-
Marketing-
ja, Lückentext-Ausfüllsoftware
und da kommt dann so Zeug raus
bei. Okay, lasst mal
kurz gucken, lasst mal lesen.
We have heard you. We apologize
for the confu... Ah, Moment!
Sie apologize... Doch, okay, Leute,
es kann sein, dass... Ne, das kam heute,
da habe ich definitiv noch nicht gelesen.
We apologize for the confusion. Das bedeutet
im Endeffekt eigentlich nur,
sie sagen, sie machen es genauso wie
jetzt, sie apologizen für, dass
die Leute angeblich zu dumm sind, es zu verstehen.
Aber ich gehe mal davon aus, dass
die Leute werden es zum größten Teil schon richtig verstanden haben.
We apologize for the confusion
and Angst.
The runtime fee policy we announced
on Tuesday caused.
We are listening, talking to our team
members, community, customers
and partners and will be making
changes to the policy. Okay,
da kommt dann sowas. We will share an update
in a couple of days.
Thank you for your honest and
critical feedback.
In Wirklichkeit denkt er, das bedeutet so wie
Fickt euch alle, ihr geht uns auf den Sack.
Übrigens,
sie sollen es mal mit dem Typ discussen,
der
Morddrohungen an Unity selbst
geschickt hat. Es gab doch
die Newspost,
dass es Morddrohungen gab
an das Unity-Team und danach
hat sich herausgestellt, es war jemand selbst
aus dem Unity-Team.
Also diese Entscheidung scheint
auch sehr viel Rückhalt in der Firma selbst
zu haben. Okay, lasst uns das Video
weitergucken.
Das ist ja mal super bescheuert.
Das ist ja mal ultra beknackt,
alter.
Was haben sie sich da denn ausgedacht?
Die Begründung dafür war,
dass Unity ja nicht tracken könnte,
wer das Spiel mehrmals installiert,
die Daten anonym sind.
Ja und? Ja und?
Was ist das für eine Begründung?
Ja, das ist ungefähr so,
wie wenn ich sage, Leute,
ähm,
wenn ihr das Spiel installiert,
ähm,
also, ihr müsst mir jetzt
alle 5 Euro im Monat überweisen,
weil ich kann ja nicht tracken,
wer von den nicht angemeldeten Zuschauern
äh, nicht Prime-Subt.
Hä?
Das ist genau die gleiche dämliche Logik.
Das macht doch überhaupt keinen Sinn.
Jede Installation gecheckt wird. Aha.
Und später dann, als sie zurückruderten,
ist es plötzlich doch möglich
und nur jedes weitere Gerät
soll Geld kosten.
Das heißt, dass Unity Ende des Monats
dem Entwickler eine Rechnung schickt
mit den monatlichen Installationen.
Ganz auf der Basis von Trust me, Bro.
Weil woher will man wissen, dass Unity nicht
Scheiße erzählt und mehr Installationen trackt,
als wirklich passieren.
Aber darum soll man sich laut der Firma
keine Gedanken machen. Natürlich nicht.
Weil wenn, dann wird ja eher zu wenig getrackt
als zu viel. Na klar. Klar, weil man diesen Idioten
auch nur noch ein Wort glauben kann.
Vor allem, nachdem sie ihre Terms of Service
illegalerweise geändert haben,
dann wird jetzt wahrscheinlich
sich alle freuen,
dass sie in Zukunft mehr C++
für Unreal machen dürfen.
Und Godot wird sich auch in Ast freuen.
Rate ich jetzt einfach mal.
Ich hab keine Ahnung von Spiele-Engines
und Spiele-Entwicklung.
Ursprünglich wurden die aktuellen
Terms of Service auf GitHub gepostet.
Öffentlich für alle, damit durch Transparenz
Vertrauen aufgebaut wird.
Immerhin war es so möglich, jede minimalste Veränderung
der TOS zu verfolgen.
Ja, dieses GitHub-Projekt wurde
vor ein paar Monaten offline genommen.
Und dann wurde klammheimlich die Klausur
Da weißt du doch eigentlich schon, dass da
irgendwas im Argen ist,
wenn solche Sachen verschwinden.
die besagt, dass man immer unter den jeweiligen
Terms fällt von der jeweiligen Unity-Version,
die man nutzt. Bedeutet, eigentlich
sollten ältere Unity-Versionen nicht
unter dieser neuen Regel fallen.
Aber durch diese Änderung, der man ja
nicht zugestimmt hat, da man diese heimlich
einfügte, haben sie nun die Möglichkeit zu machen,
was sie wollen. Denn dieses neue Lizenzmodell
zählt ab Januar für
alle Unity-Spiele, die
jemals erschienen sind.
Wie sie das machen, schwer zu sagen.
Es ist wirklich schwer zu sagen, weil
es ist erstens die Frage, ob alte
Unity-Sachen überhaupt diesen Tracking-Code
enthalten, wo man das tracken kann,
ob die sich das eh nicht nur ausgedacht haben.
Und
ich mein, es gibt jetzt
das wird wahrscheinlich auch der Gedanke dahinter
sein, es gibt jetzt seit über 10
Jahren oder so Unity-Games.
Also, das einzige
Ziel hinter sowas kann doch sein,
kurzfristig die
Zahlen besonders gut aussehen
zu lassen und den ganzen Shit dann
zu verkaufen. Warum macht
man denn sonst sowas?
Würde bedeuten, dass alle Spiele bereits
einen Tracker installiert haben und dann ab den ersten
ersten aktiviert werden. Fast so,
als wäre es Malware. Was doch spannend
ist, wo Unity erst vor einem Jahr mit
IronSource fusionierte, die damals beschuldigt
wurden Malware herzustellen.
Frage mich, ob das CEO von IronSource
etwas damit zu tun hat. Immerhin ist er
seit dem Zusammenschluss von Unity und IronSource
der dritte Präsident von Unity.
Dann haben wir noch zwei weitere Präsidenten
der Firma, die beide mit Elon Musk zusammenarbeiten.
Einer der verifiziert bescheuertsten Menschen
auf diesem Planeten.
Egan Durban zum Beispiel war ein Maulwurf,
der bei Twitter arbeitete und versuchte
den Deal durchzupuschen für Elon Musk.
Das kam raus und deswegen wurde er
gefeuert. Das Ziel wurde dennoch erreicht.
Und klar haben wir noch den CEO von Unity.
John Riciciello
oder wie auch immer er ausgesprochen wird.
Klingt wie Panude.
Aber er hat es nicht gemacht,
als dass es mich kümmern würde.
Denn bevor er Unity gegen die Wand fuhr,
tat er dasselbe mit EA.
Er ist bekannt dafür absolut verrückte Statements
von sich zu geben, die komplett gegen die
Werte von Spielern und Entwicklern sind.
Wenn es nach ihm ginge, würde man fürs
Nachladen im Battlefield
Geld zahlen müssen.
Und alle, die nicht über das Monetarisieren
ihrer Spiele nachdenken, sind verfickte Idioten.
Ach der ist da, ich erinnere mich.
Da war doch was.
Der ist das gewesen.
Oh Mann.
Ist doch gar nicht so lang her.
Steht ja auch hier.
2022.
Ich erinnere mich.
Oh Mann.
Seine Worte, nicht meine.
Hier ist das, was wir auf dem Kanal schon
häufiger thematisiert haben.
Diese Menschen an der Spitze der Firmen
haben keine Ahnung von dem, was sie verkaufen.
Sie haben aber Ahnung von Verkaufen.
Und deswegen bekommen sie absurde Summen
jedes Jahr, da sie das Gesicht einer Firma sind.
Das entscheiden Menschen über Videoschreiben.
Gut, dazu muss ich sagen, dazu habe ich wahrscheinlich
ein bisschen andere Meinung.
Man kann sich sicherlich lange drüber streiten,
ob Managergehälter
gerechtfertigt sind oder nicht.
Ähm.
Aber, was man, was man, oder
warum die teilweise so übelst
abgedrehte Verträge bekommen, so nach dem Motto
zwei Jahre reingeschissen und trotzdem
20 Millionen Abfindung und sowas.
Das muss man aber, glaube ich, weniger
den Managern oder den
Top-Executive Leuten
da vorhalten,
sondern eher denjenigen,
die einen Vertrag
aufgesetzt haben mit dem Typ
und unterschrieben haben.
Der Kerl musste ja quasi in ein Vorstellungsgespräch
führen, wie jeder andere auch.
Jetzt, natürlich ist das Vorstellungsgespräch
nicht gelaufen, wie jeder andere auch.
Aber irgendjemand dort hat den ja eingestellt.
Also sprich, die
Top-Manager bekommen ja auch Verträge
und da sollte man sich mal eher überlegen,
okay, was passiert da eigentlich?
Warum muss man den Managern selbst da
sogar relativ wenig Vorwurf machen,
wenn sie das dann auch in Anspruch nehmen,
was ihnen in ihren Verträgen zugesichert wurde?
Fragt man sich, warum es so bescheuerte Verträge gibt?
Da muss man sich mal
Gedanken drüber machen.
Und das läuft dann wahrscheinlich drauf raus,
dass es eben nicht so viele gibt
für diese Position
und dass die halt mit sowas durchkommen.
Sicherlich ist da auch viel Fett an Wirtschaft dabei,
könnte ich mir vorstellen, ja.
Kennen sich alle vom Golfspielen.
Aber irgendjemand hat den Vertrag gemacht.
Da sollte man vielleicht auch mal die
bisschen haten, anstatt nur die Manager.
Mario, danke für den Sub.
Das war's für heute.
Bis zum nächsten Mal.
Tschüss.
ARD Text im Auftrag von Funk
ARD Text im Auftrag von Funk
ist, kann man einfach ein paar Virtual Machines erstellen und auf denen das Spiel installieren.
Es gibt nahezu unendlich viele Wege, dieses System zu umgehen und den Entwickler in den
Ruinen damit zu treiben. Ebenso, stellt euch vor, jede Installation kostet 20 Cent. Welche
Spiele leiden wohl am meisten darunter? Richtig, kleine Spiele, faire Spiele. Spiele, die sagen,
wir haben ein cooles Spiel, aber wir wollen den Preis fair gestalten und haben auch keine
Microtransactions. A Short Hike zum Beispiel kostet regulär 8 Euro und im Deal gerne mal
4 Euro oder sogar weniger. Abgezogen der Steuern und Gebühren müsste jemand das Spiel nur um die
10 Mal installieren, damit der komplette Gewinn sich auflöst. Dadurch wird also gefördert,
dass Spiele erstens grundsätzlich teurer werden müssen und zweitens Microtransactions besitzen,
um diese Gebühr wieder auszudeichen. Immerhin bedeutet jedes verkaufte Spiel für theoretisch
immer zusätzliche Kosten. Oder man macht keine Spiele mehr mit Unity. Das dumme ist halt,
es gibt schon so viele. Es gibt auch vieles, was Unity gar nicht vorher durchdacht hatte.
Zum Beispiel wurde gefragt, wie denn gekrackte Spiele sich auslösen,
wenn jemand illegal ein Spiel runterlädt und installiert. Dann würde der Entwickler ja sogar
dafür zahlen müssen. Unity sagt, dass deren Software so toll ist, dass die gekrackte Version
erkennen kann. Wenn das so ist, Unity, warum gibt es dann noch gekrackte Spiele? Wollen die mir
ernsthaft sagen, dass sie den Weg gefunden haben, um zu 100% zu checken, dass ein Spiel gekrackt
wurde? Ja, ganz bestimmt. Geht wieder in Richtung Trust Me Bro. Oder WebGL-Spiele, also Spiele im
Browser. Ursprünglich wurde behauptet, dass jeder Seitenaufruf dann zerstört wird, wenn ein Spiel
20 Cent kosten würde. Weil eine WebGL-Applikation zu starten, ist ja eine Installation. Da ruderte
man zurück und meinte, das ist nun doch kein Geld kostet. Aber die müssen doch intern Leute haben,
die über ihre eigene Software Bescheid wissen und die solche Fragen im Vorfeld sicherlich
auch schon gestellt haben. Das heißt, man hat sich auf Führungsebene bewusst dazu entschieden,
diese Bedenken erstmal zu ignorieren und zu gucken, ob die Leute denn meckern werden.
Nicht zu den Installationen zählt. Geil, also machen wir jetzt alle
noch WebGL-Spiele, verdienen uns dumm und dämlich und kommen so nur über die Kostenschwelle,
aber niemals über die der Installationen, wodurch Unity gar nichts bekommen würde. Das ergibt Sinn.
Und was ist mit Charity-Bundles, sowas wie Humble Bundle, wo Spiele für paar Cent weggegeben werden
für nen guten Zweck? Ja, ähm, ja ne, also die werden auch nicht getrackt, die sind von den
Installationen ausgeschlossen. Während interne Stimmen sagen, dass die Spitze von Unity 4
anscheinend noch nie von Charity-Bundles gehört hatte. Ja, wundert mich nicht. Was bei Nutzungsmehr,
deren irgendwie... Das wundert mich nicht. Das wundert mich nicht. Was bei Nutzungsmehr, deren irgendwie...
Das wundert mich nicht. Was bei Nutzungsmehr, deren irgendwie... Das wundert mich nicht.
...es selbst noch viel Sinn macht. Produkte umsonst weggeben für nen guten Zweck? Wozu das denn?
Laut diesen Stimmen weiß Unity auch noch nicht, wie sie zwischen Charity-Keys und normalen Keys
unterscheiden sollen. Ja. Demos wird es dann vermutlich auch... Die, die, die, die werden
wahrscheinlich vieles davon noch nicht wissen, wie sie es umsetzen sollen. Das wurde entschieden und
jetzt ist die Frage so nach dem Motto, ja, setzt das mal um. ...nicht mehr geben, weil nur noch Demos
erlaubt sind, die nichts mit dem vollen Spiel zu tun haben. Sprich Demos, in denen man den Speicherstand
in das volle Spiel übernehmen kann, sind dadurch tabu. Und ich habe ja hin und wieder gesagt, dass
der Vertreiber der Spiele die Kosten tragen muss, weil so hat Unity es selbst geschrieben. Das
bedeutet also, dass Valve, Nintendo, Microsoft und Sony die 20 Cent pro Installation zahlen sollen.
Wenn also ein Spiel im Game Pass erscheint, muss Microsoft Unity Geld zahlen. Microsoft
wird nen Scheiß machen. Die, die werden erstmal ihre, ihr Bataillon an Anwälten losschicken und
Unity so lange auf den Sack gehen, bis Unity keinen Bock mehr hat und sich von
Microsoft kaufen lässt, oder sowas. Für jede Installation. Ich weiß ja nicht, aber ich
glaube Microsoft wird da nicht zustimmen. Keiner wird da zustimmen. Innerhalb 24 Stunden hat Unity
es dadurch geschafft, alle, wirklich alle, anzupissen. Spieler sind angepisst, weil viele
beliebtesteningen Spiele in Gefahr sind. Entwickler sind angepisst, weil sie dadurch
gezwungen sind DRM und Malware in ihr Spiel zu packen und Kosten auf sie zukommen, über die
sie keine Kontrolle haben. Und Publisher sind angepisst, weil jedes Unity Spiel nun aus dem Nichts ihnen zusätzliches Geld kostet.
Niemand gewinnt hier, absolut niemand, nicht mal Unity, weil die Engine jetzt komplett zur Ramsch-Engine verkommt,
mit der nur noch Mobile-Spiele entwickelt werden, die das Geld aus den Usern raussaugen,
damit so viel Geld pro Installation wie möglich gemacht wird.
Selbst wenn dieses neue Lizenzmodell zurückgenommen wird, ist es zu spät.
Kein Entwickler kann Unity jemals wieder trauen.
Wenn sie aus dem heiteren Himmel nur vier Monate im Voraus derart extreme Lizenzänderungen ankündigen,
kann man dieser Firma nie wieder vertrauen.
Und ich rate euch dringend, das ebenfalls einzusehen.
Daher werde ich von heute an Unity-Entwickler nie wieder als erstrebenswerten Beruf nennen.
Bleibt fern davon, orientiert euch jetzt um und nicht erst in ein paar Jahren.
Ich habe 14 Jahre Unity-Erfahrung, kenne diese Engine in- und auswendig,
aber auch ich sehe es ein, dass es nicht mehr lange gut gehen wird.
Mein aktuelles Spiel wird noch mit Unity fertig gemacht.
Es ist unmöglich, dieses Spiel, das für die Switch optimiert wird,
mit einer anderen Engine schnell auf den aktuellen Stand zu bringen.
Aber sobald es fertig ist, kann ich es noch mal machen.
Wenn es fertig und erschienen ist, werde auch ich wechseln.
Diese Geschichte ist, wie ich es am Anfang gesagt habe,
das absolut bescheuertste, was ich je in meinem Leben in der Videospielbranche mitbekommen habe.
So vielen Leuten droht nun der Ruin.
Und das Einzige, was Unity dazu noch zu sagen hatte, ist,
wir erkennen, dass einige verwirrt sind von unserem Lizenzmodell.
Lasst uns nochmal genau erklären, dass es genauso scheiße ist, wie ihr es denkt.
Da fällt einem nichts mehr zu ein.
Diverse Unity-Mitarbeiter haben gesagt, dass sie intern sehr hart gegen das Lizenzmodell sind.
Und viele kündigen, dass sie ebenfalls keine Zukunft mehr in der Firma sehen.
Nach diesem Vertrauensbruch ist es einfach unmöglich, jemals wieder zu vertrauen.
Diese Brücke wurde komplett eingerissen.
Ich wünsche allen Entwicklern viel Glück beim Wechsel ihrer Engine.
Es wird nervig für uns alle, aber es würde noch nerviger für noch mehr Leute werden,
wenn wir diesen Müll tolerieren würden.
Da bin ich mal gespannt, wie sich das die nächsten Monate, Jahre über entwickelt.
Weil selbst wenn die Leute, die wir hier haben,
die jetzt komplett zurückrudern.
Ich meine, ich glaube nicht, dass es der Tod für Unity sein wird direkt.
Es gibt aber hoffentlich den anderen Engines ein bisschen mehr Boost und, ja,
Unity verschwindet dann wohl verdient in der Bedeutungslosigkeit.
Hoffen wir es mal. Man weiß es nicht.
Unity to Engine X Converter.
Wenn es so einfach wäre, Chat.
Weil es auch so einfach mal geht, ja.
Ja, das denke ich auch.
Ja.
Ja.
Ja, ist ja auch nice.
Unity zu Gardena Wasserschlauch Converter.
So.
Haben wir sonst noch irgendwas Schönes?
Windows 12.
Windows 10.
Windows 12.
Das ist doch T-Bait Video hoch 10, oder?
Softwareentwicklung ist viel.
Okay, 8 Minuten.
Ich wette, mit euch ist es übelstes T-Bait-Video.
Windows 10 wird das letzte Windows sein.
Das war zumindest der ursprüngliche Plan von Microsoft.
Das stimmt überhaupt nicht.
Es geht schon los, ja.
Microsoft selbst sagt, sie haben das nie gesagt.
Und wenn man nachguckt, ja, so offiziell haben sie das nie in irgendeiner Mitteilung rausgehauen,
aber ein Typ aus dem sehr Microsoft-nahen Umfeld hat das rausgehauen.
Aber trotzdem.
Ja, schon irgendwie haben sie das.
Das haben sie auch so stehen lassen.
Auf der hauseigenen Tech-Konferenz Ignite hatte man 2015 bekannt gegeben,
dass nach Windows 10 kein neues Betriebssystem mehr kommt.
Stattdessen sollten kleinere und größere Updates das Programm schnell und modern halten.
Und dann kam einige Jahre später...
Überraschung!
Windows 11.
Und auch das wird wohl nicht...
Die haben nicht gesagt, dass es das letzte Windows werden wird.
Das stimmt nicht.
Die haben gesagt, dass es ein...
Wie soll man das sagen?
Ein Service-Windows werden soll.
Oder sowas.
Die haben nie diese Aussage gebracht, meines Wissens nach, offiziell von Microsoft, dass Windows 10 das letzte Windows werden wird.
Die haben natürlich das so stehen lassen und die haben auch viele Sachen gesagt in dieser Richtung, die man genau so interpretieren kann.
Ich lass mich aber gerne eines Besseren belehren.
...das letzte Betriebssystem der Amerikaner sein.
Jedenfalls, wenn man...
Das ist der Kanal von Mediamarkt Saturn.
Wirklich?
...den Gerüchteküche um Windows 12 glaubt.
Okay, eigentlich ist das ein übelst sinnloses Video.
Dieser Release...
...die fand ja nicht...
Okay, okay, seriously.
Sie haben absolut auch genauso keinen Plan wie alle anderen auch.
Mega, mega sinnloses Video.
Jep, jep, Glock.
Ich persönlich geh fest davon aus, dass es gar nicht mehr so lange dauern wird, bis da was in der Richtung rauskommt.
Weil Windows 11 selbst kam...
...2021 oder so?
...2021 oder so?
...2021 oder so?
...2021 oder so?
...2021 oder so?
...Windows 11 Release Date?
Ende 2021?
Also ich denke mal so 2025 oder so.
Dann kann ich mir das schon vorstellen.
Ich würde Windows 11 auch mögen, wenn es endlich...
Ich würde Windows 11 auch mögen, wenn es endlich...
...die Möglichkeit gäbe, die Icons hier unten zu entgrupieren.
Glücklicherweise gibt es die mit dem nächsten Update.
Sofern sie das nicht noch rausschmeißen.
Bei Microsoft weiß man ja nie.
Was haben wir denn hier sonst noch zu bieten?
Software-Entwicklung ist viel zu teuer.
Ja, Software-Entwicklung ist zu teuer, wenn man versucht, Dinger zu machen, die technisch nur schlecht zu lösen sind.
Also wenn man Sachen verkauft, bevor man guckt, ob das überhaupt in die jeweilige Software passt.
Oder, was Software-Entwicklung auch teuer macht, ist, wenn man seine Entwickler so abfuckt mit irgendwas anderem, dass sie alle abhauen und man keine mehr hat.
Die Software entwickeln für einen.
Oder, wenn man versucht, besonders billig Sachen irgendwie nach, frag mich nicht, Indien outzusourcen und dann feststellt, da kommt da nichts raus bei, da kostet es am Ende doppelt.
Aber mal gucken, was der Experte dazu sagt.
Alternativ kann man auch SAP und Oracle.
Ja, dann wird es auch teuer.
Gibt es noch so einen dritten im Bunde, der euch jetzt einfällt?
Also mir fällt spontan, wenn es um ultra-nervige Lizenzen und dummes Zeug geht, immer SAP und Oracle ein.
Was gibt es denn da sonst noch so? IBM?
IBM hatte ich in letzter Zeit softwaremäßig wenig Erfahrung.
Ich kenne IBM noch aus der Notes-Zeit.
Salesforce.
Aber so oft wie hier IBM genannt wird, muss da was dran sein.
Bin rar.
Okay, dann lasst uns mal kurz gucken, was der Experte dazu sagt.
Viel zu teuer.
Diesen Satz.
Software-Entwicklung ist viel zu teuer.
Diesen Satz hast du mit Sicherheit in dem einen oder anderen Zusammenhang auch schon mal gehört.
Warum habe ich das überhaupt auf so einem hohen Auflösung stehen?
Also die gängigen Wege, wie man dem zu hohen Kosten entgegenwirken möchte.
Dazu gehören unter anderem das Outsourcing.
Der Verzicht auf Qualitätssicherheit.
In den vergangenen Jahren.
Okay, mal gucken, ob wir Golo heute wieder als Echsenmensch enttarnen können.
Mal gespannt.
Bisher war das in jedem Video der Fall.
Auch gerne der Einsatz von Low-Code oder gar No-Code-Plattformen und so weiter.
Und trotzdem ändert sich nicht wirklich etwas.
Ich habe nicht den Eindruck, dass die Entwicklung von Software heute deutlich günstiger wäre als früher.
Viel eher ist...
Ich glaube sogar, dass die Software, also gerade in der Gaming-Branche ist natürlich teurer geworden.
Aber ich glaube...
Ich glaube generell, dass Software-Entwicklung heute sogar noch ein bisschen teurer geworden ist.
Also in absoluten Zahlen eh.
Aber auch mit steigender Feature-Dichte und Komplexität, die damit verbunden ist.
Und Mobile-Plattform, Multi-Plattform hast du nicht gesehen?
Ich würde sogar sagen, es ist heute noch anspruchsvoller und teurer als früher.
Das ist sogar das Gegenteil der Fall.
Und da fragt man sich natürlich schon, woran das eigentlich liegt.
Warum genau ist denn die Software-Entwicklung so teuer?
Und warum laufen all die verschiedenen...
Ansätze, Software-Entwicklung günstiger zu gestalten, unterm Strich ins Leere?
Wo ist denn eigentlich das Problem?
Und lässt sich Software überhaupt günstiger entwickeln?
Oder müssen wir uns vielleicht einfach mit den hohen Kosten abfinden?
Das ist das Thema für unser heutiges Video.
Und in diesem Sinne, hallo und herzlich willkommen zu unserem neuen Weekly.
Software-Entwicklung ist viel zu teuer.
Das ist die gängige Wahrnehmung.
Und man braucht auch gar nicht...
Die Wahrnehmung, wohlgemerkt...
Nicht unbedingt von den Entwicklern selbst, würde ich mal sagen.
Sondern wahrscheinlich von irgendwelchen überforderten Management-Leuten,
die nicht genau wissen, was sie da eigentlich treiben.
Das ist genauso wie diese Aussage generell.
IT ist viel zu teuer, was machen die eigentlich den ganzen Tag?
Ja, mit so einem Management hast du schon komplett verloren.
... lange zu suchen, um die Ursache dafür herauszufinden.
Interessant daran ist nur, dass je nachdem wen man fragt,
man durchaus ganz unterschiedliche Antworten erhält.
Da heißt es dann zum Beispiel sehr gerne,
dass Entwicklerinnen und Entwickler schlichtweg zu teuer seien.
Dass Software zu entwickeln aber deutlich mehr ist,
als nur Code zu schreiben.
Dass es einen gravierenden Unterschied gibt zwischen Entwicklern und Programmierern.
Dass an der Software-Entwicklung ja auch noch zig weitere Disziplinen beteiligt sind.
Ja, jetzt sag aber bitte nicht Tests.
Weil, wie wir alle wissen, sind Tests komplett overrated, outdated, jebaited.
Ja, genau.
Einfach fehlerfrei, first try, programmieren, dann braucht man keine Tests.
Das haben wir schon oft genug bewiesen im Stream.
Keine Tests, keine Kommentare, ähm, nichts.
Keine Dokumentation, einfach first try, fehlerfrei programmieren.
Easy.
Easy as a fuck.
Und dann direkt live deployen.
Und so weiter.
Dann braucht man doch nicht mal irgendwie Git oder sowas drunter.
Weil das ist ja immer direkt first try richtig.
Das wird dabei gerne schnell ignoriert.
Aber die Lösung für dieses Problem, die scheint so schön einfach zu sein.
Wir lagern die Entwicklung einfach in andere Länder aus,
die ein niedrigeres Lohnniveau haben.
Und schon können wir unsere Entwicklerinnen und Entwickler durch andere,
die zu einem viel günstigeren Preis arbeiten, ersetzen.
Und schon ist das Problem...
Ja, hat man sich gedacht.
Mittlerweile geht der Trend ja sogar schon ein bisschen zurück.
Und in den letzten Jahren geht der Trend schon ein bisschen zurück.
So dieses super, super heavy outgesauce ist ja eigentlich schon wieder vorbei.
Mittlerweile gibt es aber einen weiteren Trend.
Man outsourced nicht total billig nach Indien oder sonst wo,
wo man gar keine, nur Müll bekommt.
Oder fast nur Müll bekommt.
Heutzutage ist im Trend, man outsourced und das nennt man dann
Near, Nearsourcing oder sowas.
Und da geht man dann nach Polen oder sowas und lässt da die Sachen entwickeln.
Das wird in ein paar Jahren auch nicht groß Anklang gefunden haben.
...kosten aber nicht das einzige Problem.
Auch die Entwicklung an sich ist zu teuer.
Ah! Ah! Ah!
Kekaloo-Time!
Ich hab's gesehen! Ich hab's gesehen! Habt ihr's auch gesehen?
Ah!
Echsenmensch confirmed!
Also der Prozess sozusagen, das Entwickeln an sich...
Kekaloo!
...unabhängig davon, ob man nun hierzulande
oder auf der anderen Seite der Welt entwickelt
beziehungsweise entwickeln lässt.
Und dazu haben wir ja auch schon mal ein Video gemacht...
Schau wieder!
...in dem wir einen ziemlich häufig diskutierten Vorschlag...
Enttarnt!
...aufgegriffen haben...
Ich mein, es ist klar, er hat hier drüben...
Er hat hier drüben wahrscheinlich seinen Vorschau-Bildschirm
und guckt da ab und zu mal auf sein Skript drauf.
...haben nämlich günstigere Software durch weniger Tests.
Das geht häufig Hand in Hand mit der Aussage, Tests würden vom Kunden
ja ohnehin nicht bezahlt werden.
Die würden nicht gesehen werden, insofern seien die auch kein Feature
und daher könne man sich die auch einfach sparen.
Richtig! Tests overrated, brauchen wir nicht!
Das bisschen Testen, das ginge ja auch problemlos von Hand,
das könne ja nicht so schwer sein.
Keine Tests!
Wenn du das gerade erwähnte Video übrigens noch nicht gesehen hast,
dann findest du den Link dazu nochmal hier oben in der Infocard.
Also langer Rede, kurzer Sinn, weniger Geld für die Entwicklung ausgeben
und unnötige qualitätssichernde Maßnahmen streichen
und schon wird das Ganze gewünscht.
Wie gesagt, Qualität ist eh bei 100 Prozent,
wenn alles immer first try, fehlerfrei funktioniert.
Das ist doch eigentlich ganz klar.
Ich verstehe nicht, warum da noch keiner irgendwie ein neues Agile-System
drum herum gebaut hat.
Ich meine, wir hatten Test-Driven-Development,
wir hatten Extreme-Programming.
Warum gibt es noch nicht als Trend Perfect-Programming oder sowas?
Wo einfach immer alles sofort richtig ist.
Ich bin der Meinung, das ist die Zukunft.
Wir sollten mal unbedingt
ein paar Zertifikate dafür anbieten.
Und wenn das Ganze noch kombiniert wird mit agilen Micro-Sprints,
dann ist ja eh so...
Guck mal, überlegt euch mal das Potenzial.
First try, alles richtig durch Perfect-Programming
mit Micro-Sprints,
dann kannst du am Tag acht Sachen perfekt machen,
wo andere für ganze Monate brauchen.
Ja, wir sollten unbedingt Zertifizierungen anbieten dafür.
Zwei Stunden?
Wie kommst du... Viertelstunde?
Viertelstunde ist das Höchste.
Das ist überhaupt nicht agil genug.
Es ist überhaupt nicht agil genug, zwei Stunden Sprints.
Viertelstunde wird gesprintet
und dann wird zwei Stunden Retrospektive und Planning gemacht.
Nur dadurch ist man dann auch 15 Minuten produktiv.
Seht ihr, danke für den Sub.
Und der Trend geht eigentlich schon zum Nano-Sprint hin,
dass man nur noch fünf Minuten überhaupt was arbeitet am Tag.
Aber dafür sehr agil.
Auch das ist aber noch nicht das Ende der Fahnenstange.
Denn noch günstiger wäre es,
wenn wir einfach gar keine Entwicklerinnen und Entwickler mehr bräuchten,
sondern...
Sehr gute Idee.
Wir lassen unsere Manager die Sachen zusammenklicken.
...wenn wir die einfach wegrationalisieren könnten
und die Fachabteilungen zum Beispiel,
dann stattdessen einfach selbst...
Leute, als nächstes kommen Quantensprints dann.
Und genau das versprechen all die zahlreichen Low-Code-
beziehungsweise No-Code-Plattformen,
die in den vergangenen paar Jahren auf den Markt gekommen sind.
Du musst nicht mehr programmieren können, um zu programmieren.
Und wenn wir das noch kombinieren mit Werkzeugen wie ChatGPT
oder GitHub Copilot,
dann kann man eine Menge Geld sparen,
denn man braucht dann einfach niemanden mehr,
die oder der Ahnung hat vom Thema Softwareentwicklung.
Also, das heißt,
weniger Geld, weniger Qualität...
Ja, das schwebt vielleicht irgendwelchen Managern so vor, ja.
Kann ich mir direkt vorstellen.
Also zum Beispiel,
dem Unity-Chef schwebt sowas wahrscheinlich vor.
...mehr Low-Code beziehungsweise mehr No-Code, mehr KI.
Und das muss ihm auch vorschweben,
weil seine Programmierer rennen ihm ja auch gerade scharenweise weg.
...Zauberformel, wie man Software endlich...
Demnächst entwickelt er selbst Unity mit No-Code-Plattformen.
Da wart ich ja drauf.
...richtig günstig entwickeln kann.
Und was kann dabei schon schiefgehen?
Nun ja, die Realität zeigt,
dass all diese Heilsversprechen nicht so wirklich gut funktioniert haben.
Es ist sogar so, dass die genannten Maßnahmen
die ganze Situation nicht nur nicht besser gemacht haben...
Die machen sie teurer.
Also ehrlich gesagt, ich bin auch der Meinung,
Low-Code, No-Code-Plattformen machen das nur teurer.
Im Endeffekt, ja, sparst du dir eventuell,
eventuell, sag ich mal,
den einen oder anderen Entwickler,
dafür musst du die gesamte Infrastruktur dafür bereitstellen
und jemand haben, der sich darum kümmert.
Dazu kommt, dass es ja nicht so einfach ist,
jetzt nur weil man eine No-Code-Plattform hat,
dass auf einmal der 0815, tja, keine Ahnung, Sachbearbeitungsdude
eine gute Logik sich zusammentrackt und droppen kann.
Und im Endeffekt muss dann die No-Code-Plattform noch customised werden,
dass der das auf die Reihe kriegt.
Und dafür brauchst du dann wieder Programmierer
und noch ein Infrastrukturteam, was sich drum kümmert.
Also wahrscheinlich ist es unterm Strich sogar noch teurer.
... neue Probleme mit sich gebracht haben,
die man vorher nicht hatte und die man eigentlich auch nicht haben wollte.
Man ist in gewissem Sinne vom Regen in die Traufe gekommen,
nur dass man jetzt eben, dumm gelaufen,
noch mehr Wasser als vorher abbekommt.
Es stellt sich nämlich rasch heraus,
dass Outsourcing nicht so einfach ist,
wie das gerne dargestellt wird.
Und je weiter entfernt das Land ist,
in das die Entwicklung ausgelagert wird,
desto größer wird nicht nur der Unterschied in der Zeitzone,
sondern auch der kulturelle Aspekt.
Und da merkt man dann unter Umständen sehr schnell,
dass kulturelle Unterschiede und unterschiedliche Sichtweisen...
Also wir haben bei uns auf der Arbeit auch ein paar externe Dienstleister
und outgesourcte Sachen,
aber das weiteste entfernte ist glaube ich Spanien.
Und die Spanier sind echt nett.
Das ist immer lustig, mit den Spaniern zu telefonieren,
die reden Englisch, ich rede Englisch,
keiner kann es so richtig gut für komplett flüssige Konversationen
und dementsprechend geht es wunderbar.
Also ich mag die Spanier.
...einen ganz schön gravierenden Einfluss
auf ein Softwareprojekt haben können.
Und nicht umsonst gibt es mehr als ein Unternehmen,
was dem Outsourcing über kurz oder lang in den vergangenen Jahren...
Moment, was?
Chat-Gel, was haben wir hier?
Tatsächlich hatte ich, Managementführung,
mal in einer Beschreibung auch diverse,
diverse Programmierungen.
Was?
Diverse Programmierungen?
Man programmiert unterschiedliche Sachen?
Ja gut, hä?
Oder meinen die sowas wie Diverse Programming?
Was auch immer man darunter vorstellen soll.
So nach dem Motto, besonders inclusive Programming.
Naja, da hat sich einer wieder irgendein Wort ausgedacht.
Ich mein, Programmierung, also Softwareentwicklerstellen
sind ja schon besonders divers heutzutage ausgeschrieben.
Meistens für männlich-weiß-Deutsche.
Ich mein, für was sonst steht MWD dahinter?
Und dann kann man durchaus auch mal Diverse Programming einführen.
Da hat bestimmt wieder einer irgendwas aufgeschnappt,
irgendwelche Buzzwords und gemeint,
wir müssen es mal reinschreiben.
Ja, ich weiß.
Langsam, langsam ist gut.
Ich bring den jedes Mal, ich weiß.
...Rücken zugekehrt hat und was dann mühsam versucht,
all das, was vor Ort schon einmal gegeben war, wieder aufzubauen.
Also Outsourcing scheint nicht die magische Silberkugel zu sein,
nach der gesucht wurde.
Das Gleiche gilt übrigens für Sparmaßnahmen
bei den qualitätssichernden Aspekten.
Natürlich wird Software auf den ersten Blick kurzfristig gedacht
erstmal günstiger, wenn man auf das Schreiben der ganzen...
Ja, kurzfristig, das ist ungefähr so wie bei Unity,
wo wir es gerade davor hatten.
Kurzfristig, um kurzfristig gute Zahlen zu finden,
ist das wahrscheinlich ganz gut,
langfristig für den Arsch.
Und irgendwelche Tester abzuziehen
oder überhaupt keine richtigen Tests mehr zu machen,
oder sagen wir mal, irgendwelche...
Wir setzen Leute davor und lassen es wirklich mal ausprobieren,
Tests und was es nicht alles gibt,
das rächt sich halt über kurz oder lang.
...Tests verzichtet.
Aber das ist dann halt doch eine sehr kurzsichtige Vorgehensweise, denn...
Es könnte...
Überraschung, das rächt sich sehr schnell.
Dann nämlich, wenn zum Beispiel Fehler,
die schon mal behoben waren,
auf einmal auf unerklärliche Weise wieder auftauchen.
Oder wenn Fehler auf einmal vermehrt vom Kunden gefunden werden,
statt von der Entwicklung und so weiter.
Ja, das ist beispielsweise in der Gaming-Branche
ja vollkommen normal heutzutage,
wenn die Games rauskommen.
Man fragt sich heutzutage wirklich ernsthaft,
wie konnten Spiele damals auf Plattformen existieren,
die man nicht Day-One patchen konnte.
Und dann merkt man, dass man sich mit diesen Sparmaßnahmen
einen Bären in die Kuh gelassen hat.
Unmöglich, oder?
Denn langfristig geht das Sparen an der Qualität eigentlich immer nach hinten los.
Ja, sehe ich genauso.
Nur, das merken zu viele Unternehmen eben erst dann,
wenn das Kind schon in den Brunnen...
Das liegt aber auch...
Und jetzt muss ich mal was sagen.
Das liegt aber auch daran,
dass die sich irgendwelche komischen Berater immer holen.
Und von denen sich irgendwie was aufs Ohr erzählen lassen,
so die neuesten Buzzword-Trends.
Und dann denken, oh ja, das ist...
Wenn das Fang macht,
dann machen wir das mit unserer kleinen 12-Mann-Klitsche auch,
so nach dem Motto.
Varian Studios testet auch automatisiert.
Ganz ehrlich, mich würde wundern,
wenn heute ein halbwegs funktionierendes,
größeres Softwareprojekt nicht automatisiert testen würde.
Natürlich ist die Frage,
wie umfangreich das Ganze ist
und was sie da alles darunter verstehen.
Aber anders kannst du es ja eigentlich kaum noch machen.
Gerade überlegt euch mal...
Gehen wir mal von Spielen weg.
Ja, das wahrscheinlich auch.
Gehen wir mal von Spielen weg.
Heute gibt es ja auch teilweise sehr viel Komplexität in Software,
die es früher nicht gegeben hat.
Allein schon dadurch,
dass du heute Android, iOS, Windows und Mac supporten musst
mit deiner Anwendung vielleicht.
Niemand supportet Linux, leider.
Aber nehmen wir das mal dabei.
Plus eventuell noch Web.
Du brauchst dann...
Du musst dann quasi so eine...
Die Kernkomponenten musst du quasi
releasen als in irgendeiner Art und Weise
was für Web, Mobile und Desktop.
Und das dann noch für jeweils zwei unterschiedliche Plattformen,
mehrere Browser, wo das testet.
Wenn du das heutzutage nicht automatisiert,
zumindest so mal die grundlegenden Sachen testest,
das kann nur in die Hose gehen.
Naja, und über Low-Code und über No-Code-Plattformen,
über die brauchen wir eigentlich auch nicht groß reden.
Insbesondere das Versprechen,
dass man keine Entwicklerinnen und Entwickler mehr bräuchte.
Ja, das ist Blödsinn.
Und dass Fachabteilungen jetzt einfach ihre eigene Software bauen könnten.
Das ist gelinde gesagt völliger Humbug.
Und das haben inzwischen auch viele Unternehmen gemerkt.
Und das Ganze gipfelt dann in der Absurdität,
dass inzwischen zahlreiche Unternehmen,
die auf derartige Werkzeuge gesetzt haben,
inzwischen ernsthaft Stellen ausschreiben,
wo dann, und diesen Begriff muss man sich mal auf der Zunge zergehen lassen,
ein No-Code-Entwickler gesetzt wird.
Ja, das ist wirklich absurd.
Aber höchstwahrscheinlich ist damit das gemeint,
was ich versucht habe am Anfang schon zu beschreiben,
dass man dann einen Entwickler einstellt,
der die Low-Code-No-Code-Plattform soweit customizt,
dass der 0815-Fachbereich-Dude halt auch seinen Shit zusammenklicken kann,
weil er es halt in der Standardausführung nicht checkt.
Und da kann man sich echt fragen,
wie wäre es, wenn ihr das gleich, Leute entwickeln das,
die Ahnung davon haben?
Ich glaube, mehr muss man dazu eigentlich gar nicht sagen,
um zu zeigen, dass das Marketing für solche Plattformen zwar...
Das will ich jetzt mal gucken.
Lasst uns mal gucken, wie viele No-Code-Entwickler wir finden.
No-Code-Entwickler.
Low-Code suchen?
Da findet man irgendwie gar nichts.
Aber ich glaube, die Suche sackt einfach nur.
Ja, Low-Code.
Low-Code-Developer.
Ja, aber das ist das, was ich gesagt habe.
Die sollen sich halt eben ums Customizen der Low-Code-Plattform kümmern.
Und wie Low-Code-Mobile-Apps sind,
haben die sich, glaube ich, auch noch nicht überlegt.
Gut, weiter.
Ja, ich würde auch gerne einen No-Work-Job suchen,
wo man Geld kriegt für nichts.
... wirklich guten Job gemacht hat,
aber dass die Realität,
der auf diesem Weg geschürten Erwartungshaltung,
einfach nicht mal ansatzweise gerecht wird.
Und das Gleiche gilt auch für KI,
denn das KI, zumindest derzeit, allen Erfolgen zum Trotz,
ebenfalls nicht in der Lage ist,
Entwicklerinnen und Entwickler ernsthaft ansatzweise zu ersetzen.
Auch darüber brauchen wir eigentlich nicht mehr zu sprechen.
Tja, und was bleibt dann unterm Krieg noch, um ehrlich zu sein?
Das sehe ich auch so.
Also, wenn man sich mal anschaut,
wie viele Entwickler und Entwicklerinnen und Entwickler
in den letzten Jahrzehnten,
in den letzten Jahren,
noch um ehrlich zu sein,
nicht mehr so übermäßig viel.
Und die Kosten in der Softwareentwicklung,
die sind all diesen Maßnahmen zum Trotz,
also trotz Outsourcing,
trotz Sparmaßnahmen bei der Qualität,
trotz Low-Code,
trotz No-Code
und trotz KI,
irgendwie nicht so wirklich gesunken.
Und da stellt sich dann halt schon die Frage,
was ist denn eigentlich die wirkliche Ursache
für die hohen Entwicklungskosten?
Ja, so eine No-Code Microcontroller-Firmwareentwickler
wäre auch mal was, ja.
Oder so eine No-Code Kerneltreiberentwickler.
Ich glaube, das sollten wir mal ausschreiben.
Weil all die genannten Dinge scheinen es ja nicht zu sein.
Könnte es vielleicht eventuell sein,
dass man mit all diesen Dingen
die ganze Zeit an der falschen Stellschraube gedreht hat?
Ja.
Und ich glaube, die Antwort auf diese Frage,
die lautet ganz klar Ja.
Denn die Ursache für hohe Kosten in der Softwareentwicklung,
die liegt ganz woanders.
Und die ist vor allem viel tiefgreifender.
Okay, ich warte mal ab.
Solange man die Ursachen nicht angeht,
wird sich auch an den hohen Kosten nichts ändern.
Und alles andere ist und bleibt halt nur Symptomkur.
Okay, aber was ist denn nun die Ursache?
Oder besser gesagt,
was sind denn nun die Ursachen für die hohen Kosten?
Und tatsächlich gibt es da eine ganze Bandbreite von Antworten.
Aber die erste und meiner Meinung nach mit Abstand wichtigste ist,
dass viel zu oft...
Also, ich bin mir nicht so ganz sicher,
wie das jetzt mit dem Video zusammenhängt.
Aber ich halte diese Aussage auch für ziemlichen Management-Bullshit.
Ich kann ja auch sagen, warum.
Chat, wie lange brauchen laut Management-Logik zwei Frauen,
um ein Kind zu bekommen?
Wie viele Monate?
Eine Frau braucht neun Monate.
Wie lange brauchen zwei Frauen?
Ich meine, wie wir alle wissen, 4,5 Monate nur noch.
Da sieht man, dass diese Sachen mit prozentualer Planung
und dieses Ja, dann machst du das.
Ja, dann machst du 30% Projekt A, 25% Projekt B,
dann A, jetzt sind die 15% weggefallen,
die können wir 5% Fortschritt hier,
dass das mit der Praxis eigentlich oder mit der Realität
meistens nicht so viel zu tun hat.
... das Ziel nicht klar ist, was überhaupt entwickelt...
Ja, die Synergieeffekte sollte man nicht unterschätzen.
Vielleicht sind die sogar schneller fertig als zusammen mit Neuen.
Wieso hinkt der Vergleich?
So wird bei Projekten doch oftmals gerechnet.
So nach dem Motto A, okay,
das Projekt wird geplant auf so und so viele Personentage,
das heißt, wir stecken da jetzt mal so und so viele Leute hin
und natürlich macht das auch keinerlei Unterschied,
ob man jetzt da 10 oder 20,
mit 20 geht es dann doppelt so schnell.
Also ich will nicht sagen, dass es nie und gar nicht beachtet wird,
wie so immer ist es ja, 10% Manager beherrschen ihren Job auch,
genau wie in allen anderen Bereichen,
aber es wird halt oft verkackt.
Ja.
Und dass das Ziel oftmals nicht klar ist,
das hat er glaube ich auch gerade gesagt,
dem würde ich auch zustimmen.
Viel interessanter ist die Frage,
wie lange dauert der Film, wenn keiner zuschaut?
Oder ist der Mond da, wenn niemand hinschaut?
Also Fragen über Fragen.
... werden soll und eine ganze Bandbreite von Antworten,
aber die erste und meiner Meinung nach mit Abstand wichtigste ist,
dass viel zu oft das Ziel nicht klar ist,
was überhaupt entwickelt werden soll
und das dann dementsprechend auch nur mangelhaft geplant werden kann.
Da würde ich ihm komplett Recht geben
und das manchmal ganz gerne auch was viel Geileres verkauft wird,
als es eigentlich ist.
Denn wenn ich nicht weiß, wo ich am Ende überhaupt hin möchte,
dann wird es sehr schwer, den optimalen Weg dahin zu finden.
Und wenn ich dann, während ich schon unterwegs bin,
das Ziel noch zigmal überarbeite und ändere,
dann ist klar, dass ich unter Umständen sehr, sehr lange Zeit
in eine sehr falsche Richtung laufen werde.
Und das wird dann logischerweise auch entsprechend sehr teuer.
Das heißt, das erste, woran man mal etwas machen müsste,
wäre, die eigentliche Vision zu schärfen,
das Zielbild klarer zu definieren
und sich, bevor man losläuft, zu überlegen,
wo man überhaupt hin möchte und wie man da hinkommt.
Die Vision zu schärfen ist aber auch schon ganz schön
ein Management-Talk gewesen jetzt.
Falls man das tatsächlich nicht definieren kann,
dann sollte man wenigstens aufhören, so zu tun,
als ob man ein klares Ziel vor Augen hätte.
Und dann sollte man vor allem auch aufhören, zu behaupten,
der Umfang der zeitlichen Reise, der Zeit der Reise,
der zeitliche Rahmen und die erwarteten Kosten,
die stünden schon fest.
Ich würde sagen, Leute, das ist schon unser Key zum Success, oder?
Wir müssen nur den Scope richtig definieren,
damit wir das Next Level erreichen.
Und wie der Chat gesagt hat, Synergieeffekte nutzen.
Aber selbst wenn das alles als Voraussetzung gegeben ist,
dann hilft das alleine noch nicht,
denn es muss auch entsprechend kommuniziert werden.
Eine detailliert ausgearbeitete Vision,
und das ausgefeilteste Konzept, das nützt genau gar nichts,
wenn mein Entwicklungsteam nicht versteht,
wohin die Reise fachlich denn gehen soll.
Das stimmt. Das ist aber auch ein bisschen,
das liegt, zumindest so wie ich es in der alten Firma
bei mir mitgekriegt habe, so ein bisschen das Problem war aber auch,
zumindest bei meinem letzten Arbeitgeber,
dass das unterste Management, die unterste Management-Ebene,
die haben einfach extrem gefailt.
Oftmals, nicht jeder, aber oftmals,
haben die extrem gefailt dabei,
das, was gewollt ist, ordentlich rüberzubringen,
an die Leute, die es machen müssen,
und umgedreht, wo fast noch mehr gefailt wurde,
ist, mit dem, was passiert ist in der Umsetzung,
oder wie die Umsetzung läuft,
das, sagen wir mal, halbwegs ehrlich
und realitätsnah nach oben zu kommunizieren.
Also die Sachen sind ja oftmals,
ich würde sagen, der Verlust von oben nach unten
war vielleicht, dass noch, sagen wir mal,
80 Prozent von der Vision sind angekommen
bei den Leuten, die es machen mussten, okay,
aber umgedreht, was bei der Umsetzung so alles gewesen ist,
wie es da läuft, wie der Status ist,
da sind ungefähr von, sagen wir mal, von der Realität
vielleicht noch 40 Prozent oben angekommen.
Und dementsprechend hat man auch zunehmend gesehen,
dass die Entscheidungen zunehmend,
und das war ein großes Problem bei meinem alten Arbeitgeber,
die Entscheidungen hatten mit fortschreitender Projektdauer
immer weniger Realitätsbezug
zu den eigentlichen Problemen und Arbeiten im Projekt.
Das war ein riesengroßes Problem.
Und da sind auch schon einige Sachen
richtig krass gegen die Wand gefahren.
Natürlich wurden die nie verkauft als gegen die Wand gefahren,
sondern man hat den Scope umdefiniert oder sowas.
Zum Beispiel eines meiner besten Beispiele dafür
von meinem alten Arbeitgeber, was man gemacht hat.
Und zwar ist, ich habe bei einer Bank gearbeitet
und die haben sich überlegt,
die hatten natürlich auch ein paar Außendienstmitarbeiter
und sowas, und die haben sich überlegt,
wir könnten doch unseren Außendienstmitarbeitern,
einen DSGVO-konformen, in Anführungsstrichen,
Cloud-Speicher zur Verfügung stellen,
wo die beispielsweise ihre abgeschlossenen Verträge
oder irgendwelche anderen so kritische Sachen speichern können.
Von der Idee her muss man sagen, nicht schlecht, oder?
Und das ist auch schon ein paar Jahre her,
da haben die meisten Leute lieber ihre Sachen
noch auf Dropbox gezogen, anstatt das DSGVO,
das war teilweise sogar noch pre-DSGVO.
Also müsst ihr sagen, die Idee ist ja gar nicht verkehrt.
Das Problem ist nur, wisst ihr, wie das Projekt umgesetzt wurde?
Irgendjemand hat gesagt, also die Vision war,
wir wollen quasi unseren Außendienstmitarbeitern
für so Geschäfts-, ich weiß nicht, wie man das genau nennt,
für DSGVO-relevante Inhalte einen Cloud-Storage-Speicher bieten.
So.
Das Problem dabei war nur,
dass die gar keinen Cloud-Storage-Speicher haben wollten.
Die wollten einen Speicher haben,
der für den Außendienstmitarbeiter so aussieht wie einen Dropbox-Klon,
eben Cloud-Speicher.
Was die nicht wollten ist,
dass das im Backend zwangsläufig als Cloud-Speicher implementiert sein muss.
Die wollten einfach im Frontend was,
was ein bisschen aussieht wie Dropbox.
Heißt nicht, dass man wirklich Cloud-Technologie verwenden musste mit
wir haben zwölf Standorte europaweit verteilt
und darüber eine Cassandra-DB mit unten drunter
irgendeinem Cluster-Filesystem und einem Cluster...
Das war überhaupt nicht notwendig.
So, und was hat man gemacht?
Man hat am Ende eine Lösung gebaut auf,
ich sag jetzt die Software nicht, auf der es basiert,
aber man hat es vielleicht früher schon ein paar Mal gehört,
mittlerweile ist es nicht mehr so angesagt.
Man hat eine Software-Lösung gebaut,
die auf so eine Art...
Im Prinzip hätten die sich ein bisschen Storage kaufen müssen
und eventuell ein bisschen S3 davor machen müssen.
Ich glaube, du kannst sogar mittlerweile easy S3
auf jedem x-beliebigen Linux-Server machen.
Letztendlich wäre das alles gewesen.
Ja?
Man hätte zwei, drei Linux-Kisten hinstellen müssen,
ein ordentliches Storage angebunden,
was repliziert ist zwischen zwei Rechenzentren
und davor hätte man vielleicht S3,
irgendeine S3-Schnittstelle gesetzt, fertig aus.
Das wäre wahrscheinlich alles gewesen, was man gebraucht hätte.
Allerdings, wie das dann wieder so ist,
wurden die Sachen nicht richtig kommuniziert,
nach oben und nach unten.
Und am Ende wurde eine Lösung gebaut,
die auf so eine Art, ja, Distributed-Filesystem aufgesetzt wurde.
Nur mit dem Unterschied,
dass wir es halt überhaupt nicht so verwendet haben.
Also, stellt euch vor,
man benutzt ein Distributed-Filesystem,
um Außendienstleuten einen Cloud-Speicher anzubieten.
Es ist eh vollkommen egal,
der Endpunkt, den die Leute benutzen,
ist eh immer der gleiche.
Also, die sehen das überhaupt nicht.
Okay, aber jetzt überlegt euch mal,
ihr benutzt ein größeres Cluster-Filesystem,
oder sagen wir mal, es war kein Cluster-Filesystem,
eine Distributed-Storage-Technologie,
aber ihr habt nur zwei Rechenzentren,
die dafür benutzt werden.
Was ist denn das erste Problem, was ihr habt?
Oder so eines der ersten Probleme, an die ihr denken könnt?
Ach ja, ach so, ich sag euch an der Stelle auch,
natürlich müsst ihr euch auch noch überlegen,
ist Split-Brain, ja, das ist in der Tat ein Problem,
natürlich müsst ihr euch auch noch überlegen,
wie viel Replizierung einzelner Dateien ihr haben wollt.
So, und jetzt kann ich, jetzt ist lange Rede,
kurzer Sinn, jetzt sag ich euch mal das Problem,
wenn man Cloud-Technologien für Nicht-Cloud-Anwendungen benutzt,
obwohl man sie gerne so nennen möchte,
dann baut man einen Distributed-Storage-Cluster auf,
aus, sagen wir mal, 10 Nodes pro Standort,
und du sagst, okay,
wir machen, sagen wir mal, ja, wir machen zwei Replikas,
oder wir machen drei Replikas pro Datei.
Wie stellst du denn jetzt sicher bei 10 Nodes pro zwei Standorten,
dass nicht alle drei Replikas an dem Standort laufen,
der vielleicht ausfällt?
Schon mal, schon mal nachgedacht darüber?
Die Chance ist gar nicht so unwahrscheinlich,
dass von 20 Nodes
die drei Dateien genau dort liegen,
in dem Standort, der gerade ausfällt.
Also wenn ihr zwei Rechenzentren habt,
jeweils 10 Nodes und jede Datei,
also insgesamt 20 Nodes,
und jede Datei wird dreimal repliziert,
das heißt nicht zwangsläufig,
dass die Datei mindestens einmal vorhanden ist
an dem Standort, der nicht ausfällt,
und dann macht man eine Sache,
und dann macht, Storage, guck mir, das wäre easy,
wenn du irgendwie ein replizierendes Storage-System drunter hättest,
aber nein, man hat es ja absichtlich
mit einem Distributed Cloud Storage System machen wollen,
was im Prinzip dafür ausgelegt ist,
eigentlich dafür ausgelegt ist,
man hat 30 Standorte in Europa
und an jedem Standort laufen 1, 2 Nodes.
So, dafür ist es ausgelegt,
aber nein, man benutzt es so,
man hat zwei Standorte
und man hat an jedem Standort 10 Nodes.
Und wisst ihr, worauf das Ganze dann rausgelaufen ist am Ende?
Man hat die Replikas hochgestellt,
auf 11.
Auf 11!
Und warum auf 11?
Wer kommt drauf?
Warum auf 11?
PostChamp?
Chatge.
PyFedWarning.
Richtig, na wenigstens.
Okay, ein paar haben aufgepasst.
Genau, weil man 10 Nodes pro Standort hatte,
dass immer mindestens einmal
das Sicher im anderen Standort ist.
Und ihr könnt euch nicht vorstellen,
was das für Storage gefressen hat, Alter.
Das hatte mega Performance-Probleme am Ende,
das hatte mega Probleme,
wenn mal irgendwas neu hinzugefügt werden musste an Nodes
und das hatte ultra viel Übertragungszeug
zwischen den Rechenzentren
und das hat nur Probleme gemacht.
Das ist ein Projekt, wo man sieht, was passiert,
wenn das Management auf den Ebenen
zwischen denen, die sich die Visionen ausdenken
und die, die es umsetzen müssen, komplett versagt.
Das war Hardware-mäßig enorm teuer,
das war Storage-mäßig brutal teuer,
das war Traffic-mäßig mega teuer
und am Ende hat das auch nur sehr bescheiden funktioniert.
Weil man einfach eine Lösung benutzt hat für etwas,
wofür sie überhaupt nicht gemacht ist.
Und einzig und allein dessen,
weil die Projektleiter sich in die Hose geschissen haben,
nach oben zu kommunizieren damals,
wir brauchen keine Cloud-Lösung,
um einen Dropbox-Klon anbieten zu können.
Irgendjemand hat gesagt,
wir brauchen eine Cloud-Lösung wie Dropbox.
Das hat jemand gesagt, der von der Technik keine Ahnung hat.
Es ist vollkommen okay, dass er das gesagt hat.
Aber Projektleitung und Management
haben sich in die Hose geschissen.
Das war damals echt so.
Die haben sich einfach ums Verrecken nicht getraut zu sagen,
wir brauchen keine Cloud-Technologie,
um einen Dropbox-Klon für unsere Ausbildungsleute bereitstellen zu können.
Das Einfachste wäre tatsächlich gewesen,
wir upgraden unser Storage,
stellen vielleicht ein paar Linux-Kisten hin,
machen vielleicht, wenn man sagen möchte,
okay, wir sind super Cloud-Native,
wir machen S3 davor für das Storage und fertig.
Das wäre es gewesen.
Es war teuer,
aber es hat nicht richtig funktioniert.
Genau.
Das ist eigentlich auch mal was,
wo ich ein Video drüber machen könnte.
So sieht es aus.
Und das passiert,
wenn die Sachen nicht richtig klar sind.
Dann Software entwickeln,
die ein fachliches Problem zielgerichtet,
adäquat und effizient löst,
wenn ich vorher das zugrunde liegende fachliche Problem
auch wirklich verstanden habe.
Und das scheitert oftmals an der interdisziplinären Kommunikation.
Da wird dann zwar in einem Team sehr viel miteinander geredet,
aber die anderen Beteiligten reden wunderbar aneinander vorbei,
ohne das zu merken.
Oder sie reden nicht aneinander vorbei,
sie erzählen absichtlich Blödsinn.
Wie in dem Projekt, was ich euch eben erzählt habe.
Die hatten zu viel Schiss damals zu sagen,
wir brauchen keine Cloud-Technologie,
um das umzusetzen, was ihr wollt.
Und dazu kam, also was heißt zu viel Schiss?
Die haben sich halt negative Auswirkungen
auf ihre Karriere von versprochen.
Was auch wieder Mentalitätssache ist in dem Unternehmen.
Aber das war halt echt für den Arsch.
Über eilte Ambitionen hinzukommen,
wenn man sich und den anderen eventuell irgendwas beweisen möchte,
dann gute Nacht.
Hinzu kommt außerdem noch, dass es Softwareentwicklung...
Nein, wir müssen uns hier im Chat ja nichts beweisen.
Wir wissen ja, dass wir alle massive Five-Heads sind
durch die ganzen Prime-Subscriptions.
Das heißt ein Kennzeichen, das Merkmal ist,
dass etwas Neues entworfen und gestaltet wird,
und nicht etwas bereits vorhandenes
einfach nur am Fließband reproduziert wird.
Denn in der Regel ist die fachliche Domäne neu,
oder die Technologie ist neu, oder beides.
Und das steigert jeweils natürlich die Projektkomplexität.
Und wenn dann von vornherein zu viel gewollt wird,
zu viele Features, zu großer Scope, einfach zu viel,
dann fängt es eben an, heikel zu werden.
Das heißt, sich zunächst mal auf ein MVP zu besinnen,
auf das Minimal Viable Product,
das ganze Thema auf das Wesentliche zu reduzieren
und das Gesamtproblem in kleinere
und feingranulare Einheiten zu zerlegen,
die sich jeweils für sich genommen
zügiger und einfacher lösen lassen,
das wäre extrem wichtig.
Und gerade diese Zerlegung und diese Strukturierung
findet aber allzu oft nicht statt,
weil man der Meinung ist, dass man mit nur einer Handvoll Funktionen
nicht auf den Markt gehen könne
und dass ein Monolith erstmal ausreichend sei
aus architektonischer Sicht.
Immerhin sei man ja nicht Netflix.
Und das ist richtig, du bist wahrscheinlich nicht Netflix,
aber trotzdem ist es eine gute Idee,
am Anfang schon mal über das Ende nachgedacht zu haben,
einen Plan zu haben, wo man hin will
und sich eine Landkarte zurechtzulegen,
die Optionen aufzuzeigen und zu wissen,
was man wann umsetzen wird,
was wie strukturiert werden sollte
und was wie mit welchen anderen Bausteinen ineinander greift.
Äh, Chad...
Statt aber das zu diskutieren...
Ich glaube, es gibt wenig 3-Buchstaben-Abkürzungen,
die für so viele unterschiedliche Sachen stehen wie MVP.
Es könnte auch der Most Valuable Product sein,
oder der Most Valuable Player sein.
Es werden allzu häufig völlig unnötige
technische Diskussionen geführt,
ob man die geplante Anwendung denn nun besser
in Node.js oder in Go schreiben soll.
Und in ganz vielen Fällen wird das schlicht und ergreifend egal sein.
Ja, das stimmt.
Und entscheidend ist vielmehr,
dass ich das zugrunde liegende fachliche Problem verstanden...
Und, dass ich vielleicht Leute hab,
die sich mit der jeweiligen Technologie auskennen.
Es hat ja keinen Sinn,
jetzt auf das nächste Hype-Ding zu springen,
wenn man gar keine Leute hat, die davon Ahnung haben.
So nach dem Motto, oh, wir machen das jetzt
neu in Rust.
Niemand hat Plan von Rust.
Und wahrscheinlich ist Rust auch
die komplett falsche Sprache dafür.
Das war...
Mit Rust ist gar nicht so ein extremes Beispiel.
Die meisten im Business kommen sicherlich noch nicht
auf die Idee, Sachen in Rust jetzt
zum aktuellen Zeitpunkt zu programmieren.
Aber ein schönes Beispiel dafür war
MongoDB und Node.js.
Damals, vor ein paar Jahren.
Da wurden so viele neue Projekte gestartet.
Und am Anfang hat man sich überlegt,
oh ja,
wir machen das mit Node.js und MongoDB.
Ja, aber warum?
Weil Node.js-Hype und Node.js-Event-Loop beste
und Async und...
Ohne Sinn und Verstand hat man das einfach gemacht.
Keine Ahnung davon gehabt.
Aber best ever, ja.
Ich hab letztens ein lustiges Video gesehen.
Ich glaube nicht, dass ich das jetzt finde.
Wo es darum ging,
so zwei Programmierer starten ein Projekt.
Und...
Am Anfang diskutieren sie was super komplexes.
Und dann sagen sie, oh ja,
jetzt sind wir uns einig, wie es geht.
Und dann sieht man sie noch die letzte Minute
am Editor sitzen.
Und bei der ersten Variablenbenahmung
Connection String
geht die Welt unter.
Weil sie sich nicht darauf einigen könnten,
ob das jetzt Connection String heißt.
Weil, technisch korrekt gesagt,
connectet es ja nicht.
Das war eigentlich ziemlich realitätsnah.
Und eine vernünftige und tragfähige Struktur geschaffen.
Außerdem braucht man natürlich auch noch
die richtigen Werkzeuge und eine passende Infrastruktur,
die die Entwicklung jeweils in die richtige Richtung treiben
und entsprechend unterstützen.
Es ist zum Beispiel nicht sonderlich sinnvoll,
zukünftig auf einer servicebasierten
und containerisierten Architektur aufbauen zu wollen,
wenn man nicht zugleich auch den passenden Unterbau bereitstellen kann.
Ähnliches gilt auch für die Anbindung
und die Integration mit Legacy- und Drittsystemen.
Auch hier werden oftmals...
Man braucht einfach für alles vertikale Strukturen.
Man braucht einfach für alles vertikale Strukturen.
Man braucht einfach für alles vertikale Strukturen.
Man braucht einfach für alles vertikale Diago...
Man braucht einfach für alles vertikale Diago...
Vertikale Skalierung und Microsprints.
Vertikale Skalierung und Microsprints.
Und wer nicht weiß, dass er das braucht,
soll sich bei mir gefälligst eine Beratung dafür einkaufen.
...von der Entwicklung Wunder erwartet,
die sie aber gar nicht zu leisten imstande sind
und wo die Entwicklerinnen und Entwickler
vor allem auch keinerlei Einfluss auf den Status Quo haben,
sondern sich mit irgendwelchen seltsamen
und merkwürdigen Konstrukten herumschlagen müssen.
und merkwürdigen Konstrukten herumschlagen müssen.
Chat, ich finde,
wir sollten auch Unternehmensberater werden.
wir sollten auch Unternehmensberater werden.
Ich meine,
5 Head genug wäre der Chat.
Die Chat-Antworten sind in der Regel
besser als Chat-GPT.
Wenn es danach geht,
hätte der Chat-GPT nie entwickelt werden müssen.
hätte der Chat-GPT nie entwickelt werden müssen.
Der Chat ist einfach superior.
Ich finde, wir sollten auch
das Next-Gen-Agile-Framework entwickeln.
das Next-Gen-Agile-Framework entwickeln.
Mit Diagonaler Skalierung
und Micro-Nano-Quantum.
und Micro-Nano-Quantum.
Ich brauche noch einen coolen Namen.
Eigentlich ist Agile schon wieder out.
Eigentlich ist Agile schon wieder out.
Eigentlich ist Agile schon wieder out.
Wenn das bei Banken und Versicherungen angekommen ist,
Wenn das bei Banken und Versicherungen angekommen ist,
könnt ihr eigentlich darauf wetten, dass es schon wieder out ist.
Da gibt es doch bestimmt viel coolere Sachen mittlerweile.
Da gibt es doch bestimmt viel coolere Sachen mittlerweile.
Was kommt denn nach Agile?
Was kommt denn nach Agile?
No Agile?
Beigile?
Wir müssen dann...
Wir müssen dann...
Wieso steht oben bei deinem Twitter-Type...
Weil das ein...
Weil das ein...
Top-Secret-Twitter-Link ist,
den ihr nicht sehen dürft.
Weil es zum Beispiel in der Fremdsoftware
keine vernünftige API gibt.
Und interessanterweise geht die Existenz
solcher Software, wo man aus Entwicklungs-Sicht
eigentlich nur die Hände über den Kopf zusammenschlagen kann,
auf ähnliche Gründe zurück.
Nämlich, dass irgendwann mal in grauer Vorzeit
irgendjemand gedacht hat,
Eine ganz tolle Idee wäre, eine bestimmte Drittsoftware einzusetzen, weil die zum Beispiel gerade günstig zu haben war.
Oder weil man deren CEO vom Golfplatz her kennt oder ähnliches.
Und wie gesagt, da werden von der Entwicklung oft Wunder erwartet.
Und das Ganze dann aber, weil jetzt schon ganz viel im Argen liegt, natürlich unter Zeitdruck.
Denn, wie wir alle wissen, Menschen unter Zeitdruck denken schneller und liefern qualitativ hochwertigere Arbeit ab.
Natürlich nicht.
Übrigens, das passende Video dazu, auch das findest du hier oben in der Infocard.
Und leider führt das in vielen Fällen zu einer mangelhaften Code-Struktur, wo dann direkt von Anfang an technisch...
Also, ich meine, wer hat das...
Also, ich habe meine besten Ergebnisse auf der Arbeit auch immer abgeliefert,
wenn alle fünf Minuten der Chef reingekommen ist und gefragt hat, ob es einen neuen Stand gibt.
Dann war ich besonders kreativ immer.
Wäre der nicht alle fünf Minuten reingekommen, wäre wahrscheinlich nichts vorwärtsgegangen.
Ihr kennt das schon.
Ihr kennt das sicherlich auch schon alle.
So hoch, es ist kaputt.
Woran liegt's?
Ja, keine Ahnung.
Kannst du mir schon ungefähr sagen, wann es wieder gehen wird?
Nein, ich weiß noch nicht mal, woran es liegt.
Ja, so über den Daumen gepeilt.
Wirst du doch schon mal irgendwas sagen können.
Nein, ich habe eben erst mitbekommen, dass es überhaupt kaputt gegangen ist.
Ja, dann...
Dann update mich aber auch mal ganz schnell, wenn es was Neues gibt.
Okay, mache ich.
Nach fünf Minuten.
Und, gibt's schon neue Erkenntnisse?
Oder am besten, so hinter dir stehen, dass du es auf deinem Kopf merkst, dass der atmet so.
Elastik, das finde ich gut.
Das ist ein schönes Wort.
Aber Elastik ist halt auch schon ein bisschen ausgelutscht.
Aber Elastik anstelle von Agile finde ich schon mal gut.
Da kann man schön Zertifikate für verkaufen.
Elastik-Synonyme.
Was gibt's denn da sonst noch?
Elastik.
Stretchy, Springy, Flexible.
Rubber.
Rubber, Plastic.
Bouncy.
Bouncy Development.
Wobei ich Stretchy auch nicht schlecht finde.
Das Wort muss ein bisschen blöd klingen, aber noch Management-Speak tauglich genug.
Versatile.
Versatile ist nice.
Versatile finde ich gut.
Fluid.
Fluid.
Versatile, Fluid.
Das ist eine gute Kombination.
HFD.
Versatile Fluid Development.
Leute, ich glaube, wir sollten echt bald eigene Zertifizierungskurse anbieten.
Wie richtig schön diagonal, horizontal, vertikal, dreidimensional skaliert wird.
Mit dem passenden Hyperscaler.
Was nur ein anderes Wort für Cloud-Anbieter ist, by the way.
Die nicht aufgeräumt werden, was langfristig zu Fehlfunktionen und teuren Nacharbeiten führt.
Und da schließt sich dann der Kreis.
Denn wenn man...
Wenn man schon so startet, dann weiß man schon, dass es ein Problem gibt.
Und welch bessere Lösung könnte man sich vorstellen, als dann Druck aufzubauen.
Und unser Scrum-Master ist der Fluid-Master.
Outsourcing ins Spiel.
Denn der Fluid-Expert.
... ins Spiel zu bringen, denn man braucht ja...
Okay, jetzt habe ich nicht aufgepasst.
Dann weiß man schon, dass es ein Problem gibt.
Und welch bessere Lösung könnte man sich vorstellen, als dann Druck aufzubauen.
Outsourcing ins Spiel zu bringen, denn man braucht ja vermeintlich mehr Leute, damit das schneller...
Dann wird es immer besser.
Umso mehr die Nerven, umso besser wird es.
... fahrungsgemäß.
... die qualitätssichernden Maßnahmen zu streichen und so weiter.
Und schon nimmt der ganze Teufelskreis ganz wunderbar seinen Lauf.
Ja.
Tja, und was können wir aus all dem lernen?
Wir können als allererstes mal festhalten, dass das Problem gerade nicht ist, dass Softwareentwicklung zu teuer ist.
Das stimmt so einfach nicht.
Software zu entwickeln, das ist ein sehr komplexes und anspruchsvolles Unterfangen.
Und solche Dinge, die sind nun mal teuer.
Und das ist auch okay so.
Was aber nicht okay ist, ist...
Sag das mal dem Unity-CEO!
... Entwicklung nicht vernünftig zu machen, sondern hin und her zu eiern, Fehler zu machen, den ganzen Prozess vor die Wand zu fahren,
alle Hinweise und Warnungen der Entwicklerinnen und Entwickler bezüglich Qualitätsbedenken in den Wind zu schlagen
und zu glauben, man müsse nur genug an der Kostenschraube drehen und genug Druck aufbauen und schon werde es günstig genug.
Das ist falsch.
Warum ist sein Shirt nass?
Chad, ist das das Einzige, was mir jetzt aufgefallen ist in dem Video?
Ja.
Ich meine nicht, weil es warm ist, angestrahlt zu werden von irgendwie zig Ringlights bei 28 Grad im Raum.
... wird nämlich Softwareentwicklung überhaupt erst teuer.
Das heißt, wenn sich jemand beschwert, dass Softwareentwicklung zu teuer ist, dann ist das Problem sicherlich nicht die Entwicklung an sich,
sondern der ganze Overhead und der ganze Ballast, den man in einer schlecht laufenden Softwareentwicklung so mit sich herumschleppt.
Und wenn man den loswerden möchte, oder wenn man den loswerden würde,
versucht, die Kosten zu senken, sondern den Wert der Entwicklung zu maximieren,
dann würde das Ganze auch auf einmal viel, viel günstiger werden.
Was heißt das nun?
Klingt der Theorie gut?
Ich würde ihm da auch voll ganz recht geben, auch wenn ich nicht professioneller Softwareentwickler bin.
In der Praxis setzt dann so das rationale Denken manchmal ein bisschen aus.
... Software zu entwickeln, man sich im Klaren darüber sein sollte, wo man denn überhaupt hin möchte.
Was das Ziel ist, was die Vision ist.
Ja, das ist prinzipiell nie verkehrt.
... was die Vision ist.
Wichtig vor allem, dass es alle mitbekommen haben.
... welche Features man in welcher Iteration hinzufügen wird.
Man sollte eine Landkarte haben, einen Plan, eine Architektur, die das MVP ermöglicht,
vor allem aber auch schon als tragfähiger Unterbau mit Blick auf die Zukunft entwickelt wurde.
Man sollte wissen, wann die Diskussionen um Technologien sinnvoll sind und wann nicht.
Wann man nur eine Stellvertreterdiskussion führt, um nicht die eigentliche Diskussion,
nämlich die Diskussion um die Fachlichkeit führen zu können.
Man sollte wissen, wie wichtig ein stringenter Prozess und eine saubere und zuverlässige Qualitätssicherung sind.
Und man sollte wissen, dass das alles nur funktionieren kann, wenn man im Team eine hervorragend laufende interdisziplinäre Kommunikation hat,
Das stimmt.
... die sich primär um die Fachlichkeit dreht.
Das stimmt.
Und das Paradoxe ist, wer das alles beherzigt,
Das hört sich jetzt ja erstmal wahnsinnig viel an.
Das stimmt.
Dass alle das mitbekommen, was Sache ist, das ist enorm schwierig.
... wer vorab Investitionen in Visionen, Architektur, Prozess, Qualitätssicherheit,
Qualität und so weiter tätigt, der wird zunächst höhere Kosten und einen langweiligen Start haben.
Der Kanal heißt The Native Web.
Am Ende aber mit den langfristig viel niedrigeren Gesamtkosten und vor allem mit einer ganz anderen Geschwindigkeit und Qualität dastehen.
Und das ist am Ende die Frage, auf die alles hinausläuft.
Was ist dir wichtiger?
Der kurzfristige Erfolg, der zu Lasten von morgen geht, oder der langfristige, nachhaltige Erfolg, für den du heute aber zunächst einmal den steinigeren Weg einschlagen musst?
Siehste?
Das ist die...
Siehste?
Deswegen habe ich keinen Bock auf Managementsachen.
Ich will mir um sowas nie Gedanken machen müssen.
Eine alles entscheidende Frage.
Wenn also wieder mal jemand zu dir kommt und dich mit dem Satz nervt, dass Softwareentwicklung ja viel zu teuer sei, dann kannst du sagen, ja, das stimmt.
Hätte sie aber nicht sein müssen, wenn man am Anfang bei der Planung und beim Fundamentlegen nicht den einfachsten aller Wege gewählt hätte.
Und da würde mich interessieren, wie siehst du das?
Wie sind deine Erfahrungen mit diesen Themen?
Zeichnen sich die Projekte, an denen du beteiligt bist, durch Nachhaltigkeit und Langfristigkeit?
Zeichnen sich die Projekte, an denen du beteiligt bist, durch Nachhaltigkeit und langfristigkeit?
Zeichnen sich die Projekte, an denen du beteiligt bist, durch Nachhaltigkeit und langfristigkeit?
Zeichnen sich die Projekte, an denen du beteiligt bist, durch Nachhaltigkeit und langfristigkeit?
Gut, paar Storys von meinem letzten Job habe ich euch jetzt erzählt im Verlauf des Videos.
Mal gucken, wie es beim aktuellen wird.
Da weiche ich noch nicht so richtig ein zu schätzen.
Da sind auch nicht alle Sachen perfekt, aber das wird sich erst in Zukunft zeigen.
... oder wird eher auf Sicht geflogen, alles auf Zuruf gemacht, ohne dass vorher eine vernünftige Konzeption stattgefunden hätte.
Schreib mir deine Meinung und deine Gedanken dazu gerne einmal unten in die Kommentare.
Schreib mir deine Meinung und deine Gedanken dazu gerne einmal unten in die Kommentare.
Und wenn du jetzt sagst, ja, vieles von dem, was in diesem Video angesprochen wurde, das kenne ich leider nur allzu gut und ich würde daran gerne etwas ändern, dann melde dich einfach mal bei uns.
Und wenn du jetzt sagst, ja, vieles von dem, was in diesem Video angesprochen wurde, das kenne ich leider nur allzu gut und ich würde daran gerne etwas ändern, dann melde dich einfach mal bei uns.
Und wenn du jetzt sagst, ja, vieles von dem, was in diesem Video angesprochen wurde, das kenne ich leider nur allzu gut und ich würde daran gerne etwas ändern, dann melde dich einfach mal bei uns.
Und wenn du jetzt sagst, ja, vieles von dem, was in diesem Video angesprochen wurde, das kenne ich leider nur allzu gut und ich würde daran gerne etwas ändern, dann melde dich einfach mal bei uns.
dich einfach mal bei uns. Du erreichst uns am einfachsten
per E-Mail unter
hello.atthenativeweb.io und vielleicht
können wir dich bzw. euch ja
dabei unterstützen, das nächste Projekt
von vornherein in bessere Bahnen zu lenken.
Die E-Mail-Adresse, die findest du
natürlich auch wie immer unten in der
Videobeschreibung. Unabhängig davon
wünsche ich dir dann noch einen wunderschönen Sonntagabend.
Morgen einen guten Start in die neue Woche.
Pass wie immer gut auf dich auf,
bleib gesund und dann sehen wir uns im nächsten
Video wieder. In diesem Sinne,
bis zum nächsten Mal und
Astro 3.0, was ist neu?
Programmieren mit Mario.
Astro interessiert mich so gar nicht.
Windows 10 ist
ein Problem.
Warum? Weil der Support ausläuft?
Habt ihr nicht auch irgendwo
gelesen, dass Windows 10 die letzte
Version von Windows sein wird?
Das liegt daran, dass viele Medien lieber
Unwahrheiten als Clickbait veröffentlichen.
Da haben wir es doch jetzt schon, das hatten wir doch
vorhin als Thema.
...anständig recherchieren und dann auch noch zu stolz
sind, um ihre Fehler zu korrigieren.
Aber ausnahmsweise sind diesmal
die bösen Journalisten
Ich hab das jetzt mal versucht zu imitieren,
aber hat nicht so gut geklappt.
Nicht allein Schuld
daran, dass dieser Unsinn in
vielen unserer Köpfe verankert war.
Der Spruch, Windows 10 wird das
letzte Windows sein, stammt tatsächlich
von einem Microsoft-Mitarbeiter, welcher
den Satz im Zuge einer offiziellen
Microsoft-Konferenz für Entwickler ausgesprochen hat.
Das ist nicht das, was heute passiert ist.
Jetzt veröffentlichen wir Windows 10
und weil Windows 10 die letzte Version
von Windows ist, sind wir alle noch
...
Das war noch im Jahr 2015.
Ein englischsprachiges Medium ist darauf
angesprungen und alle, und ich meine wirklich
alle Medien weltweit, sind auf
diesen Zug dann aufgerufen.
Warum ist die Musik im Hintergrund so laut?
Dass er das gesagt hat, überhaupt, war
allerdings ein Fehler. Es war nie so
vorgesehen, er hätte das wirklich nie
sagen sollen und der Mitarbeiter
selbst, der das gesagt hat, arbeitet
gar nicht im Windows-Team bei Microsoft.
Siehste? Okay, das ist
das ist, okay, so genau wusste ich's nicht,
aber das ist das, was ich vorher
umschrieben hab mit, einer aus dem
Microsoft-Umfeld hat das gesagt. Ja.
Er hat eigentlich gar nichts mit Windows
zu tun, sondern arbeitet mit anderen
Unternehmen und Entwicklern zusammen, um
sie zu beraten über Microsofts Cloud-Dienste.
Hier hätten die Medien, die darüber
berichtet haben, zumindest stutzig werden sollen.
Quatsch! Warum? Geht da drum, eine geile
Überschrift zu machen, alle gucken's?
Warum sagt ein Cloud-Typ von Microsoft solche Dinge über Windows?
Der hat doch gar nichts mit dem System zu tun.
Einen allzu... Die meisten News-Seiten
wissen doch nicht mal, dass es da
unterschiedliche Abteilungen für gibt.
Zu großem Vorwurf will ich den Medien gar
nicht machen, die ohne auch nur eine
Minute... Außerdem schreiben die alle voneinander ab.
... einen Bericht verfasst haben. Wenn euch bei
einer Apple-Konferenz zum Beispiel ein
Apple-Mitarbeiter sagt, ihr könnt euer
iPhone in der Mikrowelle aufladen, dann
wäre ich auch angepisst, wenn man mir im
Apple-Store dann die Garantie verweigert
auf mein explodiertes iPhone. Da ist mir
auch ziemlich egal, welcher Mitarbeiter das
gesagt hat. Merkt euch diese Metapher
vielleicht für später, die werden wir...
Warum ist die Musik so laut im Hintergrund?
... noch brauchen. Und obwohl Microsoft diese
Aussage von ihrem eigenen Mitarbeiter
sofort dementiert hat, war das
nachfolgende Statement nicht wirklich
genug, um die Aussage vollständig zu
revidieren. Die... Okay, also eigentlich...
Okay, warum ist Windows 10 jetzt ein Problem?
... auf der Ignite-Konferenz zu Windows 10
spiegeln, die Art und Weise wieder... hatte
in der... Und noch dazu wird Windows 10
deutlich früher eingestellt, als es viele
Nutzer erwartet hätten. Die folgenden...
Ja, leider, leider. ... könnten schwerwiegender
sein, als wir das... ... ist der PC-Markt im
Jahr 2019 gewachsen. Ah, okay. Juck, juck, mich
jetzt doch nicht so.
So, wir müssen noch ein paar Tabs zumachen hier.
Oh, er schon wieder. Tab zu. Wie...
Praktizierst du nicht Perfect Programming,
wo alles First-Drive funktioniert? Das ist
aber schwach. Ich dachte, durch deine
langjährigen Subscriptions hier bist du
pfeifend genug dafür. Und vor allem, wo sind die
agilen Mikro-Sprints? Sorry, die, die, die, die
Variablen-Fluid-Mikro-Sprints.
Triple-A-Unit-Tests. Vergiss es, ich
laber unsinniges Zeug. Chat, ich muss
jetzt pennen. Morgen früh. Normaler
Aufstehen. Ach so, das ist nur, dass du den
anderen zeigen kannst, dass es perfekt
funktioniert. Ja, das verstehe ich. Das ist
dann Flexing, quasi. Flex-Driven-Programm.
FDP, Flex-Driven-Programming. Best in
Class. Best, Best of Breed Tools ist auch
sehr beliebt. Ich habe gerade was gedrungen.
Ah, ja. Chat. Ich gehe jetzt ins Bett. Wir hören uns
wahrscheinlich morgen. Bis dann, macht's gut.
CU!
