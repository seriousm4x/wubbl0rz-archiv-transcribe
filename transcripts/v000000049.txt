Oh, ich habe Qualitätsoptionen.
Das ist ja nice.
Gleich beim ersten war es Twitch-Qualitätsoptionen.
Sonst muss ich das Ding irgendwie zwei, dreimal neu starten mit Glück.
Welche kriege ich?
Ja.
Moin Leute.
Boah, sind ja schon wieder viele Leute am Start.
So direkt quasi die Twitch-Abo-Box-Lörker sind schon wieder am Start.
Anatomy ist auch wieder am Start.
Warst du gestern dabei?
Gestern gab es auch schon mal zweieinhalb Stunden.
Dann habe ich hier Meme-Tool-Version 2 rumgebastelt.
Heute müssen wir uns leider ein bisschen JavaScript-Sachen wieder widmen.
E-Mail-Lager.
Ja, heute müssen wir uns leider ein bisschen JavaScript-Sachen widmen.
Wobei nicht nur.
Moin, xFatal1337.
Übrigens nice, wie viele Follows das gegeben hat.
Ich meine, klar, die meisten Leute kamen wahrscheinlich vom Video.
Aber trotzdem, ein paar kamen auch über Twitch, die keine Ahnung hatten, dass ich auf YouTube irgendwas hochgeladen habe.
JavaScript, ja, das ist tatsächlich ein bisschen eklig.
Ich meine, das neue Frontend ist jetzt JavaScript-mäßig noch gar nicht mal so hässlich im Vergleich zu dem alten.
Wobei, das alte ging auch.
Man muss sagen, mit View sieht das alles relativ hübsch aus.
Deswegen bin ich da auch schnell mit warm geworden.
Ich, wie gesagt, ich war nie großartiger Fan.
Bisher was mit JavaScript zu machen, wäre ich jetzt auch nicht.
Aber View ist so viel netter als Vanilla-JavaScript.
Da erträgt man das sogar halbwegs.
Gut, ein paar Sachen sind natürlich immer noch ziemlich beknackt.
Zum Beispiel, dass not a number gleich false ist in JavaScript und solche Dinger.
Wie war das Command?
Ich habe ehrlich gesagt keine Ahnung.
Das müsst ihr irgendein Mod wissen, falls ein Mod da ist.
Oder ich müsste mal meine Nightbot-Kommandos angucken.
Ich gucke mal.
Versuche mal Ausrufezeichen Tool oder sowas.
Wobei, das könnte das Screenshot-Tool für BDO gewesen sein.
Ach, Memeboard.
Memeboard, richtig.
Ja, klappt doch.
Crotch on Toad.
Ne, wieder erwarten.
Und finde ich Black Ops 4 gar nicht so schlecht.
Ich meine, es sind schon ein paar nervige Sachen dabei.
Und so diese normale Team Deathmatch-Gebärsche und so, das fuckt schon ganz schön ab.
Wobei es geht, man hat zwischendurch halt immer wieder irgendwelche Runden, die richtig gut sind.
Aber zum größten Teil fuckt es ab.
Aber ich glaube, Blackout, wenn sie das ordentlich supporten, das könnte einen auch ein bisschen bei der Stange halten.
Du hast dir wegen mir geholt.
Ich habe gesagt, warte jetzt mal ab.
Ich habe gesagt, warte jetzt mal ab.
So, das Ganze starten.
Ich zeige euch mal, was wir machen wollen.
Ich habe noch keine Ahnung, wie wir das am besten machen.
Warum startet das nicht?
Ah, weil der Port nicht stimmt.
Dann machen wir den Port-Krams weg.
Wir haben das alte Beam-Tool eh nicht mehr an.
Moment, wenn ich das jetzt starte, stimmen aber die Ports hier wieder nicht.
Moment, ich muss mal kurz überlegen.
Ports.
Ports.
5.000.
Dieses Hotkey-Geschichte machen wir weg.
Was ist das für Musik?
ETF.
Das hört sich an wie ein SNES.
Overworld-Map-Soundtrack.
Ist die Musik von der Lautstärke okay?
So, muss ich das jetzt noch an irgendeiner Stelle umstellen?
Ich glaube nicht.
Ach ja, das war ja im Firefox-Verback die Geschichte.
Wie kann man dem Ding eigentlich sagen, in welchem Browser er das öffnet?
Ah, Webbrowser. Hier kann man es ändern.
Okay, das ist nice.
Also ich muss echt sagen, man kann über Micros...
Findest du es etwas laut?
Ja, ich mach mal.
Ein Ticken leiser.
Findest du es immer geil, diese Mini-Slider, die dann entweder nur zu laut oder zu leise zulassen?
Ja, ich glaube, so ist besser.
Als Standard-Browser festlegen.
Nein.
Im Chrome geht es nämlich lustigerweise.
Die Firefox-Bugs gucken wir uns dann irgendwann mal an.
Aber ich meine Firefox, wir brauchen schon Firefox.
Ist ja nur mal ein Main-Browser.
Warum sollte es da drin nicht funktionieren?
Ja, der Tommy hat es ja noch gar nicht gesehen.
Den muss ich das jetzt natürlich auch mal zeigen.
Wir haben jetzt hier natürlich neues...
Warte mal.
Neues Webfrontend.
Mit Datenbank im Hintergrund.
Also sprich, man kann jetzt so ein Bildchen hier nehmen, reinziehen.
Und da geht so ein Upload-Dialog auf.
Und das hier unten werden wir heute machen.
Aktuell ist das eine ganz normale Input-Box.
Und ich will, dass man den Hotkey quasi hier drin festhält.
Und das heißt, man könnte jetzt die Billig-Variante machen.
Dass der User quasi sowas reinschreiben müsste wie...
Nein, das nicht.
Wie Ctrl plus B.
Aber viel cooler wäre das doch, wenn dieses Input-Feld quasi die Keystrokes capturet.
Kennt hier wer zufällig eine gescheite mechanische Tastatur, die vielleicht ein bisschen dezenter aussieht.
Wie das von Logitech...
Ja.
Ja, kann ich dir was empfehlen.
Nice Azure Database.
Nein.
Wo denkst du hin? Lokale SQLite.
Azure Database.
Lokales SQLite.
Kann man das jetzt öffnen?
Ich zeig dir gleich, ich zeig gleich die Tastatur.
Ich hab da nämlich eine richtig gute, finde ich.
Also, auf der Arbeit. Ich hab mir zwei gekauft.
Ich hab mir eine Corsair Gaming-Geschichte für daheim geholt.
Ich hab mir noch eine andere für die Arbeit geholt.
Das ist eine ganz normale SQLite-Datenbank.
Mehr brauchst du ja auch nicht.
Ähm.
Genau, und dann kann man Upload drücken.
Man kann hier für die Suche, kann man Text eingeben.
Für den Text kann man noch Text-to-Speech anmachen.
Und sich eine Stimme auswählen.
Das müssen wir noch implementieren, das geht noch nicht.
Und halt ein Hotkey festlegen, favorisieren kann man das Ganze.
Und dann sagt man Upload gut ist.
Und man kann es dann hier drüber auch wieder löschen.
Und ähm, heute wollte ich ja dieses Hotkey-Mechanismus bauen.
Weil, es ist so, das ist auch überschaubar.
Das sollte, glaube ich, heute in ein paar Stunden funktionieren.
Obwohl ich keine Ahnung habe, wie man sowas in JavaScript macht.
Aber kriegen wir schon hin.
Also ich...
Ich hätte gerne, dass er halt quasi...
So die...
Keystrokes capturet.
Also sprich, dass ich dann sage, hier drinnen...
Ctrl...
B.
Und dass er dann halt quasi für mich reinschreibt...
Ctrl-B.
Dass er dann alles in der Form richtig zum Server schickt.
Und...
Dann halt...
Das richtig macht.
Ja.
Ja, weil, ich sag mal so, ich...
Ich kann jetzt keinem wirklich zumuten, hier drinnen Ctrl-B reinzuschreiben.
Weil...
Dann ist wieder die Sache, die ersten Leute schreiben...
Schreiben...
Droll.
Die nächsten Leute schreiben...
Steuerung.
Die nächsten schreiben...
Drill.
Also, das ist blöd.
Das muss automatisch gecaptured werden.
Ja.
Ja, so ist das.
So.
Tastatur.
Ähm...
Ich seh...
Ich hab grad gesehen, es gibt noch ein paar Fragen im Chat.
Guck ich mir gleich an.
Tastatur.
Ähm...
Ja.
Gibt's paar sehr schicke...
So.
Wir haben ja...
Wir haben ja alle Browser.
Wo kommen wir mal noch in Edge auf?
Ich wollt grad hier...
Ich hab leider kein Meme-Overlay gerade.
Ich wollt grad hier Wood...
Woodfacen.
Edge.
Wir haben...
Moving is easy.
Ah.
Ah.
Ah.
Ne, ne, ne.
Das muss nicht sein.
Ähm...
Okay.
Wir haben jetzt zumindest mal die wichtigsten Browser auf.
Wir haben Chromium auf.
Und Chrome.
Und Firefox.
Tastatur.
Wer war das nochmal mit Tastatur?
Ah.
Der...
Travel.
Also.
Äh...
Einmal hier zu Hause.
Aber wie gesagt, die ist nicht dezent.
Ich zeig dir einfach mal alle beide.
No sellout.
Ich krieg kein Geld.
Corsair...
Ich glaub das ist sogar...
Ja.
95 RGB Platinum.
Das ist das Ding, was ich daheim hab.
Das ist halt komplett...
Over...
Oversized...
Overengineertes...
Äh...
Gaming Crap eigentlich.
Ja.
Ich weiß gar nicht mehr, was der ausschlaggebende Grund war, warum ich mir die geholt hab für
daheim.
Ähm...
Egal.
Aber sowas willst du eh nicht.
So.
Und zwar auf der Arbeit hab ich folgende.
Und die find ich richtig geil.
Ich würde mir...
Hätte ich mir die Corsair Tastatur nicht gekauft...
Ähm...
Hätte ich mir die Tastatur einfach doppelt geholt.
Die ich auf der Arbeit...
Die ich mir für die...
Die ich mir für die Arbeit geholt hab.
Und zwar ist das eine...
Ducky...
One...
Skyline...
Wie hieß das Ding?
Ducky One Two Skyline...
Ja!
Ja!
Die hier.
Genau die hier.
Gibt's mit verschied...
Es gibt's mit ein bisschen unterschiedlich bunt...
Buntischen Knöpfen und...
Ähm...
Es sind ein paar Ersatzknöpfe dabei.
Also man kann...
W, A, S, D...
Kann man dann irgendwie noch Rausch machen und so.
Wenn man...
Wenn man's braucht.
Ja.
Ähm...
Man kann...
Ähm...
Wenn man's braucht.
Ja.
Ähm...
Man kann sich auch zusätzliche...
Ähm...
Keys und so noch bestellen.
Aber die ist richtig gut.
Das ist ein richtiger Klotz.
Also das Ding ist...
Wenn ich's nochmal hochhebe, ja?
Also dieses Corsair Ding.
Wie spricht man die eigentlich aus?
Corsair?
Corsair?
Corsar?
Wir fragen Google.
Google weiß das alles.
Corsair wahrscheinlich.
Corsair.
Wow.
Corsair.
Okay, ich bin jetzt auch nicht schlauer.
Ich hab die hier.
Ich hab die hier.
Ich hab die hier.
Ich hab die hier.
Ich hab die hier.
Ich hab die hier.
Ich hab die hier.
Ich hab die hier.
Ich hab die hier.
Ich hab die hier.
Okay, ich bin jetzt auch nicht schlauer.
Ha.
Wo ist eigentlich unsere...
Wo ist eigentlich unser...
Text to Speech von gestern?
Monka.
Is.
Ich könnt mich über diese Text to Speech
Sache immer noch kaputt lachen.
Monka.
Is.
Monka!
Is.
Monka.
Is.
Das müssen wir auch noch einbauen.
einbauen. Das müssen wir
auch noch einbauen. Dafür haben wir
ja hier im...
Dafür haben wir hier schon die Weep-Stimme zur Auswahl.
So.
Ich wollte jetzt noch was zur Tastatur
sagen. Genau. Also das ist ein richtiger Klotz,
das Teil. Im Vergleich
hier zur Corsair.
Die ist halt... Die Corsair-Tastatur
ist halt größer, ja.
Hat viel mehr Schnickschnack dran.
Ich finde vom Layout, finde ich die
hier angenehmer. Man kann sich noch einen
so eine
Handballenablage dazu bestellen.
Im Betrieb kann man sich welche nehmen.
Welche auch immer man da will.
Aber die Tastatur, die ist richtig massiv. Also die
wiegt einen Ticken mehr sogar wie die Corsair-Tastatur.
Obwohl die viel größer ist.
Und also wenn du damit irgendwelche Einbrecher abwehren
willst, ist das die optimale Tastatur.
Und auch so zum Schreiben.
Es ist richtig gut. Das hat
glaube ich... Ich weiß gar nicht, was es für
Switcher drin hat, standardmäßig.
Ich glaube, ich habe die
Browns?
Ich glaube, ich habe die Brown-Switches.
Für
die gibt es mit verschiedenen... Aber das lohnt
sich und das hält sich preislich auch halbwegs
in Grenzen.
Gucken, was die bei Amazon kostet. Ich weiß nicht mal, wo ich
sie bestellt habe. Ich glaube, ich habe sie
bei MeinFactory oder Alternate oder so bestellt.
Ja, die gibt es sogar noch einen Ticken günstiger.
Ich habe irgendwie 120 Euro oder so
bezahlt. Das ist zwar nicht
mega billig, aber für die Tastatur ist es wirklich
gut. Ich finde, das ist eines der besten mechanischen
Tastaturen, die es gibt. Ich glaube, ich habe sie hier bei
MeinFactory. Oh, war geil, das heißt.
Ich kann jetzt schreiben. Das ist auch so ein Ding.
Auf dieser Corsar-Tastatur, ich kriege es
ums Verrenken nicht hin, Fehler blind zu schreiben.
Das klappt einfach nicht. Die Tasten
fühlen sich so klein an,
obwohl sie irgendwie nicht klein sind, aber
das ist... Die sind auch... Also, das
geht... Das ordentlich tippen geht auf
der hier viel besser, obwohl die gefühlt irgendwie
die Hälfte kosten.
Genau, geht los bei 118 Euro.
So, den Dreh habe ich auch bezahlt.
Also, das Ding kann man echt empfehlen.
Ein Lehrer in meiner Schule sagt, dass
das SDRG auf der Tastatur...
auf der Tastatur für Strings steht. Na gut, was Lehrer so
sagen, ne? Das ist ja viel, wenn der Tag lang ist.
Nicht mal der echte Cherry.
Cherry hat nichts Gescheites.
Cherry hatte nichts, was mir gefallen hat.
Das war immer nichts Halbes und nichts Ganzes.
Ja, die K95 habe ich auch.
Das ist echt gut, das Ding.
Aber wie gesagt, ich kann auf der...
Das könnte vielleicht auch an den
Speed-Switches liegen, aber ich kann
hier auf der viel, viel, viel
besser tippen. Das merke ich ja auf der Arbeit.
Als hier auf der Heim, auf der
auf der Corsair-Tastatur.
Dafür spielt es sich angenehmer mit und so soll es ja
im Prinzip auch sein.
Das ist Geschmackssache
mit den Tastaturen.
Also, wenn ich...
Also, ich muss ja sagen,
ich quäle ja die Leute auf der Arbeit schon ein bisschen,
weil ich meine, wenn man mal
richtig reinhaut
in so eine mechanische und die hier
ist, die Corsair ist noch leise im Vergleich zu der
Ducky, äh, Ducky 1-2.
Die macht eher so.
So hört sich das Ding ungefähr
standardmäßig auf der Arbeit an. Ich habe schon ein paar
Gummiringe drunter, dass sie leiser ist. Das geht
den Leuten schon ein bisschen auf den Keks.
Ähm,
aber das Schreibgefühl finde ich richtig gut.
NumPad, ja, ja, NumPad.
NumPad, braucht man.
Ohne NumPad ist kacke.
Habe ich die ohne NumPad gezeigt gerade?
Oh, ich habe die ohne NumPad.
Ich brauche die mit.
Mit NumPad. Natürlich mit NumPad.
Da kann man auch, wenn man krasser
CS-Go-Pro ist, der mit NumPad spielt,
dann wird man auch glücklich damit.
So. Ähm,
hauen wir mal weiter. So, ich habe schon
irgendwelche Links geschickt bekommen. Get Modifier
State, sonst was. Ja, ähm, das
werde ich mir dann alles angucken,
wenn wir dabei sind.
Weil vielleicht geht es auch relativ
einfach mit Vue. Ich weiß es nicht. Gucken wir mal.
Äh, ich gehe mal zu Index.
Guck mal, der Eax ist auch da. Moin.
Und Eax, hast du noch ein bisschen Black Ops gespielt?
Sag mal Leute, wie soll ich in die Schrift machen?
So? So?
Oder so?
Ich meine, so passt es halt deutlich.
Nicht mehr drauf, ne?
Sag mal, wie kann ich denn das jetzt hier wieder einklappen?
Mittel? So?
Okay.
Also, ähm,
ich denke mal, wo habe ich denn das jetzt hier auf?
Ah, ich habe es wieder zugemacht.
Ganz clever.
Okay. Ja, was jetzt?
Zwei? Zwei? Mittel? Mittel?
Also die meisten wollen es so, wie es jetzt ist.
Ich lasse es mal.
Falls es irgendwie, vielleicht muss ich es kleiner stellen,
wenn ich zu wenig sehe. Aber ich meine, das ist ja
übersichtlich. Das sind halt, das sind nur,
das sind hundert, hundert Zeilen
HTML. Da gibt es Schlimmeres.
So. Ähm.
Also.
Dann gucken wir uns das jetzt mal an. Wie könnte man das am sinnvollsten machen?
Also, wir wollen hier
Control. Wir wollen hier
Keystrokes capturen.
Und dann
wollen wir das möglichst einfach zum Server senden.
Am besten so alles im gleichen
Format, dass man möglichst wenig konvertieren muss.
Wir senden das als Form.
Das heißt, irgendwelche JSON-Spieler,
die da reinfallen, an der Stelle raus.
Oder ich muss JSON in der
Form verpacken und dann quasi
auf dem Server wieder parsen, was irgendwie
blödsinnig ist.
Achso. Wird es irgendwann
auch möglich sein, Memes aus einer Datenbank zuzugreifen?
So eine Art Verzeichnis, wo
meinst du jetzt lokal
bei dir oder global?
Ich hab mir überlegt, ob ich sowas
global einbauen soll. Allerdings
natürlich keine, keine, keine
Meme DB oder so
von mir.
Weil ich meine Copyright und sowas.
Ja, ich habe mir überlegt,
ob ich nicht quasi eine Suche,
ein bisschen schnellere Suche irgendwie
für sowas hier einbaue.
Ich weiß nicht, ob die, ob die eine API haben.
Irgendwie sowas.
Also ich weiß nicht, wenn es irgendwie so eine gescheite
Seite mit ordentlicher API gibt, dann
könnte man sich überlegen, ob man nicht so ein
kleines Suche hier einbaut, dass man es direkt
adden kann.
Ja, also ich meine, ich werde das nicht hosten,
aber vielleicht, wenn es einen Service gibt,
der eine ganz gute
Datenbank hat und eine ordentliche API
dafür, dann.
Übrigens ist es jetzt, ist es jetzt cool,
dass man nicht mehr API sagt, sondern
API oder API.
Die Leute sagen nicht mehr, die sagen
nicht mehr API, die sagen Max, das heißt
API oder API.
Nein, das heißt nicht mehr.
API ist outdated, sagt man nicht
mal.
Leute, ihr könnt mich nicht debaten mit
irgendwelchen komischen Links.
Ich habe einen Add-on, was mir eine
Vorschau von dem Link anzeigt.
Das heißt, da ist nichts mit
Debate, Debate resistent.
Out-debated, so, ähm, das sind die Java-Leute,
genau, ja, Twitch-Emotes ist, ist, ähm,
bisschen problematisch, weil die Twitch-
Emotes sind so klein.
Ich meine, guck mal, wir brauchen, na gut,
das ist jetzt ein Beispiel, wir brauchen halt
ein bisschen was Größeres und auch in
ordentlicher Auflösung.
Also brauchen wir nicht.
Letztendlich kann ja jeder darin adden, was er will.
Wie gesagt, das wird ja ohne, ohne Bilder
ausgeliefert oder so.
Aber, aber es sollte halt schon ein
bisschen was in ordentlichen Auflösung
nehmen und die Twitch-Emotes sind halt so
klein.
Na, die gibt es maximal irgendwie in
vierfacher Größe.
Na gut, manche, manche sind tatsächlich
ganz brauchbar groß mittlerweile, aber
nee, guck mal, man müsste, man müsste das
ja quasi so vergrößern, dass es passt.
Und das sieht halt scheiße aus.
Nehmen wir mal irgendwas anderes.
Nehmen wir mal hier.
Ah, Nele, warte jetzt noch, bis einer mit
irgendwelchen Bomb-Geschichten kommt.
Ähm, so und das sieht, das sieht halt zu
schlecht aufgelöst aus.
Das heißt, man braucht irgendwelche
ordentlichen Bildchen.
Dazu fällt mir bloß ein.
Gut, ähm, da fangen wir mal an.
Also, ähm, ich denke mal, dass wir, also ich glaube, dass wir
einen Input-Feld für den Hotkey haben wir schon.
Wenn wir darin jetzt, ähm, Keystrokes capturen wollen,
müssen wir erst mal irgendeinen, irgendeinen On, On,
keine Ahnung, On-Key-Press oder, oder Key-Press oder sowas machen.
Und ich gehe mal stark davon aus, dass es auch einfach Key-Press heißt.
Und nach der, also es wird wahrscheinlich On-Key-Press heißen.
Genau, Key, Key-Press, Key-Down, Key-Up, wir können auch Key-Down nehmen.
Aber ist eigentlich egal.
Wir nehmen mal Key-Press.
Ja, Tobi, wenn du, wenn du das hinkriegst, da kannst du verdammt viel,
also, ich meine, es ist wahrscheinlich mathematisch gar nicht möglich,
sowas ordentlich zu machen.
Aber wenn du das schaffst, dann kannst du wahrscheinlich Millionen schaffen.
So, okay, On-Key-Press ist, äh, heißt das?
Also ist es Add-Key-Press in View.
So, und dann brauchen wir unsere, zur Funktion, wie nennen wir das Ding?
Capture-Key oder irgendwie sowas.
Gut, und ich habe heute was gelesen.
In, äh,
irgendwie seit Vue.js Version 2 noch,
hast du nicht gesehen,
gibt es jetzt ein neues Feature.
Das probieren wir jetzt hier mal aus.
Und zwar, kann man nicht sagen, Punkt Prevent.
Das heißt, das geht immer noch hier in meinen Capture-Key-Funktion rein,
wenn man einen Key-Press, allerdings die Standard, ähm, Sachen, die passen,
oh, ich bin übrigens voll falsch, ne?
Warum sagt mir keiner, dass ich komplett im falschen Element bin?
Ich muss doch gar nicht hin, ich muss hier zum, zum, hier, nicht Text-to-Speech, Hot-Key,
da muss ich rein.
The fuck.
So, allerdings Standard-Event wird nicht ausgeführt, das heißt, in der Input-Box erscheint nix.
Gucken wir mal, äh, eine Sache machen wir noch, wir stellen mal ein, dass du standardmäßig
die Form angezeigt wird, die sieht zwar hässlich aus, aber das macht nix, ja, sieht ein bisschen
kaputt aus, aber egal.
Okay, das funktioniert schon mal nicht mehr, das ist gut, so ist das, so ist das gewollt.
Jetzt wird da natürlich irgendwelche, untersuchen, krass, das ist auf Deutsch, warum ist das auf
Deutsch?
Ich hab das, System-Sprache Englisch, egal, untersuchen, okay, untersuchen wir das mal
und stellen natürlich fest, dass es die Events nicht gibt, gut, dann werden wir das mal einfügen,
Capture-Key.
Ja, man, Console-Log, äh, klopp, gucken, ob das überhaupt funktioniert, so prinzipiell,
wie ich mir das gedacht hab, ah, wat, okay, das funktioniert, äh, Moment, was, was hat
der hier für, für Schmerzen, ich hab irgendwo nen Tippfehler drinne, jetzt ist natürlich
die Frage, wo, haha, wie finde ich das jetzt gescheit, ich mein, das ist nicht schlimm,
es geht trotzdem, aber, on Element.
Element.
Element.
Ich hab irgendwo nen Komma eingefügt, aber, wo ist das denn, daneben bringt mir ja nichts,
weil, das ist, d
the fuck, finde ich das jetzt gescheit, was ist das denn?
Wer braucht einen Debugger, wenn es zur Console geht, es ist komplett overrated.
Ich find vor allem JavaScript und so dynamisches Zeug, finde ich ist praktisch immer, so ganz
billige Cout, Debugge.
Was ist die Mission?
Die Mission ist, hier die Keys zu grabben, dass man quasi nicht mehr selbst tippen muss,
Ctrl plus B, sondern drücken kann, Ctrl und B.
Und dann kann ich das zum Server schicken.
Also, na, ich zeig dir das mal.
Geh fort.
Hab ich jetzt gemacht.
So, warte.
Ich muss mal kurz ein bisschen Undo-Action machen.
Ich weiß nicht, was ich gerade kaputt gemacht hab.
Irgendwas hier, oder?
Wartet mal.
Ach, da!
Alter.
Oder nicht?
Da.
Oh, Mann.
Das ist, ich weiß nicht mehr, kacke zu finden.
So, also die Mission ist, dass man vorm Upload den Hotkey angeben kann,
mit dem man das Bildchen dann quasi overlayen möchte.
Also sprich, du sagst dann hier Ctrl B als Hotkey
und wenn du dann Ctrl B drückst,
zeigt es dir, dass du das Bildchen überleihen möchtest.
Und dann kannst du das Bildchen überleihen.
Und dann zeigt er dir Overlay Omega 0 an.
Also, wenn man das abgeloadet hat.
Und aktuell war es so, man musste hier unten jetzt quasi rein schreiben
Ctrl plus B Upload und dann hat es auch nicht funktioniert.
Und jetzt will ich das Ganze capturen.
Also sprich, dass man drückt Ctrl B und dann...
Äh.
Ctrl B.
Ja.
Warum schreibt der da jetzt was rein?
Ach so, weil ich das gelöscht hab, ne?
Ja.
Das ist die Idee.
Genau.
So, okay, das Capturen...
Das Capturen funktioniert schon mal, wie man sieht.
Aber...
Aber...
Ctrl und Alt capturet er nicht.
Ich vermute mal, weil das irgendwelche Modifier-Keys sind.
Da machen wir nicht Key Press, sondern machen Key Down.
Da müsste ja alles dabei sein dann.
Fragt mich nicht, warum, weil JavaScript-Logik.
Guckt, jetzt ist auch Ctrl mit dabei.
Okay, lassen wir uns das mal ausgeben, was wir für einen Knopf drücken.
Äh, Event und dann haben wir Event, äh, ich hab keine Ahnung.
Event, wie heißt das?
Character?
Weiß nicht, gucken wir mal.
Aha.
Key heißt das Ganze einfach.
Da hätte ich auch drauf kommen können.
Dass es einfach nur Key heißt.
Guckt, jetzt kriegt man bei Shift A, kriegen wir zwei Events.
Einmal für Shift und einmal für A.
Ah.
So muss das sein.
So, wir haben...
Character Code...
Character...
Null?
Key Code.
Moment, warum ist Character Code und Key Code unterschiedlich?
Null sollte es ja als Charakter gar nicht geben.
Key Code 65, das ist ein A.
Das ist ein...
Also...
Ein kleines A eigentlich.
Ähm...
Ja, das passt doch eigentlich ganz gut.
Okay, jetzt kriegen wir...
Also, okay, so kriegt man die ganzen Campbell schon mal gecaptured.
Ja, das ist doch schön.
Das ist...
Das ist JavaScript-Logik.
Ich verstehe...
Ich verstehe nicht, ähm...
Warum man Keydown verwenden muss und nicht Keypress, aber...
JavaScript...
Ich werde...
Ich sag da einfach nichts.
Wir machen jetzt einfach weiter.
Äh...
Was ist denn für dich die beste Private-Cloud-Lösung?
Next Cloud.
Wenn man viele Features braucht, Next Cloud.
Ansonsten, wenn man nicht viele Features braucht,
wenn man einfach nur File-Sync will,
finde ich, ist...
Das hier am besten.
Wenn man einfach nur...
Wenn man einfach nur File-Sync haben will.
Ohne...
Ohne großartige Spiränzchen.
Dann nimmt man das.
Wenn man den...
Das ganze Paket aus
CalDaf, CardDaf,
Journals,
To-Dos,
Kalender,
ähm...
File-Sync
und alles Gedöns haben will,
dann kann man Next Cloud nehmen.
Plus die ganzen Add-ons und so, die es gibt.
Ja, das ist tatsächlich in JavaScript cool.
Wobei das wahrscheinlich weniger JavaScript ist,
sondern eher Browser-Geschichte.
Ähm...
Aber das finde ich auch cool.
Dass man in JavaScript quasi
alles mögliche Konsole loggen kann
und das nicht nur Text ist, sondern wirklich Objekt, wo man durchklicken kann.
Ich meine, das ist wirklich cool.
Das nimmt man ja quasi schon als gegeben hin,
wenn man im Browser was macht, aber...
Ach.
Ich meine, das hast du halt beim normalen Terminal-Output nicht.
Gibst Objekt aus und hast die ganzen...
ganze Geschiss da.
Das ist so typisch Dubstep-Musik.
Immer wieder die gleichen drei Töne
und im Hintergrund...
Du kannst coden.
Ja.
Wobei ich das Wort programmieren besser finde.
Weiß nicht.
Coden, das hat man früher auch immer gerne gesagt.
Ich finde, das wirkt irgendwie so...
Du tippst halt irgendwie Quellcode ein ohne Sinn und Verstand.
Okay, also.
Wir kriegen den gerade schon mal gecaptured.
Wie machen wir jetzt weiter?
Also von der Logik her würde ich sagen,
wir brauchen erst einmal in unsere Model
für die Form brauchen wir irgendwie
mal ein bisschen mehr als Hotkey.
Weil...
Okay, wir machen es mal als String.
Erst mal einfach nur als String,
um zu gucken, ob das funktioniert.
Capture Key.
Okay, dann sagen wir jetzt
This. Jetzt kommt dieses wieder
ewige Schlange aus
Aufrufdingern.
Weil JavaScript, also sagen wir
Dings, Popup,
Form, Hotkey,
gleich Event.
Wir probieren das mal aus, ob es prinzipiell funktioniert.
Event und dann einfach nur Key.
Ja, das funktioniert.
Guck, der Captured.
Und Shift und so Capture da auch.
Das finde ich ganz gut.
Alt Capture da, Control Capture da, Shift Capture da.
Ich wusste gar nicht, dass das
GR für Craft steht, aber gut.
Capture da, Windows Taste Capture da.
Er Capture da alles.
Also, das ist gut.
So, jetzt müssen wir natürlich mal gucken, wie man das...
Was läuft dahinter?
Es läuft Frontend-mäßig
Vue.js und Backend ist
ASP.NET Core.
Es ist aber auch hauptsächlich
Vue.js geworden.
Weil...
Also, ich bin nicht der große
JavaScript-Hacksor und Kenner.
Und nachdem mir Vanilla-JavaScript
immer so unglaublich auf den Keks geht,
habe ich mal geguckt, was zur Zeit
Frontend-technisch so angesagt ist.
Weil in JavaScript ist es ja so,
das, was vor ein paar Jahren Frontend-technisch
angesagt war, ist ja heute komplett outdated.
Aber komplett. Also,
wer sich vor drei Jahren mit JavaScript,
mit dem JavaScript-Ökosystem beschäftigt hat,
der ist heute komplett outdated.
So quasi wie vor 30 Jahren bei anderen Sachen.
Das heißt, ich habe jetzt mal geguckt, was angesagt ist.
Und zur Zeit ist
Vue.js total angesagt.
Und ich muss sagen, ich finde das echt gut.
Das macht wirklich Spaß.
Das hätte ich nicht gedacht, dass ich das bei JavaScript sage.
Ja, aber Vue.js macht Spaß.
Wird hier auch auf meinem Streaming-Rechner
möchte sich gerade Visual Studio aktualisieren.
Nein. Ich brauche den
Download gerade.
Also, das macht tatsächlich Spaß.
Und es ist für JavaScript,
für JavaScript-Verhältnisse ziemlich
intuitiv.
Die ganze Vue-Geschichte.
Ich meine, guck mal, wie simpel das jetzt war.
Du machst hier im Endeffekt einfach
an, du machst einfach
an diesem Input,
sagst du hier, key down, prevent,
also sprich Standard-Event wird nicht ausgeführt,
gibst du eine Funktion ein, schreibst die Funktion ein
und es funktioniert einfach.
Das ist it's as fuck.
Ja, No-Skiller, das geht bestimmt
noch schöner.
Ich muss mir da mal Gedanken machen. Okay.
Also, das Capturen von Sachen
funktioniert schon mal ziemlich gut.
Wir werden das wahrscheinlich
trennen müssen. Wir werden das einmal
trennen müssen, wie es intern gespeichert wird
und wie es in diesem Input angezeigt wird.
Weil,
ich will ja eigentlich die Keycodes,
ich will die Keycodes haben, also ich will hier nicht,
ich will eigentlich
zum Server nicht übertragen, dass
ich jetzt gerade
A gedrückt habe, sondern ich möchte zum Server übertragen,
ich will Keycode 65,
Modifier Keycode
keine Ahnung, 17 oder so.
Ich glaube 17 ist
Windows-Taste oder Shift oder so.
Und das will ich eigentlich übertragen,
weil dann ist es nämlich viel einfacher wieder
auf dem,
wie gesagt, ich labere jetzt einfach nur mal für mich zum Nachdenken,
weil dann ist es im Backend viel einfacher
für mich, das quasi letztendlich wieder in
Windows-Desktop-Keycodes
umzuwandeln, anstatt wenn ich
jetzt hier irgendwelche JavaScript-String
Representations von
diesen Keycodes nehme. Also ich will,
ich will eigentlich hier intern
speichern den Keycode, allerdings
anzeigen,
anzeigen will ich
Shift und so. Das heißt, wir brauchen
schon mal zwei Sachen.
Also wir brauchen schon mal
einen Store
für eigentlich
die eigentliche Hotkey-Geschichte
und die Keycodes.
Kenne keine moderne Anwendung, welche
noch auf PHP aufbaut. Doch, da gibt es
relativ viele. So Nextcloud zum Beispiel.
Wo wir es gerade von hatten.
Sind die Keycodes standardisiert
also Programmiersprachen unabhängig?
Ich würde mal sagen, die meisten.
Also von
A bis Z dürfte einfach normaler ASCII-Code
sein. Control und so ist
auch irgendwie, ich glaube,
also ich bin mir jetzt nicht ganz sicher, ich glaube
Shift, Steuerung, Alt, das ist irgendwie
15, 16, 17 oder 16, 17, 18
oder sowas in der Richtung.
Also check ein Chasen. Ja, das ist
das war das eigentliche Ziel, allerdings
haben wir eine Form. Das heißt, ich muss erst mal
gucken, wie ich das Capture.
Okay, das Capture ist
einfach an sich, das funktioniert so.
Wir brauchen jetzt zwei Sachen. Wir brauchen ein, wie man das
anzeigt und
kann man was hier machen? Kann das hier auch
was Capture?
Nice. Okay.
Prinzipiell kannst du das.
Das werden wir nicht so lassen.
Okay.
Okay,
das erste ist, wir müssen
stoppen,
wenn
also
wir brauchen also, wenn man
ESC drückt, wir müssen mal überlegen, wie sich das Ding
verhalten soll. Wenn man ESC drückt,
dann
clear.
Das machen wir als erstes.
Das machen wir als erstes.
If Event
Keycode gleich, ja
was zum Teufel ist ESC?
27, 7
13?
27, okay.
27,
dann wollen wir
wie alias?
Übrigens kann mir das mal irgendjemand erklären?
Ich weiß ja, ich habe gerade gesehen
im Chat
sind ein paar JavaScript
Spezialisten am Start.
Als App wäre es noch cooler.
Du kannst doch einfach die Webseite auf dem Smartphone aufmachen.
Da brauchen wir keine extra App für.
Ähm,
was wollte ich jetzt sagen?
Genau, also ich habe jetzt gesehen, dass ganz viele
JavaScript Pros, die stehen auf
dem Smartphone.
Die nehmen kein war mehr, die nehmen const.
Also JavaScript hat hier irgendwie
drei, mindestens drei verschiedene Sachen
zur Variablen irgendwie anlegen.
Was ist denn eigentlich der Unterschied dazwischen?
Also ich meine, rein hier an der Stelle
macht es ja überhaupt keinen Unterschied,
ob ich irgendwie sage, let hotkey
gleich
das da.
Das ist irgendeine Scoping-Geschichte wahrscheinlich.
Aber wie?
Das macht eigentlich
überhaupt keinen Unterschied an der Stelle jetzt.
Ich meine, ich nehme war, weil ich das
von C-Sharp gewöhnt bin.
Was ist der Unterschied zwischen den drei Dingern?
War nicht mehr.
Warum denn nicht?
Let ist nur innerhalb des Blocks, wo es definiert war, gültig.
Das bedeutet, hier drinnen könnte ich
also,
wir lernen JavaScript.
Das heißt, hier drinnen könnte ich jetzt
das hotkey nicht verwenden, oder was?
Wenn es nur im Block
gültig ist.
Const ist konstant, ja gut, da werde ich auch drauf kommen.
Okay, das heißt, const bedeutet,
ich könnte jetzt sowas hier nicht machen.
Das wird dann nicht gehen, ne?
Weil const.
Also sprich, wenn ich es in der ganzen
Funktion verwenden will, dann nehme ich
war.
Weil let geht im Block nicht.
Const kann ich nicht ändern.
Also war, warum nicht war?
Ich meine, wenn ich eine Variable habe, die ich ändern will,
ja, also mal angenommen,
ich habe jetzt hier sowas wie
return
value gleich false.
So.
Und ich habe jetzt hier ganz, ganz viele ifs.
Und da setze ich halt
return value dann entweder auf true
oder lasse es auf false oder sonst was.
Und am Ende sage ich halt return.
Dann muss ich es doch war machen, oder?
Weil nur mit war kann ich es ändern.
Oder geht das mit let dann auch?
Also geht mit let
das in untergeordneten, probieren wir jetzt einfach mal aus.
Let.
Okay.
Also wenn wir jetzt escape drücken, geht doch.
Ja, dann können wir auch let nehmen.
Oder wir nehmen war, weil ich war einfacher
schreiben kann.
Ähm.
Ich meine, alle wars zu const.
Ja, okay. Aber in dem Fall,
in dem Fall, das geht jetzt aber.
Das sollte jetzt aber nicht gehen, oder?
Ups.
Ah, ja, okay.
Okay, verstehe.
Das heißt, mit const kann man sich dann logischerweise
darauf verlassen, dass es
ein Fehler wirft, wenn man es versucht
zu ändern.
Best practice.
Aber wir sind ja bestest practice hier.
Sind wir schon bekannt für.
Vor allem auch für unsere, ähm,
tollen
serverseitigen Checks, was abgeloadet wird.
Die sind ja auch ganz große, ganz
die ganz hohe Kunst.
Aktuell kann jeder
uploaden, was er will.
Ähm. Hat let hallo
eins, äh.
Äh.
Achso.
Jetzt ernsthaft?
Ist das wirklich so?
Okay. An der Stelle müsste es true sein.
Und an der Stelle müsste es dann wieder false
sein, oder wie?
Das wird ja immer wirrer.
Nö.
Was auch immer.
Wir machen das mal weiter, sonst wird das nix.
Ähm, okay.
Also das erste, was wir machen müssen ist,
wenn man escape drückt,
dann ist es relativ easy,
wenn es doch mal war,
als wir irgendwie, oder, ja, das ist scheiße.
Ich kann das ja selber noch ändern später.
Vom hotkey, wir aliassen uns das mal,
dass wir
dass wir nicht jedes Mal den ganzen Mist schreiben müssen.
Ähm.
Vom hotkey.
Geht das so? Ne, das wird wahrscheinlich gar nicht gehen.
Also das brauche ich dann schon nochmal.
So.
Das heißt, wenn ich jetzt escape da drinnen drücke,
ist es weg.
Wobei ich noch returnen müsste danach.
Weil sonst das escape nochmal reingeschrieben wird.
Das funktioniert prinzipiell.
How do you
understand all this?
Don't understand it.
It's javascript.
I'm a big javascript noob.
So, ähm.
Jetzt haben wir das ganze schon mal
gelöscht.
Das heißt, wir gehen dann an der Stelle
raus, weil
weil
escape
escape ist.
Okay, also prinzipiell kann ich jetzt schon mal
sowas hier sagen.
Das ist eigentlich schon mal gar nicht schlecht.
So, ich sage jetzt ctrl a.
Okay. Ähm.
Okay, wir resetten.
Das ist schon mal nicht schlecht.
Wir machen das mal anders.
Ich habe eine Idee.
Wir machen das hotkey weg.
Dann
brauche ich aber zwei verschiedene.
Timescript habe ich schon mal was mitgemacht.
Timescript ist wirklich nice.
Warum ich jetzt hier nicht mit Timescript mache ist,
weil ich das ja auch, wie gesagt,
kommt ja dann alles auf Github.
Und ich will, dass die Leute möglichst einfach mitmachen können.
Und Timescript erhöht
die Hürde halt nochmal, weil du brauchst halt,
wenn du nicht gerade Visual Studio hast und selbst da
auch viele Sachen nicht funktionieren, brauchst du
für Timescript halt erstmal musst
du npm Zeug installieren.
Dann musst du dann Timescript Compiler
anwerfen und sowas. Das macht es, finde ich,
zu kompliziert für einfach forken und ein bisschen
mitbasteln. Okay, ich muss jetzt mal kurz
in mich gehen. Wie machen wir das jetzt am besten?
Also in irgendeinem String einfach speichern
können wir das ganze schon mal nicht. Das ist
Kacke, das funktioniert nicht richtig.
Ähm
Und wir wollen ja auch später
vom Server nen
Wo ist denn da Solution Explorer?
Wir wollen ja auch später
vom Server hier uns den Hotkey
drinne speichern. Kurz ausmachen.
Also wir wollen
ja dann eigentlich auch sagen String
Hotkey
und das brauchen wir ja.
Das ist quasi das, was dann auch
in die Datenbank geschrieben wird, was das
jeweilige Bildchen für nen Hotkey
hat. So, das heißt, wir machen
jetzt mal hier ne neue Klasse
für diese Hotkey.
Das nennen wir eben Hotkey
int id
So
Und was müssen wir
für so nen Hotkey in der Datenbank speichern?
Also wir müssen einmal natürlich
ein...
Also wir müssen in der Datenbank
auf jeden Fall mal den Keycode speichern.
Den brauchen wir später, um das eigentliche
Keymapping zu machen. Dann müssen wir die
Modifier speichern. Haben wir die
Twitch Prime geholt? Wollt ihr gerne meins abschenken?
Das ist sehr nett von dir.
Realer Joke.
Oder hab ich das? The Real A
Joke. Aber
ich hab keinen
Ich hab kein Affiliate und kein
Twitch
Partnerschaft.
Ich hab's auch bis jetzt, ich erzähl's ja seit nem
halben Jahr schon, dass ich mal
mich drum kümmern werde, so, weil
das immer viele Leute fragen. Aber ich hab's immer durchgemacht.
Okay. Dann müssen wir
Dann müssen wir uns speichern, ob
wir...
Okay, dann speichern wir uns, ob Control gedrückt wird.
Dann speichern wir uns, ob Alt gedrückt wird.
Dann speichern wir uns, ob...
Weil es könnte ja auch sein, dass wir
sowas haben, wie...
Also es könnte ja sein, dass jemand sagt, ich möchte
als Hotkey nicht nur Control
B, sondern
Alt und B
oder sowas. Also
gucken wir mal, was wir für Modifier unterstützen.
Normalerweise,
normalerweise würde ich das so machen.
Aber ich sag euch auch gleich, warum das nicht geht.
Also normalerweise würde ich dann
irgendwie hier sowas machen, keine Ahnung.
Also einfach hier stellvertretend sowas hier.
Also nicht Object, da würde ich
irgendwas anderes für nehmen und dann Keys.
So, da hast du hier irgendein Array mit
mit deinen
Keys drin. Das wäre eigentlich die einfachste
Geschichte. Also mal angenommen, wir hätten jetzt hier
irgendwie ein
Key-Objekt.
Dann könnte man sogar ein Character-Objekt oder irgendwie sowas machen.
Und das wäre jetzt quasi
mein Hotkey.
Dann würde ich dann eben zusammen aus beliebig vielen Modifiern
Modifier sind halt Alt,
Ctrl und Shift plus
ein Key.
Das würde ich normalerweise so machen. Die Sache ist die
an der Stelle, warum ich es nicht so machen
kann ist,
man kann
Arrays nicht in der Datenbank speichern.
Und wir müssen den Hotkey ja speichern.
Das heißt, ich müsste entweder
irgendein
JSON-Ding da drin
speichern als String und dann quasi immer wieder
konvertieren. Oder,
wir machen das anders.
Oder wir machen halt ein extra
Hotkey-Objekt.
Weil das kann ich in der Datenbank speichern.
Also sprich,
jedes Meme-Objekt hat ein Meme-Hotkey-Objekt
und genau für sowas ist eine Datenbank da, das zu speichern.
So, Ctrl, Alt,
Windows
und was brauchen wir noch? Shift.
Shift.
Übrigens, falls ich irgendwas übersehe, schreibt es hier mit
addWobblors.
Äh, ja.
Sag mal, hat
hat Wischel Studio sowas wie blockselect
oder so?
Select columns of text, ja genau.
Shift, Alt.
Haha, krass.
Naisu.
Ah, wieder was gelernt.
Ich hab's schon wieder vergessen. Was war's?
Shift, Alt.
Shift, Alt. Och, nice.
Uh. Hoho.
Keycode.
Und man konnte doch irgendwie auch
Zeilen verschieben. Wie ging das hier auch nochmal?
Wie konnte man Zeilen verschieben?
Shift, Alt, Up.
Shift, Alt, Down.
Äh.
Oder auch nicht?
Ach, Alt. Einfach nur Alt. Okay.
Ja, nice.
Scheiß auf Kommentare. Overrated.
Ich wollte grad alle letzten Kommentare reinschreiben.
Das ist, nee, nee, nee.
Damit fangen wir erst gar nicht an.
Okay.
So, also, so speichern wir das
in der Datenbank. Das heißt, irgendwie so ungefähr
müssen wir das jetzt auch in unserem Frontend abbilden.
Das heißt, Hotkey
wird ein eigenes JavaScript-Objekt
mit dem gleichen Shit drinne.
Nämlich, Control, False.
Alt, Alt.
Äh, Win, False.
Äh, Shift.
Keycode.
Null. Mir fällt nämlich grad
nix besseres ein. So, und weil Keycode
Null,
machen wir hier draus auch nen
Nullable Int.
Wo wir alle C-Sharp Features verwenden.
Gut. Ähm.
Okay.
Das gefällt mir jetzt schon mal
viel besser als vorher.
Und ich glaube, wir brauchen noch ein zweites Feld für die Anzeige.
Aber ist egal.
Scheiß mal auf die Anzeige. Empfällt erst mal, dass wir
die Tastendrücke richtig
ähm
gespeichert kriegen.
Mittlere Maustaste. Stimmt.
Könnte tatsächlich funktionieren. Nö.
Mittlere Maustaste.
Macht in Visual Studio einfach mal gar nix.
Das ist natürlich, äh,
verschenktes Potential, ja.
Oh, es gibt grad hier große Diskussionen.
TypeScript.
Oder JavaScript.
Ich persönlich find TypeScript ziemlich gut.
Wo hast du eigentlich deine Server stehen?
Also deine Public Server?
Das willst du nicht wissen. Das ist der räudigste, schlechteste,
dafür will ich auch keine Werbung machen,
Hosting-Anbieter aller Zeiten, bei dem ich
nen Server hab. Und den hab ich auch nur
für meinen, ähm,
so Sachen wie zum Beispiel
Location-Tracking.
Also sprich, ich hab hier meine Heim-Automatisierungsgeschichte,
dass ich erkenne,
ob ich auf dem Heimweg bin von der Arbeit und sowas
in der Richtung.
Und das ist, aber ich mein, das
ist auch wirklich nen Kack-Anbieter, weil
die kriegen
kein Geld richtig, also
die können das gar nicht richtig machen.
Die hatten mal nen Angebot irgendwie, ich weiß nicht mehr
was es war, ich sag jetzt einfach mal 35 Dollar.
35 Dollar Lifetime.
Also sprich, du bezahlst einmalig
35 Dollar und kriegst
deine VM mit Public IPv4-Adresse
Lifetime, haben sie gesagt damals.
Und bis jetzt ist die immer noch da.
Die kackt zwar ab und zu mal ab,
aber sie ist
gnadenlos billig. Billiger als jeder
andere Hosting-Anbieter ever.
Wozu sendest du die Key-Inputs
jetzt noch ans Backend?
Ne, ich sende die Key-Inputs nicht
ans Backend. Ich möchte
nachdem man
mit diesen Inputs ein
Hotkey definiert hat,
will ich natürlich dem
Backend mitteilen, wie
dieser Hotkey ist.
Weil das Backend muss ja letztendlich das Bild
anzeigen. Dementsprechend muss ich
natürlich den im Frontend definierten
Hotkey auch an das Backend senden, dass
der bei Windows das
Hotkey registrieren kann.
Ich glaub das wird jetzt mega
ekliges JavaScript Zeug, was ich
jetzt von mir gebe. Also seid
schon mal gewarnt.
Also.
Pressed Key. Ach komm, da können wir auch
event.keycode nehmen, oder?
Wir nennen es einfach
key. Event.key.
Code.
Ähm.
Ich schreib das jetzt einfach mal
so, wie es mir so
in den Kopf kommt.
Das ist wahrscheinlich die absolut
ineffizienteste und
hässlichste
Lösung, die es so
gibt. Also als erstes
checken wir mal,
ob der Key, der gedrückt
wurde. Ich lese jetzt auch mal kurz nicht Chat, ich muss mich mal konzentrieren.
Der Key, der gedrückt wurde.
Gucken wir jetzt erstmal, ob das
Win aus Taster Alt, Ctrl oder
Shift ist. Also sagen wir mal sowas wie hier ist
Meta oder is.
Hatten wir gesagt Meta oder Win?
Ich glaub wir hatten gesagt Win, oder?
Win.
Is.
Win. Weil eigentlich heißt das Ding Meta,
weil man fast in jeder Key,
wo man guckt, heißt das Ding
heißt es nicht Win aus Taster, sondern Meta.
So. Äh. Event.
Key. Code.
So, ich schreib das jetzt erstmal so hin, dass es irgendwie
funktioniert und dann überlegen wir uns,
wie wir das schön machen können. Da könnt ihr euch aber auch mal
Ihr könnt euch das ja mal angucken, was ich hier
bastel und wenn ihr dann
Verschönerungsvorschläge habt, schießt
los. Weil das wird wahrscheinlich viel zu lang und
viel zu hässlich.
Event.keycode gleich ähm
äh
ja
Ich glaube 16, 17 oder so ist das immer.
18. Fast.
Ähm. 18.
Dann haben wir
sowas wie is.control
Warum ist da nicht GrooveMusic auf?
17.
17.
Das
Als erstes, wir könnten da bestimmt
irgendeinen Switch draus machen.
Und dann sowas wie is.modifier.key
oder irgendwie sowas. Das überlegen
wir uns gleich, wenn ich fertig bin.
Shift.
Das war 16, ne?
Ja.
Keycode gleich 16.
Wie gesagt, ich guck grad nicht in den Chat.
Ich muss mir das mal überlegen. So, jetzt wissen wir, ob der
Key, der gerade gedrückt wurde,
ob das Windows-Taste Alt
Ctrl oder Shift ist.
Okay.
Ähm.
Und wir wollen jetzt, ich muss das noch mal
starten. Wir wollen jetzt ja
das, also das, muss man überlegen, wie sich
das Ding verhalten soll.
Wir wollen,
wir wollen stop if escape.
Wir wollen stop if
modkey
zweimal. Also
sprich, der gleiche, wenn der gleiche Modkey
zweimal gedrückt wird, wollen wir
auch resetten
die Form. Ähm.
Wenn
wenn a bis z 0 bis
9 zweimal, dann
auch reset. Weil es könnte ja
sein, dass einer so quasi sagt,
Ctrl, also
Ctrl A, A,
was kein Shortcut mehr ist, was auch
keinen Sinn ergibt. Wie soll ich das mappen?
Das heißt, sobald
der zweite Key kommt,
kann man das Ding resetten und darf er wieder
von vorne anfangen.
Ähm.
Ich glaub, das dürften die Fälle
gewesen sein, ne?
Okay. Das heißt, wir müssen jetzt erst mal
gucken, ob
hot,
ne, wie heißt hot,
wie hab ich den
Krempel genannt?
Hotkey, also okay, einfach so wie die anderen
Dinge auch. Also wir gucken jetzt, ob
hotkey
Windows-Taste
schon gesetzt ist
und ob der
aktuell gedrückte Knopf
auch
Windows-Taste ist.
Wenn das der Fall ist,
dann resetten wir.
So, und resetten
tun wir folgendermaßen, indem
wie resetet man eigentlich in JavaScript
so ein Objekt? Hier gibt's da irgendwas?
Ich mein, ich würd jetzt die Billigvariante
machen und merkt's euch mal,
können wir gleich in der Verschönerungsphase
können wir das dann, äh, machen.
Control
gleich hot. Ich würd's jetzt einfach nochmal
reinschreiben, ja? Aber wahrscheinlich
geht es viel schöner.
Ähm, weil
sobald man merkt, dass man immer Sachen
ganz oft doppel- und dreifach tippt,
dann stimmt meistens irgendwas nicht.
Und kann man schöner machen.
Shift
So, also das wollen wir resetten,
den ganzen Kram. Also sprich,
wenn Windows-Key schon mal gedrückt
wurde und Windows-Key nochmal gedrückt
wird, dann wollen wir resetten.
Ups.
So.
Oder, oh, das wird, oh,
das wird ein krasses If, das sag ich euch gleich schon.
Oder Shift,
oder, öh, oder,
geh weg. Shift
Alt
Control. Oh nein, ob das
so funktioniert, äh, also.
Alt
Is Control.
Ne, wisst ihr, fängt schon an.
Is Chrome.
Shift.
Okay, wenn das doppelt gedrückt wird,
dann
kommt's weg.
Sonntagsfehler.
Irgendwo Sonntagsfehler.
Unexpected token.
Was ist das?
Ist das Studio da gerade reingewurstet, oder?
Object, Object.
Ah.
Ja.
Wir müssen noch ins Model setzen.
Ne, haben wir schon.
Äh.
Object, Object. Okay.
Warum ist das Object, Object?
Na gut, wahrscheinlich
einfach, weil JavaScript keine Ahnung hat, wie man den
Plötzchen
von mir hier anzeigen soll.
Geh ich mal von aus.
Model Popup Form. Ja, das ist, das ist okay.
So.
Wie machen wir denn weiter?
Also
ich würd sagen, jetzt.
Ich würd ja gerne mal testen, ob das prinzipiell funktioniert, was ich hier
gemacht hab.
Das If sieht hässlich aus.
Okay, das heißt, das hier können wir schon mal da mit rein machen.
Wir wollen Resetten,
wenn das ist.
Oder Escape
gedrückt wird.
Ich mach doch mal wieder Chat auf.
Nicht Resetten, wenn ein weiterer kommt. Eher immer die
Buchstaben nehmen, der übergeben wurde.
Ja, mal gucken.
Ich muss ja erstmal einfach gucken, wenn ich das selbst auf die Reihe krieg.
Okay, das funktioniert
noch. Okay.
Also, wenn ich den Mist alles gedrückt hab,
dann,
dann will ich's resetten. Das ist okay.
So. Else.
Wenn.
Ne, Else If. Ich muss jetzt
gucken,
wenn es keinen, wenn es
wenn es keine
Bedingung ist, wo er das ganze resetten muss,
will ich gucken,
ob, wir gucken,
wir gucken jetzt mal, ob, ähm,
ich mach das mal zum testen hier.
Keycode gleich 65.
Das ist ein A.
Das weiß ich, wie's funktioniert.
Hotkey.
Keycode gleich.
Ja, das ist ja
sowas zum testen, aber das müssen wir dann auch dynamisch machen.
So, und Else.
So, und im Else
müssen wir jetzt die,
diese Dinger setzen.
Ha.
Wie mach man das jetzt gescheit?
Ich denke.
Also, mir fällt jetzt nur was ganz
ekliges ein.
Ich hab, ne, wir gucken uns gleich an, wie man das
schöner machen könnte. Also, ich würd sagen, wir könnten jetzt sowas
machen, weil wir müssen jetzt ja am Ende
vergucken, ob quasi
der Kram
nicht gesetzt ist.
Und wenn der nicht gesetzt ist,
dann weisen wir ihn
zu, wenn
das aktuelle Keypress
Event
funktioniert.
Okay.
Gucken wir mal, ob das funktioniert.
Also, ich würde jetzt erwarten,
Control,
dass Control
gesetzt ist, ja. Nochmal
Control würde ich erwarten, dass Resetted ist.
Ja.
Control drücken und Shift
drücken würde ich erwarten, dass
Control, ah ne,
ah, Shift, Moment. Shift, Shift hab ich ja noch
gar nicht gebastelt.
Irgendwie ist auch
die Einrückung ein bisschen schepp, oder?
Was zum
Geier macht der da?
Kann man das irgendwie schön formatieren lassen
von Visual Studio?
Kann man das, kann man das formatieren lassen?
Naja, anscheinend nicht.
Was auch immer.
So, Shift.
Shift.
Okay, also.
Control und Shift gedrückt.
Jetzt ist beides gesetzt.
So.
Und A gedrückt.
Jetzt ist Control,
Shift und
A gesetzt. Okay, das
ist von der Logik her so, wie ich das haben will.
So, und jetzt drück ich nochmal
A und jetzt ist alles
Resetted.
Fuck.
Ah, ja, das hab ich ja noch gar nicht.
Ähm, da müssen wir das noch ein bisschen ekliger machen,
das If.
If, ähm,
hotkey, keycode, ähm,
ungleich, 0.
Alter,
wie das aussieht, ey.
Shift, Control,
Alt, A.
Sollte jetzt alles gesetzt sein.
Ja, Alt hab ich ja noch gar nicht drin.
Okay. Shift, Shift
ist gesetzt, Keycode A. Ich drück nochmal
A und es ist resettet.
Okay, nice. Nice, okay.
Prinzipiell funktioniert das. Sieht halt hässlich
wie die Nacht aus, aber
es klappt. Also haben wir jetzt hier noch Alt,
Alt, Alt,
ähm,
Win,
Win.
Das geht bestimmt besser als Win.
So, nice, okay.
Jetzt sollte das Prinzipiell funktionieren, was ich mir
gedacht hab. Weil ich mir das so überlegt hab.
Was, Control,
Control D, warum gibt's
hier nicht sowas wie neu, wie neu formatieren?
Einfach, muss doch irgendwie möglich sein,
sowas hier.
Reformat oder so.
So, gut.
Also Prinzipiell ist von der Logik okay.
Ähm, sieht scheiße
aus, ja.
Ach, das kann damit JavaScript gar nicht.
Öh.
Wobei die Einrückung ist doch eigentlich okay.
Nur dass er Tabs macht.
Tabs sind doof, aber.
Okay, so schlecht ist das gar nicht.
Ich mein, ist doch eigentlich relativ klar, was er
macht. Ähm, so.
Jetzt muss ich mal Chat durchgucken. Hat der irgendeiner
Verbesserungsvorschläge für diesen Krempel von mir?
Compatience in JavaScript
bitte immer mit gleich, gleich, gleich. Wo ist denn da der Unterschied?
Ist das, ist das sowas wie
gleich, gleich, check den
Wert, gleich, gleich, gleich, check reference
oder irgendwie sowas ist das wahrscheinlich.
Du zeigst ein Object als String
an, du musst Object to String machen.
Hä?
Ja, ich weiß, dass ich, dass ich, äh,
das Object anzeige, das ist mir schon, schon
klar. Warum ist hier natürlich als Object,
check drin, da steht so bisschen, bisschen,
bisschen doof, aber gut.
Kann man nix machen, ne?
Kann man das?
Ups, hui.
Gleich, gleich, Wert, gleich, gleich, gleich, gleicher Typ
und Wert.
Alter, JavaScript.
Ah, okay.
JavaScript. Man lernt nicht
aus. Warum kann der mir
hier drinnen nicht, warum zeigt der mir so ein dummes
Object, Object an? Ich mein, kann der mir nicht einfach
Zeigt der
dann hier jetzt wenigstens richtig an, wenn ich's so mache?
Achso.
Joa. Kann der mir nicht
hier drinnen mal anzeigen,
so, wie das Object
innen drinnen aussieht, dass ich das nicht immer loggen muss?
Ja, noch mal was.
Chasen
Stringify dein Object. Tja.
Das klappt leider nicht so richtig,
weil ich verwende das gleiche Model
ja hier auch für, für den,
für den Input hier.
Oh, ich
muss das noch richtig nennen.
Okay, aber prinzipiell macht
er das. Ist eigentlich
egal. Ist eigentlich
wurscht. Wir haben uns ja grad im Debug in der
in der Konsole ausguckt, dass es prinzipiell richtig ist,
was drinsteht. Ähm.
Achso. Ja.
Aktuell geht hier nur ein A.
Ähm.
Wie kann ich denn jetzt checken, ob
Keycode in ner speziellen
Range ist?
Kann man, kann man in JavaScript irgendwie
Ranges anlegen? Irgendwie sowas?
Keine Ahnung. Wieso?
Ähm.
Also ich mein, was gehen würde, wäre
in RegEx zu machen?
Sowas hier nach, sowas in der Richtung. Irgendwie
Matches?
Match?
Match? Da hat er irgendwas
komplett in Match.
Könnte man quasi sagen. Wobei das nicht schön ist. Ich würde
eigentlich gerne bei Keycodes bleiben, anstatt
da jetzt irgendwelche
RegEx Dinger zu machen. Also
könnte man da quasi sagen, wir wollen
von A bis 10, von 0 bis
0 bis 9.
Äh. Und
Case insensitive.
If Keycode
ungleich als...
Ja, ich weiß, aber da müsste ich ja die ganzen Keycodes
eintragen. Das will ich ja net.
Das soll er gefälligst selbst machen. Ähm.
Okay.
Keycode gleich.
Key.
Key. Deswegen habe ich mir den noch gespeichert.
Nennen wir es mal
Current. Key.
Ja, das ist keine schlechte Idee.
Wobei ich
das hier auf jeden Fall filtern müsste, weil sonst
drückt dann da irgendwie einer, keine Ahnung,
auf seiner mongolischen Tastatur irgendwie
was, was ich da nicht haben will.
Das wird halt so erstmal funktionieren.
Das soll mal weiterkommen.
Achso, ja. Und wir sollten gucken, dass es auch wirklich nur
ein Zeichen
ist. So, und jetzt müssen wir uns noch überlegen,
wie wir den ganzen Krempel richtig anzeigen.
Und ähm.
Dafür,
da können wir ja offensichtlich immer hier den Kram verwenden,
weil er ist der Meinung, das ist jetzt
Object, Object. Das heißt, dafür
brauchen wir jetzt
quasi so ein
sich jedes Mal updaten
des Feld,
wo wir die Formatierung für das Input
für das Inputfeld machen.
So, also sprich.
Achso, äh.
Ich bin ja auch blöd. Da muss ich jetzt immer
noch was ausdenken. Wie nennen wir das denn jetzt? Ähm.
Input
Irgendwas
Irgendwas Input
Hotkey
Input
Format oder irgendwie sowas in der Richtung.
So, gut.
Und da drinnen
Okay, wir gucken erstmal, ob
das theoretisch funktioniert.
Ähm.
Return
Irgendwie, was weiß ich.
Hotkey
Keycode
Was mach ich denn da?
Key
Code
Oh.
Sollte jetzt wieder was ordentliches drinstehen.
Wat?
Dann hab ich wieder
irgendwo, irgendwo
nen Komma oder so vergessen.
Es ist, ach alter
JavaScript, please.
Okay, es liegt auf jeden Fall da drin.
Ach hier.
Tja, ne.
Was ist denn daran jetzt schon wieder verkehrt?
JavaScript.
Sieht's irgendjemand, wo ich was vergessen hab?
Wo hab ich denn wieder was vergessen?
Ah, ich weiß
woran das liegt. Ich hab das hier oben schon
mal. Oh man, bin ich
doof.
Ich hab das hier oben schon mal. Das muss hier rein.
Debated.
Haha.
Äh. Äh.
Achso. Ja, Moment.
Ich muss das ja noch ändern.
Ich muss ja im HTML jetzt noch sagen.
Dings.
Form.
Wie hab ich's genannt?
Hotkey. Input. Format.
Alter, was willst du?
Oh Gott. Ich. JavaScript. Ich krieg Anfälle.
Wo ist denn das Problem jetzt schon wieder?
Bloop.
Muss man da vielleicht Klammern dahinter machen oder so?
Was?
Was genau ist dein Problem jetzt?
Wenn ich das weg mach, ist doch
okay, oder?
Ne. Moment.
Ah.
Oh man.
Das ist ne Qual teilweise.
Okay.
Okay, das funktioniert.
Ich bin beruhigt. Das funktioniert.
Jetzt muss man das nur noch ordentlich formatieren und dann können wir's
zum Server schicken. Meine Güte.
Ah.
Das sieht man nicht, wenn man da draufklickt.
Okay. So.
Wie können wir das jetzt ordentlich formatieren?
Wir haben jetzt ja hier diesen ganzen Mist
in dieser
Form drinnen stehen.
Wie formatieren wir das jetzt?
Also wir wollen ja als Output sowas hier haben.
Control plus B oder so.
Zum Beispiel, ne?
Sowas wollen wir hier. Je nachdem, was da eingetippt wird.
Also.
VSCode für
Visual Studio für JS.
Warum machen wir das eigentlich nicht?
Die letzten Streams haben wir immer JavaScript
in Visual Studio Code gemacht.
Weiß auch nicht, warum ich das jetzt grad
in Visual Studio mach.
Okay, wie formatieren wir den Campaign jetzt ordentlich?
Also man könnte
man könnte sowas hier machen. Irgendwie so
Template String ist jetzt ja neu.
Bleeding Edge.
JavaScript Shit.
Sowas hier nach dem Motto.
Wegen dem Backend.
Ja, aber die Version 1 haben wir auch
das Frontend in VSCode
gemacht.
NoSkiller, das ist mir zu umständlich.
Das muss bestimmt noch irgendwie schöner gehen.
Also ich meine, das naheliegendste,
was mir einfällt, ist, dass ich hier
Hotkey, Control
Control
Wenn Control gesetzt ist,
dann machen wir
Control plus
als String.
Wenn nicht, dann nicht. Aber das ist doch hässlich,
oder?
Also ich meine, es sollte prinzipiell schonmal funktionieren.
Wenn ich jetzt reingehe und Control drücke, steht
Control plus da. Seht ihr? Und es funktioniert
auch vom Prinzip her.
So.
Würde die Hotkeys in ein
Array speichern und dann einfach... Oh, das ist
eine schöne Idee.
Das ist eine schöne Idee.
Dann heißen die Dinger auch gleich
richtig.
Wobei, das nimmt sich nicht so viel, ne?
Ich meine, wenn ich jetzt ein Array machen
will, also irgendwie was ich
tempf. So, und wenn ich da jetzt
Dinger reinschreiben will, was würde ich denn da
reinschreiben? Da würde ich jetzt ja auch wieder
Hotkey, da würde dann da Falls drinnen stehen.
Hmm.
Was könnte man da draus machen? Da würde dann Hotkey
Code?
Das heißt, ich könnte, ich filter jetzt
einfach alles raus, was Falls...
Ne, dann weiß ich aber eben nicht mal, was das gewesen ist.
Also ich müsste, ich müsste
jetzt hier schon gucken.
Also ich müsste, ich, ich, ich muss sowas
hier machen im Prinzip.
Ich muss im Prinzip sowas machen.
Oder gibt es in JavaScript sowas wie ein
C-Sharp Name of, dass ich quasi
sagen kann, ich mache jetzt mal
C-Sharp Style, sowas hier.
Und das dann nur, wenn
das true ist?
Genau, Tommy.
Wir sind gerade auf die gleiche Idee gekommen.
Ähm.
Na, da
fällt mir gerade keine gescheite Idee,
fällt mir gerade nichts, nichts Gutes ein, so.
Also ich meine, so funktioniert
das ja, aber das ist halt, das sieht
wieder, aber nachdem das da unten schon hässlich aussieht,
machen wir es da oben auch nochmal hässlich. Wir können uns ja dann
überlegen, wie wir es schön machen. Also sagen wir
jetzt hier erstmal.
Okay, machen wir es nochmal mit Control.
Ähm.
Du hast keine Ahnung von Programmieren, aber das hier ist unterhaltsam.
Das ist schön, wenn dir das gefällt,
das ist nice. Vielleicht,
vielleicht hast du ja irgendwie eine Idee,
oder wenn es dich interessiert,
ich meine,
wenn man
so die beste Motivation
was zu lernen, wenn es einen interessiert,
ist es eigentlich immer, wenn man
quasi vor irgendeinem Problem
steht und sich überlegt, wie könnte man das jetzt lösen.
Und vielleicht stehst du irgendwann mal vor einem Problem
und sagst hier, jetzt muss ich auch
JavaScript Zeug basteln.
Oh, jetzt werden aber die, oh.
Vom Prefix
out. Wie soll ich
das eigentlich aussprechen?
Prefix out, oder
Prefixer
UT, oder, warte mal, jetzt sag mal,
wie das richtig ist. Aber jetzt, oh, jetzt wird es
hier krass, was er geschickt hat.
Das ist mir zu JavaScript Style.
Was macht das hier überhaupt?
Flag
Hotkey Control.
Also es ist dann Flag True
oder False. Name Control.
Ach, das ist doch
ganz hübsch. Wobei,
das auch nicht viel kürzer wird, ne?
Und dann filtern wir
nur die, die mit dem, mit dem
Nee, das
funktioniert nicht.
Dann ist ja Key, achso, weil Flag hier schon
auf True ist, okay.
Dann sind alle nur noch drin, die auf True
sitzen und dann sagen wir, und dann mappen
wir uns die,
dann schmeißen wir die Flags wieder
raus und danach joinen wir es mit einem Plus.
Kann man machen,
aber ist das wirklich so viel
schöner als so?
Ist das Programm kostenlos? Ja, klar.
Kannst du auf GitHub dann
ach, Visual Studio Code ist auch kostenlos.
Und Visual Studio selbst, die Community
Edition ist auch kostenlos mittlerweile.
Aber ich
also ich muss sagen, das finde ich,
das ist eine schicke Idee hier.
In der Kürze liegt die Würze.
So, ähm
Warum rückst
du das jetzt so scheiße ein?
Visual Studio,
mach keinen Scheiß.
Ah, der macht das, weil das Komma
wahrscheinlich fehlt, ne?
Das macht er, weil das Komma fehlt.
Alt-Shift
Control-Win
Bleib da!
Filter, also
ich find's, ich find's hübsch.
Beste, bester Name übrigens, immer
Temp, alles Temp nennen.
Achso, ja klar.
Geht ja auch nicht.
Keycode. Aha.
Nice.
Moment.
Moment, was war das? Achso.
Vielleicht sollten wir die Dingheit's doch richtig nennen, hä?
Aber das gefällt mir,
das ist ganz hübsch.
Control-Alt-Shift-A
A resettet?
Oh, das ist echt, das ist nice.
Okay, funktioniert gut.
So.
Jetzt brauchen wir nur noch Keycode-to-Character.
Äh, JS
Keycode-to-Char.
Da geht's bestimmt nirgends.
Get character value from Keycode.
From Charcode.
Aha.
String from Charcode.
Weil
JavaScript.
Dieses Einrücken.
Ich krieg die Krise.
Visual Studio, lass meine Einrückung
in Ruhe.
Äh, aber, ich mein,
das funktioniert, ne?
Ups.
Was ist das?
Was ist das?
Das kommt, wenn der Keycode 0 ist.
Ah!
Einrückung!
Kann man da, 0?
Wenn es 0 ist,
dann wollen wir false haben
und wenn es nicht 0 ist,
äh, umgedreht.
Das hätt's besser funktioniert.
Okay, funktioniert besser.
Ja, nice.
Nice.
Guckt, jetzt können wir,
jetzt können wir,
jetzt können wir,
jetzt können wir, äh, Keys capturen.
Also, wenn das jetzt irgendeiner als Hotkey haben will,
sagen wir zum Beispiel, er möchte
Ctrl alt
Z. Bam! Funktioniert.
Das ist cool.
Hotkey.key wird nicht funktionieren,
weil wir speichern uns den Key ja nicht.
Wir speichern uns ja nur den Keycode.
Ich weiß nicht, schön finde ich's irgendwie auch nicht.
Vor allem das hier nicht.
Ähm, okay.
Ich probier das jetzt nochmal kurz aus,
wie ich's am Anfang machen wollte.
Also sagen wir,
Hotkey.
Und dann müssen wir's gleich noch zum Server übertragen.
Da bin ich mal gespannt,
wie das funktioniert.
Also Hotkey alt, wenn das gesetzt ist,
dann soll das alt sein.
Gibt es, sagt mal,
gibt's in JavaScript so einen Operator,
wo ich sagen kann,
es gibt ja so einen
so einen
Ternary Operator, den gibt's ja fast jeder
in der Programmiersprache. Also sprich, dass man sagen kann,
wenn das, also quasi ein
if-else in Kurzform.
Also sprich, wenn
Hotkey alt true ist,
dann nehme den Text, ansonsten nehme ich keinen Text.
Gibt es einen Operator, wo ich sagen kann,
also,
ohne das else,
was ist hier der Unterschied zwischen Key und Keycode?
Äh, Key ist
der Charakter und, wobei auch nicht,
so richtig, das ist halt JavaScript-Logik, ne?
Und Keycode ist halt der,
sagen wir mal sowas wie der ASCII-Code,
was wahrscheinlich nicht 100% stimmt.
Ähm,
in Key steht dann zum Beispiel auch ein großes A drin,
obwohl der Keycode 57 ist,
was keinen Sinn ergibt.
Weil 57 ein kleines A ist.
Aber JavaScript, da müssen wir uns
schon mal keine Gedanken drüber machen.
Ähm, kann man, kann man hier sowas machen?
Also zum Beispiel sowas wie
true oder oder das?
Nee.
Das ist klar, das ist dann true, weil das erste...
Ach, das ist erlaubt.
Das darf man weglassen, oder was?
Und ernsthaft?
Darf man das wirklich weglassen?
Das macht's aber auch nicht schöner.
Ja, mit false,
ja, mit false brauchen wir's nicht.
Brauchen wir's ja mit true.
Also könnte man das quasi sagen.
Not alt
oder
oder alt? Oh, das ist
durch die Brust ins Auge.
Ja, genau die
gleiche Idee hatte ich auch. Scheiße, ey, wenn das jetzt
funktioniert, ist das das hässlichste, was ich, glaube ich,
seit langer Zeit gesehen hab, ja.
Okay, mal gucken, ob das
funktioniert. Fuck, das
funktioniert. Oh!
JavaScript!
Monka ist...
Aber nicht... Okay, das waren wir ja zuhause.
Nice, nice.
Control.
Vielleicht fällt uns da noch
irgendwas schöneres ein.
Shift.
Das ist ja so schön.
So eklig.
Shift.
Win.
Win.
Win alt.
So, und als letztes
brauchen wir das Ganze noch.
Wenn not
Keycode.
Keycode.
Oder? Nee.
Einfach nur Keycode.
Weil wenn null, dann sollte
er doch nichts anzeigen. Oder?
Das soll schöner sein als die Android-Lösung.
Ach, ich weiß nicht.
Mir gefällt beides nicht so richtig.
Ja. Geht.
Das ist sehr schön.
Das ist...
Ein nices JavaScript ist
das. Moment.
Ich bin ja auch dumm.
Das ist immer noch das gleiche, ey.
Lol.
Ich wollte nämlich grad sagen, das kann überhaupt nicht funktionieren.
Wat?
Oh nee.
Das funktioniert doch nicht.
Das funktioniert
doch nicht. Wir haben uns die ganze Zeit
das Falsche angeguckt.
Lol.
Okay. Also.
Also doch.
Also doch.
Bam.
Wir verschönern das ja immer mehr grade.
Ich glaub ich bleib doch bei ner Array-Lösung.
Moment.
Jetzt haben wir wieder das gleiche Problem.
Oh, krass.
Ein nicer JavaScript-Code ist das.
Oh, hab ich das Plus hier irgendwo vergessen?
Ah.
Okay, ich glaub wir bleiben wirklich bei der Array-Lösung.
Aber es funktioniert.
Es funktioniert.
Also wir können jetzt sagen, also wir können jetzt den
Escape resettet auch. Wir können den ganzen
Krempel jetzt capturen. Also.
Windows-Taste.
Muss natürlich wieder reinklicken. Control.
Und keine Ahnung.
M. Funktioniert.
Sehr schön.
Kann man Template-Strings
Zeilen und Brüche machen?
Wahrscheinlich nicht.
Die sind dann mit drinne.
Da muss es doch irgendwas schöneres geben.
Da muss es doch irgendwas.
Da muss es doch irgendwas.
Irgendwas.
Gibt's denn sowas wie
Name-Off in JavaScript?
Was? Bevor sie fort...
Ja, ja, ja. Ist gut.
Ja, genau.
Was?
Ja, das ist typisch JavaScript.
Da basteln sie eine eigene Funktion, die so heißt und sagen
das ist jetzt genau so wie vorher.
Ah.
Moment.
Ich hab ne Idee.
Kann das sein?
Kann das sein?
Warte. Google Chrome und Chromium.
Moment. Google...
Google... äh...
So viel Browser. Chrome.
Chromium.
Firefox. Und jetzt haltet euch fest.
Edge.
Und Internet Explorer.
Und...
Hab ich sonst noch was drauf?
Und Opera.
Ne.
Und... hab ich noch irgendwas? Safari.
Ne.
Ich glaub, sonst hab ich keine Browser mehr zu bieten.
Wie war...
Ne, hab ich auch noch drauf.
Was könnte ich noch drauf haben?
Ich glaub, das war's.
Schonmal Qt-Browser getestet. Ja.
Wenn man auf Tastaturbedienung steht, ist das ganz nice.
So, jetzt haben wir alles.
Jetzt haben wir alles auf.
Wir brauchen die Plus nicht.
Wir machen sie gleich wieder zu.
Wisst ihr, Edge ist so ein typischer Fall
von...
Ist eigentlich ganz gut, aber nicht
so geil, dass man
Chrome und Firefox nicht mehr verwenden will.
RAM ist am schwitzen.
RAM ist...
Wollen wir mal gucken?
Wollen wir mal gucken?
Wollen wir mal gucken, wie sehr der RAM schwitzt?
Hohoho!
Einfach mal 8 GB weg!
Einfach mal 8 GB!
Ich mein, das ist jetzt ja nicht so, dass wir
wahnsinnig viel auf hätten, ja?
Links...
Naja...
Wird gar nichts anderes mehr gehen.
Aber...
Man beachtet ja auch immer mal wieder 3 Netzwerkanschlüsse.
Ähm...
Aber ist doch eigentlich ganz nice.
Wie ihr einfach im Eidl 11% braucht.
Aber 8 GB...
Ich mein, wir haben im Endeffekt
nicht viel auf, ne?
Okay, mal gucken, wie viel RAM
frei wird, wenn ich den Krams hier zumache.
Nix. Das sind tatsächlich
die Browser, die den
Kram fressen.
Geil.
Wir gucken mal.
Man kann sich das doch irgendwie anzeigen lassen.
Memory.
Okay, OBS frisst, Visual Studio frisst,
Chrome frisst,
der NT Malware Service frisst und
Chromes fressen.
Das ist halt auch mal Ratzfatz heutzutage.
8 GB weg. Für nix? Für wirklich nix?
Okay.
Ähm, es gab gerade noch eine Frage zum Browser.
Was benutzt du lieber? Chrome oder Firefox?
Beides. Beides.
Ähm, da muss ich ein bisschen ausholen zu.
Prinzipiell
benutze ich lieber
Chrome. Aber
Firefox hat eine Sache, die gibt es für
Chrome nicht und das ist die...
die Leiste
hier oben. Jetzt werdet ihr euch natürlich denken,
wieso? Chrome hat doch auch eine Leiste oben.
Ja, das ist ein ganz schöner Unterschied. Die Leiste
von Firefox durchsucht
standardmäßig, also wenn ich jetzt hier irgendwie sage
Meme Board, so, durchsucht
standardmäßig Favoriten, History,
Suchergebnisse, also alles
im Endeffekt, ja, wo ich mal jemals gewesen bin
und zeigt sie mir an.
Die standardmäßige
Leiste von Chrome
macht das nicht. Die macht das eh nur
gut für Seiten, die ich oft besuche und in letzter Zeit
besucht habe. Und
es gibt für Chrome
kein Add-on, was das so
schön hinkriegt wie Firefox und so gut integriert.
Es gibt so ein paar Startseiten
Add-ons,
die ähnliche Sachen machen, aber
das ist not even close
zu der Leiste von Firefox.
Deswegen verwende ich
an sich vom Browser her Chrome lieber,
aber dank der Leiste, und das ist eigentlich
wirklich das einzige, ist Firefox für mich
immer noch mein Lieblingsbrowser.
Was läuft bei dir
auf der Firewall? PFSense oder
IPFire? Was sagt ihr
zu RouterOS? Also früher
hatte ich IPFire, ganz früher.
Das ist schon eine ganze Weile her.
Jetzt aktuell habe ich OpenSense,
das ist gerade PFSense, OpenSense, kommt aufs gleiche raus.
Und
allerdings
werde ich das, und das passt, ist eigentlich witzig,
dass du das gerade sagst, das werde ich jetzt
demnächst ablösen, durch
eine Mikrotik, durch einen Mikrotik-Router
auf dem RouterOS läuft.
Ich habe eine Idee, ich wollte es gerade nochmal ausprobieren.
Wo ist denn das Problem?
Kann ich denn kein Objekt zurückgeben?
Moment.
Das funktioniert? Und das funktioniert
nicht. Ah, das ist ja doof.
Das gefällt mir alles
nicht.
Alter, was ist das für Musik?
Wir müssen ja immer
labern müssen, damit es weiter zwischen...
Moment.
Ich klicke gerade immer...
So.
Ich muss noch so was wie Name aufgeben.
Objekt-Keys.
Ja!
Hey, das ist keine schlechte
Idee. Warte mal,
da kann man doch was draus machen, oder?
Objekt-Keys, Hotkey.
Was, was
kommt denn da raus? Das muss ich mir jetzt mal ausgeben
lassen.
Vielleicht können wir das ein bisschen verschönern.
Achso, das sind nur die
Keys, ja. Okay.
Wo sind die Namen? Das bringt mir ja nichts.
Ach, das ist doch...
Ach, das ist hässlich, ey.
Okay, dann lasse ich es erst mal so.
Wir lassen jetzt erst mal die...
Da müssen wir uns aber noch was ausdenken.
Ah, ich kann ja mal schreiben.
Return Temp. Immer Temp.
Temp ist bester Variablename.
Dicht gefolgt von I und J und X.
Irgendwelche Elektro-Bros
hier. Nope.
Gebrauchtes Oszilloskop.
Oh, da hast du Glück gehabt. Also die Dinger, ein ordentliches
Oszilloskop ist brutals
teuer.
Also für ein richtig gutes kannst du
fünfstellig ausgeben.
Vierstellig kannst du auch wahrscheinlich
schon was Gutes kriegen. Aber ich weiß nicht, ob die
Dinger drunter was taugen, ey.
Das ist Schweinertreuer, der Kram.
Aber ich kann da leider nichts zu sagen. Großartig.
So.
Und wir müssen uns das nächste Mal dann irgendwann überlegen,
wie man das hier noch ein bisschen schöner macht. Das ist hässlich.
So. Jetzt probiere ich den Kram noch mal kurz zum
Säuber zu schicken.
Hast du das Memeboard nicht zur E3 angefangen?
Ja, zwei Wochen lang, bis es funktioniert
hat für mich. Und danach habe ich nicht weitergemacht.
Und jetzt machen wir es mal ordentlich, so dass man
das auch mal veröffentlichen kann.
So. Moin.
Panzai.
Übrigens danke wieder für die ganzen Follows.
Ich guck nochmal schnell rein.
Und zwar.
Wer ist denn hier neu am Start heute? Der Gamecrafter.
SirVanDepper.
Chef08.
Gorgor.
Brauerberg.
Brauerberg.
Brauer. Brauerberg.
Gemuzter.
Wärts8.
Lion58.
XLDarion.
Und Tenyuch.
Und der MrBeasy ist auch am Start.
Moin.
Okay. Jetzt muss ich mal kurz in mich gehen.
Jetzt wollen wir den ganzen Krempel an den Säuber schicken.
Ja.
Okay.
Also.
Wir haben die richtigen Daten hier drinnen
stehen. Also die richtigen hier in unserem
Hotkey
Forms
Hotkey.
Da müssen wir jetzt unsere Send-Funktion
rein. Upload.
Und jetzt müssen
wir Trick 17 machen.
Weil.
So wie ich das jetzt sehe ist das hier ein ganz normaler
Teil von unserer Form.
Der mit
Uploaded wird. Und.
Es würde
quasi
das hier mit Uploaded werden.
Also sprich das was wir für das
Ups.
Das was wir für die
Anzeige auch ausgeben.
Also das würde mit Uploaded werden.
Das heißt.
Wir müssen es jetzt aus dem Form.
Aus der Form.
Beim Uploaden wieder löschen.
Wenn ich es finde.
Alter wo ist es denn da.
Wir müssen es wieder löschen und dann wieder hinzufügen.
Und zwar als.
Ähm.
Ja halt als wie es hier oben drinnen definiert ist.
So.
Also das heißt vor dem Upload sagen wir jetzt hier.
Formdata.
Remove.
Nein. Delete. Ja.
Delete. Und das Ding heißt.
Glaube ich einfach.
Nur.
Was haben wir da.
Name. Text. Text to speech.
Hotkey habe ich wahrscheinlich einfach nur genannt.
Hotkey.
Ok das löschen wir jetzt.
Und dann.
Fügen wir es wieder hinzu.
Allerdings. Nicht das was ursprünglich
drinnen stand.
Sondern.
Unsere.
Die Details die wir gespeichert haben.
Also was ist das.
Popup.
Hotkey.
So und das können wir jetzt nicht einfach so anhängen.
Weil der Server wird das wahrscheinlich.
Als JSON in der Form.
Nicht wirklich.
Kapieren. Vermute ich mal.
Und umwandeln.
Aber wir können das mal ausprobieren.
Ob das funktionieren wird.
Das würde mich sehr wundern wenn das geht.
Hallo wie gehts der Katz.
Der gehts wieder besser. Der Katz ging es richtig schlecht.
Zwei Wochen lang.
Und ich hab die ja erst ein halbes Jahr.
Der Katz ging es richtig schlecht.
Die hat rumgekotzt die ganze Zeit.
Ähm.
Deswegen bin ich gestern auch rumgerannt.
Hab geguckt ob sie wieder kotzt. Hat sie aber nicht.
Wir waren irgendwie gefühlt 5 mal beim Tierarzt.
Weil die hat quasi eine Woche nichts gefressen.
Nachdem sie so viel rumgekotzt hat mal.
Und.
Ich hab ihr dann immer auch versucht so Kleinzeug zu geben.
Und sie wollte nicht. Sie wollte nicht.
Dann waren wir beim Tierarzt.
Und dann hat sie erst mal noch eine Infusion gekriegt.
Weil die ist ja auch älter.
Die hat ja auch irgendwelche Nierenprobleme.
Und sie hat Infusion gekriegt.
Dann hat sie noch.
Ähm. Appetitanregerzeug gespritzt gekriegt.
Und. Also massig Zeug.
Und seit gestern.
Also quasi seit 2 oder 2,5 oder fast 3 Wochen.
Wo sie jetzt kaum was gefuttert hat.
Nichts bis wenigstens.
Ähm.
Seit gestern hat sie wieder angefangen.
Aber natürlich mit Trockenfutter.
Weil meine Katz. Die futtert ja am liebsten Trockenfutter.
Ja sie hat keine guten Zähne.
Und sonst was.
Aber Trockenfutter.
Muss. Was auch immer.
Und.
Gestern hat sie wieder angefangen zu fressen.
Und heute hat sie schon deutlich mehr Hunger.
Heute waren wir nochmal beim Tierarzt.
Die hat nochmal eine Infusion gekriegt.
Und nochmal ein bisschen Schmerzmittel.
Und gegen Entzündung und Gedöns und alles.
Die ist vollgepumpt.
Mit Zeug.
Und anscheinend hat sie wieder Hunger.
Und jetzt muss ich bloß gucken, dass sie nicht zu viel frisst.
Weil sonst kotzt sie gleich wieder.
So. Also das wird so wahrscheinlich nicht funktionieren.
Also wenn ich einfach da das Jason Ding hinten dran hänge.
Das glaube ich nicht.
Dass das funktioniert. Aber wir können uns das ja mal angucken.
Wir machen da jetzt erstmal einen String draus.
Um mal zu gucken.
Wie alt ist deine Katze jetzt?
Ähm. Das weiß man nicht so genau.
Es gibt wieder eine Katze.
Es gibt wieder eine Katze.
Ja. Ja ich hatte jetzt ja.
Also nachdem die Alte ja gestorben ist.
Hatte ich jetzt ja ein Jahr keine.
Ich kann das doch mal zeigen.
Ich hab doch hier auf Twitter immer.
Ja.
Das ist die Neue.
Also die Neue. Die habe ich jetzt seit einem halben Jahr.
Da guckt sie so grimmig.
Die guckt eigentlich gar nicht so grimmig.
Aber wie gesagt.
Das ist noch ein Tag wo sie nicht viel gefuttert hat.
Das ist noch vorgestern.
Was ja auch geil ist. Katzenlogik.
Super bequem hier. Aber wo sitzen wir daneben?
Ja.
Das ist sie.
Das ist die Neue.
Ihr werdet nicht glauben. Hier.
Da hat sie noch gefressen.
Da hat sie noch gefressen. Mau. Gib her.
So.
Und die Alte. Die Alte kennt ihr ja noch.
Das ist auch die Neue.
Gleich breit gemacht.
Ähm.
Das ist die Alte.
Das ist die Alte. Oh. Die war so niedlich.
Das ist die Alte.
Wo sie hier meinen Schrank inspiziert hat.
Hehehe.
Ja.
Das ist hier wo sie eingeschläfert wurde.
Das gucken wir uns jetzt nicht an.
Ähm.
Ja.
Da ist sie mit ähm.
Mit Amiibo am Start.
Und es gibt sogar
irgendwo einen
auf meinem Bullshit2 Channel
auf dem ich eigentlich nie was hochlade.
Alter. MonkaS.
Ja.
Das ist die Alte.
Hallo.
Mau. Mau.
Hehehe.
Ja. Das ist die Neue.
Ja und die Frage warum ich mir ne Alte geholt hab.
Weil die gemütlicher sind.
Und weil so wenige Leute alte Katzen
haben wollen.
Und ich mein es ist doch doppelt bescheuert wenn du quasi
ne.
Wenn du schon eh ne alte Katze bist und nicht mehr
20 Jahre alt wirst. Ja.
Und dann noch zusätzlich 20 Jahre alt wirst.
Und dann noch die letzten paar Jahre im Tierheim hocken.
Ist doch kacke.
Ja.
Und außerdem sind alte Katzen.
Da weißt du was du kriegst.
Darf man nicht unterschätzen. Ja.
Du weißt was Sache ist.
Also sprich.
Wenn die schlecht drauf ist.
Da weißt du das ist anscheinend immer so.
Und wenn die gut drauf ist.
Also ne. Du weißt was du kriegst irgendwie bei ner alten Katze.
Die macht von heute auf morgen nicht mal auf einmal was anders.
Ja.
Wir haben die auch aus dem Tierheim.
Wir waren 3 oder 4 Wochen.
Waren wir immer wieder da.
Haben die besucht.
Also sprich die hat sich ja schon dran gewöhnt.
Ok. Ich wollte jetzt nochmal gucken.
Ob das jetzt.
Was da überhaupt ankommt.
Shortcut.
Wir dürfen das übrigens nicht Shortcut nennen.
Sondern.
Wir müssen es.
Wie kommt das Ding auf die Idee das es.
Was gibt was Shortcut heißt.
Hä.
Ich muss mal mal neu.
Compilern.
Die Autovervollständigung.
Die Intellisense Geschichte.
Klar. Ok.
Gucken ob es jetzt funktioniert.
Hä.
Moment sag mal.
Ach. Ich bin in der falschen Datei.
Bin ich bescheuert.
Ah.
Bin ja auch dumm.
Falsche Meme Datei.
Das ist die vom.
WPF Frontend gewesen.
Da ist der Richtige.
Oh. Shortcut weg.
So. Aber das wird jetzt nicht funktionieren.
Das muss ich schon noch ein bisschen aufbröseln.
So.
Bildchen.
Omega Lull. Upload.
Oh ne. Uiuiuiui.
Bäh.
Achso. Ja. Moment. Ich muss die Datenbank nochmal wegschmeißen.
So.
Muss hier die Tables neu anlegen.
Muss mein Windows neu aufsetzen.
Scheiße. Ja.
Warum?
Ich glaube ich habe Windows schon ewig nochmal neu installiert.
Eigentlich hält es doch ganz gut mittlerweile.
Wie hat das jetzt funktioniert?
Ähm.
Ich hätte mal einen Breakpoint setzen sollen.
Weil.
What?
Breakpoint.
Breakpoint.
Breakpoint.
Undefined.
Ja.
Das war klar, dass das so nicht funktioniert.
Das wäre auch zu schön gewesen.
Wenn wir quasi einfach ein JSON Objekt in der Form hätten hochpumpen können.
Und der hätte sich dann quasi übersetzt so.
Das wäre nice gewesen.
Aber es funktioniert nicht.
Irgendwas funktioniert nicht.
Nur Blue Screen.
Vielleicht hast du ja auch Hardware Probleme.
Und es ist am Windows neu installiert und es ist gar nicht behoben.
Okay.
Hotkey.
So. Und jetzt muss man komische ASP.NET Syntax einhalten.
Dass der auch erkennt,
dass im Frontend Hotkey
im Backend bei der Meme Klasse
Hotkey gemeint ist.
Das ist ein bisschen
schwierig.
Wie man den ganzen Kram nennen muss.
Also ich glaube man macht das mit einem Unterstrich.
Oder mit einem Punkt.
Dazwischen das Ganze
zu trennen.
JSON Stringify.
Ja bringt ja nix.
Da kommt es als JSON auf dem Server an.
Aber der weiß ja an der Stelle nicht was er damit machen soll.
Also guck.
Also das ist die Methode die aufgerufen wird.
Wenn man die Form abschickt.
Also sprich.
Man kriegt das File.
Also.
Ich habe es jetzt hier gerade nicht auf.
Im Endeffekt das Bild kriegt man.
Hier in dieser Files Collection.
Und man kriegt quasi schon ein fix und fertig geparstes Model.
Sprich.
Das passt dann hier aus der Form raus.
Ähm.
Hier rein.
Das heißt das muss ich nicht mehr selbst machen.
So. Und er hat jetzt natürlich keine Ahnung.
Wenn in der Form.
Wenn in der Form jetzt auf einmal hier ein
JSON Ding drin ist.
Für Hotkey.
Dass er das dann da irgendwie
reinschreiben soll.
Das checkt er nicht.
Also ich meine mit Stringify funktioniert es an der Stelle.
Weil es ein String ist.
Aber das wollen wir ja nicht.
Wir wollen ja das es ein Meme Objekt.
Also ein Hotkey Objekt ist später.
Also wir können das an der Stelle mal mit Stringify machen.
Aber das bringt uns am Ende nix.
Da haben wir jetzt halt ein String vor.
Da können wir ein paar so ein Objekt daraus erstellen.
Was geht.
Was aber doppelt gemoppelt ist.
Weil das kann ja ASP.NET für mich machen.
Wenn ich den Krams ordentlich poste.
An den Server.
Ah Moment.
Ich hab den Breakpoint vergessen.
Warum ist es undefined?
Der Rest hat funktioniert.
It's Hotkey.
Gucken wir mal.
Warum das jetzt nicht funktioniert.
Große Kleinschreibung.
Wird es wahrscheinlich nicht dran liegen.
Hm.
Achso.
Ja ist klar warum es nicht funktioniert.
Weil ich keine Hotkeys eingetragen habe.
Haha.
Eigentlich richtig dumm.
Natürlich funktioniert das nicht.
Doch es hätte funktionieren müssen.
Also zumindest so müsste es funktionieren.
Ja.
Ja so funktioniert es.
So ist Control B.
Aber das wollen wir ja nicht.
Also wir wollen es ja nicht als String.
Das ist auch sowas.
Das kannst du nur im Programmierstream sagen.
Warum hat das Stringified nicht funktioniert.
Wie sich das anhört.
Das ist fast irgendwie irgendwas unanständiges.
Und heute schon Stringified?
Warum geht denn das nicht?
Ah.
Ich noob.
Weil es das falsche Objekt ist.
Ah ja ja.
So ich guck mal in den Chat.
Wahrscheinlich habt ihr das längst schon erkannt.
Doch doch das geht anders.
Wollte es eigentlich bloß sein.
Dass es mit ähm.
Äh.
Ist das jetzt abgekackt oder was?
MonkaS.
Es hängt.
Ja guck.
Das funktioniert jetzt.
So nee.
Aber wir können das ja anders machen.
Wir können das ja ASP.net für uns parsen lassen.
Alles.
Und zwar können wir jetzt sagen an der Stelle.
Anstatt von JSON zu Object zu JSON und zurück.
Äh wo sind wir?
Wenn wir das als Form Data verpacken.
Anstatt als JSON Stringer.
Dann sollte das auch so funktionieren.
Ich probier es jetzt an der Stelle einmal noch aus.
Ob das vielleicht tatsächlich.
Ob er vielleicht das doch hinkriegt.
Wir haben es in der falschen Klasse gemacht.
Aber das vielleicht doch hinkriegt.
Dass das direkt so parsen.
Aber ich glaub es ja nicht.
Dann müssen wir nochmal die Datenbank wegschmeißen.
Was soll das Meme Tool nachher können?
Beziehungsweise wofür ist das?
Ich zeig es dir gleich.
Ähm.
Oh ich hab den Breakpoint wieder vergessen.
So ein Noob.
Warum mach ich die Breakpoints auch immer weg?
Aber in der Ausgabe sollte es irgendwo drinnen stehen.
Steht es aber nicht.
Hier sollte es stehen.
Das kann er nicht parsen.
Das heißt ich muss das ordentlich als Form Data schicken.
Also was das Meme Tool macht.
Du kannst hier.
Wo ist das Web Interface?
So.
Du hast hier ein Web Interface.
Das kannst du auf deinem zweiten Rechner anmachen.
Auf deinem Hauptrechner.
Oder auf deinem Tablet oder sonst was.
Dort kannst du.
Irgendwelche.
Dir beliebigen Bildchen hochladen.
Was du willst.
Ist eigentlich egal.
Kannst den Text angeben.
Kannst den Text to Speech mit schöner Weep Stimme machen.
Sowas hier zum Beispiel.
Was du willst.
Dann uploadest du das ganze.
Kannst den Hotkey angeben.
Also sowas wie.
Control 0 oder sowas.
Uploadest du das ganze.
Und dann kannst du.
Das als Overlay einblenden lassen.
Und es ist nicht einfach nur.
Overlay was dich aus Spielen.
Oder so rausschmeißt.
Du willst sehen.
Das kann man.
Hier kannst du durchklicken durch das Bild.
Und auch wenn man das.
Selbst wenn das angezeigt wird.
Das crabt nicht den Fokus.
Und der Vorteil.
Dazu.
Also du brauchst dieses Web Interface.
Um schnell Bildchen aufzumachen gar nicht.
Weil du kannst ja.
Einen Shortcut vergeben.
Big Brain.
Und dann kannst du Control 0 drücken.
Und wenn du Control 0 drückst.
Also jetzt habe ich geklickt.
Dann geht das Bild auf.
In der ersten Version funktioniert das auch schon alles.
Aber wir machen das Web Interface jetzt ein bisschen schöner.
Ja und das hat den riesen Vorteil.
Im Vergleich zu.
Reine Lösung über OBS.
Das du die Bilder selbst siehst.
Wir bauen auch noch was ein.
Falls das jemand auch nur im OBS machen will.
Und das du halt ein paar andere.
Spirenzchen rein machen kannst.
Wie Text to Speech und sowas.
Die OBS nicht kann.
Und vor allem.
Also das Hauptfeature.
Warum ich es auch gebaut habe.
Weil ich das selbst brauche ist.
Das man es selbst sieht.
Das ist die Hauptsache.
Weil ich hatte schon so oft.
Den Fall.
Irgendwie keine Ahnung.
Das Zeug angemacht.
Kannst du auch mit dem Hotkey machen.
Und mir ist nicht aufgefallen.
Dass die ganze Zeit den Kack Papagei anhat.
Weil ich selbst sehe ihn halt nicht.
Reis auf Milchreis.
Ja doch.
Ein paar Leute checken es mittlerweile.
Telekom was sich hinter dem Layer versteckt.
Telekom Logo.
Und ein Telekom Logo.
Wo die wir auslachen können.
Wenn mir da irgendwas nicht funktioniert.
Dann können wir sagen Telekom Lull.
Und sowas zum Beispiel.
Könnte ich mir jetzt ohne Probleme.
Wenn ich jetzt öfters mal sagen würde.
Ich würde jetzt öfters mal gerne einblenden.
Telekom Lull.
Dann würde ich mir hier ein Bildchen machen.
Hochladen und könnte ich per Shortcut anzeigen lassen.
Ich würde es selber sehen.
Ihr würdet es sehen.
Und dabei könnte ich noch irgendwie einen dummen Text to Speech Spruch ablassen.
Oder sowas.
Das macht man damit.
So.
Und dazu müssen wir das Zeugs richtig benennen.
Nämlich.
Dürfen wir jetzt nicht die ganze Sache
Stringified hochschieben.
Mal im Chat gucken ob ich was übersehen habe.
Ob der Einzige in den Memes spricht.
Jaja ich weiß.
Wie viele Zeilen Code hat das Meme Tool jetzt?
Also die.
Die alte.
Kannst du gucken.
Die aktuelle Version 1.
Ne die Version 0.2.
Wenn es hoch kommt.
Die ist ja auf Github.
Kannst du dir angucken.
Sieht man aber Github ungefähr wie viele Zeilen Code das hat.
Steht das hier irgendwo?
Wir können mal beim initialen Comet gucken.
Wie viele da drin sind.
Das beste Comet überhaupt.
Ja.
Also es hatte initial 600.
Also lass es mal.
Aber da ist halt auch dein Konfig Scheiß dabei.
Das passt überhaupt nicht.
Guck mal so viel Konfig Müll.
Keine Ahnung 300 oder so.
Aktuell würde ich sagen hat das so.
Keine Ahnung.
Das meiste dürfte dieses Javascript.
Gefrickelt fürs Frontend sein.
Also ich sag.
Keine Ahnung 600 oder so.
Wenn es hoch.
Aber dann ist wirklich alles dabei.
600.
Also inklusive CSS, Javascript.
HTML.
Und restlichen Krams.
So 600 oder sowas.
Aber Line of Code ist eh kein ordentlicher Maßstab.
Deine Dokumentation ist dürftig.
Welche Dokumentation?
Ich habe mich vorher dabei erwischt.
Als ich Comments geschrieben habe.
Habe ich gleich wieder abgebrochen.
Hatte letzte Woche ein C-Shop Seminar auf der Arbeit.
Vielleicht lerne ich hier was.
Du kannst dir.
Es gibt ein Archiv.
Wo du auch die ganzen Programmier Streams findest.
Leider nicht auf Twitch.
Weil man als Non Partner noch weniger.
Platz hat.
Quasi vergangene Broadcasts zu speichern.
Es gibt ein.
MaxFPS.tv
Kannst du machen.
Oder du kannst ein.
Wubblors.tv machen.
Ist die gleiche Seite.
Ist vom Sbarro.
Ist nicht die schnellste Seite.
Aber ich finde es richtig gut und toll.
Dass er das gemacht hat.
Da hat er alle bisherigen Streams.
Die er grabben konnte.
Mit hochgeladen.
Da ist alles da.
Die Seite braucht immer ein bisschen.
Aber dann kann man sich das alles angucken.
Quatsch.
Das ist der aktuelle.
Archiv genau.
Oh da fehlen dem Sbarro.
Aber ein paar Sachen hier.
Aber man sieht schon.
Das meiste ist drauf.
Aber wie gesagt.
Trotzdem ist es ja nice.
Dass er das überhaupt gemacht hat.
Also wollen wir uns jetzt mal nicht beschweren.
Dass jetzt quasi die letzten paar Streams fehlen.
Und ja es ist quasi wie ein Elgato Stream Deck.
Bloß dass man kein Elgato Stream Deck braucht.
Und man quasi einbauen kann was man will.
Rein software mäßig wird es wahrscheinlich.
Rein auf die Funktion konzentriert.
Bildchen anzuzeigen.
Besser als Elgato Stream Deck.
Allerdings ist Elgato Stream Deck ja noch viel mehr.
Deswegen ist eines der Punkte.
Die ich mir aufgeschrieben habe.
Was wir in Zukunft noch machen werden.
Eine Elgato Stream Deck Integration.
Habe ich nämlich schon.
Eine Library auf Github gefunden.
Um das ordentlich zu integrieren.
So und warum ausgerechnet Vue.js?
Es gibt ja so viele Javascript Frameworks.
Ich bin ja kein großer Javascript Held.
Und nachdem ich jetzt schon Anfälle krieg mit Javascript.
Und mit Vanilla Javascript erst recht.
Habe ich gesagt.
Habe ich mal geguckt was gerade so angesagt ist.
Javascript mäßig und das ist halt Vue.js.
Und ich muss sagen.
Damit macht es sogar halbwegs Spaß.
Also das ist schon nicht schlecht.
Also von allen Sachen die ich bisher verwendet habe.
Ist das das Beste.
Ich habe ja noch nicht so viel mit Javascript gemacht.
Aber ich habe mal Ember ausprobiert.
Das ist aber schon ewig her.
Das ist absolut overloaded extrem.
Da verstehst du teilweise gar nicht.
Was es macht was du schreibst.
Habe ich auch ganz kurz ein bisschen.
Angular ausprobiert.
Bin ich überhaupt nicht mit warm geworden.
React ging komplett an mir vorbei.
Wie gesagt normalerweise mache ich wenig Frontend Geschichten.
Wobei ja da React ja quasi.
Der Shit schlechthin ist.
Und Vue ist toll.
Vue braucht man keine extra.
NPM Geschichten.
Oder sonst was.
Einfach Vue include.
Und auf gehts.
Contributions von dir.
Auf dem Account glaube ich nichts.
Das ist ja der Account fürs Streben.
Auf dem Account nichts.
Auf meinem privaten Account habe ich ein paar.
Contributions.
Allerdings nichts bei großartigen.
Bekannten Projekten.
Music please.
Chillstep.
24 7.
24 7.
Livestream.
Chill Ambience.
Kannst auch zurückspulen.
Kannst gucken was das war.
Ja Patrick es wäre nicht schlecht.
Das könnte man dem Separo echt mal eins hinstellen.
So falls ich jetzt noch was übersehen habe.
Schreibt es einfach nochmal.
Man könnte das ja auch auf einem Raspberry Pi laufen lassen.
Meinst du das Archiv oder was?
Ja die Frage ist da eher die Anbindung.
Weil du musst ja Videos streamen davon.
Wie findest du TypeScript?
TypeScript ist super.
Ist das Stringify sicher gegen Injections?
Ja Stringify an sich ist.
Mit Sicherheit nicht sicher gegen Injections.
Injections.
Weil du kannst ja da quasi jeglichen String reinhauen.
Musst halt gucken was du da rein haust.
Und ich bin mir ziemlich sicher.
Das was ich hier fabriziert habe.
Ist null sicher gegen Injections.
Und vor allem.
Ja absolut Best Practice.
So wie man es macht.
Ungeprüft in die Datenbank.
So macht man es.
WTF es hat jemand was Donated.
Ich packe es nicht.
Keine Message.
Ja danke für den Euro.
Falls du eine Message angegeben hast und es rumbuckt.
Schreib es gerne nochmal in den Chat rein.
Äh.
Ist die Musik gerade ab.
Die Musik ist weg.
Ah geht wieder.
Was auch immer.
Memeboard auf dem Raspberry.
Nee.
Das geht nicht.
Das geht nicht.
Weil du brauchst ja die Desktop Anwendung dafür.
Ich glaube das ist.
Ich muss das mal erklären.
Für die Leute.
Die sich die ersten Streams nicht angeguckt haben.
Das Webfrontend.
Was ihr hier seht.
Das ist wirklich nur ein Webfrontend.
Für eine Desktop Anwendung.
Die Desktop Anwendung ist allerdings versteckt.
Und im Hintergrund.
Also guck mal.
Wenn ich jetzt hier Eats anklicke im Webinterface.
Und stellt euch mal vor.
Das ist halt nicht hier auf dem gleichen Rechner.
Ich mache es jetzt hier nur auf dem gleichen Rechner.
Um den zweiten Monitor anzumachen.
Während man streamt oder auf einem Tablet.
So und dann klicke ich.
Dann klickt man Eats an.
Und dann zeigt er hier das Bild als Overlay.
Und das hier ist eine Windows Desktop Anwendung.
Die das anzeigt.
Halt versteckt bis auf das Bild.
Man sieht es auch nicht in der Taskleiste oder so.
Aber das ist äh.
Eine stinknormale.
WPF Anwendung.
Mit verstecktem Bild.
Was im Endeffekt nichts anderes macht.
Dann kann man einfach nur neuliche Bildchen anzeigen.
Deswegen kann das nicht auf dem Raspberry.
Laufen weil.
Es muss ja auf dem Windows System laufen.
Weil man ja dort streamt.
Und dort die Bilder anzeigen lassen will.
Kannst du HTML?
Ich würde mal sagen.
Es reicht was ich kann von HTML.
Also.
Geht so halbwegs.
HTML ist ja auch nicht schwer an sich.
Da muss ich alle paar Jahre ein bisschen gucken.
Was es so neues gibt.
Und dann ist gut.
Wenn ich das ganze Zeit machen wollte.
Sag mal der Stream ist am rumspacken.
Kann das sein?
No Chill.
Es gibt schon seit einiger Zeit.
Ein Windows 10 für Raspberry.
Ja aber das bringt ja nichts.
Du spielst ja nicht.
Auf dem Raspberry.
Der Raspberry ist ja nicht dein Gaming PC.
Auf dem du Bildchen als Overlay anzeigen willst.
Also es bringt dir in dem Fall nichts.
Du willst ja die Overlays quasi.
In deinem Stream anzeigen.
Also sprich.
Wenn du spielst.
Und es passiert irgendwas.
Willst du beispielsweise ein MonkaS Overlay anzeigen.
Und es bringt ja nichts.
Wenn du das auf dem Raspberry sonst wo anzeigen lässt.
Du willst es ja auf dem Rechner anzeigen lassen.
Wo du gerade drauf guckst.
Und wo du gerade spielst.
Ist auch Linux Support geplant.
Naja nachdem es hauptsächlich für Stream ist.
Und für Games.
Es läuft unter Linux.
Also das Webfrontend.
Also diese ASP Anwendung.
Die wird ohne Probleme unter Linux laufen.
Die Windows Anwendung ist halt.
Also die Desktop Komponent.
Ist halt das Problem.
Also man könnte das relativ einfach.
Auch für Linux basteln.
Dann müsste man anstatt dieser WPF Anwendung.
Für die Overlay Bildchen.
Irgendwas mit GTK.
Oder am besten direkt mit X.
Das würde funktionieren.
Mittlerweile läuft ja .NET Core ziemlich gut.
Also könnte man zum Beispiel sagen.
Also ASP.NET.
Und .NET Core zusammen.
Funktioniert wunderbar auf Linux.
Würde ich sogar bevorzugen.
Unter Linux laufen zu lassen.
Als unter Windows.
Man braucht halt noch die Desktop Anwendung.
Für die Bilder Overlays.
Kann das Tool auch.
Animationen.
Es geht so.
Ich zeig dir mal die aktuelle Version.
Die kann nämlich noch ein bisschen mehr.
Ich würde es nicht unbedingt.
Animationen nennen.
Aber sowas in der Richtung.
Oder so.
Kannst du beispielsweise hier Lull Overlayen.
Und dann kannst du es drehen lassen.
Das ist die einzige Animation die es kann.
Und wieder stoppen.
Und Hyper Lullen kannst.
Das wars.
Also so Blödsinn kann man da natürlich noch einbauen.
Ja.
Das Ziel von der Sache die ich jetzt baue.
Ist es erstens ordentlich zu machen.
Also von der zweiten Variante.
Von der zweiten Version ist es ordentlich zu machen.
Und halt auch benutzbar ordentlich.
Also sprich das man ordentliche Shortcuts definieren kann.
Das man das nicht mehr.
Im Dateinamen irgendwie reinmachen muss.
Das man ordentlich suchen kann und sowas in der Richtung.
Hast du ne englische Tastatur?
Nö.
Was passiert wenn man GIFs nimmt?
Dann ist es ein GIF.
Und dann mit GIFs kannst du was richtig geiles machen.
Also mein Lull.
Normales Lull kann jeder.
Lull 3D kann auch noch jeder.
Aber Lull 4D.
Das kann nicht mehr jeder.
Ja das kann man alles noch machen.
Das ist kein Ding.
Aber erstmal müssen die Basics funktionieren.
So. Lull 4D.
Das hat was Hypnotisches.
So eher was Meditatives.
Wenn man da drauf klickt.
Und man sieht hier man kann ja durchklicken.
Das ist das Wichtige daran.
Und dabei brauchen wir jetzt.
Und dabei müssen wir eigentlich noch.
Das hier jetzt in Schleife laufen lassen.
So genug jetzt.
Ich mein wir machen heute.
Null Progression eigentlich.
Was braucht die.
Was braucht die Desktop Anwendung für Ressourcen?
Nicht viel.
Das meiste fressen die Bilder.
Die unoptimiert sind.
Also ich hab hier hier Bildchen drin.
Teilweise mit.
Relativ hoher Auflösung und sowas.
Die fressen ein bisschen was.
Aber ansonsten.
Nicht viel.
60 MB.
So was.
Gucken vielleicht sieht man das ja.
Also das ist jetzt ja.
Der RAM Verbrauch hier ist ja.
Alles zusammen.
Web Anwendung.
Guck mal.
Das ist quasi die komplette Web Anwendung.
Plus die Desktop Anwendung.
Also sprich die Desktop Anwendung ist ja für das Bildchen hier zuständig.
Und.
Das braucht nicht so viel.
Weiß nicht ob man.
Vielleicht sieht man hier irgendwie wie viel nur die.
Moment läuft das Meme Board jetzt doppelt gerade.
Ich mach das alte mal aus.
So.
Also.
Tja.
Wo ist denn die andere App?
Also guck.
Die Web Anwendung braucht halt.
Nicht wirklich was.
Ich finde die andere Anwendung gar nicht.
Um ehrlich zu sein.
Keine Ahnung.
Aber zumindest.
Sieht man hier.
70 MB oder so.
Und das da.
Wir wollen das ja Uploaden.
Ach stimmt.
Ja das kann schon sein.
Klar die läuft hier irgendwo bei unter Visual Studio.
Wo ist sie?
Das ist hier bestimmt irgendwo unten drunter.
Na.
Wie so das da oder so.
Starten wir es mal ohne Debugger.
Äh.
Wo ist denn der passende Knopf dafür?
Ist die Steuerung F5?
Ist es.
Ja das ist jetzt ohne Debugger.
Hm.
Web Anwendung.
Ja.
Keine Ahnung wo die Desktop Anwendung ist.
Die ist hier.
Overrated.
Outdated.
Die sieht man nicht.
Jetzt haben wir ohne Debugger gestartet.
Keine Ahnung.
Ne.
Die Web Application ist das Web Interface.
Es gibt ja noch eine zweite.
Aber es könnte.
Ich ruf ja die.
Ich starte ja nicht beide Anwendungen.
Sondern ich ruf ja die.
Zweite aus der ersten aus.
Ja klar.
Das ist die.
Also guck mal das braucht nix im Endeffekt.
Nix.
Anrahmen großartig.
Das ist der Witz.
58 MB.
58 MB für eine WPF Desktop Anwendung.
Plus.
Ne Web Anwendung mit Datenbank.
58 MB.
Braucht Elektron im Idle.
Beim.
Hochfahren.
Also sprich.
Für Elektron könnt ihr erst mal 200 MB drauf hauen.
So wie zum Beispiel.
Ich zeig es euch mal.
Ne ich zeig es euch nicht.
Ist eigentlich egal.
Der habe ich schon so oft drüber rum geflamed.
Guckt euch mal an zum Beispiel.
Wenn ich dieses komische Nvidia Overlay anmache.
Was schon wieder kaputt ist.
Guckt euch mal an was das für.
Was das frisst hier.
Ich will einfach meine Grafik Settings aufmachen.
Einfach meine Grafik Settings öffnen.
Einfach meine Grafik Settings öffnen.
Darf ich nicht.
Ja aber wenn man jetzt zum Beispiel.
Steam oder so.
Elektronen Zeug braucht viel.
Und das ist halt nix.
58 MB ist absolut top.
Ok Hotkey.
Hotkey.
Hotkey.
Hotkey Control.
So mal gucken ob das jetzt funktioniert.
Mal ausprobieren.
Ausschalten.
Mal ausgeben.
So.
Gucken ob das jetzt klappt.
Ups.
Sind die Bildchen.
Oh.
Hä.
Hallo?
Äh was?
Habe ich es kaputt gemacht?
Ich habe bestimmt einen Syntax Fehler oder so.
Ja klar!
Cannot treat control of undefying.
bei euch oder ist es bei youtube was ihr abspakt zwischendurch ich habe keine frame drops topf
guck mal leute drop frames null bei zweieinhalb stunden das ist schon sehr nice nice hat funktioniert
hat funktioniert also sprich ich kann es ganz upload muss ich noch den ganzen kreis hier
einstellen aber also wir müssen quasi jedes ding jetzt noch einzeln hinzufügen control alt shift
win und keycode und dementsprechend hier alt shift wie oft ich den kram heute schon geschrieben
habe und keycode wobei keycode müssen wir glaube ich nicht zu überlegen wie man das keycode ja
keycode machen wir nur wenn wenn das wenn event keycode auch was drin steht
sonst ist das nix gut jetzt laden wir den ganzen krempel hoch da haben wir das mit erreicht was
wir heute schaffen wollten dass wir nämlich shortcuts capturen können und zum server
hochschieben gucken ob der keycode auch funktioniert aber gehe ich mal von aus
control und n das muss ich mal ausblenden jedes fall ja control ist gesetzt
und und keycode ist 78 kommt alles an auf dem server sehr nice das einzige was wir jetzt noch
mal kurz machen ist wir stellen das hier auf read only den hotkey input den stellen wir auf read
only weil dann haben wir keine autovervollständigung mehr da unten dran nice oder warum er jetzt nichts
anzeigt weiß ich nicht das habe ich irgendwie kaputt gemacht irgendwas habe ich kaputt gemacht
an das eine geht das andere ist kaputt aber ja pech gehabt ich meine sollte es hier mit
eigentlich anzeigen aber das kann ich alles noch das nächste mal basteln also prinzipiell haben wir
es ja erreicht was wir heute wollten wir können sachen capturen und mag nichts mehr anzeigen da
ist irgendwas kaputt hatte mal ich resette das kurz noch mal wahrscheinlich speichert ich glaube
das nicht weil das model nicht stimmt kannst du mir bei html helfen ich schicke dir ein whisper
schreibst doch im chat das ist wenn du mir das im whisper schreibst bringt es ja keinem was
poste das ruhig mal im chat also nicht den ganzen html nur mal den link und so die leute können dann
sich das angucken und ich gucke erst mal dass da auch wirklich nur html dahinter ist und nicht
irgendwelche gbait geschichte ich gehe mal davon aus dass model wird nicht gespeichert weil die
weil das nicht in ordnung ist jetzt mit dem
mit dem hotkey dabei vermute ich mal so gut also für heute fertig aber ich muss sagen ich finde das
echt nice also dass das ist echt cool hier diese geschichte mit quasi rein trecken trocken und dann
capturen lassen so nach dem motto alt und x upload ja okay bild anzeige ist kaputt muss das nächste
mal gucken warum es sich anzeigt
aber als ich doch echt cool ich bin echt zufrieden mit das wir das heute hingekriegt haben und ich
meine das doch echt nice guck mal du kannst jetzt kannst jetzt wirklich irgendwie was weiß ich
allem möglichen miss man kann sagen das war das noch ein bug es ist noch ein bisschen
wenn ich alt g r drücke zeigt er mir an control plus alt hat das wichtigste kaputt gemacht ritt
noch kann ich das ja machen
Noch benutzt ja keiner
Tja
Ja, ich guck mal, was du geschrieben hast
Die Seite geht bei mir nicht richtig
Ah ja
Okay, also wollen wir als letzte
Amtshandlung nochmal dem Anime-Fan
80 helfen
Mit seinem HTML-Zeug
Muss ich das für die Schule machen oder für was ist das?
Machen wir jetzt quasi Hausaufgaben?
Oder für was ist das?
Jo, Max, mal ne Frage
Kennst du ne gute Seite, wo man C-Sharp lernen kann?
Beziehungsweise sie ist gut erklärt
Ja, ja, ja, gibt eine richtig gute Seite
Mit der hab ich damals auch angefangen
Also 2003 oder so
Es gibt nen
Also das ist bestimmt überhaupt nicht mal
Also weitem nicht mal das einzige, ja
Ähm
Aber was gut war
Ist hier das
Das Galileo
Galileo Open
Book C-Sharp
Das ist
Nicht schlecht
Ich hab mit
Ich hab mit der 2005-Version oder 2003-Version oder so was gelernt
Das ist wirklich nicht übel
Damit kann man auf jeden Fall was anfangen
Ansonsten gibt's bestimmt mittlerweile
Hunderttausende
Ähm
Videos, Tutorials, sonst was auf YouTube
Das ist bestimmt viel, viel besser mittlerweile
Als ich den Krams damals gelernt hab
Also im Prinzip das, was der Drevel auch grad empfiehlt
Ist das gleiche
Nicht für die Schule, für dich selbst
So, so
Gibt's ne Beta zum Testen
Es gab von der ersten
Von der ersten Implementierung
Ne Beta-Version, mit der man
Bisschen rumspielen konnte, aber
Ähm
Wir brauchen wahrscheinlich noch ein bisschen
Mach mal Facecam an
Wie gesagt, bei einer Million Abos
Lull
So, dann helfen wir jetzt mal dem Anime-Fan
Anime-Fan 80
Codeshare
So, und was willst du da jetzt
Äh
Was willst du da jetzt
Was möchtest du genau wissen
Ach ne, da gehört noch HTML dazu, ne
Kamera und Schnitt-Referenzen
Ist das so ne
So ne Lebenslauf-Seite, oder was wird das
Die haben das ganze Buch online
Das Buch ist kostenlos, ja
Das ist das gleiche, was ich auch grad gezeigt hab
Das ist, das ist richtig gut
Also wenn man, wenn man was in Buchform will
Ist das Open Book wirklich top
Was genau programmierst du
Ähm, ich zeig's dir
Ich starte mal die letzte Version, die noch funktioniert
Weil die aktuelle ist grad bisschen, bisschen broken
Ähm
Wir basteln
Wo hab ich's denn hier
Wir basteln ein Overlay
Ein Programm, womit man sich auf
Bilder auf Shortcuts legen kann
Und anzeigen lassen kann und ein bisschen sinnlose Animationen machen kann
Machen
Ja, sowas da in der Richtung
Dazu gibt's den Web-Frontend
Wo du
Die ganzen Sachen dann hochladen kannst
Und Shortcuts für vergeben kannst
Und sowas hier, ne
Das hast du hier
Kannste anklicken aufm, aufm
Das ist grade kaputt
Kannste aufm Tablet anklicken, zeigt dir das Bild auf deinem Streaming-Rechner an
Kannste neues Bild hochladen
Was weiß ich
Das da
Äh, Tag, sonstwas
Suchst dir ne, ne Short
Shortcut aus
Kannste noch ne schöne Weep, Text to Speech dabei machen
Lädste hoch
Klickste an, zeigt dir die als Overlay an
Im Vergleich zu Elgato Stream Deck
Natürlich nicht ganz so schicke Hardware
Logischerweise
Und im Vergleich zu
Äh, OBS ist es einfach so
Und auch zu Elgato Stream Deck
Das was mir da gefehlt hat ist
Dass man die Bilder selber nicht sieht, sondern nur im OBS
Und
Deswegen hab ich sowas gebastelt
Ok, also
Du möchtest
Ich will aus dem HTML-Teil im CSS eine Navigation mit Dropdown-Menü machen
Also ein Dropdown-Menü ist relativ einfach in HTML
Ähm
Kann man hier was reinschreiben jetzt?
Oh nice, ist das geschehen?
Kannst du jetzt auch was tippen?
Ist das live?
Oder ist das ein Snapshot und äh
Also editiert man damit jetzt quasi
Zusammen an dem Dokument
Das wäre nämlich mal ne richtig geile Sache
Wenn das geht
Oder ist das ein Snapshot den ich kriege
Cool, oh das ist ne nice
Die Seite muss ich mir mal merken, das ist cool
Alle Zuschauer schreiben drinnen rum
Ja, wenn du nicht aufpasst
Äh, copy-pasten dir mal ganz schnell
Dein Dokument, sonst löscht es irgendeiner
Oder so, also
Ähm, und ich mach das jetzt auch mal zu
Sonst postet hier irgendeiner irgendwelche Dickpics rein
Oder so, ich wäre gebannt
Also, nen Dropdown in HTML
Kann man relativ einfach machen
Was ist denn dafür?
Kann man das irgendwie kostenlos verwenden oder so?
Create, you pen
Was geht das jetzt?
So, ich bin kein großer HTML-Profi
Also du kannst irgendein
Du kannst irgendein Select, kannst du machen
Ich glaube irgendwie so geht das
Du machst einen Dropdown
Und dann sagst du hier drinnen einfach
Option, plopp
Option
So, und dann hast du nen Dropdown
Das ist super easy in HTML
Dropdown
Ist Visual Basic gut?
Also, Visual Basic.net ist äh
Was heißt gut?
Also, mein Fall ist es nicht
Aber mit Visual Basic.net kannst du alles machen
Was du in C-Sharp auch machen kannst
Oder was du mit F-Sharp, was du mit jeder .NET Sprache machen kannst
Du kannst nicht mehr anfangen Visual Basic zu lernen
Visual Basic ist jetzt relativ tote Sprache
Auch dort
Die .NET Variante
Microsoft wird die noch ne ganze Weile supporten
Ja, aber wenn ich was lernen würde
Würde ich ähm
C-Sharp anfangen
So
Und es gibt bestimmt noch 100.000 andere Varianten
Wie man nen Dropdown machen kann
C-Sharp sieht übelst schwierig aus
Nöööö
Sharp ist nicht schwierig
Brauch man sich ein bisschen dran gewöhnen, aber ansonsten ist das nicht schwierig
Ich mein ich
Also C-Sharp hat ein paar richtig coole Sachen
Also
Wir machen jetzt mal was
Na, also ich mein
Ich find's, ich find's deutlich schöner als
Als Visual Basic
Ah, du kannst jetzt hier irgendwie sowas sagen
Wie was weiß ich
Wahlliste
Was weiß ich, new list
int
So, und dann machst du in deine Liste add
Also kann mir keiner sagen, dass das irgendwie
Schwierige Syntax ist
1, 2, 3, 4
3, 4, 5
So
Und dann sagst du
Ne Schleife hinten dran
Ähm, Liste
Ausgeben, Item
So
Und man kann, das sieht doch
Also ich kann nicht schreiben
Ich mein das ist jetzt
Most basic ever, ja
Aber ich mein es ist doch nicht
Sieht doch nicht kompliziert aus, ja
Und was in C-Sharp halt schön ist, du kannst dann auch
Das geht in allen .NET Sprachen letztendlich
Ja, ähm
Du kannst zum Beispiel
Wunderbar sagen
Du kannst das zum Beispiel richtig schön filtern
Das ist auch ne Sache, das gibt's mittlerweile in vielen anderen Sprachen
Auch, aber ich find diese Link-Geschichte in
C-Sharp ist immer noch am besten, ja
Du kannst jetzt zum Beispiel sagen
Ich will nur Elemente haben
Die größer sind als 3
Führste aus und hast nur noch 4 und 5
Von der Liste übrig
Und ich find das ist auch super
Übrigens, Visual Studio ist auch toll
Der zeigt dir hier an, dass du das
Eigentlich viel besser machen kannst
So, und das ist doch wirklich super
Easy, es sollte
Eine Navigationsleiste
Mit Dropdown sein
Ich, ganz ehrlich, ich bin da nicht
Der große HTML Profi
Aber wahrscheinlich würde ich
Eine Navigationsleiste mit Dropdown nicht so machen
Da würde ich mir, weißt du was am besten ist
Wenn du keine Ahnung davon hast
Und es relativ schnell
Gut aussehen soll, würde ich mir irgendeine
Fertiges CSS Framework nehmen
Irgendwas wie Bootstrap oder so
Damit kriegt das dann jeder ganz gut hin
Aber ich bin halt nicht der große
JavaScript und
HTML CSS Owner
Also in Dropdown habe ich dir ja gezeigt, wie es funktioniert
Das ist relativ einfach, das kannst du auch
Für eine Navigation im Hintergrund
Irgendwie verwenden
Aber
Wahrscheinlich willst du
Eher so ein stylisches
Hamburger Menü, ne
Ähm
Was gibt es denn für eine App
Die sowas hat in Windows
Der Taschenrechner vielleicht
Ja, du willst glaube ich eher sowas, oder
Du willst so ein stylisches Hamburger Menü haben
Was sich übrigens ernsthaft Hamburger Menü nennt
Ne
Da würde ich irgendein fertiges CSS Framework nehmen
Und gut ist
Oder halt, wenn man ein bisschen Zeit hat
Sich selbst damit auseinandersetzen
Weil das sieht natürlich dann immer individueller
Und letztendlich schöner aus
Und man hat auch was dabei gelernt
Alter Lan, Link ist
Eines der besten Erfindungen überhaupt
Und C Sharp war
C Sharp hat eh so ein paar Sachen
So ein paar Innovationen gestartet
Die andere Sprachen übernommen haben
Link ist eins davon
Diese ganze Dependency Injection Geschichte
Kommt ja auch aus dem .NET Umfeld
Es gibt noch ein paar Sachen
C Sharp ist wirklich eine Sprache
Die hat Microsoft, keine Ahnung
Vor 15 Jahren oder so
Haben sie damit angefangen
Und das ist nicht
Quasi nach und nach Kacke geworden
Und outdated geworden
Sondern sie haben immer wieder was dran verbessert
Und zwar mit Hirn
Das sind Sachen die man so über Microsoft selten sagt
Aber
Das haben sie wirklich gut gemacht
Es gab erst letztens wieder eine neue Version
Mit ein paar coolen syntaktischen Sachen drin
Und man setzt halt mit C Sharp
Definitiv nicht auf das tote Pferd
Das ist
Man muss sich mal überlegen
Was gibt es für eine Sprache die 15 Jahre alt ist
Und in der Beliebtheit jetzt wieder steigt
Das ist doch mehr
Dadurch das sie halt jetzt Zeug open sourced haben
Also das ist so ein
Mir geht ja das aufgezwungene Objekt orientiert auf den Keks
Ist auch gar nicht mehr so
Guck mal also wenns
Also ich will jetzt nicht sagen das das jetzt die mega krasse funktionale Geschichte ist
Ja
Aber es geht auf jeden Fall in die Richtung
Und du kannst dir ja mal diese neue Pattern Matching Geschichten angucken
Ehm
Die es in der letzten C Sharp Version gegeben hat
Und das ist richtig
Das ist wirklich
Geht jetzt in die Richtung
Geht schon in funktionale Geschichten
Also man kann jetzt zum Beispiel sagen
Wie ähm
Guck mal das ein gescheites Beispiel einfällt
Äh
Keine Ahnung
Switch Test
Das ist jetzt ein doofes Beispiel
Irgendwie ja
Okay sagen wir mal
Object
Irgendwie was weiß ich
Test hat den String Test drinne
Wir wissen aber nicht das es ein String ist
Und sagen Switch Case
Ähm
Mal gucken ob ich die neue Syntax aus dem Kopf überhaupt hinkriege
Ist
Nee
Wie ging die neue Pattern Matching Syntax
So
Ja
O
Contains
Was weiß ich
A
Dann mach was
Also das geht in die funktionale Richtung jetzt
Was Microsoft in letzter Zeit mit C Sharp macht
Und eigentlich noch eine ziemlich coole Geschichte
Würde Java dafür nicht reichen
Dachte C Sharp ist Hardware basiert
Sorry für den Repost falls du das nicht gesehen hast
Ähm also
Zwischen Java und C Sharp ist im Prinzip
Von der Architektur wenig unterschied
Weder Java noch C Sharp
Sind also
Keine Programmiersprache ist Hardware
Ähm du meinst wahrscheinlich ist es quasi
Hardware näher
Wobei diese Sache mit Hardware nah das ist auch so ein
Irgendwie so so so so
Nicht wirklich ein Buzzword sondern so was
Was jetzt immer drauf ankommt
Wie man es verwendet
Ähm
Die Programmiersprache ist ja im Endeffekt
Bloß ein Syntax Regelsatz
Ja so wie was aussehen soll
Und ich kann auch C nehmen
Und ähm
Wahrscheinlich in .NET kompilieren
Da muss nichts Hardware nahes
In dem Sinn rauskommen
Weil man das bei C sagt so ist es Hardware nah
Weil du so Sachen machst wie RAM Allokieren
Oder irgendwie mit Poitern rumschießen
Und sowas aber sogar da ist es ja mittlerweile so
Bei neuerem C++
Dass sogar die Leute sagen
Hey du schießt dir damit so oft selbst in den Fuß
Nehmen lieber irgendwelche Standard
Ne wie heißt die
Standard Reference Standard Pointer
Irgendwas weißt du gerade aus dem Kopf nicht
Bei C++
Ähm und keine RAW Pointers mehr
Also das mit Hardware nah ist immer so eine Sache
Ja oder wenn man sich mal Rust anguckt zum Beispiel
Rust ist
Übelst RAW eigentlich aber trotzdem
Relativ angenehm und sicher
Also
Es ist immer die Frage was hinten rausfällt
Letztendlich
Und optimierten Code kannst du
Ohne Probleme auch in der Sprache wie C Sharp
Raushauen oder in Java
C Sharp ist es gibt nen Benchmark für
Für Web Frameworks
Da ist ASP.NET Core auf dem
Nicht auf dem ersten aber auf dem
Ersten Platz wo vernünftige Frameworks
Anfangen
Irgendwo hier OSMVC
Ich weiß nicht was da alles dabei ist
Aber wenn man sich das hier anguckt
ASP.NET ist da
Ziemlich weit vorne
Ich mein klar es liest sich lahm
Aber das ist ein Full Featured
Web Framework
Ja mit Datenbank Mapper
Mit Model View Controller
Geschichten und alles
Und wenn man sich anguckt paar Sachen sind hier noch davor
Aber die meisten sind halt so irgendwelche
Mini Geschichten
Manche Go Sachen sind noch schneller
Aber letztendlich und wenn man halt die ganz RAW
Geschichte nimmt
Also quasi ASP.NET Core
Mit quasi mehr oder weniger von Hand gebasteltem
DB Access
Bist du fast hast du fast eines der schnellsten Web Frameworks
Die es gibt
Die Sachen die da vor sind sind irgendwelche Minimal Implementierungen
Die nix können
Ohne da jetzt wie einem zu nah treten zu wollen
Und dann sieht man
C Sharp kann auch brutals schnell sein
Es ist alles
Es ist immer nur die Frage was hinten rausfällt
An Code
Oder dem was letztendlich ausgeführt wird
Du kannst lahm scheiß C und C++ Sachen rausführen
Rausprügeln
Klar für manche Anwendungszwecke
Eigent sich das eine besser als das andere
Das ist schon wahr
Ja
Aber scheiße kann man überall programmieren
Und ich finde mit C Sharp vor allem
Wenn man Windows Sachen macht
Und mit .NET Core eigentlich auch alles
Ist das wirklich eine Sache
Man setzt definitiv nicht auf irgendwie ein totes Pferd
Und man hat
Was wo man eigentlich noch Jahre verwenden kann
Also das ist eigentlich die beste Sache wo man anfangen kann
Find ich
Ich habe noch wenig von Ryder als IDE verwendet
Kann ich nix zu sagen
Jaja du kannst in diese komische Link
Dings hier was ich zum demonstrieren gerade mal zeigen
Du kannst ja noch mehr machen
Du kannst nicht nur eine Sache machen
Du kannst ja auch einen kompletten Funktions
Body aufmachen und dann
Dinger da drinnen treiben
Ja
Also
Das ist schon
Die gehen in die funktionale Richtung
Was ist das hier
Das ist ein Technology Stream
Sagt Twitch
Warum heißt das Hamburger Menü
Na weil es so aussieht wie ein Hamburger
Da guck
Was heißt
Also falls ihr es nicht glaubt das heißt wirklich so
Guck mal
Sogar ein Wikipedia Eintrag hat das Ding
Das Hamburger Menü Icon
Was ist
Link besser als C Sharp
Ähm
Das eine hat mit dem anderen
Also Link ist Teil vom .NET Framework
Du kannst Link in C Sharp verwenden
Unter anderem C Sharp
Link ist keine Programmiersprache
Also das sind zwei komplett verschiedene Paar Schuhe
Du kannst Link in C Sharp verwenden
Aber du kannst nicht C Sharp in Link verwenden
Ja da muss ich dir recht geben
Ähm
Kurimania
Es ist immer gut wenn man ein bisschen Übersicht hat
Aber
Ich hab das Gefühl die meisten Leute haben eine Sprache
In dem sie ihre Sachen am liebsten machen
Und bei mir ist es C Sharp und .NET
Und das sag ich als jemand der mit Linux sein Geld verdient
Das bleibt mir eigentlich mit Microsoft gar nicht so viel am Hut
Aber .NET ist wirklich
Eine super Plattform
Aber es ist auf jeden Fall sinnvoll weil man mehrere Sachen kann
Also so eine Kombination
Aus ich sag jetzt mal drei Sachen
Wo ich denke das es ganz praktisch ist
Wenn man sowas kann
Wie C Sharp .NET
Für Backend Geschichten
Ist nice
Ähm und auch für Windows Desktop und sowas
Ähm gepaart mit
Dem JavaScript HTML
Sonst was Frontend Kram
Ist noch ein bisschen Shell
Bash im Endeffekt
Das ist eine super Kombination
Wo man rundum eigentlich
Eigentlich klar kommt
Und ähm auch relativ schnell
Sich andere Sachen aneignen kann
Type of Cover
Inline Assembly
Ja das hat jetzt noch gefehlt
Mit Rust hab ich auch mal ein bisschen rum gebastelt
Rust ist so eine typische Sprache
Man
Man wird erstmal die ersten paar Wochen
Wird man es hassen
Weil weil
Dich Rust über jeden Scheiß anmeckert
Allerdings hat Rust in der Regel recht
Dass es verkehrt ist
Was du machst
Wenn man sich so ein bisschen an diesen Syntax
Ne wie heißt das
Borrow Checker
Wie heißt das in Rust Green Monster
Borrow Checker heißt das oder
Der guckt wer sich was geborgt hat
Und wer was referenziert und sowas
Wenn man da ein bisschen so denkt
Und Rust macht
Dann ist Rust eine coole Sprache
Ja Oxy das kann ich mir vorstellen
Ich bin jetzt kein großer Angular Fan
Aber das liegt wahrscheinlich auch daran
Weil ich da zu wenig Ahnung von hab
Aber ASP.NET
Es ist wirklich das angenehmste Web Framework
Bisher was ich verwendet hab
Ich hab ja lange Zeit auf Ruby geschwört
Also Ruby on Rails geschwört
Da dachte ich mir ey beste
Aber das ist jetzt auch in den letzten Jahren
Ein bisschen abgekackt
Ähm das einzige was ich noch ein bisschen vermisse
Bei ASP.NET Core
Ist das ist ein paar Sachen im Entity Framework
Aber
Im Großen und Ganzen ist das
Eine ganz tolle Geschichte
Die Microsoft sich da ausgedacht hat
Und die legen ja auch ein bahnbrechendes Tempo vor
Wo es da neue Sachen gibt
Ich mein .NET Core 3.0 ist um die Ecke
In .NET Core 3.0 wird es
Als erstes mal Support geben
Für WPF und Windows Anwendungen
Und man kann
Kann dann
UWP Zeugs da drin verwenden
Vielleicht können wir demnächst
UWP Apps machen ohne scheiß
Windows Store Apps machen zu müssen
Da bin ich mal gespannt drauf
Weil auf Windows Store Apps hat
Kein Mensch irgendwie Bock ne
Habt ihr auch nur eine Windows Store App installiert
So
Moin Leute jetzt kommen jetzt so viele Leute dabei
Eigentlich sind wir schon fertig
Warte immer noch auf das Git Tutorial
Das haben wir das nicht mal gemacht
Das haben wir doch schon gemacht
Das ist immer schief drinne
1.2.21 Sniper of Rust
Genau
Weiß nicht ob er den
Git Grundlagen programmiert
Hier Leute
Von wegen wir haben kein Git Tutorial gemacht
Nicht Try Git Good
Sondern
Git Tutorial
Hier
Da ist es
Beim Sibaro im Archiv ist es
1 Stunde 48
Ja
Die Seite
Die Seite vom Sibaro heißt
Allen Ernstes
Long have we waited now we jebaited
Findest du Visual Basic easy
Ne nicht wirklich
Ich bin kein Visual Basic Fan
Wenn.net dann C Sharp
Eine Frage hätte ich noch
Bei Visual Studio
Was müsste ich da unter neues Projekt auswählen
Damit ich zum Beispiel
Das Hallo World anzeigen lasse
Meinst du das Ernst
Ist es Jebait?
Aber ich bin wirklich nicht sicher
Ob es Jebait ist
Sag es einfach
Ganz normal
Windows Desktop Konsolen App
So
Und dann geht dann das hier auf
Dann trägst du hier einfach ganz
Easy ein
Hello
Twitch
Und dann was du nicht vergessen darfst
Was viele Tutorials vergessen
Du musst ein Read Key oder ein Read Line
Oder sowas drunter machen
Dann geht es direkt wieder zu
Was sagst du braucht man
Als Voraussetzung
Dass man eine Ausbildung als System Integrator machen kann
Also mit Virtual Machine und so weiter
Nix
Du musst dich dafür interessieren und eine gute Firma finden
Es geht ja nicht darum
Dass du schon alles kannst
Du kannst es ja lernen
Wichtig ist eigentlich nur nicht dass dich der Kram interessiert
Erfahrung mit Unity
Ne nicht wirklich
Also nochmal zur Ausbildung
Das wichtigste ist dass es einen interessiert
Wo du das Gefühl hast
Juckt das null
Das ist natürlich immer ein bisschen blöd
Aber gut letztendlich
Es kann auch nicht für jeden was sein
Aber wenn es dich interessiert
Ist eigentlich das wichtigste
Du musst nichts können
Wie stehst du zu Cheats programmieren
Sprich nichts dagegen
Veröffentlichen ist die eigentliche Sache
Wo ich mir überlegen würde ob ich es machen würde
Die Seite ist dead
Welche Seite
Du meinst das Archiv?
Das Archiv vom Sbarro
Das ist wahrscheinlich
Einfach überlastet
Weil gerade mehrere Leute drauf gehen
Wie ist hier nicht so schnell die Seite
Wir müssen dem Sbarro mal auf Twitch
Lass mal alle dem Sbarro auf Twitter schreiben
Dass das Archiv aktualisiert werden muss
Sbarro
Weiß gar nicht sein Account
Fuck
Letztens war es geschrieben
Da ist er
Muss ich mal schreiben kurz
Okay ähm
Ich muss jetzt pennen
Ich muss morgen wieder auf die Arbeit
Na Grundwissen ist ja das was du in der Ausbildung lernst
Dafür ist die Ausbildung da
Genau dafür ist das
Also sollte man egal ob Ausbildung oder Studium
Einfach Interesse mitbringen
Interesse ist das allerwichtigste
Bei so ziemlich allem was man lernen will
Wenn dich was abfuckt wirst du das nie lernen
Wenn du heute sagst
Hey ich möchte richtig gut in CSGO werden
Und dir macht das Spiel keinen Spaß
Du wirst nicht gut werden
Du kannst sagen Alter so
Jungs lass uns hinsetzen
Komm wir spielen jetzt CS
Und du wirst auch bis zu einem gewissen Level kommen
Aber es wird dich übelst abfucken
Und es wird dich ankotzen das Game 10 Stunden zu grinden
Oder sowas in der Richtung
Wohingegen du ein Game hast was dir Bock macht
Das ist ja im Prinzip mit allem so
Hast du keine Probleme 10 Stunden zu grinden
Deswegen ist das wichtigste das es dich interessiert
Und was noch gut ist wenn es dazu kommt
Wenn man ein Problem hat
Was einen nervt und was man lösen will
Das interessiert einen
Das ist eigentlich das wichtigste
Das ist ja der krasseste Cheap Bait Versuch
Oder eigentlich der schlechteste Cheap Bait Versuch
Den ich in letzter Zeit gelesen habe
Assassin's Creed Unity ist so scheiße
Weil es basiert auf Unity
Das ist so schlecht
Das es eigentlich schon wieder gut ist
Morgen
Günnix
Okay Leute
Alles klar wir machen Schluss
Outromusik
Wir sehen uns die Tage machts gut
See you
