So, mal zur Abwechslung wieder mittags am Start, weil ich eigentlich relativ oft montags mittags am Start bin.
Also ich würde sagen, wenn ich mittags am Start bin, dann eigentlich hauptsächlich montags, oder?
Ach, keine Ahnung, muss man jetzt mal in die Statistik gucken.
Muss zu lernen oder willst zu lernen?
Naja, es ist ja meistens so, dass beides irgendwie zutrifft.
Und ich will was machen und dazu wäre es nicht schlecht, wenn man es ein bisschen kann.
Wir haben ja letztens schon angefangen.
Also wir haben ja schon, glaube letzte Woche, wann war das denn?
Ich glaube wir haben letzte Woche Freitag oder so.
Haben wir glaube ich schon angefangen, oder? So in dem Dreh.
Tim Schuh, Dankeschön für die Massive Subscription.
Exzellent.
Exzellente High IQ Subscription.
Naisu, ach ne, Nasu, nicht Naisu.
Nuskos, Dankeschön für den Sub.
Die Namen werden immer besser hier, Leute.
Geh davon aus, die meisten von euch sind noch am Arbeiten, oder?
Moment, ich muss mal kurz VM-Update machen, wenn wir gerade dabei sind.
Schadet nix.
Das seht ihr, es gibt wieder Updates.
Bam.
Update.
Gleich noch andere Packages.
Wir updaten mal kurz eine Runde.
Schadet nicht.
Wollen wir weitermachen.
Oh, es gibt ein neues .NET Update.
Tue ich gar nicht.
Gab es da irgendwie eine neue?
Ja gut, gab wahrscheinlich eine neue Miner-Version oder so.
Moin.
Ist das T-Max, was?
Das hier?
Ne.
Ha, sieht aber so ähnlich aus, gell?
Das haben wir gut gemacht.
Es ist kein T-Max.
Es sieht aber so ähnlich aus.
Ist es nicht.
Das ist das Eingebaute.
Das sind die eingebauten Tabs im Terminal.
Ja, ich habe es aber absichtlich so gestylt, dass es ein bisschen so aussieht.
Warum findet er, warum findet er keine Updates?
Hier, was ist da los?
Ach so, ja gut, wahrscheinlich gibt es keine.
Ist ja auch eine Möglichkeit, dass es keine Updates gibt, wenn er keine Updates findet.
Muss mal kurz rebooten.
Kurz das Ding hier zumachen.
Einmal rebooten.
Ja, also, das ist absichtlich so, dass es keine Updates gibt, wenn er keine Updates
findet.
Muss mal kurz rebooten.
Kurz das Ding hier zumachen.
Einmal rebooten.
Ja, also, das ist absichtlich so gestylt.
Das hier ist Westterm, nennt sich das.
Hier ist es die, die Config.
Das haben wir, also ich glaube das Terminal haben wir in einem der letzten Streams zufällig
entdeckt.
Ich hatte das auf einer Liste stehen mit Sachen, die ich mal ausprobieren will.
Und da haben wir, also ich glaube, das Terminal, das haben wir in einem der letzten Streams
zufällig entdeckt.
Ich hatte das auf einer Liste stehen mit Sachen, die ich mal ausprobieren will.
Und, also, hier Github, muss ich mal zeigen, das ist das hier, weil, also, Hintergrund
war folgender, also, mir ist egal, ob das written in Rust ist oder nicht, das interessiert
mich an der Stelle nicht.
Natürlich macht es, macht es sich immer gut, das auf seine Github-Seite zu schreiben,
das was written in Rust ist, weil blazingly fast und dann kannst du auf Hacker News posten
und was auch immer alles.
Ne, also, ich habe ja die letzten Jahre über eigentlich fast ausschließlich Gnome Terminal
verwendet.
Und Gnome Terminal.
Wird nicht mehr weiterentwickelt.
Beziehungsweise, es gibt jetzt ein anderes Gnome Terminal, was weiterentwickelt wird,
so das klassische Gnome Terminal wird anscheinend nicht mehr weiterentwickelt oder zumindest
soll es irgendwie keine großartigen neuen Features oder was auch immer bekommen.
Zumindest war es mal an der Zeit, sich ein bisschen umzugucken, was es noch so für Terminal
Programme gibt.
Und da habe ich mir alle möglichen Sachen angeguckt und ich habe mir auch im Stream
dann mit den Leuten hier zusammen West Term angeguckt.
Und am Anfang war ich überhaupt nicht begeistert, weil es Probleme hatte beim Resizen, was
es jetzt, wenn man richtige Settings hat, nicht hat.
Und weil es Probleme hatte beim Schrift größer und kleiner machen, was es mit der richtigen
Config auch nicht hat.
Das heißt, ich habe dem wirklich Unrecht getan, nur die ersten Viertelstunde, wo ich
dann gesagt habe, das probieren wir jetzt gar nicht weiter aus und jetzt im Nachhinein
würde ich sagen, das ist mit Abstand.
Das beste Terminal, was ich die letzten Jahre über gesehen habe.
Feature technisch kann das alles, was man braucht, inklusive Tabs und Panels und alles.
Man kann die Settings fast so einstellen, dass es sich anfühlt wie ein T-Max.
Und was auch richtig nice ist.
Ja, die default Settings sind Shit.
Das kann man wirklich so sagen.
Man muss gar nicht so viel machen, dass es nice ist.
Aber die default Settings sind wirklich Müll.
Das denke ich, kann man nicht anders sagen.
Und was auch ganz gut ist, die Config kann man entweder relativ klassisch machen, so
wie man sich das hier vorstellt.
Windows Background, Scroll Lines, Colors und sowas in der Richtung.
Oder du kannst quasi komplett, also die Config ist eine eigene Programmiersprache für die
Config.
Das basiert irgendwie auf Lua.
Du kannst abgedreht den abgedrehtesten Shit machen.
Wenn du willst.
Wenn dir die Default Config nicht reichen.
Default Config Tastatur Mapping und Window Background Color und sowas.
Das ist alles eingebaut.
Aber zum Beispiel eine Sache, die wir selbst in der Config gemacht haben und was du normalerweise
in keinem anderen Terminal, außer Emacs, wobei Emacs nur wirklich als Terminal durchgeht.
Emacs ist ja unter anderem auch irgendwo unter der Haube noch ein Editor und vieles andere.
Du kannst zum Beispiel einstellen, das finde ich äußerst nice.
Du kannst zum Beispiel einstellen, dass wenn die rechte Maustaste gedrückt wird, also
in dem Fall ist es die rechte Maustaste.
Wenn die rechte Maustaste gedrückt wird, egal wie oft hintereinander, dann macht er folgendes.
Dann macht er folgendes.
Er guckt, ob Text Selected ist.
Wenn Text Selected ist, dann kopiert er das ins Clipboard.
Und cleart danach die Selection.
Ansonsten pastet er.
Und das coole ist, was ich jetzt machen kann.
Zum Beispiel, ich markiere das hier.
Ich markiere das.
Drücke die rechte Maustaste.
Er macht es in mein Clipboard.
Und er cleart die Selection.
Hier ist mein Clipboard Manager.
Da sieht man es, es ist im Clipboard.
Und wenn ich jetzt ohne Selection die rechte Maustaste drücke, dann pastet er.
Das heißt, ich kann mit einer Maustaste, das ist mega nice.
Ich kann mit einer Maustaste in Clipboard pasten.
Und im nächsten Klick, äh ins Clipboard, kann ich es direkt pasten.
Das ist enorm praktisch.
Und das heißt, ich muss jetzt quasi nur zweimal rechts klicken.
Und es ist eingefügt.
Also guck hier, zack, zack.
Das ist sehr praktisch.
Da habe ich mich schon richtig dran gewöhnt.
Und das kann man halt in dem Fall selbst definieren, wie man das haben will.
Ja, na, Makro würde ich es nicht wirklich nennen.
Makro ist ja hauptsächlich ein Wiedergeben vorher aufgezeichneter Befehle.
Und das ist schon wirklich hier mit State Management.
Ja, du guckst, hast du eine Selection?
Wenn du eine Selection hast, dann mach die Action und sonst was.
Also das geht schon über Makro rauf.
Das ist vielleicht, das ist vielleicht Richtung, Richtung Auto.
Auto, Hotkey, Makro, wenn überhaupt.
Aber selbst damit kannst du es ja nicht wirklich machen, weil du kannst es ja nicht auslesen,
ob du eine Selection hast oder nicht.
Das kann ja eigentlich nur das Terminal wissen.
Das GitHub Repo, tja, ich habe es alles schon im Config Manager drin, aber ich habe es noch nicht gepusht.
Welche Konsole?
Das ist, das ist das, was ich gerade erzählt habe.
Westterm.
Also in Kombination ist das Westterm mit ZSH und Starship als Prompt.
Und einer recht übersichtlichen ZSH-Config.
Übrigens, soll ich euch mal was Cooles zeigen?
Was ich, ach ja, wisst ihr was noch cool ist?
Ich zeige es euch vorher mal, was das Terminal noch kann.
Guckt mal, hier habe ich, hier habe ich ja meinen, meinen Hintergrund.
Guckt mal, hier habe ich ja den, den Pepo im Hintergrund.
Und manchmal wäre es doch ganz praktisch, wenn man im Terminal Bilder anzeigen kann.
Ah ja, nee, ich muss montags nicht arbeiten.
Und das geht.
Du kannst sagen, Westterm, äh, nee.
Ich habe es schon wieder vergessen.
Was muss ich sagen?
Ach so, Westterm Image.
Und dann sagen wir hier anime-excited.gif.
Und siehe da, wir haben in der Konsole ein Bild sogar mit GIF-Animations-Support.
Ist das nicht nice?
Natürlich, natürlich könnte man das einfach in irgendeinem Image-Viewer öffnen oder so.
Aber ich finde es wirklich ganz cool, dass das klappt.
Dass man das in der Konsole machen kann.
Und jetzt passt mal auf, ich habe das ein bisschen, ich habe das ein bisschen verscriptet noch.
Jetzt kann man sagen, ImageCat, also ich habe da, ich habe da quasi so einen kleinen Wrapper drum herum gebaut.
Jetzt kann man zum Beispiel sagen, ImageCat, das aktuelle Verzeichnis.
Und guckt mal da.
Er kann alle Bilder im aktuellen Verzei-, in dem angegebenen Verzeichnis auflisten.
Und das sogar mehrere Bilder nebeneinander mit dem Dateinamen oben drüber.
Ist das nicht pock?
Man kann sogar, man kann sogar ganz viel auflisten.
Ich kann zum Beispiel auch sagen, ImageCat, User, Share, Icons.
Das und dann.
Na gut, das dauert jetzt ein bisschen.
Und dann.
Und euch wird auffallen, da sind SVG, ob man das hier irgendwo sieht.
Hier ist Scalable.
Da sind SVGs dabei, also Vektorgrafiken.
Und ihr stellt fest, guck mal.
Der kann sogar Vektor, der kann sogar Vektorgrafiken anzeigen, obwohl.
Passt mal auf.
Guckt, der kann Vektorgrafiken anzeigen.
Obwohl das eingebaute ImageCat keine Vektorgrafiken anzeigen kann.
Das ist Starship, ja.
So.
Und du bist so ein richtiger Macher.
Dann, wenn du das sagst.
Aber du musst ja auch ein richtiger Macher sein.
Sonst hättest du wahrscheinlich den Weg ins Stream gar nicht gefunden.
Oder aber du bist das Gegenteil von einem Macher.
Du müsstest eigentlich machen und guckst lieber Stream in der Zeit.
Wo ich mich natürlich nicht drüber beschweren will.
Weil das kannst du hier quasi schon als Fortbildung buchen.
Ja und jetzt ist natürlich die Frage.
Bevor ich das.
Leider das zweite Jahr ist auch realistischer gewesen, oder?
So, um das jetzt nochmal zu beantworten.
Guck mal.
Das eingebaute ImageCat kann keine SVGs anzeigen.
Aber mein ImageCat Rapper kann SVGs anzeigen.
Und wie funktioniert das Ganze?
Habe ich bisschen meine Bash Skills rausgehauen.
Ich sag gleich was zu.
Bisschen meine Bash Scripting Skills rausgehauen.
Und zwar.
Hier, guck mal.
Pass mal auf, das ist extrem Bash und Shell Magic hier.
Lautstärke von der Musik.
Lautstärke von der Musik eigentlich okay.
Ja passt ganz gut.
Ich bin viel lauter als die Musik.
Alles gut.
So.
Das ist kurz und knackig.
Aber Five Head Shell Magic.
Also es geht um folgendes.
Oh, das habe ich noch nicht ausprobiert.
Ich glaube das ist verbuggt.
Wenn man ein Panel gesplittert hat, ist es glaube ich verbuggt.
Lass mal ausprobieren.
Ne, das funktioniert sogar mit gesplittertem Panel.
Das hätte ich jetzt nicht gedacht.
Also pass mal auf.
HiIQ.
Diese Funktion hier ist dafür zuständig, dass man.
Ich mach das mal so, dass das hier drauf passt.
Diese Funktion ist dafür zuständig, dass man mehrere Bilder nebeneinander anzeigen kann im Terminal.
Und SVGs.
Kommt ja auch noch dabei.
Und SVGs.
So und was macht das?
Nur mal so jetzt.
Wenn wir gerade schon dabei sind.
Extreme Bash Magic.
Und zwar.
Erstmal holt es sich aus der Config vom jeweiligen Terminal raus.
Wie viele Zeilen und wie viele Spalten das jeweilige Terminal hat.
Also Zeilen ist ja quasi.
Das ist eine Zeile.
Das ist eine Zeile.
Das, das, das.
Also wie viele Zeilen.
Und wie viele Spalten.
Spalten ist quasi so eine Zelle hier so nebeneinander.
Also wie viele Zellen in einer Zeile sind quasi.
So.
Spalten.
So.
Und jetzt kommt.
Jetzt holt er sich raus.
Und jetzt kommt bash-mew.
Bash-magic.
Das hier ist noch relativ easy.
Der sucht sich alle Dateien raus, die Images sind.
Das ist.
Das ist noch.
Das hab ich von Stack-overflow 1 zu 1 so.
So.
Dann guckt er.
Ob es eine gerade oder ungerade Anzahl ist.
Weil, er muss ja hier einmal es auf der Seite rendern und einmal auf der Seite rendern.
Aber das rendern ist ja das eigentlich.
Das eigentlich Trickreiche.
Guckt mal, was er hier für dinger macht.
Das ist Shell Magic, wo ich gar nicht wusste, dass das existiert.
Und zwar, das ist ein Escape Code für, in irgendeinem, fragt mich nicht, in irgendeinem Ansi, irgendetwas Standard ist es definiert.
Das ist ein Shell Code für Position des Shell Cursors, also das hier, dieses Dings, Position des Shell Cursors setzen.
So, und ich setze die Position des Cursors in der Shell, quasi an Position X, an Position Y, dann paste ich den Dateinamen, so, das war's, dann wird die erste Position wieder restored, wenn ich das, glaube ich, ne, ach, keine Ahnung, ich weiß selbst nicht mehr, wie es funktioniert.
Und dann wird geguckt, ist es ein SVG?
Wenn es ein SVG ist, dann wandelt er mit FFM-Pack vorher.
Das SVG um in den PNG und danach gibt er das Ganze aus.
Und warum sind es 20% von der Höhe, naja, es sind 20% von der Höhe, dass die Berechnung meiner Zeilen hier oben stimmt.
Äh, ja, dass die Berechnung, die Berechnung meiner, meiner Zeilen hier oben stimmt.
Also das ist, das, das war, das war Sixthand-Modus, sonst hätte ich das nicht auf die Reihe gekriegt.
Äh, Schwachsinn, hier, dass die, dass die, dass die, dass die...
Also guck mal, ich rechne ja hier die Anzahl der Zeilen pro Terminal durch 4.
Also sprich, 100, das sind 20%.
4 mal, 4 mal 20, 100, also hier rechne ich quasi aus, wie viele Zeilen, wie hoch, wie hoch so ein, ein Bild ist.
Und dadurch, dass es 20% Höhe sind, ist es halt so hoch, wie ich hier oben die Zeilenanzahl ausgerechnet habe.
Deswegen weiß ich ja auch, an welcher Stelle ich den Cursor positionieren muss für die nächste Zeile.
Also das, da, da habe ich mich...
Ne, Quatsch, 4, 4 mal 20 sind 100, na klar, wusste dir das noch nicht?
Wusste dir das noch nicht?
Also ich hoffe, ich hoffe, das ist euch jetzt allen klar gewesen.
Also das kann man jetzt, kann man ja erwarten, dass das, dass das, das, obviously ist das so.
Quickmuffs, das könnte übrigens, das könnte übrigens tatsächlich sogar ein Bug sein mit den, mit den 20%.
Aber ich probiere, ich probiere, was passiert, wenn ich durchfahre?
Wenn ich durch 5 mache, ach Moment, da muss ich, muss ich neue Sourcen.
Äh, ne, dann funktioniert es nicht.
Ich war, ich verstehe meinen eigenen Krempel gerade nicht mehr, Sekunde.
Ähm, also kann ich 25% Höhe machen, oder?
Kann ich 25% Höhe machen, weil dann durch 4...
Ach, guck mal da, das funktioniert schon gleich viel besser.
Guck mal, dann ist weniger Platz unten drunter.
Aha, okay, was auch immer.
Ich lasse es mal so, bevor ich hier dran rumbastel.
Ja, genau, so funktioniert das.
Deswegen kann ich jetzt ImageCat machen und bekomme schön die Bilder im Terminal sogar mit mehreren Zeilen.
Nur mal so nebenbei erwähnt, ja.
So, so funktioniert das.
Mit welchen Hex malt er denn Bilder ins Terminal?
Das ist Westterm.
Und Westterm unterstützt das iTerm2-Image-Protokoll.
Das ist zwar ein MacOS-Terminal, aber die haben das nachgebaut.
Und wenn du jetzt irgendein Programm hast, was dieses iTerm2-Image-Protokoll spricht,
dann kann er die Bilder malen.
Und wenn er das nicht kann, dann kannst du die Bilder immer noch malen,
zum Beispiel, zum Beispiel bei der Wettervorhersage.
Die Wettervorhersage, die...
Ist es gerade da auch nicht, ja, was doch.
Die Wettervorhersage malt auch ein Bild ins Terminal.
Das ist allerdings nicht über...
Das Native-Image-Protokoll, sondern das ist über...
Ne, nicht 6p, sondern...
Wie heißt es?
Sixel.
Es gibt so zwei Sachen, wie du mittlerweile halbwegs standardisiert Images ins Terminal bekommst.
Das eine ist Sixel.
Das ist irgend so ein Linux-Ding.
Und das andere ist eben das iTerm2-Image-Protokoll.
Und das kann...
Das iTerm2-Image-Protokoll...
Das iTerm2-Image-Protokoll kann auch GIFs.
Das kann keine GIFs, das kann GIFs.
Also das ist das Bessere.
Das heißt, man kann sogar animierte GIFs ins Terminal malen.
Was es nicht alles gibt mittlerweile.
Warum nicht?
Weil ich die Themen mache, wenn ich Bock drauf habe.
Man kann sich ja immer noch den Wort angucken.
Das war früher so, was du sagst, das war früher so.
Das war mit, wie hieß das Ding?
GitHub Überzeug oder sowas?
Ne, Überzug gab es früher.
Die haben das mit irgendeinem Hack gemacht.
Die haben das mit irgendeinem ganz abartigen Hack gemacht.
Wobei sie auch mittlerweile sagen, man sollte das nicht mehr verwenden,
sondern eher entweder Sixel oder iTerm2-Image-Protokoll.
Mittlerweile gibt es tatsächlich einen ganz guten...
Weiß nicht, ob man das Standard nennen kann,
weil ich nicht weiß, ob sich das irgendein Gremium dahinter ist.
Es gibt mittlerweile tatsächlich einen ganz guten Standard
für Bilder im Terminal.
Selbstverständlich kann das Windows Terminal das wahrscheinlich nicht.
Das habe ich nicht ausprobiert, aber ich würde es wundern,
wenn das so ist.
Wenn das Windows Terminal das Ganze könnte.
Das Coole ist, dass Westterm auch unter Windows lauffähig ist.
Ich glaube, das werde ich in Zukunft unter Windows auch verwenden.
Ja, und was mittlerweile auch überhaupt kein Problem mehr ist,
in allen möglichen Terminals,
ist sowas wie Emoji Support.
Emoji Support ist mittlerweile in allen Mainstream Terminals gelandet.
Natürlich braucht man einen passenden Emoji Font.
Vielleicht würde euch aufgefallen sein,
dass man in den Emoji Terminals nicht so viel Emoji hat.
Ich glaube, dass die Bilder hier im Browser
und meine Emojis auf der Kommandozeile
sich relativ ähnlich sehen.
Das liegt daran, weil ich Twimoji als Font verwende.
Und das ist, glaube ich, auch die Grundlage von den Emojis,
die Firefox verwendet.
Nicht eins zu eins, aber ähnlich.
Weil Firefox rendert Emojis mit einem eigenen Font
und nicht mit einem eigenen Font.
Und nicht mit dem System Font.
Weil, sonst wäre es ja zu einfach.
Sonst wäre es ja zu einfach.
Also sind nicht alle exakt gleich.
Wenn man jetzt ein bisschen guckt,
ein bisschen Unterschied ist, glaube ich, dazwischen.
Ja, so sieht es aus.
Also Emoji Support ist mittlerweile auch in jedem Standard Terminal mit dabei.
Link zum Font.
Twimoji.
TTF Twimoji.
Installieren.
Und wer jetzt vielleicht denkt,
dass die Wege,
wie normale Bilder ins Terminal gemalt werden
und wie Emojis ins Terminal gemalt werden,
ja ungefähr den gleichen Weg gehen muss.
Nein, nein, nein, nein.
Der liegt komplett falsch.
Der Weg, wie diese Bilder ins Terminal kommen
und wie ein Emoji-Bild ins Terminal kommt,
sind zwei komplett unterschiedliche Paar Schuhe.
Und es ist absolut der Abfuck
und schon wieder
so ein komplettes Armutszeugnis mal wieder
für so IT-Standards.
Wie viele Möglichkeiten es gibt,
dass überhaupt ein Emoji-Font existieren kann
und auf euren Bildschirm kommt, Leute.
Es gibt vier verschiedene, mindestens vier verschiedene Standards,
wie man Emojis speichert.
Es gibt zig verschiedene Font-Typen,
Font-Renderer,
verschiedene Ansätze.
Deswegen sieht das auch überall immer ein bisschen anders aus.
Es gibt vier Gruppen.
Ich weiß, es hat mit dem eigentlichen Thema Python-Lernen wenig zu tun,
aber das ist immer so ein Ding, wo ich mir denke,
man hätte es sich so einfach machen können.
Man hätte es sich so einfach machen können.
Es gibt vier verschiedene Standards für Emojis.
Es gibt einen von Apple.
Wer hätte das gedacht?
Selbstverständlich haben wir das eigene.
Es gibt einen Emoji-Standard.
Also wir reden hier bei einem Emoji-Standard.
Nicht irgendwie von Unicode,
die festlegen, was aufgenommen wird,
sondern nur dem Standard,
wie wird in einem Font
der Emoji-Standard
in Farbinformationen hinterlegt,
wie die Emojis aussehen sollen.
Es gibt einen Standard von Apple.
Es gibt einen Standard von Microsoft.
Es gibt einen Standard von Adobe.
Und es gibt, glaube ich, noch einen von Google.
Und ich glaube, dass
Mozilla das gleiche macht wie Adobe.
Was auch immer.
Das Video mit dem Florian.
Wir haben das immer noch nicht aufgenommen.
Wir haben uns aber letztens wieder mal kurzgeschlagen,
dass wir es demnächst aufnehmen müssen.
Der Florian hat ein bisschen Probleme auf YouTube gehabt.
Ich glaube, da hat er ein bisschen was gemacht.
Er hat gerade andere Sorgen gehabt.
Da gibt es vier verschiedene Standards
von Farbinformationen speichern.
Ganz ehrlich, Apple macht es am einfachsten.
Apple embeddet einfach Bilder.
Es kann sein, dass es ein anderer ist.
Ich glaube, aber Apple macht so.
Apple embeddet in ihren Font-Dateien einfach Bilder für Emojis.
Andere embedden irgendwelche Farbinformationen
und sonstige Geschichten.
Also es ist komplett der Abfuck wieder,
wie das mit Emojis im Terminal funktioniert.
Und der Weg, wie das, wie diese Sachen
ins Terminal kommen, ist ein komplett anderer Weg, wie normale Bilder ins Terminal kommen.
Sieht man ja auch schon.
Ich kann das Bild nicht markieren, aber ich kann das Emoji markieren.
Und wow, und einfügen.
Also wie gesagt, das ist Starship.
Diese also dieses Starship ist wie Oh my ZSH.
Nee, gar nicht, gar nicht.
Oh my ZSH ist ja irgend so eine Pluginsammlung, die zum größten Teil
eigentlich keine Plugins sind, sondern die drei Zeilen Konfig setzen.
Wenn man sich das nämlich mal anguckt.
Wenn man, wenn man da in irgendwelche Plugins reinguckt.
Sehen wir da jetzt mal. Wo sind denn die Dinger überhaupt?
Ja, Plugins,
Aliases.
Wenn man, wenn man da reinguckt, dann sieht man, das hier ist, ist das dann irgendwo.
Also Oh my ZSH ist eigentlich nur so eine Konfig Sammlung.
Sehr selten Plugins, auch wenn sie das Plugins nennen.
Und Starship ist nur der Prompt.
Also Starship ist nur das hier.
Ja, in Oh my, in Oh my ZSHell hast du ja auch noch so Sachen drin wie Doppel Escape
drücken für Sudo da vorschreiben und sowas.
Das ist es nicht.
Also es ist keine.
Kein, kein Konfig Manager quasi für deine, für deine Shell Konfig, sondern wirklich
nur der Prompt hier Starship RS ist das, das ist wirklich nur der Prompt.
Und den Prompt, den ich hier habe, den habe ich auch selbst
gestrickt. Als Grundlage habe ich Moment.
Preset Blazingly Fast, selbstverständlich.
Alles, alles written in Rust, dass sich die Leute auf Hacker News freuen,
wie geil wir sind, weil wir written in Rust sind.
Als Grundlage habe ich dieses, dieses Theme hier genommen.
Pastel Powerline, was selbst wiederum basiert auf M365 Princess.
Das habe ich als Grundlage genommen, aber man sieht schon den Unterschied.
Also hier ist beispielsweise
die Schrift relativ schlecht lesbar.
Ich meine mal Seriously versucht mal hier
diese Schrift ordentlich auf hellblau zu lesen.
Kannst du vergessen.
Deswegen habe ich die Schrift angepasst,
dass es meinem Terminal Hintergrund entspricht.
Ich finde das vom Kontrast einfach angenehmer.
Und ich habe einen zweizeiligen Prompt
draus gemacht, anstatt einen einzeiligen Prompt.
Das liegt nämlich daran, weil der Prompt
kann so viele Informationen anzeigen, dass es einfach viel zu lange wird.
Ich gehe jetzt zum Beispiel mal
in
Repo in den GIT Repo, wo ein .NET Projekt drinne liegt.
Ja, wenn man richtig ist, dann geht das auch.
Guck mal, guck mal, wie fett der Prompt schon ist.
Er zeigt mir an meinen User, welchem Verzeichnis ich bin.
Den GIT Status, wobei der je nachdem, was
ich in dem Repo tut, auch seht ihr hier auch unterschiedlich sein kann.
Dann zeigt er mir an, welche .NET Version ich
installiert habe, zu welcher Target Version im Projekt, im Projekt hinzugefügt ist.
Also im Prinzip ist das.
Das stimmt übrigens gar nicht genau.
Nightbot Kommando müssen wir mal ändern.
Und hier rechts noch das Datum.
Das heißt im Endeffekt normalerweise guckt mal.
Normalerweise könnte ich jetzt hier erst was tippen.
Das kann es doch nicht sein.
Und außerdem
mag ich das, wenn im Prompt immer an der
gleichen Stelle getippt wird, egal in welchem Ordner ich bin.
Also normalerweise tippst du ja je nachdem, wie lang der Ordner ist.
Bisschen weiter hinten, bisschen weiter vorne.
Und im zweizeiligen Prompt hast du halt immer den Kram an der gleichen Stelle.
Deswegen habe ich das hier als Basic Prompt
genommen und habe es ein bisschen umkonfiguriert, so dass es passt.
Die Konfig ist gar nicht so schlimm.
Am Anfang, am Anfang habe ich gedacht Wunder, was die hier großartig konfigurieren muss.
Starship ist eigentlich gar nicht so übel zu konfigurieren.
Du stellst im Endeffekt ein, welche Blöcke du anzeigen willst.
Ähm.
Und dann, dann kannst du die unterschiedlichen Blöcke noch konfigurieren.
Also im Endeffekt erkennt man, dass hier relativ gut was passiert.
Der macht am Anfang, der vergleicht es mal.
Der macht am Anfang so ein komisches Ding, so ein komisches halb rundes Symbol.
Dann steht die US-Version da und der Username entweder oder.
US zeigt da standardmäßig nicht an.
Wozu auch?
Also ich könnte, ich könnte US zum Beispiel auch einkommentieren.
Falls die noch drin ist.
Ja, guck, ich könnte sagen, es ist nicht disabled.
Und jetzt hätte ich aus irgendwelchen Gründen des Art-Stilungs eine Schleife.
Was auch immer.
Gibt es das nur für Bash oder Bash oder ZSH-Only?
Das ist Shell-übergreifend Starship.
Starship funktioniert für.
Starship funktioniert für Bash.
CMD.
Also wenn man ganz hart drauf ist, kann man das auch unter Windows verwenden.
Allerdings nur mit irgendeinem komischen Zusatz für CMD.
Also Bash geht, CMD geht, Elvish habe ich noch nie gehört.
Ähm, Phish, Ion, New Shell, Power Shell, T, CSH, Xon Shell und ZSH.
Seriously?
Ich glaube, ich glaube, das hier ist eine Python-only Shell.
Kann das sein oder bringe ich das durcheinander?
Also.
Die wichtigsten Shells unterstützt es auf jeden Fall.
Die wichtigsten Shells kannst du.
Ob das jetzt, ob das jetzt Elvish kann?
Keine Ahnung, habe ich noch nie gehört, die Shell.
Das konfigurierst du hier in so einer Art, wo es keine YAML-Datei ist,
eine TOML-Datei, weil Blazingly Fast written in Rust.
Ich habe übrigens gehört, Leute, dass
TOML auch in der Rust-Welt gar nicht mehr angesagt ist.
Da gibt es jetzt irgendwas Neues, was viel cooler ist.
In der Rust-Welt ändert sich das ja öfters was Cooles.
Es gibt jetzt in Rust, gibt es jetzt Rust, TOML vs.
Ah, ich, ich, nee, nicht TOML.
Nein, nein, nein, nicht YAML.
Oh, wie hieß das denn?
Es gibt was Neues, das ist, das ist in der Rust-Welt viel cooler als TOML.
Ja, ich weiß es nicht.
Wie heißt der Kram?
TOML vs.
SEDE.
Nee, nee, nee, nee.
Es gibt irgendwas Neues.
Es gibt irgendwas Neues, was die Rust-Leute viel geiler finden.
Also wahrscheinlich noch Blazingly Faster.
Ja, so. Nee, nee, ich glaube, ich meine, ich.
Nee, nee, nee, irgendwas anderes.
Irgendwas anderes war das.
Ich habe letztens, habe ich letztens in so einem Hacker News Post drüber gelesen,
wo sie sich dann wieder einen abgedingst haben in den Comments,
wie geil sie sind, weil sie das ja schon verwenden seit dem ersten Kommit, so nach
dem Motto, da wird auch teilweise viel Bullshit geschrieben.
Aber wie gesagt, von der Config her ist es relativ, relativ simpel.
Stellst halt ein, was er anzeigen soll, fängt an mit dem Username, geht weiter
mit dem Directory, geht Branch, geht Status, geht State.
Übrigens, ich tue mir immer schwer, was
der Unterschied zwischen State und Status ist.
Und es gibt da irgend so einen Merksatz.
Oder so, so, so, so.
So eine Eselsbrücke. Kein Merksatz.
Ich bin mir gar nicht sicher, ob ich die richtig, ob ich die richtig zusammenkriege.
Also ich glaube, es ist so, warte mal, bringe ich das jetzt richtig?
Bringe ich das jetzt richtig zusammen?
Das eine ändert sich nicht.
Von dem einen gibt es verschiedene Sachen, ändern sich aber nicht.
Ich, ich glaube, wenn ich, wenn ich es noch richtig aus dem Kopf hinbekomme, ist State
quasi zu vergleichen mit,
wenn du Hotelzimmer hast, so du hast.
Es kann auch sein, dass es nicht stimmt, was ich jetzt natürlich, ich tue mir immer
schwer, die zwei Aussagen zu sagen.
Also State ist, glaube ich, so was wie wenn du verschiedene Hotelzimmer hast.
Also es gibt quasi Hotelzimmer und die gibt es in
der Five Head Suite und Three Head Suite und Four Head Suite und sowas.
Das ist dann quasi das State und Status ist quasi
Tür offen oder geschlossen.
So nach dem Motto.
Es kann aber auch sein, dass es genau umgedreht ist.
Ich glaube, es ist sogar umgedreht.
Ich glaube, ich, ich glaube, es ist um.
Ich glaube, es ist umgedreht, was auch immer.
Es gibt ebenso eine Eselsbrücke, aber selbst damit, aber selbst damit kann ich
mir immer den Unterschied nicht richtig merken.
So, danach kommt noch ein bisschen Farbe und dann kommt verschiedene Informationen
zu unterschiedlichen Environments, also zum Beispiel, wie gesagt, wenn ich hier
im .NET Projekt drinne bin, Git Infos und danach kommen halt .NET Infos.
Dann kommt wieder ein File, dann kommt
Docker Context, falls man hat, dann füllt er auf, schreibt die Time hier
nebenhin, dann macht er einen Line Break und fängt wieder an.
So, hätten wir das auch.
Das ist, das ist Starship.
Genau. Zertifikate für Schulung.
Ja, müsste ich mal machen.
Müssen wir irgendwie sowas wichtig offiziell aussehendes rausbringen?
Muss ich mal meinen, meinen Thumbnail Designer fragen, ob er sowas machen kann.
Gibt er das Wubblos?
Das Wubblos High IQ Zertifikat.
Wubblos Certified Expert.
WCE.
Die Pipeline, wo der Code kommentiert, sich selbst zu.
Ich weiß selbst nicht mehr, was das macht.
Was? Ach so.
Ja, natürlich.
Guter, guter Code kommentiert sich selbst.
Ich habe ja nicht behauptet, dass das guter Code wäre.
Kargo, danke schön für den Sub.
Du hast doch mal eine Steckdosenleiste geflasht.
Wo finde ich die Aufzeichnung?
Das ist ganz einfach zu finden.
Du gehst auf Archiv.Wubblos.TV.
Und dann suchst du mal zum Beispiel nach Tasmota oder sowas.
Ja, und dann findest du sowas hier.
China Steckdosenleiste flashen von 2019.
Das haben wir schon öfters mal gemacht.
Das haben wir öfters mal gemacht.
Ja, China Geräte flashen.
Guck mal hier, das ist doch, das ist doch ein bisschen neuer.
Das ist sieben Monate.
Nimm lieber den da.
Nimm lieber den da. China Geräte flashen.
Guck, da sind wir doch schon.
Flash Champ wurde da gemacht.
Chainlaw war im Stream.
Ja, so sieht das, so sieht das aus.
Ja, und du findest übrigens in dem Archiv auch relativ gut Sachen.
Dir wird vielleicht aufgefallen sein,
dass er Tasmota findet, obwohl in dem Titel nichts von Tasmota steht.
Und das wisst ihr, woran das liegt?
Das liegt daran, dass alles, was ich sage,
indiziert wird zum größten Teil relativ gut.
Also alles, was ich sage in dem Stream wird quasi extrahiert.
Und dann zu so einem Transkript oder sowas umgewandelt mit Timestamps.
Das funktioniert
per Machine Learning und Grafikkarten Unterstützung.
Also wir haben da so eine fette Kiste in der Cloud.
Ich glaube, da sind.
Zwei, zwei, 30, 90.
Nein, nein, nein, das ist nicht Whisper CPP.
Das müsste ich mal.
Das müssen wir mal den Sirius Max fragen.
Der hat das programmiert.
Ich will jetzt gar nicht so tun, als wäre das von mir oder so.
Ich glaube, das ist eine Cloud Kiste mit 230 RTX 3090 drin.
Und er hat, glaube ich, zwei Wochen, zwei
oder drei Wochen gebraucht für das gesamte, für das gesamte Archiv.
Für die neuen Aufnahmen ist es jetzt, glaube ich, eine etwas kleinere Kiste,
weil dafür hat er ja Zeit.
Wir haben eine fette Cloud Kiste mieten müssen für das gesamte Archiv Transkriben
Transkribieren oder wie auch immer man das auf Deutsch nennen soll.
Ja, da findet man das.
Du hast letztens YouTube im Browser ein Terminal gesehen.
Ja, das ist ganz easy.
Guck mal, haben wir letztens auch gemacht Docker Start.
Was ist das?
Docker wieder abkacken.
Ich habe ein Körnel Update gemacht gerade und nicht rebooted.
Kann das sein?
Habe ich ein Docker Update gemacht und nicht rebooted?
Ich glaube, ich habe ein Körnel Update gemacht, nicht rebooted.
Ich glaube, ich habe ein Körnel Update gemacht, nicht rebooted.
Rebooten wir mal schnell.
Weil so was, so kommt das nämlich, kommt mir das nämlich vor, als hätte ein Körnel
geupdatet und nicht rebooted. Also wenn ihr manchmal unter Linux Probleme
habt, dass der USB Stick oder so nicht richtig erkannt wird,
kann das daran liegen, dass ihr vorher ein Körnel Update gemacht habt oder irgendwie
Probleme habt. Das ist super Hyper Entspannungs Musik gerade.
Ach Quatsch, ich muss, ich starte schon so automatisch TMAX, dabei brauche ich das gar
nicht mehr.
Guck mal hier, das haben wir auch letztens gemacht.
Docker Start YouTube.
Bam.
Ja, oder machen wir was anderes?
Gehen wir mal YouTube Slash.
Gehen wir mal auf mein Channel.
Ja, ja, Reject, Accept, All.
Guck mal.
Wir können.
Wir können meine mein mein letztes Battlefield Video im Terminal gucken
und wir bekommen sogar Werbung davor.
Ist das nicht POG?
Skip Trial.
Ja.
Ultra High Auflösung.
Alles klar, oder?
Nice.
GG Eats.
Wenn man weiß, dass man da gerade im Hintergrund
Battlefield 2042 sieht.
Finde ich, kann man das sogar irgendwo erkennen.
Es sieht schlechter aus als Wolfenstein, weil viel, viel pixeliger, aber in 60 FPS.
Hier unten drunter den Rest rendert er natürlich in Schrift.
Kann er Schrift rendern?
Da muss er nichts machen.
Nur bei Bildern wird es halt ein bisschen schwierig.
Vielleicht können wir allerdings.
Ich mache mal die Schriftgröße ein bisschen klammer.
Jetzt sieht das deutlich besser aus.
Wartet mal.
Oh, jetzt haben wir jetzt.
Jetzt haben wir es gebraked.
So was kaputt.
Ach, der rendert immer mit fester.
Mal gucken, mal gucken, wie klein wir es machen können.
Leute, ich glaube, das funktioniert.
Aber ich war mal ganz klein.
Da haben wir mehr Pixel zur Verfügung.
Oh, Alter, guck mal.
Das sieht doch für Terminal relativ gut aus.
Wir skippen.
Darf ich bitte das ad skippen?
Komm mal hier Battlefield 2042 im Terminal.
Das sieht gar nicht so schlecht aus.
Jetzt hat es keine 60 FPS mehr, ist aber auch klar.
Guck mal, wie viele Pixel er rendern muss dafür.
Aber dafür sieht es dafür sieht es besser aus.
Mach mal, mach mal wieder aus und mach mal die Schriftgröße normal.
Mein Terminal ist voll am abspacken gerade.
Ich muss es mal kurz wieder ausmachen.
Okay, ja, so sieht es aus.
Wie gesagt, demnächst irgendwann.
Wir haben uns letztens erst drüber unterhalten.
Wir machen das auf jeden Fall noch das Video.
Ich kann ja nicht genau sagen, wann es soweit ist.
Es gibt die Tage im Video über den Emulation über die Emulator Kiste, wo man
sogar Switch emulieren kann. Ja, Nightbot erzählt Mist.
Die Apple User brauchen die Apple Logo.
Stimmt, das sieht man immer.
Ich weiß nicht, warum Apple User auf ihrer
Shell ein Apple Logo brauchen, aber ich gehe davon aus, dass wenn man das bei Star
Ship einschaltet, dann sieht man dort auch das Apple Logo.
Lohnt sich der Mehraufwand mit Arch eigentlich so sehr?
Ja, kommt drauf an, was du machen willst.
Das ist Wisse.
Das ist die Standard Antwort, die ich
eigentlich so gut wie auf 99 Prozent aller Fragen geben kann.
Es kommt drauf an, wenn du was lernen willst, lohnt sich.
Wenn du was willst, was sich genau so bedienen lässt und verhältst, wie du das
gerne hättest.
Im Rahmen der Möglichkeit der eingesetzten Software.
Natürlich lohnt sich das auch.
Wenn du sagst, lohnt sich der Zeitaufwand
versus zum Beispiel ein vorkonfiguriertes Ubuntu oder sowas, wenn du einfach nur
surfen willst oder irgendwie als als tägliches bisschen am Rechner rum
klicken Betriebssystem lohnt sich der Mehraufwand.
Tja, wenn du einfach nur im Browser bedienen willst oder vielleicht mal.
Bild einscannen willst oder irgendwas und Standardsachen machen willst und keine
speziellen Wünsche hast, die so Ubuntu nicht macht, dann wahrscheinlich nicht.
Es ist.
Es hängt schlicht und ergreifend davon ab, was du haben willst.
Wenn du was lernen willst, lohnt sich auf jeden Fall.
Weil.
Man lernt unglaublich viel dabei, wenn man mal so.
Ich sage jetzt absichtlich vom Scratch ist es nicht wirklich so eine Art.
System eingerichtet hat, weil der Installer nimmt einem sehr viel ab.
Und für die richtig Hardcore Linux Fetischisten ist wahrscheinlich selbst
eine Installation von Hand immer noch nicht richtig vom Scratch.
Da musste man mindestens unter Gento den Graben selbst kompilieren.
Und am besten musst du auch noch alles andere selbst machen.
Aber ich meine, irgendwann muss man sich auch mal überlegen.
So Kosten Kosten nutzen.
Da lernt man aber wahrscheinlich noch mehr.
Ansonsten.
Es hängt ganz davon ab.
Was du machen willst.
Wenn dir Kubuntu gefällt, gibt es überhaupt keinen Grund, warum du jetzt
irgendwie wechseln solltest, es sei denn, du willst dich damit beschäftigen.
Dann ist natürlich sinnig.
Also wenn du dich damit beschäftigen willst, dass du zum Beispiel auch mal
so basic Sachen gemacht hast, wie den wie einen X Server installiert und in X
in RC eigentlich konfiguriert, dass du das in der Umgebung grafische Oberfläche
starten kannst.
Solche Geschichten.
Dann ist es nicht verkehrt.
Ja, ich muss ja sagen, ich persönlich mag weder Kubuntu noch die meisten anderen
Linux Oberflächen.
Also wenn ich mich entscheiden müsste, was also allerwichtigste natürlich.
Also wenn ich mich entscheiden müsste zwischen Oberflächen unter Linux,
dann würde ich pauschal sagen, ich finde alle kacke und ich bleibe bei drei
beziehungsweise bei irgendwas minimalistischem.
Ich meine, meinetwegen.
Ich habe noch Fluxbox oder sowas.
Aber die drei ist cool, weil die drei hat noch nicht mal Fenster Standardmäßig.
Du hast einfach alles im Fullscreen.
Ich mag wahrscheinlich drei, weil es einfach einem nicht in die Quere kommt,
weil es da ist und.
Eigentlich nichts macht großartig.
Also nichts, was mich nerven würde.
So, wenn es aber heißt Okay, ich müsste mich so zwischen den Mainstream Desktop
Umgebungen entscheiden, weil das hier ist ja keine wirkliche Desktop Umgebung.
Ich habe ja noch nicht mal einen Desktop.
Ja, ich habe das im Archiv.
Ich habe ja noch nicht mal einen Desktop.
Ich habe ich habe ein Hintergrundbild, aber ich habe keinerlei Symbole und nix.
Das ist einfach nur Hintergrundbild.
Ich habe keinen Desktop im klassischen Sinne.
So, also wenn ich mich entscheiden müsste zwischen einem der klassischen Desktop
Umgebung, dann würde ich mich wahrscheinlich für Mate entscheiden und wahrscheinlich
einen wahrscheinlich irgendeinen Mate Desktop unter Linux Mint oder XFCE.
Wobei ich ehrlich, ehrlich, zum
ehrlich, ehrlich gesagt eher zu Mate tendiere, weil das auch recht, recht schön und simpel ist.
Wie viele Sterne das hat auf GitHub.
Mit allen anderen Umgebungen kann ich gar nichts anfangen.
Also ich mag weder KDE
noch mag ich Gnome.
Wobei man ja sagen muss, Mate ist ja quasi Gnome 2 plus in neu.
Also wie gesagt, ich mag kein Gnome, ich mag kein KDE, ich mag kein Unity.
Ich mag kein was gibt's denn da sonst noch?
Batschi und und anderes Zeug.
Also wenn, wenn überhaupt klassischer Desktop, dann würde ich wahrscheinlich mit
mit Mate nehmen, aber ansonsten Arch mit i3 beste.
Ja.
Könnt ihr, könnt ihr bekommen?
Ich muss das nur noch auf GitHub holen.
Ich würde es jetzt eigentlich machen, aber ich bin gerade nicht eingeloggt hier auf dem Account.
Sonst könnte ich das jetzt machen.
Ich habe ja einen Dot.
Also was du machen kannst ist.
Wubblords.
Ich habe einen Dot-File-Repo auf GitHub.
Das ist aber alt.
Da habe ich seit drei Jahren nichts mehr reingepusht.
Dort werde ich aber auch die Sachen dann reinpacken.
Warum nicht Cinnamon?
Weil mir Mate einfach vom Handling her besser gefällt.
Aber wie gesagt, ich würde ja, wenn ich die Auswahl hätte, gar nichts verwenden,
sondern einfach bei meinem i3 bleiben.
Wenn ich es ging ja darum, wenn ich mich entscheiden müsste, was von den Desktop
Umgebung ich verwende.
Das ist nicht, das ist nicht nur ohne Western Konflikt.
Das ist ohne alles.
Da ist kein Starship drinne, kein da ist nix nix drinne.
Ja, das stimmt.
Das wird sich wahrscheinlich für für Rust so eine Standard Projekt Zeug nicht ändern.
Was ja nicht heißt, dass die Leute nicht anfangen können, in ihren Projekten selbst
dann kein Tommel mehr zu verwenden, sondern irgendwie was anderes.
Ich weiß auch nicht mal wieder Gram hieß.
Ich habe das letztens bei Hacker News irgendwo gesehen, dass Tommel jetzt out ist
und irgendwas Neues viel geiler.
Aber so ist das.
In der Rust Welt, da kommt es öfters vor.
Nicht ganz so schlimm wie in der JavaScript Welt.
Aber bei Rust ist es auch so.
Ich wusste, dass irgendwie einer damit jetzt ankommt, ja.
Wobei Linux from scratch ist ja eigentlich keine Linux Distribution, sondern eine
Anleitung, wie man ein Linux from scratch bauen kann.
Ja, ist immer schief.
Guck, schief.
Punkt Wobblos.
Wollen wir da hier mal gucken.
Was ist das?
Das ist das Richtige.
Linux, Linux Hackermans.
Da haben wir Sachen zusammen eingerichtet.
Genau.
Ja, die Sortierung ist, glaube ich, nicht so ganz optimal.
Arbeitest du nicht immer in einer VM, dann hast du keine Grafik Beschleunigung.
Das kann man so pauschal nicht sagen.
Also es stimmt, ich bin in der VM auch.
Ach so, für alle, die es nicht wissen, dass das hier ist eine VM.
Also das hier ist mein Haus System.
Das ist die Windows Kiste. Das ist eine VM.
Ich habe einfach nur deswegen lässt sich das auch so schnell
schalten.
Ich habe einfach nur einen zweiten Desktop
unter Windows und da läuft die VM im Fullscreen.
Ihr seht es ja hier.
Das ist vor allem bei Workstation vor allem.
Also ganz, ganz ohne Grafik Beschleunigung bin ich auch nicht.
Ich könnte wahrscheinlich sogar.
Wie heißt dieses Ding?
Juni N Engine?
Nee, wie heißt dieser komische Benchmark?
Ah, hier.
Juni Engine, Juni Gen Heaven Benchmark.
Ja, können wir ja mal machen.
Den kann ich in der VM ausführen und das läuft auch ganz passabel.
Wobei man halt sagen muss, dass man die
Performance und vor allem die so wie akkurat das ist.
Nicht wirklich mit Native vergleichen kann.
Ja, also prinzipiell funktioniert das.
Können jetzt sagen, ihr könnt bla bla bla bla bla bla bla.
Run Zack.
Sieht man das geht auch in der VM.
Und.
Und sogar ganz, ganz.
Ganz brauchbar.
Ich meine, guck mal, hier ist ist durchaus in Ordnung.
Hier guck mal.
Performance in der VM, dass das Problem ist.
Vor allem wie.
Wie akkurat das ist.
Also
die unterstützen zwar OpenGL bis vorletzte Version, aber halt nicht alles.
Und dann hast du manchmal Grafik Fehler
und manche Sachen werden übereinander gezeichnet und so was.
Das ist in der VM nicht ganz so nicht ganz so nicht ganz so toll.
Zeig mal CPU Auslastung geht nicht, weil ich gerade im Fullscreen bin.
Aber ich kann das beenden.
Ich kann dir keine CPU Auslastung zeigen.
Weiß ich kann man hier kann man jetzt CPU Auslastung über über überblenden.
Irgendwie ne.
Quality Ultra ist jetzt die das jetzt in Ultra irgendwie besser aus.
Eine hier Fullscreen hier.
Guck mal ran.
Jetzt kann ich jetzt kann ich umschalten.
Ok. Benchmark.
So zeigt mal CPU Auslastung.
Ja, langweilt sich noch.
Aber das wundert mich jetzt auch nicht, weil CPU.
Ja, mach ja, hast recht.
Kann man machen hier Settings, aber hier Settings.
Wo kann man das alles einschalten?
Geh mal Quality Ultra.
Und dann Settings.
Anti Lasing vierfach.
Ah, das geht erst. Das geht erst.
Ok, das geht.
Muss man erst mal ausmachen.
Ok, auf.
Geh aus.
Testlation.
Extrem.
Quality Ultra.
Ist in der Multi Mono Anti Lasing achtfach.
Resolution System.
Full Screen.
Ok, gib ihm.
Ja, Testlation.
Wie wie in echt?
Wie in echt sieht es aus?
Ja, die Grafiker nicht.
Die Flutsch trotzdem.
Ach so. Ich wollte ja wollte ja Systeme
Auslastung einblenden.
Mach ich, mach ich schnell.
Full Screen.
Ja, ok, Benchmark.
Alles klar.
CPU Auslastung.
Juckt halt meine CPU gar nicht.
Aber Performance, also CPU Performance ist ja in der VME nicht das Problem.
Weil CPU Performance nahezu native ist.
Was ich jetzt hier nicht zeigen kann in der VME ist Grafikkarten Auslastung, weil
ich habe ja keine richtige Grafikkarte, die das rendert.
Das ist ja alles mit Trick 17 weitergereicht ans Haus System überhaupt ein GL und was auch immer.
Das wird man hier nicht gescheit sehen können.
Aber hey, das funktioniert in der VME.
Solange man.
Das ist halt das ist halt auch wirklich der Knackpunkt, wenn man so Sachen in der VME macht.
Solange man halt einen Standard verwendet, der gut supportet wird und wer jetzt
das Neueste vom Neuesten verwenden will, also irgendeinen Balken Renderer oder so, das wirst
du wahrscheinlich in VME vergessen können.
Ich weiß nicht, VME Workstation.
Ich bin mir nicht sicher, ob sie das können.
Auch tatsächlich.
Nee, können sie nicht.
Können sie nicht, dass das hätte mich jetzt.
Das hätte mich jetzt auch gewundert.
Ja.
So sieht es aus.
Also das so die die meisten Sachen, wenn es nicht gerade Spiele sind, funktionieren.
Also Spiele hast ja Linux Technik ein paar Probleme.
Das funktioniert in der VME.
Also die meisten, die meisten Sachen, die man braucht.
Also Blender oder so.
Gut, wenn jetzt halt dann wiederum das Projekt rendern willst, dann ist natürlich
wieder schwierig, wenn du keinen direkten Grafikkarten Access hast.
Aber also an sich funktioniert das wirklich ganz brauchbar in der VME.
Eine Sache, die mir persönlich allerdings
in der VME fehlt und die es so auch nicht geben wird, ist folgendes.
Ich zeige euch mal was. Guck mal die CPU.
Guck mal die CPU Qualität an.
Die CPU Auslastung an.
Und jetzt gehen wir mal auf meinen YouTube Channel und machen ein Video an in hoher
Qualität und in hoher Auflösung.
Da werdet ihr vielleicht gleich feststellen, dass es da so ein paar
Probleme gibt.
Ihr seht, das hat ganz schön viel CPU Auslastung.
So rein das rein das Video.
Aber 4K oder 8K Video.
Gucken wir mal.
8K. Jawohl.
Perfekt.
Tja.
Ich meine, meine CPU kann es.
Ja, ich kann 8K rein über die CPU decoden.
Aber man sieht schon, die kommt da ein bisschen ins Schwitzen.
Ich meine, es ist eigentlich extrem nice,
dass das überhaupt so gut funktioniert über die CPU.
Aber was man daran sieht, ein Problem ist Hardware Decoding.
Und das Ganze am besten jetzt auch noch mit 60 FPS.
Gibt es 4K Ultra HD?
60 FPS.
Ja, flying over.
Und dann das Ganze noch mit.
Weiß ich, ob es 60 FPS ist.
Wahrscheinlich nicht.
Ja, da sieht man schon, das ist dann 4K schockt nicht wirklich.
Aber das ist halt das Problem, weil du keine GPU, kein GPU Decoding hast in der VM.
Das hätte ich wirklich gerne.
Und das fände ich cool, wenn VMWare dort irgendwas trickst.
Was ja möglich wäre, aber bis jetzt hatte
VMWare noch keinen Bock drauf.
Also Hardware, Hardware, GPU, also die GPU accelerated oder besseres
Decoding von Videos, das wäre schon eine coole Sache.
Unter VMWare.
Und dann ist es quasi echt fast wie native.
Und ehrlich gesagt, es gibt wenig Unterschied.
Also performance technisch ist das super in der VM.
Also mit i3, da kannst du dich überhaupt nicht beschweren.
Das ist, das ist wie wie native.
Allerdings hast du halt bei manchen Grafik Sachen und gerade bei Video Decoding
vielleicht ein paar Probleme.
Das geht schon in VMWare, aber nur mit entsprechenden GPUs.
Das funktioniert nicht.
Dazu müsstest du ja.
Dazu müsstest du ja irgendwie Zugriff auf die Grafikkarte bekommen.
Das geht mit VMWare nicht.
Das geht höchstens, wenn du ESX verwendest
und deine extra VMWare mit PCI Geräten durchreichen.
Oder du verwendest KVM.
Was aber mit VMWare nichts zu tun hat.
Ja, es ist doch aber klar, dass ich nicht von ESX
rede, sondern von VMWare Workstation auf dem Desktop.
Da geht das nicht. Und das mag VMWare auch nicht.
Virtual Box Virtual Box kann es witzigerweise in bestimmten Konstellationen.
Also wenn du Virtual Box verwendest, leider nur unter Linux,
dann kannst du Grafikkarten durchreichen.
Allerdings dann kann ich auch KVM verwenden.
Wenn ich sowas mache.
Was genau magst du an KDE genau um dich?
Oh, das ist es. Das sind das sind alles äußerst subjektive
Dinge, wo ich so aus dem Kopf jetzt gar nicht.
Ich könnte ich könnte ja aus dem Kopf glaube ich jetzt gar nicht so
irgendwie so komplette Liste sagen, dass das das ganze Feeling von Gnome und KDE
mag ich nicht. Man muss halt sagen KDE und Gnome sind komplett unterschiedlich.
Ja, auch wie sie aufgebaut sind.
Also KDE Programme erschlagen dich teilweise an Optionen und Gnome Programme
haben manchmal die elementarsten Sachen nicht, wo man sich fragt Warum gibt's dafür
kein Setting? Aber ich mag beide nicht.
Also wenn ich mich zwischen den beiden
entscheiden müsste, dann würde ich wahrscheinlich
schwer zu sagen, wahrscheinlich Gnome bevorzugen.
Wiederum, wenn ich was entwickeln müsste Cross-Platform mit GUI,
dann dann eindeutig Qt und nicht GTK.
Also es kommt immer drauf an, was man machen will.
Ich mag ich mag das Handling und das Feeling von Gnome nicht und von KDE nicht.
Gut, ja, spricht man so aus.
Das da meine ich also quasi das Grafik-Tool.
Das Toolkit auf dem das GUI.
Das ist das UI Framework, auf dem auch KDE basiert.
Kann man ja auch eigene Cross-Platform Anwendungen mitbauen.
Das würde ich eindeutig dafür GTK vorziehen.
GTK ist das, worauf Gnome basiert.
Für einen Fileserver habe ich mir Lizenz für Unraid gekauft.
Geht zwar auch kostenlos.
Ich muss sagen, ich habe ich habe Unraid
früher immer so ein bisschen belächelt und auch ein bisschen geflamed.
So, aber wer braucht denn so was?
Man kann doch einfach ein komplettes Linux
betreiben, einfach ein Ubuntu Server, Debian Server, was auch immer und gut ist.
Mittlerweile habe ich selbst Unraid laufen und finde das eigentlich ganz angenehm.
Geht mir auch so.
Ich drehe immer durch auf der Arbeit teilweise.
Wenn ich wirklich ernsthaft da was machen soll, unter anderen Systemen.
Unraid unterstützt Hardware weiterleitende Grafikkarte 1 zu 1 an die VM.
Unraid macht das auch nicht, das KVM unten drunter.
Unraid ist ja auch nur eine hübsche, eine hübsche
Oberfläche auf. Was war Unraid nochmal?
Das war keine Mainstream Distribution.
Das war irgendwas, irgendwas ganz spezielles.
Ich glaube Slackware. Kann das sein?
Ist Unraid Slackware?
Arch by the way.
Die Leute dürfen natürlich nicht fehlen.
Arch by the way für Unraid.
Alles klar.
Ist ein bisschen blöd, dass es ein Slackware ist.
Weil es wäre, es wäre schon cool.
Sagen wir mal, es wäre irgendwie Debian based.
Wenn du einfach
einen Unraid Package installieren könntest und hättest das UI verfügbar auf jeder
x-beliebigen Debian Kiste, aber das ist ja nicht ihr Ziel.
Die wollen ja ihr eigenes Zeug vertreiben.
Ich habe eine VM mit acht Kern und 20.
Alter.
Wie viel RAM habe ich denn hier drinne?
Ah 24G, okay.
Brauche ich übrigens nicht komplett.
Zwei Gigabyte used, 19 Gigabyte free.
Irgendwo muss der RAM ja hin.
Also hat sich richtig gelohnt, hier 20G RAM reinzuhängen in die VM.
Hast du es auf einer SSD liegen?
Das ist das einzige, was mir einfällt, wo das Problem ist.
Also wenn ich, wenn ich die VMs nicht auf einer SSD liegen habe, ist es auch lahm.
Wenn ich die auf einer SSD liegen habe, hier siehst du ja, ist das ist das alles
äußerst zackig. Ja, im Task Manager unter Windows kannst du das machen.
Muss man kurz was machen, wo man nicht so einschläft dabei.
Was nicht so laut ist.
Die Frage mit dem Senf, Alter, musst du das jetzt jeden Stream stellen?
Zeit für den Acceleration Champ.
Ich fürchte, das liegt über meine über meine IQ Klasse.
GPU Pass-Thru sowas zu machen.
GPU Decoding ist unter Linux schwierig.
Das stimmt.
Leider. So sind wir noch so.
Brauchst die richtige Kombination aus Kernel-Version, Browser-Version, Mesa-Treibern,
Hersteller-Treibern.
Das hast du nicht gesehen.
Und selbst dann geht es auch oftmals nicht für alle Codecs.
Und manchmal geht der eine Codec in Version später der andere wieder nicht.
Das ist ziemliche Abfacke unter Linux, was GPU Decoding angeht.
Ach ja, ich hab ich hab tatsächlich eingestellt, alles in einem Image
speichern, aber das kann es eigentlich nicht sein.
Servus, welchen Hypervisor kannst du empfehlen?
Wo wir wieder beim Thema sind.
Ich muss zu 99 Prozent eigentlich immer gleich antworten auf solche Fragen.
Kommt drauf an, was du machen willst.
Was willst du denn machen?
Leute, ich habe jetzt eine Stunde zehn gelabert.
Wir haben nicht eine eine Zeile Python programmiert.
Ich mach mal kurz PyCharm auf,
dass ich wenigstens so tun kann, als würde ich was machen in der Richtung.
Was willst du denn machen?
Was? Was hast du vor?
Also sagen wir mal, es reicht ja schon, wenn du zwei verschiedene Sachen dir
überlegst. Willst du Desktop-Virtualisierung machen?
Also grafische Oberfläche und sowas?
Oder nicht?
Das ist eigentlich das. Das reicht ja erst mal schon.
Weil wenn du Desktop-Virtualisierung machen willst, beides.
Ja gut, dann willst du Desktop-Virtualisierung machen, wenn du
grafische, dann bleibt dir nichts anderes übrig, außer vor allem Workstation oder
VirtualBox zu nehmen. Es sei denn, es sei denn, der ist der eine Sonderfall, den
sollte man vielleicht auch noch erwähnen. Es sei denn, du willst eine Spiele-Windows-Kiste
unter Linux anlegen und dort eine Grafikkarte durchreichen.
Dann kannst du auch KVM nehmen,
wobei du dann andere Probleme haben wirst und umschiffen musst.
Aber die einfachste Variante dürfte wahrscheinlich
in beiden Fällen sein,
vor allem bei Workstation.
Kauf dir irgendeinen billigen Key bei irgendeinem Reseller für 2,50 Euro
und installiere dir vor allem bei Workstation,
wenn du grafische Sachen virtualisieren willst.
Meiner Meinung nach ist es das Beste.
GPU-Pass-Through und so außen vor.
Aber meiner Meinung nach ist es für Desktop-Virtualisierung das Beste.
Ich finde es deutlich angenehmer zu bedienen als VirtualBox und ich habe auch
den Eindruck, es funktioniert unterm Strich besser als VirtualBox.
Unter Linux hast du natürlich immer die Möglichkeit, KVM zu nehmen.
Aber das ist mit Desktop-Virtualisierung auch nicht so geil, außer wenn es eine Grafikkarte
durchreicht.
Es gibt so Sachen wie Wirt, Wirt, Wirt, Wirt, GPU und solche Dinger.
Aber die einfachste Sache dürfte
wahrscheinlich wirklich vor allem bei Workstation sein.
Du kannst doch den Windows Server auch direkt auf der Hardware installieren.
Windows Server ist doch egal, worauf das läuft.
Aber du kannst Windows Server ohne
Probleme in Vmware laufen lassen, ist überhaupt kein Ding.
Und Treiber lassen sich da auch ohne Probleme installieren.
Was du halt nicht machen kannst, ist aus der
Vm
auf Hardware zugreifen, die im Haus drin ist.
Es sei denn, es ist USB und lässt sich weiterreichen, weil das Einzige, was du
weiterleiten kannst vom Host in die und in die Vm sind ja quasi USB Geräte.
Rest kannst du vergessen.
Hyper-V, keine Ahnung, kann ich nichts zu
sagen, weil ich noch nie was mit Hyper-V großartig gemacht habe.
Und ich sage es euch ganz ehrlich, Leute.
Ich habe auch nicht vor, was mit Hyper-V zu machen.
Lohnt sich Battlefield 2042 zu kaufen für
20 Euro?
Tja, Leute, es kommt drauf an.
Werde das gedacht?
Ja, wie?
Wie scharf bist du denn wieder mal Battlefield zu spielen?
Also ich würde ja sagen, Kauf lohnt sich.
Nach wie vor nicht.
Für 20 Euro kann man sich vielleicht mal überlegen.
Aber auch nur, wenn man die Entwicklung bisher gut findet und denkt.
Ja, man hat da lang genug seinen Spaß dran, weil man muss ehrlich sagen, viel Content
hat das Spiel nicht.
Das Spiel hat wieviel zwölf Karten oder so jetzt?
Elf Karten oder so?
Zehn?
Nicht viel.
Kam Hogwarts Legacy nicht gestern oder vorgestern raus?
Ich habe das nur mitbekommen, weil auf Twitter
die Leute wieder Sturm gelaufen sind
gegen alle möglichen Dinger über gegen Streamer, die es gestreamt haben und
Zeitschriften, die es reviewt haben und dabei.
Und Twitter ist wieder komplett explodiert.
Haben sich drüber aufgeregt, dass das ganze streamen würde.
Und dieser Twitter ist wieder komplett ausgeflippt.
So, das ist der einzige Grund, warum ich das mitgekriegt habe.
Aber Twitter darf man eh nicht lesen.
Bei sowas da zweifelst du echt immer an der gesamten Menschheit.
Na gut, dann dauert es wohl noch ein bisschen, bis das rauskommt.
Interessiert mich nicht, weil
ich bin ein bisschen zu alt.
Für Harry Potter.
Ich weiß, viele, so ein paar, nicht viele nach mir, so ein bisschen jüngeren
damals, sind da unglaublich drauf abgegangen.
Ich war schon nicht mehr die Harry Potter.
Ich bin schon eine Generation vor Harry Potter.
Bei mir war es eher Herr der Ringe damals.
Echte Performanceprobleme auf dem PC.
Ja gut, das ist ja wenigstens mein
handfester Grund, warum man das vielleicht nicht spielen will auf seinem PC.
Gut, ich werde es auch nicht spielen, weil mich Harry Potter nicht interessiert.
Aber das ist natürlich mein handfester Grund.
Auf Twitter ging es ja
im Prinzip wieder nur darum, dass es moralisch verwerflich ist, wenn man es
spielt und solche Geschichten, aber Twitter spielt sich generell so als
Moralapostel immer auf. Also viele Leute auf Twitter.
Deswegen habe ich ja auch keine deutschen
Tags, also keine deutschen Trends auf Twitter, sondern ich wohne in Andorra.
Auf Twitter. Ich wohne in Andorra und in Andorra gibt es eigentlich
das ganze Jahr über keine Trends.
Das einzige Mal im Jahr, wo es in Andorra Trends gibt, ist
die Tour de France.
Wenn die mal irgendwie da in der Richtung rumfahren, dann gibt es einmal im Jahr
irgendwie zwei, drei Tage einen Trend auf Twitter in Andorra.
Restlich ist an restlichen Tagen ist Twitter Andorra Trend frei.
Ja, das habe ich auch auf Twitter, auf
Twitter gelesen, dass Kronk jetzt irgendwie der Böse ist.
Alter, ich meine Kronk, man.
Wie kann man was gegen Kronk haben?
Ich verstehe das nicht.
Ich gucke keine Let's Plays, muss ich dazu sagen.
Aber zumindest nicht regelmäßig.
Und ich habe noch nie ein Kronk Let's Play geguckt.
Aber alles, was ich bisher von Kronk gesehen habe, hatte ich nie die Eindruck, als
kann man dem jetzt irgendwie da, als ist das jemand, dem du, weiß nicht,
also von dem du irgendwas Schlechtes erwarten würdest.
Die sind wieder, ah gut, es ist Twitter.
Auf Twitter flippen die Leute immer gerne aus.
Naja, ach ja.
Und ich würde sagen, wir sollten jetzt so langsam aber sicher mal anfangen, was zu basteln.
Also, hier ist ein Kronk.
Auch der Lager hier, da muss man mal nachvollziehen.
Wie kann ich da beinhalten?
Wollen wir mal abwarten?
Ja.
Das ist ein Kronkleid und es ist auch ein Spiegel.
Ich sehe, es gibt keine Werte, aber ja.
Und mal ein Lager.
Ja, ich.
Dann gibt es schon mal, das ist ein Spiegel.
Also wir sind da.
Also aus dieser Zeit wäre ich schon, dann wäre ich da.
Wenn es jetzt noch nur eins gibt, dann fange ich hier noch mal zu lesen.
So, da.
Haltstipps. Hab jetzt einen Vertrag, hab jetzt einen Vertrag mit 40k Boni bekommen, Berufseinsteiger, einige wollten mich mit 35k scammen. Ja, wisst ihr, was das Schöne daran ist? Es gibt überhaupt keinen Grund mehr, heutzutage in der IT sich irgendwie abspeisen zu lassen mit leeren Versprechungen und unterdurchschnittlicher Bezahlung, weil gerade wenn man in der Position ist, dass man eh gerade guckt, also wenn es doch nicht
mal dieser Faulheitsfaktor mit reinkommt, so nach dem Motto, ich hab keinen Bock zu gucken, also wenn man eh gerade am Gucken ist, die suchen alle händeringend Leute und ich hoffe, dass es am Ende bei dir drauf rausläuft, dass du so um 50k im Jahr landest, einstiegsmäßig.
Das ist dann nicht übel. Ich hab damals angefangen nach der Ausbildung mit 33.500, das ging dann relativ schnell auf 36k und später noch ein bisschen hoch, dann irgendwann auf 70.
Bis vor ein paar Jahren da jetzt noch ein bisschen mehr als 70k und jetzt im neuen Job noch ein bisschen mehr. So, und so muss das sein, so muss das sein. Du kannst ja nicht erwarten, dass die Leute alle für ein Apfel und ein Ei arbeiten.
Das ist auch so eine Redewendung, ich weiß gar nicht, ob man das überhaupt sagt. Meine Oma hat das immer gesagt, quasi für wenig, wenig. Die hat nicht gesagt wenig, die hat immer gesagt Apfel und ein Ei.
Also die Leute können nicht erwarten, dass man für ein Apfel und ein Ei arbeitet.
Also die Leute können nicht erwarten, dass man für ein Apfel und ein Ei arbeitet.
Und wenn es sein muss, auch am Wochenende und wenn es sein muss, auch nachts und wenn es sein muss, auch freiwillig, irgendwelche anderen Sachen.
Man muss sagen, unterm Strich, die bekommen, was sie bezahlen.
Und wer nicht bezahlen will, der muss sich auch nicht wundern, wenn die Leute abhauen.
Weil es jetzt nicht die super krassesten, motiviertesten und schlauesten Leute kriegt.
Twitter ist im einstelligen IQ-Bereich. Ja, das ist gut, weil dann kommen die alle hierher, die Leute mit High IQ und nicht auf Twitter.
Weil wir haben hier schon, muss man ja mal ehrlich sagen, wir haben hier schon einen äußerst intelligenten Massive High IQ Chat.
Jeder Prime Subscription trägt dazu bei.
Jede Prime Subscription trägt dazu bei.
Jeder Prime Sub wird quasi distributed, der IQ an jeden Zuschauer.
Ich meine, es sind aktuell 185 Leute.
Das heißt, bei einem Prime Sub, 1 durch 185, das heißt, bei einem Prime Sub steigt euer IQ um 0,005 Punkte.
Das heißt, ein Prime Sub tut es nicht.
Aber wenn man jetzt, sagen wir mal, so irgendwie 50, 60 Prime Subs kriegt, dann sollte das schon spürbar sein.
Lryy? Ich kann das nicht aussprechen.
Das sind so wenige.
Kale in dem Namen drinnen.
Aber Dankeschön für den Sub.
Oh, Nino Sauria, auch danke für den Sub.
Jetzt geht's doch.
Leroy Changit.
Ach du Scheiße, da wäre ich ja im Leben nicht drauf gekommen, Mann.
Aber jetzt, wo du sagst, jetzt kann man sich das zusammen reimen, ja.
Klud ist die Scherp.
Ich weiß nicht, mit was das zusammenhängt, aber okay.
Finde ich lustig, dass sich hier viele sammeln, die gerade ihre erste IT-Ausbildung, Studium angefangen haben oder gerade im Beruf sind und sich bei einer Physie-Ausbildung abbringen.
Es gibt viele.
Es gibt aber hier auch viele, die schon jahrelang in der IT arbeiten.
Wir haben ja auch Leute, die gar nichts mit IT am Hut haben, witzigerweise.
Aber ich muss sagen, hier ist alles, ist alles vertreten.
Also ich habe hier, wir haben hier teilweise massive Pfeifert-Leute.
Ich kann mich noch daran erinnern.
Wahrscheinlich tue ich vielen jetzt Unrecht, weil ich mir ihn besonders gemerkt habe, wo es um CSS-Fragen geht.
Da hatten wir den Auskenn-Fuchs manchmal hier.
Da taucht der, der spawnt hier auch manchmal immer wieder.
Oder wenn ich irgendwelche Web-Anwendungen mache oder CSS-Sachen mache.
Der Auskenn-Fuchs.
Erinnert sich noch jemand an den Auskenn-Fuchs?
Das ist der Name Programm.
Der hat dir Zeugs erzählt in CSS, wo ich mir immer denke, so was, ich wusste gar nicht, dass das überhaupt ein Schlüsselwort dafür gibt.
Kennst du eine smarte Steckerleiste, möglichst sechsfach Steckerdose?
Nee.
Äh, Steckerleiste.
Sechsfach nicht.
Ich kann dir eine Vierfach-Steckdosenleiste zeigen, die höchstwahrscheinlich mit Tasmota flashbar ist.
Aber ich glaube, auch sechsfach habe ich noch nie gesehen, ehrlich gesagt.
Also was möglich ist, ist zum Beispiel Hammer.
Die war bis vor kurzem noch flashbar.
Quatsch, nicht das Ding, Alter.
Smart.
Smart.
Die hier.
Da musst du aber gucken, ob es da vielleicht Angebote gibt oder sowas.
Also die hier war bis vor ganz kurzer Zeit noch OTA-flashbar.
Ja, OTA-flashbar.
Das ist aber immer, wie es so ist.
Bei diesen Custom-Firmware-Geschichten.
Es hängt immer ein bisschen davon ab, wann die ihre Produkte aktualisieren.
Also wenn das jetzt was Neueres ist.
Was ist das wieder für eine Three-Head-Amazon-Antwort?
Jemand probiert, ob sich nach aktuellem Stand noch Tasmota flashen lässt.
Die ist richtig gut, hält lange warm.
Was soll mir die Antwort sagen?
Wir gucken mal, ob die noch...
Wir gucken doch einfach mal, ob die noch...
Äh...
...Tasmota-flashbar ist.
Äh...
Wo ist sie zuerst?
Okay, die letzte Erwähnung von Tasmota ist natürlich Mitte Juli 2022.
Ist schwierig zu sagen.
Also, die ließ sich letztes Jahr noch flashen.
Das habe ich letztens auch im Stream gemacht.
Vor noch nicht allzu langer Zeit.
Die ließ sich noch flashen.
Wie das jetzt ist, weiß man halt immer nicht.
Manchmal gibt es aber auch, das sind meistens irgendwelche China-Chinesen-Hersteller,
Manchmal hast du auch Glück und du findest schon mit Tasmota angebotene Hardware.
Wobei das halt dann auch in Frage stellt, ja, weil das selbst flashen ist ja hauptsächlich, dass man weiß, was drauf ist.
Wenn es vorkonfiguriert kommt mit Tasmota, weißt du nicht, ob das eine unveränderte Tasmota-Version ist.
Klar, könntest du nochmal drüber flashen und sowas.
Das könntest du machen.
Was ist das eigentlich?
BitShake?
SmartMeterReader?
IR-Lesekopf?
Achso, na gut.
Das ist einfach zum Auslesen von so einem Impuls.
Wenn du beispielsweise am Stromzähler so eine LED hast, die quasi einmal kurz Infrarot blinkt,
da brauchst du keinen extra Adapter dafür.
Das kannst du mit jedem Fotosensor oder so erkennen.
Aber eine 6-fach-Steckdosenleiste habe ich glaube ich noch nie gesehen.
Aber eine 6-fach-Steckdosenleiste habe ich glaube ich noch nie gesehen.
Es gibt eine gute Seite zum rauskriegen, ob sowas geht.
Und zwar kannst duiersился.com
Tasmota, Black-Adder.
Tasmota, Black-Adder.
Es ist so eine Datenbank mit allen möglichen Tasmotageräten.
Und da kannst du gucken, was..
Wartet mal kurz.
Mal gucken, es hat geklingelt.
Ah, es ist...
Oh, es ist Amazon.
Schön, Amazon hat es geklingelt.
Geil, Alter.
Amazon hat es übers
Hoftor gepfeffert gerade.
Okay, ich weiß, was drin ist.
Es passiert nichts.
Ich habe gerade auf der Kamera geguckt.
Wen sehe ich da?
Einer von Amazon. Da hat es direkt übers Hoftor gepfeffert.
Aber nicht schlimm.
Es ist ein
SATA-Adapter drin.
Das geht nicht kaputt.
Also auf der Seite kannst du gucken,
ob du
vielleicht irgendwas
findest. Plugs und Sockets
zum Beispiel.
Da kannst du gucken, ob du irgendwelche Steckdosenleisten
findest mit
mehreren
mit sechs Steckern.
Ich habe ehrlich gesagt noch nie eine Sechsfach-Steckdosenleiste
gesehen. Ich weiß gar nicht, ob es da sowas gibt.
Hammer!
Ne.
Wo finde ich überhaupt die?
Powerstrip.
Ja.
Ja, die sind aber bestimmt nicht alle schaltbar.
Sowas hier.
Also erstens musst du dann das Gerät noch finden.
Zweitens musst du das Gerät passen zu dem, was du haben willst.
Und es muss ich heute noch flashen lassen.
Hier.
Tuya Convert might not be possible.
Und wahrscheinlich sind auch gar nicht alle
Steckdosen hier schaltbar, sondern immer nur
zweier zusammen und sowas.
Na guck mal, du hast auch nur vier Knöpfe.
Sehr, sehr.
Wahrscheinlich kannst du nur die Remote schalten.
Also da kannst du mal durchgucken, ob du irgendwas findest.
Ansonsten, also eine Sechser, Sechser-Steckdosenleiste.
Auf der Liste sind nur zwei Relays, genau.
Also eine Sechser-Steckdosenleiste zu finden ist schwierig, die, die Remote schaltbar ist.
Also per Gif, das Motor flashbar ist und Remote schaltbar ist.
Das finde ich maulig.
Sowas, sowas brauche ich auch.
Wobei ich habe hier schon Wub, Wub Money oder sowas.
Okay, also anscheinend geht das mit dem Flashen noch.
Sofern wir Rache Klo.
Äh, Rache Kloos.
Ähm, glauben, dann geht das anscheinend noch.
Ja, bei AliExpress kannst du gucken für solche Steckdosenleisten, wobei man sagen muss,
sehr viele der China-Chinesen-Hersteller sind mittlerweile umgeschwenkt.
Die setzen kein ESP32 und ESP2866 mehr ein.
Das ist irgendein anderer, irgendein anderer Chip.
Und da bringt dir, bringt dir das Motor gar nichts mehr.
Was bringt es eigentlich, seine Steckdosenleiste zu flashen?
Was bringt es eigentlich, seine Steckdosenleiste zu flashen?
Ich überlege gerade, wo ich, wo ich am besten anfange.
Also, das Erste ist, du hängst das Gerät ja bei dir ins WLAN.
Wenn du die flashst mit Custom-Firmware, dann weißt du, was drauf läuft.
Was du mit Herstellerfirma nicht weißt.
Zumal das alles irgendwelche China-Chinesen-Steckdosenleisten sind.
Ich weiß nicht, wie aufgeschlossen die Leute sind, sich ein China-Gerät ins WLAN zu hängen.
Ob die das wollen oder nicht.
Da muss sich ja jeder selbst überlegen.
Das Zweite ist, dass du die Sachen meistens nur mit der offiziellen App bedienen kannst.
Was auch doof ist, weil die offizielle App meistens scheiße ist.
Das Dritte ist, dass die Leisten oftmals nur über die Hersteller-Cloud laufen.
Also sprich, wenn du jetzt deine Steckdosenleiste ein- und ausschalten willst
und deine Internetverbindung geht nicht, dann kannst du es vergessen.
Vierter Punkt ist, vielleicht möchtest du das in deiner Heimauto machen,
aber wenn du das nicht kannst, dann kannst du es nicht machen.
Das heißt, um das Beste aus allen Welten zu haben,
also Offline-Steuerung, schönes Web-Interface, Heimautomatisierungs-Integrierung,
ob Source-Firmware drauf, ist das Beste, was du machen kannst,
das Ding mit Tasmota zu flashen, und du hast das Beste aus allen Welten.
Natürlich muss man dazu ein Gerät finden, was flashbar ist.
Und wenn es nicht so gut ist, dann muss man das Gerät auch mit Tasmota flashen.
Und wenn es nicht so gut ist, dann muss man das Gerät auch mit Tasmota flashen.
Natürlich muss man dazu ein Gerät finden, was flashbar ist.
Und wenn es nicht so gut ist, dann muss man das Gerät auch mit Tasmota flashen.
Natürlich muss man das Gerät auch mit Tasmota flashen.
Dann muss man das Gerät auch mit Tasmota flashen.
Zumindest eins, was eine SP32 und eine SPn866 drin hat,
dass man die Kontakte löten kann und dann darüber flashen.
Zumindest eins, was eine SP32 und eine SPn866 drin hat,
dass man die Kontakte löten kann und dann darüber flashen.
Das wäre extrem nice, wenn nahezu jede Firma, die Smart Home Geräte herstellt,
das wäre eine ganz tolle Geschichte, wenn nahezu jede Firma, die Smart Home Geräte herstellt,
irgendwie einen Entwicklungskit anbietet oder eine Beispielfirma 일본isch heißt.
Eine Beispiel-Firmware.
Ja, das werden die aber nicht machen.
Und warum werden die das nicht machen?
Ja, weil die denken, und damit haben sie wahrscheinlich auch nicht so ganz Unrecht in einigen Bereichen, ja,
dass sie das unterm Strich Geld kostet.
Weil, wenn es möglich ist, Custom-Firmware drauf zu flashen,
dann braucht man zum Beispiel keinen Cloud-Abo-Dienst für seine Kameras, um Video zu speichern.
Weil dann könntest du es einfach selbst streamen lokal und dort speichern.
Brauchst keinen Cloud-Service mehr und Cloud-Service-Abos und so ein Geschiss.
Also, die haben da schon ein gewisses Interesse dran, dass das möglichst closed ist,
dass sie eben noch mehr Scheiß verkaufen können.
Nee, nee, nee, wird's nicht.
Kameras zum Beispiel sind in Meta noch nicht mal überhaupt, glaube ich, standardisiert.
Thread ist ja nur das Wireless-Übertragungsprotokoll, was ja nicht sinnvoll ist für Kameras.
Nee, das wird nicht besser.
Was vielleicht besser wird, ist, dass ein bisschen mehr Geräte miteinander reden können,
was aber heutzutage auch schon nicht wirklich relevant ist, wenn man irgendeine Smart-Home-Zentrale hat.
Ja, nee, da glaube ich nicht dran, dass da irgendwas besser wird.
Es wird auch garantiert wieder irgendwelche proprietären Erweiterungen geben,
wo die Hersteller sich dann austoben und Zeug machen.
Kannst du eigentlich klicken.
Kannst du vergessen.
Wird's auf jeden Fall.
Wird's auf jeden Fall.
Wird's auf jeden Fall.
Wird's auf jeden Fall wieder geben.
So, jetzt habe ich 1.35 geschwätzt und wir haben nicht eine Zeile Python programmiert.
Ich glaube, jetzt müssen wir uns mal ein bisschen dran halten, dass das heute noch was wird.
Pogu.
So, ich würde sagen, wir fangen an.
Ich erzähle euch erst einmal, was eigentlich gebaut wird.
Es wird was ziemlich Simples gebaut.
So viel kann ich schon dazu sagen.
Es wird was ziemlich Simples gebaut.
Erstens, dass ich mir mal ein bisschen wieder so etwas advanceren Grundlagen angucke.
Und zweitens, dass ich mir mal ein bisschen was angucken kann und was, was ich tatsächlich brauche und zwar, ihr seht ja hier oben meine Statusleiste.
Ja, da hat man zum Beispiel so eine Anzeige drin, ob ich NumLog an oder aus habe.
Da hat man dann zum Beispiel eine Anzeige drin, ob ich mein Clipboard ein oder ausgeschaltet habe und die Load vom System drinne.
Ich habe Memory-Auslastung, äh, nicht RAM und Memory-Auslastung, das ist das gleiche, Keckel.
Ich habe Memory-Auslastung, Disk-Auslastung, CPU-Auslastung und halt ein Datum und die Uhrzeit drinne.
So, und da hinten ist das, was wir gebaut haben letztens im Stream, nämlich, ich hätte gerne einen einfachen Timer, den ich anklicken kann.
Und wenn er abgelaufen ist, schickt er eine Message, beziehungsweise wird der Hintergrund rot.
Das ist alles.
Wir bauen unseren eigenen Timer.
Das ist meine Statusleiste.
Easy.
So, so sieht das aus.
Guck, funktioniert ja auch schon im Ansatz halbwegs.
Und man kann ihn dann resetten und kann den Timer auf maximal, wenn ich das jetzt richtig, richtig sehe, auf maximal 99 Minuten und 59 Sekunden stellen.
Und es ist verbuggt, sehe ich gerade.
Das funktioniert nicht.
Ups.
Und dann timet der Timer halt so.
So vor sich hin.
Und das müssen wir so bauen, dass es funktioniert und sich ordentlich bedienen lässt.
Und dabei ein bisschen advancedere Python-Grundlagen lernen.
Zum Beispiel, wie man, ich bin nämlich ernsthaft, wie das funktioniert.
Zum Beispiel, wie man Methoden überlädt.
Aber mal angenommen, ich würde gerne sowas hier machen.
Da sagt Python nämlich, das geht nicht so ohne weiteres.
Und ich bin mir ziemlich sicher, dass es doch irgendwie geht, weil es wäre ziemlich bescheuert, wenn es nicht geht.
Wie lange bist du schon?
Ne.
Wie lange bist du überhaupt schon im IT-Sektor tätig?
Ähm.
Seit 2007.
Also 16 Jahre jetzt.
Ist schon ein bisschen hin, ja.
Was sollen denn die ganzen Kobold-Programmierer sagen, die das seit 1995 machen?
Ich bin 1984 geboren.
Das ist korrekt.
Ja.
Was soll ich sagen?
Es ist so.
Wobei man sagen muss, mit 38 ist man jetzt ja auch nicht super alt, ja.
Aber.
Aber.
Es hatte.
Es hat was tatsächlich ganz Nützliches, 1984 geboren zu sein, oder 1985, also so in dem Dreh.
Und zwar, dass man alle wichtigen Zeiten mitbekommen hat.
Man hat quasi.
Pre-Internet und Heimcomputer mitbekommen.
Und man hat Post-Internet und Heimcomputer mitbekommen.
Also man ist mit Computern aufgewachsen.
Genauso.
Wie man noch ganz klassische Kindheit kennt, mit, äh, draußen spielen, mit anderen Leuten.
Finde ich eigentlich ganz gut.
Ich hab, ich hab damals schon nicht gerne mit anderen Leuten, mit random Leuten draußen, draußen gespielt, ja.
Aber ich hab tatsächlich noch draußen, draußen gespielt.
Und ich hab, bin dann, bin dann mit irgendwelchen, äh, Freunden aus der Schule auf irgendeinen Campingplatz im Sommer mitgefahren und sowas.
Also ich hab tatsächlich so ganz normale, richtig, die, die richtig.
Krasse Old-School-Kindheit, so bis ich, bis ich zwölf war oder so.
Und dann, Modem, ISDN, DSL, Computer daheim und Zeug und rumgebastelt.
Ja, wahrscheinlich.
Ja, da, danach war eh aus.
Danach haben sie eher Fortnite miteinander gespielt.
Ja.
Oder man könnte sagen, dass ich mich nie richtig erwachsen angehört hab.
Das kann auch sein, ja.
Das stimmt schon.
Weil du keine Stunden anzeigst.
Ja, das muss ich mir gleich mal angucken.
Und gucken wir mal weiter.
Ja, so sieht's aus, ja.
Ähm, ja, haben wir auch noch gemacht.
Eine Sache, die heute eigentlich kaum noch einer kennt.
Wir haben uns tatsächlich getroffen, vor Ort, um lokal miteinander Sachen zu sharen und zu spielen.
Also, so, so, so lokale Treffen mit Rechner bestanden ja zum größten Teil aus die neuesten Spiele und Sachen übers Netzwerk sharen.
Und irgendwelche Sachen zusammenspielen, ja.
Von Quake 3 bis, bis CS.
CS 0, 5, 2 und solche Dinger war das, war das ja noch.
Half-Life Multiplayer und alle möglichen Dinger.
Das gibt's ja in der Form heute nicht.
Ist ja auch, es gibt ja eigentlich auch kein wirkliches, wirklichen Bedarf dafür mehr.
Weil die Leute heute über das Internet sich viel besser austauschen können, ja.
Und ja, BNC hab ich auch, hab ich ja schon mal in einem extra Video sogar auf YouTube erzählt.
BNC mit Terminator und T-Stück.
Das kenn ich auch noch.
Und ich fand damals, ganz am Anfang, so diese ganze Erinnerung.
Die RJ45-Stecker-Geschichte mit Switch oder gar Hub in der Mitte, fand ich total, total rückständig und kacke, weil man doppelt so viele Kabel legen musste.
Also nur mal so zur Erklärung.
Zu, zu BNC-Zeiten hat man ja die Rechner, ich muss das nicht aufmalen, das könnt ihr euch vorstellen, hat man, hat man das ja so gemacht zum Beispiel.
Also, zwei Leute zum Beispiel, oben mit dem Rechner, äh, unterm Dach.
Dann zwei Leute im ersten Stock mit dem Rechner und vielleicht, vielleicht auch noch zwei Rechner unten im Erdgeschoss, so.
Je nachdem, wie viele Leute da waren.
Und die Dinger musstest du ja verbinden.
So, wenn du die jetzt auf klassische Art und Weise verbunden hast mit BNC-Kabel, war das relativ einfach.
Du hast ein BNC-Kabel gestöpselt zwischen dem ersten und zweiten Rechner, im zweiten und dritten Rechner, im vierten und fünften Rechner.
So, ähm, das heißt, du musstest quasi nur ein langes Kabel durchs ganze Haus ziehen, fertig.
Wenn du das Ganze gemacht hast mit RJ45-Steckern und so, dann hast du ja auch noch zwei Leute im ersten Stock mit dem Rechner.
Das heißt, du musstest zwei Kabel vom Dach im ersten Stock zum Switch.
Zwei Kabel von unten im ersten Stock zum Switch.
Zwei Kabel vom Zimmer, im ersten Stock zum Switch.
Das war mies, ja.
Und, ja, also, ich fand damals BNC-Verkabelung für Netzwerkgeschichten viel, viel besser.
Weil's halt nicht so viele Kabel gebraucht hat und nicht so viele 되�alauf.
Performance-technisch, muss man sagen, war natürlich das andere, äh,
Gerade mit einem Switch dazwischen.
Längen besser.
BNC war 10 Mbit, da war aus.
Wobei man aber halt sagen muss, 10 Mbit
hat für lokale Netzwerkspiele rein.
Komplett ausgereicht.
Ich meine, 10 Mbit
waren unglaublich viel
Datenrate für die damalige Zeit.
Und es gab keine Games,
gibt es ja heute nicht,
keine Games brauchen 10 Mbit,
die das irgendwie damit Probleme gehabt hätten.
Also 10 Mbit reichte dicke.
Und mit 6 Leuten
im Multiplayer, warum sollte das auch nicht reichen?
Ja gut, wenn einer
Kabel dazwischen hatte, war das Problem.
Gut, ich meine, von solchen lokalen Treffen
mit Leuten
hat man ja erst einmal
sein Big Tower eingepackt,
sein Röhrenmonitor eingepackt.
Damals warst du ja der Coolste, wenn du den fettesten Tower
hattest.
Wenn du den fettesten Big Tower hattest,
der war zu 80% leer.
Und fetten
19 Zoll, 21 Zoll
CRT Monitor, der
irgendwie 40 Kilo gewogen hat,
da bist du dann durch die Landschaft gefahren worden
von deinen Eltern damals.
Fetter Monitor, fetter Rechner,
21 Zoll Röhrenmonitor.
Und dann wurde als erstes,
Leute, was war das erste, was
auf jeder Netzwerkparty,
Ladenparty gemacht wurde?
Nebenaufgebaut und zusammengestöpselt.
Das erste war Windows neu installieren.
Korrekt.
Windows installieren.
Weil irgendwas
nicht funktioniert hat.
Ich kann bis heute Windows 95 und Windows 98
und sowas, kann ich blind installieren.
Leute, nur mal, um euch zu verdeutlichen,
wie oft ich Windows 98 installiert habe oder Windows 95.
Hier Windows 98 Key Example.
Ja, so hier.
Also das war ein 1, 2, 3, 4, 5, 10, 15, 20, 25
stelliger Key.
Ich kannte
meinen Windows Key,
meinen Windows Installationsschlüssel
auswendig zur damaligen Zeit.
Ich konnte Windows 98 installieren,
ohne dass ich den CD-Key nachgucken musste.
Ich konnte den aus dem Kopf.
Also könnt ihr euch vorstellen,
wie oft ich Windows 98
und Windows 95 installiert habe.
Bei Windows 95 konnte man alle Felder
mit 7 voll machen. Ja echt, war das ein gültiger Key?
Warum nicht?
Also das waren so Dinge,
aber ich weiß heute,
ich habe immer noch Fragmente im Kopf von meinem
Windows 98 Key und Windows 95 Key.
Das waren wirklich noch andere Zeiten.
Als erstes hast du Windows neu installiert.
In der Hoffnung, es geht dann.
Und wenn du Windows neu installiert hattest,
hast du unter Windows erst mal IPX angemacht,
IPX, SPX, NetBIOS, NetBOI und was es noch alles gab.
Natürlich hat man dann auch irgendwann mal TCPIP
hinzugefügt zum Netzwerkadapter.
Netzwerkadressen vergeben und dann hat man die Windows
Netzwerkumgebung aufgemacht und gehofft,
man sieht die anderen Rechner.
Windows NT war durchaus ganz okay.
ICQ Nummer kann ich immer noch auswendig.
Sage ich jetzt aber nicht,
weil sonst finden mich Leute mit ziemlich dämlichen Posts
von vor 20 Jahren oder so.
So richtig, so richtige Kinder Posts waren das halt damals,
die ich gemacht habe.
So nach dem Motto Haha lol, ich bin besser,
als ihr und sowas in der Richtung,
was man halt zu dem Alter schreibt.
Ja, ich ich hab ich hab vor noch nicht allzu langer Zeit
mal nach alten Posts von mir gesucht.
Und den ältesten Post, den ich gefunden habe von mir,
war ein Eintrag in einer News Group.
Falls jemand sowas noch kennt News Group zu Mario 64.
Also das war irgendwie wahrscheinlich 1996 rum oder so.
Das war das war der älteste Post, den ich gefunden habe von mir.
Und was habe ich gemacht?
Ich habe mich über Leute lustig gemacht,
die nicht 120 Sterne haben.
Also quasi so richtig, so richtig Kinderkacke.
Ja, ich habe da irgendwie so sinngemäß.
Lol, wer hat denn jetzt oder wer ist denn so schlecht,
noch keine 120 Sterne zu haben?
So richtiges Kack Spasten Kind Comment habe ich da gepostet.
Ja, wo ich heute instant die Leute bannen würde für irgendwie sowas,
sowas bescheuertes habe ich damals gepostet.
Lol, wer hat denn keine 120 Sterne?
Heute habe ich mich geil gefühlt danach habe ich jetzt gezeigt,
wie geil ich bin, dass ich 120 Sterne im Mario 64 habe.
Man muss dazu sagen, ich selber war damals zu dumm,
120 Sterne alleine zu erspielen.
Ich hatte 119 Sterne und ich habe den hundertzwanzigsten Stern nicht gefunden.
Und ich wette mit euch die Leute, die damals was ähnliches gehört.
Ich wette mit euch, welcher Stern das war, den ich nicht gefunden habe.
Wer weiß es?
Was war mein?
Mein hundertzwanzigster Stern in Mario, den ich nicht gefunden habe.
Mario 64.
Ich glaube, den, den jeder nicht gefunden hat.
Ich gebe euch kurz Zeit zu überlegen.
Leute, die dabei waren, werden es wissen.
Das war, glaube ich, den, den alle nicht gefunden haben.
Oder die meisten nicht gefunden haben.
Woher ich das weiß, ist, ich habe damals bei Nintendo angerufen, habe die gefragt
und es war das erste, was mir Nintendo geantwortet hat.
Das heißt, es waren viele, viele Leute hatten das.
Man konnte damals übrigens noch bei Nintendo einfach anrufen und sich Tipps holen.
Ähm.
Und das haben viele gefragt.
Deswegen war das erste, was er, was er vorgeschlagen hat.
Okay, ihr habt keine Ahnung, welcher Stern das war.
Ich sage es, ich sage es euch.
Ich sage es euch.
Es war Peach, Peach Rutsche oder die, die, die Rutsche, die Rutsche.
Da konntest du zwei Sterne bekommen.
Du konntest einen Stern bekommen, wenn du sie runter schaffst.
Und du konntest einen Stern bekommen, wenn du schnell genug bist.
Und das mit schnell genug sein habe ich nie ausprobiert.
Konntest du, konntest du auf Peaches Rutsche, konntest du zwei Sterne bekommen.
Und ich hatte nur einen.
Und ich habe es ums Verrecken nicht gefunden.
Und ich habe damals bei Nintendo angerufen und habe gesagt.
Ja, hier ist der Max.
Ich bin keine Ahnung.
Elf und finde den hundertzwanzigsten Stern nicht.
Dann haben die gesagt Ja, hast du denn schon bei Peaches Rutsche?
Hast du denn da schon zwei Sterne?
Nein, habe ich nicht.
Dann habe ich mich gefreut, dass ich hundertzwanzig Sterne habe.
Und da konnte ich aufs Dach zu Yoshi.
Ja, da habe ich mich gefreut.
Und dann habe ich das Spiel wahrscheinlich danach erst mal nicht gespielt,
weil dann hatte ich ja fertig mit hundertzwanzig Sternen.
So sah das aus.
Wir hatten damals so einen scheiß Forum ohne Spam Schutz und weil es Punkte gab,
wollte jeder der erste sein.
Ja, das war die Zeit von phpbb.
Kennt das noch jemand?
phpbb.
Jede Webseite hatte damals irgendein komisches Forum mit 30 Milliarden Sicherheitslücken und Spambots.
phpbb.
So, jetzt müssen wir wirklich ein bisschen basteln.
Fast zwei Stunden um.
Wir haben nicht eine Zeile wirklich programmiert.
So, also machen wir weiter.
Also was will ich machen?
Ich habe es ja gerade.
Ich habe es ja schon kurz kurz erklärt.
Ich will ein bisschen advancedere Basics lernen bzw.
refreshen und ich will den Timer programmieren.
Der, wenn ich ihn anklicke und auf null geht, blinkt bzw.
nicht blinkt, rot wird.
Ja, was ich mich jetzt frage ist, was fehlt dann eigentlich noch?
Ich meine, es scheint ja alles zu funktionieren, oder?
Ach nee, Parameter fehlen.
Noch und und Notifications schicken will ich ja auch noch.
Will er auch noch Notification schicken?
Ja, ja, genau.
Also ich möchte ja, wenn der Timer auf null geht, dass dann was in Notify send ist es, dass dann sowas aufploppt.
So zum Beispiel keine Ahnung, dass er sowas wie aufhört.
Timer.
Ja, das ist irgendwie sowas aufploppt.
Das wäre natürlich auch nicht schlecht.
So, wo sind wir das letzte Mal stehen geblieben?
Also Timer an sich funktioniert ja schon mal.
Ja, 2 1 0.
Und bumm, so ein Bug, den ich, also man kann den Timer übrigens stellen.
Man kann rechte Maustaste drücken, dann kann man die Stunden hoch machen.
Nochmal rechte Maustaste drücken, kann man die Minuten, äh nicht die Stunden, die Minuten hoch machen.
Und nochmal rechte Maustaste drücken, kann man die Sekunden hoch machen.
Was ich jetzt festgestellt habe, es gibt einen Bug.
Wenn ich über 60 bin, dann overfloats irgendwie oder so.
Und ich bin mir nicht ganz sicher, warum.
Und zwar es ist, hat irgendjemand schon im Chat.
Ja, glaube ich gerade.
Ach, guck mal hier.
To do größer 60.
Ah, ähm, es ist hier dran.
Hier dran liegt das irgendwie, ne?
Self is time left.
Self text data.
Ach ja, weil ich das als ich muss das anders.
Ich muss das anders formatieren.
Muss das?
Ich muss das anders formatieren.
Das ist das sagt, wie formatiert man gescheit ein Date Time in Python?
Muss man mal gucken.
Format Date Time.
Darf ich empfehlen, die Time als Time Delta zu speichern?
Nee, ich speichere die als Time Delta.
Allerdings muss ich die als Minuten und Sekunden speichern, weil ich die hier oben unabhängig voneinander setzen können möchte.
Wobei, theoretisch könnte ich es tatsächlich als Time Delta speichern.
Weil ich kann ja da einfach Time Delta plus eine Minute und sowas machen.
Das müsste wahrscheinlich, müsste wahrscheinlich funktionieren.
Aber erst mal müssen wir fixen.
Dass der bei 60, dass der bei 60 irgendwie rum backt.
Aber das ist ja schon mal, das ist ja schon mal doof.
Also sprich 69 Minutes.
Ist 69 Minutes ist auf jeden Fall nur 9 Minuten.
Das ist ja schon ziemlich, ziemlich kaputt.
Kann ja nicht sein.
Also Format Date Time ist falsch.
Ich will Time Delta formatieren.
Der macht da eine Stunde draus.
Ja, also ich, ich formatiert die Zeit aktuell so.
Ich nehme.
Die, die Dauer.
Rechne sie auf ein Date Time Objekt drauf und formatiert das dann als Minuten und Sekunden.
Das Problem ist nur, dass ab 60 das ja nicht mehr funktioniert, weil dann ist es eine Stunde und 6 Minuten.
Ja, also 69 Minuten ist ja eine Stunde und 9 Minuten.
Deswegen funktioniert das nicht.
Das muss ich, das muss ich anderweitig machen.
Hier Format Time Delta.
Object.
Wie funktioniert das?
Aha, nee.
So funktioniert das.
Exzellent Minutes Seconds.
Ich will beim Scrollen nicht 30 Sekunden.
Guck mal, wenn man scrollt, wenn man scrollt, kann man auswählen, ob man jetzt Minuten hoch und runter zählen will oder Sekunden.
Das ist eigentlich ganz gut.
Es ist auch schon okay.
Es hört ja auch bei 59 auf und hier bei 99.
Also Maxi, was maximal hinpasst.
Ich finde das, finde das so eigentlich ganz sinnig.
Was natürlich blöd ist, ist die Anzeige, die hier nicht stimmt.
Dann machen wir das doch jetzt mal.
Also wie funktioniert das jetzt?
Minutes Delta.
Muss man jetzt jetzt?
Wahrscheinlich muss man jetzt immer so viel wie total seconds oder so machen.
Delta.
Seconds und dann kann und dann kann man es, dann kann man es wahrscheinlich ordentlich formatieren lassen.
Da bin ich ja mal gespannt, ob das, ob das so funktioniert, dass er irgendwie sein Time seconds und dann müssen wir unten eigentlich so ein Format String machen.
Und dann wollen wir haben hier Minutes.
Nicht Minutes.
Doppelpunkt.
Seconds.
Und das ganze allerdings.
Ich hoffe, ich habe das jetzt richtig im Kopf.
0 2 D oder 0 2 D.
Also sprich, ich will es immer als mit zwei, zwei, zwei Digits, also zwei Stellen.
Und wenn es nur eine Zahl ist, dann will ich nur 0 davor schreiben.
Ist okay, passt schon mal an der Stelle.
Zero padded, null Digits.
Ja, ach so.
Moment, Moment, Moment.
Ja, jetzt ist.
Jetzt ist hier die Sache.
Guck mal, und da hört es bei mir mit meinen Python Kenntnissen schon wieder auf.
Da müssen wir jetzt mal, müssen wir jetzt mal gucken.
Ich hätte gern sowas hier.
Ich schreibe das jetzt mal hin, wie ich es in .NET machen würde.
Ich hätte gerne was?
Hours, Minutes, Sekunden gleich Prozent.
Ne, was?
Ne, das funktioniert nicht an der Stelle, glaube ich.
Das würde das quasi das mit dem mit dem Sternchen davor würde das ja irgendwie deconstructen.
Das will ich ja nicht.
Ich will ja wirklich die Sekunden und die Verbleibungen.
Minuten haben und die verbleibenden Minuten will ich auch haben, wenn sie über 60 sind.
Also hier soll dann drinne stehen.
59 Sekunden und 99 Minuten und sowas zum Beispiel.
Also.
Zumal also was ich was ich machen will, ist folgendes.
Ich will sagen Format Duration einmal.
Dass ich ein Delta übergeben kann und einmal nicht.
Und wenn ich, wenn ich kein Delta übergeben kann, dann also keine Zeitspanne übergeben kann, dann will ich.
Die Duration von hier oben nehmen.
Und ich will sowas machen wie Self Format Duration sowas.
Ich will das quasi überladen oder weg.
Man könnte eigentlich, man könnte dann ein Zeiler draus machen.
Ja, ich will quasi das überladen.
Ich will, dass es die Methode zweimal gibt.
Ich weiß, dass es in Python nicht richtig funktioniert.
Und ich bin so blöd rauszufinden, wie das, wie das jetzt, wie man das richtig macht.
Also ich will die Methode zweimal haben.
Ja, einmal mit zwei Parametern.
Und einmal mit einem Parameter.
Was man machen kann, also wo ich weiß, dass es geht, ist sowas hier.
Delta gleich.
Man kann die voll Parameter nehmen.
Aber das ist nicht immer so schön.
Was hat er jetzt für Schmerzen?
Reformat.
Ja, ja, reformat.
Ja, okay, man soll zusammenschreiben.
Also das, das würde funktionieren, dass ich quasi dann sage, ich kommentiere das mal wieder aus, dass ich jetzt quasi sowas sagen würde, wie.
If.
Not.
Delta.
Delta.
Gleich.
Self.
Punkt.
Duration.
Das ist aber doch irgendwie doof, oder?
Also das, das würde funktionieren.
Aber das ist doof.
Warum?
Aber ich meine, man muss ja irgendwie Methoden überladen können.
Irgendwie geht das bestimmt.
Ich weiß bloß nicht, wie.
Deswegen müssen wir da jetzt mal Google befragen, wie das funktioniert.
Was?
Usage of Quarks.
Quarks.
Quarks.
Quarks.
Quarks.
Quarks.
Quarks.
Quarks.
Quarks.
Quarks.
Quarks.
Quarks.
Quarks.
Quarks.
Quarks.
Quarks.
Quarks.
Quarks.
Quarks.
Quarks.
Quarks.
Quarks.
Quarks.
Quarks.
Quarks.
Quarks.
Quarks.
Quarks.
Quarks.
Quarks.
Quarks.
Quarks.
Quarks.
Quarks.
Punkt Duration
Unresolved, ne das geht nicht. Das ist nicht allowed. Das wäre cool, wenn das geht, aber anscheinend geht das nicht. Oder ohne self?
Das ist, ne ne ne ne ne, das ist aber ne Funktion hier, das ist ja ne Methode, das muss man ja so schreiben.
Ne, geht auch nicht.
Funktioniert weder so, noch so.
So, also.
Ihr müsst jetzt mal Stack Overflow befragen. Python, method, over, overload.
Wie geht das?
Das mit dem if-Block ist richtig.
Ja, dass es funktioniert, weiß ich. Aber ehrlich gesagt finde ich das nicht, nicht schön.
Es macht es vor allem auch viel komplizierter, als es sein muss. Ja, not delta, delta gleich self.duration.
Das macht es auch viel komplizierter, als es sein müsste.
So,
guck mal.
So rum wäre doch viel, wäre doch viel klarer. Hier muss ich mir nur um diese Parameter Gedanken machen und anderswo.
Also es wäre cool. Das geht bestimmt, Leute. Erzählt mir nichts. Das geht bestimmt.
Es würde mich äußerst wundern, wenn das, wenn das, wenn das mit overload nicht geht.
How do you overload Python class method based on enum type? Ja, auch okay. Erzählt mir, wie kann man...
What?
Typing overload. What the hell? Was bin ich? Was ist das?
Ein enum?
Das ergibt doch überhaupt keinen Sinn, was der Dude da will.
Ein enum ist immer der gleiche Typ.
Nur mit unterschiedlichen... Der Typ ist... Hä? Das ergibt keinen Sinn, was der fragt.
Zwei Zeiler if else zu kompliziert. Ja, ist es auch.
In dem Fall mag das übersichtlich sein, aber es gibt ja sicherlich auch komplexere Fälle, wo man...
Das geht doch bestimmt, Leute. Erzählt mir nichts. Muss gehen.
Function overloading method mess... Guck mal hier.
Method overloading with add overload.
Wisst ihr? Geht auch. Also.
Der ist ein overloading package.
Overloading. Wie funktioniert das?
Overloading. Moment. Install overloading. What the...
Ne, ne. Ich will kein zusätzliches Package.
Ach, ne. Science Python 3.4.
Der ist Core API Functionality.
Functools Single Dispatch.
Ist das denn ihr Ernst?
Tools Single Dispatch.
Fun Registry.
Lister.
Single Dispatch.
Was? Was?
Bot.
Zumal, warum sollte man das hier überschreiben? Das ist doch alles...
Ah, ne. Hier ist ein Int und hier ist eine List.
Okay, jetzt hört es bei mir auf.
Was wollen die von mir?
Okay, ich... Chat, ich glaube langsam, dass ihr recht habt, dass das schlicht ein Crime.
Hier, da wo ihr... Method overloading.
Ja, genau. Genau so will ich das haben.
Genau so.
Fun Registry. Da wird der Spaß... Wird registriert. Ja.
Was jetzt?
Args.
Date hat... Jetzt...
Ich will ja noch nicht mal einen unterschiedlichen Typ, sondern ich will unterschiedlich viele Parameteranzahl haben.
Das habe ich schon kapiert, dass das nur nicht funktioniert.
Not the efficient one.
Add.
Okay, okay, mit Default-Parametern. Alles klar. Ja, will ich aber nicht.
Die efficient... Multiple Dispatch.
Ich brauche doch nicht ernsthaft ein Package dafür, oder? Ist das denn ihr Ernst?
Okay, wie funktioniert das andere?
Functools.
Register.
Also jetzt wird es ja abgedreht.
Functool Register.
What the fuck, Alter? Was zum...
Das probiere ich jetzt. Einfach nur, um zu wissen, was ich nicht verwenden will.
Okay, okay, es funktioniert. Okay.
Klappt denn jetzt eigentlich auch... Nee, ist immer noch.
Das ist Pyle Charm, ja.
Okay, seriously.
Was machen die da für Dinger?
From Functool Import Single Dispatch.
Also das ist ja so hässlich, das würde ich auf gar keinen Fall verwenden, aber...
Nur mal gucken, ob... Und jetzt? Und jetzt?
Single Dispatch?
Ja, Moment, ich habe...
Hä?
Okay.
Ich schrei...
Keine Ahnung. Single Dispatch?
Ich habe... Sorry, Leute, ich habe... Seriously, ich habe keinen Plan, was ich da mache.
Fun Register.
Fun?
Gibt es überhaupt nicht.
Gibt es...
Gibt... Das stimmt überhaupt nicht.
Ah, nee, Moment, das muss der Name...
Ach, Moment mal, das muss der Name sein.
Ach, das muss der Name... Okay.
So was?
Und... Und dann hier das so nennen, oder?
What the fuck, Alter?
Wie soll... Wie soll das überhaupt funktionieren?
Ah, nee, hier muss man Register machen.
Nee, Moment.
Patrick, ich versuche in Python eine Methode zu überlegen.
Und das scheint nicht zu funktionieren.
Das... Das gibt es wohl nicht.
Okay, ich checke... Ich checke das Beispiel schon mal gar nicht.
Okay, erklär... Erklärt mir, wie das funktioniert.
Frag Chat GPT.
Okay, Add Register.
Single Dispatch.
Ah, Moment, Single Dispatch muss das als erstes...
Das muss als erstes kommen wahrscheinlich.
Ah, guck mal, jetzt funktioniert...
Nee.
Funktioniert das denn ohne irgendwas?
Ja, okay, das würde was funktionieren.
Objekt hat kein Attribut Loader.
Alles klar.
Das würde man denken.
Das würde man denken.
Ist aber nicht so.
Doch, doch, man macht einen optionalen Parameter.
Das... Das geht.
Aber das will ich nicht.
Ich will wissen, wie das so funktioniert.
Ich komme aber so langsam, aber sicher zu dem...
Zu dem Schluss, dass das anscheinend...
Nicht möglich ist.
Ich glaube auch, man macht das einfach nicht.
Ja.
Die Seite habe ich schon aufgemacht.
Logan, hast du das gelesen, was da steht?
Hast du das gelesen, was da steht?
Was steht da?
Da steht, dass es einen Fehler gibt, wenn man das so macht.
Das funzt aber bei dir.
Das glaube ich dir nicht, dass das bei dir funzt.
Ich glaube nicht, dass du ein gepatchtes Python hast, wo das einfach geht.
Ja, man soll irgendein Package verwenden.
Aber ich will dafür kein...
Ich sehe es noch nicht ein, dafür ein Package zu verwenden.
Warum funktioniert denn dieser Shit hier schon mal nicht?
Obwohl Stack Overflow sagt, dass das funktioniert.
Und wir wissen ja alle, wenn Stack Overflow das sagt, dann geht das.
Ich meine, optionale Parameter funktionieren.
Das hatte ich ja hier sogar schon.
Guck.
Optionale Parameter ist easy.
Da würde man sowas hier machen.
Oh, und ja, zack, schon funktioniert es.
Aber es ist trotzdem doof, dass kein Overload funktioniert.
Komisch, dass das nicht geht.
Hätte ich jetzt nicht gedacht.
Functools.
Kannst du in der Funktion mehrere andere Funktionen definieren?
Und dann?
Da kann ich ja immer nur nicht unabhängig voneinander aufrufen.
Das bringt ja nichts.
Ich würde das Ding halt gerne an manchen Stellen aufrufen können, ohne einen Parameter und einmal mit einem Parameter.
Ich meine, so funktioniert es jetzt in dem Fall.
Aber es ist trotzdem...
Gefällt mir das nicht.
Zumindest, es sollte jetzt funktionieren.
Das heißt, an der Stelle, wo ich hier Mist formatiere.
Nämlich in...
Update.
In Update kann ich jetzt einfach sagen...
Self...
Format Duration Delta.
Und jetzt sollte...
Ah, guckt, jetzt funktioniert es.
Jetzt ist es nicht mehr verbuggt.
Jetzt kann ich hier oben auf 99 Minuten stellen.
Und jetzt bleibt es bei 99 Minuten und geht nicht runter irgendwie auf 39.
Okay, das funktioniert.
Das finde ich schon mal poggers.
Das klappt.
Hätten wir das schon mal gefixt.
Easy.
Wozu Python denn?
Wenn es Rust gibt.
Also mal ernsthaft, Rust und Python, das hat ja von der Syntax her nichts miteinander zu tun.
Vom Einsatzzweck her oftmals auch nicht wirklich viel miteinander zu tun.
Das ist wie wenn ich sage, warum wir überhaupt noch eine Programmiersprache lernen, wenn es doch COBOL gibt.
Wobei das finde ich ja tatsächlich eine valide Frage ist.
Warum lernen wir überhaupt noch Programmiersprachen, wenn man noch COBOL programmieren kann?
Was wird gebaut?
Was ganz Simples.
Ein Timer für meine Statusleiste, den ich beispielsweise einstellen kann auf 4 Sekunden.
Und wenn der runter getimt ist, dann wird der rot.
Hauptsächlich, dass ich mir angucken kann, wie der ganze Kram funktioniert.
Ach stimmt, Type Annotations.
Ja, Type Annotations.
Wo bräuchte ich denn jetzt hier Type Annotations?
Da, stimmt.
Das machen wir jetzt mal.
Das machen wir jetzt mal.
Guck mal.
Delta.
Delta.
Delta ist nämlich 1.
Nee, dahinter.
Dahinter.
Date, Time.
Delta.
Funktioniert aber nicht.
Gehen Type Annotations mit Default-Parameter nicht?
Anscheinend.
Okay.
Ach, man muss es dann dahinter schreiben.
Ach so, hier muss ich jetzt hinschreiben.
Namen.
Hallo?
Nonne.
Okay.
So, und wenn ich das jetzt aufrufe.
Self.
Format.
Duration.
Ach, jetzt zeigt er mir auch an, dass da ein Time-Delta rein muss.
Was dann wiederum bedeutet, wenn ich jetzt, ups, Optional, wie mache ich das?
Optional?
Also, aber jetzt müsste er doch schon erkennen, dass das ein Time-Delta ist, oder?
Ja, jetzt erkennt das.
Warum, warum checkt die IDE das nicht?
Warum checkt, warum checkt die IDE das nicht?
Warum zeigt die mir nicht an, dass das ein, dass das ein Date-Time ist?
Nee, ein Time-Delta.
Ein Time-Delta ist?
Was, noch ein Optional machen?
Ich lern Schlange, genau.
Optional.
Okay, Moment, Moment, was hier?
Optional.
Und dann in Klammern?
Boah, das ist ja die abartigste Definition Syntax ever.
Typing Optional.
Was zum Geier ist denn das?
Das sieht ja mal richtig eklig aus.
Das zeigt doch nicht an, dass es Optional ist.
Ja, es macht irgendwie schon Sinn, aber ich finde das syntaktisch überhaupt nicht schön.
Warum, warum hat man denn nicht sowas gemacht, zum Beispiel?
Ich nehme jetzt mal die C-Sharp-Syntax dafür, weil mir nichts anderes einfällt.
Warum hat man nicht sowas da draus gemacht?
Kommt noch?
Ja, weil, weil das ist ja nun wirklich abartig, Alter.
Das ausgedacht hier, Mann.
Okay, zumindest, zumindest haben wir jetzt gesagt, dass das ein Time-Delta ist, was da reinkommt.
Meckert der denn jetzt auch, wenn ich da irgendwas anderes reinschiebe, Gachi-Bass?
Also mal angenommen, ich stecke da jetzt kein Time-Delta rein, sondern ein String.
Ah ja, dann sagt er zumindest hier schon mal,
Expected Type, Time-Delta oder None.
Gott, strrrr.
Aber kaputt gehen tut's nicht.
Was im Endeffekt heißt, dass Type-Annotations wirklich bloß Hinweise sind
und nicht irgendwie mit, nix mit der Runtime dann zu tun haben, so.
Das liegt alles wieder weg zur Compile-Zeit wahrscheinlich.
Das ist quasi sowas wie Nullable Reference Types in C-Sharp.
Du kannst dich dran halten oder drauf scheißen, es geht nicht kaputt dadurch.
Also es kann immer noch 0 sein, auch wenn es angeblich nichts sein kann und sowas.
Ach so.
Stimmt, wie gebe ich da jetzt eigentlich mehrere Sachen an?
Also gehen wir mal von aus, ich kann jetzt,
es könnte jetzt, es könnte jetzt ein Time-Delta sein oder ein Date, ach einfach so?
Okay, das ist ja tatsächlich dann relativ flüssig.
Any?
Nee, nicht Any.
Union?
Ah, Union.
Ach ja.
Aber jetzt, jetzt habe ich ja nicht mehr Optional gesagt.
Kann ich jetzt dabei noch reinschreiben None?
Ach das geht, oder?
Nee, geht doch, es geht doch auch so, oder?
Oder? Also ich meine, okay.
Was ist der Unterschied zwischen dieser Schreibweise oder Optional?
Alter, wie das aussieht, Mann.
Das ist die umständlichste Typ-Definition, die ich je gesehen habe, Mann.
Die haben echt Critical Information geleckt, die sich das ausgedacht haben.
Oder die haben sich, ja das ist im Prinzip genau das Gleiche, oder?
Ah, Moment, Moment, Moment.
Ähm, die haben sich vom C++-Gremium inspirieren lassen.
Ja, da kommt genau das Gleiche bei raus.
Das kommt eigentlich genau das Gleiche raus.
So.
Dann schreiben wir es doch lieber so, oder?
Wobei, dass es None sein kann, sehe ich doch hinten dran.
Na gut.
Aber, eigentlich wollen wir es ja so haben, weil das, das, so muss es richtig sein.
Okay, jetzt haben wir auch Type Annotations uns mal angeguckt.
Es ist ja ein bisschen eklig, ist es schon.
Gut.
Zumindest wissen wir auch Bescheid.
Du kannst eine Type var definieren, um es kürzer zu machen.
Ah, ich kann quasi hier oben anlegen, wie ich das, wie ich das so aliassen will.
Ja, okay, okay.
Return Type.
Ach so.
Wie macht man einen Return Type?
So?
Str?
Ne.
Ähm, so?
Aha.
Aha.
So, man macht das dann, man macht das vor den Doppelpunkt.
Alles klar, ist eigentlich doch gar nicht so schlecht, oder?
Es ist so ein bisschen, ein bisschen, ein bisschen Rust.
Rusty sieht das aus.
Die ganzen Krustentiere freuen sich dann wieder.
Das hat ein bisschen was davon.
Es könnte auch ein bisschen C++ mäßig inspiriert sein, da geht da sowas auch.
Nur, dass du in C++ fünf verschiedene Arten hast, sowas zu schreiben.
Okay, nice.
Aber das finde ich, finde ich gut.
Das kann man so lassen.
Das ist in Ordnung.
So.
Date, Time, Delta.
Ja, Leute, stimmt.
Also, wir können das ja mal ausprobieren.
Irgendjemand.
Oh, jetzt hab ich's, jetzt hab ich's gebraked.
So, irgendjemand meint ja, vielleicht sollte ich nicht nur den aktuellen Counter als, als
Duration Object machen, sondern die komplette, die komplette Zeit quasi irgendwie als, als,
ähm.
Time Delta angeben.
Also, dann nennen wir's mal einfach self.
Duration nenn ich jetzt mal irgendwie new.
Ne, Moment, nicht new.
Null.
Wo sind wir denn?
New.
Ne, Moment.
Nicht, nicht, nicht.
Blödsinn.
Was mach ich denn hier?
Die.
Doch.
Doch, richtig.
Duration.
Duration ist.
Date.
Time.
Time Delta.
Das kann ich doch eigentlich hier rauskopieren.
Okay.
So.
Initial.
Initial ist es das hier.
So.
Und.
Dort, wo ich Duration nehme.
Ne, über C++.
Ich kann's nicht permanent über C++ aufregen.
So.
Und dort, wo ich Duration nehme, schmeiß ich das, schmeiß ich das raus?
Ne, wobei.
Passt, passt doch eigentlich.
Ne, Moment.
Ich bin irgendwie.
Irgendwie bin ich verwirrt gerade.
Warte mal.
Warte mal.
Warte mal.
Warte mal.
Warte mal.
Warte mal.
Warte mal.
Warte mal.
Warte mal.
Warte mal.
Warte mal.
Warte mal.
Warte mal.
Warte mal.
Warte mal.
Okay.
Duration schmeiß ich raus.
Dafür nehme ich jetzt underscore underscore Duration.
Wo habe ich noch Duration?
Da, da und da?
Ne, das war's hier.
So.
Hier Duration.
Duration.
Duration.
Ne ne, hier weg.
So, ich hoffe ich vergesse jetzt nichts.
Okay.
So.
Geht das noch?
Fuck, Alter.
Jetzt habe ich wieder irgendwas vergessen.
Weil.
Was ich mir jetzt überlegt habe.
Es war ja...
habe es wo stören sich jetzt eigentlich schon wieder dran was hat jetzt für
schmerzen duration ist doch eigentlich alles gut
duration duration da da da da da okay so weil der einzige grund warum ich das in
minuten und so gemacht habe ist ja dass ihr solltet jetzt alles noch funktionen
aber hoch und runter zählen brauchen wir so minutes minutes und seconds kann man
sich jetzt kann man sich jetzt eigentlich auch fast sparen also die
sache ist die man könnte es ja komplett als date als als time delta objekt
machen so wie das der chat vorgeschlagen hat das heißt ich muss
jetzt hier gucken self duration seconds 159 gut ist ja kann ja gar nicht anders
kann ja gar nicht anders sein wofür bauen wir einen alert dass in
meiner stadt
das leiste anzeigen lassen kann wenn der timer abgelaufen ist einfach nur so
also erstens habe ich mir schon öfters gedacht wer praktisch sowas zu haben und
außerdem ist es was simples wo man ein bisschen üben kann mit man muss es ja
nicht gleich übertreiben so und jetzt sage ich nicht self seconds sondern ich
sag jetzt duration und dann nicht plus gleich eins sondern duration plus hat
mal los
date-time device date time-delta
und dann ist seconds eins so in der spektrum würde ich das jetzt machen
also
das wissen jetzt und ihr unten und das mit dass kümmer uns sparen hier oben das
bra 1968 pfeffert dann einfach nicht egal so etwas ist linkaped einen жить
date-time system
minutes ableistet
Clements Dayt speeding webteam
nicht um eine minute soll bis 99 gehen wahrscheinlich funktioniert das doch
nicht richtig so minus gleich duration wir gucken ob das aber prinzipiell
funktioniert was ich hier was ich hier verzapft habe okay das funktioniert
schon mal das funktioniert schon mal nicht warum
denn weil ich irgendwo wahrscheinlich noch minutes und so anzeige hier
ich darf nicht das anzeigen sondern jetzt muss ich es umformatieren
das ist doch für ein arsch man brauche ich das überhaupt noch
naja scheiß drauf kann ehrlich ich lasse einfach als minuten und sekunden da
funktioniert wie sie alles alles wieder rückgängig bäume bäumen tak tak tak tak
tak warum soll ich das ändern nur weil es weil es weil es irgendwie wunderbar
funktioniert so er startet den timer nicht direkt mehr
so also okay
prinzipiell funktioniert das ja mit dem timer eigentlich ganz gut ganz gut was
wir gebaut haben dass man kurz überlegen wir brauchen noch parameter wir brauchen
noch parameter also quasi das able was auch immer wieder oben disabled haben
also wir brauchen quasi so was wie das display timer und da muss ich mal kurz
gucken wie die sagen dass man das dass das schreiben soll was für parameter was
für parameter man braucht developers how to write a module
lies bla bla bla graue man mal ab wie die anderen leute das gemacht haben
okay so hier parameters so wie ich das auch haben so parameters
alt heißt unser modul was braucht er denn für parameter wir brauchen sowas wie
defaults minutes minutes dann brauchen wir sowas wie ups
alle die falls
!?
also mit was das ding startet beim reload dass man das überschreiben kann ansonsten sind halt
default mäßig keine ab 30 sekunden oder sowas du hättest das wohl so gemacht stunden minuten
sekunden das wird mir zu lang ich war mir könnte vielleicht optional optional noch stunden aber
wer will bitteschön den timer laufen lassen irgendwie von fünf stunden 99 minuten reicht
eigentlich dann ist bleibt dann bleibt auch zweistellig ist schon kurz kann man sich
überlegen vielleicht macht man auch noch eine stunde dabei mal gucken zur alert default dann
brauchen wir noch so was wie notify command also was passieren soll wenn der time abgelaufen ist
was hat er jetzt für schwärzen if a new sentence hat sie gut jetzt will er mir auch noch korrigieren
dann wollen wir noch so was haben wie icons icons icons haben wir noch gar keine drin oder wir haben
noch gar keine icons drin
das muss die icons müssen da schon noch rein sonst wird das nichts ohne icons also sagen wir mal so
was wie hier post icon soundeffekte brauchen wir brauchen ein icon für pause wir brauchen ein icon
für stop und wir brauchen ein icon für running also diese states hier so dann brauchen wir
wahrscheinlich noch für die startzeit haben wir ja schon ich glaube das reicht erst mal so
da würde ich die preisfrage wie übergibt man parameter hier drinne hier so self parameter
du meinst dass post emoji ja kann man kann man gleich ausprobieren wir machen jetzt wir mal
ist gleich noch noch icons rein das sieht das sieht sonst so so so leer aus ohne icons also
wie funktioniert das jetzt zack self parameter work okay tag selbst parameter die fault minutes
dann haben wir default seconds notify command und dann haben wir post icon stopped icon und
running icon default minuten keine ahnung wenn der typ nichts angibt dann ist die die
standard sache eine minute und 30 sekunden oder so wunderbar dass das default notify
command ist einfach leer da wird einfach kein notify geschickt wenn er nichts gesagt hat so
und jetzt das icon also es gibt zwei varianten was wir als icons nehmen könnten entweder post
champ sowas das emoji oder wir könnten auch nerdfonds icons davon was nehmen könnten auch
sowas hier nehmen
zum beispiel post ob es da was gibt ähnlich so nicht so nice gibt sowas wie timer ach ja
timer post das ist eigentlich auch gar nicht so schlecht lass das mal kurz ausprobieren wie
das aussieht leute das ist gar nicht so schlecht ok chat jetzt jetzt seid ihr gefragt was ist
besser was was was findet ihr besser emoji style oder text style text
ja du hast recht bisschen klein na gut das kann ja der derjenige ändern wenn er die größe von seiner
leiste anpasst aber es ist halt einfach wir gucken mal was sonst noch mit pause gibt post champ ach
guck mal es gibt da noch richtige richtige wobei ich ehrlich sagen muss ich finde das eigentlich
cool mit dem timer dann weiß man wenigstens gleich was gemeint ist ok ich lass uns mal
bei emojis gucken ob es was gescheites für play gibt hier gibt es schon mal nicht guckt stoppt
stop button wartet mal wir gehen jetzt mal gucken pause haben wir play play or pause button
play warum findet der hier nix das ist eine kackseide man lul das ist wahrscheinlich bei
objects ne wo ist das flag symbols symbols ist das irgendwo pause ok play play button ah gibt's auch ok könnte man auch
nehmen bin jetzt ein bisschen unschlüssig ob ich emojis nehmen soll oder oder die anderen dinge also
der chat sagt der chat sagt ja eindeutig text ich glaube ich glaube ich lasse es auch mal bei text
wenn das wenn das eigentlich ganz cool mit dem text also dann nehmen wir mal ich mache mal so
dass ich nachher nicht wieder nicht wieder neu rein copy copy pasten muss also waren wir hier pause
was da
ein bisschen klein hier aber da oben ist eigentlich in ordnung pause icon nehmen wir mal timer was
haben wir für stoppt cancel vielleicht ein stop hat er hier irgendwie netter ach doch stop gibt's
auch wir nehmen das cancel icon ich glaube das ist gar nicht so verkehrt was passiert wenn der
timer abgelaufen ist dann wird der hintergrund rot und es gibt eine nachricht ja blinken könnte man
tatsächlich auch machen so running ist so was wie play an der stelle play so ich glaube das ist
eigentlich ganz nice so jetzt müssen wir das natürlich noch irgendwelche variablen zuweisen
dass wir später verwenden können also self das ist auch eine sache die mich ein bisschen so an
peinlichen bisher ist so kaut nervt du hast an jeder ecke self des hälfte des programms besteht
aus selbst die fault du hast bei den post jetzt aber ein normales icon bei den anderen
ein solid das ist richtig dann nehmen wir das solid das solid post noch oder post champ das
da nennen wir mal das so default ja man muss man muss so viel selbst spammen ja ist komisch
aber wird es denn sonst machen notify so stoppt stoppt stoppt die geistliche sprache mit europäisch
schon ein bisschen okay so als haben wir hier die icons so also text kommt jetzt erst mal wieder weg
das legen wir woanders hand so minutes ergibt ja so schon mal irgendwie keinen sinn mehr weil minutes
ist so ein bisschen so ein bisschen so ein bisschen so ein bisschen so ein bisschen so ein bisschen
selbst die ford minutes und das andere ist seconds selbst die folgnden seconds
zur selectet kann erst mal so nennen wir das mal selected mode ich glaube
dass ich glaub selected mode hilft es irgendwie besser
secks text standardmäßig selbst format haben wir jetzt ja sie sie
Ähm, okay, was brauchen wir?
Timer State ist Stopped.
Alles klar.
Aber das mal hier oben drüber.
Ich glaube, da kommt man dann besser hin.
So, Timer State Stopped.
Minuten Self-Selected Modes.
Wir fangen mit Sekunden an.
Text ist standardmäßig eingestellt auf 1.30.
1.30 ist das, was er an Default-Werten hat.
Ähm, ich glaube, das reicht.
Ich glaube, das war es.
So.
Das müsste jetzt zumindest von den Parametern her so passen.
Okay, gut.
Alles klar.
Gut, weiter.
Weiter im Text.
Schauen wir mal.
Also.
Ähm, Duration, Timer Increment.
So, das sieht doch eigentlich alles relativ gut aus.
Ah, Moment.
Ich sehe da einen Fehler.
Ha, guck mal.
Ich kann während der Timer läuft, ihn anheben.
Ist das jetzt ein gutes Feature?
Oder ist das ein schlechtes Feature?
Dass ich quasi mit dem Mausrad...
Ne, das ist Mist.
Das funktioniert nicht.
Ne, das funktioniert...
Okay, das muss weg.
Das muss...
Das ist doof.
Das muss weg.
Da müssen wir eine Abfrage reinmachen, wenn der Timer...
Ne, das finde ich blöd.
Da kommen die anderen Sachen noch durcheinander.
Ne, das machen wir weg.
Also, sagen...
Timer Increment.
Das geht nur, if...
If self...
If self...
Timer State...
Is...
Running.
Oder aber...
Oder aber...
Eigentlich noch besser.
Noch besser.
Is...
Not running...
Return.
Dann sparen wir uns nämlich eine Runde Einrückungstiefe.
Und können das so drüber schreiben.
Das finde ich jetzt eigentlich ganz...
Ganz sinnig.
Dann können wir natürlich jetzt diesen ganzen Text hier unten komplett ersetzen.
Durch self...
Format Duration.
Brauchen wir das nämlich nicht mehr.
Das haben wir jetzt ja hier oben stehen.
Lock und Unlock.
Ja, man kann es ja auch übertreiben.
Oh, es funktioniert nicht mehr, Leute.
Warum nicht?
Ich hab's...
Ich hab's...
Ich hab's gebraked.
Ach, Moment.
Not state running ist doch blöd.
Not state stopped.
Ja, ja, okay.
Jetzt funktioniert es wieder.
Ja, jetzt funktioniert es.
Okay, nice.
Clean code wood face.
Sehe ich auch so.
Wer braucht das schon?
Ja.
Oder jetzt...
Was kommt denn als nächstes, Leute?
Tests oder was?
Nee, nee, nee, nee.
Es...
Nee, nee.
Not...
Not stopped muss es sein, weil...
Es gibt ja auch noch...
Es gibt ja auch noch...
Paused und running.
Also, wenn es nur running und stopped gäbe, dann wäre das einfach.
Dokument...
Wie würde man das jetzt überhaupt machen?
Irgendwie so, gell?
Nee.
So?
Keckel?
Ich weiß gar nicht.
Wie macht man das überhaupt?
Wieso?
Null.
Nee.
Nee, okay.
Dann weiß ich nicht, wie man Docs dazu macht.
Oder so.
Dokus zu...
Das habe ich ja gerade probiert.
Aber irgendwie hat das nicht funktioniert.
Aber wir brauchen keine Doku, weil das ist ja guter Code und er dokumentiert sich ja bekanntlich selbst.
Ach, in der Funktion.
Also da.
Ach, so.
Also sowas hier in der Richtung.
Wenn ich jetzt sage, self, timer, inkubant, dann soll eine Hilfe dastehen.
War kein Bock.
Okay, also meine Idee.
Hat zumindest schon mal keinen Bock, das anzuzeigen.
Brauchen wir aber auch nicht.
Easy.
Also timer state, timer state, not stopped, not stopped, alles gut, alles klar, passt.
Okay, wie geht's, wie geht's weiter?
Wir müssen das jetzt mal fertig machen.
Ich meine, das ist ein easy timer, wie lange wir da dran rumgebastelt haben.
Letztens zwei Stunden, heute schon wieder irgendwie 45 Minuten.
Okay.
Also lasst uns mal...
Lasst uns mal dieses Update...
Update angucken.
Okay.
Das ist jetzt eigentlich rum.
Okay, das kann ruhig hier stehen bleiben.
Also, Update.
If self, timer is running.
Okay, wir machen nur ein Update, wenn der Timer gestartet ist.
Das klingt ja schon mal sinnvoll.
Wir können natürlich uns hier auch Einrückungstiefe sparen, indem wir sagen, if self, timer is not running.
Und in sonst Fall return.
Das ist, glaube ich, in Python gar nicht so unwichtig.
Dass man sich ein bisschen Einrückungstiefe spart.
Weil ansonsten hängst du irgendwann hier und hast quasi die Hälfte davon Whitespaces.
Achso, ich habe falsch geguckt mit dem Dockstring.
Okay, also sprich, wenn ich jetzt mal bei Update hackele.
Self, Update.
Nee, mag er trotzdem nicht.
Ich schreibe das ja jetzt überall hin.
Irgendwo muss es doch gehen.
Update.
Kann es sein, dass der Standard mir sich einfach keine Dockstrings anzeigt?
So, if self, timer set.
Is not in, is not timer state running.
Gibt das, ergibt das Sinn?
Ja, und dann, genau, wenn es irgendwas anderes ist als, als running, dann wollen wir kein Update machen.
Das ist doch gut.
Update wollen wir nur machen, wenn es, wenn es running ist.
Okay, also, date, time, now.
Oh, jetzt wird es, jetzt wird es, jetzt wird es tatsächlich ein bisschen kompliziert.
Wie machen wir das denn jetzt am besten?
Also das, weil ich will, ich will ja Pause machen können, Leute.
Wenn ich hier draufklicke, soll er Pause machen.
Wie, wie machen wir das mit der Pause jetzt am besten?
So funktioniert, okay, wir brauchen auf jeden Fall sowas wie, an die Current haben wir doch schon.
Verwende ich das überhaupt irgendwo?
Ja, hier, Delta.
Schreiben wir das doch einfach jetzt mal direkt so.
So.
Now, gleich.
Dum, dum, dum.
Self, ja, weil sonst funktioniert das ja mit Time Left.
Also, self, duration, minus, started, add.
Okay, das.
Passt ja irgendwie.
Und ansonsten, nee.
Noch, noch, das geht doch viel einfacher.
Guck mal, das ist viel zu kompliziert, was ich mache.
Der kann einfach immer das formatieren.
So, und nur für den Fall der Fälle, dass keine Zeit mehr übrig ist.
Nur für den Fall der Fälle, dass keine Zeit mehr übrig ist.
Dann setzt er nicht den Text auf null, sondern er sagt einfach.
Die aktuelle Zeit ist Date-Time, Time-Delta, null.
So.
Kurz checken, ob noch alles funktioniert.
Drei, zwei, eins, bumm.
Ja.
Er resettet sich automatisch, okay, aber das prinzipiell, prinzipiell funktioniert's.
Gut.
So.
Dann haben wir noch Text.
Text muss das Icon noch rein.
Ich nenne es, ich nenne es mal Pull-Text, weil das, das stand in dem seinem Beispiel so drinne.
Text.
So, und hier müssen wir jetzt das Icon reinhauen.
So, F.
So ging das.
F-Format-String.
Wir wollen einmal den Text haben und davor wollen wir das Icon haben.
Jetzt muss ich nur noch rauskriegen, wie man das Icon, das Icon reinbekommt.
Ich schreibe jetzt einfach mal Icon hin.
So, so irgendwie soll das, soll das aussehen.
Wie bekommen wir das Icon raus?
Das Icon bekommen wir raus anhand.
Das Timer-States und dann aus diesem Icon-Ding.
Seht ihr, was wir machen können?
Können wir, Dictionary, ja, habe ich auch, da habe ich auch dran gedacht gerade.
Wir machen mal kurz die Noob-Variante und dann machen wir die Dictionary-Variante, weil es geht ja letztendlich darum, dass ich ein bisschen Python gescheit wieder, wieder reinkriege und so.
Also, die, die, die Noob-Variante, die mir so spontan einfällt.
Würde wäre natürlich zu gucken.
Match?
Wie, wie ist da, wie ist da die Syntax?
Patternmatching?
Oh, nee, dann brauchst du ja mindestens Python 3.10.
Ich glaube, ich glaube, das ist keine so gute Idee für ein Modul, für die Leiste.
Wer weiß, was die für uralt Python-Versionen haben dafür.
Was, PHP?
What?
Match?
Response Number Case 2, 4, 7, 8, 9.
Ah, meine immerhin zwei Jahre alt schon.
Okay, das ist tatsächlich ganz interessant.
Lass mich mal die Noob-Variante basteln
Also die Noob-Variante wäre ja einfach
TimerState
Und dann matchen
Oh, Viptis
Was ist das? Also die Noob-Variante
Wäre ja wirklich einfach gucken
TimerState gleich
TimerState
Running und dann
Return
Und das können wir ja gleich nochmal
Five Header machen
Wir machen da mal eine eigene Funktion draus
Self
Dot Icon
So
Def Icon
Return Running
Wie gesagt, das ist nicht schön, aber nur mal
dass es funktioniert
Und jetzt gucken wir hier quasi
Running Icon
Stopped
Stopped Icon
Forced Icon
So, das ist die Noob-Variante
Die funktioniert auf jeden Fall
So, guck
Und sogar das Icon
Ändert sich auch
Ja, jetzt ist hier
Das erkennt man nicht
Wie ist das? Stopped
Stopped ist glaube ich besser
Gewesen hier
Stopped
Das mit dem Durchgestrichenen erkennt man nicht
Ja, das ist viel besser so
So
Und die nächste Variante
Wie man jetzt machen könnte, wäre es wahrscheinlich mit einem Dictionary
Oder? Also sprich, das wäre an der Stelle
Wo habe ich denn hier stehen? Icon
Und das wäre an der Stelle
Dass wir nicht sowas machen, sondern
Wir machen das jetzt mal testweise
Wir machen das jetzt mal testweise
Und Dictionary rein
Dass wir kein
Einfach kein langes If machen, sondern
Sowas wie
Icons gleich
Wie ist die richtige Syntax dafür?
So, ne?
Forced Icon
Forced einfach
Forced Champ
So
So ist das doch richtig
Wie ist das?
Mit Dictionaries, gell?
Paused
Stopped
Ne, Moment
Kann man ein Dictionary machen
Mit Inam States?
Sowas?
Ja?
Das wäre natürlich viel, viel nicer
Wenn das funktioniert
Ich weiß, dass das überall das gleiche Icon ist
Ne, Moment, ich mach das falsch
Das ist ein Doppelpunkt
Doppelpunkt muss ich machen, kein Komma
So, ja, richtig
Was hat er jetzt für Schmerzen?
White Space Before
Alter, geh mir nicht auf den Sack
Keys müssen Hashable sein
Ist ein Inam Hashable?
Anscheinend, anscheinend
Wird ja nicht funktionieren
Achso, also das, das, das, das
So, und jetzt würde ich
Eigentlich nur noch sagen
Return Icons
Hoffe das funktioniert
So
Self Timers
State
Ja
Hey
Funktioniert
Okay, das ist doch schon mal eine gute Lösung
Das gefällt, das ist doch schick
Das gefällt mir
Nur, dass wir jetzt nicht Icons so befüllen müssen
Sondern es wahrscheinlich im Endeffekt dann
Self.Icons sein wird
Ja, gut, was willst du machen, ja?
So
Jetzt müssen wir das hier oben drinnen befüllen
Nämlich an der Stelle
Brauchen wir nämlich noch eine Zeile
Self
Anderswo anderswo
Icons
Wie verbreitet ist das eigentlich mit diesen Underscores?
Machen die Leute das oder scheißen die da drauf?
Underscores ist ja quasi so zu tun, als wäre es Private
Machen die?
Okay
Self Parameter
Boss Champ
Wie formatiert man sowas gescheit?
So
Oder eher so den Jason Style
So, ha?
So?
Ja, so super hübsch finde ich es ehrlich gesagt auch nicht, aber...
Ja, so super hübsch finde ich es ehrlich gesagt auch nicht, aber...
Ja, so super hübsch finde ich es ehrlich gesagt auch nicht, aber...
Ja, so super hübsch finde ich es ehrlich gesagt auch nicht, aber...
Ja, so super hübsch finde ich es ehrlich gesagt auch nicht, aber...
Ja, so super hübsch finde ich es ehrlich gesagt auch nicht, aber...
Ja, so super hübsch finde ich es ehrlich gesagt auch nicht, aber...
Ja, so super hübsch finde ich es ehrlich gesagt auch nicht, aber...
Ja, so super hübsch finde ich es ehrlich gesagt auch nicht, aber...
Ja, so super hübsch finde ich es ehrlich gesagt auch nicht, aber...
Ja, so super hübsch finde ich es ehrlich gesagt auch nicht, aber...
Ja, so super hübsch finde ich es ehrlich gesagt auch nicht, aber...
Ja, so super hübsch finde ich es ehrlich gesagt auch nicht, aber...
Ja, so super hübsch finde ich es ehrlich gesagt auch nicht, aber...
Ja, so super hübsch finde ich es ehrlich gesagt auch nicht, aber...
einen ab, wie toll Python aussieht.
Ich muss jetzt sagen, so wahnsinnig
toll finde ich das jetzt auch nicht.
So, es ist gestoppt, es ist gestartet, es funktioniert.
Es funktioniert schon mal.
Ich meine, es ist auf jeden Fall
deutlich hübscher als C++, da müssen wir nicht
drüber reden. Es ist ja kaum was
hässlicher als C++.
Es ist auch hübscher als Rust.
Rust ist jetzt auch nicht so das Syntax-Wunder.
Aber so
irgendwie super angenehm finde ich
es jetzt auch nicht. Running and Post
ist getauscht? Ne,
man erkennt es nur, weil es so klein ist, nicht.
Jason, du meinst
Jason oder so.
Jason.
Oder wie dieser Typ gesagt hat.
Jason.
So, macht man,
formatiert man?
Okay, wir können uns ja einfach mal helfen lassen von der
IDE, wie man das formatiert.
So, reformat einfach mal, reformat.
Okay, die IDE hat keine genauen
Vorstellungen.
Self-Icon-Timer-State.
Äh, was?
Anstatt der Icon-Methode.
Aber das ändert sich doch immer.
Deswegen ist es eine Icon-Methode.
Oder,
den Vorschlag verstehe ich jetzt nicht.
Also, das ist ja dynamisch.
Das ändert sich ja je nachdem, wie ich draufklicke.
Das heißt, es muss ja eine Methode sein,
dass es jedes Mal neu aufgerufen wird
und ausgewertet wird.
Ja.
Wie man das jetzt simpler machen könnte, wüsste ich jetzt auch nicht.
Das finde ich aber so ganz, ganz
nice eigentlich.
Finde ich schon in Ordnung.
Ja, wir können uns vielleicht gleich mal angucken, wie sieht das vielleicht aus.
Aber der State ist ja schon davor geändert.
Der Chat erzählt wieder Zeug, wo ich keine Ahnung habe, was die Leute mir sagen wollen.
Also, hier setzt, hier braucht er das Icon an der Stelle, wo er den Text rendert.
Und dann zu dem Zeitpunkt, wo er den Text rendert, in welchem Zustand der Timer ist.
Also, ich wüsste jetzt nicht.
Ich meine, wenn ich, wenn ich irgendwie eine High-IQ-Idee habe, dann ist das so, dass ich nicht mehr in der Zeit, wo ich den Text rendere, in welchem Zustand der Timer ist.
Also, ich wüsste jetzt nicht.
Ich meine, wenn ich, wenn ich irgendwie eine High-IQ-Idee habe, dann ist das so, dass ich nicht mehr in der Zeit, wo ich den Text rendere, in welchem Zustand der Timer ist.
Erzähle, aber ich wüsste jetzt nicht, wie das anders funktionieren sollte.
Das gefällt mir okay.
Das ist aber so schon mal ganz nice.
Das finde ich, finde ich so ganz hübsch.
Das ist aber so schon mal ganz nice.
Das finde ich, finde ich so ganz hübsch.
Okay.
Okay, weiter weiter Text.
Wir brauchen noch ein Notify.
Icon haben wir.
So, wir brauchen noch..
Ach, Notify haben wir hier unten schon.
Muss man eigentlich Python benutzen, um das zu extenden.
Ja.
Das muss ein Python-Modul sein.
Ja!
Das muss ein Python-Modul sein, weil das selbst in Python programmiert ist.
Was viel cooler wäre, wenn es einfach nur JSON-Output nehmen würde
und man das mit jeder x-beliebigen Programmiersprache machen könnte.
Das wäre natürlich cooler, aber nein, das Modul muss in Python sein.
Hat allerdings den Vorteil, das ist das, was ich mir auch vorhabe, was ich mir überlegt habe,
wenn wir das in irgendeiner Art und Weise so bauen, dass auch Python-Programmierer sagen,
damit kann man leben, dann reiche ich das als Pull-Request ein bei dem Projekt,
was die Statusleiste herstellt und da muss ich mich nie wieder drum kümmern, da ist es immer dabei.
Notify, okay, Notify brauchen wir noch.
Also, if, du kannst doch die Funktion in eine externe Datei exportieren.
Ne, das soll alles in eine Datei kommen.
Wir brauchen die Max-FPS-Statusleiste in C-Sharp.
Ja, man könnte auch gleich Pull-Request nehmen oder diese komische,
Widget-Erstellungs-Ding und man kann es da beliebig übertreiben.
Okay, wir wollen jetzt ja, wenn der Timer, wenn der Timer auf 0 geht,
also quasi so, hier so, hier jetzt so, da, da, wenn der Timer auf 0 geht,
quasi jetzt, er soll sie erstmal nicht so doof resetten,
der soll eine Nachricht schicken, der soll eine Nachricht schicken, dass es abgelaufen ist.
Also gucken wir mal, if, if not, oder wie checkt man, Moment, ne, ne, if,
es ist ja nicht not, es ist ja nicht none, wie die Bar heißt, Bumblebee-Status.
Self-Notify und, wie macht man denn sowas im Bar?
Okay, weißt du, check empty string mit Kick-Symbolen bitte, ja, genau.
Ich mache eine eigene Statusbar, weil ich sonst nichts anderes zu tun habe, gell.
Empty strings are falsy.
Oh, das erinnert mich aber, das erinnert mich unglaublich an JavaScript.
Diese Aussage, empty strings are falsy.
Ich dachte, diesen Shit gibt es nur in JavaScript, man.
Falsy, wenn ich das schon höre.
Okay, also kann man machen, if not self-notify, also wenn das ein empty string ist,
dann, und jetzt muss ich das abgucken, jetzt muss ich das abgucken,
wie er das hier gemacht hat mit dem notify, notify, notify,
Utils CLI execute, excellent.
Genau das.
Genau das, exakt das will ich machen.
Notify, wenn ich was gesetzt habe, wenn ich nichts gesetzt habe,
wenn ich nichts gesetzt habe, dann will ich ausführen,
Format-String,
Notify-Send ist glaub, ne?
Notify-Send und dann sowas wie Date-Time, Date-Time-Now
und jetzt bin ich mal gespannt, ob ich die Formatierungsgeschichten auf,
auf,
auf die Reihe kriege.
Wie ist das?
Doppelpunkt und dann einfach den Format-String, ne?
Also sowas wie Stunde, Minute, Sekunde und sowas.
Ob das funktioniert?
Okay, wenn der Timer abläuft, sollte ich jetzt eine Nachricht kriegen mit der, mit der Uhrzeit.
Funktioniert nicht.
Ah, weil ich nicht reloaded habe, ich kack noob.
Und?
Fuck.
Ach so, Moment, ich rufe das doch nirgendswo auf.
Oder?
Ich glaube, ich rufe das, ich glaube, ich rufe das sogar nirgendswo auf.
If, das muss hier rein.
Self-Notify.
So.
Und jetzt.
Bam!
Oh, wa!
Was jetzt?
Ach so!
Weil ich,
ich weiß, woran das liegt.
Ich weiß, woran das liegt.
Ich setze, ich setze,
ich setze den Timer-State, ich setze den Timer-State ja nie zurück.
Oh.
Ja, Update.
Ja, ich setze den Timer-State ja nie zurück.
Ich muss jetzt quasi hier noch sowas sagen wie Self, Timer-State gleich, äh, Post, machen wir mal oder so.
Post.
Okay.
Weg damit.
Und ich stelle mal meine Default-Minuten auf 0 und 2 Sekunden,
dass ich ordentlich testen kann, so.
Und jetzt einmalig, hä?
Jawoll, jetzt ist gut, jetzt ist gut.
Ich mein, hey, wisst ihr was?
Ihr bringt mich da auf eine Idee.
So blöd ist das eigentlich gar nicht.
Ich mein, vielleicht nicht jede Sekunde, ja?
Vielleicht nicht jede Sekunde,
aber man kann das doch ohne Probleme
alle, keine Ahnung, alle, alle,
wobei, komm, das ist rot da oben,
das sieht doch jeder, der das macht.
Das sieht doch jeder, der das macht.
Es reicht, wenn er das einmalig ausführt.
Wir könnten da noch eine Option für einbauen.
Alert.
Machen wir das hier nebenan.
Notify.
Notify.
Notify repeat.
Äh.
Ja.
Wie auch immer man das nennt.
Notify repeat könnte man auch machen.
Und dann guckt er, okay.
Und wenn Notify repeat auf true ist,
dann führt er das immer wieder auf.
Wobei man halt wirklich sagen muss,
ja, jetzt wird es richtig etwas.
Wobei, jetzt machen wir vielleicht auch später.
Theoretisch müsste man da noch nicht nur
Notify command, Notify repeat.
Notify repeat ist übrigens
kein true und false.
Sound abspielen. Sound abspielen ist easy.
Du gibst einfach ein Command an,
mit dem du das machen kannst.
Ja.
Notify repeat.
Und dann kannst du da irgendwie
ein Intervall angeben,
wann das wiederholt wird.
Das machen wir noch.
Das machen wir noch.
Das machen wir jetzt aber nicht gleich.
Erstmal müsste die grundsätzliche Funktionalität da sein.
Dass man sagen könnte, okay,
wenn es auf repeat steht,
dann wiederholt er das alle 5 Sekunden.
Und sowas. Das ist ja relativ einfach.
Ich muss mir dann einfach nur merken, wann ich zuletzt
repeated habe.
Das ist einfach.
Du kannst einfach als Option übergeben.
Notify.
Und dann würdest du dann hier halt das Kommando reinschreiben,
was ausgeführt werden soll.
Also als also Play oder sowas.
Aber was ich nicht inszeniert habe.
Ich habe keine Soundkarte hier drinne.
Oder wie macht man PC Speaker Sound?
Advanced PC Speaker Programme.
Oh, jetzt geht's ab.
Erst erst mal noch was anderes.
Mod Probe Mod Probe PC Speaker.
Okay, PC Speaker ist wieder am Start.
Beep.
Weil?
True Leute, haltet euch die Ohren zu.
While true, do, beep.
Done.
Oh, mehr geht nicht.
Ich dachte, jetzt kackt der ab.
0,1, sleep.
Oh, Alter.
Was kann man da hinten noch angeben?
Beep Frequency.
Jetzt wird's aber krass advanceder Shit, man.
Okay, wir können mal schauen,
ob der Kram, den ich programmiert habe,
funktioniert. Notify, beep.
Hat jetzt jemand als
als
Command übergeben.
Schau mal, ob es jetzt beept.
Beep exited with Error Coins.
Alles klar, funktioniert ja schon.
Excellent.
Und wo ist jetzt eigentlich das Problem?
War blöd gefragt.
Also, hups, was haben wir jetzt gemacht?
Wollt eigentlich notifilen.
Da wollte ich eigentlich hin.
Wo ist jetzt das Problem?
Was?
Beep.
261.
Geht nicht.
Special advances.
Mega Beep.
A minus F.
Ich glaube, vor allem kann nur ein Beep.
Das ist zu advanced dafür.
Also, es hat auf jeden Fall nicht gebiebt.
Es biebt nicht, Leute.
Warum nicht?
Aber User bin mit exited with Error Code eins.
Ich weiß, warum das nicht geht.
Weil das nicht in der Schelle ausgeführt wird.
Wahrscheinlich.
Das heißt, wenn ich das nicht in der Schelle ausführe,
dann kann ich das nicht ausführen.
Das heißt, wenn ich das nicht ausführe,
dann kann ich das nicht ausführen.
Das geht im Terminal.
Wahrscheinlich ist es ein Terminal-Beep.
Es ist kein PC-Speaker-Beep, sondern ein Terminal-Beep.
Kann das sein?
Gut.
Ist mir egal.
Man kann jedes x-beliebige Programm ausführen lassen.
Also auch ein Beep.
Modpro-R PC-Speaker.
So, jetzt ist er wieder weg.
Weil ich habe keinen Bock darauf, dass es piepst.
Erst mal PC-Speaker-Modul unloaden.
Alles wunderbar.
Für irgendwelche Gründen hat es aber nicht funktioniert.
Wunderbar.
Next.
Wo sind wir jetzt stehen geblieben, Chat?
Notify. Funktioniert.
Icon. Funktioniert auch.
Status. Update. Funktioniert.
Ach so, ja.
Das ganze Pause-Stop-Reset funktioniert ja noch gar nicht.
Das ganze Pause-Stop-Reset funktioniert ja noch gar nicht.
Das ganze Pause-Stop-Reset funktioniert ja noch gar nicht.
Das fällt mir da gerade so ein.
Das heißt, wir müssen jetzt mal gucken, welche IDE ist das?
Das heißt, wir müssen jetzt mal gucken, welche IDE ist das?
Welche IDE ist das?
PyCharm.
PyCharm ist das.
So, also wir müssen jetzt mal mit dem Pause und Reset.
Das ist das, also Update.
Also gehen wir mal hier, Timer, Reset.
Wenn ich, lass mal überlegen, wie das Verhalten sein soll.
Wenn der Timer läuft, wann macht man gleich gleich und wann macht man is?
Gibt es da irgendwie so eine Faustregel für?
Also, wenn der Timer-State Running ist,
Also, wenn der Timer-State Running ist,
dann will ich das schon mal gar nicht so machen, wie es da drinnen steht, sondern,
also, wenn der Timer-State Running ist, lass mal kurz, lass mal kurz in mich, in mich gehen.
Also, das heißt, mit is checke ich den Typ oder wie und mit gleich gleich die Instanz.
Also, wenn ich zwei Objekte habe und die miteinander vergleiche, dann, okay.
Aber enums ist mit is wahrscheinlich das gleiche wie mit gleich gleich, weil unter der Haube ein enum wahrscheinlich das irgendwie überschrieben hat.
Also, wenn ich zwei Objekte habe und die miteinander vergleiche, dann, okay.
Aber enums ist mit is wahrscheinlich das gleiche wie mit gleich gleich, weil unter der Haube ein enum wahrscheinlich das irgendwie überschrieben hat.
Ja, aber, aber is ja an der Stelle auch.
Ich, ich würde mal fast sagen, an der Stelle macht es keinen Unterschied, oder?
Wenn, wenn es ein enum ist.
Okay, also, wenn, wenn es Running ist, dann will ich es, dann will ich, dass es pausiert.
Äh, else, nein, Moment, Moment, nee, nee, sorry, nicht else, was ist es, el, elif, elif.
Ähm, wenn der Timer läuft.
Timer State, Stopped, Stopped, äh, dann will ich machen Stop und auch ein Return unten drunter.
Wie, wie, muss man gucken, wie ich das, wie ich das dann einbaue.
Wenn das quasi nicht das und das ist, wenn es quasi dann Stopped schon, nee, Moment, Paused will ich haben, Paused.
Weil ich will, wenn es Runnt und ich drücke die rechte Maustaste, soll es pausiert werden.
Wenn ich es, ähm, nochmal, wenn ich es nochmal drücke, dann soll es gestoppt werden.
So, und wenn es schon gestoppt ist, dann will ich den, die Auswahl haben zum, zum Anzeigen.
Ja, das klingt doch, das klingt doch sehr sinnig, das machen wir jetzt so.
Guck mal, dass die Anzeige funktioniert.
Pattern Matching mache ich nicht.
An der Stelle, weil Pattern Matching ist Python 3.10, wenn ich das richtig verstanden habe.
Und vielleicht verwenden Leute noch irgendwelche ältere, älteren Versionen.
Ich glaube, wenn ich das wirklich, äh, als Pull Request schicken will, will der nicht, dass ich zu neue Features verwende.
Wenn ich das nur für mich baue, ist natürlich kein Problem.
So, Vertical, sieht gut aus.
So, das heißt, ich bräuchte jetzt quasi hier noch sowas wie hier.
Def, Pause oder Pause, Def, Stop, Pause, Def, Start und wahrscheinlich noch sowas wie Def Resume.
Denk ich mal, bin mir nicht ganz sicher, ob ich, ob man das braucht.
From Future Import Case.
Okay, das ist die Frage von, ab wann?
Pattern Matching Python Version.
3.4 hat das wahrscheinlich noch nicht, oder?
First Version.
Was war denn das erste?
Ja, 3.10 bringt mir ja nix.
3.10 ist auf jeden Fall zu neu.
Wenn ich das einbaue und irgendjemand lässt seine Statusleiste mit 3.4 laufen,
weil er irgendwie ein altes Ubuntu Stable oder so verwendet, dann geht es nicht bei ihm.
Das ist doch doof.
Wenn ich nur Sachen verwende, die in 3.4 drin sind, das kam irgendwie, 3.4 kam irgendwie 2008 oder so raus,
das sollte dann wahrscheinlich keine Probleme machen.
Okay, also an der Stelle sage ich jetzt hier, Self, Pause, Pause Champ, Pause.
Hier sage ich Self.Stop, ohne dass es jetzt was machen würde, aber von der Logik her, warte mal.
Das können wir hier oben drüber übrigens an der Stelle auch gleich machen.
Wenn ich den Knopf drücke, wenn das Stop ist, ich kopiere mir das mal kurz rüber,
wenn ich die linke Maustaste drüber drücke, während es Running ist, dann will ich es pausieren.
Wahrscheinlich wirkt ja das, die Returns kann ich mir aber sparen, mache ich dahinter nicht mehr.
So, wenn der Timer State Stop ist, wobei, wir lassen es einfach so,
wenn der Timer State Pause ist, dann will ich es mit der linken Maustaste fortsetzen
und als letztes brauchen wir noch, oder machen wir einfach Else, was anderes gibt es ja nicht.
Else, ich bin gerade, Else ist ja dann quasi Stopped, was anderes kann ja eigentlich nicht sein.
Stopped.
Und wenn es Stopped ist, dann will ich es starten, den Timer.
So, soweit von der Logik. Das hat jetzt natürlich noch keine Funktionalität, aber das sollte von der Idee her eigentlich passen.
Wir müssen noch was anderes einbauen, nämlich, aha, ich glaube fällt mir, wenn der Timer nämlich auf 0 ist, dann wollen wir nicht starten.
Wollen wir jetzt hier noch Stopped.
So, also sprich, okay, das ergibt doch jetzt irgendwie halbwegs Sinn.
Das ergibt doch jetzt halbwegs Sinn. Also, wenn ich das Ding rechts anklicke, äh, sorry, wenn ich den Timer links anklicke,
der Timer ist Stopped, dann wird er gestartet. Wenn ich ihn links anklicke, während er gerade läuft, wird er pausiert.
Wenn ich ihn anklicke, während er gerade pausiert ist,
und es ist noch Zeit übrig, dann startet er ihn wieder, beziehungsweise setzt er ihn fort.
So, und alles andere, also sprich, wenn es irgendwie nicht hier, wenn nicht Timelapse ist, dann soll er einfach gar nichts machen.
Er soll auf 0 stehen bleiben, bis ich ihn resette.
So, dann machen wir das Ganze auch mal von unten nach oben, weil ich glaube, Resume ist relativ einfach.
Oh, fuck, Alter, jetzt wird's, jetzt wird's, jetzt wird's zu HRQ. Wie mache ich denn das jetzt richtig?
Nee, komm, wir machen, wir fangen mit...
Was fangen wir denn an? Was fangen wir mit Start an?
Wir fangen mit Start an, dann sehe ich wenigstens, ob's, ob's funktioniert.
Also, was muss ich machen, um den Timer zu starten?
Ich bin natürlich doof, ich hab's grad, ich hab's grad rauscopy-pasted, äh, gelöscht.
Also, was muss ich machen bei Start?
Nee, nicht bei Stop, bei Start.
Das ergibt eigentlich keinen Sinn.
Also, okay, aber was muss ich, was muss ich machen beim Start?
So.
Beim Start den Timer-State auf Running setzen.
So, soviel, soviel, das ist schonmal das, das Mindeste.
Probieren wir mal aus, Start, so, zack, läuft.
Gut.
So, Start, Timer-State, Running.
Dann muss ich allerdings noch sagen, started at DateTime, DateTime, TimeNow.
So, weil ich muss ihm ja sagen, jetzt hab ich auf Start gedrückt, ab jetzt musst du rechnen.
Mit dieser Zeit muss...
Oh, what the fuck, okay.
Äh, ah.
Ich muss, glaub ich, die, die aktuelle Zeit noch, noch setzen, gell?
Ja, das kann sein.
Dass ich noch sagen muss, ähm, gleich Self-Duration.
Ha, jetzt funktioniert's, okay, gut.
Das klappt.
So, also, starten kann ich den Timer schonmal, easy.
Was muss ich machen, um den Timer zu stoppen?
Wenn ich jetzt draufklicke zum Stoppen,
dann kann ich, dann kann ich die, die, die, die aktuelle Zeit resetten, auf jeden Fall.
Ähm, ich muss den Timer-State auf Stopped stellen.
So, guck, ob das jetzt alles funktioniert.
Ne?
Okay, nice.
GG.
Funktioniert nicht.
Sehr gut.
Schau mal, schau mal, geil.
Okay, ähm.
Ach so, ha, weil ich auf Pause hier zwischendrin gehe, deswegen funktioniert das nicht.
Alles klar.
Muss ich weitermachen.
Also, ich muss den Timer-State auf Stopped stellen zum Ausmachen.
Ich resette die aktuelle Zeit, wenn ich auf Stop drücke.
Und ich muss den Anzeigetext wieder ändern, dass wieder die Standard, Standard-Duration drinsteht.
Glaub, das müsste so passen.
So, was mach ich, was mach ich für, für Pause?
Wahrscheinlich einfach den Timer-State auf Pause stellen, sonst nix.
Funktioniert das jetzt?
Hey!
Es funktioniert.
Easy.
Komm her.
So.
Linksklick.
Stop.
Rechtsklick.
Reset.
Easy.
Start.
Stop.
Pause.
Rechtsklick.
Reset.
Das sieht man jetzt nicht so richtig, weil die Zeiten ziemlich, ziemlich beschissen sind.
Ich mach die mal auf 30 Sekunden.
So, jetzt läuft, jetzt läuft der Campbell runter.
Dum, dum, dum, dum.
Runter, runter, runter, runter.
So.
Jetzt sag ich, okay, Pause.
Reset.
Geht er wieder hoch auf 30.
Sehr schön.
Okay, das ist von der Idee her schon mal.
Wie mach ich denn jetzt den Resume?
Das ist, glaub ich, gar nicht so einfach.
Wie, wie, wie setze ich das jetzt wieder fort an der Stelle?
Chat.
Da müsst ihr, da müsst ihr jetzt mal mitdenken.
Da bin ich jetzt grad mit meinem Latein so ein bisschen am Ende.
Ich muss auf jeden Fall, nee, wie mach ich denn das jetzt richtig?
Es ist, es muss auf jeden Fall Timer-State wieder Running gemacht werden.
So.
Ich fürchte nur, das wird nicht funktionieren.
Guck mal.
So, ich drück jetzt, so, läuft jetzt.
Ich mach jetzt Pause.
So.
Und jetzt würde ich ja eigentlich erwarten, wenn ich jetzt wieder neu draufdrücke, um den Timer wieder zu starten, dann soll er weitermachen bei 27.
Was er aber wahrscheinlich nicht machen würde, weil, genau, jetzt geht er runter auf 13, weil Started At sich ja geändert hat.
Also, äh, Started At ist ja immer noch die ursprüngliche, die ursprüngliche Zeit.
Muss ich einfach Started At auch nochmal setzen?
Und das war's dann?
So einfach kann das nicht sein.
Kannst du nicht einfach mit nem Bool Pause Unpause realisieren?
Nee, weil er ja die Startzeit immer nimmt.
Guck, ah, fuck, das funktioniert nicht.
Okay, das ist doch komplizierter, als ich gedacht hab.
Weil, wenn ich jetzt, komm, wenn ich jetzt stoppe und, und wieder auf, auf Starten drücke, dann resettert er die, die, die gesamte Duration.
Weil, äh, die, die, den aktuellen Timer, weil sich, Moment, wo ist Update?
Weil Self Duration sich immer errechnet aus, wann der Timer gestartet wird, ähm, jetzt minus, wann der Timer gestartet wurde.
Das ist quasi kein Counter Duration.
Ich müsste sowas hier machen, in dem Sinn, guck mal.
Self Duration, dass ich das immer, immer voneinander abziehe.
Wisst ihr wahrscheinlich, oh, what?
Okay, nee, das, das funktioniert so nicht, wie ich mir das gedacht hab.
Ähm, äh, okay.
Kannst du die 30 nicht durch die 21 ersetzen?
Moment, was? Meinst du Zeilennummer, oder wie?
Nee, Sekundenanzahl.
Nee, das muss, die Sekundenanzahl errechnet er sich ja.
Das heißt, er muss jetzt, wir müssen jetzt irgendeinen Weg finden.
Wie ich beim Fortsetzen eines Timers das nicht resette, sondern fortsetze.
Das heißt, ich brauch, oh, also, okay, hier.
Also, Current ist schon mal, das muss, das muss abgezogen werden immer.
Bei Pause die Restzeit merken.
Bei Pause die Restzeit merken.
Also, okay, ich glaube, ich weiß, was du meinst.
Testen wir das mal.
Self, bester Name, blub.
Kannst du es nicht so machen, dass, wenn du pausierst, nicht 30 Sekunden runtergehst, sondern die Zeit, wo du warst?
Das Problem ist, ich speichere mir zwar die Zeit, wo ich gerade bin, aber die Zeit, wo ich gerade, also, guck mal, hier speichere ich mir die Zeit, wo ich gerade im, im Countdown bin.
Aber, das errechnet sich immer frisch pro Durchgang.
In diese Rechnung fließt die aktuelle Zeit nicht ein.
Das wird immer, das wird immer frisch gesetzt.
Also, der errechnet sich nicht die neue Zeit aus der alten Zeit minus das, wie lang es gedauert hat, sondern errechnet das immer neu.
Das heißt, das fließt hier, egal, wie ich es mache, das fließt hier gar nicht ein.
Okay, wir können das mal mit der Restzeit mal probieren.
Okay, komm, ich, ich nenn's einfach mal Rest.
Rest, so.
Date Time, Time Delta ist erst mal 0.
Ist egal, so, Restzeit.
Das heißt, wenn ich, wenn ich auf Resume drücke.
Wenn ich auf Resume drücke, dann ist, dann ist Restzeit, Restzeit ist Self.
Also, quasi das, was ich vorher hatte, das merke ich mir.
Also, nee, nee, nee, nicht wirklich.
Duration.
Duration minus aktuell ist die Restzeit.
Das ist der Rest, also, was noch fehlt.
Die Zeit insgesamt minus, minus das, was aktuell auf dem Timer ist, ist die Restzeit.
So.
Funktioniert so nicht.
Da zieht es ja jedes Mal dann von ab.
Also, selbst, wenn ich jetzt hier sagen würde, minus Rest, das wird wahrscheinlich nicht funktionieren.
Eins, zwei, drei, vier, fünfzehn.
Nee.
Das, naja, ganz so verkehrt ist es doch gar nicht.
Nee, das funktioniert doch, oder?
Oh, save.
Ja, das funktioniert.
Chat, das hätte ich nicht gedacht, dass das einfach so klappt.
Easy.
Da haben sich die Prime-Subscriptions schon wieder gelohnt, Leute.
High-IQ-Tipps hier im Chat wieder.
Way to dank.
Das funktioniert auch.
Okay, das ist tatsächlich jetzt einfacher, als ich gedacht habe.
Einfach die Restzeit merken.
Easy.
Ja, dann, dann können wir das einfach so lassen.
Im Pause-Status noch blinken lassen.
Ja, im ausgelösten, du meinst nicht im Pause-Status.
Ja, blinken, blinken in der Pause muss das nicht.
Da hat er das Icon, aber er könnte vielleicht blinken, wenn er abgelaufen ist.
Ja, das ist wirklich simpel, also.
Moment, was ist das?
Ah, die Restzeit wird nicht resettet.
Deswegen klappt das nicht.
Ah, wenn ich stoppe, wenn ich stoppe, muss ich auf jeden Fall.
Also, wenn ich, nee, wenn ich starte, reicht ja.
Wenn ich starte, muss ich auf jeden Fall.
Beim, beim Delta, muss ich auf jeden Fall resetten hier.
Komm, und bei, bei Stopp, bei Stopp auch.
Ah, ja, jetzt funktioniert es, okay.
Eigentlich total einfach.
Da hätte ich auch drauf kommen können.
Ich würde aber noch die Symbole tauschen, Max.
Wenn der Timer läuft, müsste da das Pausensymbol sein.
Hä, warum sollte, wenn der Timer läuft, das Pausensymbol sein?
Der Resettet übrigens auch immer noch, wenn er auf 0 geht, okay.
Nee, das ist doch gut.
Der läuft, wenn er, der hat das Play-Symbol, wenn er läuft.
Clown27, danke für den Sub, der hat das Symbol Pause, wenn er pausiert ist, gestoppt, wenn er gestoppt ist.
Und wenn er läuft, hat er den Play-Button.
Nee, das finde ich eigentlich relativ aussagekräftig.
Oder, ich meine, warum sollte man eine Pause anzeigen, wenn er eigentlich gerade läuft?
Kannst du es nicht so machen, dass du, wenn du pausierst, nicht 30 Sekunden runter gehst,
wo du warst? Also, das hast du schon vorher geschrieben.
Nee, nee, haben wir jetzt, haben wir jetzt ja gemacht.
Ach so, dass man die Aktion, nee, das finde ich so, finde ich so schöner, dass man sieht, was er macht.
Nee, nee.
Pause anzeigen, wenn er playt?
Nee, das weiß nicht, ich finde das, das finde ich so irgendwie intuitiver.
Drückst drauf, Pause.
Ich weiß, was ihr meint. Ihr meint, dass man nicht anzeigt, in welchem Status er gerade ist,
sondern anzeigt quasi, was jetzt passieren würde, wenn man draufklickt.
Das Ding ist nur, das geht gar nicht an der Stelle.
Weil, wenn ich links klicke, wenn ich links klicke, macht er Play.
Und wenn ich in Pause rechts klicke, macht er Stop.
Also, was soll ich jetzt anzeigen? Stop oder Play?
Es gibt ja zwei Möglichkeiten, je nachdem, mit welcher Maustaste ich klicke.
Das ist doch nicht so wirklich eindeutig.
Ich würde ehrlich gesagt eher dazu tendieren, das einfach genauso zu lassen, wie es jetzt ist.
So, ein Bug haben wir aber noch drinne.
Nämlich, aus irgendwelchen Gründen, wenn der Timer abgelaufen ist, resettet er sich wieder.
Und das ist natürlich doof. Du brauchst gar keinen Stop.
Wenn der Timer steht, dann Play, wenn er läuft, dann Pause.
Doch klar brauche ich einen Stop.
Ich brauche... Stop ist ja quasi wie Reset.
Ich sage jetzt Pause und jetzt ist halt... ich will das Ding wieder resetten auf die ursprüngliche Zeit.
Dann mache ich rechtsklicken.
Wenn ich jetzt rechtsklicke, zack, es geht auf die ursprüngliche Zeit.
Ich meine, wir... ja, wir können das mal tauschen.
Ich weiß nicht, ob mir das gefällt.
So, jetzt steht er auf Stoppt.
Das heißt, eigentlich müsste er, wenn er auf Stoppt steht, ja theoretisch auf Running stehen.
Weil, wenn ich draufklicke, startet er.
So, und wenn ich jetzt anklicke, dann steht da das Pause-Symbol.
Und wenn ich jetzt anklicke, dann macht er Pause.
Und wenn ich wieder weiterklicke...
Jetzt habe ich wieder Play.
Aber woher weiß ich denn jetzt, dass ich das Ding resetten kann mit der rechten Maustaste?
Gar nicht, oder?
Weil, ich sehe ja nicht den nächsten State.
Ja, oder so.
Eigentlich, so könnte man das auch machen.
Was findet ihr besser, Leute?
Wenn er anzeigt, was er jetzt macht mit dem Icon.
Oder wenn das Icon anzeigt, in welchem Status er gerade ist.
Tja, da bin ich tatsächlich so ein bisschen unschlüssig noch.
Vielleicht brauchen wir auch gar kein Stopp-Icon, kann ja auch sein.
Ich fand das ursprünglich, ich finde das ursprünglich auch irgendwie...
Keine Ahnung, irgendwie aussagekräftiger.
Ne, ich finde das so schon besser.
So, also wir müssen jetzt mal gucken, warum das Ding sich automatisch resettet.
Ich vermute mal, das liegt daran...
Wir sagen Notify, wir sagen Timer Paused.
So, wir setzen Current auf das Ding.
Ähm, Moment, Timer Paused brauchen wir nicht.
Ich muss Self-Pause schon mal machen.
Dann ist alles gut.
Vorher Notify.
Vorher vielleicht das Setzen.
Und jetzt passiert auch nichts mehr.
So, jetzt geht es nämlich.
Jetzt mache ich es an und jetzt bleibt er einfach bei 0 stehen.
Passt auf.
Nein, fuck, der resettet sich wieder.
Warum resettet er sich wieder?
Pause Champ.
Das ergibt ja überhaupt keinen Sinn.
Warum resettet sich das Ding jetzt wieder?
Das soll gefälligst auf 0 stehen bleiben.
Das soll gefälligst auf 0 stehen bleiben.
Zumal bei Pause ja auch sonst nichts...
Hä?
Das verstehe ich nicht.
Hä, warum resettet sich das wieder auf 1?
Weil kleiner 0...
Das hat doch irgendwas hiermit zu tun, oder?
Nee, wobei, hier geht er gar nicht rein, wenn das auf Paused ist.
Warum updatet er sich überhaupt, wenn das auf Paused ist?
Der sollte sich einmal updaten.
Der sollte sich einmal updaten, wenn das auf Paused ist.
Der sollte sich einmal updaten.
Und dann nichts mehr machen.
Pause Timer State.
What? Das checke ich jetzt nicht.
Ja, 2 Sekunden.
Zack.
So, und jetzt sollte der...
Ich meine, er geht ja in den Paused-Status.
So, okay.
Aber...
Timer State is not Timer State running.
So, und hier ist er im State Paused.
Der darf sich doch eigentlich gar nicht mehr updaten.
Der geht da noch gar nicht mehr rein.
Der geht da noch gar nicht mehr rein.
Ich teste mal kurz was.
Ich muss ausprobieren.
Keckel. Super Keckel, alles klar.
Was passiert bei Timelapse?
Na, der guckt, ob Current...
Ach so.
Ah, Moment mal.
Nee, nee, nee.
Hä?
Der guckt, ob die aktuelle Zeit größer als 0 ist.
So.
Sobald das kleiner als 0 ist, geht er einmal hier rein, macht Pause.
Und sobald er in Pause ist, darf das hier eigentlich nicht weiter ausgeführt werden.
Was es aber anscheinend wird.
Was aber nicht sein darf.
Weil er auf Timer State Paused steht.
Das verstehe ich jetzt.
Das ist zu high IQ gerade.
Das checke ich nicht.
Pause?
Und ab hier ist die Sache doch eigentlich beendet.
Ab hier passiert nichts mehr.
Äh, gute Frage.
Da fällt mir jetzt ehrlich gesagt gerade nicht allzu viel.
Passiert das auch, dass er sich resettet, wenn du zwischendurch mal...
...pausierst?
Gute Frage.
Ja. Warum resettet er sich?
What the fuck?
Was ist das hier?
Vor allem, der bleibt ja...
Der bleibt ja danach stehen.
Und ich kann ihn auch nicht wieder starten.
Das heißt Current und so ist alles...
...und ist nicht null.
Wartet mal, wartet mal.
Also der Text kommt auch auf jeden Fall von hier.
Das heißt, aus irgendwelchen Gründen...
Hä?
Das setze ich doch gar nicht.
Das setze ich bei Start.
Hat das was mit dem...
Hat das irgendwas mit dem...
...mit dem Rest zu tun?
Vielleicht verstehe ich das.
Ich meine, das sagt Pause und...
...und dann sollte es spätestens hier ausgehen.
Ich meine, das sagt Pause und...
...und dann sollte es spätestens hier aussteigen.
Weil das nicht mehr...
Es kommt, es kommt aber auf jeden Fall von hier.
Ich meine...
Was anderes?
Self-Text? Lull.
Also das sollte ja dann eigentlich gesetzt werden.
Ja, is not state running, okay.
Wait a minute.
Moment, Moment.
Ne, ist doch richtig, ist doch richtig.
Was ist das? Was ist das?
Warum geht das...
Warum geht das vorher?
Äh, okay.
Läuft das irgendwie multi-threaded?
Oder sowas?
Keine Ahnung.
Ich...
Ich hätte jetzt erwartet, dass...
...der Kram wird einmal die Sekunde aufgerufen...
...und gut ist.
Also, die erste Frage ist...
Okay, wo die...
...wo die 2 herkommen, weiß ich.
Die 2 kommt aus meinem Duration.
Ja, da kommt das her.
Wobei ich das ja hier nirgendswo setze.
Wobei ich das hier nirgendswo setze.
Ja, das könnte man machen.
Ja, könnte man machen.
Dass man sieht, dass man sieht, dass der...
Warte mal, ich...
Kann es sein, dass ich irgendwas vergesse?
Vergesse irgendwie zu...
Bei meinem Start oder so?
Ah.
Start running.
Started at now.
Rests resetten.
Current.
Ist eigentlich gut so.
Resume.
Resume?
Setzt hier das voneinander ab.
Okay.
Stopped kommt nicht zur Frage.
Zeile 98 steht return.
Hey.
Return heißt, dass er an der Stelle aufhört.
Und beim nächsten Mal wieder hier oben anfängt.
Wenn das nächste aufgerufen wird.
Und dann ist der State immer noch.
Immer noch was anderes.
Okay, jetzt blick ich nicht durch.
Ich mein...
Was anderes.
Self timer state.
Ich weiß, woran das liegt.
Leute, ich weiß, woran das liegt.
Das liegt bestimmt an dem Notify.
Das ist...
Das hängt.
Das Notify braucht einfach...
Braucht einfach zu lange.
Kann das das sein?
Das Notify braucht einfach zu lange.
Weil das ein externes Programm aufruft.
Und dann geht da schon das zweite Mal irgendwie wieder rein.
Moment.
Das können wir jetzt mal ausprobieren.
Wir machen das Pause einfach davor.
Nein, Gott!
Nein, Gott, bitte nein!
Nein!
Nein!
Das ist es schon mal nicht.
Alter, wo kommt das her, Mann?
Hä?
Vor allem, wo kommt das...
Wo kommt das Null...
Wo kommt das mit der Zwei her?
Pause.
Das wird doch nirgendswo gesetzt.
Und das hier darf dann schon nicht mehr ausgeführt...
Also...
Ist das Jay nicht...
Ich meine...
Wir könnten mal...
Das hat bestimmt was mit dieser komischen Rechnung hier zu tun.
Okay.
Machen wir es.
Self. Timer State. Pause.
Pause.
Pause. Pause Champed.
Ich...
Ich checke es absolut nicht.
Also daran liegt es schon mal nicht.
Kann das sein, dass das...
Das kommt von dieser komischen Rechnung hier.
Was sage ich euch?
Mache das mal kurz weg.
Ne.
Ne, da müsste was ganz anderes rauskommen.
Damit hat es nichts zu tun.
Damit hat es nichts zu tun.
Wo kommt diese Scheiß Zwei her, Mann?
Wo kommt diese Scheiß Zwei her, Mann?
Die wird doch nirgendswo gesetzt.
Die wird weder im Fulltext gesetzt.
Die wird weder im Fulltext gesetzt.
Die wird auch nicht hier drinnen gesetzt.
Die wird auch nicht hier drinnen gesetzt.
Da vielleicht?
Aber das wird ja auch nicht mal aufgerufen.
Hier unten.
Format Duration.
If not Time Delta.
Ne, das ist richtig so.
Wenn das...
Wenn das nicht gesetzt ist, dann setzt er in Default Wert.
Das setzt Null.
Das funktioniert ja auch mit dem Nullsetzen.
Das funktioniert ja auch mit dem Nullsetzen.
Und Pause wird auch ausgeführt.
Und Pause wird auch ausgeführt.
Weil ansonsten wird er hier nicht auf...
Ja.
Der macht ja auch Pause.
Ich...
Ich seh nicht ein, warum das...
So, der macht ja auch Pause.
Sieht man ja auch schon an dem Icon, dass der Pause macht.
So, bam.
Wir probieren mal kurz was.
Refresh Intervall machen wir jetzt mal hoch auf 2 Sekunden.
Wir probieren mal kurz was. Refresh Intervall machen wir jetzt mal hoch auf 2 Sekunden.
So, und dann mal gucken.
Keine Ahnung, wo das herkommt, was ich da gebaut hab, Alter.
Keine Ahnung, wo das herkommt, was ich da gebaut hab, Alter.
Das muss ein Bug sein, kann nicht an mir liegen.
Was halt sehr merkwürdig ist,
dass der das kurz auf die 2...
Wo kommt denn die 2 her?
Wo kommt denn die 2 her?
Es ist gar nicht so einfach, das ordentlich
in der IDE zu debuggen.
Weil das ein Plugin für ein extern ausgeführtes Programm ist.
Ich kann das nicht laufen lassen.
Einfach so.
Ich kann doch nicht mal einen Print machen, gescheit.
Mach mal zu
if not delta...
Das ist so...
Nee, das hab ich auch gewundert.
Nee, also irgendwo...
Du könntest Notify als Print verwenden.
High IQ Shit.
Das machen wir jetzt.
Das ist eine super Idee.
Was anderes fällt mir jetzt nicht ein.
Okay, also...
Pause macht er auf jeden Fall.
Oder Logger.
Nee, wir loggen so. Sehr gut.
Also Pause macht er. Okay.
Jetzt ist halt die große Frage,
was macht er dann?
Geht er dann direkt da rein?
Ja?
Oder macht er noch was?
Der ist ja... Achso.
Geht er direkt da rein?
Pause?
Ja?
Der geht nirgendwo anders hin.
So.
Ähm...
Wartet mal.
Wir gucken mal, ob er den Kram noch mal ausführt.
Das ist ja einfach festzustellen.
Ja? Zwei?
Zwei? Pause?
Aha! Seht ihr's?
Der...
führt das aus. Pause.
Und der führt das noch mal...
Aber...
Hatte das grad nicht funktioniert?
Nee, hat's nicht...
Okay, der ist aus irgendwelchen Gründen...
Nee, das hat nicht funktioniert.
Oder doch?
Aber wenn doch, dann verstehe ich
den Zusammenhang ja noch weniger.
Ach, macht man das nicht so?
Ja, Moment! Doch! Dann...
Ja, dann ergibt das sogar Sinn,
wenn das nicht funktioniert.
Siehste?
Ein weiterer Punkt, warum Overloading
uns den Arsch gesaved hätte, anstatt
so einen komischen Crap mit Default-Parametern
zu machen. Dann wäre das nämlich schlicht und ergreifend
nicht möglich gewesen. Ja, dann ergibt
das Sinn. Dann ergibt das Sinn.
Wenn er das hier noch mal ausführt,
dann... dann ohne...
Ohne Parameter...
Ja, Timelapse
führt das ja mit Duration aus. Ohne
Parameter... Genau.
Dann ist... dann ist hier irgendwie noch Timelapse
und... Ja, okay, das ergibt
jetzt wenigstens halbwegs Sinn.
Also, das heißt, None ist
nicht False, oder wie?
Also, das da...
geht nicht. Also,
okay, die wollen mir jetzt ernsthaft erzählen,
dass ein leerer String False
ist, aber None ist nicht False,
oder wie? Meinetwegen, das ist ja...
Das hat ja fast schon JavaScript-Aus...
Ausmaße.
Wie sollte None False sein? Wie sollte
ein leerer String False sein?
Wieso... Warum ist ein leeres Array
False? Okay, aber
das ist... Dann... dann liegt's da dran.
Okay, Chat. Excellent. Five-Hat-Time.
Dann liegt's daran. Easy. Ja, jetzt
funktioniert alles. Gut. Wunderbar.
Self-Notify.
Gut, das ist... das ist richtig so.
Alles klar. Passt. Kann man wieder rausschmeißen.
Dann hat ja eigentlich alles funktioniert, was wir
gemacht haben. Nur, dass ich nicht wusste, dass
None nicht False ist.
Funktioniert alles. Zack.
Easy. Fertig.
Oder? Eigentlich. Mehr oder
weniger. Weil, was soll man noch großartig
machen? Funktioniert ja alles.
Es scheint jetzt alles zu funktionieren.
Es zählt runter. Ein cooles
Alarm-Icon. Du meinst
dass da nicht Pause angezeigt werden soll,
sondern ein
Alarm-Icon?
Müsste der nicht rot werden, wenn
er von 1... Der springt nicht auf 0.
Der springt auf 0,5
und dann erst auf 0.
Guck. Das sieht man. Das sieht man auch.
Hier, guck mal. Der gilt 5,
4, 3, 2,
1, 0,5, 0.
So nach dem Motto.
Weil,
der ist nicht exakt auf 0.
Der ist nicht exakt auf 0.
Erst wenn er exakt auf 0 ist,
zeigt er das an. Deswegen zeigt
er das erst beim... Also, es sind... Vorher sind
es noch irgendwie 500 Millisekunden left.
Und dann zeigt er aber schon 0 an und
beim nächsten Tick erst.
Was aber auch okay ist, weil es ist ja noch
nicht wirklich abgelaufen. Es fehlen ja noch
300 Millisekunden oder so.
Guck, jetzt zack. Um.
Jetzt ist er halt erst abgelaufen danach.
Ich mein, man könnte das wahrscheinlich...
Man könnte wahrscheinlich hier time left...
Könnte man wahrscheinlich
sagen, ähm...
Wenn es größer...
Wenn es hier unterhalb von 1 ist, so.
Ja, guck. Jetzt wird es funktionieren.
Also, wenn es klein...
Also, nur wenn es größer
als 1 ist.
Sobald es kleiner
als 1 ist... Ja, so ist...
Vielleicht nicht so besser. Wahrscheinlich
nicht so die bessere Variante. Ihr habt recht.
Lass uns das so machen.
Wir können da keine GIFs anzeigen.
Funktioniert nicht.
Keine Chance. Jeder oben nicht.
Ja, brauchen wir ein extra
Alarm-Icon?
Das wäre tatsächlich relativ einfach.
Ne, wäre
nicht einfach machbar.
Alarm-Icon wäre nicht einfach machbar,
weil
das Icon... weil
Alarm kein extra Timer
State ist. Musst du quasi
checken...
Ne, das geht nicht. Man müsste quasi
checken, ob...
Man müsste checken, ob 0
draufsteht und wenn 0...
Also, wenn es pausiert ist, 0
draufsteht, dann müsste es...
Ne, ja, gut. Man könnte...
Man könnte sagen...
Nur mal so testweise... Nur mal so testweise...
If...
Time... self...
If not time left...
Oh...
Könnte man jetzt irgendwie...
Es wird jetzt erstmal nicht funktionieren.
Achso, mind return.
Ja, und jetzt... Das würde so schon funktionieren.
Aber das ist...
Das ist, glaube ich, ein bisschen doof.
Haben wir hier irgendwas mit Alarm?
Alarm... Alarm...
Sowas hier.
Es gibt doch bestimmt einen extra Timer.
Sowas.
Also, das würde funktionieren.
Ist kein Alarm.
Ist da vielleicht irgendeine Anzeige,
die so ein bisschen so aussieht wie...
Ja, sowas da vielleicht.
Ich glaube,
das braucht man nicht.
Oh, jetzt läuft es ab. Bäm.
Ich fand das so mit
diesem Alarm-Ding hier eigentlich
gar nicht so blöd.
Achtung. Alarm.
Alarm.
Vielleicht gar nicht so schlecht, die Idee, Leute.
Das müsste...
Da müsste man halt eine Option jetzt für machen.
Aber an sich...
An sich nicht verkehrt.
Eine Sache, wo ich mir noch kurz Gedanken drüber machen will...
Oh, ich bin ja noch vier Stunden
am Start, Mann. Das reicht mir jetzt
eigentlich auch. Wir könnten noch wirklich...
Also, wir könnten noch einbauen, dass es
blinkt. Wir könnten noch einbauen, dass es blinkt.
Also, das dürfte, glaube ich, relativ einfach sein.
Ich mach mal hier To-Dos noch.
Blink.
Und, ähm...
Type-Hints.
Ja, an einer Stelle.
Und ich hab schon festgestellt,
die Syntax gefällt mir überhaupt nicht.
So, blink und repeat.
Ähm, notify.
Also, das mit dem Blinken...
Das mit dem Blinken kann man, glaube ich,
relativ, relativ einfach machen.
Ja, state.
Es ist...
Guck mal, also...
Es wird... Der Hintergrund wird rot, wenn der Timer
auf null ist. Also, sprich, es wird
critical, wenn no time left
ist. Ansonsten nix.
Ich mein, wir können jetzt quasi
die aktuelle Uhrzeit
checken. Und wenn die aktuelle
Uhrzeit durch zwei teilbar ist,
dann... die aktuellen Sekunden
durch zwei teilbar sind, dann ist
der Hintergrund so normal
oder... oder nicht normal.
Generic Type Definitions.
Wie sieht denn das aus?
Type hints, oder?
Keine Ahnung, was ich suchen muss.
Ne, also, ich fand die normale... Das hat mich...
Also, die normale Syntax hat mich ein bisschen
erinnert an so eine Mischung
aus... Wo hab ich's denn überhaupt?
Optional.
Ja.
Hat mich erinnert an so eine Mischung aus
Rust, C++ und, und
Python, ja. Sieht sehr
merkwürdig aus.
Das probieren wir mal kurz aus.
Wir können gucken,
wenn die aktuelle... Da müssen wir
das aber ein bisschen umschreiben.
Muss man... Sonst
blickt da wirklich keiner mehr durch.
Return critical
else here.
So.
So. Und da können wir jetzt noch...
Können wir jetzt drinnen abfangen.
If not...
And now
seconds, oder so was.
Modulu 2
gleich, gleich...
Ich hoffe, man schreibt das so. Ich hoffe, man schreibt
das so. So, und jetzt sollte es blinken.
Guck mal, es blinkt, Leute.
Massive.
Massive blinking.
Also, TypeScript hab ich gar keine
Ahnung, wie man TypeHints gescheit macht.
Ich mein, was heißt TypeHints? Es sind ja...
TypeScript dürfte es ja elementarer
Bestandteil sein. Wobei es am Ende
kompiliert wird zu JavaScript und da gibt's
wieder keine Typen. Keine Ahnung. Hab ich
lange, lange nichts mehr mit TypeScript
gemacht. Also, wenn man's mal mit
einer ordentlichen Programmiersprache, so was,
nehmen wir mal irgendwas ordentlich Typisiertes,
nehmen wir mal C-Sharp oder so was, vergleicht,
da hast du die Probleme halt nicht, weil
du keine TypeHints machen musst, sondern
einfach den Typ hinschreibst.
Geht halt nicht ohne.
Dafür kannst du
manche Sauereien nicht machen.
Was du in C-Sharp beispielsweise nicht machen kannst,
was nicht funktioniert,
so was hier zum Beispiel,
dass ich sagen kann, ein Typ,
das Delta
hier ist vom Typ
DateTime und vom
Typ, also er ist vom
Typ, ist vom Typ TimeDelta
und ist und gleichzeitig
oder oder, muss man sagen, vom Typ
TimeDelta oder vom Typ DateTime.
Das funktioniert in C-Sharp
nicht. Ist nicht supported.
Es gibt jetzt ein paar
Überlegungen, also so UnionTypes
gibt's in C-Sharp nicht. Es gibt ein paar
Ansätze, das, wie man das doch machen
kann, beziehungsweise auch ein paar Ansätze, das zu
verbessern. Du kannst in C-Sharp
beispielsweise sagen, dass
das ein Interface ist.
Und dann müsstest du gucken, dass deine Klassen
alle dieses Interface haben, dann wird das funktionieren.
Wobei es halt Default-Typen
gibt, die, also wenn ich jetzt in C-Sharp
beispielsweise was haben will, was
ein String und ein
Int akzeptiert,
dann funktioniert das so nicht.
Ich kann ein Object akzeptieren und das
dann da drinnen typechecken.
Ach, Typing ist
auch 3.10. Okay, da kann ich halt
gleich wieder rausschmeißen.
Das kann ich machen. Es gibt
so ein paar Ansätze, sowas mit I-Number
und sowas, so zu
inter... noch
quasi allgemeinere
Interfaces
in .NET seit
der letzten zwei Versionen.
Aber wie gesagt, ist einfach nicht
supported. Du kannst
nicht sagen, das
ist der Typ oder der Typ.
Meistens brauchst du es auch nicht.
Es gibt sicherlich Fälle, wo du es brauchst. Meistens
brauchst du es nicht, weil du einfach die...
... das hier überleiten
laden kannst. Ja, du könntest... In C-Sharp
würdest du das hier zweimal definieren.
Einmal mit einem Int-Widget
und einmal mit einem String-Widget
oder sowas. Dann würde das aufgerufen, wenn
du ein String übergibst und das aufgerufen, wenn du ein Int übergibst.
Aber
unterschiedliche Sprachen, unterschiedliche Ansätze.
Leute, das mit dem Blinken finde ich cool.
Das war eine gute Idee.
Alarm...
Ne, mit Sealed oder Unsealed
hat er gar nichts zu tun. Also in
C-Sharp ist Sealed
eigentlich nur, dass du
es nicht vererben kannst weiter.
Typen, der Alarm schreit, kannst du machen.
Ist überhaupt kein Problem.
Du kannst als Parameter
hier übergeben ein Kommando...
Shell... Shell-Kommando.
Das heißt, wenn du irgendwie
einen Musik-Player installiert
hast und eine MP3-Datei, wo einer Alarm
schreit, kannst du das abspielen lassen.
Dann würdest du dann sowas sagen wie
play Alarm.wav
oder so. Kannst du sagen und dann würde das
ausführen. Wollen wir aber nicht.
So, wenn ich jetzt rechts
drauf drücke, dann
resetet er sich. Sehr schön. Das
gefällt mir. Das hat was. Das ist ein...
Das ist wirklich praktisch.
Das ist wirklich praktisch.
Guck mal. Ich glaube, damit
bin ich jetzt eigentlich schon mehr oder weniger zufrieden.
Ach so, Notify-Repeat muss man auch machen.
Also ich kann jetzt einstellen,
wie viele Minuten ich haben will
und wie viele
Sekunden ich haben will. Ich kann es starten.
Ich kann es einfach starten und dann klappt das und schickt mir ein Notifier.
Also ich würde sagen,
das reicht mir. Vielmehr übertreiben
müssen wir es jetzt nicht.
Wann Support für YouTube-Links?
Du meinst den Notify?
Ich glaube, das geht nicht. Ich glaube,
ich glaube, mein Notify-Anzeigeding
kann keine...
Ups. Wo war ich denn hier?
...
kann, glaube ich, keine Links
anzeigen. Ich glaube, das
geht nicht. Aber ich probiere das jetzt
mal aus. Ich bin halt schon cringed, oder?
Dass ich keine Links anzeigen kann.
Und? Gucken wir mal.
Nee.
Ich kann keine Links. Alles klar.
...
...
...
Ich gehe jetzt gleich was futtern, Leute.
Also, passt doch soweit.
Blink haben wir gemacht.
Vielleicht, vielleicht
noch einbauen, dass man
die Notification
mehrfach versenden kann.
Ich glaube, das ist gar nicht so doof.
Wenn man, wenn man noch irgendwie...
Ich weiß noch nicht, wie man das genau
macht, dass man die Notification mehrfach
verschicken kann.
Das müssen wir dann quasi hier oben drinnen checken.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
Du hast nicht eine Vorschleife.
Ja, gut, aber...
Doch, habe ich.
Die siehst du bloß nicht.
Das hier ist in der Schleife.
Guck mal.
Das Update ist...
Hallo?
Das Ding funktioniert, ja?
Das Update wird in der Schleife aufgerufen.
Aber halt nicht von mir, sondern von diesem Tool.
Ich brauche ja auch keine Schleife.
Ich wüsste nicht, wofür ich eine Schleife brauchen sollte.
Wozu brauche ich eine Schleife?
Ja.
Guck, plus geil, es funktioniert.
Ja.
Drei, zwei...
Bam!
Und es blinkt.
Es blinkt sogar.
Wenn es auf Null ist.
Oh, Girls.
Was zum Teufel?
Oh, nee, oder?
Werden wir jetzt bekehrt?
Das hat mir heute noch gefehlt.
Dass mich irgendeiner bekehren will.
Egal, ich wollte eh...
...aufgehen.
Motion-Dev, moin.
Du kommst genau rechtzeitig.
Der Schrieb ist nämlich fertig.
Du musst bis jetzt arbeiten.
Tja, du hast...
Du hast wahrscheinlich nicht so viel verpasst.
Ich hab's auf die Reihe...
Ich zeig dir...
Ich zeig dir, dass wir es geschafft haben.
Ich hab's auf die Reihe gekriegt.
Mein Timer.
Du machst es auf der Arbeit nur...
Okay.
Du hättest tatsächlich wahrscheinlich zu ein paar Sachen...
...auch was sagen können.
Aber ich hab's auf die Reihe gekriegt.
Also mein...
Mein Notification-Timer funktioniert jetzt.
Guck, der tickt jetzt.
Runter.
Drei, zwei, eins, null.
Blinkt und schickt eine Notification.
In meiner Stadionleiste.
Ich kann ihn resetten.
Ich kann Minuten hochdrehen.
Ich kann ihn sogar...
Ich kann ihn sogar pausieren.
Und dann weitermachen.
Funktioniert.
Hab ich was gelernt heute.
Ja, funktioniert.
Ich würde jetzt auch sagen, kann man so sein lassen.
Kann man so lassen.
Perfekt.
Ja.
Also es ist natürlich...
Es ist natürlich ganz praktisch, wenn man mit so einfachen Dingen mal ein bisschen übt.
Man muss ja nicht gleich super komplexen Kram machen.
Da ist er wieder.
Man muss ja nicht gleich super komplexen Kram machen.
Ich würde sogar davon abraten, wenn man irgendwas lernt, mehrere Sachen zeitgleich zu lernen.
Also sprich, neues Framework, neue Sprache und noch ein komplexes Projekt.
Wie soll man das alles ordentlich lernen und checken?
Also ich find's viel sinnvoller, wenn man sich was Einfaches überlegt.
Zum Beispiel...
Weil seriously, so ein Timer ist jetzt nicht die hohe Kunst, ja?
Wenn man sich einen Timer bastelt, allerdings, dann kann man sich drauf lernen, so ein paar Feinheiten von der Sprache zu lernen.
Und muss nicht gleich noch irgendwie in ein Framework dabei lernen, in eine UI-Library dabei lernen und zig komplizierte Sachen überlegen.
Du lernst gerade Blender.
Jo.
Wenn man auf 3D...
Weil Blender kann ja mittlerweile alles.
Blender hat ja sogar eine eigene Game Engine integriert.
Wo man irgendwelche Mini-Spiele drin machen kann.
Also irgendwelche Kleinigkeiten und so.
Das Tool-Bar-Ding...
Was?
Jetzt blick ich nicht mehr durch.
Ist Bar-Ding nicht Rüstung für Pferde?
Gibt's in Spielen öfters.
So Bar-Ding gibt's halt für Pferde.
Ach, das Tool-Bar-Ding.
Ach so.
Ähm, nee, das gibt's nur für Linux.
Das nennt sich Bumblebee-Status und ist auch nur für i3.
Linux und i3.
2D-Pläne mit Blender.
Warum nicht?
Willst du, willst du dann, willst du dann irgendwie da draus so Architekten-mäßig...
Ich render...
So könnte dein Zimmer in Zukunft aussehen oder so, wenn es...
Ey, wir sind schon...
Wir sind fertig heute.
Hat sich erledigt.
Ich hab mich eigentlich schon verabschiedet von einer Viertelstunde.
Aber bin irgendwie immer noch da.
Ja, Leute.
Wir sehen uns.
Ich geh jetzt gleich was futtern.
Bis zum nächsten Stream.
Macht's gut.
See you.
Oh, Moment.
Jetzt kam noch eine große Frage.
Was?
Wie ist das in Vmware gelöst, den Desktop zu wechseln?
In Virtualbox muss ich, wenn ich von der Linux-Vmware auf den Windows-Desktop wechseln will,
immer erst einmal Control bestätigen, um aus der Vm zu kommen.
Und dann nochmal Control...
Das ist bei Vmware-Workstation genauso.
Ähm, ich muss, wenn ich hier drinnen bin...
So, wenn ich hier drinnen bin, dann frisst das ja quasi die Maus und den Fokus und alles.
Ich muss drücken.
Control-Alt.
Du guck dir...
Guck mal auf den Mauszeiger.
Du wirst gleich sehen.
Control-Alt.
Dann jumpt er aus der Vm raus.
Und dann muss ich Control-Windows-Taste und Pfeiltaste drücken.
Der Vorteil ist, dass Control-Alt und Control-Windows-Taste direkt nebeneinander liegt.
Deswegen mach ich einfach zack, zack, zack, zack.
Das ist quasi zwei Tasten nacheinander.
Ähm, was ich eine Weile hatte, was du machen kannst, was eigentlich gar keine so schlechte Idee ist.
Aber ich hab da meine Maus anders belegt.
Ich hatte in diesem Logitech-Maustreiber, hab ich ein Skript hinterlegt, was für mich immer die Tasten gedrückt hat in der richtigen Reihenfolge.
Also ich hab auf meine Maustasten gemappt, Desktop switchen und das hab ich so eingestellt, dass der Logitech-Maustreiber für mich erst Control-Alt drückt und dann Windows-Taste Pfeil links und so.
Das kannst du auch machen.
Du kannst es auch auf die Maus mappen.
Dass du die...
Und du kannst auch ein Makro auf die Tastatur, auf die Tastatur legen.
Wenn es dann...
Deinen Tastatur-Treiber unterstützt.
Kannst du auch machen.
Ich persönlich bin jetzt weg von, weil ich finde, dass Control-Alt, Control-Windows quasi fast in einer Bewegung möglich ist.
Und deswegen drück ich das immer.
Aber du hast recht, das ist bei mir auch so.
Ich muss als erstes raus aus der VM und Desktop switchen.
Wichtig ist aber übrigens, dass du das über deinen Tastatur-Treiber bzw. Maustreiber machst.
Du kannst es nicht mit Auto-Hotkey machen.
Weil Auto-Hotkey kommt ja nicht von der Tastatur.
Und wenn du in VMware drin bist, dann ist es egal, was dein Auto-Hotkey in Windows macht.
Das funktioniert nicht.
Das muss quasi von der Tastatur, so aussieht es aus, als kommt es von der Tastatur.
Mit dem Logitech-Treiber ist kein Ding.
Da kannst du einfach Skripts hinterlegen.
Ja.
Hast du auch eine MX Master?
Nee.
Ich habe irgendwie eine G512 oder sowas.
Und ein Pro Wireless Maus.
Mit so einem Maus-Pad, was meine Maus auflädt.
Das war übrigens eine super Investition damals.
Ich war ja erst skeptisch, was Wireless Maus angeht.
Aber die Kombination Wireless Maus, also die hier.
Da gibt es mittlerweile bestimmt schon was Neues.
Die kabellose Maus plus das Maus-Pad, was die Maus auflädt.
Ist richtig gut.
Wie gesagt, ich war am Anfang ein bisschen skeptisch, ob Wireless Maus, ob das was taugt.
Ist super Geschichte.
Ohne große Verständnis.
Keine Zögerung, kein Ding.
Nein.
Seriously.
Die Abstände von der Maus zum Empfänger, das sind 10 Sekunden, das sind 10, 12 Zentimeter.
Was soll da ein großes Delay herkommen?
Und dadurch, dass die Maus nie aufgeladen werden muss, ist es nochmal doppelt.
Doppelt plus gut, ja.
Das Maus-Pad nicht so toll wie die Maus selbst.
Ich weiß gar nicht, wie dieses Aufladen...
Das stimmt.
Das kommt von der Verarbeitung.
Ob das jetzt 10 Zentimeter oder 20, 30 Zentimeter ist, bei der Geschwindigkeit unerheblich.
Also elektromagnetische Wellen und so, das ist schon alles relativ schnell.
Ja, Logitech.
Maus-Pad aufladen.
Ja, G-Play Power.
Ne, G...
Wie heißt der Krempel?
Power Play Wireless Charging.
Ja, genau.
Preisgekröntes Produkt.
Ja, das ist immer geil.
Wenn sich Logitech selbst irgendwelche Dinger verleiht, ne.
Wusstet ihr eigentlich, dass ihr hier in einem Preisgekrönten...
Preisgekrönten Stream seid?
Wer das sagt, ich sag das.
Ich hab mir das jetzt einfach schnell selbst verliehen, Leute.
Poggers, preisgekröntes Stream.
Ja, schneller geht's nicht.
Also das ist wirklich eine gute Kombi.
Ja, woll ich.
Also, Leute, ich geh jetzt ins...
Äh, nicht...
Warte, ich geh jetzt ins Bett.
Lull.
Ich geh nicht ins Bett.
Ich geh jetzt was essen, Leute.
Wir sehen uns.
Bis denn.
See you.
