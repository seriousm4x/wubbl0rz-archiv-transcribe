ich muss gerade noch mal zwei plätzchen futtern oder plätzchen sind vielleicht
jetzt das falsche wort um die jahreszeit kekse
das war ein bisschen was zackigeres anmachen bis die kekse gefördert habe
dann gibt es was entspannendes wie viele tabs das ist noch nicht mal alles wenn
ich meine linux-kiste anmache wirst du gleich noch mehr tabs sehen
wir programmieren heute einen beziehungsweise wir benutzen den buildin
webserver von meinem neuen esp32s3 gucken wir uns mal wie das funktioniert
das war dort eine webseite web app über https ausgeliefert kriegen und
und
die webseite irgendwie embedden können mal gucken hab das schon gemacht so ist
das nicht aber nicht mit der kiste und auch nicht mit der neuesten framework
version ja habe ich mitgekriegt die können mich mal gut ich habe youtube
premium aber mich nervt trotzdem ich muss wenn die in stream sind dann kann
er nichts
dagegen machen kann das heute ja schon so gut wie nicht aber bei the way seit
heute scheint new blog origin wieder zu funktionieren
wo seit heute funktioniert blog origin wieder halbwegs gescheit das war die
ganze zeit kaputt die letzten zwei drei wochen auf youtube aber heute von zu
wieder ich habe mir neuen esp32s3 gekauft und poplar wird geupdatet nice
ich habe mir neuen esp32s3 gekauft und poplar wird geupdatet nice
da gucken wir dass wir einen https web server drauf klatschen also was das tvs
kann und darüber versuchen eine web app eines welt web app zu embedden klingt
einfach ist wahrscheinlich wieder im detail komplizierter als gedacht ich hab
das schon gemacht so ist es nicht wie gesagt nicht mit der neuesten esp die app
version und ist auch schon eine weile her und so in dem umfang noch nicht aber ich
hab schon ein bisschen ist es schon eine weile und bin jetzt den letzten tag hierhin durchgegangen, bis beim abend. tschüss, bis bald.
bastelt auch die letzten tage aber noch nicht mit der neuen kiste aber erst
nochmal package updates machen also ich es gibt ein dankeschön
es gibt ein problem bei youtube youtube premium also neben dem dass es ganz
schön teuer ist wenn man sich das hier zu lade kauft ein viel zu teuer
überlegt ob 16 99 kostet das ist ultra viel kohle aber glücklicherweise kann
man das auch in indien kaufen oder in der türkei oder sonst wo wo es ein
bisschen billiger ist bisschen ist cool vielfach billiger ist das problem ich
habe mit youtube premium ist dass du nicht unterschiedliche watch histories
haben kannst den unterschiedlichen browser als alles mit dem gleichen
account verknüpft ist ich habe das ganz gerne ich habe gerne andere empfehlung
wenn ich auf dem handy abends im bett liege und gucke
nein nicht nicht was ihr denkt jetzt vielleicht aber denkt was ihr wollt
dann gucke ich mir gerne andere sachen an als tagsüber auf youtube und die
empfehlung wenn halt komplett verwässert so warum atom einst läuft noch über
indien wird es nicht mehr gucken ob ich das verlängern kann wenn es ausläuft
warum was ist das problem jetzt also das letzte mal verlängern war wieder
easy ist aber auch schon ein bisschen her ich mache mir eine vm in indien
ich mache mir eine vm in indien
in bengalore bei digital ocean und dann mache ich ssh proxy ssh sox proxy auf
die vm und stelle lokal mein browser drauf um und dann komme ich mit einer
ip in indien raus logge ich mich ein nehme das andere payment profil auf
meinem android wenn ich android auf meinem google account und dann geht
also bisher ging das immer
warum geht das jetzt nicht mehr was haben sie gemacht
das wäre ziemlich kacke wenn das nicht geht geht es um youtube premium warum
geht das jetzt nicht mehr es wäre echt kacke du scheinst aber vorher
mal gemacht zu haben also aus deutschland raus ging das noch nie aus
deutschland raus konnte man das noch nie machen
so ich war eine kieckse wie hat der kumpel von friseure und mehr aus dresden
früher einmal gesagt da hat nicht gesagt gesagt es geht auch nicht mehr hier�
gesagt gefuttert der hat immer gesagt geschnabbert ich habe jetzt meine kekse
geschnabbert mietest du dir eine vm direkt aus indien ja hier bei digital
ocean bangalore das ist in indien ich weiß nicht wo weiß nicht wo aber so
sieht es anscheinend aus ja der maps button ist ja weg weil google komisches
zeug und so ja das ist in indien hast du eine indische ip und alles ist gut
das weiß ich nicht das habe ich nicht ausprobiert ich probiere das immer ich
mache das immer in indien ok also ich bezahle ich mit kreditkarte
wobei ich bin ehrlich gesagt gar nicht mehr sich doch doch ich glaube ich
bezahle mit kreditkarte ich weiß gar nicht mehr was ich auf dem auf dem auf
dem payment man braucht ein neues payment profil auf jeden fall du kannst
es nicht mit dem gleichen payment profil machen wie das auch in deutschland
bezahlt aus der neues der einzige nachteil davon
ist dass ich bei youtube music jetzt irgendwelche bollywood top top hits sehe
über die uk ja gut kann man auch machen wer hat so schönes vpn was in der ukraine
rauskommt rechenzentrums vm anbieter fallen jetzt keine ein also was viele
anbieter nicht mehr akzeptieren mittlerweile sind prepaid kreditkarten
was habe ich schon gemerkt dass ich immer ganz gerne benutzt gerade für
sachen wo ich wusste es ob du da jemals wieder was mitmachen willst und nicht
limits setzen konnte sonst was
prepaid kreditkarten waren also so zum generieren gibt es ja apps für die
generieren eine mastercard die musste einmal aufladen und dann ist gut so so
one time use prepaid kreditkarten aber das akzeptieren viele anbieter nicht
mehr ja ganz ehrlich server side ads wird
ist nichts nicht blockbar das ist halt das problem je nachdem wie die dinger
gemacht sind was ich unter server side ads verstehe ist in den
wie die dinge gemacht sind was ich unter server side ads verstehe ist in den
video stream ein encodete werbung das heißt dann hast du wirklich komplett
gelitten und skill killer lange für den sap 22
massive monate da hast du halt dann hast halt gelitten wenn in den normalen video
content stream die werbung ein encoded ist gibt es nichts was du machen kannst
du kannst nichts blocken das einzige was du machen kannst ist
muten 30 sekunden was anderes gucken und dann wieder zurück auf das video
dann dann encoded twitch das ganze aber nicht in den stream rein oder es gibt
vielleicht noch keine ahnung den namen habe ich seit zehn jahren nicht mehr
gehört vielleicht gibt es auch einen trick dass man einfach sein gerät faken
muss also dass man nicht sagt man ist desktop sondern man sagt smart tv oder
so geht das vielleicht ganz ehrlich ich habe gar kein problem damit youtube
premium zu kaufen
wenn ich jetzt nicht für mehrere accounts kaufen müsste und es ist
zwei tage cilantro weil ja wenn man das ordentlich mit einem account machen
könnte würde ich mir vielleicht sogar den normalen account hier können was wir
machen programmieren heute einen neuen pc 32 es drei
dieses teil habe ich mir gekauft wir werden und nicht das display benutzen
deswegen heute auch keine kamera und sowas am start wir probieren in web fork
laufen
zu lassen der per tls funktioniert jetzt kommt natürlich wieder am anfang die übliche problematik
wie kriege ich mein wlan passwort für euch versteckt aber gut das kriege ich schon irgendwie
nicht plattform da bin ich weg mittlerweile von ich mache spdf direkt und arduino als zusätzliche
sp komponente dabei müssen wir machen weil das setup machen wir gleich finde ich viel angenehmer
als platformer mittlerweile das war mal auch hängt immer so hinten dran mit den ganzen package
version und allem ein brand konto erstellen das ist eine gute idee das ist eine echt gute idee
ich habe ja einen zweiten youtube account nur für youtube premium und wenn man dort einen zweiten
brand konto erstellen
öffnen kann mit eigener watch history und die quasi premium erben das wäre natürlich extrem
nice ja ich weiß schon wie ich das wlan passwort für euch verstecke easy kein problem muss ich bin
aber hier im zweiten screen auf einem access point eingeloggt muss gleich noch mal ändern
ich installiere gerade mal das neueste spdf wir müssen uns jetzt erstmal ordentlich ordentlich
setup ein getting started die hat noch so eine komische getting started anleitung ich habe ich
habe hier schon installiert aber noch nicht das aller aktuellste
das ist easy also wenn man sp 32 programmieren will also ich habe wie gesagt dieses ding die
einfachste variante ist platform das ist wirklich die einfachste das ist ein wish to studio plugin
was fast alles für dich macht ich benutze es aber nicht mehr ich bin mittlerweile beim development
kit quasi vom hersteller hängen geblieben einfach weil die deutlich neuer sind was was pakete angeht
darf man die links schicken solange es keine unanständlichen links sind oder
scams links oder sonstwas darfst du ja ja stm 32 das ist eher für die sachen wo man kein wifi
braucht installen das ist von 2012 2022 so voraussetzung habe schon installiert jawohl
das darf 521 können wir nicht installieren was ist denn die letzte arduino support der version
514 okay ja da machen wir das doch so da löschen wir den alten krempl ma esp weg jess ja
mkdr esp cd esp so das klonen machen wir jetzt nicht der form wie clown jetzt was 514 war es 514
ist. Geklont.
Was läuft da Musik?
Irgendeine olle
Chillstep-Collection.
Das ist überhaupt nicht mal angesagt.
Das war so zu Call of Duty
Quickscope-Montages
angesagt, so als auch die ganzen Dubstep
in ihre Videos gemacht haben.
Heute hören die Leute zur Entspannung eher
irgendwelche Lofi-Girl-Streams.
Ich wollte euch ja noch
was Lustiges vorlesen. Fällt mir gerade ein.
Ich habe vorhin meine
E-Mails nachgeguckt.
Du hörst zur Entspannung Tomb of Thieves, muss ich sagen.
Ich habe vorhin meine E-Mails nachgeguckt.
Da kommt ja nicht viel, außer
Raid Shadow Legends
Sponsoring, NordVPN Sponsoring
und dieser Schrott.
Aber ich hatte eine E-Mail drin und die war so
cringe. Die muss ich euch... Was heißt die war cringe?
Die ist 100% mit
Chat-GPT generiert. Ich wette
mit euch, dass die Chat-GPT generiert ist.
Ich muss mal kurz...
Ich muss mal gerade mein Thunderbird aufmachen.
Thunderbird.
Während das hier gerade cloned ist, okay.
So.
Passt mal auf.
Oh man.
Install
Setup Tools
ESP32
Ne, wir wollen alles installieren.
Das kann ich starten, weil das dauert ein bisschen.
ESP32S3
wollen wir installieren.
Das reicht.
Das ist 100% Chat-GPT generiert.
Aber allein schon auf die Idee zu kommen, ja.
Was passt mir auf?
Oh mein Gott.
Ich kann es kaum in Worte fassen.
Wie unglaublich
aufgeregt ich bin.
Party-Emoji. Die Vorfreude
kocht über. Meine Hände zittern
vor Aufregung und
mein Herz schlägt schneller als je zuvor.
Endlich, endlich
wieder... Endlich, endlich
wird Wubblos wieder auf Twitch
live gehen. Ich kann es kaum erwarten
dabei zu sein.
Es wird der absolut
ultimative Höhepunkt meines Tages.
Nein,
meiner ganzen Woche. Ich bin
elektrisiert und euphorisch.
Also Chat, das ist so
100%ig Chat-GPT,
dass ich
förmlich vor Freude in Luft springen könnte.
Also schnallt euch an.
Bereitet euch auf eine
absolute Explosion.
Der Begeisterung vor.
Denn dieser Stream wird alles in den Schatten stellen.
Lasst uns zusammen jubeln, lachen
und diese epische Rückkehr feiern.
Let's go, Party-Emoji.
Whatever.
Wenigstens mal
eine Mail, wo es sich lohnt, reinzugucken.
Auch wenn es in drei Sekunden
oder was gibt es denn über Chat-GPT
noch, wo man sowas generieren kann? Keine Ahnung.
Wenn das in drei Sekunden
Chat-GPT rausgeschissen ist. Immerhin hat
sich einer die Mühe gemacht, meine Business-E-Mail
zu suchen und das Ding zu schicken.
Das elektrisieren wird das, Leute.
So.
Also, wir haben das Ganze installiert.
Dann gehen wir mal nach Repos.
Jetzt müssen wir uns mal ein neues Projekt ausdenken.
Das ist der Display-Champ. Gibt es den schon?
Gibt es den Display-Champ schon?
Den Display-Champ gibt es noch nicht. Okay.
M-Card hier. Display-Champ.
So.
ESP.
ESP.
Wo war das jetzt?
Das ist doch...
Das ist doch hier Export, oder?
Da muss ich hin.
Ja, wenn ich jetzt noch richtig tippen könnte.
Export.
Hä? Bin ich jetzt total
hängen geblieben?
Da ist es doch.
Okay.
Nice. Können wir loslegen.
Neueste
ESP-EDF-Version ist installiert.
Jetzt brauche ich noch das Demo-Projekt von
denen, weil es ja aus irgendwelchen Gründen
kein ESP-EDF-New-Project
gibt.
Was?
Also, ich glaube, man braucht das nicht, aber...
Da schon.
Das Setup ist immer ein bisschen Paints-Champ.
Ja, Getting...
Examples. Wobei, man kann das einfach rüberkopieren.
Das Getting-Started-Example.
ESP-EDF-Examples.
Getting-Started-Hello-Worlds.
Ja.
Naja.
Okay. Display-Champ.
Wenn man das jetzt auch richtig schreiben würde.
So.
Den ganzen Schrott hier braucht keiner, der da drin ist.
Können wir alles löschen.
Alles weg.
Brauchen wir nicht.
Brauchen wir nicht. Seamake-Dings brauchen wir.
Okay. Nice.
Dann öffnen wir das mal.
Und schauen, ob das Beispiel-Projekt
bildet.
Es ist sehr übersichtlich.
Ich habe mir einen ESP32-S3
gekauft. Und ich versuchte
heute mal einen Webserver mit TLS drauf zu lassen.
Und das Welt-Web-App zu bundeln.
Embedded.
Keine Ahnung, wie weit wir kommen.
Das nächste Mal probieren wir das Display aus.
Also erstmal gucken, dass das Standard-Projekt
bildet.
Da fehlen noch, glaube ich, ein paar Dateien.
Das ist ein bisschen wenig hier.
Achso.
Set-Target.
Muss ich, glaube ich, noch machen.
Set-Target.
Nicht C6, ein S3 habe ich.
Ja, geht schon gut los.
Geht schon gut los.
Funktioniert nicht. Nice.
Nice, du.
Warum nicht?
Warum geht das nicht?
Was hat der hier vor?
EDF-Target not set.
Default-Target ESP32.
Nein.
Ich habe noch explizit gesagt.
Set-Target ESP.
Muss man da vielleicht noch...
Das Setup ist immer abartig.
Das Projekt, das Beispiel-Projekt
von denen enthält auch viel mehr.
Viel zu wenig Dateien.
Da fehlt doch die Hälfte wieder.
Kaum genug Chat-GPT-Gespamme.
Da fehlt doch die Hälfte.
Da fehlt auch das Component-Verzeichnis
und alles.
Sehr merkwürdig.
Guck mal mal, was im Getting Started
was da drin steht.
Okay, da ist wirklich nur so wenig drin.
Können wir ein Menü-Config machen?
Using Default-Target ESP32.
Nein.
Mein Target ist der ESP32.
Und das ist auch erlaubt.
Funst ja.
Funst ja wieder erstklassig.
Okay, ich lösche das jetzt.
Das hier und jetzt setze ich nochmal das Target.
Warum geht das nicht?
Jetzt. Jetzt, Mager.
Jetzt, was auch immer das war.
So, kompiliert
das Beispiel-Projekt jetzt. Aha.
Okay, ich weiß nicht, was los ist.
Aber das war es wohl.
Nee, ich habe selbst so viele ESPs
hier rumliegen.
So, also, Hello World hat
compiled. Schon mal sehr nice zu sehen,
dass das funst. Damit kommen wir nicht weit,
aber immerhin. Und jetzt
ESP-EDF.
Moment, wo ist denn hier
der Auf? Ich stöpsel das Ding
jetzt mal an. Das Schöne ist,
der hat mittlerweile im Vergleich
zu den alten einen USB-C-Anschluss.
Das heißt, wir können jetzt
einfach ein ganz normales USB-C-Kabel nehmen.
Das Ding hier
ordentlich anstöpseln.
Achtung.
Okay, der hat
eine RGB-LED und der leuchtet
wie verrückt gerade schon
auf meinem Tisch. So, Stream.
Flash.
Und danach Monitor, okay.
Oh, das
flutscht aber USB.
Hello World, das war problemlos.
Das Projekt-Setup,
das habe ich schlimmer in Erinnerung.
Okay, nice.
Erste Firmware geflasht.
Sehr schön.
Excellent.
Wir müssen mal gucken, was die maximale
Flash-Geschwindigkeit von dem Ding ist.
Nee, ich mache keinen Rust-Rewrite.
Ich habe letztens auf dem normalen
ESP32 Rust ausprobiert.
Das war anstrengend.
Anstrengender
als C++
und das heißt schon was.
CPU-Frequenz
160. Das Ding sollte eigentlich 240
haben, aber was auch immer.
Dann stellen wir doch mal die CPU-Frequenz ein.
Äh, CPU?
Oder 160?
Ja.
Die Fall-CPU-Frequenz 240.
Okay, jetzt sollte
es ein bisschen schneller gehen.
Moment, warum?
Ah ja gut, nach Menü-Config musst du immer alles nochmal neu
kompilieren. Ansonsten, ansonsten
nicht. Okay.
Und jetzt läuft er mit
240 Megahertz. Das Ding ist
richtiges
Monster eigentlich, wenn man sich überlegt, dass du
auf so einem kleinen, billigen,
15-Euro-Ding, wie bei AliExpress, kostet
15, 15 Dollar,
ein Dual-Core-240-Megahertz-CPU
drauf hast.
So, dann
schmeißen wir das Ganze hier mal weg.
Und
ich gucke mir was ab
von dem, was ich
schon mal gebaut habe. Und zwar
weiß ich ja ungefähr, wie
das ausschauen muss.
Und zwar, wir brauchen jetzt erstmal
eine
Main-Function.
Die sich, die so
aussehen muss.
Hoffe ich mal, dass es beim S3 auch so ist.
Und dann benennen wir das
File um in
main.cpp
Dass das Ganze
auch mit C++ läuft.
Im Make-File
müssen wir das updaten
und hoffen, dass es jetzt noch funktioniert.
Unsafe.
Und nicht blazingly fast.
Was?
Cannot find
Source-File?
Wie jetzt?
Achso.
Man sollte es vielleicht auch richtig nennen.
Dann funktioniert es auch.
Easy.
Okay, gut.
Das funktioniert.
Jetzt müssen wir noch theoretisch die Flash-Size
setzen, eine Partition setzen. Aber, das kann man
alles dann machen.
Jetzt, wir lassen
das hier mal so standardmäßig. Scheint ja ganz
sinnig.
Also, wir müssen jetzt auch Arduino einbinden.
Das geht über die offizielle Component-Library von Espressif, also Espressif ist der Hersteller vom ESP32.
Mach lieber main.cc wie die coolen Kids. Was ist der Unterschied?
Okay, wenn die coolen Kids .cc machen, wie nennen die dann ihre Headers?
Ich hoffe nicht. Haha. Das wäre nämlich ein bisschen.
Schlecht, wenn man das auf Twitter posten möchte danach.
Schlecht, wenn man das auf Twitter posten möchte danach.
Dann interpretieren die Leute wieder Dinger rein.
Und dann sagst du, nein, das heißen doch nur meine
Header-Files.
Oder heißen die .h.
Einfach nur.
Ja, hpp. Aber warum nennen die
das nicht .c? Die müssen es ja auch
irgendwas nennen. Wenn die coolen Leute ihre C++-Files
.cc nennen, dann müssen sie ja
die Header nicht einfach nur
nicht hpp nennen. Das wäre ja auch bescheu, oder?
Okay, Arduino
ESP32.
301
Add Dependency. Gib ihm.
Excellent.
Excellent.
Pog.
Und jetzt müsste ich eigentlich ein
Bild machen, oder sollte Arduino installieren?
Nein.
Mein C++ ist irgendwie kaputt.
Guck mal, ich habe kein Auto complete.
Back wait.
Ähm.
Pull clean. Muss ich nochmal neu bilden, oder was?
Ach, Remove Managed
Components. Okay.
Jetzt. Okay, jetzt lädt er das
Ganze runter. Das sieht man auch im Hintergrund, wenn man
hier guckt. Guck, jetzt kompiliert
er auch die Arduino-Geschichte mit.
Ich finde,
das ist das beste Setup. Deswegen bin ich
auch weg von
Platform.io, weil Platform.io
hängt immer so hinten dran
mit den Packages. Und es ist
teilweise richtig verbuggt, wenn
du ein
ESP-EDF-Projekt machen möchtest.
Okay. Wenn du ein
ESP-EDF-Projekt machen möchtest
mit
Arduino dabei. Das ist viel besser, wenn
du es von Hand einfach setupst.
Config Free RTOS.
Okay, machen wir.
Oh, gibt es den Bug eigentlich noch?
Wartet mal, da gab es früher einen Bug.
Passt mal auf.
Ja, es gibt immer noch einen Bug.
Das ist geil.
Den gibt es immer noch. Also, passt mal auf.
Der Bug ist,
ich habe das
Arduino-Plugin installiert.
Oder die Arduino-Komponente.
Und die sagt,
dafür, dass die
Arduino-Komponente funktioniert,
musst du diese Config setzen.
Das Problem ist aber, ich kann
die Config nicht setzen,
weil ich Menü-Config nicht aufmachen kann,
solange
Arduino
nicht funktioniert. Daher habe ich so einen kleinen
Wie nennt man das?
Teufelskreis.
Aber wir können einfach eine
SDK
config.defaults
anlegen und ich hoffe, dann
funktioniert es damit. Und dann das da reinschreiben.
Und dann nochmal bilden
und hoffen, dass das geht. Wenn nicht, muss ich Arduino
nochmal uninstallen und dann
nochmal neu.
Nachdem ich das
gesetzt habe. Glücklicherweise
muss man dieses...
Ah, da geht man nicht auf und zack.
Ist ja schlimm.
Okay.
EDF...
Ich finde es witzig, dass es...
Ist das remove dependency?
Ey, sag bloß, das geht jetzt
auch nicht. Komplett deadlocked.
Ich musste
die Config setzen, aber
keine Chance, die Config zu setzen,
weil...
Den Bug gibt es immer noch. Das ist geil.
So, aber ich weiß, was wir machen können.
Wir sind ein...
Wir machen das einfach easy.
So. Wir löschen das.
Und wir löschen
aus den Components
das hier raus. So. Jetzt kann ich
es bilden. Dadurch, dass ich
in meinen Defaults stehen habe... Ups.
Dadurch, dass ich in meinen
Defaults... Das muss man aber auch nur einmal machen.
Dadurch, dass ich in meinen Defaults stehen habe...
Äh, was?
Ach so, jetzt muss ich erstmal wieder set target machen.
Ja. Ah, alter.
Das ist garantiert zu kompo...
Was ist denn jetzt schon wieder das Problem?
Meine Güte!
Natürlich habe ich... Warum will
der immer Default noch mal
in ESP32? Alter, ich dreh...
Kann man hier nicht auch ein Target irgendwie setzen?
Target Board? Das geht doch hier in den
Components auch irgendwie.
Ne, EDF Target kann man
setzen in den Defaults.
Das muss ich auch nochmal
setzen.
Immer ein bisschen Paints champion.
Ja. Licht ESP32,
ESP32, S.
Jetzt bildet er. Gut.
Wieso Programm...
Die Arduino Sprache
ist C++. Okay, mit ein bisschen
extra Kram, aber es ist C++.
Arduino
ist C++.
Schon immer gewesen.
Okay, jetzt hat es funktioniert und jetzt kann ich
auch die Dependency adden für Arduino.
Ich will ja Arduino nur als
Teil benutzen.
Von meiner...
Von meinem Setup.
Ich will Arduino nicht als Einstieg benutzen.
Aber ich benutze ESP EDF
und die Arduino Parts, die ich
angenehm finde. So.
ESP EDF ist
C korrekt, aber
dadurch, dass du deine
Main Methode als
extern C
kennzeichnest, reicht das. Der Rest
kann C++ sein.
Das Framework selber ist natürlich schon sehr
C-Style mäßig
angelegt. Ja, okay, jetzt...
Die Warnings sind ja normal mittlerweile.
Wenn man cool sein will,
benutzt man SICK? Nee, dann benutzt man RUST.
Welche Teile von Arduino
findest du angenehm? Zum Beispiel das ganze
WiFi Handling und
die ein oder anderen Convenient Funktionen,
die es noch gibt, die mir immer erst auffallen,
wenn sie fehlen. Aber das WiFi Handling
finde ich sehr angenehm. Das finde ich beispielsweise
deutlich angenehmer, als das mit dem nackten
ESP Framework zu machen.
So.
Haben wir gestartet.
Dann brauchen
wir noch FMT.
Ohne ordentliche Textausgabe
halte ich es nicht aus.
FMT.
Weil C++ hat zwar mittlerweile eine halbwegs
gescheite Format-Library
dabei, allerdings
ist es anscheinend
nicht verpflichtend für Compiler-Hersteller
sowas zu implementieren.
Dementsprechend hat es der
C-Compiler,
unter der Haube ist es ein GCC,
aber mit Espressif Zeug dabei
hat das nicht.
Pech gehabt.
So, dazu brauchen wir jetzt noch eine Config.
Glücklicherweise kann ich mir das alles abgucken
aus einem anderen Projekt.
Zumindest soweit.
Ich brauche die Settings
für FMT,
dass es nicht zu groß wird.
Wo habe ich die? Da.
Genau. Excellent, excellent.
Ah ja, hier habe ich sie.
Also, wir gehen
in mein Mac-File rein.
Dort gibt es
einmal das hier.
Und es gibt, dass wir
C++23 verwenden
wollen.
Dass wir wenigstens ein paar neue Sachen benutzen können.
So, nochmal ein Bild.
Geekfreaks, dankeschön für den Raid.
Pog.
Schon ewig nicht mehr geradet.
Moment, warum geht eigentlich
meine C++-Extension nicht?
Massive Raid.
Ach, weil ich doof bin und glaube ich
hier auf dem falschen
Profil muss auf das
IOT-Profile.
Da sollte ich auch C++-Zeug haben.
Would you like to configure...
Nein, lass mich in Ruhe.
Select...
Okay.
Ich will nicht
5.1... Oh Gott, Alter.
Geh weg. Ich will das ganze Zeug gar nicht verwenden
davon. Lass mich in Ruhe.
Ich will einfach nur ordentliche Syntax-Highlighting haben.
Das ist alles.
Okay, scheint halbwegs
zu funktionieren.
Nice.
Ich dreh da immer
am Rad, wenn mein Editor
anfängt tausend Sachen zu machen.
So, und jetzt gab es doch hier
irgendwie noch sowas wie
VS Code oder...
VS Code
Configuration Folder. Jetzt stehen meine
Includes und ich glaube jetzt können wir
wirklich anfangen. Sollte
alles soweit funktionieren.
Ja.
Okay.
Dann schauen wir mal. So.
Includen wir mal Arduino.
Auch wenn wir es erstmal
gar nicht brauchen, aber Hauptsache mal
included. Jetzt müssen wir sagen
glaube ich Arduino Init.
Oder
Init Arduino.
Ne.
Ne, wie jetzt?
Alter, ich kacke nur. Ich habe es vergessen.
In irgendeiner Reihenfolge
ist es.
Arduino Init.
Lass mich mal kurz nachgucken.
Es ist...
Ach, zusammen geschrieben.
Es ist
Arduino Init.
Hä? Oder nicht?
Was programmierst du?
Ich habe ein ESP32 S3
bestellt.
So einen hier.
Und ich will da drauf einen Webserver laufen lassen,
der eine Svelte Web App ausliefert.
Embedded in der Firmware.
So, warum gibt es
Arduino Init nicht?
Muss ich das verstehen?
Ach, es ist auch falsch rum.
Es ist Init Arduino. Da ist es auch.
Mein Gott. Könnt ihr euch mal für die
Reihenfolge entscheiden, Alter. Wie rum?
Mit Underscore, mit Init
zuerst, mit Init danach.
Glücklicherweise
muss ich in den Mac-Files nicht
so viel rumsauen.
So, mal
FMT importen kurz.
Ah, zack.
FF?
Nein.
FMT?
Das muss man davor
inkludieren, sonst packt es rum.
Ja, Mac-Files sind Endgegner.
So, und jetzt gucken wir mal,
ob ich eine einfache
Ausgabe hinkriege.
Delay 100 Millisekunden.
Ok, Print, F.
Das ist natürlich jetzt...
Serial
gibt es ein Problem.
Normalerweise würde man es unter
Arduino so machen.
Aber das
hat zumindest bei mir
in den letzten Male
gebackt, was aber auch kein Problem ist.
Probieren wir mal.
Weil ich eh meine
drei Logging-Funktionen verwende,
die ich selbst gebaut habe.
Gucken wir mal.
Und deswegen stört das nicht weiter.
Gucken wir mal, ob Serial Printlein
funzt. Nö.
Das ist broken.
Das macht aber auch nichts.
Lasst mich mal kurz meine Helper-Functions
grabben. Wo habe ich
mein Logging-Shit?
Hier. Genau.
Zack.
Nice.
Zack. Legen wir mal eine Datei an.
Helper.h
Zack. Kommt alles
rein. Weg damit.
Brauchen
wir nicht.
Ok, perfekt.
Ich hoffe es geht noch.
Schauen wir mal, ob das jetzt funktioniert.
Logger.
Also muss ich erst mal Includern.
Helper.
Und den ganzen anderen Krempel brauche ich.
Importiere ich eigentlich auch SDK-Config
hier? Ne, da sollten wir das mal machen.
Ok, Helper.
So, und jetzt müsste ich eigentlich sowas kriegen
wie Logger. Ja. Punkt.
Ok, Loginfo.
Jetzt kann man ein bisschen
gescheites Formatierungskram verwenden.
Und jetzt, was geben wir aus?
Keine Ahnung, sowas wie Uptime
geben wir aus. Ok. So, und jetzt schauen wir mal,
ob der Output jetzt funktioniert.
Ah. Ja, Magic Enums
habe ich hier nicht. Aber das macht auch nix.
Magic Enums brauchen wir hier auch gar nicht.
So.
Ich bin gespannt. Kriegen wir eine Textausgabe?
Ja.
Inklusive Uptime.
Sehr schön.
Das sieht doch schon mal besser aus.
Damit kann man doch auch mal was anfangen.
So, mit welcher Geschwindigkeit
flasht der denn?
Ok, das ist natürlich Schrott.
Das ist natürlich viel zu langsam.
...
Also, machen wir hier mal sowas wie
"-baut".
Was für eine Distro ist das?
Arch, by the way.
Was sonst?
Arch Linux.
Wird geused.
Was könnte es denn sonst sein, Leute?
By the way.
Used ihr auch Arch?
Ich hoffe es mal für euch.
Das ist Arch Linux
mit i3 WM.
Nein, ich habe keinen Sticker drauf.
Äh.
Ja.
Und wie die coolen Leute verwende ich natürlich auch
kein Neo Fetch mehr, sondern nur Fast Fetch.
Also.
Das Flashen ist mir eindeutig zu langsam.
Also.
Mal 10.
Was kommt denn da?
Das muss ich natürlich unbedingt machen.
Mal 10.
Ganz wichtig.
So.
Das sollte, ok, das sollte noch ohne Probleme funktionieren.
Hoffe ich.
Ja, Funst.
Machen wir das hier.
Mal 3.
Gucken ob das von der Geschwindigkeit noch funktioniert.
Also weil sonst drehst du, sonst guckst du dem ganzen Ding ja immer nur beim Flashen zu.
Ok.
Das flasht jetzt schon
deutlich
schneller.
Wo steht es denn hinter der Geschwindigkeit der Flasht?
Ok. Hier sehen wir es ja.
Er flasht in
2,7 Sekunden.
Und ursprünglich hat er geflasht in
2,7 Sekunden.
Haha.
Macht das überhaupt noch
einen Unterschied?
Flasht der denn jetzt überhaupt wenn es über USB...
Wait a minute.
Da stimmt doch irgendwas nicht. Warum ist das jetzt...
Kann es sein, dass das wenn es über
USB geht einfach immer mit maximaler
Geschwindigkeit läuft?
Weil ich sehe da jetzt überhaupt keinen Unterschied.
Ehrlich gesagt.
Ich glaube man muss da überhaupt keinen Speed mehr einstellen.
Das ist immer so schnell wie irgendwie geht.
Auch wenn er hier...
Wir können das mal, wir können das mal
verifizieren.
Ich gebe mal was ein, was der garantiert nicht kann.
Ok, dann kann er auch nicht.
Was haben wir denn sonst noch hier?
Mal 4? Mal 5?
Ok, das flasht immer.
Das glaube ich nicht, dass der so...
Dass der so...
Also ich glaube ganz ehrlich,
die Dinger die über USB laufen,
die sind immer gleich schnell.
Egal was du angibst.
Was glaube ich auch eines der
großen Vorteile ist gegenüber
diesem ollen Zeug, wo du USB zu Serial
hattest. Jetzt ist es ja direkt USB.
Also im Prinzip können wir uns das auch schenken.
Ok.
Das Funst. Da können wir uns jetzt ja mal
der eigentliche Sache widmen.
Ne, das hat auf jeden Fall mehr.
Das hat auf jeden Fall mehr.
Das aktuelle, mein aktuelles Binary ist...
Bild.
Irgendwas mit Punkt Bin.
288K
groß. Also.
Hält sich, hält sich in Grenzen.
Ja.
Das unkomprimierte ist 5,7.
Ne, ne.
Das da konnten...
können...
12 Jahre alte Boards schon.
Die sind schon...
ESP32 Max.
Ja.
Ist auch Blödsinn.
S3.
The Initial Connection.
Das ist der Handshake, dieser initiale Aufbau.
Hallo bist du ein ESP32?
Ja, das ist das...
Weil es über einen USB-Anschluss ist,
macht es gar keinen Unterschied mehr.
Der ist immer gleich schnell.
Der ist immer 2,7 Sekunden schnell.
Ok.
Also, let's go.
Mein Ziel ist heute,
einen Web-Server auf dem Ding zu...
Also erstmal mit WiFi verbinden.
Einen Web-Server starten.
Und...
Dann gucken wir mal
eine Web-Anwendung Embedded bekommen.
Und ja, ich möchte die Web-Anwendung wirklich
Embedden in die Firmware.
Ich möchte die Web-Anwendung nicht
auf eine zusätzliche Partition legen.
Was auch geht.
Das heißt, wir brauchen für das Ding auf jeden Fall
noch eine eigene Partitionstabelle.
Wo wir gerade dabei sind.
Thema Partitionstabelle.
Ich muss mal setzen, wie viel Flash das Ding hat.
Da müssen wir jetzt mal kurz in den...
In das Datasheet
vom Hersteller gucken.
TTGO T-Display S3.
Wie viel Flash das Ganze hat.
Ich glaube 16 MB.
Die alten hatten nur 4.
16 MB ist...
Guck mal, und 8 MB RAM.
Das ist sehr, sehr...
Ja, großzügig.
Auf jeden Fall.
S3, Example, Github.
Haben die vielleicht...
Ein...
Genau, SDK.
Ich will mir nämlich mal die Defaults abgucken.
Aha, guck mal hier.
Config-Target haben wir.
Config-App-Retrieve-LAN 11-Shar-16.
Was?
Alles klar.
Logisch, oder?
Würdet ihr auch immer setzen, oder? Chat.
Wer setzt es nicht?
The app will read the embedded
hash from Flash and convert it to a string
and store it in...
This ensures the panic handler and core dump will be able to print
the string even with cache disabled.
Okay.
Config-Color-SRAM
TX-Power.
Juckt mich. Config-Static.
Juckt mich alles nicht.
Send-Buffer. Colors. Wow.
Okay, das ist für die...
Für die Grafik-Library.
Das brauchen wir jetzt
das erste Mal nicht.
Also setzen wir tatsächlich, aber...
Was denkt er denn, wie groß der Flash
ist?
Flash-Size.
Hier kann man einstellen, Flash...
Das ist wieder was anderes.
Irgendwo kann man einstellen...
Kann man die Flash-Size einstellen?
Flash-Size.
Hier ist es doch. Flash-Size.
Wir haben nicht 2 MB, wir haben 16 MB.
Keg-Weight.
So, und das müssen wir dann auch gleich immer ordentlich...
Ich hab das doch hier auch noch irgendwie...
Hier, Flash-Size.
Es gibt mehrere
Sachen, wo man die Flash-Size einstellt.
Warum?
Gleich 16, dann gibt es...
Hier.
Ich kopiere mir das einfach.
In meinen Defaults
rein.
Flash-Size.
Hier.
Das da.
Die 2 Sachen brauchen wir.
SDK-Config-Defaults.
Das rein. Hups.
Jetzt habe ich ein bisschen viel mit
kopiert.
Wie heißt das Ding? Config?
Okay, nice.
So, jetzt sollte das Ding beim Flashen schon mal
auch erkennen,
dass es die richtige Größe hat.
Ja, ich habe meine Menü-Config gerne.
Jetzt muss ich nochmal alles kompilieren.
So, aber ansonsten
steht hier nichts
großartig Spannendes drauf.
Also können wir mal
Default lassen.
Sonst müssen wir da glaube ich erstmal nichts abgucken.
So, dann.
Lasst uns mal loslegen.
Also wie fangen wir denn jetzt am besten an?
Partition-Table und so brauchen wir
bei so einem fetten...
Ja stimmt, was hat der eigentlich für Partitionen
standardmäßig?
Wahrscheinlich nichts
gescheites, oder?
S3 Partition-Table.
Was ist denn die Default Partition-Table?
Also nicht
denken, dass das Ding wirklich
sowas hat, wie man das von SSDs oder sowas
kennt, aber es hat
auf dem Flash
glaube ich irgendwie
einen Kilobyte Daten, wo am Anfang
drin steht, bei welchem Offset
bestimmte Sachen anfangen.
Das braucht man zum Beispiel, wenn man
seinen Controller OTA-fähig machen
will. Also wenn du das Ding per WiFi-Updates
versorgen möchtest. Wenn du nämlich
beispielsweise WiFi-Updates einspielen
willst, dann brauchst du zwei Partitionen.
Eine OTA-0, eine OTA-1.
Das wird immer umgeswitcht, also
du startest von OTA-0
deine Firmware, du flashst
während es im laufenden Betrieb ist auf OTA-1,
dann rebootest du und startest
auf OTA-1 und dann kannst du, wenn du
wieder flashen willst, auf OTA-0, aber das
handelt das Ding für dich.
Okay, das ist die Standard-Partition-Tabelle.
Die ist ziemlich
klein, Leute.
Die ist ziemlich klein.
1 MB.
Das ist für eine Kiste mit
16 MB Flash
ist das sehr klein.
Lassen wir das erstmal default, aber
das ist auf jeden Fall nicht richtig.
Okay. Wie kriegen wir einen
Webserver auf das Ding drauf?
Als erstes müssen wir mal
uns mit WiFi verbinden.
Dafür lege ich jetzt eine
Top-Secret-Datei an.
Secret.h
und dann müsst ihr die Augen zumachen.
Da dürft ihr jetzt nicht reingucken.
Chat, ihr guckt alle weg, oder?
So, ich muss mein Clip,
ich muss meine Clipboard
meine Clipboard-History
ausstellen.
Ja, Funs, Clipboard-History ausstellen.
WLAN-Passwort.
WLAN-Passwort.
Das ist eh ein extra Access-Point, den ich aufgemacht
hab, also nicht so wild.
Aber wenn ich's leake, find ich's trotzdem
doof.
Okay, WiFi-Networks.
Zack.
Edit.
Nennen wir das Ding jetzt mal.
Okay, so, nennen wir das jetzt.
So, Passwort.
Das ist doch ein ganz gutes WLAN-Passwort
hier. Ein exzellentes
WLAN-Passwort, sozusagen.
Das ist auch viel zu lang.
Okay, wie mach ich das denn jetzt, dass ihr das nicht seht?
Ich probier das mal so aus.
Wir machen, mit nem Define
geht's wahrscheinlich nicht.
Das dürfte nicht funktionieren, weil wenn ich
jetzt hier sag,
Include Secret
und jetzt den Define, ihr WLAN
Dann steht's
hier mal im Autocomplete drinnen.
Das ist natürlich doof.
So.
Konnte man die Define sich als Compile-Type
im Argument machen? Doch!
Das Problem ist aber, dass das ja im Bild-Ordner
dann drinnen steht und meine IDE das Autocomplete
Nee, nee, nee, das funktioniert nicht. Das kann ich mich
noch dran erinnern, das Problem war das letzte Mal auch.
Ich glaube, ich hab's das letzte Mal so gefixt.
Ich hab das
Arduino-Strings
machen lassen oder vielleicht
reichen auch C-Strings sogar aus.
WLAN
SSID
Gucken wir mal.
WLAN SSID. Aha!
Und es zeigt's auch nicht an, ne?
Nee.
Weder hier
noch
mit Autocomplete. Okay, sehr gut.
Sehr schön. Nice.
Excellent.
Da wird nur der Name Autocompleted und der Rest
glücklicherweise nicht.
Das passt also.
So.
Also, dann kann ich jetzt
Top Secret, Leute.
Jetzt seht ihr nix mehr.
Kann ich jetzt schnell
eine WLAN Sachen reinkopieren.
WLAN SSID.
WLAN Password.
Und wie gesagt, sollte ich's irgendwie
leaken, geilt euch nicht zu sehr darauf auf.
Ich kann's mit einem Klick deaktivieren
und das ist ein extra WLAN nur dafür.
Wo man mit
Isolation mit nicht
Internetzug, mit nichts, ja?
Außer vom Rechner komm ich hin, sonst nirgendswo.
Okay.
Da sind wir wieder.
Ist das
Windows 11 mit einer Linux-VM? Gut erkannt,
Frederik. Excellent.
Gut erkannt.
Die meisten Leute fragen,
wie machst du das mit zu schnell hin- und herschalten?
Aber du hast, der Frederik hat den Durchblick hier, Leute.
Ja, das ist eine VM, guck hier.
Aber halt im Fullscreen
auf mehreren Desktops verteilt.
Für mich ist das
die beste Kombination.
Linux virtualisiert unter Windows.
Umgedreht macht mir zu viel Probleme.
Und
gerade auch für das, dass ich Windows hauptsächlich
eben für Performance-Sachen wie Games
verwende, ist es so rum besser.
So.
Also meine WLAN-Geschichten sind
am Start.
Jetzt können wir das probieren, ob wir uns mit dem
WLAN verbinden können. Okay, mal gucken.
Chat, jetzt bin ich mal gespannt.
Mal gucken, ob ich das aus dem Kopf noch hinkriege.
Gibt es irgendwie die Möglichkeit, Chatge,
Secrets.h
irgendwie, dass ich nicht aus Versehen
draufklicke? So, gibt es hier
Region? Oh, Region.
End Region.
Top
Secret. Zack.
Und jetzt kann ich das minimieren.
Jetzt kann ich auch nicht aus Versehen draufklicken.
Hoffe ich mal.
Ne, nice. Super
advanceder Shit hier. IDE
durchgespielt.
So, mal gucken, ob ich jetzt das im Kopf
noch hinkriege, wie man
Also, man muss auf jeden Fall
Wifi includen. So viel weiß ich noch.
Warum ist mein Hintergrund
weg? Ach ne, es ist schon 21 Uhr.
Der Pepo träumt.
So, Wifi.
Wie war das jetzt nochmal?
Wifi-Connection. Das
ist auf jeden Fall deutlich angenehmer mit den
Arduino-Libraries gewesen, als mit dem ESP32.
Wie, also es war Wifi
erstmal
Disconnect, wenn ich es richtig im Kopf habe.
Erstmal Disconnect.
So, und jetzt ist es
Es ist jetzt schon
Beginn.
Mit SSID und
Ja, ok.
Wifi
SSID. Ne, wie habe ich es genannt?
WLAN, SSID
Ok, es wird auch nix
Es wird auch nix completed. Sehr schön.
WLAN-Passwort.
War es das jetzt schon?
Ne, jetzt muss man noch irgendwie warten.
So, es gab sowas wie
WAIT.
WAIT FOR CONNECTION
WAIT FOR STATUS BITS
Ich glaube WAIT FOR CONNECTION RESULT
UNENDLICH LANGER
TIMEOUTS
Und jetzt muss ich irgendwie
Boah, was resultet das denn?
WL
UNDERSCORE
Ich brauche
WL
CONNECTED
Würde ich mal sagen.
So, WL CONNECTED
IF
Ne, wir sagen einfach so hier.
ABBRECHEN
WENN ES NOT CONNECTED IST
MIT
WI-FI FAILED
Ne, WI-FI FAILED
Das habe ich mir vom Go abgeguckt.
Ja, nicht einfach nur ein
Webserver auf dem ESP.
Ein HTTPS fähigen Webserver auf dem ESP.
Und zwar nicht meinen selbst gebastelten Krempel
den was wir mal vor Jahren gemacht haben
sondern den eingebauten.
Die haben nämlich mittlerweile einen eingebauten
den muss man natürlich noch aktivieren.
So, wir testen mal was. WLAN Passwort mache ich mal
hier blub blub blub blub. Das ist auf jeden Fall das
falsche WLAN Passwort. Jetzt gucken wir mal
ob der abkackt mit
WI-FI FAILED
Ich hoffe der printet dann nix.
Was ich nicht sehen möchte.
Äh
Muss man REACHEN vielleicht so wegmachen?
WI-FI FAILED
Ja, man
It's okay.
Ich hab's deaktiviert.
Oh man
Alter
Es ist gechanged das Passwort.
Slimebeats
Dankeschön.
Mein fucking WLAN Passwort taucht als WARNING
auf. Ich fasse es nicht.
Alter. So, also das mit dem REACHEN
scheint ja schon mal nicht zu funktionieren.
Okay, also
Dann machen wir das nochmal auf.
Was ist das da oben überhaupt hier?
Oh
Gerade noch rechtzeitig
gemutet, ey.
Okay, dann
Wie muss das denn richtig sein?
CONST?
Ja?
Ohne dass er dann meckert?
Jetzt sollte es auf jeden Fall
Selbst wenn ich jetzt hier
WI-FI
Pass-PW reinschreibe
Ne, WLAN
reinschreiben. Jetzt sollte es nicht mehr gehen
Ich hab's gerade geändert.
Flash
Ich hab schon den Namen angegeben. Da hat er gesagt
Name ist nicht erlaubt.
Boah ist die Firmware jetzt fett. Alter
Der Flash der hat 3 Stunden jetzt
Der ist auch gleich viel fetter geworden
Lass mal kurz gucken
Wie groß ist die Firmware jetzt?
Einfach durch den ganzen
TCP, IFP, WI-FI Kram
Einfach dreimal so groß
Guck mal hier
Das ist wahrscheinlich gar nicht durch die
Serielle Connection beschränkt
Sondern durch die Geschwindigkeit
vom Flash
Und gab es einen Fehler?
WI-FI FAILED
NICE
Das funktioniert schon mal
Jetzt muss ich natürlich den ganzen
Krempl nochmal
Ist denn mein Passwort
Ist meine History noch aus? Jawohl
Chat
Ihr müsst nochmal weggucken
Ich hab ein neues WLAN Passwort vergeben
Ich hab einfach mal wild auf die Tastatur
gehauen. Firmware ist perfekt.
Ja
Fuck ich hab ein Leerzeichen im WLAN drinne
Shit
Blöde Idee gewesen
Muss ich das nochmal setzen
Okay
Save
Okay
Sehr schön jetzt könnt ihr wieder gucken
Und da wird auch nix
Jetzt ist es Konstchar
Jetzt backts hoffentlich nicht mehr rum
Okay und jetzt können wir auch die
Die History wieder einschalten
Klippert
Klippert History
Okay funzt wieder
Und es ist auch nix drinne
Okay schauen wir mal
Ob die WLAN Config jetzt funktioniert
Flashen
Please jetzt ohne Leaks
Wenns geht
Boah die Firmware ist einfach jetzt 5 mal so groß
Ah gut wir werdens aushalten
Und und und und und
Connected
Nice
1 4 8
Nice und kein Passwort Leak
WLAN Name wen juckts
WLAN
Name Leak aber
Kein Passwort Leak das ist schön
Also in der Debug Ausgabe kenn ich das Passwort mit drinne steht
Gut
Dann können wir das ganze so lassen
Also WLAN Connection funktioniert schon mal
Das war jetzt schon mal easy
Jetzt kommt der harte Part
Moment wie ging das mit Regen nochmal
Irgendjemand meint doch gerade mit Regen
Aber ich hab Top Secret
Das letzte so genannt
Und das hat nicht funktioniert
Jetzt mag er nicht
Direkt mit DHCP
Ja deswegen mag ich die Arduino Dinger
Ja geht nicht
Wie verwendet man das denn
Muss ich vielleicht klein schreiben
Ne
Wie benutzt man das
Ach in End Region muss das auch rein
So
Ne
Das soll jetzt funktionieren
Ne natürlich nicht
Es wär jetzt ja auch zu einfach
Und warum genau ist das jetzt ein Error
Ok was ist denn ein
Was ist denn known
Also keine Ahnung
Das ganze Zeug wird echt von Leuten
Designt und gestaltet
Die einfach Menschenfeinde sind
Dann lass ich es einfach hier oben drin
Und klick es nicht an
Boah mir funktioniert es nicht
Ja ich mein
Es sind irgendwelche Compiler Sachen
Da kann ich in meinen Makefiles
Irgendwelche Options setzen
Aber warum überhaupt
Warum in Rust lauern
Ne das hab ich das letzte mal
Weiß gar nicht ob du da warst
Letzte mal in Rust gebaut
Aber das fand ich tatsächlich noch anstrengender
In dem Fall würde es einfach nur
In meinem Editor eine Region setzen
Die ich ein und aufklappen kann
So wie hier
Ach guck mal man kann die ganzen
Man kann die ganzen Includes heiden
Egal ich klick da einfach nicht drauf
Passt schon
Oder wenn nicht dann mach ich es halt aus
So nice
Ok
Jetzt brauchen wir den Webserver
Gebe ihm
Menü Config
HTTPS
ESP HTTPS Webserver
Die HTTPS Webserver Komponente
Will ich aktivieren
Jawoll
Ja es gibt
Micro Python oder sowas
Heißt das
Keine Libraries für alles mögliche
Ich komme immer wieder zum Schluss
So sehr ich es auch hasse
Aber diese Microcontroller Dinger sind tatsächlich
In dem Fall mit C
Oder mit C++
Noch am besten zu programmieren
Übrigens mag ich persönlich die Bezeichnung
CC++ nicht so als wäre es das gleiche
C++ ist nicht mal richtig mit C
Kompatibel
Es gibt Features in C die kann C++ nicht
Und umgedreht ob wir es natürlich auch
C ist eine sehr in sich
Konsistente
Überschaubare Programmiersprache
Und C++ ist eine
Abscheuslichkeit
Wie nennt man das
Abomination
Was heißt das auf Deutsch
Abscheuslichkeit
Oder irgendwie sowas in der Richtung
Eine Ausgeburt der Hölle
Abscheulichkeit
Ausgeburt der Hölle
Treffts besser
Direkt in Assembler programmieren
Der neue ESP32S
Der hat ein Ultra Low Risk
Prozessor
Den man mit Assembler programmieren kann
Der kann mehr als der alte Ultra Low Power Prozessor
Von alten ESP32
Das machen wir vielleicht auch irgendwann mal
Also so
Jetzt includen wir mal
In http
Ne
Warum wollte er denn das mitkompilieren
Das ist auch so ein Ding
Warum
Jeder normaler Bildprozess
Captured sich den State
Punkt des Kommandos
Und danach kannst du rummeditieren wie du willst
Hat er ja auch recht
Include ESP
HTTPS Server
Da muss ich mir jetzt einmal ein Beispiel angucken
Da weiß ich nicht wie das funktioniert
GitHub HTTPS Server
ESP32
Example
Nein nicht der, der hier
Der offizielle
DLS fähige
Webserver für den ESP32
Nice schon mal sehr übersichtlich
Static Handle
HTTPS Server
Den benutzen die doch überhaupt nicht
Den benutzen die doch überhaupt nicht
Ach ne übergeben die halt
Das haben die China Chinesen hier dann wieder zusammen gewurschtelt
Das haben die China Chinesen hier dann wieder zusammen gewurschtelt
Start Server
Stop Web Server
Das ist natürlich
Das ist sehr wichtig
Dass das in eine eigene Funktion reinkommt
So ein einzelner Aufruf
Ohne hätte das nicht funktioniert
Start Web Server
HTTPD Handle
HTTPD SSL
Conflict Default
Das hier scheint das Zertifikat zu sein
Alter ist das kompliziert
C ist eine super Sprache
C++ nicht
Ok wir kopieren uns das
Wir kopieren uns das hier mal raus
Und machen das mal bis zum Start Server
Also
Danach
Haben sie irgendwas von Inception gerippt hier
So
Server 0
So
Default Config
Was ist die Default Config
Ahja obviously alles klar
Sehr schön
Default Port 443
Das klingt schon mal gut
Server Zertifikat
Ich hab absolut keine Ahnung was die da treiben
Die lesen irgendein
Embedded Zertifikat aus
Huge Rate Massive
Dankeschön
Das ist irgendwie das Tag der Rates
Das ist irgendein Embedded Zertifikat
Die Frage ist nur wie kriege ich das
Embedded
Wir müssen uns gleich mal das Beispielprojekt angucken
User Callbacks brauchen wir nicht
Und das war es schon
Ok das ist in der Tat sehr
Übersichtlich
Das stecke ich wieder
Deswegen habe ich mir diese Sache hier
Diese kleine Helper Funktion gebaut
Da kann ich einfach sagen
Hier Zack
Bitte crashen
Und dann gibt er automatisch
Den Fehlercode aus
Da brauche ich dieses ganze Zeug hier nicht
So
Start
So und hier registriert man sich dann irgendwelche
URL Händler
So weit bin ich ja noch gar nicht
Wir starten das mal kurz
Gucken ob das soweit funktioniert
Wie kriege ich das Zertifikat
Wo kriege ich das Zertifikat her
Wie machen die das
Und wie auch immer sie es machen
Ich glaube nicht das es mir gefällt
Ok
Aber wie bekommt man die in seinen
Wie bekommt man die in seinen ESP rein
Vielleicht irgendwas im Makefile
Ne nice
Wo sind die Zertifikate
Über hier Search
Vielleicht hier irgendwas im Makefile
Ah
Guckte mal da
Embed Textfiles
Verstehe
Ich weiß nicht ob mir das gefällt
Gefällt mir das wie die das gelöst haben
Und die Zertifikate und sowas
Ist das Build in File System
Eigentlich viel besser
Weil die muss man wirklich nicht jedes mal mit
Neuflashen wobei es ist auch egal
Bisschen Text macht nichts aus
Ah ja komm
Zum testen machen wir das jetzt erstmal
Wir laden uns hier die Serts runter
Wobei das ist doch bestimmt hier auch
Habe ich das doch bei mir drin
SCP Examples
Protokolls
HTTPS Server
Zimper
Das Ding kann auch Websockets.
Search.
Und jetzt kopieren wir das mal rüber.
Ne, wir kopieren uns einfach den ganzen
Search-Ordner. Easy.
Moven wir das Search
nach Main.
Ne.
Search nach Main.search.
Schieben das einfach hier rüber. Da ist es.
Und was mussten wir jetzt machen? In das Make-File
musste man reinschreiben
das
Embed-Text-Files.
Also quasi
hier unten drunter nochmal.
So. Muss ich nochmal alles
kompilieren, weil Make-Files
sich geändert haben. Das ist auch so. Ey, die
Build-Systeme bei C++, ich weiß nicht, da kommt ja alles vor
wie aus dem letzten Jahrhundert. Ach, hier, guck mal,
der konnte auch nicht kompilieren, weil es nicht Embedded war.
So.
Okay. Dann hoffen wir mal, dass das jetzt funktioniert.
Ich weiß nicht, so richtig schön finde
ich das auch nicht mit den
mit den
Searchs und diesem Embedded-Text und
aber ich meine, das funktioniert
erstmal. Da gibt es
bestimmt eine schönere Variante.
Am liebsten wäre mir das
ja die Zertifikate
aufs interne Filesystem zu legen.
Aber dazu brauchen wir erstmal eine Partitionstabelle.
Das gucke ich mir gleich mal an,
wie das geht. So.
Was warnt er hier?
Okay. Aber das scheint funktioniert zu haben.
Dann
pushen wir das Ganze doch mal
und gucken,
ob man auf einem
Web-Server rauskommt jetzt.
Ich meine, ich habe einen Web-Server,
der keine Händler hat und nix.
Das heißt, es reicht mir ja schon mal,
wenn ich mich überhaupt auf den Port
connecten kann, wenn es
nicht crasht. Okay, es crasht
nicht. Schauen wir mal.
Machen wir mal einen Curl.
Curl.
Ignorieren wir mal das Ganze.
Ah, ttps.
Das hat funktioniert.
Nothing met.
Ja, das ist ja okay. Wie sieht es
für einen Browser aus? Guck mal hier.
Da kommt jetzt nichts zurück.
Ja, weil es keine Webseite gibt.
Ja. Aber aus Funst,
das haben die doch, das haben die
echt ganz gut, das haben die wirklich brauchbar
gemacht. Das haben die
wirklich, also so einfach war das noch nicht.
Jetzt schauen wir
mal, wie das mit eigenen
Zertifikaten aussieht. Da stand doch auch
ein, weil
ich will nicht, dass da HTTPS-Example
dran steht, ein Beispiel drin.
Gehen wir mal hier nach
Main Search
und
wir heißen Display
Champ.
Ist übrigens nicht CA-Cert, sondern es ist
Server-Cert.
Weil die selbst nicht genau wissen, was sie da
schreiben.
So.
Und wenn ich das jetzt nochmal flashe, dann
sollte ich
mein neues Zertifikat bekommen, wo jetzt
Display Champ drinne steht.
Die zweite Hälfte des Flash-Vorgangs ist schneller.
Okay.
Nice, zeigt mal her.
Not secure.
Display Champ.
Nice.
Okay, ich bin milde
begeistert. Das ist wirklich einfach gewesen
jetzt. Ein TLS-fähigen
Web-Server.
Mir wäre es
lieber, ich würde die Zertifikate
auslesen können
von einem
von einem
internen File-System.
Oder wir embedden das Ganze.
Können wir das nicht? Leute, ich hab eine Idee.
Passt mal auf. Six-Head-Time.
Six-Head-Time.
Ich weiß, was wir machen.
An sowas ähnliches habe ich auch gedacht.
Nur, dass man Prog-Mem gar nicht mehr braucht,
sondern alles, was Kunst ist, automatisch
Prog-Mem wird beim ESP32.
Man könnte doch...
Okay. Wie mache ich...
Jetzt, pass mal auf.
Ich hab keine Ahnung, ob das gescheit funktioniert.
So, hier haben wir doch...
Hier haben wir das Zert. Private Key.
Man konnte doch mit XDD,
glaube ich, irgendwie
XDD C-Arrays
aus Dateien erstellen.
XDD...
Nee, XXD.
Nee, wie hieß das Ding nochmal?
Oder XXD?
Oh, fuck.
Ah, XXD war es. Nicht XDD.
Minus I. Okay.
Also.
XXD minus I.
Und dann schmeißt es ein C-Array raus.
Genau sowas. Ja, sowas brauchen wir.
Okay. Und zwar
nach...
Ja.
I.H in...
Da brauchen wir jetzt ein XDD.
Da brauchen wir jetzt ein XDD.
Da brauchen wir jetzt einen extra Ordner für.
Für so Dinger.
Machen wir mal einen extra...
Extra...
Warum einen extra Ordner? Scheiß drauf.
Wir machen das einfach mal ins...
Ms-Marki.h
Okay.
Da wollte ich die Datei jetzt übrigens gar nicht haben.
Eins hoch.
Key.h
Ja, okay.
So, jetzt können wir nämlich diesen ganzen
Shit hier draus ersetzen.
Und zwar den Private Key habe ich hier.
Also, das können wir uns sparen.
Private Key Start können wir uns auch sparen.
Privt.
Key.
Pem.
Start.
Ne, Moment. Ach, ich musste das erstmal includen.
Ja, egal.
Include Key.
Punkt H.
Key ist ein blödes Header-Fallname. Den gibt es mehrfach schon bestimmt.
So, und da haben wir jetzt...
Wie heißen die Sachen da drinnen denn?
Gucken, dass ich nicht Secret aufmache aus Versehen.
Äh, Privt.
Privt.
Key.
Pem.
Okay.
Privt.
Key.
Pem.
Heißen die.
Und.
Privt.
Key.
Pem.
Len.
Natürlich.
Und jetzt schauen wir mal, ob das noch funktioniert.
Ja, das praktische ist cool.
So, weil jetzt ist es direkt Embedded im Bein.
Also, ist es so vorher auch.
Aber, finde ich, nicht ganz so gut.
So kryptisch, wie dieses Assembler-Ding und mit Embedded-Text-Files und sowas.
Es sollte jetzt ja immer noch funktionieren.
Das hier habe ich ja nicht geändert.
Okay.
Curl.
Oh, shit, was ist das?
Embed TLS, PK-Pass, Key-File-Return, Fail-to-Set-Sub.
Oh, Mist.
Das hat irgendwie nicht funktioniert.
Warum?
ESP32.
Wir tun mal so, als kommt es vom...
Ja, das Problem...
Ich tue mal so, als kommt es vom File-System.
Oh, ich...
Ähm, nee.
Nee.
Ich wollte gerade sagen, das muss bestimmt null-terminated sein.
Aber das muss nicht null-terminated sein, weil man gibt ja eine Länge an.
Also, ne?
Wisst ihr, wie ich meine?
Macht ja keinen Sinn, eine Länge anzugeben und dann muss es null-terminated sein.
Stack Overflow.
Okay, ich glaube, dazu finde ich nichts hier.
Was?
Irgendjemand eine glorreiche Idee, was das jetzt sein könnte?
Wollen wir mal gucken, ob es daran liegt, dass es nicht null-terminated ist?
Schauen wir mal.
Und dann nehmen wir nicht die Länge, sondern einfach Size of...
Oh, eigentlich brauchen wir die Länge eh nicht.
Ich glaube nicht, dass das was bringt.
Ähm...
Pass.
Suchen wir mal weiter danach.
Oder vielleicht nicht Stack Overflow.
Das offizielle Forum ist bei sowas öfters besser.
I'm getting an error.
Okay.
Shit.
Shit.
Nee, Size of bei einem Array ist ein Curl.
Das ist es schon mal nicht.
Ach so!
Wartet mal.
Nee.
Warum geht denn das jetzt schon wieder nicht?
Was ist denn hier kaputt?
Oder vielleicht liegt das auch am Curl?
Nee.
Okay, das funzt nicht.
Äh, dann lassen wir es jetzt erstmal so, wie es standardmäßig ist.
Weil das ist so ein Ding.
Da kann man sich wahrscheinlich dumm und dämlich dran suchen.
Haben wir nicht sowas in der Richtung schon mal gemacht, irgendwann, vor ganz langer Zeit?
Ich muss mal die alte Streaming-VM starten.
Vielleicht finde ich da noch was drauf.
Da haben wir es, glaube ich, vom File System ausgelesen damals.
Äh, warum startet das nicht?
Oder hatte ich da schlicht ergreif...
Ich glaube, ich hatte da schlicht ergreifend keinen Hintergrund, hä?
Bei der alten VM.
Ich glaube, das geht auch so einfach.
Es geht auch so.
Äh, Repo...
Okay, F.
Äh, F.
Äh, F.
F.D.
Wir suchen mal nach C.P.P.
So viel können das...
Okay, okay, ja, ja, ja, ja.
Wir kommen der Sache näher.
Ja.
Was ist denn das hier?
Mini-Server.
Da haben wir doch bestimmt sowas in der Richtung mal gebaut.
Guck mal hier.
Das ist uralt.
Und das, nachdem es auf dem Streaming-PC ist, sollte da...
Da steht aber viel drin!
Gibt es da vielleicht...
Ein Header-File?
Okay.
Äh...
Das ist ein selbstgebauter HTTP-Server.
Third...
Third Buffer.
Hier.
Read file from spiffs.
Key...
Ach nee, da mache ich das selbst.
Ah, ja.
Okay.
Da übergebe ich das richtig an die Funktion.
Passend.
Und benutze nicht den eingebauten...
Naja, okay.
Und da habe ich das auch im Binary-Format.
Das kann man natürlich in der Tat nicht miteinander vergleichen.
Okay, dann weiß ich es jetzt nicht so genau, ehrlich gesagt.
Was er für Schmerzen hat.
Was meint er denn, wie lang das Ganze ist?
1, 7, 0, 5?
Ja, 1 länger wegen...
So neu ist die nicht.
Default Web-Server-Library.
So, und jetzt...
Und jetzt machen wir noch was.
Jetzt wird die letzte Zeile noch entfernt.
Äh, Bash Remove Last Line of File.
Wie funzt sowas gescheit?
Seht...
D.
Okay.
Optimal!
Und jetzt das Ganze...
Nach...
Keypunkt H.
Äh, meine Shell Auto completed nicht mehr.
Okay.
Nice!
Oh, guck mal, wie es funzt.
Und jetzt das...
Ey, das ist ja mega.
Da machen wir mal ein Skript.
Ja, da können wir uns ja...
Können wir nämlich dieses ganze
Cert-Directory-Ding wieder löschen.
Cert weg.
Ja, ich weiß, was wir machen.
Pass mal auf.
Wir machen sowas wie...
In keiner Ahnung.
Generate.sh oder sowas.
CRMOD plus X.
Für sowas ist halt Shell-Skript das Beste.
Bin.
Bash.
So, das da.
Das da.
Dann brauchen wir...
Wie heißt das andere?
Server.sert.pem.
Und mit OpenSSL wird das...
Das ganze Generated.
So.
Dann kommt das ganze allerdings nach...
Main.
Ne, wisst ihr was?
Wir machen das noch besser.
Noch mehr High IQ.
Wir schieben das hier nach...
Äh, Key.
Das hier nach...
Cert.
Pass mal auf.
Big Brain Time.
Und...
Ne, Moment.
Das passt ja so schon.
Das...
Das hängen wir an.
Wir nennen das Ding jetzt einfach...
Certs.h
in Main.
Und das hängen wir da an.
Certs.h
Und jetzt kriegen wir mit dem Skript...
Ein neues Paar Zertifikate generiert im Format, wie wir das haben wollen.
Und danach löschen wir...
Die zwei Files.
Jetzt bin ich mal gespannt, ob das funktioniert.
Alter.
Gen.sh
Bam.
Key.h liegt da rum.
Das ist aber falsch.
Certs.h
Und...
Easy!
Beides drin.
So wie es sein soll.
Ein nices Skript.
Das ist gut.
Wir bauen einen Webserver auf dem neuen ESP32 S3 mit HTTPS.
Jetzt können wir diesen ganzen Shit hier weg machen.
Und können jetzt hier...
Server Certs.
Achso, jetzt muss ich das Richtige noch includen.
Key gibt das ja nicht mehr.
Ich will Certs.h.
mal includen.
Das eine...
Ach, Moment.
Habe ich da noch?
Au!
Au!
Was mache ich denn hier?
Null.
So ist es nicht gedacht gewesen.
Funktioniert das jetzt noch mit Generate?
Oh shit, jetzt ist es...
Ne.
Ja, ja. Funktioniert.
Sehr, sehr schön.
So, und jetzt haben wir hier Server Certs.
PEM.
Und dann hier unten...
Size of Server Cert PEM.
Okay, nice. Nice, nice.
So, als nächstes müssen wir noch eine simple Webseite auslösen.
So, als nächstes müssen wir noch eine simple Webseite auslösen.
So, als nächstes müssen wir noch eine simple Webseite auslösen.
Und gucken, ob das funktioniert.
Ich mag ESP-IDF.
Das macht Spaß darin zu programmieren.
Auch wenn es C++ ist.
Wobei, wir haben ja noch nicht wirklich viel gemacht.
So, Key.h können wir auch löschen.
Brauchen wir nicht mehr.
Sehr schön.
So, oh.
Was?
Ah, jetzt haben wir das Problem, dass immer noch versucht wird,
Ah, jetzt haben wir das Problem, dass immer noch versucht wird,
die zwei Textdateien zu embedden, die es nicht mal gibt.
die zwei Textdateien zu embedden, die es nicht mal gibt.
Das macht ja nichts.
Okay, es sollte immer noch funktionieren.
So, dann Beispiel.
Weiter.
Also eine Webseite will ich heute zumindest noch ausliefern.
Wie geht das weiter hier mit der Webseite?
Irgendwas mit Händler habe ich gelesen.
Irgendwas mit Händler habe ich gelesen.
Get-Root-Händler.
Ja, das ist gut.
Hello-Secure-World.
Das geht aber bestimmt schöner.
Wie macht man das denn?
Händler.
Start-Server.
Register-Uri-Händler.
Root.
Das da.
Okay.
Das ist ja übersichtlich.
Slash.
Das geht doch bestimmt auch mit Wildcard.
Er flasht immer noch.
Das geht doch bestimmt auch mit Wildcard.
Das geht doch bestimmt auch mit Wildcard.
Server.
So, hier wird er gestartet.
Nach dem Starten.
Also, Root-Händler, den gibt es nicht.
Mal gucken, ob man das mit einem C++ Lambda machen kann.
Mal gucken, ob man das mit einem C++ Lambda machen kann.
So, in welchem Format muss das sein?
HTTP-Request.
HTTP-Request.
HTTP-Request.
Muss man da irgendwie was returnen oder so?
Muss man da irgendwie was returnen oder so?
Return?
ESP okay.
Ah, hier sieht man ja auch schon was.
Dann nennen wir es Request.
Vielleicht ein bisschen schöner.
Hello-Secure-World. Okay.
Hog-U...
Hog-U-Reicht.
Hog-U-Lakete.
Hog-U-Lakete.
Wie?
Das ist meine Testwebsite jetzt.
Das ist meine Testwebsite jetzt.
So.
Und jetzt müssen wir das noch irgendwie
registern.
Registern.
Register. Wie ging das hier?
Register-URI Händler.
Register. Wie ging das hier?
Auf jeden Fall gucken, wie man das mit Wildcards-URLs noch macht.
Und jetzt einfach den da, so.
Okay, ich bin gespannt, ob das jetzt funzt.
Also die Firmware ist, glaube ich, schon ziemlich pepo-fett mittlerweile.
Ja, guck dir mal.
Alter, mit dem alten ESP32 hätte ich richtig Probleme bekommen.
Der alte ESP32, der hatte 4 MB Flash.
Wenn du dort OTA-fähig, das OTA-fähig machen wolltest, brauchst du ja die Firmware-Partition mal 2.
Das heißt, du kannst maximal 1,7 MB, also naja, gut.
Die Hälfte haben wir jetzt belegt und so viel mehr kommt ja dann nicht dabei.
WiFi ist fett nochmal, HTTP ist fett nochmal.
Ja.
Aber der ganze TCP-IP-Krempel, das braucht halt viel.
Und die ganzen WiFi-Protokoll-Kram.
Es gibt keine andere sinnvolle Möglichkeit, den ESP32 zu nutzen.
Den ESP32-S3 zu programmieren, wenn man wirklich auf alles zugreifen will.
Und auch die passenden Libraries haben will.
Also, jetzt bin ich mal gespannt, ob das jetzt funktioniert.
Passt mal auf, Leute.
Haltet eure PORS-Champs bereit.
Jetzt bin ich gespannt, ob das funktioniert.
Fuck, header fields are too long.
Passt, passt.
Header fields are too long.
Was kann man da machen?
Irgendeine Option setzen bestimmt, hä?
Ah.
HTTP-D max-request-header-length.
Okay.
Ja, dann setzen wir das doch mal.
Max-header-length.
512.
1024, wenn Arduino das als Default hat.
Websocket-Support brauchen wir nicht.
Flash.
So.
Okay.
Jetzt muss er nochmal neu das bauen, weil immer wenn du Menü-Config machst, muss er nochmal alles neu bauen.
Verstehe ich auch nicht so genau.
Ja, kann ich dir nur empfehlen.
Wenn du das Gefühl hast, es gibt nichts Besseres, als einen sicheren Job in der Hinterhand zu haben und sich neu zu bewerben.
Du hast keinerlei Druck.
Du musst nicht versuchen, unbedingt den allen Leuten im Vorstellungsgespräch immer auf Teufel komm raus zu gefallen, dass du einen Job klickst.
Beste Situation, die du jetzt hast.
Ich kann es dir nur empfehlen, dich umzugucken.
Da ist Neba definitiv mehr Geld.
Auch vielleicht dann ein deutlich angenehmerer und besserer und mehr spaßmachender Job drinnen.
Ich kann dir das nur empfehlen.
Also ich bin jetzt seit, sagen wir mal, einem Jahr und zwei Monaten da auf der neuen Arbeit.
Natürlich ist das Gras am Anfang immer ein bisschen grüner, wenn man sich das so anguckt.
Es gibt mittlerweile auch genug Sachen, die mir auch auf den Sack gehen.
Ja, so ist es nicht.
Aber insgesamt kann man das gar nicht vergleichen.
Das ist jetzt Meckern auf viel höherem Niveau, als bei meinem alten Laden.
Plus dazu.
Kommt, dass auch noch mehr Kohle gibt.
Also ich könnte eigentlich insgesamt das nicht besser erwischt haben.
Mehr Geld.
Bessere Laden.
Post Champs.
Mal gucken, ob die Webseite jetzt geht.
Mit dem mit dem Encoding stimmt noch was nicht so ganz, oder?
Mit dem Encoding ist irgendwas kaputt.
Was für einen Header muss man setzen beim Encoding?
Aber die Webseite funktioniert schon mal.
Das freut mich.
Ja, schnell ist was anderes.
Aber das ist.
Das ist normal.
Was?
Ah, Favicon finde ich.
Wie ist denn so?
Ja, weil hier funktioniert es.
Wie ist denn so die Encoding?
Geht's jetzt?
Was ist denn das?
Welchen Header setzt man dann für das Encoding?
Ich will das will das UTF-8 haben, oder?
Ist das nicht der falsche Stringtyp?
Glaube ich nicht.
Das sind einfach.
Das sind ja eins zu eins die rohen Bytes, die da drin sind.
HTTP Header.
UTF-8.
Was muss man da mitschreiben?
Ich weiß es nicht.
Ich weiß es nicht.
Ich weiß es nicht.
Ich weiß es nicht.
Ich weiß es nicht.
Ich weiß es nicht.
Ich weiß es nicht.
Ich weiß es nicht.
Ich weiß es nicht.
HTTP, Header, UTF-8.
Was muss man damit schicken?
Content-Type, Text,combine, transaction-type...
Aha.
Macht der mittlerweile UTF-8 nicht als Default?
Ja, ok.
Ne.
Codec Enzoding ist nur ob es gezippt ist oder so was.
Ne, das nicht.
Bam.
Die Rakete ist am Start, Leute.
Progo.
So, jetzt müssen wir nur noch rausfinden.
index html wie wir wildcard matching machen weil das kann ja nicht sein dass ich für alles einen
eigenen händler ok dann gucken wir doch mal register uri händler wildcard was es da gibt
how to get wildcard in uri wildcard uri match fn für die config uri gibt es nicht uri ach hier uri
match fn ach das ist unter httpd httpd uri match fn und dann wildcard und wie muss das jetzt aussehen
und wie muss das jetzt aussehen
gibt es da vielleicht irgendein beispiel für so
sternchen ok sternchen ok ich würde jetzt erwarten dass das jetzt das ist jetzt funktioniert jetzt
kommt es kommt alles im prinzip auf index html raus was auch nicht so wirklich der weisheits
letzter schluss ist dass alles auf der index html rauskommt wir sollten das vielleicht
schon mal schauen was ist das jetzt das ist das html html html html html html html html html html html
ok ich möchte das ganz unten in ja unten da ist html html html html html html html html html html html html html html html html Hm
damn da ist die rakete ist auch index html jetzt ok wir sollten
wir sollten das aber schon checken ob wir checken ok ich weiß wie wir das machen wie kriege ich denn
die url raus uri hier ok da machen wir einen arduino string draus weil man hat
mehr möglichkeiten haben so und jetzt gucken wir einfach
Wenn die Slash ist oder, ne wir machen das anders, wenn die nicht Slash ist und wenn die nicht Index-HTML ist, dann, wie schickt man hier Fehler?
Äh, Error, äh, Send, gibt es irgendwie sowas wie Send, Send 404, excellent, Send 404 und dann returnen wir, gibt es sowas wie, äh, 404, Error, äh, Not, Not Fault,
Okay, vielleicht auch nicht verkehrt, Quests, ja, das ist gut, jetzt filtert er explizit auf Slash und Index-HTML, der Rest fliegt raus, das ist nice, was, HTTP Code Request, HTTP Code, ne, wo hast du das gefunden?
Gibt es nicht, Request, wir können mal nach Request suchen, Request.
Äh, und wann benutzt man das? Das ist, das ist nicht dafür gedacht zu returnen, oder? Was macht man damit? Das benutzen die, das benutzen die nur, ach so, das ist für Custom Error Messages, das ist für Custom Error Messages, ich glaube wir können das erstmal so lassen, kein Ding, das funzt so.
So, schauen wir mal, also Index-HTML sollte nach wie vor gehen, aber sowas wie, keine Ahnung, Kekse.
W.HTML sollte, jetzt gibt es nicht geben, ja, das ist ja mega nice, auch das, das war jetzt auch ziemlich easy, muss man sagen, bis jetzt, ich, ich bin begeistert, nächste, nächste Herausforderung, heute habe ich tatsächlich noch eine Viertelstunde länger, weil mich das jetzt echt, nächste Herausforderung ist, wie kriege ich eine Svelte Kit, ne, Svelte Kit, weiß ich nicht, ob so eine gute Idee ist.
Wie kriege ich eine Web-Anwendung, das ist normales Welt-Web-Anwendung, gepackaged in meine App rein, als Webseite, machen wir doch mal einen neuen Ordner, das ist ja schon mal schön und gut, aber ich will, ich will garantiert nicht meine Web-Anwendung inline, irgendwie da, inline als HTML reinpasten.
So, ähm, hier.
Starting started, wie ging das hier nochmal, npm create, also, dann machen wir jetzt mal einen eigenen Ordner für die Web-Anwendung, mkdir, das machen wir, würde ich sagen, im Root-Folder hier, oder, äh, nennen wir das mal Web-App, Web-App, create latest, äh, ich hoffe, ich hoffe, das wird schon mit Svelte 5 created, wenn nicht, müssen wir das dann später noch umstellen.
Neue Projektname.
Ah, ne, Moment, Moment, wir brechen, wenn ich das hier so erstelle, Svelte, Svelte-Kit, weder, JavaScript, äh, hier, der ist zu dumm, äh, rm-rf, Web-App, Web-App, dass das den Ordner so nennt, hier ist Svelte, JavaScript, Web-App, ähm, npm install,
äh, ich hab nämlich schon ne Idee, wie wir das machen, Leute, passt mal auf, ich hab nämlich, ich hab im Vorfeld schon ein bisschen was ausprobiert und was nachgeguckt, und zwar, bundeln wir das jetzt, so, npm run dev, gucken wir mal, ob die Webseite an sich funktioniert, ja, okay, das ist die Beispiel-Webseite, ja, die lassen wir mal so, wie sie ist, die probieren wir jetzt mal auf unseren ESP32 draufzukriegen.
Okay.
Und zwar hab ich mir folgendes überlegt, ich hab nämlich was gefunden, das, das, das ist das, was mich auf die Idee gebracht hat, das mal auszuprobieren mit ESP32, ich hab ein Weed-Plugin gefunden, was aus dem kompletten Input ein Single-HTML-File mit allem Embedded erstellen kann, so, und das sieht dann so aus, wahrscheinlich müssen wir uns das erstmal installieren, ja, ne, npm,
wait, soll ich das Richtige kopieren, so, und dann brauchen wir das hier, Single-File, wo ist unsere Config, hier, Single-File, yes, okay, das war's jetzt hoffentlich, npm run build, und jetzt kommt raus, dist, Index-HTML, okay, machen wir das mal auf, Leute,
Localhost, Port 8000, ob's an sich funktioniert, jawoll, Webseite, alles gebundelt in eine Datei, so, wie groß ist die, nicht groß, 19, das ist ja quasi 12, 12k, die müssen wir jetzt auf unseren ESP32 kriegen, so, und ich hab mir überlegt, wir machen im Prinzip genau das gleiche, wie mit den Zertifikaten, wir jagen die durch XXD durch und pipen die in eine Datei, und noch, Leute, wir können das noch geiler machen, wir können das noch geiler machen, wir können das noch geiler machen, wir können das noch geiler machen, wir können das noch geiler machen, wir können das noch geiler machen, wir können das noch geiler machen, wir können das noch geiler machen, wir können das noch geiler machen, wir können das noch geiler machen, wir können das noch geiler machen, wir können das noch geiler machen, wir können das noch geiler machen, wir können das noch geiler machen,
vorher gezippen, dann braucht es noch weniger
Platz in
der Firmware drinnen.
Also, warte mal, gezipp?
Äh,
wie macht man
Level einstellen, minus 9
oder sowas, gell?
Level,
minus 9,
gezipp, minus 9,
Index HTML,
guck, jetzt ist er nur noch 4,0, halb so groß,
Index HTML
gz, so,
okay, Pfeiffer-Time,
xxd, minus i,
Index HTML, Punkt gz,
ja doch, so funzt das,
so funzt das, so können wir das machen.
Hat der ESP nicht eine Storage-Partition?
Doch, kann man anlegen, kann man CSV-Datei
machen und die beliebig vergrößern,
verkleinern. Das Problem ist, wenn man
OTA-Updates machen will,
ist es umständlich, wenn die
Web-Anwendung auf eine extra Partition
liegt. Embedded in der
Firmware ist deutlich besser
fürs OTA-Flashen. Nicht, dass ich
das jetzt auch machen will, aber ich
finde es die bessere Lösung.
Im Endeffekt braucht beides gleich viel Flash-Speicher.
Okay, also,
wartet mal, wartet mal, ich hab eine Idee.
Wir gehen jetzt in unser Generate-Skript
und da,
so, dann haben wir erstmal,
erstmal machen wir den ganzen Zertifikats-Shit.
Dann gehen wir nach
Web-App.
In Web-App machen wir ein
npm-run-build, das wird im Leben
nicht funktionieren, weil es steht hier zusammen,
zusammen Skripte. Dann gehen wir
nach dist.
Dann sagen wir xxd
minus i
index, ne, ne, ne, ne,
als erstes sagen wir gzip minus
9 index
html. Dann
xxd-en wir,
wieso ist das hacky? Das ist die viel bessere
Lösung. Weder für
daheim noch sonst wo, das ist
viel schöner, als
das auf dem File-System zu haben.
Wie willst du ordentliche
OTAs machen?
Wenn du es auf dem File-System liegen hast,
dann müsstest du den Leuten immer
zwei Images schicken.
Oder die Leute zwei Images uploaden lassen.
Oder es irgendwie selbst dir auseinanderfriemeln
im Web-Interface.
Ne, ne, das ist die
viel schönere Lösung.
So, also xxd-index-html.
So, und das, was da
rauskommt, Moment,
Leute, wir sind, passt mal auf,
six-head-time.
Die Datei heißt nicht certs.h, sondern
heißt einfach web-app.h.
Und da kommt alles rein, was man für
das Ding braucht. So, und
jetzt schreibe ich den Output
davon nach, oh fuck,
in welchem Ordner bin ich? Ich bin
in dist, jetzt bin ich in web-app,
jetzt bin ich in
meinem
Hauptverzeichnis.
Warte mal.
Jetzt bin ich in web-app, jetzt bin ich in meinem Hauptverzeichnis.
Da will ich nach main
und da will ich
nach web-app.h.
Hahaha.
Keck, weh.
Jetzt bin ich ja mal gespannt, ob das
Funst, ob das an der richtigen Stelle
rauskommt, man.
Gen.sh
Wo hab ich,
ich hab doch jetzt irgendwas überschrieben,
oder hat das jetzt einfach funktioniert?
Das Funst? Alter,
first try!
Ich weiß gar nicht, welches die Mode ich klicken soll.
Das war ja, das war einfach
viel zu easy.
Easy.
Easy.
Easy.
Easy.
Way too easy.
Ich gebe aber zu, dass das kein schönes
Build-Skript ist. Hier mit relativen
Faden und hoch und runter gespringen. Aber egal,
das Funst erst mal. Okay, und
jetzt tauschen wir in der main
Datei-Source durch web-app aus.
web-app.h
Der Rest hier
genau gleich, der Gram heißt ja gleich.
So, und hier
senden wir jetzt
Index
html
gz
Was?
Unsigned Char ist
inkompatibel auf Type
Const... Alter, was?
Ich caste das jetzt
einfach, ist mir doch egal.
Ist ja nur mit casten los.
Wie, das geht nicht?
Ach ne, es muss ein
Const-Char-Sternchen sein.
Ah, Moment!
Moment!
Das ist blöd von mir.
Moment, das ist super blöd.
Das muss ich umbenennen. Das muss alles Const sein.
Sonst landet das im RAM.
Und nicht in der Firmware.
Im RAM soll das garantiert
nicht landen, meine Webseite.
Das muss
Const sein. Okay,
unsigned können wir...
Ich mache ein seed-read, search
and replace, unsigned
zu const.
Unsigned, moin, rfprogrammer.
Unsigned zu const mache ich.
Okay, kommt noch ein seed hinten drauf.
seed-i
unsigned
durch const ersetzen.
Chatge, so, oder?
Kann man dir nicht ein Parameter mitgeben?
Meines Wissens
nach nicht. Okay, gen.sh
Nice.
Const, jawoll, hat funktioniert.
Excellent, excellent.
Ist undefined?
Und?
Ist es doch.
Hä?
Okay, mein Visual Studio ist einfach nur langsam.
Index, html, gz, Länge.
So, und jetzt?
Ne, Moment, encoding war ja schon
richtig gesetzt. Encoding war doch auf gzip
gesetzt, ne? Oder wie
macht man denn http-header gzip?
Welchen Header muss man da setzen?
Content
encoding.
Das, das war schon auf
gzip, habe ich doch gerade gesehen.
Okay, und jetzt?
Flash. Jetzt bin ich...
Oh, fuck, was?
Jaja, okay, was ist denn nur mit casten
los?
Das ist ein const-jar und das hier ist
ein const ui... Alter, what?
Das ist doch, das ist doch exakt der gleiche
Kram. Ich...
Das wird jetzt gecastet, fertig.
Hab Bock da was anzupassen.
So. Okay,
prage, prage.
Was auch immer ihr hier wieder misst.
kekwait
serz.h
löschen.
Hast du recht, ja.
Wo hab ich's denn?
Naja, serz.h löschen hab ich.
Achtung, ACHTUNG!
Okay, das liegt jetzt
bestimmt am encoding, dass der nicht
checkt, dass das gzip ist, oder?
Der liefert
gzip als
Plaintext aus, also doch.
Encoding.
Content Encoding.
Äh, wie setze ich überhaupt?
Header. Gibt das da irgendwas?
httpd? Header?
Header?
Ah.
Header. HEADER!
Warum? Das kann mir einfach...
Ich... Wisst ihr, ich versteh das nicht.
Warum stehen
C-Entwickler so unglaublich auf Abkürzungen?
Die schreiben auch nicht
address aus, die schreiben addr und b.
pdr und sowas.
Es ist doch nicht so, als hätten die Rechner heute irgendwie
weil, kompiliert macht's eh keinen Unterschied.
Header. Header.
Hier. RESP
SET HIDDR.
Denk ich mal.
Warte mal, mein Autocomplete tut grade nicht.
Request.
Und jetzt? Header Field.
Content Encoding.
Leute, ist das
Pflicht, dass man das großschreibt?
Ich scheiß drauf, wir machen so, wie Mozilla das
sagt. Gzip.
Okay.
Jetzt schauen wir mal, ob das jetzt funzt.
Java-Entwickler, die
die Strategy
Factory Singleton
Bilder
Callback.
So, passen wir auf. Und jetzt?
Handshake, Handshake.
Da ist die Webseite.
Bam!
Direkt ausgeliefert vom
ESP32.
Und das
JavaScript funzt auch. Okay, das Logo ist nicht
geimbedet.
Oieiei.
Welch heftige Effekte hier in der
Standard-Demo-Seite drin sind.
Easy.
Mein ESP32 liefert über �
eine gebundelte
Single Page Ablication aus.
Das ist extremely nice.
Vielleicht ein bisschen durch die Brust ins Auge
mit diesen
XGD-Hacks,
aber ich finde das viel schöner, als das
als so ein extra file system zu schmeißen.
und von der idee was das jetzt also für die webseite kommt noch einiges dabei bis das
wirklich funktioniert so wie ich mir das vorstelle apparitions tabelle das mal das
nächste mal und das display und so und den button müssen wir noch also dass bis das wirklich so tut
wie ich mir das vorstellt auch noch ein bisschen ja sehr nice also index wird ausgeliefert gucke
mama wie kriege ich in dieses hässliche kann man kann man irgendwelche ok pass mal auf iconify wir
suchen uns jetzt ein schönes logo dafür gibt es ein schönes logo für den esp esp 32 sp es gibt
das expressive logo aber ich hätte ich hätte gerne was mit farbe gibt es so was wie controller
ich weiß wir suchen nach dem
chip das mal nach chips suchen ja sowas hier das da guck mal das doch hübsch als svg wollen wir
das ganze haben so kann man aus einer index html ein favicon irgendwie setzen geht das sowas hier
favicon embed in html ja jetzt dass das geht weiß ich auch inline svg als favicon ja genau
so was will ich haben
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
okay
okay
okay
okay
you can encode svg with this tool okay das machen wir das müssen wir auf jeden fall machen okay
will encoded svg und jetzt so hier okay nice ins html rein beim mein svg kopieren obskurer kram hier
aber erstmal in ordnung so
okay
das svg können wir löschen das brauchen wir nicht mehr so und jetzt sollte ich auch ein favicon icon gleich auf meiner webseite haben ne moment moment moment wir müssen erstmal generaten oh shit
äh
vit svg
ach ja ich kack noob jetzt ich hab das ja gelöscht
ähm
dann muss ich mal kurz die default seite von denen aufräumen hier
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
äh
Moment
Ja ich bin richtig jetzt push
Ist auch 10 plus plus das meiste zumindest so und jetzt
Landet der code auf meinem github ja aber ohne jeglichen support
Und ich muss die datei exkluden wo wir gerade dabei sind aber hier main geht geht
Ignore auf jeden fall main wie heißt die datei
secret
Punkt h die muss exkludiert werden war schon mal geht in it an der stelle geht status
Ok wir wollen auf jeden fall diesen ganzen krempe exkluden den man
Nicht haben will also lassen wir überlegen als wir wollen auf jeden fall exkludieren dass man kurz abbrechen
Wir wollen auf jeden fall exkludieren
sdk config
Ja so blöd klingt
Dass das will man exkluden man möchte nur die defaults die die config defaults drin haben
Wie es code wollen wir auch auf jeden fall exkluden
manage components auf jeden fall auch die pendency log auch
bild auch
doch mal gucken was jetzt so übrig bleibt
Nicht mehr so viel gucken ob die webseite jetzt funzt
nice und
wir haben wir haben den pfaffikon leute
Und dementsprechend macht der browser jetzt auch kein extra pfaffikon request mehr
Das ist sehr nice gemacht das gefällt mir sehr gut
danke für die subs leute ich habe bestimmt wieder was übersehen
sehr nice
ok so jetzt haben wir alles exkludiert was es so gibt
Der rest ist okay geht
Oh shit ja doch web app passt doch alles also wir inkluden das dass das
Keine secrets inkluden auf jeden fall
sdk config default so und jetzt kommt im prinzip die ganze web app die kommt ja schon mit einem guten gitignore file als
default
Ja git commit
A-m init
Das ging jetzt echt relativ
easy eine ahnung wie man eine gute config für zsh her bekommt ja du gehst auf mein github und guckst in meine config rein
wobei die nicht top aktuell ist
da hast du alles zumindest fast alles
Und der prompt ist starship
Was hast du heute gebastelt ich habe neuen esp 32 s3
Und für den haben wir heute gebastelt dass der sich im wifi verbindet
dann einen web server aufmacht
einen
tls https web server
zertifikat einliest
und dann auf
slash und index html
Eine gzip encodete web anwendung ausliefert
Die wir hier erstellt haben
Die nicht so viel enthält aktuell aber wie ihr seht es ist eine vollständige web anwendung mit der man jetzt alles machen könnte wenn man denn möchte
Das ging erstaunlich problemlos bis jetzt oder findet ihr nicht auch das war jetzt das hat das hat wirklich erstaunlich wenig probleme gemacht
Und das liegt nicht daran dass es der esp 32 s3 ist das wird mit jedem anderen auch so
funktioniert
Vielleicht sollten wir den web server noch in der eigenes in ein eigenes file packen
Ob das wäre nicht verkehrt
Ich glaube packen dass uns wir packen den werden packen die web server geschichte mal einen eigenen in eigenes file weil das wird sonst ein bisschen
unübersichtlich hier weil das wird ja nicht dabei bleiben da kommt ja noch mit der kommt ja noch mehr dazu ja
Ich muss wifi credentials setzen können über das web interface dazu brauche ich dann post request das muss ich registrieren
Das wird schon wird sonst ein bisschen
web web server punkt h
Und da kopieren wir das jetzt mal kurz rein alles was wir da haben wie bauen wir das jetzt am besten auf
Jetzt jetzt kommt der eklige c++ parte heute bettke fünf minuten noch dann bettke
Wir machen jetzt eine klasse dafür
Das passt schon dann in klugen wir hier nämlich
web app punkt h und das da
Und das kommt hier raus
Es kommt hier raus
Er muss ja auch jetzt muss man hier oben wieder hin machen weil es
Jetzt c++ legacy schritt ist das brauchen wir eine klasse
Wo wir das rein schmeißen ich würde sagen wir machen eine klasse die heißt klar
Ok leute ich weiß was wir machen das war alles so easy heute das heißt eindeutig
easy web server
Dann schießt wann stehst du morgen auf ich muss morgen nicht arbeiten
Lieber template wie was template
easy web server
Und da packen wir das jetzt einfach
Rein
Würde ich
Würde ich sagen kann man das kann man auch glaube ich alles in line da rein packen
Ach so template jetzt weiß ich was du meinst
Hier generic kam das macht jetzt an der stelle gar keinen sinn also kommt konstruktor brauchen
Weiß ich nicht ob wir den brauchen gucken wir gleich mal vielleicht
so
jetzt
Machen wir mal so was wie wollt listen
https
Da kommt jetzt dieser ganze schmodder hier rein
erstmal will sich bis auf weiteres
Perfekt easy
was hat er hier für
anschnitte finition not found
Ja da ist doch hier
Ich sehe sie doch
Aber mal gucken ob der krempel überhaupt noch kompiliert jetzt bestimmt nicht
Am moment ich habe es ja auch gar nicht eingebunden hier
Aber hier easy
Include web server punkt h es gibt normalen web server punkt h den bringt man dann durcheinander jetzt brauchen wir easy web server
mal gucken ob das jetzt funzt
Bild nein natürlich nicht
Was
Was
Was
Redefinition
Habe ich hier oben
Okay
Es ist c++ legacy shit verstehe
Warum wir mit op anfangen da weil sowas
Angenehmer zu benutzen ist später
Wenn man op an der stelle benutzt wo es sinn macht
Ist doch gut
Es wird ja bestimmt nicht bei der methode bleiben denke ich mal
Und
Wahrscheinlich auch noch eine ganze reihe von
Komplexer werden
Ich glaube
Das hier schieben wir mal
Hier raus
Weil das werde ich wahrscheinlich noch vermutlich wobei bei der config bin ich mir nicht so sicher wahrscheinlich aber das server händel
Könnte ich wetten
Das brauche ich noch mal woanders wobei
Weil so lange ich nicht woanders brauche kann ich es auch erstmal hier lassen
So und jetzt sagen wir einfach an der stelle web server listen html
Listen html
Listen https
Aber das sagen wir natürlich
Nachdem
Wifi
Verbunden wurde
So
Jetzt flashen wir das ganze noch mal
Prinzipiell würde der kram noch überall laufen also auch auf dem raspberry pi
Wenn du eine arduino implementierung für ein raspberry pi hast
Keine ahnung ob sowas gibt
Ich weiß nicht ob sowas gibt
Dann hast du vielleicht chancen dass es darauf läuft ja
Was ist auf jeden fall nicht gibt auf dem raspberry pi
Sind die ganzen esp spezifischen sachen für
Für wifi und flash und sonst was
Aber das hier ist relativ generic noch
Vielleicht gibt es eine
Gibt es eine arduino implementierung von raspberry pi falls ja was was durchaus sein kann ja
Dann dann würde das würde das funktion wobei das hier ist
Das hier ist low level esp
Library das hat nichts mit arduino zu tun
Das ist esp zeug das wird auf
Auf dem esp nicht funktionieren
So findest du es noch
Yep nice findest du es noch
Guck mal unsere main ist gleich etwas übersichtlicher
Und nachdem der web server definitiv noch komplexer wird in nächster zeit
Würde ich sagen ist das schon der bessere ansatz das in eine eigene datei zu stopfen
Mega nice
Sehr erfolgreich gestream sort
Ne moment moment
Also
In dem fall ist mit arduino ja bloß die standard arduino library gemeint
Da kann es durchaus sein dass das irgendjemand von raspberry pi schon programmiert hat
Dann kannst du solange du nur abhängigkeiten auf arduino kram hast
Die auch auf dem raspberry pi laufen lassen
Was nicht geht ist
Auf dem raspberry pi
Sachen aus der
Espressif standard library laufen zu lassen
Das ist nicht bestandteil von arduino library
Das ist normalerweise
Hier das ganze http zeug
Das ist vom hersteller des microcontrollers bereitgestellte software
Die wird es garantiert nicht für den esp 32 nach implementiert geben
Aber ob es für raspberry pi eine arduino implementierung gibt das weiß ich nicht
Wenn es die gibt kannst du zumindest diese basic sachen hier
Benutzen
Benutzen
Auf dem raspberry pi
Ich hab keine ahnung ob es das gibt
Es ist natürlich ein bissl
Weird champ sagen wir mal
Weil auf dem
Weil dieses ganze low level gpio zeug und so
Das muss schon ein bisschen anders gemappt werden
Auf dem microcontroller bist du halt die einzige software die läuft
Auf dem raspberry pi wärst du im endeffekt
Ein weiterer prozess
Unter linux
Wobei es ja auch bare metal raspberry pi geschichten mittlerweile ist
Wobei es ja auch bare metal raspberry pi geschichten mittlerweile ist
Wobei es ja auch bare metal raspberry pi geschichten mittlerweile ist
Aber wie gesagt kann durchaus sein
Dass es sowas gibt
Wie ich das umsetzen würde mit dem raspberry pi
Gar nicht
So
Ich würde nicht arduino nachbauen
Ich würde einfach
Das was ich machen will
In irgendeiner normalen programmiersprache bauen
Wo dann die binaries auf dem raspberry pi laufen
Wo dann die binaries auf dem raspberry pi laufen
Zum beispiel dotnet
Da würde ich mich nicht mit c++ und arduino rum ärgern
Zum Beispiel mit c++ und arduino rum ärgern
Zum Beispiel mit c++ und arduino rum ärgern
Also wenn das was ich machen will im endeffekt
Ein webserver ist
Der eine webseite ausliefert
Auf der ich dann
Sensorwerte mir angucken kann
Sensorwerte mir angucken kann
Dann würde ich einfach
Eine ganz normale dotnet anwendung machen
Die nen webserver öffnet
Und mir sensorwerte anzeigt
Und mir sensorwerte anzeigt
Also das macht eigentlich keinen sinn
Ich meine ich könnte mir durchaus vorstellen
Dass einer eine minimal arduino implementierung
Mit trick 17 von raspberry pi gebaut hat
Aber es macht nicht so viel sinn
Aber es macht nicht so viel sinn
Weil beim raspberry pi hast du linux drunter
Du müsstest das dann alles irgendwie mappen
Und sonst wie
Ja der raspberry pi pico
Hat ja auch mit dem raspberry pi nichts zu tun
Hat ja auch mit dem raspberry pi nichts zu tun
Der raspberry pi pico ist ein ganz normaler microcontroller
Auf rp2 irgend etwas basis
Auf rp2 irgend etwas basis
Und der raspberry pi ist ein vollwertiger arm linux computer
Und der raspberry pi ist ein vollwertiger arm linux computer
Kann ich nicht auf dem pi auch einfach die c arduino libraries
Kann ich nicht auf dem pi auch einfach die c arduino libraries
Na ja die c arduino libraries gibt es ja gar nicht
Na ja die c arduino libraries gibt es ja gar nicht
Es gibt so einen
Minimal default arduino funktionsumfang
Minimal default arduino funktionsumfang
Sag mal so
Du brauchst eine implementierung
Du kannst die header files nehmen
Aber irgendeiner muss
Die eigentlichen funktionen
Programmieren für die jeweilige
Zielplattform
Und wenn deine zielplattform der raspberry pi ist
Dann wird es keine
Falls es nicht schon irgend jemand mal gemacht hat
Wird es keine implementierung
Von raspberry pi geben
Weil es wenig sinn macht
Die ganzen low level sachen
Wie gpi aussetzen
Das musst du alles ummappen auf linux funktionen
Und was gewinnst du dadurch
Im endeffekt nichts
Weil du wahrscheinlich alles was du in arduino
In c++ machen könntest
Auf microcontroller um ein vielfaches
Easier machen könntest
Mit einfach einer normalen
Programmiersprache mit einem normalen
Framework für einen normalen computer
Also warum sollte ich mich mit
Einem webserver
Unter arduino rumschlagen
Wenn ich auf dem raspberry pi einfach
Eine ganz normale .net asp.net
Webanwendung machen kann
Es macht einfach keinen sinn
Also mich würde nicht wundern wenn einer
Nicht mal aus versuchszwecken
Irgendwie eine minimal arduino implementierung
Hätte
Aber ich stell es mir auch an vielen stellen
Schwierig vor
Weil du eben keinen direkten zugriff auf die hardware hast
Also diese ganze sache mit
Speichere das im flash
Das geht so ohne weiteres gar nicht
Jetzt musst du alles gucken ob du das irgendwie
Auf irgendwelche linux funktionen mappen kannst
Sodass die software die da drauf läuft
Immer noch denkt
Es wäre ein arduino
Ja ich sag nicht das es nicht geht
Aber es macht wenig sinn
Also wenn du c libraries findest
Könntest du die verwenden
Aber ich glaube ich bezweifle das die existieren
Also ich mein
Was du machen könntest
Mal angenommen jemand gefällt dieses
Handling von wifi
Und er möchte das auch auf dem raspberry pi so haben
Da fängt es ja schon an mit
Das du als normaler user das gar nicht machen könntest
Also müsstest du das erstmal als root laufen lassen
So du könntest ohne probleme
Eine c++ library programmieren
Die
Wifi handling
Mit diesem interface macht
So also quasi mit diesen
Methoden
Das müsstest du dann halt unter der haube
Gegen irgendwelche
Linux wifi treiber
Körnel aufrufe mappen
Aber du könntest eine c++ library bauen
Die für raspberry pi wifi vom handling
Her identisch ist hierzu
Garantiert
Die frage ist halt nur warum
Es gibt ja schon fertiges wifi
Ja
GPIOs beispielsweise GPIOs
Du könntest auch
Eine c library bauen
Die die
Raspberry pi GPIO pins mit
Digital write und sowas
Ich gehe sogar ganz stark davon aus
Das teile
Bestimmte arduino sachen
Tatsächlich portiert sind
Auf dem raspberry pi
Zum beispiel das ganze
I2C handling
Diese one wire bus
Geschichte
Da habe ich mir eingesehen
Zu haben das dort die
Grundlage die grundlegende c library
Tatsächlich zwischen
Arduino und der raspberry pi
Geschichte nahezu identisch ist
Zumindest gibt es mehrere implementierungen
Es gibt welche die sind sehr ähnlich
Zu der arduino geschichte
Wobei es offiziell auch nicht dabei ist
Also hat halt irgendeiner
I2C handling library programmiert
Und hat dann im endeffekt geschaut
Das die mit ganz vielen ifs
Drinnen lauffähig ist
Und die fein lauffähig ist
Sowohl auf raspberry pi als auch auf arduino
Aber man kann die zwei sachen
Also man kann den esp32 s3
Auch wenn er ordentlich power hat
Man kann den
Nicht wirklich vergleichen mit dem raspberry pi
Du kannst den mit dem raspberry pi pico
Vergleichen
Nehmen wir mal den raspberry pi zero
Und den da
Die haben ziemlich genau den exakt
Gleichen formfaktor
Aber sind grundlegend unterschiedliche
Kisten
Raspberry pi zero
Nehmen wir mal zero w2
Ist ein ganz normaler
Arm linux computer
Da läuft ein betriebssystem drunter
Mit multitasking
Und allem was man von linux so kennt
SSH login
Systemd
Alles mögliche was man da so hat
Ein vollwertiges linux
Der esp32 s3
Ist im prinzip erstmal
Fast nur nagische hardware
Ja da läuft
Standardmäßig ne firmware drauf
Die kannst du aber überflaschen
Und dann bist du
Hast du die nagische hardware
Du hast nur ganz wenige sachen
Auf diesem ding drauf
Die da out of the box drin sind
Und irgendwas machen
Also du hast da nichts drunter
Du hast da kein vollwertiges betriebssystem drunter
Du hast in dem standard sdk
Hast du ein paar
Funktionen drin
Die
Betriebssystem ähnlich sind
Du hast zum beispiel sowas wie
Du kannst nen asynchronen thread starten
Auf ner zweiten cpu
Weil das ding hat ja 2 cpus
Du hast nen task scheduler drinne
Wobei man den auch ausschalten kann
Das kannst du in linux nicht
Und du kannst als linux user nicht sagen
Ich schalte mal den task scheduler aus
Das kannst du nicht mal als root machen
Da kannst du das machen
Also das esp idf sdk
Das basiert unter der haube auf
ReRTOS
Und das ist nochmal
Ne weitere low level c library
Die so
Grundlegende
Betriebssystemfunktionen zur verfügung stellt
Die man so braucht
Ja wie zum beispiel task switchen
Ein task scheduler
Und sowas
Aber das ist nicht so das das drauf läuft
Und dann startest du seine software da drauf
Ne das muss alles in deiner firmware
In deinem binary drin sein
Also das eine ist ein vollständiger arm computer
Mit linux drauf
Das ist ein nackiger hardware microcontroller
Obwohl der formfaktor das gleiche ist
Kann mans nicht wirklich miteinander vergleichen
Wenn du mir sagst
Was ich hab grad nicht so viel
Also ich hab
Mein kreisel grind mmo
Was fällt mir sonst noch so ein
Ich bin für ideen offen
Ja weil
In letzter zeit
Hatt ich selbst nicht so
Die
Kreativsten einfälle
Ich meine jetzt nicht zum spielen
Auch irgendwas anderes
Wir könnten beispielsweise mal wieder
Ali express einkauf stream machen
Irgendwelche
Was können wir machen
Was steht
In nächster zeit wieder an
Oh ne da komm ich jetzt auch nicht mehr rein
Drei vier fünf jahre nach release
Ja poe 2 guck ich mir
Auf jeden fall an wenn das raus ist
Das wird mal wieder Zeit
Haben wir diesen monat noch nicht gemacht das ist richtig
Kommt noch dlc für baldur's gate 3
Ne die haben doch gesagt es wird keinen mehr geben
Ja stimmt
Da müssten wir eigentlich echt mal wieder reingucken
Lull
Runde esp
Nicht battle nicht esp
Runde battlefield rage
Wobei ich habe gehört
Das ist meines immer noch
Ein schatten seiner selbst
Von battlefield
Aber das zumindest viele grundlegenden
Sachen mittlerweile halbwegs funktionieren
Es ist halt immer noch kein gutes game
Ja es wird echt mal wieder
Zeit
Battlefield
League
Ja ja
Okay was sagt die game pro
Nix
Nix
Ja
2025
Ja das dauert noch
Leute
Ich hab da die übersicht verloren
Was wird hier so gemacht
Ich bin fertig für heute
Ich hab mir ein esp32
S3 gekauft
Und wir haben ein
Webserver
Mit https drauflaufen lassen
Der
Eine swelled web anwendung
Ausliefert
Da steht nicht viel drauf aber
Es funktioniert aber es hat eine favicon
Und das ganze hat ziemlich easy funktioniert
Und wir haben ein bisschen
Eklige bash scripts gescriptet
Full stack devops system integration
Was willst du sonst noch so dabei haben
Bis zack full devops stack
Integrations developer
Oder
Einfach alles zusammen
Win bis zack devops
Full stack integrator
Agil sind wir alle
Leute
Agil muss das mindset sein
Wisst ihr doch
Man muss einfach in der richtigen
High performer stimmung sein
Also
Ich mach den controller mal ab
Boah gut
Chat ich hab morgen gar nicht so viel vor
Ich muss ja morgen nicht arbeiten
Ich werd morgen meine runde
Entspannt
Erholungslauf machen
Geh ich mal davon aus
Dass das angesagt
Wobei heute hab ich den ganzen tag nix gemacht
Nach der großen runde gestern
Ich muss mal kurz auf meine
Garmin uhr gucken
Wo auch immer die ist
Und ich muss mal kurz auf meine garmin uhr gucken
Oh ich glaub die liegt noch in der dusche von gestern
Mal gucken was
Der trainingsplan so sagt
Aber ich geh davon aus das morgen irgendeine lahme runde ist
Ich werd morgen meine
Runde rennen hier
45 minuten oder so
Geh davon aus das nix großartiges
Anstrengendes angesagt ist
Und danach werden wir weiter progress
Stells machen hier an der kiste
Das macht echt bock
Das macht vor allem auch bock weil es so easy bisher
Ohne probleme funktioniert hat
Ich hab den gigachat schneller sprint
Nein sprint er nicht
Gestern hab ich fast 14 km gerannt
Mit ungefähr 6min 30km pro kilometer
Mit ungefähr 6min 30km pro kilometer
Das ist gar nicht so schlecht
Das ist gar nicht so schlecht
Das ist zwar nicht wirklich gut
Aber es ist gar nicht so schlecht
Welche app nutzt du fürs fahrrad fahren
Komoot
Für die streckenplanung
Und als navigation
Ich navigier viel lieber mit dem smartphone als mit meinem garmin
6 pack
So einfach ist es dann doch nicht
Aber ich hab abgenommen
Noch ein paar kilo mittlerweile
Wie viel insgesamt jetzt
108,5
Hatte ich
Mal peak
Und
Jetzt ja sowas um 88
Also bisschen über 20
Minimal über 20 kilo
Max hast du deinen frankfurter firmenlauf überlebt
Ja
Ich hab sogar ein bild gepostet davon
Guck da
Hat sich ein bisschen gestaut
Wir waren erst nach 8 minuten am start
174
Position liegt
Fuck
Jetzt ist raus Leute
Da war ich hier da genau hier
Ja richtig nice
Fahrrad fahren
Ist wirklich ne nice geschichte
Das ist anstrengend genug
Das du nicht auf blöde ideen kommst
Und das ist
Nicht zu gut
Zu anstrengend
Das du nicht so in ruhe vor dich hin denken
Und radeln kannst
Fahrrad fahren ist super entspannt
Es gibt kaum was was so entspannt ist
Beziehungsweise so
Befreiend wirkt
Wie fahrrad fahren
Einfach 2 stunden draufsetzen
Ne runde fahren
Und danach ist eigentlich wieder wie als hättst du gar nicht 8 stunden vorm rechner gesessen
Oder länger
Länger vorm rechner gesessen
Und danach kannst du noch einmal 8 stunden vorm rechner sitzen
Und dann muss man auch irgendwann mal
Schlafen
Schlafen ist ein guter stichpunkt
22 Uhr 50
Ich wollte eigentlich schon vor ner ganzen weile ins Bett
Morgen wird weiter gebroggert
Wir hören uns
Bis denn
Aber hier Michael Fuchtspilian
Richtig nice
75 Kilo
Ich habs gar nicht gecheckt als du das geschrieben hast
Ich hab gedacht du bist jetzt auf
Auf 75 Kilo
Du hast 75 Kilo insgesamt abgenommen
Ja das ist echt heftig
Ganz aufhören zu essen ist natürlich auch
Vielleicht nicht so gut
Aber ich geh mal davon aus das das schon
Im Rahmen passiert ist
Sonst hättest du jetzt andere probleme
Also das ist echt heftig
75 Kilo
Ich bilde mir ja schon was auf meine knapp über 20 Kilo ein
Aber 75 ist nochmal ne ganz andere Hausnummer
Aber 75 ist nochmal ne ganz andere Hausnummer
Guck mal du warst schwerer als ich
Und bist jetzt leichter als ich
Nicht schlecht
Ne
Ich kann nicht rechnen
Oder?
Ne ich kann nicht rechnen
Ne doch du bist leichter als ich
Ja bist du leichter als ich
Als ich
Ich wieg 88
Ja du hast deutlich schwerer angefangen
Und bist jetzt leichter als ich
Das ist doch richtig richtig pock
Guck mal
Sogar der Chat ist stolz auf dich
Egal ich geh jetzt was essen Leute
Äh
Das war
Das war ein Satz der rauskommt
Wenn man kein Gehirn
Anschaltet beim sprechen
Ich geh nicht was essen
Ich geh schlafen
Ich geh jetzt was essen
Ich geh jetzt was essen
Das ist mein Standardspruch Sonntags
Ja aber Sonntagsmittag nicht Sonntagsabend
Jetzt ist Wettke angesagt
Knudel mit Lachs
Ne heut gab's Spaghetti mit Tomatensauce
Ne heut gab's Spaghetti mit Tomatensauce
Wettketime bis denn Leute machts gut
Z temporarily
Ne alte
Schon
Mit
Welchem
Teil
Nein
Untert milligrams
gjorde
wurde
Was
Wird
das
aus
Lachsen
etwas
