Das wäre nichts mit komplettem Text-to-Speech-Stream.
Das wäre nichts mit komplettem Text-to-Speech-Stream.
Das wäre nichts mit komplettem Text-to-Speech-Stream.
Das wäre nichts mit komplettem Text-to-Speech-Stream.
Das wäre nichts mit komplettem Text-to-Speech-Stream.
Das wäre nichts mit komplettem Text-to-Speech-Stream.
Das wäre nichts mit komplettem Text-to-Speech-Stream.
Das wäre nichts mit komplettem Text-to-Speech-Stream.
Das wäre nichts mit komplettem Text-to-Speech-Stream.
Das wäre nichts mit komplettem Text-to-Speech-Stream.
Das wäre nichts mit komplettem Text-to-Speech-Stream.
Das wäre nichts mit komplettem Text-to-Speech-Stream.
Das wäre nichts mit komplettem Text-to-Speech-Stream.
Das wäre nichts mit komplettem Text-to-Speech-Stream.
Das wäre nichts mit komplettem Text-to-Speech-Stream.
Das wäre nichts mit komplettem Text-to-Speech-Stream.
Das wäre nichts mit komplettem Text-to-Speech-Stream.
Das wäre nichts mit komplettem Text-to-Speech-Stream.
Dabei muss man dann noch das hier abspielen.
Oh, oh mein Gott.
Äh, ich bin kaputt, ey.
Aber wir müssen jetzt weitermachen.
Also, weiter.
Okay, ähm.
Wo sind wir stehen geblieben?
Hier.
Und zwar.
Erstmal den Kram ausmachen.
Wir wollten uns einzelne Größen speichern können.
Das heißt.
Wir brauchen jetzt erstmal.
Muss ich mal kurz in mich gehen.
Ach, kurz, kurz, äh.
Meinen inneren Progress anschalten.
Also.
Wir wollen hier.
Dort, wo wir quasi das Resizen an- und ausschalten.
Hier wollen wir im Endeffekt folgendes sagen.
If.
Ja, if, ähm.
Resize wurde ausgeschaltet.
Müssen wir mal gucken, wie wir das rauskriegen.
Das ist übrigens auch so eine Sache.
Das kann ich prinzipiell nur empfehlen, ne.
Wenn ihr an der Stelle seid, wo ihr schon wisst.
Und das ist ja eigentlich der seltenere Teil.
Von programmieren, ja.
Wo ihr schon wisst, wie was aussehen muss.
Und euch fehlen noch so ein paar Sachen.
Wo ihr nicht genau wisst, wo die herkommen.
Oder wie ihr die machen wollt.
Dann schreibt schon mal das hin.
Was eurer Meinung nach klar ist und Sinn ergibt.
Ja, zum Beispiel.
Ich weiß noch nicht genau.
Wie ich an der Stelle mitkriege.
Ob Resize ausgeschaltet wurde.
Keine Ahnung.
Weiß ich noch nicht.
Aber wir können sagen.
Wenn Resize ausgeschaltet wurde.
Dann wollen wir folgendes machen.
Und zwar, wenn Resize ausgeschaltet wurde.
Dann wollen wir.
Ja, dann wollen wir uns die Position speichern.
Wollen wir hier irgendwie sowas wie getPos.
Dann brauchen wir hier noch.
Dann brauchen wir noch die MemeID.
Angezeigt wird.
Also sprich die, die gerade im Overlay ist.
Und danach.
Setzen wir in diese Meme.
Also wir machen uns jetzt mal.
Stellvertretend hier ein leeres.
Dass wir es beschreiben können.
Also hier drinnen wollen wir ja quasi.
Wenn wir es haben.
Dann sagen.
Irgendwie getPosition.
Wollen wir als erstes haben.
Und dann wollen wir irgendwie.
Meme, keine Ahnung.
Position uns speichern.
Ja, also sowas wie x.
Gleich posX.
Oder irgendwie sowas in der Richtung.
Ja, sowas wollen wir machen.
Also jetzt müssen wir uns mal überlegen.
Wo kriegen wir denn die ganzen Sachen her?
Ob Resize ausgeschaltet wird.
Kriegen wir glaube ich relativ einfach.
Raus, wenn wir in unserem Desktop Programm.
Einfach anstatt eine interne Private Pool Variable machen.
Für Resize, dass wir dann einfach sagen.
Wir machen die Public und benennen sie ein bisschen um.
Und zwar in.
IsResizing kann ich richtig schreiben.
Resitzing jawoll.
Und wir machen daraus ein Property.
So, dann ist das nämlich dann ganz gut.
GetSet und wunderbar.
Das heißt an der Stelle.
Kriege ich jetzt schon mal raus.
Fuck, wo war ich denn jetzt gerade?
Ja, da müssen wir hin.
Das heißt an der Stelle.
Kriege ich jetzt schon mal raus.
Desktop is Resize.
Wie verschrieben?
Ach, Public sollte man das ganze natürlich auch noch machen.
Anstatt Private.
So, und dann sage ich jetzt.
IsResizing.
Not.
Also sprich, wenn nicht mehr Resize an ist.
Also sprich, wenn Resize ausgeschaltet ist.
Dann speichern wir uns die Koordinaten, die gesetzt wurden.
Das heißt, wir brauchen hier rein auf jeden Fall noch die ID.
So wie hier auch.
Sprich von dem Bild, was gerade im Overlay drin ist.
Und dann machen wir uns Visual Studio Code auf.
Für das Frontend.
Moin, Sibaro.
So, da haben wir hier unser Geschwubbel.
Von gestern noch drin.
Machen wir mal Fullscreen.
So, und irgendwo hier sagen wir Toggle Resize.
Und da sagen wir nicht einfach Toggle Resize.
Sondern wir übergeben ein Argument.
Und zwar Visible Item ID.
Das ist das Bild, was gerade im Overlay ist.
Das heißt, an der Stelle reicht es jetzt schon, wenn wir den Knopf drücken.
Und wir kriegen hier im Backend die Information drüber.
Was wir vorher vielleicht noch machen sollten ist.
Wir sollten gucken, ob der Krempel irgendwie gesetzt ist.
Und nur wenn der Krempel gesetzt ist.
Weil es könnte ja sein, dass kein Bild auf ist.
Machen wir was.
Sonst passiert wahrscheinlich nichts.
Aber wir wollen keinen Rahmen anzeigen.
Einfach so, weil wir einen Rahmen anzeigen können, wenn nichts da ist.
So, und jetzt kriegen wir nämlich die ID hier schon wieder mit rein.
Das heißt, jetzt brauche ich hier den Platzhalter gar nicht mehr.
Sondern kann sagen, aus meinem Datenbank-Kontext will ich das Item mit der ID.
Was passiert, wenn es die ID nicht gibt?
Dann gibt es ein Exception und der Request kackt ab.
Kann nicht mitleben.
Kann zumindest keiner was anstellen.
Was eh keiner kann, weil es nur lokal läuft.
So.
Oh, ich brauche was zu trinken, klar noch.
Habe ich noch nicht erzählt.
Leute, die auf Twitter am Start sind, wissen es wahrscheinlich.
Aber, nochmal hier für die Leute, die nur auf Twitch und YouTube oder so am Start sind.
Am Start sind heute auf dem Heimweg.
Ist ein Typ fast von der Brücke gesprungen, wo ich über die Brücke gelaufen bin.
Wenn man jetzt feedet.
Wenn man jetzt fies ist, könnte man sagen, das lag bestimmt an der Diablo 3 Mobile Ankündigung.
Aber der sah nicht so aus, als interessierte er sich für Diablo Mobile.
Und, also ich bin auf der anderen Seite.
Ich zeige euch das einfach mal.
Wartet mal, ich zeige euch das mal.
Ich zeige euch mal, wo das war.
Übrigens wusstet ihr, dass ConCraft da eine eigene Pizza hat?
Die sieht hässlich aus und eklig aus.
Guckt euch mal das Bild davon an.
Nein, nein, das ist die schwarz.
Das ist eine schwarze Pizza.
Mit Aktivkohle.
Ich meine, man kann den Öko-Wahnsinn auch weiter treiben.
Unter meinen Brücke.
In der Pizza wurden Plastikstücke gefunden.
Ich weiß.
So, ich komme vom Willy-Brandt-Platz.
Hier.
Ich komme vom Willy-Brandt-Platz.
Und bin hier runter gelaufen, Richtung Südbahnhof.
Das ist hier unten.
Über die Texthorststraße.
Ne.
Also, hier.
Wir machen mal das Satellit an.
Zoomen wir da mal rein.
Das kennt ihr übrigens schon, dieses Feature.
Kennt ihr das schon?
Dass man so krass 3D machen kann, jetzt in Google Maps.
Ja?
Kennt ihr das schon?
Das ist nicht einfach nur noch flach.
Das ist jetzt dreidimensional.
Und das ist vor allem für Deutschland ganz gut.
Ich meine, das sieht halt schon ein bisschen so Apokalypse-mäßig aus.
Aber, naja.
Das ist vor allem in Deutschland ganz gut.
Weil.
Da gibt es ja kein Streetview mehr.
Weil sich in Deutschland alle darüber aufgeregt haben.
Der Moon Eater fragt.
Was?
Ich schaffe es nicht, über Firebase gescheit Push-Notifications zu versenden.
Ich habe Firebase noch nie verwendet.
So.
Also, ich bin von hier runter gelaufen, Leute.
Wie gesagt, Richtung Südbahnhof.
Und ungefähr.
Oh, nice.
Da gibt es sogar.
Da gibt es doch Streetview.
Ist das jetzt Streetview?
Ja.
Ja, Streetview von 2008.
Okay.
Die Brücke sieht aber prinzipiell noch genauso aus.
Also, ich bin von hier.
Von hier ist dann die Brandplatz.
Hier bin ich lang gelaufen.
Und da drüben.
So ziemlich genau hier, wo die fotografiert haben.
Ne, ein bisschen, bisschen weiter hinten.
Ja.
Eher so.
Ja, hier so eher.
So schön in der Mitte war das.
Hier bin ich gelaufen.
Gucke ich so nach links.
Und ungefähr.
Ungefähr da.
Wo der.
Wo jetzt.
Der.
Die.
Ich weiß es nicht genau.
Vorbeiläuft.
Stand hier hinterm Gelände.
So ein Typ.
Hinterm.
Also, hinter der Brüstung stand der Kerl.
Und hat irgendwie so halb.
Halb geheult.
Und.
Und hat sich so.
Hat sich so ein Obenstand daran festgehalten.
Und ist immer wieder so.
So runter.
So halb.
So halb runter.
So nach dem Motto.
Ich gleich.
Gleich spring ich ab.
Äh.
Da hab ich mir gedacht.
The fuck.
Was geht mit dem Typ jetzt ab?
Ähm.
Wie hoch ist das?
Das ist nicht so hoch.
Wahrscheinlich.
Wirst du es überleben.
Aber es ist trotzdem.
Keine so gute Idee.
Ich würde mal sagen.
Es ist noch nicht mal 15 Meter hoch.
Ich weiß nicht.
Wie hoch die.
Wie hoch die Brücke ist.
Ich würde jetzt sagen.
Nicht so hoch.
Weil man kann.
Hier vorne.
Kann man hochlaufen.
Und das.
Oder hier.
Kann man auch hochlaufen.
Das fühlt sich nicht so hoch an.
Kann man.
Das geht.
Das steht doch bestimmt.
Gibt es doch bestimmt.
Durchfahrtshöhe.
660.
Da wird man wahrscheinlich nicht unbedingt sterben.
Und.
Und.
Und.
Und.
Und.
Und.
Und.
Und.
Und.
Alles ist.
Oh.
Bei.
Im Wasser vielleicht eher nicht.
Aber es ist zumindest nicht so.
Ähm.
So.
Und das Problem ist.
Dass der wahrscheinlich absäuft.
Wenn schon.
Ja.
Ähm.
Es ist ja kalt.
Ja?
Es ist.
War irgendwie.
Acht Grad oder sowas.
Der Typ hatte.
Na, all zu viele Klamotten hat er nicht an.
Es war.
Ich meine das Wasser ist kalt.
Und.
Ja.
Du hast ein bisschen.
Du hast hier ein bisschen.
Ähm.
ähm, nicht
flussschnelle Strömung.
Fuck, das ist, ah, Brain, ey.
Ähm,
also der Main, der Main fließt in
diese Richtung.
So, und, naja, zumindest
ist er, hat er rumgehampelt,
er sah, ich
würde mal sagen, er war mindestens
besoffen,
mindestens besoffen,
ich würde auch mal sagen, dass
er hat auch ziemlich dreckiges Zeug angehabt,
also wahrscheinlich, so Richtung
Penner oder so, vermute ich mal.
Zumindest war er wohl ziemlich, ziemlich
fertig mit den Nerven, ja, und hier
stand ein Mädel auf dem Fahrrad,
ähm,
und die war wohl sehr sozial
eingestellt, ne, der hat die ganze Zeit dann
gewunken, sie soll, soll sich verpissen und weiterfahren,
sie ist halt stehen geblieben und ist nicht weitergefahren,
hat mit dem gelabert, und ich hab schon
gesehen, dass die Leute quasi schon hier
Polizei und sonst was angerufen haben,
und der Typ ist halt immer noch rumgesprungen und hat rumgehampelt
dahinter, ähm, und hat
hab ich mir gedacht, ey, Alter, musst du jetzt, sollst du jetzt,
rufst du jetzt auch mal die Polizei, hab ich mir gedacht,
weißt du was, Polizei Frankfurt,
die haben eine extra, eine extra Twitter-Abteilung,
ist kein Witz, ja, haben die, mittlerweile
musst du auch bei der Polizei auf Twitter
abstelzen, hab ich mir gedacht, komm, schreibst
du einfach mal die Polizei auf Twitter
und gehst weiter Richtung Bahnhof,
und
hab ich dann auch gemacht, hat keine 20 Sekunden
gedauert, dann hatte ich sogar eine Antwort von der Polizei,
also, ne, wer mir jetzt wieder sagt,
so nach dem Motto, ich hätten ja, ich hätten ja verrecken lassen,
aber so, so, ganz so schlimm bin ich,
bin ich ja auch nicht, also, sprich,
ähm,
damit ihr mir das auch glaubt,
wie, wie
zeige ich denn jetzt hier eigentlich Tweets,
wie zeige ich denn
jetzt hier, was ich an die Polizei geschrieben hab,
skamast, vielleicht stimmt's ja auch gar nicht,
ähm,
wo sieht man das, Tweets,
man sieht nicht Tweets an alle, ne,
aber ich kann danach suchen,
hier, guck, unter meinen Tröcke steht ein
Typ in der Brust,
springt gleich runter,
steht schon ein paar
Leute, wo ich angerufen hab, und da haben sie auch gesagt,
danke für den Hinweis, also, ne,
ne, ist ja nicht so, dass ich ihn jetzt da hier irgendwie hätte
abkratzen lassen,
oder ohne was zu machen,
bevor da jetzt wieder einer kommt und sich, äh,
beschwert oder so, aber ich glaube, sagen, nein, das,
das natürlich nicht,
äh, zumindest bin ich weitergelaufen, ich war noch keine,
ich war irgendwie kaum über die Brücke drüber,
ich mein, im Prinzip sieht's hier immer noch so aus, wir können immer
Street View weitergehen,
die, äh,
na, ein bisschen anders sieht's jetzt mittlerweile schon auch,
guck mal,
da ist ja für unsere Anime-Freunde was am Start,
äh,
äh,
äh,
na ja, zumindest, ich war irgendwie so auf der Höhe, und da ist an mir schon, äh,
alles vorbeigedüst, was es so gibt,
von, äh,
Krankenwagen bis, äh,
Polizei und, und Feuerwehrauto,
oder Krankenwagen?
Ne, kein Feuerwehrauto, äh, Krankenwagen
und Notarztwagen und
alles, alles schon am Start, hier bin ich gerade
über die Straße gelaufen und, ja,
vorne angedüst gekommen.
Also, das geht anscheinend in Deutschland noch relativ schnell,
also, wenn
irgendwo was ist, sind die auch in Snapshot, aber ich meine, man muss
dazu sagen, ich meine, es ist auch wirklich mitten in Frankfurt,
ja, da brauchst du nicht
lang hin. Was für ein Auto
hast du? Ein Opel Agila.
Den allerersten,
der ist irgendwie 14 Jahre alt, also.
Aber machst du eigentlich Face Reveal?
Eine Million Abos? Lull.
Aber, wie gesagt, bei deiner
Firebase-Geschichte kann ich dir nicht helfen, hab ich den nicht
verwendet. So, ähm,
also, wo sind wir denn stehen geblieben?
Wie oft ich das Auto verwende?
Ja,
also, anteilmäßig eigentlich
relativ selten.
Nachdem ich jetzt nicht irgendwie der großartige
RL-Stelzer bin,
vor allem nicht der
RL-Stelzer, der abends auch noch unbedingt was
machen will oder am Wochenende was macht. Ich meine, neuerdings
bin ich ja am Streamen am Wochenende, ja, ich kann
mich jetzt noch nicht mal mit rausreden, ich mach YouTube-Videos, ich streben
so jetzt, ja.
Höchstens mal für Einkaufsstelz,
wobei, ey, Einkaufsstelz,
ähm,
ich wollte mal sowas hier ausprobieren.
Hat so was, hat jemand mit sowas schon mal,
schon Erfahrungen gesammelt?
Ähm, fuck,
wie hieß der Kram? Äh,
da gibt's so nen,
hab ich letztens so,
nicht Bringbiene, auch nicht Rewe,
war das das?
Ah, wie hieß das denn?
Ich hab letztens so nen Service gefunden,
der hatte folgende Idee, das fand ich eigentlich ganz
cool, ähm,
HelloFresh, HelloFresh
war's, glaub ich.
Kochzauber, was gibt's denn da?
Naja,
äh, ich glaub das war das, hat das, hat
das jemand schon mal ausprobiert?
Mal, nee, das ist ein extra, extra Account
für, für Streaming, da, äh,
ist nix in der History. Das da,
also sprich, man kriegt irgendwelche,
äh, Boxen geschickt,
die halten dann, hier steht ja, wie das
Ganze funktioniert, also, ne, sellout!
Geht, äh, äh, skamast.
Ne, hab, wie gesagt, ich hab's noch nicht ausprobiert,
ich hab mir überlegt, ob das nicht schlecht ist,
ähm, genau, äh,
Ghetto Melon, ich bin genau
aus dem gleichen Grund bin ich draufgekommen,
weil ich, glaub ich, in irgendwelchen Sachen, die ich
bestellt habe, ähm,
Gutscheine für die, für die
Dudes drinne hatte. So, zumindest
du sagst irgendwie, äh, Kochbox wählst
du aus, so, und da
kannst du dich dann irgendwie einversorgen
für,
ey, keine Ahnung, sagst du irgendwie, ich brauch, genau,
ich brauch Classic Menübox, 10. bis, äh,
16. November, und dann kriegst
du irgendwie so ne Menübox, wo dann für ein paar Tage
Zeugs drin ist.
Habt ihr, hat das schon mal jemand ausprobiert
von euch? Ich weiß ja nicht, ob das was taugt,
also, wenn man hier mal so sucht nach, nach
HelloFresh Erfahrungen,
ist es gemischt, ja,
ist es gemischt,
also,
Kochbox Checker,
es ist gemischt, die meisten Leute sagen,
eigentlich ist es zu teuer,
dann sagen, dass manche irgendwie Sachen nicht
richtig gekühlt war,
ja, gut, hier hat halt wieder DHL
versagt, ist das so
fertig für Revetucker? Ich glaube, man muss
teilweise noch schnüppeln.
So, also, würde mich mal interessieren, ob das
irgendjemand von euch schon mal ausprobiert hat.
Ja, äh, so, wo sind wir
stehen geblieben?
Resizing, Resizing,
okay...
Wir haben unsere
ID,
Resize, Resize
wurde ausgeschaltet, ist hier,
so, jetzt brauchen wir die Position,
äh,
ah, okay, wir brauchen, wir brauchen noch was,
wir brauchen noch eine Property
für die Windows-Position,
das ist eine Rect,
äh,
Window
Position,
das ist hier so unser,
unser Wrapper zur eigentlichen
Desktop-App, so,
Get, können wir weglassen, das ist
neues C Sharp 7 Syntax,
Dispatchers,
dass wir im juristischen Thread sind,
und dann wollen wir Dispatch
this window
get
position,
oder auch nicht?
Muss ich jetzt so machen, oder was?
Ah, ah, ja, Moment,
Moment, es ist ja auch Fail, was ich hier mache.
Ja, so, und jetzt
geht das auch.
So, genau,
und jetzt kriege ich hier die Position, vom, vom
Fenster, das heißt, an der Stelle
kann ich jetzt schon mal sagen, das Desktop
Window Position
pos, Dings, so, und
die, und die safen wir jetzt mal.
Die safen wir jetzt passend
zu dem jeweiligen Bild, was im Overlay
angezeigt wird. Nur auf, auf
Dauer zu teuer, okay.
Was wird gerade
programmiert? Der Meme-Bot, das ist kein Bot,
das ist ein,
ein Overlay, also quasi ein,
ein Elgato Stream
Deck, äh, so ein bisschen
wie Elgato Stream Deck, nur ohne Elgato Stream Deck.
Kannst ja mal
zeigen, aber wahrscheinlich hast du es schon gesehen, wenn du so
fragst.
Wir basteln immer noch hier, oh, oh,
wir müssen direkt Tangle
heiden.
Seht ihr sie? Da unten ist sie noch. Die muss weg.
Ja.
Aber ich weiß nicht, wann du zuletzt geguckt hast,
ähm,
wer hat das gefragt? Der Logonautix.
Wir haben das Ganze jetzt ja deutlich
geupgradet, von, äh, nur Bildern
als Overlay,
von Bildern mit, mit, mit Shortcuts,
wie gesagt, das Overlay ist
fürs Tablet gedacht, nicht hier,
zu, äh, Text to Speech,
in Windows Standard
und koreanischem Text to Speech,
von
rein WAV-Files, die er abspielen kann, also sprich,
man kann es auch irgendwie als Soundboard verwenden.
Hier müssen wir übrigens auch Filterbuttons nachher hin machen,
dass man auch, äh, sortieren kann.
Ups.
Vielleicht sollte ich mal ein bisschen leisere Sachen reinmachen,
ja. Windows Text to Speech,
easy, progers,
äh, Bilder mit Text to Speech,
äh,
alles mögliche, ja. Und, und
das Allerwichtigste, Weep Emotes sind jetzt auch
supported, ja. Suchen kann man
auch. Ah, ich glaube, ich habe keine
wichtigen Features vergessen.
So. Machen wir mal weiter, so.
Nun müssen wir uns ja eigentlich
speichern, im Prinzip müssen wir sowas hier
machen. Nein, nein,
das blendet nicht die Memes im Stream
ein. Haha, das ist, das ist, äh,
das ist auch der Grund, warum ich
es überhaupt gebastelt habe, und zwar,
das blendet dies, also du kannst die
Streams, du kannst die Memes auch nur im, nur
im, nur im OBS einblenden, das
geht auch. Dafür haben wir
ein extra, extra, extra Browser, äh,
ähm, Browserfenster, das
du in OBS einblenden kannst, wenn du es nicht selbst
sehen willst. Aber die Haupt-,
der hauptsächliche Anwendungszweck ist,
also, äh,
ich, ich erklär's ja gerne, weil ich erklär das
jeden Stream 20 Mal ungefähr,
der hauptsächliche Anwendungszweck ist,
einmal, dass man sich Bilder auf, äh,
Shortcuts machen kann,
und, dass man sie selber sieht.
Das ist eigentlich der Knackpunkt an der ganzen Geschichte.
Und sie sind so,
äh,
so
wenig, sie greifen so wenig ins System
ein, dass man beispielsweise,
wenn ich hier Copy-Paste und zeig ein Bild an,
das, das, äh, ähm, ja,
wie, wie nennt sich das denn?
Selec-, Selection, also sprich,
wenn ich hier selektiere und diese Bilder
ein- und ausblende, es crabt sich kein Fokus,
das Visual Studio bleibt aktiv,
das wird hier nicht, äh, abgebrochen,
dass ich hier selekte,
also sprich, das hat keinen Einfluss auf die
Programme, die unten drunter sind.
Einzige Ausnahme, also es geht auch in
Spielen, dafür ist es ja gedacht.
Also ich hab das eigentlich ursprünglich mal gebastelt, für mich,
dass ich, äh,
wenn ich im, wenn ich am Spielen bin, und es passiert irgendwas
Geiles, oder es passiert was, wo man ein bisschen Schiss vorhaben
muss, oder wo man sich erschreckt, dass ich irgendwie sowas
einblenden kann, wenn was lustig ist, passiert das,
oder das, oder, GIFs kann's übrigens
auch, dafür hab ich's gedacht, und,
man kann ja in OBS selber
Bilder, Shortcuts zuweisen,
das Problem dabei ist, ich seh sie selbst nicht,
und ich vergess immer,
die Bilder wieder auszumachen. Alternativ
kann man sich ne Elgato Stream Deck holen,
dann hat man aber nicht so viel Einfluss drauf,
wie's funktioniert, und ich will
einfach mal, ähm,
die Sachen selbst, selbst bestimmen können, ja.
Wir machen vielleicht in Zukunft noch ne Elgato
Stream Deck Integration,
aber der hauptsächliche Zweck der ganzen
Übung ist, dass man die Bilder
selber sieht, und sie eigentlich aus'm
Game werfen.
Und das funktioniert auch. Ja, du siehst ja,
ich kann's jetzt hier mal stellvertretend machen, machen wir mal
nen,
hier machen wir mal Kirby, Kirby, machen wir mal Fullscreen,
guck, wirf's
sich nicht aus'm Fullscreen oder sonst was.
Deluxe Version Inc.,
ja, da kann ich gleich noch was zu sagen.
Ähm, ja, und das funktioniert
auch in Games, kein Problem. Mal gucken,
wie da Anti-Cheat-Engines mit umgehen,
ich kann mir nicht vorstellen, dass es große Probleme
gibt, aber man weiß ja nie,
die Dinger sind teilweise schon ganz schön,
äh, hart drauf, ja.
Moin, der
Go-Life, der Go-Life,
ja,
ähm, so ist das Ganze gedacht.
Und einzige Einschränkung,
und dann haben wir zwei Einschränkungen.
Einmal
Games, die, ähm,
deine Tastatur-Inputs
low-level fressen, so dass sie Windows
nicht sieht, macht kaum noch einer.
Ähm,
zweite
Einschränkung, und das sind meistens
Games, die, das
dreht oftmals zusammen auf,
die zweite Einschränkung sind Games,
hatte ich die, hatte ich
die Schriftgröße immer so, Leute, oder
hatte ich die Schriftgröße so? Ich glaub so, ne?
So ist groß genug.
Ja, und die zweite Einschränkung
sind Spiele, die
only
exklusiv Fullscreen laufen.
Da kann ich aber auch nichts dagegen machen.
Da kann ich nichts dagegen machen, aber
also es gibt kaum Spiele,
die die letzten, sagen wir mal,
10, 15 Jahre rausgekommen sind, die
kein Window-Mode oder kein Borderless Fullscreen
unterstützen, und für die, die es nicht
können, die nur normales Window oder sonst was
können, gibt es, ähm, gibt es Programme,
mit denen man sie Borderless Window machen kann.
Das ist eigentlich, im Prinzip
ist es, tatsächlich ist es, ist es hauptsächlich
für Streamer gedacht. Ich glaub, dafür ist das
ganz cool. Ich mein, man kann damit quasi, ähm,
nicht nur Bildchen anzeigen,
du kannst es quasi komplett als Soundboard
vom Tablet aus verwenden, ne,
mach hier oben noch Knopf, wo man, wo man sich nur
die Sounds sortieren kann,
oder nach Text-to-Speech oder so, da kannst du quasi
vom Tablet aus dann deine
Sounds auslesen,
oder was auch immer du auslösen willst,
Bilder, Sounds,
Tablet, oder vom Streaming oder vom zweiten Rechner aus,
wie du, wie du lustig bist,
und so was
gibt's nur nicht.
Und so, ich hab so was gebraucht, deswegen hab ich gedacht, machen wir's
einfach mal selbst. Mittlerweile ist das Ganze
natürlich deutlich mehr sophisticated
wie die erste Variante, die übrigens immer noch
auf GitHub so vor sich hinschimmelt,
aber die neue Version kommt ja auch auf GitHub
und kann jeder verwenden.
Wir müssen eben noch ein paar Sachen machen, also eine Sache,
die ich hier machen will, wie gesagt, dass man
Positionen und Größen für
jedes Bild,
hinterlegen kann,
das geht jetzt ja schon teilweise,
ich kann jetzt beispielsweise sagen,
ich will meine Bilder bloß hier haben,
das funktioniert,
Einschränkung aktuell ist nur,
es gilt für alle.
Und das ist ein bisschen blöd.
Vielleicht will ich ja Zulol übelst groß haben,
und die Katze
will ich nur klein und links haben.
Oder den Bass, oder so.
Und deswegen versuchen wir
gerade das so zu machen, dass der sich quasi
die Position für jedes
einzelne Meme speichert.
Kann man dann auch einbinden, dass
Sounds über das Mikro, Moment, was?
Sounds über das
Mikro abgespielt
wird?
Wie will man Sounds über den
Mikro abspielen?
Das musst du jetzt mal näher erklären.
Ach so!
Ach so!
Ah, okay. Also du meinst nicht, dass
man wirklich, ach so, okay,
ne, da hab ich's nicht gecheckt. Du meinst nicht,
dass man wirklich über das Mikro
was ausgibt, sondern
dass du quasi
für andere Leute was abspielst.
Na,
das hab ich mir jetzt eigentlich nicht...
Kann man machen, könnte man einbauen.
Aber es geht ja eigentlich weniger
drum, andere Leute in dem Discord abzufacken.
Das Ausgabegerät
ändern.
Da hab ich mir jetzt überhaupt keine Gedanken zu.
Ich schreib mir das mal auf.
Ich hab ja hier lange, lange Feature-Liste.
Das Ausgabegerät
ändern. Okay.
Ich hab noch gar nicht dran gedacht, dass man das braucht.
Einfach Sound aufdrehen
und Mikrofon dran halten. Können wir
machen. Hab ich...
Ich hab früher mal
ein bisschen Direct...
Fuck.
Ah,
Craft, nee, oh fuck, wie hieß das?
Direct Show?
Nee.
Wie hieß diese Windows
Audio-Video-Geschichte,
die man nicht
mal verwendet?
Oh,
Microsoft-Namen, ey.
Ihr wisst es doch bestimmt, wie das hieß.
Das mit dem OBS auch programmiert
war früher.
Doch, Direct Show.
Damit hab ich ein bisschen rumgespielt.
Prinzipiell ist es gar nicht so schwierig,
das Ausgabegerät zu ändern.
Man registriert
einfach dann ein
virtuelles Mikro oder sowas
und schickt da die Sounds rein.
Das könnte man machen.
Also, ich hab eh noch ganz viele
Vorschläge für das Programm.
Ich muss nur mal gucken, wo ich sie hab.
Ich hab nämlich hier in meinem
Notizprogramm eine riesige Liste.
Eine riesige Liste mit Zeugs
drinne.
Zum Beispiel, dass wir eine Stream Deck
Integration machen,
dass man Bilder resizen kann,
haben wir schon. Drag & Drop haben wir auch schon.
Twitch Chat Integration können wir noch machen.
Das wird auch ganz lustig.
Twitch Chat Integration können wir noch machen.
Das wird bestimmt witzig.
Wenn der Chat quasi
innerhalb von
keine Ahnung
5 Minuten so und so viel mal
was gespammt hat, dann wird's automatisch
angezeigt oder sowas.
Ich hab's mir jetzt mal dabei geschrieben.
Dann machen wir noch RGB
Tastatur Integration.
Dann hat man quasi wirklich
einen Stream Deck ohne Stream Deck zu haben.
Wir machen eine Suchfunktion
noch drinne.
Ja, müssen wir mal schauen.
Da gibt's noch Open End im Endeffekt,
was wir machen können.
Mach doch aus der Liste Github Issues.
Können ich machen.
Ja, können ich machen. Keine schlechte Idee.
Ja, Giphy Integration
hab ich schon aufgeschrieben.
Giphy und
Timo oder wie das andere hieß.
Wo wir uns gestern angeguckt haben.
So, machen wir mal weiter.
Sowas ähnliches mit dem Chat
gibt's schon. Ja klar.
Davon ist mir klar, dass es schon was gibt.
Um was geht's denn hier?
Oh, ich hab's jetzt
fünfmal heute schon erklärt.
Ich kann's nicht jedes Mal fünf Minuten erklären.
Dann wird's überhaupt nichts.
Grob gesagt, eine Minute Erklärung.
Wir bauen ein Programm, was Overlay
Bilder anzeigen kann,
Sounds abspielen kann
und Text to Speech abspielen kann.
Sowas hier zum Beispiel. Windows Text to Speech.
Weep
Japanese Text to Speech.
WAV Dateien.
Oh, oh my god.
Text to Speech und
Bilder.
Easy
Overlay Bilder.
Animierte Gifs.
So, zack.
Als Overlay und auf Shortcuts.
Ich glaub wir müssen
Ohne Scheiß, wir müssen mal
ein Chatbot Kommando machen.
Ja genau, sowas
wie auch gerade einer im Chat
vorschlägt. Wir brauchen eine Chatbot
Erklärung.
Eine Nightbot Erklärung,
was das Programm macht.
Release 2020.
Nee, Release ist nächste Woche.
Hab das gerade geklippt.
Ah, okay.
Ja, das ist das alte,
das ist das nicht geupdatete
GitHub.
Nee, nee, Sibaro, keine Hektik.
Keine Hektik.
So, okay, machen wir weiter.
Also, wir haben jetzt den ganzen Krempel
hier eingefügt. Wo sind wir überhaupt
stehen geblieben?
Da, da sind wir auch stehen geblieben.
So, wir müssen uns jetzt überlegen,
wie wir uns das speichern können.
Also sprich, wenn es
nicht mehr resized.
Die Position hab ich. Jetzt muss ich die Position
pro Meme in der Datenbank speichern.
Das bedeutet, ich brauch
sowas hier.
Also,
ich zeige euch jetzt mal gleich
super, richtig geiles
neues C Sharp 7 Feature.
Wer C Sharp verwendet
und das noch nicht kennt, dem wird das
bestimmt gefallen.
Also, wir machen uns jetzt quasi
Properties für Position.
Machen wir mal Left,
Top,
Höhe,
Breite.
So, nennen wir das Screen.
Screen oder so.
Window, Window, Window.
Window Left, Window Top,
Height und Window Width
nennen wir das Ganze.
Und
das können wir dann da drinnen nur speichern.
Also sprich, wir können jetzt sagen,
nehmen
x
äh,
ne, komm, Leute, wir nennen das anders.
Wir nennen es, weil ich gerade
intuitiv x und y gemacht habe,
x und y ist besser, kann ich mir besser
merken.
Nennen wir x und das ist
dann die Koordinat Position x.
Das ist dann jetzt relativ, relativ
simpel.
Ups,
Window y.
Pause.
Y.
Width ist
Window.
So, und jetzt muss ich mal was ausprobieren.
Jetzt, jetzt haben wir ein Problem.
Also, zumindest, was weiß ich nicht so schön.
Moment, was hat der für Schmerzen?
Ist das ein Double?
Das ist ein Double.
Okay, ähm, ja, genau.
Und jetzt, ich zeige euch jetzt mal ein richtig cooles C Sharp 7 Feature.
Wahrscheinlich kennt ihr das alles schon.
Ähm,
aber, für die, die es nicht kennen und C Sharp
verwenden, richtig cool, man kann jetzt
seit, ich glaube, seit C Sharp 7
kann man jetzt Default-Werte
vorgeben für
Properties,
die nicht der Default-Wert
der jeweiligen Klasse oder vom Typ sind.
Also, was ich damit meine,
jegliche, jegliches
int, was ich verwende,
ohne einen Wert anzugeben, ist
standardmäßig 0.
Weil, int
ist ein Value-Type.
Das bedeutet, er kann nicht 0 sein.
Also, sprich, für jegliche Klasse
ist Default-mäßig, wenn ich nichts
zuweise, ist es 0.
Und jeder Value-Type hat einen Standard-Wert.
Und das ist bei int 0.
Das ist bei allen Zahlenwerten, egal
ob Double oder int oder sonst was, ist es 0.
Ja, aber nicht unbedingt.
DateTime hat auch einen Standard-Wert.
So, und ich kann jetzt quasi
seit der neuen C Sharp Version
Default-Werte
einem Property zuweisen,
die beim Erstellen der Klasse
automatisch reingeschrieben werden,
einmalig, wenn ich nichts zuweise.
Also, dann ist int nicht mehr 0,
sondern ich kann jetzt zum Beispiel sagen,
int ist, na gut, das ist jetzt ein bisschen bescheuert
als Beispiel, int ist in dem Fall 0.
Allerdings hier sage ich,
ich möchte nicht, dass int standardmäßig 0 ist,
sondern standardmäßig 1000.
Also, sprich, dass mein Fenster
Default-mäßig
links oben
0,
Koordinate 0, 0,
0, 0 ist hier oben links.
Und von da 1000 Pixel hoch
und breit ist.
Das ist richtig pock
für Leute, die
C Sharp verwenden müssen. Das ist richtig cool.
Das ist richtig big brain.
Massive brain.
Na, das ist cool, ne?
Also, früher
hätte man das so gemacht.
Das ist kein Hexenwerk.
Im Prinzip hätte ich
schon immer sagen können,
okay, wir machen einen Constructor,
und setz die Werte da drin.
Das wäre natürlich schon immer funktioniert.
Der wird natürlich auch immer aufgerufen.
Aber so ist das Ganze doch viel schöner, oder?
Vor allem viel besser lesbar. Du weißt, okay,
window x, y
ist 0 standardmäßig,
Höhe, Breite ist 1000.
Sehe ich hier. Da muss ich nicht gucken, okay,
ich habe hier ein Property, da gehe ich in den Constructor gucken.
Geht einfach.
Nice, ne?
So, und jetzt habe ich ein Problem.
Und zwar, achso, wir müssen erst noch mal eins lösen.
Und zwar, wir müssen konvertieren.
Und zwar, übrigens,
Preisfrage, Preisfrage.
Ich weiß noch nicht, was es zu gewinnen gibt,
aber Preisfrage.
Es ist jetzt ja so,
bei mir hier in meiner Meme-Klasse
ist das ein Int.
So, und
Rectangle
ist der Meinung, das ist ein Double.
Wie kriege ich jetzt, also was
ist die beste Variante,
dieses
Double zu einem Int zu machen?
Da bin ich mal gespannt auf die Vorschläge.
Und ich werde euch auch erzählen, was meiner Meinung nach
die beste Variante ist.
Was meint ihr ist das Beste?
Wie mache ich jetzt aus dem
Karsten? Ja, das war klar, dass die Leute erst mal mit,
dass ihr erst mal mit Karsten anfangt.
Was ist denn mit Karsten los?
Oh, das war
richtig haha, oder?
Was ist denn so was mit Karsten los?
Sint,
ja, Sint ist auch schon mal nicht schlecht.
Was ist denn eigentlich
der Unterschied zwischen Sint und Karsten?
Leute,
das eine ist 0, wenn die Konvertierung nicht geht.
Und das andere ist
Exception.
Ah, einmal habe ich schon was richtiges
gelesen.
Also was heißt, was heißt
was richtiges? Es geht ja alles.
Es geht ja alles.
Karsten ist Exception,
S ist 0,
wenn es nicht klappt.
Wobei ich bei Value Types gar nicht so genau weiß.
Ehrlich gesagt. Wahrscheinlich auch.
Wobei dann später, ich habe keine Ahnung.
Geht das? Geht das überhaupt? Kann ich sagen?
Kann ich sagen?
Sint?
Ne, ne?
Es geht nicht.
Es geht nur logischerweise, ne?
Ich habe mich gerade gefragt, wie ist es mit einem Value Type?
Logisch, geht gar nicht.
Ich kann einen Value Type mit S nicht casten.
Das ist übrigens eine Sache,
was ich an C Sharp wirklich mag.
Es hat eine gewisse innere
Konsistenz, die Sinn ergibt.
Die man nachvollziehen kann. Nicht so wie teilweise
in JavaScript.
Ich kann keinen Value Type
Sint casten, weil
bei einem S eine 0 rauskommt
und die Sache ist, 0 ist für einen Value Type nicht erlaubt.
Ich könnte allerdings sagen, ich möchte
einen Nullable Int, dann
äh
Scheiß drauf
macht man eh nicht.
Aber es hat eine gewisse innere Logik.
Okay, also jetzt möchte ich das Ganze mal
aufklären an der Stelle.
Was ich am besten finde,
ist, und ich werde auch gleich erklären warum,
ist Convert to Int
32.
Das konvertiert mein
Double zu Int.
Was natürlich auch funktioniert,
und jetzt kommt die Preisfrage,
was ist der Unterschied, ist natürlich
das hier. Und jetzt ohne nachzugucken,
was ist der Unterschied?
Was ist der Unterschied zwischen Convert to Int 32
mit einem Double und
mit einem Double zu Int?
Nicht nachgucken,
einfach so überlegen, was könnte es denn sein?
Warum gibt es das denn?
Nullable Int, das ist, ich troll nicht, das gibt es!
Ah, der Milchmann,
der Milchmann, der
weiß Bescheid.
C Sharp hat Nullable Value Types.
Das gibt es. Also du kannst
sowas machen, also ne, war
wir machen jetzt mal so den richtig Programmieren
Loop Code, Zahl gleich
1, funktioniert.
Und Fragezeichen Zahl gleich 1
funktioniert auch.
Und wenn ich Nullable Int mache,
ist Zahl kein Int, sondern
ein Nullable Int,
wo ich gucken kann, hat es ein
Value, hat es kein Value, und
der Value ist Int.
Braucht man eigentlich so gut wie nie, aber gibt es
seit C Sharp 4 oder so.
Richtig, also
die Auflösung
des Ganzen ist, Int,
also mal angenommen, wir haben jetzt hier
irgendeinen Double, also 1.
Nein, ein R ist da nicht drin.
Also wir haben jetzt irgendwie ein Double,
ein, äh, ein Dubbler.
Double, Alter!
Ich kann nicht schreiben.
Das ist diese kack
neue RGB Tastatur, kann ich
nicht tippen drauf.
Double, so, sowas hier in der Richtung.
Und wenn ich das jetzt caste,
wenn ich das
jetzt caste zu Int,
dann schneidet
er einfach alles ab, was
hinter dem Komma ist.
Was natürlich auch bedeutet,
und jetzt wird es vielleicht klarer, warum das
keine allzu gute Idee ist,
dass da,
was ist das hier, wenn ich es auf Int caste?
Ich hoffe übrigens,
das stimmt, was ich hier jetzt erzähle.
Ich bin mir
eigentlich relativ sicher, dass das stimmt,
aber ich habe es lange nicht mehr ausprobiert.
1, genau.
Das ist 1.
Also es ist eigentlich,
ist es 2, oder,
naja,
also es ist ultra nah an 2 dran,
ähm,
aber wenn ich es
caste, wirft er alles nach dem Komma
weg und es kommt 1 raus.
Wenn ich sage Convert To,
dann rundet er.
Also Convert To ist im
Endeffekt eine andere
Schreibweise von Math,
oh, hallo,
Quick Maths
Round,
so,
Round,
und dann ein Cast
zu Int.
Das ist Convert, intern
wird es wahrscheinlich noch ein bisschen mehr machen, ja.
Er wird wahrscheinlich noch ein bisschen mehr machen,
als einfach nur runden und casten.
Übrigens wisst ihr, was das geile ist?
Heutzutage
kann man einfach sagen, äh, nicht Amazon,
GitHub,
Math, Round, GitHub,
und dann kann man sich den Code angucken,
von, ähm,
.net, wenn man es findet.
Ja,
Maths.cs, guck da.
Da ist es, äh,
oder auch nicht.
Ja, hier sieht man, was
Round macht.
Also Open Source hat wirklich seinen Vorteil,
ist doch echt nice, oder?
Ne, das geht, äh, Round geht auch mit
Double. Das ist cool, oder?
So, und,
ja,
Referencesource gibt es schon ewig, aber jetzt kannst du auf GitHub
gucken, und es ist tatsächlich
der richtig echte, vollständige .net-Sourcecode.
Ja, zumindest, äh, soweit
von der Idee, was der Unterschied ist.
Also, das heißt, an der Stelle
können wir es uns einfach machen und sagen, git convert
to Instagram. Ja, und
was, äh, irgendjemand im Chat gerade geschrieben hat,
es wird wahrscheinlich auch so sein, dass
eine Exception kommt, wenn es irgendwie nicht passt, oder so.
Ja, gehe ich auch mal von aus.
Wurde .net auch in C Sharp
geschrieben?
Ähm,
ich würde mal fast
sagen, also, äh,
der Kern ist C++, das weiß ich,
.net Core auch, aber ich würde
mal sagen, ein Großteil
der Standardlib, wie man jetzt hier
auch sieht, ist tatsächlich C Sharp, ja?
Und letztendlich
ist es ja auch quasi
immer ein Indikator dafür, ob eine
Programmiersprache was taugt, wenn
quasi die Plattform selbst in dieser
Sprache programmiert ist.
Na, also sprich, dass
der, wenn man
jetzt beispielsweise einen C-Compiler hat,
dass dieser Compiler quasi
sich selbst kompiliert. Das ist immer
so ein bisschen Indikator für, wie
wie sehr was was taugt.
Die Linux-Diskussion.
Auch heute habe ich, ich habe heute wieder im Zug ein bisschen
ein bisschen Twitter gelesen, ein bisschen Heise
gelesen, da hatten sie wieder eine Riesendiskussion,
ja, das Heise-Forum ist
echt, äh, da weiß ich nie,
sind die Leute einfach nur doof, oder ist
es nur gut getrollt?
So, das müsste alles sein, was
wir brauchen, um die
Position zu speichern von unserem
Meme, beziehungsweise von unserem
Bild.
In C-Sharp kannst du nicht einfach, also
in C-Sharp kannst du kein, ähm,
keine Ahnung, kein,
was sagen wir mal, was total
abwegiges, ja, du kannst
keinen String zu einem Int casten, zum Beispiel.
Das geht nicht.
Das ist, also sprich, das ist
kein richtig harter Cast, so nach dem
Motto, Memory einfach
als was anderes auslesen.
Da ist noch ein bisschen Zeug drumherum.
Man kann das unsave, kannst du's in unsave,
kannst du das machen, und
ein paar dieser Low-Level-Sachen
sind auch tatsächlich mit unsave, äh,
mit unsave Operationen gemacht, ja.
Also, ein, von, von
hier, von der String-Standard, ähm,
also, von der Standard-Library-String-Klasse
sind ein paar Dinger
tatsächlich in unsave Code, und ein paar
Dinger callen auch in native C++
Zeug rein, einfach weil das Zeug
halt für so simple Operationen soll halt
ordentlich flutschen, ja, soll halt schnell sein.
Übrigens, ein Problem haben wir hier.
Also, wir
können das ohne Probleme fixen, aber
ich, ich müsste mal gucken, wie man das ordentlich macht.
Jetzt ist es ja so, wir haben schon
eine Datenbank,
hier, gefüllt,
mit, mit unseren Bildchen,
ne, da,
wie im DB.
Das Problem ist jetzt so ein bisschen,
wenn ich jetzt hier mein Model ändere,
was ich hier habe, ich kann's ja mal sagen,
wenn ich jetzt starte, wird folgendes
passieren, es wird abkacken.
Weil,
George Callum,
wie macht man denn eine Database
Migration
im
ASP.NET Core?
Habe ich noch
nie gemacht.
Mal so als Erklärung, was das ist.
Also, wie man es jetzt hier gesehen hat,
mein Model
hatte bis vor kurzem
diese vier Properties
noch nicht. Und
der Datenbank-Mapper
hat natürlich für dieses Model
Datenbank-Gedöns erstellt.
Natürlich, bis eben gab's
das Ganze hier nicht. Und
deswegen ist es in dem Datenbank-Model
einfach noch keine Spalten
dafür drinne.
Für die neuen Properties. Das bedeutet,
es kackt ab beim
Starten. Und jetzt ist, jetzt ist der Witz
da dran, das
hast du ja auch bei einer
Ad-Migration war das, kann sein, ich hab's, ich muss
mal nachgucken, hab's ja nie ausprobiert,
äh,
W-O-Z-3-Z-
Cush-Rend-Aufruf,
das ist aber hochkomplexer
Benutzername.
So, und das passiert ja auch
bei Anwendungen laufend,
ja, das heißt, laufend ist übertrieben,
es sollte relativ wenig passieren, aber
es kann schon mal passieren, dass beim
Model was dazukommt von einer Version zur
anderen. Und normalerweise
braucht man dann einen Migrations-File
für die Datenbank. Das hört sich jetzt
komplexer an, was es ist. Das ist
im Prinzip eigentlich nur
eine Klasse, wo, also,
wo Logik drinsteht,
wie ich die alte Datenbank, äh,
das alte Datenbank-Schema
quasi umschreiben muss, dass es zur
neuen, zu meinem neuen Code passt.
Das ist eigentlich alles.
So.
Okay, das gucken wir jetzt mal nach.
Wir gucken jetzt nämlich, wie man das macht.
Nachdem ich noch keine Migration hab, kann's sein,
dass es jetzt überhaupt nicht funktioniert, dass ich erst mal eine erstellen
muss ohne die neuen Properties und dann
mit den neuen Properties oder so.
Ähm, Ad-Migration
Initial Create.
Geht das jetzt einfach so?
Geht das jetzt so? Probieren wir jetzt mal.
Ad-Migration Initial Create.
Der meckert über irgendwas.
So, mein Migration-File
mit Geschwubbel drinne.
Ich will's mir gar nicht
angucken, ehrlich gesagt.
Äh, und jetzt sage ich Update
Database. Das wird nicht einfach so funktionieren,
oder? Wow!
Was hat der für Schmerzen?
Meme-Hotkeys
already exist. Ja, ich weiß,
dass es already existed.
Naja, das war jetzt nicht.
Da war jetzt halt letzter Schluss irgendwie.
Ich muss halt sagen, hab ich noch nie gemacht, ne?
Ich hab keine Ahnung,
wie's funktioniert.
Okay, wir müssen's, glaub ich, noch mal rückgängig machen.
Äh, wie removed
man denn Migration?
Kann man einfach sagen, äh,
remove?
Ich hab keine Ahnung, was ich hier mache.
Ne, wow. Äh, delete?
Nein, äh.
Wie remove ich
den Shit wieder?
Gibt's doch, oder?
Ah, jetzt ist's weg. Okay.
Okay, gut. Ähm,
dann lösch ich die Dinger hier jetzt noch mal kurz.
Dann ist nämlich mein Model wieder okay.
Probieren wir grad noch mal aus, ob's jetzt startet,
wenn ich das wegschmeiße. Äh, ja, du kannst
natürlich hier nicht kompulieren. Okay.
So, jetzt funktioniert's wieder.
Da freuen wir uns.
Ich geh nämlich davon aus, dass ich quasi
einmal in der Version, wie es funktioniert,
mir Migration
erstellen muss.
Aber ich will, ich will ja nix
erstellen. Ich will ja eigentlich...
Okay, mach was noch mal. Add Migration.
Update Database.
Alter, was willst du denn, ey?
Was ist denn das für'n Scheiß?
Ich weiß, dass es die Tab...
Ich weiß, dass es die Tabelle schon gibt.
Ich glaub, du musst die DB
zuerst mit dem Update-Befehl erstellen.
Ja, aber... Ach so, du meinst,
ich darf die gar nicht schon haben, oder was?
Ha, das kann
natürlich sein.
Oder ich kann einfach sagen Update.
Ach, der erstellte die Tabelle
hier, okay.
Wir tun jetzt einfach mal so, wir faken,
wir faken. Wir machen G-Bait.
Wir G-Baiten
das jetzt, das Framework.
Wir tun jetzt einfach so, als hätten
wir's gemacht.
Lull. Und jetzt sagen wir
Add Migration. Wie gesagt, ich hab keine Ahnung, was ich hier mache.
Äh, was weiß ich?
Second.
Pass auf, Leute, jetzt funktioniert's.
Ach...
Already exists?
Du sollst
das Ding noch gar nicht erstellen.
Meinst du, ich muss die erste löschen?
Meinst du, ich muss die hier jetzt löschen?
Bam!
Easy!
Alter, wir sind so big brained
heute. Wir sind so
massive big brained. Das ist der Wahnsinn.
Easy.
Easy.
Easy.
Easy.
Richtig, richtig big brained, ey.
Ich sag euch,
ne, Migration geht nicht,
gefakte Migration funktioniert.
Also
von der Idee her, es ist eigentlich sogar
relativ logisch, warum's funktioniert.
Das Ding will natürlich,
wenn ich die erste
DB-Migration erstelle, will der halt
die DB erstellen.
Und...
Das geht natürlich nicht, die ist schon da.
Wenn ich dann ne zweite Migration erstelle
und so tue, als hätte ich die erste schon gemacht,
dann die erste lösche und quasi
sage, die zweite ist die erste,
big big brain place,
huge, massive,
dann
es ausführe als erstes die zweite,
dann geht's. Gut.
Ich hoffe, ihr habt's verstanden.
Progress.
Ist es die Sache, was ist beim initialen Erstellen
Neuinstallation?
Keine Ahnung.
Achso, äh, gar nix.
Gar nix.
Bei der Neuinstallation erstellt das mit dem
richtigen Schema.
Das hab ich irgendwo, ich weiß,
aus, warte mal, wo hab ich das, im Startup
hab ich das drinne stehen.
Hier, das da.
Ensure created.
Das erstellt das
Datenbankschema quasi
nach dem aktuellen letzten Stand.
Und die Migration
würde ich dann quasi nur laufen lassen
in nem Update-Vorgang, deswegen brauche ich
nen Updater, ähm, also
den baue ich aber nicht selbst, dann nenn ich mal
Squirrel
für nen Installer.
Und im Updater würde ich dann halt einfach
sagen, run Migration.
Das müsste funktionieren.
Ja, okay, ich sehe, ich sehe,
der Chat ist auch mit mir einer Meinung,
dass das absolut massive big brain
Brogger, Broggerskills gerade
waren.
So, jetzt müssen wir mal gucken, ob die
eigentliche Sache, die wir machen wollen,
denn funktioniert. Ähm, wir setzen mal
hier nen Breakpoint hin.
Wir setzen mal hier nen Breakpoint hin.
Und schauen mal, was passiert,
wenn wir das Ganze resizen.
Also,
machen wir mal hier was auf.
Monkas? Monkeys?
Wo ist es? Nein, das war's
falsche. Genau.
Ähm, so, resizen wir mal.
Und jetzt müsste eigentlich gleich der Breakpoint
werden.
Macht er.
Und guckt, die Settings sind richtig.
Na?
Äh, also hier
ist es, ist es,
geht's bei Pixel
1308 los.
Äh, hier geht's bei
470 los. Ist ja logisch, denn das Ding ist auch
breiter als hoch. Dafür braucht man
jetzt nicht so viel big brain, um das zu sehen.
Ähm,
das Ding ist
so hoch und
so breit.
Funktioniert.
So, und jetzt saved er das Ganze.
Finished, hat funktioniert.
Nur, irgendwas
ist kaputt jetzt. Ich glaube, ich hab,
es hat zu lange timeoutet.
Okay, noch ist es natürlich
überall wie vorher,
weil wir laden das Ganze
beim Setzen noch nicht.
Wir speichern's ja aktuell nur.
So, und jetzt müssen
wir, ich glaube, wir kriegen
gleich noch ein lustiges Problem mit WPF,
dass die Bilder nicht ordentlich rechtzeitig updaten,
wenn wir moven. Habe ich so im Urin
irgendwie.
Das müssen wir uns dann, müssen wir überlegen, wie wir das hinkriegen.
Ähm,
so, und jetzt müssen wir in der,
dort, wo wir
die Bilder anzeigen, müssen wir
das Ganze jetzt setzen.
Ich meine, hier speichern wir uns ja nur das
Ganze. So, und hier im
Meme-Service sagen wir hier,
hier werden die Bilder quasi an- und ausgeschaltet.
Und zwar haben wir
Text-to-Speech, Audio
brauchen wir nicht, Image brauchen wir,
F12, Jumpen zur Implementierung,
Visible Meme,
bla bla bla bla. So, an
der Stelle hier,
den Krempel gibt's nicht mehr, den brauchen wir nicht, schmeißen wir weg.
An der Stelle hier Desktop-Show-Image
vom FAD,
an dieser Stelle müssen wir
vorher irgendwo
Window-Position müssen wir
setzen, und zwar auf Meme,
äh, auf die Position.
Ja.
So, wie machen wir das jetzt am besten?
Ich würde sagen, wir erzeugen, wir erzeugen
ein weiteres direkt.
Na, oder was meint ihr, was am schönsten ist?
Also ich würde sagen, wir machen anstatt,
anstatt, dass wir irgendwie
der Show, also es gibt zwei Varianten.
Entweder übergeben
wir, ich, ich, ich zeig mal so ungefähr, wie wir's machen
können, ja. Also entweder sagen,
sagen wir sowas hier.
Entweder sagen wir sowas hier.
Also, was die Methode noch nicht kann.
Da sage, übergeben würden wir einfach dem
Show-Image die Koordinaten übergeben.
Oder aber,
wir würden quasi noch einen Setter machen,
für Window-Position,
und eine neue Rect
erstellen.
Ich würde sagen, wir machen's erstmal so.
Wir übergeben erstmal
Show-Image die Koordinaten.
So, Show-Image.
Da. Also,
brauchen wir jetzt int x
int y
int height.
So, jetzt sollte der ganze KMX
wieder kompilieren. Ja.
So, und jetzt müssen wir uns überlegen, wie wir
das dem Window setzen.
Da müssen wir jetzt wirklich in
unsere WPF-Applikation rein.
Und,
ich würde sagen, hier bauen wir das
nicht ein. Hier haben wir nämlich schon Get-Position.
Da machen wir hier einen
Set-Position.
Ich meine, da könnte man eigentlich auch,
da könnte man jetzt wirklich ein Getter und Setter draus
machen, ne. Das machen wir gleich
noch. Das ist ein bisschen schöner.
So, da sagen wir jetzt hier
Set-Position.
So, das Fenster
soll linke Seite
soll pos
x.
Das ist eigentlich eine Variante, sich viel schöner zu machen.
Top ist pos
y.
Breite
ist Breite.
Und Höhe ist
Höhe.
So.
Den Schmader da unten machen wir mal weg.
So, und jetzt sagen wir das.
Set-Position.
Set-Position.
Ups.
Und da müssen wir jetzt eine neue Rekt basteln.
x, y,
Höhe, Breite,
äh, nein.
Höhe.
Und da übergeben wir das Ganze.
Und gut ist.
So. Und jetzt sollte das
eigentlich funktionieren.
Oder?
Hab ich jetzt irgendwas vergessen? Probieren wir es mal aus.
Bisschen klein, oder?
Achso, ja, stimmt.
Die Dinger, die ich schon erstellt fand, sind jetzt hier alle 0, 0
in der Größe.
Ja, funktioniert.
Alter.
Die sind jetzt alle 0, 0 in der Größe. 0.
Geht. Seht ihr es?
Er merkt sich, er merkt sich die Position hier.
Er merkt sich die Position
hier und die Position hier.
Aber seht ihr auch was?
WPF, WPF-Spack.
Der ist gerade ein bisschen rum.
Und da habe ich so aus dem Kopf keine Idee, wie wir das fixen.
Da müssen wir irgendwie gucken, dass das erstmal
ähm,
nicht das Bild rendert,
bis wir geupdatet haben.
Ich weiß gar nicht,
ob man es im Stream überhaupt sieht.
Aber, fällt euch auf,
wenn ich hier dazwischen umschalte,
dass dann ganz kurz an der neuen Position
noch das alte Bild ist.
Fällt euch das auf?
Das sieht man nur ganz kurz.
Da muss ich mal in mich gehen,
wie wir das machen,
weil es ist im Prinzip
sogar relativ logisch,
dass das funktioniert,
weil, ich sage ja hier
Set Position
und dann verschiebt er das
und danach sage ich Show Image.
Ich meine, ich müsste dazwischen sowas machen
wie Clear Image oder sowas.
Und dann hoffen,
dass die Render-Queue und Geduld
von WPF mitspielt.
Und,
ich bin ja geneigt,
mal zum Ausprobieren
Red Sleep oder sowas
dazwischen zu machen.
Einfach nur mal zum gucken,
ob das funktioniert.
Hide Position Show.
Ja, sowas in der Richtung, genau.
Sowas habe ich mir
gedacht gerade.
Wie wäre es mit
transparentem Bild oder gar keinem?
Transparentes Bild
ist eine coole Idee,
weil, sowas habe ich hier schon.
Guckt mal.
Ich habe hier, das ist das beste Bild überhaupt,
ja, das ist
ein 1x1
Pixel PNG transparent.
Guckt hier,
Dimensions, 1x1.
Es ist ein
leerer Pixel.
1x1 transparent leerer Pixel.
Also wer schon immer mal
wissen wollte, was das kleinstmögliche PNG
ist, es sind 95,
okay, es ist nicht das kleinstmögliche, es ist noch Transparenz,
aber 95
Byte.
Why PNG?
Weil Transparenz.
Wir können doch GIF nehmen, ja, GIF wäre auch gut,
würde auch funktionieren.
Ansonsten hast du nicht so viel Verbreitetes mit Transparenz
drinne.
Bitmap.
Reden wir jetzt wirklich
da drüber, ob wir 95 Byte,
95 Byte
optimiert müssen.
Wahrscheinlich wäre
GIF kleiner, ja.
Ne, JPEG kann das soweit, ich weiß nicht.
Wieso
braucht das 95 Bytes?
Ich vermute mal
PNG-Header-Geschwubbel
und Format
overhead und dann
quasi
4 Byte
4 Byte
Information, ja, oder?
Von der Idee her. 4 Byte,
du brauchst ja 1 Byte
rot, 1 Byte grün, 1 Byte
blau und
1 Byte Transparenz.
Also du brauchst
und das halt einmal,
also du brauchst wahrscheinlich 4 Byte
für den Pixel und
und quasi
von der Idee her, ja, und quasi
91 Byte sind Fileheader
und PNG-Verwaltungs-Overhead.
Das, äh,
Tera Fox, das könnte man tatsächlich machen, wir könnten
on the fly einen 1 x 1 Bitmap
erstellen mit Transparenz, so Create
Form RGB oder sowas, ja, das würde,
würde funktionieren. Aber, falls
euch das mal interessiert, wir könnten uns das tatsächlich
mal angucken.
Oh ne, äh,
boah, haben wir einen Hex-Editor unter
Windows? Hat Windows einen Hex-Editor?
Kennt jemanden
einen ordentlichen Hex-Editor für Windows?
Da könnten wir uns das mal angucken,
hab ich noch nie gemacht.
Ey, also so wichtig ist es jetzt.
Bash haben wir, wir haben kein Windows
für Linux drauf, nein, kein Linux für Windows drauf.
Und auch die Git,
ah, Gitchell haben wir noch installiert.
Haben wir da einen Hex-Dump?
Heimlich.
Hab ich nicht Git
deinstalliert?
Ne, hab ich nicht.
Egal, also, keine Ahnung.
Wurscht. Wir können es auch
in der Linux-VR machen.
HXD, taugt da was? Okay.
Hat er.
Ich muss jetzt mal gucken, dass ich nicht
gebetet werde. Wie sieht
denn das Ding aus? Okay,
das sieht nach dem Windows-Hex-Editor aus.
Und was hat eben noch gesagt?
1.0.1
Hab ich, das hab ich auch nicht verwendet.
Oh, der sieht deutlich, deutlich
sophisticated aus.
1.0.1-Editor.
Egal, der wird's,
der wird's tun, ja.
Okay, gucken wir uns mal das PNG an.
Bam!
So sieht ein PNG aus.
Ich sag euch doch, PNG-Header,
PNG, ähm,
PNG-Geschwubbel,
und irgendwo hier,
PNG-Trailer, so am Ende.
Und irgendwo werden wahrscheinlich dann meine
Farbinformationen drinstehen, ja.
Müssen wir jetzt gucken, wie
PNG aufgebaut ist.
Aber so hätte ich's im Prinzip auch erwartet.
Die Code-Tags kann man vergessen,
bis auf den Header am Anfang.
Das ist ein noch kleineres Transparentes.
Ich bin mit 95 Byte glücklich, ich brauch
nicht unbedingt mehr.
Aber jetzt müsste man halt gucken,
wo quasi
in PNG was steht.
Das sind die PNG-Specs.
Nee, das gucken wir uns jetzt nicht an.
Das ist, wie sagt man so schön,
out of scope.
Nice, hier wird gehackt, aber richtig,
wenn ihr gehackt wart.
Aber, ja.
So, jetzt brauchen wir ein paar
ordentliche Ideen, wie wir das
hier hinkriegen, dass es
eben nicht so hässlich schliert.
Hat Visual Studio
nicht ein Hack-Studio?
Gute Frage, könnte sogar sein, ja.
Ja, ja, könnte sein.
Okay, Leute, ihr könnt euch ja mal Gedanken machen,
wie wir das auf die Reihe kriegen.
Dass es nicht schliert. Ich geh mir mal kurz
mal schnell was zu trinken holen.
Das heißt, ihr habt mal 1-2 Minuten Zeit,
über das Problem zu meditieren.
Für alle, die das Problem nicht mitgekriegt haben,
ich hab's jetzt so eingerichtet, dass meine Memes
unterschiedliche Positionen speichern.
Alter, hab ich die Rectangle immer noch
nicht ausgeblendet. Äh, unterschiedliche
Positionen hier onscreen speichern können, aber
es schliert, ne.
Das alte Bild
ist an der neuen Position noch kurz
sichtbar. Könnt ihr euch ja mal was überlegen.
Ich geh mir mal kurz was zu trinken holen, ich bin gleich wieder da.
Jetzt dreht er durch.
So, ich bin wieder am Start.
So, was haben wir denn für
interessante Ideen gehabt?
Setzt das Bild auf das ClearPNG
und dann erst positionieren. Ja, das ist für,
das klingt für mich auch erstmal am
naheliegendsten. Ich fürchte allerdings,
dass es noch nicht reichen wird.
Weil es wahrscheinlich
asynchron gesetzt wird in der Imagebox,
vermute ich mal.
GEMA Gebühren, das ist ja, das ist ja GEMA-frei alles.
Was weiß ich.
Für das Zeug glaub ich nicht, dass man GEMA Gebühren bezahlen muss.
Und wenn nicht, sollen sie mich verklagen.
Anzeige ist raus.
So, ähm,
Show Image.
Und da geben wir jetzt das ClearPNG an.
So, jetzt gucken wir mal, ob's funktioniert. Ich glaub nicht, dass es reicht.
Äh,
Edge Lord, ja, das ist das erste, was ich zeigen kann.
Weil in den ersten hatte ich Musik drinne.
In dem einen hatte ich irgendwas von den Toten Hosen drin
und im anderen hatte ich die apokalyptischen Reiter drinne als Musik, das weiß ich noch.
Und
dementsprechend
ging das nicht.
Es schliert immer noch.
Seht ihr das?
Schliert noch.
Ich hab das Gefühl, ein bisschen besser.
Aber so ganz kriegen wir das noch nicht hin in WPF.
Und jetzt haben wir, jetzt sind wir wieder an dem Problem, warum manche Sachen in WPF sucken,
weil da so viel Magic im Hintergrund, äh, am werkeln ist.
Und zwar, ich vermute mal, also von der, rein von der Logik her, wäre das so die optimale Reihenfolge.
Wir clearen das alte Bild, wir verschieben die Window-Position und die Größe und wir zeigen das neue Bild an.
Das ist genau die Reihenfolge, wie es sein muss.
So.
Aber, ich vermute, dass WPF intern super clever ist und das hier asynchron macht.
Mit OWP wäre das wahrscheinlich auch passiert.
Ich vermute mal, dass das hier asynchron passiert, das, das Show-Image.
Also, dass der quasi das hier setzt und das Laden von diesem Image passiert asynchron im Hintergrund.
Sodass quasi als erstes das passiert und dann mehr oder weniger die zwei Sachen ganz, ganz schnell hinter nacheinander.
Vorsynchron geht nicht, keine Ahnung.
Wüsste nicht.
Wüsste nicht wie, weil unter der, also, das ist, was ich vermute, dass es deswegen ist, ja, ich weiß es ehrlich gesagt nicht genau.
Ähm, ich kann hier, ich kann hier nix, ähm, nix sagen, Sync oder so.
Ich sag hier im Endeffekt bloß hier neue Source und hier lädt er das Ganze.
Kann man hier so, kann man hier sagen?
Sync?
Googeln wir mal.
Sync.
Wenn man das so richtig schreibt.
Auf unserer Seite ist das auch schon alles synchron.
Das ist irgendwas, wenn hier irgendwas asynch ist, dann ist das unter der Haube, wo wir nix dran machen.
Aus unserer Sicht ist das alles synchron hier.
Ich kann hier auch nirgendswo raten oder sonst was.
Ah, so, und das ist halt, das ist halt eklig.
Wisst ihr, was wir jetzt mal was machen?
Wir machen jetzt was, was wir, was man normalerweise eigentlich nicht macht.
Wir machen jetzt, passt mal auf, haltet euch fest.
Und wenn das funktioniert, können wir uns überlegen, wie wir das ordentlich machen.
Wir machen jetzt ein Threadsleep von 20 Millisekunden.
First Finish Task.
Ja, wo krieg ich den Task her?
Ich hab hier kein Task.
In dem Fall, ja sag ich doch auch, wir machen, wir machen, wir machen ein Threadsleep.
Ja, und das wird jetzt wahrscheinlich funktionieren.
Ne, hä?
Aber, warum geht das net?
Nur mal so von der Theorie her.
Ich mach mal ein bisschen länger.
Warum geht das nicht?
Das muss doch jetzt funktionieren.
Ah, ah, Moment, ich weiß, woran das liegt.
Wir, wir, wir sleepen im Dispatcher.
Ist doch Schwachsinn.
Wollen wir doch gar nicht.
Ähm, äh, wir wollen hier drin sleepen.
Dass es mit dem Dispatcher-Sleepen nicht funktioniert, ist klar.
Jetzt geht's, ne?
Oder, Leute?
Jetzt geht's, ne?
Außer diese komische Rectangle, die müssen wir noch wegmachen.
Die ist irgendwie...
...verbackt.
Wenn wir schnell genug sind und im falschen, im falschen Refresh-Intervall reinkommen, laggt's immer noch, ne?
Seht ihr's?
Wenn man ganz viel Pech hat, laggt's noch.
Das ist jetzt halt, wo WPF-Magic zugange ist.
Und, und ich will auch, ich will auch ehrlich gesagt keinen Threadsleep drinne haben.
Wir können ja mal gucken, wie lang 20 Sekunden, Millisekunden hier an der Stelle wirklich sind.
Ich, ich, ich hämme jetzt einfach mal die Taste durch.
Na, also, ich kann euch sagen...
...gefühlt merkst du es eigentlich nicht.
Gefühlt merkst du es eigentlich nicht richtig.
Aber, warte mal, ich hämme mal die Taste durch.
Äh.
Erstmal Lull ordentlich platzieren.
Ja, merkt man.
Guck mal, das merkt es sogar so sehr, dass es rumbackt.
Jetzt, jetzt hängt's im Hintergrund irgendwie.
Und wahrscheinlich haben wir massig RAM ver...
Ja, das, das backt rum.
Mit der Verzögerung, äh.
Meine, meine Shortcuts gehen aus irgendwelchen Gründen nicht mehr.
Warum gehen meine Shortcuts nicht mehr?
MomKS geht noch?
Aber Lull geht nicht mehr?
What?
Ne, aber guck mal, wie, wie sehr das rumbackt.
Ne, das ist Müll.
Da machen wir keinen Steep rein.
Das ist, das ist ja eklig.
Das ist eigentlich relativ gut.
Also, das braucht relativ wenig RAM.
Ich meine, die Basisgeschichte, jetzt im Debug-Mode, brauchen wir quasi alles ohne Browserfenster.
Brauchen wir 176 MB RAM.
Was halt verdammt viel frisst, sind animierte GIFs.
Das ist, das ist ein hoch aufgelöstet animiertes GIF mit vielen Farben.
Guckt, guckt euch mal die RAM-Auslastung an.
Aber da kann ich nichts gegen machen.
Das ist halt diese WPF-GIF-Library.
Oder wie die coolen Leute sagen, die WPF-GIF-Lib.
Ähm, die ist halt sehr RAM-effizient.
Dafür, sobald wir ein anderes GIF nehmen, ist der RAM wieder freigegeben.
Da wird gleich, wird gleich ordentlich Garbage collected.
Schuh.
Aber es ist tatsächlich relativ RAM-effizient.
Auch wenn das jetzt mit 700 MB für ein GIF nicht so aussieht.
Aber es ist halt nun mal so, dass GIFs in dem Fall massig RAM fressen.
Doch, man könnte das auch mit MP4 machen.
Allerdings MP4 abzuspielen, ist noch ein Ticken schwieriger, als einfach ein GIF darzustellen.
Da musst du mit Media, musst du mit dem Media-Element hantieren.
Und, wo es komplett aufhört, ist Transparenz.
Deswegen GIF.
Und eine Sache.
Und das habe ich, das ist das, was ich gestern schon mal im Stream gesagt habe,
was wahrscheinlich keiner gecheckt hat, was ich meine, warum das gut ist.
Es gibt jetzt, wir können mit dem Herbst, mit dem Oktober-Update, mit dem Windows 10,
mit dem Windows 10 Oktober-Update, was nicht im Oktober gekommen ist,
beziehungsweise auch wahrscheinlich nicht im November kommt,
können wir jetzt UWP, ähm, UWP-Elemente, Controls in unserer WPF-Anwendung verwenden.
Und das heißt, wir müssen nicht mehr diese WPF-Anwendung verwenden.
Und das heißt, wir müssen nicht mehr diese WPF-Anwendung verwenden.
Und das heißt, wir müssen nicht mehr diese WPF-Anwendung verwenden.
Und das heißt, wir müssen nicht mehr diese WPF-Anwendung verwenden.
Und das heißt, wir müssen nicht mehr dieses komische WPF-GIF-Plugin verwenden,
Und das heißt, wir müssen nicht mehr dieses komische WPF-GIF-Plugin verwenden,
sondern wir können den normalen, das normale WPF-Media-Element verwenden,
sondern wir können den normalen, das normale WPF-Media-Element verwenden,
sondern wir können den normalen, das normale WPF-Media-Element verwenden,
sondern wir können den normalen, das normale WPF-Media-Element verwenden,
sondern wir können den normalen, das normale WPF-Media-Element verwenden,
media element verwenden oder wie das da heißt und das kann nämlich gibt und das
ist um ein vielfaches schneller und optimierter und besser als diese dpf
library guckt euch mal an zum beispiel hier das gibt wenn ich das mit dem
windows programm aufmachen zack ist da ihr seht wie schnell das geht na zack
zack und dieses und quasi dieses element kann man dann auch verwenden ab dem
aktiven ab dem oktober update das heißt ich werde mich jetzt gar nicht so sehr
mit mit mit gif ladezeiten rumschlagen danach brauchen wir für so ein gift
wahrscheinlich nur noch 50 mb rahmen und es geht ist es instant da allerdings
braucht das programm dann auch als voraussetzung windows 10 oktober update
vorher gibt es nicht also das gelege geht mir echt massive auf den sack
guck mal wie das rum legt es ist es ist es ist ziemlich schnell
und
aber es legt da muss ja was anderes überlegen wie wir das machen
es gibt ja noch mehr möglichkeiten wir könnten zum beispiel das fenster immer
full screen haben und darin dann die dinger platzieren
ja oder oder wir überlegen uns wie man das wpf beibringen
wir bräuchten eigentlich den wpf den event quasi on render finished oder so
was also sprich wenn ich weiß dass das geladen ist das muss ich mir aber noch
mal durch den kopf gehen und dann kann ich das auch noch mal überlegen wie das
angehen lassen wie wir das am besten machen weiß kann ich vielleicht
vielleicht dürfen wir auch nicht vielleicht dürfen wir auch nicht dass
wirpf і element verwenden mal überlegen ja mal überlegen wie man das
machen
vielleicht erledigt sich das problem mit dem oktober update auch von alleine
keine ahnung also schauen wir mal alle
ganzen krempel löschen
in die policy fileasten
im fall 2022
Ich zeige es euch. Ich bilde ein Soundboard für Meme-Imager.
Ihr könnt die Geräusche spielen.
Ihr könnt Text-zu-Sprache spielen. Windows, Windows Default Text-zu-Sprache.
Oder wir haben einen besonderen japanischen Weep Voice Text-zu-Sprache-Service.
Und ihr könnt Bilder zeigen.
Die Web-Interface ist nicht für den Desktop,
sondern für euer zweites Streaming-PC oder für ein Tablet oder Smartphone.
Alles mit einem modernen Browser wird diese Web-Interface funktionieren.
Und ihr könnt, wie beim Elgato Stream Deck,
eure Bilder zeigen und
Überlegungen zeigen,
während ihr spielt.
Ohne die unterliegenden Programme zu zerstören.
Ihr könnt Bilder zeigen.
Und ihr seht, dass das Konzert-Applikation nicht fokussiert ist.
Und das Selection nicht fokussiert ist.
Ihr könnt also jedes Spiel spielen.
Und Überlegungen zeigen oder Geräusche spielen.
Es funktioniert nicht mit exklusiver Voll-Screen.
Aber ich denke,
dass jedes Spiel in den letzten 15 Jahren eine borderless-Window-Mode hat.
Nein, ich bin kein League of Legends Spieler.
Ich bin kein Mobile-Player.
Okay, Leute.
Jetzt kommen sie wieder alle an.
Wisst ihr, jetzt kommen sie wieder alle an.
Max schreit Englisch, Alter.
Ich kann euch sagen,
es reicht, um mit Englisch-Native-Speaker zu kommunizieren auf Englisch.
kommunizieren auf englisch und der witzige ist das witzige ist dass leute
die englisch können sich überhaupt nicht darüber sich überhaupt keine gedanken
machen weil einer deutschen akzent hat oder überhaupt keine gedanken machen
wenn du mal ein bisschen ein bisschen mist erzählt weil die verstehen und das
einzige wissen was das einzige ist was sie sagen die sagen man hört dass er
deutsch ist das war's bisschen lauter besteht ja zum größten teil irgendwie
ausrauschen ja es kann auch letzten zehn jahre sein
also ich habe immer noch keine ahnung da kommt es noch nicht ernst oder böse
gemeint also wenn ich wirklich stinkig war wird sich das anderes anhören
ich finde es aber immer geil wie es also nun alter okay ich habe ehrlich gesagt
keine ahnung wie wir das jetzt gescheit wie wir das jetzt gescheit lag frei
machen wir brauchen jetzt die set position geschichte noch mal ein
ja
moment vielleicht soll ich das mal wieder rückgängig machen hier also
informatik steht nein habe ich nicht und so ist es richtig schnell aber es leckt
halt guckt euch mal das leckt sich übel sein ab ja wir bräuchten wir bräuchten
im prinzip so was wie irgendwie so sie rendering complete event oder sowas
bräuchten wir wobei nein das bräuchten wir auch nicht wir bräuchten wir bräuchten
event
also es geht hier ja bei so feelings zu tun aber wir zeigen셔야 webrü�미
des der bild过 vai radius von forecasting
so kann iche saying her springs
die bild anbieten so die bilder indication
jetzt hier möchtest du dir gorgeous
so eine bildgr娘
wenn das image element wenn das image element das bild geladen und angezeigt
hat das bräuchten wir als event test automatisierung and you need spec flow
Also wir bräuchten irgendwie sowas wie, keine Ahnung, Loaded, Finished, Rendering, Finished, Image, Display oder sowas.
Weiß nicht, ob es da ein Event gibt.
Guck mal, das ist jetzt übrigens auch neu in Visual Studio.
Man kann jetzt nach Events sortieren.
Was hältst du von Test-Driven Development?
In der Idee ganz toll, in der Praxis funktioniert es nicht quasi ausschließlich.
Wenn man mal ehrlich ist, mal Hand aufs Herz, ja.
Wenn man was anfängt und was ausprobieren will, dann machst du das nicht Test-Driven.
Da probierst du einfach aus.
Einfach, dass du schnell zur Porte kommst, ausprobieren kannst, ja.
Und später, wenn das Ding wirklich eine Version draußen ist und es ist fertig, also es geht die erste Variante von, dann kann man sowas machen.
Oder wenn man weiß, wie es geht und man ist quasi auf dem...
Aber direkt von Anfang an Test-Driven finde ich nicht sonderlich praktikabel.
Wenn man irgendwie ein bisschen was Komplexeres hat und man auch mit einem Team dran arbeitet, ist das schon eine coole Geschichte, ja.
Also die Idee dahinter ist ja, für die Leute, denen das nichts sagt, ist ja, dass du quasi nicht einfach drauf losprogrammierst.
Also mal angenommen, du hast einen Taschenrechner programmiert, ja.
Angenommen, du hast einen Taschenrechner programmiert.
Der eigentliche...
Der aktuell nur Plus rechnen kann.
Ganz einfach gesagt, ja.
Und das ist jetzt halt soweit fertig und die Leute freuen sich, dass sie Plus rechnen können.
Und jetzt kommt irgendwie einer zu dir und sagt, ja Leute, könnt ihr es nicht so machen, dass der auch Minus rechnen kann?
So, normalerweise würdest du sagen, naja, easy, kein Problem.
Setzt du dich hin und programmierst das und es funktioniert.
Oder auch nicht.
Test-Driven Development ist der Ansatz, der ein bisschen anders.
Du sagst, ähm...
Du...
Für GUI-Anwendungen ist das immer ein bisschen kacke, ja.
Also für Web-Anwendungen funktioniert das gut.
Ähm...
Und für irgendwelche Services funktioniert das gut.
Aber für GUI-Anwendungen funktioniert es auch, ja.
Sagen wir mal, bei...
Der Ansatz bei Test-Driven Development ist ein bisschen anders.
Ich würde das nicht einfach wild drauf losbasteln, sondern ich oder irgendjemand anderes bastelt einen Test, der quasi checkt, ob Minusrechnen geht.
Ja.
Ganz billig gesagt, der ruft einfach meine Calculate-Funktion auf.
Und steckt mal ein Minus rein und dann siehe da, der Test failt.
Das heißt, als nächstes implementiere ich genau das und nur das, was ich brauche, dass der Test funktioniert.
Ja.
Und das kann auch ganz billig anfangen mit, äh, hardcodedem Ergebnis.
So.
Und dann mache ich den nächsten.
Also, mal angenommen, irgendeiner sagt, äh, 3-3, also Input 3, äh, Operator Minus und Input nochmal 3.
Äh, soll 0 ergeben, dann würde ich erstmal hardcoded sagen, okay, äh, Return 0.
Dann ist der Test grün.
Natürlich kann der Taschenrechner dann immer noch nicht wirklich Minus rechnen.
Ähm, und dementsprechend brauchst du natürlich nicht nur einen Test für, sondern du brauchst eine ordentliche,
ne, was war, Abdeckung, eine ordentliche Set an Tests.
Und, ähm, dann implementiere ich alles, dass diese Tests grün werden.
Und dann bin ich fertig.
Das heißt, im besten Fall sind die Tests so gut, dass rein, dass die Tests funktionieren, quasi, ich sagen kann, mein Feature funktioniert.
Das ist der Sinn und Zweck der Sache dahinter.
Oder, habe ich das, habe ich das verständlich erklärt?
Oder was sagen die Leute, die schon nach dieser Methode gearbeitet haben?
Ergibt das ungefähr Sinn, was ich erzählt habe?
So, soweit ist, soweit ist die, ist die Idee dahinter halt.
Deswegen ist es halt auch oftmals, wenn du einfach anfängst und loslegst und irgendwas machst, nicht so wirklich praktikabel.
Keiner schreibt für irgendwie, ich probiere mal, ich probiere mal kurz was aus.
Keiner fängt an mit, ich, keiner fängt mit einem Test an, ein neues Projekt, ja.
Keiner.
Keiner.
Also, keiner sagt jetzt hier, äh, new project und das Erste, was er macht, ist, einen Test hinzufügen.
Macht er nicht.
Vor allem nicht, wenn du einfach was ausprobieren willst.
Was hältst du davon, dass du einer der ältesten Menschen auf YouTube, bin ich das wirklich, bist und einfach Videos gemacht hast über COD, als ich in der 6. Klasse war und jetzt studiere?
Äh, ja, ich finde das cool.
Es sind so viele Leute dabei, seit Jahren, ja.
Leute, die früher so quasi die, lol, alter Hellerspaß, so, weißt du, so Leute, die sind halt, die, die sind richtig quasi aufgewachsen damit.
Das finde ich cool, ja.
Und ich kenne ja auch viele Leute vom Namen her.
Klar, viele Leute haben jetzt schon den fünften, fünften YouTube-Account oder so.
Aber es gibt immer noch Leute, wenn ich den Namen sehe, weiß ich, der ist ewig mit dabei.
Wie alt bist du?
Ich bin 34.
Mit 120, ja.
Da bin ich schon ganz schön alt.
Ich habe ja vor, ich, ich nehme mir das ja regelmäßig vor, dass ich wieder aktiver Videos mache.
Weil immer, wenn ich anfange, macht das wieder Bock.
Aber was mir aktuell viel mehr Spaß macht, ist einfach sinnlos Zeug zu streben so an.
Macht, macht mir einfach gerade mehr Bock, ja.
Da gucken wir jetzt zwar in dem Fall, ich nenne es mal in Anführungsstrichen, nur 130 Leute zu, was übelst viel ist für, für sinnlose Tools programmieren, ja.
Aber es sind halt gescheite 130 Leute.
Wenn ich mir manche Comments schon durchgelesen habe, wie da unter dem Battlefield-Video, alter, da kriegt, guckt euch mal an, ey.
Da kriege ich Anfälle.
Die meisten Comments, 99% der Comments, äh, vollkommen top, ja.
Gibt's überhaupt nichts dazu zu sagen.
Ähm.
Hallo?
Nein.
Da wollte ich jetzt nicht hin.
Das sind aber auch die Leute, die kenne ich.
Aber die Leute, die, die ich nicht kenne, die neu quasi kommen, weil das Video, äh, mal ein bisschen promotet würde auf YouTube.
Da sind solche Spasten dabei, ey.
Guck mal hier.
Schön auf 10 Minuten gestreckt.
Spast.
Was laberst du eigentlich mit PS4-Spielen?
Habe gelitten.
Guck dir das Video an, da weißt du...
Ja, und es gibt noch mehr so Dinge, wo ich mir denke, alter, was für Idioten heute mittlerweile auf YouTube sind, ja.
Das meiste ist ja alles toll, ja.
Tut mir wirklich leid, aber ich finde dich richtig unsympathisch.
Man merkt nicht, dass du das Game magst.
Was?
Und man merkt richtig, dass du das Game nicht magst.
Ich finde das Video nicht objektiv.
Schade.
Das geht ja noch irgendwie, wie es geschrieben ist, ja.
Aber was hat das damit zu tun, dass ich das Game mag oder nicht?
Die Praxis dahinter ist einfach beschädigt.
Und am besten sind die Typen, die dann immer schreiben, so nach dem Motto, gibt's doch bei COD auch unangebrachter Hate, Hauptsache Klicks.
Ja, auf YouTube hätte ich mehr Views, aber YouTube ist eine scheiß Plattform zum Streamen.
Ich meine, das ist ja auch so ein Argument, was eigentlich nur Leute bringen, die sich keine Gedanken machen.
Nur, weil jemand anderes auch Scheiße macht, heißt es doch nicht, dass die andere Scheiße auf einmal keine Scheiße macht.
Also, mal angenommen, EA verarscht die Leute.
Wenn jetzt Activision auch die Leute verarscht, verarscht dann EA nicht mehr die Leute.
Oder wie?
Oder was soll man sich bei dieser Logik jetzt denken?
Hast du noch Kontakt zu Commander Kree und Kaboom?
Äh, ne.
Also, gar nicht mehr mit Kaboom.
Habe ich vor einem Jahr oder so noch was.
War ich noch was futtern?
Und eigentlich bin ich ja auch dran schuld, ja.
Weil ich bin ja im Endeffekt so ein Spaß, der sich dann auch nicht mehr verarscht.
Wenn ich den Kaboom jetzt anrufen würde und sagen würde, ey, gehen wir Asia All-Incanid machen,
würde er sofort sagen, auf geht's.
Auf geht's.
Der ist da sofort dabei.
Aber das liegt an mir, das liegt nicht an ihm, dass wir nicht mehr essen gegangen sind.
Findest du die Entwicklung von Commander Kree gut oder negativ?
Äh, Kree gut, negativ.
Äh, ich habe ewig nicht mal wirklich geguckt.
Das letzte Mal, als ich von ihm geguckt habe, war irgendwie in einem Tauchvideo oder so.
Aber ich muss sagen, ich habe noch nie viel Videos geguckt von ihm.
Einfach weil so Sachen wie Trials und so überhaupt nicht meins war.
Und so Zeiten, wo ich quasi noch Call of Duty und Battlefield und sowas aktiv gespielt habe,
da konnte ich das Spiel selbst gut genug.
Da musste ich zumindest nicht über den Krieger schauen, wie das funktioniert.
Ich kann dazu überhaupt nichts sagen.
Und selbst wenn ich was sagen könnte,
der Krieger ist jemand, da würde ich auch nichts dazu sagen.
Weil das einfach jemand ist, zu dem ich noch irgendwie so ein gewisses Verhältnis habe,
wo ich sage, wir kennen uns und da wird eigentlich nicht geflamed, ja.
Bei anderen hätte ich da weniger Probleme.
Ja Leute, also ich habe keine Ahnung, wie wir das hier gescheit machen.
Das muss ich mir erstmal in Ruhe durch den Kopf gehen lassen, dass es nicht mehr laggt.
Wir brauchen irgendeine...
Was gibt es denn für Elemente?
Elemente, um Images anzuzeigen in WPF.
Imagebrush, vielleicht können wir es ja selbst malen.
Imagebrush, vielleicht können wir es ja selbst malen.
Aber da geht es bestimmt nicht mit Transparenz oder so.
Neue Pizza, ja, Max FPS Pizza gibt es demnächst.
Mit Aktivsilikon, nicht mit Aktivkohle.
Aber mir ist Aktivsilikon drin.
Kann man in WPF nicht manuell was malen?
Gibt es in WPF nicht eine...
einen Canvas oder sowas?
Weil dann haben wir das Problem nicht.
Dann malen wir nämlich das Bild selbst und dann haben wir überhaupt keine Probleme mehr.
Warum schreibst du die ganze Zeit eins?
Das hat keinen tieferen Sinn, das ist eine Angewohnheit von mir.
Ich mache das immer.
Das ist eine total bescheuerte Angewohnheit von mir.
Ich schreibe immer eins und copy und paste.
Also ich schreibe immer eins irgendwo hin und cutte das dann.
Und mache es mir dazu.
Das ist so eine Idle-Animation quasi.
Das ist die Max-Idle-Animation.
Max-Idle-Animation sieht so aus.
Mache ich auch auf der Arbeit die ganze Zeit, wenn ich am überlegen bin.
Ich kann das im Prinzip machen ohne nachzudenken.
Ich kann das quasi ohne hinzugucken ohne nachzudenken.
Das ist wirklich die Max-Idle-Animation.
Ich habe schon am äußeren Rand an der linken Hand vom kleinen Finger
so einen Mini-Flag Hornhaut.
Das ist da wo ich immer mit dem kleinen Finger...
...für das Copy und Pasten für X immer die Control-Taste gedrückt halte.
Web-Applikation 11, das heißt, das ist Visual Studio automatisch.
Also immer wenn ich am überlegen bin, mache ich das.
Und immer STRG-S für Save.
Ich mache eins, markieren, STRG-X, STRG-S, eins.
STRG-X, S.
Das ist Max-Idle-Animation, was ihr hier seht.
Gibt es in WPF sowas wie On-Paint? Gibt es nicht, oder?
Ja, wir könnten ein Canvas nehmen. Ich glaube, das machen wir.
Ich glaube, wir werden ein Canvas-Element nehmen und die Bilder selbst malen.
Nicht mit dem Image-Element. Ich glaube, dann haben wir die Probleme nicht.
Dann werden wir nämlich einfach nicht malen.
Fensterpositionen, also wir werden einmal clearen Fensterpositionen,
verschieben und dann Canvas malen.
Es ist ja bei WPF, hast du halt DirectX drunter.
Bei Windows Forms ist es relativ einfach.
Dann überschreibst du On-Paint und kannst machen, was du willst.
In WPF ist das ausgelagert.
Weiß dein Arbeitgeber, dass du streamst?
Also es gibt genug auf der Arbeit, die wissen, dass ich streame, dass ich YouTube-Zeug mache.
Ich weiß nicht jeder.
So richtig mein Arbeitgeber, also ab einer gewissen Ebene, mit Sicherheit nicht.
Die wissen wahrscheinlich noch nicht mal, was streamen überhaupt ist.
Schon Jobangebote? Nein.
Ich habe das ja auch noch mal ganz kurz nebenbei erwähnt, dass ich mir, dass ich überlege,
mir eventuell nächstes Jahr was Neues zu suchen.
Und wenn ihr quasi die geheimen Tipps habt, was es gerade so an Angeboten gibt,
oder wenn eure Firma jemanden sucht, dann können wir darüber reden.
Das ist aber eh noch relativ gut.
Das ist doch relativ vage, ja.
Also ich sag mal so, wenn ich was Gutes finde, bin ich da wirklich nicht abgeneigt, mal auch wieder was anderes zu machen.
Ich meine, ich bin jetzt ja im Endeffekt schon seit...
Lass mal überlegen.
Seit 2012 bin ich da, wo ich jetzt bin.
Also das sind ja auch schon wieder fünf Jahre.
Davor war ich fünf Jahre woanders.
So alle fünf Jahre kann man doch mal was anderes machen, oder?
Mal eine blöde Frage.
Wie war deine Abschluss...
Oh, das ist eine interessante Frage.
Wie war deine Abschlussprüfung?
Und hast du viel gelernt oder kannst du das meiste aus dem Betrieb?
Also IHK-Abschlussprüfung...
Man muss für die Abschlussprüfung...
Also man muss explizit für die Abschlussprüfung lernen.
Man kann es nicht wissen.
Die IHK-Abschlussprüfung hat mit der Realität nur am Rande was zu tun.
Und auch das, was man in der Berufsschule macht,
hat nur am Rande was mit dem zu tun, was die IHK in der Prüfung wissen will.
Das Problem bei Prüfungen von der IHK ist hauptsächlich,
dass die Fragen so unglaublich bescheuert gestellt sind,
dass manchmal die Antworten gar nicht drauf passen.
Ja, also sprich, dass du quasi im Kopf die Fehlerkorrektur machen musst für die IHK.
Was wollen sie denn jetzt wissen an der Stelle?
Das heißt, das einzige, wie du dich darauf vorbereiten kannst,
ist die letzten paar IHK-Prüfungen machen.
Ja, lädst du dir einfach irgendwo auf irgendeinem Torrent oder so...
Ja, oder wahrscheinlich haben es deine Mit-Azubis auch.
Im Prinzip hat das ja jeder am Start.
Holst du dir die letzten zehn Abschlussprüfungen, die es gab,
und die letzten zehn quasi Sommer- und Frühling-Abschlussprüfungen
und machst die einfach.
Dann hast du 20 Stück, kannst du dir in den letzten zehn Jahren holst,
dir einfach ein komplettes Paket und machst den Kram und dann kannst du das.
Und der Witz ist, es besteht jemand, die Fachinformatiker-Abschlussprüfung,
ohne dass er das gelernt hat, überhaupt kein Ding.
Also, es schreibt jemand eine bessere Abschlussprüfung,
wenn er drei Monate am Stück quasi IHK-Prüfungen lernt,
anstatt wirklich die Ausbildung zu machen.
Das ist ja schon der Witz dabei, ne?
Würdest du was im .NET-Bereich suchen?
Ja, warum nicht? Klar, ich war im .NET.
Müsstest relocaten? Nee, ich kann nicht relocaten, ich hab ein Haus.
Ich relocate nicht.
Es ist auch zu optimal für Frankfurt.
Ich hab den Bahnhof direkt vor der Nase.
Also, direkt quasi vor der Nase.
Ich kann direkt von hier aus dem Hoftor zum Bahnhof losfahren,
Frankfurt Süd und bin dann mehr oder weniger gleich da.
Also, ich will auf jeden Fall was in Frankfurt und Umgebung haben,
wo ich von hier aus hinfahren kann,
weil ich relocate nicht, wenn ich ein Haus hab.
Aber was ich schön finde, dass immer mehr Läden jetzt mit Remote-Geschichten anfangen.
Das etabliert sich ja auch in Deutschland immer mehr.
Das war ja noch vor nicht allzu langer Zeit total verpönt.
So nach dem Motto, was Homeoffice, Remote-Arbeit, da schafft ja keiner was.
Also, wir sind halt in Deutschland, wir sind nicht so weit, ja.
Mittlerweile etabliert sich das immer mehr.
Mündliche Prüfung ist mies.
Hab ich euch schon mal erzählt, wie meine mündliche Prüfung gelaufen ist?
Hab ich das schon mal erzählt?
Kennst du dich mit Microsoft Dynamics NAV aus?
Keine Ahnung, aber nachdem es irgendein Microsoft-Produkt zu sein scheint, eher nicht.
Wann hattest du denn Prüfung?
Boah, scheiße, das ist lange her, 2008 oder so.
Nee, doch, irgendwie so in dem Dreh.
Go finde ich nicht hübsch, ja.
Überhaupt nicht.
Hab ich?
Äh, Koi-Boy, da kann ich gleich noch was zu sagen.
Also, kurz mal die Geschichte zu meiner mündlichen Abschlussprüfung.
Ja, Zwergrincher, das verstehe ich.
Das ist ein Punkt, wo ich das ja auch nachvollziehen kann.
Aber es ist in Deutschland in den letzten Jahren halt oftmals einfach so gewesen, dass man ohne irgendwie logischen Grund, ja.
Also sprich, wenn man quasi mehr oder weniger für Präsenz bezahlt wird, dann will man natürlich auch Präsenz haben.
Aber, dass viele aus Prinzip gesagt haben, oh nee, Homeoffice wollen wir nicht.
Und quasi, ich habe das Gefühl, dass lange Zeit in Deutschland quasi, ähm, dass das falschrum, die Ansichten falschrum waren.
So nach dem Motto, man möchte kein Homeoffice haben, weil einen die Leute bescheißen.
Also sprich, man, die Standardannahme ist quasi, dass dich die Leute bescheißen wollen.
Was ja die komplett, komplett bescheuerte Standardannahme ist.
Ähm, das, das hatten wir hier irgendwie einfach lange Zeit, ja.
Vor allem halt bei älteren Läden und, und die halt, halt so, so super Enterprise-mäßig sind, ja.
Wo halt nix agil und nix neu und, und quasi der Staub schon überall hängt.
Da ist das halt so.
Und das, das setzt sich mittlerweile langsam durch.
Und spricht ja auch überhaupt nichts dagegen, ja.
Vor allem, wenn es um, um irgendwelche Software-Entwickler-Geschichten geht.
So, also, ich wollte jetzt mal, ich wollte jetzt die Sache erzählen, meine, meine IHK-Abschlussprüfung.
Also, wir begeben uns jetzt mal ungefähr in das Jahr 2008.
So, und zwar lief das folgendermaßen.
Am Tag, wo ich Abschlussprüfung hatte, das war irgendwie im Juni oder so, irgendwann im Sommer.
14 Uhr hätte ich Abschlussprüfung gehabt.
Äh, in der Börse in Frankfurt.
Also, da ist, sind viele Abschlussprüfungen, es gibt nur ein paar Locations, wo das ist.
In der Börse in Frankfurt.
In der Börse in Frankfurt, Abschlussprüfung.
Und morgens, am Tag der Abschlussprüfung, ruft mich, äh, die Frau von der IHK an und sagt, äh, Max, Herr Max, Sie sind durchgefallen.
Habe ich gesagt, Moment, das kann doch überhaupt nicht sein.
Wie, wie soll ich durchgefallen sein?
Ich hatte meine Prüfung doch noch gar nicht.
Die Prüfung ist um 14 Uhr.
So, und, ähm, wie?
Okay, äh, erzählen Sie mal, was, wie, äh, wie?
Ich, ich verstehe es nicht.
Und ja, Sie haben Ihre Abschluss, äh, Unterlagen nicht eingereicht.
Sie sind durchgefallen.
Ich sagte, wie wollt ihr mich verarschen?
Ich habe doch sogar noch die Bestätigungs-E-Mail von euch, dass meine Unterlagen angekommen sind.
Ich habe noch den Hash-Wert vom Upload.
Wollt ihr mir jetzt sagen, ihr habt es nicht gekriegt, oder was?
Obwohl ich eine Bestätigungs-E-Mail von euch habe, dass ich den Grams abgegeben habe.
Dann sagt, oh, hm, wann haben Sie das denn hochgeladen?
Habe ich nachgeguckt.
Ich sage jetzt einfach mal irgendein Datum.
Ja, äh, keine Ahnung, erster, dritter.
Ich sage jetzt einfach mal irgendein Datum.
Keine Ahnung, wie lange vorher das war.
Und dann habe ich gesagt, guck mal, erster, dritter.
Und dann sagt, oh, ah, okay, da war Ihre Seite kaputt.
Und anscheinend war das so, dass die IHK-Seite zwei Minuten, nachdem ich abgeloadet habe und nachdem es mir die Bestätigungs-E-Mail geschickt hat, gecrashed ist.
Und, äh, das Ding war halt, wahrscheinlich war meine Abschlussarbeit und solche nur gecached oder nicht gespeichert.
Und, ähm, ich habe zwar eine Bestätigungs-E-Mail gekriegt, aber die IHK hat das nie erhalten.
Dementsprechend haben Sie gesagt, ich bin durchgefallen.
Ähm, und dann meint die halt so, ja, okay.
Hm, und wie machen wir das jetzt?
Wissen Sie was? Kommen Sie um 14 Uhr ganz normal vorbei, aber bringen Sie Ihr Projekt mit.
Also sprich, ich soll, ich soll den Scheiß mal ausdrucken.
Da habe ich gesagt, jawoll, kein Problem, ich druck aus.
Und das Geile war halt dann, ich bin um 14 Uhr da rein und die Typen, die da gehockt haben, hatten keinen blassen Schimmer von meinem Projekt.
Ich weiß noch nicht mal, ob die überhaupt den Titel wussten.
Und sie hatten einfach gar keinen Plan davon, weil sie sich das überhaupt nicht vorher angucken konnten.
Weil es die IHK ja gar nicht kannte.
Und da bin ich halt rein, habe dann die Unterlagen hingelegt.
Und da haben sie das quasi zum ersten Mal gesehen, so das Projekt, richtig, ne?
Ach ja, übrigens, äh, vorher mit dem ein, mit dem, mit dem, mit dem, ich, ich habe ja der Frau von der IHK nochmal dann die Bestätigungs-E-Mails geschickt.
Ähm, und dazu musste ich mich dann quasi übelst abgedreht von zu Hause remote reintunneln, dass ich über unsere Notes von damals noch die Mail raussuchen konnte und der IHK schicken.
Äh, da haben wir, da haben wir irgendwie Tunnel über fünf Workstations gebaut mit ein paar Kollegen.
Also ich bin im Prinzip, äh, was war überhaupt nicht erlaubt worden im damaligen Zeitpunkt, aber YOLO, scheiß drauf, Abschlussprüfung muss gemacht werden.
Und da habe ich halt da gesessen, erzählt, sonst war es, ich hatte, damals hatte man noch keine Laserpointer, sonst da hat man noch so einen krassen Zeigestock gehabt.
Habe ich dann Beamer angeschlossen, projiziert und ein bisschen rumgedeutet mit meinem Zeigestab.
Und ich weiß nicht wie lange das ging, 15 Minuten oder so.
Und ich weiß nicht wie lange das ging, 15 Minuten oder so.
Und war ich fertig.
Und normalerweise kommt dir danach quasi so die Fragerunde.
Danach wirst du quasi gefragt.
Und das Geile war, die haben halt überhaupt keine Ahnung gehabt von meinem Projekt.
Und wisst ihr was das einzige war, was sie mich gefragt haben?
Die haben einfach nur gesagt, und Herr Max, hat's funktioniert?
Und ich, ja, hat alles funktioniert.
Gut.
Fertig.
Easy bestanden.
Überhaupt kein Ding.
Keine Frage und nichts.
Ach ja, über meine, über meine, ähm.
Ausbildungsberichte haben sie sich noch lustig gemacht, dass die halt übel schlecht wären und sie mich eigentlich damit wieder heimgeschickt hätten, wenn das kritisch gewesen wäre, weil die waren halt mega schlecht.
Meine Ausbildungsberichte waren auch random generiert, die habe ich nicht selbst geschrieben.
Also sprich, meine Ausbildungsberichte waren ein Best-of aus irgendwie so 40 verschiedenen Sätzen, die ich automatisch zusammengebaut habe.
Allerdings, mein Chef hat die Dinger unterschrieben.
Beziehungsweise nein, mein Chef hat die Dinger noch nicht mal direkt unterschrieben.
Und Chef hat gesagt, nimm meine Unterschriftsgänse ein und mach sie drunter.
So, das waren, ich glaube, heute wäre das wahrscheinlich auch nicht mehr durchgegangen.
Ähm.
Ja.
Und die Ausbildungsberichte waren dann mega schlecht, ne.
Ja.
So ist das.
So war das.
Marks Abschlussprüfung.
Ähm.
Wollt ihr noch wissen, was ich gemacht habe als Abschlussprojekt?
Ähm.
Ich überlege gerade, wie das hieß.
Ah, wie hieß das?
Ich habe es irgendwo.
Ja, also.
Ich weiß nicht mehr, wie es genau hieß.
Also, es war sinngemäß sowas wie, ähm.
Standortkopplung per Layer 2 VPN zur transparenten Anbindung von Endgeräten.
Das war mein Abschlussprojekt.
Was ich gemacht habe, war eigentlich relativ einfach.
Ich habe einen VPN gebaut zwischen zwei verschiedenen Standorten.
Mit Layer 2 Bridge.
Und wir haben darüber Telefone weitergeleitet.
Weil wir keine Telefonanlage am zweiten Standort hatten.
Und die Telefone quasi auf Layer 2 Dinger tun wollten.
Tun wollten, ne.
IPs ziehen, Configs ziehen und sonst was.
Das heißt, ich habe einen VPN aufgemacht.
Eine Layer 2 VPN.
Eine Bridge dran gehängt.
Und auf der anderen Seite die Telefone angestöpselt.
Das war nicht großartig kompliziert.
Ja.
Dazu kam, dass ich das Projekt nie wirklich in die Tat umgesetzt habe.
Sondern es bloß theoretisch existiert hat.
Weil wir es gar nicht mehr gebraucht haben.
Ich habe so ein bisschen.
OpenVPN war das.
OpenVPN.
Okay.
Ähm.
Cowboy, bist du noch da?
Du wolltest was wissen zu wie man am besten mit Programmieren anfangen kann.
Äh.
Tipps für coole Firmen in Frankfurt.
Oh.
Da fällt mir jetzt so aus dem Bauch raus nichts ein.
Wir müssen mal.
Leute.
Habt ihr.
Habt ihr.
Äh.
Habt ihr da Lust drauf, dass wir mal Stellenanzeigen Review machen.
Im.
In einem der nächsten Videos.
Äh.
In einem der nächsten.
Nächsten Streams.
Da sind nämlich echt haarsträubende Dinger dabei.
Willst du deine Prüfung nochmal haben?
Hä?
Super.
Das check ich nicht.
Ewig viele Hilfeabfragen.
Willst du mal mit dem Switch probieren?
Ich muss.
Ich muss gerade Chat aufholen.
Der.
Ja.
Das man sehe ich auch.
So 8 Stunden am Stück.
Auch auf der Arbeit.
Arbeit.
Keine.
Gibt sogar Studien zu, dass Leute nicht 8 Stunden am Stück arbeiten.
Die meisten arbeiten ja wahrscheinlich irgendwie im Durchschnitt so richtig fokussiert.
Irgendwie 45 Minuten am Tag oder so.
Das ist aber auch.
Das ist auch vollkommen utopisch davon auszugehen.
Also gibt Studien zu.
Müsst ihr mal nachgucken.
Ja.
Ähm.
Ist auch vollkommen utopisch davon auszugehen, dass man beispielsweise an.
An so.
An so einem Projekt hier 8 Stunden konzentriert arbeiten kann.
Das schafft ein normales Hirn überhaupt nicht.
Für den DZX zu arbeiten ist doch bestimmt geil.
Weiß ich nicht.
Ich war nur ein paar mal im DZX drinnen.
Ich habe keine Ahnung wie es ist für den DZX zu arbeiten.
Weiß ich nicht ob da so viel geht.
Ich stelle es mir.
Ich stelle es mir ehrlich gesagt eher ein bisschen lahm vor.
Vielleicht stelle ich mir es aber auch noch falsch vor.
Ach.
Der Dr.
Haus.
Äh.
Ja.
Das ist ja nice.
Ich kenne den DZX.
Also ich kenne den DZX zwar von innen aber ich kenne.
Ich habe keine Ahnung wie das Ding überhaupt quasi läuft so wirklich.
Ja.
Keine Ahnung.
Ich stelle es mir jetzt halt erstmal gar nicht so spannend vor weil ich weiß ja nicht was
man da viel macht.
Aber.
Wahrscheinlich gibt es genug zu machen ja aber ich kann es mir irgendwie gerade nicht
so richtig vorstellen.
Wo dort.
Äh.
Dort wo wir unsere Racks haben.
Hatten.
War ich öfters.
Da wo sind wir jetzt eigentlich mal.
Wir sind ja nicht so weit weg.
Also war hier jetzt schon eine Riesengelegenheit.
Vielleicht ist es ein bisschen zu weit.
Oder du bist hier gerade.
Aber es ist die Ortung des Röhrers.
Also halt.
Da wo man sich wiegen muss.
Da wo man sich in dieser Röhre wiegen muss.
Wo du dich wiegen musst und dann darfst du rein.
Wieso muss man sich wiegen?
Dass du keine Arnele machst da dran.
Dass du keine Bombe rein bringst oder so.
Dass du den Scheiß.
Ich glaube hauptsächlich dass du den Scheiß den du auch mit rein nimmst wieder mit raus
nimmst.
Nee.
Ich würde eher sagen nicht das man was klaut.
Ich würde eher sagen das man nicht da lässt.
Ich hab einfach nichts damit.
Oder?
Ich weiß es ehrlich gesagt nicht
Ich rate das ja auch nur
Ja, ist denn derjenige noch da, der eben vorhin was gefragt hat?
Der Koi-Boy, ist der Koi-Boy noch am Start, ja?
Der wollte doch irgendwas wissen, wie anfangen mit Programmieren
Oder wie war die Frage nochmal?
Kannst du ja gerade nochmal kurz reinpasten
Ich finde es gerade nicht mehr
Wann warst du dann da?
Hm
Ich glaube vor vier Jahren oder so, zuletzt
Ja, also
Ja, paste die Frage
Also der Koi-Boy fragt
Würde so gern beginnen, aber weiß nicht wo und wie ich anfangen soll
Hast du denn
Also ich finde das Beste, wenn man anfangen will zu programmieren
Ist nicht zu sagen, so nach dem Motto
Oh, ich würde jetzt gerne programmieren
Weil, wenn man sich schon denkt
Oh, ich würde gerne programmieren
Dann hat man ja meistens eine Vorstellung schon
Was man gerne programmieren möchte
So, und wenn du schon eine Vorstellung hast, was du gerne machen willst
Du kannst ja mal in den Chat schreiben, was das ist
Dann
Würde ich mir die passende Technologie dazu suchen
Ja, also sprich
Willst du irgendwelche Desktop-UI-Geschichten machen
Willst du eher
Ayaya-Web-Interfaces machen
Oder willst du
Backend-Geschichten machen, servermäßig
Ja, willst du irgendwelche Linux-Geschichten machen
Einfach so, was du vorhast
Und alles passende dazu suchen
Also eine Sache, wo ich denke, wo man
Achso, in die Hanauer Landstraße
MD Dr. House
Hanauer Landstraße
Ich war bei Interaction, ja?
Ja, ja, Hanauer Landstraße
Also eine Sache, wo man auf jeden Fall nichts falsch machen kann
Ist aktuell mit .NET und C-Sharp
Da hast du im Prinzip alle Sachen offen
Außer Cross-Plattform-GUI-Entwicklung
Aber ich glaube, da wird sich in Zukunft auch noch ein bisschen was tun
Du kannst mit .NET bzw. .NET Core kannst du alles machen
Von der Web-Anwendung bis zu Windows-Server-Programmen
Bis zu Windows-Desktop-Programmen
Bis zu Windows-Kommandozeilen-Programmen
Du kannst Cross-Plattform-Server-Anwendungen
Web-Anwendungen
Kommandozeilen-Programme
Das einzige, was du halt nicht mit .NET gescheit machen kannst
Ist Cross-Plattform-UI
Und ich bin der Ansicht, es gibt eh
Für Cross-Plattform-UI gibt es eh nur
So eineinhalb
Vernünftige Sachen
Wie ich finde
Ich finde die einzig gute
Cross-Plattform-UI-Geschichte, die es gibt
Ist cute
Da kommt nichts
Und vielleicht in Zukunft Flutter
Müssen wir mal gucken
Web-Apps willst du machen
Wenn du Web-Apps machen willst, gibt es natürlich verschiedene Varianten
Es ist erstmal die Frage, auf welcher Plattform das laufen soll
Allerdings fährt man auf jeden Fall mit .NET und C-Sharp nicht schlecht
Was bei Web-Apps noch sehr beliebt ist
Früher hätte ich gesagt Ruby
Allerdings
Das ist mittlerweile
Rails ist nicht mehr so angesagt
Heutzutage Web-Anwendungen hast du eigentlich
Ein paar verschiedene Sachen
Du hast
Die Node.js Geschichte fürs Backend
Frontend lasse ich jetzt mal weg
Frontend ist
Prinzipiell
Immer JavaScript
Und du brauchst, wenn du Web-Anwendungen machen willst
Wir zählen da erstmal Backend und Frontend dazu
Frontend ist das, was im Browser läuft
Du brauchst JavaScript
Du kommst ohne JavaScript nicht vorwärts
Du brauchst HTML, CSS, JavaScript
Musst du können
Das geht einfach nicht anders
Das heißt mit
Web-Apps
Wenn du Web-Apps machen willst
Du musst zwangsläufig mit
Webseiten anfangen
HTML, CSS, JavaScript
Und dir dann was schönes basteln
Im Backend kann man sich überlegen, was man verwendet
Da gibt es im Prinzip einmal die Schiene Node.js
Die in letzter Zeit relativ beliebt ist
Es gibt Go
Go haben auch relativ viele
Web-Anwendungen im Backend
Java und so
Enterprise, Geschissler
Das machen wir weg
.NET Core
Auch schwer im Kommen aktuell
Eines der schnellsten Web-Frameworks
ASP.NET Core
Was es so gibt
Full Featured
Aktuell
Und finde ich auch
Also hier
Hier mein Dings
Meine App hier
Meine Meme-App funktioniert ja
Ist halt auch als Basis
ASP.NET Core im Hintergrund
ASP.NET Core hier
Sieht gut
Richtig gut
Ähm
Beim Browser-Spack drum
Warte, warte, warte
Warte, warte
Warte, warte, warte
Warte, warte, warte
Warte, warte, warte
Warte, warte, warte
Warte, warte, warte, warte
Browser-Spack drum
Wartet mal kurz, Leute
Ja
Ähm
So
Und dann gibt es noch
Was auch relativ beliebt ist
Ist noch
Django und Python im Backend
So für
Also es ist einmal beliebt
In
In
Also wissenschaftlicher Ecke
Ist Python ultra beliebt
Und Django auch im
Im Backend für
Jetzt nicht allzu große Sachen
Ja
Also für irgendwelche internen Tools
Und sowas
Wo man schnell was machen muss
Ist
Wunderbar
Mit Django
Aber
Wenn du Webapps machen musst
Machen willst
Das womit ich anfangen würde
Sind
CSS
Javascript
Und HTML
Weil egal
Was du als Backend verwendest
Vollkommen wurscht
Du brauchst
Für Web-Anwendungen
Frontend-Skills
Und das ist
Javascript
CSS
Und HTML
Da kommst du nicht dran vorbei
Das geht einfach nicht ohne
Was würdest du sagen
Das Java
Wegen der leichteren Syntax
Besser zum Lernen
Von Programmieren geeignet ist
Als die Sharp
Ja
Aber
Wenn du Webapps machen willst
Hast du keine Ahnung
Was es mit Java
Und der
Einheit
Hat
Ich weiß
Das kann auch
Eklige Sachen ausnehmen
Die ganze
Lambda
Geschichte
Die es in
C Sharp
Gibt
Weiß
Ehrlich gesagt
Nicht
Wie die
Mittlerweile
In
Ja, und auch hier so syntaktische Geschichten wie das hier.
Das ist übelst geil, sowas hast du in Java nicht.
Also die Syntax von C Sharp ist um Längen besser als Java, finde ich.
C++ ist nichts für Anfänger, sehe ich auch so.
Ja, Avalonia ist noch sehr, sehr in Kinderschuhen.
Es gibt nicht mal ein ordentliches Browser-Control, kein ordentliches OpenGL-Control.
Also ich habe mich damit schon, weil ich eben Cross-Plattform-GUI ein bisschen gebastelt habe, schon mit beschäftigt.
Avalonia kannst du vergessen.
Es ist ein gutes Projekt, aber das braucht noch ein bisschen.
Und Xamarin.Forms hast du das Problem, dass du keine ordentlichen Linux-Anwendungen machen kannst.
Die haben jetzt neuerdings, ich weiß, die haben neuerdings einen GTK-Untersatz.
Aber GTK ist Dreck.
Also wer mal Qt programmiert hat, GTK ist so ein Rotz für Cross-Plattform.
GTK ist ganz gut für Linux, aber auch nur für Linux und da eigentlich auch nur unter Gnome.
Ansonsten ist GTK einfach Shit.
Qt ist meiner Ansicht nach das einzige Cross-Plattform-Projekt.
Cross-Plattform, was es sinnvollerweise gibt.
Und das geht eben nur in C++ oder in Python.
Aktuell gescheit.
Es gibt ein paar Ansätze für die Sharp-Bindings.
Das wäre ganz ehrlich eine Kombination aus .NET Core Backend, also als .NET Core mit Qt obendruf, wäre mir eigentlich am liebsten.
Mal gucken, wie Flutter in Zukunft wird.
Ja, wenn die auch Desktop mal unterstützen, Cross-Plattform-Desktop, Linux, Mac, Windows, da bin ich mal gespannt drauf.
Was?
Dumme Frage, aber wie öffne ich .NET?
Du öffnest .NET gar nicht. .NET ist die Runtime.
.NET ist die Runtime für deine Programme.
Und die ist bei Windows schon dabei.
Zumindest das normale .NET Framework.
Du installierst dir die Visual Studio Community Edition, nimmst dir das kostenlose Galileo OpenBook für C Sharp und fängst an.
Dann lernst du alles, was du brauchst, komplett kostenlos, sowohl was Visual Studio und das OpenBook angeht.
Ach ja, PHP habe ich vergessen.
PHP ist besser als ein Ruf mittlerweile.
Ich weiß das Cross-Plattform-UI mit Xamarin.
Aber mach mal mit Xamarin eine Linux-Desktop-App.
Das will keiner wirklich machen.
Dann, dann, dann doch lieber gleich Elektron.
Ja, wenn man denn sich das geben will.
Ich würde wirklich gerne mit .NET Cross-Plattform-UI machen, aber das muss auch eine ordentliche Grundlage geben für Mac, Linux, Windows und das gibt es mit Xamarin nicht.
Ich spekuliere immer noch drauf, dass es vielleicht irgendwann mal von Microsoft was Offizielles gibt.
Ansonsten mal gucken, wie sich Avalonia entwickelt.
Vielleicht gibt es mal ein paar gute Qt-Bindings dafür oder vielleicht gibt es ein paar ordentliche Flutter-Geschichten.
Ich hoffe ja, dass Microsoft noch irgendwas bringt in der Richtung.
Der erste Ansatz, den ich jetzt gesehen habe, ist eine ganz gute .NET Core Elektron-Geschichte.
Wobei, Elektron, ich meine, man muss doch nicht wirklich für jeden Furz-Anwendung einen Browser starten mit Node.js.
Ja, für großes Zeug wie Discord.
Ja, okay.
Discord ist auch eine Multimedia-Anwendung, da ist es nochmal doppelt gut, dass es ein Browser ist.
Aber ich brauche doch nicht für ein Notizprogramm quasi einen Browser mit Node.js, dass es funktioniert.
Du kannst auch in C++ den Garbage-Collector.
Hast du halt schon, nämlich nicht.
Gibt es aber.
.NET ist schnell, .NET ist ziemlich schnell, ja.
Also, ja, ich hänge ein bisschen mit dem Chat hinterher.
Wenn du dir die Benchmarks anguckst.
Wollen wir mal kurz mal, ich muss übrigens gleich auf.
Äh, Web-Framework-Benchmark, da wirst du sehen, dass es nicht viel schnelleres gibt als ASP.NET Core.
Ja, ganz aktuelle Benchmark-Durchläufe und du guckst, wenn du guckst, die werden immer besser.
Vor, vor 1, 2 Jahren waren die noch hier unten am Arsch der Welt, ne.
Die werden immer besser.
Guck mal, ASP.NET Core, okay, es ist RAW-Datenbank mit Postgres, ja, also das ist, äh, das ist kein Entity-Framework oder so drunter.
Und es ist auch kein MVC oder so.
Einfach nur RAW-ASP, ASP.NET Core ist auf dem 6. Platz von Web, von Web-Frameworks, ja.
Auf dem 6. Platz.
Davor ist irgendwie gedöhnt, wo ich persönlich noch gar nichts davon gehört habe.
Und das dürfte mit Abstand des Komfortabelsten sein.
So, und wenn du nach MVC guckst, also quasi dann die richtig ordentliche Variante.
Ja, nimmst du zum Beispiel hier, guck mal.
ASP, ASP.NET Core, MVC mit Dapper, Postgres.
Oder mit Entity-Framework, Postgres.
Bist du immer noch im Vergleich zu anderen Sachen?
Bist du, du hast halt ein komplettes, du hast, du hast .NET Core drunter, du hast ein komplettes MVC.
Du hast, ähm, also Model-View-Controller, das ist so die Standardgeschichte, wie eigentlich fast überall, äh, Web-Anwendungen aufgebaut sind.
Also sprich, du hast, ähm, deine HTML-Views, du hast deine Controller, wo dann die Request durchlaufen, wo die Logik drin ist.
Und du hast deine Models, das ist für die Datenbank.
Wenn du guckst, das ist hier ein guter Gesellschaft.
Das ist ein guter Gesellschaft.
Und die meisten Sachen.
Die oben drüber kommen, sind halt auch schon ein bisschen abgespeckt.
Also es ist auf jeden Fall, es ist auf jeden Fall schnell.
Alter, was zum Scheu, was geht mit dem Chat ab?
What the fuck?
Alter.
Ja, Leute, ich hab keine Chat-History mehr.
Nein, ist das die Baro-Band?
So muss das sein.
Ah, das Werk, bam, bam.
Es muss Schläge geben.
Okay, Leute, ich hab keine Ahnung, über was es im Chat geht.
Ich hab auch keine History mehr vom Chat.
Ähm.
Also, ich hab jetzt einige Sachen nicht gesehen.
Ich kann jetzt leider nicht mal weiter mal an der Stelle.
Aber, ähm.
Ich hab vergessen, wie der Name leider war.
Aber hat dir das geholfen?
Ja, so grob als Überblick.
Wie man am besten anfangen kann.
Oh, der Hosting-Bot ist wieder am Start.
Was ist das eigentlich für Zeug, äh?
Moin, x-Azerbaijan.
Der Hosting-Bot ist am Start.
Aber das ist nicht schlimm.
Das ist nicht schlimm.
Oh, lass den Hosting-Bot ruhig hosten.
Kannst du eh nix dagegen machen.
Kannst du bitte mal dein Endpoint ma-
Was?
Soll ich nen Speedtest machen, oder was?
Was meinst du mit, mit, äh, kannst du mal dein Endpoint ma-
Endpoint meashern?
Was ist ein Hosting-Bot?
Das ist ein Bot, der quasi dich mit, keine Ahnung, 100 Twitch-Accounts hostet.
Die alle nur im Chat sind und keine Zuschauer bringen, aber einfach nur hosten wie verrückt.
Äh, unter, unter ner Millisekunde, siehst du nicht.
Also so nen Meme, ein Ausblend-Request ist instant.
Oh, ich hab's kaputt gemacht.
Das ist instant, hier, guck.
Ich, ich, ich geb zu, das ist keine super sophisticated Messung, ja.
Ich hab aber auch keine Plugins aktuell.
Es gibt nen schönes ASP.net Core-Plugin, wo man so Requests angucken kann.
Okay, ähm.
Also, wie lang dauert denn so ein Request?
Sieht man das hier irgendwo?
Sieht man nicht, ne?
Oh, sieht man das nicht?
Man sieht die Request hier drinnen gar nicht irgendwie.
Die Request müssen aber da sein, sonst wird das An- und Ausschalten nicht funktionieren.
Okay, die Request stehen nicht drinnen.
Keine Ahnung, wie ich das jetzt gescheit meashern soll.
Was bringt dem Hosting-Bot das?
Keine Ahnung.
Ich werd von irgendwelchen Fake-Grills zugespammt gerade.
Meine Güte, Bot-Bot-Scheiße, äh.
Oh, Mann.
Ich hab keine Ahnung, wie ich das jetzt gescheit messe.
Das muss ich mir, muss ich mir überlegen.
Ach, stehen Web-Sockets nicht drinnen im Network?
Stehen die nicht drinnen?
Dann guck ich nochmal, wie man, vielleicht kann man Web-Sockets extra einblenden.
Also, für die ganzen Fake-Grills, die mich gerade vollspammen, ich hab Private-Messages ausgeblendet.
Na, also, könnt ihr sein lassen.
Kann man Web-Sockets irgendwo anzeigen?
Nee, oder?
Ah, stimmt, Web-Sockets, stimmt, die machen die Verbindung auf.
Ja, keine Ahnung, wie man das messen kann.
Es gibt ein schönes, es gibt ein cooles Debug-Plugin für ASP.NET Core, für Chrome.
Da kann man das, kann man das wunderbar sehen, alles.
Das müssen wir das nächste Mal ausprobieren.
Warst du nicht mal Verfechter von der ganzen Linux-Welt?
Bin ich immer noch.
Bin ich immer noch.
Ich verdiene mit Linux mein Geld.
Ach, meint ihr, wir müssen den Web-Socket raussuchen?
Nein.
Da war ein WS-Tablet.
Echt?
Ah, interessant.
So, und da sieht man jetzt was.
Timing.
Es ist schnell.
Und wo sieht man da jetzt was?
Sieht man da jetzt irgendwie die Millisekunden?
Was, Aufnahme-Button drücken?
Nee, stopp.
Jetzt ist es aus.
Ey, ist ja schon an.
In dem Frames-Tab.
Ja, aber da sehe ich nicht die...
Ach, hier hinten, Time.
Hallo, ist das kompliziert.
Äh, es ist wenig.
Nee, das ist die Uhrzeit, oder?
Keine Ahnung, ob man hier gescheit die Millisekunden sieht.
Also, wenn ihr mir sagt, wo ich sehe, zeige ich es euch.
Aber ohne dieses komische ASP.NET Request Debug-Tool wüsste ich jetzt nicht.
Ich weiß, dass das die Zeit ist, aber das ist die Uhrzeit.
Wie die Differenz der Uhrzeit.
Von was nach wo?
Welche Differenz?
Ich habe ja jetzt die Uhrzeit.
Ich weiß, dass das die Zeit ist, aber das ist die Uhrzeit.
Wie die Differenz der Uhrzeit.
Von was nach wo?
Welche Differenz?
Welche Differenz?
Welche Differenz?
Welche Differenz?
Welche Differenz?
Ich habe ja keinen Startpunkt.
Ach so, du meinst die Differenz zwischen grün und, und, und.
Ja, okay.
Es ist wenig.
Es sind, ähm, 10, ungefähr 10 Millisekunden.
Es ist nicht viel.
Da ist eine Datenbank.
Ich weiß es nicht.
im Hintergrund, ja, ja, SQ Lite ist im Hintergrund. Was ein bisschen länger dauert, ist jetzt
beispielsweise ein GIF aufmachen, aber das liegt am WPF-Frontend, da kann ich nix machen.
Ah ja, die sind noch minimiert, die Dinger, die muss ich erst wieder großziehen. Also
das normale Triggern von so einem Bildchen geht halt mega schnell, aber das ist halt
auch lokal, ne, das ist, das ist in 10 Millisekunden oder so ist das durch. Das sind Files auf
der Platte. Also von der Idee her funktioniert das folgendermaßen, warum sollte es auf Localhost
genau, sehe ich auch so, ja, es muss ja im Prinzip schnell sein. Mach ich sie, warum
mach ich? Machen wir den nächsten Stream alles, ich muss jetzt erstmal demnächst
auf, ein paar Minuten. Ich zeige jetzt nochmal kurz, wie das gespeichert ist.
Also wir haben einmal die SQ Lite Datenbank, SQ Lite, oh ne, ich zeige euch mal die Datenbank
kurz von irgendwie SQ Lite Explorer oder sowas, SQ Lite Browser. Deswegen mag ich Scoop für
sowas, easy. Ist auch viel besser als ins Internet gehen und irgendwelche Krempel runterladen.
SQ Lite, ja, wo ist er denn? Achso, ich habe SQ Lite installiert. Oh, ich kack, Noob. Ich
wollte SQ Lite installieren. Oh, ich kack, Noob. Ich wollte SQ Lite installieren. Oh,
ich kack, Noob. Ich wollte SQ Lite installieren. Oh, ich kack, Noob. Ich wollte SQ Lite installieren.
SQ Lite Browser installieren. Hast du dich schon mit WebAssembly beschäftigt? Ja, habe
ich ganz am Anfang, wo es neu war, als es noch keine gescheite Browser-Integration gab
und jetzt letztens erst mit Blazor Pages. Blazor Pages ist, ich sage euch Leute, wenn
WebAssembly kommt und wenn Blazor Pages von Microsoft mit richtig Gas gegeben wird, werde
ich nie wieder eine Zeile JavaScript programmieren. Blazor Pages ist im Prinzip .NET im Browser.
Blazor Pages .NET im Browser auf WebAssembly. Übelst geil. Blazor W kann schon sein, dass
er das selbst programmiert hat, ich weiß nicht. Aber es ist relativ ähnlich zu dem, was ich
gebastelt habe. Vielleicht nicht ganz so sophisticated, aber. So, wir gucken uns mal kurz die Datenbank
an. Also, es ist relativ simpel. Das ist halt so die typische Entity Framework Rotz-Datenbank
dahinter. Es gibt eine eigene Tabelle für Hotkeys. Es gibt eine eigene Tabelle für
die Memes drinne. Zu so einem Meme ist gespeichert der Image-File-Name, zeige ich euch gleich,
das ist eine Random-ID. Der Image-File-Name, der Text-to-Speech-File-Name und der Audio-File-Name.
Dann ist gespeichert, ob es ein Favorit ist oder nicht. Der Name ist drinne, der Text
ist drinne, created ersetzt sich aktuell noch nicht. Dann der Hotkey. Der Hotkey, das ist
eine Referenz hier auf die Hotkey-Tabelle.
Da seht ihr ja, Control-Alt-Window-Shift-Keycode und dann ist noch drinne der Type vom Meme,
das ist ein Flag, E-Name. Also sprich, ob Audio, Text-to-Speech oder Images, welche
Text-to-Speech-Voice ausgewählt ist und wo die Koordinaten, wo das Fenster eben erscheinen
soll. Das steht in der SQLite-Tabelle drin und die Frage war ja, wo die Files sind.
Die Files liegen hier unter Content. Da liegen jetzt allerdings viel mehr, weil ich am Anfang
noch nicht alles gelöscht habe. Mittlerweile lösche ich ja die Dinger wieder beim Entfernen.
Na, ob die DB vollständig normalisiert ist, es ist mir vollkommen wurscht, ehrlich gesagt,
was die, das, bei der Mini-Anzahl an Einträgen da drinne, kann der Entity-Framework rumsauen
wie es lustig ist. Es ist mir vollkommen wurscht. Das wird auf jeden Fall immer im Millisekunden-Bereich
sein. Da kommt ja nichts großartig rein. Ähm.
Scoop hat sich das, ja, ja, klar, das ist eindeutig von Linux-Paketmanager abgeschaut,
aber es spricht ja auch nichts dagegen, sich das Gute abzuschauen. Direkt erst mal Crypto-Miner
implementieren in Deutsch. Es gibt doch schon Crypto-Miner in JavaScript, ist doch kein
Unterschied. Ich habe am Anfang übrigens kurz überlegt, ob ich die Bilder und Waff-Files
und sowas, ob ich die nicht als Blob irgendwie in der MySQL speichern soll. So, also JSON-Files,
JSON-Encoded, JSON-Encode, oh, stellt euch das mal vor, JSON-Encodedes Waff-50MB in SQLite.
Jawoll.
Max, warum heißt du nicht für MaxFPS? Ich heiße immer noch MaxFPS, aber auf Twitch
nicht.
Ach, Sibaro, ist das der Typ, der hier rum, rumgenervt hat?
Meinung zum Linux-Code of Conduct, ach, um so ein Zeug mache ich mir keine Gedanken mehr.
Ich mache mir da spätestens keine Gedanken mehr, seit der FreeBSD-Code of Conduct irgendwie
geschrieben hat, es ist verboten, Hack zu schreiben.
Also für umarmen, ja, weil das, das ist, also laut FreeBSD, wenn jemand in einem, in
einem Forums-Post quasi Hack schreibt, ja, äh, früher, früher als man auch in Deutsch
gechattet hat, hat man dann sowas geschrieben wie Knuddel oder, oder umarmen oder sowas,
es gab ja Zeiten, wo man, na, mit Chat so Dinger geschrieben hat und das ist verboten,
weil das ist ungewollter, simulierter, äh, physischer Kontakt. Das steht bei denen im
Code of Conduct.
Da hab ich mir gedacht, ey, Leute, wisst ihr, was macht das?
Ihr wollt es mir scheißegal, ich setz mich damit einfach nicht mehr auseinander.
Das ist einfach so unglaublich dämlich mittlerweile.
Klar, mit Don't Land Offer Performance Tube.
Ich weiß, dass du es nicht so meinst, aber ein, ein Nachteil von Blazor-Pages ist tatsächlich,
es ist noch zur Zeit ziemlich lahm.
Nicht zu sagen lahm wie Sau.
Ja, aber skriptisch schneller.
Nett, ich mein quasi, das, was Standard, ich weiß nicht, was, wie man, wie man Bytes in
Chasen ordentlich encodet, es kann schon sein, dass es Base64 ist, aber auf jeden Fall, wenn
Base64, dann Base64 nochmal in Chasen, drumherum, ja.
Ah, Sebao, da ist Sebao, das ist ein Detektiv, ist am Start.
Also mein Lieblings-Encoding ist immer noch, äh, ich sag jetzt einfach mal, weil das hat
letztens jemand zu mir gesagt, ähm, also mein Lieblings-Encoding ist immer noch MD5.
Joho, ist zwar absolut kein, aber hat letztens jemand gesagt, da hab ich mir auch gedacht,
okay, man möchte jetzt, er möchte jetzt so klingen, als weiß er, wovon er spricht,
aber er weiß offensichtlich nicht, wovon er spricht.
Ja, links.
Bestes, bestes Windows-Programm, was man immer braucht, der Prozess-Explorer.
Ohne Prozess-Explorer geht nix.
Immer schön durchstelzen, was läuft hier im Hintergrund, aha.
Hexor wieder am Start.
Code, Code-Excel, klingt doch schon mal richtig nach Hexor.
Ähm, OBS ist das allerschlimmste Hexor-Programm.
Con-EMU, L-Core.
Ja, warum muss Logitech das Ding eigentlich so bescheuert nennen?
Wo kein Mensch auf Logitech kommt.
Hier, das ist der richtige, das ist der wahre Crap hier.
Origin Web Helper Service.
Das Backend liefert die Waffs jetzt trotzdem encoded aus in JSON.
Nein!
Warum sollte das, warum sollte das Backend die Waffs überhaupt ausliefern?
Das Backend liefert die Waffs nicht aus.
Brauchst du ja auch gar nicht, das spielt die Waffs einfach selber ab.
Der Browser sieht die Waffs nie.
Hexor RGB-Effekte, genau.
Ja, ja, also, das, ähm, ich kann es jetzt mal kurz zeigen, das, das, das, das Backend hat ja, ne, muss nicht alles auf einer Kiste laufen.
Das Web-Interface ist dafür gedacht, um auf einer anderen Kiste zu laufen.
Na, das, das könntest du ohne Probleme auf dem zweiten Rechner laufen lassen.
Die Wiedergabe und Anzeige von den Bildern, die funktioniert halt über die WPF-App, die hier transparent über allem drüber liegt im Endeffekt.
Ähm, das war's.
Was das Web-Interface macht, das ist im Prinzip einfach nur so ein, so ein, ja, so ein bisschen wie so ein Elgato Streamlag.
Einfach, dass du halt ein, ein Board hast, wo du alles siehst und du klickst dem Web-Interface was an.
Und das Web-Interface macht eigentlich nichts anderes, wie über Signal A an das Backend zu schicken, welche, welche Sache jetzt angeklickt wurde.
Hier sind wir doch auch sogar gerade in, drinnen, wo das passiert.
Hier, das wird aufgerufen vom, vom Frontend.
Toggle mit der ID von dem jeweiligen...
Dann holt er sich das Item aus der Datenbank und gibt das weiter an den Meme-Service, toller Name, der dann weitermacht.
So, und der Meme-Service, der guckt jetzt erstmal, ist es ein Text-to-Speech-Meme, dann, äh, macht er Text-to-Speech, ist es ein Audio-Meme, macht er Audio, ist es ein Image-Meme, macht er Image.
Äh, Toggle-Audio ist relativ einfach, er nimmt sich den Desktop, die WPF-App, äh, sagt Stop oder Play Audio.
Äh.
Es ist eigentlich, äh, wie gesagt, ich, ich, ich hau's ja, äh, am Wochenende oder nächste Woche auf GitHub.
Ich finde, der Code ist eigentlich ganz okay.
Also, für den Umfang, den es mittlerweile her hat, und es hat auch noch ein paar Bugs, aber es ist, es ist echt ganz, ganz hübsch, ja, an, an einigen Stellen.
Man muss sich zumindest nicht für, nicht, nicht für schämen.
Okay, Leute.
Ich muss jetzt fertig, ich muss morgen wieder 5.45 Uhr aufstehen.
Glücklicherweise nur viermal die Woche.
Ja.
Falls jetzt jemand zugeguckt hat, ich sag's jetzt nochmal, weil ich jetzt ja ab und zu in den Streams angesprochen hab und auch schon, äh, ein paar Leute eben im Chat waren.
Sollte wirklich jemand irgendwo arbeiten, der jemand sucht, für 2019, im Bereich Frankfurt, es muss nicht im Bereich .NET sein, ähm, so, ihr habt ja meine Skills jetzt mehr oder weniger schon in den letzten paar Streams gesehen.
Dann kann ich gerne kontaktieren, am besten über die Business-E-Mail-Adresse, die bei YouTube steht.
Und, ich hör mir das gerne an, ich guck mir das gerne an.
Wie gesagt, ich, ich war jetzt fünf Jahre bei einem Laden, danach war ich fünf Jahre beim anderen Laden, bin ich immer noch, will ich auch nicht unbedingt weg, muss ich dazu sagen.
Ähm, aber wenn sich was Cooles anderes ergibt, bin ich da auf jeden Fall dabei.
So, ähm, was, wie sieht's aus mit Mainz-Wiesbaden, wie lang fährt man da?
Da fährt man ein bisschen zu lang, oder?
Ja, guck mal.
Ja, da fährt man ja allein, da fährt man eine Stunde von hier nach Mainz, und nach Wiesbaden fährst du auch nochmal eine Stunde.
Also eine Stunde, eine Stunde Viertel, also, sagen wir mal eine Stunde, Stunde bis eineinhalb Stunden mit Verspätung wahrscheinlich mehr, das ist mir am Tag dann fast schon ein bisschen zu lang.
Also das, das würde ich prinzipiell schon machen, wenn es halt die Möglichkeit gibt, Remount was zu tun.
Und, ähm, aber weil jeden Tag, wenn du die Bahn mit einrechnest, ist es halt...
Mittlerweile ist es echt schon so, du musst die Bahn quasi zum entscheidenden Faktor machen, ähm, was du dir für eine Arbeit suchst und was nicht.
Leider.
Ansonsten, wenn das jeden Tag super funktionieren würde, hätte ich mit einer Stunde Fahrzeit auch kein Problem, wenn der Rest geil ist.
Ich, äh, Sibaro, ich hab schon eine max-fps.de-Adresse.
Aber du kannst mir gerne auch eine TV-Adresse machen, das wäre schon schlecht.
Nutzt du Skype noch?
Nee.
Echt?
Wir haben...
Wir haben uns im Skype?
Ernsthaft?
Von was haben wir uns denn im Skype?
Also aktuell bin ich Angestellter.
Ich bin da aber auch für alles prinzipiell offen.
Ich meine, ich hab eine eigene Firma, der kann ich bestimmt auch ein bisschen meinen Tätigkeitszweck erweitern.
Aber ich würde prinzipiell, äh, eine Festanstellung bevorzugen.
Einfach, weil ich mir weniger Gedanken um alles Zeug drumherum machen muss und mehr schon für mein...
...anderen Kram.
Ähm, jegliche Steuer- und organisatorische Sachen immer mega auf den Keks gehen, bin ich da nicht so erpicht drauf.
Du wüsstest was in Frankfurt?
Da bin ich mal gespannt, ja.
Klar.
Also angucken ist nie verkehrt.
Man muss auch dazu sagen, also...
...eh...
...auch gerne im .NET-Bereich, ja, ich meine nur, weil ich jetzt hier irgendwie .NET probiere, ähm, äh, weil ich jetzt hier quasi hauptsächlich .NET...
...Hobby-mäßig im Stream zeige, mein, meine eigentliche, mein eigentliches Fachgebiet ist, äh, nicht unbedingt .NET, ja.
Also ich meine, das reicht für die meisten Sachen mit Sicherheit aus, ähm, aber hauptsächlich bin ich eigentlich Linux und, ähm, Javascript.
Boah, ich weiß nicht, Alter.
Der Max und Javascript, ich weiß nicht, ob das zusammenpasst.
Ja, Javascript, oh Gott.
Das muss aber schon was richtig Geiles sein, äh.
Linux, Python, ja, das ist schon eher was.
Eigentlich verdiene ich hauptsächlich mit Release-Management mein Geld zurzeit.
Also sprich, Source-Code-Verwaltung und alles, was drumherum so dazu gehört, ja.
Ähm, quasi, ja, ist immer schwierig, ist immer, ist immer schwierig, so in ein paar, in ein paar Sätzen zu beschreiben.
Ähm.
Ähm, Code-Review, Pull-Requests, ähm, gucken, dass man immer ordentlich seine Versionenzeit, äh, im passenden Takt rauskriegt, ähm, das ist eigentlich das, womit ich aktuell meine Kohle verdiene.
Deswegen, ich bin, ich bin aktuell eher in so einer Position, was zwischen, ja, zwischen, äh, Entwicklung und, ähm, Administration ist.
Also im Prinzip eigentlich das.
Was man neudeutsch so, so DevOps nennt.
Das passt eigentlich ganz gut, das ist also ein bisschen das Buzzword einzu, einzu, zu werfen, ja.
Ja.
Das ist eigentlich das, womit ich aktuell mein Geld verdiene.
Wie gesagt, ich beschäftige mich auch schon seit 15 Jahren mit allen möglichen Open-Source, Linux, sonst was Projekten.
Es gibt wenig, sagen wir mal, was ich nicht zumindest schon mal gehört habe.
Cluster-Hochverfügbarkeit, Erfahrung in großen Umgebungen.
Wohin muss ich schreiben?
Äh, ja, wie gesagt, ähm, ähm, kann ich dir, kann ich dir geben?
Kann ich dir geben, steht auch, steht auch auf meinem YouTube-Channel, aber ich kenne die Adresse auch, wir machen jetzt hier echt gerade Jobs-Suche über Twitch Live-Channel, lol, Alter.
Ähm, ich schick dir mal nicht die E-Mail-Adresse direkt, ich schick dir mal den Link zur About-Page von meinem YouTube-Channel.
Und, ähm.
Da kannst du dann in About gucken, weil dann ist es in keiner Suchmaschine drin, ne?
Kannst du einfach sagen, geschäftliche Anfragen, E-Mail-Adresse ansehen.
Und, äh, da kannst du mich ja reichen drunter.
Reparierst du manchmal Handys, Laptops, PCs von Bekannten?
Ganz, ganz selten nur noch.
Ganz, ganz selten.
Handys gar nicht, kannst du ja nicht mehr reparieren.
Laptops gibt's eigentlich kaum noch.
Und PCs, die haben die meisten Leute gar nicht mehr.
Die meisten Leute haben Tablets mittlerweile.
Ja, ah, siehste.
Profi.
Profi.
Jobsuche auf, ähm, Twitch und, und YouTube.
Ja, also, ich guck morgen in die Mails rein, ich muss jetzt leider pennen.
Und vielleicht ergibt sich ja irgendwas.
Ich mein, ich bin da, bin da vollkommen offen, was das anbelangt.
Und eigentlich war das ja eher nur so der Form halber, dass ich das jetzt auf Twitch gesagt hab, ja.
Ähm, aber ich weiß nicht, das wär ja mal, das wär ja absolut Next-Level-Jobsuche, ja.
Wenn man, wenn sich jetzt hier irgendwie was drüber ergibt.
Zumindest, ich kenn mich gut aus im Backend-Bereich und im Frontend-Bereich.
Sowohl war es...
Was Server anbelangt, was, äh, Linux-Hosting-Geschichten anbelangt.
Also, quasi, der Unterbau, ähm, im Prinzip bis zum Frontend, ja.
Ich glaub, das ist auch so eigentlich meine, meine größte Stärke, was das anbelangt.
Dass ich, ähm, quasi auf allen Ebenen eigentlich ganz gut durchblicke.
Ja.
So, äh, Leute.
Du musst nur aufpassen, dass dein Chef nicht zuständig...
Naja, ich sag mal so, mal zu gucken, was es sonst noch gibt, ist ja nicht, ist ja nicht verboten.
Also, ich, mein, mein, mein Chef weiß, dass ich streben soll.
Ich wiss noch mehr Leute, es könnte sogar sein, dass tatsächlich irgendeiner zuguckt.
Also, ich mein, zu gucken, was es sonst noch gibt, kann ja nun wirklich nicht verboten sein.
Also, wie gesagt, ich hab, äh, die About-Page von meinem YouTube-Channel, wo es die E-Mail-Adresse für den Kontakt gibt, reingepastet.
Wenn ihr irgendwas habt, schreibt einfach hin.
Oder sagt irgendwas, wenn ihr irgendwelche Tipps habt, keine Ahnung, wo es was gibt.
Kennt ja auch manchmal einen, der einen kennt.
Ja.
So.
So, Leute.
Wir machen jetzt Schluss.
Wenn du einen neuen Job hast, verlierst du allerdings deinen alten.
Gut, das ist, ähm, irgendwie logisch, ne?
Allerdings kann ja die Suche allein nicht verboten sein.
Ja, mach ich, äh, Frankie, ich muss, ich, ich guck's mir morgen an.
Mach, ich muss nochmal gucken.
Das war jetzt eh so eine spontane Geschichte, dass ich das jetzt überhaupt gesagt hab.
Ja, aber, mal gucken, was, was sich da ergibt, ja.
Alles klar.
Leute, ich muss pennen.
Und ich hoffe mal, ich krieg auch wieder mal ein Video zustande in nächster, in nächster Zeit.
Ich mein, das letzte hatte immerhin 53k Aufrufe, was sehr ordentlich ist, eigentlich.
Wenn man sich das mal überlegt, da ich so lange nichts gemacht hab.
Das heißt, ich werd so ein paar Videos machen.
Einmal, eins mach ich noch vor Battlefield Release, auf jeden Fall.
Wo ich noch was zu sag.
Zum, zum Game an sich.
Und ich wollte ja nochmal so einen, so einen IT-Stellenanzeigen-Review machen, weil da teilweise so extrem haaresträumende Sachen dabei sind.
Ja.
Wo man sich einfach ein bisschen drüber lustig machen muss.
Also, Leute.
See you.
Bis morgen.
Outro-Song.
Haben wir noch irgendeinen, den wir wieder hosten können?
Ist da ein Friseur am Start oder so?
Nee.
Okay, Leute.
Also, macht's gut.
Wir sehen uns.
See you.
Outro-Song
