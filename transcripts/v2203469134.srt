1
00:01:27,950 --> 00:01:29,390
So Leute, es wird ernst.

2
00:01:32,450 --> 00:01:33,650
Echt, was gab es für Werbung?

3
00:01:34,190 --> 00:01:35,170
Ich sehe keine Werbung.

4
00:01:35,410 --> 00:01:37,570
Vielleicht sieht man bei seinem eigenen Stream auch keine Werbung.

5
00:01:38,770 --> 00:01:44,250
Könnte aber auch dahin, dass ich überall aktuelle Werbeblocker am Start habe.

6
00:02:07,560 --> 00:02:09,220
Ach, auf dem iPad, ja, Paintschamp.

7
00:02:09,580 --> 00:02:10,680
Das kenne ich, das Problem.

8
00:02:11,320 --> 00:02:16,660
Wobei, ich schaue noch kaum noch Twitch auf dem iPad und auf dem iPhone.

9
00:02:17,720 --> 00:02:19,320
Nur die Channels, wo ich subscribed habe.

10
00:02:20,080 --> 00:02:21,980
Sonst hört man die Werbung nämlich auch zu viel.

11
00:02:25,500 --> 00:02:27,040
Bist du Hyper-Turbo-Subscriber?

12
00:02:27,680 --> 00:02:29,100
Ja, bei mir hast du keine Werbung.

13
00:02:29,560 --> 00:02:30,840
Wobei, ist das das Turbo?

14
00:02:31,160 --> 00:02:32,080
Ne, das ist das VIP.

15
00:02:32,620 --> 00:02:36,340
Also wenn du Twitch-Turbo hast, zusätzlich nochmal, dann nicht.

16
00:02:36,420 --> 00:02:37,680
Selfmade-Eis, danke für den Sub.

17
00:02:38,060 --> 00:02:40,060
Keck-Alu, warum auch immer Keck-Alu?

18
00:02:40,540 --> 00:02:41,600
Ich weiß es selbst nicht so genau.

19
00:02:44,880 --> 00:02:48,260
Ja, und wenn es bei mir Werbung gibt auf manchen Webseiten, die sich nicht überspringen lässt,

20
00:02:48,340 --> 00:02:51,740
dann mache ich den Ton aus, minimiere den Browser und gucke später wieder rein.

21
00:02:52,900 --> 00:02:55,440
Wobei, dass ja manche Webseiten auch versuchen zu detecten.

22
00:03:02,680 --> 00:03:03,480
Kleinen Pipi.

23
00:03:03,600 --> 00:03:04,100
Was?

24
00:03:16,610 --> 00:03:21,170
Ich habe vorhin, als ich den Stream ausgemacht habe, habe ich direkt etwas gefuttert.

25
00:03:22,530 --> 00:03:23,730
Das war dann so um...

26
00:03:24,050 --> 00:03:25,310
Na, direkt war das nicht.

27
00:03:25,490 --> 00:03:27,490
Hat schon ein bisschen gedauert.

28
00:03:29,190 --> 00:03:33,370
Also, sagen wir mal, ich habe um eins etwas gefuttert oder so, ja?

29
00:03:36,320 --> 00:03:37,680
Und ich könnte jetzt schon wieder etwas essen.

30
00:03:39,360 --> 00:03:41,360
Aber es dauert noch, dauert noch zwei Stunden.

31
00:03:41,980 --> 00:03:42,740
Dann hole ich mir etwas.

32
00:03:47,130 --> 00:03:47,930
Twitch macht das.

33
00:03:48,270 --> 00:03:49,350
Ja, du darfst ja auch...

34
00:03:49,350 --> 00:03:51,210
Nein, nein, nein, du darfst den Tab nicht wechseln.

35
00:03:51,230 --> 00:03:52,870
Du kannst aber den Browser zumachen.

36
00:03:52,990 --> 00:03:57,630
Oder, was ich meistens mache, ist nicht Browser minimieren, sondern einfach einen anderen Browser in den Vordergrund.

37
00:03:58,170 --> 00:04:00,490
Das scheint schwieriger festzustellen.

38
00:04:02,350 --> 00:04:05,910
Ja, ich habe gehört und mein Thermometer sagt auch, dass es draußen war.

39
00:04:06,010 --> 00:04:08,370
Lass mich mal kurz hier Home Assistant gucken.

40
00:04:09,750 --> 00:04:10,270
Außentemperatur.

41
00:04:11,870 --> 00:04:15,730
30,61 Grad Celsius.

42
00:04:20,030 --> 00:04:23,930
Am besten ist immer noch die Anzeige von meiner Wetterstation.

43
00:04:23,930 --> 00:04:29,890
Da steht drauf, also ich habe das ja hier im Home Assistant forwarded über Funk, ja?

44
00:04:30,750 --> 00:04:31,390
Nicht WiFi.

45
00:04:31,670 --> 00:04:33,850
Ich sage absichtlich nicht WiFi, weil es ist nicht WiFi.

46
00:04:34,130 --> 00:04:37,790
Es ist Oldschool 433 Megahertz Funk von der Wetterstation.

47
00:04:40,030 --> 00:04:41,250
Da steht dann 30...

48
00:04:41,250 --> 00:04:41,710
Oh, jetzt ist es...

49
00:04:41,710 --> 00:04:43,110
Oh, Leute, es ist kühler geworden.

50
00:04:43,490 --> 00:04:45,450
30,39 Grad Celsius.

51
00:04:46,530 --> 00:04:49,190
Also, bei mir steht da Außentemperatur.

52
00:04:49,770 --> 00:04:51,810
30,39 Grad Celsius.

53
00:04:52,610 --> 00:04:53,050
Gefühlt.

54
00:04:53,050 --> 00:04:53,290
30,39 Grad Celsius.

55
00:04:53,290 --> 00:04:53,330
30,39 Grad Celsius.

56
00:04:53,330 --> 00:04:53,350
30,39 Grad Celsius.

57
00:04:53,350 --> 00:04:53,410
30,39 Grad Celsius.

58
00:04:53,410 --> 00:04:53,470
30,39 Grad Celsius.

59
00:04:53,470 --> 00:04:53,510
30,39 Grad Celsius.

60
00:04:53,510 --> 00:04:53,530
30,39 Grad Celsius.

61
00:04:53,530 --> 00:04:53,910
30,39 Grad Celsius.

62
00:04:53,930 --> 00:04:55,190
30,39 Grad Celsius.

63
00:04:55,190 --> 00:04:57,330
Das ist kein Unterschied zwischen gefühlt und Außentemperatur.

64
00:04:57,610 --> 00:05:02,750
Warum das immer zwei Sachen anzeigen muss und gefühlt und Außentemperatur exakt immer gleich hoch ist,

65
00:05:03,710 --> 00:05:06,330
den Sinn habe ich noch nicht so genau verstanden von der Anzeige.

66
00:05:08,820 --> 00:05:11,560
Gefühlt würde ich eigentlich erwarten, dass da, wenn Regen ist oder so,

67
00:05:12,460 --> 00:05:14,640
oder Wind, dass es dann sich kühler...

68
00:05:14,640 --> 00:05:17,820
Aber das ist immer exakt die gleiche Temperatur, die da steht.

69
00:05:18,100 --> 00:05:20,280
Das ist wirklich Kek-Alu-Verschwörung.

70
00:05:21,200 --> 00:05:23,200
Wer auch immer diese Wetterstation programmiert hat.

71
00:05:24,520 --> 00:05:25,420
Das ist eigentlich ganz nice.

72
00:05:25,420 --> 00:05:25,480
Das ist eigentlich ganz nice.

73
00:05:25,500 --> 00:05:28,440
Das ist auch eine billige Wetterstation gewesen von Amazon.

74
00:05:28,700 --> 00:05:30,540
Irgend so eine China-Chinesen-Wetterstation.

75
00:05:31,040 --> 00:05:35,580
Also sprich, da ist so ein Windrichtungsding drauf,

76
00:05:35,700 --> 00:05:39,100
ein Temperatursensor drauf, Regenmenge und sowas.

77
00:05:39,700 --> 00:05:44,880
Also es ist eine Wetterstation, aber jetzt nichts super wissenschaftlich Akkurates.

78
00:05:44,980 --> 00:05:49,500
Hat aber auch nur irgendwie 80 Euro oder 120, ich glaube 120 Euro oder so gekostet.

79
00:05:50,200 --> 00:05:52,440
Aber das Coole ist, die hat ein Solarpanel drauf

80
00:05:52,440 --> 00:05:55,480
und da kommen zwei aufladbare Batterien rein.

81
00:05:55,480 --> 00:05:56,780
Und mit dem Solarpanel legt die die auf.

82
00:05:56,860 --> 00:06:00,040
Ich musste die jetzt in den Jahren, ich habe die bestimmt schon drei Jahre oder so jetzt,

83
00:06:00,760 --> 00:06:01,900
nicht einmal aufladen.

84
00:06:03,020 --> 00:06:06,040
Die ist auch etwas unzugänglich im Hof, die Wetterstation.

85
00:06:06,540 --> 00:06:08,460
Deswegen ist es ganz gut, dass man die nicht aufladen muss.

86
00:06:09,520 --> 00:06:13,820
Die sich selbst auflöst, selbst auflädt,

87
00:06:13,920 --> 00:06:15,280
weil auch nicht öfters die Batterien wechseln.

88
00:06:15,360 --> 00:06:16,220
Das ist eigentlich ganz nice.

89
00:06:16,220 --> 00:06:26,420
Und die Wetterstation selbst funkt ihre Werte über 433 MHz raus.

90
00:06:27,680 --> 00:06:30,440
Theoretisch könnte der Nachbar die auch abgreifen.

91
00:06:30,440 --> 00:06:34,920
Oder sollte ich mal keinen Bock mehr auf eine Wetterstation haben und mein Nachbar hat eine,

92
00:06:34,920 --> 00:06:39,550
könnte ich die von meinem Nachbar abgreifen.

93
00:06:39,550 --> 00:06:45,550
Keck, wait, wait, keck, keck, keck, wait, wait, wait, wait, wait, keck, keck.

94
00:06:46,550 --> 00:06:47,550
So.

95
00:06:48,550 --> 00:06:49,550
Leute, es wird ernst.

96
00:06:50,550 --> 00:06:56,550
Ich hoffe, ich habe das richtig gemacht, dass man das Terminal sieht, trotz Chico.

97
00:06:56,550 --> 00:06:57,550
Ich glaube so ist besser.

98
00:06:57,550 --> 00:06:59,550
Ah, jetzt guckt der Kopf von Chico noch ein bisschen rein.

99
00:06:59,550 --> 00:07:00,790
So ist es.

100
00:07:00,790 --> 00:07:01,790
Excellent.

101
00:07:01,790 --> 00:07:02,790
Excellent.

102
00:07:02,790 --> 00:07:06,360
Chico Protection.

103
00:07:07,360 --> 00:07:08,360
Ja.

104
00:07:09,360 --> 00:07:14,210
Jetzt ist Chicos Ohr genau hier unten an der.

105
00:07:14,210 --> 00:07:15,210
Excellent.

106
00:07:15,210 --> 00:07:19,750
Ja, Chat, was machen wir heute?

107
00:07:19,750 --> 00:07:25,790
Ich habe es dir heute Morgen schon mal kurz gesagt.

108
00:07:25,790 --> 00:07:37,040
Ich habe gesehen, dass die China-Chinesen von Espressif eine neue ESP-IDF-Version rausgebracht haben.

109
00:07:37,040 --> 00:07:38,040
Und da haben die jetzt einen Website.

110
00:07:38,040 --> 00:07:44,280
Da haben die jetzt einen Webserver dabei, der asynchron HTTP-Requests verarbeiten kann.

111
00:07:44,280 --> 00:07:46,280
Also mehrere gleichzeitig und sowas.

112
00:07:46,280 --> 00:07:48,280
Und das wollte ich mal ausprobieren.

113
00:07:48,280 --> 00:07:52,280
Wer keine Ahnung hat, was ESP-IDF ist, was ich mal vermute, was die meisten sind.

114
00:07:52,280 --> 00:07:56,720
Ja, das wird ganz grausam jetzt.

115
00:07:56,720 --> 00:07:57,720
Ich weiß das jetzt schon.

116
00:07:57,720 --> 00:08:01,720
Wer keine Ahnung hat, was ESP-IDF ist, und das dürften wahrscheinlich die meisten sein.

117
00:08:01,720 --> 00:08:07,720
Das ist ein Microcontroller-Framework für die Microcontroller von Espressif.

118
00:08:07,720 --> 00:08:10,720
Die Microcontroller von Espressif.

119
00:08:10,720 --> 00:08:14,720
Der bekannteste dürfte der ESP32 und der ESP2866 sein.

120
00:08:14,720 --> 00:08:20,720
Das sind so die Feld-, Wald- und Wiesencontroller, die in den meisten China-Geräten drin stecken.

121
00:08:20,720 --> 00:08:22,720
Die kann man sich aber auch so kaufen und benutzen.

122
00:08:22,720 --> 00:08:26,860
Und davon...

123
00:08:26,860 --> 00:08:28,860
Jetzt wird's, jetzt wird's...

124
00:08:28,860 --> 00:08:35,460
Ja, wobei man sagen muss, ESP-IDF selbst ist ja in reinem C.

125
00:08:35,460 --> 00:08:40,460
Also ist das dann mit irgendwelcher Callback-Hölle des Todes.

126
00:08:40,460 --> 00:08:41,460
Weiß ich nicht.

127
00:08:41,460 --> 00:08:42,460
Weiß ich noch nicht genau.

128
00:08:42,460 --> 00:08:44,460
Mal gucken, wie's funktioniert.

129
00:08:44,460 --> 00:08:46,460
Wie gesagt, ich bin mir da selbst nicht ganz sicher.

130
00:08:46,460 --> 00:08:50,460
Erstmal müssen wir WiFi-Connection herstellen.

131
00:08:50,460 --> 00:08:53,460
Und ihr habt gesehen, dass die Sachen jetzt neu sind.

132
00:08:53,460 --> 00:09:03,460
Denn die sind enthalten im Prerelease von ESP-IDF V5.3-RC1.

133
00:09:03,460 --> 00:09:04,460
Also das ist ganz neu.

134
00:09:04,460 --> 00:09:08,460
Erst vor zwei Wochen wurde das Ganze released.

135
00:09:08,460 --> 00:09:12,730
Und das probieren wir mal aus.

136
00:09:12,730 --> 00:09:14,730
Es sieht dann ungefähr so aus.

137
00:09:14,730 --> 00:09:18,730
Ich kann euch mal von der Idee her zeigen, was da rauskommt.

138
00:09:18,730 --> 00:09:20,730
Also, nur mal zur Erklärung.

139
00:09:20,730 --> 00:09:21,730
Nochmal.

140
00:09:21,730 --> 00:09:24,730
Hier das, wie so ein Controller aussieht.

141
00:09:24,730 --> 00:09:30,730
Sie hat im Prinzip die Größe von einem Raspberry Pi Pico.

142
00:09:30,730 --> 00:09:33,730
Gab's aber vorher schon und gibt jetzt auch deutlich bessere.

143
00:09:33,730 --> 00:09:38,560
Und ich hab hier beispielsweise so einen.

144
00:09:38,560 --> 00:09:40,560
Gerade liegen.

145
00:09:40,560 --> 00:09:42,560
Dieses Teil mit Display.

146
00:09:42,560 --> 00:09:46,560
Ist vollkommen egal, ob das ein Display ist, mit Display ist oder nicht.

147
00:09:46,560 --> 00:09:48,560
So eine, ja.

148
00:09:48,560 --> 00:09:50,560
Die Kiste liegt hier gerade.

149
00:09:50,560 --> 00:09:54,560
Das Teil hat auch zig GPIO-Pins, wo man Sachen dran anschließen kann.

150
00:09:54,560 --> 00:09:55,560
Machen wir heute aber nicht.

151
00:09:55,560 --> 00:09:58,960
Wir lassen dann drauf einen Webserver laufen.

152
00:09:58,960 --> 00:09:59,960
Das ist nichts Neues.

153
00:09:59,960 --> 00:10:00,960
Das haben wir schon gemacht.

154
00:10:00,960 --> 00:10:03,960
Ja, ich hab hier das Projekt, wo wir das letzte Mal aufgehört haben.

155
00:10:03,960 --> 00:10:05,960
By the way, ich sag's nur mal.

156
00:10:05,960 --> 00:10:07,960
Nicht für den Fall der Fehler, dass ich nicht dran denke.

157
00:10:07,960 --> 00:10:10,960
Secrets.h bitte nicht anklicken, Max.

158
00:10:10,960 --> 00:10:11,960
Heute.

159
00:10:11,960 --> 00:10:13,960
Ansonsten muss ich in meinen.

160
00:10:13,960 --> 00:10:18,960
Mich nebenbei in meinen WLAN-Access Point einloggen und das WLAN deaktivieren.

161
00:10:18,960 --> 00:10:21,960
Ich hab glücklicherweise extra WLAN nur für solche Bastelzwecke aufgemacht.

162
00:10:21,960 --> 00:10:23,960
Sollte ich doch was leaken.

163
00:10:23,960 --> 00:10:25,960
Also ist das nicht so schlimm.

164
00:10:25,960 --> 00:10:26,960
Ja.

165
00:10:26,960 --> 00:10:28,960
Wir haben das schon mal gemacht.

166
00:10:28,960 --> 00:10:29,960
Allerdings nicht asynchron.

167
00:10:29,960 --> 00:10:33,960
Also wir haben das letzte Mal auch schon einen Webserver gebaut.

168
00:10:33,960 --> 00:10:36,960
Der dann über Websocket.

169
00:10:36,960 --> 00:10:38,960
Über Websocket Sachen ausgeliefert hat und so.

170
00:10:38,960 --> 00:10:40,960
Das ist echt ganz angenehm zu programmieren.

171
00:10:40,960 --> 00:10:41,960
ESP, EDF.

172
00:10:41,960 --> 00:10:43,960
Ist ganz okay, ja.

173
00:10:43,960 --> 00:10:50,960
Also ist eines der angenehmsten Frameworks, die ich da kenne in der Richtung.

174
00:10:50,960 --> 00:10:53,960
Und ich hab das Projekt vom letzten Mal genommen.

175
00:10:53,960 --> 00:10:55,960
Hab einfach alles andere sonst rausgelöscht.

176
00:10:55,960 --> 00:10:58,960
Und das ist alles, was wir gerade aktuell haben.

177
00:10:58,960 --> 00:11:00,960
Mehr gibt's nicht.

178
00:11:00,960 --> 00:11:03,960
Und den Rest lass ich drinne.

179
00:11:03,960 --> 00:11:05,960
Weil ich reverte das danach auch wieder, wenn's funktioniert.

180
00:11:05,960 --> 00:11:08,960
Und bau das ins richtige Projekt ein.

181
00:11:08,960 --> 00:11:09,960
Also das Ziel ist heute folgendes.

182
00:11:09,960 --> 00:11:11,960
Und zwar.

183
00:11:11,960 --> 00:11:14,960
Wir wollen einen HTTP Post Request bekommen.

184
00:11:14,960 --> 00:11:15,960
Auf dem.

185
00:11:15,960 --> 00:11:18,960
Also hier schicken wir einen per Curl oder so.

186
00:11:18,960 --> 00:11:23,960
Wir schicken einen HTTP Post Request an den Microcontroller.

187
00:11:23,960 --> 00:11:26,960
Auf dem ein Webserver läuft.

188
00:11:26,960 --> 00:11:30,960
Und dieser Post Request soll asynchron bearbeitet werden.

189
00:11:30,960 --> 00:11:35,960
Also nicht, dass der Webserver hängt beim bearbeiten.

190
00:11:35,960 --> 00:11:38,960
Sondern, dass er noch weitere Requests bearbeiten kann.

191
00:11:38,960 --> 00:11:41,960
Während er den Post Request verarbeitet.

192
00:11:41,960 --> 00:11:43,960
Um das zu testen.

193
00:11:43,960 --> 00:11:45,960
Werden wir einfach mal.

194
00:11:45,960 --> 00:11:46,960
Keine Ahnung.

195
00:11:46,960 --> 00:11:48,960
1, 2 MB.

196
00:11:48,960 --> 00:11:52,960
Oder 500 KB große Dummy-Files hochladen.

197
00:11:52,960 --> 00:11:54,960
Mit denen wir nichts machen.

198
00:11:54,960 --> 00:11:55,960
Die wir einfach nur einlesen und wegschmeißen.

199
00:11:55,960 --> 00:11:56,960
Aber das ist jetzt ganz neu.

200
00:11:56,960 --> 00:11:58,960
Und zwar.

201
00:11:58,960 --> 00:12:00,960
Sieht man das auch hier.

202
00:12:00,960 --> 00:12:03,960
Das gibt's quasi erst seit ein paar Wochen.

203
00:12:03,960 --> 00:12:05,960
Dementsprechend keine Ahnung, wie gut das funktioniert.

204
00:12:05,960 --> 00:12:06,960
Ich kann euch mal ein Beispiel zeigen.

205
00:12:06,960 --> 00:12:07,960
Wie das.

206
00:12:07,960 --> 00:12:10,960
Von der Theorie her am Ende aussieht.

207
00:12:10,960 --> 00:12:12,960
Das ist übrigens auch ganz gut.

208
00:12:12,960 --> 00:12:15,960
Die haben für das meiste ziemlich gute Beispiele.

209
00:12:15,960 --> 00:12:17,960
Die China-Chinesen von Espressif.

210
00:12:17,960 --> 00:12:19,960
So, gucken wir mal hier.

211
00:12:19,960 --> 00:12:21,960
HTTP-Webserver.

212
00:12:21,960 --> 00:12:26,970
Async-Handlers.

213
00:12:26,970 --> 00:12:28,970
Also von der Idee her.

214
00:12:28,970 --> 00:12:30,970
Ist nicht ganz sonderlich übersichtlich.

215
00:12:30,970 --> 00:12:31,970
Von der Idee her.

216
00:12:31,970 --> 00:12:32,970
Das müssen wir jetzt auch machen.

217
00:12:32,970 --> 00:12:34,970
Dass das WiFi funktioniert.

218
00:12:34,970 --> 00:12:37,970
Von der Idee her sieht das dann irgendwie.

219
00:12:37,970 --> 00:12:38,970
So aus.

220
00:12:38,970 --> 00:12:39,970
Man macht irgendwie.

221
00:12:39,970 --> 00:12:46,940
Man macht irgendeinen Threadpool auf.

222
00:12:46,940 --> 00:12:48,940
Und dann.

223
00:12:48,940 --> 00:12:50,940
Muss man ihm sagen.

224
00:12:50,940 --> 00:12:53,940
Dass man diesen Request irgendwie Async handhaben will.

225
00:12:53,940 --> 00:12:54,940
Und whatever.

226
00:12:54,940 --> 00:12:56,940
Ich hab's mir selbst noch nicht so genau angeguckt.

227
00:12:56,940 --> 00:13:00,940
Aber ich bin mal gespannt, wie das funktioniert.

228
00:13:00,940 --> 00:13:01,940
Ich hab.

229
00:13:01,940 --> 00:13:02,940
Dass man auch durchblickt.

230
00:13:02,940 --> 00:13:04,940
Eigentlich noch nichts drinne.

231
00:13:04,940 --> 00:13:06,940
Ich habe im Prinzip nur ein leeres Projekt.

232
00:13:06,940 --> 00:13:07,940
Wenn man so will.

233
00:13:07,940 --> 00:13:08,940
Ja.

234
00:13:08,940 --> 00:13:09,940
Also ich habe eine Main-Datei.

235
00:13:09,940 --> 00:13:10,940
Ich habe eine Secrets.

236
00:13:10,940 --> 00:13:11,940
Ich habe eine Secrets.h-Datei.

237
00:13:11,940 --> 00:13:12,940
Da steht mein Webserver.

238
00:13:12,940 --> 00:13:13,940
Da steht meine WLAN.

239
00:13:13,940 --> 00:13:14,940
Meine WLAN-SSID.

240
00:13:14,940 --> 00:13:15,940
Und meine.

241
00:13:15,940 --> 00:13:16,940
Mein WLAN-Passwort drinne.

242
00:13:16,940 --> 00:13:17,940
Für ich.

243
00:13:17,940 --> 00:13:18,940
Das ist.

244
00:13:18,940 --> 00:13:19,940
Aber wie gesagt.

245
00:13:19,940 --> 00:13:20,940
Wenn ich's leake.

246
00:13:20,940 --> 00:13:21,940
Ist das nicht schlimm.

247
00:13:21,940 --> 00:13:22,940
Das ist bloß ein Test.

248
00:13:22,940 --> 00:13:23,940
WLAN.

249
00:13:23,940 --> 00:13:24,940
Nenn ich das.

250
00:13:24,940 --> 00:13:25,940
Der Chat gleich wieder eskaliert.

251
00:13:25,940 --> 00:13:26,940
Und sagt.

252
00:13:26,940 --> 00:13:27,940
Ha.

253
00:13:27,940 --> 00:13:28,940
Leaked Max.

254
00:13:28,940 --> 00:13:29,940
Ich bin drin.

255
00:13:29,940 --> 00:13:32,940
Ich kann das einfach ausschalten.

256
00:13:32,940 --> 00:13:33,940
Dann passiert nichts.

257
00:13:33,940 --> 00:13:39,660
Außerdem kommt mein WLAN eh nirgends wo hin.

258
00:13:39,660 --> 00:13:40,660
Ja.

259
00:13:40,660 --> 00:13:41,660
Und von der Idee her.

260
00:13:41,660 --> 00:13:43,660
Können wir das gerade mal machen.

261
00:13:43,660 --> 00:13:46,000
Von der Idee her.

262
00:13:46,000 --> 00:13:48,000
Ist das nicht viel mehr als so eine Art Hello World Projekt.

263
00:13:48,000 --> 00:13:49,000
Was ich hier hab.

264
00:13:49,000 --> 00:13:50,000
Flash.

265
00:13:50,000 --> 00:13:55,720
Wir flashen das mal auf den Microcontroller.

266
00:13:55,720 --> 00:13:56,720
Der.

267
00:13:56,720 --> 00:13:59,420
Nicht funktioniert.

268
00:13:59,420 --> 00:14:00,420
Ah.

269
00:14:00,420 --> 00:14:01,420
Ich bin im falschen Verzeichnis.

270
00:14:01,420 --> 00:14:04,820
Äh.

271
00:14:04,820 --> 00:14:05,820
Der nicht eingehängt ist.

272
00:14:05,820 --> 00:14:13,220
Das da ist das richtige.

273
00:14:13,220 --> 00:14:14,220
Das muss man auch wissen.

274
00:14:14,220 --> 00:14:15,220
Steht nicht dran.

275
00:14:15,220 --> 00:14:16,220
Nun.

276
00:14:16,220 --> 00:14:17,220
So.

277
00:14:17,220 --> 00:14:18,220
Wir flashen das jetzt mal.

278
00:14:18,220 --> 00:14:22,880
Auf den Microcontroller drauf.

279
00:14:22,880 --> 00:14:23,880
Und.

280
00:14:23,880 --> 00:14:24,880
Ich hoffe man erkennt was.

281
00:14:24,880 --> 00:14:25,880
Wenn nicht mach ich das ein bisschen größer.

282
00:14:25,880 --> 00:14:26,880
Wenn nicht machen wir das einfach hier.

283
00:14:26,880 --> 00:14:27,880
Ich glaub wir machen's hier.

284
00:14:27,880 --> 00:14:30,420
Ja.

285
00:14:30,420 --> 00:14:31,420
Ich.

286
00:14:31,420 --> 00:14:32,420
Wir machen's.

287
00:14:32,420 --> 00:14:36,170
Flash.

288
00:14:36,170 --> 00:14:37,170
So.

289
00:14:37,170 --> 00:14:38,170
Wir flashen das jetzt auf den Microcontroller drauf.

290
00:14:38,170 --> 00:14:39,170
Und man sieht.

291
00:14:39,170 --> 00:14:42,170
Das der aktuell eigentlich nichts macht.

292
00:14:42,170 --> 00:14:43,170
Außer hier.

293
00:14:43,170 --> 00:14:44,170
Alle halbe Sekunde einmal Tick auszugeben.

294
00:14:44,170 --> 00:14:45,170
Das sieht man da.

295
00:14:45,170 --> 00:14:47,450
Ansonsten macht der nur ein bisschen Init Kram.

296
00:14:47,450 --> 00:14:48,450
Komm.

297
00:14:48,450 --> 00:14:49,450
Wir machen hier das Terminal einfach zu.

298
00:14:49,450 --> 00:14:50,450
Wir machen das hier im Fullscreen.

299
00:14:50,450 --> 00:14:51,450
Dann erkennt man's auch besser.

300
00:14:51,450 --> 00:14:52,450
Also im Prinzip passiert noch gar nix.

301
00:14:52,450 --> 00:14:53,450
Der initialisiert seinen Flash.

302
00:14:53,450 --> 00:14:54,450
Der initialisiert das ganze Netzwerk.

303
00:14:54,450 --> 00:14:55,450
Wifi Zeug.

304
00:14:55,450 --> 00:14:56,450
Der legt.

305
00:14:56,450 --> 00:14:57,450
Die ESP EDF Event Loop an.

306
00:14:57,450 --> 00:14:58,450
Wo man dann auch noch mal.

307
00:14:58,450 --> 00:14:59,450
So.

308
00:14:59,450 --> 00:15:00,450
So.

309
00:15:00,450 --> 00:15:01,450
So.

310
00:15:01,450 --> 00:15:02,450
So.

311
00:15:02,450 --> 00:15:05,150
So.

312
00:15:05,150 --> 00:15:06,150
So.

313
00:15:06,150 --> 00:15:07,150
So.

314
00:15:07,150 --> 00:15:08,150
Und dann kommt das auf Event Loop an.

315
00:15:08,150 --> 00:15:09,150
Wo man dann gucken kann.

316
00:15:09,150 --> 00:15:10,150
Was auf dem Controller.

317
00:15:10,150 --> 00:15:11,150
Also asynchron gucken kann.

318
00:15:11,150 --> 00:15:12,150
Was auf dem Controller passiert.

319
00:15:12,150 --> 00:15:13,150
Und sagt.

320
00:15:13,150 --> 00:15:14,150
Wir wollen benachrichtigt werden.

321
00:15:14,150 --> 00:15:15,150
Bei jedem Event.

322
00:15:15,150 --> 00:15:16,150
Event ist sowas wie.

323
00:15:16,150 --> 00:15:18,690
WLAN Interface hoch und runter gefahren.

324
00:15:18,690 --> 00:15:19,690
Und sowas.

325
00:15:19,690 --> 00:15:22,150
Und ansonsten gibt der alle halbe Sekunde Tick aus.

326
00:15:22,150 --> 00:15:23,150
Das war's.

327
00:15:23,150 --> 00:15:25,150
Mehr passiert noch nicht.

328
00:15:25,150 --> 00:15:26,150
Und.

329
00:15:26,150 --> 00:15:29,150
Probieren wir das einfach mal aus.

330
00:15:29,150 --> 00:15:36,640
Ausdrinken.

331
00:15:36,640 --> 00:15:37,640
Es ist by the way.

332
00:15:37,640 --> 00:15:38,640
Weil das jemand geschrieben hat.

333
00:15:38,640 --> 00:15:41,500
Im Chat.

334
00:15:41,500 --> 00:15:43,060
Es ist ein reines C Framework.

335
00:15:43,060 --> 00:15:45,500
Es ist also nicht wirklich richtig.

336
00:15:45,500 --> 00:15:46,500
Asynchrones.

337
00:15:46,500 --> 00:15:47,500
C++.

338
00:15:47,500 --> 00:15:48,500
Es ist.

339
00:15:48,500 --> 00:15:49,500
Asynchrones.

340
00:15:49,500 --> 00:15:50,500
C in C++.

341
00:15:50,500 --> 00:15:51,500
Ja.

342
00:15:51,500 --> 00:15:57,520
Mit Rust.

343
00:15:57,520 --> 00:15:58,520
Haben wir es auch schon probiert.

344
00:15:58,520 --> 00:15:59,520
In ESP32.

345
00:15:59,520 --> 00:16:00,520
Zu programmieren.

346
00:16:00,520 --> 00:16:01,520
Das ging.

347
00:16:01,520 --> 00:16:02,520
Für das.

348
00:16:02,520 --> 00:16:03,520
Wie.

349
00:16:03,520 --> 00:16:04,520
Kurz.

350
00:16:04,520 --> 00:16:05,520
Ist dieses Projekt.

351
00:16:05,520 --> 00:16:06,520
Quasi.

352
00:16:06,520 --> 00:16:07,520
Erst gibt.

353
00:16:07,520 --> 00:16:08,520
Erstaunlich gut.

354
00:16:08,520 --> 00:16:09,520
Aber insgesamt.

355
00:16:09,520 --> 00:16:10,520
Fehlt da noch einiges.

356
00:16:10,520 --> 00:16:11,520
Was wir kommen.

357
00:16:11,520 --> 00:16:12,520
Ja.

358
00:16:12,520 --> 00:16:17,940
C++.

359
00:16:17,940 --> 00:16:18,940
Leider.

360
00:16:18,940 --> 00:16:19,940
Nicht.

361
00:16:19,940 --> 00:16:20,940
Vorbei.

362
00:16:20,940 --> 00:16:21,940
Ich würde gar keinen empfehlen.

363
00:16:21,940 --> 00:16:22,940
Ich habe auch keinen mehr.

364
00:16:22,940 --> 00:16:23,940
Wenn ich einen empfehle.

365
00:16:23,940 --> 00:16:24,940
Wenn ich einen mit.

366
00:16:24,940 --> 00:16:25,940
Automatischer.

367
00:16:25,940 --> 00:16:26,940
Staubsauger holen würde.

368
00:16:26,940 --> 00:16:27,940
Dann einen mit.

369
00:16:27,940 --> 00:16:28,940
Automatischer.

370
00:16:28,940 --> 00:16:29,940
Entleerstation.

371
00:16:29,940 --> 00:16:30,940
Das war so das.

372
00:16:30,940 --> 00:16:31,940
Woran es bei mir.

373
00:16:31,940 --> 00:16:32,940
Dann am Ende.

374
00:16:32,940 --> 00:16:33,940
Auch.

375
00:16:33,940 --> 00:16:34,940
Hakte.

376
00:16:34,940 --> 00:16:35,940
Ich habe.

377
00:16:35,940 --> 00:16:36,940
Ich hatte.

378
00:16:36,940 --> 00:16:37,940
Ich hatte keinen Bock.

379
00:16:37,940 --> 00:16:38,940
Das Ding.

380
00:16:38,940 --> 00:16:39,940
Regelmäßig sauber zu machen.

381
00:16:39,940 --> 00:16:40,940
Ich.

382
00:16:40,940 --> 00:16:41,940
Ich.

383
00:16:41,940 --> 00:16:42,940
Ich.

384
00:16:42,940 --> 00:16:43,940
Persönlich.

385
00:16:43,940 --> 00:16:44,940
Finde es immer noch angenehmer.

386
00:16:44,940 --> 00:16:45,940
Einfach.

387
00:16:45,940 --> 00:16:49,630
Mal hier schnell.

388
00:16:49,630 --> 00:16:50,630
Im Staubsauger.

389
00:16:50,630 --> 00:16:51,630
Durch zu rennen.

390
00:16:51,630 --> 00:16:52,630
Anstatt.

391
00:16:52,630 --> 00:16:53,630
Ja.

392
00:16:53,630 --> 00:16:54,630
Das heißt.

393
00:16:54,630 --> 00:16:55,630
Dass der Roboter.

394
00:16:55,630 --> 00:16:56,630
Das Ding.

395
00:16:56,630 --> 00:16:57,630
Raus holen.

396
00:16:57,630 --> 00:16:58,630
Umdrehen.

397
00:16:58,630 --> 00:16:59,630
Staub raus machen.

398
00:16:59,630 --> 00:17:00,630
Und so.

399
00:17:00,630 --> 00:17:01,630
Also.

400
00:17:01,630 --> 00:17:02,630
Wenn.

401
00:17:02,630 --> 00:17:03,630
Dann nur.

402
00:17:03,630 --> 00:17:04,630
Einen mit.

403
00:17:04,630 --> 00:17:05,630
Basisstation.

404
00:17:05,630 --> 00:17:06,630
Den sauber machte.

405
00:17:06,630 --> 00:17:07,630
Wurde dann quasi.

406
00:17:07,630 --> 00:17:08,630
Nur einmal die Woche.

407
00:17:08,630 --> 00:17:09,630
Oder alle 14 Tage.

408
00:17:09,630 --> 00:17:10,630
Je nachdem.

409
00:17:10,630 --> 00:17:11,630
Wie oft es fahren lässt.

410
00:17:11,630 --> 00:17:12,630
Den.

411
00:17:12,630 --> 00:17:13,630
Die Tonne ausleerst.

412
00:17:13,630 --> 00:17:14,630
Gut ist.

413
00:17:14,630 --> 00:17:15,630
Das ist okay.

414
00:17:15,630 --> 00:17:16,630
Ansonsten.

415
00:17:16,630 --> 00:17:17,630
Wirklich.

416
00:17:17,630 --> 00:17:18,630
Großartig.

417
00:17:18,630 --> 00:17:19,630
Empfehlen.

418
00:17:19,630 --> 00:17:20,630
Kann ich.

419
00:17:20,630 --> 00:17:21,630
Kein.

420
00:17:21,630 --> 00:17:22,630
Weil.

421
00:17:22,630 --> 00:17:23,630
Ich habe keinen mehr.

422
00:17:23,630 --> 00:17:24,630
Und.

423
00:17:24,630 --> 00:17:25,630
Noch.

424
00:17:25,630 --> 00:17:26,630
Bock drauf.

425
00:17:26,630 --> 00:17:27,630
Habt ihr.

426
00:17:27,630 --> 00:17:28,630
Zu benutzen.

427
00:17:28,630 --> 00:17:29,630
Das funktioniert.

428
00:17:29,630 --> 00:17:41,730
Alles.

429
00:17:41,730 --> 00:17:42,730
Nur mit.

430
00:17:42,730 --> 00:17:43,730
China Chinesen.

431
00:17:43,730 --> 00:17:44,730
Cloud.

432
00:17:44,730 --> 00:17:45,730
Und.

433
00:17:45,730 --> 00:17:46,730
Das sagt.

434
00:17:46,730 --> 00:17:47,730
Du.

435
00:17:47,730 --> 00:17:48,730
Bist.

436
00:17:48,730 --> 00:17:49,730
Doch.

437
00:17:49,730 --> 00:17:50,730
Der.

438
00:17:50,730 --> 00:17:51,730
Meister.

439
00:17:51,730 --> 00:17:52,730
Max.

440
00:17:52,730 --> 00:17:53,730
Naja.

441
00:17:53,730 --> 00:17:54,730
Ich.

442
00:17:54,730 --> 00:17:55,730
Verdiene.

443
00:17:55,730 --> 00:17:56,730
Mein.

444
00:17:56,730 --> 00:17:57,730
Geld.

445
00:17:57,730 --> 00:17:58,730
Mit.

446
00:17:58,730 --> 00:18:01,200
Das.

447
00:18:01,200 --> 00:18:02,200
Heißt.

448
00:18:02,200 --> 00:18:03,200
Er.

449
00:18:03,200 --> 00:18:06,320
Noch.

450
00:18:06,320 --> 00:18:07,320
Lange.

451
00:18:07,320 --> 00:18:08,320
Nicht.

452
00:18:08,320 --> 00:18:09,320
Wie.

453
00:18:09,320 --> 00:18:10,320
Ist.

454
00:18:10,320 --> 00:18:11,320
Dieses.

455
00:18:11,320 --> 00:18:12,320
Kram.

456
00:18:12,320 --> 00:18:14,790
Wie.

457
00:18:14,790 --> 00:18:15,790
Ist.

458
00:18:15,790 --> 00:18:16,790
Dieses.

459
00:18:16,790 --> 00:18:17,790
Zeug.

460
00:18:17,790 --> 00:18:18,790
Nicht.

461
00:18:18,790 --> 00:18:19,790
Temo.

462
00:18:19,790 --> 00:18:20,790
Temo.

463
00:18:20,790 --> 00:18:21,790
Ist.

464
00:18:21,790 --> 00:18:22,790
Eine.

465
00:18:22,790 --> 00:18:23,790
Eigene.

466
00:18:23,790 --> 00:18:24,790
Firma.

467
00:18:24,790 --> 00:18:25,790
Gibt.

468
00:18:25,790 --> 00:18:26,790
Sich.

469
00:18:26,790 --> 00:18:27,790
Mehr.

470
00:18:27,790 --> 00:18:28,790
Für.

471
00:18:28,790 --> 00:18:29,790
Die.

472
00:18:29,790 --> 00:18:30,790
Neuen.

473
00:18:30,790 --> 00:18:31,790
Tuja.

474
00:18:31,790 --> 00:18:34,520
Meine.

475
00:18:34,520 --> 00:18:35,520
Ich.

476
00:18:35,520 --> 00:18:36,520
Tuja.

477
00:18:36,520 --> 00:18:37,520
Tuja.

478
00:18:37,520 --> 00:18:38,520
Ist.

479
00:18:38,520 --> 00:18:43,160
So.

480
00:18:43,160 --> 00:18:44,160
Noch.

481
00:18:44,160 --> 00:18:45,160
Nicht.

482
00:18:45,160 --> 00:18:46,160
So.

483
00:18:46,160 --> 00:18:47,160
Entscheiden.

484
00:18:47,160 --> 00:18:48,160
Ist.

485
00:18:48,160 --> 00:18:49,160
Am.

486
00:18:49,160 --> 00:18:50,160
Ende.

487
00:18:50,160 --> 00:18:51,160
Ob.

488
00:18:51,160 --> 00:18:52,160
Man.

489
00:18:52,160 --> 00:18:53,160
Grafana.

490
00:18:53,160 --> 00:18:54,160
Benutzt.

491
00:18:54,160 --> 00:18:55,160
Oder.

492
00:18:55,160 --> 00:18:56,160
Nicht.

493
00:18:56,160 --> 00:18:57,160
Wichtig.

494
00:18:57,160 --> 00:18:58,160
Ist.

495
00:18:58,160 --> 00:18:59,160
Wie.

496
00:18:59,160 --> 00:19:00,160
Man.

497
00:19:00,160 --> 00:19:01,160
Seine.

498
00:19:01,160 --> 00:19:02,160
Metriken.

499
00:19:02,160 --> 00:19:03,160
Und.

500
00:19:03,160 --> 00:19:04,160
Seine.

501
00:19:04,160 --> 00:19:05,160
Werte.

502
00:19:05,160 --> 00:19:09,970
Bekommt.

503
00:19:09,970 --> 00:19:10,970
Seine.

504
00:19:10,970 --> 00:19:11,970
Traces.

505
00:19:11,970 --> 00:19:18,860
Und.

506
00:19:18,860 --> 00:19:19,860
Seine.

507
00:19:19,860 --> 00:19:20,860
Metriken.

508
00:19:20,860 --> 00:19:21,860
Und.

509
00:19:21,860 --> 00:19:24,780
Seine.

510
00:19:24,780 --> 00:19:25,780
Werte.

511
00:19:25,780 --> 00:19:26,780
Und.

512
00:19:26,780 --> 00:19:27,780
Seine.

513
00:19:27,780 --> 00:19:28,780
Werte.

514
00:19:28,780 --> 00:19:35,600
Die.

515
00:19:35,600 --> 00:19:36,600
Die.

516
00:19:36,600 --> 00:19:37,600
Und.

517
00:19:37,600 --> 00:19:42,090
Seine.

518
00:19:42,090 --> 00:19:43,090
Werte.

519
00:19:43,090 --> 00:19:44,090
Ist.

520
00:19:44,090 --> 00:19:45,090
Das.

521
00:19:45,090 --> 00:19:46,090
Ist.

522
00:19:46,090 --> 00:19:47,090
Er.

523
00:19:47,090 --> 00:19:48,090
Ist.

524
00:19:48,090 --> 00:19:49,090
Es.

525
00:19:49,090 --> 00:19:50,090
Noch.

526
00:19:50,090 --> 00:19:51,090
Ein.

527
00:19:51,090 --> 00:19:52,090
Zehn.

528
00:19:52,090 --> 00:19:53,090
Es.

529
00:19:53,090 --> 00:19:54,090
Zehn.

530
00:19:54,090 --> 00:19:57,400
Und.

531
00:19:57,400 --> 00:19:58,400
Zwei.

532
00:19:58,400 --> 00:19:59,400
Und.

533
00:19:59,400 --> 00:20:00,400
Zehn.

534
00:20:00,400 --> 00:20:01,400
Und.

535
00:20:01,400 --> 00:20:02,400
Zehn.

536
00:20:02,400 --> 00:20:03,400
Und.

537
00:20:03,400 --> 00:20:04,400
Zwei.

538
00:20:04,400 --> 00:20:05,400
Zwei.

539
00:20:05,400 --> 00:20:06,720
Was habe ich denn für eins installiert?

540
00:20:06,880 --> 00:20:07,360
Zeig mal her.

541
00:20:15,980 --> 00:20:16,720
Ja, wo habe ich denn das?

542
00:20:19,060 --> 00:20:19,380
Okay.

543
00:20:19,860 --> 00:20:20,440
Und wo sind wir hier?

544
00:20:20,520 --> 00:20:22,600
Home, Max, ESP.

545
00:20:23,600 --> 00:20:26,220
Ja, das ist ziemlich dämlich, das da hin zu installieren.

546
00:20:28,830 --> 00:20:28,910
Okay.

547
00:20:29,470 --> 00:20:30,230
Git, Clone.

548
00:20:30,730 --> 00:20:31,310
Da haben wir es doch.

549
00:20:31,390 --> 00:20:31,490
So.

550
00:20:31,850 --> 00:20:35,450
Nicht 514, sondern V53.

551
00:20:41,890 --> 00:20:42,730
Wie hieß das Ding?

552
00:20:43,150 --> 00:20:45,430
Was ich gesagt habe, was erst seit ein paar Tagen raus ist.

553
00:20:47,730 --> 00:20:48,290
Nicht wie dieses.

554
00:20:49,050 --> 00:20:49,290
Ähm.

555
00:20:49,970 --> 00:20:50,090
Ja.

556
00:20:54,680 --> 00:20:55,320
V53RC1.

557
00:20:55,880 --> 00:20:57,520
Was ist hier die Mission?

558
00:20:58,320 --> 00:21:04,040
Heute ist die Mission, an einen ESP32 einen HTTP Post Request zu schicken.

559
00:21:04,180 --> 00:21:05,120
Allerdings asynchron.

560
00:21:05,580 --> 00:21:12,120
Weil ich habe gesehen, dass die im neuen ESP-IDF einen asynchronen Web-Server drin haben.

561
00:21:12,280 --> 00:21:13,100
Das wollte ich mal ausprobieren.

562
00:21:13,520 --> 00:21:17,860
Web-Server habe ich damit schon gemacht, aber noch nie asynchrones Request-Handling benutzt.

563
00:21:17,940 --> 00:21:23,800
Also sprich, dass man mehrere, sodass der Web-Server auf dem Microcontroller nicht mehr hängt beim Bearbeiten eines Requests,

564
00:21:23,800 --> 00:21:25,800
sondern man theoretisch auch zwei, drei Sachen gleichzeitig schickt.

565
00:21:25,880 --> 00:21:41,620
Warum man das unbedingt auf dem Microcontroller braucht, kann man sich darüber streiten, aber ist auf jeden Fall nice.

566
00:21:44,300 --> 00:21:46,020
Dann nenne ich das mal so wie den Ordner hier.

567
00:21:46,640 --> 00:21:47,080
Clone.

568
00:21:48,380 --> 00:21:50,380
Max, hast du schon mal einen Fuß vor die Tür gesetzt?

569
00:21:50,480 --> 00:21:51,040
Nein, noch nie.

570
00:21:51,880 --> 00:21:52,100
Never.

571
00:21:55,690 --> 00:21:59,990
Punktiert das auch agentless oder ohne in seiner Anwendung aktiv was ändern zu müssen?

572
00:22:03,390 --> 00:22:05,150
Also, lassen wir mal Grafana außen vor.

573
00:22:05,150 --> 00:22:05,210
Ja.

574
00:22:06,470 --> 00:22:09,150
Wenn du Metriken sammeln willst, gibt es ja immer...

575
00:22:09,990 --> 00:22:22,190
Das Problem ist, wie bekommst du deine Metriken und ganz ohne Agents, beziehungsweise ganz ohne, dass deine Anwendung irgendwas macht, geht das nicht.

576
00:22:22,390 --> 00:22:23,950
Wie willst du da an irgendwas drankommen, ja?

577
00:22:24,770 --> 00:22:31,250
Also, klassische Art und Weise Monitoring war, so man fragt von außen.

578
00:22:31,250 --> 00:22:38,810
Man hat irgendeinen zentralen Server, sowas wie Zappix oder Nagios oder so und die fragen von außen die Systeme ab.

579
00:22:39,010 --> 00:22:39,970
So, pink das Ding.

580
00:22:39,990 --> 00:22:41,630
Ist der SSH-Port offen?

581
00:22:41,790 --> 00:22:44,730
Gibt es eine Web-Response auf Port 443 und sowas in der Richtung?

582
00:22:44,850 --> 00:22:46,030
Irgendwie über HTTPS.

583
00:22:46,630 --> 00:22:47,630
Funktioniert der Handshake?

584
00:22:48,010 --> 00:22:51,470
So, das war so ganz klassisches Monitoring, wie man das früher gemacht hat.

585
00:22:52,150 --> 00:22:54,350
So von außen, so ein bisschen Blackbox-mäßig, ja?

586
00:22:54,430 --> 00:22:57,850
Also, man hat sich von außen angeguckt, ist die Domain erreichbar, ist der Port offen, solche Geschichten.

587
00:22:58,310 --> 00:23:05,770
Das funktioniert natürlich auch nach wie vor und das funktioniert auch agentless in dem Sinn, weil das macht zentral deinen Server aus.

588
00:23:05,990 --> 00:23:08,090
Ob du jetzt den Server als Agent siehst oder nicht.

589
00:23:08,090 --> 00:23:09,470
Also, du musst zumindest nichts installieren.

590
00:23:09,990 --> 00:23:15,090
Sobald du aber ein bisschen mehr Details haben willst, hast du damals auch schon einen Agent gebraucht.

591
00:23:15,410 --> 00:23:23,750
Nämlich, wenn du beispielsweise wissen wolltest, wie ist die RAM-Auslastung auf meinen Servern, wie ist die Festplatten-Auslastung, wie viele Prozesse laufen, wie ist der Load.

592
00:23:24,190 --> 00:23:29,930
Dann musstest du auch in Zeiten von Nagios oder Zappix oder was auch immer, musstest du einen Agent installieren.

593
00:23:30,870 --> 00:23:37,330
Der Unterschied war, dass der Agent meistens die Sachen zurück an den Server geschickt hat.

594
00:23:37,330 --> 00:23:42,630
Oder der Server den Agent alle paar Minuten abgefragt hat.

595
00:23:44,630 --> 00:23:46,790
Also, du hast damals auch schon einen Agent gebraucht.

596
00:23:46,890 --> 00:23:48,210
Heute gibt es zwei Varianten.

597
00:23:49,030 --> 00:23:52,390
Also, bleiben wir mal bei einer, die relativ verbreitet ist.

598
00:23:54,150 --> 00:23:56,810
Und zwar, wenn du die Sachen über Prometheus einsammelst.

599
00:23:57,150 --> 00:23:59,910
Prometheus ist ein Pull-basiertes Verfahren.

600
00:24:00,030 --> 00:24:03,850
Das heißt, der Prometheus-Server fragt Metriken ab.

601
00:24:04,010 --> 00:24:06,850
Du brauchst keinen Agent, der Metriken an Prometheus schickt.

602
00:24:06,850 --> 00:24:07,130
Du brauchst keinen Agent, der Metriken an Prometheus schickt.

603
00:24:07,130 --> 00:24:07,210
Du brauchst keinen Agent, der Metriken an Prometheus schickt.

604
00:24:07,210 --> 00:24:07,310
Du brauchst keinen Agent, der Metriken an Prometheus schickt.

605
00:24:07,330 --> 00:24:09,490
Sondern Prometheus fragt die ab.

606
00:24:09,730 --> 00:24:14,250
Aber trotzdem braucht Prometheus was, wo es die Metriken abfragt.

607
00:24:15,830 --> 00:24:20,570
Das kann ein Exporter sein, wie das Prometheus nennt.

608
00:24:20,870 --> 00:24:26,610
Das ist quasi ein Agent, nur nicht wirklich ein Agent, wie man es kennt von früher.

609
00:24:26,790 --> 00:24:30,730
Sondern halt irgendwas mit einem Web-Endpunkt, den Prometheus crawlen kann.

610
00:24:31,790 --> 00:24:32,450
Das gibt es.

611
00:24:32,450 --> 00:24:35,830
Oder aber deine Anwendung.

612
00:24:36,250 --> 00:24:37,310
Brauch aktiv.

613
00:24:37,310 --> 00:24:46,450
Wenn deine Anwendung einen Matrix-Endpoint hat, wo es Prometheus-kompatible Werte zurückliefert,

614
00:24:46,510 --> 00:24:48,890
dann kannst du die auch abfragen ohne Agent auf dem Server.

615
00:24:49,010 --> 00:24:50,410
Aber das muss dann deine Anwendung unterstützen.

616
00:24:51,170 --> 00:24:59,150
Also wenn es dir nicht reicht, dass du einfach Blackbox-mäßig von außen drauf guckst auf deinen Server,

617
00:24:59,830 --> 00:25:04,930
sondern wissen willst, was auf deinem Server passiert oder Metriken von deiner Anwendung einsammeln willst,

618
00:25:04,930 --> 00:25:06,910
dann brauchst du entweder einen Agent auf dem Server.

619
00:25:07,310 --> 00:25:12,710
Oder deine Anwendung muss aktiv Metriken an irgendeinem Endpunkt bereitstellen, dass das funktioniert.

620
00:25:12,850 --> 00:25:14,950
Anders kann es ja auch gar nicht funktionieren.

621
00:25:22,090 --> 00:25:22,170
Ja.

622
00:25:23,830 --> 00:25:24,610
Ja gut, das stimmt.

623
00:25:24,670 --> 00:25:25,590
Das kannst du natürlich auch machen.

624
00:25:25,670 --> 00:25:27,850
Du kannst dich auch bei SSH darauf einloggen und dann was abfragen.

625
00:25:28,190 --> 00:25:28,890
Das geht auch.

626
00:25:30,810 --> 00:25:35,990
Das ist dann die Extended-Variante von Server fragt alle 5 Minuten ab.

627
00:25:35,990 --> 00:25:38,870
Server führt alle 5 Minuten den SSH-Check aus oder so.

628
00:25:42,360 --> 00:25:45,580
Mit SNMP kriegst du aber auch nicht raus, ob das funktioniert.

629
00:25:46,040 --> 00:25:50,980
Das heißt, wenn du deine Anwendung jetzt 3 Garbage-Collect-Runs hatte in den letzten 2 Minuten oder sowas.

630
00:25:50,980 --> 00:25:55,220
Also, letztendlich, es ist vielfältig, was du machen kannst.

631
00:25:55,220 --> 00:25:58,880
Du musst wissen, und das ist das, was irgendwie oftmals nicht richtig gemacht wird,

632
00:25:58,880 --> 00:26:00,220
du musst wissen, was du eigentlich haben willst.

633
00:26:00,220 --> 00:26:04,400
Ich habe das schon so oft erlebt, dass irgendwie 30 Milliarden Metriken eingesammelt werden.

634
00:26:04,400 --> 00:26:07,040
Davon ist eigentlich nur 2 relevant und der Rest ist Rauschen.

635
00:26:07,040 --> 00:26:13,340
Tracing und Profiling, da brauchst du einen Agent.

636
00:26:13,340 --> 00:26:15,340
Ne, da brauchst du keinen Agent für.

637
00:26:15,340 --> 00:26:17,340
Deine Anwendung muss das können.

638
00:26:17,340 --> 00:26:19,180
Und da gibt es eigentlich so ein bisschen eine Art, dass du da so eine Anwendung hast,

639
00:26:19,180 --> 00:26:19,320
dass du da so eine Anwendung hast, dass du da so eine Anwendung hast, dass du da so eine Anwendung hast,

640
00:26:19,320 --> 00:26:19,620
dass du da so eine Anwendung hast, dass du da so eine Anwendung hast, dass du da so eine Anwendung hast,

641
00:26:19,620 --> 00:26:22,620
Stichwort wurde nachgucken kannst Open Telemetry.

642
00:26:22,620 --> 00:26:27,220
Das gibt's für nahezu alle Programmiersprachen gibt's Implementierung von Open Telemetry.

643
00:26:27,220 --> 00:26:33,320
Open Telemetry hat 3 Dinger hat Traces, Logs und Metrix.

644
00:26:33,320 --> 00:26:43,940
Du musst Open Telemetry in deine Anwendung einbauen,

645
00:26:43,940 --> 00:26:50,910
und die kannst du dann collecten, wie du willst.

646
00:26:50,910 --> 00:26:57,960
Wahrscheinlich am ehesten über den Open Telemetry Agent,

647
00:26:57,960 --> 00:27:04,610
geht auch anders aber wenn du tracing machen willst das muss auf jeden fall

648
00:27:04,610 --> 00:27:12,900
deine anwendung unterstützen da musste ich mit dem thema open telemetry

649
00:27:12,900 --> 00:27:17,460
beschäftigen das ist so das stichwort was du googeln kannst und dir tutorials

650
00:27:17,460 --> 00:27:27,330
zu angucken ja ja ja tritt ich weiß es ja open telemetry heißt das da musst du

651
00:27:27,330 --> 00:27:35,930
danach suchen auch immer das klonen hat funktioniert

652
00:27:35,930 --> 00:27:48,960
v 5.3 rc1 wunderbar und jetzt install esp 32 s3 und dann stellen wir das ganze

653
00:27:48,960 --> 00:27:55,320
schon mal um auf die neueste esp version wobei ha moment wir können erst mal

654
00:27:55,320 --> 00:28:02,000
arduino rausschmeißen button rausschmeißen arduino jason

655
00:28:02,000 --> 00:28:06,300
rausschmeißen das brauchen wir jetzt alles nett required edf version juckt

656
00:28:06,300 --> 00:28:09,940
mich nett aber das alte mal ein bisschen

657
00:28:09,940 --> 00:28:10,100
schlecht

658
00:28:10,120 --> 00:28:21,980
schlanker ich habe ich eher das geschriebenen titel weil ich den eindruck

659
00:28:21,980 --> 00:28:29,220
habe c++ generell fühlt sich an wie auf wish bestellt so und jetzt switchen wir

660
00:28:29,220 --> 00:28:37,790
mal auf die neueste also esp welchem ordner habe ich das jetzt gemacht hier

661
00:28:37,790 --> 00:28:50,570
v3 export export punkt sh voll clean wird ob das jetzt noch bildet ob das

662
00:28:50,570 --> 00:28:50,730
funktioniert oder nicht und dann schau mal ob das jetzt noch bildet ob das von

663
00:28:50,730 --> 00:29:16,510
funktioniert okay wir benutzen die 53 rc1 scheint noch zu funktionieren flash

664
00:29:16,510 --> 00:29:20,630
es ist jetzt neu dass das hier in einer zeit okay es kompiliert noch auch mit

665
00:29:20,630 --> 00:29:24,350
53 das schon mal gut ich meine man kann es jetzt fragen es gibt nicht viel was

666
00:29:24,350 --> 00:29:29,690
nicht kompilieren könnte aber bei ssc plus plus man weiß nie doch da lasst uns

667
00:29:29,690 --> 00:29:34,610
mal schauen wie wir uns jetzt ins wlan verbinden da kann ich ein bisschen spicken

668
00:29:34,610 --> 00:29:35,310
da kann ich ein bisschen spicken da kann ich ein bisschen spicken da kann ich ein bisschen spicken

669
00:29:35,310 --> 00:29:52,580
muss ich auch und zwar da kann ich ein bisschen abgucken weil das habe ich

670
00:29:52,580 --> 00:30:00,100
gestern schon gemacht also wlan sich zu verbinden auf diesem controller ist mit

671
00:30:00,100 --> 00:30:09,890
dem standard arduino package mega easy da sagt man einfach wifi punkt beginn

672
00:30:09,890 --> 00:30:15,510
ssd passwort fertig mehr muss man nicht machen so einfach ist das mit esp edf

673
00:30:15,510 --> 00:30:19,240
natürlich nicht ob wir es lieben

674
00:30:19,680 --> 00:30:20,180
natürlich nicht ob wir es lieben

675
00:30:20,180 --> 00:30:27,940
das wäre das wäre zu einfach deswegen muss man da ein bisschen mehr machen aber

676
00:30:27,940 --> 00:30:27,960
das wäre das wäre zu einfach deswegen muss man da ein bisschen mehr machen aber

677
00:30:27,960 --> 00:30:36,190
ich finde es auch nicht schlecht gelöst ich mal kurz gucken

678
00:30:36,190 --> 00:30:36,210
ich finde es auch nicht schlecht gelöst ich mal kurz gucken

679
00:30:36,210 --> 00:31:00,600
ok also wifi connect excellent ok ich dann gucken wir das jetzt mal ab wie

680
00:31:00,600 --> 00:31:00,620
ok also wifi connect excellent ok ich dann gucken wir das jetzt mal ab wie

681
00:31:00,620 --> 00:31:02,600
ok also wifi connect excellent ok ich dann gucken wir das jetzt mal ab wie bugfrei das funktioniert weiß ich nicht das habe

682
00:31:02,600 --> 00:31:02,620
bugfrei das funktioniert weiß ich nicht das habe

683
00:31:02,620 --> 00:31:03,380
bugfrei das funktioniert weiß ich nicht das habe ich gestern auf die schnelle

684
00:31:03,380 --> 00:31:03,400
ich gestern auf die schnelle

685
00:31:03,400 --> 00:31:04,720
ich gestern auf die schnelle zusammen gewurschtelt und das hat

686
00:31:04,720 --> 00:31:04,740
zusammen gewurschtelt und das hat

687
00:31:04,740 --> 00:31:08,080
zusammen gewurschtelt und das hat funktioniert also ich kann das eigentlich

688
00:31:08,080 --> 00:31:08,100
funktioniert also ich kann das eigentlich

689
00:31:08,100 --> 00:31:10,040
copy-pasten, dann halten wir uns nicht so lange

690
00:31:10,040 --> 00:31:14,320
damit auf. Das hier braucht

691
00:31:14,320 --> 00:31:16,140
man, um sich mit dem WLAN zu verbinden.

692
00:31:20,090 --> 00:31:21,630
Warum da solche ekligen Sachen

693
00:31:21,630 --> 00:31:23,410
notwendig sind? Weil

694
00:31:23,410 --> 00:31:24,570
C++, keine Ahnung.

695
00:31:27,730 --> 00:31:29,490
Ich weiß, ich weiß

696
00:31:29,490 --> 00:31:30,610
grob, was es macht,

697
00:31:31,610 --> 00:31:32,850
aber warum?

698
00:31:33,850 --> 00:31:34,890
Ey, keine Ahnung.

699
00:31:38,400 --> 00:31:40,040
By the way, warum?

700
00:31:40,540 --> 00:31:42,240
Ich halte mal eine ernst gemeinte Frage,

701
00:31:42,360 --> 00:31:43,680
vielleicht auch an die C++-Kenner.

702
00:31:44,800 --> 00:31:46,340
Warum gibt es in C++

703
00:31:46,340 --> 00:31:48,640
so viele Varianten

704
00:31:48,640 --> 00:31:49,800
irgendwas zu casten?

705
00:31:50,500 --> 00:31:52,200
Was ist denn nur mit casten los?

706
00:31:52,620 --> 00:31:53,960
Was ist denn so schlimm dran,

707
00:31:54,580 --> 00:31:55,220
zu sagen,

708
00:31:58,910 --> 00:32:01,450
wir casten das zu einem Character-Array?

709
00:32:02,630 --> 00:32:03,170
Das ist

710
00:32:03,170 --> 00:32:04,410
sogar noch schöner lesbar.

711
00:32:05,890 --> 00:32:07,170
Ja, wahrscheinlich überspringt

712
00:32:07,170 --> 00:32:08,690
man damit irgendwelche

713
00:32:08,690 --> 00:32:10,650
Compile-Time-Checks,

714
00:32:11,690 --> 00:32:13,310
aber nachdem C++

715
00:32:13,310 --> 00:32:14,810
eh unmöglich ist,

716
00:32:18,600 --> 00:32:20,660
ohne Zweideutigkeiten zu programmieren,

717
00:32:20,660 --> 00:32:22,360
ist das doch das kleinste Problem, was man hat.

718
00:32:22,380 --> 00:32:30,230
Also kann man doch einfach sagen,

719
00:32:30,290 --> 00:32:31,030
so, bäm, fertig.

720
00:32:33,310 --> 00:32:33,950
Crowdstrike.

721
00:32:36,110 --> 00:32:38,050
Wir haben bestimmt auch ein paar Nullpointer dann.

722
00:32:38,290 --> 00:32:39,790
Wobei, ich habe heute auf Twitter gelesen,

723
00:32:39,870 --> 00:32:42,270
es war wahrscheinlich gar kein Nullpointer auf Crowdstrike.

724
00:32:42,370 --> 00:32:43,890
Das haben bloß alle wieder nachgeplabbert.

725
00:32:45,030 --> 00:32:45,970
Also, was hier passiert,

726
00:32:46,030 --> 00:32:48,130
ist folgendes. Ich versuche das mal kurz zu erklären.

727
00:32:48,650 --> 00:32:49,770
Achso, übrigens,

728
00:32:50,050 --> 00:32:51,630
WLAN-SSID, ne, passt.

729
00:32:51,930 --> 00:32:52,290
Alles klar.

730
00:32:53,590 --> 00:32:55,530
Also, was hier passiert, ist folgendes.

731
00:32:56,210 --> 00:32:57,890
Also, das hier ist Main, bla,

732
00:32:57,890 --> 00:32:59,730
also, dann müssen wir das hier

733
00:32:59,730 --> 00:33:01,050
aufrufen, Wifi-Connect.

734
00:33:02,330 --> 00:33:03,410
Dass er das auch macht.

735
00:33:04,110 --> 00:33:05,790
So, was jetzt passiert, ist folgendes.

736
00:33:09,580 --> 00:33:10,980
Der legt irgendeine Standard-Config

737
00:33:10,980 --> 00:33:11,700
an für das

738
00:33:11,700 --> 00:33:13,500
Wifi-Interface.

739
00:33:14,360 --> 00:33:16,000
STA ist Station-Mode.

740
00:33:16,220 --> 00:33:18,960
Station-Mode ist das, was man normalerweise

741
00:33:18,960 --> 00:33:20,900
so kennt von einem Wifi-Interface,

742
00:33:21,660 --> 00:33:22,760
nämlich man verbindet sich zu einem

743
00:33:22,760 --> 00:33:24,980
Access-Point. Es gibt auch noch die Möglichkeit

744
00:33:24,980 --> 00:33:26,740
AP zu machen, ja, oder

745
00:33:26,740 --> 00:33:28,200
Mesh oder was, whatever.

746
00:33:28,580 --> 00:33:29,980
Aber Station-Mode, also sprich,

747
00:33:30,360 --> 00:33:32,560
was euer Handy macht, ist auch Station-Mode.

748
00:33:32,560 --> 00:33:34,500
Warum das Station-Mode heißt, keine Ahnung,

749
00:33:34,600 --> 00:33:36,540
müsst ihr die Leute fragen, die die

750
00:33:36,540 --> 00:33:37,580
Wifi-Standards machen.

751
00:33:38,260 --> 00:33:40,640
Wir wollen unser Netzwerk-Interface als Station

752
00:33:40,640 --> 00:33:42,400
betreiben, also sprich, uns ganz normal zum

753
00:33:42,400 --> 00:33:43,500
Access-Point connecten.

754
00:33:44,980 --> 00:33:47,340
Wir lassen uns eine Default-Wifi-Config

755
00:33:47,340 --> 00:33:49,580
geben und da setzen wir jetzt noch ein paar Sachen

756
00:33:49,580 --> 00:33:51,940
drin, nämlich, dass der alle Wifi-Channels

757
00:33:51,940 --> 00:33:52,680
benutzen soll,

758
00:33:53,360 --> 00:33:53,960
dass der

759
00:33:53,960 --> 00:33:56,620
Sort-Methods, achso,

760
00:33:56,880 --> 00:33:59,040
ah, dass der den Access-Point nimmt,

761
00:33:59,660 --> 00:34:00,560
der den stärksten,

762
00:34:00,560 --> 00:34:02,040
der stärkste Signal hat,

763
00:34:02,560 --> 00:34:04,760
alle Access-Points, die schlechteren Empfang

764
00:34:04,760 --> 00:34:06,120
haben als minus 127,

765
00:34:07,020 --> 00:34:08,340
connectet er sich gar nicht hin,

766
00:34:09,060 --> 00:34:10,520
er kann sich auch zu offenen

767
00:34:10,520 --> 00:34:11,800
Wifis verbinden,

768
00:34:13,300 --> 00:34:14,500
dann kopiert er meine

769
00:34:14,500 --> 00:34:16,740
WLAN-SSID und mein WLAN-Passwort

770
00:34:16,740 --> 00:34:18,220
in dieses Struct rein,

771
00:34:19,040 --> 00:34:20,660
an die Stelle, wo es hingehört.

772
00:34:21,520 --> 00:34:22,560
Ey, fragt mich nicht,

773
00:34:22,820 --> 00:34:24,160
warum so kompliziert?

774
00:34:24,780 --> 00:34:26,260
Ich hab das auch geklaut

775
00:34:26,260 --> 00:34:29,280
aus einem GitHub-Projekt,

776
00:34:30,020 --> 00:34:30,680
weil, wenn ich,

777
00:34:30,680 --> 00:34:32,540
man würde ja eigentlich vermuten, man könnte,

778
00:34:32,560 --> 00:34:33,840
man könnte einfach sagen,

779
00:34:34,360 --> 00:34:35,380
Wifi-Config

780
00:34:35,380 --> 00:34:37,300
STA

781
00:34:37,300 --> 00:34:38,880
SSID

782
00:34:38,880 --> 00:34:42,540
gleich WLAN-SSID, also würde man jetzt vermuten,

783
00:34:42,860 --> 00:34:44,380
aber das geht nicht, weil

784
00:34:44,380 --> 00:34:47,940
SSID ein

785
00:34:47,940 --> 00:34:50,000
Uint28-Array

786
00:34:50,000 --> 00:34:51,240
mit 32 Stellen ist.

787
00:34:51,360 --> 00:34:54,520
Da kann man nur Sachen reinkopieren, da darf man nicht direkt was zuweisen.

788
00:34:55,400 --> 00:34:55,880
Weil

789
00:34:55,880 --> 00:34:57,440
C-Dinger.

790
00:35:00,980 --> 00:35:02,300
Und deswegen

791
00:35:02,300 --> 00:35:04,620
kopieren wir das da rein, anstatt es zuzuweisen.

792
00:35:04,620 --> 00:35:04,860
Okay?

793
00:35:06,460 --> 00:35:09,020
Das sieht so eklig aus, aber es funktioniert, es funktioniert.

794
00:35:09,020 --> 00:35:12,220
Dann sagen wir noch mal explizit, dass wir Station-Mode betreiben wollen,

795
00:35:12,220 --> 00:35:13,220
das Interface.

796
00:35:13,220 --> 00:35:17,280
Dann sagen wir dem Interface, benutzt diese Config von hier oben

797
00:35:17,280 --> 00:35:18,580
und dann sagen wir Wifi-Start.

798
00:35:18,580 --> 00:35:19,580
Fertig.

799
00:35:19,580 --> 00:35:20,800
Und wenn wir das jetzt flashen,

800
00:35:20,800 --> 00:35:25,220
dann geht Wifi.

801
00:35:25,220 --> 00:35:28,400
Wir bekommen noch keine IP, wohlgemerkt, aber Wifi geht schon mal.

802
00:35:28,400 --> 00:35:31,800
Was wir auch an ein bisschen Debug-Ausgabe sehen dürften.

803
00:35:31,800 --> 00:35:36,800
C++ sieht nicht nur eklig aus, C++ ist, glaube ich, die beschissenste Sprache, die es gibt.

804
00:35:36,800 --> 00:35:37,920
C++ ist, glaube ich, die beschissenste Sprache, die es gibt.

805
00:35:37,920 --> 00:35:40,590
C++ ist, glaube ich, die beschissenste Sprache, die es gibt.

806
00:35:40,590 --> 00:35:42,810
Guck hier, Wifi-Gedöns kommt hier.

807
00:35:42,810 --> 00:35:46,330
Wifi, bla, blub, Initialisierungskrempel.

808
00:35:48,330 --> 00:35:57,350
UDP, M-Box 6, TCP, M-Box 6, Dings, blub, keine Ahnung.

809
00:35:57,350 --> 00:35:59,870
Muss man DHCP extra enablen?

810
00:35:59,870 --> 00:36:01,890
Nicht, nicht so ganz.

811
00:36:01,890 --> 00:36:04,190
Das macht er, wenn man es richtig macht, für einen.

812
00:36:05,770 --> 00:36:08,150
Aber wir sehen schon, unsere Event-Loop funktioniert.

813
00:36:08,150 --> 00:36:10,650
Wir bekommen Wifi-Events, nämlich das Wifi-Event,

814
00:36:10,650 --> 00:36:12,950
und das Wifi-Event 2.

815
00:36:13,750 --> 00:36:15,150
Obviously, alles klar, oder?

816
00:36:17,150 --> 00:36:18,190
Chat, was meint ihr?

817
00:36:18,270 --> 00:36:20,190
Was ist das gute und was ist das schlechte Event?

818
00:36:21,330 --> 00:36:22,790
Was ist schlecht und was ist gut?

819
00:36:24,690 --> 00:36:28,270
Ist 41, ist das Event 41 gut oder schlecht?

820
00:36:28,850 --> 00:36:30,450
Ist das Event 2 gut oder schlecht?

821
00:36:32,730 --> 00:36:34,470
2 ist gut, okay?

822
00:36:35,110 --> 00:36:36,290
Und 41 nicht.

823
00:36:40,380 --> 00:36:42,780
Okay, Chat, ich muss sagen, ihr seid nicht schlecht, ihr habt recht.

824
00:36:42,780 --> 00:36:42,820
Okay, Chat, ich muss sagen, ihr seid nicht schlecht, ihr habt recht.

825
00:36:45,420 --> 00:36:50,280
Ich kann nämlich hier nachgucken, Wifi-Event.

826
00:36:52,140 --> 00:36:55,100
Guckt mal hier, hier stehen die ganzen Events drin.

827
00:36:56,760 --> 00:37:03,300
Und wir sehen, dass 2 tatsächlich bedeutet, das Wifi-Interface ist gestartet.

828
00:37:04,860 --> 00:37:05,920
Und was war das andere?

829
00:37:06,140 --> 00:37:17,120
41, 41 bedeutet Wifi-Event Home-Channel-Change.

830
00:37:18,380 --> 00:37:20,120
Okay, das ist eigentlich gar nichts Schlechtes.

831
00:37:21,240 --> 00:37:22,960
Das ist auch okay.

832
00:37:26,680 --> 00:37:29,080
Aber das interessiert mich nicht, dass der Home-Channel gechanged ist.

833
00:37:32,220 --> 00:37:43,120
So, was man jetzt nämlich sagen kann ist, ey, wir müssen, also, man muss ja warten, bis das Interface oben ist, damit man sagen kann, ich will jetzt eine IP haben.

834
00:37:43,120 --> 00:37:53,960
Das heißt, wir müssen jetzt gucken, if Event Base Wifi-Event, also, ist das ein Wifi-Event, was gerade passiert ist?

835
00:37:54,520 --> 00:37:54,920
Und?

836
00:37:56,400 --> 00:38:04,120
Ist die Event-ID gleich, gleich, Wifi, wie heißt das, hab ich's vergessen, äh, wie heißt dieser Krempel hier nochmal?

837
00:38:05,000 --> 00:38:18,860
Ist das gleich, äh, Start, dann will ich sagen, Wifi, ne, ESP-Wifi-Start will ich dann machen.

838
00:38:21,460 --> 00:38:27,980
Also, sprich, der konfiguriert das Interface, das Interface fährt hoch und dann kann ich mein WLAN starten.

839
00:38:28,440 --> 00:38:29,160
Alles klar?

840
00:38:32,600 --> 00:38:34,880
Ist das das Tool für die Access-Point-Passwörter?

841
00:38:39,280 --> 00:38:41,420
Das Tool für die Access-Point-Passwörter?

842
00:38:44,220 --> 00:38:45,740
Ich hab keine Ahnung, was du meinst.

843
00:38:47,280 --> 00:38:59,240
So, und wenn man das jetzt so macht, und wenn ich jetzt alles richtig gemacht hab, richtig gemacht hab, jetzt sollten wir eigentlich eine IP-Adresse bekommen, auf unserem, für unsere Wifi-Netzwerkkarte.

844
00:38:59,560 --> 00:39:03,020
Oder für unser Wifi-Interface auf dem Controller.

845
00:39:03,480 --> 00:39:04,140
Gucken wir mal.

846
00:39:13,850 --> 00:39:15,730
So, der Flash-Vorgang ist erstmal richtig langsam.

847
00:39:16,150 --> 00:39:17,150
Warum zweimal?

848
00:39:17,230 --> 00:39:17,970
Wifi-Start?

849
00:39:18,070 --> 00:39:19,630
Wir haben nicht zweimal Wifi-Start gemacht.

850
00:39:20,770 --> 00:39:21,170
Oder?

851
00:39:21,290 --> 00:39:21,810
Haben wir gemacht?

852
00:39:24,640 --> 00:39:26,280
Falls wir das gemacht haben, ist das falsch.

853
00:39:28,080 --> 00:39:29,800
Oh, das ist falsch, was wir gemacht haben.

854
00:39:33,870 --> 00:39:34,790
Guter Cut-Chat.

855
00:39:36,050 --> 00:39:40,950
Äh, wir wollen nicht Wifi-Start, wir wollen, äh, ESP-Wifi, ist das Connect?

856
00:39:41,650 --> 00:39:42,050
Connect!

857
00:39:42,790 --> 00:39:43,190
Obviously.

858
00:39:43,730 --> 00:39:44,130
Logisch.

859
00:39:44,610 --> 00:39:45,990
Wer hätte da auch nicht drauf kommen können?

860
00:39:49,170 --> 00:39:50,130
Ja, die Dinger sind ein bisschen...

861
00:39:51,650 --> 00:39:54,630
Nicht gerade so intuitiv benannt, wie man das gerne hätte.

862
00:39:55,130 --> 00:39:55,630
Genau.

863
00:40:05,330 --> 00:40:05,830
Er macht was?

864
00:40:05,890 --> 00:40:06,190
IP!

865
00:40:06,550 --> 00:40:06,790
Bam!

866
00:40:07,590 --> 00:40:08,170
Wir haben eine IP.

867
00:40:08,770 --> 00:40:09,450
Ich kann nicht klicken.

868
00:40:09,830 --> 00:40:09,990
Alter.

869
00:40:10,770 --> 00:40:11,170
Hier, guck.

870
00:40:11,390 --> 00:40:11,610
Ping.

871
00:40:14,190 --> 00:40:15,390
Mein Controller antwortet.

872
00:40:18,070 --> 00:40:20,370
Zwar ziemlich langsam, aber er antwortet, okay?

873
00:40:26,760 --> 00:40:27,800
Wir haben eine IP, Leute.

874
00:40:29,680 --> 00:40:30,920
Also, so funzt das.

875
00:40:31,860 --> 00:40:38,480
Schön ist das Ganze übrigens nicht gelöst, weil, wenn das hier nicht funktioniert, aus irgendwelchen Gründen,

876
00:40:41,300 --> 00:40:45,020
dann müsste man das ja mehrfach durch, mehrfach, äh, durchführen.

877
00:40:45,200 --> 00:40:45,700
Ja.

878
00:40:48,080 --> 00:40:54,840
Also, man müsste, man müsste hier eigentlich noch so eine, noch so eine Art, äh, Retry einbauen.

879
00:40:54,840 --> 00:41:01,600
Also, so nach dem Motto, ey, wenn, wenn hier, guck mal, hier steht ja auch, was es für, für Return Codes geben kann.

880
00:41:06,700 --> 00:41:10,040
Ja, also, wenn das nicht funktioniert, dann Restarten.

881
00:41:10,220 --> 00:41:13,580
Deswegen machen wir jetzt einfach mal eine Sache, um mir das Leben erleichtert zu machen.

882
00:41:16,170 --> 00:41:23,290
Wir brechen einfach, wir starten einfach die Kiste neu, wenn Wifi-Connect nicht klappt.

883
00:41:25,920 --> 00:41:29,560
Sollte aus irgendwelchen Gründen das beim ersten Mal nicht funktionieren,

884
00:41:30,000 --> 00:41:34,220
dann startet ihr einfach den Controller neu, bis Wifi-Connect funktioniert.

885
00:41:37,630 --> 00:41:42,070
Meine, das, wo man in ein, ach so, ja, das ist unter anderem dafür, ja.

886
00:41:42,630 --> 00:41:42,750
Ja.

887
00:41:43,230 --> 00:41:45,290
Wobei ich da schon viel, viel weiter dran gebaut hab.

888
00:41:46,170 --> 00:41:47,570
Ähm, ja.

889
00:41:47,570 --> 00:41:53,750
Man setzt, man setzt den, man setzt das Passwort und die SSID für den Controller, dass der sich zu einem Access Point verbinden kann.

890
00:41:53,770 --> 00:41:54,110
Ja, genau.

891
00:41:54,790 --> 00:41:57,810
Ähm, ich hab überlegt, wir könnten jetzt ja noch ein, äh, einbauen, dass man,

892
00:41:57,870 --> 00:42:00,550
ähm, Firmware-Updates flashen kann über, über, übers WLAN.

893
00:42:05,270 --> 00:42:06,190
Müssen wir mal schauen.

894
00:42:06,810 --> 00:42:11,790
Ähm, und ich hab mir gedacht, Firmware-Updates über WebSocket, das geht zwar,

895
00:42:11,910 --> 00:42:14,270
und das hab ich auch schon programmiert, das ist eigentlich kein Problem,

896
00:42:14,770 --> 00:42:19,730
aber so ein Post-Request ist einfach schöner für so kontinuierliche Upload-Sachen,

897
00:42:20,050 --> 00:42:22,010
wie das über WebSocket zu machen.

898
00:42:22,390 --> 00:42:24,670
Ja, gerade was ist, wenn das abbricht und sonst wie.

899
00:42:25,210 --> 00:42:28,500
Deswegen, ups.

900
00:42:45,510 --> 00:42:46,310
Ein Stack-Overflow?

901
00:42:48,980 --> 00:42:49,980
Dadurch, dass ich das logge?

902
00:42:50,300 --> 00:43:10,340
Durch das, durch das pure Loggen?

903
00:43:11,840 --> 00:43:17,220
Wie, wie, wie viel RAM darf denn diese Event-Loop verwenden?

904
00:43:19,140 --> 00:43:19,940
Sieht man das irgendwo?

905
00:43:20,200 --> 00:43:21,580
Create default Event-Loop.

906
00:43:22,180 --> 00:43:23,000
Stack-Size.

907
00:43:27,240 --> 00:43:28,860
What the fuck, Alter.

908
00:43:30,420 --> 00:43:31,260
Was ist es denn?

909
00:43:32,920 --> 00:43:34,280
Event-Stack-Size.

910
00:43:37,680 --> 00:43:38,500
Ey, Alter.

911
00:43:39,200 --> 00:43:41,680
C++-Shit, sag mir halt einfach, wie groß das ist.

912
00:43:50,200 --> 00:43:50,600
Okay.

913
00:43:50,860 --> 00:43:52,240
Ich hab keine Ahnung, wie groß das ist.

914
00:43:54,240 --> 00:43:55,040
Man weiß es nicht.

915
00:43:56,100 --> 00:43:56,500
Unbekannt.

916
00:44:01,060 --> 00:44:02,960
Wäre natürlich ganz sinnvoll zu wissen, ja.

917
00:44:03,920 --> 00:44:07,060
Weil es könnte, es könnte wirklich sein, wenn es gar so knapp bemessen ist,

918
00:44:07,320 --> 00:44:09,080
dass das Ding einfach nicht genug RAM hat.

919
00:44:09,140 --> 00:44:11,040
Und aus irgendwelchen Gründen nicht mal genug RAM hat zum Loggen.

920
00:44:11,340 --> 00:44:12,880
Wobei, hier kann's eigentlich.

921
00:44:14,140 --> 00:44:14,540
Naja.

922
00:44:16,600 --> 00:44:17,260
Aber das funktioniert.

923
00:44:17,520 --> 00:44:18,600
Ja, dann machen wir das doch anders.

924
00:44:18,860 --> 00:44:23,560
If, wenn das da ungleich ESP-okay ist,

925
00:44:25,160 --> 00:44:27,460
dann, äh, ESP-restart?

926
00:44:33,010 --> 00:44:33,510
Moment.

927
00:44:33,690 --> 00:44:34,510
Geht das so?

928
00:44:35,690 --> 00:44:36,130
Vermutlich.

929
00:44:40,500 --> 00:44:40,760
Okay.

930
00:44:41,080 --> 00:44:42,660
Dann loggen wir das Ganze halt nicht.

931
00:44:52,700 --> 00:44:54,400
Schauen wir mal, ob das wenigstens funzt jetzt.

932
00:44:54,860 --> 00:44:57,000
Also ich meine, es sollte zumindest keinen Stack-Overflow mehr geben.

933
00:44:58,100 --> 00:44:59,080
Okay, ne, funzt noch.

934
00:45:01,600 --> 00:45:01,980
Alles klar.

935
00:45:04,580 --> 00:45:06,620
Ja, dann lassen wir, dann lassen wir es erstmal so.

936
00:45:06,780 --> 00:45:07,260
Scheiß drauf.

937
00:45:08,660 --> 00:45:13,880
Aber ich hätte eigentlich gedacht, man kann hier die, die Stacks da jetzt ein bisschen hochschrauben von der Event-Loop irgendwie.

938
00:45:16,060 --> 00:45:17,800
Event-Loop Default Create.

939
00:45:17,920 --> 00:45:18,180
Ne, ja.

940
00:45:18,180 --> 00:45:19,800
Man kann da keine Optionen mitgeben, ne.

941
00:45:26,120 --> 00:45:41,040
Ich meine, höchstens, wo kommt ein Event-Händler her überhaupt?

942
00:45:41,640 --> 00:45:42,420
Ah, ne, Event-Händler.

943
00:45:43,680 --> 00:45:48,840
Wir könnten selbst ne, wir könnten selbst ne Event-Loop anlegen, die, aber, scheiß drauf.

944
00:45:49,660 --> 00:45:51,200
Das passt so schon jetzt.

945
00:45:53,880 --> 00:45:56,300
Also, so, wir haben ne IP, wunderbar.

946
00:45:57,260 --> 00:45:59,680
Dann, können wir jetzt weitermachen.

947
00:45:59,760 --> 00:46:00,680
Jetzt brauchen wir einen Web-Server.

948
00:46:01,340 --> 00:46:05,480
Chat, wir fangen erstmal an, ohne HTTPS.

949
00:46:05,700 --> 00:46:06,340
Mein Ziel ist natürlich HTTPS.

950
00:46:06,340 --> 00:46:08,020
Ja, das ist klar.

951
00:46:08,660 --> 00:46:17,260
Hatten wir, hatten ja, wir haben ja hier schon einen Web-Server mal gebaut, wo über HTTPS, über Web-Sockets mit dem Microcontroller kommuniziert werden konnte.

952
00:46:17,660 --> 00:46:19,240
Das heißt, wir klauen uns das hier einfach jetzt.

953
00:46:20,600 --> 00:46:21,160
Davon.

954
00:46:22,620 --> 00:46:25,240
Und wir starten dann den Web-Server.

955
00:46:25,800 --> 00:46:35,530
Jetzt ist natürlich die große Preisfrage, wie kann ich hier warten, bis WiFi connected ist?

956
00:46:36,030 --> 00:46:37,690
Weil das ist ja alles asynchron.

957
00:46:40,400 --> 00:46:51,360
Also, sprich, ne, ne, ne, ne, ne, das, das machen wir gar nicht.

958
00:46:51,700 --> 00:46:54,700
Wir brauchen ein Event, wenn wir ne IP bekommen haben.

959
00:46:54,780 --> 00:46:57,240
Guck mal, es gibt doch ein Event, wenn wir ne IP kriegen, oder?

960
00:46:57,960 --> 00:46:58,840
IP-Event.

961
00:46:59,580 --> 00:47:00,900
IP-Event 0.

962
00:47:02,240 --> 00:47:02,680
Genau.

963
00:47:04,320 --> 00:47:05,300
Das machen wir.

964
00:47:10,880 --> 00:47:11,900
IP-Event.

965
00:47:13,740 --> 00:47:14,940
So, und was war das hier?

966
00:47:16,780 --> 00:47:18,580
Gott-IP wollen wir haben.

967
00:47:18,960 --> 00:47:23,730
Und jetzt sagen wir hier.

968
00:47:23,850 --> 00:47:27,330
Start Web-Server.

969
00:47:28,830 --> 00:47:30,190
Was es noch nicht gibt, ja?

970
00:47:40,950 --> 00:47:42,570
Ich finde das ein bisschen eklig, das jetzt davor.

971
00:47:45,010 --> 00:47:46,530
Start Web-Server.

972
00:47:47,750 --> 00:47:50,030
By the way, wir können das auch einfach inline hier drin haben.

973
00:47:50,130 --> 00:47:51,250
Ah, wobei, ne, aber nicht.

974
00:47:51,470 --> 00:47:52,430
Lass uns das mal.

975
00:47:53,650 --> 00:47:54,870
So, Start Web-Server.

976
00:47:55,090 --> 00:47:59,650
Das ist übrigens auch was, was ich einfach nur dumm finde an C++.

977
00:48:00,650 --> 00:48:03,610
Und zwar, wenn man das hier hinschreibt.

978
00:48:03,610 --> 00:48:03,970
Und.

979
00:48:05,270 --> 00:48:09,030
Und die Methode hier unten definiert, dann sieht das erstmal so aus, als würde es funktionieren.

980
00:48:09,210 --> 00:48:12,870
Aber, wenn ich das jetzt versuche zu kompilieren, dann geht das nicht.

981
00:48:13,790 --> 00:48:14,730
Warum geht das nicht?

982
00:48:15,270 --> 00:48:19,870
Weil das hier deklariert wird, nachdem es benutzt wird.

983
00:48:19,950 --> 00:48:22,350
Also hier will ich es benutzen und hier unten wird das erst angelegt.

984
00:48:22,990 --> 00:48:30,150
Jede, auch nur ansatzweise, halbwegs moderne Programmiersprache kommt mit sowas klar.

985
00:48:30,910 --> 00:48:31,890
C++ nicht.

986
00:48:43,830 --> 00:48:46,330
Was man in C++ machen muss dafür ist.

987
00:48:46,630 --> 00:48:52,950
Zu sagen, by the way, es gibt, es gibt da was, das nennt sich so.

988
00:48:53,310 --> 00:48:54,410
Und jetzt funktioniert es.

989
00:48:55,070 --> 00:48:58,990
Was aber einfach nur saumäßig dämlich ist, oder?

990
00:48:59,310 --> 00:49:00,470
Sagt doch mal ernsthaft.

991
00:49:01,370 --> 00:49:07,450
Also, das ist glaube ich so die dümmste, die dümmste Lösung für dieses Problem ever.

992
00:49:09,640 --> 00:49:12,820
Dass man einfach das quasi deklarieren muss vorher und die Implementierung.

993
00:49:13,040 --> 00:49:15,280
Das ist so, das ist so dumm.

994
00:49:15,280 --> 00:49:17,360
Ich verstehe gar nicht, warum das noch ein Ding ist.

995
00:49:17,360 --> 00:49:18,720
Im Jahr 2024.

996
00:49:19,420 --> 00:49:24,300
Dass das historisch mal so gewesen ist, das lasse ich mir ja alles noch gefallen, ja.

997
00:49:24,740 --> 00:49:25,780
Header Files ist das nächste.

998
00:49:25,880 --> 00:49:28,660
Fangen wir nicht von Header Files an im Jahr 2024, ja.

999
00:49:29,620 --> 00:49:33,780
Aber es ist einfach richtig dumm, dass es dieses Problem immer noch gibt.

1000
00:49:34,140 --> 00:49:36,160
Und was es hier geht, C++ schlecht reden.

1001
00:49:40,040 --> 00:49:40,860
Was wird eigentlich prokriminiert?

1002
00:49:41,540 --> 00:49:44,420
Ich habe hier einen ESP32 S3.

1003
00:49:45,200 --> 00:49:48,100
Auf dem lassen wir einen Webserver laufen mit HTTPS.

1004
00:49:48,100 --> 00:49:48,500
So.

1005
00:49:50,340 --> 00:49:55,280
Webserver, WLAN und dann will ich darüber asynchron ein Post-Request schicken.

1006
00:49:55,460 --> 00:49:57,100
Das ist der Task für heute.

1007
00:49:57,540 --> 00:49:58,520
Weil das ist ganz neu.

1008
00:49:58,700 --> 00:50:06,940
Das gibt es erst seit ein paar Tagen, dass der Webserver, der quasi vom Hersteller in ihrem hauseigenen Framework mitgeliefert wird,

1009
00:50:07,480 --> 00:50:09,220
auch asynchrone Requests kann.

1010
00:50:09,860 --> 00:50:11,520
Und will ich einfach mal ausprobieren, ob das funktioniert.

1011
00:50:12,020 --> 00:50:13,420
Das ist also super bleeding edge.

1012
00:50:13,500 --> 00:50:14,540
Das ist noch nicht released.

1013
00:50:14,960 --> 00:50:16,140
Und ich weiß nicht, ob es funktioniert.

1014
00:50:18,560 --> 00:50:19,960
Aber wenn es geht, wäre echt nice.

1015
00:50:19,960 --> 00:50:21,720
So, Start Webserver.

1016
00:50:21,720 --> 00:50:23,720
Das können wir uns abgucken von hier.

1017
00:50:23,720 --> 00:50:25,720
Im Prinzip ist das ja kein großer Unterschied.

1018
00:50:25,720 --> 00:50:27,720
Der einzige Unterschied ist, was wir jetzt machen.

1019
00:50:27,720 --> 00:50:33,720
Wir legen keinen...

1020
00:50:33,720 --> 00:50:35,720
Was macht der hier unten eigentlich die ganze Zeit?

1021
00:50:35,720 --> 00:50:37,720
Also das brauchen wir...

1022
00:50:37,720 --> 00:50:39,720
Sag mal, was macht der eigentlich?

1023
00:50:39,720 --> 00:50:41,720
Alter!

1024
00:50:41,720 --> 00:50:43,720
Visual Studio Code...

1025
00:50:43,720 --> 00:50:45,720
What the fuck?

1026
00:50:45,720 --> 00:50:47,720
Wir woll...

1027
00:50:47,720 --> 00:50:56,250
C U.

1028
00:50:56,250 --> 00:51:13,640
Ähm, ja.

1029
00:51:13,640 --> 00:51:22,120
Den Webserver, den muss ich natürlich includen, dass das funktioniert.

1030
00:51:22,120 --> 00:51:23,120
Irgendwelchen Gründen nicht.

1031
00:51:23,120 --> 00:51:24,120
Funktioniert?

1032
00:51:24,120 --> 00:51:28,230
Was jetzt...

1033
00:51:28,230 --> 00:51:31,700
Doch funktioniert?

1034
00:51:31,700 --> 00:51:32,700
Ich glaub man will...

1035
00:51:32,700 --> 00:51:36,700
Kann das sein, dass mein Visual Studio Code C++ Plugin gecrashed ist?

1036
00:51:36,700 --> 00:51:37,700
Ich vermute es fast.

1037
00:51:37,700 --> 00:51:39,700
Das macht es gerne.

1038
00:51:39,700 --> 00:51:41,700
Das ist richtiger Schrott.

1039
00:51:41,700 --> 00:51:45,450
Ja, es ist gecrashed.

1040
00:51:45,450 --> 00:51:46,450
Jetzt funktioniert es wieder.

1041
00:51:46,450 --> 00:51:47,450
Nice.

1042
00:51:47,450 --> 00:51:48,450
GG Microsoft.

1043
00:51:48,450 --> 00:51:49,450
Good Job.

1044
00:51:49,450 --> 00:51:55,800
So, was wir jetzt machen ist, wir fangen nicht mit einem SSL, mit einem HTTPS-Webserver an,

1045
00:51:55,800 --> 00:52:02,540
sondern mit einem ganz normalen Webserver.

1046
00:52:02,540 --> 00:52:03,540
So.

1047
00:52:03,540 --> 00:52:04,540
Dann...

1048
00:52:04,540 --> 00:52:05,540
Brauchen wir...

1049
00:52:05,540 --> 00:52:11,560
Ja, CLion hat andere Probleme gehabt in der Zusammenarbeit.

1050
00:52:11,560 --> 00:52:12,560
Ich hab das...

1051
00:52:12,560 --> 00:52:14,560
Ich hab sogar CLion glaub ich noch installiert.

1052
00:52:14,560 --> 00:52:15,560
Ne, hab ich nicht.

1053
00:52:15,560 --> 00:52:16,560
Hatte ich aber.

1054
00:52:16,560 --> 00:52:18,560
Ich hab ja das JetBrains Desktop Package.

1055
00:52:18,560 --> 00:52:19,560
All Desktop Package.

1056
00:52:19,560 --> 00:52:22,560
CLion hatte andere Probleme.

1057
00:52:22,560 --> 00:52:27,560
Deswegen bin ich wieder bei Visual Studio Code gelandet dafür.

1058
00:52:27,560 --> 00:52:30,560
Ich krieg's aber aus dem Kopf nicht mehr zusammen, was das war.

1059
00:52:30,560 --> 00:52:32,560
Haben wir auch im Stream probiert.

1060
00:52:32,560 --> 00:52:33,560
Und...

1061
00:52:33,560 --> 00:52:34,560
Das hat...

1062
00:52:34,560 --> 00:52:37,560
Das hat mich übelst abgefuckt wegen...

1063
00:52:37,560 --> 00:52:41,220
Weiß nicht mehr was.

1064
00:52:41,220 --> 00:52:42,220
So.

1065
00:52:42,220 --> 00:52:43,220
Also, Start Webserver.

1066
00:52:43,220 --> 00:52:45,790
Hier runter.

1067
00:52:45,790 --> 00:52:46,790
Wo hab ich denn das Ganze?

1068
00:52:46,790 --> 00:52:47,790
So.

1069
00:52:47,790 --> 00:52:50,790
Wir lassen diesen ganzen Campbell weg mit Zertifikaten und sowas.

1070
00:52:50,790 --> 00:52:59,060
Und wir starten einfach den Web...

1071
00:52:59,060 --> 00:53:00,060
Ist das alles, was wir machen müssen?

1072
00:53:00,060 --> 00:53:01,060
Ernsthaft?

1073
00:53:01,060 --> 00:53:03,060
Ach ne, wir brauchen noch einen Webserver-Handle.

1074
00:53:03,060 --> 00:53:06,300
Okay.

1075
00:53:06,300 --> 00:53:07,300
Irgendwo.

1076
00:53:07,300 --> 00:53:08,300
Da.

1077
00:53:08,300 --> 00:53:16,120
Hier.

1078
00:53:16,120 --> 00:53:17,120
Das brauchen wir noch.

1079
00:53:17,120 --> 00:53:18,120
Und ich glaube jetzt...

1080
00:53:18,120 --> 00:53:19,120
Ja.

1081
00:53:19,120 --> 00:53:23,730
Und das...

1082
00:53:23,730 --> 00:53:25,730
Ich glaube das ist alles, was wir brauchen.

1083
00:53:25,730 --> 00:53:31,130
Um den Webserver zu starten.

1084
00:53:31,130 --> 00:53:34,310
Gucken wir mal.

1085
00:53:34,310 --> 00:53:35,310
Server starten.

1086
00:53:35,310 --> 00:53:40,020
Das ist CMake...

1087
00:53:40,020 --> 00:53:41,020
Ja!

1088
00:53:41,020 --> 00:53:42,020
Das war mir das Problem.

1089
00:53:42,020 --> 00:53:43,020
Genau.

1090
00:53:43,020 --> 00:53:44,020
Das ist CMake-based.

1091
00:53:44,020 --> 00:53:46,020
Das ist standardmäßig schon CMake-based.

1092
00:53:46,020 --> 00:53:49,020
Man denkt, das wäre ein richtig gutes Match für CLion.

1093
00:53:49,020 --> 00:53:50,020
Ist es aber nicht.

1094
00:53:50,020 --> 00:53:57,020
Weil die irgendwelche komischen, expressive eigenen Sachen da mit CMake machen, womit

1095
00:53:57,020 --> 00:53:58,020
CLion nicht klarkommt.

1096
00:53:58,020 --> 00:53:59,020
Guck mal.

1097
00:53:59,020 --> 00:54:00,020
Server-Event 1.

1098
00:54:00,020 --> 00:54:02,020
Webserver ist gestartet vermutlich mal.

1099
00:54:02,020 --> 00:54:09,020
Ich gehe mal davon aus, dass Event 1 bedeutet Server startet.

1100
00:54:09,020 --> 00:54:10,020
Okay.

1101
00:54:10,020 --> 00:54:11,020
Alles klar.

1102
00:54:11,020 --> 00:54:14,020
So, unser Webserver ist gestartet, wie man hier sieht.

1103
00:54:14,020 --> 00:54:15,020
Da.

1104
00:54:15,020 --> 00:54:16,020
Webserver startet.

1105
00:54:16,020 --> 00:54:18,020
Probieren wir mal aus, ob der Webserver gestartet ist.

1106
00:54:18,020 --> 00:54:20,020
Wir machen mal einen Curl.

1107
00:54:20,020 --> 00:54:22,020
Und wir bekommen eine Antwort.

1108
00:54:22,020 --> 00:54:23,020
Also.

1109
00:54:23,020 --> 00:54:28,020
Wir haben unseren ESP32 im Wifi und am Webserver laufen.

1110
00:54:28,020 --> 00:54:31,020
Das heißt, wir können uns jetzt der eigentlichen Sachen widmen.

1111
00:54:31,020 --> 00:54:35,020
Wie macht man asynchrone Webrequests dagegen?

1112
00:54:35,020 --> 00:54:37,020
Was für ein Application Launcher.

1113
00:54:37,020 --> 00:54:38,020
Du meinst das Ding?

1114
00:54:38,020 --> 00:54:39,020
Das ist RoFi.

1115
00:54:39,020 --> 00:54:40,020
RoFi.

1116
00:54:40,020 --> 00:54:41,020
RoFi, Alter.

1117
00:54:41,020 --> 00:54:54,660
Und das allerwichtigste ist natürlich das Emoji Autocomplete Menü.

1118
00:54:54,660 --> 00:54:59,710
Also ich habe da drinnen meine ganzen Apps.

1119
00:54:59,710 --> 00:55:00,710
Das hier benutze ich nie.

1120
00:55:00,710 --> 00:55:02,710
Keine Ahnung, warum ich das da überhaupt drinnen habe.

1121
00:55:02,710 --> 00:55:03,710
Das sind quasi alle.

1122
00:55:03,710 --> 00:55:05,710
Das hier sind quasi nur alle Apps mit Desktop Entry.

1123
00:55:05,710 --> 00:55:06,710
Das sind alle.

1124
00:55:06,710 --> 00:55:08,710
Was eigentlich überflüssig ist.

1125
00:55:08,710 --> 00:55:11,710
Man kann Windows, man kann Fenster suchen und dann da hinspringen.

1126
00:55:11,710 --> 00:55:13,710
Ja, wenn ich sage, ich will zum Firefox.

1127
00:55:13,710 --> 00:55:14,710
Bam.

1128
00:55:14,710 --> 00:55:15,710
Könnte ich sagen.

1129
00:55:15,710 --> 00:55:16,710
Mache ich aber auch nie.

1130
00:55:16,710 --> 00:55:21,710
Weil ich weiß eigentlich, auf welchem Desktop meine Sachen sind.

1131
00:55:21,710 --> 00:55:24,710
Deswegen mag ich ja auch E3 und Tiling Window Manager.

1132
00:55:24,710 --> 00:55:28,710
Beziehungsweise Tastatur, mit guter Tastaturbedienung.

1133
00:55:28,710 --> 00:55:31,710
Ich habe immer auf dem ersten Desktop meinen Browser.

1134
00:55:31,710 --> 00:55:32,710
Auf dem zweiten meinen Terminal.

1135
00:55:32,710 --> 00:55:33,710
Auf dem dritten meinen Editor.

1136
00:55:33,710 --> 00:55:36,710
Oder aber halt auf dem dritten und vierten meinen Editor.

1137
00:55:36,710 --> 00:55:45,620
Und auf sieben habe ich immer Animes laufen.

1138
00:55:45,620 --> 00:55:47,620
So habe ich das auf dem Desktop eingestellt.

1139
00:55:47,620 --> 00:55:54,500
Deswegen brauche ich nie, deswegen brauche ich nie überlegen.

1140
00:55:54,500 --> 00:55:58,780
Ja, aber nur auf Desktop 7, bitteschön.

1141
00:55:58,780 --> 00:56:04,780
Ich kenne die Anleitung.

1142
00:56:04,780 --> 00:56:06,780
Aber C-Line, ich habe es ausprobiert.

1143
00:56:06,780 --> 00:56:09,780
Hat, hatte, ich kriege es nicht mal zusammen, was das war.

1144
00:56:09,780 --> 00:56:11,780
Wir haben es im Stream ausprobiert.

1145
00:56:11,780 --> 00:56:21,340
Es gab irgendwelche Probleme mit diesem Custom Zeug, was Espressif da und CMake bastelt.

1146
00:56:21,340 --> 00:56:23,340
Ja, ja, das sieht auch erstmal so aus.

1147
00:56:23,340 --> 00:56:24,340
Funktioniert hat es.

1148
00:56:24,340 --> 00:56:26,340
Das sieht auch erstmal so aus, als würde es funktionieren.

1149
00:56:26,340 --> 00:56:28,340
Aber es gab ein paar Details, die haben nicht funktioniert.

1150
00:56:28,340 --> 00:56:30,340
Die haben mich nach der Zeit so aufgeregt, dass ich keinen Bock mehr hatte.

1151
00:56:30,340 --> 00:56:32,340
Und gesagt habe, ich mache jetzt wieder Whistle Studio Corner.

1152
00:56:32,340 --> 00:56:38,650
Ich glaube, ich glaube, Autocompletion hatte Probleme, manche Sachen aufzulösen.

1153
00:56:38,650 --> 00:56:42,350
Ich bin auch gedacht, warum?

1154
00:56:42,350 --> 00:56:45,350
Es ist noch gar nicht so lange her, wo wir das ausprobiert haben.

1155
00:56:45,350 --> 00:56:52,890
Also, Asynchrone Request.

1156
00:56:52,890 --> 00:56:54,890
Wie funktioniert das jetzt?

1157
00:56:54,890 --> 00:56:56,890
Wir machen das hier zu.

1158
00:56:56,890 --> 00:56:58,890
Und wir machen das hier zu.

1159
00:56:58,890 --> 00:57:00,890
Wobei, das brauchen wir ja alles nicht.

1160
00:57:00,890 --> 00:57:06,250
Wie macht man Asynchrone Request?

1161
00:57:06,250 --> 00:57:09,250
Wir gucken uns das Beispiel von denen an.

1162
00:57:09,250 --> 00:57:12,250
Async Handlers.

1163
00:57:12,250 --> 00:57:16,250
Also, WiFi Connection Gedöns haben wir gemacht.

1164
00:57:16,250 --> 00:57:18,250
Das haben wir auch gemacht.

1165
00:57:18,250 --> 00:57:20,250
Unser Webserver haben wir hier am Start.

1166
00:57:20,250 --> 00:57:22,250
Connect Handler, Start Webserver.

1167
00:57:22,250 --> 00:57:25,250
Haben wir auch gemacht.

1168
00:57:25,250 --> 00:57:43,330
Ja, wenn du NeoVim verwendest, die benutzen alle immer...

1169
00:57:43,330 --> 00:57:47,330
Da gibt es so ein Language Server Plugin für NeoVim, was das für dich handelt.

1170
00:57:47,330 --> 00:57:49,330
Ich habe aber keine Ahnung.

1171
00:57:49,330 --> 00:57:56,330
Ich habe, ehrlich gesagt, lange aufgehört, mein Vim, schon lange, jahre schon aufgehört, mein Vim aufzumodzen.

1172
00:57:56,330 --> 00:57:58,330
Mit IDE Features.

1173
00:57:58,330 --> 00:58:02,330
Ich benutze Vim täglich mehrere Stunden für Command Line Geschichten.

1174
00:58:02,330 --> 00:58:05,330
Aber sobald ich ein bisschen was Advancedes brauche, mache ich Whistle Studio Corner.

1175
00:58:05,330 --> 00:58:07,330
Oder die Jetbrains Sachen auf.

1176
00:58:07,330 --> 00:58:09,330
TS Fuchs, danke für den Sub.

1177
00:58:09,330 --> 00:58:15,330
Deswegen keine Ahnung, wie man Vim heutzutage cool konfiguriert.

1178
00:58:15,330 --> 00:58:18,330
Ich weiß nur, dass ich, wenn ich es machen würde, würde ich NeoVim nehmen.

1179
00:58:18,330 --> 00:58:23,960
Und dann mit irgendwelchen Lua Plugins oder was sie da alles am Start haben.

1180
00:58:23,960 --> 00:58:30,790
So.

1181
00:58:30,790 --> 00:58:33,790
Also, wir brauchen jetzt erstmal, das können wir uns hier auch ausgucken.

1182
00:58:33,790 --> 00:58:34,790
Abgucken.

1183
00:58:34,790 --> 00:58:40,390
Wir brauchen erstmal einen, einen URL-Händler.

1184
00:58:40,390 --> 00:58:43,730
Und zwar einen für HTTP.

1185
00:58:43,730 --> 00:58:44,730
So.

1186
00:58:44,730 --> 00:59:12,840
Also, wenn wir unseren Web-Server gestartet haben, dann brauchen wir einen Händler für, also sprich, was dann die Request verarbeitet.

1187
00:59:12,840 --> 00:59:20,520
Witzig, da hatten wir es heute Morgen noch von.

1188
00:59:20,520 --> 00:59:24,520
Für mal Slash, wir machen Slash Post einfach mal.

1189
00:59:24,520 --> 00:59:28,520
Wir wollen kein HTTP oder nennen wir es Slash Update.

1190
00:59:28,520 --> 00:59:30,520
So, wir wollen einen Post Request.

1191
00:59:30,520 --> 00:59:32,520
Jetzt brauchen wir einen Händler.

1192
00:59:32,520 --> 00:59:33,520
So.

1193
00:59:33,520 --> 00:59:34,520
Und da hatte ich es ja heute Morgen von.

1194
00:59:34,520 --> 00:59:36,520
Das ist ja auch wieder absolut zackt in C++.

1195
00:59:37,520 --> 00:59:40,520
Dass man sowas hier nicht mit einer anonymen Funktion gescheit machen kann.

1196
00:59:40,520 --> 00:59:42,520
Weil das halt richtig funktioniert.

1197
00:59:42,520 --> 00:59:45,520
Also, wir brauchen einen Händler für diesen Request.

1198
00:59:45,520 --> 00:59:47,520
Da muss ich jetzt einfach mal gucken, wie das hier funktioniert.

1199
00:59:47,520 --> 00:59:50,520
Also, lasst uns mal das Beispiel angucken.

1200
00:59:50,520 --> 00:59:54,880
Start Web-Server.

1201
00:59:54,880 --> 01:00:01,880
Warum ist eigentlich der neue GitHub-Editor so abfuck?

1202
01:00:01,880 --> 01:00:07,880
Und nervt immer, anstatt einfach nicht aufzugehen?

1203
01:00:07,880 --> 01:00:10,880
Benutzt dieses komische Feature hier ernsthaft jemand?

1204
01:00:10,880 --> 01:00:12,880
Ja doch, ich benutze es tatsächlich manchmal.

1205
01:00:12,880 --> 01:00:14,880
Aber in der Regel will ich das nicht.

1206
01:00:14,880 --> 01:00:16,880
In der Regel will ich hier drinnen was anklicken.

1207
01:00:16,880 --> 01:00:21,060
Und das Ding soll mich in Ruhe lassen hier neben.

1208
01:00:21,060 --> 01:00:23,060
So, Start Web-Server.

1209
01:00:23,060 --> 01:00:27,060
Die konfigurieren LRU Purge Enable.

1210
01:00:27,060 --> 01:00:30,060
Wenn die das machen, dann machen wir das auch.

1211
01:00:30,060 --> 01:00:32,060
Ich weiß zwar nicht, was das macht.

1212
01:00:32,060 --> 01:00:36,060
Purge Least Recently Used Connections.

1213
01:00:36,060 --> 01:00:40,170
Also, sprich.

1214
01:00:40,170 --> 01:00:45,170
Wenn ihm die Sockets ausgehen, dann wirft er alte Verbindungen weg.

1215
01:00:45,170 --> 01:00:49,170
So würde ich das mal vermuten.

1216
01:00:49,170 --> 01:00:52,170
Da bin ich mir nicht wirklich sicher, ob ich das haben will.

1217
01:00:52,170 --> 01:00:55,170
Oder ob ich lieber will, dass meine Connections weiter bestehen bleiben und keinen neuen mehr annimmt.

1218
01:00:55,170 --> 01:00:58,450
Weiß ich noch nicht genau.

1219
01:00:58,450 --> 01:01:01,450
Du hast nur 2 Stunden Verspätung und schon 60% der Strecke geschafft.

1220
01:01:01,450 --> 01:01:04,450
Okay, wenn du Glück hast, bleibt es bei 2 Stunden.

1221
01:01:04,450 --> 01:01:09,470
Ansonsten, es wird immer nur mehr, nicht weniger.

1222
01:01:09,470 --> 01:01:12,470
Ich weiß, es macht dir jetzt sehr viel Mut, aber so ist es.

1223
01:01:12,470 --> 01:01:14,470
Max Open Sockets.

1224
01:01:14,470 --> 01:01:17,470
Ja, da reicht das Default, das müssen wir nicht setzen.

1225
01:01:17,470 --> 01:01:19,470
Dann startet er den Web-Server.

1226
01:01:19,470 --> 01:01:20,470
Okay.

1227
01:01:20,470 --> 01:01:22,470
Das heißt, wir müssen jetzt hier noch checken.

1228
01:01:22,470 --> 01:01:24,470
If.

1229
01:01:24,470 --> 01:01:30,240
Muss ich das einfach so ausführen?

1230
01:01:30,240 --> 01:01:32,240
Ja, ungleich.

1231
01:01:32,240 --> 01:01:35,240
Dann, wenn das nicht okay ist.

1232
01:01:35,240 --> 01:01:37,240
Dann mache ich das gleiche.

1233
01:01:37,240 --> 01:01:39,240
ESP Restart.

1234
01:01:39,240 --> 01:01:41,560
Ja.

1235
01:01:41,560 --> 01:01:42,560
Mein Scheiß drauf.

1236
01:01:42,560 --> 01:01:44,560
Wenn mein Web-Server nicht startet, kann ich nicht weitermachen.

1237
01:01:44,560 --> 01:01:46,560
Also, wenn das aus irgendwelchen Gründen nicht funktioniert.

1238
01:01:46,560 --> 01:01:48,560
Komm, wir sind mal vor.

1239
01:01:48,560 --> 01:01:50,560
Okay.

1240
01:01:50,560 --> 01:01:53,560
So, und jetzt handeln wir den Post-Request.

1241
01:01:53,560 --> 01:01:57,870
Das sieht hier noch alles relativ normal aus.

1242
01:01:57,870 --> 01:02:02,590
Async-Handler.

1243
01:02:02,590 --> 01:02:03,590
Kann man das Ding hier irgendwie...

1244
01:02:03,590 --> 01:02:06,590
Gab es hier nicht immer so einen Minimieren-Knopf?

1245
01:02:06,590 --> 01:02:18,090
Ah, noch hier.

1246
01:02:18,090 --> 01:02:19,090
Okay, das ist übersichtlich.

1247
01:02:19,090 --> 01:02:24,770
Das ist das, wie wir es auch haben.

1248
01:02:24,770 --> 01:02:27,770
Also, was interessant wird, ist...

1249
01:02:27,770 --> 01:02:28,770
Wie hieß das Ding?

1250
01:02:28,770 --> 01:02:29,770
Oh.

1251
01:02:29,770 --> 01:02:31,770
Das ist Beispiel, Mann.

1252
01:02:31,770 --> 01:02:32,770
Alter.

1253
01:02:32,770 --> 01:02:39,480
Long Async-Handler.

1254
01:02:39,480 --> 01:02:40,480
Okay.

1255
01:02:40,480 --> 01:02:47,700
This handler is first invoked on the HTTP-Thread.

1256
01:02:47,700 --> 01:02:49,700
Okay, das macht Sinn.

1257
01:02:49,700 --> 01:02:52,700
Wenn das Initial reinkommt.

1258
01:02:52,700 --> 01:03:06,680
Dann checkt er, ob er nicht schon asynchron läuft.

1259
01:03:06,680 --> 01:03:08,680
Und dann startet er sich selber nochmal.

1260
01:03:08,680 --> 01:03:13,210
Boah, das ist ja mal voll durch die Brust ins Auge.

1261
01:03:13,210 --> 01:03:17,210
Also, soweit ich das verstehe, passiert hier folgendes in dem Beispiel.

1262
01:03:17,210 --> 01:03:19,210
Sobald ein Request reinkommt.

1263
01:03:19,210 --> 01:03:21,210
Für diesen Händler wird er aufgerufen.

1264
01:03:21,210 --> 01:03:27,210
Dann guckt er, ob er schon asynchron läuft.

1265
01:03:27,210 --> 01:03:30,210
Was er ja beim ersten Request nicht macht.

1266
01:03:30,210 --> 01:03:38,520
Wenn er nicht asynchron läuft, dann startet er sich selbst neu in einem Background-Thread.

1267
01:03:38,520 --> 01:03:43,520
Und das nächste Mal, wenn das hier aufgerufen wird, ist das hier dann true.

1268
01:03:43,520 --> 01:03:45,520
Und das wird übersprungen.

1269
01:03:45,520 --> 01:03:48,520
Wenn man hier nicht aufpasst, hat man übrigens eine Endlosschleife gebaut.

1270
01:03:48,520 --> 01:03:49,520
Und der ruft sich immer wieder auf, bis es crasht.

1271
01:03:49,520 --> 01:03:58,190
Das haben die gemacht, dass wenn der Threadpool keinen Platz mehr hat vermutlich.

1272
01:03:58,190 --> 01:04:02,190
Ich bin mir da nicht so ganz sicher, was sie da gebaut haben.

1273
01:04:02,190 --> 01:04:04,190
Ja, und danach macht er irgendwelche Sachen.

1274
01:04:04,190 --> 01:04:07,850
Heißt im Endeffekt...

1275
01:04:07,850 --> 01:04:09,850
Alter, wat?

1276
01:04:09,850 --> 01:04:12,850
Submit Async Request.

1277
01:04:12,850 --> 01:04:18,930
Also, das ruft er auf, um sich asynchron zu machen.

1278
01:04:18,930 --> 01:04:25,900
Das ist er selbst.

1279
01:04:25,900 --> 01:04:27,900
Das ist in dem Fall die Funktion hier.

1280
01:04:39,750 --> 01:04:41,750
Okay, das ist wahrscheinlich das, auf was es ankommt.

1281
01:04:41,750 --> 01:04:44,750
Ich glaube, den Rest können wir schon mal knicken hier.

1282
01:04:44,750 --> 01:04:48,750
httpd Request Async Handler Begin.

1283
01:04:48,750 --> 01:04:50,750
Das müssen wir machen.

1284
01:04:50,750 --> 01:04:52,750
Wisst ihr was?

1285
01:04:52,750 --> 01:04:56,750
Ich lasse dieses ganze super-advanced Zeug von denen mal hier weg.

1286
01:04:56,750 --> 01:05:04,960
Was macht der da?

1287
01:05:04,960 --> 01:05:12,360
Guckt, ob er schon im Essen...

1288
01:05:12,360 --> 01:05:14,360
Da haben sie eine Queue für die Sachen.

1289
01:05:14,360 --> 01:05:33,200
Und hier erzeugt er den Background-Thread.

1290
01:05:33,200 --> 01:05:35,200
Er ist free, Erthos.

1291
01:05:35,200 --> 01:05:38,200
Okay, ich glaube, ich habe es gecheckt, was passiert.

1292
01:05:38,200 --> 01:05:40,520
Also...

1293
01:05:40,520 --> 01:05:41,520
Gucken, ob das stimmt.

1294
01:05:41,520 --> 01:05:42,520
Ja, hier, okay.

1295
01:05:42,520 --> 01:05:44,520
Ich glaube, ich habe es verstanden.

1296
01:05:44,520 --> 01:05:46,520
Und zwar...

1297
01:05:46,520 --> 01:05:48,520
Der ruft als erstes das hier auf.

1298
01:05:48,520 --> 01:05:50,520
Noch nach dem Start.

1299
01:05:50,520 --> 01:05:52,520
Was das hier macht, ist...

1300
01:05:52,520 --> 01:05:56,520
Dieses ganze Ding ist im Prinzip nur dafür da, um zu checken,

1301
01:05:56,520 --> 01:06:01,520
ob es neue Requests gibt, die asynchron bearbeitet werden müssen.

1302
01:06:01,520 --> 01:06:04,520
Und zwar scheint es hier eine Message-Queue zu geben.

1303
01:06:04,520 --> 01:06:06,520
Irgendwie hier eine Message-Queue.

1304
01:06:06,520 --> 01:06:08,520
Eine Message-Queue.

1305
01:06:08,520 --> 01:06:12,180
Und...

1306
01:06:12,180 --> 01:06:16,180
Dort werden quasi asynchrone Requests reingepusht, wenn man so will.

1307
01:06:16,180 --> 01:06:18,180
In diese Message-Queue.

1308
01:06:18,180 --> 01:06:20,180
Er startet...

1309
01:06:20,180 --> 01:06:22,180
Ja...

1310
01:06:22,180 --> 01:06:26,180
Eine vordefinierte Anzahl von Threads.

1311
01:06:26,180 --> 01:06:28,180
Von Tasks.

1312
01:06:28,180 --> 01:06:30,180
Aber es sind im Prinzip quasi Threads.

1313
01:06:30,180 --> 01:06:34,360
Und...

1314
01:06:34,360 --> 01:06:36,360
Diese Threads startet er...

1315
01:06:36,360 --> 01:06:38,360
Mit...

1316
01:06:38,360 --> 01:06:43,620
Ja...

1317
01:06:43,620 --> 01:06:45,620
Das ist der Einstieg quasi für den jeweiligen Thread.

1318
01:06:45,620 --> 01:06:51,620
Und das ist eine Endlosschleife, die nachguckt in dieser Message-Queue,

1319
01:06:51,620 --> 01:06:55,620
ob es neue Requests gibt, die zu bearbeiten sind.

1320
01:06:55,620 --> 01:06:57,620
Und...

1321
01:06:57,620 --> 01:07:00,620
Wenn ja, dann geht er hier rein.

1322
01:07:00,620 --> 01:07:04,620
Bearbeitet die Methode, definiert es für den jeweiligen Request.

1323
01:07:04,620 --> 01:07:06,620
Und wenn er fertig ist, räumt er auf.

1324
01:07:06,620 --> 01:07:09,620
Ich glaube, das ist so die Essenz des Ganzen, was passiert.

1325
01:07:09,620 --> 01:07:11,620
Wir werden uns diese ganze Message-Queue glauben.

1326
01:07:11,620 --> 01:07:13,620
Komplett schenken.

1327
01:07:13,620 --> 01:07:15,620
Zum Ausprobieren ist das komplett Overkill.

1328
01:07:15,620 --> 01:07:19,620
Wir starten einfach für jeden Request einen neuen Thread.

1329
01:07:19,620 --> 01:07:23,120
Und hoffen, dass es funktioniert.

1330
01:07:23,120 --> 01:07:25,120
Aber das hier brauchen wir.

1331
01:07:25,120 --> 01:07:27,120
Wir brauchen Async-Händler Complete.

1332
01:07:27,120 --> 01:07:34,880
Wir brauchen...

1333
01:07:34,880 --> 01:07:36,880
Wie heißt das andere?

1334
01:07:36,880 --> 01:07:38,880
Async-Händler Begin.

1335
01:07:38,880 --> 01:07:40,880
Das hier brauchen wir.

1336
01:07:40,880 --> 01:07:42,880
Und dann Complete danach.

1337
01:07:42,880 --> 01:07:44,880
Okay.

1338
01:07:44,880 --> 01:07:46,880
Dann machen wir das doch mal.

1339
01:07:46,880 --> 01:07:48,880
Wir haben hier eine neue Funktion.

1340
01:07:48,880 --> 01:07:54,880
Static Void Handle Post.

1341
01:07:54,880 --> 01:07:56,880
Oder so.

1342
01:07:56,880 --> 01:07:58,880
Handle Post.

1343
01:07:58,880 --> 01:08:04,870
Da weiß ich zufällig aus dem Kopf, was das Ding für Parameter braucht.

1344
01:08:04,870 --> 01:08:06,870
HTTP Requests.

1345
01:08:06,870 --> 01:08:08,870
Braucht das.

1346
01:08:08,870 --> 01:08:14,790
Und zurück gibt das ein ESP-Error.

1347
01:08:14,790 --> 01:08:16,790
So, jetzt sollte es zumindest noch mal kompilieren.

1348
01:08:16,790 --> 01:08:18,790
Gut.

1349
01:08:18,790 --> 01:08:20,790
Und jetzt müssen wir das Ganze hier mit diesem Asynchronen-Krempel machen.

1350
01:08:20,790 --> 01:08:22,790
Also.

1351
01:08:22,790 --> 01:08:24,790
httpd Request Copy.

1352
01:08:26,790 --> 01:08:28,790
Ich vermute mal, was an der Stelle passiert ist.

1353
01:08:28,790 --> 01:08:32,040
Der

1354
01:08:32,040 --> 01:08:34,040
kopiert sich quasi alles,

1355
01:08:34,040 --> 01:08:36,040
was zu diesem Request gehört, raus.

1356
01:08:36,040 --> 01:08:38,040
Dass der...

1357
01:08:38,040 --> 01:08:40,040
Also bis...

1358
01:08:40,040 --> 01:08:42,040
Hier ist es ja noch synchron.

1359
01:08:42,040 --> 01:08:44,040
Der Request kommt rein.

1360
01:08:44,040 --> 01:08:46,040
Und die Methode wird hier aufgerufen.

1361
01:08:46,040 --> 01:08:48,040
Das ist alles noch synchron.

1362
01:08:48,040 --> 01:08:50,040
Und dann kann der Webserver genau diesen einen Request verarbeiten.

1363
01:08:50,040 --> 01:08:52,040
Und keinen zweiten Request gleichzeitig.

1364
01:08:52,040 --> 01:08:54,040
Jetzt kopiert er sich alles,

1365
01:08:54,040 --> 01:08:56,040
was zu diesem Request gehört.

1366
01:08:56,040 --> 01:08:58,040
Sodass das quasi den Request überlebt.

1367
01:08:58,040 --> 01:09:00,040
Diesen synchronen Request.

1368
01:09:00,040 --> 01:09:04,820
Und jetzt muss ich mich drum kümmern,

1369
01:09:04,820 --> 01:09:06,820
dass das asynchron weiterläuft.

1370
01:09:06,820 --> 01:09:08,820
Sodass quasi der synchrone Request

1371
01:09:08,820 --> 01:09:10,820
oder der Webserver

1372
01:09:10,820 --> 01:09:12,820
einmal synchron durchlaufen kann,

1373
01:09:12,820 --> 01:09:14,820
aber im Hintergrund die Bearbeitung weiterläuft.

1374
01:09:14,820 --> 01:09:16,820
Ist das...

1375
01:09:16,820 --> 01:09:18,820
Klingt ein bisschen...

1376
01:09:18,820 --> 01:09:20,820
Ne, das könnte Sonic oder Mario Kart sein.

1377
01:09:20,820 --> 01:09:22,820
Das ist Mario Kart.

1378
01:09:22,820 --> 01:09:24,820
Mario Kart.

1379
01:09:24,820 --> 01:09:29,250
Das kommt mir irgendwie bekannt vor.

1380
01:09:29,250 --> 01:09:31,250
Okay, und jetzt?

1381
01:09:31,250 --> 01:09:33,250
Und jetzt führen sie das einfach wieder aus, oder?

1382
01:09:33,250 --> 01:09:35,250
Okay, wir...

1383
01:09:35,250 --> 01:09:37,250
Leute, wir werden dieses

1384
01:09:37,250 --> 01:09:39,250
Example jetzt einfach mal zusammendampfen

1385
01:09:39,250 --> 01:09:41,250
auf...

1386
01:09:41,250 --> 01:09:43,250
drei Zeilen.

1387
01:09:43,250 --> 01:09:45,250
Ähm...

1388
01:09:45,250 --> 01:09:47,250
Wir starten hier jetzt einen neuen Thread.

1389
01:09:49,250 --> 01:09:51,250
Glücklicherweise

1390
01:09:51,250 --> 01:09:53,250
habe ich mir da schon mal irgendwann

1391
01:09:53,250 --> 01:09:55,250
einen Rapper für gebaut.

1392
01:09:55,250 --> 01:09:57,250
Also wir machen jetzt...

1393
01:09:57,250 --> 01:09:59,250
Wir machen im Prinzip das hier.

1394
01:09:59,250 --> 01:10:02,630
Nur gerappt.

1395
01:10:02,630 --> 01:10:04,630
Wir starten einen neuen Thread.

1396
01:10:04,630 --> 01:10:08,870
Und zwar...

1397
01:10:08,870 --> 01:10:10,870
machen wir das da drinnen.

1398
01:10:10,870 --> 01:10:12,870
Und das Ding heißt

1399
01:10:12,870 --> 01:10:14,870
Runtask.

1400
01:10:14,870 --> 01:10:16,870
Das Ding heißt, äh, ja...

1401
01:10:16,870 --> 01:10:24,760
HandlePost.

1402
01:10:24,760 --> 01:10:28,420
So.

1403
01:10:28,420 --> 01:10:30,420
Ja, ich hab mir das...

1404
01:10:30,420 --> 01:10:32,420
Ich kann euch das auch zeigen.

1405
01:10:32,420 --> 01:10:34,420
Hier.

1406
01:10:34,420 --> 01:10:36,420
Ich weiß, das ist bestimmt ein sehr hässliches

1407
01:10:36,420 --> 01:10:38,420
C++, aber es funktioniert.

1408
01:10:38,420 --> 01:10:40,420
Äh, der macht im Prinzip

1409
01:10:40,420 --> 01:10:42,420
unter der Haube

1410
01:10:42,420 --> 01:10:44,420
das, was dort auch drinnen steht.

1411
01:10:44,420 --> 01:10:46,420
Der macht, äh...

1412
01:10:46,420 --> 01:10:51,490
XtasCreate.

1413
01:10:51,490 --> 01:10:53,490
Nur, dass ich mich um den ganzen anderen Kempel

1414
01:10:53,490 --> 01:10:55,490
nicht mehr kümmern muss.

1415
01:10:55,490 --> 01:10:57,490
Und es ist

1416
01:10:57,490 --> 01:10:59,490
möglich, hier den Lambda zu übergeben,

1417
01:10:59,490 --> 01:11:01,490
was er machen soll.

1418
01:11:01,490 --> 01:11:03,490
Deswegen ist das zum Benutzen

1419
01:11:03,490 --> 01:11:05,490
dann angenehmer.

1420
01:11:05,490 --> 01:11:07,490
Wir starten einen eigenen Thread.

1421
01:11:07,490 --> 01:11:09,490
In diesem Thread machen wir jetzt folgendes.

1422
01:11:09,490 --> 01:11:11,490
Was macht er denn jetzt hier drinnen eigentlich?

1423
01:11:11,490 --> 01:11:13,490
Im Prinzip startet er jetzt ja diesen long...

1424
01:11:13,490 --> 01:11:15,490
Wie hieß das Ding?

1425
01:11:15,490 --> 01:11:17,490
LongAsync?

1426
01:11:17,490 --> 01:11:19,490
Ja, das da startet er jetzt nochmal.

1427
01:11:19,490 --> 01:11:21,490
Diesen ganzen

1428
01:11:21,490 --> 01:11:23,490
Krempel haben wir geskippt.

1429
01:11:23,490 --> 01:11:25,490
Und hier drinnen macht er

1430
01:11:25,490 --> 01:11:27,490
ganz normales HTTP Zeug.

1431
01:11:27,490 --> 01:11:33,300
Er sendet auch eine Antwort.

1432
01:11:33,300 --> 01:11:42,120
Okay.

1433
01:11:42,120 --> 01:11:44,120
Dann lasst uns doch erstmal testen,

1434
01:11:44,120 --> 01:11:46,120
ob ein GetRequest richtig funktioniert.

1435
01:11:46,120 --> 01:11:48,120
Ich weiß, es ist vielleicht ein bisschen dumm,

1436
01:11:48,120 --> 01:11:50,120
dass der GetRequest

1437
01:11:50,120 --> 01:11:52,120
jetzt kurz mal temporär

1438
01:11:52,120 --> 01:11:57,700
HandlePost heißt, aber...

1439
01:11:57,700 --> 01:11:59,700
Wir handeln jetzt mal einen GetRequest...

1440
01:11:59,700 --> 01:12:01,700
Oh ne, das Formatieren

1441
01:12:01,700 --> 01:12:03,700
von den Dingern ist wieder voll am

1442
01:12:03,700 --> 01:12:07,110
abkacken.

1443
01:12:07,110 --> 01:12:10,360
Oh man.

1444
01:12:10,360 --> 01:12:12,360
Warum ist das teilweise...

1445
01:12:12,360 --> 01:12:14,360
Man fühlt sich übelst sabotiert manchmal.

1446
01:12:14,360 --> 01:12:16,360
Ich mein, wer hat gedacht,

1447
01:12:16,360 --> 01:12:18,360
dass das eine gute Formatierung ist dafür?

1448
01:12:18,360 --> 01:12:24,550
The fuck?

1449
01:12:24,550 --> 01:12:26,550
Ah, what the...

1450
01:12:26,550 --> 01:12:36,480
Alter!

1451
01:12:36,480 --> 01:12:38,480
Keine Ahnung.

1452
01:12:38,480 --> 01:12:40,480
Okay, also was führen wir jetzt hier drinnen aus?

1453
01:12:40,480 --> 01:12:44,440
Im Prinzip

1454
01:12:44,440 --> 01:12:46,440
responden wir einfach.

1455
01:12:46,440 --> 01:12:48,440
Wir testen einfach mal, ob es funktioniert.

1456
01:12:48,440 --> 01:12:52,160
Hier, ähm...

1457
01:12:52,160 --> 01:12:54,160
Response, ne, hier, send 400.

1458
01:12:54,160 --> 01:12:56,160
Send, das machen wir.

1459
01:12:56,160 --> 01:12:58,160
Wir senden jetzt einfach eine Antwort hier drinnen.

1460
01:12:58,160 --> 01:13:00,160
Allerdings...

1461
01:13:00,160 --> 01:13:02,160
senden wir jetzt keine...

1462
01:13:02,160 --> 01:13:04,160
Ach, jetzt sieht es ja ganz brauchbar

1463
01:13:04,160 --> 01:13:06,160
vom... Alter!

1464
01:13:06,160 --> 01:13:08,160
Visual Studio Code mal entscheiden.

1465
01:13:08,160 --> 01:13:10,160
Allerdings dürfen wir jetzt nicht den Request

1466
01:13:10,160 --> 01:13:12,160
verwenden, sondern müssen diese Copy

1467
01:13:12,160 --> 01:13:16,020
von diesem Request verwenden.

1468
01:13:16,020 --> 01:13:18,020
So, das heißt wir...

1469
01:13:18,020 --> 01:13:20,020
jetzt die Copy...

1470
01:13:20,020 --> 01:13:22,020
So, nicht gzip,

1471
01:13:22,020 --> 01:13:24,020
html ist okay.

1472
01:13:24,020 --> 01:13:26,020
Und wir antworten auch nur...

1473
01:13:26,020 --> 01:13:30,260
äh, ja...

1474
01:13:30,260 --> 01:13:32,260
keckel antworten wir.

1475
01:13:32,260 --> 01:13:37,200
Das muss reichen.

1476
01:13:37,200 --> 01:13:40,960
So.

1477
01:13:40,960 --> 01:13:42,960
Ich weiß nicht, was Visual Studio da

1478
01:13:42,960 --> 01:13:46,400
gerade rumformatiert, aber...

1479
01:13:46,400 --> 01:13:48,400
So.

1480
01:13:48,400 --> 01:13:50,400
Und jetzt... Ha!

1481
01:13:50,400 --> 01:13:52,400
Und jetzt... Ha, das hätte ich sonst vergessen, sonst Memory

1482
01:13:52,400 --> 01:13:54,400
leakts. Und jetzt müssen wir sagen

1483
01:13:54,400 --> 01:13:56,400
asynch handler complete.

1484
01:13:56,400 --> 01:13:58,400
Was im Endeffekt quasi

1485
01:13:58,400 --> 01:14:00,400
eine Art free ist, vermutlich.

1486
01:14:00,400 --> 01:14:11,750
Ja, so.

1487
01:14:11,750 --> 01:14:13,750
Also wenn ich

1488
01:14:13,750 --> 01:14:18,500
Glück habe, funzt es jetzt.

1489
01:14:18,500 --> 01:14:20,500
Curl...

1490
01:14:20,500 --> 01:14:22,500
äh, wie habe ich es genannt? Update?

1491
01:14:22,500 --> 01:14:24,500
Ganz normaler Get-Request.

1492
01:14:24,500 --> 01:14:26,500
...

1493
01:14:26,500 --> 01:14:28,500
...

1494
01:14:28,500 --> 01:14:39,810
...

1495
01:14:39,810 --> 01:14:41,810
Okay, schauen wir mal, ob es funzt. Bam!

1496
01:14:41,810 --> 01:14:43,810
Easy!

1497
01:14:43,810 --> 01:14:45,810
Keckel!

1498
01:14:45,810 --> 01:14:47,810
So, jetzt müssen wir mal gucken, ob das ordentlich

1499
01:14:47,810 --> 01:14:49,810
asynchron funktioniert. Wir bauen da jetzt mal

1500
01:14:49,810 --> 01:14:51,810
einen Delay ein.

1501
01:14:51,810 --> 01:14:53,810
Delay...

1502
01:14:53,810 --> 01:14:55,810
1000. Und jetzt führen wir einfach

1503
01:14:55,810 --> 01:14:57,810
zwei Curls aus.

1504
01:14:57,810 --> 01:14:59,810
Gleichzeitig und gucken, ob das asynchron ist.

1505
01:14:59,810 --> 01:15:01,810
Wobei, nee, nee, nee, nee, nee.

1506
01:15:01,810 --> 01:15:03,810
Wir machen das noch viel besser.

1507
01:15:03,810 --> 01:15:05,810
Send.

1508
01:15:05,810 --> 01:15:07,810
Chunk können wir noch machen,

1509
01:15:07,810 --> 01:15:13,110
oder?

1510
01:15:13,110 --> 01:15:15,110
Das sieht man ja auch so.

1511
01:15:15,110 --> 01:15:22,320
Delay 1000.

1512
01:15:22,320 --> 01:15:24,320
So, wir machen jetzt zwei Curls.

1513
01:15:24,320 --> 01:15:26,320
Und die sollten jetzt beide

1514
01:15:26,320 --> 01:15:28,320
hängen, aber

1515
01:15:28,320 --> 01:15:30,320
...

1516
01:15:30,320 --> 01:15:32,320
dann eine Antwort bekommen nach jeweils einer Sekunde.

1517
01:15:32,320 --> 01:15:34,320
Sie hängen jetzt parallel

1518
01:15:34,320 --> 01:15:40,900
gleich. Habe ich eine IP?

1519
01:15:40,900 --> 01:15:42,900
Ja.

1520
01:15:42,900 --> 01:15:46,340
Okay. Ich würde sagen, das funzt.

1521
01:15:46,340 --> 01:15:49,810
Guck mal. Wir können mehrere

1522
01:15:49,810 --> 01:15:51,810
Curl-Befehle parallel ausführen.

1523
01:15:51,810 --> 01:15:53,810
Na, ob das so richtig

1524
01:15:53,810 --> 01:15:55,810
parallel ist, weiß ich nicht. Wir machen mal

1525
01:15:55,810 --> 01:15:59,090
Send. Chunk.

1526
01:15:59,090 --> 01:16:01,090
Ja, Send. Chunk.

1527
01:16:01,090 --> 01:16:06,870
Null?

1528
01:16:06,870 --> 01:16:08,870
Wir machen das mal.

1529
01:16:08,870 --> 01:16:10,870
Wir senden da wirklich mal was zurück.

1530
01:16:10,870 --> 01:16:14,880
Mal eine Vorschleife.

1531
01:16:14,880 --> 01:16:16,880
Ja.

1532
01:16:16,880 --> 01:16:18,880
Zehn Stück.

1533
01:16:18,880 --> 01:16:20,880
Zehn Mal senden wir da

1534
01:16:20,880 --> 01:16:22,880
was zurück. Oder keine Ahnung. Wir können auch 100 Mal

1535
01:16:22,880 --> 01:16:24,880
was zurück senden. Ist auch egal.

1536
01:16:24,880 --> 01:16:26,880
Okay, und dann warten wir jeweils 50 Millisekunden

1537
01:16:26,880 --> 01:16:28,880
dazwischen.

1538
01:16:28,880 --> 01:16:30,880
Format ist übrigens kaputt.

1539
01:16:30,880 --> 01:16:32,880
Visual Studio formatiert nicht

1540
01:16:32,880 --> 01:16:34,880
mehr. Hat's gedacht.

1541
01:16:34,880 --> 01:16:38,480
Nope. Kein Bock mehr zu formatieren.

1542
01:16:38,480 --> 01:16:40,480
Jetzt. Ach, jetzt geht's.

1543
01:16:40,480 --> 01:16:42,480
Alter, das ist so schlecht,

1544
01:16:42,480 --> 01:16:46,240
Mann.

1545
01:16:46,240 --> 01:16:48,240
Wie kann es so schlecht sein, Alter?

1546
01:16:48,240 --> 01:16:51,840
So, und jetzt sagen wir

1547
01:16:51,840 --> 01:16:53,840
Leon, danke schön für den Sub.

1548
01:16:53,840 --> 01:16:55,840
Chunk.

1549
01:16:55,840 --> 01:16:57,840
Send, String, Chunk.

1550
01:16:57,840 --> 01:17:02,210
Ja.

1551
01:17:02,210 --> 01:17:04,210
Okay, wir senden jetzt

1552
01:17:04,210 --> 01:17:06,210
Kekkel. Ne, wir senden

1553
01:17:06,210 --> 01:17:08,210
ja, wir senden Kekkel.

1554
01:17:08,210 --> 01:17:10,210
Kekkel 1 senden wir jetzt. Okay, wir senden

1555
01:17:10,210 --> 01:17:12,210
jetzt, ne, wir senden die jeweilige Zahl

1556
01:17:12,210 --> 01:17:14,210
von der, ja, Kekkel plus

1557
01:17:14,210 --> 01:17:17,810
FMT

1558
01:17:17,810 --> 01:17:24,550
Format I.

1559
01:17:24,550 --> 01:17:26,550
Okay.

1560
01:17:26,550 --> 01:17:28,550
Senden wir da jetzt.

1561
01:17:28,550 --> 01:17:30,550
Weil's sonst zu hübsch wird wahrscheinlich.

1562
01:17:30,550 --> 01:17:32,550
Okay, also wir

1563
01:17:32,550 --> 01:17:34,550
sind komplett.

1564
01:17:34,550 --> 01:17:36,550
Und dann muss man am Ende

1565
01:17:36,550 --> 01:17:38,550
was machen?

1566
01:17:38,550 --> 01:17:43,240
Request 0.

1567
01:17:43,240 --> 01:17:45,240
Okay.

1568
01:17:45,240 --> 01:17:49,800
Das so quasi, jetzt ist Schluss, oder wie?

1569
01:17:49,800 --> 01:17:51,800
Ah, 0 to finish response packet.

1570
01:17:51,800 --> 01:17:53,800
Obviously.

1571
01:17:53,800 --> 01:17:58,960
Weiß jeder.

1572
01:17:58,960 --> 01:18:00,960
Alles klar. So. Schauen wir mal.

1573
01:18:00,960 --> 01:18:05,620
Ich hatte bis jetzt noch keinen

1574
01:18:05,620 --> 01:18:07,620
großartig kryptischen Error.

1575
01:18:07,620 --> 01:18:10,900
Auch sehr ungewohnt.

1576
01:18:10,900 --> 01:18:12,900
Welches Betriebssystem ist das? Hier?

1577
01:18:12,900 --> 01:18:14,900
Das ist Arch, by the way.

1578
01:18:14,900 --> 01:18:21,030
Ich use Arch.

1579
01:18:21,030 --> 01:18:24,530
Das ist Arch Deluxe mit

1580
01:18:24,530 --> 01:18:26,530
I3.

1581
01:18:26,530 --> 01:18:28,530
Inner4M, wohlgemerkt.

1582
01:18:28,530 --> 01:18:30,530
Okay, update.

1583
01:18:30,530 --> 01:18:32,530
Äh.

1584
01:18:32,530 --> 01:18:34,530
Also, das läuft

1585
01:18:34,530 --> 01:18:36,530
asynchron, aber mein...

1586
01:18:36,530 --> 01:18:45,640
Wow, wow, wow, wow, wow.

1587
01:18:45,640 --> 01:18:47,640
Chat, das funktioniert

1588
01:18:47,640 --> 01:18:53,190
nicht, was ich hier gebaut hab.

1589
01:18:53,190 --> 01:18:55,190
Ah, siehste mal, ich kack noob.

1590
01:18:55,190 --> 01:18:57,190
Es muss Copy sein.

1591
01:18:57,190 --> 01:18:59,190
Oder?

1592
01:18:59,190 --> 01:19:01,190
Und nicht Request.

1593
01:19:01,190 --> 01:19:03,190
Ich hoffe, ich verwende hier nirgends

1594
01:19:03,190 --> 01:19:16,070
so Request. Ist das CMake?

1595
01:19:16,070 --> 01:19:21,200
Ja, ja.

1596
01:19:21,200 --> 01:19:23,200
Das ist aber nicht, was ich selbst

1597
01:19:23,200 --> 01:19:25,200
konfiguriert hab. Das ist, wenn du das

1598
01:19:25,200 --> 01:19:27,200
ESP-IDF-Beispielprojekt klonst,

1599
01:19:27,200 --> 01:19:29,200
ist das alles schon vorkonfiguriert.

1600
01:19:29,200 --> 01:19:31,200
Ich nehm immer das Beispiel und

1601
01:19:31,200 --> 01:19:33,200
copy-paste den Rest so hin, wie ich's haben will.

1602
01:19:33,200 --> 01:19:35,200
Ähm. Was macht die

1603
01:19:35,200 --> 01:19:37,200
Sunshine-Kiste, wenn ich

1604
01:19:37,200 --> 01:19:41,000
weitergebaut? Äh.

1605
01:19:41,000 --> 01:19:45,910
So wirklich? Ey, es

1606
01:19:45,910 --> 01:19:51,750
funzt, Leute! Also,

1607
01:19:51,750 --> 01:19:53,750
der macht asynchron was.

1608
01:19:53,750 --> 01:19:55,750
Aber warum zeigt mir Curl nix an?

1609
01:19:55,750 --> 01:19:57,750
Warte mal, wie ist das

1610
01:19:57,750 --> 01:19:59,750
bei... Moment, Moment, Moment.

1611
01:19:59,750 --> 01:20:01,750
Muss man da nicht, bei Chunk,

1612
01:20:01,750 --> 01:20:03,750
muss man da nicht Newline, Newline

1613
01:20:03,750 --> 01:20:05,750
irgendwie reinmachen?

1614
01:20:05,750 --> 01:20:07,750
Dass das, dass das

1615
01:20:07,750 --> 01:20:09,750
HTTP das checkt? Oder, oder

1616
01:20:09,750 --> 01:20:11,750
war das, oder ist das SMTP?

1617
01:20:11,750 --> 01:20:13,750
Ich kann mir das immer nicht merken.

1618
01:20:13,750 --> 01:20:15,750
Oder ist es

1619
01:20:15,750 --> 01:20:17,750
Carriage-Return-Newline? Was muss man

1620
01:20:17,750 --> 01:20:19,750
bei HTTP reinmachen, dass der, dass der,

1621
01:20:19,750 --> 01:20:21,750
dass der irgendwie...

1622
01:20:21,750 --> 01:20:23,750
Warte mal, HTTP

1623
01:20:23,750 --> 01:20:25,750
Chunk, Newline...

1624
01:20:25,750 --> 01:20:39,270
Ah, jetzt funzt! Guck!

1625
01:20:39,270 --> 01:20:41,270
So, und jetzt, und jetzt sollte ich

1626
01:20:41,270 --> 01:20:43,270
in der Lage sein, das zweimal

1627
01:20:43,270 --> 01:20:45,270
parallel zu machen.

1628
01:20:45,270 --> 01:20:47,270
Geht! Das beweist der,

1629
01:20:47,270 --> 01:20:49,270
der Request, der Get-Request ist asynchron.

1630
01:20:49,270 --> 01:20:51,270
Ich kann

1631
01:20:51,270 --> 01:20:53,270
zwei, das ging früher nicht. Früher

1632
01:20:53,270 --> 01:20:55,270
konnte der Webserver immer genau ein

1633
01:20:55,270 --> 01:20:59,190
Request parallel bearbeiten.

1634
01:20:59,190 --> 01:21:01,190
Das ist asynchron. Nice.

1635
01:21:01,190 --> 01:21:03,190
Ähm, jetzt ist die Frage,

1636
01:21:03,190 --> 01:21:05,190
lasst uns mal ausprobieren,

1637
01:21:05,190 --> 01:21:08,690
wie viele Requests,

1638
01:21:08,690 --> 01:21:12,420
da müssen wir das auch ein bisschen,

1639
01:21:12,420 --> 01:21:16,440
machen wir ein bisschen länger, okay.

1640
01:21:16,440 --> 01:21:18,440
Wie, wie viele Requests,

1641
01:21:18,440 --> 01:21:22,900
kann ich denn,

1642
01:21:22,900 --> 01:21:24,900
was meint ihr, wie viele gehen?

1643
01:21:24,900 --> 01:21:26,900
Wir machen mal acht.

1644
01:21:26,900 --> 01:21:35,810
Machen einfach unter, hinter.

1645
01:21:35,810 --> 01:21:39,320
Okay. Eins, zwei,

1646
01:21:39,320 --> 01:21:41,320
drei, vier, fünf, sechs,

1647
01:21:41,320 --> 01:21:43,320
sieben, acht.

1648
01:21:43,320 --> 01:21:45,320
Man sieht es jetzt halt nicht richtig.

1649
01:21:45,320 --> 01:21:47,320
Also acht Requests scheinen zu

1650
01:21:47,320 --> 01:21:49,320
funktionieren. Oh!

1651
01:21:49,320 --> 01:21:52,920
Das war jetzt vielleicht ein bisschen viel auf einmal.

1652
01:21:52,920 --> 01:21:56,160
Äh, acht Requests macht

1653
01:21:56,160 --> 01:22:02,610
ihn schon ein bisschen fertig.

1654
01:22:02,610 --> 01:22:04,610
Aber er crasht noch nicht, er crasht noch nicht.

1655
01:22:04,610 --> 01:22:06,610
Ach bloß, er ist ein bisschen zu ausgelastet.

1656
01:22:06,610 --> 01:22:14,210
Okay, ich gebe jetzt auf zehntausend

1657
01:22:14,210 --> 01:22:16,210
hoch, das ist vielleicht ein bisschen viel.

1658
01:22:16,210 --> 01:22:20,360
Ich brech mal ab.

1659
01:22:20,360 --> 01:22:22,360
Kill, all, curl, bam.

1660
01:22:22,360 --> 01:22:27,880
Ist vielleicht ein bisschen viel, ja.

1661
01:22:27,880 --> 01:22:43,060
Was meint ihr, wie viele, wie viele

1662
01:22:43,060 --> 01:22:45,060
Requests gehen da maximal? Acht?

1663
01:22:45,060 --> 01:22:47,060
Neun, zehn, elf?

1664
01:22:47,060 --> 01:22:49,060
Gucken wir mal, ich starte einfach jetzt.

1665
01:22:49,060 --> 01:22:51,060
Bis er crasht, irgendwann wird er ja crashen.

1666
01:22:51,060 --> 01:22:59,110
Okay.

1667
01:22:59,110 --> 01:23:01,110
Zwei, drei, vier, fünf, sechs,

1668
01:23:01,110 --> 01:23:03,110
sieben, acht, neun, zehn,

1669
01:23:03,110 --> 01:23:05,110
elf, zwölf, dreizehn,

1670
01:23:05,110 --> 01:23:07,110
vierzehn, fünfzehn, sechzehn, siebzehn,

1671
01:23:07,110 --> 01:23:09,110
achtzehn, neunzehn, zwanzig.

1672
01:23:09,110 --> 01:23:11,110
Ich habe jetzt zwanzig Requests laufen.

1673
01:23:11,110 --> 01:23:13,110
Also wenn zwanzig Parallele, wenn

1674
01:23:13,110 --> 01:23:15,110
dieser, wenn der zwanzig Parallele

1675
01:23:15,110 --> 01:23:17,110
Requests abkann, dann ist das Pog.

1676
01:23:17,110 --> 01:23:24,960
Der ist nicht gecrashed, das sieht nur so aus.

1677
01:23:24,960 --> 01:23:26,960
Der crasht aber nicht.

1678
01:23:26,960 --> 01:23:28,960
Der ist aber kurz vorm

1679
01:23:28,960 --> 01:23:32,820
crashen, würde ich sagen.

1680
01:23:32,820 --> 01:23:34,820
Solange die Zahl hier vorne noch hoch

1681
01:23:34,820 --> 01:23:36,820
läuft, ist er nicht gecrashed. Das ist die

1682
01:23:36,820 --> 01:23:38,820
Uptime. Die Uptime in Millisekunden

1683
01:23:38,820 --> 01:23:43,830
hier vorne.

1684
01:23:43,830 --> 01:23:45,830
Ja, könnte man machen.

1685
01:23:45,830 --> 01:23:47,830
Aber das ist ein Microcontroller,

1686
01:23:47,830 --> 01:23:49,830
der maximal keine 20 Requests abkann

1687
01:23:49,830 --> 01:24:00,210
oder so. Ich überlege gerade,

1688
01:24:00,210 --> 01:24:02,210
wie hieß dieses Ding? Oh, er ist fertig.

1689
01:24:02,210 --> 01:24:04,210
Er ist fertig.

1690
01:24:04,210 --> 01:24:07,620
Die ersten Requests sind fertig.

1691
01:24:07,620 --> 01:24:09,620
Ah, guck mal, der kann doch nicht so viele

1692
01:24:09,620 --> 01:24:11,620
Parallel bearbeiten. Guckt mal.

1693
01:24:11,620 --> 01:24:13,620
Jetzt macht er nämlich die nächsten

1694
01:24:13,620 --> 01:24:15,620
Requests erst. Die anderen hingen so lang.

1695
01:24:15,620 --> 01:24:20,850
Aha. Ja, okay.

1696
01:24:20,850 --> 01:24:22,850
Das klappt doch nicht so ganz.

1697
01:24:22,850 --> 01:24:27,350
Ja, der ist, das ist ein bisschen

1698
01:24:27,350 --> 01:24:30,880
viel. Aber ich mache

1699
01:24:30,880 --> 01:24:32,880
das. Nein, das ist ein Microcontroller,

1700
01:24:32,880 --> 01:24:34,880
der muss keine 20 Parallelrequests.

1701
01:24:34,880 --> 01:24:36,880
Wie hieß denn dieses Ding, was ich mal

1702
01:24:36,880 --> 01:24:38,880
letztens, so gar nicht so lange her, im Stream

1703
01:24:38,880 --> 01:24:40,880
verwendet habe? Es war, es war nicht

1704
01:24:40,880 --> 01:24:42,880
Locust, das habe ich noch nicht verwendet.

1705
01:24:42,880 --> 01:24:44,880
Äh, HTTP

1706
01:24:44,880 --> 01:24:52,130
Load, oder?

1707
01:24:52,130 --> 01:24:54,130
Ich habe es vergessen.

1708
01:24:54,130 --> 01:24:56,130
Aber wir wollen ja auch, also HTTP

1709
01:24:56,130 --> 01:24:58,130
Load Test Tools sind gar nicht

1710
01:24:58,130 --> 01:25:00,130
so gut dafür in dem Fall, weil

1711
01:25:00,130 --> 01:25:02,130
ich habe lange Requests.

1712
01:25:02,130 --> 01:25:04,130
Ich will nicht viele Requests machen,

1713
01:25:04,130 --> 01:25:11,030
ich habe lange Requests.

1714
01:25:11,030 --> 01:25:13,030
Mit GDB. Ja, aber nur sehr rudimentär.

1715
01:25:13,030 --> 01:25:15,030
Äh, Core Dumps

1716
01:25:15,030 --> 01:25:17,030
mir angeguckt.

1717
01:25:17,030 --> 01:25:19,030
Okay, das ist, das

1718
01:25:19,030 --> 01:25:21,030
Ding ist voll am eskalieren, weil ich ein paar

1719
01:25:21,030 --> 01:25:23,030
Requests gemacht habe. Ich reset das mal kurz.

1720
01:25:23,030 --> 01:25:27,010
Ich will mal kurz gucken, wie viel packt

1721
01:25:27,010 --> 01:25:29,010
das hier. Okay, also ein Request packt

1722
01:25:29,010 --> 01:25:31,010
es auf jeden Fall. Zwei packt es auch

1723
01:25:31,010 --> 01:25:33,010
ohne Probleme. Drei packt es auch

1724
01:25:33,010 --> 01:25:35,010
ohne Probleme. Vier

1725
01:25:35,010 --> 01:25:37,010
packt es auch ohne Probleme.

1726
01:25:37,010 --> 01:25:39,010
Fünf auch, hä?

1727
01:25:39,010 --> 01:25:41,010
Sechs auch.

1728
01:25:41,010 --> 01:25:43,010
Sieben auch.

1729
01:25:43,010 --> 01:25:45,010
Acht

1730
01:25:45,010 --> 01:25:47,010
auch.

1731
01:25:47,010 --> 01:25:49,010
Ne, sieben Requests.

1732
01:25:51,010 --> 01:25:53,010
Ab sieben Requests ist er auch am meckern,

1733
01:25:53,010 --> 01:25:55,010
dass der Thread, dass er

1734
01:25:55,010 --> 01:25:57,010
nichts mehr, keine neuen Sachen starten

1735
01:25:57,010 --> 01:26:00,930
kann. Okay, also sieben

1736
01:26:00,930 --> 01:26:02,930
Requests.

1737
01:26:02,930 --> 01:26:04,930
Dann ist Schluss.

1738
01:26:04,930 --> 01:26:15,220
Dann ist er am Abspacken schon.

1739
01:26:15,220 --> 01:26:17,220
Okay.

1740
01:26:17,220 --> 01:26:19,220
Das würde ich sagen, ist mehr als genug für so einen

1741
01:26:19,220 --> 01:26:21,220
kleinen Controller.

1742
01:26:21,220 --> 01:26:23,220
Man könnte wahrscheinlich, man könnte wahrscheinlich

1743
01:26:23,220 --> 01:26:25,220
noch mehr machen.

1744
01:26:25,220 --> 01:26:27,220
Ja, ESP mit Display. Man könnte

1745
01:26:27,220 --> 01:26:29,220
noch mehr machen. Aber heute was sehr

1746
01:26:29,220 --> 01:26:31,220
übersichtliches. Man könnte wahrscheinlich noch

1747
01:26:31,220 --> 01:26:33,220
mehr machen, indem man irgendwie sagt, es

1748
01:26:33,220 --> 01:26:35,220
gab noch irgendwie Conf

1749
01:26:35,220 --> 01:26:37,220
Max Open Sockets. Da haben wir irgendwie zwölf

1750
01:26:37,220 --> 01:26:39,220
oder so. Oh, keine Ahnung.

1751
01:26:39,220 --> 01:26:42,980
Zwanzig. Bam.

1752
01:26:42,980 --> 01:26:44,980
Wobei, was ist denn Max Anzahl

1753
01:26:44,980 --> 01:26:54,880
eigentlich? Ja, Max Socket.

1754
01:26:54,880 --> 01:26:56,880
Aha. Hier.

1755
01:26:56,880 --> 01:27:04,070
Max Sockets ist zehn.

1756
01:27:04,070 --> 01:27:06,070
Aber wir konnten trotzdem zwanzig

1757
01:27:06,070 --> 01:27:08,070
reinschreiben.

1758
01:27:08,070 --> 01:27:11,540
Oh. Ah.

1759
01:27:11,540 --> 01:27:13,540
Max Allowed sieben. Okay.

1760
01:27:13,540 --> 01:27:15,540
Sieben.

1761
01:27:15,540 --> 01:27:17,540
Na, wie das passt.

1762
01:27:17,540 --> 01:27:19,540
Wie wir es schon wieder rausgekriegt haben.

1763
01:27:19,540 --> 01:27:21,540
Dass sieben das Maximum ist.

1764
01:27:21,540 --> 01:27:30,870
Alles klar. Nice.

1765
01:27:30,870 --> 01:27:32,870
Easy. Gut.

1766
01:27:32,870 --> 01:27:34,870
Nächste.

1767
01:27:34,870 --> 01:27:36,870
Nächste

1768
01:27:36,870 --> 01:27:38,870
Stufe. Es soll ein

1769
01:27:38,870 --> 01:27:58,850
Post Request sein.

1770
01:27:58,850 --> 01:28:00,850
Es soll ein Post Request sein. Also können wir uns

1771
01:28:00,850 --> 01:28:02,850
diesen ganzen Krempel hier schon mal sparen.

1772
01:28:02,850 --> 01:28:23,120
Und ich glaube, wir machen das

1773
01:28:23,120 --> 01:28:31,400
anders. Wir benutzen

1774
01:28:31,400 --> 01:28:33,400
das Ding hier oben.

1775
01:28:33,400 --> 01:28:35,400
Wir starten den Task hier unten

1776
01:28:35,400 --> 01:28:41,520
drin. Und rufen dann

1777
01:28:41,520 --> 01:28:43,520
Handle Post

1778
01:28:43,520 --> 01:28:45,520
auf.

1779
01:28:45,520 --> 01:28:47,520
Also.

1780
01:28:47,520 --> 01:28:49,520
Dass wir sowas hier machen.

1781
01:28:49,520 --> 01:29:01,000
Dann. Es dürfte

1782
01:29:01,000 --> 01:29:03,000
ein bisschen übersichtlicher sein.

1783
01:29:03,000 --> 01:29:05,000
So. Das kommt

1784
01:29:05,000 --> 01:29:08,880
nämlich eh alles raus hier.

1785
01:29:08,880 --> 01:29:10,880
Alter Wishel Studio. Kannst du

1786
01:29:10,880 --> 01:29:12,880
diesmal ordentlich formatieren, ey?

1787
01:29:12,880 --> 01:29:14,880
Was ist das für ein Schrott? Warum sackt das so?

1788
01:29:14,880 --> 01:29:18,260
Äh. Und jetzt hier.

1789
01:29:18,260 --> 01:29:20,260
Return ESP. Okay.

1790
01:29:20,260 --> 01:29:27,190
Ja. Das ist deutlich

1791
01:29:27,190 --> 01:29:29,190
übersichtlicher jetzt.

1792
01:29:29,190 --> 01:29:31,190
Jetzt können die hier unten ihr

1793
01:29:31,190 --> 01:29:36,770
Gedöns drinnen machen.

1794
01:29:36,770 --> 01:29:38,770
Ja. Jetzt können die hier unten. Und hier oben können wir

1795
01:29:38,770 --> 01:29:40,770
jetzt uns auf unseren Post Request

1796
01:29:40,770 --> 01:29:42,770
konzentraten. Gucken wir ob noch

1797
01:29:42,770 --> 01:29:46,050
alles kompiliert.

1798
01:29:46,050 --> 01:29:48,050
Okay. Also. Post Request.

1799
01:29:48,050 --> 01:29:50,050
Wir loggen

1800
01:29:50,050 --> 01:29:52,050
einmal. Um zu checken ob das

1801
01:29:52,050 --> 01:29:54,050
mit dem Post Request überhaupt funktioniert.

1802
01:29:54,050 --> 01:29:56,050
Äh.

1803
01:29:56,050 --> 01:29:58,050
Wir loggen einmal die

1804
01:29:58,050 --> 01:30:00,050
Länge von dem Request.

1805
01:30:00,050 --> 01:30:02,050
Content. Also. Beziehungsweise wie

1806
01:30:02,050 --> 01:30:04,050
groß der Content ist den wir posten wollen.

1807
01:30:04,050 --> 01:30:06,050
Nur um zu checken ob prinzipiell ein Post

1808
01:30:06,050 --> 01:30:08,050
Request funktioniert. Also.

1809
01:30:08,050 --> 01:30:10,050
Curl minus X

1810
01:30:10,050 --> 01:30:12,050
Post. Och. Und wie

1811
01:30:12,050 --> 01:30:14,050
geht das jetzt? Minus minus Data

1812
01:30:14,050 --> 01:30:16,050
oder so. Ja. Data. Binary.

1813
01:30:16,050 --> 01:30:18,050
Data.

1814
01:30:18,050 --> 01:30:22,040
Und dann musste man Add

1815
01:30:22,040 --> 01:30:24,040
Mail oder so meint. Curl

1816
01:30:24,040 --> 01:30:26,040
Post File.

1817
01:30:26,040 --> 01:30:28,040
How to Post File Content sind

1818
01:30:28,040 --> 01:30:33,780
Curl. Data Binary

1819
01:30:33,780 --> 01:30:35,780
Add Part. Genau. Das suche

1820
01:30:35,780 --> 01:30:40,820
ich. Okay.

1821
01:30:40,820 --> 01:30:42,820
Post funktioniert. Länge 0. Ja.

1822
01:30:42,820 --> 01:30:46,550
Klar. Okay.

1823
01:30:46,550 --> 01:30:48,550
Path to File. Ey.

1824
01:30:48,550 --> 01:30:51,860
Wir laden einfach die Firmware hoch.

1825
01:30:51,860 --> 01:30:53,860
Die irgendwie unter

1826
01:30:53,860 --> 01:30:55,860
Bild

1827
01:30:55,860 --> 01:30:57,860
bin. Wie groß ist denn die? Ups.

1828
01:30:57,860 --> 01:31:06,320
Die ist. Ja. Das ist

1829
01:31:06,320 --> 01:31:08,320
eine gute Testdatei.

1830
01:31:08,320 --> 01:31:10,320
So.

1831
01:31:10,320 --> 01:31:12,320
Wir laden die Firmware hoch.

1832
01:31:12,320 --> 01:31:14,320
Wow.

1833
01:31:14,320 --> 01:31:16,320
Oh. Oh. Oh. Oh. Oh. Oh.

1834
01:31:16,320 --> 01:31:18,320
So war das nicht gedacht.

1835
01:31:18,320 --> 01:31:20,320
Warum ist Länge 0? Länge sollte

1836
01:31:20,320 --> 01:31:22,320
nicht 0 sein.

1837
01:31:22,320 --> 01:31:24,320
Ah. Ne. Hier. Länge 300

1838
01:31:24,320 --> 01:31:26,320
365138.

1839
01:31:26,320 --> 01:31:28,320
Und. Moment.

1840
01:31:28,320 --> 01:31:36,180
Gucken wir mal.

1841
01:31:36,180 --> 01:31:38,180
865138. Ja.

1842
01:31:38,180 --> 01:31:40,180
Passt. Okay. Also.

1843
01:31:40,180 --> 01:31:51,200
Das laden wir jetzt hoch.

1844
01:31:51,200 --> 01:31:53,200
Okay. Wie lesen wir das Ding noch?

1845
01:31:53,200 --> 01:31:57,410
Mal. Was für ein Vorteil

1846
01:31:57,410 --> 01:31:59,410
das hat? Also das größte

1847
01:31:59,410 --> 01:32:01,410
Vorteil ist schon mal. Also generell

1848
01:32:01,410 --> 01:32:03,410
die Frage ist nicht ob Arduino IDE

1849
01:32:03,410 --> 01:32:05,410
oder Arduino. Die Frage ist

1850
01:32:05,410 --> 01:32:07,410
ob ESP EDF oder Arduino.

1851
01:32:07,410 --> 01:32:09,410
Die Arduino IDE selbst würde ich nie

1852
01:32:09,410 --> 01:32:11,410
verwenden. Die Arduino IDE ist abfuck.

1853
01:32:11,410 --> 01:32:13,410
Ich bin mir nicht mal sicher ob die Arduino

1854
01:32:13,410 --> 01:32:15,410
IDE überhaupt bis heute Autocomplete

1855
01:32:15,410 --> 01:32:17,410
hat. Hat die Autocomplete mittlerweile?

1856
01:32:17,410 --> 01:32:19,410
Das letzte Mal als ich geguckt habe war

1857
01:32:19,410 --> 01:32:21,410
das ein Unstable Feature was die IDE immer

1858
01:32:21,410 --> 01:32:23,410
zum Crashen gebracht hat.

1859
01:32:23,410 --> 01:32:25,410
Also Arduino IDE würde ich eh nicht verwenden.

1860
01:32:25,410 --> 01:32:27,410
Du kannst aber ohne Probleme

1861
01:32:27,410 --> 01:32:29,410
Arduino

1862
01:32:29,410 --> 01:32:31,410
verwenden.

1863
01:32:31,410 --> 01:32:33,410
Leute. Modgis.

1864
01:32:33,410 --> 01:32:45,840
Keine Modgis da. Was ist da los?

1865
01:32:45,840 --> 01:32:59,840
Weg.

1866
01:32:59,840 --> 01:33:01,840
Bin ich denn gerade stehen geblieben?

1867
01:33:03,840 --> 01:33:05,840
Ja. Du kannst ohne Probleme Arduino

1868
01:33:05,840 --> 01:33:07,840
verwenden.

1869
01:33:07,840 --> 01:33:09,840
Damit. Das geht auch.

1870
01:33:09,840 --> 01:33:11,840
Wenn du es einfacher haben willst

1871
01:33:11,840 --> 01:33:13,840
verwendest du Plattform IO. Also

1872
01:33:13,840 --> 01:33:15,840
der ESP32 unterstützt.

1873
01:33:15,840 --> 01:33:17,840
Zwei beziehungsweise drei Sachen.

1874
01:33:17,840 --> 01:33:19,840
Von Haus aus.

1875
01:33:19,840 --> 01:33:21,840
Wo du dir auch einfach das runterladen

1876
01:33:21,840 --> 01:33:23,840
kannst von der Homepage von denen.

1877
01:33:23,840 --> 01:33:25,840
Die unterstützen einmal

1878
01:33:25,840 --> 01:33:27,840
nackiges Arduino.

1879
01:33:27,840 --> 01:33:29,840
Sie unterstützen ESP EDF.

1880
01:33:29,840 --> 01:33:31,840
Das ist das Framework vom Hersteller.

1881
01:33:31,840 --> 01:33:33,840
Und sie unterstützen

1882
01:33:33,840 --> 01:33:35,840
Arduino als

1883
01:33:35,840 --> 01:33:37,840
ESP EDF Komponente.

1884
01:33:37,840 --> 01:33:39,840
Das ist eine Sache die ich sonst

1885
01:33:39,840 --> 01:33:41,840
immer mache. Dann du kannst

1886
01:33:41,840 --> 01:33:43,840
Arduino quasi installieren.

1887
01:33:43,840 --> 01:33:45,840
Hier in ESP EDF als Komponente.

1888
01:33:45,840 --> 01:33:47,840
Und dann verwenden so als wäre es

1889
01:33:47,840 --> 01:33:49,840
quasi Arduino.

1890
01:33:49,840 --> 01:33:51,840
Plus das du aber noch alle Sachen zusätzlich

1891
01:33:51,840 --> 01:33:53,840
hast die ESP EDF so

1892
01:33:53,840 --> 01:33:55,840
anbietet. Was sehr nice ist.

1893
01:33:55,840 --> 01:33:57,840
Weil normalerweise

1894
01:33:57,840 --> 01:33:59,840
normalerweise

1895
01:33:59,840 --> 01:34:01,840
ist es so das das Hardcoded ist.

1896
01:34:01,840 --> 01:34:03,840
Also vieles was in Arduino drin ist

1897
01:34:03,840 --> 01:34:05,840
kannst du die Werte nicht ändern.

1898
01:34:05,840 --> 01:34:07,840
Und wenn du

1899
01:34:07,840 --> 01:34:09,840
ESP EDF mit Arduino als

1900
01:34:09,840 --> 01:34:11,840
Komponente benutzt kannst du beispielsweise

1901
01:34:11,840 --> 01:34:13,840
auch die Nummern

1902
01:34:13,840 --> 01:34:15,840
der Serienschnittstellen ändern. Oder

1903
01:34:15,840 --> 01:34:17,840
wie groß irgendwelche Buffer sind oder

1904
01:34:17,840 --> 01:34:19,840
sonst was. Was normalerweise zur

1905
01:34:19,840 --> 01:34:21,840
Compiletime vom Arduino Core

1906
01:34:21,840 --> 01:34:23,840
festgelegt wird. Also für mich ist

1907
01:34:23,840 --> 01:34:25,840
das die beste Kombination.

1908
01:34:25,840 --> 01:34:27,840
Ich verwende es jetzt ohne Arduino.

1909
01:34:27,840 --> 01:34:29,840
Weil

1910
01:34:29,840 --> 01:34:31,840
also auch ohne die Arduino Library.

1911
01:34:31,840 --> 01:34:33,840
Ich habe die gar nicht installiert.

1912
01:34:33,840 --> 01:34:35,840
Weil ich das neueste ESP EDF verwende.

1913
01:34:35,840 --> 01:34:37,840
Und das neueste ESP EDF

1914
01:34:37,840 --> 01:34:39,840
wird noch nicht supported von der Arduino

1915
01:34:39,840 --> 01:34:41,840
Implementierung für den ESP32.

1916
01:34:41,840 --> 01:34:45,540
Das ist ein Nachteil von

1917
01:34:45,540 --> 01:34:47,540
Arduino würde ich sagen. Du kannst

1918
01:34:47,540 --> 01:34:49,540
nie das neueste Framework benutzen.

1919
01:34:49,540 --> 01:34:51,540
Also Arduino ESP

1920
01:34:51,540 --> 01:34:53,540
also das ESP EDF also das da.

1921
01:34:53,540 --> 01:34:55,540
Die ESP32

1922
01:34:55,540 --> 01:34:57,540
Arduino Implementierung

1923
01:34:57,540 --> 01:34:59,540
von Espressif

1924
01:34:59,540 --> 01:35:01,540
die basiert auf

1925
01:35:01,540 --> 01:35:03,540
ESP EDF.

1926
01:35:03,540 --> 01:35:05,540
Also du kannst Arduino auf dem ESP32

1927
01:35:05,540 --> 01:35:07,540
nie ohne ESP EDF benutzen.

1928
01:35:07,540 --> 01:35:09,540
Nur das wenn du

1929
01:35:09,540 --> 01:35:11,540
den fertigen Arduino Core benutzt

1930
01:35:13,540 --> 01:35:15,540
bist du drauf festgelegt, dass

1931
01:35:15,540 --> 01:35:17,540
die Werte die die zur Compile Zeit

1932
01:35:17,540 --> 01:35:19,540
von dem Arduino Core hatten

1933
01:35:19,540 --> 01:35:21,540
die Werte sind die du haben willst.

1934
01:35:21,540 --> 01:35:23,540
Was du beispielsweise mit dem Arduino Core

1935
01:35:23,540 --> 01:35:25,540
nicht machen kannst ist

1936
01:35:25,540 --> 01:35:27,540
Menüconfig aufrufen und Settings

1937
01:35:27,540 --> 01:35:29,540
an deinem Controller vornehmen.

1938
01:35:29,540 --> 01:35:31,540
Du hast exakt die Settings zur

1939
01:35:31,540 --> 01:35:33,540
Compile Zeit als Espressif das letzte

1940
01:35:33,540 --> 01:35:35,540
Release vom Arduino Core rausgebracht hat.

1941
01:35:35,540 --> 01:35:39,110
Und allein schon deswegen würde ich

1942
01:35:39,110 --> 01:35:41,110
reines pures Arduino nicht auf

1943
01:35:41,110 --> 01:35:43,110
dem ESP32 machen.

1944
01:35:43,110 --> 01:35:45,110
Ich würde wenn überhaupt Arduino

1945
01:35:45,110 --> 01:35:47,110
nur als ESP EDF

1946
01:35:47,110 --> 01:35:49,110
Komponente verwenden.

1947
01:35:49,110 --> 01:35:51,110
Das funktioniert auch relativ gut im Prinzip

1948
01:35:51,110 --> 01:35:53,110
ist das einzige was du machen musst

1949
01:35:53,110 --> 01:35:55,110
ist include

1950
01:35:55,110 --> 01:35:57,110
Arduino wenn du es installiert hast.

1951
01:35:57,110 --> 01:36:00,840
Ja das musst du

1952
01:36:00,840 --> 01:36:02,840
machen und du musst einmal anfangen

1953
01:36:02,840 --> 01:36:04,840
init Arduino

1954
01:36:04,840 --> 01:36:06,840
machen das war es. Dann kannst du alle Arduino

1955
01:36:06,840 --> 01:36:08,840
Sachen verwenden in ESP EDF.

1956
01:36:08,840 --> 01:36:12,600
Also die Frage ist nicht entweder

1957
01:36:12,600 --> 01:36:14,600
oder sondern

1958
01:36:14,600 --> 01:36:18,200
eigentlich die beste

1959
01:36:18,200 --> 01:36:20,200
Variante ist Arduino mit

1960
01:36:20,200 --> 01:36:22,200
als Komponente

1961
01:36:22,200 --> 01:36:27,520
in ESP EDF verwenden.

1962
01:36:27,520 --> 01:36:29,520
Wird der Copy Pointer noch gelöscht?

1963
01:36:29,520 --> 01:36:42,820
Ja der wird hier gelöscht.

1964
01:36:42,820 --> 01:36:44,820
Das ist zumindest meine Vermutung.

1965
01:36:44,820 --> 01:36:46,820
Das steht da nicht explizit dabei.

1966
01:36:46,820 --> 01:36:57,270
This will free the request memory.

1967
01:36:57,270 --> 01:36:59,270
Ok steht doch dabei.

1968
01:36:59,270 --> 01:37:03,250
Also das

1969
01:37:03,250 --> 01:37:05,250
scheint quasi

1970
01:37:05,250 --> 01:37:07,250
ein Free zu sein.

1971
01:37:07,250 --> 01:37:09,250
Ja man hätte es auch

1972
01:37:09,250 --> 01:37:11,250
Request Async Handler

1973
01:37:11,250 --> 01:37:13,250
Free nennen können oder so aber

1974
01:37:13,250 --> 01:37:15,250
und es passiert immer

1975
01:37:15,250 --> 01:37:17,250
der führt den Händler aus

1976
01:37:17,250 --> 01:37:19,250
und wenn der Händler irgendwelche Probleme hat

1977
01:37:19,250 --> 01:37:21,250
danach wird gefreed.

1978
01:37:21,250 --> 01:37:23,250
Das einzige was jetzt noch sein könnte

1979
01:37:23,250 --> 01:37:25,250
ist eventuell

1980
01:37:25,250 --> 01:37:27,250
wenn das hier nicht richtig funktioniert

1981
01:37:29,250 --> 01:37:31,250
Geh einfach mal davon aus das es funktionieren wird.

1982
01:37:31,250 --> 01:37:41,000
Ok so und jetzt ist die Frage

1983
01:37:41,000 --> 01:37:43,000
wie man das mit einem Post Request machen.

1984
01:37:43,000 --> 01:37:45,000
Ich weiß das du den Content

1985
01:37:45,000 --> 01:37:47,000
von einem Post Request so lesen kannst.

1986
01:37:47,000 --> 01:37:49,000
http

1987
01:37:49,000 --> 01:37:51,000
request

1988
01:37:51,000 --> 01:37:53,000
receive

1989
01:37:53,000 --> 01:37:55,000
dann übergibst du den

1990
01:37:55,000 --> 01:37:57,000
das Request Objekt

1991
01:37:57,000 --> 01:37:59,000
dann brauchst du ein Buffer ohne Länge

1992
01:37:59,000 --> 01:38:01,000
also hier Cha Buffer

1993
01:38:01,000 --> 01:38:03,000
ah keine Ahnung

1994
01:38:03,000 --> 01:38:05,000
128 das ist viel zu klein

1995
01:38:05,000 --> 01:38:07,000
richtig lahm dann

1996
01:38:07,000 --> 01:38:10,440
size

1997
01:38:10,440 --> 01:38:12,440
so liest man Sachen

1998
01:38:12,440 --> 01:38:14,440
von dem Request ein

1999
01:38:14,440 --> 01:38:17,880
oder auch nicht

2000
01:38:17,880 --> 01:38:19,880
achso

2001
01:38:19,880 --> 01:38:21,880
so liest man Sachen

2002
01:38:21,880 --> 01:38:23,880
von dem Request ein und man muss jetzt

2003
01:38:23,880 --> 01:38:25,880
eine Schleife machen

2004
01:38:25,880 --> 01:38:27,880
man muss ein bisschen komisches Zeug basteln

2005
01:38:27,880 --> 01:38:29,880
man muss eine Schleife machen

2006
01:38:29,880 --> 01:38:31,880
man muss quasi

2007
01:38:31,880 --> 01:38:33,880
solange einlesen

2008
01:38:33,880 --> 01:38:40,160
bis man

2009
01:38:40,160 --> 01:38:44,600
Content

2010
01:38:44,600 --> 01:38:46,600
man muss quasi solange einlesen

2011
01:38:46,600 --> 01:38:48,600
bis man die Content Länge erreicht hat

2012
01:38:50,600 --> 01:38:52,600
beziehungsweise ist es wahrscheinlich besser

2013
01:38:52,600 --> 01:39:02,080
ok

2014
01:39:02,080 --> 01:39:04,080
das hier liefert zurück wie viele Bytes

2015
01:39:04,080 --> 01:39:06,080
das eingelesen hat

2016
01:39:06,080 --> 01:39:08,080
also sagen wir mal sowas wie irgendwie

2017
01:39:08,080 --> 01:39:11,940
Bites

2018
01:39:11,940 --> 01:39:13,940
der Buffer kommt da oben hin

2019
01:39:13,940 --> 01:39:19,330
so

2020
01:39:19,330 --> 01:39:21,330
jetzt muss ich da irgendwie ne Schleife drum herum bauen

2021
01:39:21,330 --> 01:39:26,280
ok sagen wir mal while

2022
01:39:26,280 --> 01:39:30,130
ok wir machen noch Content Length

2023
01:39:30,130 --> 01:39:32,130
wir machen nochmal sowas

2024
01:39:32,130 --> 01:39:34,130
das habe ich glaube ich auch mal in dem Beispiel gesehen

2025
01:39:34,130 --> 01:39:36,130
Remaining

2026
01:39:36,130 --> 01:39:38,130
das schreiben die auch in ihrem Beispiel

2027
01:39:38,130 --> 01:39:40,130
so

2028
01:39:40,130 --> 01:39:42,130
ab jetzt weiß ich auch nicht mehr wie die ist

2029
01:39:42,130 --> 01:39:44,130
also solange

2030
01:39:44,130 --> 01:39:46,130
noch Bytes übrig sind

2031
01:39:46,130 --> 01:39:48,130
also solange Remaining größer mit

2032
01:39:48,130 --> 01:39:50,130
0 ist

2033
01:39:50,130 --> 01:39:52,130
wollen wir Sachen

2034
01:39:52,130 --> 01:39:56,080
einlesen

2035
01:39:56,080 --> 01:39:58,080
das ist jetzt ohne

2036
01:39:58,080 --> 01:40:00,080
jegliches Error Handling oder sonst was

2037
01:40:00,080 --> 01:40:05,280
Log Info

2038
01:40:05,280 --> 01:40:11,280
Received Bytes

2039
01:40:11,280 --> 01:40:13,280
ne

2040
01:40:13,280 --> 01:40:18,770
wir geben Remaining aus

2041
01:40:18,770 --> 01:40:20,770
und jetzt sagen wir

2042
01:40:20,770 --> 01:40:22,770
Remaining

2043
01:40:22,770 --> 01:40:24,770
nicht Reminder

2044
01:40:24,770 --> 01:40:28,080
Remaining

2045
01:40:28,080 --> 01:40:30,080
Received Bytes

2046
01:40:30,080 --> 01:40:32,080
also wir ziehen das was wir jetzt einmalig empfangen haben

2047
01:40:32,080 --> 01:40:34,080
die Gesamtmenge ab

2048
01:40:34,080 --> 01:40:36,080
und dann geht es automatisch raus sobald

2049
01:40:36,080 --> 01:40:38,080
es nicht mehr größer 0 ist

2050
01:40:38,080 --> 01:40:41,330
soweit von der Idee her

2051
01:40:41,330 --> 01:40:45,220
so Bäm Flash

2052
01:40:47,220 --> 01:40:49,220
bin ich mal gespannt

2053
01:40:49,220 --> 01:40:51,220
ich gehe nicht davon aus

2054
01:40:51,220 --> 01:40:53,220
dass ich das richtig gemacht habe

2055
01:40:53,220 --> 01:40:55,220
irgendwas wird hier nicht stimmen

2056
01:40:55,220 --> 01:40:57,220
aber wir sollten zumindest jetzt durchratternd

2057
01:40:57,220 --> 01:40:59,220
sehen Bites

2058
01:40:59,220 --> 01:41:01,220
dass die Bytes runter gehen

2059
01:41:01,220 --> 01:41:03,220
wir machen auch nur mal ein

2060
01:41:03,220 --> 01:41:05,220
wir machen auch erstmal nur ein Request

2061
01:41:05,220 --> 01:41:19,700
wait a minute

2062
01:41:19,700 --> 01:41:21,700
ähm

2063
01:41:21,700 --> 01:41:23,700
das ist ich sehe nichts

2064
01:41:23,700 --> 01:41:32,260
das hört nicht mehr auf

2065
01:41:32,260 --> 01:41:34,260
ah ok ich habe keine Abbruch

2066
01:41:34,260 --> 01:41:36,260
ich habe keine sonstige Abbruchbedingungen drinnen

2067
01:41:36,260 --> 01:41:38,260
ok das ist nicht

2068
01:41:38,260 --> 01:41:40,260
sonderlich Pfeifett was ich da gebaut habe

2069
01:41:40,260 --> 01:41:42,260
ich gebe es zu

2070
01:41:42,260 --> 01:41:44,260
das ist nicht

2071
01:41:44,260 --> 01:41:46,260
sonderlich schlau ähm

2072
01:41:46,260 --> 01:41:49,600
ich würde sagen wir sollten gucken

2073
01:41:49,600 --> 01:41:51,600
if

2074
01:41:51,600 --> 01:41:53,600
also erstens

2075
01:41:53,600 --> 01:41:55,600
müssen wir mal das hier rausnehmen

2076
01:41:55,600 --> 01:41:57,600
aus dem Event Händler

2077
01:41:57,600 --> 01:41:59,600
dass ich mir jedes Event ausgeben lasse

2078
01:41:59,600 --> 01:42:01,600
weil das spammt mir mein Log as fuck zu

2079
01:42:01,600 --> 01:42:06,770
ja so

2080
01:42:06,770 --> 01:42:08,770
wenn Received Bites

2081
01:42:08,770 --> 01:42:10,770
kleiner gleich 0 ist

2082
01:42:10,770 --> 01:42:14,150
dann

2083
01:42:14,150 --> 01:42:19,730
break

2084
01:42:19,730 --> 01:42:21,730
das ist sicherlich kein gutes Error Handling

2085
01:42:21,730 --> 01:42:23,730
das ist gar kein Error Handling

2086
01:42:23,730 --> 01:42:25,730
also entweder

2087
01:42:25,730 --> 01:42:27,730
kleiner 0 nicht kleiner gleich 0

2088
01:42:27,730 --> 01:42:29,730
so wenn das kleiner 0 ist

2089
01:42:29,730 --> 01:42:31,730
ist ein Fehler aufgetreten

2090
01:42:31,730 --> 01:42:35,780
dann loggen wir

2091
01:42:35,780 --> 01:42:37,780
also Warning

2092
01:42:37,780 --> 01:42:41,570
ja keine Ahnung

2093
01:42:41,570 --> 01:42:50,130
äh Read Error

2094
01:42:50,130 --> 01:42:52,130
echte Hacker können das mitlesen

2095
01:42:52,130 --> 01:42:54,130
ja die haben Krepp im Auge

2096
01:42:56,130 --> 01:42:58,130
habt ihr auch Krepp im Auge

2097
01:42:58,130 --> 01:43:00,130
nicht Dreck

2098
01:43:00,130 --> 01:43:06,390
Krepp

2099
01:43:06,390 --> 01:43:08,390
wobei ich habe eher AWK im Auge

2100
01:43:08,390 --> 01:43:12,600
wie kann man negative Bites bekommen

2101
01:43:12,600 --> 01:43:14,600
man bekommt negative Bites

2102
01:43:14,600 --> 01:43:16,600
weil es ein Read Fehler ist

2103
01:43:16,600 --> 01:43:18,600
guck da steht auch hier

2104
01:43:18,600 --> 01:43:20,600
Return

2105
01:43:20,600 --> 01:43:25,860
es Return quasi

2106
01:43:25,860 --> 01:43:27,860
alles was negativ ist

2107
01:43:27,860 --> 01:43:32,290
ist ein Fehler

2108
01:43:32,290 --> 01:43:34,290
das heißt dann nicht wirklich dass er minus Bites gelesen hat

2109
01:43:34,290 --> 01:43:36,290
was ja minus Bites würde ja bedeuten

2110
01:43:36,290 --> 01:43:38,290
er hat etwas zurückgeschrieben an den Client

2111
01:43:38,290 --> 01:43:40,290
sondern es ist ein Fehler

2112
01:43:40,290 --> 01:43:42,290
so gucken wir mal

2113
01:43:42,290 --> 01:43:56,390
äh

2114
01:43:56,390 --> 01:44:05,940
was ist jetzt für ein Problem

2115
01:44:05,940 --> 01:44:14,440
warum bricht das ab

2116
01:44:14,440 --> 01:44:16,440
äh was ist das

2117
01:44:16,440 --> 01:44:18,440
warum ist das kaputt

2118
01:44:18,440 --> 01:44:20,440
ok Leute wisst ihr was

2119
01:44:20,440 --> 01:44:23,840
wir lassen ihn einfach weiter auslesen

2120
01:44:23,840 --> 01:44:25,840
egal ob Error oder nicht

2121
01:44:25,840 --> 01:44:27,840
wobei das kann eigentlich nicht funktionieren

2122
01:44:27,840 --> 01:44:29,840
oder

2123
01:44:29,840 --> 01:44:31,840
das kann eigentlich nicht sein

2124
01:44:31,840 --> 01:44:41,270
Leute wir geben uns den Error Code aus

2125
01:44:41,270 --> 01:44:43,270
ich bin

2126
01:44:43,270 --> 01:44:45,270
ich bin richtig pepega

2127
01:44:45,270 --> 01:44:47,270
wir geben uns den Error Code aus

2128
01:44:47,270 --> 01:44:49,270
Remaining

2129
01:44:49,270 --> 01:44:51,270
kann man richtig schreiben

2130
01:44:51,270 --> 01:44:53,270
äh und das hier ist

2131
01:44:53,270 --> 01:44:55,270
ähm

2132
01:44:55,270 --> 01:45:00,950
Received

2133
01:45:00,950 --> 01:45:02,950
guter Code wirft keinen Error richtig

2134
01:45:02,950 --> 01:45:04,950
und vor allem funktioniert er

2135
01:45:04,950 --> 01:45:06,950
und braucht deswegen weder Kommentare

2136
01:45:06,950 --> 01:45:08,950
noch Dokumentation noch Tests

2137
01:45:08,950 --> 01:45:10,950
so sieht es aus

2138
01:45:10,950 --> 01:45:12,950
sag ich auch

2139
01:45:12,950 --> 01:45:14,950
Error List Driven Programming

2140
01:45:14,950 --> 01:45:16,950
hätte CrowdStrike auch gebraucht

2141
01:45:16,950 --> 01:45:18,950
ich finde CrowdStrike

2142
01:45:18,950 --> 01:45:20,950
sollte bei uns sich mal einen Kurs mieten

2143
01:45:20,950 --> 01:45:22,950
wie man ordentliches C++

2144
01:45:22,950 --> 01:45:24,950
programmiert

2145
01:45:24,950 --> 01:45:26,950
war dieser Shit nicht sogar auch in C++

2146
01:45:26,950 --> 01:45:28,950
oder

2147
01:45:28,950 --> 01:45:30,950
man weiß es ja nicht wirklich was es ist

2148
01:45:30,950 --> 01:45:34,390
aber man vermutet es

2149
01:45:34,390 --> 01:45:36,390
fuck

2150
01:45:36,390 --> 01:45:38,390
ok gar kein Error Handling ist auch nicht gut oder

2151
01:45:38,390 --> 01:45:40,390
haha

2152
01:45:40,390 --> 01:45:42,390
das crasht es einfach

2153
01:45:42,390 --> 01:46:06,020
das ist aber doof

2154
01:46:06,020 --> 01:46:15,600
by the way warum crasht es jetzt

2155
01:46:15,600 --> 01:46:17,600
ich hatte vorher auch keinerlei Error Handling

2156
01:46:17,600 --> 01:46:19,600
drinne

2157
01:46:19,600 --> 01:46:25,280
und da ist es nicht gecrasht

2158
01:46:25,280 --> 01:46:27,280
sah das anders aus

2159
01:46:27,280 --> 01:46:34,690
ne oder verstehe ich nicht

2160
01:46:34,690 --> 01:46:39,120
so hatte ich es vorher dann lief es noch

2161
01:46:39,120 --> 01:46:41,120
ne was heißt es lief auch nicht

2162
01:46:41,120 --> 01:46:46,580
es hing dann irgendwie

2163
01:46:46,580 --> 01:46:52,930
ok wir lassen uns jetzt mal die

2164
01:46:52,930 --> 01:46:54,930
das ausgeben

2165
01:46:54,930 --> 01:46:56,930
jetzt hängts wieder guckt

2166
01:46:56,930 --> 01:47:00,340
seht ihr wow

2167
01:47:00,340 --> 01:47:12,100
guck mal

2168
01:47:12,100 --> 01:47:14,100
es wird wieder mehr weil er immer minus 2 hat

2169
01:47:14,100 --> 01:47:16,100
ok

2170
01:47:16,100 --> 01:47:18,100
ne das funktioniert so nicht

2171
01:47:18,100 --> 01:47:20,100
minus 2 hat er ok

2172
01:47:20,100 --> 01:47:26,360
was ist minus 2

2173
01:47:26,360 --> 01:47:32,610
was ist minus 2

2174
01:47:32,610 --> 01:47:34,610
das ist übrigens Blödsinn was

2175
01:47:34,610 --> 01:47:36,610
mit diesem Null Pointer

2176
01:47:36,610 --> 01:47:40,440
ich weiß nicht was dieser Dude da erzählt

2177
01:47:40,440 --> 01:47:42,440
aber

2178
01:47:42,440 --> 01:47:44,440
also wenn der Typ in dem Video erzählt

2179
01:47:44,440 --> 01:47:46,440
dass es ein Null Pointer Exception war

2180
01:47:46,440 --> 01:47:48,440
dann stimmt das höchstwahrscheinlich nicht

2181
01:47:48,440 --> 01:47:50,440
ich hab nämlich heute ne Analyse auf Twitter gelesen

2182
01:47:50,440 --> 01:47:52,440
dass das überhaupt nicht stimmt

2183
01:47:52,440 --> 01:47:54,440
dass die alle nur das nachgeplappert haben

2184
01:47:54,440 --> 01:47:56,440
was der erste Typ erzählt hat

2185
01:47:56,440 --> 01:47:58,440
ok minus 2

2186
01:47:58,440 --> 01:48:00,440
was bedeutet minus 2

2187
01:48:00,440 --> 01:48:02,440
was wirft das denn für

2188
01:48:02,440 --> 01:48:04,440
für Fehler

2189
01:48:04,440 --> 01:48:06,440
hier

2190
01:48:06,440 --> 01:48:10,900
minus 2

2191
01:48:10,900 --> 01:48:15,300
was bedeutet minus 2

2192
01:48:15,300 --> 01:48:17,300
ok das ist schlecht

2193
01:48:17,300 --> 01:48:19,300
ok also ohne Fehlerbehebung

2194
01:48:19,300 --> 01:48:21,300
lesen ist auch keine gute Idee

2195
01:48:21,300 --> 01:48:23,300
was

2196
01:48:23,300 --> 01:48:25,300
aber was ist denn jetzt falsch da dran

2197
01:48:25,300 --> 01:48:27,300
Leute ich muss mal kurz was essen nebenbei

2198
01:48:27,300 --> 01:48:29,300
ich halt hab hier ne gute Empfehlung

2199
01:48:29,300 --> 01:48:31,300
was wir kurz auf Youtube gucken können

2200
01:48:31,300 --> 01:48:33,300
weil ich 5 Minuten was vorhau

2201
01:48:33,300 --> 01:48:49,030
warum kackt das ab

2202
01:48:49,030 --> 01:48:51,030
Moment

2203
01:48:51,030 --> 01:48:53,030
minus 1

2204
01:48:53,030 --> 01:48:57,200
ok

2205
01:48:57,200 --> 01:49:12,100
ok

2206
01:49:12,100 --> 01:49:15,960
ok

2207
01:49:15,960 --> 01:49:17,960
1

2208
01:49:17,960 --> 01:49:19,960
gibt es auch noch

2209
01:49:19,960 --> 01:49:21,960
was ist denn jetzt wiederum minus 1

2210
01:49:21,960 --> 01:49:26,360
für nen Error

2211
01:49:26,360 --> 01:49:29,700
das stand doch hier irgendwo drinne

2212
01:49:29,700 --> 01:49:31,700
timeout bestimmt

2213
01:49:31,700 --> 01:49:33,700
ne das ist minus 3

2214
01:49:33,700 --> 01:49:35,700
socket fail

2215
01:49:35,700 --> 01:49:37,700
fuck ok

2216
01:49:37,700 --> 01:49:39,700
egal was ist wir sind gearscht

2217
01:49:39,700 --> 01:49:41,700
nice

2218
01:49:41,700 --> 01:49:43,700
ok irgendwie funktioniert das nicht

2219
01:49:43,700 --> 01:49:45,700
Asynchron Post Request

2220
01:49:45,700 --> 01:49:51,540
das kackt immer ab

2221
01:49:51,540 --> 01:49:57,380
und ich weiß nicht warum

2222
01:49:57,380 --> 01:49:59,380
ne das gucken wir nicht

2223
01:49:59,380 --> 01:50:01,380
ich muss jetzt erst mal was essen

2224
01:50:01,380 --> 01:50:12,920
ich hab übelst Hunger

2225
01:50:12,920 --> 01:50:14,920
was ist das

2226
01:50:14,920 --> 01:50:16,920
oh ne das ist Simplicissimus

2227
01:50:16,920 --> 01:50:18,920
das kann ich mir jetzt nicht geben

2228
01:50:18,920 --> 01:50:20,920
das klingt immer so

2229
01:50:20,920 --> 01:50:22,920
so bedeutungsvoll

2230
01:50:22,920 --> 01:50:24,920
alles wie er das ausspricht

2231
01:50:24,920 --> 01:50:26,920
ist mir zu anstrengend jetzt

2232
01:50:26,920 --> 01:50:28,920
Zwischenbilanz

2233
01:50:28,920 --> 01:50:30,920
der 4 Tage Woche

2234
01:50:30,920 --> 01:50:35,120
ja auf gehts

2235
01:50:35,120 --> 01:50:39,680
4 Tage Woche beste

2236
01:50:39,680 --> 01:50:43,220
Artstellungsexperience

2237
01:50:43,220 --> 01:50:45,220
Februar Homelab

2238
01:50:45,220 --> 01:50:47,220
aha

2239
01:50:47,220 --> 01:50:49,220
ein Rackstelz

2240
01:50:49,220 --> 01:50:51,220
Rackstelz ist immer gut zum angucken

2241
01:50:51,220 --> 01:50:53,220
während man am futtern ist

2242
01:50:55,220 --> 01:50:57,220
ist das da oben ein CRT Monitor

2243
01:50:57,220 --> 01:50:59,220
ne ne ne ne

2244
01:50:59,220 --> 01:51:01,220
ich hab das hier unten

2245
01:51:01,220 --> 01:51:03,220
das hier

2246
01:51:03,220 --> 01:51:05,220
hab ich irgendwie im Kopf

2247
01:51:05,220 --> 01:51:07,220
mit dem Gehäuse vom Monitor verbunden

2248
01:51:07,220 --> 01:51:09,220
das ist kein CRT

2249
01:51:09,220 --> 01:51:11,220
das ist ein oller

2250
01:51:11,220 --> 01:51:13,220
alter TFT

2251
01:51:13,220 --> 01:51:15,220
wie die da wiederum rumstehen

2252
01:51:15,220 --> 01:51:17,220
äh

2253
01:51:17,220 --> 01:51:19,220
heute noch mal Stellenanzeigen

2254
01:51:19,220 --> 01:51:21,220
ne heute ist es C++ Stelz

2255
01:51:21,220 --> 01:51:23,220
ah guck mal

2256
01:51:23,220 --> 01:51:25,220
gute alte schöne

2257
01:51:25,220 --> 01:51:27,220
HP

2258
01:51:27,220 --> 01:51:29,220
ne Dell

2259
01:51:29,220 --> 01:51:33,680
HP

2260
01:51:33,680 --> 01:51:35,680
DL380

2261
01:51:35,680 --> 01:51:37,680
ist das HP oder ist das Dell

2262
01:51:37,680 --> 01:51:49,570
HP HP

2263
01:51:49,570 --> 01:51:51,570
die Amis stehen total auf diese Unify

2264
01:51:51,570 --> 01:51:53,570
Dinger

2265
01:51:53,570 --> 01:51:57,330
in the den of my house

2266
01:51:57,330 --> 01:51:59,330
we are moving soon

2267
01:51:59,330 --> 01:52:01,330
so the setup is likely to change

2268
01:52:01,330 --> 01:52:03,330
oftmals ja

2269
01:52:03,330 --> 01:52:05,330
warum hat er da 4 NUCs stehen

2270
01:52:05,330 --> 01:52:07,330
I'll do a quick little video showing

2271
01:52:07,330 --> 01:52:09,330
what's in it

2272
01:52:09,330 --> 01:52:11,330
how everything works

2273
01:52:11,330 --> 01:52:13,330
before that all might change

2274
01:52:13,330 --> 01:52:15,330
ups

2275
01:52:15,330 --> 01:52:17,330
bis sie vorspulen

2276
01:52:17,330 --> 01:52:19,330
switches are 100 meg

2277
01:52:19,330 --> 01:52:21,330
so they're kinda useless

2278
01:52:21,330 --> 01:52:23,330
and they suck a lot of power

2279
01:52:23,330 --> 01:52:25,330
aber bei den Amis ist das glücklicherweise billig

2280
01:52:25,330 --> 01:52:27,330
ich würde mir die alten

2281
01:52:27,330 --> 01:52:29,330
Cisco Switche genauso wie diese alten

2282
01:52:29,330 --> 01:52:31,330
was ist auch immer sehr beliebt auf Ebay

2283
01:52:31,330 --> 01:52:33,330
die alten

2284
01:52:33,330 --> 01:52:35,330
welcher Hersteller

2285
01:52:35,330 --> 01:52:39,600
ist das nicht Cisco

2286
01:52:39,600 --> 01:52:41,600
Prodcom ne

2287
01:52:41,600 --> 01:52:43,600
HP

2288
01:52:43,600 --> 01:52:45,600
ne

2289
01:52:45,600 --> 01:52:47,600
was ist es noch so ein typischer

2290
01:52:47,600 --> 01:52:49,600
HP ja HP könnte sein aus recht

2291
01:52:49,600 --> 01:52:51,600
HP ja diese alten HP Switche

2292
01:52:51,600 --> 01:52:53,600
die sind ja auch teilweise super lahm

2293
01:52:53,600 --> 01:52:55,600
laut

2294
01:52:55,600 --> 01:52:57,600
brauchen Strom und macht überhaupt

2295
01:52:57,600 --> 01:52:59,600
keinen Sinn

2296
01:52:59,600 --> 01:53:01,600
aber Hauptsache haben

2297
01:53:01,600 --> 01:53:03,600
übrigens sehr ordentlich hier auch wieder

2298
01:53:03,600 --> 01:53:05,600
schön mit beschriftet mit Labels

2299
01:53:05,600 --> 01:53:07,600
und so

2300
01:53:07,600 --> 01:53:09,600
HP meine ich

2301
01:53:09,600 --> 01:53:11,600
I plan on

2302
01:53:11,600 --> 01:53:13,600
getting

2303
01:53:13,600 --> 01:53:15,600
another 2U Server

2304
01:53:15,600 --> 01:53:17,600
at some point probably

2305
01:53:17,600 --> 01:53:19,600
so these are just sort of

2306
01:53:19,600 --> 01:53:21,600
here rather than just having a gap

2307
01:53:21,600 --> 01:53:23,600
or any blanking panels

2308
01:53:23,600 --> 01:53:25,600
so

2309
01:53:25,600 --> 01:53:27,600
whatever future

2310
01:53:27,600 --> 01:53:29,600
changes I make I'll probably

2311
01:53:29,600 --> 01:53:31,600
whenever I get a new server

2312
01:53:31,600 --> 01:53:33,600
I'll probably

2313
01:53:33,600 --> 01:53:35,600
I glaube das Video ist langweilig

2314
01:53:35,600 --> 01:53:37,600
some spare parts that I had

2315
01:53:37,600 --> 01:53:39,600
das meiste davon ist auch aus

2316
01:53:39,600 --> 01:53:41,600
I had like an extra shell

2317
01:53:41,600 --> 01:53:43,600
haben wir sonst noch

2318
01:53:43,600 --> 01:53:51,590
Katzenvideo

2319
01:53:51,590 --> 01:53:53,590
this question comes from Thomas

2320
01:53:53,590 --> 01:53:55,590
and many other people

2321
01:53:55,590 --> 01:53:57,590
who all

2322
01:53:57,590 --> 01:53:59,590
what if everyone jumped at once

2323
01:53:59,590 --> 01:54:01,590
ok das wollte ich schon immer mal wissen

2324
01:54:01,590 --> 01:54:03,590
this question comes from Thomas

2325
01:54:03,590 --> 01:54:05,590
and many other people

2326
01:54:05,590 --> 01:54:07,590
who all asked what would happen if everyone on earth

2327
01:54:07,590 --> 01:54:09,590
stood as close to each other as they could

2328
01:54:09,590 --> 01:54:11,590
wer hat sich's noch nicht gefragt

2329
01:54:11,590 --> 01:54:13,590
jumped and landed on the ground

2330
01:54:13,590 --> 01:54:15,590
also ich predikte mal

2331
01:54:15,590 --> 01:54:17,590
es passiert wahrscheinlich gar nichts

2332
01:54:17,590 --> 01:54:19,590
das dürfte der Erde ziemlich egal sein

2333
01:54:19,590 --> 01:54:21,590
this is one of the most popular questions submitted to what if

2334
01:54:21,590 --> 01:54:23,590
it's been examined before including by a

2335
01:54:23,590 --> 01:54:25,590
science blogs post and a straight dope article

2336
01:54:25,590 --> 01:54:27,590
they cover the physics pretty well

2337
01:54:27,590 --> 01:54:31,120
however they don't tell the whole story

2338
01:54:31,120 --> 01:54:33,120
at the start of the scenario the entirety of

2339
01:54:33,120 --> 01:54:35,120
the earth's population has been magically transported

2340
01:54:35,120 --> 01:54:37,120
together into one place this crowd

2341
01:54:37,120 --> 01:54:39,120
takes up an area the size of Rhode Island

2342
01:54:39,120 --> 01:54:41,120
in fact let's assume they I mean

2343
01:54:41,120 --> 01:54:43,120
we are actually in Rhode Island

2344
01:54:43,120 --> 01:54:45,120
at the stroke of noon everyone jumps

2345
01:54:45,120 --> 01:54:47,120
natürlich selbstverständlich

2346
01:54:47,120 --> 01:54:49,120
wo sollte

2347
01:54:49,120 --> 01:54:51,120
auf der Welt das

2348
01:54:51,120 --> 01:54:53,120
stattfinden wenn nicht in den USA

2349
01:54:53,120 --> 01:54:55,120
oder logisch

2350
01:54:55,120 --> 01:55:02,790
sind wir uns einig sowas würde

2351
01:55:02,790 --> 01:55:04,790
selbstverständlich und ein Zauberer

2352
01:55:04,790 --> 01:55:06,790
würde natürlich auch die Leute wenn überhaupt

2353
01:55:06,790 --> 01:55:08,630
nur in die USA teleportieren

2354
01:55:08,790 --> 01:55:10,790
das ist etwas anderes

2355
01:55:10,790 --> 01:55:12,790
dieser Baufang betrifft nicht wirklich den Planeten

2356
01:55:12,790 --> 01:55:14,790
die Erde ist über 10 Milliarden

2357
01:55:14,790 --> 01:55:16,790
auf der Anzahl von Menschen kann man

2358
01:55:16,790 --> 01:55:18,790
vielleicht einen halben Meter biegen

2359
01:55:18,790 --> 01:55:20,790
und das ist wenn wir nicht schulter-zu-schulter

2360
01:55:20,790 --> 01:55:22,790
in der Mitte einer Gruppe sind

2361
01:55:22,790 --> 01:55:24,790
selbst wenn alle so hoch gestiegen sind

2362
01:55:24,790 --> 01:55:26,790
und die Erde ständig rückgängig war

2363
01:55:26,790 --> 01:55:28,790
würde die Erde nur von weniger als einem Atom

2364
01:55:28,790 --> 01:55:30,790
nach oben gedrückt werden

2365
01:55:30,790 --> 01:55:32,790
alle fallen zurück auf die Erde

2366
01:55:32,790 --> 01:55:34,790
das gibt technisch viel Energie

2367
01:55:34,790 --> 01:55:36,790
aber es wird über eine große Menge

2368
01:55:36,790 --> 01:55:38,790
der Erde ausgesprochen werden

2369
01:55:38,790 --> 01:55:40,790
die Erde wird von der Kontinentenkrust

2370
01:55:40,790 --> 01:55:42,790
und verschwindet mit wenig Effekt

2371
01:55:42,790 --> 01:55:44,790
außer wenn man die Nadel

2372
01:55:44,790 --> 01:55:46,790
von einigen lokalen Seismometern bewegt

2373
01:55:46,790 --> 01:55:48,790
das Geräusch von 12 Milliarden Füßen

2374
01:55:48,790 --> 01:55:50,790
schlägt auf den Boden auf

2375
01:55:50,790 --> 01:55:52,790
und schlägt viele Sekunden auf

2376
01:55:52,790 --> 01:55:54,790
und dann wird die Erde ruhig

2377
01:55:54,790 --> 01:55:56,790
Sekunden passen

2378
01:55:56,790 --> 01:55:58,790
alle schauen herum

2379
01:55:58,790 --> 01:56:00,790
es gibt viele ungewöhnliche Blickwünsche

2380
01:56:00,790 --> 01:56:02,790
jemand kackt

2381
01:56:02,790 --> 01:56:04,790
ein Telefon kommt aus einem Koffer

2382
01:56:04,790 --> 01:56:06,790
in Sekunden folgen die 7 Milliarden Telefone

2383
01:56:06,790 --> 01:56:07,790
der Welt

2384
01:56:07,790 --> 01:56:09,790
alle Netzwerke sind unter ungewöhnlicher Lüge

2385
01:56:09,790 --> 01:56:11,790
außerhalb von Rhode Island

2386
01:56:11,790 --> 01:56:13,790
beginnt abgestürzte Maschine

2387
01:56:13,790 --> 01:56:15,790
Flugzeuge fliegen durch die Höhe

2388
01:56:15,790 --> 01:56:17,790
auf Autopiloten

2389
01:56:17,790 --> 01:56:19,790
Essen startet auf abgestürzten Küchenstöfen zu brennen

2390
01:56:19,790 --> 01:56:21,790
Fußballballen verfolgen ihre Projekte

2391
01:56:21,790 --> 01:56:23,790
und haben nun unabhängige Ziele

2392
01:56:23,790 --> 01:56:25,790
Moment

2393
01:56:25,790 --> 01:56:27,790
das ist ja bei der Frage

2394
01:56:27,790 --> 01:56:29,790
normalerweise auch nicht mit gemeint

2395
01:56:29,790 --> 01:56:31,790
natürlich müssen

2396
01:56:31,790 --> 01:56:33,790
alle Leute wieder

2397
01:56:33,790 --> 01:56:35,790
zurück teleportiert werden

2398
01:56:35,790 --> 01:56:37,790
und die Zeit muss still stehen in der Zwischenzeit

2399
01:56:37,790 --> 01:56:39,790
und nicht springen in diesem einen Ding

2400
01:56:41,790 --> 01:56:43,790
ansonsten ist es natürlich ziemlich blöd

2401
01:56:43,790 --> 01:56:45,790
wenn auf einmal alle Leute dort weg sind

2402
01:56:45,790 --> 01:56:47,790
wo sie eben waren

2403
01:56:47,790 --> 01:56:49,790
um dann irgendwo kurz in Rhode Island zu springen

2404
01:56:49,790 --> 01:56:51,790
Back in Rhode Island

2405
01:56:51,790 --> 01:56:53,790
People, many people

2406
01:56:53,790 --> 01:56:55,790
begin to wonder

2407
01:56:55,790 --> 01:56:57,790
How do we get everyone home?

2408
01:56:57,790 --> 01:56:59,790
The TF Green Airport in Warwick, Rhode Island

2409
01:56:59,790 --> 01:57:01,790
handles a few thousand passengers a day

2410
01:57:01,790 --> 01:57:03,790
I just flew out of there

2411
01:57:03,790 --> 01:57:05,790
They have the nicest bathrooms of any airport I've ever seen

2412
01:57:05,790 --> 01:57:07,790
This is not part of the recording

2413
01:57:07,790 --> 01:57:09,790
Assuming they got things organized

2414
01:57:09,790 --> 01:57:11,790
including sending out scouting missions to retrieve fuel

2415
01:57:11,790 --> 01:57:13,790
they could run at 500% capacity for a hundred years

2416
01:57:13,790 --> 01:57:15,790
without making a dent in the crowd

2417
01:57:15,790 --> 01:57:17,790
The addition of all the nearby airports

2418
01:57:17,790 --> 01:57:19,790
doesn't change the equation much

2419
01:57:19,790 --> 01:57:21,790
nor does the region's light rail system

2420
01:57:21,790 --> 01:57:23,790
Crowds climb on board container ships

2421
01:57:23,790 --> 01:57:25,790
in the deepwater port of Providence

2422
01:57:25,790 --> 01:57:27,790
but stocking sufficient food and water for a long sea voyage proves a challenge

2423
01:57:27,790 --> 01:57:29,790
Rhode Island's million cars are commandeered

2424
01:57:29,790 --> 01:57:31,790
Moments later, I-95, I-195 and I-295

2425
01:57:31,790 --> 01:57:33,790
become the sites of the largest traffic jams

2426
01:57:33,790 --> 01:57:35,790
in the history of the planet

2427
01:57:35,790 --> 01:57:37,790
The roads are blocked by the crowds

2428
01:57:37,790 --> 01:57:39,790
but a lucky few get out and begin wandering

2429
01:57:55,520 --> 01:57:57,520
wandering the abandoned road network

2430
01:57:57,520 --> 01:57:59,520
Some make it past New York or Boston

2431
01:57:59,520 --> 01:58:01,520
before running out of fuel

2432
01:58:01,520 --> 01:58:03,520
Since the electricity is probably not on at this point

2433
01:58:03,520 --> 01:58:05,520
rather than finding a working gas pump

2434
01:58:05,520 --> 01:58:07,520
it's easier to just abandon the car and get in a new one

2435
01:58:07,520 --> 01:58:09,520
After all, who can stop you? All the cops are in Rhode Island

2436
01:58:09,520 --> 01:58:11,520
The edge of the crowd spreads outward

2437
01:58:11,520 --> 01:58:13,520
Southern Massachusetts and Connecticut

2438
01:58:13,520 --> 01:58:15,520
Any two people who meet are unlikely to have a language in common

2439
01:58:15,520 --> 01:58:17,520
and almost nobody knows the area

2440
01:58:17,520 --> 01:58:19,520
Even if people cooperate, everyone is hungry and thirsty

2441
01:58:19,520 --> 01:58:21,520
Grocery stores are immediately emptied

2442
01:58:21,520 --> 01:58:23,520
and woefully insufficient

2443
01:58:23,520 --> 01:58:25,520
Fresh water is hard to come by

2444
01:58:25,520 --> 01:58:27,520
and there's no efficient system for distributing it

2445
01:58:27,520 --> 01:58:29,520
Sanitation is a disaster

2446
01:58:29,520 --> 01:58:31,520
and healthcare infrastructure non-existent

2447
01:58:31,520 --> 01:58:33,520
Within weeks, Rhode Island is a graveyard of billions

2448
01:58:33,520 --> 01:58:35,520
including most of the people who submitted this question

2449
01:58:35,520 --> 01:58:37,520
Du hast ja kein Zelt dabei

2450
01:58:37,520 --> 01:58:39,520
Du wurdest ja instant weg teleportiert

2451
01:58:39,520 --> 01:58:41,520
Du und ich auch

2452
01:59:05,520 --> 01:59:07,520
Gut, dass wir das jetzt wissen

2453
01:59:07,520 --> 01:59:09,500
Man sagt wenn man einen Frosch

2454
01:59:09,520 --> 01:59:16,380
Gut, dass wir das wissen

2455
01:59:16,380 --> 01:59:18,380
Hätte ich das nicht gewusst, hätte mir was gefehlt

2456
01:59:18,380 --> 01:59:34,720
Don't make Rest Abis

2457
01:59:34,720 --> 01:59:36,720
Was kommt jetzt? CraftQL oder

2458
01:59:36,720 --> 01:59:43,640
TAPC oder

2459
01:59:43,640 --> 01:59:45,640
Ich brauch ne Runde Katzenvideosekunde

2460
01:59:45,640 --> 01:59:47,640
Fertig mein Toastbrotfutter

2461
01:59:47,640 --> 02:00:12,430
Ich bin gleich fertig

2462
02:00:12,430 --> 02:00:20,090
Ein Toastbrot hab ich noch

2463
02:00:20,090 --> 02:00:22,090
Ja

2464
02:00:22,090 --> 02:00:24,090
Das ist in Japan, guck mal wie ordentlich da drum herum ist

2465
02:00:24,090 --> 02:00:26,090
In Frankfurt hätte schon irgendjemand

2466
02:00:26,090 --> 02:00:31,420
auf den Tisch gepinkelt

2467
02:00:31,420 --> 02:00:33,420
Und ich meine, nicht die Katzen

2468
02:00:33,420 --> 02:00:56,030
Oh, es moved

2469
02:00:56,030 --> 02:01:13,930
Bam

2470
02:01:13,930 --> 02:01:15,930
Ganz ehrlich, Leute

2471
02:01:15,930 --> 02:01:17,930
Ich hab ne Modelleisenbahn

2472
02:01:17,930 --> 02:01:19,930
Nix am Hut, aber auch gar nix

2473
02:01:19,930 --> 02:01:21,930
Da würde ich aber trotzdem

2474
02:01:21,930 --> 02:01:23,930
denen einen Besuch abstatten

2475
02:01:23,930 --> 02:01:25,930
wenn ich in Japan bin

2476
02:01:25,930 --> 02:01:30,110
Oder wenn ich in der Ecke bin

2477
02:01:30,110 --> 02:01:32,110
Ihr habt aber nicht Billy auf den Gleisen stehen, oder?

2478
02:01:32,110 --> 02:01:53,850
Das Restaurant ist eine Stunde von dir weg

2479
02:01:53,850 --> 02:01:55,850
Ach, das ist ein Restaurant?

2480
02:01:55,850 --> 02:02:00,000
Okay

2481
02:02:00,000 --> 02:02:02,000
Ich dachte

2482
02:02:02,000 --> 02:02:04,000
Ich dachte, es ist so ein Modelleisenbahnladen

2483
02:02:04,000 --> 02:02:24,300
Jumbo hat verpasst?

2484
02:02:24,300 --> 02:02:30,430
Fertig

2485
02:02:30,430 --> 02:02:32,430
Jetzt hab ich noch super gesund

2486
02:02:32,430 --> 02:02:43,770
Ein Brot mit Nutella

2487
02:02:43,770 --> 02:03:12,880
Bam

2488
02:03:12,880 --> 02:03:14,880
Mit oder ohne?

2489
02:03:14,880 --> 02:03:18,350
Ohne

2490
02:03:18,350 --> 02:03:33,150
Ich find das total eklig mit Butter drunter

2491
02:03:33,150 --> 02:03:35,150
Das war so ne Glaubensfrage fast schon

2492
02:03:35,150 --> 02:03:38,430
Das war doch grad ein Kurzgesagt-Video, oder?

2493
02:03:38,430 --> 02:03:40,430
Losing weight is hard

2494
02:03:40,430 --> 02:03:42,430
and unfortunately your body is sabotaging you every step

2495
02:03:42,430 --> 02:03:44,430
Alle 12 Minuten ist zu lang

2496
02:03:44,430 --> 02:03:48,730
Ich bin jetzt einschaufelt, fertig futtern

2497
02:03:48,730 --> 02:03:50,730
Nutella ausstellt, jetzt kann ich futtern

2498
02:03:50,730 --> 02:03:52,730
So

2499
02:03:52,730 --> 02:03:56,330
Jetzt geht's weiter

2500
02:03:56,330 --> 02:03:59,740
Chat, warum geht denn das net?

2501
02:03:59,740 --> 02:04:04,400
Jetzt geht's

2502
02:04:04,400 --> 02:04:06,400
Chat, warum geht das jetzt auf einmal?

2503
02:04:06,400 --> 02:04:13,480
Die ganze Zeit ging's net

2504
02:04:13,480 --> 02:04:15,480
Aber das ist viel zu langsam, Leute

2505
02:04:15,480 --> 02:04:18,990
Das ist super lahm

2506
02:04:18,990 --> 02:04:24,030
Da stimmt irgendwas net

2507
02:04:24,030 --> 02:04:26,030
Das ist viel zu langsam

2508
02:04:26,030 --> 02:04:28,030
Also aus irgendwelchen Gründen funktioniert das

2509
02:04:28,030 --> 02:04:30,030
Aber das ist viel, viel, viel zu langsam

2510
02:04:30,030 --> 02:04:32,030
Hier, receive bytes

2511
02:04:32,030 --> 02:04:34,030
32, what the fuck

2512
02:04:34,030 --> 02:04:36,030
32

2513
02:04:36,030 --> 02:04:38,030
Da passiert irgendwas zwischendurch

2514
02:04:38,030 --> 02:04:40,030
was nicht richtig ist

2515
02:04:40,030 --> 02:04:56,680
Gucken wir mal ob das da am Reset immer noch funktioniert

2516
02:04:56,680 --> 02:05:01,950
Ich vermute auch, dass da irgendwas falsch ist

2517
02:05:01,950 --> 02:05:03,950
Ja

2518
02:05:03,950 --> 02:05:05,950
Ich weiß nicht, ob es bei mir falsch ist

2519
02:05:05,950 --> 02:05:07,950
Oder auf ESP Seite

2520
02:05:07,950 --> 02:05:09,950
Ich vermute fast auf ESP Seite

2521
02:05:09,950 --> 02:05:11,950
Weil das ist noch so ein neues Feature ist

2522
02:05:11,950 --> 02:05:13,950
Hat bestimmt nicht angreifen

2523
02:05:13,950 --> 02:05:17,290
Guck jetzt hängt's wieder

2524
02:05:17,290 --> 02:05:19,290
Ich vermute mal, das hat wahrscheinlich noch keiner mit Postrequest ausprobiert richtig

2525
02:05:19,290 --> 02:05:21,290
Ich vermute mal, das hat wahrscheinlich noch keiner mit Postrequest ausprobiert richtig

2526
02:05:21,290 --> 02:05:32,800
Weil ich wüsste echt nicht, was hier wirklich

2527
02:05:32,800 --> 02:05:34,800
Ne?

2528
02:05:34,800 --> 02:05:48,430
das ist sehr minimalistisch was da schief gehen kann manchmal geht's manchmal nicht

2529
02:05:48,430 --> 02:05:56,610
aber wenn es geht dann super langsam machen wir mal okay mein buffer von 128 ist auch

2530
02:05:56,610 --> 02:06:34,460
ziemlich pk 1024 okay das ist noch eine halbwegs sinnvolle größe und jetzt machte einfach gar nichts

2531
02:06:34,460 --> 02:06:43,630
mehr da stimmt doch was nicht leute wenn ich sowas in der ausgabe schon drin sehe da ist

2532
02:06:43,630 --> 02:06:57,980
auch irgendwas richtig leute hier guckt euch das mal der crash by the way nicht ja er macht

2533
02:06:57,980 --> 02:07:10,060
aber auch nichts mehr also da stimmt irgendwas nicht da ist irgendwas kaputt wir machen das

2534
02:07:10,060 --> 02:07:44,310
jetzt noch mal 128 irgendwas im arsch und mama github issues er ist ein kendler file upload

2535
02:07:44,310 --> 02:07:53,250
reading data das ist return any das kann man nicht sagen bei mir gibt es schon data

2536
02:07:53,250 --> 02:07:53,390
aber das kann man nicht sagen bei mir gibt es schon data aber das kann man nicht sagen

2537
02:07:53,390 --> 02:07:59,780
aber das kann man nicht sagen bei mir gibt es schon data aber es fand dann nicht es gibt data

2538
02:07:59,780 --> 02:08:36,240
aber dann crash 6 ist 4096 das sollte dafür eigentlich reichen aber er war in receive 11

2539
02:08:36,240 --> 02:09:07,430
er war in receive 128 genau das habe ich auch ist es etwa ein bug gibt ein patch oder andere

2540
02:09:07,430 --> 02:10:10,330
welcher patch ist doch was ganz anderes aber hier gibt es ein hier gibt es ein pull request dafür

2541
02:10:10,330 --> 02:10:17,050
um das problem zu fixen prevent konkurrent access to socket use denn er ist ja aha dann lasst uns

2542
02:10:17,050 --> 02:10:32,860
doch mal angucken was da eigentlich kaputt ist der fix ist relativ easy so wie es aussieht ok also für

2543
02:10:32,860 --> 02:10:40,240
mich sieht das so aus als checken die nicht ob das ein asynchroner request ist und die greifen auf den

2544
02:10:40,240 --> 02:10:46,920
gleichen request von ihrem http management thread zu

2545
02:10:46,920 --> 02:10:53,480
während der asynchronen läuft und sachen upload deswegen würde ich sagen leute wir

2546
02:10:54,480 --> 02:11:05,220
erfreuen einfach mal den patch oder und gucken ob so funktioniert patch eightypower şeyler so kann

2547
02:11:05,220 --> 02:11:19,660
ich den patch platte kommen wir müssen wir müssen uns das nochmal klonen master oder haben jetzt den

2548
02:11:19,660 --> 02:11:30,240
patch rein dann schauen wir mal funktioniert dasasa ich jetzt relativ easy ausprobieren so welcher ist

2549
02:11:30,240 --> 02:11:31,000
das plays played while rendering

2550
02:11:31,580 --> 02:11:39,220
von dem branch hat auch nur ein comet drin okay das dürfte easy sein

2551
02:11:39,220 --> 02:11:45,470
schauen wir mal ob das ganze funktioniert mit mit diesem patch

2552
02:11:45,470 --> 02:12:00,580
applied wie viele esp installation habe ich jetzt hier eigentlich fünf

2553
02:12:00,580 --> 02:12:17,300
könnte das auch einfach ins 553 apply oder muss das nicht wirklich neu klonen

2554
02:12:17,300 --> 02:12:25,400
abiklons war neu dann wurstel dann wurschtel ich nicht einem stand rum der

2555
02:12:25,400 --> 02:12:28,820
eigentlich dem release tag von denen entspricht nicht dann irgendwann fängt

2556
02:12:28,820 --> 02:12:36,520
das vergesse und ich frage warum sich funktioniert weil ich vor habe ist ein

2557
02:12:36,520 --> 02:12:44,240
web server auf dem sp 32 und also wifi web server und auf dem web server dann

2558
02:12:44,240 --> 02:12:47,500
was hochladen allerdings asynchron so dass man mehrere sachen gleichzeitig

2559
02:12:47,500 --> 02:12:52,160
hochladen kann das ist ein ganz neues feature das gibt es seit zwei wochen in

2560
02:12:52,160 --> 02:12:55,900
esp df das wollte ich mal ausprobieren und wir haben schon festgestellt es

2561
02:12:55,900 --> 02:12:57,580
gibt wohl noch einen kleinen bug

2562
02:12:58,000 --> 02:13:06,700
den man wohl fixen kann mit dem patch aus diesem pull request und das

2563
02:13:06,700 --> 02:13:12,430
probier jetzt mal aus ob das funktioniert drei stunden später

2564
02:13:12,430 --> 02:13:25,310
upa masteristen wie pr pr

2565
02:13:25,310 --> 02:13:33,200
idir smart update herr als mal geht es pode

2566
02:13:33,200 --> 02:13:42,580
auf welcher branche hat er das

2567
02:13:42,620 --> 02:13:54,820
nicht auf master okay wir kopieren uns einfach den kommentar jetzt cherry pick

2568
02:13:54,820 --> 02:14:05,240
in patch okay wir möchten nichts schmeißen dann wieder weg ich hätte

2569
02:14:05,240 --> 02:14:13,400
auch das jemand das ist wurscht wir haben jetzt im prinzip nicht lockt

2570
02:14:13,400 --> 02:14:29,200
das im prinzip den patch pleite von dem du noch mal oben drauf ja okay dann

2571
02:14:29,200 --> 02:14:35,030
probiere das doch mal aus jetzt haben wir unsere spdf mit den zusätzlichen

2572
02:14:35,030 --> 02:15:35,400
patches schauen wir mal master export export etwas gucken da so export flash

2573
02:15:35,400 --> 02:15:44,040
der es war clean flash so wir haben esp ok wir haben sogar schon version 5.4

2574
02:15:44,040 --> 02:15:46,340
weiß ich ob es gerade gesehen habt aber wahrscheinlich

2575
02:15:46,340 --> 02:15:46,360
nicht so gut ist aber ich weiß nicht ob ihr das gesehen habt aber wahrscheinlich

2576
02:15:46,360 --> 02:15:46,420
nicht so gut ist aber ich weiß nicht ob ihr das gesehen habt aber wahrscheinlich

2577
02:15:46,420 --> 02:15:52,060
hat master immer die version nach dem nach dem letzten tag da haben die

2578
02:15:52,060 --> 02:15:57,280
bestimmte magic drin so haben auf jeden fall den richtigen stand es scheint auch

2579
02:15:57,280 --> 02:16:01,000
noch alles zu kompilieren jetzt bin ich mal gespannt leute chat

2580
02:16:01,000 --> 02:16:08,420
predictions meine das funktioniert mit dem patch jetzt oder es ist ein fehler

2581
02:16:08,420 --> 02:16:27,320
bei mir und ich habe irgendwas verkackt ich bin da unschlüssig schau mal chat

2582
02:16:27,320 --> 02:16:31,440
meines funktioniert nicht okay naja gucken wir mal zack

2583
02:16:31,440 --> 02:16:38,950
das sieht gut aus das sieht gut aus

2584
02:16:38,950 --> 02:17:05,630
also einfach random patches von github auf geht's okay jetzt nachdem das jetzt

2585
02:17:05,630 --> 02:17:13,090
funktioniert können wir die buffer sei es auch um alle busy größer machen würde ich sagen also 1024

2586
02:17:13,090 --> 02:17:13,230
also 1024

2587
02:17:13,250 --> 02:17:15,250
also 1024 buffer sei es ist glaube ich echt ganz in

2588
02:17:15,250 --> 02:17:15,270
buffer sei es ist glaube ich echt ganz in

2589
02:17:15,270 --> 02:17:18,790
buffer sei es ist glaube ich echt ganz in ordnung oder wir können sogar 2048 buffer

2590
02:17:18,790 --> 02:17:18,810
ordnung oder wir können sogar 2048 buffer

2591
02:17:18,810 --> 02:17:21,550
ordnung oder wir können sogar 2048 buffer sei es machen aber dann müssen wir auf

2592
02:17:21,550 --> 02:17:21,570
sei es machen aber dann müssen wir auf

2593
02:17:21,570 --> 02:17:26,730
sei es machen aber dann müssen wir auf jeden fall die stack sei es von unserem

2594
02:17:26,730 --> 02:17:26,750
jeden fall die stack sei es von unserem

2595
02:17:26,750 --> 02:17:29,350
jeden fall die stack sei es von unserem task etwas vergrößern

2596
02:17:29,350 --> 02:17:29,370
task etwas vergrößern

2597
02:17:29,370 --> 02:17:32,530
task etwas vergrößern naja wir haben 4096 text als das könnte

2598
02:17:32,530 --> 02:17:32,550
naja wir haben 4096 text als das könnte

2599
02:17:32,550 --> 02:17:34,690
naja wir haben 4096 text als das könnte gerade noch so hinhauen

2600
02:17:34,690 --> 02:17:34,710
gerade noch so hinhauen

2601
02:17:34,710 --> 02:17:48,120
gerade noch so hinhauen probieren wir mal aus flächen war auch

2602
02:17:48,120 --> 02:17:48,140
probieren wir mal aus flächen war auch

2603
02:17:48,140 --> 02:18:06,580
schon mal schneller so ist es gecrasht gerade der körper flohach mist ok sex heißt es reicht

2604
02:18:06,580 --> 02:18:16,700
doch nicht also stacks es kommen wir machen der kriegt er kriegt jetzt mal mal 3 12.000

2605
02:18:16,700 --> 02:18:26,510
er ist das ist im prinzip wie viel ich weiß dass es nicht wirklich stimmt ja aber wie viel ram so

2606
02:18:26,510 --> 02:18:36,860
ein thread verwenden darf stimmt nicht wirklich weil heap memory kann er immer allokieren wieder

2607
02:18:36,860 --> 02:18:41,220
will es egal wie groß sich die groß die stacks als es aber ganz grob gesagt ist das wie viel

2608
02:18:41,220 --> 02:18:51,800
ram so ein einzelner thread verwenden darf jetzt sind es 12 km sie kommen und jetzt geht das auch

2609
02:18:51,800 --> 02:18:59,400
viel schneller seht ihr das jetzt ist es schon fertig gleich fertig jetzt auf

2610
02:18:59,400 --> 02:19:02,760
wir schicken übrigens keine antwort dass wir fertig sind sollten wir vielleicht noch mal

2611
02:19:02,760 --> 02:19:19,660
machen send was habe ich hier content wie html oder so das sollte man noch machen jetzt ist

2612
02:19:19,660 --> 02:19:35,250
nicht geht's wir wir antworten mit angeblich mit html ok und jetzt senden wir ja omega keckel als

2613
02:19:35,250 --> 02:19:40,930
antwort man sollte kölner nicht mehr hängen ich habe scheint zu funktionieren und übrigens

2614
02:19:41,110 --> 02:19:47,950
diesen krempel mama raus das wird sonst so schlecht lesbar aber ich würde sagen der patch hat das

2615
02:19:47,950 --> 02:19:55,930
gefixt jetzt müssen wir nur noch hoffen wir könnten jetzt mal in den merch request gehen und reinschreiben

2616
02:19:55,930 --> 02:20:07,420
fix mal ich bin ja nicht eingeloggt bin ich auf dem zweiten rechner eingeloggt weil ich würde ich

2617
02:20:07,420 --> 02:20:25,480
würde ist so ob das richtige haben jetzt bin ich eingeloggt na gut weil ich finde es immer ganz sinnvoll

2618
02:20:25,640 --> 02:20:32,040
wenn man ein bisschen feedback auf die pull request schreibt selbst wenn man nichts mit der

2619
02:20:32,040 --> 02:20:37,320
entwicklung zu tun hat weil oftmals wissen nicht so genau tut es jetzt tut es nur bei dem einen würde

2620
02:20:37,320 --> 02:20:43,320
das eigentlich reinschreiben dass das auch bei mir den fehler fix sagt boom kommentiert wie schnell

2621
02:20:43,320 --> 02:20:49,320
es jetzt geht asynchron easy so und wisst ihr was das jetzt omega keckel passt wisst ihr was das

2622
02:20:49,320 --> 02:20:54,300
heißt ist jetzt kann ich mehrere dateien parallel hochladen nicht dass ich das bräuchte aber um zu

2623
02:20:54,300 --> 02:20:57,240
beweisen dass das asynchron funktioniert sagt

2624
02:20:57,780 --> 02:21:11,160
seht ihr paralleler asynchroner asynchrones handling von post requests das ist mega nice das gefällt mir

2625
02:21:11,160 --> 02:21:18,420
dass das so in anführungsstrichen so einfach jetzt funktioniert wenn es denn funktionieren würde also

2626
02:21:18,420 --> 02:21:22,140
wenn es funktioniert ist es einfach leider ist das aktuelle noch verbuggt und man braucht noch

2627
02:21:22,140 --> 02:21:32,380
ein custom patch chat ist das mission accomplished nee das ist nicht mission accomplished mission

2628
02:21:32,380 --> 02:21:39,440
accomplished ist erst wenn es über https geht also http wir brauchen wir wollen das ganze jahr als

2629
02:21:39,620 --> 02:21:56,550
mit tls machen also machen wir das ganze jetzt mal mit https das brauchen wir nicht das brauchen wir

2630
02:21:56,550 --> 02:22:04,710
das brauchen wir das brauchen wir das brauchen wir ja müssen wir die zertifikate inkluden das verstehe

2631
02:22:04,710 --> 02:22:27,080
ich muss okay nice und jetzt wollen wir sagen ssl start okay und jetzt sollte der webserver mit https hochkommen

2632
02:22:27,260 --> 02:22:39,550
und ich sollte das ganze auch über https machen können https trauma wenn das funktioniert dann

2633
02:22:39,550 --> 02:22:51,970
mission accomplished wir haben natürlich aber wir verzeihen dass den espresso china chinesen war dass

2634
02:22:51,970 --> 02:22:56,950
es nicht funktioniert weil das ist noch ein ganz neues feature und es ist noch nicht released es

2635
02:22:56,950 --> 02:23:03,130
ist noch in einem erz ist quasi rc 15 53 rc 1 drin das ist okay dass es gerade kaputt ist

2636
02:23:05,480 --> 02:23:18,630
also ich habe ja selbst sein zertifikate es geht es ist eine ganze ecke langsamer über ssl das wundert

2637
02:23:18,630 --> 02:23:51,900
mich persönlich okay über ssl hat so ein paar kleine probleme wie es aussieht wenn er out of

2638
02:23:51,900 --> 02:24:01,360
memory wer würde wieder crashen aber wir können wir können immer trotzdem hier oben nochmal 512

2639
02:24:01,360 --> 02:24:08,200
bei das wird es eigentlich nicht sein aber irgendwas verpeilt

2640
02:24:11,130 --> 02:24:24,890
ich meine viel mehr kannst du nicht machen um den server umzustellen auf https als genug stacks

2641
02:24:24,890 --> 02:24:50,650
wüsste ich jetzt nicht was da kaputt ist aber nochmal vielleicht doch ein bisschen wenig speicher

2642
02:24:50,650 --> 02:25:08,970
gehabt kunst kein ding geht laden wir mal laden wir mal zwei sachen parallel hoch kunst dann sieht

2643
02:25:08,970 --> 02:25:15,650
du an den zahlen dass die unterschiedlich sind funktionieren auch über https easy easy easy

2644
02:25:17,030 --> 02:25:40,620
sehr nice mission accomplished würde ich sagen kein crash nix asynchrone datei uploads parallel

2645
02:25:40,620 --> 02:25:48,300
auf dem microcontroller finde haben die schön gemacht ist easy zu handhaben sofern es funktioniert

2646
02:25:48,300 --> 02:25:54,720
ja also das ist wirklich sehr übersichtlich im prinzip brauchst du eigentlich das hier ist das

2647
02:25:54,720 --> 02:26:03,180
hier ist zeug dass das überhaupt wifi sich verbindet im prinzip brauchst du nur den brauchst du nur dann web

2648
02:26:03,420 --> 02:26:11,580
starten den händler registrieren einmal am anfang sagen hier einmal am anfang anfangen sagen es

2649
02:26:11,580 --> 02:26:19,540
und start essen beginn dann machst du hier wie als wäre es ein synchroner request dein krempe

2650
02:26:19,540 --> 02:26:27,010
am ende sagst du komplett das ist wirklich easy also da kannst du nichts sagen das haben die gut

2651
02:26:27,010 --> 02:26:33,210
gemacht es ist zwar noch verpackt in der aktuellen version aber ich gehe stark davon aus dass bis zum

2652
02:26:33,210 --> 02:26:35,050
release von 53 das gefixt ist

2653
02:26:35,530 --> 02:26:47,740
easy nice chat das war's mission mission complete für heute kann ich firmware update bauen über http

2654
02:26:47,740 --> 02:27:00,840
für den controller chat gibt es noch irgendwas wichtiges irgendwas was ihr wissen wollt zu dem

2655
02:27:00,840 --> 02:27:13,020
was wir gemacht haben oder allgemein weil wir nicht neue folge dr bauer ich muss dir ehrlich

2656
02:27:13,020 --> 02:27:20,020
sagen ich finde das nicht lustig ich habe das ein paar mal als shorts empfohlen bekommen keine ahnung ich teile da den

2657
02:27:20,220 --> 02:27:25,940
humor nicht unbedingt also auf der einen seite ist das was wo ich mir denke das ist was was ich eigentlich

2658
02:27:25,940 --> 02:27:31,300
potenziell lustig finden müsste aber ich finde es nicht lustig ist genauso wie ich anscheinend auch

2659
02:27:31,300 --> 02:27:38,730
der einzige bin der die office nicht lustig findet mit welcher lib hast du den web server erstellt ja

2660
02:27:38,730 --> 02:27:49,090
das ist ja das beste das ist eingebaut in esp edf muss hier du musst den passenden händler inkluden

2661
02:27:49,090 --> 02:27:50,970
von denen das liefern die mit

2662
02:27:53,960 --> 02:28:01,800
und dann kannst du deinen web server erstellen mit wo ist er hier im prinzip ist dass ich das ist alles was ich

2663
02:28:01,800 --> 02:28:13,230
gemacht habe start web server und dann hier den händler für den upload das liefert esp edf mit also

2664
02:28:13,230 --> 02:28:18,350
eine sache musst du machen wenn du https verwenden willst du musst in die config von einem projekt

2665
02:28:18,350 --> 02:28:29,790
gehen und sagen https hier enable https server component das musste einschalten nginx ja klar

2666
02:28:29,910 --> 02:28:38,790
auf msp 32 nginx embedded nginx fork ja growth strike habe ich mich schon morgen drüber ausgelassen

2667
02:28:38,790 --> 02:28:48,660
also gao stmo das ist mittlerweile ist das standardmäßig dabei also ein http web server

2668
02:28:48,660 --> 02:28:53,560
haben die schon ganz lange schon jahre mit dabei ein tls fähigen web server auch schon lange und

2669
02:28:53,560 --> 02:28:57,480
jetzt seit neuestem seit dieser version und die ist noch nicht raus weil wir mussten sogar noch

2670
02:28:57,480 --> 02:29:01,780
dass es funktioniert einen patch von github einspielen dass das vorgesehen ist

2671
02:29:01,800 --> 02:29:10,880
quasi hotfix patchen dass es funktioniert jetzt kann man sogar http post requests asynchro

2672
02:29:10,880 --> 02:29:15,960
handeln lassen von dem web server auf dem micro controller also sprich wie du hier siehst ich kann

2673
02:29:15,960 --> 02:29:22,620
zwei post requests parallel laufen lassen ich bin ein bisschen blöd weil ich habe die ausgabe schon

2674
02:29:22,620 --> 02:29:33,140
ausgemacht hier oben du kannst zwei wenn er sich war jetzt hat er sich gerade nicht zum wlan verbunden

2675
02:29:49,180 --> 02:29:59,430
mir guckt du kannst zwei oder bis zu sieben parallele request bearbeiten lassen von dem

2676
02:29:59,430 --> 02:30:04,650
von dem web server und das finde ich es für ein bild bild in stadt quasi nennen wir es mal standard

2677
02:30:04,650 --> 02:30:10,290
library web server echt ganz nice der micro controller ist nicht der schwachbrüstigste das

2678
02:30:10,290 --> 02:30:18,510
ist das würde aber auch nur in normalen esp 32 funktionieren sieben auch noch bei https da bin

2679
02:30:18,510 --> 02:30:20,630
ich mir nicht so ganz sicher warum wir mal gucken

2680
02:30:21,510 --> 02:30:29,130
wir können nicht gucken nicht gescheit gucken aber es müssten sieben seien auch bei https ja die sache

2681
02:30:29,130 --> 02:30:37,980
ist ich weiß nicht ob der ram reicht's den hat glaube ich ja nur 160 kilobyte ram ja doch doch

2682
02:30:37,980 --> 02:30:50,990
müsste reichen können ja das kann man tatsächlich noch ausprobieren wir können ja mal hier dieses

2683
02:30:50,990 --> 02:30:56,930
status update rausschmeißen dass uns das nicht so viel nicht so voll spannt ja hier dass das

2684
02:30:56,930 --> 02:31:02,310
remaining machen wir mal raus und in main lassen wir uns jetzt mal unsere

2685
02:31:02,310 --> 02:31:14,080
hieb sei es ausgeben vom spp get free hipster ist er will hieb sei es in

2686
02:31:14,080 --> 02:31:46,100
beiz ob mama guck mal wie viel viel viel haben wir noch frei haben dynamisch ok

2687
02:31:46,100 --> 02:32:03,450
ohne alles haben wir ok so irgendwas um 167 kilobyte frei so in dem dreh machen

2688
02:32:03,450 --> 02:32:11,220
wir mal ein paar requests wie schnell er ist der ist viel zu schnell jetzt so

2689
02:32:11,220 --> 02:32:22,310
schnell so schnell bin ich ja gar nicht ja das ok so ein request ist schon leute

2690
02:32:22,310 --> 02:32:30,680
habe ich ein memory league naja bin ich also ein request frist schon

2691
02:32:30,680 --> 02:32:31,120
drei

2692
02:32:31,120 --> 02:32:38,620
30 30 30 kilobyte so ungefähr schwer zu sagen

2693
02:32:38,620 --> 02:32:43,660
so initial beim beim verbindungs aufbaut frist ist mal kurz 30 kilobyte danach

2694
02:32:43,660 --> 02:32:49,020
weniger wir müssen das wir müssen das langsamer

2695
02:32:49,020 --> 02:32:56,420
machen das ist das geht zu schnell das geht sicher wir müssen irgendwie das

2696
02:32:56,420 --> 02:33:03,400
lieb hier rein machen hier 100 millisekunden delay das sollte es lahm

2697
02:33:03,400 --> 02:33:10,700
genug machen dass wir ein paar curls starten können gucken wie viele curls

2698
02:33:10,700 --> 02:33:11,140
wird zum laufenden

2699
02:33:11,160 --> 02:33:25,850
laufen bekommen und wie viel haben wir dann ab wann der ram quasi ausgeht ok

2700
02:33:25,850 --> 02:33:49,520
wifi verbunden hier fünf ok da geht bloß fünf requests da gehen nur fünf

2701
02:33:49,520 --> 02:34:11,220
requests mehr geht nicht also da kriegen wir da kriegen wir da gehen wir

2702
02:34:11,220 --> 02:34:19,980
noch fünf request durch und dann hat er noch ein bisschen rahmen übrig hat er

2703
02:34:19,980 --> 02:34:25,140
irgendwas memory liegt guck mal an die request karten gerade ab und jetzt wird

2704
02:34:25,140 --> 02:34:26,240
freigegeben ok

2705
02:34:27,120 --> 02:34:33,180
mit ssl kriegen wir bloß fünf request parallel was aber auch vollkommen

2706
02:34:33,180 --> 02:34:46,330
ausreichend ist für so einen kleinen micro controller und noch noch mal will

2707
02:34:46,330 --> 02:34:58,600
ich hatte keinen bock super alter das braucht 50 das braucht 15 also ungefähr

2708
02:34:58,600 --> 02:35:08,750
man weiß nicht so genau und zwischen 550 und 30 kilobyte o request er als geno

2709
02:35:08,750 --> 02:35:09,230
4 also vier parallele request weil es vorbei was ist denn hier da ist ein

2710
02:35:09,230 --> 02:35:11,910
es geht nur vier also vier parallele request dann ist vorbei

2711
02:35:11,910 --> 02:35:12,310
es ist nur eine Frage für die die es gibt wie viele request an die wir haben

2712
02:35:12,310 --> 02:35:27,940
Was ist denn da so groß? Ich würde mal sagen, der ganze SSL-Kontext-Zeug wird wahrscheinlich einiges an RAM brauchen.

2713
02:35:29,800 --> 02:35:33,840
Also wir reden ja hier von Kilobyte, das sind ja Bytes, was mir hier angezeigt werden.

2714
02:35:34,620 --> 02:35:36,000
30 Kilobyte kann doch sein.

2715
02:35:37,680 --> 02:35:42,160
Und das ganze Encryption-Zeug und alles mögliche, was da im RAM gehalten werden muss, kann ich mir schon vorstellen.

2716
02:35:42,620 --> 02:35:46,660
Es ist auf jeden Fall eine ganze Ecke ressourcenintensiver als plain HTTP.

2717
02:35:46,660 --> 02:35:53,060
Aber ich würde es trotzdem immer über HTTPS machen, weil das Ding hat ja letztendlich genug RAM.

2718
02:35:53,140 --> 02:35:57,740
Das ist jetzt ja nicht gerade wenig, was das Ding für so einen kleinen Microcontroller hat.

2719
02:35:58,660 --> 02:36:05,440
Und gerade wenn du darüber dein WLAN-Passwort setzt, über dein Accesspoint, dann ist es halt immer nice, wenn es über HTTPS ist.

2720
02:36:06,460 --> 02:36:07,740
Da kann es halt niemand abgreifen.

2721
02:36:08,980 --> 02:36:11,960
Auch wenn es eher was Theoretisches ist, aber es ist dann halt ausgeschlossen.

2722
02:36:14,670 --> 02:36:15,290
Nahezu ausgeschlossen.

2723
02:36:16,270 --> 02:36:18,270
Aber Leute, ich bin happy. Das funktioniert gut.

2724
02:36:18,290 --> 02:36:20,950
Hätte ich nicht gedacht, dass es so easy ist.

2725
02:36:21,210 --> 02:36:31,440
Da haben die sich echt schöne API überlegt, wie man das machen kann.

2726
02:36:32,620 --> 02:36:35,080
Dass man dann Custom-Patch einspielen muss.

2727
02:36:35,180 --> 02:36:35,760
Ja, so what.

2728
02:36:41,400 --> 02:36:41,860
Alles klar.

2729
02:36:42,480 --> 02:36:42,680
Chat.

2730
02:36:44,040 --> 02:36:45,520
Schön, dass ihr dabei gewesen seid.

2731
02:36:46,840 --> 02:36:49,520
Ich gehe jetzt auf.

2732
02:36:50,040 --> 02:36:51,940
Mal runter aufs Klo und wir hören uns.

2733
02:36:52,040 --> 02:36:52,860
Bis dann. Macht's gut.

2734
02:36:53,580 --> 02:36:54,000
See you.
