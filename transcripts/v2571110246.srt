1
00:00:00,000 --> 00:00:29,980
Bis zum nächsten Mal.

2
00:00:30,000 --> 00:00:59,980
Bis zum nächsten Mal.

3
00:01:00,000 --> 00:01:29,980
Bis zum nächsten Mal.

4
00:01:30,000 --> 00:01:39,760
So, da bin ich.

5
00:01:41,200 --> 00:01:41,640
Test.

6
00:01:41,940 --> 00:01:42,140
Tut.

7
00:01:42,480 --> 00:01:42,600
Ja.

8
00:01:44,600 --> 00:01:45,800
Kewo, danke schön für den Sub.

9
00:01:46,800 --> 00:01:47,280
Exquisite.

10
00:01:47,920 --> 00:01:49,440
IIQ Subscription.

11
00:02:00,000 --> 00:02:08,660
Das machen wir dann heute mal an.

12
00:02:30,000 --> 00:02:31,520
Ich will zu entspannen gerade.

13
00:02:32,700 --> 00:02:34,580
Machen wir mal wieder hier unsere...

14
00:02:34,580 --> 00:02:36,540
Meine Lieblingsplaylist an.

15
00:02:39,320 --> 00:02:41,380
War vorher sogar in Frankfurt und Hanau.

16
00:02:42,000 --> 00:02:42,520
Exzellent.

17
00:02:43,060 --> 00:02:43,860
Und hast du überlebt?

18
00:02:49,780 --> 00:02:50,900
Geht's weiter? Ja!

19
00:02:51,600 --> 00:02:53,380
Heute machen wir tatsächlich etwas

20
00:02:53,380 --> 00:02:56,300
advancederes, würde ich sagen.

21
00:02:56,400 --> 00:02:58,000
Weil ich meine, lernen bringt ja nichts,

22
00:02:58,000 --> 00:02:59,760
weil man immer nur so easy Sachen und Sachen,

23
00:02:59,760 --> 00:03:02,700
die man im Prinzip eh schon irgendwie hinbekommen würde und macht.

24
00:03:03,180 --> 00:03:10,160
Heute probieren wir mal, wie man JSON-Responses macht mit Spring Boot,

25
00:03:10,240 --> 00:03:13,740
wie man Websockets macht mit Spring Boot.

26
00:03:13,860 --> 00:03:14,700
Da bin ich mal gespannt.

27
00:03:16,180 --> 00:03:20,520
Und also im Prinzip habe ich mir gedacht, wir machen irgendwie so eine,

28
00:03:21,400 --> 00:03:26,520
wir zapfen irgendwie einen der 3000 verschiedenen Public-Test-APIs,

29
00:03:26,520 --> 00:03:28,360
die es da so gibt, an, so irgendwelche

30
00:03:28,360 --> 00:03:30,880
Zitat-APs, Star Wars-AP,

31
00:03:31,100 --> 00:03:32,640
Pokémon-AP, keine Ahnung, gibt es ja ganz

32
00:03:32,640 --> 00:03:34,640
viele, und

33
00:03:34,640 --> 00:03:37,020
ziehen da per Background-Job

34
00:03:37,020 --> 00:03:38,820
irgendwie

35
00:03:38,820 --> 00:03:40,320
alle 10 Sekunden oder so

36
00:03:40,320 --> 00:03:42,680
ein neues Zitat und pushen

37
00:03:42,680 --> 00:03:43,960
das dann per Websocket

38
00:03:43,960 --> 00:03:45,880
auf unseren Client.

39
00:03:46,200 --> 00:03:48,780
Dazu muss ich Websockets in Spring Boot lernen

40
00:03:48,780 --> 00:03:50,780
und ich muss gucken, wie man JSON-Responses

41
00:03:50,780 --> 00:03:52,900
macht, wie man HTTP-Requests

42
00:03:52,900 --> 00:03:53,660
macht in Java.

43
00:03:53,660 --> 00:04:01,040
und wenn das alles viel viel einfacher geht als ich mir das jetzt so vorstelle kann ja

44
00:04:01,040 --> 00:04:09,720
rein gerade mit der hilfe vom chat chat liegt ja prinzipiell die falsch noch nie erlebt leute

45
00:04:09,720 --> 00:04:14,780
oder hat hatte schon einmal erlebt dass der chat falsch liegen oder ich nenne das kann also gerade

46
00:04:14,780 --> 00:04:22,160
was bei progast themen angeht das ist immer first try fehlerfrei für immer wenn das wenn das zumindest

47
00:04:22,160 --> 00:04:26,720
das first try fehlerfrei für immer ohne probleme funktioniert dann gucken wir

48
00:04:26,720 --> 00:04:32,780
noch wie man eine sql-datenbank anbieten das glaube ich aber nicht dass wir das

49
00:04:32,780 --> 00:04:39,320
heute schaffen ich hoffe sind mit http requests websockets und background

50
00:04:39,320 --> 00:04:43,580
threats und so schon genug beschäftigt ich weiß noch nicht ich habe ich habe

51
00:04:43,580 --> 00:04:49,200
nicht einmal multi treten java aber leute ich habe doch letztens im stream

52
00:04:49,200 --> 00:04:51,300
gesagt, so sinngemäß, ich kann es ja

53
00:04:51,300 --> 00:04:53,120
nicht mal 100%ig sagen, im letzten Stream, wo es

54
00:04:53,120 --> 00:04:54,900
schon hier mit Springboot und Java ging,

55
00:04:55,320 --> 00:04:56,100
habe ich doch gesagt,

56
00:04:57,200 --> 00:04:58,260
sinngemäß, ähm,

57
00:04:59,020 --> 00:05:01,100
Java kann ich lesen und ein bisschen was

58
00:05:01,100 --> 00:05:03,060
schreiben drin, aber Springboot

59
00:05:03,060 --> 00:05:05,280
habe ich noch, habe ich gar keine

60
00:05:05,280 --> 00:05:07,160
Ahnung und Java eigentlich auch nie groß

61
00:05:07,160 --> 00:05:08,920
was mitgemacht. So.

62
00:05:09,520 --> 00:05:11,140
Und wisst ihr, was mir da aufgefallen ist?

63
00:05:13,120 --> 00:05:13,560
Ähm,

64
00:05:14,180 --> 00:05:14,720
guckt mal,

65
00:05:15,600 --> 00:05:16,420
ich habe doch hier

66
00:05:16,420 --> 00:05:19,120
das Skills-PDF von meiner

67
00:05:19,120 --> 00:05:19,760
Bewerbung.

68
00:05:21,100 --> 00:05:23,320
Und da habe ich zufälligerweise mal reingeguckt

69
00:05:23,320 --> 00:05:24,960
und da ist mir aufgefallen,

70
00:05:25,100 --> 00:05:26,360
guckt mal, bei

71
00:05:26,360 --> 00:05:28,380
Programmiersprachen steht Java drin.

72
00:05:33,520 --> 00:05:35,160
Ich glaube, ich wollte da Kotlin

73
00:05:35,160 --> 00:05:37,120
schreiben, weil in Kotlin haben wir

74
00:05:37,120 --> 00:05:38,800
schon mal was zusammen gemacht im Stream.

75
00:05:38,900 --> 00:05:41,000
In Java eigentlich nicht. Der Rest stimmt

76
00:05:41,000 --> 00:05:42,880
ja alles. Der Rest ist alles richtig.

77
00:05:44,000 --> 00:05:44,980
Also hier, das haben wir ja alles

78
00:05:44,980 --> 00:05:47,040
im Stream sogar schon gemacht, aber Java?

79
00:05:47,680 --> 00:05:49,020
Ja, hatten wir jemals schon

80
00:05:49,020 --> 00:05:50,220
Ja, aber...

81
00:05:50,220 --> 00:05:52,060
Ich glaube nicht, oder?

82
00:05:53,340 --> 00:05:54,580
Egal, Hauptsache mal reingeschrieben.

83
00:05:54,800 --> 00:05:56,740
Der Rest stimmt ja. Groovy stimmt auch.

84
00:05:56,920 --> 00:05:58,240
Das ist meine einzige Sprache

85
00:05:58,240 --> 00:06:00,720
mit ein bisschen Kotlin zusammen, wo ich auf

86
00:06:00,720 --> 00:06:02,840
die JVM mal was gebastelt habe. Da habe ich mal was für Confluence

87
00:06:02,840 --> 00:06:03,920
gebastelt in Groovy.

88
00:06:05,760 --> 00:06:06,060
Naja.

89
00:06:07,520 --> 00:06:08,980
Der Rest stimmt. Den Rest kann ich ja sogar

90
00:06:08,980 --> 00:06:10,760
beweisen hier im Stream. Aber alles schon

91
00:06:10,760 --> 00:06:12,760
im Stream gemacht. Was ich da alles...

92
00:06:13,360 --> 00:06:14,840
Das ist übrigens nicht die

93
00:06:14,840 --> 00:06:16,560
finale komplette Liste.

94
00:06:16,740 --> 00:06:18,520
Das ist die, die wir hier mal im Stream erstellt haben.

95
00:06:18,520 --> 00:06:20,500
ich hab die noch ein bisschen hübscher gemacht

96
00:06:20,500 --> 00:06:22,260
als das, was ich hier jetzt liegen hab, ja

97
00:06:22,260 --> 00:06:24,660
ups, warum danst der Pepo eigentlich

98
00:06:24,660 --> 00:06:26,240
die ganze Zeit da immer noch rum

99
00:06:26,240 --> 00:06:28,320
ja, das ist ein bisschen

100
00:06:28,320 --> 00:06:30,280
weniger und ein bisschen

101
00:06:30,280 --> 00:06:32,480
wilder zusammengeschrieben als das, was ich

102
00:06:32,480 --> 00:06:33,780
dann da wirklich hingeschickt hab

103
00:06:33,780 --> 00:06:35,680
aber im großen Ganzen

104
00:06:35,680 --> 00:06:38,680
ist das zu 95% das, was

105
00:06:38,680 --> 00:06:39,480
ich hingeschickt hab

106
00:06:39,480 --> 00:06:42,520
ja, ja, und dann ist mir aufgefallen, da steht

107
00:06:42,520 --> 00:06:43,580
einfach mal Java drin

108
00:06:43,580 --> 00:06:46,660
ich mein, da steht auch C++

109
00:06:46,660 --> 00:06:48,380
drin, das kann mir keiner vorwerfen

110
00:06:48,380 --> 00:06:51,000
dass ich noch kein C++ gemacht habe,

111
00:06:51,060 --> 00:06:53,220
beziehungsweise überhaupt keine Ahnung von C++ habe.

112
00:06:53,280 --> 00:06:54,500
Dafür haben wir schon viel zu viele

113
00:06:54,500 --> 00:06:56,060
C++ Streams gemacht.

114
00:06:56,440 --> 00:06:58,260
Was da drin ja nicht steht ist,

115
00:06:58,620 --> 00:07:00,220
ob ich das gut oder schlecht finde.

116
00:07:00,920 --> 00:07:02,700
Steht einfach nur, dass ich mich damit auskenne.

117
00:07:05,680 --> 00:07:06,120
Aber

118
00:07:06,120 --> 00:07:08,280
nicht, ob ich es gut oder schlecht finde.

119
00:07:08,800 --> 00:07:10,960
Hier steht einiges drin, was ich nicht so tolle finde.

120
00:07:11,440 --> 00:07:12,880
Haben wir eigentlich Kobol reingeschrieben?

121
00:07:12,980 --> 00:07:13,200
Moment.

122
00:07:14,340 --> 00:07:15,060
Wie, warum nicht?

123
00:07:18,380 --> 00:07:22,140
Warum habe ich nicht Kobol in meine Bewerbung reingeschrieben?

124
00:07:24,460 --> 00:07:26,840
Wir haben doch schon mal einen Kobol-Stream gemacht.

125
00:07:27,780 --> 00:07:35,660
Da kenne ich mich besser aus als 99,99% der Weltbevölkerung mit Kobol.

126
00:07:39,660 --> 00:07:41,380
Wie, du glaubst Kobol nicht?

127
00:07:41,840 --> 00:07:42,940
Wirklich? Wie jetzt?

128
00:07:43,380 --> 00:07:43,680
Chat!

129
00:07:44,980 --> 00:07:47,620
Dante, sagst du etwa, ich lüge im Stream?

130
00:07:47,620 --> 00:07:50,660
Pass auf, ich kann dir das sogar beweisen

131
00:07:50,660 --> 00:07:53,800
Da, Kobold Stream

132
00:07:53,800 --> 00:07:54,340
Bam

133
00:07:54,340 --> 00:07:59,220
2020

134
00:07:59,220 --> 00:08:02,160
So viel hat sich seitdem in Kobold nicht getan

135
00:08:02,160 --> 00:08:03,360
Guck hier, Kobold

136
00:08:03,360 --> 00:08:06,900
Kobold Broggers in der besten Schriftart

137
00:08:06,900 --> 00:08:07,740
Ist auch noch dabei

138
00:08:07,740 --> 00:08:16,300
Richtiger Hacker Man

139
00:08:16,300 --> 00:08:22,060
kompiliert leute

140
00:08:22,060 --> 00:08:31,780
dazu der imochi support naja

141
00:08:31,780 --> 00:08:40,060
richtig herr kaman manche das habe ich nicht habe ich nicht eingetragen das ist auch so

142
00:08:40,060 --> 00:08:40,940
So ein Nischen-Ding.

143
00:08:42,720 --> 00:08:44,720
Doch, das war Weihnachts- oder Silvester-Stream.

144
00:08:45,020 --> 00:08:45,400
Kobol.

145
00:08:45,720 --> 00:08:46,540
Ja, ja, ja.

146
00:08:46,740 --> 00:08:47,100
War's.

147
00:08:48,420 --> 00:08:49,220
Übrigens, Chat.

148
00:08:50,380 --> 00:08:51,880
Ich hab jetzt...

149
00:08:51,880 --> 00:08:52,160
Ups.

150
00:08:52,900 --> 00:08:53,440
Geht das nicht?

151
00:08:59,480 --> 00:09:00,840
Ich muss mal kurz was checken.

152
00:09:02,840 --> 00:09:03,900
Wo ist IntelliJ?

153
00:09:04,060 --> 00:09:04,200
Da.

154
00:09:04,680 --> 00:09:05,300
Chat, Chat.

155
00:09:05,840 --> 00:09:07,840
Ich weiß, ihr versprecht mir nicht hinzugucken, aber...

156
00:09:07,840 --> 00:09:10,380
ich muss euch trotzdem mal kurz ausmachen.

157
00:09:10,980 --> 00:09:11,500
Ich hab mal was

158
00:09:11,500 --> 00:09:12,940
checken.

159
00:09:12,940 --> 00:09:38,180
Ähm.

160
00:09:38,180 --> 00:09:42,440
Was immer.

161
00:09:42,940 --> 00:09:44,100
Ich bin gerade verwirrt.

162
00:09:52,940 --> 00:09:53,420
Okay.

163
00:09:54,720 --> 00:09:55,880
Ich mache euch wieder an.

164
00:09:57,760 --> 00:09:57,940
So.

165
00:09:57,940 --> 00:09:58,880
Ähm.

166
00:09:59,800 --> 00:10:03,240
Chat, ich bin hochgradig verwirrt.

167
00:10:04,240 --> 00:10:05,660
Ich habe mich jetzt

168
00:10:05,660 --> 00:10:10,180
eingeloggt in der JetBrains Toolbox.

169
00:10:12,940 --> 00:10:15,900
Und ich habe immer noch keine Ultimate.

170
00:10:19,680 --> 00:10:21,720
Ich soll irgendeine Trial starten?

171
00:10:23,920 --> 00:10:26,460
Muss ich die vielleicht nochmal reinstallen?

172
00:10:30,960 --> 00:10:33,560
Ich habe das All-Desktop-Pack.

173
00:10:36,900 --> 00:10:41,020
Wir uninstallen IntelliJ Ultimate nochmal.

174
00:10:42,940 --> 00:10:44,240
Die scammen hier.

175
00:10:44,620 --> 00:10:46,800
Ist das nicht mehr da drin?

176
00:10:48,960 --> 00:10:50,440
Ist das...

177
00:10:50,440 --> 00:10:52,940
JetBrains All...

178
00:10:54,140 --> 00:10:57,060
All Products, ja.

179
00:10:58,680 --> 00:10:59,660
Da ist...

180
00:10:59,660 --> 00:11:00,360
Ist doch drin!

181
00:11:00,360 --> 00:11:00,480
Ja!

182
00:11:05,820 --> 00:11:07,200
Ich bin eingeloggt.

183
00:11:07,420 --> 00:11:08,800
Ich hab mich extra eingeloggt vorhin.

184
00:11:09,900 --> 00:11:11,160
Wir machen mal ein Update

185
00:11:11,160 --> 00:11:13,220
und danach installieren wir IntelliJ nochmal neu.

186
00:11:13,560 --> 00:11:14,820
Das hat bestimmt gebackt.

187
00:11:15,320 --> 00:11:17,480
Das hat bestimmt gebackt, weil ich die installiert

188
00:11:17,480 --> 00:11:18,960
hab, wo ich nur nicht eingeloggt war.

189
00:11:20,160 --> 00:11:21,440
Splixa, danke schön für den Sub.

190
00:11:22,200 --> 00:11:23,320
Max, synkst du eigentlich Joplin

191
00:11:23,320 --> 00:11:24,640
über die gehasste Nextcloud?

192
00:11:26,480 --> 00:11:27,400
Ne, aktuell

193
00:11:27,400 --> 00:11:28,200
synk ich das gar nicht.

194
00:11:32,860 --> 00:11:33,560
Aber wenn ich

195
00:11:33,560 --> 00:11:34,620
synken würde, dann wahrscheinlich.

196
00:11:36,620 --> 00:11:37,540
Chat, wir müssen

197
00:11:37,540 --> 00:11:38,740
uns morgen ein Video angucken.

198
00:11:38,740 --> 00:11:41,560
Ich mach das schon mal auf

199
00:11:41,560 --> 00:11:43,180
Das wurde mir empfohlen

200
00:11:43,180 --> 00:11:44,640
Wartet mal, ich muss mal kurz gucken

201
00:11:44,640 --> 00:11:48,940
Ähm

202
00:11:48,940 --> 00:11:50,520
Ich hab's in meiner YouTube History

203
00:11:50,520 --> 00:11:52,860
Das ist wieder ein Video

204
00:11:52,860 --> 00:11:54,580
Opa Max erzählt vom Krieg

205
00:11:54,580 --> 00:11:56,960
Ah, das wirst du uns morgen früh angucken

206
00:11:56,960 --> 00:11:58,360
Moment, wo hab ich's denn

207
00:11:58,360 --> 00:12:00,640
Ähm

208
00:12:08,740 --> 00:12:14,760
Hä? Wo ist das denn? Hm, ich find's net.

209
00:12:18,760 --> 00:12:23,920
Das ist ein Video, so geht Internet von 1993 oder sowas.

210
00:12:23,920 --> 00:12:38,700
Sag mal, warum hat YouTube eigentlich diese blöde Angewohnheit, Videotitel zu übersetzen?

211
00:12:38,800 --> 00:12:39,740
Das finde ich voll nervig.

212
00:12:44,260 --> 00:12:45,400
Ach, du warst auf Twitter.

213
00:12:46,020 --> 00:12:46,360
Ne, ne.

214
00:12:46,920 --> 00:12:49,660
Also die einzigen, die mich auf Twitter gebannt haben, war MSI.

215
00:12:49,660 --> 00:12:58,720
hier wdr computer club von 1999 internet das muss uns morgen mal angucken wie kommt man in

216
00:12:58,720 --> 00:13:10,400
die ins internet genau da kann ob er max wieder was vom krieg erzählen die auto translate ist

217
00:13:10,400 --> 00:13:16,060
übelst nervig übrigens leute nachher wenn ich hier fertig geschrieben bin wird wird eine runde

218
00:13:16,060 --> 00:13:20,060
gerannt wieder für zeit dass ich wieder mal regelmäßig rennen gehe hier ich

219
00:13:20,060 --> 00:13:26,260
dieses rum gehänge den ganzen tag bestimmt jetzt wieder ich habe zwei

220
00:13:26,260 --> 00:13:29,200
monate fast nichts mehr gemacht das heißt ich brauche jetzt wieder vier

221
00:13:29,200 --> 00:13:32,260
monate bis wieder auf dem stand bin von vor zwei monaten naja vielleicht

222
00:13:32,260 --> 00:13:39,580
bisschen übertrieben aber dauert immer ganze ecke länger bis man das wieder

223
00:13:39,580 --> 00:13:41,580
hat. So, jetzt installieren wir

224
00:13:41,580 --> 00:13:42,120
mal

225
00:13:42,120 --> 00:13:45,380
IntelliJ Community Edition.

226
00:13:45,580 --> 00:13:46,540
Nein, wir installieren

227
00:13:46,540 --> 00:13:49,160
IntelliJ Ultimate.

228
00:13:50,500 --> 00:13:51,340
Jetzt bin ich mal

229
00:13:51,340 --> 00:13:53,140
gespannt, ob das jetzt funktioniert.

230
00:14:09,580 --> 00:14:12,840
IntelliJ so gut.

231
00:14:13,480 --> 00:14:15,040
Die ganzen Jetbrains-Dinger sind gut.

232
00:14:16,980 --> 00:14:18,640
Also ich benutze ja hier ausgiebig

233
00:14:18,640 --> 00:14:20,460
diesen ganzen Krempel, ja, von denen.

234
00:14:21,880 --> 00:14:23,200
Und ich muss sagen,

235
00:14:23,400 --> 00:14:23,680
also

236
00:14:23,680 --> 00:14:27,040
das Einzige, wo man sich vielleicht

237
00:14:27,040 --> 00:14:28,840
ein bisschen drüber beschweren könnte, dass das Zeug

238
00:14:28,840 --> 00:14:30,680
alles rammfrisst wie sonst was,

239
00:14:32,620 --> 00:14:32,980
ist nicht

240
00:14:32,980 --> 00:14:34,880
Radfahren besser, bevor es wieder Winter wird?

241
00:14:34,940 --> 00:14:36,540
Ne, ich geh ne Runde rennen. Kein Bock.

242
00:14:37,480 --> 00:14:38,760
Kein Bock. Fahrradfahren finde ich

243
00:14:38,760 --> 00:14:40,060
lohnt sich für eine Stunde nicht.

244
00:14:42,020 --> 00:14:42,320
Aber

245
00:14:42,320 --> 00:14:44,760
viel länger, eine Stunde

246
00:14:44,760 --> 00:14:45,880
hier einmal quasi mal

247
00:14:45,880 --> 00:14:48,760
am Einlagen und so, das geht, aber

248
00:14:48,760 --> 00:14:50,800
Stunde für eine Stunde Fahrradfahren bringt nichts,

249
00:14:50,880 --> 00:14:52,840
weil ich brauche ja schon eine halbe

250
00:14:52,840 --> 00:14:54,000
Stunde, bis ich hier so mal

251
00:14:54,000 --> 00:14:56,720
aus der belebteren

252
00:14:56,720 --> 00:14:57,580
Gegend raus bin.

253
00:14:58,720 --> 00:15:00,820
Und das lohnt

254
00:15:00,820 --> 00:15:02,640
sich nicht. Also Fahrradfahren lohnt sich eigentlich

255
00:15:02,640 --> 00:15:03,640
unter zwei Stunden nicht.

256
00:15:06,540 --> 00:15:06,940
Webstorm

257
00:15:06,940 --> 00:15:08,180
fand ich jetzt auch nicht so geil.

258
00:15:08,760 --> 00:15:09,560
Das stimmt.

259
00:15:10,320 --> 00:15:12,600
Webstorm habe ich mir auch mal angeguckt und da habe ich mir gedacht,

260
00:15:12,680 --> 00:15:14,720
ne, brauche ich nicht. Bleibe ich bei Visual Studio Code.

261
00:15:15,460 --> 00:15:16,480
Unlock Ultimate?

262
00:15:17,040 --> 00:15:17,360
Warum?

263
00:15:19,640 --> 00:15:20,540
Was ist das?

264
00:15:25,980 --> 00:15:26,460
Warum?

265
00:15:27,460 --> 00:15:28,600
Ich habe ein Abo!

266
00:15:30,600 --> 00:15:31,460
Guck mal, sonst könnte ich

267
00:15:31,460 --> 00:15:33,120
ein Rider gar nicht verwenden ohne Abo.

268
00:15:34,500 --> 00:15:35,600
Ich bin auch eingeloggt.

269
00:15:35,680 --> 00:15:37,360
Ich kann jetzt nicht draufklicken, weil ich nicht Zeug

270
00:15:37,360 --> 00:15:38,120
leaken will, aber

271
00:15:38,120 --> 00:15:39,980
Moment, brauche ich...

272
00:15:39,980 --> 00:15:40,780
Hä?

273
00:15:42,720 --> 00:15:43,360
Ich habe

274
00:15:43,360 --> 00:15:45,340
ein Abo.

275
00:15:45,720 --> 00:15:47,040
Sonst könnte ich C-Line und das Ganze

276
00:15:47,040 --> 00:15:47,960
verwenden.

277
00:15:54,800 --> 00:15:55,620
Verstehe ich nicht.

278
00:15:57,580 --> 00:15:58,540
Moment, Moment, Moment.

279
00:15:58,800 --> 00:16:00,980
Leute, ich logg mich jetzt mal kurz hier auf den zweiten Rechner.

280
00:16:02,120 --> 00:16:02,700
Ich mache mal kurz hier

281
00:16:02,700 --> 00:16:04,500
mein Clipboard aus, dass ich nichts leake.

282
00:16:08,120 --> 00:16:15,000
Moment, das Clipboard, ich hab das Clipboard wieder angeschaltet, es war schon aus, lul.

283
00:16:17,620 --> 00:16:17,820
Was?

284
00:16:20,260 --> 00:16:21,860
Mein Abo ist nicht abgelaufen.

285
00:16:23,560 --> 00:16:27,140
Das verlängert sich einmal im Jahr, kostet 179 Euro oder irgendwie sowas.

286
00:16:28,560 --> 00:16:30,040
Sekunde, ich log mich mal kurz hier.

287
00:16:30,620 --> 00:16:33,080
Jet Brains Login, das kann ich euch mal sagen, was ich hab.

288
00:16:36,640 --> 00:16:37,740
Jet, was ist das?

289
00:16:38,120 --> 00:16:40,120
jetbrains.com

290
00:16:43,560 --> 00:16:45,560
Login

291
00:16:46,280 --> 00:16:48,280
Wartet mal

292
00:16:50,200 --> 00:16:55,340
Muss ich jetzt mal gucken, weil das nervt mich jetzt schon wieder. Was ist das hier? Jetbrains

293
00:17:00,360 --> 00:17:02,360
Okay, continue

294
00:17:02,720 --> 00:17:06,800
Nein, das ist das falsche, was ich hier kopiert habe. Copy Password, Login

295
00:17:06,800 --> 00:17:10,040
Ich hab All Products Pack.

296
00:17:11,740 --> 00:17:14,300
All Products Pack.

297
00:17:26,540 --> 00:17:32,540
Billing Date 19. Juni 2026 wird's wieder gebildet.

298
00:17:36,800 --> 00:17:39,960
Following products included.

299
00:17:40,120 --> 00:17:42,000
IntelliJ Idea Ultimate.

300
00:17:43,980 --> 00:17:44,200
Hä?

301
00:17:46,200 --> 00:17:46,980
Was ist das?

302
00:17:51,480 --> 00:17:53,060
Das check ich nicht.

303
00:17:53,300 --> 00:17:54,680
Ich bin doch eingeloggt.

304
00:17:57,180 --> 00:17:58,720
Ja, ich bin eingeloggt.

305
00:18:01,060 --> 00:18:02,280
Ich verstehe das nicht.

306
00:18:06,800 --> 00:18:13,300
steht sogar hier dabei guck chat ich

307
00:18:28,300 --> 00:18:32,680
kann man das kann man nicht irgendwie mal ein paar sachen unkenntlich machen

308
00:18:32,680 --> 00:18:37,180
das geht natürlich nicht das wäre zu einfach

309
00:18:43,020 --> 00:18:47,200
zack ich zeige euch das guckt hier

310
00:18:47,200 --> 00:18:52,260
kurz hier guckt dass ich nichts leake

311
00:18:57,640 --> 00:19:00,640
ja

312
00:19:02,680 --> 00:19:07,600
Guck.

313
00:19:11,600 --> 00:19:14,160
Seht ihr das?

314
00:19:15,440 --> 00:19:15,680
Also.

315
00:19:19,680 --> 00:19:23,020
Weiß nicht.

316
00:19:29,560 --> 00:19:32,000
Ich hab mich gerade erst eingeloggt in der Toolbox.

317
00:19:32,680 --> 00:19:35,200
Name Leak Max K.

318
00:19:35,360 --> 00:19:36,820
Ja, super krasser Leak.

319
00:19:39,740 --> 00:19:40,300
Ich heiß...

320
00:19:40,300 --> 00:19:41,240
Jetzt ist es raus.

321
00:19:41,360 --> 00:19:43,140
Ich heiß einfach nur K mit Nachnamen.

322
00:19:50,560 --> 00:19:52,360
Guck, und hier unten steht sogar,

323
00:19:53,040 --> 00:19:55,120
dass IntelliJ Ultimate dabei ist.

324
00:19:57,400 --> 00:19:58,340
Verstehe ich nicht.

325
00:19:58,440 --> 00:19:59,080
Was ist denn das?

326
00:20:00,620 --> 00:20:02,660
Ich muss nicht Ultimate unlocken.

327
00:20:02,680 --> 00:20:11,560
Okay, ich hab ne Idee

328
00:20:11,560 --> 00:20:13,580
Das Ding hat

329
00:20:13,580 --> 00:20:15,840
Das Ding hat das bestimmt nicht gecheckt

330
00:20:15,840 --> 00:20:18,000
Wir machen jetzt hier

331
00:20:18,000 --> 00:20:21,540
Wir uninstall

332
00:20:21,540 --> 00:20:22,080
Warte mal

333
00:20:22,080 --> 00:20:25,420
Wo speichert denn dieses

334
00:20:25,420 --> 00:20:27,580
Dieses Jetbrains Zeug

335
00:20:27,580 --> 00:20:29,240
Wo speichert denn das Infos

336
00:20:29,240 --> 00:20:30,460
IntelliJ oder so

337
00:20:30,460 --> 00:20:36,580
Wo liegen denn hier die Daten rum?

338
00:20:41,920 --> 00:20:42,960
Tja, ich weiß nicht

339
00:20:42,960 --> 00:20:46,680
Reboot bringt da auch nichts

340
00:20:46,680 --> 00:20:50,960
Sieht man irgendwie, wo hier die Daten liegen?

341
00:20:59,100 --> 00:20:59,680
Ach hier

342
00:20:59,680 --> 00:21:03,680
Local Share Jetbrain-Zubehör-Apps

343
00:21:03,680 --> 00:21:09,500
Ja, Moment, das ist die

344
00:21:09,500 --> 00:21:11,140
Aber ich suche doch die Config

345
00:21:11,140 --> 00:21:13,580
Ich suche doch die Config

346
00:21:13,580 --> 00:21:14,900
Das will ich mal alles löschen

347
00:21:14,900 --> 00:21:24,900
J, Config, Home Directory

348
00:21:24,900 --> 00:21:27,580
Das Ding hat sich wahrscheinlich

349
00:21:27,580 --> 00:21:28,660
irgendwas gemerkt

350
00:21:28,660 --> 00:21:32,420
was

351
00:21:32,420 --> 00:21:47,020
configuration directory hier linux config jet brains ok config jet brains

352
00:21:47,020 --> 00:21:48,580
wow

353
00:21:48,580 --> 00:21:50,600
Alter

354
00:21:50,600 --> 00:21:51,840
ähm

355
00:21:51,840 --> 00:21:54,080
IntelliJ

356
00:21:54,080 --> 00:21:57,860
haben wir sonst noch irgendwas

357
00:21:57,860 --> 00:21:58,900
ja

358
00:21:58,900 --> 00:22:01,100
ok

359
00:22:01,100 --> 00:22:02,380
bam

360
00:22:02,380 --> 00:22:04,980
gucken wir mal

361
00:22:04,980 --> 00:22:06,880
ja

362
00:22:06,880 --> 00:22:11,860
wir

363
00:22:11,860 --> 00:22:13,960
wir skippen im Port

364
00:22:13,960 --> 00:22:18,520
Ah, das sieht glaube ich schon besser aus

365
00:22:18,520 --> 00:22:21,120
New Project

366
00:22:21,120 --> 00:22:23,820
Activating Subscription

367
00:22:23,820 --> 00:22:24,680
Hab das gelesen

368
00:22:24,680 --> 00:22:27,420
Einfach mal die komplette

369
00:22:27,420 --> 00:22:29,700
Config gelöscht, schon geht's

370
00:22:29,700 --> 00:22:33,940
Jetzt kann man nämlich sogar hier ein Spring Boot Projekt anlegen

371
00:22:33,940 --> 00:22:36,420
Das ist das, was ich letztens gesucht habe

372
00:22:36,420 --> 00:22:38,280
Was nicht funktioniert hat

373
00:22:38,280 --> 00:22:41,280
So sieht's aus

374
00:22:41,280 --> 00:22:43,280
Pogu

375
00:22:43,280 --> 00:22:46,020
Force Champ.

376
00:22:46,840 --> 00:22:48,160
Also, dann machen wir das doch mal hier.

377
00:22:51,760 --> 00:22:53,060
Hast du was mit Kotlin gemacht?

378
00:22:53,160 --> 00:22:53,260
Ja?

379
00:22:54,960 --> 00:22:56,940
Ja, ja. Ich finde es auch

380
00:22:56,940 --> 00:22:58,900
angenehmer als Java. Zumindest das, was ich

381
00:22:58,900 --> 00:23:00,660
letztens gesehen habe. Also, ich habe ja erst

382
00:23:00,660 --> 00:23:02,200
einen Java-Stream gemacht.

383
00:23:02,840 --> 00:23:04,760
Deutlich angenehmer. Aber, also,

384
00:23:04,760 --> 00:23:06,520
der Grund, vielleicht sage ich das nochmal.

385
00:23:06,880 --> 00:23:08,740
Der Grund, warum ich ein bisschen

386
00:23:08,740 --> 00:23:10,380
Java lernen will, ist folgendes.

387
00:23:12,060 --> 00:23:13,140
Auf der Arbeit

388
00:23:13,140 --> 00:23:16,380
kann man mal so

389
00:23:16,380 --> 00:23:18,640
so eine Art Praktikum

390
00:23:18,640 --> 00:23:19,980
machen in anderen Abteilungen.

391
00:23:20,100 --> 00:23:21,960
Und ich habe gesagt, ich würde gerne mal 14 Tage

392
00:23:21,960 --> 00:23:23,040
zu unseren Entwicklern.

393
00:23:23,900 --> 00:23:24,620
Und die

394
00:23:24,620 --> 00:23:27,180
programmieren dann hauptsächlich in Java. Und ich habe mir gedacht,

395
00:23:27,600 --> 00:23:29,060
bevor ich das mache, wäre es vielleicht

396
00:23:29,060 --> 00:23:30,960
sinnvoll, wenn ich ein bisschen Ahnung von Java habe.

397
00:23:31,340 --> 00:23:33,160
Und dann sagen wir mal, ein bisschen mehr als das, was ich schon

398
00:23:33,160 --> 00:23:33,360
habe.

399
00:23:34,640 --> 00:23:37,000
Deswegen basteln wir ein paar kleine Sachen jetzt in Java.

400
00:23:37,920 --> 00:23:38,580
Und dann

401
00:23:38,580 --> 00:23:41,120
kenne ich mich damit so weit aus,

402
00:23:41,160 --> 00:23:43,020
dass ich vielleicht die ein oder anderen kleinen Sachen machen kann.

403
00:23:43,140 --> 00:23:47,760
nicht lange keine ahnung wie lange ich da hingehe 14 tage drei wochen oder so

404
00:23:47,760 --> 00:23:54,060
was ich mir an wieso

405
00:23:54,060 --> 00:24:00,620
also jetzt mal also belegen jetzt war ein projekt an

406
00:24:00,620 --> 00:24:05,140
kek weh champ

407
00:24:05,140 --> 00:24:16,600
geht repo braun man nicht wir machen wir machen maven language java group

408
00:24:16,600 --> 00:24:24,940
w punkt wo blitz group ist ja sowas wie eine namespace gier da kam unique

409
00:24:24,940 --> 00:24:29,860
identifizieren project ja sowas fast sowas in der richtung

410
00:24:29,860 --> 00:24:38,240
jdk 25 java version 25 das ist der unterschied zwischen war und ja

411
00:24:38,240 --> 00:24:43,180
ist war ist das web assembly ja ja ja wollen wir haben

412
00:24:43,180 --> 00:24:52,900
so und jetzt will ich gleich dieses dieses webstarter template hinzufügen geht das hier

413
00:24:52,900 --> 00:24:53,860
hier? Aha.

414
00:24:55,000 --> 00:24:55,960
Was? Lombok.

415
00:24:56,240 --> 00:24:56,600
Was?

416
00:24:59,100 --> 00:25:00,420
Reduce Boilerplate Code.

417
00:25:00,500 --> 00:25:02,200
Ja, das ist gut. Aber nicht übertreiben.

418
00:25:02,280 --> 00:25:03,060
Nicht übertreiben. Hier.

419
00:25:04,180 --> 00:25:05,020
Spring Web.

420
00:25:06,020 --> 00:25:07,300
Ist das das Starter?

421
00:25:11,860 --> 00:25:14,100
Mach Lombok. Warum? Ich weiß nicht mal, was das ist.

422
00:25:17,940 --> 00:25:19,160
Ist Spring Web

423
00:25:19,160 --> 00:25:20,780
das Starter?

424
00:25:20,780 --> 00:25:23,520
Nee, egal. Wir machen mal nix hier mit Dependencies.

425
00:25:24,820 --> 00:25:25,220
Start.

426
00:25:31,300 --> 00:25:31,700
Ja.

427
00:25:33,200 --> 00:25:35,060
Ich mach erst Vereinfachungssachen,

428
00:25:35,140 --> 00:25:36,400
wenn ich halbwegs checke, was es gibt.

429
00:25:36,520 --> 00:25:37,580
Gibt's hier sowas wie Websocket?

430
00:25:38,000 --> 00:25:39,240
Ah, guck mal da.

431
00:25:39,720 --> 00:25:42,780
Builds Servlet-based Websocket.

432
00:25:43,780 --> 00:25:44,700
SockJS und Stomp.

433
00:25:44,840 --> 00:25:46,520
What? Kann ich nicht einfach stinknormals

434
00:25:46,520 --> 00:25:47,800
Websocket benutzen?

435
00:25:47,800 --> 00:25:49,880
Was ist SockJS und Stomp, Alter?

436
00:25:50,780 --> 00:25:54,320
Was soll das sein?

437
00:26:00,360 --> 00:26:03,160
Okay, wir machen einfach...

438
00:26:03,160 --> 00:26:04,100
Ok, mal 356.

439
00:26:04,200 --> 00:26:05,760
Gestern gab es noch 355.

440
00:26:05,820 --> 00:26:06,360
Kann das sein?

441
00:26:08,580 --> 00:26:09,520
So, create.

442
00:26:10,520 --> 00:26:10,840
Zack.

443
00:26:13,200 --> 00:26:14,100
Da sind wir.

444
00:26:16,480 --> 00:26:17,000
Help.

445
00:26:17,460 --> 00:26:18,400
Wir brauchen Help.

446
00:26:18,400 --> 00:26:27,160
so ich würde sagen wir kopieren uns jetzt mal kurz die sache von gestern da rein wobei kopieren

447
00:26:27,160 --> 00:26:32,060
uns die sache von gestern ist doch eigentlich egal wir können wir machen das einfach machen

448
00:26:32,060 --> 00:26:40,060
das neue so als erstes muss man aber kurz von kontur umstellen und sei es und sowas editor

449
00:26:40,060 --> 00:26:56,060
und wo ist es noch mal und da von sony jet planes mono sondern heck und zwar heck 16 dann erkennt

450
00:26:56,060 --> 00:27:03,220
man ebenso was das ist glaube ich ganz gut color scheme und so das kann so bleiben da habe ich

451
00:27:03,220 --> 00:27:09,060
keine schmerzen mit ist okay genau und jetzt müssen wir hier noch in die

452
00:27:09,060 --> 00:27:14,800
pomp xml das habe ich auch gestern gelernt vom xml ist so was wie das die

453
00:27:14,800 --> 00:27:21,240
project projekt datei in dotnet wo man nur dass man unter mit dotnet

454
00:27:21,240 --> 00:27:25,480
nuget packages ordentlich installieren kann hier über die idee das habe ich

455
00:27:25,480 --> 00:27:28,560
jetzt noch nicht gefunden aber vielleicht geht es jetzt weil jetzt habe

456
00:27:28,560 --> 00:27:35,580
ich ja eine vollversion von intellij das probieren wir jetzt mal wie ging das jetzt hier nochmal

457
00:27:35,580 --> 00:27:49,620
generate die pendel sie jetzt kann man nach starter suchen okay es funktioniert immer

458
00:27:49,620 --> 00:27:57,660
anders sein dass ich da erst noch in den settings irgendwas einstellen muss dass

459
00:27:57,660 --> 00:28:04,440
man erst quasi noch mehr von repo dinge wie hieß das ding maven central hinzufügen muss

460
00:28:04,440 --> 00:28:15,300
also kann man vielleicht vielleicht die settings davon springen das ist herbst

461
00:28:15,300 --> 00:28:26,460
Da steht Add Startups

462
00:28:26,460 --> 00:28:28,320
Was wo? Add Startups?

463
00:28:30,040 --> 00:28:31,020
Ach da, ja du hast recht

464
00:28:31,020 --> 00:28:32,960
Aber trotzdem, die Suche muss doch eigentlich

465
00:28:32,960 --> 00:28:34,260
Gescheit funktionieren, hm?

466
00:28:35,760 --> 00:28:36,580
Ähm, Maven

467
00:28:36,580 --> 00:28:39,560
Ach was suche ich da?

468
00:28:39,600 --> 00:28:40,520
Ah ja, hier, guck mal

469
00:28:40,520 --> 00:28:42,540
Ah, Kataloge

470
00:28:42,540 --> 00:28:45,520
Aber Maven Central ist drin.

471
00:28:50,320 --> 00:28:50,720
Repositories.

472
00:28:53,020 --> 00:28:53,900
Ach, keine Ahnung.

473
00:28:54,060 --> 00:28:55,340
Wir kopieren das wieder von Hand.

474
00:28:55,720 --> 00:28:56,260
Aber guck mal hier.

475
00:28:56,320 --> 00:28:57,120
Ad Starters.

476
00:28:57,280 --> 00:28:57,880
Was haben wir da?

477
00:29:07,240 --> 00:29:09,540
Das ist ja schön und gut, aber...

478
00:29:09,540 --> 00:29:11,740
Daniel Lull,

479
00:29:11,820 --> 00:29:12,780
Dankeschön für den Sub.

480
00:29:15,100 --> 00:29:15,500
Ähm.

481
00:29:16,900 --> 00:29:18,120
Da wäre ich jetzt nicht schlau draus.

482
00:29:18,460 --> 00:29:20,480
Wir machen das so, wie ich das gestern gelernt habe.

483
00:29:21,300 --> 00:29:21,880
Wir gehen nach...

484
00:29:21,880 --> 00:29:22,600
War das überhaupt gestern?

485
00:29:24,320 --> 00:29:25,800
Oh, Leute. Wisst ihr was?

486
00:29:26,720 --> 00:29:28,160
Ich muss euch mal was...

487
00:29:28,160 --> 00:29:30,180
Wahrscheinlich was Ekliges

488
00:29:30,180 --> 00:29:31,620
für euch erzählen.

489
00:29:31,620 --> 00:29:33,540
Also erstens was nicht so Ekliges.

490
00:29:33,900 --> 00:29:35,180
Mir juckt der Rücken.

491
00:29:35,740 --> 00:29:36,400
Und es liegt daran,

492
00:29:37,360 --> 00:29:39,440
ich war am Donnerstag

493
00:29:39,440 --> 00:29:41,420
beim Hautarzt und hab

494
00:29:41,420 --> 00:29:43,620
einen kleinen Leberfleck rausgeschnibbelt

495
00:29:43,620 --> 00:29:45,820
bekommen. Und da ist jetzt so ein großes

496
00:29:45,820 --> 00:29:47,420
wasserdichtes Pflaster

497
00:29:47,420 --> 00:29:47,960
drauf.

498
00:29:50,420 --> 00:29:51,380
Und das juckt

499
00:29:51,380 --> 00:29:53,180
wie Sau da drunter.

500
00:29:55,160 --> 00:29:56,740
Immer wenn ich nicht dran denke,

501
00:29:57,260 --> 00:29:59,320
fängt es wieder an zu jucken. Und wenn ich dran denke, merke ich,

502
00:29:59,420 --> 00:30:01,300
dass es juckt, dann denke ich, okay, jetzt geht's mir, dann denke ich wieder

503
00:30:01,300 --> 00:30:01,740
nicht dran.

504
00:30:03,820 --> 00:30:05,000
Voll abartig.

505
00:30:05,560 --> 00:30:07,400
So, und jetzt, wo

506
00:30:07,400 --> 00:30:08,900
es vielleicht ein bisschen eklig wird,

507
00:30:09,440 --> 00:30:18,020
Der hat gesagt, ich soll nach Möglichkeit aufpassen, dass die ersten Tage gar kein Fall irgendwie Wasser dran kommt.

508
00:30:18,900 --> 00:30:24,100
Und nach Möglichkeit soll ich mich nicht waschen da am Rücken oder nicht duschen auch.

509
00:30:24,660 --> 00:30:28,240
Das heißt, ich werde jetzt wahrscheinlich bis Montag mich nicht unter das Wasser stellen.

510
00:30:28,240 --> 00:30:42,060
Das heißt, Donnerstag, ganzen Tag nicht wäschen, Freitag ganzen Tag nicht, Samstag und Sonntag, also 4,5, 5 Tage.

511
00:30:44,080 --> 00:30:47,220
Also wäschen darf ich mich, aber ich darf mich ja nur in die Dusche stellen.

512
00:30:47,340 --> 00:30:48,880
Also nur wäschen mit dem Waschlappen und so darf ich.

513
00:30:49,160 --> 00:30:53,560
Ich darf halt, muss halt nur aufpassen, dass auf meinen Rücken kein Wasser kommt.

514
00:30:53,560 --> 00:30:56,860
Also mal spätestens am Montag

515
00:30:56,860 --> 00:30:57,840
Ich muss mal

516
00:30:57,840 --> 00:30:59,480
Ich muss aber auf jeden Fall mal

517
00:30:59,480 --> 00:31:02,280
Mein Kopf unter den Wasserhahn oder so

518
00:31:02,280 --> 00:31:03,760
Weil mir juckt der Kopf schon

519
00:31:03,760 --> 00:31:07,260
Ja

520
00:31:07,260 --> 00:31:09,960
Was man nicht alles macht für die Gesundheit

521
00:31:09,960 --> 00:31:12,620
So hier also das brauchen wir

522
00:31:12,620 --> 00:31:13,240
Das haben wir ja gemerkt

523
00:31:13,240 --> 00:31:15,340
So kann man das einfügen

524
00:31:15,340 --> 00:31:16,360
Im Prinzip

525
00:31:16,360 --> 00:31:20,220
Für die ganzen Java Kenner unter euch

526
00:31:20,220 --> 00:31:22,580
Ich zeig euch jetzt mal wie das in .NET funktioniert

527
00:31:22,580 --> 00:31:30,540
Nur, dass ihr das einfach mal gesehen habt, weil ich finde, das ist in Rider viel schöner gelöst.

528
00:31:34,160 --> 00:31:37,820
So, machen wir mal hier irgendein Projekt auf, ein .NET Projekt.

529
00:31:40,420 --> 00:31:41,640
Äh, Don't Send.

530
00:31:41,860 --> 00:31:45,380
Okay, die Schriftart ist vielleicht minimal zu groß, ja.

531
00:31:46,980 --> 00:31:48,420
Ja, aber dann sieht man wenigstens was.

532
00:31:48,780 --> 00:31:51,260
Guck, dann geht man hier hin, sagt Nougat.

533
00:31:52,580 --> 00:31:54,100
Hat dann hier so eine Suche.

534
00:31:54,440 --> 00:31:56,560
Und dann sucht man zum Beispiel hier irgendwie nach

535
00:31:56,560 --> 00:31:59,140
Spectre Console.

536
00:31:59,360 --> 00:32:00,640
Das ist so was, wo man dort nicht die

537
00:32:00,640 --> 00:32:02,480
Konsole...

538
00:32:02,480 --> 00:32:04,080
Machen wir Preview-Version aus.

539
00:32:04,740 --> 00:32:06,300
Und dann sage ich hier Spectre Console

540
00:32:06,300 --> 00:32:08,620
hinzufügen zum Projekt. Install. Fertig.

541
00:32:10,900 --> 00:32:12,440
So. Und jetzt kann ich hier

542
00:32:12,440 --> 00:32:14,580
Spectre Console

543
00:32:14,580 --> 00:32:15,780
verwenden. Das ist alles.

544
00:32:20,620 --> 00:32:21,860
Also da muss ich sagen,

545
00:32:22,580 --> 00:32:30,380
das ist mir deutlich lieber als dieses gebastelt hier mit der prom xml moment

546
00:32:30,380 --> 00:32:35,580
wo musste man jetzt noch mal klicken dass er das installiert hier oder was

547
00:32:35,580 --> 00:32:39,980
jetzt passiert monka ist hier oben muss ich klicken

548
00:32:39,980 --> 00:32:47,420
zink maven changes ok so jetzt haben wir jetzt können wir unsere web anwendungen

549
00:32:47,420 --> 00:32:51,860
programmieren jetzt gehen wir noch einmal in das projekt ach so dass er

550
00:32:51,860 --> 00:33:06,140
immer da das projekt von gestern repos kqs service und wir kopieren und smart kurz controllers

551
00:33:06,140 --> 00:33:12,080
controller moment moment

552
00:33:12,080 --> 00:33:12,220
Moment.

553
00:33:13,180 --> 00:33:14,020
Das ist...

554
00:33:14,020 --> 00:33:16,680
Das ist das Tottenham-Projekt.

555
00:33:17,580 --> 00:33:18,720
Spring Boot Champ.

556
00:33:19,980 --> 00:33:20,120
Da.

557
00:33:21,760 --> 00:33:22,360
Source.

558
00:33:23,280 --> 00:33:23,840
Main.

559
00:33:24,520 --> 00:33:24,960
Java.

560
00:33:25,260 --> 00:33:25,460
Cake.

561
00:33:25,560 --> 00:33:25,740
Alter.

562
00:33:25,880 --> 00:33:28,240
What the...

563
00:33:28,240 --> 00:33:30,100
Warum ist denn diese Fahrt so lang?

564
00:33:33,980 --> 00:33:36,540
Also in Ryder funktioniert das mit Nuga ziemlich gut.

565
00:33:39,760 --> 00:33:41,100
Wie man sonst 3000...

566
00:33:41,100 --> 00:33:41,640
Stimmt eigentlich.

567
00:33:41,640 --> 00:33:44,500
Wenn das einfach funktionieren würde, dann wäre das ja easy.

568
00:33:45,480 --> 00:33:46,880
So, das brauchen wir jetzt hier.

569
00:33:47,160 --> 00:33:52,220
Ich will mir einfach nochmal rauskopieren, wie wir das gestern gemacht haben, dass man einen Restendpunkt hatte.

570
00:33:53,780 --> 00:33:56,580
Wohin habe ich das kopiert? In diese Application rein.

571
00:33:56,820 --> 00:33:57,600
Also quasi so.

572
00:33:58,460 --> 00:34:00,020
Ups, ja, geh mal weg.

573
00:34:03,320 --> 00:34:05,060
Gibt es sowas wie Auto-Format?

574
00:34:05,300 --> 00:34:07,300
Format? Reformat-Code? Ja, wunderbar.

575
00:34:07,440 --> 00:34:09,300
Get Mapping. Zack. Import.

576
00:34:09,300 --> 00:34:11,000
Sehr schön

577
00:34:11,000 --> 00:34:12,840
Producers Media Type

578
00:34:12,840 --> 00:34:13,880
Images, ne

579
00:34:13,880 --> 00:34:16,700
Producers Media Type, gibt es JSON?

580
00:34:18,000 --> 00:34:18,220
Ne

581
00:34:18,220 --> 00:34:20,240
Dann lassen wir das

582
00:34:20,240 --> 00:34:21,640
Slash

583
00:34:21,640 --> 00:34:25,020
Unter Slash wollen wir eigentlich jetzt eine Index HTML

584
00:34:25,020 --> 00:34:25,880
Ausliefern

585
00:34:25,880 --> 00:34:29,180
Gleich mal checken, wie das funzt mit einer Index HTML

586
00:34:29,180 --> 00:34:30,320
Übrigens und

587
00:34:30,320 --> 00:34:31,740
Ich hab gelesen

588
00:34:31,740 --> 00:34:33,640
Dass

589
00:34:33,640 --> 00:34:36,420
Es ist irgendwie verpönt, aber gefühlt macht es jeder

590
00:34:36,420 --> 00:34:38,160
Die meisten Leute schreiben hier einfach

591
00:34:38,160 --> 00:34:40,020
an ihre Methoden ThrowsException dran

592
00:34:40,020 --> 00:34:42,040
und somit bist du fein raus und kannst

593
00:34:42,040 --> 00:34:42,880
verwenden, was du willst.

594
00:34:43,660 --> 00:34:45,920
Deswegen babbeln bei allen Java-Anwendungen auch immer

595
00:34:45,920 --> 00:34:47,460
30.000 Exceptions hoch.

596
00:34:49,040 --> 00:34:50,360
Habe ich das richtig verstanden,

597
00:34:50,480 --> 00:34:52,260
Chat? Java-Kenners

598
00:34:52,260 --> 00:34:53,920
unter uns? Einfach

599
00:34:53,920 --> 00:34:55,460
ThrowsException überall hinschreiben.

600
00:34:55,460 --> 00:35:08,240
Ein String kommt da zurück.

601
00:35:11,040 --> 00:35:21,260
So, und jetzt ist die Preisfrage, wie kriegen wir jetzt eine HTML-Seite hier zurück?

602
00:35:21,260 --> 00:35:32,120
das geht bestimmt also ich muss bestimmt nicht sagen file read all lines oder sowas oder das

603
00:35:32,120 --> 00:35:46,060
geht bestimmt besser ok spring boot return index html display index per using controller das ist

604
00:35:46,060 --> 00:35:55,720
doch schon mal als response body das habe ich jetzt so oft was ist der unterschied

605
00:35:55,720 --> 00:36:05,500
zur request mapping versus get mapping difference between get mapping und request mapping ach so da

606
00:36:05,500 --> 00:36:13,180
kann man was anderes hinschreiben als ach so ok get mapping ist quasi das gleiche wie request

607
00:36:13,180 --> 00:36:19,060
mapping method get. Okay, ja gut.

608
00:36:23,620 --> 00:36:27,820
Kannst du die Schriftgröße nach oben stellen? Hier ist zu klein. Ja, kannst du ein bisschen

609
00:36:27,820 --> 00:36:39,580
größer machen. Da machen wir 18, das wird aber schon ganz schön fett jetzt. So ist gut, oder?

610
00:36:39,580 --> 00:36:44,260
So, wie returne ich denn?

611
00:36:49,260 --> 00:36:50,240
Display Index,

612
00:36:50,500 --> 00:36:52,360
HTML Page Using, Add Controller.

613
00:36:52,840 --> 00:36:54,660
Ah, Moment, das muss ich noch machen.

614
00:36:55,460 --> 00:36:55,800
Äh,

615
00:36:57,080 --> 00:36:58,300
Add Rest Controller.

616
00:36:58,960 --> 00:36:59,760
Rest Controller?

617
00:37:02,980 --> 00:37:03,620
Wirklich?

618
00:37:04,400 --> 00:37:06,060
Ich will eigentlich kein Rest Controller.

619
00:37:06,760 --> 00:37:07,600
Ich will Controller.

620
00:37:07,600 --> 00:37:12,740
Weil ich will ja eigentlich gar keinen Rest-Endpunkt

621
00:37:12,740 --> 00:37:14,800
Ich will HTML

622
00:37:14,800 --> 00:37:16,140
Soll ich returnen

623
00:37:16,140 --> 00:37:18,660
Übrigens

624
00:37:18,660 --> 00:37:20,660
Das ist in .NET auch deutlich einfacher

625
00:37:20,660 --> 00:37:22,660
Da würde ich einfach sagen

626
00:37:22,660 --> 00:37:24,740
Use File Server

627
00:37:24,740 --> 00:37:26,540
Ich denke mal

628
00:37:26,540 --> 00:37:28,740
Sowas gibt es in Spring nicht

629
00:37:28,740 --> 00:37:30,480
Da würde ich sagen, use File Server

630
00:37:30,480 --> 00:37:33,420
Und dann wird alles gesurft, was in www-Root liegt

631
00:37:37,600 --> 00:37:48,100
die move response von mir controller aber muss einfach nur index was man moment

632
00:38:07,600 --> 00:38:16,580
ok also rest controller ist schon mal verkehrt ich will auf jeden fall controller weil ich

633
00:38:16,580 --> 00:38:23,920
will kein jason gedöns machen so und jetzt sage ich index okay dann sagt man einfach nur return

634
00:38:23,920 --> 00:38:34,660
index jsp ich will html return okay schauen wir mal ob das jetzt von ich habe keine ahnung

635
00:38:34,660 --> 00:38:43,480
und etwas index aber riebkurs mapping slash klinger guter kann wobei eigentlich wollen

636
00:38:43,480 --> 00:38:49,880
wir mehr ping haben get mapping slash so return index aber der return doch jetzt

637
00:38:49,880 --> 00:38:54,380
den string index und nicht etwa einen ich habe ja gar kein index html

638
00:38:54,380 --> 00:38:59,560
machen wir mal ein ordner hier sauce

639
00:39:04,660 --> 00:39:17,500
directory www root ich nenne es jetzt einfach mal so ja so und das war hier html file index.html

640
00:39:17,500 --> 00:39:31,600
kecke unter resources ach so nee oder gucken wir mal wir gucken mal was jetzt passiert wenn ich

641
00:39:31,600 --> 00:39:39,840
das hier starte shift f10

642
00:39:45,760 --> 00:39:53,820
80 80 ok aber ich starte mal hier chrome localhost 80 80

643
00:40:01,600 --> 00:40:05,600
Sollte jetzt nicht zumindest irgendwas da zurückkommen?

644
00:40:10,420 --> 00:40:11,660
Cannot resolve.

645
00:40:13,660 --> 00:40:16,540
Ja, aber der sollte doch jetzt zumindest mal einen String returnen, oder?

646
00:40:18,220 --> 00:40:19,300
Weil als mindestens.

647
00:40:21,600 --> 00:40:25,580
Aber doch, der sollte jetzt zumindest mal einen Text returnen, oder?

648
00:40:31,600 --> 00:40:42,420
Okay, vielleicht, wenn ich das so mache, dann...

649
00:40:42,420 --> 00:40:44,640
Das ist der Unterschied zwischen REST-Controller und...

650
00:40:44,640 --> 00:40:46,260
Ach so!

651
00:40:50,220 --> 00:40:51,420
Ach so!

652
00:40:52,640 --> 00:40:56,080
Das heißt, REST-Controller macht automatisch JSON-Gedöns

653
00:40:56,080 --> 00:40:59,320
und Controller versucht, eine HTML-Datei zu finden.

654
00:41:01,600 --> 00:41:03,640
Achso, okay.

655
00:41:04,460 --> 00:41:05,080
Der sagt hier,

656
00:41:05,420 --> 00:41:08,300
Cannot resolve MVC-View-Index.

657
00:41:08,460 --> 00:41:09,800
Guck mal nochmal, was IntelliJ

658
00:41:09,800 --> 00:41:10,640
da vorschlägt.

659
00:41:13,300 --> 00:41:13,600
Ja, ne.

660
00:41:13,760 --> 00:41:15,320
Beheben kann er das auch nicht.

661
00:41:22,120 --> 00:41:24,200
Wo mussten denn die Views hin?

662
00:41:29,980 --> 00:41:31,100
Index HTML.

663
00:41:31,600 --> 00:41:37,180
in resources static okay

664
00:41:44,680 --> 00:41:48,840
der hat hier eine extra my app structure ist das ist aber anscheinend verkehrt

665
00:42:01,600 --> 00:42:07,420
Ich habe jetzt nicht gecheckt, woher der weiß, in welchem Ordner die Dateien liegen.

666
00:42:13,420 --> 00:42:13,980
Okay.

667
00:42:14,780 --> 00:42:18,620
Spring boot where to put index.html.

668
00:42:19,140 --> 00:42:19,740
Hör mal noch richtig.

669
00:42:21,140 --> 00:42:23,680
Proper location for HTML files.

670
00:42:23,680 --> 00:42:43,740
source main resources public aha ok static static klingt gut static also die sources static

671
00:42:43,740 --> 00:42:57,820
Oh jetzt haben wir krass Refactored, Alter.

672
00:42:57,820 --> 00:42:59,860
Wahrscheinlich muss ich auch index.html schreiben, kann das sein?

673
00:42:59,860 --> 00:43:08,560
Ha!

674
00:43:09,220 --> 00:43:10,480
Kunst!

675
00:43:12,480 --> 00:43:15,960
Okay, das ist zwar ein bisschen Magic.

676
00:43:17,280 --> 00:43:17,760
Magic.

677
00:43:17,760 --> 00:43:17,940
Magic.

678
00:43:21,320 --> 00:43:23,520
Aber wenn man weiß, wie es geht,

679
00:43:23,820 --> 00:43:25,340
dann...

680
00:43:25,340 --> 00:43:26,380
Production ready, ja.

681
00:43:26,900 --> 00:43:27,640
Let's ship it.

682
00:43:28,620 --> 00:43:29,300
0W.

683
00:43:29,860 --> 00:43:35,300
Chat, warum reloadet er die Seite nicht?

684
00:43:36,400 --> 00:43:36,940
Ist sie irgendwie

685
00:43:36,940 --> 00:43:39,300
embedded oder so? Moment, ich muss

686
00:43:39,300 --> 00:43:40,400
das neu starten,

687
00:43:40,920 --> 00:43:42,680
wenn sich der Inhalt von HTML ändert?

688
00:43:47,680 --> 00:43:48,240
Ja,

689
00:43:48,440 --> 00:43:48,840
naja,

690
00:43:49,520 --> 00:43:50,720
das ist vielleicht ein bisschen

691
00:43:50,720 --> 00:43:55,040
doof,

692
00:43:55,440 --> 00:43:57,040
aber gut, ist halt so, ne?

693
00:43:59,860 --> 00:44:08,740
gibt schlimmeres macht nichts das macht nichts das meili hallo das macht nichts das ist nicht

694
00:44:08,740 --> 00:44:13,060
das was ich weiß ich wollte mal gucken wie man hier html seiten wie man html sachen ausliefert

695
00:44:13,060 --> 00:44:25,120
also dann gucken wir doch mal wie wir einen jason endpunkt machen dann muss ich bestimmt

696
00:44:25,120 --> 00:44:33,060
eine neue Klasse anlegen. So, nennen wir das mal hier... Moment, gibt es hier etwas wie Generate und dann

697
00:44:33,060 --> 00:44:47,860
Controller oder sowas? Spring Component... Aha, aha, aha, aha, guck mal da. Äh, tja. Ähm... Jason Controller.

698
00:44:47,860 --> 00:45:03,400
controller ok request mapping slash api so machen wir einfach mal aber wir wollen get

699
00:45:03,400 --> 00:45:12,280
hier so rest controller hat eine mapping und da wollen wir jetzt so was hier haben

700
00:45:12,280 --> 00:45:21,360
So und da wollen wir jetzt mal eine JSON-Response raushauen

701
00:45:21,360 --> 00:45:26,260
Wie hauen wir da jetzt eine JSON-Response raus?

702
00:45:26,660 --> 00:45:27,680
Was passiert denn jetzt?

703
00:45:27,920 --> 00:45:30,040
Warte mal, Shift-F10 für Restart

704
00:45:30,040 --> 00:45:34,320
Was passiert denn jetzt, wenn ich hier mal einfach hinkörle?

705
00:45:35,220 --> 00:45:36,400
Local Host

706
00:45:36,400 --> 00:45:38,840
Ja und jetzt auf API

707
00:45:38,840 --> 00:45:41,280
Inexact, ok da kommt der Text zurück

708
00:45:41,280 --> 00:45:44,360
Und jetzt will ich Jason-Kram zurückgeben.

709
00:45:47,840 --> 00:45:49,780
Hier, da gab es doch hier Response.

710
00:45:52,300 --> 00:45:54,140
Response Body, was auch immer das macht.

711
00:45:54,780 --> 00:45:56,540
Ach, das war ja eine Kombination aus.

712
00:45:58,760 --> 00:46:00,260
Okay, das müssen wir uns mal angucken.

713
00:46:01,040 --> 00:46:05,660
Spring Boot Return Jason Rest Controller.

714
00:46:06,340 --> 00:46:09,420
Man kann doch bestimmt irgendeine Datei serialisieren lassen.

715
00:46:09,420 --> 00:46:13,960
Also dass man jetzt zum Beispiel sagt, ähm, machen wir nochmal hier was.

716
00:46:14,080 --> 00:46:17,940
Class, kann man das automatisch irgendwie generaten lassen?

717
00:46:18,200 --> 00:46:21,320
Class, okay, Class, blub.

718
00:46:22,540 --> 00:46:24,520
Äh, wie sieht denn das richtig aus in Java, so?

719
00:46:26,040 --> 00:46:29,940
Äh, äh, okay, wie macht man dann Property in Java?

720
00:46:30,480 --> 00:46:32,980
Wir machen, wir machen eine Public, Public Variable, okay.

721
00:46:33,780 --> 00:46:38,080
Ähm, hier, int, 0 gleich 5.

722
00:46:38,080 --> 00:46:51,960
beste und jetzt sage ich hier return new blub und das jetzt

723
00:46:51,960 --> 00:47:04,080
ne club cannot be converted ok dann habe ich keine ahnung wie kannst

724
00:47:04,080 --> 00:47:17,640
ja einfach ein object geht das kann ich so was hier sagen objekt oder so dann

725
00:47:17,640 --> 00:47:20,900
geht das

726
00:47:34,080 --> 00:47:48,180
status 406 not acceptable warum nicht was was will er von mir was wir sagen

727
00:47:48,180 --> 00:47:58,500
das ist nicht acceptable objekt oder dass das kann so nicht sein

728
00:47:58,500 --> 00:48:07,740
das ist noch acceptable weil ich weiß was plop type ist aber da oben steht es doch

729
00:48:07,740 --> 00:48:15,900
okay das returning jason os responsible das wir lesen uns einfach mal durch wie das funst

730
00:48:15,900 --> 00:48:20,500
jason objekt muss man da schreiben

731
00:48:20,500 --> 00:48:27,180
das was anderes

732
00:48:27,180 --> 00:48:32,940
der ist noch nie zu explizit konvertiert

733
00:48:32,940 --> 00:48:38,180
return of pojo das mache ich doch

734
00:49:02,940 --> 00:49:10,140
keine ahnung was

735
00:49:10,140 --> 00:49:18,420
der törner ist von den jason formalia zeigt zeigt her

736
00:49:18,420 --> 00:49:28,840
user response ok great rest controller wieso mache ich doch genau so mache ich das

737
00:49:28,840 --> 00:49:30,960
das? Ah!

738
00:49:31,460 --> 00:49:32,920
Produces Application

739
00:49:32,920 --> 00:49:34,640
JSON Value muss da hin.

740
00:49:37,900 --> 00:49:38,580
Aha!

741
00:49:54,200 --> 00:49:54,840
Okay.

742
00:49:55,960 --> 00:49:58,000
Das bringt jetzt Wasser, oder wie?

743
00:49:58,840 --> 00:50:01,520
Ist immer noch, immer noch.

744
00:50:01,780 --> 00:50:03,560
Oh, jetzt haben wir einen Internal Server Error.

745
00:50:05,800 --> 00:50:07,360
Muss das nicht Path sein?

746
00:50:07,760 --> 00:50:08,040
Anstatt

747
00:50:08,040 --> 00:50:16,520
Internal Server Error.

748
00:50:22,000 --> 00:50:23,420
Aber hier machen sie Value.

749
00:50:26,260 --> 00:50:28,560
Ja, das check ich jetzt auch nicht so genau.

750
00:50:28,840 --> 00:50:34,640
Ach nee.

751
00:50:37,740 --> 00:50:39,680
Moment, aber das hat doch funktioniert,

752
00:50:39,840 --> 00:50:41,340
als ich hier einen String returned habe.

753
00:50:42,700 --> 00:50:43,960
Da ging das doch noch.

754
00:50:50,520 --> 00:50:51,880
Ja, wenn ich den String return,

755
00:50:51,980 --> 00:50:53,240
dann tut es doch.

756
00:50:54,100 --> 00:50:54,920
Was hat er denn?

757
00:50:58,840 --> 00:51:00,080
Was hat er denn?

758
00:51:01,080 --> 00:51:04,660
Ärgert den vielleicht, dass...

759
00:51:04,660 --> 00:51:08,380
Okay, dann nehmen wir doch mal von ihm den Kram.

760
00:51:10,000 --> 00:51:10,520
Public.

761
00:51:14,760 --> 00:51:16,400
Kopiere das jetzt einfach mal.

762
00:51:20,860 --> 00:51:21,840
Get Name.

763
00:51:23,940 --> 00:51:24,500
Okay.

764
00:51:25,300 --> 00:51:26,160
Eternal Sister.

765
00:51:26,560 --> 00:51:28,020
So, so bleibt es jetzt.

766
00:51:28,840 --> 00:51:34,160
Benutz mal Record, mach ich gleich, sobald es funktioniert.

767
00:51:37,340 --> 00:51:38,360
Jetzt geht's!

768
00:51:38,880 --> 00:51:43,100
Das war, weil die Klasse kein Property-Zeug hatte.

769
00:51:44,760 --> 00:51:47,360
Ach so, okay, jetzt funktioniert's.

770
00:51:48,580 --> 00:51:50,580
Ist aber doch eigentlich ganz gut gelöst.

771
00:51:51,580 --> 00:51:53,760
Ah, oh, da liegt es an dem leeren Konstruktor.

772
00:51:54,000 --> 00:51:57,760
Ist das nicht implizit default, ein leerer Konstruktor?

773
00:51:58,840 --> 00:52:02,200
Doch ist es.

774
00:52:03,040 --> 00:52:03,440
Ist es.

775
00:52:04,340 --> 00:52:05,800
Das lag hier, dass die Klasse

776
00:52:05,800 --> 00:52:07,720
nichts beinhaltet hat.

777
00:52:09,960 --> 00:52:10,400
Okay.

778
00:52:11,460 --> 00:52:12,340
Nutz mal Record.

779
00:52:12,460 --> 00:52:13,260
Das gibt es auch.

780
00:52:17,940 --> 00:52:19,340
Also quasi Record.

781
00:52:19,340 --> 00:52:21,100
Das erinnert mich tatsächlich

782
00:52:21,100 --> 00:52:22,420
ein bisschen an C Sharp dann.

783
00:52:22,960 --> 00:52:23,460
Hier, blub.

784
00:52:25,960 --> 00:52:27,300
String Name.

785
00:52:27,880 --> 00:52:28,420
Zum Beispiel.

786
00:52:28,840 --> 00:52:32,920
Hä?

787
00:52:34,420 --> 00:52:34,980
Äh.

788
00:52:44,180 --> 00:52:45,140
But why?

789
00:52:48,540 --> 00:52:50,400
Das ist doch irgendwie überflüssig.

790
00:52:51,440 --> 00:52:52,920
Wenn man es leer haben will.

791
00:52:53,340 --> 00:52:54,680
Weil Java, okay, verstehe.

792
00:52:56,900 --> 00:52:57,460
Oh.

793
00:52:58,840 --> 00:53:01,200
Plop in record. Plop cannot.

794
00:53:01,500 --> 00:53:01,700
Was?

795
00:53:03,860 --> 00:53:05,320
Plop cannot be applied

796
00:53:05,320 --> 00:53:06,300
to given types.

797
00:53:09,020 --> 00:53:09,540
Was?

798
00:53:11,940 --> 00:53:13,700
Ach, ich muss was angeben.

799
00:53:14,140 --> 00:53:14,520
Ach so.

800
00:53:15,660 --> 00:53:15,920
Ja.

801
00:53:16,920 --> 00:53:17,880
Cute Chat.

802
00:53:21,840 --> 00:53:22,560
Macht Sinn.

803
00:53:23,740 --> 00:53:24,120
Punz.

804
00:53:25,680 --> 00:53:27,880
Ganz ehrlich, ich finde es gar nicht so schlecht.

805
00:53:28,840 --> 00:53:32,680
Man könnte jetzt ein bisschen drüber meckern, dass das alles ein bisschen verbose ist und so.

806
00:53:33,680 --> 00:53:36,680
Ich kann mir nicht merken, ob es verbose oder verbos heißt.

807
00:53:37,720 --> 00:53:40,600
Aber das geht doch eigentlich.

808
00:53:40,880 --> 00:53:42,460
Das ist doch eigentlich ganz gut gemacht.

809
00:53:45,460 --> 00:53:49,460
Also so Boilerplate hält sich doch bis jetzt so halbwegs in Grenzen.

810
00:53:56,160 --> 00:53:57,360
Das ist doch eigentlich ganz gut.

811
00:53:57,360 --> 00:53:59,640
Also, jetzt wissen wir schon mal, wie man

812
00:53:59,640 --> 00:54:02,080
JSON-Objects serialized.

813
00:54:04,420 --> 00:54:05,440
Gut, dann

814
00:54:05,440 --> 00:54:07,940
machen wir mal das, was ich eigentlich vorhatte.

815
00:54:08,300 --> 00:54:08,700
Websocket.

816
00:54:10,860 --> 00:54:12,440
Da bin ich jetzt ja mal gespannt.

817
00:54:13,460 --> 00:54:14,020
Gibt es einen Grund,

818
00:54:14,160 --> 00:54:15,420
warum du das lernst? Ja.

819
00:54:15,900 --> 00:54:17,440
Chat, ruckelt der Stream bei euch?

820
00:54:18,180 --> 00:54:19,800
Ich sehe den, der Viewer-Account ist

821
00:54:19,800 --> 00:54:21,080
krass am rumspringen.

822
00:54:22,340 --> 00:54:23,760
Und das ist meistens

823
00:54:23,760 --> 00:54:26,040
ein Zeichen

824
00:54:26,040 --> 00:54:28,040
für...

825
00:54:31,100 --> 00:54:32,240
Der View-Account

826
00:54:32,240 --> 00:54:33,620
springt bei mir immer um 50.

827
00:54:35,740 --> 00:54:36,400
Alles gut.

828
00:54:36,480 --> 00:54:37,080
Ja, es ist auch keine

829
00:54:37,080 --> 00:54:38,740
Frames gedroppt.

830
00:54:42,100 --> 00:54:43,980
Man weiß eh nicht, was er für Schmerzen hat.

831
00:54:45,220 --> 00:54:46,240
Macht Twitch wieder komische

832
00:54:46,240 --> 00:54:46,560
Sachen.

833
00:54:53,700 --> 00:54:54,340
Ja gut.

834
00:54:54,340 --> 00:54:57,340
So, dann können wir das machen, was ich eigentlich ursprünglich vorhatte.

835
00:55:00,160 --> 00:55:02,480
Wir gucken mal, wie man Websockets macht.

836
00:55:03,460 --> 00:55:05,340
Wollen wir mal? Komm, wir fragen mal ChatGPT.

837
00:55:07,860 --> 00:55:17,960
Ähm, Java Spring Boot Minimal Websocket, Socket Example with JS Client.

838
00:55:18,560 --> 00:55:21,980
So, schauen wir mal, ob das jetzt sich Mist ausdenkt oder nicht.

839
00:55:21,980 --> 00:55:25,460
Spring Boot Data Websocket

840
00:55:25,460 --> 00:55:26,660
Das klingt schon mal sinnvoll

841
00:55:26,660 --> 00:55:31,620
Websocket Configuration

842
00:55:31,620 --> 00:55:32,420
Ad Handler

843
00:55:32,420 --> 00:55:34,220
Kami, danke für den Sub

844
00:55:34,220 --> 00:55:36,160
Websocket Handler

845
00:55:36,160 --> 00:55:46,140
Ich glaube nicht, dass das funktioniert, oder?

846
00:55:47,280 --> 00:55:48,580
Meine des Funds, was ist das da?

847
00:55:51,980 --> 00:55:54,860
was es da generiert hat.

848
00:56:04,280 --> 00:56:05,360
Gott, vier Videos.

849
00:56:05,500 --> 00:56:06,920
Boah, Alter, das ist ja schon so lange her.

850
00:56:11,580 --> 00:56:12,520
So, Websocket.

851
00:56:12,640 --> 00:56:15,520
Also, das heißt, wir brauchen jetzt erst einmal hier Websocket.

852
00:56:17,520 --> 00:56:19,000
Also, Starter Web.

853
00:56:19,860 --> 00:56:21,820
Dann wollen wir jetzt...

854
00:56:21,820 --> 00:56:23,420
Ne, wir müssen wieder in Maven Central.

855
00:56:24,200 --> 00:56:25,140
Maven Central.

856
00:56:27,140 --> 00:56:28,940
Und jetzt Websocket.

857
00:56:32,100 --> 00:56:32,780
Starter.

858
00:56:33,420 --> 00:56:34,060
Starter.

859
00:56:36,220 --> 00:56:38,000
Spring Boot Starter Websocket.

860
00:56:41,260 --> 00:56:43,680
Also das ist jetzt nicht super eklig.

861
00:56:43,680 --> 00:56:44,840
Ne, das ist falsch.

862
00:56:45,440 --> 00:56:46,860
Das ist jetzt nicht super eklig.

863
00:56:47,620 --> 00:56:49,780
Mit diesem XML gepaste.

864
00:56:50,360 --> 00:56:51,260
Aber ganz ehrlich.

865
00:56:51,260 --> 00:56:53,380
die Nougat Sache, die ich euch gezeigt habe,

866
00:56:53,420 --> 00:56:54,120
war schon besser, oder?

867
00:56:58,780 --> 00:56:59,220
So.

868
00:57:00,280 --> 00:57:01,420
Jetzt haben wir hier

869
00:57:01,420 --> 00:57:03,580
den können wir mal

870
00:57:03,580 --> 00:57:04,620
kleiner machen.

871
00:57:05,220 --> 00:57:07,040
Jetzt haben wir hier die Möglichkeit, unser

872
00:57:07,040 --> 00:57:09,260
wollen wir mal gucken, ob das, was

873
00:57:09,260 --> 00:57:11,480
ChatGPT sagt, ob das sinnvoll ist.

874
00:57:12,240 --> 00:57:13,360
Weil das haben wir gemacht.

875
00:57:18,000 --> 00:57:18,700
Ne, mit

876
00:57:18,700 --> 00:57:20,140
AddStarter habe ich nichts gefunden.

877
00:57:20,140 --> 00:57:21,960
guck, warte mal

878
00:57:21,960 --> 00:57:23,480
Add Starters

879
00:57:23,480 --> 00:57:25,640
da habe ich, wenn ich, ich sage

880
00:57:25,640 --> 00:57:27,760
und wenn ich nach Starter suche, findet er aber nichts

881
00:57:27,760 --> 00:57:29,940
obwohl ich Add Starters

882
00:57:29,940 --> 00:57:30,700
gemacht habe

883
00:57:30,700 --> 00:57:33,740
oder

884
00:57:33,740 --> 00:57:35,800
ist WebSocket, ach das

885
00:57:35,800 --> 00:57:37,620
ist das, die haben einfach nur das Ding nicht

886
00:57:37,620 --> 00:57:38,600
Starter genannt

887
00:57:38,600 --> 00:57:41,600
das sind alles Starter

888
00:57:41,600 --> 00:57:43,680
deswegen haben die den Namen Starter

889
00:57:43,680 --> 00:57:45,320
weggelassen, achso

890
00:57:45,320 --> 00:57:47,640
SQLite, wie gibt es nicht

891
00:57:47,640 --> 00:57:48,460
gibt es Postgres

892
00:57:48,460 --> 00:58:02,500
ok jetzt haben wir websocket zeusch ich suche noch mal hier minimal websocket example spring boot

893
00:58:14,020 --> 00:58:14,920
kleon wieder

894
00:58:18,460 --> 00:58:21,540
Ja, ja, bla bla bla bla bla bla.

895
00:58:21,620 --> 00:58:22,640
Stomp. Nein, nein, nein.

896
00:58:22,720 --> 00:58:24,860
Ich will das Simpelste haben überhaupt.

897
00:58:25,200 --> 00:58:26,360
Ich weiß nicht mehr, was Stomp ist.

898
00:58:30,340 --> 00:58:31,940
Jetzt macht es aber kompliziert.

899
00:58:34,280 --> 00:58:34,820
Bonk AS.

900
00:58:36,940 --> 00:58:38,120
Was bin ich hier sehend?

901
00:58:39,320 --> 00:58:41,580
Gibt es nicht irgendwie so ein kleines, kurzes,

902
00:58:42,680 --> 00:58:44,000
prägnantes Beispiel?

903
00:58:45,300 --> 00:58:46,620
Ist ein Websocket-Protokoll.

904
00:58:46,620 --> 00:58:48,580
Ich brauche einfach nur Text darüber, gut ist.

905
00:58:51,160 --> 00:58:52,280
Spring Messaging.

906
00:58:54,100 --> 00:58:55,720
Enable Websocket in Spring.

907
00:58:58,600 --> 00:58:59,460
Stomp, schon wieder.

908
00:59:00,280 --> 00:59:02,240
Komm, Chat, wir trusten jetzt Chat.

909
00:59:02,340 --> 00:59:04,760
Wir trusten jetzt Chat GPT, wie das funktioniert.

910
00:59:12,080 --> 00:59:13,460
Ich kopiere das jetzt einfach.

911
00:59:13,460 --> 00:59:15,680
Ich glaube nicht, dass es funktioniert, ehrlich gesagt.

912
00:59:15,680 --> 00:59:27,620
aber der websocket config figuren

913
00:59:29,260 --> 00:59:35,300
bei websocket händler slash wie er sagt das klingt doch aber eigentlich ganz

914
00:59:35,300 --> 00:59:43,240
ganz sinnig websocket händler tag

915
00:59:45,680 --> 00:59:54,840
text websocket händler websocket session text messer ich importiere einfach alles

916
00:59:54,840 --> 00:59:59,120
und diese funkt schon mal nicht weil

917
01:00:00,740 --> 01:00:11,220
das aber doch kein error oder es wirklich ein error weil das kann doch

918
01:00:11,220 --> 01:00:14,500
nicht sein dass es ein error ist

919
01:00:15,680 --> 01:00:24,080
public das ist wirklich ein error naja muss ja nicht public sein

920
01:00:24,080 --> 01:00:31,340
nicht public sein so moment wollen wir sagen das ist wirklich schon alles jetzt

921
01:00:31,340 --> 01:00:38,480
websocket at at händler slash bs

922
01:00:38,480 --> 01:00:46,980
ich weiß ja gar nicht ob ich das haben will

923
01:00:46,980 --> 01:00:57,640
also laut chat gpt hubs laut chat gpt war es das jetzt mal gespannt ob das so stimmt

924
01:00:57,640 --> 01:01:04,800
WS-Cat?

925
01:01:05,200 --> 01:01:06,400
Nee, äh

926
01:01:06,400 --> 01:01:08,380
WS? Ah ja, hier, okay

927
01:01:08,380 --> 01:01:10,400
WS

928
01:01:10,400 --> 01:01:12,160
Local Host

929
01:01:12,160 --> 01:01:14,200
Host

930
01:01:14,200 --> 01:01:16,220
80

931
01:01:16,220 --> 01:01:17,240
80 WS

932
01:01:24,360 --> 01:01:24,880
Was?

933
01:01:24,960 --> 01:01:25,300
Was funzt?

934
01:01:27,640 --> 01:01:30,920
Das war? Ja, das ist doch gar nicht so kompliziert.

935
01:01:31,280 --> 01:01:39,320
Ganz ehrlich, das ist gar nicht so unterschiedlich zu ASP.NET Core mit Signal A.

936
01:01:41,220 --> 01:01:43,140
Ich bin beim Battlefield 6 am Start, ja.

937
01:01:44,600 --> 01:01:47,140
Max, ich habe eine Frage als Java-Noob.

938
01:01:47,860 --> 01:01:50,560
Ja, komm, als bin ich der Java-Pro, Mann.

939
01:01:53,380 --> 01:01:56,580
Warum rufst du die Plup-Funktion per Exception auf?

940
01:01:56,580 --> 01:01:58,420
ist Exception. Hä? Was mache ich?

941
01:02:02,260 --> 01:02:04,320
Ne, ne. Das heißt, dass

942
01:02:04,320 --> 01:02:06,580
diese Methode eine Exception werfen

943
01:02:06,580 --> 01:02:06,940
kann.

944
01:02:10,520 --> 01:02:12,340
Warum nicht direkt Kotlin anstatt Java?

945
01:02:12,520 --> 01:02:14,400
Das kann ich dir erklären, weil

946
01:02:14,400 --> 01:02:16,120
bei uns auf der Arbeit so gut wie alles in Java

947
01:02:16,120 --> 01:02:18,060
programmiert wird. Ich arbeite bei einer Versicherung,

948
01:02:18,240 --> 01:02:20,300
Business Enterprise stellt, das ist alles

949
01:02:20,300 --> 01:02:22,260
in Java und ich gehe

950
01:02:22,260 --> 01:02:24,200
demnächst mal für 14 Tage zu unseren

951
01:02:24,200 --> 01:02:26,300
Entwicklern und ich dachte mir, bevor ich

952
01:02:26,300 --> 01:02:30,620
dahin gehe ich mache so ein internes man guckt sich mal eine andere abteilung an

953
01:02:30,620 --> 01:02:37,400
praktikum bei uns intern oder dachte mir das macht schon sinn bis den jahr war zu

954
01:02:37,400 --> 01:02:42,780
wissen bevor man da hingeht also das heißt was wir hier machen da

955
01:02:42,780 --> 01:02:45,560
kommt nichts sinnvolles am ende raus außer dass man ein bisschen java und

956
01:02:45,560 --> 01:02:52,760
springboot gelernt hat jetzt mal eine ganz doofe frage an euch wenn das hier

957
01:02:52,760 --> 01:02:58,000
Ja, schon komplett ausreicht, um Websocket Kommunikation zu machen.

958
01:02:58,480 --> 01:03:02,340
Was zum Teufel machen denn diese ganzen Anleitungen hier?

959
01:03:03,660 --> 01:03:06,780
Mit Stomp und hast du nicht gesehen?

960
01:03:08,920 --> 01:03:10,600
Wer braucht das überhaupt?

961
01:03:11,040 --> 01:03:12,400
Sock.js Stomp?

962
01:03:14,360 --> 01:03:16,100
Ne, der macht das ohne Stomp.

963
01:03:17,280 --> 01:03:19,360
Moment, der macht das doch hier fast so wie ich, oder?

964
01:03:20,100 --> 01:03:21,540
Text Websocket Händler.

965
01:03:22,400 --> 01:03:23,300
Ja, das mache ich doch auch.

966
01:03:32,740 --> 01:03:35,100
Der macht doch im Prinzip so etwas Ähnliches wie ich hier.

967
01:03:35,200 --> 01:03:35,580
Guckt mal.

968
01:03:36,160 --> 01:03:37,700
Der macht hier so eine...

969
01:03:37,700 --> 01:03:39,400
Whatever.

970
01:03:42,400 --> 01:03:42,800
Zeug.

971
01:03:49,740 --> 01:03:50,540
Und dann?

972
01:03:51,540 --> 01:03:54,460
Live Ping Event.

973
01:03:54,740 --> 01:03:57,800
Ja, das ist das nächste, wie ich per Websocket Sachen hinschicke.

974
01:03:57,880 --> 01:03:58,600
Aber das probieren wir gleich.

975
01:03:58,660 --> 01:04:01,600
Da müssen wir jetzt so ein kleines JavaScript Frontend basteln.

976
01:04:03,140 --> 01:04:04,240
Das brauchen wir alles nicht.

977
01:04:07,820 --> 01:04:10,260
Der Websocket Konfigurer.

978
01:04:11,180 --> 01:04:12,280
Und AdHandler.

979
01:04:13,500 --> 01:04:16,840
Ja genau, im Prinzip ist es ja das, was ich auch gemacht habe.

980
01:04:16,840 --> 01:04:23,200
das dann dann connecten wir uns da jetzt mal per javascript hin machen wir das hier mal zu

981
01:04:23,200 --> 01:04:32,380
dann machen wir das mal dann gehen wir jetzt waren wir mal hier außerhalb von source machen

982
01:04:32,380 --> 01:04:44,140
wir mal hier directory keine ahnung web app was denn unter target web app da gehen wir mal hier

983
01:04:44,140 --> 01:04:47,760
nach rein nach i

984
01:04:50,560 --> 01:04:55,620
was ist denn der real java champ

985
01:05:01,020 --> 01:05:06,900
ah das war was was mein kotlin gebaut haben damals ich erinnere mich dunkel

986
01:05:06,900 --> 01:05:18,180
also gehen wir mal hier hin web app und ja gut da war jetzt wohl studio code auf

987
01:05:18,180 --> 01:05:31,620
dotnet gedönst mama ford getrusten web app müssen unser wish list studio code umstellen auf web

988
01:05:31,620 --> 01:05:35,580
und dann legen wir mal ein index html an

989
01:05:35,580 --> 01:05:55,680
mit einem standard template drin genau bla bla title 0w body copilot geh mal weg so und

990
01:05:55,680 --> 01:06:06,120
da machen wir jetzt unser javascript zeug drinne. Machen wir hier mal den Browser auf. Achso,

991
01:06:06,120 --> 01:06:20,820
Moment, Sekunde. Ne, wir machen das ohne, auf 8000. Wir machen das ohne Content Framework

992
01:06:20,820 --> 01:06:21,620
oder sonst was.

993
01:06:23,060 --> 01:06:24,900
Einfach nur hier die

994
01:06:25,500 --> 01:06:28,820
Vanilla

995
01:06:28,820 --> 01:06:30,360
JavaScript Zeug.

996
01:06:31,540 --> 01:06:32,900
Also jetzt connecten

997
01:06:32,900 --> 01:06:35,040
wir uns mal zu unserem Websocket.

998
01:06:46,240 --> 01:06:46,800
Also

999
01:06:46,800 --> 01:06:48,960
Moment, ich kann gar kein

1000
01:06:48,960 --> 01:06:51,020
Vanilla.js mehr basteln. Also, wie ging das

1001
01:06:51,020 --> 01:06:52,220
jetzt hier so? Script.

1002
01:06:53,780 --> 01:06:55,000
Console. Gucken wir mal, ob das

1003
01:06:55,000 --> 01:06:56,640
an sich wenigstens Funs, weil ich da mache.

1004
01:06:58,580 --> 01:06:58,820
Ja, okay.

1005
01:07:00,360 --> 01:07:00,760
Also.

1006
01:07:02,360 --> 01:07:02,720
Wo war das?

1007
01:07:04,640 --> 01:07:05,180
Was sagt

1008
01:07:05,180 --> 01:07:07,280
dein Chat-GPT, wie mein JavaScript-Client

1009
01:07:07,280 --> 01:07:08,820
aussehen soll? New Websocket.

1010
01:07:09,040 --> 01:07:09,300
Genau.

1011
01:07:09,300 --> 01:07:09,440
So.

1012
01:07:11,080 --> 01:07:11,440
Also.

1013
01:07:13,720 --> 01:07:15,500
Let WS

1014
01:07:15,500 --> 01:07:17,360
gleich. Warte mal. War es denn

1015
01:07:17,360 --> 01:07:18,320
überhaupt Let in JavaScript?

1016
01:07:18,960 --> 01:07:28,680
web socket auf wie es doppel punkt um sich localhost doppelpunkt 80 80 ps

1017
01:07:28,680 --> 01:07:34,900
hat noch gefunden wie es connect

1018
01:07:34,900 --> 01:07:39,840
auf ich weiß nicht

1019
01:07:39,840 --> 01:07:46,780
oder ist oder connecte das jetzt direkt wenn man das so macht

1020
01:07:46,780 --> 01:08:01,720
an die open kann man eine nachricht red red registern und message on close ja ok

1021
01:08:01,720 --> 01:08:06,780
ok die drei dinger sollten wir uns wahrscheinlich mal holen ja es macht schon sinn

1022
01:08:09,840 --> 01:08:14,240
Aber hier vs. Es war dieses TypeScript bonkers. Geh weg

1023
01:08:16,200 --> 01:08:18,200
Message

1024
01:08:19,220 --> 01:08:22,460
Connection open okay, connected

1025
01:08:32,560 --> 01:08:34,560
Log

1026
01:08:35,020 --> 01:08:37,020
Message

1027
01:08:37,020 --> 01:08:47,400
hier klaus okay jetzt haben wir hier jetzt können wir eine message schicken per websocket und dann

1028
01:08:47,400 --> 01:08:52,960
sollte die eigentlich auf dem kleinen rauskommen aktuell ist es so wie wir schicken einem ach nee

1029
01:08:52,960 --> 01:08:59,220
ich musste message senden dass ich der antwort bekomme okay dann machen wir das mal mama hier

1030
01:08:59,220 --> 01:09:01,000
in on open

1031
01:09:01,000 --> 01:09:06,360
ist das Arch

1032
01:09:06,360 --> 01:09:08,340
by the way

1033
01:09:08,340 --> 01:09:11,360
es ist Arch

1034
01:09:11,360 --> 01:09:17,360
aber in vm

1035
01:09:17,360 --> 01:09:18,020
in der vm

1036
01:09:18,020 --> 01:09:24,360
so

1037
01:09:24,360 --> 01:09:26,820
dann machen wir mal hier on open

1038
01:09:26,820 --> 01:09:33,620
Das ist die 3

1039
01:09:33,620 --> 01:09:36,360
Wayland in der VM funktioniert richtig

1040
01:09:36,360 --> 01:09:44,500
So und dann machen wir jetzt mal hier

1041
01:09:44,500 --> 01:09:45,660
WS Send

1042
01:09:45,660 --> 01:09:47,620
0W

1043
01:09:47,620 --> 01:09:48,940
Irgendwas, ist doch egal

1044
01:09:48,940 --> 01:09:53,240
Und wir bekommen ein Echo Event

1045
01:09:53,240 --> 01:09:59,000
Das ist ja viel einfacher, als ich mir das eigentlich gedacht habe.

1046
01:09:59,860 --> 01:10:00,900
Mit Websockets.

1047
01:10:03,080 --> 01:10:05,020
Also wir sind noch lange nicht fertig.

1048
01:10:05,500 --> 01:10:11,960
Ich will ja, dass das im Hintergrund automatisch updatet und per HTTP sich Sachen abruft von irgendeiner API und dann mir alle 10 Sekunden schickt und sowas.

1049
01:10:12,620 --> 01:10:14,380
Aber Lernst du WebDev jetzt?

1050
01:10:14,660 --> 01:10:20,300
Naja, gar so schlecht bin ich jetzt ja auch nicht, was Frontend-Sachen angeht.

1051
01:10:20,400 --> 01:10:22,400
Also wir haben ja schon die ein oder anderen Frontend-Sachen gemacht.

1052
01:10:22,400 --> 01:10:24,820
Ich bin jetzt hier kein Fulltime Frontend

1053
01:10:24,820 --> 01:10:27,140
Entwickler, aber so ein bisschen Ahnung

1054
01:10:27,140 --> 01:10:28,760
Von Frontend Sachen habe ich schon

1055
01:10:28,760 --> 01:10:34,220
Direkt in Lebenslauf

1056
01:10:34,220 --> 01:10:37,400
Du hast es am Anfang des Streams verpasst

1057
01:10:37,400 --> 01:10:37,540
Oder?

1058
01:10:38,880 --> 01:10:40,960
Ich hab das schon bei mir im Lebenslauf drinstehen

1059
01:10:40,960 --> 01:10:49,080
Alter Edge

1060
01:10:49,080 --> 01:10:50,000
Was willst du von mir?

1061
01:10:50,540 --> 01:10:52,320
Ich hab das schon im Lebenslauf drinstehen

1062
01:10:52,320 --> 01:11:02,560
Okay, so

1063
01:11:02,560 --> 01:11:04,240
Also, das Funst

1064
01:11:04,240 --> 01:11:06,460
Ich bin jetzt gerade bisschen

1065
01:11:06,460 --> 01:11:08,720
Bisschen verpeilt, Leute

1066
01:11:08,720 --> 01:11:17,320
Konnte man nicht

1067
01:11:22,320 --> 01:11:27,860
Wie ging das nochmal in JavaScript? Ich versuche gerade, ich habe mir gerade

1068
01:11:27,860 --> 01:11:32,460
überlegt, wenn ich hier unten weiter schreibe, ja, dass ich nicht so viel nested

1069
01:11:32,460 --> 01:11:38,320
Code habe. Ich würde gern so was machen wie await ws onopen, aber das funzt ja

1070
01:11:38,320 --> 01:11:44,380
nicht. Das muss man irgendwie mit promises machen, aber das ist glaube ich zu

1071
01:11:44,380 --> 01:11:50,300
kompliziert. Ich wollte eigentlich warten bis der connected ist.

1072
01:11:52,320 --> 01:11:59,380
Ich glaube da muss irgendwie sagen, irgendwie let you promise oder sowas.

1073
01:11:59,380 --> 01:12:07,020
Und irgendwie resolve.

1074
01:12:10,720 --> 01:12:11,540
Ach, keine Ahnung.

1075
01:12:11,980 --> 01:12:13,460
Zumindest kann ich dann sagen, irgendwie await.

1076
01:12:15,140 --> 01:12:17,040
Ich check nicht, wie das von uns, aber egal.

1077
01:12:19,460 --> 01:12:20,880
Das können wir dann reinschreiben.

1078
01:12:22,320 --> 01:12:34,340
Jetzt haben wir doch eigentlich

1079
01:12:34,340 --> 01:12:36,140
freundetmäßig alles, was wir brauchen.

1080
01:12:36,580 --> 01:12:38,660
Jetzt will ich nur, dass automatisch

1081
01:12:38,660 --> 01:12:40,620
dass das hier, das hier

1082
01:12:40,620 --> 01:12:42,060
soll automatisch passieren.

1083
01:12:43,640 --> 01:12:44,920
Handle Text Message.

1084
01:12:45,280 --> 01:12:46,660
So, Handle Text Message wollen

1085
01:12:46,660 --> 01:12:48,740
wir gar nicht. Ich will, ich will

1086
01:12:48,740 --> 01:12:50,600
eigentlich das hier machen. Okay?

1087
01:12:50,600 --> 01:12:54,880
Ich will automatisch im Hintergrund alle 10 Sekunden was an den Client schicken.

1088
01:12:55,260 --> 01:13:09,820
Das heißt doch im Endeffekt, eine Websocket Session, After Connection Established, die muss ich mir irgendwo speichern, die Websocket Session.

1089
01:13:10,600 --> 01:13:14,520
Damit ich nachher da wieder drauf zugreifen kann.

1090
01:13:15,080 --> 01:13:21,240
Also heißt es im Endeffekt, ich brauche irgendwie sowas wie ein Dictionary.

1091
01:13:21,740 --> 01:13:26,300
Das heißt, in Java ist es HashMap, wenn ich das richtig im Kopf habe.

1092
01:13:26,300 --> 01:13:33,680
So, und da will ich einmal ein String und eine WebSocket Session haben.

1093
01:13:35,440 --> 01:13:39,860
Gibt es eigentlich in Java sowas wie eine ThreadSafe HashMap?

1094
01:13:40,360 --> 01:13:42,080
Wobei, der hat doch hier auch sowas, der Typ, oder?

1095
01:13:44,520 --> 01:13:51,580
Ach ne.

1096
01:13:59,580 --> 01:14:00,420
Ähm...

1097
01:14:00,420 --> 01:14:02,140
Java Threads...

1098
01:14:02,140 --> 01:14:03,660
Konkurrent Hashmap gibt es?

1099
01:14:07,560 --> 01:14:08,440
Hashmap.

1100
01:14:08,540 --> 01:14:09,100
Ah, sehr gut.

1101
01:14:11,180 --> 01:14:13,020
Wobei, brauche ich eigentlich eine Hashmap?

1102
01:14:13,740 --> 01:14:14,460
Eigentlich nicht.

1103
01:14:14,520 --> 01:14:16,600
Gibt es eine Konkurrent-List?

1104
01:14:18,460 --> 01:14:19,240
Was haben wir denn?

1105
01:14:19,320 --> 01:14:21,600
Konkurrent-Map? Konkurrent-Hash-Map?

1106
01:14:22,880 --> 01:14:23,640
Map-Linked?

1107
01:14:26,920 --> 01:14:29,100
Gibt es eine Konkurrent-List?

1108
01:14:31,840 --> 01:14:32,800
Weil wir nicht.

1109
01:14:33,560 --> 01:14:34,640
Machen wir einfach so. Zack.

1110
01:14:35,480 --> 01:14:36,200
Konkurrent-Hash-Map.

1111
01:14:38,480 --> 01:14:39,040
Sessions.

1112
01:14:39,980 --> 01:14:41,880
Das macht man garantiert in Java nicht so, oder?

1113
01:14:41,880 --> 01:14:44,660
mit dem Underscore.

1114
01:14:46,680 --> 01:14:47,540
Bestimmt nicht.

1115
01:14:57,540 --> 01:14:58,060
So.

1116
01:14:58,340 --> 01:15:00,040
Und jetzt sagen wir hier Sessions

1117
01:15:00,040 --> 01:15:02,320
and

1118
01:15:02,320 --> 01:15:04,620
nein, put ist es.

1119
01:15:05,100 --> 01:15:05,620
Put

1120
01:15:05,620 --> 01:15:08,300
getSessionIdSession.

1121
01:15:08,400 --> 01:15:09,480
Genau, das wollen wir haben.

1122
01:15:11,880 --> 01:15:15,380
Ja, ich will ja eigentlich auch

1123
01:15:15,380 --> 01:15:17,380
broadcasten. So, Handle Text

1124
01:15:17,380 --> 01:15:18,560
Message, das brauchen wir nicht.

1125
01:15:19,320 --> 01:15:20,660
Äh, Comment.

1126
01:15:27,440 --> 01:15:29,260
So. Wir wollen

1127
01:15:29,260 --> 01:15:31,520
eigentlich im Endeffekt, jetzt ist die Frage,

1128
01:15:31,900 --> 01:15:33,380
wie mache ich das jetzt

1129
01:15:33,380 --> 01:15:35,300
gescheit? Also wir machen es jetzt mal so,

1130
01:15:35,400 --> 01:15:37,020
wie man es auf jeden Fall nicht macht, weil ich

1131
01:15:37,020 --> 01:15:38,800
bin mir unsicher, wie ich das mache.

1132
01:15:39,100 --> 01:15:41,120
Ich will jetzt automatisch alle

1133
01:15:41,120 --> 01:15:45,320
den Sekunden was an den Client schicken.

1134
01:15:45,940 --> 01:15:47,540
Normalerweise hätte ich jetzt hier

1135
01:15:47,540 --> 01:15:49,980
irgendwie irgendein Background-Task.

1136
01:15:50,920 --> 01:15:51,100
So.

1137
01:15:51,900 --> 01:15:53,900
Und da müsste man dann...

1138
01:15:53,900 --> 01:15:55,380
Na gut, das muss einfach

1139
01:15:55,380 --> 01:15:56,820
Static und Public sein, oder?

1140
01:15:57,180 --> 01:15:59,300
Dann funzt das. Aber das ist bestimmt nicht so gedacht.

1141
01:16:09,440 --> 01:16:10,920
Das ist bestimmt nicht so gedacht.

1142
01:16:10,920 --> 01:16:20,880
static und public aber scheiß drauf war trotzdem jetzt was wird das wenn es fertig ist ich lerne

1143
01:16:20,880 --> 01:16:27,720
einfach nur java und spring gut also deshalb das hat keinen tieferen mehrwert am ende was

1144
01:16:27,720 --> 01:16:31,980
anwendungen rauskommt aktuell ist das ziel ich will per websocket alle zehn sekunden was an

1145
01:16:31,980 --> 01:16:32,620
einen kleinen schicken.

1146
01:16:41,080 --> 01:16:42,640
Okay, hier können wir uns

1147
01:16:42,640 --> 01:16:44,120
connecten gleich und dann sehen wir das.

1148
01:16:44,560 --> 01:16:46,240
So, und jetzt will ich sowas machen.

1149
01:16:49,680 --> 01:16:50,780
Jetzt will ich

1150
01:16:50,780 --> 01:16:52,900
im Endeffekt, wo haben wir hier

1151
01:16:52,900 --> 01:16:54,400
Main? Hier, Main.

1152
01:16:57,080 --> 01:16:58,880
So, und da will ich

1153
01:16:58,880 --> 01:17:01,020
sowas wie Task Run

1154
01:17:01,020 --> 01:17:02,120
oder sowas machen.

1155
01:17:02,820 --> 01:17:04,180
Moment, es gibt was, was Task heißt?

1156
01:17:07,020 --> 01:17:07,880
Ich mach das.

1157
01:17:08,920 --> 01:17:09,400
Ne, nix.

1158
01:17:09,400 --> 01:17:11,260
Ähm.

1159
01:17:13,700 --> 01:17:16,360
Ja, äh.

1160
01:17:16,680 --> 01:17:18,040
Java Task Run.

1161
01:17:18,040 --> 01:17:31,740
Du kannst dir einen

1162
01:17:31,740 --> 01:17:34,620
Scheduled Executor Service holen

1163
01:17:34,620 --> 01:17:36,260
Der dann alle x Sekunden

1164
01:17:36,260 --> 01:17:37,040
Dinge ausführt

1165
01:17:37,040 --> 01:17:38,220
Ja sowas will ich haben

1166
01:17:38,220 --> 01:17:39,280
Das klingt gut

1167
01:17:39,280 --> 01:17:41,440
Ist das was was bei Spring dabei ist

1168
01:17:41,440 --> 01:17:45,260
Ich kann übrigens gerade nicht mal copy pasten

1169
01:17:45,260 --> 01:17:45,940
Doch kann ich

1170
01:17:45,940 --> 01:17:53,620
aber okay spring boot schedule gibt es gibt es bestimmt auch was

1171
01:17:53,620 --> 01:17:59,020
scheduling task spring enable scheduling

1172
01:17:59,020 --> 01:18:06,520
Create a

1173
01:18:06,520 --> 01:18:08,840
Playung

1174
01:18:08,840 --> 01:18:12,840
Warum heißt die Seite Playung?

1175
01:18:12,920 --> 01:18:13,700
Ich verstehe es nicht

1176
01:18:13,700 --> 01:18:17,200
Ja, ich weiß, die heißt nicht so, aber so ähnlich

1177
01:18:17,200 --> 01:18:19,480
So, Schedule Task at Component

1178
01:18:19,480 --> 01:18:20,260
Okay, ich habe keine

1179
01:18:20,260 --> 01:18:26,080
All

1180
01:18:26,080 --> 01:18:32,420
Immer Annotations.

1181
01:18:32,480 --> 01:18:34,120
Das habe ich mittlerweile auch schon mitgekriegt.

1182
01:18:35,320 --> 01:18:36,620
Also Enable

1183
01:18:36,620 --> 01:18:38,120
Scheduling.

1184
01:18:39,460 --> 01:18:40,480
Muss man da machen.

1185
01:18:41,000 --> 01:18:41,960
Hauptsache Annotations.

1186
01:18:42,080 --> 01:18:43,980
Das finde ich auch teilweise ein bisschen übertrieben.

1187
01:18:49,320 --> 01:18:50,200
Und jetzt

1188
01:18:50,200 --> 01:18:51,680
einfach das hier?

1189
01:18:56,080 --> 01:19:00,400
jetzt sage ich quasi hier

1190
01:19:00,400 --> 01:19:02,640
Scheduled Task

1191
01:19:02,640 --> 01:19:03,580
hier Component

1192
01:19:03,580 --> 01:19:08,380
doch das, guck mal, warum soll ich

1193
01:19:08,380 --> 01:19:10,240
alles, guck mal, wir haben jetzt

1194
01:19:10,240 --> 01:19:12,420
noch nicht mal 100 Zeilen, warum soll ich

1195
01:19:12,420 --> 01:19:14,380
mich durch zig Dateien klicken, wenn ich

1196
01:19:14,380 --> 01:19:16,420
das im Prinzip alles fast schon auf ein Bildschirm

1197
01:19:16,420 --> 01:19:16,860
kriege

1198
01:19:16,860 --> 01:19:20,480
so, Scheduled brauchen

1199
01:19:20,480 --> 01:19:22,320
wir hier, sind das Millisekunden

1200
01:19:22,320 --> 01:19:27,320
Das kriegen wir nicht gesagt

1201
01:19:27,320 --> 01:19:27,520
Was

1202
01:19:27,520 --> 01:19:31,520
Bonk heißt

1203
01:19:31,520 --> 01:19:33,800
Sind das Millisekunden

1204
01:19:33,800 --> 01:19:34,700
Man weiß es nicht

1205
01:19:34,700 --> 01:19:37,480
Im Controller

1206
01:19:37,480 --> 01:19:39,320
Nein das gefällt mir nicht

1207
01:19:39,320 --> 01:19:40,380
Tja

1208
01:19:40,380 --> 01:19:42,000
Sind das Millisekunden

1209
01:19:42,000 --> 01:19:51,100
Es wäre halt nice

1210
01:19:51,100 --> 01:19:53,400
wenn es irgendwo stehen würde, dass es Millisekunden

1211
01:19:53,400 --> 01:19:53,680
sind.

1212
01:19:58,920 --> 01:20:00,640
Ganze Gelogger brauchen wir hier nicht.

1213
01:20:00,800 --> 01:20:01,740
Juckt mich null.

1214
01:20:04,660 --> 01:20:07,060
So, und jetzt machen wir was, was wahrscheinlich relativ eklig

1215
01:20:07,060 --> 01:20:09,260
ist. Hier, äh,

1216
01:20:09,260 --> 01:20:11,340
ich nenn's einfach mal Pink Client oder so.

1217
01:20:12,080 --> 01:20:13,400
So, jetzt machen wir was, was relativ

1218
01:20:13,400 --> 01:20:15,160
eklig ist, und zwar, weil ich hab keine,

1219
01:20:15,200 --> 01:20:17,440
ich hab keine Idee, wie wir's sonst hinkriegen.

1220
01:20:18,420 --> 01:20:19,140
Und zwar,

1221
01:20:19,140 --> 01:20:26,320
My Websocket Handler

1222
01:20:26,320 --> 01:20:27,300
Sessions.

1223
01:20:28,700 --> 01:20:30,320
Globale Variable für alle.

1224
01:20:31,520 --> 01:20:32,960
Das geht bestimmt schöner.

1225
01:20:33,620 --> 01:20:35,040
Ich habe aber immer noch keine Ahnung,

1226
01:20:35,140 --> 01:20:36,080
wie ich meine ganzen

1227
01:20:36,080 --> 01:20:38,480
Websocket Dinger von da

1228
01:20:38,480 --> 01:20:39,700
da rein bekomme.

1229
01:20:41,560 --> 01:20:42,500
Und jetzt will ich

1230
01:20:42,500 --> 01:20:43,860
eine Schleife da drüber machen.

1231
01:20:46,860 --> 01:20:47,780
For each?

1232
01:20:47,780 --> 01:20:49,340
4

1233
01:20:49,340 --> 01:20:51,300
4i? Ne.

1234
01:20:52,580 --> 01:20:52,940
4

1235
01:20:52,940 --> 01:20:57,600
Java for each.

1236
01:21:00,740 --> 01:21:03,260
Der hat ne List, aber ich will ne Threadsave-List haben.

1237
01:21:05,360 --> 01:21:05,760
Ah.

1238
01:21:08,820 --> 01:21:09,260
Aha.

1239
01:21:12,560 --> 01:21:13,820
Ah, ich will nicht String.

1240
01:21:13,940 --> 01:21:14,220
War.

1241
01:21:15,360 --> 01:21:17,040
Fange erst mit gar nichts anderem an.

1242
01:21:17,040 --> 01:21:18,660
My Websocket.

1243
01:21:19,780 --> 01:21:20,420
Sessions.

1244
01:21:21,540 --> 01:21:22,420
Was hat er für Schmerzen?

1245
01:21:23,240 --> 01:21:24,420
For each not applicable.

1246
01:21:24,700 --> 01:21:25,500
Applicable.

1247
01:21:29,500 --> 01:21:30,800
Ähm, okay.

1248
01:21:33,140 --> 01:21:33,600
Java.

1249
01:21:33,940 --> 01:21:34,760
Iterate.

1250
01:21:35,340 --> 01:21:36,900
Concurrent Hash Map.

1251
01:21:40,280 --> 01:21:41,640
Wie geht das?

1252
01:21:44,060 --> 01:21:45,220
Entry Set.

1253
01:21:45,220 --> 01:21:45,660
What?

1254
01:21:47,040 --> 01:21:51,920
was will er

1255
01:21:51,920 --> 01:21:57,300
ja jetzt der kaufler erzählen wir wie es geht values

1256
01:21:57,300 --> 01:22:13,480
was will er jetzt von mir also als public ist und jetzt wollen wir eigentlich dass auch nicht

1257
01:22:13,480 --> 01:22:25,540
hier session jetzt wollen was session punkt send message da müssen wir noch

1258
01:22:25,540 --> 01:22:29,020
mal in das beispiel hier reingucken

1259
01:22:33,640 --> 01:22:40,960
send message new text message aha new text message und dann irgendwie

1260
01:22:40,960 --> 01:22:43,060
irgendein Payload?

1261
01:22:45,860 --> 01:22:46,500
Was?

1262
01:22:46,580 --> 01:22:47,080
Was to string?

1263
01:22:51,460 --> 01:22:52,740
Char Sequence.

1264
01:22:53,340 --> 01:22:55,180
Er ist doch hier. Char Sequence.

1265
01:22:56,400 --> 01:22:57,000
Ne.

1266
01:22:59,460 --> 01:23:00,600
Unhandled Exception.

1267
01:23:05,040 --> 01:23:06,640
Wobei, ne Leute.

1268
01:23:07,460 --> 01:23:08,600
Das soll nicht crashen.

1269
01:23:09,540 --> 01:23:12,000
Es könnte ja auch sein, dass die Session mittlerweile geschlossen ist.

1270
01:23:12,300 --> 01:23:14,440
Da müssen wir jetzt wirklich einen Try-Catch drumherum machen.

1271
01:23:16,540 --> 01:23:18,380
Wie kann man hier einzelne Zeilen verschieben?

1272
01:23:20,780 --> 01:23:22,300
Da müssen wir wirklich einen Try-Catch drumherum machen.

1273
01:23:22,380 --> 01:23:23,580
Das kackt uns das Ganze ab.

1274
01:23:25,900 --> 01:23:26,260
Catch.

1275
01:23:27,340 --> 01:23:27,880
I.O.X.

1276
01:23:28,580 --> 01:23:29,860
IntelliJ ist nicht schlecht, oder?

1277
01:23:32,140 --> 01:23:33,680
Das ist nicht schlecht, IntelliJ.

1278
01:23:35,260 --> 01:23:38,540
Der schlägt uns gleich die Exception vor, die da gethrowt wird drinnen.

1279
01:23:38,600 --> 01:23:43,500
So

1280
01:23:43,500 --> 01:23:47,380
Das will er von mir

1281
01:23:47,380 --> 01:23:50,200
Perfekt

1282
01:23:50,200 --> 01:23:51,380
Wegschmeißen

1283
01:23:51,380 --> 01:23:53,120
Sehr gut

1284
01:23:53,120 --> 01:23:56,660
So, wenn ich jetzt alles richtig gemacht hab

1285
01:23:56,660 --> 01:23:58,620
Dann

1286
01:23:58,620 --> 01:24:00,320
Sollten wir jetzt

1287
01:24:00,320 --> 01:24:02,500
Alle 5 Sekunden

1288
01:24:02,500 --> 01:24:05,560
Bekommen wir die Textnachricht

1289
01:24:05,560 --> 01:24:08,140
Na

1290
01:24:08,140 --> 01:24:11,980
dazu kann ich ja nur sagen

1291
01:24:11,980 --> 01:24:15,160
easy

1292
01:24:15,160 --> 01:24:16,360
easy

1293
01:24:16,360 --> 01:24:17,640
easy

1294
01:24:17,640 --> 01:24:21,640
way too easy

1295
01:24:21,640 --> 01:24:24,680
doch es funzt auf Anhieb

1296
01:24:24,680 --> 01:24:26,140
oh es ist abgekackt

1297
01:24:26,140 --> 01:24:28,760
Websocket session has been closed

1298
01:24:28,760 --> 01:24:29,400
and no message

1299
01:24:29,400 --> 01:24:33,560
ja deswegen catche ich das doch auch

1300
01:24:33,560 --> 01:24:34,920
warum kackt

1301
01:24:34,920 --> 01:24:35,720
das jetzt ab

1302
01:24:35,720 --> 01:24:40,100
Warum ist das jetzt abgekackt?

1303
01:24:41,540 --> 01:24:43,500
Ich catche doch die Exception hier

1304
01:24:49,740 --> 01:24:51,500
Wo ist er denn abgekackt?

1305
01:24:55,180 --> 01:24:56,980
Ach ne, der ist gar nicht abgekackt

1306
01:24:56,980 --> 01:24:59,780
Der läuft immer noch weiter

1307
01:24:59,780 --> 01:25:02,380
Ah, verstehe

1308
01:25:02,380 --> 01:25:05,980
Das ist eine Logging, eine Log-Meldung von denen.

1309
01:25:07,460 --> 01:25:08,500
Ne, ne, ne, ne, das ist schon richtig.

1310
01:25:09,000 --> 01:25:10,960
Ich muss das jetzt ja noch löschen.

1311
01:25:11,760 --> 01:25:12,920
Ne, ne, die Hash-Map ist nicht leer.

1312
01:25:13,300 --> 01:25:15,980
In der Hash-Map ist eine Session drin, die wurde geclosed.

1313
01:25:16,360 --> 01:25:19,360
Ich muss jetzt noch sagen, on close oder irgendwie sowas.

1314
01:25:20,440 --> 01:25:21,400
Aber wie geht das jetzt hier?

1315
01:25:21,540 --> 01:25:22,860
Add, overwrite.

1316
01:25:23,260 --> 01:25:24,500
Hauptsache mehr Annotations.

1317
01:25:25,760 --> 01:25:26,740
Public, void.

1318
01:25:27,140 --> 01:25:28,300
Wobei, das kann man doch bestimmt,

1319
01:25:28,640 --> 01:25:30,740
bestimmt kann einem da IntelliJ helfen, oder?

1320
01:25:32,380 --> 01:25:33,680
Wie liste ich hier?

1321
01:25:38,920 --> 01:25:40,000
Override Methods.

1322
01:25:40,000 --> 01:25:40,320
Haha.

1323
01:25:43,320 --> 01:25:43,840
Close.

1324
01:25:44,080 --> 01:25:45,080
Irgendwas mit Close.

1325
01:25:47,040 --> 01:25:48,240
Bist du neu bei Java?

1326
01:25:48,400 --> 01:25:48,520
Ja.

1327
01:25:49,780 --> 01:25:50,580
Relativ neu.

1328
01:25:52,100 --> 01:25:52,620
Handle.

1329
01:25:53,260 --> 01:25:55,000
Also, das ist mein zweiter Stream mit Java.

1330
01:25:56,300 --> 01:25:59,380
Sonst habe ich nur ganz, also ganz, ganz wenig Java-Erfahrung.

1331
01:26:00,180 --> 01:26:01,180
Und Spring Boot gar nicht.

1332
01:26:02,380 --> 01:26:03,120
Wo ist denn hier?

1333
01:26:03,860 --> 01:26:05,160
After Connection Closed.

1334
01:26:06,420 --> 01:26:07,820
Das habe ich gesucht.

1335
01:26:08,760 --> 01:26:10,720
So, After Connection Closed.

1336
01:26:13,260 --> 01:26:13,900
Will ich.

1337
01:26:15,900 --> 01:26:16,460
Sessions.

1338
01:26:16,460 --> 01:26:16,580
Sessions.

1339
01:26:17,960 --> 01:26:18,740
Delete.

1340
01:26:19,440 --> 01:26:19,580
Ne.

1341
01:26:25,680 --> 01:26:26,360
Ja.

1342
01:26:30,140 --> 01:26:30,860
Remove.

1343
01:26:32,380 --> 01:26:37,300
Session ID.

1344
01:26:38,460 --> 01:26:39,800
Was hat er hier für Schmerzen?

1345
01:26:44,800 --> 01:26:46,440
Achso, falls es das nicht gibt.

1346
01:26:48,300 --> 01:26:49,760
Also, ja gut.

1347
01:26:59,380 --> 01:27:01,540
Aber was meckert er denn jetzt hier gerade an?

1348
01:27:02,380 --> 01:27:08,380
was hat was hat er jetzt für ich verstehe das problem jetzt gar nicht

1349
01:27:08,380 --> 01:27:17,980
0 ach so 0 weil es eine null point der exception geben kann wenn es den kino ich

1350
01:27:17,980 --> 01:27:25,120
gibt okay das macht in der tat tatsächlich dann sinn auch noch mal einen try catch zu rappen

1351
01:27:32,380 --> 01:27:40,900
aber was was will er denn hier was was was was warum ist das denn jetzt

1352
01:27:47,560 --> 01:27:49,800
oder gibt es drei remove

1353
01:27:49,800 --> 01:27:57,160
er will dass du so was wie ein using macht

1354
01:27:57,160 --> 01:28:05,560
den das geld der index in der ich brauche nicht den index das ist der

1355
01:28:05,560 --> 01:28:13,180
hash map ich brauche einen key den einzigartigen key ich bin ich bin jetzt

1356
01:28:13,180 --> 01:28:22,060
irgendwie gerade verwirrt was der google try with okay frei mit resources

1357
01:28:22,060 --> 01:28:25,740
Ja, aber hier, guck mal, IntelliJ mag ja nix.

1358
01:28:27,780 --> 01:28:30,140
Der bietet mir nix an, um das zu fixen.

1359
01:28:30,140 --> 01:28:31,140
Oder...

1360
01:28:31,140 --> 01:28:36,000
Try with resources statement.

1361
01:28:36,200 --> 01:28:38,140
Try...

1362
01:28:38,140 --> 01:28:40,140
What the...

1363
01:28:41,980 --> 01:28:44,460
Will der sowas haben?

1364
01:28:47,680 --> 01:28:48,080
Nee, oder?

1365
01:28:52,060 --> 01:28:57,060
Was?

1366
01:29:05,060 --> 01:29:08,060
Ich hab...

1367
01:29:08,060 --> 01:29:10,060
Returned das irgendwas?

1368
01:29:10,400 --> 01:29:10,840
Remove?

1369
01:29:19,060 --> 01:29:19,540
Was?

1370
01:29:19,720 --> 01:29:20,380
Was returned das denn?

1371
01:29:22,060 --> 01:29:24,160
Ach, die Session

1372
01:29:24,160 --> 01:29:25,140
returnt das.

1373
01:29:26,680 --> 01:29:28,220
Also ich habe keine Ahnung, was der

1374
01:29:28,220 --> 01:29:29,940
eigentlich will, ehrlich gesagt, von mir.

1375
01:29:30,020 --> 01:29:31,940
Warum das unterkringelt ist.

1376
01:29:35,640 --> 01:29:37,340
Ich habe absolut keinen Plan.

1377
01:29:39,740 --> 01:29:41,920
Websocket Session used without...

1378
01:29:41,920 --> 01:29:44,820
Ach, jetzt weiß ich es, glaube ich.

1379
01:29:45,500 --> 01:29:46,220
Der will das

1380
01:29:46,220 --> 01:29:47,460
da von mir haben, oder?

1381
01:29:49,620 --> 01:29:51,380
Ach, sowas will er von mir haben.

1382
01:29:52,060 --> 01:29:53,360
Sowas ähnliches.

1383
01:29:57,800 --> 01:29:59,880
Ich checke aber nicht, wie es jetzt weitergeht.

1384
01:30:06,760 --> 01:30:07,480
Hä?

1385
01:30:07,480 --> 01:30:25,360
Also, seriously, kein Schimmer, was das Ding von mir will.

1386
01:30:28,240 --> 01:30:28,800
Wurscht.

1387
01:30:28,800 --> 01:30:29,360
So.

1388
01:30:30,200 --> 01:30:30,840
Bam.

1389
01:30:37,480 --> 01:30:55,200
Aber zumindest sollte das mein Problem jetzt fixen.

1390
01:30:55,920 --> 01:31:01,200
Dass der dann ewig rummeckert hier unten, wenn die Session zu ist.

1391
01:31:07,480 --> 01:31:18,040
jetzt gucken wir mal krieg ich alle fünf sekunden kriege ich was geschickt so jetzt

1392
01:31:18,040 --> 01:31:24,300
breche ich ab guck jetzt hat das jetzt kackt er hier nicht mal ab jetzt hat das direkt

1393
01:31:24,300 --> 01:31:34,720
entfernt schreiben wir hier noch noch rein closed connection so so ist gut ja das ist

1394
01:31:34,720 --> 01:31:36,220
nice, da brauchen wir dieses ganze Gedöns nicht.

1395
01:31:36,520 --> 01:31:38,660
So, und jetzt können wir unser Frontend reingucken.

1396
01:31:40,820 --> 01:31:42,640
Ach, den Wörter. Das ist doch echt nicht

1397
01:31:42,640 --> 01:31:44,760
schlecht. Also, ich muss sagen,

1398
01:31:44,840 --> 01:31:46,180
ich hab mir das schlimmer vorgestellt.

1399
01:31:46,500 --> 01:31:48,500
Das ganze Annotate ist vielleicht ein bisschen

1400
01:31:48,500 --> 01:31:50,840
nervig, aber ganz ehrlich,

1401
01:31:51,480 --> 01:31:52,680
wenn das alles ist, was man

1402
01:31:52,680 --> 01:31:54,500
für WebSocket-Handling braucht, dann

1403
01:31:54,500 --> 01:31:56,520
ist das doch echt überschaubar

1404
01:31:56,520 --> 01:31:57,260
und gut gemacht.

1405
01:31:58,940 --> 01:32:00,760
Was ich halt überhaupt nicht checke, ist,

1406
01:32:01,420 --> 01:32:02,480
warum die Beispiele

1407
01:32:02,480 --> 01:32:03,760
so krass bloated sind.

1408
01:32:04,720 --> 01:32:12,720
Ja, wenn du hier suchst

1409
01:32:12,720 --> 01:32:14,940
Spring Boot Websocket

1410
01:32:14,940 --> 01:32:16,520
Minimal Example

1411
01:32:16,520 --> 01:32:20,620
Da findest du dann solche Dinger

1412
01:32:20,620 --> 01:32:21,680
Die

1413
01:32:21,680 --> 01:32:27,300
100.000 Sachen machen

1414
01:32:27,300 --> 01:32:29,060
Irgendwelche Endpunkte

1415
01:32:29,060 --> 01:32:29,420
Und

1416
01:32:29,420 --> 01:32:34,380
Stomp

1417
01:32:34,380 --> 01:32:36,300
Was auch immer.

1418
01:32:40,580 --> 01:32:43,080
Und dann brauchst du irgendwelche extra kleinen Sachen,

1419
01:32:43,220 --> 01:32:44,200
dass es funktioniert.

1420
01:32:46,940 --> 01:32:48,320
Das will ich gar nicht.

1421
01:32:48,400 --> 01:32:50,120
Ich will einfach stinknormales Websocket haben.

1422
01:32:54,040 --> 01:32:56,260
So, dann machen wir das doch mal.

1423
01:32:56,360 --> 01:32:57,640
Wenn das Millisekunden sind,

1424
01:32:58,320 --> 01:33:00,020
alle 100 Millisekunden

1425
01:33:00,020 --> 01:33:01,280
will ich was geschickt kriegen.

1426
01:33:02,500 --> 01:33:02,980
Restart.

1427
01:33:03,780 --> 01:33:04,680
Gucken, ob das jetzt funzt.

1428
01:33:04,940 --> 01:33:06,980
Jetzt sollte uns das ganz schön die Konsole vollspammen.

1429
01:33:08,780 --> 01:33:09,140
Jawohl.

1430
01:33:09,920 --> 01:33:10,440
Sehr gut.

1431
01:33:11,540 --> 01:33:11,880
So.

1432
01:33:12,900 --> 01:33:13,260
Next.

1433
01:33:13,500 --> 01:33:15,180
Wie macht man HTTP-Requests?

1434
01:33:15,280 --> 01:33:17,300
Machen wir mal alle Sekunden.

1435
01:33:17,300 --> 01:33:19,420
Wir wollen die APIs jetzt nicht so krass vollspammen.

1436
01:33:22,200 --> 01:33:24,980
Ich finde das gar nicht schlecht, ehrlich gesagt, Leute.

1437
01:33:25,820 --> 01:33:27,300
Das ist ziemlich...

1438
01:33:27,820 --> 01:33:30,920
Also für Java-Verhältnisse ziemlich kurz und knackig.

1439
01:33:31,580 --> 01:33:32,900
Das Websocket-Handling hier.

1440
01:33:32,980 --> 01:33:35,980
kannst du dich nicht beschweren

1441
01:33:42,100 --> 01:33:45,100
so wirklich übersichtlich

1442
01:33:45,700 --> 01:33:51,160
so und jetzt kommt man wie man http request macht jetzt hat die api

1443
01:33:54,160 --> 01:34:01,320
wir suchen uns jetzt mal irgendeine api raus wo wir zeug für abfragen können

1444
01:34:01,320 --> 01:34:05,660
zur not nehmen die star wars api

1445
01:34:08,360 --> 01:34:20,000
tom hicks lucifer kurz habe ich geguckt die serie die war ich ganz neues

1446
01:34:20,000 --> 01:34:22,000
Harry Potter Quotes

1447
01:34:27,440 --> 01:34:34,200
Die Poké-RP, ja das ist... nein die Herr der Ringe-RP. Wir brauchen eine RP-Key?

1448
01:34:40,360 --> 01:34:42,360
The One-RP

1449
01:34:50,000 --> 01:34:58,020
Brauchen Keinen api wobei wobei das mit dem api ist gar nicht so blöd da können wir uns auch noch überlegen gleich wie es funktioniert

1450
01:35:06,800 --> 01:35:11,740
Wir Suchen uns Irgendeine ich weiß was quote in der quote anime quotes

1451
01:35:11,880 --> 01:35:16,120
Ja Genau das das ist das allerwichtigste das brauche

1452
01:35:20,000 --> 01:35:27,300
Die letzten Staffeln habe ich auch nicht geguckt.

1453
01:35:27,420 --> 01:35:28,900
Ich habe bei Staffel 4 oder so aufgehört.

1454
01:35:30,900 --> 01:35:32,180
Jason Placeholder.

1455
01:35:35,760 --> 01:35:39,060
Ich finde, das ist tatsächlich für unseren Fall gar nicht so verkehrt.

1456
01:35:40,700 --> 01:35:44,280
Free, fake and reliable API for testing and prototyping.

1457
01:35:45,600 --> 01:35:47,480
Patch to do...

1458
01:35:47,480 --> 01:35:49,440
Ja, das ist ziemlich gut. Das machen wir.

1459
01:35:50,000 --> 01:35:53,540
Ja, das ist gut.

1460
01:35:53,540 --> 01:36:00,240
Das benutzen wir und dann machen wir noch einen Timestamp.

1461
01:36:00,240 --> 01:36:08,940
Ja, das ist gut, das benutzen wir.

1462
01:36:08,940 --> 01:36:13,900
Wie viele To-Do's gibt es hier eigentlich?

1463
01:36:13,900 --> 01:36:18,480
Kann man das listen irgendwie?

1464
01:36:18,480 --> 01:36:31,760
hier hier sind alle alle to do's regenerate sich das irgendwie random

1465
01:36:36,920 --> 01:36:42,740
ich habe die idee was wir machen wir rufen einfach random 1 bis 10 ab das

1466
01:36:42,740 --> 01:36:54,500
schon okay so jetzt ist die preisfrage wie macht man in java http requests das ist eher das ist

1467
01:36:54,500 --> 01:37:03,980
eher keine spring boot frage sondern eine java frage oder web klein non blocking reactive klein

1468
01:37:03,980 --> 01:37:11,600
mit fluchen ab ihr rest klein moment sehe ich das richtig allein das spring

1469
01:37:11,600 --> 01:37:16,300
framework hat vier verschiedene http clients

1470
01:37:16,480 --> 01:37:19,480
und

1471
01:37:21,160 --> 01:37:23,480
ja

1472
01:37:28,740 --> 01:37:33,220
das ist ein kleines klein mit der flut ab sinken das klein mit template method

1473
01:37:33,220 --> 01:37:39,040
api prominent web non blocking reactive klein mit kluder in den restline restline klingt gut

1474
01:37:39,040 --> 01:37:45,040
alter ort

1475
01:37:45,040 --> 01:38:02,060
http-commons-client http-request-factory

1476
01:38:02,060 --> 01:38:10,980
mehr Java-Benahmung geht nicht mehr, Alter.

1477
01:38:15,040 --> 01:38:20,980
aber wir können einfach sagen rest client default create das schon mal gut

1478
01:38:20,980 --> 01:38:31,180
okay ich mache das mal in die main in meine main methode rein weil ich ganz ehrlich ich will ja

1479
01:38:31,180 --> 01:38:37,180
nur gucken wie man wie http request macht eigentlich kacken ob ich habe meinen clipboard

1480
01:38:37,180 --> 01:38:54,700
ausgeschaltet war war auch die programme am start http client http client jetzt

1481
01:38:54,700 --> 01:39:01,240
gibt es wahrscheinlich was aber dann noch so für methoden hier drin

1482
01:39:01,240 --> 01:39:12,680
get delete put add method mutate patch post ok get wollen wir haben wie macht man ein get request

1483
01:39:23,460 --> 01:39:26,580
so schon immer nett das wäre auch deutlich zu einfach

1484
01:39:26,580 --> 01:39:32,400
wie macht man einen weg

1485
01:39:32,400 --> 01:39:38,680
moment

1486
01:39:38,680 --> 01:39:55,380
man macht einen get und danach gibt man erst die url an wie macht denn ein get ohne dass er die

1487
01:39:55,380 --> 01:40:06,380
url weiß in den bildern bin ich jetzt bin ich ein bisschen leicht verwirrt

1488
01:40:06,380 --> 01:40:16,320
ok aber ich will platzhalter okay das kann dann machen wir so hier noch die

1489
01:40:16,320 --> 01:40:19,480
ID ist... Moment.

1490
01:40:19,740 --> 01:40:20,400
Ah, haha.

1491
01:40:21,280 --> 01:40:23,640
Das habe ich doch gestern gelernt, wie man random macht

1492
01:40:23,640 --> 01:40:25,180
in Java. Random.

1493
01:40:26,260 --> 01:40:27,580
Thread. Local.

1494
01:40:28,280 --> 01:40:29,220
Random. Ne.

1495
01:40:29,420 --> 01:40:29,640
Ah.

1496
01:40:33,160 --> 01:40:33,880
Current.

1497
01:40:34,740 --> 01:40:35,500
Next.

1498
01:40:35,680 --> 01:40:36,000
Int.

1499
01:40:37,460 --> 01:40:39,000
Von 1 bis

1500
01:40:39,000 --> 01:40:42,880
10. Keine Ahnung.

1501
01:40:42,880 --> 01:40:43,160
So.

1502
01:40:43,160 --> 01:40:49,820
ich weiß auch nicht warum das so kompliziert ist sind in den in sich zu rennen meisten in die aber

1503
01:40:49,820 --> 01:41:05,900
ich glaube müssen 11 nehmen weil das weil das inklusive 1 vermutlich und dann bis 11 also

1504
01:41:05,900 --> 01:41:14,240
inklusive 10 exklusive 11 oder einfach random next in das hat nicht funktioniert das habe

1505
01:41:14,240 --> 01:41:25,960
ich gestern ausprobiert das geht schon mal nicht next in

1506
01:41:25,960 --> 01:41:35,900
so id jetzt lädt er das runter

1507
01:41:35,900 --> 01:41:44,020
und jetzt geben wir uns das mal aus gibt es hier vielleicht ein makro für

1508
01:41:44,020 --> 01:41:47,720
out was war das system out print id

1509
01:41:47,720 --> 01:41:53,160
hat das im fonds das jetzt schon lass mal gucken

1510
01:41:53,160 --> 01:42:05,880
alle nicht print id was mache ich denn das bonn es bonn ist ein http herr speck

1511
01:42:05,880 --> 01:42:17,940
moment ich muss gucken wie man wie man den request macht bin dazu blöd für retrieved

1512
01:42:17,940 --> 01:42:19,800
muss man dann sagen. Aha.

1513
01:42:21,760 --> 01:42:22,260
Und dann was?

1514
01:42:22,520 --> 01:42:23,940
Body String Class.

1515
01:42:24,780 --> 01:42:26,400
Das ist aber wirklich jetzt alles andere

1516
01:42:26,400 --> 01:42:27,600
als intuitiv.

1517
01:42:30,780 --> 01:42:31,940
Machen wir mal so.

1518
01:42:33,240 --> 01:42:33,460
So.

1519
01:42:34,500 --> 01:42:35,100
Retrieve.

1520
01:42:37,020 --> 01:42:38,400
Was hat er für Schmerzen

1521
01:42:38,400 --> 01:42:38,600
wieder?

1522
01:42:39,780 --> 01:42:41,080
Result is ignored.

1523
01:42:41,080 --> 01:42:41,960
Ja, ja.

1524
01:42:43,780 --> 01:42:44,580
Sponsor.

1525
01:42:47,940 --> 01:42:57,660
response body kann man nicht sagen to string doch zu springen geht bestimmt auch response

1526
01:42:57,660 --> 01:43:05,040
to bodyless entity wie sich das anhört mal kurz

1527
01:43:05,040 --> 01:43:16,980
welche java version 25 to string guck mal was da jetzt rauskommt

1528
01:43:16,980 --> 01:43:28,020
kommt daten so geht das schon mal mit response body

1529
01:43:29,280 --> 01:43:33,060
ich finde das warum gibt es nicht so was wie es stringt das ist so ziemlich

1530
01:43:33,060 --> 01:43:38,700
wahrscheinlich was 99,9 prozent der leute wollen mit dem response

1531
01:43:38,700 --> 01:43:45,480
Okay, String, Punkt klar.

1532
01:43:45,820 --> 01:43:48,400
Das finde ich jetzt abartig, ehrlich gesagt.

1533
01:43:52,620 --> 01:43:55,080
Weil du Responses fast nie als String haben willst.

1534
01:43:55,780 --> 01:43:59,340
Also ganz ehrlich, ich will zu 99% meine Responses als String haben,

1535
01:43:59,700 --> 01:44:02,140
damit ich sie danach als JSON oder so parsen kann.

1536
01:44:08,700 --> 01:44:22,140
auf uns kannst auch string machen das bezweifle ich dass man so meint so wir

1537
01:44:22,140 --> 01:44:31,220
sind ja nicht in dort netter das von uns natürlich nett oder

1538
01:44:31,220 --> 01:44:39,220
Oh ne, ah, Moment, redo?

1539
01:44:44,640 --> 01:44:45,980
So, so will ich das haben.

1540
01:44:48,740 --> 01:44:50,360
Ach, ich kann da...

1541
01:44:50,360 --> 01:44:53,900
Ach, jetzt verstehe ich das.

1542
01:44:55,720 --> 01:44:56,720
Ich mache...

1543
01:44:56,720 --> 01:44:57,540
Ach so.

1544
01:44:57,540 --> 01:45:09,540
also eigentlich machen wir sowas hier wie ja keine api response sowas chat

1545
01:45:09,540 --> 01:45:23,280
wir machen ein rekord wieder ist doch viel besser records records string user id string

1546
01:45:23,280 --> 01:45:41,460
und id die string title moment war was hat er denn für schmerzen gerade was will er jetzt von mir

1547
01:45:53,280 --> 01:45:56,280
Achso der Name.

1548
01:45:56,280 --> 01:45:58,280
Api Response.

1549
01:45:58,280 --> 01:46:05,280
User ID, Int ID, String Title, Completed.

1550
01:46:05,280 --> 01:46:09,280
Bool.

1551
01:46:09,280 --> 01:46:18,280
Chat, was ist denn der Unterschied zwischen Int und Int?

1552
01:46:18,280 --> 01:46:20,280
Ah ne, Int gibt es gar nicht.

1553
01:46:20,280 --> 01:46:22,280
Aber...

1554
01:46:30,280 --> 01:46:31,700
Ist eine Rapper-Klasse.

1555
01:46:32,180 --> 01:46:33,780
Warum soll ich ein Int rappen wollen?

1556
01:46:35,420 --> 01:46:36,380
Achso, das kann

1557
01:46:36,380 --> 01:46:37,600
null sein, das andere nicht.

1558
01:46:38,120 --> 01:46:40,360
Also das Gegenstück von sowas hier

1559
01:46:40,360 --> 01:46:41,400
in .NET quasi.

1560
01:46:42,620 --> 01:46:44,360
Also das ist in .NET, ist das ein Nullable

1561
01:46:44,360 --> 01:46:44,660
Int.

1562
01:46:50,280 --> 01:46:58,040
ok verstehe das heißt jetzt sage ich wenn ich das hier zum die sehr realisieren verwenden

1563
01:46:58,040 --> 01:47:07,200
will sage ich hier ab response punkt glas korrekt das ist doch eigentlich ganz cool

1564
01:47:07,200 --> 01:47:18,240
das ist gefällt ist ganz ehrlich das gefällt mir eigentlich ganz gut das ist ein bisschen

1565
01:47:18,240 --> 01:47:20,860
wie in .NET, wenn man sowas sagt,

1566
01:47:20,940 --> 01:47:22,040
dann hier irgendwie, keine Ahnung,

1567
01:47:22,180 --> 01:47:23,940
JSON-Response, Punkt,

1568
01:47:24,820 --> 01:47:26,220
wie war das jetzt nochmal,

1569
01:47:26,480 --> 01:47:28,520
nicht S, die Serialize irgendwie,

1570
01:47:28,760 --> 01:47:31,340
die Serialize

1571
01:47:31,340 --> 01:47:32,420
als

1572
01:47:32,420 --> 01:47:34,420
API-Response, so.

1573
01:47:34,820 --> 01:47:36,560
In .NET wird das so ungefähr ausschauen.

1574
01:47:43,660 --> 01:47:45,080
Also von der Gewöhnung her

1575
01:47:45,080 --> 01:47:46,580
finde ich das ja auch schöner,

1576
01:47:46,580 --> 01:47:48,800
aber das geht klar.

1577
01:47:49,100 --> 01:47:50,240
Also das geht echt klar, finde ich.

1578
01:47:50,460 --> 01:47:51,320
Kann man so lassen.

1579
01:47:52,300 --> 01:47:53,940
So, jetzt haben wir hier ein

1580
01:47:53,940 --> 01:47:55,280
randomizedes

1581
01:47:55,280 --> 01:48:00,800
eine randomizede

1582
01:48:00,800 --> 01:48:02,760
API-Response. Gut, dann

1583
01:48:02,760 --> 01:48:04,620
kopieren wir uns diesen ganzen Krempel mal

1584
01:48:04,620 --> 01:48:09,900
und starten wieder unsere

1585
01:48:09,900 --> 01:48:12,120
Spring-Anwendung

1586
01:48:14,460 --> 01:48:15,900
und gehen jetzt mal hier hin,

1587
01:48:15,900 --> 01:48:22,840
wo wir automatisch aktuell nur immer diesen sinnlosen Text senden.

1588
01:48:23,460 --> 01:48:26,500
So, wir wollen alle, einmal pro Sekunde,

1589
01:48:27,020 --> 01:48:34,940
wir wollen einmal pro Sekunde, wollen wir neues,

1590
01:48:35,780 --> 01:48:41,300
neue hier Fake-To-Dos abrufen.

1591
01:48:42,240 --> 01:48:44,660
Wir können das auch printen, das ist okay.

1592
01:48:45,900 --> 01:48:55,260
und dann wollen wir das ganze senden aber das nicht auf eine zeile macht

1593
01:48:55,260 --> 01:49:04,020
manchmal kurz format und jetzt sagen wir hier als payload

1594
01:49:04,020 --> 01:49:11,080
das kann man eigentlich alles machen hierbei bei send message

1595
01:49:11,080 --> 01:49:16,920
Ich will das als chasen senden, siehste?

1596
01:49:16,920 --> 01:49:21,080
Okay, wir tun jetzt mal so, als hätten wir was damit gemacht.

1597
01:49:21,080 --> 01:49:24,520
Wir tun jetzt mal so, als hätten wir was gemacht.

1598
01:49:24,520 --> 01:49:31,860
Also, ähm, wir nennen das Ding jetzt nicht api, also hier, nennen wir das mal anders.

1599
01:49:31,860 --> 01:49:36,200
Nennen wir das mal hier, ähm, hier todo api response.

1600
01:49:36,200 --> 01:49:44,820
und dann haben wir unseren Kram, das heißt hier, whatever hier, Frontend-API-Response oder so.

1601
01:49:44,820 --> 01:49:52,400
So, und unsere Frontend-API-Response sieht anders aus, wie das da ist.

1602
01:49:53,320 --> 01:49:53,900
Keine Ahnung.

1603
01:49:54,440 --> 01:49:57,880
Da gibt es noch einen Timestamp dabei bei uns hier.

1604
01:49:58,460 --> 01:49:59,600
Int-Timestamp.

1605
01:49:59,900 --> 01:50:02,800
So, einfach mal jetzt.

1606
01:50:02,800 --> 01:50:04,340
So

1607
01:50:04,340 --> 01:50:05,860
Das heißt

1608
01:50:05,860 --> 01:50:10,200
Wir parsen uns das hier

1609
01:50:10,200 --> 01:50:16,220
Ach ne, das kann ich hier direkt dran machen, gell

1610
01:50:16,220 --> 01:50:18,120
So, hier hinten dran

1611
01:50:18,120 --> 01:50:20,220
Dann ist hier in Response ist das drin

1612
01:50:20,220 --> 01:50:24,120
Okay, dann printen wir die Response einmal

1613
01:50:24,120 --> 01:50:25,440
So, dann sagen wir

1614
01:50:25,440 --> 01:50:27,560
New Frontend API Response

1615
01:50:27,560 --> 01:50:29,600
Mir fällt echt kein dümmerer Name ein gerade

1616
01:50:29,600 --> 01:50:38,840
so gibt es die möglichkeit dass man das muss ich jetzt alles von hand mapen dass

1617
01:50:38,840 --> 01:50:47,720
ich jetzt irgendwie sage response so direkt geht net in dort nette

1618
01:50:47,720 --> 01:50:49,760
könnte ich jetzt sowas hier machen geht das ja auch

1619
01:50:49,760 --> 01:50:52,980
Nee, ne?

1620
01:50:55,280 --> 01:50:55,560
Oder?

1621
01:51:00,480 --> 01:51:01,960
Okay, Response.

1622
01:51:03,440 --> 01:51:04,500
User ID.

1623
01:51:06,920 --> 01:51:08,400
Was will er jetzt von mir?

1624
01:51:10,740 --> 01:51:12,600
May produce 0 Pro...

1625
01:51:12,600 --> 01:51:14,360
Warum?

1626
01:51:15,780 --> 01:51:17,320
Weil Response 0 sein könnte?

1627
01:51:17,720 --> 01:51:18,780
Gibt's in Java sowas?

1628
01:51:19,760 --> 01:51:21,660
Das ist nichts Null.

1629
01:51:28,000 --> 01:51:29,720
Spawns.

1630
01:51:30,060 --> 01:51:31,060
ID.

1631
01:51:32,560 --> 01:51:33,600
Spawns.

1632
01:51:34,540 --> 01:51:35,200
Title.

1633
01:51:36,460 --> 01:51:37,400
Spawns.

1634
01:51:38,060 --> 01:51:38,660
Completed.

1635
01:51:39,260 --> 01:51:40,560
Und jetzt kommt ein Timestamp.

1636
01:51:41,060 --> 01:51:42,020
Jetzt brauchen wir ein Timestamp.

1637
01:51:42,620 --> 01:51:44,000
Unix Timestamp.

1638
01:51:45,680 --> 01:51:48,600
Java generate Unix Timestamp.

1639
01:51:49,760 --> 01:51:51,940
Unique Time in Java.

1640
01:51:54,640 --> 01:51:56,760
System Current Time Millispl...

1641
01:51:56,760 --> 01:51:59,280
Easy.

1642
01:52:10,560 --> 01:52:11,700
So.

1643
01:52:13,040 --> 01:52:14,720
Es ist ein Long.

1644
01:52:18,720 --> 01:52:19,160
Okay.

1645
01:52:19,760 --> 01:52:24,140
So, jetzt haben wir hier unsere komische Klasse am Start dafür.

1646
01:52:29,040 --> 01:52:30,000
Message oder so.

1647
01:52:30,760 --> 01:52:34,600
Jetzt ist natürlich die Frage, wie kriegen wir diese Klasse hier verschickt?

1648
01:52:35,460 --> 01:52:38,060
Kann man da auch einfach sagen, Message?

1649
01:52:39,400 --> 01:52:39,640
Ne.

1650
01:52:40,380 --> 01:52:42,860
Wie serialise ich das denn jetzt wieder als Message?

1651
01:52:47,500 --> 01:52:47,980
New?

1652
01:52:47,980 --> 01:52:51,040
Binary Message, Pong Message

1653
01:52:51,040 --> 01:52:53,300
Ich will keine Binary Message

1654
01:52:53,300 --> 01:52:54,360
Ich will eine Text Message

1655
01:52:54,360 --> 01:52:56,940
Aber ich würde gerne

1656
01:52:56,940 --> 01:53:01,500
Das serializen

1657
01:53:01,500 --> 01:53:06,460
Macht das Spring auch irgendwie für mich?

1658
01:53:10,460 --> 01:53:12,200
Du kannst es einfach returnen

1659
01:53:12,200 --> 01:53:12,860
Ne, anscheinend nicht

1660
01:53:17,980 --> 01:53:26,140
anscheinend nicht also gucken wir noch ob wir gucken mal schnell ob noch alles funktioniert

1661
01:53:26,140 --> 01:53:37,480
system out message aber ob das hier an sich funktioniert

1662
01:53:37,480 --> 01:53:47,260
ja und timestamp unix time und alles

1663
01:53:47,260 --> 01:53:59,380
ich habe keinen return tab es gibt hier nichts was return wird ich will das als als message an

1664
01:53:59,380 --> 01:54:07,440
alle meine frontend sachen schicken also ist jetzt wie wie serielle ist sehr realisiere ich

1665
01:54:07,440 --> 01:54:18,400
das denn schön dass chasen dass das spring magic macht aber spring serialize objekt to jason

1666
01:54:18,400 --> 01:54:23,600
auto sind objekt zu jason

1667
01:54:23,600 --> 01:54:41,600
Jason

1668
01:54:41,600 --> 01:54:44,340
Jackson

1669
01:54:44,340 --> 01:54:46,520
What the fuck

1670
01:54:53,600 --> 01:54:55,780
Pleon wieder.

1671
01:55:00,780 --> 01:55:02,020
Object Mapper.

1672
01:55:09,120 --> 01:55:11,200
Object Mapper.

1673
01:55:13,120 --> 01:55:14,160
Ah ne.

1674
01:55:14,400 --> 01:55:15,880
New Object Mapper.

1675
01:55:19,440 --> 01:55:20,400
Write.

1676
01:55:21,600 --> 01:55:22,100
Value.

1677
01:55:22,600 --> 01:55:25,820
Okay, kryptischer hätte man es jetzt ja nur wirklich nicht benennen können.

1678
01:55:27,740 --> 01:55:29,600
New Object Mapper Write Value.

1679
01:55:29,680 --> 01:55:32,160
Und da kommt dann am Ende ein serialisiertes Jason-Buy raus.

1680
01:55:32,280 --> 01:55:34,960
Also, die Benamung ist wirklich hängen geblieben.

1681
01:55:44,360 --> 01:55:45,340
Auch nicht besser.

1682
01:55:52,100 --> 01:56:04,460
wobei ich will ja gar kein egal will er da gar keine exception

1683
01:56:04,460 --> 01:56:07,400
schmeißen muss ich jetzt wieder try try catchen oder was

1684
01:56:07,400 --> 01:56:26,620
Jetzt muss das hier natürlich, wenn ich das hier brauche, muss das in das Trial rein.

1685
01:56:26,620 --> 01:56:28,900
mehr Einrückungstiefe, please.

1686
01:56:39,040 --> 01:56:39,480
So.

1687
01:56:40,740 --> 01:56:42,740
Jetzt kann ich das hier schicken.

1688
01:56:43,460 --> 01:56:44,200
Das ist jetzt nicht schön.

1689
01:56:44,280 --> 01:56:46,100
Das kann man bestimmt noch etwas verfeinern,

1690
01:56:46,200 --> 01:56:47,960
weil man versteht, was man da eigentlich macht.

1691
01:56:49,020 --> 01:56:50,620
So, aber jetzt müsste ich hier eigentlich

1692
01:56:50,620 --> 01:56:51,540
eine Antwort kriegen.

1693
01:56:52,080 --> 01:56:52,220
Ja.

1694
01:56:53,800 --> 01:56:54,680
Mit Timestamp.

1695
01:56:55,800 --> 01:56:56,200
Kunst.

1696
01:56:56,620 --> 01:57:05,860
Das ist, wenn du Java und C++ zusammenwurschtelst, ja.

1697
01:57:08,520 --> 01:57:09,220
Das funzt.

1698
01:57:12,820 --> 01:57:18,220
Wir kriegen jetzt alle Sekunde, also der ruft jetzt einmal in der Sekunde von der API was Neues ab,

1699
01:57:18,700 --> 01:57:21,420
packt noch einen Timestamp dabei und schickt es an mein Frontend zurück.

1700
01:57:21,700 --> 01:57:26,100
Heißt im Endeffekt auch, wenn wir jetzt hier in unser Frontend gehen,

1701
01:57:26,620 --> 01:57:28,860
Kriegen wir alle Sekunde eine Nachricht geschickt?

1702
01:57:35,300 --> 01:57:38,380
Guck mal, ich hatte gerade mehrfach 8 hintereinander.

1703
01:57:40,520 --> 01:57:42,660
So, und jetzt können wir das eigentlich anzeigen.

1704
01:57:43,180 --> 01:57:47,000
Also sprich, wir können jetzt sagen, onMessage, wir loggen das.

1705
01:57:47,840 --> 01:57:51,800
Und jetzt hören meine Vanilla-Java-Skript-Skills gerade auf.

1706
01:57:53,540 --> 01:57:55,900
Moment, wie würde ich das jetzt eigentlich machen?

1707
01:57:55,900 --> 01:58:13,200
div id ja keine ahnung content oder so und dann java javascript document get element by id content

1708
01:58:13,200 --> 01:58:30,540
und jetzt irgendwie inner html inner text gleich message

1709
01:58:30,540 --> 01:58:35,640
ach nee moment

1710
01:58:35,640 --> 01:58:42,540
Pass.

1711
01:58:42,540 --> 01:58:44,800
Message.

1712
01:58:53,100 --> 01:58:57,900
Ach, Data.

1713
01:59:05,640 --> 01:59:13,860
Ich check's immer noch nicht so ganz.

1714
01:59:18,660 --> 01:59:19,880
Ach ne, Moment. Text.

1715
01:59:20,540 --> 01:59:22,100
Ich muss da gar nichts chasen, parsen.

1716
01:59:23,640 --> 01:59:24,080
Ja.

1717
01:59:27,040 --> 01:59:27,480
Okay.

1718
01:59:27,740 --> 01:59:28,060
Für uns.

1719
01:59:29,080 --> 01:59:31,680
Wir kriegen per Websocket

1720
01:59:31,680 --> 01:59:33,760
einmal in der Sekunde neues Zeug geschickt.

1721
01:59:34,600 --> 01:59:37,160
Wir verzichten jetzt mal drauf, unser Frontend hübsch zu machen.

1722
01:59:37,280 --> 01:59:38,280
Darum geht es jetzt ja nicht.

1723
01:59:41,300 --> 01:59:42,060
Das klappt.

1724
01:59:43,500 --> 01:59:49,560
Also ich muss sagen, dass das deutlich einfacher ging, als ich mir das vorgestellt habe.

1725
01:59:50,000 --> 01:59:54,160
Das hier ist nicht schön und das ist jetzt sicher bestimmt nicht Java, Business, Enterprise,

1726
01:59:54,160 --> 01:59:56,120
High IQ Zeug mäßig gemacht.

1727
01:59:58,060 --> 02:00:02,440
Gerade diese 500 mal Try ineinander finde ich schon ziemlich cringe.

1728
02:00:02,440 --> 02:00:08,020
wobei das brauchen wir doch gar nicht guck mal das try können wir uns sparen

1729
02:00:08,020 --> 02:00:15,400
weil wir jetzt das äußere haben so kann man mehrere exceptions eigentlich

1730
02:00:15,400 --> 02:00:23,440
catchen irgendwie so ne ja man muss ja mehrere catch blöcke machen wahrscheinlich

1731
02:00:23,440 --> 02:00:32,200
aber wir können einfach hier zack bumm so easy einfach mal alles ignorieren

1732
02:00:32,200 --> 02:00:40,200
mein pipe da wäre ich jetzt nicht drauf gekommen

1733
02:00:40,200 --> 02:00:48,220
wo man chat gpt fragen wie wir das hier hübscher machen können

1734
02:00:48,220 --> 02:01:04,660
Wie könnte man diese Methode, das ist ja eine Klasse, ist egal, hübscher machen?

1735
02:01:04,660 --> 02:01:11,920
Einige Codesmells, Leute!

1736
02:01:11,920 --> 02:01:20,660
Codesmells

1737
02:01:20,660 --> 02:01:25,380
JetGPT hat anscheinend gehört

1738
02:01:25,380 --> 02:01:27,240
dass ich mich 3-4 Tage nicht waschen darf

1739
02:01:27,240 --> 02:01:27,800
wegen meiner

1740
02:01:27,800 --> 02:01:30,380
Pflaster auf dem Rücken

1741
02:01:30,380 --> 02:01:36,420
Verletzung der Single Responsibility

1742
02:01:36,420 --> 02:01:36,740
Prinzip

1743
02:01:36,740 --> 02:01:38,360
Jetzt brauchen wir mal nicht übertreiben

1744
02:01:38,360 --> 02:01:45,360
hier jetzt flasche ich habe am donnerstag habe ich einen kleinen leberfleck raus geschnippelt

1745
02:01:45,360 --> 02:01:51,120
bekommen am rücken michael 50 milliarden wollen lange nicht gesehen und der doktor hat gesagt ich

1746
02:01:51,120 --> 02:01:54,320
soll das pflaster so lange wie es geht drauf lassen uns auf gar keinen fall soll wasser

1747
02:01:54,320 --> 02:02:00,480
dran kommen das heißt nach möglichkeit dahinter nicht wäschen oder nicht duschen gehen für so

1748
02:02:00,480 --> 02:02:05,480
lange wie ich aushalte ich habe mir gedacht bis montag halte ich aus das ist dann donnerstag

1749
02:02:05,480 --> 02:02:07,940
Freitag, Samstag, so vier Tag quasi.

1750
02:02:09,760 --> 02:02:11,840
Dann muss ich aber mal wieder...

1751
02:02:13,600 --> 02:02:15,340
Nutzt doch Cursor für die Entwicklung.

1752
02:02:15,500 --> 02:02:15,700
Nee.

1753
02:02:20,500 --> 02:02:21,240
Also Michael,

1754
02:02:21,400 --> 02:02:23,160
fünf Spiele an. Bei mir hat der Doktor gesagt,

1755
02:02:23,220 --> 02:02:24,620
du musst mir da keine Gedanken machen.

1756
02:02:27,220 --> 02:02:29,020
Da hat dein Kollege aber nochmal Glück gehabt,

1757
02:02:29,140 --> 02:02:31,140
dass das alles so...

1758
02:02:31,140 --> 02:02:33,940
so früh erkannt wurde, oder?

1759
02:02:35,480 --> 02:02:42,740
Wenn nicht Cursor, was sonst?

1760
02:02:43,920 --> 02:02:45,460
Einfach weniger Vibe coden.

1761
02:02:53,140 --> 02:02:54,320
Vierjähriges Jubiläum.

1762
02:02:54,420 --> 02:02:55,380
Das stand nirgendwo.

1763
02:02:57,040 --> 02:02:58,320
Wieso nutzt du Java?

1764
02:02:58,600 --> 02:03:00,340
Weil ich auf der Arbeit

1765
02:03:00,340 --> 02:03:02,360
eventuell demnächst ein bisschen Java

1766
02:03:02,360 --> 02:03:04,340
basteln muss.

1767
02:03:05,480 --> 02:03:11,540
muss ich habe mich da freiwillig freiwillig mache ich mache so ein 14 tage praktikum bei

1768
02:03:11,540 --> 02:03:15,980
unseren entwicklern ich nenne es mal praktikum habe ich gesagt will ich mal machen und da hätte

1769
02:03:15,980 --> 02:03:21,600
dachte ich mir es wäre vielleicht nicht verkehrt ein bisschen bisschen probleme bisschen was zu

1770
02:03:21,600 --> 02:03:29,360
wissen darüber wo ist das problem mit vibe coding wenn du weib code ist ohne zu verstehen was es

1771
02:03:29,360 --> 02:03:42,060
macht so also was sagt er denn jetzt rief die fakt dort

1772
02:03:42,060 --> 02:03:57,280
Will er mit Logger?

1773
02:03:57,700 --> 02:03:58,160
Geh weg.

1774
02:04:00,600 --> 02:04:01,880
Websocket Service?

1775
02:04:02,320 --> 02:04:02,540
What?

1776
02:04:03,540 --> 02:04:05,520
Alter, ChatGPT macht da wieder

1777
02:04:05,520 --> 02:04:07,720
ein super krasses Business Enterprise

1778
02:04:07,720 --> 02:04:08,760
Ding draus.

1779
02:04:12,060 --> 02:04:30,060
also ich weiß nicht so viel besser finde ich das jetzt nicht was chat gpt da gebastelt hat

1780
02:04:30,060 --> 02:04:38,640
außer dass es das alles ausgeklärt hat

1781
02:04:38,640 --> 02:04:49,500
würde es dann auch funktionieren ich bist gar nicht ausbricht also das finde ich ganz

1782
02:04:49,500 --> 02:04:54,540
gut was chat gpt macht das ist das finde ich in der tat tatsächlich sinnvoll und

1783
02:04:54,540 --> 02:04:59,460
zwar zu sagen dass man das was man hier mehrfach braucht dass man daraus

1784
02:04:59,460 --> 02:05:05,560
kann es das kann doch intelli j garantiert

1785
02:05:05,560 --> 02:05:18,780
So, ja.

1786
02:05:20,880 --> 02:05:22,880
Das finde ich tatsächlich ganz sinnvoll.

1787
02:05:23,240 --> 02:05:24,420
Einmal machen wir das.

1788
02:05:24,980 --> 02:05:25,960
Können wir das renamen?

1789
02:05:27,780 --> 02:05:29,020
Rename zu...

1790
02:05:29,020 --> 02:05:31,120
Ich weiß, das macht man im Java-Umfeld nicht,

1791
02:05:31,200 --> 02:05:32,500
aber ich finde das eigentlich mal ganz gut so.

1792
02:05:32,840 --> 02:05:33,560
Dass man...

1793
02:05:35,560 --> 02:05:39,600
dass man das Ding hier einmal global macht,

1794
02:05:39,840 --> 02:05:41,800
das macht natürlich schon irgendwo Sinn.

1795
02:05:44,900 --> 02:05:45,500
Ja.

1796
02:05:46,260 --> 02:05:47,460
Aber funzt alles.

1797
02:05:54,400 --> 02:05:55,600
Bin begeistert.

1798
02:05:58,440 --> 02:06:00,740
Ja, da haben wir unser Ziel für heute erreicht.

1799
02:06:02,500 --> 02:06:03,060
Websocket.

1800
02:06:03,060 --> 02:06:07,760
oder was ist das? Funktionierende Websocket-Anwendung

1801
02:06:07,760 --> 02:06:09,260
mit Spring Boot.

1802
02:06:14,080 --> 02:06:14,800
Geguckt, wie man

1803
02:06:14,800 --> 02:06:17,160
HTTP-Requests macht.

1804
02:06:18,840 --> 02:06:20,500
Und Chat, was sagt ihr?

1805
02:06:21,000 --> 02:06:23,500
Wie schlage ich mich für jemanden, der keinen Plan von Spring Boot

1806
02:06:23,500 --> 02:06:26,660
und Java hat? Ich finde, geht doch klar, oder?

1807
02:06:27,060 --> 02:06:28,020
Für die kurze Zeit.

1808
02:06:28,020 --> 02:06:35,100
ich habe jetzt nicht gefragt dass ich krass gelobt werde interessiert mich einfach nur

1809
02:06:35,100 --> 02:06:43,800
was sie davon denkt außerdem loben geht immer html file von spring so das hatten wir schon

1810
02:06:43,800 --> 02:06:51,780
das haben wir schon gemacht hier aber das blöde ist wenn das html ausgeliefert wird hier vom vom

1811
02:06:51,780 --> 02:06:58,240
tomcat dann muss ich jedes mal die anwendung neu starten

1812
02:07:05,100 --> 02:07:09,540
anhand einer sonstigen konings okay das heißt sonst programmiert immer totalen

1813
02:07:09,540 --> 02:07:17,920
schrott und heute war okay oder spring dev tools für hot reload das habe ich

1814
02:07:17,920 --> 02:07:19,880
gelesen im Tutorial, das reloadet

1815
02:07:19,880 --> 02:07:21,700
irgendwie alle 5 oder 10 Sekunden.

1816
02:07:21,840 --> 02:07:22,880
Das ist doch eklig.

1817
02:07:24,280 --> 02:07:25,340
Und mal ganz davon abgesehen,

1818
02:07:25,800 --> 02:07:27,840
wenn man irgendein Frontend-Framework

1819
02:07:27,840 --> 02:07:30,260
benutzt mit Vite oder so für Hot Reload,

1820
02:07:30,560 --> 02:07:32,100
dann kann man das eh nicht ausliefern lassen.

1821
02:07:32,480 --> 02:07:33,980
Dann würde ich das eh so machen, dass ich

1822
02:07:33,980 --> 02:07:35,760
die Frontend-Anwendung halt so

1823
02:07:35,760 --> 02:07:37,580
entwickle und einen

1824
02:07:37,580 --> 02:07:39,520
Node.js Dev-Server laufen habe

1825
02:07:39,520 --> 02:07:41,880
und dann an mein Backend gehe und

1826
02:07:41,880 --> 02:07:43,320
erst wenn ich das Ding quasi

1827
02:07:43,320 --> 02:07:45,860
ausliefern will

1828
02:07:45,860 --> 02:07:53,240
im Endeffekt würde ich da eine statische Version bauen lassen und hier rein kopieren.

1829
02:08:03,240 --> 02:08:09,740
Swing UI. Swing, sieht das mittlerweile wenigstens ganz, ganz brauchbar aus.

1830
02:08:15,860 --> 02:08:20,800
sondern ich gehe jetzt eine runde joggen wird man echt wieder zeit habe zwei monate fast nichts gemacht

1831
02:08:23,800 --> 02:08:27,100
Überlegt noch ob ich meine fitness uhr anziehen soll oder nicht

1832
02:08:28,120 --> 02:08:34,000
weil wenn ich die uhr anziehe dann sehe ich erst mal wieder wie schlecht geworden bin deswegen lasse ich die uhr wahrscheinlich aus

1833
02:08:34,000 --> 02:08:42,580
Näh, Strava poste ich nicht.

1834
02:08:43,000 --> 02:08:45,400
Ich poste auch mein Fahrradzeug nicht auf Strava.

1835
02:08:57,780 --> 02:08:58,820
Das macht nix.

1836
02:08:59,680 --> 02:09:01,100
Soll nur kein Wasser drankommen.

1837
02:09:04,000 --> 02:09:13,120
Das Problem ist allerdings,

1838
02:09:13,300 --> 02:09:14,720
ihr sagt jetzt da was,

1839
02:09:15,720 --> 02:09:18,280
wenn ich mich bis Montag nicht gescheit wäschen darf,

1840
02:09:19,580 --> 02:09:20,920
wegen dem Pflaster und alles,

1841
02:09:21,000 --> 02:09:22,100
wenn ich jetzt rennen gehe,

1842
02:09:22,460 --> 02:09:23,380
dann wird das ja noch schlimmer.

1843
02:09:26,100 --> 02:09:28,140
Ja, dann muss ich vielleicht doch morgen schon.

1844
02:09:34,000 --> 02:09:45,840
ja waschlappen darf ich waschlappen darf ich das darf ich ja ich muss nur gucken

1845
02:09:45,840 --> 02:09:51,660
dass auf den rücken kein kein wasser kommt gut leute da sehen wir uns

1846
02:09:51,660 --> 02:09:54,720
vielleicht morgen früh zum aufwachen schrie mal gucken ob ich diese diese

1847
02:09:54,720 --> 02:10:01,440
woche ein hinbekomme wir hören uns bis dann macht's gut

1848
02:10:01,440 --> 02:10:02,160
See you!

