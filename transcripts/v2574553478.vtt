WEBVTT

00:00.000 --> 00:29.980
Untertitelung des ZDF, 2020

00:30.000 --> 00:59.980
Untertitelung des ZDF, 2020

01:00.000 --> 01:29.980
Untertitelung des ZDF, 2020

01:30.000 --> 01:59.980
Untertitelung des ZDF, 2020

02:00.000 --> 02:11.700
Bam!

02:13.540 --> 02:14.220
Wie Bruce Lee.

02:19.640 --> 02:20.440
Da bin ich.

02:24.560 --> 02:26.180
So, jetzt müssen wir mal andere Musik machen.

02:26.180 --> 02:28.460
Das war nur zum Einstimmen.

02:28.460 --> 02:34.220
machen wir unsere standard playlist die gefällt mir am besten

02:37.340 --> 02:40.640
doch so schön entspannend

02:46.840 --> 02:49.840
perfekt

02:49.840 --> 03:01.780
Bin gerade etwas verwirrt, warum kackt hier mein Mouse-Sharing-Ding die ganze Zeit ab?

03:01.780 --> 03:02.780
Was ist da los?

03:02.780 --> 03:05.680
Ah ja, jetzt geht's wieder.

03:05.680 --> 03:07.680
Keine Ahnung.

03:07.680 --> 03:11.160
Ha, aber war das nett.

03:11.160 --> 03:16.360
So, Windows hat an meinen Sound-Settings nichts geändert, das ist schon mal sehr, sehr nice.

03:16.360 --> 03:24.820
dass windows mal heute nichts an den sound settings geändert hat max am start mod check

03:24.820 --> 03:31.660
geht schon wieder nett was ist das

03:31.660 --> 03:38.960
ich starte jetzt mal meinen vorschau rechner neu

03:38.960 --> 03:47.360
Ups, jetzt habe ich irgendwas runtergeschmissen. Heck, wait. XDHD.

03:47.360 --> 03:59.280
Das ist total broken. Mein Maus-Sharing ist total kaputt. Ich starte mal neu.

03:59.280 --> 04:05.980
Da ist irgendwas im Arsch. Restart. Aber den seht ihr nicht. Ah, ich habe meine

04:05.980 --> 04:10.900
andere tastatur runter geschmissen okay schon gewundert was da geradezu geknallt

04:10.900 --> 04:15.520
hat ich gerade mal wieder hoch räumen

04:17.680 --> 04:24.600
so dass andere tastatur umstöpseln dass ich den rechner neu starten kann

04:25.160 --> 04:30.400
ist preventing from restart warum prevented hier irgendwas vom restart

04:30.400 --> 04:42.100
safe wie starte anzeige direkt aber nur weil ich krank daheim in wieso sonst früher warst

04:42.100 --> 04:49.680
du auch im stream wenn du nicht krank warst die kommt muss bestimmt mit dem grill was unternehmen

04:49.680 --> 04:58.460
lasst mich raten system die beste software ist aber gar kein linux es ist eine windows kiste

04:58.460 --> 05:01.800
App ist, was ist denn das?

05:01.940 --> 05:02.460
Windows

05:02.460 --> 05:06.180
App is preventing restart, Task Manager

05:06.180 --> 05:07.860
Restart anywhere

05:07.860 --> 05:10.140
Ach, der macht Updates im Hintergrund

05:10.140 --> 05:11.860
Der hat mich nur gebaited

05:11.860 --> 05:14.260
Der hat mich einfach nur gebaited

05:14.260 --> 05:15.660
Der hat geschrieben, dass das

05:15.660 --> 05:18.060
App is preventing restart und in Wirklichkeit

05:18.060 --> 05:19.480
hat er

05:19.480 --> 05:21.400
Updates gemacht

05:21.400 --> 05:24.520
Windows gebaited mal wieder richtig hart

05:24.520 --> 05:28.320
You got gebaited

05:28.320 --> 05:32.440
So, jetzt restartet der Rechner.

05:32.440 --> 05:39.100
So, Passwort eingegeben, zack, Tastatur wieder mal hier umstöpseln.

05:39.100 --> 05:42.200
Ready, exzellent.

05:42.200 --> 05:44.840
So, allerwichtigste vorneweg, Leute.

05:44.840 --> 05:46.440
Ohne geht das nicht.

05:46.440 --> 05:49.000
Arch by the way, Package Updates.

05:49.000 --> 05:52.180
Müssen immer Pleading Edge Package Stand haben.

05:52.180 --> 05:55.440
Kann nicht sein, dass unsere Pakete mehr als 2 Stunden alt sind.

05:55.440 --> 05:59.780
Es muss direkt Buy Release, muss das direkt Bäm, muss das knallen.

06:03.020 --> 06:05.080
Jetzt macht er immer noch Working on Updates.

06:06.660 --> 06:09.780
Ist Windows 10 nicht aus dem Support? Warum kriege ich noch Updates?

06:12.420 --> 06:15.220
Ne, nächsten Monat, oder? Nächsten Monat, stimmt's?

06:15.460 --> 06:18.340
Nicht diesen Monat, nächsten Monat ist es aus dem Support, oder?

06:19.500 --> 06:20.460
Wisst ihr das aus dem Kopf?

06:20.460 --> 06:24.220
Chat weiß sowas doch immer

06:24.220 --> 06:25.800
Chat ist doch

06:25.800 --> 06:27.860
Massive High IQ

06:27.860 --> 06:30.080
Windows macht Windows Dinge

06:30.080 --> 06:32.100
Ja gut, hat Windows so an sich

06:32.100 --> 06:34.780
Macht's

06:34.780 --> 06:38.840
Fünfter, Zehnter, okay, das ist einen halben Monat noch

06:38.840 --> 06:42.520
Ich benutze Windows und Linux

06:42.520 --> 06:44.860
Zusammen

06:48.860 --> 06:49.740
Beste Kombination

06:49.740 --> 06:56.620
so jetzt geht jetzt jetzt geht auch das maus sharing wieder machen wir hier mal

06:56.620 --> 07:06.480
alles wieder auf es und ganzen weeps unter uns können sich jetzt freuen

07:07.120 --> 07:16.900
jetzt habe ich es ja wohl gut dann package updates ich wirklich gut gleich

07:16.900 --> 07:18.920
Reboot. So, folgende

07:18.920 --> 07:20.760
Themen habe ich mir vorhin überlegt. Das ist auch

07:20.760 --> 07:21.200
wahrscheinlich

07:21.200 --> 07:23.760
jetzt erstmal der letzte

07:23.760 --> 07:26.720
Java Spring Boot Stream, weil

07:26.720 --> 07:28.780
dann haben wir alles

07:28.780 --> 07:29.420
soweit gemacht.

07:30.860 --> 07:32.920
Dann bin ich Java und Spring Boot Experte.

07:33.000 --> 07:33.180
Easy.

07:35.960 --> 07:36.840
Ups, das wollte ich

07:36.840 --> 07:37.160
gar nicht.

07:40.240 --> 07:40.720
Reboot

07:40.720 --> 07:41.300
kommt gleich.

07:42.240 --> 07:44.080
Dann kann ich das in Lebenslauf schreiben.

07:45.160 --> 07:46.680
20 Jahre Java und Spring Boot

07:46.680 --> 07:48.340
so lange Springboot überhaupt schon

07:48.340 --> 07:49.660
Erfahrung.

07:50.980 --> 07:52.940
Dann Kotlins. Das habe ich mir tatsächlich

07:52.940 --> 07:54.820
überlegt, ob wir das Ganze dann nicht nochmal

07:54.820 --> 07:56.620
in Kotlin bauen. Aber das Ding ist,

07:57.040 --> 07:58.560
ich muss mich mit Kotlin nicht auskennen.

07:58.660 --> 08:01.080
Mit Java ist ein bisschen auskennen nicht verkehrt.

08:01.560 --> 08:02.840
Wobei, als wäre das

08:02.840 --> 08:04.740
die einzige Sache, die ich je gelernt hätte, ohne dass ich

08:04.740 --> 08:06.160
das wirklich brauchen würde. Also,

08:06.940 --> 08:07.840
warum eigentlich nicht?

08:08.400 --> 08:10.060
Warum eigentlich nicht? So.

08:10.980 --> 08:12.940
Hier Package Updates gemacht. Hier Package

08:12.940 --> 08:14.320
Updates. Was?

08:16.680 --> 08:26.160
keine updates das stimmt was nicht äußerst wir champ da kann was nicht stimmen

08:26.160 --> 08:35.940
aber hier peitsche haben wenigstens wenigstens peitsche update so dass

08:35.940 --> 08:44.400
mama zu was läuft noch terminate tag zwar auch zu uns noch mal auch zu und dann mal

08:44.400 --> 08:51.300
Artstealungs wird immer Updates.

08:52.700 --> 08:53.980
Muss Rolling

08:53.980 --> 08:55.560
sein.

09:01.900 --> 09:03.800
Die machen bestimmt Sprint Planning.

09:04.100 --> 09:04.560
Jeden Tag.

09:05.520 --> 09:07.540
Ja, Artstealungsleute. So aktuell wie das ist.

09:08.880 --> 09:10.080
Tägliche Mikro Sprints.

09:14.400 --> 09:20.860
Ich habe heute meinen DHL-Booten gefragt. Warum?

09:22.580 --> 09:30.080
Du meinst wegen dem, was letztens einer im Chat geschrieben hat, dass sich die Polizei als DHL-Boot verkleidet hat?

09:39.740 --> 09:43.200
Ah, wir haben das aufgegeben, in T-Shirt-Größen zu planen.

09:44.400 --> 09:46.820
Ich weiß gar nicht, in was wir jetzt planen.

09:47.880 --> 09:49.280
Ich plane glücklicherweise nicht.

09:54.960 --> 09:56.640
Zum Glück muss ich nicht planen.

09:57.140 --> 09:58.520
Mein Chef hat mir letztens auch erzählt,

09:58.620 --> 10:01.000
dass wir als Karrieremöglichkeit auch den Projektmanagement

10:01.000 --> 10:02.260
Fahrt haben.

10:03.520 --> 10:04.860
Da habe ich mir kurz gedacht.

10:08.320 --> 10:11.040
Das letzte, was ich machen will, ist Projektmanagement, Alter.

10:11.040 --> 10:15.060
Aber ey, jetzt mal ohne Scheiß

10:15.060 --> 10:17.760
Ich find's ja gut, dass es da solche Infogespräche gibt

10:17.760 --> 10:19.600
Weil es gibt ja durchaus auch Leute

10:19.600 --> 10:20.960
Die sagen, die wollen sowas machen

10:20.960 --> 10:23.940
Aber Projektmanagement

10:23.940 --> 10:25.940
Ist glaube ich das Schlimmste, was ich mir vorstellen könnte

10:25.940 --> 10:28.100
Okay, Reboot

10:28.100 --> 10:38.200
Die können mit vollem Ernst

10:38.200 --> 10:39.760
Über T-Shirtgrößen sprechen

10:39.760 --> 10:45.120
Die können auch Requirements

10:45.120 --> 10:46.180
Taken und sowas

10:46.180 --> 10:49.820
Und was

10:49.820 --> 10:53.040
Die können auch feststellen, dass sie den

10:53.040 --> 10:54.400
Need haben für irgendwie

10:54.400 --> 10:56.880
Ganz ehrlich

10:56.880 --> 10:58.720
Ich kann Projektmanagement Sprache nicht

10:58.720 --> 11:00.600
Aber die ist zum größten Teil ziemlich bescheuert

11:00.600 --> 11:03.640
So

11:03.640 --> 11:05.740
Da sind wir wieder

11:05.740 --> 11:07.420
Terminal offen

11:07.420 --> 11:09.460
IntelliJ wieder auf

11:09.460 --> 11:19.640
so heute steht auf dem programm den kram vom letzten mal kann ich eigentlich wieder komplett

11:19.640 --> 11:27.520
raus meißen weil das ist nicht so verwirrend wird wir machen jetzt einfach high IQ move wir

11:27.520 --> 11:36.680
machen jetzt ein git commit und dann machen wir neuen branch git commit minus genau so muss das

11:36.680 --> 11:44.180
heißen wird geht check out minus b neuer branche und da löschen wir jetzt ein paar sachen draus

11:44.180 --> 11:48.500
das ist natürlich absolut so benannt dass ich in zwei monaten noch weiß was ich da gemacht

11:48.500 --> 11:56.120
habe und dann löschen wir mal wieder ein paar sachen das ist nicht so unübersichtlich wird

11:56.120 --> 11:56.920
So, und

11:56.920 --> 11:59.480
der Plan für heute ist

11:59.480 --> 12:03.840
Wordpad, was ist mit mir los?

12:05.520 --> 12:05.940
The fuck?

12:06.520 --> 12:08.440
Wie komme ich jetzt allen Ernstes auf Wordpad?

12:09.960 --> 12:10.820
Egal, Wordpad.

12:11.160 --> 12:12.320
Dann ist es heute Wordpad.

12:13.960 --> 12:14.400
Meinetwegen.

12:16.780 --> 12:17.520
Wusste gar nicht,

12:17.760 --> 12:19.220
haben die das nicht abgeschafft?

12:19.380 --> 12:20.860
Hieß es nicht mal Wordpad, soll es nicht mal geben?

12:26.120 --> 12:40.140
Ja, da musst du mal irgendwelche High-IQ-Projektmanagement-Leute fragen.

12:40.720 --> 12:44.380
Die sind ja auch der Meinung, dass zwei Frauen das Kind in 4,5 Monaten kriegen können.

12:45.200 --> 12:48.020
Was das wiederum für eine T-Shirt-Größe ist, weiß ich allerdings nicht.

12:51.200 --> 12:54.360
So, also, was heute ansteht, ist folgendes, was wir ausprobieren.

12:54.360 --> 13:00.240
das was wir vom letzten mal übrig haben ein pro metheus wenn man das richtig schreibt um

13:00.240 --> 13:07.020
metheus endpoint für monitoring das muss relativ easy sein da muss man anscheinend bloß schreiben

13:07.020 --> 13:12.400
irgendwie in der pro metheus endpoint true oder so und dann geht das mal ausprobieren weil ein

13:12.400 --> 13:17.520
paar metriken über die anwendung sammeln können ist nicht verkehrt dann wollte ich einmal angucken

13:17.520 --> 13:24.120
FFI C Funktionen aus Java aufrufen. Da rufen wir testweise, ich kann nämlich nur bis 18 Uhr,

13:24.120 --> 13:29.520
deswegen wird das heute relativ kurz und knackig, da können wir nicht allzu viel machen. Mal gucken,

13:29.520 --> 13:34.500
wie man irgendwelche C Funktionen aufrufen kann aus Java. Das brauche ich tatsächlich relativ

13:34.500 --> 13:40.120
oft, weil ich öfters Interop mit anderen Sprachen mache, zum Beispiel mit Go und Go kann man nur

13:40.120 --> 13:46.800
interopen mit über ein C Interface oder auch irgendwas in C++ oder sowas. Kommt öfters mal

13:46.800 --> 13:53.160
vor in c sharp ist das relativ easy mit dll import wie sie in java geht mal gucken wir

13:53.160 --> 14:00.120
rufen irgendeine linux in der inge kölner funktion oder geliebte energie in der geliebte funktion

14:00.120 --> 14:03.600
rufen wir auf irgendwie keine und gett haus nehmen oder irgendwie sowas keine ahnung was

14:03.600 --> 14:15.720
man mal schauen also ich vermute mal das heißt bei java auch ffi ffi steht für wie heißt es auf

14:15.720 --> 14:24.540
deutsch ausländische funktionen interface naja fremde fremde funktionen interface und function

14:24.540 --> 14:30.720
interface heißt glaube ich und vorhin heißt ja so viel wie fremd oder ausländer aus der ausländische

14:30.720 --> 14:38.580
funktionen interface für ausländische funktionen heißt das also quasi sachen aus anderen sprachen

14:38.580 --> 14:46.380
sprachen so und dann kommen uns events an weil wir haben immer noch eine globale variable die weg muss

14:46.380 --> 14:58.100
interface auf deutsch schnittstelle schnittstelle für ausländische funktionen klingt das klingt

14:58.100 --> 15:07.440
schon fast was bürokratisches oder was ich baue ich probiere alles mögliche aus was bring boot

15:07.440 --> 15:16.800
kann ohne tieferen sinn damit ich in 14 tage entwickler praktikum bei mir auf der arbeit

15:16.800 --> 15:22.320
machen kann also ich gehe 14 tage mal in ein team wo java entwickler sind und dass ich jetzt nicht

15:22.320 --> 15:26.460
komplett ahnungslos bin habe ich mir gedacht gucke ich immer spring boot und java an weil ich weiß

15:26.460 --> 15:32.960
die machen da alles in java und benutzen spring gut freiwillig wohlgemerkt mache ich das ja nicht

15:32.960 --> 15:38.360
weil ich müsste und dann wenn wir ganz wild drauf sind heute wenn wir ganz ganz

15:38.360 --> 15:42.440
will drauf sind gucken uns mal wie macht man tests wie macht man tests sind ja

15:42.440 --> 15:46.340
wobei das werden wir nicht machen das wird es weil eigentlich eigentlich ist

15:46.340 --> 15:51.180
überflüssig testing komplett überflüssig wenn man first try alles immer

15:51.180 --> 15:57.200
fehlerfrei macht brauchen wir das net keine dokumentation keine kommentare

15:57.200 --> 16:02.580
nichts einfach first try fehlerfrei für immer also ich denke mal die oberen drei

16:02.580 --> 16:06.600
werden wir machen das gemacht aber in der wir machen es aber in der reihenfolge

16:06.600 --> 16:20.580
als jemand der beide schon gemacht hat es wird sich sehr ähnlich anfühlen

16:20.580 --> 16:24.580
was denn

16:24.580 --> 16:30.300
du meinst du was sind sie scharf macht und java oder was oder

16:30.300 --> 16:39.300
oder was ja gut kann er sein wäre sogar ganz gut

16:39.300 --> 16:48.720
wurde vor kurzem gekündigt und aktuell fast nur gegostet obwohl acht jahre erfahrung ich

16:48.720 --> 16:53.860
würde sagen wie auf dem kasten was software entwicklung angeht ist aktuell ein merkwürdiger

16:53.860 --> 17:03.220
markt vielleicht also ich weiß ja nicht als was und wo und weshalb vielleicht ist eine bewerbung

17:03.220 --> 17:09.820
auch nicht so nennt man das die bewerbung ist nichts wie mir wie heißt das im summa im summa

17:09.820 --> 17:15.400
deutsch wenn was nicht so toll ist keine ahnung vielleicht ist ja die bewerbung nicht ganz optimal

17:15.400 --> 17:21.880
natürlich auch einfach sein dass sie keinen bock haben gibt ja manche die schreiben stellen auf

17:21.880 --> 17:28.660
aus obwohl da eigentlich schon über vitamin b das ganze besetzt ist weil sie

17:28.660 --> 17:37.660
ausschreiben müssen und sowas aber acht jahre erfahrung hat der chat ja schon

17:37.660 --> 17:40.900
gesagt heißt ja nicht unbedingt dass man ahnung hat aber die chance dass jemand

17:40.900 --> 17:45.400
mit acht jahre erfahrung ahnung hat ist doch deutlich höher wie bei jemand mit

17:45.400 --> 17:49.300
keinem acht jahren erfahrung also ich würde mal prinzipiell von ausgehen dass

17:49.300 --> 17:54.340
immer mit acht jahren erfahrung in dem gebiet kein loop mehr ist das ist

17:54.340 --> 17:58.080
ungefähr so wo sich die leute früher in meinen videos immer darüber aufgeregt

17:58.080 --> 18:03.880
haben als gesagt hat jemand der was auch immer was es damals war kot 4 black ops

18:03.880 --> 18:11.680
1 keine ahnung ja oder irgend jemand der fünf jahre schon ego shooter spielt wird

18:11.680 --> 18:14.800
im durchschnitt besser sein als jemand der erst drei monate spielt er kann

18:14.800 --> 18:19.520
natürlich leute immer nein das kannst du doch überhaupt nicht sagen das ist

18:19.520 --> 18:22.420
überhaupt nicht so und es gibt leute sind nach drei monaten richtig gut

18:22.420 --> 18:25.900
welche sind nach fünf jahren immer noch scheiße ja extrem fälle gibt es immer

18:25.900 --> 18:30.680
aber ihr kennt ja diese verteilungskurve im durchschnitt wird das so sein

18:30.680 --> 18:34.460
im durchschnitt wird jemand mit acht jahren erfahrung mehr ahnung haben als

18:34.460 --> 18:39.480
jemand mit drei monaten erfahrung das gibt es das gibt es mehr als genug

18:39.480 --> 18:43.660
aber im durchschnitt sind die leute mit zehn jahren erfahrung sicherlich

18:43.660 --> 18:45.260
knowledgebler

18:45.260 --> 18:50.280
wie jemand mit

18:50.280 --> 18:51.880
einem Jahr oder drei Jahren.

18:58.840 --> 18:59.760
So, Chat.

19:00.600 --> 19:01.420
Ganz kurz.

19:03.540 --> 19:04.180
Kurz Hacker

19:04.180 --> 19:05.220
meinen Modus aktiviert.

19:06.280 --> 19:07.800
Das ist auch immer sehr gut für den

19:07.800 --> 19:10.400
Videocodec. Das pixelt immer so schön auf Twitch.

19:11.120 --> 19:12.300
Ich muss mir mal kurz noch ein Wasser

19:12.300 --> 19:16.320
holen ich habe heute fast den ganzen tag nichts getrunken weil ich muss nach frankfurt fahren

19:16.320 --> 19:25.740
stelle ich mal vor präsenzveranstaltungen die war mein tag naja präsenzveranstaltung ich musste

19:25.740 --> 19:32.460
früh aufstehen und in frankfurt wird das vor ort alles angucken aber das war nicht schlimm

19:32.460 --> 19:37.700
die präsenzveranstaltung bei meinem neuen arbeitgeber sind recht angenehm im vergleich

19:37.700 --> 19:44.840
zudem beim letzten ich bin gleich wieder da ich hole mir kurz was zu trinken

20:07.700 --> 20:36.120
So, da bin ich wieder.

20:36.120 --> 20:43.140
hattest du einen workshop hatte ich nicht wir waren heute alle das komplette team war vor ort

20:43.140 --> 20:50.280
weil heute hatten wir gruppenrunde und auf die gruppenrunde ist der chef von meinem chef dessen

20:50.280 --> 20:57.660
chef gekommen also quasi der komplette it chef und da hat mein chef gesagt letzte woche leute

20:57.660 --> 21:04.740
es wäre mir viel dran gelegen wenn wir alle da sind und so schön schön präsent aussieht also

21:04.740 --> 21:07.280
Also quasi alles nur für den guten Eindruck.

21:16.900 --> 21:18.880
Ja, also ich kann halt nichts zu sagen.

21:18.980 --> 21:19.440
Keine Ahnung.

21:19.960 --> 21:22.140
Das ist das Einzige, was mir jetzt so spontan einfällt.

21:22.580 --> 21:24.100
Vielleicht die Bewerbung nicht so gut.

21:24.300 --> 21:26.920
Wobei ich auch sagen muss, meine Bewerbung war jetzt auch nicht gut.

21:27.220 --> 21:28.280
Aber ich kannte halt jemanden.

21:28.280 --> 21:29.720
Das ist natürlich immer von Vorteil.

21:32.160 --> 21:33.900
Vielleicht war es auch einfach nur Pech.

21:33.900 --> 21:37.220
Das darf man ja bei kleinen Bewerbungsanzahlen nicht außen vor lassen.

21:37.620 --> 21:43.640
Wenn man sich 2-3 mal beworben hat, kann man auch einfach an 2-3 Deppen geraten sein, die es irgendwie nicht gehandelt bekommen.

21:44.960 --> 21:50.520
Generell muss ich sagen, dieses einfach sich gar nicht melden, finde ich auf beiden Seiten kacke.

21:51.840 --> 21:52.660
Es gehört sich nicht.

21:53.580 --> 21:54.900
Und noch weniger von Unternehmensseite.

21:55.740 --> 22:00.320
Also ich finde, es gehört sich, dass man auf jede Bewerbung antwortet.

22:00.320 --> 22:04.980
und sei es nur, dass es nichts wird.

22:08.980 --> 22:09.800
Leon Latsch,

22:09.860 --> 22:10.620
danke schön für den Sub.

22:10.980 --> 22:12.180
Exzellente Subscription.

22:13.500 --> 22:14.980
Oder Subscribierung,

22:15.100 --> 22:17.380
wie man meinen Englischlehrer in der Berufsschule gesagt hat.

22:17.820 --> 22:18.600
Da habe ich auch gedacht,

22:18.680 --> 22:19.560
ich habe nicht richtig gehört.

22:20.880 --> 22:22.740
Hat irgendjemand das Wort jemals

22:22.740 --> 22:24.900
überhaupt in den Mund genommen davor?

22:25.540 --> 22:25.980
Subscribierung.

22:25.980 --> 22:33.060
ich habe auch schon zehn jahre programmiererfahrung c++ cpil musik

22:33.060 --> 22:39.360
peyton und jetzt jayboss ist jayboss nicht der red hat tomcat oder bringe ich

22:39.360 --> 22:44.520
das jetzt durcheinander ins ziel fiel den kann ich verstehen ich bin auch

22:44.520 --> 22:49.980
übelst der java noob und java ist natürlich nicht größer sie schabt auch

22:49.980 --> 22:54.640
wenn ich den titel vom geschrieben geschrieben habe das ist nur um euch zu

22:54.640 --> 23:01.980
zu bewegen oder vielleicht paar entweder java oder c sharp fans zu träger

23:19.640 --> 23:24.300
kalt ist was macht man dann als projekt manager fände so was potenziell

23:24.300 --> 23:27.100
Ich habe keine Ahnung, was man da daily macht als Projektmanager.

23:27.440 --> 23:28.620
Ich weiß nur, dass ich es nicht machen will.

23:36.100 --> 23:39.020
Ist der Overlay-Chat braun, Leute?

23:39.860 --> 23:41.060
Ist der Overlay-Chat kaputt?

23:42.500 --> 23:43.300
Sagt mal was.

23:48.780 --> 23:49.680
Der ist kaputt?

23:50.140 --> 23:50.920
Der Overlay-Chat.

23:51.860 --> 23:52.940
Warum ist der kaputt?

23:54.300 --> 24:02.040
Oh, ist der kaputt?

24:02.800 --> 24:03.360
Was ist denn los?

24:12.700 --> 24:13.260
Äh.

24:15.420 --> 24:16.760
Irgendwie hat das ein paar Probleme.

24:16.880 --> 24:17.380
Kann das sein?

24:21.300 --> 24:22.840
Ich glaube, das ist Brocken gerade.

24:23.200 --> 24:23.900
Sekunde, Leute.

24:24.300 --> 24:49.440
Okay, Chad, ich weiß, woran das liegt.

24:50.940 --> 24:52.460
Ich weiß, woran das liegt.

24:52.460 --> 24:54.640
Sekunde, ich versuch das mal kurz zu fixen

24:54.640 --> 24:59.000
Ich versuch das mal kurz zu fixen

24:59.000 --> 25:02.640
Die haben jetzt ne Cloudflare-Authentifizierung

25:02.640 --> 25:04.260
davor, was halt

25:04.260 --> 25:05.380
ziemlich pepega ist

25:13.880 --> 25:14.540
Was halt

25:14.540 --> 25:15.840
was ist das pepega ist?

25:22.460 --> 25:29.460
Okay.

25:32.460 --> 25:34.340
So, sollen wir mal gucken, wie wir das hinkriegen.

25:36.100 --> 25:36.760
Wartet mal.

25:37.580 --> 25:38.360
Hier ist der Chat.

25:41.360 --> 25:43.460
Äh, weiß ich noch nicht genau wann.

25:44.800 --> 25:45.860
Weiß ich noch nicht genau wann.

25:46.340 --> 25:48.340
So, Moment, jetzt muss ich mal kurz checken, wie wir das machen.

25:48.780 --> 25:50.040
Das muss ungefähr so groß sein.

25:50.120 --> 25:51.400
Hier kleiner geht's gar nicht mehr.

25:52.460 --> 25:57.220
Aber das funzt nicht.

25:57.280 --> 25:58.600
Der Hintergrund ist nicht transparent.

26:03.360 --> 26:05.260
Das ist broken, der Chat.

26:05.340 --> 26:06.940
Was haben die denn da wieder für einen Scheiß gemacht?

26:07.700 --> 26:08.480
Das nervt mich.

26:11.280 --> 26:13.320
Vielleicht muss ich mir ein anderes Chat-Plugin suchen.

26:18.780 --> 26:19.180
Ja.

26:19.780 --> 26:21.160
Naja, da gibt es heute keinen Chat, Leute.

26:21.160 --> 26:23.400
Das ist aber ziemlich kacke.

26:42.000 --> 26:44.280
Das ist nicht Manifest V3.

26:51.160 --> 26:55.540
Es stimmt auch irgendwas nicht.

26:58.760 --> 27:00.620
Ist irgendwas kaputt?

27:08.380 --> 27:09.260
Okay.

27:09.840 --> 27:11.040
Leute, keine Ahnung.

27:11.400 --> 27:13.240
Kann ich jetzt nicht fixen.

27:16.800 --> 27:18.400
Irgendwas ist da...

27:18.400 --> 27:21.380
Irgendwas ist da kaputt.

27:37.560 --> 27:40.080
Ich habe keine Ahnung, was der Chat für Probleme hatte.

27:42.380 --> 27:44.360
Naja, egal, fangen wir jetzt an.

27:44.360 --> 27:48.560
Ich switch ja eh öfters mal hier rüber auf den Chat.

27:51.660 --> 27:52.220
Ach ja.

27:52.880 --> 27:56.100
Okay, dann ist das irgendeine Twitch-Geschichte vielleicht.

27:57.940 --> 27:59.860
Aber es ist komisch, dass es im Browser funktioniert.

28:00.100 --> 28:01.400
Okay, wir machen das jetzt so.

28:01.640 --> 28:02.580
Wir machen das jetzt so.

28:04.980 --> 28:05.980
Window Capture.

28:05.980 --> 28:09.980
Ähm.

28:14.360 --> 28:16.560
Zack.

28:21.040 --> 28:22.480
Wartet mal, wie geht das so, ne?

28:36.620 --> 28:39.460
Können wir das irgendwie so machen, dass das halbwegs funzt?

28:44.360 --> 28:47.840
Irgendwie so, Leute.

28:49.760 --> 28:52.200
Wobei jetzt ist das Seitenverhältnis ziemlich broken, gell?

28:53.140 --> 28:54.240
Wie kann man das resetten?

28:55.660 --> 28:56.920
Wie resettet man was?

28:57.200 --> 28:57.600
Oh Gott.

28:58.000 --> 28:58.860
OBS, please.

29:00.700 --> 29:01.300
Transform.

29:02.360 --> 29:02.860
Reset.

29:04.960 --> 29:06.020
Das machen wir weg.

29:06.020 --> 29:14.760
So für heute muss das reichen

29:14.760 --> 29:23.300
Für heute muss das reichen Leute

29:27.680 --> 29:29.540
Mehr kann ich da gerade nicht machen

29:29.540 --> 29:31.560
Der Hintergrund ist halt nicht transparent

29:31.560 --> 29:32.900
Aber was soll ich machen ja

29:32.900 --> 29:39.140
Es wird nicht aktualisiert

29:39.140 --> 29:51.200
Das ist wahrscheinlich, weil das Fenster im Hintergrund ist

29:56.020 --> 29:57.520
Ich mach mal das Fenster nicht zu

29:57.520 --> 29:58.500
Ich mach nur mal so

29:58.500 --> 30:02.880
Ne, ich hab ja

30:02.880 --> 30:06.060
Okay, jetzt scheint es zu funktionieren

30:06.060 --> 30:08.280
Dann lassen wir das jetzt erstmal kurz so

30:08.280 --> 30:09.800
Scheiß drauf

30:09.800 --> 30:14.320
Das muss für heute reichen

30:14.320 --> 30:18.680
Hast du schon mal mit Geodaten gearbeitet?

30:18.800 --> 30:19.180
Ja, hab ich

30:19.180 --> 30:23.460
Wir haben sogar im Stream schon mal ein bisschen was mit Kartenmaterial gemacht

30:23.460 --> 30:27.380
Und Routenplanung

30:27.380 --> 30:29.800
und

30:29.800 --> 30:32.520
Geo, wie heißt das?

30:38.060 --> 30:40.540
Wenn man auflöst, wie der Ort heißt,

30:40.660 --> 30:42.480
wo eine Koordinate ist oder ein Ort

30:42.480 --> 30:43.340
zu Koordinaten.

30:44.340 --> 30:46.340
Also quasi Ort zu Koordinaten und Koordinaten

30:46.340 --> 30:47.240
zu Ort und sowas.

30:49.300 --> 30:50.720
Ich kenne das

30:50.720 --> 30:52.280
vom Namen her,

30:52.280 --> 30:54.280
habe ich aber noch nicht benutzt.

30:57.380 --> 31:03.380
ok da werde ich jetzt erst mal ein paar sachen löschen nämlich die die wir das letzte mal

31:03.380 --> 31:08.540
gemacht haben hier das ganze mit dem chat schmeißen wir wieder raus mit der datenbank

31:08.540 --> 31:15.200
und sowas das brauchen wir gar nicht ich hau das ich hau das alles wieder raus weil wir uns

31:15.200 --> 31:22.580
heute nicht damit beschäftigen und ich schmeiß aus meinem application gedöns auch wieder das

31:22.580 --> 31:25.680
Zeug für Postgres raus.

31:26.880 --> 31:28.160
Das brauchen wir heute nämlich auch nicht.

31:30.740 --> 31:31.060
So.

31:31.760 --> 31:33.960
Der Rest, der ist übersichtlich.

31:34.120 --> 31:34.840
Den können wir so lassen.

31:34.960 --> 31:36.060
Das ist mehr oder weniger alles.

31:37.960 --> 31:38.180
So.

31:38.320 --> 31:39.780
Und wenn ich das jetzt richtig in Erinnerung habe,

31:39.840 --> 31:42.280
müsste die Anwendung...

31:42.280 --> 31:44.280
Der Chat geht...

31:44.280 --> 31:46.280
Ja, weil Chrome das wahrscheinlich...

31:46.280 --> 31:56.000
einschlafen lässt wenn das im hintergrund ist oder ich das fenster switch oder sowas

31:56.000 --> 32:07.700
des abels suspend pages gucken wir mal

32:07.700 --> 32:20.180
ja keine ahnung leute die wir mal dass da mal das heute ohne chat

32:20.180 --> 32:42.020
Vielleicht muss ich OBS mal aktualisieren.

32:42.020 --> 32:50.260
ja das das kriege ich nicht das kriege ich nicht gescheit gefixt

32:50.260 --> 32:55.640
das da muss das heute ohne chat gehen leute

32:55.640 --> 33:03.340
hoffen wir einfach das nächste mal wieder funktioniert so wenn ich das jetzt richtig

33:03.340 --> 33:10.160
erinnerungen habe dann macht unsere anwendung genau eine sache nämlich per websocket einmal

33:10.160 --> 33:12.040
in der Sekunde hier so eine

33:12.040 --> 33:14.420
Fake Message zu posten

33:14.420 --> 33:16.180
an den Client. Das Ganze

33:16.180 --> 33:17.140
können wir auch

33:17.140 --> 33:20.420
ich mache Visual Studio Code

33:20.420 --> 33:21.280
nochmal auf

33:21.280 --> 33:28.060
schmeißen wir den Kram

33:28.060 --> 33:29.500
vom letzten Mal wieder raus hier

33:29.500 --> 33:31.920
machen nur die Websocket Geschichte

33:31.920 --> 33:32.580
wieder rein

33:32.580 --> 33:35.400
Chrome

33:35.400 --> 33:39.960
Achso

33:39.960 --> 33:45.140
Oh

33:45.140 --> 33:47.080
Der Failed, warum Failed der?

33:49.060 --> 33:49.440
Achso

33:49.440 --> 33:58.540
Okay

33:58.540 --> 34:00.340
Also das Funst

34:03.340 --> 34:04.680
Wir kriegen in Browser

34:04.680 --> 34:07.280
einfach einmal in der Sekunde hier neue

34:07.280 --> 34:08.420
To-Do's gepusht

34:08.420 --> 34:10.040
per Websocket

34:10.040 --> 34:13.540
und das ist eigentlich alles, was die Anwendung

34:13.540 --> 34:15.300
macht. Die schiebt über Websocket alle paar

34:15.300 --> 34:17.160
Sekunden so eine Fake

34:17.160 --> 34:19.520
To-Do Nachricht an den Client.

34:19.980 --> 34:21.560
Alles andere habe ich jetzt rausgeschmissen.

34:22.100 --> 34:23.300
Das einzige, was hier sonst noch

34:23.300 --> 34:24.520
passiert ist,

34:25.660 --> 34:26.660
zeige ich das kurz.

34:34.680 --> 34:44.980
es gibt hier einen kleinen cache weil wir rufen diese fake daten hiervon ab und ich

34:44.980 --> 34:51.400
käse immer wenn die wenn ich die id quasi schon kenne ja ich generiere random id zwischen 1 und

34:51.400 --> 34:58.320
11 jetzt gemacht zwischen 1 und 11 rufen das to do ab davon und wenn ich schon mal was mit der

34:58.320 --> 35:02.240
id abgerufen habt da wird es hier in dem cache gespeichert also cash meint das ist das sind

35:02.240 --> 35:05.380
Dictionary mit ID und Response dazu.

35:05.940 --> 35:10.900
Das ist aber nicht, weil ich jetzt unbedingt hier einbauen muss in die Anwendung,

35:10.900 --> 35:15.780
sondern weil ich nicht unnötig einmal pro Sekunde gegen diese API hämmern will,

35:15.980 --> 35:17.900
nicht, dass die mich irgendwann nochmal blocken.

35:18.540 --> 35:20.260
So, und das war es im Endeffekt.

35:20.660 --> 35:25.240
Es gibt eine Sache, die mir nicht dran gefällt und vielleicht gucken wir uns die als erstes an.

35:25.700 --> 35:27.620
Oder chat mit, was wollen wir anfangen?

35:28.260 --> 35:34.540
Wollen wir uns zuerst angucken, Prometheus Backend oder zuerst wie man Event Handling innerhalb von Spring Boot.

35:34.620 --> 35:38.400
Oder zuerst C-Funktionen aufrufen aus Java.

35:39.040 --> 35:39.980
Könnt ihr euch aussuchen.

35:41.060 --> 35:43.020
Was wollen wir von den drei Sachen zuerst ausprobieren?

35:46.400 --> 35:48.440
Der Cache ist nicht Threadsafe, doch ist er.

35:48.440 --> 35:57.900
Ich kann dir auch sagen warum

35:57.900 --> 36:00.580
Der Cache ist Threadsafe

36:00.580 --> 36:02.380
Weil es eine Konkurrent Hash

36:02.380 --> 36:03.620
Ach Moment

36:03.620 --> 36:07.560
Moment

36:07.560 --> 36:12.200
Der Cache ist tatsächlich nicht Threadsafe

36:12.200 --> 36:12.700
Du hast recht

36:12.700 --> 36:16.920
Du hast recht

36:16.920 --> 36:19.840
Der ist nicht Threadsafe

36:19.840 --> 36:23.360
Der muss aber auch nicht Threadsafe sein

36:23.360 --> 36:24.980
Muss er nicht

36:24.980 --> 36:26.360
Muss er nicht

36:26.360 --> 36:27.740
Weil

36:27.740 --> 36:33.240
Okay

36:33.240 --> 36:35.300
Das ist

36:35.300 --> 36:37.300
In dem Fall ist das Threadsafe

36:37.300 --> 36:39.460
Weil diese Sache wird nur von einer

36:39.460 --> 36:41.340
Stelle aus aufgerufen, nämlich von

36:41.340 --> 36:43.540
Von, äh, Moment, ich bin grad

36:43.540 --> 36:45.240
Verwirrt, nämlich von hier

36:45.240 --> 36:47.820
Aber ihr habt, Chat, ihr habt recht.

36:48.280 --> 36:52.760
Eigentlich dürfte das hier keine Hashmap, sondern es muss eine Konkurrent Hashmap sein.

36:53.740 --> 36:58.100
Nicht Konkurrent. Konkurrent Hashmap müsste das sein.

36:59.320 --> 36:59.800
Ja.

37:00.860 --> 37:03.040
So sieht's aus. Der Chat hat's wieder erkannt.

37:04.040 --> 37:05.160
Jetzt können wir neu starten.

37:05.700 --> 37:05.880
Bam.

37:07.960 --> 37:09.260
Jetzt ist der Cache Threadsafe.

37:12.020 --> 37:13.280
Threadsafe enjoy us hier.

37:13.940 --> 37:14.700
Im Chat.

37:15.240 --> 37:19.880
Funktionen machen. Okay, dann fangen wir damit an.

37:19.880 --> 37:30.480
Also wie ruft man C-Funktionen in Java auf? Ich habe keine Ahnung. Wir suchen jetzt einfach mal

37:30.480 --> 37:38.400
was das ist. Was ist das für ein Knopf da? Was macht das? Ach, das ist was ich gitmäßig gelöscht

37:38.400 --> 37:39.860
habe. Wen juckt's denn?

37:43.520 --> 37:44.380
Loading Cache.

37:44.500 --> 37:45.020
Was ist das?

37:46.920 --> 37:47.220
Aha.

37:48.120 --> 37:50.520
Siehste mal. Das hätte ich vielleicht gar nicht gebraucht.

37:51.500 --> 37:52.500
A semi-persistent

37:52.500 --> 37:53.900
mapping from keys to values.

37:54.000 --> 37:55.200
Verlust Automatik bei Cache.

37:55.200 --> 37:57.020
Ah ja.

37:57.520 --> 37:58.540
Ja, das ist doch gut.

37:59.160 --> 38:01.220
Warte mal. Ne, das ist nicht Spring Boot, oder?

38:06.920 --> 38:07.360
Äh.

38:08.400 --> 38:20.160
internal ich glaube nicht dass ich das verwenden will da bleibe ich bei meiner

38:20.160 --> 38:33.600
hash map also wie machen wir jetzt hier ff mit c funktionen in java wie machen wir das

38:33.600 --> 38:36.780
Nee, der extra Library für

38:36.780 --> 38:39.520
Ich brauche keine Library

38:39.520 --> 38:41.740
Um der Hashmap zu ersetzen

38:41.740 --> 38:42.360
An einer Stelle

38:42.360 --> 38:45.780
Ja, ich will die Java-Docs haben

38:45.780 --> 38:48.040
Ich frage mich schon die ganze Zeit, warum das nicht funktioniert

38:48.040 --> 38:50.000
Guck, ich will hier

38:50.000 --> 38:51.760
Drüber gehen, zum Beispiel da

38:51.760 --> 38:53.000
Und will

38:53.000 --> 38:55.060
Oder sagen wir, da will ich drüber gehen

38:55.060 --> 38:57.660
Und will Q drücken, und dass ich dann auch was sehe

38:57.660 --> 38:59.340
Was muss ich machen?

38:59.700 --> 39:01.440
Falls du die Java-Docs in der EDE haben willst

39:01.440 --> 39:03.020
Musst du einmal rechts auf das M

39:03.020 --> 39:04.560
und dann Download Docs und Resources.

39:06.360 --> 39:06.880
Da?

39:13.960 --> 39:15.620
Welcher Knopf davon ist es denn?

39:21.620 --> 39:24.280
Download Sources and or Documentation.

39:25.180 --> 39:25.740
Ach.

39:27.240 --> 39:29.200
Moment, Sources kann man auch runterladen.

39:29.320 --> 39:32.440
Dann kann ich endlich Jump to Definition quasi machen.

39:33.020 --> 39:34.520
Und er muss nicht mehr die compilen.

39:37.500 --> 39:39.860
Das muss einem ja auch mal einer sagen, Alter.

39:41.320 --> 39:43.120
Warum macht denn das das Ding nicht automatisch?

39:43.480 --> 39:46.140
Das ist doch sonst nicht so geizig, was Speicherplatz angeht.

39:49.900 --> 39:50.900
Das verstehe ich nicht.

39:53.580 --> 39:54.940
Hast du schon beim Vorletzten...

39:54.940 --> 39:57.500
Leute, es gibt so viele Chat-Messages.

39:57.620 --> 40:00.140
Es kann durchaus mal sein, dass ich was übersehe.

40:00.140 --> 40:03.540
Und am besten ist immer einfach ein AdWoblos dabei.

40:03.540 --> 40:05.940
Spam, dann übersehe ich es nicht so schnell.

40:05.940 --> 40:09.460
Element Information is not available during index update.

40:09.460 --> 40:12.900
Jaja, mach du mal Index Update.

40:12.900 --> 40:15.900
Jetzt haben wir auch Texts.

40:15.900 --> 40:19.260
Ja, sehr, das ist nice.

40:19.260 --> 40:20.640
Das habe ich die ganze Zeit schon gesucht.

40:20.640 --> 40:23.780
Na gut, die Formatierung ist ein bisschen fail, aber das macht ja nichts.

40:23.780 --> 40:25.700
So, und jetzt kann ich auch Send Message machen.

40:25.700 --> 40:29.380
Und jetzt komme ich da auch in den Source Code rein.

40:29.380 --> 40:37.180
nicht wirklich lande auf irgendeinem interface aber immerhin schon mal nicht

40:37.180 --> 40:47.800
verkehrt sehr gut zu wissen chat was gelernt also wie machen wir ffc ffc ich

40:47.800 --> 40:53.120
weiß nicht ob man da und man danach suchen muss mit bis hat er mit spring

40:53.120 --> 40:59.880
jetzt eigentlich nichts zu tun

41:02.000 --> 41:09.900
play um wieder die form memory access war nicht

41:09.900 --> 41:21.520
CFFI mit Java, wie macht man das?

41:21.520 --> 41:28.200
Okay, da gibt es... Interop mit C++ muss nicht sein.

41:28.200 --> 41:38.100
Wie funzt das?

41:38.100 --> 41:49.700
keck c++ ja jr okay jr aber

41:49.700 --> 41:58.380
wieder die pläne seite ist echt hat echt viel zeug taugt diese seite oder

41:58.380 --> 42:04.860
ist das irgendwie generierter müll wird bei blähungen

42:08.100 --> 42:18.840
das ist eine gute seite ok java foreign function interface ok die ausländer funktionen

42:18.840 --> 42:33.060
wolf binary bla bla bla jr works jr jr requires pre processing step during bild compilation

42:33.060 --> 42:36.320
FFI

42:36.320 --> 42:43.720
External Tool.

42:44.020 --> 42:46.280
Was? Moment, warum machen die es so krass kompliziert?

42:48.240 --> 42:50.320
Nein, ich will nicht C++ in Java benutzen.

42:50.420 --> 42:51.700
Ich will in Linux C

42:51.700 --> 42:54.060
Kernelfunktion aufrufen.

42:54.520 --> 42:56.140
Warum die hier was von C++ schreiben?

42:57.100 --> 42:58.460
Ja gut, die rappen das ja auch

42:58.460 --> 43:00.220
hier in eine C-Geschichte.

43:00.340 --> 43:02.040
Das hat mit C++ gar nichts mehr zu tun.

43:03.060 --> 43:15.300
ok also welche also get hostname linux oder irgendwie sowas genau das rufen wir jetzt auf

43:15.300 --> 43:22.440
hier standard lip c ja dass das gut das rufen wir jetzt auf das gibt es auf jedem linux das kann man

43:22.440 --> 43:31.080
also ohne probleme dann ist das auf jeden fall da weil ich jetzt nicht so ganz check ist layout what

43:31.080 --> 43:46.200
ich glaube der geist sagt mal hier also in internet würde ich so machen ok ja in internet

43:46.200 --> 43:53.400
sagt die dll import ja was ich lebe oder irgendwie sowas das ganze wird übrigens

43:53.400 --> 43:56.900
bringen sie nicht einfach den klammer so und dann wird sie dann drunter einfach

43:56.900 --> 44:08.760
schreiben hier extern get host name braucht deswegen ein parameter doch

44:08.760 --> 44:14.160
achso ja dann dann wenn wir nehmen mal was ohne wir nehmen wir was ohne

44:14.160 --> 44:19.800
parameter aber die sind in dort sogar so schlau dass man so schreiben könnte hier

44:19.800 --> 44:28.740
name und was weiß ich in oder sei es oder so ja so würde ich das da machen gucken wie man

44:28.740 --> 44:42.780
das wie man das ganze in java macht ok und success zero is returned on error minus 1

44:42.780 --> 44:52.800
zu tun dann gucken was aber an was sie hier schreiben native methods jv mits

44:52.800 --> 45:00.600
compile code native keyword transforms method into a sort of abstract aha gibt

45:00.600 --> 45:05.200
es dann ist native so was wie dll import

45:05.200 --> 45:15.640
ach ja also im prinzip würde ich dann quasi so was hier machen jetzt haus nehmen aber ich muss

45:15.640 --> 45:21.820
auch noch sagen woher hat sich das holen soll oder also wenn das das wäre ja mal super easy

45:21.820 --> 45:27.520
wenn das findet das so und wenn das so funktioniert mich ärgert dass der chat

45:27.520 --> 45:32.200
funktioniert also hier in meiner vorschau von star schon aber unten im stream nicht

45:32.200 --> 45:34.200
Das ist irgendwie...

45:35.600 --> 45:37.300
Doof.

45:39.700 --> 45:41.160
Systemload Library libc...

45:41.160 --> 45:42.080
Wir gucken mal.

45:42.660 --> 45:43.720
Components needed.

45:44.160 --> 45:46.980
JNI-Elements encode Java und C++.

45:47.500 --> 45:47.660
Was?

45:49.260 --> 45:50.060
Hello World.

45:51.640 --> 45:52.660
Okay, also.

45:53.760 --> 45:54.400
Static.

46:02.200 --> 46:03.360
Aha.

46:03.360 --> 46:03.480
Aha.

46:06.900 --> 46:07.380
Okay.

46:08.700 --> 46:09.760
Okay, okay, okay.

46:09.880 --> 46:10.960
Also machen wir das mal so.

46:11.360 --> 46:12.180
Gehen wir mal hier rein.

46:13.000 --> 46:14.400
Was macht denn...

46:14.400 --> 46:16.040
Was macht denn das hier?

46:16.360 --> 46:17.900
Da habe ich jetzt gar keinen Plan.

46:18.420 --> 46:19.860
Was macht ein Static

46:19.860 --> 46:22.040
ohne irgendwas?

46:26.680 --> 46:28.760
Wie darf ich mir das überhaupt vorstellen?

46:32.200 --> 46:39.240
Was hat er denn für Schmerzen hier?

46:47.960 --> 46:49.760
Hä? Jetzt hat er keine Schmerzen mehr?

46:53.260 --> 46:54.440
Jetzt hat er wieder Schmerzen?

46:54.780 --> 46:56.140
Ne, hat er nicht. Die Idee spinnt.

46:58.160 --> 46:59.340
Das ist sowas wie ein Static.

46:59.580 --> 47:01.760
Sowas wie ein Static Constructor oder sowas.

47:01.760 --> 47:17.920
wird einmal pro laufzeit ausgeführt oder wie lipzee get hostname

47:17.920 --> 47:21.440
hier ist noch mal weiter

47:23.600 --> 47:27.760
wie laut der shared library in der static blog des entschuldigen wir werden

47:27.760 --> 47:49.840
we need it and okay ja das was machen ich will kein c++ gedöns was machen die dafür dinge

47:49.840 --> 48:02.980
das check ich nicht was was zum toll wer soll denn das lesen können ich will ja schon bestehende

48:02.980 --> 48:11.260
sachen aufrufen also so wird es war also so alleine wird es wahrscheinlich nicht funktionieren wir

48:11.260 --> 48:17.200
können ja mal hier in in main reingehen wir kommentieren unsere springboot anwendung aus

48:17.200 --> 48:18.980
und sagen jetzt einfach mal get hostname.

48:20.800 --> 48:21.280
Äh.

48:25.200 --> 48:25.680
Achso.

48:26.500 --> 48:27.000
Static.

48:31.000 --> 48:32.860
Das wird jetzt aber wahrscheinlich nicht funzen.

48:35.000 --> 48:35.480
Ne.

48:42.680 --> 48:43.120
Ne.

48:47.200 --> 48:48.780
Was will er jetzt von mir?

48:50.480 --> 48:51.220
NoLibC.

48:52.620 --> 48:52.900
Ja.

48:54.500 --> 48:54.880
Okay.

48:56.980 --> 48:59.240
So funstere ich schon mal nicht.

49:01.820 --> 49:04.740
Der findet LibC nicht in Java Library Path.

49:07.380 --> 49:08.160
Okay.

49:08.160 --> 49:08.480
Ja.

49:10.060 --> 49:11.980
Komm, wir fragen mal ChatGPT.

49:15.280 --> 49:16.860
How to call

49:16.860 --> 49:23.660
libc

49:23.660 --> 49:25.440
get hostname

49:25.440 --> 49:27.740
function from

49:27.740 --> 49:29.900
java. Jetzt bin ich mal gespannt.

49:39.520 --> 49:42.020
Was ist denn JNA schon wieder?

49:45.480 --> 49:46.000
Native

49:46.000 --> 49:46.560
Load.

49:46.860 --> 49:57.660
jna java java native access und was ist jni was ist der unterschied

49:57.660 --> 50:10.080
die den jni nutzt aber manuellen c code oder boilerplate vermeidet

50:10.080 --> 50:18.240
Das ist in der Tat deutlich komplizierter als in .NET.

50:18.240 --> 50:32.160
example with f ne jne hieß das oder neben der wies wie ist der gram jetzt noch mal

50:32.160 --> 50:37.480
jr

50:37.480 --> 50:45.980
ok

50:45.980 --> 50:53.080
public class hostname jody laut leibniz schon mal blödsinn

50:53.080 --> 51:06.340
generate header file

51:06.340 --> 51:12.040
was ok chat gpt

51:12.040 --> 51:15.960
I want to call

51:15.960 --> 51:18.120
get hostname

51:18.120 --> 51:19.760
from linux

51:19.760 --> 51:21.800
standard libc

51:21.800 --> 51:22.760
es ist ja nicht wirklich

51:35.300 --> 51:35.820
so

51:35.820 --> 51:36.680
so, jetzt bin ich mal gespannt

51:36.680 --> 51:39.820
warum ich die brauche

51:39.820 --> 51:42.000
ich brauche die nicht

51:42.000 --> 51:44.720
Ich will einfach irgendeine Native-Funktion

51:44.720 --> 51:46.060
callen und gucken, wie das geht.

51:46.160 --> 51:48.540
Das ist nur ein Beispiel, dass ich Get-Hostname nehme.

51:48.840 --> 51:50.180
Das kann irgendwas anderes sein.

51:53.000 --> 51:54.440
So, also Host...

51:54.440 --> 51:56.460
Okay, Chat-GPT

51:56.460 --> 51:57.540
macht wieder irgendeinen Mist.

51:59.740 --> 52:00.060
Also,

52:01.500 --> 52:02.940
hat sich ausge-Vipe-Coded

52:02.940 --> 52:03.220
hier.

52:07.220 --> 52:08.340
Schreibt irgendeinen Mist.

52:12.000 --> 52:25.940
System Load

52:25.940 --> 52:42.380
Calling Native Code vom Java.

52:43.160 --> 52:44.320
Okay, JNA.

52:44.440 --> 52:46.120
Was ist... JNA klang

52:46.120 --> 52:46.820
besser.

52:47.900 --> 52:49.220
Java Native Access.

52:50.060 --> 52:51.280
Ist das...

52:51.280 --> 52:53.940
Superior? Oder ja, hat 8.000, 9.000

52:53.940 --> 52:54.400
Sterne.

52:55.940 --> 52:57.940
Java Native Access

53:02.660 --> 53:06.280
Example getting started

53:09.740 --> 53:14.800
Okay, das sieht schon das okay das sieht deutlich mehr aus

53:15.820 --> 53:20.040
Als nachdem wie ich das mir mit DLL import vorstelle als das andere Gedöns

53:20.040 --> 53:30.180
also dann nehmen wir doch mal dann nehmen wir doch mal jna gucken ob wir das hier ob ich ob

53:30.180 --> 53:36.100
ich gecheckt haben mittlerweile wie man hier so package also sowas wird hier wahrscheinlich nicht

53:36.100 --> 53:45.200
geben oder wird es nicht geben also dann gehen wir wieder auf mail von central chat

53:45.200 --> 53:52.720
muss irgendwelche sachen reinpasten jna

54:00.120 --> 54:06.860
was ist davon ist das richtige dass da aber warum gibt es das gibt es das

54:06.860 --> 54:14.480
mehrfach nett java def jna kommt saniert woher weiß ich jetzt was das richtige

54:14.480 --> 54:25.400
ist ich würde vermuten dass hier ist das richtige weil sun und so aber gibt es

54:25.400 --> 54:31.240
nicht irgendeinen link zum zum repo oder sowas

54:32.560 --> 54:35.680
16 jahre alt

54:35.680 --> 54:43.400
Moment mal, es muss, aber

54:43.400 --> 54:44.520
warum gibt es hier, also

54:44.520 --> 54:47.740
ich bin ja auch kein großer Nougat-Fan, aber da gibt es

54:47.740 --> 54:49.880
immer einen Link zum Repo, gibt es hier auch

54:49.880 --> 54:51.820
einen Link zum Repo, wenn ich jetzt hier zum Beispiel

54:51.820 --> 54:53.420
drauf, ah, Projekt-URL

54:53.420 --> 54:55.920
es ist es doch, das ist doch das Richtige

54:55.920 --> 54:58.140
das ist doch das Richtige

54:58.140 --> 54:59.740
das brauchen wir hier

55:03.400 --> 55:04.320
das brauchen wir

55:04.320 --> 55:06.540
Und jetzt

55:06.540 --> 55:07.520
synchen.

55:11.460 --> 55:12.460
Alles klar.

55:17.080 --> 55:17.680
Okay.

55:18.460 --> 55:20.420
Also, dann gucken wir uns mal hier das Example an.

55:22.540 --> 55:23.280
C-Library

55:23.280 --> 55:24.960
Instance gleich C-Library

55:24.960 --> 55:26.320
What the...

55:27.440 --> 55:28.320
Hatten wir bei ChatGPT

55:28.900 --> 55:30.340
nicht gerade ein ganz gutes Beispiel?

55:31.580 --> 55:31.940
Ähm.

55:31.940 --> 55:34.640
Call

55:34.640 --> 55:36.420
Get Hostname from

55:36.420 --> 55:39.380
Linux

55:39.380 --> 55:40.140
Libc

55:40.140 --> 55:43.440
from Java

55:43.440 --> 55:50.760
Okay, das haben wir auch.

55:52.140 --> 55:53.100
Mal gucken.

55:57.440 --> 55:59.020
Libc Instance Native

55:59.020 --> 56:01.000
Load. Okay, ja, das ist so ähnlich.

56:01.940 --> 56:11.600
also public interface c library externe library monka s was auch immer da passiert aber machen

56:11.600 --> 56:28.760
machen wir einfach mal library wahrscheinlich das native platform ist windows juckt mich nicht ich

56:28.760 --> 56:33.800
bin übrigens auch nicht ob man da so macht lipp c

56:37.880 --> 56:41.240
was

56:44.720 --> 56:54.420
und jetzt c library class so ja das package management ist schon ein

56:54.420 --> 56:58.700
bisschen pp gar ich verstehe auch gar nicht warum es keine gescheite idee und

56:58.700 --> 57:03.860
gibt das von spam hier nicht ich hab ich hab ich hab schon versucht hier maven zeug zu suchen über

57:03.860 --> 57:21.080
die idee aber hat nicht funktioniert ok sind f ok das ist auch nicht verkehrt das okay wir machen

57:21.080 --> 57:28.680
das mal so wie es in dem example ist wir machen zwar nur wie es in dem example ist okay wir

57:28.680 --> 57:31.300
Wir printen jetzt einfach Hello World und gucken mal, ob das funktioniert.

57:31.300 --> 57:33.300
Nein.

57:33.300 --> 57:35.300
Doch!

57:35.300 --> 57:40.960
Hat funktioniert!

57:40.960 --> 57:45.020
Was will der denn eigentlich?

57:45.020 --> 57:51.980
A restricted method in Java system has been called.

57:51.980 --> 58:03.280
Was will der von mir?

58:05.680 --> 58:07.660
Egal, es funktioniert auf jeden Fall.

58:08.400 --> 58:10.580
Okay, das funzt schon einmal.

58:11.580 --> 58:14.860
Ich finde das eigentlich, also das finde ich relativ gut gemacht.

58:18.760 --> 58:21.200
Ist mein Import noch auf die alte Sunlip?

58:21.980 --> 58:22.460
Ja.

58:24.420 --> 58:26.160
Aber muss man auch so haben.

58:27.300 --> 58:28.240
Muss man auch so haben.

58:29.900 --> 58:31.660
Kannst du nicht den Cast entsorgen?

58:33.680 --> 58:35.760
Doch. Den brauchen wir doch überhaupt nicht.

58:37.520 --> 58:38.000
Außerdem

58:38.000 --> 58:40.300
schreiben wir jetzt hier einfach

58:40.300 --> 58:40.840
wahr.

58:43.640 --> 58:44.500
Geht das nicht?

58:51.980 --> 59:00.500
Ähm.

59:03.240 --> 59:03.880
Moment.

59:04.720 --> 59:07.380
Ich bin mir gerade unschlüssig, was ich da überhaupt...

59:07.380 --> 59:09.760
Was ich da überhaupt sehe gerade.

59:16.360 --> 59:17.460
Das ist...

59:17.460 --> 59:18.360
Das ist...

59:18.360 --> 59:19.020
Das ist...

59:19.020 --> 59:20.280
Müsste das nicht Static sein?

59:20.280 --> 59:24.120
Ah, das ist static, weil es ein Interface ist.

59:26.780 --> 59:28.200
Aber Moment.

59:31.980 --> 59:36.280
Ach so, das ist eine statische Methode quasi auf dem Interface.

59:38.300 --> 59:40.360
Jetzt verstehe ich das.

59:42.280 --> 59:43.080
Okay.

59:43.700 --> 59:46.560
Ich meine, das ist schon ein bisschen doppelt gemoppelt hier, wie das geschrieben ist.

59:46.560 --> 59:49.260
C-Library-Instance

59:49.260 --> 59:50.880
C-Library-Class

59:50.880 --> 01:00:07.240
Aber das ist jetzt nicht so weit

01:00:07.240 --> 01:00:09.140
Unterschiedlich zu einem DLL-Import

01:00:09.140 --> 01:00:10.360
In .NET würde ich sagen

01:00:10.360 --> 01:00:13.440
Also es ist relativ ähnlich

01:00:13.440 --> 01:00:14.700
Von der

01:00:14.700 --> 01:00:16.060
Wie man das schreibt

01:00:16.060 --> 01:00:22.060
also muss ich sagen das kommt man eigentlich mit klar so also das funst jetzt müssen wir

01:00:22.060 --> 01:00:27.700
schon mal wie man native zeug importiert probieren wir das ganze mal mit get hostname aus get hostname

01:00:27.700 --> 01:00:43.300
so string get hostname kriegt ein character array und eine size t also ein int sagen wir mal size t

01:00:43.300 --> 01:00:45.320
ist halt je nach CPU Architektur

01:00:45.320 --> 01:00:47.180
anders, aber wir nehmen einfach mal ein int.

01:00:47.900 --> 01:00:49.020
So, und das ist int size.

01:00:49.240 --> 01:00:51.320
Ich weiß überhaupt nicht, was ich da übergeben soll eigentlich

01:00:51.320 --> 01:00:53.120
mit size. Ach, das ist size vom

01:00:53.120 --> 01:00:54.080
Character Array.

01:00:55.000 --> 01:00:57.460
Ja gut,

01:00:57.520 --> 01:00:59.440
es ist c. Da gibt's

01:00:59.440 --> 01:01:01.220
keine Strings

01:01:01.220 --> 01:01:02.600
mit embedded size.

01:01:05.140 --> 01:01:06.280
Das muss dann so, okay.

01:01:10.460 --> 01:01:10.860
Also.

01:01:11.520 --> 01:01:11.920
Okay.

01:01:13.300 --> 01:01:14.100
Probieren wir das mal.

01:01:14.840 --> 01:01:17.380
Wir machen jetzt mal get hostname ohne irgendwas.

01:01:20.000 --> 01:01:21.660
Wir machen mal get hostname ohne.

01:01:21.960 --> 01:01:23.500
Und dann mal gucken, ob es crasht.

01:01:24.400 --> 01:01:26.320
Oder ob der irgendwie meckert.

01:01:27.000 --> 01:01:27.740
Achso, er muss was.

01:01:27.960 --> 01:01:29.200
Wir machen es mal ohne.

01:01:29.300 --> 01:01:30.040
Ohne irgendwas.

01:01:30.820 --> 01:01:32.040
Jetzt mal gucken, was er dann sagt.

01:01:33.480 --> 01:01:35.380
Dann macht er schon mal gar nichts.

01:01:35.440 --> 01:01:36.020
Das ist schon mal gut.

01:01:36.020 --> 01:01:36.200
So.

01:01:36.920 --> 01:01:38.720
Als Return-Wert kriegen wir einen Int.

01:01:43.300 --> 01:01:55.420
so es ist nicht mehr was er sagt ja wie salt minus 1 müsste das jetzt sei es ist

01:01:55.420 --> 01:02:00.220
minus 1 haha bei der way ich dachte da muss lip c schreiben aber anscheinend

01:02:00.220 --> 01:02:05.300
ist wirklich nur c a lip c geht genauso

01:02:05.700 --> 01:02:08.700
gut

01:02:08.700 --> 01:02:19.820
Dann müssen wir jetzt noch gucken, also übergeben wir ein String, Name und jetzt halt eine Size,

01:02:19.820 --> 01:02:26.260
das ist halt nicht schön, aber es ist halt C, da bleibt uns nichts anderes übrig.

01:02:26.260 --> 01:02:34.240
So, also machen wir hier, Name gleich 0w, diesen Host sollte es eigentlich nicht geben.

01:02:34.240 --> 01:02:45.760
also mein name und name dort längst bei der way mit oder ohne 0 terminat ohne 0 termin terminator

01:02:45.760 --> 01:02:54.000
weil es sonst braucht bräuchte ich ja keine länge als müsste so funktionieren minus 1 und

01:02:54.000 --> 01:03:01.480
minus localhost localhost müsste aber doch eigentlich funktionieren hat funktioniert

01:03:01.480 --> 01:03:10.660
Moment

01:03:10.660 --> 01:03:13.000
Wartet mal

01:03:13.000 --> 01:03:17.840
Schreibt es hier das Result rein

01:03:17.840 --> 01:03:19.700
Wo ist denn der Hostname dann eigentlich

01:03:19.700 --> 01:03:27.140
Achso

01:03:27.140 --> 01:03:28.360
Moment

01:03:28.360 --> 01:03:30.540
Das ist kein

01:03:30.540 --> 01:03:33.960
Ich dachte, das ist so eine Art DNS-Lookup.

01:03:34.060 --> 01:03:34.700
Nee, ist es nicht.

01:03:35.300 --> 01:03:40.600
Hier übergebe ich einen Pointer mit einer Size, wo er den Namen reinschreiben kann.

01:03:41.100 --> 01:03:44.060
Das heißt, da müssen wir jetzt erstmal gucken, wie man hier Pointer-Gedöns übergibt.

01:03:44.620 --> 01:03:46.920
So mit String wird das ja an sich nicht tun.

01:03:48.060 --> 01:03:53.620
Wir können mal das übergeben, aber das wird so wahrscheinlich nicht funktionieren.

01:03:53.620 --> 01:03:53.820
Genau.

01:03:55.820 --> 01:03:56.260
Pointer.

01:03:57.100 --> 01:03:58.340
Pointers and Arrays.

01:04:00.540 --> 01:04:06.780
Also ein Char-Dings.

01:04:14.980 --> 01:04:17.040
Oder ein Byte-Array wahrscheinlich.

01:04:17.180 --> 01:04:19.680
Ein Byte-Array ist wahrscheinlich besser.

01:04:20.880 --> 01:04:23.280
Also machen wir mal hier irgendwie ein Byte-Array.

01:04:24.960 --> 01:04:27.520
Ich weiß gar nicht, wie man ein Byte-Array überhaupt anlegt in Java.

01:04:27.520 --> 01:04:28.700
Ich habe keine Ahnung.

01:04:30.540 --> 01:04:37.740
jetzt einmal wo man braucht okay so anscheinend

01:04:37.740 --> 01:04:54.660
Ja, ByteArrayNameIntSize oder nennen wir es mal Länge, ja.

01:04:55.660 --> 01:05:01.260
So, Moment, aber nicht 0, sondern 512, sollte reichen.

01:05:01.260 --> 01:05:06.320
get bytes, ne ne ne ne

01:05:06.320 --> 01:05:07.980
kann ich nicht, ich muss

01:05:07.980 --> 01:05:09.860
ein pointer übergeben, wo diese Funktion

01:05:09.860 --> 01:05:11.840
dann was reinschreibt und dann kann ich es nachher

01:05:11.840 --> 01:05:13.320
auslesen

01:05:13.320 --> 01:05:21.620
so und jetzt sage ich name

01:05:21.620 --> 01:05:23.680
und 500, keine Ahnung

01:05:23.680 --> 01:05:24.900
512, so

01:05:24.900 --> 01:05:27.980
und jetzt müsste name was drinstehen

01:05:27.980 --> 01:05:29.660
wobei mein byte erase war, ok

01:05:29.660 --> 01:05:38.520
das macht schon mal irgendwas und jetzt muss ich kann man das zu stringen in byte array geht das

01:05:38.520 --> 01:05:51.320
da brauche ich jetzt

01:05:51.320 --> 01:05:56.880
java-autos arrays to string expansion

01:05:56.880 --> 01:06:16.560
nicht so ganz

01:06:16.560 --> 01:06:23.040
ich brauche ich brauche aber

01:06:23.040 --> 01:06:28.300
Was habe ich denn überhaupt für ein Hostname?

01:06:28.620 --> 01:06:29.560
Hostname ist Stream.

01:06:29.700 --> 01:06:29.880
Okay.

01:06:30.500 --> 01:06:31.280
Fünf Buchstaben.

01:06:31.720 --> 01:06:33.460
Das S, das heißt Stream.

01:06:36.060 --> 01:06:37.340
Ja, das ist Stream.

01:06:37.660 --> 01:06:39.780
83 ist garantiert das S.

01:06:39.920 --> 01:06:40.280
ASCII.

01:06:40.840 --> 01:06:42.320
ASCII-Tabelle.

01:06:44.180 --> 01:06:44.820
83.

01:06:45.060 --> 01:06:45.900
Was ist 83?

01:06:49.260 --> 01:06:49.940
S.

01:06:50.620 --> 01:06:51.800
Das heißt, da steht Stream drin.

01:06:51.880 --> 01:06:52.060
Okay.

01:06:52.060 --> 01:07:00.300
java beide ray to string asky asky beide ray by the way containing as charakters

01:07:00.300 --> 01:07:06.300
to string das ist doch garantiert schon 8 news trick utf 8 ja u t f 8 geht auch

01:07:06.300 --> 01:07:11.140
und der wacht ist aske kompatibel also besser gesagt asti steckt den utf 8 drin

01:07:11.140 --> 01:07:26.680
also sagt man einfach new string also sagt man new string name

01:07:31.980 --> 01:07:32.640
und jetzt

01:07:32.640 --> 01:07:40.500
Ach hier, Char Set

01:07:40.500 --> 01:07:43.160
Warte mal, was passiert

01:07:43.160 --> 01:07:44.320
wenn ich nichts eingebe?

01:07:45.360 --> 01:07:46.300
Stream, Funst

01:07:46.300 --> 01:07:48.980
Machen wir das mal hier

01:07:48.980 --> 01:07:49.660
Char Set

01:07:49.660 --> 01:07:51.660
New Char Set

01:08:02.640 --> 01:08:04.640
So findest du schon mal nicht

01:08:05.720 --> 01:08:12.520
Ich meine der typ hier schreibt utf 8 das ding ist nur das fund so nett weil man ein chance hat übergeben muss

01:08:19.860 --> 01:08:23.360
Moment ich bin ja doof meine güte ich bin im falschen hier

01:08:25.260 --> 01:08:27.260
Jura set

01:08:27.540 --> 01:08:28.920
what the

01:08:28.920 --> 01:08:30.920
was zum

01:08:30.920 --> 01:08:34.200
Aber warum geht das mit...

01:08:34.200 --> 01:08:36.120
Das steht hier nirgendwo drin, ne?

01:08:37.120 --> 01:08:38.160
Dass man hier

01:08:38.160 --> 01:08:40.280
ByteArray und dann einen String

01:08:40.280 --> 01:08:42.040
hinten übergeben darf. Charset.

01:08:46.240 --> 01:08:47.880
Charset ist ein Interface.

01:08:51.000 --> 01:08:52.000
Ich hätte gedacht,

01:08:52.120 --> 01:08:53.520
das ist ein Inam oder sowas.

01:08:57.240 --> 01:08:58.520
Ich checke aber nicht,

01:08:58.520 --> 01:08:59.600
woher der...

01:08:59.600 --> 01:09:00.800
Ach, Charset Name.

01:09:00.920 --> 01:09:14.000
das geht auch schaß set aber so von stars auch das haben wir dann sonst noch hier schaßet

01:09:14.000 --> 01:09:24.680
vornehmen ich finde es merkwürdig dass es da kein kein namen gibt wo man wo man hier

01:09:24.680 --> 01:09:36.560
weg guck warum gibt es nicht schar setzpunkt utf 8 oder sowas standard schar setz das habe ich

01:09:36.560 --> 01:09:41.760
gesucht sie ist die leute jetzt haben auch keine magic strings die action vitrine das habe ich

01:09:41.760 --> 01:09:55.140
gesucht so uns sehr gut es gefällt mir also ganz ernst das ist nicht großartig komplizierter als

01:09:55.140 --> 01:10:01.440
in dotnet das ist sehr ähnlich ob ich jetzt so was hier schreibe also ob ich jetzt so was hier

01:10:01.440 --> 01:10:07.620
mache oder ein dll import hier oben drüber kommt er nur wirklich aufs gleiche raus was ist eigentlich

01:10:07.620 --> 01:10:21.840
us asky ja asky halt dass das ganz normale old school asky also so ruft man native funktionen

01:10:21.840 --> 01:10:30.720
aus java auf das heißt man braucht dazu diese komische jna lib übrigens mal alles raus schmack

01:10:30.720 --> 01:10:34.340
JNA-Lib.

01:10:38.800 --> 01:10:40.060
Gibt es nicht sowas wie

01:10:40.060 --> 01:10:41.540
Clean Imports?

01:10:48.740 --> 01:10:50.500
Optimize Imports, das habe ich gesucht.

01:10:52.800 --> 01:10:53.700
Ja, cool.

01:10:54.160 --> 01:10:55.540
Das ist nice, das gefällt mir.

01:10:55.980 --> 01:10:57.800
Dann kommentieren wir das mal aus.

01:10:58.620 --> 01:11:00.340
Weil das brauchen wir für die Anwendung

01:11:00.340 --> 01:11:05.800
nicht wirklich das war jetzt einfach zum ausprobieren immerhin wir brauchen für

01:11:05.800 --> 01:11:10.340
die anwendung nix warum willst du native dll verwenden weil ich wissen wie

01:11:10.340 --> 01:11:18.340
funktioniert ohne tieferen sinn aber ich brauche das relativ oft zum beispiel

01:11:18.340 --> 01:11:24.020
und nicht allzu lang her das war aber eine dort net anwendung die hat über

01:11:24.020 --> 01:11:30.960
interface go code aufgerufen weil es in go die einzig gute brauchbare web rtc

01:11:30.960 --> 01:11:33.600
library gibt

01:11:36.140 --> 01:11:40.160
alles so kann was man braucht

01:11:54.020 --> 01:12:06.980
olivier stange für den sub 23 jahre nice exzellente

01:12:24.020 --> 01:12:31.860
Gleich am Start, wartet mal, ich muss mal was trinken.

01:12:48.840 --> 01:12:49.240
Okay.

01:12:49.240 --> 01:12:52.880
Wie ist bisher dein Fazit zu Java?

01:12:53.040 --> 01:12:54.400
Vielleicht auch im Vergleich zu C-Sharp?

01:12:57.260 --> 01:12:58.720
Also mir gefällt C-Sharp

01:12:58.720 --> 01:12:59.960
trotzdem besser.

01:13:01.440 --> 01:13:02.660
Ich muss sagen, ich

01:13:02.660 --> 01:13:05.040
finde das allerdings gar nicht so schlimm, wie ich mir

01:13:05.040 --> 01:13:05.980
das vorgestellt habe.

01:13:06.900 --> 01:13:09.240
Das liegt aber wahrscheinlich zum größten Teil daran,

01:13:10.400 --> 01:13:11.000
dass...

01:13:11.000 --> 01:13:12.220
Ups, Moment.

01:13:14.180 --> 01:13:15.180
Das liegt aber

01:13:15.180 --> 01:13:17.020
wahrscheinlich zum größten Teil daran,

01:13:17.700 --> 01:13:19.200
dass Spring Boot

01:13:19.200 --> 01:13:22.380
für alles irgendwelche Annotations

01:13:22.380 --> 01:13:24.180
hat, um einem massig

01:13:24.180 --> 01:13:26.320
Boilerplate-Code zu ersparen.

01:13:27.980 --> 01:13:29.860
Nee, das ist keine Springboot-Annotation.

01:13:30.300 --> 01:13:32.040
Ich hab jetzt alles schon rausgeschmissen

01:13:32.040 --> 01:13:32.820
vom letzten Mal.

01:13:34.060 --> 01:13:35.680
Ja, also hier mit... Guck,

01:13:35.980 --> 01:13:37.820
hier schreibst du hin, Enable WebSocket

01:13:37.820 --> 01:13:39.760
und unter der Haube

01:13:39.760 --> 01:13:42.440
bringt er einen kompletten WebSocket-Server

01:13:42.440 --> 01:13:42.660
mit.

01:13:43.840 --> 01:13:45.660
Springboot, was das für dich macht und sowas.

01:13:46.480 --> 01:13:48.180
Ja, das hab ich auch gehört,

01:13:48.180 --> 01:13:50.780
dass Getter und Setter mit so einer extra Library funktionieren.

01:13:53.280 --> 01:13:54.960
Also ich finde es gar nicht schlecht.

01:13:55.980 --> 01:14:00.180
Man muss sagen, es hat schon viele Parallelen zu C-Sharp.

01:14:02.100 --> 01:14:06.620
Aber ich finde, C-Sharp hat noch einen Ticken schönere Syntax,

01:14:06.760 --> 01:14:12.540
wenn auch mittlerweile ziemlich rumgewürstet wird in der C-Sharp-Syntax

01:14:12.540 --> 01:14:15.260
und da auch doppeldeutige Sachen drin sind.

01:14:15.260 --> 01:14:22.460
also dieses zeug mit getter setter finde ich beispielsweise auch ziemlich blödsinnig dass

01:14:22.460 --> 01:14:26.820
es keine getter setter in der sprache gibt aber man sich trotzdem darauf verlässt dass die dass

01:14:26.820 --> 01:14:32.720
es methoden gibt die get und set heißen da finde ich das in .net deutlich schöner link in .net

01:14:32.720 --> 01:14:38.780
finde ich viel schöner als dieses komische stream processing in java zumindest soweit ich es gesehen

01:14:38.780 --> 01:14:48.780
habe und gibt es bestimmt noch jede menge zeug mehr aber ich bin jetzt ja

01:14:48.780 --> 01:14:55.460
auch kein java pro aber man kommt echt gut klar also es ist nicht so schlimm

01:14:55.460 --> 01:15:01.760
wie ich mir das vorgestellt habe slim ontario dank ich finde es ab huge

01:15:01.760 --> 01:15:07.800
subscription alle katzen besitzer

01:15:08.780 --> 01:15:14.360
gibt es gibt es eine runde katze streicheln jetzt für dich so

01:15:14.360 --> 01:15:21.980
da hatte ich noch dicke hände leute

01:15:31.140 --> 01:15:35.620
ich kann so das projekt auf github packen das sind eigentlich nur ein paar zeilen ich zeige

01:15:35.620 --> 01:15:40.420
dir einfach die zwei dateien die du brauchst du kannst du kannst du im wort pause machen

01:15:40.420 --> 01:15:46.540
guck mal du brauchst du websocket config die genau so aussieht das ist alles erstmal und

01:15:46.540 --> 01:15:58.840
dann brauchst du sowas hier wurde die sessions speichers vom websocket und dann kannst du darauf

01:15:58.840 --> 01:16:07.820
zugreifen get sessions und geben senden durch das ganze dann hier raus senden durch das ganze

01:16:07.820 --> 01:16:14.620
dann hier aus send message lass mich raten du hast du tutorials angeguckt wo die irgendwas

01:16:14.620 --> 01:16:22.420
von stomp und sorg js und topic register send to listener und gedöns geschrieben haben oder diese

01:16:22.420 --> 01:16:28.660
tutorials sind plaudert es fakt ich verstehe nicht warum alle javascript sein warum

01:16:28.660 --> 01:16:36.400
warum die ganzen springboot java tutorials warum die so plaudit sind dabei ist es eigentlich im

01:16:36.400 --> 01:16:42.220
endeffekt diese zwei files ja das alles was für websockets brauchst das ist eigentlich

01:16:42.220 --> 01:16:48.940
total easy ja die tutorials die habe ich das letzte mal auch gebetet und weißt du wer mich

01:16:48.940 --> 01:16:53.140
tatsächlich auf den richtigen trichter gebracht hat das ist tatsächlich chat gpt gewesen

01:16:58.660 --> 01:17:11.660
oder chat gpt cool leute sagen also chat gpt hat bei mir das richtige ich habe chat gpt gefragt

01:17:11.660 --> 01:17:25.240
dass ich eine minimal simple spring boot websocke application javascript client haben will

01:17:28.660 --> 01:17:38.560
und dann kam das mehr oder weniger eins zu eins daraus ja die tutorials also dass

01:17:38.560 --> 01:17:47.100
mir auch schon aufgefallen java tutorials neigen zu ultra bloat kann man über die

01:17:47.100 --> 01:17:57.600
arrays pointer entschieden das geht anscheinend schon weil hier unter der haube guck mal das

01:17:57.600 --> 01:18:07.320
hier ist ein byte array aber die funktion selbst möchte einen byte pointer haben unter der haube

01:18:07.320 --> 01:18:15.900
und diese diese jna also die eigentliche definition von der funktion ist das hier in c

01:18:15.900 --> 01:18:24.180
ja kann java aber nicht allerdings mit dieser syntax check dass diese library dass man eigentlich

01:18:24.180 --> 01:18:25.140
einen Pointer haben will.

01:18:26.520 --> 01:18:28.320
Das ist natürlich in C-Sharp schöner.

01:18:28.560 --> 01:18:30.320
Das muss man ehrlich sagen. C-Sharp hat Pointer.

01:18:30.820 --> 01:18:32.360
Das ist für C-Interop deutlich

01:18:32.360 --> 01:18:34.280
angenehmer. Ganz am Anfang

01:18:34.280 --> 01:18:36.480
musste man in C-Sharp noch auch sehr viel

01:18:36.480 --> 01:18:38.160
mit hier Marschall

01:18:38.160 --> 01:18:40.140
irgendwas, bla,

01:18:40.460 --> 01:18:42.360
blub, irgendwas machen. Aber das

01:18:42.360 --> 01:18:44.060
ist tatsächlich mittlerweile ganz angenehm.

01:18:44.060 --> 01:18:57.600
Also die Websocket-Docs, die ich mir angeguckt habe, waren eklig.

01:19:00.780 --> 01:19:01.280
Ja, ne.

01:19:02.600 --> 01:19:02.840
Hä?

01:19:04.560 --> 01:19:06.680
Add Interceptor, jetzt verstehe ich aber nicht, was die machen.

01:19:07.160 --> 01:19:09.060
Aber ich sehe schon, das ist...

01:19:09.060 --> 01:19:11.660
Das braucht man halt alles nicht.

01:19:11.780 --> 01:19:13.060
Aber ich sehe schon, es ist ein bisschen übersichtlicher.

01:19:14.060 --> 01:19:26.180
so also dann chat jetzt probieren wir mal folgendes und zwar events das ist ja so ein

01:19:26.180 --> 01:19:33.440
thema wo ich etwas set getriebe bin dass es in asp.net core immer noch keine eingebaute event

01:19:33.440 --> 01:19:38.120
funktion gibt ich rede jetzt nicht von events die in der sprache eingebaut sind sondern mit

01:19:38.120 --> 01:19:50.460
Events meine ich so eine Art, nennen wir es mal so eine Art In-Memory-Message-Queue, wo man mit unterschiedlichen Teilen der Anwendung kommunizieren kann, von unterschiedlichen Stellen, ja.

01:19:50.840 --> 01:19:53.880
Zum Beispiel, zum Beispiel, weil das jetzt ein bisschen abstrakt ist, ja.

01:19:54.360 --> 01:19:56.440
Es gibt hier einen Background-Job, okay.

01:19:57.100 --> 01:20:01.100
Dieser Background-Job läuft einmal in der Sekunde.

01:20:01.100 --> 01:20:07.760
und ich will in diesem background job was machen und dann will ich über websocket an

01:20:07.760 --> 01:20:11.820
mein frontend schicken hier guck mal es gibt neue daten und so sehen die aus

01:20:11.820 --> 01:20:18.660
das sind ja komplett unterschiedliche teile der anwendung ja es gibt einmal den background job

01:20:18.660 --> 01:20:24.560
und es gibt einmal hier dieses zeug was ich um websockets kümmert was auch die websocket sessions

01:20:24.560 --> 01:20:30.080
hat diese zwei teile können eigentlich nicht miteinander kommunizieren normalerweise gibt

01:20:30.080 --> 01:20:36.460
dann sowas wie irgendeine in memory message queue oder irgendwie so ein event bus oder sowas in der

01:20:36.460 --> 01:20:41.180
richtung kann man relativ easy selbst bauen aber dort hat so was standardmäßig leider nicht drin

01:20:41.180 --> 01:20:46.400
was ich echt doof finde weil das braucht man eigentlich immer und springwood hat so was wie

01:20:46.400 --> 01:20:51.800
ich jetzt gemacht habe ist folgendes ich habe mein background task der läuft einmal in der minute so

01:20:51.800 --> 01:20:54.100
generiert neue To-Dos

01:20:54.100 --> 01:20:55.480
und dann

01:20:55.480 --> 01:20:58.540
geht er an den WebSocket-Händler

01:20:58.540 --> 01:21:00.240
und holt sich alle Sessions

01:21:00.240 --> 01:21:02.760
und schickt dann an jede WebSocket-Verbindung

01:21:02.760 --> 01:21:03.980
eben das neue To-Do,

01:21:04.540 --> 01:21:06.400
was dann hier im Frontend angezeigt wird.

01:21:07.200 --> 01:21:08.660
Das überhaupt Frontend zu nennen,

01:21:08.720 --> 01:21:09.940
ist ja auch schon weit hergeholt.

01:21:10.340 --> 01:21:11.900
Aber ich glaube, das versteht man soweit.

01:21:13.200 --> 01:21:13.640
Und

01:21:13.640 --> 01:21:16.040
wie das hier funktioniert, ist folgendes,

01:21:16.040 --> 01:21:18.060
weil ich keine Ahnung habe, wie man das machen soll,

01:21:18.500 --> 01:21:20.020
habe ich jetzt mal auf die Variante gemacht,

01:21:20.020 --> 01:21:21.940
die eklig ist, aber auf jeden Fall funktioniert.

01:21:22.700 --> 01:21:23.120
Ich habe

01:21:23.120 --> 01:21:25.280
hier

01:21:25.280 --> 01:21:26.960
einen static,

01:21:29.460 --> 01:21:30.140
also quasi

01:21:30.140 --> 01:21:32.120
eine

01:21:32.120 --> 01:21:34.020
statische Methode

01:21:34.020 --> 01:21:36.620
in diese Klasse

01:21:36.620 --> 01:21:37.300
eingebaut.

01:21:38.260 --> 01:21:40.340
Das ist quasi eine globale Variable,

01:21:40.340 --> 01:21:41.060
wenn man es so will.

01:21:42.800 --> 01:21:43.900
Public static

01:21:43.900 --> 01:21:45.180
WebSockets Sessions.

01:21:46.540 --> 01:21:47.700
Und hier unten ist auch static

01:21:47.700 --> 01:21:52.940
konkurrenz das ist das ist das ist quasi eine globale variable ob das jetzt der

01:21:52.940 --> 01:21:55.260
hash map und eine setliste es macht ja kein unterschied

01:21:55.260 --> 01:21:58.800
es ist eine globale variable einfach dass ich von einem komplett anderen teil

01:21:58.800 --> 01:22:03.060
der anwendung nämlich aus diesem background task darauf zugreifen kann

01:22:03.060 --> 01:22:07.440
das ist normalerweise nicht so schön und macht man normalerweise auch nicht dafür

01:22:07.440 --> 01:22:12.780
benutzt man irgendwie sowas wie den event bus ja dann sagt man so was wie hier

01:22:12.780 --> 01:22:23.700
event bus punkt publish und dann würdest du sagen hier publish und dann irgendwie keine ahnung new

01:22:23.700 --> 01:22:35.100
refreshed to do message oder irgendwie sowas in der richtung ja würdest du dann würdest du

01:22:35.100 --> 01:22:40.620
dann publischen und irgendwo anders in der anwendung hättest du dann sowas wie hier event

01:22:40.620 --> 01:22:42.620
was

01:22:43.140 --> 01:22:45.740
Und dann machst du dann irgendwas mit

01:22:48.000 --> 01:22:54.620
Sowas gibt es leider in dort net oder das bieter nicht eingebaut es gibt sich libraries das machen man kann das auch relativ easy selbst bauen

01:22:55.380 --> 01:23:03.800
aber ich habe gelesen spring boot hat einen eingebauten event bus für sowas und das wollte ich mal ausprobieren hier spring boot

01:23:04.440 --> 01:23:06.440
events

01:23:07.200 --> 01:23:09.200
Drehung schon wieder

01:23:10.620 --> 01:23:17.500
schauen wir uns mal an wie das ganze funktioniert also ziel ist diese globale variable hier weg zu

01:23:17.500 --> 01:23:28.560
kriegen und im endeffekt hier zu sagen sinngemäß also das soll quasi weg machen wir das machen wir

01:23:28.560 --> 01:23:34.020
so wie ich mir das vorstelle das soll weg und hier soll dann bloß so was wie passieren wie event was

01:23:34.020 --> 01:23:45.260
publish übrigens ich bin nimmer kurz das darum wenn das einfach mal um in das

01:23:45.260 --> 01:23:51.780
bisschen kürzer ist zu do item ok und jetzt will ich eigentlich nur noch

01:23:51.780 --> 01:24:02.340
sagen publish so dass das und und dann soll das hier der websocket händler

01:24:02.340 --> 01:24:08.520
mitbekommen der hat ja intern alle websocket sessions und hier soll das in

01:24:08.520 --> 01:24:12.720
dem websocket händler soll dann das hier mit dem senden quasi passieren dann ist

01:24:12.720 --> 01:24:15.920
auch alles dort an der stelle wo es logisch hingehört

01:24:15.920 --> 01:24:21.620
jetzt müssen wir mal gucken wie das funktioniert mit mit spring boot in

01:24:21.620 --> 01:24:28.340
disziplin will bis kassin auto use events in spring simple application event

01:24:28.340 --> 01:24:35.240
Okay, wir brauchen also eine Klasse, die von Application Event erbt.

01:24:35.760 --> 01:24:37.400
Okay, das macht irgendwie Sinn.

01:24:37.640 --> 01:24:40.820
Ich gehe mal davon aus, das muss von Application Event erben,

01:24:41.360 --> 01:24:44.820
damit Spring Boot das so automatisch Magic discoveren kann.

01:24:49.520 --> 01:24:51.260
Wieso haben wir doch? Haben wir nicht?

01:24:58.340 --> 01:25:03.280
er macht doch im prinzip mehr oder weniger genau jetzt kriegen wir schon

01:25:03.280 --> 01:25:07.020
raus das kriegen wir schon raus

01:25:12.780 --> 01:25:15.780
so

01:25:17.540 --> 01:25:20.120
moment

01:25:21.520 --> 01:25:24.940
hier wollen wir hin also wir brauchen hier irgendwie so eine klasse die

01:25:24.940 --> 01:25:28.320
application die wenn das wahrscheinlich muss das application event heißen

01:25:28.320 --> 01:25:29.880
dass Spring Boot das Ding überhaupt erkennt.

01:25:30.940 --> 01:25:32.140
Gehe ich mal von aus.

01:25:32.460 --> 01:25:33.720
Wir kopieren uns das mal kurz.

01:25:34.200 --> 01:25:35.680
Ich pappe das einfach mal hier oben drüber.

01:25:36.880 --> 01:25:38.060
Application Event.

01:25:39.920 --> 01:25:40.360
Custom.

01:25:40.560 --> 01:25:42.060
Ja, das New

01:25:42.060 --> 01:25:44.400
To Do Item Event.

01:25:44.560 --> 01:25:45.560
Nennen wir das jetzt einfach mal.

01:25:46.260 --> 01:25:47.400
Zack, zack.

01:25:48.220 --> 01:25:49.500
Public muss es nicht sein.

01:25:53.280 --> 01:25:54.500
Public muss es nicht sein.

01:25:54.640 --> 01:25:55.280
Get Message.

01:25:56.280 --> 01:25:57.100
Warte, können wir da nicht

01:25:57.100 --> 01:25:58.160
einen Rekord draus machen?

01:25:58.320 --> 01:25:58.840
Rekord?

01:26:00.420 --> 01:26:00.920
Ne.

01:26:06.580 --> 01:26:08.200
Ach, das geht nicht.

01:26:08.500 --> 01:26:08.820
Okay.

01:26:09.620 --> 01:26:12.000
Rekord ist nicht unter der Haube eine Class,

01:26:13.000 --> 01:26:15.080
die nur so tut, als wäre es so eine Art Value,

01:26:16.140 --> 01:26:18.440
sondern Rekord ist wirklich was Eigenes in Java.

01:26:19.360 --> 01:26:20.580
Ich bin mir gar nicht sicher,

01:26:20.720 --> 01:26:22.960
ob man in .NET mit einem Rekord irgendwas erben kann.

01:26:23.500 --> 01:26:25.460
Ich würde sagen, ja, das geht,

01:26:26.000 --> 01:26:28.120
weil es unter der Haube ja eigentlich auch nur eine Class ist

01:26:28.120 --> 01:26:29.940
mit ein bisschen Magic, was

01:26:29.940 --> 01:26:31.300
autogeneriert wird für einen.

01:26:33.440 --> 01:26:34.160
Das weiß ich

01:26:34.160 --> 01:26:35.320
jetzt gar nicht, ob du es findest.

01:26:38.520 --> 01:26:39.320
Naja, so.

01:26:39.800 --> 01:26:41.320
Jetzt haben wir ein Application Event.

01:26:41.800 --> 01:26:43.780
Heißt im Endeffekt, wir wollen hier unten schon mal

01:26:43.780 --> 01:26:45.060
nicht Message, sondern hier

01:26:45.060 --> 01:26:47.960
ein To-Do-Item wollen wir

01:26:47.960 --> 01:26:48.280
hier

01:26:48.280 --> 01:26:51.080
transportieren.

01:26:51.080 --> 01:26:58.600
Mag er nicht.

01:26:59.940 --> 01:27:00.260
Achso.

01:27:00.740 --> 01:27:01.680
Ja, weil es kein String ist.

01:27:02.160 --> 01:27:04.080
So, und das heißt auch hier wollen wir jetzt sagen...

01:27:05.860 --> 01:27:08.440
Achso, Moment, wir müssen das noch injecten.

01:27:08.760 --> 01:27:10.080
Ne, was müssen wir überhaupt injecten?

01:27:16.220 --> 01:27:17.840
Moment, Moment, so einfach geht das nicht.

01:27:18.900 --> 01:27:20.080
Ich habe hier noch nichts zum...

01:27:21.080 --> 01:27:22.260
Zum Publischen.

01:27:23.340 --> 01:27:27.140
Ich muss auf jeden Fall irgendwas hier, irgendeinen Event-Bus oder so injecten.

01:27:27.420 --> 01:27:27.880
Gucken wir mal.

01:27:28.300 --> 01:27:28.780
Publisher.

01:27:29.400 --> 01:27:30.780
Now let's create a Publisher.

01:27:35.340 --> 01:27:36.020
Hä?

01:27:38.260 --> 01:27:39.260
Brauch ich nicht.

01:27:39.260 --> 01:27:40.840
Ich brauch doch keine extra Klasse.

01:27:41.120 --> 01:27:42.040
Achso, hier.

01:27:42.940 --> 01:27:44.660
Das muss ich injecten.

01:27:46.600 --> 01:27:46.860
Okay.

01:27:47.940 --> 01:27:48.480
Also.

01:27:49.140 --> 01:27:50.060
Quasi sowas hier.

01:27:51.080 --> 01:27:54.000
Application Event.

01:27:54.260 --> 01:27:56.620
Okay, das ist das, was ich vorher Event Bus

01:27:56.620 --> 01:27:57.640
quasi genannt habe.

01:27:58.080 --> 01:28:00.160
Das brauchen wir. So, und das will ich jetzt

01:28:00.160 --> 01:28:00.880
injecten.

01:28:02.700 --> 01:28:03.800
Was hat er für Schmerzen?

01:28:05.360 --> 01:28:06.060
Ja, ja, ich weiß.

01:28:06.940 --> 01:28:08.380
Add Constructor Parameter.

01:28:09.960 --> 01:28:10.320
Kunst.

01:28:18.320 --> 01:28:20.760
Mit dem Underscore hat er nicht gecheckt.

01:28:21.080 --> 01:28:22.560
So, ähm.

01:28:24.980 --> 01:28:25.320
Ja.

01:28:26.500 --> 01:28:27.100
Und jetzt?

01:28:27.980 --> 01:28:30.520
Application Publisher Publish Event.

01:28:30.700 --> 01:28:31.140
Klingt gut.

01:28:32.220 --> 01:28:33.660
Publish Application Event.

01:28:34.260 --> 01:28:34.640
New.

01:28:35.340 --> 01:28:36.160
To do.

01:28:37.220 --> 01:28:38.360
Item Event.

01:28:40.020 --> 01:28:41.180
Was? Object Source.

01:28:41.420 --> 01:28:41.540
Und to.

01:28:42.040 --> 01:28:42.440
Was?

01:28:43.500 --> 01:28:44.440
Object Source.

01:28:46.020 --> 01:28:46.820
Was will?

01:28:46.880 --> 01:28:48.960
Okay, ich muss mir das Beispiel doch nochmal weiter angucken.

01:28:50.220 --> 01:28:50.780
Listener.

01:28:51.080 --> 01:28:56.660
Implements Application Listener Custom Spring Event.

01:29:04.660 --> 01:29:05.820
Moin Leon.

01:29:07.480 --> 01:29:10.400
Asynchron Events using an Application Event Multi...

01:29:10.400 --> 01:29:11.380
Ne, ne, ne, ne, ne, ne.

01:29:15.860 --> 01:29:18.300
Was ist denn das hier? Event Listener?

01:29:21.080 --> 01:29:25.080
Annotation Driven Event List.

01:29:25.760 --> 01:29:26.760
Okay, da kann man einfach

01:29:26.760 --> 01:29:28.140
Add Event List noch dran schreiben.

01:29:28.260 --> 01:29:30.000
Das ist natürlich auch nicht verkehrt.

01:29:34.940 --> 01:29:36.520
Okay, dann probieren wir das mal auch so.

01:29:36.780 --> 01:29:37.620
Hier wird das jetzt...

01:29:37.620 --> 01:29:39.880
Moment, was eigentlich...

01:29:39.880 --> 01:29:41.080
Was will der da eigentlich?

01:29:42.380 --> 01:29:42.820
Bis...

01:29:42.820 --> 01:29:44.860
Ach so, die übergeben immer,

01:29:45.120 --> 01:29:46.840
wer das Event ausgelöst hat.

01:29:46.900 --> 01:29:47.980
Deswegen auch Source.

01:29:48.680 --> 01:29:50.920
Jetzt habe ich das gecheckt.

01:29:51.080 --> 01:29:54.840
Wait a minute.

01:29:55.520 --> 01:29:56.320
Was habe ich denn eben?

01:29:56.920 --> 01:29:57.600
Wartet mal.

01:29:58.460 --> 01:29:59.220
Nee, oder auch nicht.

01:30:16.800 --> 01:30:18.760
Guck mal, man kann auch ein Object

01:30:18.760 --> 01:30:21.000
Publishen. Man muss gar kein

01:30:21.000 --> 01:30:22.800
Application Event Publishen.

01:30:29.060 --> 01:30:31.120
Ach, es ist Wrapped. Moment, es wird

01:30:31.120 --> 01:30:32.240
für mich gerappt?

01:30:32.940 --> 01:30:33.760
Geht das ja noch besser.

01:30:34.800 --> 01:30:36.960
Wenn das für mich gerappt wird, dann kann ich einfach

01:30:36.960 --> 01:30:38.860
hier New To Do reinhauen.

01:30:39.720 --> 01:30:40.920
Zack. Dann brauche ich

01:30:40.920 --> 01:30:43.040
dieses komische Event hier gar nicht, wenn ich

01:30:43.040 --> 01:30:45.420
da eh nur einfach ein To Do reinschreibe.

01:30:45.420 --> 01:30:45.540
So.

01:30:45.540 --> 01:30:48.240
zu du item reinschreibe

01:30:48.240 --> 01:30:49.740
also Publish Event

01:30:49.740 --> 01:30:58.740
jetzt brauchen wir das hier

01:30:58.780 --> 01:31:00.980
das da brauchen wir jetzt

01:31:00.980 --> 01:31:04.440
und das muss in den Websocket Händler rein

01:31:04.440 --> 01:31:06.960
so und dann können wir unseren

01:31:06.960 --> 01:31:08.920
äh ne

01:31:08.920 --> 01:31:13.020
wir wollen ein

01:31:13.020 --> 01:31:14.380
Du du Item eigentlich.

01:31:19.960 --> 01:31:22.000
Aber mal gucken, ob Spring das auch so kann.

01:31:28.460 --> 01:31:29.620
So, okay.

01:31:29.620 --> 01:31:31.380
Wir machen jetzt mal nix.

01:31:31.780 --> 01:31:33.500
Das hier kann

01:31:33.500 --> 01:31:35.660
komplett

01:31:35.660 --> 01:31:37.680
weg. Das brauchen wir

01:31:37.680 --> 01:31:39.780
nicht mehr. Wir brauchen keine globale Vari...

01:31:39.780 --> 01:31:41.920
Alter, come on Spring, please.

01:31:43.020 --> 01:31:50.640
wir brauchen keine warte mal mal gucken ob es bringen selbst so schlau ist warte

01:31:50.640 --> 01:31:51.660
mal sekunde

01:31:51.660 --> 01:31:59.500
eigentlich sagen

01:31:59.500 --> 01:32:09.480
gucken wir mal ob das so schlau ist und das kapiert also wir haben jetzt ja hier

01:32:09.480 --> 01:32:14.520
eigentlich alles gemacht es sollte jetzt einmal in der sekunde die message com handling kontext

01:32:14.520 --> 01:32:28.560
startet event und kommt nicht ich weiß was ich vergessen habe stuhlmacher dankeschön für den

01:32:28.560 --> 01:32:34.080
sub ich weiß was ich vergessen habe component habe ich vergessen spring interessiert sich sonst

01:32:34.080 --> 01:32:39.060
überhaupt nicht dafür dass es das gibt also wenn man sich bei 1 gewöhnen muss

01:32:39.060 --> 01:32:44.760
was bring ist dass man 30.000 annotation für alles braucht

01:32:46.140 --> 01:32:53.600
kunst handling daptem events so das heißt wir nehmen jetzt hier unser web

01:32:53.600 --> 01:33:03.960
socket krempe läuft ja nehmen wir uns ein web socket krempe und hauen den

01:33:03.960 --> 01:33:12.360
einfach hier rein so und das müsste es eigentlich gewesen sein ihr get sessions

01:33:12.360 --> 01:33:17.520
brauchen wir nicht mehr sessions

01:33:20.720 --> 01:33:29.400
values new text message genau und jetzt sollte das eigentlich immer noch

01:33:29.400 --> 01:33:30.060
funktionieren.

01:33:33.060 --> 01:33:33.860
Schauen wir mal,

01:33:34.720 --> 01:33:36.320
ob sich's automatisch

01:33:36.320 --> 01:33:37.660
recon... Es geht!

01:33:39.100 --> 01:33:40.080
Schon haben wir unsere globale

01:33:40.080 --> 01:33:41.980
Variab... Das ist ja wirklich easy

01:33:41.980 --> 01:33:44.060
gemacht. Das ist wirklich mal

01:33:44.060 --> 01:33:46.160
easy gemacht. Also das ist

01:33:46.160 --> 01:33:47.980
jetzt echt ein Punkt, wo ich sagen muss,

01:33:48.320 --> 01:33:49.700
das finde ich viel besser

01:33:49.700 --> 01:33:52.380
als so, wie es in ASP.NET Core ist.

01:33:52.840 --> 01:33:54.240
In ASP.NET Core brauchst du für so

01:33:54.240 --> 01:33:56.260
ein Kram, entweder musst du dir was Eigenes

01:33:56.260 --> 01:33:58.200
basteln, oder du musst irgendeine Library

01:33:58.200 --> 01:34:02.160
dafür verwenden das ist nichts standardmäßig dabei was ich eigentlich

01:34:02.160 --> 01:34:06.360
echt blöd finde weil das braucht so event handling von einer ecke der

01:34:06.360 --> 01:34:12.120
applikation zur anderen ist brauchst eigentlich immer irgendwo mal gerade in

01:34:12.120 --> 01:34:19.200
web-anwendungen gerade wenn du halt auch von server an client was pushen willst

01:34:19.200 --> 01:34:23.640
Ja das stimmt, ASP.NET Core ist aber auch eine Library.

01:34:27.180 --> 01:34:31.400
Also bei Spring ist was dabei, bei ASP.NET Core ist nichts dabei.

01:34:32.480 --> 01:34:34.480
Ich denke das kann man schon vergleichen.

01:34:34.880 --> 01:34:39.180
ASP.NET Core ist ein Webframework und Spring Boot ist auch irgendwie...

01:34:39.180 --> 01:34:45.860
Spring Boot ist ja nicht nur ein Webframework, Spring Boot ist ein Application umfassendes für alles mögliche Framework.

01:34:45.860 --> 01:34:52.620
aber es bringt was dabei und als pilot nicht das finde ich doof und das haben die echt gut

01:34:52.620 --> 01:34:58.280
gemacht oder sagt man das ist doch das ist doch wirklich simpel gemacht du sagst in deinem

01:34:58.280 --> 01:35:07.460
background service in jack dem ema event pass publisch da was drauf und auf einer anderen ecke

01:35:07.460 --> 01:35:13.660
der anwendung registriert den event listener und greift darauf das ist super gemacht also das ist

01:35:13.660 --> 01:35:20.080
wirklich nice was du hast im endeffekt hast du hast jetzt zwei zeilen oder so mehr und dafür

01:35:20.080 --> 01:35:24.660
hast du wirklich auch die sachen überall da wo sie hingehören weil das handling von dem web

01:35:24.660 --> 01:35:30.040
websocket sachen ist hier drin viel besser aufgehoben als in irgendeinem background task

01:35:30.040 --> 01:35:47.040
bin ich gut das gefällt mir ziemlich gut das ist ja um nicht zu sagen das ist

01:35:47.040 --> 01:35:57.240
krieg hunger leute so prometheus endpunkt das ist das letzte was ich noch machen wollte hier

01:35:57.240 --> 01:36:03.240
konfirmt in dem einen punkt ist das so

01:36:03.240 --> 01:36:16.960
ome toys spring gut schon wieder play um die haben aber verdammt viele guides

01:36:16.960 --> 01:36:22.480
und die hat viel arbeitsspeicher hier

01:36:22.480 --> 01:36:33.700
in dem man den world of software development bla bla bla bla

01:36:33.700 --> 01:36:48.880
adding dependencies mikrometer registry prometheus spring boot start actuator

01:36:48.880 --> 01:36:55.660
ob wir es nie was man da hinzufügen muss ja natürlich die was sonst wir gucken

01:36:55.660 --> 01:37:03.160
mal ob es nicht vielleicht schon hier wieder sonst da da gibt es doch wobei

01:37:03.160 --> 01:37:08.080
die coolen leute das ja nicht prometheus denn sondern prometheus aber ich bin

01:37:08.080 --> 01:37:09.220
eher für Prometheus.

01:37:16.360 --> 01:37:17.860
Prometheus ist der

01:37:17.860 --> 01:37:19.960
Gott bei den Griechen, der dafür gesorgt hat,

01:37:20.060 --> 01:37:21.420
dass die Menschen high IQ sind.

01:37:22.300 --> 01:37:24.000
Weil die Menschen waren vor Prometheus

01:37:24.000 --> 01:37:24.920
total dumm

01:37:24.920 --> 01:37:27.980
und dann hat er ihnen quasi den

01:37:27.980 --> 01:37:28.720
IQ gebracht.

01:37:30.300 --> 01:37:31.640
Und seitdem sind die schlau.

01:37:31.640 --> 01:37:39.400
Was hat das jetzt alles hinzugefügt?

01:37:46.400 --> 01:37:47.400
Mikrometer.

01:37:50.280 --> 01:37:52.780
Aber sonst hat er nichts hinzugefügt.

01:38:01.640 --> 01:38:03.160
Configure the application.

01:38:04.980 --> 01:38:06.180
Expose. Include.

01:38:06.720 --> 01:38:08.000
Always. Ja, okay.

01:38:08.140 --> 01:38:08.720
Das machen wir.

01:38:13.580 --> 01:38:15.080
Genau, das ist der...

01:38:15.080 --> 01:38:17.100
Prometheus ist der mit dem Feuer.

01:38:18.860 --> 01:38:20.120
Aber der hat den Menschen auch

01:38:20.120 --> 01:38:22.540
irgendwie irgendwas mit Erkenntnis gebracht

01:38:22.540 --> 01:38:23.540
oder so. Frag mich nicht.

01:38:23.860 --> 01:38:26.800
Mein Opa wusste super Bescheid über griechische Mythologie.

01:38:26.800 --> 01:38:27.260
Ich nicht.

01:38:28.020 --> 01:38:29.440
Was hat das hier für Schmerzen?

01:38:29.940 --> 01:38:31.280
Cannot resolve configuration.

01:38:31.640 --> 01:38:38.140
warum warum nicht

01:38:43.680 --> 01:38:50.000
ok aber wahrscheinlich weil ich den acto aether nicht habe

01:38:50.000 --> 01:39:02.960
Wir gucken mal die offizielle Docs.

01:39:02.960 --> 01:39:08.720
Offizielle Docs haben keine...

01:39:08.720 --> 01:39:21.600
Actuator.

01:39:30.440 --> 01:39:31.680
Größer ist die Schaf.

01:39:32.600 --> 01:39:34.120
Komm doch mal, was du machen willst.

01:39:38.720 --> 01:39:40.180
She baited.

01:39:44.080 --> 01:39:45.220
It works.

01:39:53.500 --> 01:39:55.420
Okay, also müssen wir anscheinend doch

01:39:55.420 --> 01:39:57.240
den Actuator

01:39:57.240 --> 01:39:59.100
da irgendwie reinhauen.

01:40:00.580 --> 01:40:01.300
Actuator.

01:40:03.500 --> 01:40:05.080
Ach so, ja, das brauchen wir.

01:40:05.080 --> 01:40:05.720
Das macht ja Sinn.

01:40:08.720 --> 01:40:10.340
Okay, wie geht das jetzt weiter?

01:40:11.640 --> 01:40:16.400
Genau, das da muss ich hier in die Vacation-Gedöns da eintragen.

01:40:17.580 --> 01:40:20.460
Ah, jetzt gibt es das auch, jetzt wo ich den Actuator hier drinne habe.

01:40:27.400 --> 01:40:27.960
Okay.

01:40:30.260 --> 01:40:32.220
I'm learning Spring Boot and Java.

01:40:35.520 --> 01:40:37.540
I'm a complete Spring Boot Noob.

01:40:37.540 --> 01:40:41.920
und habe sehr wenig Erfahrung in Java.

01:40:45.500 --> 01:40:49.100
Und ich habe einfach verschiedene Dinge in Java und Spring Boot versucht.

01:40:50.440 --> 01:40:53.620
Wie die native C-Libraries zu nennen

01:40:53.620 --> 01:40:56.780
oder Websocket-Verkaufsverkaufs zu machen.

01:40:58.780 --> 01:41:00.280
Und jetzt versuchen wir,

01:41:00.280 --> 01:41:04.140
einen Prometheus-Monitoring-Endpunkt zu schaffen.

01:41:07.540 --> 01:41:08.500
oweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweoweowe

01:41:37.540 --> 01:41:41.540
Ich kann Teams für ein paar Wochen wechseln.

01:41:43.540 --> 01:41:53.540
Und ich habe mich für die Wechseln zur Entwicklungsgruppe für zwei Wochen eingestellt.

01:41:54.540 --> 01:41:57.540
Und ich habe geschaut, was sie tun.

01:41:57.540 --> 01:42:06.100
und sie benutzen meistens java und springwood

01:42:06.100 --> 01:42:13.260
zweiter mensch okay

01:42:13.260 --> 01:42:27.420
also will ich nicht der größte noob jemals sein, den sie je in ihrem gruppe hatten, also versuche ich, ein bisschen zu lernen

01:42:27.420 --> 01:42:36.140
Spring Boot und Java für das. Ich meine, wir sind nicht gezwungen, das zu tun. Es ist komplett optional.

01:42:37.180 --> 01:42:40.380
Aber ich will sehen, was die Java-Mannschaften tun.

01:42:48.860 --> 01:42:54.220
Ja genau, dann werde ich ein zweites Wort machen.

01:42:54.220 --> 01:42:57.520
However you pronounce it.

01:42:58.080 --> 01:42:59.080
No, I'm not a developer.

01:42:59.660 --> 01:43:00.900
I'm a DevOps engineer.

01:43:04.020 --> 01:43:05.700
Or soon my...

01:43:05.700 --> 01:43:06.860
I'm...

01:43:06.860 --> 01:43:07.960
No, that's wrong.

01:43:08.080 --> 01:43:10.040
In my last job I was a DevOps engineer.

01:43:10.200 --> 01:43:12.800
Now I'm a senior Linux engineer.

01:43:13.120 --> 01:43:15.640
But it doesn't matter what the job title is.

01:43:17.640 --> 01:43:18.120
It's...

01:43:18.120 --> 01:43:21.280
For the most part it's Cloud Infrastructure with Terraform.

01:43:21.280 --> 01:43:28.480
und gitlab ci pipelines und linux administration

01:43:28.480 --> 01:43:37.480
und viel mit developers sprechen, damit ich die meisten der Leute kenne

01:43:37.480 --> 01:43:48.520
wir ditz mit dem programm in golds on stream war

01:43:48.520 --> 01:43:52.840
never in java only for the last two or three streams

01:43:52.840 --> 01:44:05.020
man will try to create the point so leute das mal gucken wie von stars denn also wir

01:44:05.020 --> 01:44:06.980
Wir müssen uns nicht angucken, wie man Prometheus installiert.

01:44:12.440 --> 01:44:13.620
Aha, hier, guckt mal.

01:44:13.900 --> 01:44:15.360
Custom Metrics in Spring Boot.

01:44:15.800 --> 01:44:17.000
Wobei, eigentlich will ich keine...

01:44:17.000 --> 01:44:17.980
Moment, Moment, Moment.

01:44:18.380 --> 01:44:21.960
Kann das sein, dass das alles ist, was ich machen muss,

01:44:22.040 --> 01:44:23.860
dass es schon Metriken jetzt gibt?

01:44:24.960 --> 01:44:25.680
Wartet mal.

01:44:26.100 --> 01:44:28.700
Bekomme ich jetzt unter Slash Metrics, bekomme ich jetzt was?

01:44:31.700 --> 01:44:32.460
Probier mal aus.

01:44:32.560 --> 01:44:32.960
Curl.

01:44:32.960 --> 01:44:43.520
localhost 80 in mich ab matrix können wir mehr machen wenn du eine idee für

01:44:43.520 --> 01:44:49.480
hast was du in go machen willst was ist denn da der richtige endpunkt

01:44:49.480 --> 01:45:05.440
ich habe keinen plan moment actuator alter jeder auf der welt verwendet

01:45:05.440 --> 01:45:12.720
slash metrics aber nein actuator prometheus alter okay hier gibt es

01:45:12.720 --> 01:45:18.600
zeug ganz viel ganz viel massive high-IQ-metriken

01:45:19.480 --> 01:45:23.720
aber ich will ja mal willkommen wir machen wir eine custom metrik

01:45:23.720 --> 01:45:33.160
jetzt spring wird special

01:45:33.160 --> 01:45:41.080
wie macht man einen eigenen endpoints

01:45:41.080 --> 01:45:56.320
so component custom mit okay ich kopiere das alles mal in die main component custom matrix

01:45:56.320 --> 01:46:04.720
service counter von micro mikrometer meter registry jetzt wird's java enterprise business

01:46:04.720 --> 01:46:07.660
Custom Matrix Counter Singleton

01:46:07.660 --> 01:46:08.980
Factory

01:46:08.980 --> 01:46:11.000
Manager Service

01:46:11.000 --> 01:46:13.120
Interface

01:46:13.120 --> 01:46:19.840
Was ist denn go crazy?

01:46:24.840 --> 01:46:25.900
Sagt mir gar nichts.

01:46:25.900 --> 01:46:34.860
Ach ja, meinst du?

01:46:34.940 --> 01:46:36.380
Man kann hier den Pfad ändern

01:46:36.380 --> 01:46:38.340
Also quasi

01:46:38.340 --> 01:46:39.880
Management

01:46:39.880 --> 01:46:43.900
Endpoints

01:46:43.900 --> 01:46:46.540
Mal nochmal richtig schreiben

01:46:46.540 --> 01:46:47.260
Alter

01:46:47.260 --> 01:46:49.400
Endpoints

01:46:49.400 --> 01:46:52.340
Endpoints

01:46:52.340 --> 01:46:55.020
Access Default

01:46:55.020 --> 01:47:00.020
gibt es die path oder web base path

01:47:06.900 --> 01:47:13.700
naja kommt wir lassen zwar so standard haben wir hier ein abblick denn das

01:47:13.700 --> 01:47:19.780
muss ein public sein custom matrix counter description

01:47:19.780 --> 01:47:21.540
Hier kann man das in Krisen.

01:47:22.100 --> 01:47:23.480
Dann nennen wir das mal

01:47:23.480 --> 01:47:26.260
Custom Metric Name Description.

01:47:26.560 --> 01:47:27.560
Ja gut, ist wurscht.

01:47:28.880 --> 01:47:30.860
Wir gucken mal, ob das jetzt funktioniert.

01:47:30.860 --> 01:47:32.640
Wie geht es denn weiter?

01:47:36.460 --> 01:47:38.200
Also das heißt, theoretisch

01:47:38.200 --> 01:47:39.760
müsste ich jetzt schon,

01:47:40.320 --> 01:47:41.980
wenn ich das hier starte,

01:47:43.260 --> 01:47:44.380
müsste ich das ja schon bekommen.

01:47:46.700 --> 01:47:48.260
Grab, Custom.

01:47:49.780 --> 01:48:01.120
custom da ist es hier ja kasse metric das ist aber auch easy gemacht also wir

01:48:01.120 --> 01:48:08.040
haben schon prometheus zeug in internet gemacht zwar komplizierter

01:48:08.040 --> 01:48:20.100
Ich weiß nicht, ich hab...

01:48:20.100 --> 01:48:24.000
Du hast jetzt zwar das Repo gepostet, aber ich hab echt...

01:48:24.000 --> 01:48:27.040
Kein Plan, was das sein soll.

01:48:31.560 --> 01:48:32.640
Okay, so.

01:48:32.800 --> 01:48:35.400
Und jetzt können wir den Kram irgendwo injecten.

01:48:35.720 --> 01:48:36.200
Oder wie?

01:48:36.200 --> 01:48:38.440
Da probieren wir das doch mal aus.

01:48:38.920 --> 01:48:41.280
Dann injecten wir das mal in unseren Background-Service.

01:48:44.740 --> 01:48:45.840
Äh, hier irgendwie.

01:48:46.400 --> 01:48:46.880
Custom.

01:48:47.540 --> 01:48:49.520
Ne, äh, wie heißt das Ding?

01:48:52.520 --> 01:48:54.020
Custom-Metrix-Service.

01:48:58.400 --> 01:48:59.640
Ach, ich bin ja auch blöd.

01:48:59.640 --> 01:49:14.880
kasse matrix services so ad constructor parameter und nun sagen wir hier einfach

01:49:14.880 --> 01:49:24.060
einmal pro sekunde kasse matrix service increments kasse matrix und jetzt sollte

01:49:24.060 --> 01:49:25.920
der Kram. Ja, guck, es zählt ja, Leute,

01:49:25.960 --> 01:49:26.560
es zählt hoch.

01:49:32.580 --> 01:49:33.540
Es zählt hoch.

01:49:34.200 --> 01:49:36.040
Das ist wirklich einfach.

01:49:36.620 --> 01:49:37.920
Das ist wirklich einfach

01:49:37.920 --> 01:49:38.660
und gut gemacht.

01:49:41.780 --> 01:49:43.060
Das gefällt mir gut.

01:49:43.540 --> 01:49:45.240
Das hat was.

01:49:45.440 --> 01:49:47.540
Das hat was. Also ich muss sagen,

01:49:47.620 --> 01:49:48.560
mir gefällt Spring Boot.

01:49:49.180 --> 01:49:50.080
Das ist schon nice.

01:49:54.060 --> 01:49:55.580
Also die Sachen wären jetzt in .NET

01:49:55.580 --> 01:49:58.100
und ASP.NET Core wären die aufwendiger gewesen.

01:49:58.220 --> 01:49:59.300
Nicht wirklich viel.

01:50:04.740 --> 01:50:06.200
Was? Ich kann den Constructor

01:50:06.200 --> 01:50:07.520
weglassen, wenn ich

01:50:07.520 --> 01:50:08.860
addAutowired.

01:50:10.440 --> 01:50:11.980
Jetzt wird es aber super krass

01:50:11.980 --> 01:50:13.960
Magic, oder? Das heißt, ich kann das

01:50:13.960 --> 01:50:15.080
hier alles weglassen.

01:50:17.280 --> 01:50:18.040
Und das

01:50:18.040 --> 01:50:18.660
da auch.

01:50:21.080 --> 01:50:21.880
Wenn ich jetzt

01:50:21.880 --> 01:50:22.700
hinschreibe.

01:50:24.060 --> 01:50:30.640
Auto wired, wired, wired, ah ne, at auto wired, hä?

01:50:34.640 --> 01:50:35.960
Öh, oder auch nicht?

01:50:39.960 --> 01:50:41.320
Was ist verkehrt?

01:50:46.960 --> 01:50:48.940
Was habe ich falsch gemacht?

01:50:52.080 --> 01:50:53.540
Darf nicht finals sein.

01:50:54.060 --> 01:51:06.000
also es kann das wahrscheinlich nicht setzen field injection ist not recommended warum nicht

01:51:06.000 --> 01:51:12.320
Should you use Autowide in Spring Boot?

01:51:19.380 --> 01:51:20.060
No.

01:51:22.980 --> 01:51:25.000
Bad practices and inflexible...

01:51:25.520 --> 01:51:27.360
Hä? Ganz ehrlich?

01:51:27.700 --> 01:51:29.480
Verstehe ich nicht, was sie dagegen haben.

01:51:29.800 --> 01:51:34.000
Ob ich das jetzt über den Constructor injecte oder so, ist doch...

01:51:34.000 --> 01:51:37.880
Mein Opa hätte gesagt, ist doch Jacke wie Hose.

01:51:46.880 --> 01:51:49.400
Ob das jetzt Final ist oder nicht, gibt es Schlimmeres.

01:51:51.020 --> 01:51:52.800
Das ist nicht Business Enterprise genug.

01:51:54.500 --> 01:51:56.120
Du hast noch nie anders gesehen.

01:51:56.520 --> 01:51:58.360
Du meinst noch nie was anderes als Auto Wired.

01:52:04.000 --> 01:52:15.380
ja ob das doch das ist doch so auch gut da sparen wir uns ich meine so viel ganz

01:52:15.380 --> 01:52:20.900
ehrlich so viel sparen wir uns jetzt auch nicht aber halt ein bisschen boilerplate ich finde

01:52:20.900 --> 01:52:25.960
ich finde das gar nicht schlecht mit dem auto war ja das hat noch alles funktioniert

01:52:25.960 --> 01:52:39.520
also ich sehe nicht

01:52:39.520 --> 01:52:48.460
okay wir fragen mal chat gpt was das dazu sagt ob wir auto ein spring boot verwenden sollen

01:52:48.460 --> 01:52:57.820
wir fragen sie können wir fragen chat gpt mal auf deutsch sollte ich

01:52:57.820 --> 01:53:16.240
in springwood verwenden oder lieber in jackton über den konstruktor deutsch denglisch

01:53:16.240 --> 01:53:28.260
Warum? Was ist die Unterschiede? Ich meine, es sollte das gleiche sein.

01:53:46.240 --> 01:54:16.220
Ich bin ein Mensch, der sich nicht nur für die Welt interessiert, sondern auch für die Welt.

01:54:16.220 --> 01:54:17.220
Das Piepsen gehört?

01:54:17.220 --> 01:54:31.380
Feuerlamm hat kein Bock mehr auf Spring.

01:54:31.380 --> 01:54:40.460
I had declared the fields with injection over the constructor, but then chat told me outwired

01:54:40.460 --> 01:54:42.580
should be used.

01:54:42.580 --> 01:54:44.880
Don't see, why not?

01:54:47.300 --> 01:54:48.620
I mean, it's almost the same.

01:54:50.540 --> 01:54:50.800
Why

01:54:50.800 --> 01:54:52.800
Riot Boiler played in the

01:54:52.800 --> 01:54:54.460
Constructor when you can use Auto-Wired?

01:54:55.320 --> 01:54:56.660
Don't see the downsides.

01:54:58.380 --> 01:54:59.120
Also ich habe keine Ahnung.

01:54:59.120 --> 01:55:01.100
Würde mich echt interessieren, warum man das nicht verwenden soll.

01:55:01.400 --> 01:55:02.740
Aber gucken, was ChatGPT sagt.

01:55:03.780 --> 01:55:05.080
In Springboot

01:55:05.080 --> 01:55:07.460
Constructor

01:55:07.460 --> 01:55:09.220
steht heute als der bevorzugte

01:55:09.220 --> 01:55:11.120
Ansatz gesehen gegenüber der

01:55:11.120 --> 01:55:12.560
Verwendung von AutoWired.

01:55:13.440 --> 01:55:14.720
Aha. Warum?

01:55:16.440 --> 01:55:17.000
Beispiel.

01:55:17.660 --> 01:55:19.160
Ja, so hatte ich das ja.

01:55:19.840 --> 01:55:20.300
Vorteil.

01:55:20.380 --> 01:55:22.220
Du kannst abhängig keinen...

01:55:22.220 --> 01:55:24.340
Okay. Verstehe ich.

01:55:24.760 --> 01:55:26.480
Ja. Feine. Okay.

01:55:30.480 --> 01:55:31.820
Das verstehe ich.

01:55:33.680 --> 01:55:34.320
Testbarkeit.

01:55:34.400 --> 01:55:35.820
Einfacher zu testen, weil du per Konstruktor...

01:55:36.380 --> 01:55:37.100
Okay.

01:55:37.860 --> 01:55:38.980
Verstehe ich auch.

01:55:39.440 --> 01:55:40.060
Macht Sinn.

01:55:41.120 --> 01:55:45.120
Das ist immer Chat GPT ist manchmal gar nicht so verkehrt.

01:55:45.120 --> 01:55:46.120
Macht Sinn.

01:55:46.120 --> 01:55:53.800
Weil du kannst jetzt nicht in irgendeinem Test sagen hier new schedule tasks bla bla

01:55:53.800 --> 01:55:54.800
bla.

01:55:54.800 --> 01:55:55.800
Das funktioniert.

01:55:55.800 --> 01:56:04.240
Klar, du siehst sofort welche Abhängigkeit Null Sicherheit der Compiler zwingt dich.

01:56:04.240 --> 01:56:11.560
kompatibilität mit required args konstruktor von lombok spart boilerplate

01:56:11.560 --> 01:56:18.700
was auch immer wir müssen uns definitiv lombok noch angucken heute aber nicht

01:56:18.700 --> 01:56:29.800
das scheint ja sehr verbreitete library zu sein oder wie sieht's aus leute seit

01:56:29.800 --> 01:56:37.780
hier lombok enjoyers chat ich habe außer dass ich ein paar mal gelesen habe noch nie verwendet

01:56:37.780 --> 01:56:45.560
lombok auf jeden fall standard ok also haben wir lombok enjoyers im chat gut zu wissen da probieren

01:56:45.560 --> 01:56:53.240
wir das auch mal aus nix da nix da stream oder so über nix da streamen wir was anderes machen als

01:56:53.240 --> 01:57:00.320
java die hardcore java leute mögen es nicht das sind aber bestimmt auch leute

01:57:00.320 --> 01:57:11.000
die gegen kotlin sind oder wo das alles boilerplate alles java mit zisch factories

01:57:11.000 --> 01:57:22.000
managern und services sein muss die nutzen die nutzen interne apis die

01:57:22.000 --> 01:57:23.280
wegfallen sollen. Oh.

01:57:25.560 --> 01:57:25.940
Okay.

01:57:27.880 --> 01:57:28.160
Also,

01:57:28.520 --> 01:57:30.180
es ist anscheinend umstritten.

01:57:32.220 --> 01:57:32.500
Okay,

01:57:32.640 --> 01:57:34.480
Chat, ich bin überzeugt,

01:57:34.560 --> 01:57:36.040
dass es über den

01:57:36.040 --> 01:57:38.080
Constructor Injection besser ist.

01:57:41.440 --> 01:57:42.180
Wir machen,

01:57:42.380 --> 01:57:42.820
wir lassen ins

01:57:42.820 --> 01:57:45.640
Constructor Injection.

01:57:47.460 --> 01:57:47.900
Satzserver,

01:57:48.080 --> 01:57:50.460
ja, Satzserver Stream, das machen wir als nächstes.

01:57:50.460 --> 01:57:53.220
Ich ändere schon mal meinen Streamtitel jetzt

01:57:53.220 --> 01:57:54.820
Nachdem ich offline gehe

01:57:54.820 --> 01:57:57.440
Offline gehe, dass ich nicht vergesse

01:57:57.440 --> 01:58:00.280
Weil ich gehe jetzt was essen, Leute

01:58:00.280 --> 01:58:02.980
Die sind doch standardmäßig private

01:58:02.980 --> 01:58:03.940
Oder, Chat?

01:58:04.760 --> 01:58:05.160
Fragezeichen

01:58:05.160 --> 01:58:07.380
Wenn ich hier nicht private davor schreibe

01:58:07.380 --> 01:58:08.620
Sind die doch auch so private, oder?

01:58:09.200 --> 01:58:09.620
Oder nicht?

01:58:11.100 --> 01:58:12.740
Was ist, wenn ich nix hier hinschreibe?

01:58:13.240 --> 01:58:14.300
Ach, die sind protected

01:58:14.300 --> 01:58:15.840
Kann ich hier oben sagen, Final?

01:58:17.720 --> 01:58:18.260
Da kann nämlich

01:58:18.260 --> 01:58:19.840
Da kann nämlich keiner

01:58:19.840 --> 01:58:22.200
da kann nämlich keiner davon erben.

01:58:23.740 --> 01:58:25.620
Jetzt sind die aber private.

01:58:26.060 --> 01:58:28.360
Weil wenn hier Final steht, kann keiner davon erben, oder?

01:58:33.500 --> 01:58:35.680
Protected heißt, dass alles, was

01:58:35.680 --> 01:58:37.620
davon erbt,

01:58:37.720 --> 01:58:39.220
darauf zugreifen kann.

01:58:44.400 --> 01:58:46.260
Was schreiben eigentlich die coolen Leute?

01:58:46.420 --> 01:58:48.280
Final private oder private final?

01:58:48.280 --> 01:58:53.380
Also

01:58:53.380 --> 01:58:56.800
IntelliJ hat da keine Meinung zu

01:58:56.800 --> 01:58:57.400
Wie es aussieht

01:58:57.400 --> 01:59:00.440
Ich bin ja für Private Final

01:59:00.440 --> 01:59:07.800
Private Final

01:59:07.800 --> 01:59:08.760
Okay

01:59:08.760 --> 01:59:12.960
Die cool machen Kotlin

01:59:12.960 --> 01:59:15.080
Ja, aber im Böses Enterprise Umfeld

01:59:15.080 --> 01:59:17.280
Ist Kotlin noch nicht so angesagt wie Java selbst

01:59:17.280 --> 01:59:18.400
Zumindest bei uns.

01:59:19.060 --> 01:59:21.140
Aber ich bin bei der Versicherung. Das ist old school as fuck.

01:59:25.140 --> 01:59:25.860
Ja gut.

01:59:26.640 --> 01:59:27.020
Chatke.

01:59:28.180 --> 01:59:29.400
Haben wir doch wieder was geschafft.

01:59:30.180 --> 01:59:31.660
Schön, dass ihr am Start wart.

01:59:33.620 --> 01:59:34.040
Komm mit.

01:59:35.360 --> 01:59:35.960
Omega lul.

01:59:41.320 --> 01:59:42.780
Class final oder final?

01:59:42.880 --> 01:59:44.200
Final class, würde ich sagen.

01:59:47.280 --> 01:59:51.100
sowas wie Sealed Class in .NET.

01:59:53.100 --> 01:59:56.080
Aber jetzt muss ich was futtern.

01:59:57.080 --> 01:59:59.940
Es gibt Nudeln mit Tomatensauce und Hackfleischbällchen.

02:00:03.060 --> 02:00:04.220
Pepo Fat Time.

02:00:07.840 --> 02:00:09.440
Dann sehen wir uns im nächsten Stream.

02:00:11.280 --> 02:00:12.900
Ich bin auch pünktlich zum Essen fertig.

02:00:13.640 --> 02:00:15.140
Bis dann Leute, wir sehen uns. Macht's gut.

02:00:15.580 --> 02:00:15.940
See you.

