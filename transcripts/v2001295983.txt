Herr Quaid.
Michael, fünf Spielejahren auch am Start.
Weeps in.
Ich bin bei Tag 3.
Nicht sonderlich weit.
Ich bezweifle auch, dass ich bis zum 25. fertig werde.
Aber das ist ja nicht wild.
Ich meine, es ist jetzt nicht, als bin ich da irgendwie bei den Toplisten oder so dabei.
Kannst du ein Keyboard empfehlen?
Für was ist die Frage?
Zum Spielen?
Zum Programmieren?
Universal?
Zu viel Sidetracked, ja.
Also grundsätzlich gesagt, brauchst du ein Keyboard eher zum Tippen, Programmieren, Basteln, was auch immer.
Achso, ich kann dir die zwei Keyboards empfehlen, die ich habe.
Ich habe eins zum Spielen.
Wir müssen gar nicht lang rumreden, weil viele Sachen kann ich eh nicht ausprobieren.
Viele Sachen habe ich eh nicht ausprobiert die letzten Jahre.
Also ich kann euch gar nicht so viel empfehlen.
Ich mache mal kurz die...
Die Musik, Alter.
So, ich warte mal kurz, bis das gestartet ist.
Also, ich habe zwei Tastaturen.
Einmal, zum Spielen habe ich eine Logitech G513.
Wobei ich sagen muss, rein zum Programmieren und rein zum Tippen und so würde ich die nicht unbedingt benutzen.
Die ist ganz gut wegen der Treibhaussoftware und was für Möglichkeiten.
Also theoretisch kannst du auch RGB-Features benutzen, aber ganz ehrlich, ich habe das Ding einfach auf durchgehend blau stehen und gut ist.
So, und das habe ich hier daheim auf der Arbeit, wo ich tatsächlich nur am Basteln, am Administrieren, am Programmieren, am Tippen bin, Terminal benutzen.
Da habe ich eine Ducky One Skyline.
Ich habe allerdings die erste Variante und zwar die mit NumBlock.
Also die, die man jetzt hier irgendwie nicht sieht drauf.
Hier, hier.
Ne.
Aber mit der normalen Enter-Taste.
Also meine sieht so aus, nur hat sie noch einen NumBlock.
Tja, wenn ich die jetzt mal finden würde irgendwie.
Hier.
So sieht meine aus.
Full Size mit diesem, ja, irgendwie fast rechtdeckigen Enter-Knopf.
Weiß nicht, was es mit diesem Enter-Knopf auf sich hat, den mag ich aber nicht.
Ich habe hier Full, Full Size.
Gut.
Die kann ich tatsächlich auch empfehlen.
Wenn du den ganzen Tag am Tippen bist.
Die finde ich gut.
Einzige Sache, die ich gemacht habe, ist, nachdem ich die auf der Arbeit benutze.
Ja, meine hat eher auch so die Farbe, Farbgebung.
Die einzige Sache, die ich gemacht habe, weil ich die auch auf der Arbeit benutze, ist, ich habe so Silikonringe.
Tastatur, Silikonringe.
Weiß nicht, ob man das so findet.
Oh, fuck.
Achso, Silikonringe.
Silikonringe.
So was habe ich da drunter, unter manchen Tasten.
Unter manchen Tasten, nicht unter allen.
Unter...
Warum genau hält er sich gerade den Ellenbogen fest?
Was hat das mit seinem Ellenbogen zu tun?
Die haben irgendein Stockfoto genommen, oder?
Ah, das reduziert Fingererschöpfung.
Ja, ganz bestimmt.
Ja, alles klar.
Also, der Grund, warum ich das drunter habe, ist, bei manchen Tasten neige ich dazu.
So feste drauf zu hauen, und damit ich den Leuten auf der Arbeit nicht gar so sehr auf den Sack gehe.
Wow, wow, wow, wow, ja gut.
Habe ich mir gedacht, ich mache da mal sowas drunter.
Aber die Ducky One Skyline kann ich dir wirklich empfehlen.
Das ist eine nice Tastatur.
Du kannst mit der...
Ich habe noch die Einser.
Du kannst mit der Zweier, habe ich gelesen.
Mit der Einser auch irgendwie.
Mit der Zweier ist es wohl einfacher.
Hast du gar so einen integrierten Microcontroller für Makros, falls man sowas braucht.
Das sind dann so richtige Hardware.
Makros.
Ohne Windows-Treiber-Software.
Du hast recht, du hast Handgelenk.
Wie komme ich auf Ellenbogen?
Ellenbogen ist viel weiter unten.
Ja, geht mittlerweile halbwegs.
Ist schon mal ein bisschen merkwürdig, so ohne Cuts.
Muss man sich auch wieder erst dran gewöhnen.
Gucken, vielleicht hole ich mir nächstes Frühjahr wieder eine aus dem Tierheim.
Erstmal updaten hier.
Reboot.
Darf ich fragen?
Was für ein Chrome-Branche?
Gar kein Chrome.
Ich benutze Chromium zum größten Teil.
Und Chrome.
Und Firefox.
Und Edge habe ich installiert, aber benutze ich nicht.
So.
Oh, ich habe schon gedacht.
Das hängt beim Starten.
Ja, Chico lebt nicht mehr.
Chico ist...
Ich überlege gerade.
Heute ist Montag.
Heute ist Montag.
Am Freitag ist Chico gestorben.
Ja.
Zed.
Zetsch.
Ich frage es immer noch.
Zedke oder Zetsch?
Ja, Chico hatte alles.
Chico hatte Schilddrüsenprobleme, Nierenprobleme, zu hohen Blutdruck, Augenprobleme, zu wenige rote Blutkörperchen.
Chico hatte alles.
Und das aber alles auf einmal irgendwie.
Das war halt zu viel für die Cuts.
Also, Firefox könnte das nächste Jahr über tatsächlich wieder richtig Fahrt aufnehmen.
Also, wenn Mozilla.
Ja.
Wenn, ähm.
Also, wenn.
Wenn Mozilla irgendwie.
Irgendwie, ähm.
Wenn man Mozilla Aktien kaufen könnte.
Sagen wir es mal so.
Also, wenn ich.
Wenn Mozilla Aktien hätte.
Also, wenn Mozilla an der Börse wäre.
Würde ich für nächstes Jahr tatsächlich Mozilla Aktien kaufen.
Weil ich habe die Vermutung, dass.
Die Firefox.
Die Firefox Usage nächstes Jahr ein bisschen zunehmen wird.
Im Vergleich zu diesem Jahr.
Ob sich das dann auf den Aktienkurs gut auswirken würde, sei mal wieder was anderes.
Aber.
Das würde ich machen, weil Google ist gerade so.
In ihrem Element.
Was wir nutzen aus, dass wir Google sind, ist auch mit dem Schwermachen von Adblockern und sowas, dass es in Zukunft eventuell dazu führen könnte, sicher ist man sicher da nie, dass Google wieder anfängt mit ihren blöden Sachen, das haben sie ja schon angekündigt.
Von wegen Manifest V3 und Apis entfernen, dass Adblock nicht mehr richtig funktioniert, sagen zwar schon jetzt wieder mal mal wieder zurückgerudert bei dieser Aktion hat Google ja schon irgendwie fünfmal zurückgerudert, aber so langsam aber sicher kommt da immer mehr und wenn das der Fall ist, ja, dann werde ich einfach nur noch Firefox benutzen, ganz einfach, deswegen ist es auch unglaublich wichtig, richtig und wichtig, wie man heutzutage so schön sagt, dass es noch einen alternativen Browser gibt.
Ja.
Das kann ich dir nicht erklären, da bin ich nicht Ansible pfeifert genug.
Unter Collections verstehe ich eigentlich sowas wie Listen.
Wahrscheinlich ist es eine Collections Zusammenfassung von mehreren Playbooks, wo unterschiedliche, ah, ich habe keine Ahnung, das weiß ich nicht.
Das weiß ich, das ist wirklich was, was mir nichts nicht sagt.
Ich habe zwar Ansible, äh, Ansible, Ansible, ich habe Ansible schon öfters benutzt.
Aber jetzt so in diesen ganzen Ansible Metagram von eigenen Module erstellen.
Und irgendwo anbieten, und das habe ich alles noch nicht gemacht.
Ich benutze Ansible, um meine Server zu konfigurieren, ich benutze Ansible, um da ein paar Sachen einzustellen, aber so im, im, im großen Ansible Game bin ich jetzt nicht.
Ah ja.
Ach so, okay, siehst du, wenn du deine, wenn du deine Sachen veröffentlichen möchtest als Ansible, quasi Third-Party-Module, so machen die das, genau das, so Salami-Taktik, sie gehen den Leuten so lange auf den Keks, bis dann irgendwie so, bis die Leute nicht mehr können und dann irgendwas durchkommt, was sie eigentlich gar nicht wollen.
Ja, deswegen ist es echt wichtig, dass es Firefox gibt.
Und ich habe, ich habe die blöde Vermutung, dass es nächstes Jahr soweit sein wird, dass es in Google immer schwieriger wird, ordentliche Add-ons, die was machen, was Google nicht mag.
Und es ist relativ einfach, was zu machen, was Google nicht mag, was, ja, Add-ons, die Google nicht mag.
Und, äh, dann schließe ich daraus, ich vermute zumindest, dass dadurch die Firefox-Usage etwas zunehmen wird.
Also, wenn ich, wenn Mozilla aktiviert...
Wenn ich Mozilla-Aktien hätte, dann würde ich tatsächlich jetzt ein paar Mozilla-Aktien kaufen, mal auf gut Glück, aber haben sie ja nicht.
Dein Take zu... Oh, ich sehe den Sinn dieses Browsers nicht, seriously.
Ich weiß gar nicht, warum denn so viele verwenden.
Die haben mich ja auch mal angefragt, das war witzig.
Ich habe sogar gesagt, Leute, kein Ding, doch, doch, äh, ich weiß nicht, ob es immer noch der größte Geldgeber ist, aber wahrscheinlich, ja.
Ähm, Google, also Mozilla verdient hauptsächlich Kohle, halt, äh, über, über Google.
Also, über Google.
Äh, über Traffic, den sie auf Google bringen, so rum, muss man das vielleicht sagen.
Ja, also, äh, wie gesagt, mein Take zu Opera GX ist, ich verstehe nicht, warum das jemand verwendet.
Also, was ist der Vorteil von Opera GX?
Zum Beispiel, was ist Firefox oder gegen irgendeinen Chrome, wo Google Sachen...
Also, ich verstehe es eigentlich nicht.
Das Einzige, was Mozilla... Äh, was... Nein, ist es nicht, ist es nicht, ist es nicht.
Also, ich meine, im Kern, natürlich, die Browser-Engine, das ist Plink, also quasi Chrome.
Aber, äh, der Sachen drumherum, die sind nicht Open Source.
Ich meine, okay, ich sehe ein paar, äh, sagen wir mal, ein paar oberflächliche Vorteile.
Oh, ich muss mal andere Musik anmachen.
Kirby geht mir gerade auf den Keks.
Mach mal so.
Also, ich sehe ein paar oberflächliche Vorteile von Opera GX.
Ich sehe zum Beispiel den Vorteil, dass du da in irgendeiner Art und Weise deine RGBs mitsteuern, RGB-Beleuchtung mitsteuern kannst.
Wozu auch immer ich das im Browser brauche.
Dann hast du irgendwie die Möglichkeit, dass man...
Nee, das war es doch... War es eigentlich schon.
Du hattest mal die Möglichkeit...
Verschiedene, äh, Background-Tabs quasi schlafen zu legen.
Aber das können die meisten anderen Browser mittlerweile auch.
Bett-Getabs.
Und ansonsten, was ist der Vorteil von Opera GX?
Mir fällt wirklich keiner ein.
Wir kommen uns das jetzt mal an zusammen.
So, der Gaming-Browser.
Warum es auch immer der Gaming-Browser ist.
So, also, was ist der große Vorteil von Opera GX?
Was wollen sie uns erklären?
Hier, CPU-Limiter, RAM-Limiter.
Das sind einfach nur schöne Komponenten.
Kosmetik-Sachen, die niemand braucht.
Ganz ehrlich, wenn ich irgendeine JavaScript-Seite im Hintergrund habe,
die permanent irgendwelche Schleifen laufen lässt
und nennenswerte CPU zieht, auch im Idle,
dann mache ich die einfach zu.
Und RAM-Limiter ist heute auch nicht das großartige Problem.
Du kannst ja mit...
Also, die meisten Browser schicken ja inaktive Tabs in...
Ja.
Werfen inaktive Tabs aus dem RAM raus.
Also, das braucht eigentlich keiner.
Ich behaupte jetzt einfach mal,
es macht auch nirgends, wo deine Game-Limiter nicht da sind.
Es macht auch nirgends, wo deine Game-Limiter nicht da sind.
Es macht auch nirgends, wo deine Game-Limiter nicht da sind.
Es macht auch nirgends, wo deine Game-Limiter nicht da sind.
So.
Dann, ja, das Theming braucht auch kein Mensch.
Custom-Themes, wen juckt's?
Weil davon abgesehen, geht sogar in Firefox.
Game-Deals braucht auch keiner.
Twitch, wozu brauche ich Twitch?
Ich kann Twitch auch einfach so aufmachen.
Discord, ich kann Discord einfach so aufmachen.
Musikplayer, okay, wer es braucht.
Kann man aber schlicht, einfach stinknormal auf der Webseite von Spotify oder von Amazon Music oder von YouTube Music machen.
Messengers kann man sich so installieren, brauche ich nicht im Browser.
Aber davon abgesehen, was bei dem ganzen Ding ja immer mitschwebt ist,
möchte ich Opera GX wirklich meine Zugangsdaten zu all diesen Services geben.
Das ist ja auch hochgradig fragwürdig.
Keine Ahnung, wozu man das braucht.
QR-Code-Scanner gibt es auch, tausend Alternativen.
Fast Navigation am anderen Browser auch.
VPN, was ich von den meisten VPN-Sachen halte, wisst ihr ja.
Und Adblocker ist auch easy integriert mit anderen Sachen.
Also ich sehe legit, jetzt ernsthaft, ich sehe keinen Vorteil davon, Opera GX zu benutzen
und sich dem China-Chinesen-Zweihuerzeug auszusetzen.
Also ich hab, hast du mal Brave benutzt?
Ganz kurz glaube ich, damals auf dem Android-Tablet, danach nie wieder.
Und da habe ich auch jetzt den großen Vorteil nicht erkannt.
Also wenn du mich fragst...
Ich fahre ganz gut mit der Kombination aus Chromium und Firefox
plus für manche DRM-Sachen Chrome direkt,
weil man mit Chromium Probleme hat.
Beispielsweise mit Amazon, Amazon DRM und solche Geschichten
kann man Chrome direkt verwenden.
Ansonsten Firefox plus Chrome.
Es gibt für mich ernsthaft keine sinnvollen Argumente
für irgendwelche China-Chinesen-Browser mit Sachen, wo man nicht weiß.
Man darf nicht vergessen, die meisten Leute leben im Browser.
Wenn nicht direkt oder indirekt.
Die Leute sind dort angemeldet in ihren ganzen Social-Media-Accounts.
Livestream, YouTube, Twitch, alle möglichen Sachen.
TikTok, Facebook, Instagram, alle möglichen Dinger.
Willst du wirklich so einen Browser, wo keiner genau weiß, was er macht,
die Zugangsdaten, Passwortmanager ist ja auch noch teilweise mit drin.
Willst du wirklich so quasi dem Browser die Zugang machen,
die Zugang zu deinem Browser, die du dann jetzt im Browser hast,
die Zugangsdaten zu deinem Leben geben?
Ich weiß nicht.
Wenn überhaupt, dann nur in einem Open-Source-Browser.
Und ich mache es so, ich bin auch nicht permanent auf allen Browsern mit allem eingeloggt.
Ich benutze Browser für unterschiedliche Sachen.
Ich habe Firefox beispielsweise, also YouTube, Firefox.
YouTube mache ich prinzipiell nur unter Linux,
weil da habe ich viel zu viel Schiss, dass mal echt irgendwas ist
und irgendwelche Session-Cookies geklaut werden oder sowas.
Da mache ich mir unter Linux am wenigsten Gedanken.
YouTube bin ich nur unter Linux eingeloggt.
Twitch bin ich nur in Chromium eingeloggt zum Beispiel.
Und im zweiten YouTube-Account bin ich in Chrome eingeloggt
und Amazon bin ich auch in Chrome eingeloggt für DRM-Geschichten.
Twitch, Chromium, ja.
Also ich habe da, ich habe das bisschen verteilt alles.
Das würde ich, das würde ich nicht, ich kann es nicht beweisen.
Aber es gibt genug Leute, die Opera untersucht haben
und zumindest, wenn man sich die Hintergründe anguckt,
wer da alles mit dabei hängt.
Allein schon das ist nicht sonderlich vertrauenswürdig,
ob man jetzt wirklich schon jemand mal genau im Detail analysiert hat,
was wie geschickt wird, weiß ich nicht.
Aber spätestens, wenn man dieses komische Opera VPN benutzt,
dann geht ja alles direkt nach China.
Also da hätte ich gar keinen Bock drauf.
Also Opera, also Opera GX kommt mir echt nicht in die Tüte.
Der Witz ist ja, die haben mich auch mal angefragt,
ob ich nicht Werbung machen möchte für die.
Habe ich gesagt, easy, mache ich, kein Problem, Werbung, nice.
Wir waren uns sogar schon über die Kohle einig.
Ich, Chat, ich würde es euch sagen, ich würde es euch sagen,
ich weiß es aber nicht mehr, wie viel es gewesen ist,
schon zwei Jahre her oder so.
Ich glaube, das haben wir sogar mal zusammen geguckt, das Video.
Zumindest waren wir uns schon einig
und am Ende haben die gesagt, ja, also für das Werbevideo
müsste ich halt selbst Opera GX runterladen und benutzen
und dann quasi sagen, was mir daran so besonders passt.
Was mir daran so persönlich besonders gut gefällt.
Und da habe ich halt gesagt, ich habe persönlich aber kein Interesse daran,
Opera GX zu benutzen.
Und dann haben die geantwortet, ist auch fair,
ist auch eine respektable Aussage, die jetzt kommt.
Haben sie gesagt, nee, sie wollen lieber mit Leuten zusammenarbeiten,
die auch begeistert sind über die Produkte.
Okay, dann machen wir es halt nicht.
Finde ich auch in Ordnung, dass man das sagt.
Aber ich habe denen halt klar gesagt,
im Prinzip haben wir die gefragt,
also im Prinzip haben wir gesagt,
wir machen ein Werbevideo für euch,
aber ich will es nicht benutzen.
Und das wollten sie nicht.
Den meisten ist das in der Tat egal.
Ich habe Werbung gemacht für irgend so ein komisches Mobile-Game
von nicht allzu langer Zeit.
Ich war auch noch nie in einer Wüste
und alles mögliche.
Das hat alles Stock-Footage und drüber reden getan.
Ich musste das nie selbst spielen.
Aber auch nicht nice.
Warum?
Gibt Geld.
Ich stelle mich ja nirgendswohin und sage,
Leute, meine persönliche Empfehlung,
ich benutze das schon seit 15 Jahren,
ist dieser und dieser Browser.
Ich sage das, was gesagt werden soll,
und dann ist es gut.
Aber selbst verwenden will ich es nicht.
Aber das wollten sie nicht.
Was ich echt respektabel finde, zu sagen,
ey, dann nicht.
Wir haben bei Kunden
Suse, Ubuntu, Red Hat, Rocky-System auf den Softwaren.
Postgres oder uns schreibe unsere Krypto-Räume.
Ach so, ja, okay.
Das ging jetzt gar nicht an mich.
Excellent.
Excellent.
Excellent.
Okay, also.
Wo sind wir stehen geblieben?
Wir machen jetzt folgendes.
Ihr seht es ja heute,
ihr seht es ja schon im Titel.
Wir gucken uns heute einmal Docke an.
Docke, das wollte ich eigentlich gestern schon machen.
Docke.
Das ist von dem gleichen Typ,
der Uptime Kuma programmiert hat,
wie man hier sieht.
Repositories.
Das ist auch was,
was ich gerne potenziell,
also ich habe es ja schon mal benutzt.
Also ich würde es gerne daheim benutzen.
Das Problem ist,
dass es mir ein bisschen zu rudimentär ist
in vielen Bereichen.
Für die meisten Leute mag das gut sein.
Aber ich will zum Beispiel
in einem Monitoring-System auch sehen,
wie mein Festplattenverlauf ist
oder sonst was.
Bei manchen Systemen,
das geht halt hier nicht.
Du kannst nicht Langzeitdaten speichern
und du kannst auch nicht was anderes,
außer Up und Down speichern.
Du kannst theoretisch mit so einem
eigens gebastelten Check abfragen,
was du willst.
Aber ich finde es trotzdem
ein bisschen zu rudimentär für meine Sachen.
Aber wofür es da ist, ist gut.
So, zumindest der gleiche Typ
hat ein Docker-Webinterface gebaut.
Das ist ehrlich gesagt nichts,
was ich dauerhaft benutzen würde,
lokal bei mir daheim.
Weil ich habe zur Zeit
nicht so wirklich viele Anwendungszwecke dafür.
Aber es ist immer gut zu wissen,
was gerade so abgeht
und vielleicht entdeckt man ja auch
das ein oder andere Projekt,
was einem gefällt.
Das ist wohl ein Docker-Compose-File-Manager.
Ich weiß nicht,
in wie viel Überschneidung das mit Portena hat.
Ich persönlich hoffe möglichst wenig,
weil ich mag Portena nicht.
Ohne, dass ich jetzt wirklich exakt
den Finger drauf legen kann,
warum ich Portena nicht mag.
Ich mag es nicht.
Ich weiß nicht,
wie es euch geht.
Jemand von euch Portena-Enjoyer
und mag das?
Ich mag es nicht.
So, das gucken wir uns an.
Und davor machen wir
den ersten Part von
Advent of Code 2023.
CLI Portena sehe ich auch so.
Wir machen den ersten Part
von Advent of Code 2023.
Warum nur den ersten Part?
Ist ganz einfach.
Ist ganz einfach.
Erstens,
weil ich mir die Aufgabe
schon mal durchgelesen habe
und mir auch schon ungefähr überlegt habe,
wie man das machen könnte.
Also ist es jetzt nicht,
dass ich das komplett blind mache.
Ich habe mir das vorhin angeguckt
und habe mir schon was überlegt
und habe auch was Kleines gebastelt,
um zu gucken,
ob das vom Ansatz her funktionieren würde.
Ob es wirklich funktioniert,
weiß ich nicht.
Aber ich gehe davon aus,
dass das funktioniert.
Und Part 2 kenne ich noch nicht.
Also ich habe auch keine Ergebnisse.
Also ich habe auch keine Ergebnisse für Part 1.
Also ich kenne Part 2 legit nicht.
Aber nachdem ich Part 2,
nachdem Part 2 immer ein bisschen komplizierter ist,
wie Part 1
und Part 1
an Tag 3 schon relativ kompliziert wirkt,
habe ich da, glaube ich, keinen Bock drauf.
Wenn ich das machen würde,
noch Part 2,
dann wäre ich, glaube ich, durch.
Da könnten wir uns heute
Dokte nicht mehr angucken.
Scripted Stream, ja.
Ich sage es ja.
Angekündigter Scripted Stream.
Das ist nicht nur Scripted Stream, Max.
Das ist vielleicht sogar eine Aufzeichnung.
Und die Message ist jetzt hier nur drin,
dass es nicht wirkt wie eine Aufzeichnung.
Ich habe das vorher mit,
ich meine, du bist ja Mod,
wir haben das vorher einfach gescriptet zusammen.
Ich auch nicht.
Ich habe auch keinen Bock auf Kubernetes.
Single Node Kubernetes irgendwie.
Da habe ich auch keinen Bock drauf.
Ganz ehrlich,
ich persönlich mag ganz normales Docker CLI.
Command Line.
Oder im Zweifelsfall mal Docker Compose.
Aber ehrlich gesagt,
Docker Command Line reicht mir voll und ganz aus.
Und nachdem ich ja auf meiner
HP Microserver Kiste seit über einem Jahr
jetzt Unraid laufen habe,
ist das recht easy,
welches Docker Interface ich benutze,
nämlich das Web Interface von Unraid.
Ich bin mit Unraid auch nicht hundertprozentig glücklich.
Ich habe Unraid ja immer ein bisschen ausgelacht
in der Vergangenheit.
Also welche Noobs verwenden das?
Jetzt muss ich sagen,
ich finde es nicht schlecht,
ich finde es aber auch jetzt nicht komplett sorgenfrei.
Also es gibt auch ein paar eklige Sachen an Unraid.
Zum Beispiel eine Sache,
die mir an Unraid überhaupt nicht gefällt.
Also ich rede,
ich muss sagen,
ich rede da drüber.
Weiß nicht,
ob die vielleicht Web Interface Screenshot haben,
dass man das sieht.
Haben wir auch schon im Stream,
MonkaS Alter,
was ist mit der Zeit los?
Haben wir uns auch schon im Stream angeguckt.
Also eine Sache,
die mir persönlich an Unraid überhaupt nicht gefällt
und das liegt nicht am eigentlichen Produkt,
sondern am Hersteller,
dass die manchmal enorm lange brauchen,
um,
wie soll man sagen,
grobe Schnitzer,
die auftauchen,
auszubügeln.
Zum Beispiel gab es vor ein paar Versionen das Problem,
dass wenn man Container hat laufen lassen über Unraid,
dass die sich irgendwie,
ich weiß nicht,
wie ich euch das besser beschreiben soll,
dass die irgendwie nicht mehr erkannt haben,
dass es Updates in dem Upstream,
Docker-File,
nicht Docker-File,
dass es in dem Upstream-Docker-Repo neue Versionen gab
und da stand dann irgendwie immer so ein Disconnected-Link,
stand da drin.
Und da haben die,
glaube ich,
echt drei oder vier Monate für gebraucht,
um das zu fixen.
Und da denke ich mir halt,
hey,
ich kann meine Container nicht mehr updaten.
Neue Container machen teilweise Probleme beim Starten.
Das ist eines von drei Hauptfunktionalitäten von dem Ding.
Das kann nicht sein,
dass das drei bis vier Monate braucht,
bis das gefixt ist.
Also das ist eine Sache,
die mir auf den Keks geht.
Und das Webinterface wirkt auch ein bisschen alt.
Aber ansonsten ist Unraid insgesamt echt okay.
Wie wechselst du eigentlich zwischen Windows und Linux hin und her?
Sind das zwei verschiedene Rechner?
Ne.
Das ist ein Rechner.
Also,
Host ist Windows
mit verschiedenen Desktops.
Wie man hier sieht,
verschiedene,
verschiedene Desktops.
Und hier,
ich zeige es dir,
wenn ich aus dem Fullscreen rausgehe,
sieht man es besser.
Und hier läuft einfach eine VM im Fullscreen.
Benutzt du auch macOS?
Ne,
ich habe kein Mac.
Ich hatte mal eine Zeit lang
einen selbstinstallierten Mac auf so einer alten,
ähm,
nicht wirklich thin client,
so einem,
so einem NUC-Verschnitt.
Mit Nvidia Karte
hatte ich mal,
hatte ich mal so ein selbst,
selbstinstalliertes macOS laufen.
Aber ich habe da nie
den großartigen,
wie soll ich sagen,
so den großartigen Spaß daran gefunden.
Und
auch
nicht den,
für mich persönlich,
nicht den großen Anwendungszweck.
Ist Proxmox und Unraid vergleichbar
oder ist Unraid was anderes?
Es ist schon in gewisser Weise vergleichbar.
Wobei,
man sagen muss,
die,
der
Hauptfokus liegt woanders.
Bei Proxmox ist es eindeutig Virtualisierung
und bei Unraid ist es dreigeteilt.
Virtualisierung,
Docker-Container
und
RAID-Netzwerk-Shares.
Es hat natürlich ein paar Überschneidungen.
Beides sind unter der Haube
Linux-Distribution mit Web-Interface,
um das Ganze zu verwalten.
Proxmox ist ein,
ich glaube Debian.
Und Unraid ist glaube ich,
soweit ich weiß,
ein Slackware.
Unraid ist tatsächlich die einzige,
das einzige Produkt,
was ich kenne,
was mir so spontan einfällt,
auch was Slackware unten drunter verwendet.
Keine Ahnung,
was,
warum,
wie die da drauf gekommen sind,
warum es ausgerechnet Slackware sein muss.
Debian wäre wahrscheinlich angenehmer gewesen.
Ja,
ansonsten haben beide ein Web-Interface,
um Container zu verwalten
und beide ein Web-Interface,
um VMs zu verwalten.
Wobei man halt sagen muss,
wenn es um Virtualisierung geht,
ist Proxmox halt viel, viel angenehmer als Unraid.
Dafür kannst du mit Unraid
deine ganzen Disks einrichten
und
deine Netzwerk-Shares einrichten,
Docker-Container über das Web-Interface verwalten
und nebenbei auch VMs.
Proxmox ist ja im Endeffekt
rein für VMs.
Ja,
du kannst in Proxmox,
ich weiß,
kannst auch Container anlegen,
sind aber keine Docker-Container.
Das heißt,
im Endeffekt
wirst du wahrscheinlich eine VM erstellen
und darin dann irgendwie auch wieder
Docker-Compose oder sonst was machen.
Oder manch einer auch gleich in lokalen Kubernetes.
Also,
wenn dein Hauptaugenmerk Virtualisierung ist,
dann ist eindeutig Proxmox das Bessere.
Wenn du so ein Universal-Ding haben willst,
dann ist Unraid,
glaube ich,
eher das.
Es gibt ja noch verschiedene Alternativen,
die man sich angucken kann.
Es gibt Open Media Vault zum Beispiel noch
oder es gibt ja auch diesen Synology NAS.
Ich will es nicht Fork nennen,
weil das ist es nicht.
Dieses inoffizielle Synology NAS zum Selbstinstallieren.
Dann gibt es noch FreeNAS,
TrueNAS und solche Geschichten.
Hat alles ein bisschen unterschiedliche Schwerpunkte,
unterschiedliche Stärken und Schwächen.
So die ultimative Lösung habe ich noch nicht gefunden.
Für mich ist Unraid ganz gut.
Ja,
weil es hat alles,
was ich brauche.
Ich kann easy über das Webinterface
ein paar Netzwerkshares anlegen.
Ich kann direkt darüber meine Platte
mit Lux verschlüsseln,
direkt beim Starten.
Kann meine Container drauflaufen lassen
und ein paar VMs und das war's.
Das Webinterface von Unraid wirkt halt schon
ein bisschen oldschool,
aber schon,
also es wirkt nicht,
als wäre es wirklich aus 1995,
aber die Optik ist ein bisschen 1995.
Oder sagen wir mal so 2005,
nicht 1995.
Aber insgesamt finde ich es ganz gut.
Von allen Sachen,
die ich bisher angeguckt habe,
auch wenn ich es früher immer so ein bisschen belächelt habe,
ist Unraid echt noch mit so das Unproblematischste
und vom Gesamtpaket her das Beste
für meinen Anwendungszweck.
Je nachdem, was ihr machen wollt,
kann das bei euch anders aussehen.
Kannst du ein Projekt empfehlen,
um Lebenslauf aufzubessern?
Ich will in den DevOps-Bereich wechseln,
habe aber keine nennenswerte Erfahrung in dem Bereich.
DevOps ist jetzt auch relativ groß,
ja.
Also,
willst du jetzt eher was Richtung Continuous Integration,
Delivery machen?
Willst du jetzt eher was Richtung
Cloud-Infrastruktur,
Automatisierung machen?
Was ist denn so das,
was du machen willst?
So pauschal ist es sehr schwer zu sagen,
ja.
ESX ist nice.
Ich habe aber bis heute noch nicht genau
die Lizenzbedingungen von ESXI gecheckt.
Die Basic-Version ist ja glaube ich kostenlos.
Ich weiß aber nicht,
ab wann man was bezahlen muss.
So viele habe ich nicht,
aber 10 oder so müssten es auch sein.
Eher Automatisierung.
Dann ist für die Skill-Liste,
übrigens, ich habe es so gemacht,
ich habe in meinem Lebenslauf
gar nicht reingeschrieben,
was ich kann,
sondern ich habe eine Extra-Liste mit Skills gemacht.
Die haben wir irgendwo auch hier.
Das ist nicht original,
die Liste,
muss ich gleich dazu sagen.
Das ist nicht original,
die Liste,
die ich bei meiner Bewerbung mitgeschickt habe,
aber zu 98% ist es das.
Ich habe,
ich habe sowas hier mitgeschickt.
Was ist das?
Was zum Teufel will Edge von mir?
Ja, also ich habe,
ich habe das hier beispielsweise mitgeschickt.
Und da habe ich best of,
ich habe das am Ende noch,
wie gesagt,
nur 98% ist das gleich.
Ich habe noch ein bisschen was gedreht,
bevor ich es wirklich in die Bewerbung gepostet habe,
aber das habe ich gerade nicht hier.
So,
und wenn du hier im DevOps-Bereich guckst,
da habe ich halt einfach mal so
best of
alles reingeschrieben,
womit ich aber auch schon was gemacht habe.
Also ich habe dort wirklich nur Sachen reingeschrieben,
wo ich auch was mitgemacht habe
und wo man mich auch was mitmachen lassen könnte.
Ja,
also wenn du was Richtung Automatisierung machen willst,
haben wir es hier.
Also wenn du was Richtung Automatisierung machen willst,
also genau,
was ich sagen wollte,
ist vielleicht je nachdem,
wie viele Sachen du kannst,
ist vielleicht auch für dich sinnvoll,
eine extra Liste mitzuschicken,
was du kannst
und nicht so sehr
im Lebenslauf das reinzupappen,
was natürlich immer sinnvoll ist
und das habe ich bei mir auch gemacht.
Ich habe bei mir auch im Lebenslauf geschrieben,
was ich bei den einzelnen Arbeitgebern
so für Schwerpunkte hatte.
So,
also wenn du was machen willst mit Automatisierung,
dann kannst du dich mit Terraform beschäftigen.
Das ist immer sinnvoll
mit Terraform und Cloud-Infrastruktur
oder auch mit Ansible und Linux-Servern,
wobei ich ehrlich gesagt sagen würde,
HIPPA ist auf jeden Fall Cloud-Infrastruktur mit Terraform,
aber spätestens wenn es mal ein paar Linux-VM-Server gibt,
und die wird es immer geben,
und die ein bisschen komplizierter sind,
dann ist es auch nicht verkehrt Ansible zu kennen.
Also ich würde mir tatsächlich irgendwas überlegen,
was ich an Cloud-Infrastruktur aufbauen könnte mit Terraform
und dann musst du dir halt irgendwas Kleines überlegen,
was da drauf laufen lässt,
um also diesen kompletten,
diesen kompletten,
wie soll man es nennen,
das komplette Szenario durchzuspielen.
Ja, also du kannst zum Beispiel
irgendwie eine Mini-Beispiel anschauen,
irgendwie eine Mini-Beispiel-Anwendung programmieren.
Das ist ja auch,
wenn du im Bereich DevOps willst,
würde ich sagen fast schon Pflicht,
dass du mal zumindest eine Programmiersprache
halbwegs auf die Reihe kriegst.
Und du kannst eine kleine Beispiel-Anwendung programmieren,
das muss wirklich nichts Wildes sein,
was im Stile von Hello World,
ja, es muss wirklich nichts Großartiges sein,
irgendeine Web-Anwendung kannst du bauen.
Dann setzt du mit Terraform die Cloud-Infrastruktur auf,
um die Anwendung laufen zu lassen.
Das kann im Endeffekt auch zwei VMs sein.
Ja, du baust zwei VMs auf,
lässt bei Terraform noch einen Cloud-Cloud-Balancer provisionieren
und dann richtest du noch ein,
ja, kannst GitHub-Repo nehmen,
richtest dir noch ein GitHub-Repo ein
und machst dann dort per GitHub Actions
quasi automatisches Build und Deploy von dieser Anwendung,
oder automatisches Build kannst du zumindest machen
von der Anwendung
und dann händisches Deployment auf die Server
und so, dass das Ganze halt nicht kaputt geht.
Also, du baust quasi mal
eine hochverfügbare Umgebung in der Cloud auf
mit Terraform und Linux
mit einer kleinen Beispiel-Anwendung.
Dann hast du alles abgedeckt,
so grundumschlagmäßig,
wo man ein bisschen was reinschreiben kann.
Du kannst reinschreiben,
du kennst dich mit GitHub Actions,
Continuous Integration Delivery aus,
kannst reinschreiben,
du kennst dich mit Terraform aus,
du kennst dich mit Linux aus,
ich meine, auskennen ist jetzt immer noch in Anführungszeichen zu sehen,
nur weil du was Kleines aufgebaut hast,
würde ich jetzt, ne, also,
würde ich mich nicht gar so sehr aus dem Fenster lehnen
und bei überall irgendwie
Expertenlevel dranschreiben oder sowas.
Aber da hast du schon mal rundumschlag was gemacht,
was auf jeden Fall in den DevOps-Bereich passt.
GitHub Actions, Continuous Integration Delivery
ist immer ein Thema,
das kannst du immer reinschreiben,
da gucken die drauf.
Terraform auf jeden Fall auch,
es muss auch nicht Terraform sein,
es kann auch OpenTOFU sein.
Stell dir mal vor,
wir würden jetzt ein Vorstellungsgespräch führen
und ich würde dich fragen,
was ist der Unterschied zwischen Terraform und OpenTOFU?
Dann würde ich erwarten,
als angehender DevOps-Engineer,
dass du mir das sagen kannst.
Beziehungsweise, warum gibt es das eine überhaupt?
Wie bist du eigentlich beruflich in Cloud-Technologien gekommen?
Schrittweise.
Ich habe keine Weiterbildung oder Zertifikate gemacht.
Ich habe mir das einfach angeguckt
und damit gearbeitet
und rumgebastelt.
Also, es interessiert mich privat,
es interessiert mich hier auch für den Stream.
Ich habe auf der Arbeit,
war ich von Anfang an dabei,
wenn es um Cloud-Geschichten geht.
Also, ja, schrittweise halt.
Es ist immer ein bisschen schwierig,
wenn es was schon gibt.
Also, stellt euch mal vor,
ihr seid jetzt fertig mit der Ausbildung,
ihr habt bisher nur Windows-Administration gemacht
und dann sagt einer zu euch,
morgen fängst du an,
unsere Infrastruktur in die Cloud umzuziehen.
Dann wirst du dann erst mal sagen so,
äh, what?
Was wollt ihr?
Und dann fangen die Leute an,
in Webinterface-VMs zusammenzuklicken und sowas.
Ja.
Man braucht, ich würde,
ich würde es anders formulieren,
ja, man braucht ein Handicap.
Ich würde sagen,
man muss sich dafür interessieren.
Sonst ist das,
sonst ist das eher Quälerei,
weil vieles in der Cloud ist auch echt nervig.
Ja.
Wenn du dir Unterschiede zwischen Cloud-Anbietern anguckst,
wenn du dir beispielsweise anguckst,
wie super redundant,
oder so repartiv da so Terraform-Sachen teilweise aufgebaut sind,
wie unlogisch manche Sachen sind bei Cloud-Anbietern,
wie schlecht manchmal auch Sachen beschrieben sind.
Ich habe euch ja das Problem erzählt von Google-SSDs,
die eigentlich gar keine SSDs sind.
Ne?
Das habe ich euch,
habe ich euch erzählt.
Also bei Google,
wenn ihr bei Google sagt,
ähm,
Google Cloud SSD,
ich weiß,
ich schweife jetzt entweder,
ich schweife jetzt etwas,
etwas ab,
aber,
ich schweife etwas ab.
Dü-dü-dü-dü.
Ja,
aber wenn ihr,
wenn ihr bei Google so guckt,
nach SSDs,
bei Google,
da werdet ihr vielleicht feststellen,
dass ihr gerade geflashbanked wurdet von der Google-Seite.
Alter.
Please.
Darkreader.
Ja.
Da haben die,
da haben die hier sowas,
Laufwerkspreise,
ja.
Es,
Alter,
die Google-Dokumentation,
es ist so schrecklich,
Mann.
Du findest nichts.
Also,
ich kann es,
ich kann es euch aus dem Kopf sagen,
ihr Storage-Options.
Das ist das eigentliche,
was ich gesucht habe,
ihr Storage-Options.
Genau.
Also,
Google hat folgende Sachen.
Es gibt,
kann man das,
kann man das Ganze vielleicht auf Englisch stellen,
please?
So.
Google hat verschiedene Storage-Optionen,
wenn ihr beispielsweise VMs oder,
oder Kubernetes-Cluster oder Zeug in der,
in der Google Cloud aufbaut.
Die haben Balanced Persistent Disk,
die haben SSD Persistent Disk,
dann blablabla.
Also,
die haben ganz viel,
die haben ganz viel verschiedene Sachen.
Und jetzt habe ich noch eine Frage an euch,
Chat.
Was meint ihr,
wie viele von diesen Sachen hier,
sehen nicht nur nach SSDs aus,
sondern sind wirklich auch SSDs?
So wie man es sich vorstellt.
Okay,
die Frage ist,
die,
die,
die Frage ist falsch gestellt.
Es sind,
es sind fast alle SSDs.
Aber,
also,
worauf ich,
worauf ich raus will,
ist,
also das hier,
das schreiben sie auch,
das sind,
das sind Oldschool-Festplatten.
Ja,
ich muss das anders erklären.
Das,
das sind Oldschool-Festplatten,
ist egal.
Also,
man würde ja erwarten,
dass SSD,
also SSD Persistent Disk,
nehmen wir das jetzt mal als Beispiel.
Da steht ja auch,
dass das,
wobei ich bin mir gar nicht sicher,
ob da wirklich dabei steht,
dass es auch SSDs sind.
So.
Zumindest,
wenn du bei Google eine VM anlegst
und hängst dir eine SSD Persistent Disk dran,
dann hast du unter Linux,
so was wie,
hier,
Dev,
SDA,
sonst was,
du bekommst ein richtiges Device,
was auch aussieht wie SSDs.
Unter der Haube werden es auch SSDs sein,
aber es sind keine,
wie soll man sagen,
keine SSDs,
wie man sich das vorstellt,
sondern es ist Netzwerk-Storage,
obwohl es als Block-Device
bei dir in Linux drinnen hängt.
Also nur,
weil ihr in der VM bei euch,
in der Google ist übrigens bei Azure genauso
und bei AWS zum größten Teil auch so.
Wenn ihr beispielsweise eine Google-VM habt
und dort Dev,
SDA,
SDB,
auch wenn es nach SSD aussieht,
das ist Netzwerkspeicher.
Das ist Netzwerkspeicher mit den Vor- und Nachteilen,
die Netzwerkspeicher so hat.
Also wenn ihr jetzt erwartet,
ihr habt dort eine VM mit einer SSD dran in der Cloud,
die sich so verhält,
wie bei euch lokal eine Kiste mit SSD drinnen.
Das ist nicht so.
Das verhält sich auch ganz anders,
hat Vor- und Nachteile.
Ja,
du kannst easy Snapshots machen
und sowas zum Beispiel,
das easy Klonen von einem,
von einer Zone in die anderen.
Das kannst du ja mit einer SSD bei dir lokal
jetzt in der Kiste nicht.
Aber es sind keine echten SSDs,
die an deiner Kiste
beziehungsweise an deine VM gemappt sind.
Das ist Netzwerk-Storage.
Und das merkst du bei einer Sache ganz extrem,
wenn du niedrige Latency brauchst.
Hier,
ich zeig's euch mal.
IOPing ist installiert.
IOPing,
IOPing,
ähm,
IOPing,
ja,
minus D,
minus W.
Guckt mal hier.
Ich hab in meiner VM,
und das ist eine VM bei mir lokal,
ja,
ich hab in meiner VM
ungefähr 100,
ja,
schwankt so ein bisschen,
130,
200,
irgendwie,
Mikrosekunden Latency
bei so einer Schreiboperation.
Das ist,
das ist für lokale NVMe-SSDs
tatsächlich sogar noch ein bisschen lahm.
Das liegt jetzt aber an der VM.
Wenn ich das auf Bare Metal machen würde,
hätte ich so 80 Mikrosekunden oder sowas.
So,
und bei Google habt ihr,
jetzt haltet euch fest,
man würde jetzt erwarten,
wenn ihr Latency-Tests macht bei Google
auf so einer SSD,
Persistent Disk,
dann habt ihr auch so in dem Dreh 100,
150 Mikrosekunden Verzögerung.
Aber nein,
ihr habt 7,
8 Millisekunden IO-Latency.
Was halt um ein viel,
viel,
vielfaches mehr ist als
180 oder 80 bis 150 Mikrosekunden.
Es ist deutlich mehr.
So,
und dementsprechend
muss man das wissen,
dass das Netzwerk-Storage ist.
Auch wenn da steht
Fast and Reliable Block Storage.
Nein, es ist,
es ist Block Storage im System,
aber es ist Netzwerk-Storage.
Und
das ist was,
was mich bei Cloud-Anbietern
oftmals echt abfuckt,
dass du solche Sachen nirgendswo direkt siehst
oder zumindest nur,
wenn du sehr tief,
tief gräbst es findest
und meistens nur durch
selbst ausprobieren dahinter kommst.
Das Einzige,
was hier drinnen wirklich SSDs sind,
ist das hier
in dieser ganzen Liste.
Das sind echte SSDs
durchgereicht an deine VM.
Leider mit,
ähm,
bisschen mit,
mit nicht sonderlich hohem Storage,
Storage-Limit.
Man kriegt nämlich maximal,
ich glaube,
12 mal,
nee,
24 mal,
ja,
24 mal 375 Gig,
als einzelne,
als einzelne Partition quasi,
reingehängt,
wie man dann selbst,
das ist,
es ist auch eklig.
Das sind so Dinger,
die sind in der Cloud unglaublich teuer.
Also generell Storage,
wenn ihr große Storage-Blocks in,
also viel Storage
und zwar richtig schnelles Storage.
Ich rede nicht von reinen IOPS,
sondern wirklich auch von Latency braucht.
Wenn ihr Low-Latency-Storage in der VM braucht,
also wenn ihr,
ich muss sagen,
wenn ihr viel Low-Latency-Storage in der Cloud braucht,
seid ihr eigentlich verloren.
Es gibt keinen Cloud-Anbieter,
den ihr dafür gescheit verwenden könnt.
Was ihr machen könnt,
ihr könnt euch bei Hetzner zum Beispiel
einen Server konfigurieren.
Bei Hetzner in der Cloud,
also bei Hetzner Cloud bin ich mir da nicht sicher.
Ich vermute die Storage-Box
oder diese Storage-Sachen,
die man an die VMs dranhängen kann,
sind auch Netzwerk-Storage.
Vermute ich,
weiß ich aber nicht.
Was bei Hetzner auf jeden Fall echte SSDs sind,
ist, wenn du dir einen Server kaufst
und machst da NVMe-Storage rein,
dann kriegst du ja Zugriff auf die Kiste.
Da kannst du dir für 300-400 Euro im Monat
was richtig Fettes kaufen,
was um ein Vielfaches billiger ist,
als sowas in der Cloud.
Also wenn du in der Cloud was haben willst,
hier mit 12 TB Storage,
das kann gut und gern mal 3000-5000 Euro im Monat kosten.
Ja, aber S3-Storage ist auch nicht Low-Latency.
Also wenn du wirklich Low-Latency-Block-Storage brauchst,
ist das pepega.
Gerade mal beim Archiv getestet,
das hat 14 Millisekunden Write-Latency.
Ja, weil das Netzwerk-Storage ist.
Es sieht aus wie SSD,
es ist auch SSD,
aber SSD über Netzwerk.
Ne, nicht die Bandbreite,
die Latenz ist tatsächlich das Problem.
Also wenn du wirklich Low-Latency-Storage brauchst,
was man nicht bei jedem Anwendungsfall braucht,
aber wenn du Low-Latency-Storage brauchst,
bist du in der Cloud verloren.
Und das sind halt so Dinge,
und das nervt mich bei vielen Cloud-Anbietern auch,
dass solche Infos ganz tief in irgendeiner Tafel,
ganz tief in irgendeiner Dokumentation drinstecken,
wenn sie überhaupt irgendwo stehen,
und du nur durch tagelanges Ausprobieren dahinter kommst.
Und das Ausprobieren,
das kostet dich halt dann allein schon beim Ausprobieren
irgendwie 30.000, 40.000 Euro für den Monat,
weil du ausprobiert hast.
Nun ja, so weit, so gut.
Dann mal zum eigentlichen Thema zurück.
Wie gesagt, es geht ja auch nicht unbedingt
rein um IOPS und Bandbreite,
es geht um IO-Latency.
Also du hast ja im Prinzip drei verschiedene Sachen,
die hängen alle zwar ein bisschen miteinander zusammen,
aber jetzt nicht unbedingt eins zu eins.
Also wenn du, das ist ja eher was,
was dich interessiert sequenziell,
das ist eher, wenn du viel parallel machen kannst,
sind IOPS wichtig, wichtig und richtig.
Und wenn du aber einzelne Steps hast zum Beispiel,
die viel IO machen,
aber die nicht so viel parallelisieren können,
dann ist,
dann ist die Latency auch nicht verkehrt.
Also richtig fette IOPS lohnen sich halt nur,
wenn du irgendeine Anwendung hast,
die, sagen wir mal,
64 Lese-Write-Thread hat
und ganz viel parallel machen kann.
Da kriegst du unglaublich,
da kriegst du die abgedrehtsten IOPS-Zahlen raus.
Aber wenn du was hast,
was Storage-mäßig, sag mal,
sequenziell ist,
aber halt in kleinen Happen jetzt nicht,
dass du sagen kannst,
sequenziell,
nee, sequenziell ist falsch,
was quasi sequenziell in Programmier-,
also in Programmierlogik
mehr oder weniger Random-Reads
oder sowas macht,
das ist echt
Kacke auf Cloud-Platten.
Ich weiß nicht,
konkretes Beispiel,
wenn du, wenn du,
also bei manchen Blockchain,
bei manchen Blockchain-Technologien ist das so,
dass die verschiedene Steps haben
zumindest bei Polygon ist das so,
einer der Steps ist
rein sequenziell,
null Multithreaded,
aber sehr Latency-intensiv,
also sehr, sehr Latency-kritisch,
was die Platte angeht.
Weil die halt alles sequenziell machen
in ihrem Code an der Stelle,
aber die, die Reads
halt quasi Random-Seqs
durch die, durch die
12 TB Blockchain-History sind.
Und dementsprechend
bist du da
eher der limitierende Faktor.
Max, was würdest du
einem angehenden Fachinformatiker
Systemintegration sagen,
was er vor der Ausbildung wissen sollte?
Ja, die IHK
ist Scheiße.
Die IHK ist Kacke.
Berufsschule
ist easy as fuck.
Und
die Abschluss-,
die Zwischenprüfung
zählt mittlerweile in die Abschlussprüf-,
in die Abschlussnote irgendwie mit rein,
hab ich gehört.
Und wenn du fertig bist,
mach Abschlussprüfung als Übung.
Und verlass dich nicht drauf,
nur weil du Ahnung hast,
dass du die Abschlussprüfung gut hinkriegst.
Aber ansonsten,
komm auf die Firma an.
Komm auf den Betrieb an,
wo du gelandet bist.
Ja, das sind auch so Dinger.
Also es lohnt sich,
preislich in,
sagen wir mal,
in der Hälfte der Fälle nicht
rein, deswegen
für Kosten in die Cloud zu gehen.
Es gibt sicherlich auch viele Sachen,
wo es sich lohnt.
Also ein Punkt, wo es sich enorm lohnt,
in die Cloud zu gehen ist,
wenn du kurzzeitige
Burst-Workloads hast.
Versuch ich das mal so zu umschreiben.
Mr. Amec, danke für den Sub.
Also wenn du zum Beispiel mal ganz kurzfristig
super viel Leistung brauchst,
und dann wieder nicht,
dann lohnt sich Cloud eigentlich fast immer.
Oh,
Baumhausstock hat auch resubscribed.
Gar nicht gesehen, danke für den Sub.
Und der Stubenhocker gestern schon.
Also wenn du
so Burst-Workload hast,
dann lohnt sich eigentlich Cloud fast immer.
Zum Beispiel,
machen wir jetzt mal was ohne hier großartige Microservices
und Skalierungen, hast nicht gesehen.
Ganz einfaches Beispiel, was sich glaube ich jeder,
was sich jeder
vorstellen kann, an
Problemstellung.
Ich wollte mal OpenStreetView
Sachen, also hier.
Ich wollte mal OpenStreetView
Maps
preprocessen, dass man damit
Routenplanung machen kann.
Das Ding ist, OpenStreetView,
die Daten sind relativ groß und die brauchen zwei Sachen.
Die brauchen enorm viele CPUs
und die brauchen fett RAM.
Das heißt das Ding,
gehst du
in die Cloud, mietest dir dort
für 2-3 Stunden,
eine
128 GB RAM Kiste
oder eine 256 GB
RAM Kiste
und 64 CPU Cores
und 2 TB SSD
und du hast noch gar nichts verpasst.
Wir haben noch gar nichts gemacht.
Ich schwätze die ganze Zeit nur.
Wir haben weder
Code gemacht, noch Docker
bisher.
Und
oder stellst dir lokal eine Kiste hin,
die das braucht.
Und das Schöne ist halt,
dass du in der Cloud in der Regel
minutengenau oder zumindest stündlich
genaue Abrechnung hast und dann bezahlst du am Ende
halt, wenn du 2-3 Stunden zum
preprocessen einmal im Monat
der OpenStreetView Maps brauchst,
dann, oder einmal die Woche nur,
dann, oh ich habe irgendwas
im Auge, fuck, ah shit.
Warte mal.
Okay, dann bezahlst
du halt für die Kiste, die kostet zwar im Monat
400 Euro, aber du brauchst sie
bloß ein paar Stunden. Das ist nice.
Aber du brauchst sie nur ein paar Stunden.
Dementsprechend fährst du
da mit der Cloud eindeutig besser, als du
stellst dir so eine Kiste hin.
OpenStreetView wird laufend geupdatet.
Also das ist zum Beispiel
ein gutes Beispiel für
wo es billiger ist in der Cloud.
Kann die Lautstärke
mal ein bisschen weniger
bisschen weniger
schwankend sein.
Genau, Vorwissen brauchst du
nicht. Nee, wichtig ist, dass
sich das interessiert.
So, falls ich irgendwas übersehen habe, dann
sagt
Bescheid.
Hoffentlich. So, dann
legen wir mal los.
Wir fangen an mit
Advent of Code und danach gucken wir uns
Doge an, weil ich glaube
Doge wird nicht allzu lange gehen. Da brauchen wir wahrscheinlich
so eine halbe Stunde, 40 Minuten, da haben wir uns das
angeschaut. Das sieht jetzt nicht so
kompliziert aus, beziehungsweise nicht so viel
was man damit machen kann. Also,
wir fangen mit Advent of Code an und zwar
Aufgehört haben wir...
Achso, wer sich meine
Ergüsse angucken möchte dazu
Max van Kreisel
Crying, weiß ich noch nicht.
Also, Offstream auf jeden Fall die ganze Zeit,
aber wer sich meine Ergüsse angucken
will, kann die sich hier angucken. Allerdings
man muss dazu sagen, ich bin massive
hinten dran. Ich bin erst bei Tag 2
und jetzt heute kommt Tag 3.
Und Tag 3, auch nur
den ersten Part, weil
ich mir da schon ein bisschen Gedanken drum machen konnte und
der erste Part schon abfuck aussieht und der zweite Part
meistens komplizierter ist. Alles klar.
Also, Advent of Code, was wollen
die heute von uns? Und zwar
es ist wieder ganz viel Text.
Ist das eigentlich dein Youtube
Kanal mit den Stream Uploads? Nein, das ist nicht
mein Youtube Kanal. An's Trinken
erinnern, Pog habe ich gerade gemacht.
Ist nicht mein Youtube Kanal.
So, es gibt wieder ganz
viel
Storytelling drumherum, dass
man irgendwie Gondeln fährt mit irgendeinem Elf
und sonst was. Die eigentliche
Aufgabe kommt hier unten. Also, ich versuche
euch das Ganze mal kurz zu erklären,
so wie ich das verstanden habe.
Es ist wie die
letzten zwei Tage Advent of Code. Vielleicht
ganz kurz am Anfang nochmal, Advent of Code
gibt es einmal im Jahr, das sind
25 Tage, an jedem
Tag gibt es zwei
kleine Programmieraufgaben,
die immer
ein bisschen knifflig sind, aber
meistens nie
so weit gehen, dass es
jetzt irgendwie einen halben Tag braucht zu lösen oder so.
Meistens ist man da in
ja gut, die krassen Competitive
Programming Pros sind da in eineinhalb Minuten
mit fertig, aber meistens bist du in
einer Stunde damit durch
pro Aufgabe.
Und wenn du zwei Stunden brauchst, brauchst
du zwei Stunden insgesamt, aber
meistens bist du sogar ein bisschen schneller,
je nachdem was. Ich würde sogar sagen,
meistens ist man in einer Stunde
fertig. Beides zusammen.
Ungefähr über den Daumen
gepeilt, würde ich sagen. So 35
bis 45 Minuten pro
Part.
Okay, also
und ja, das
gibt es jedes Jahr
und die Aufgaben folgen immer einem
ähnlichen Schema. Man bekommt
einen Input, der zur jeweiligen
Aufgabe passt. Das ist der Input
von heute und dann
gibt es einen Text dazu, der erklärt, was man mit
dem Input machen soll.
Und am Ende, wenn man das
richtig verarbeitet hat,
kriegt man eine Lösungszahl. Die trägt man
hier ein und drückt auf Submit.
Und wenn es stimmt, dann wird die
zweite Aufgabe für den Tag freigeschaltet.
Wenn das stimmt, wird der nächste Tag
freigeschaltet. So funktioniert das.
Und die Aufgabe
an Tag 3, also Tag 3 war
vor einer Woche.
Wie gesagt, ich bin etwas hinten dran.
Tag 3
war es vor ziemlich genau einer Woche.
Tag 3 kriegt man so einen Input
hier. Also so einen langen Input.
Hier ist ein kleines Beispiel. Und zwar
muss man mit diesem Input
folgendes machen. Man muss
sich aus dem Input angucken,
welche Zahlen da drin sind.
Und dann muss man schauen,
angrenzend
an welche Zahl, also ich gebe das jetzt mal so, wie ich
das verstanden habe, mal aus meiner
Sicht wieder.
Wenn angrenzend zu dieser
Zahl ein Symbol sich
befindet,
dann zählt diese Zahl.
Und am Ende muss
man alle Zahlen, glaube ich, zusammenrechnen.
Genau. Also zum Beispiel
467
zählt, weil angrenzend zu 467
ist
ein Symbol. Symbol ist alles,
was kein Punkt ist. Also
alles, was keine Zahl ist und kein Punkt
ist. Also Sternchen, Raute,
Dollar sind Symbole.
Also wenn angrenzend zu einer
Zahl und diagonal zählt auch, also wirklich
angrenzend zählt
steht da nicht. Doch.
What is the sum of all of the part numbers?
Steht da.
Ja.
Gag weight.
Punkt zählt nicht. Ja.
Habe ich doch gesagt. Punkt zählt nicht.
Es zählt nur Sternchen,
Dollar und Raute. Wenn Punkt zählen
würde, wäre das Ganze ja witzlos. Punkt
zählt nicht. Habe ich gesagt Punkt zählt nicht.
Jetzt plötzlich. Punkt zählt nicht.
Es zählt aber auch diagonal.
Heißt im Endeffekt,
ich muss gucken,
was um so eine Zahl
drumherum steht. Und wenn
da,
wenn da um die Zahl drumherum irgendwo
ein Sternchen, eine Raute oder
ein Dollarzeichen
steht, dann muss ich mir die Zahl merken
und am Ende muss ich alle Zahlen
zusammenrechnen, die halt
angrenzend zu ihnen ein Symbol
haben. Wir skalieren richtig
krass diagonal. Horizontal,
vertikal, diagonal,
orthogonal.
3D, 4D, wir
skalieren in alle Richtungen, in alle Dimensionen
wird skaliert.
Um Synergieeffekte zu nutzen.
Um die low hanging
fruits zu ernten.
Also das ist die Aufgabe. Hat man es
verstanden? Ich glaube,
man konnte der ganzen Sache folgen.
Ich habe mir das vorher schon mal angeguckt.
Weil ich habe das das letzte Mal gelesen und habe
mir gedacht, Alter, was wollt ihr überhaupt von
mir? Aber ich glaube,
dass das tatsächlich
komplizierter aussieht, als es ist.
Weil, soweit meine
Überlegung. Ich bin mir nicht sicher, ob das
funktioniert. Soweit meine
Überlegung. Wir müssen
uns, also wir gehen
das Zeile für Zeile durch
und suchen uns die Zahlen raus.
Da können wir wieder irgendeinen Regex verwenden.
Wir suchen uns die Zahlen raus.
So. Wir merken uns
die Zeile,
in der
die Zahl steht,
und
die Position,
wo die Zahl anfängt.
Also wir bauen quasi so eine Tabelle
da draus.
Man könnte das hier auch als Tabelle sehen.
Also das hier ist Zeile
1 und das hier ist
Zeile 0 und Spalte 0.
Wisst ihr, man könnte das hier auch so
als Tabelle sehen, weil es sind ja
quasi alle Zeilen
gleich lang.
Und im Endeffekt habe
ich mir gedacht, wir suchen uns, also wir
sehen das mal als Tabelle
und
wir suchen uns alle Zahlen raus.
Dann merken
wir uns die
Zeile,
wo das ist
und
den Index, wo das startet in der
Zeile und die Zahl.
Die merken wir uns auch, weil am Ende brauchen wir ja hier
müssen wir die Sachen da zusammenzählen.
Also Zahl und Startposition.
Also Startposition könnte
zum Beispiel sein,
äh
zweite Zeile,
zweite Zeile, weil das ist
nullte Zeile, logischerweise.
Also wir merken uns, zweite Zeile
0,
1, 2,
zweiter Index geht's los.
Das merken wir uns und dann
holen wir uns einfach
alles Umliegende an Text raus.
Also wir wissen zum Beispiel,
das hier ist Zeile 2,
Index 2
und dann können wir
im Endeffekt sagen, wir wollen uns alle
Text rausholen von
ähm ja, Zeile 2
Index 1
bis Index
also
Index 1, 2, 3,
4
und das Ganze dann noch die Zeile oben drüber.
Also wir ziehen quasi von der aktuellen Zeile
1 ab, holen uns
und ziehen von dem Startindex 1 ab.
Dann kriegen wir quasi den
Startpunkt und äh wir
rechnen von dem Index
plus Länge 1 drauf
und auf die Zeilen 1 drauf und dann kriegen wir den Endpunkt.
So, das heißt im Endeffekt
diese, ja ich kannte es ja,
dieses Dreieck kriegen wir dann an Text.
So und ich glaube,
dass es echt nicht so
kompliziert ist, wie es aussieht. Und wenn wir
den Text uns rausgeholt haben,
angrenzen, den gesamten angrenzenden Text
zu den Zahlen, dann suchen, dann gucken wir
einfach, ob ein Symbol
da drin ist. Vollkommen, es ist vollkommen
egal, wo das Symbol steht.
Wenn angrenzend an die Zahl
irgendwo ein Symbol drin ist,
dann interessiert uns die Zahl und wir
rechnen die auf unseren, äh
ja unsere Gesamtsumme drauf.
Wie weit sollte man als FISI
programmieren können? Das kommt immer ein bisschen drauf an,
was du machen sollst.
Meine persönliche Meinung ist,
man sollte auch
als FISI eine
Programmiersprache halbwegs flüssig
beherrschen und
sei es nur Bash oder PowerShell.
...
Aber man sollte auch als FISI programmieren können.
Jetzt vielleicht nicht
so in der Tiefe, beispielsweise
dass du dich super auskennst mit
Java, Enterprise, Gedöns
oder sonst was. Aber du solltest
zumindest Programme lesen
können, verstehen können
und du solltest auch
zu Automatisierungszwecken selbst
was skripten können. Und dazu ist es einfach
hilfreich, wenn man eine ordentliche Programmiersprache
gut kann.
Egal was das ist, das kann JavaScript sein,
das kann Python sein, das kann C Sharp sein,
das kann meinetwegen Java, Go,
was auch immer sein, ist eigentlich vollkommen egal.
Das hilft einem prinzipiell die Logik
dahinter zu verstehen.
Und natürlich sollte man dann auch sich ein bisschen auskennen
mit so den Skripting
Umgebungen seines jeweiligen Betriebssystems.
Also PowerShell unter
Windows und man kann
denke ich heute sagen schon Bash unter Linux
so abwärtskompatibel
also für sie, ja es gibt Leute, die müssen
skripten auch für Systeme, wo
keine Bash verfügbar ist, aber
man könnte sagen, sagen wir mal Bash oder PowerShell
zusätzlich ist auch noch gut.
Und wenn es nur Bash und PowerShell ist, ist es auch nicht so
wild, aber ich persönlich finde es
sinnvoll, eine richtige
Programmiersprache zu kennen. Ja klar ist
JavaScript keine ordentliche
Programmiersprache.
Ey es gibt auch Leute, okay Bash würde ich nicht
dazu zählen. Jemand der Bash
kann, ist
wahrscheinlich schon mindestens 50
und Leute die Bash gut finden, denen ist
eh nicht mehr zu helfen.
Mit C Sharp und Bash fährt man gut, ja macht man.
Du fährst aber auch
mit Go und Bash gut
oder mit Python und Bash
gut, das ist eigentlich egal.
Ich finde es aber
sinnvoll, eine richtige
Programmiersprache zu können, weil man
dann auch viel einfacher Sachen lesen
und verstehen kann,
die nicht gerade Shell-Skript sind.
Also ich finde es sinnvoll, auch als
Physi programmieren zu können.
Ja das wird wahrscheinlich auch gehen.
So, ich würde sagen, legen wir los.
Tag 3
2003
ups
mkdir
03 1
Also bei mir, ich habe ja auch
mal Physi gelernt, ich meine
PowerShell kriege ich auch zustande, ich habe aber keinen Bock drauf.
Bei mir ist es
ist doch easy, was es bei mir ist.
Bei mir ist es
C Sharp, Bash, Ruby, Python
JavaScript, Go, C, C++
Rust, Java, PHP
Groovy
Easy. Können wir nachgucken.
Easy as fuck.
Ich betone C++, weil ich so ein großer
C++-Fan bin.
Da hast du nicht unrecht, deswegen hatte ich eigentlich
vor, nur zu gucken, ob überhaupt ein Symbol
anliegend und drum herum liegend ist
und nicht wie viele.
Guck mal hier, Workout Champ.
Okay, New Console.
Rider of Money.
Jetzt müssen wir erstmal kurz gucken, ob wir, nein,
ich wollte nicht Rider starten. Ich wollte das Chatbrains
Zeug starten und gucken, ob ich das, ob ich irgendwas
aktualisieren muss. Muss ich was
aktualisieren? Nope, muss ich nicht.
Also, öffnen.
Repos.
Advent of Code
2003
031
Bam.
Trust.
Any Trusters? AI Assistant.
Es ist gut, Chatbrains.
Lass mich einfach anfangen.
Gut, Repos,
Advent of Code, 031
What?
0
Achso, 2003.
031, Run.
Okay, Funst. Alles klar.
Wir fangen wieder genauso an,
wie wir in den letzten Tagen auch angefangen haben
und zwar, wir legen uns eine Datei an,
wo unser Input-Text reinkommt.
Diesmal machen wir
aber nicht den Fehler, wie das letzte Mal
und starten direkt mit dem langen
Input, sondern wir starten
mit dem überschaubaren Input,
dass man noch, dass man noch
irgendwie ansatzweise durchblickt.
So, war Input,
gleich, File, Read,
All Lines,
Input, TXT.
Gucken, ob es funst.
Input und wie viele Zeilen
sind es? Es sollten 10 sein.
Es sind 10 Zeilen.
Okay, passt. Alles klar.
So.
Wie fangen wir jetzt am besten an?
Also.
Ich versuche jetzt einfach mal das zu bauen, was
Ich versuche mal das zu bauen,
was ich eben gerade beschrieben
habe, ja.
Ich hoffe, dass das klappt.
Also, von der Idee her
würde ich sagen, man sollte
das hier als Tabelle sehen.
Mit Zeilen und Spalten.
Deswegen machen wir das doch mal.
Fangen wir mal an hier. Class, Table.
So, und ich würde sagen,
die Tabelle kriegt im
Constructor irgendwie
die Zeilen, also hier
Table gleich New Table
Input.
So. Ich meine, im Endeffekt haben wir
jetzt noch nichts gemacht.
Wir haben nur die Textzeilen da
reingespeichert.
Wir könnten übrigens, neu ist die Sharp Feature,
das wären Primary Constructors.
Aber irgendwie
gefällt es mir so immer noch besser.
Da muss ich mich wahrscheinlich erst noch dran gewöhnen.
So.
Also,
lasst uns mal was ausprobieren.
So. Wie kriege ich denn davon
jetzt die Zahlen gescheit extra hier?
Da ist wahrscheinlich wieder ein Regex.
Ganz sinnvoll.
New Regex.
Ja, die Aufgaben sind sehr Regex-lastig.
Aber was willst du machen?
Und dann gucken wir. Regex.
Matches.
Line.
Und dann gucken wir mal, wie viele Matches
wir pro Zeile
kriegen. Von der Idee her
sollten wir hier zwei Matches kriegen.
Hier gar keinen. Hier zwei.
Und so weiter. Gucken wir mal.
Wir geben auch die Zeile nochmal aus.
Ja.
Sechs.
What? Achso.
Ah. Vielleicht soll ich noch ein Plus
dahinter machen. Null.
Ob es auch ohne Regex geht? Klar geht es ohne Regex.
Magst du mal eine kurze Frage
von jemanden, der keinen hohen IQ hat?
Das stimmt. Du hast nicht Prime Subt.
Das, äh. Ja, dann ist kein Wunder,
dass du das nicht verstehst.
Cringe.
Also, das Add von einem String
ist dafür zuständig,
zu gucken, was für Escape-Zeichen
in dem String gelten und was nicht.
Ja. Also, du siehst ja, das hier ist
ein Backslash. Und wenn ich das Add
wegmache, dann zählt der Backslash
als Escape-Zeichen in diesem
String. Also, wenn ich zum Beispiel
Backslash-N machen will,
für den Zeilenumbruch,
dann brauche ich den Backslash
zum Escapen. Wenn ich ein
Add davor mache, dann zählt es
eins zu eins, so wie es da steht.
Glaub. Glaube ich zumindest.
Ja. Doch, doch.
Ich glaube schon, dass es so ist,
wie ich gesagt habe. Also, wenn du ein
Add davor schreibst, dann zählt der
Backslash nicht mehr als Escape-Sequenz
im String.
Und ich glaube, ich glaube auch, dass
der, dass dann
das geschweifte Klammern und so
auch nicht zählen. Also, das ist
sinnvoll. Baldios. Ja, jetzt ist klar.
Jetzt. Excellent.
Jetzt ist das Hirn auch dafür.
Ja. Aber das ist so.
Da zählen manche Escapes nicht. Am besten ist,
wenn du es ganz genau wissen willst, tatsächlich
würde ich mir die Microsoft-Seite dazu angucken.
Aber ich glaube, im Großen und Ganzen hebt das
die Bedeutung von manchen Escape-Sequenzen
im String
auf. Ja.
Was ganz witzig ist, die Kombination
aus, wo wir gerade dabei sind,
die Kombination aus
Add und Dollar.
Das hebt manche
Escape-Sequenzen auf, aber
hier war, blub, gleich
1, aber
String-Templating geht dann trotzdem noch.
So, und jetzt kommt 5Hz
die Sharp-Logik. Guckt mal. Stellt euch mal vor,
stellt euch mal vor, dass hier wäre ein
JSON-String. Okay?
Stellt euch mal vor, dass wir eine JSON-String.
Und JSON hat ja ganz gerne mal sowas hier.
Äh, A1. So.
Ja, sowas.
Sowas hat es ja mal ganz gerne.
So, und jetzt gibt es halt so ein kleines Problem.
Weil in C-Sharp
ist halt geschweifte
Klammern auf
Escape-Sequenz für String-Templates.
Und jetzt haben sie sich was
Cooles überlegt.
Jetzt haben sie sich was Cooles überlegt. Ups.
Jetzt haben sie sich was Cooles überlegt.
Man kann auch, machen wir mal das Add weg,
man kann auch in einem letzten, also
es gibt ja eh schon mal ein Problem, weil hier jetzt
Quotes drinne vorkommen.
Jetzt haben sie sich von Python was abgeguckt.
Nämlich, dass du
Triple
Triple, ähm, tja
Triple Quotes machen kannst.
Und das hier drinne zählt dann als
String-Literal
im Endeffekt.
Problem ist, mit einem Dollar-Zeichen
davor
ist das einzige was in so einem String-Literal
noch escaped wird.
Geschweifte Klammer auf.
Und das ist natürlich doof,
wenn geschweifte Klammer auf
interpretiert wird als Escape-Sequenz.
Weil eines der Hauptanwendungszwecke
für solche, für
lange String-Literals dürfte ja unter anderem
Embedded JSON sein.
Und da haben sie sich in .NET sowas überlegt,
dass du einfach zwei Dollar-Zeichen
davor machen kannst. Und das finde ich
persönlich die schönste Implementierung
in allen Programmiersprachen,
die ich kenne. Ich glaube, selbst in
Python haben sie es nicht so schön hingekriegt,
denn du kannst dir selbst aussuchen,
ab wann deine
Escape-Sequenzen zählen und ab wann nicht.
Das Anzahl der Dollar entspricht
der Anzahl der öffnenden Klammern,
die du brauchst, um escapen zu können.
Also mal angenommen, du hast jetzt eine Datei,
die ganz viele Klammern enthält,
aber nie
aber nie fünf Klammern
hintereinander, aber du möchtest unbedingt
was templaten da drin,
dann schreibst du fünf Fragezeichen davor
und dann musst du fünfmal
Klammer aufmachen,
dass es als Escape-Sequenz zählt.
Das ist eigentlich mega nice.
Ich meine, das ist jetzt ein total abgedrehtes
Beispiel, das wird wahrscheinlich so in der Form
äußerst selten vorkommen, aber wichtig ist,
dass es funktioniert. Das heißt, du kannst
echt den Input so wählen,
dass es nicht konfliktet
mit deinem Datei-Inhalt
oder mit deinem String-Inhalt.
So. Aber jetzt mal zurück
zu unserer eigentlichen
Aufgabe. Wir wollten
...
Zahlen matchen.
Was auch funktioniert.
Das Problem existiert offensichtlich,
wenn du JSON in String-Literals
machen willst. Guck mal.
So. Hier würdest du schreiben,
so, a
Punkt. So, und jetzt? Was würdest du jetzt
machen? Jetzt würdest du so schreiben,
lup, um das zu
interpolieren, also um das einzusetzen an der Stelle.
Geht aber nicht, weil es ein String-Literal ist.
Also sagst du, okay,
ich will, dass es zusätzlich noch ein Template-String ist
und dann geht's kaputt,
und dann geht's kaputt an der Stelle,
weil
JSON geschweifte Klammern hat.
Also musst du ihm sagen, ich will erst
bei zwei
Klammern wirklich was einsetzen.
Und dann sieht das Ganze so aus.
Ich finde nicht, dass das an der Realität
vorbeigeht. Das kommt sogar relativ häufig
vor, gerade in der Kombination.
Ich finde, das haben sie richtig gut gemacht
mit den mehreren
Dollarzeichen. Ich glaube, nur nicht mal
in Python kannst du sowas machen, die ja
angefangen haben mit diesen
Triple-Escape-Dingern.
Äh, Triple-Quote-Sachen für
Literals auch.
Ich finde, das ist eine gute Sache.
So, also, regex-match-counts, zeig mal her.
Erste Zeile findet er zwei Zahlen,
zweite Zeile findet er null, dritte Zeile findet er
zwei, hier findet er eine. Das sieht schon mal gut aus.
Okay,
also, der regex funktioniert.
Massive regex.
Dann hauen wir uns das mal
weg und speichern
uns den regex mal hier.
Private Read
Only.
Nennen wir ihn mal
Number.
Numbers.
Number regex.
So. Und jetzt müssen
wir hier irgendwie extrahieren.
Das, das, das
was ich schon gesagt hab.
Wir müssen, wir müssen im Endeffekt
jetzt erstmal hier
die, die, die Stellen
extrahieren, wo die Zahlen
stehen. Und zwar
mit der Information, welche
Zeile und
welche Startspalte.
So, und
dazu habe ich mir überlegt, wir machen sowas.
Wie gesagt, ich habe mir im Vorfeld ja schon ein bisschen Gedanken drüber gemacht.
Nehmen wir erstmal Selection. Mir fällt kein
besserer Name ein. So, und dieses
Selection-Klasse.
So. Und diese Selection-Klasse,
die braucht
Informationen darüber.
Start.
Also, braucht die Zeile.
Braucht die
Zeile und braucht die Startspalte.
Ja.
Also.
Und.
Und dürfen wir nicht vergessen. Stimmt.
Und den Value brauchen wir auch noch.
Also machen wir irgendwie so hier. Public String
Value. Dann brauchen wir int
sowas wie row.
Und sowas wie
int, nennen wir es mal, nennen
wir es mal ähm
Column Start. Oder nennen wir es mal,
nennen wir es mal row start. Man weiß nicht,
was wir damit noch machen wollen.
Wobei es
gibt immer nur eine row.
So.
Und da haben wir alle Informationen
drin, die wir erstmal brauchen. Jetzt ist
nur die große Preisfrage.
Wie kriegen wir aus
den Zeilen
jetzt raus
diese ganzen Infos?
Okay, lasst uns mal was ausprobieren.
Machen wir hier. Blub.
Äh. Blub.
Warum nicht Index?
Wir können es auch Index nennen. Ja. Vielleicht.
Ja. Hast recht. Wir nennen es Index.
So.
Gut.
Jetzt probieren wir das mal.
Wie könnten wir das, wie könnten wir das
auslesen?
Also. Ich mein, das Ziel
ist jetzt, für jede
Zahl sowas
hier zu erzeugen. Also.
Hier steht die Zahl drinne.
Hier steht die Zeile drinne, wo die Zahl gefunden
wurde. Und hier steht der Index.
drinne. Quasi
wo es in der Zeile
losgeht.
Also.
Würde ich sagen, wir machen mal ne
Schleife.
Ne. Ne For Each Schleife tut's nicht.
Wir brauchen ja den, brauchen ja die Nummer
von der Zeile. Also machen wir mal
ne For-Schleife.
So. For
I. Wir nennen es auch nicht I.
Zahl Länge wäre vielleicht noch sinnvoll.
Na gut. Länge ist
in. Ja wobei. Ne. Ne. Ne.
Ja hast recht. Du hast recht.
Du hast recht.
Es wäre tatsächlich sinnvoll.
Wir können das aber dynamisch
berechnen. Und zwar mit
Int
Length
Theoretisch
kann man dann nämlich sagen
Value
Length
Aber wir sollten vielleicht
Ach komm. Scheiß auf Null
Jacks. Who cares.
Muss man eigentlich
die Klammer am Zeilenanfang machen
Nein musst du nicht.
Es ist nicht Go, dass es nicht
kompilieren würde.
Das kompiliert, das kompiliert auch ohne.
Also du kannst es schreiben
wie du willst.
Es empfiehlt dir das so. Wenn du das umstellen willst
du kannst hier irgendwie auch die
Formatierregeln
in Rider anpassen,
dass der standardmäßig deine
deine Zeilen so formatiert.
Ich mag das so. Liegt aber
auch glaube ich daran, weil ich das schon
jahrelang so mache und irgendwann
mal in einem offiziellen Microsoft
C-Sharp Style Guide stand,
dass das die sinnvolle
Variante ist. Aber Microsoft sagt viel
wenn der Tag lang ist. Moin
Liefoi. Aber du kannst das schreiben
wie du willst. Wie war die Syntax
für nicht Null? Ne. Wie ging
das nochmal?
Null. Ne.
So ne.
Dass es nicht meckert.
Wobei wir können das eigentlich. Wir können es
eigentlich noch besser machen. Leute.
Das wird ein Rekord. Das wird ein Rekord.
Wir können auch mal neue C-Sharp
Features verwenden.
int row
int index
int length
Achso. Wobei. Ne.
Kann man hier
required noch reinschreiben oder
die Dinger sind dann required.
Ja. Ja das ist doch
auch gut so.
So dann machen wir es so. Das ist schön kurz
und knackig. Alles klar.
Wie kriegen wir das jetzt raus? Also wir machen mal
eine Vorschleife. Wir machen eine Vorschleife
die nennen wir jetzt irgendwie row number
dass ich mir das merken kann. So
und wir machen eine Schleife über alle
über alle Zeilen
und
dann holen wir uns erstmal
den Text raus
aus
der aktuellen Zeile
und jetzt muss ich mal gucken ob das soweit
funktioniert.
Jetzt sollte es einfach nur den Text ausgeben. Ok
Ich bin nicht auf dem Thread.
Ich hab nix
Ich hab nix verkackt mit Index und so
an der Stelle.
Was will er denn hier von mir.
Convert to for each.
Ne. Ne. Ne. Ne. Ne. Ne. Ne. Ne. Ne.
Das ist blöd. Aber hier können wir var verwenden.
Ok also. Jetzt haben wir
die Anzahl der Zeilen
und den Inhalt. Das bedeutet im Endeffekt
jetzt brauche ich mein
Ok jetzt brauche ich mein regex.
Also var matches
Das ist das, was ich hier oben auch schon hatte.
Den Text aus der Zeile.
Jetzt nochmal kurz schauen, ob das alles funzt.
Sollte das gleiche rauskommen wie vorhin?
Achso, ja.
Count.
Sollte das gleiche rauskommen wie vorhin?
Ja, zwei Stück in der, null in der Zeile, zwei in der Zeile.
Okay, das funktioniert alles.
So, also das ist die Anzahl der Zeilen.
Äh, die Anzahl der Nummern in der Zeile.
Okay, da machen wir jetzt eine Schleife.
Da können wir jetzt eine for each, da machen wir jetzt eine for each Schleife drüber.
Richtig, können wir das auch so schreiben.
Brauchen wir die extra Zeile nicht.
For each.
Match in Matches.
So, da haben wir jetzt die Information.
Also, wir haben, okay, wir haben die Information, in welcher Zeile es ist.
Wir haben die Information, ich glaube, Match Value.
Wir haben Value Länge.
Und, konnte man sich da nicht.
Ach hier.
Index.
Position in the original string where the first character of the, genau das, genau das wollen wir haben.
Okay, heißt im Endeffekt, wir können jetzt sowas hier sagen wie, äh, New Selection.
New Selection.
So, Value ist Match, weil ich mir nicht sicher bin, ob das auch funzt.
Match Value.
Lass mal kurz checken, ob das auch wirklich alle Zahlen matcht.
4, 6, 7, 1, 1, 4, ja, macht's.
So, Selection.
So, was wollen wir?
Dann haben wir Value, Row ist Row Number und dann haben wir als letztes haben wir noch Index und das ist Match Index.
Dann brauchen wir noch eine Liste, war, Result.
Wir brauchen noch eine Liste mit Selections und dann Return.
Okay, und das halten wir, sollten wir vielleicht auch nicht Plup nennen, sondern, ja, ist eigentlich wurscht, wie das heißt.
Plup.
Heißt es jetzt.
Beste Benahmung überhaupt.
Weiß jeder sofort, was die Methode macht.
So, Selections.
Jetzt haben wir eine Liste.
Ach so, nee, macht das Sinn.
Jetzt haben wir eine Liste mit allen Informationen, die wir brauchen.
Nämlich, in welcher Zeile und an welchem Punkt sich die Zahlen befinden.
Und jetzt müssen wir quasi nur noch rausfinden, ob irgendwo, ob irgendwo angrenzend zu dieser Zahl,
ein Symbol ist.
Also, wir haben jetzt die Position von jeder Zahl.
Ah, ich entdecke schon ein Problem in der ganzen Geschichte, wie ich mir das gedacht habe.
Das funktioniert so nicht, wie ich mir das gedacht habe.
Wisst ihr warum?
Weil ich hatte eigentlich vor, zu sagen, wenn ich eine Zahl gefunden habe, dann eins davor, eins danach, eine Zeile oben, eine Zeile unten drunter, gucke ich, ob es ein Symbol gibt.
Ähm.
Ähm.
Das Ding ist nur, was ist beispielsweise, wenn die Zahl direkt am Anfang steht?
Dann gibt es keinen davor und es gibt keinen oben drüber.
Das heißt, ich müsste checken, ob mein Startindex schon 0 ist.
Und ich muss auch theoretisch checken, dass die Länge nicht out of bounds geht.
Weil, stellt euch mal vor, hier steht eine Zahl ganz hinten und ich würde eins hinten dran rechnen wollen, dann funktioniert das ja nicht.
Ja, das ist, das ist pepega.
Komm, wir benennen das mal kurz um, dass ich mir merken kann, was das macht.
Rename.
Get all numbers.
Ja, wie?
Plupp ist ein guter Name.
Ja, genauso wie I und Temp.
Alles sehr gute Namen.
Äh, um was geht's?
Also ja, kann man, kann man einstellen.
Lolo und Kekwe.
Ja, Lolo und Kekwe sind auch gut.
Chatge, kann man mir halbwegs folgen, was ich jetzt eigentlich vorhabe?
Weil ich bin gerade selbst verwirrt, was ich, was ich vorhabe.
Ich brauche den high IQ Chat.
Ähm, also, denke ja, das ist gut.
Dann, weil, also, ich will jetzt quasi das, das, das um, den, den umliegenden Text bekommen.
Ich will den umliegenden Text, also was ich vorhabe ist folgendes.
Ich habe jetzt die Informationen darüber, wo sich welche Nummer befindet.
Zwar mit Zeilennummer und mit Startindex in der Zeile.
Was ich jetzt machen will ist, ich will den umliegenden Text von dieser Nummer auslesen.
Also, im Prinzip will ich eine Zeile nach oben und einen Index nach links.
Und einen Index nach links.
Und einen Index nach rechts.
Und das dann auch noch eine Zeile drauf.
Ich will quasi diese, hier, so.
Das, das will ich, das Zeile, den Text drum herum will ich auslesen.
So, also, machen wir das doch mal.
Machen wir das doch mal. Easy, easy.
Also, okay.
Ich, ich habe eine Idee.
Wir, wir machen nochmal hier eine neue.
Ich, ich weiß noch nicht, wie es heißt.
Void.
Ich weiß jetzt, ich kann euch jetzt auch sagen, warum ich Plupp gelöscht habe.
Weil ich Plupp wieder brauche.
So, was brauchen wir da?
Wir brauchen den, wir brauchen den Startindex.
Wobei, wir können da auch einfach irgendwie Selection übergeben.
Boah.
Okay.
Select, ne Moment.
Table.
Plupp.
Selection.
So, ohne zu wissen, was ich da drin jetzt machen will.
Also, was will ich haben?
Ich will aus den Zeilen.
Wir machen, wir machen eine Vorschleife da drüber.
Die ich tatsächlich auch wieder so nenne, wie da oben.
Äh, so.
Kleiner.
Selection.
Row.
Plus.
Moment.
Sekunde, das funktioniert so nicht.
Ich brauche Start.
Okay, jetzt wird es, jetzt wird es eklig.
Ich will eine Zeile davor und ich will eine Zeile danach.
Kannst du rund um den Input auch selbst Punkte machen.
Dann ist kein Out, Out of Bounds mehr möglich.
Das Problem ist, wenn ich selbst Punkte mache, dann, dann ändert sich ja der Text.
Ach nee, du meinst.
Nee, nee, nee, nee, dann ändert sich ja, dann ändert sich ja die Anzahl der.
Nee, das, das funktioniert glaube ich nicht.
Pass auf Out of Bounds auf.
Nice Chat.
Dass ihr jetzt auch schon drauf gekommen seid, weil ich schon fünf Minuten gesagt habe.
Ja, ich weiß, das ist das Problem mit Out of Bounds.
Also, wir brauchen, okay, wir brauchen eine Startposition.
Startposition ist erstmal Selection.
Row.
Oder wie heißt das, Start, Start.
Row.
So, aber Startrow ist nicht Selectionrow, sondern minus eins.
Minus eins.
Und jetzt ist das Problem, wenn es null ist.
Also brauche ich jetzt quasi sowas wie Math.
Min, nee, Max.
Also.
Selectionrow.
Minus eins.
Oder null, wenn es die erste ist.
Sowas, sowas brauche ich, genau.
Das ist die Startrow.
So, und jetzt machen wir End.
Endrow.
Endrow ist.
Selection.
Plus eins.
Und dann das kleinere.
Es könnte allerdings auch die Länge sein.
Also sprich.
Entweder.
Also hier ist es.
Entweder es ist.
Wenn es Zeile null ist.
Dann will ich dort anfangen.
Wenn es die letzte Zeile ist.
Dann.
Wobei müsste das nicht sogar hier auch nochmal minus, minus eins sein.
Dann.
Weil ich will ja.
Ich will ja meine Vorschleife quasi.
Inklusive machen.
Müsste das so passen?
Okay.
Schau mal mal.
Schau mal mal.
Ja.
Gucken wir mal, ob das.
Ob das Sinn ergibt.
Dass ich das gebaut habe.
Äh.
Moment.
Was will ich sehen in meiner Ausgabe?
Passt das?
Also.
Ja gut.
Erste Zeile geht bei null los.
Und letzte Zeile.
Ja doch.
Doch.
Doch.
Doch.
Doch.
Doch.
Ich glaube das stimmt.
Guck mal.
Nee.
Moment.
Wie sieht mein Input aus?
Moment.
Moment.
Ich muss mal kurz hier.
Ein bisschen.
Okay.
Ach Quatsch.
Nicht da.
Nicht da.
Da.
Okay.
Also.
What?
Ach so.
Kleiner.
Gleich.
Muss es sein.
Okay.
Ja.
Das sieht besser aus.
Das.
Das sieht gut aus.
Das sieht gut aus.
So.
Erste Zeile.
Erste Zahl.
Kommt.
Das hier raus.
Zwei.
Erste Zeile.
Zweite Zahl.
Kommt.
Das hier raus.
Das hier raus.
Und letzte Zahl sind.
Letzte Zahl sind wieder zwei.
Breakpoints mit Debugger.
Keck.
Wait.
Alter.
Damit fangen wir jetzt nicht an.
So.
Also.
Das.
Das sieht passend aus.
Okay.
Also.
Jetzt kriegen wir.
Wir kriegen jetzt eine Zeile davor und eine Zeile danach.
Jetzt.
Jetzt müssen wir gucken, dass wir den richtigen.
Direkt.
Dass wir davor und danach raus.
Holen.
Also.
Im Endeffekt.
Roll.
Und jetzt.
Selection.
Nee.
Quatsch.
What the fuck.
Selection.
Index.
Alter.
Riderspektrum.
Selection.
Length.
Irgendwie sowas.
Ergibt.
Ergibt das Sinn?
Lass mal kurz gucken.
Ich.
Ich müsste jetzt die Zahlen zumindest raus.
Ach nee.
Das kann ja.
Moment.
Warum genau ist das jetzt out of bounds?
Ich mein.
Warum ist das out of bounds?
Moment.
Jetzt bin ich.
Jetzt bin ich verwirrt.
Ach.
Moment.
Moment.
Das ist ja falsch, wie ich das benutze.
Lull.
Das ist ja Range.
Range Select.
Das geht von Index bis Index.
Ja.
Ja.
Okay.
Ja.
Ja.
Okay.
Dann ist das schon mal totaler Blödsinn, was ich.
Was ich hier gerade probiere.
Also.
Ich brauche jetzt.
Ich will.
Okay.
Also.
Shit.
Mann.
Okay.
Shit.
Mann.
Gabs nicht irgendwie so ne.
Es gab doch die Möglichkeit mit Link das irgendwie auszulesen, so dass es ihm egal ist
wie viel C-Sharp, String, Out of Range, Link.
Konnte das doch.
Das war irgendwas mit Skip.
Ich glaub das war irgendwas mit.
Ich glaub du hast irgendwie erst gesagt Skip und dann Take.
Link.
String.
Out of.
Range.
Ja.
Genau.
Irgendwie so.
Und.
Link hat in dem Fall bei Skip und Take.
Das hat glaub ich irgendwie Out of Bounce Check oder sowas.
Dass das.
Dass das nicht kaputt ist.
Okay.
Also.
So.
Von der Zeile.
Wir wollen anfangen.
Wir wollen anfangen bei.
Selection.
Index.
Minus.
Eins.
Ja.
Das ergibt ja auch Sinn.
Guck mal.
Wenn ich sage.
Das ist ein Charakter.
Das ist ein Charakter.
Das ist ein Charakter.
Das ist ein Charakter Array.
Und überspringe.
Minus.
Eins.
Dann heißt das.
Fange am Anfang an.
Das.
Das ergibt sogar Sinn.
Dass das funktioniert.
Okay.
Skip.
Und Take.
Ja gut.
Das sind.
Das sind.
Moment.
Ähm.
Ähhh.
Nochmal.
Wir wollen eins da vor starten.
Und jetzt wollen wir im Endeffekt.
Selection.
Length.
Plus.
1.
okay string join und das wird ganz eklig jetzt nichts okay funzt es jetzt aha fast fast guckt
mal wir kriegen eins davor aber wir kriegen keins danach muss ich sagen irgendwie plus
2 ist aber auch wird das ergibt keinen sinn was ich hier mache oder ich ich fange bei minus 1 an
ja das ist richtig das problem ist jetzt nur dass ich guckt mal das kann ich so doch nicht
machen das ja doof weil das ding ist wenn ich eins zurückgehen kann dann ist alles okay dann
will ich auch dann dann
will ich auch selection plus zwei machen wenn ich allerdings nicht zurückgehen kann der bei
der ersten ist aber auch falsch bei der ersten will ich nur ein 1 hinten dran oh nee das ist
doof das funzt so nicht okay noch mal noch mal weg machen noch mal weg machen also machen wir
noch was anders aber hier irgendwie start index gleich das müssen wir glaube ich echt das müssen
wir glaube ich echt so machen hier wieder auch so start index
ist im endeffekt das hier im prinzip genau das gleiche oder 0 so und end index ist selection
wieder mindestens leute die knorr werbung kennst du auch die knorr asma werbung bekommen die
verstört mich auch immer extrem wenn die typen dann in der knorr werbung anfangen
es ist knorr asma das ist das finde ich auch immer höchst verwirrend so und der index so
zumindest so war so und der end index der ist jetzt row length minus 1 ne moment blödsinn
blödsinn das ist das ist ja abartig
das macht gemacht keinen sinn index ist selection index plus 1 oder row length bis minus eins ja
okay gut alter und jetzt kann sagen wie�� saps string wahrscheinlich start index und
OS bin ich der erste mal auf dem dauer mathe der jetzt kommt gleich nach voyez die
achso moment das ist ja nur dinge monke
ok mokas
Bro, dann machen wir es so.
Startindex.
Ey, das ist ja aber nicht...
Alter, das macht Ryder nicht mit.
Endindex.
Okay, Brake.
Brake.
Ach, Moment.
Es muss Startindex plus Selection Länge ja sein.
Und dann plus 1.
Das sieht gut aus.
Nee.
Oder?
7, 5, 5.
Länge plus 2.
Nee.
Ich glaube, jetzt stimmt es, oder?
Jetzt sieht es gut aus.
6, 6, 4.
Ja.
6, 6, 4.
Also 5, 9, 8.
Gibt einen Punkt davor.
Okay, 7, 5, 5.
Sollte quasi das hier ergeben.
7, 5, 5.
Ergibt, genau.
Gibt 5 Punkte.
Ein Stern.
Okay, ja, ja.
Gut, gut.
Das sieht...
Okay, das sieht richtig aus.
Das sieht richtig raus.
Okay.
Dann würde ich sagen, schenken wir uns das.
Und brauchen wir wieder eine Liste.
Obwohl, schön ist ja echt was anderes.
Haben wir wieder eine Liste.
List gleich new.
String.
List add.
Okay.
Turn.
Ups.
Uiuiui.
Nee, nee, wir wollen kein Licht.
Wir wollen ein...
Okay.
So.
Also, schauen wir mal.
Schauen wir mal, ob das jetzt funktioniert.
Wir haben ja hier den Beispielinput.
Also, mit dem Beispielinput ist eine Summe der gültigen Zahlen 4361.
Also, vielleicht sollten wir das mal nicht plupp nennen,
sondern wir nennen es einfach 1 zu 1 irgendwie.
Reflektor.
Rename.
Wie?
Irgendwie, keine Ahnung.
Get.
Surrounding.
Oder sowas.
Gut.
Surrounding Text.
Text.
Für das Blip anstatt Plupp.
So.
Get Surrounding Text.
So, und jetzt gucken wir.
Passt mal auf.
Sixth Time.
If.
Any.
Ob irgendein dieser Zeich...
Irgendeines dieser...
Dieser Zeichen.
Symbole enthält.
So, und Symbole, das machen wir jetzt auch mal ohne Regex an der Stelle.
Weil, wir wissen ja, es sind Sternchen, Dollar und Plus.
Wobei, wissen wir alle Symbole?
Wissen wir wirklich alle Symbole, Chat?
Stern...
Oh, nee!
Da sind auch Uns und Slashes und so drinne.
Oh, die sind...
Der ist...
Und Kleid, der ist gemein.
Der ist gemein.
Okay.
Alles außer Punkte und Zahlen.
Okay, wir brauchen doch noch ein Regex.
Lul.
Wir brauchen...
War ja irgendwie klar, ne?
Wir kommen um Regex-Sachen.
Kommen wir hier nicht drum rum.
Nennen wir es mal irgendwie Symbol-Regex.
Rogox.
Regex.
So, und da brauchen wir jetzt...
Okay, Regex-Magic.
Achtung, Leute.
Passt mal auf.
Jetzt könnt ihr noch was lernen.
Wer weiß, wie man ein Nicht macht in Regex?
Ich weiß es zufällig, weil ich das...
Das weiß ich schon lange, weil ich das mal irgendwie ein paar Tage versucht habe, ordentlich hinzubekommen, als ich noch Azubi war.
Seitdem habe ich mir das gemeldet.
Weil das so Painz-Champ war.
Wie macht man ein Not in Regex?
Richtig.
Ja.
Toffi-Fetisch.
Aha.
Alles klar, danke für den Sub.
Pog.
Genau, so macht man das.
So, also ich glaube, man kann es schreiben.
So.
Also wir wollen alles außer...
Außer Digits und außer Punkte.
Wobei ich mir nicht ganz sicher bin, ob ich den Punkt an der Stelle...
Escapen muss.
Oder ob an der Stelle ein Punkt ein Punkt ist.
Tja.
Dankeschön, Radiant Tracer.
Heute war Linux-Kernel 666.
Oh.
Der Teufel.
Ich glaube, man muss es nicht escapen.
Und 665 war dann der Nachbar vom Teufel.
So, jetzt gucken wir mal.
Okay, machen wir mal Line.
Symbol Regex.
Is Match.
Is Match.
Wenn Any matcht, dann geben wir mal...
Das können wir jetzt hier einfach überprüfen, ob das funktioniert, was wir hier bauen.
Selection Value aus.
Okay.
Also, das 467 hat ein Symbol daneben, soll drin stehen.
114 hat...
Hat 114 da was dabei?
Ne, hat nicht, ne?
Hier.
Soll nicht drin stehen.
35 soll drin stehen.
633 soll drin stehen.
617 soll drin stehen.
58 soll nicht drin stehen.
502 soll drin stehen.
755 soll drin stehen.
664 soll drin stehen.
Und 508...
Das sieht gut aus.
Das sieht...
Was, wenn sich zwei Nummern diagonal berühren?
Das ist egal.
Wichtig ist, dass angrenzend ein Symbol sein muss.
Okay.
Dann zählen wir das doch mal zusammen, ob da jetzt das Richtige rauskommt.
Ähm...
Count plus gleich int pass, das da.
Ups.
Äh, was?
Ja, wo kann ich sagen, wo ist das Problem?
Count.
So, da müsste jetzt rauskommen.
436.
Schauen wir mal.
Sieht gut aus, glaube ich.
Ja.
Nice.
Okay.
Großen Input nehmen.
Massive Input.
535.078.
Okay, bevor ich es eintrage, Chat.
Obligatorisch.
Obligatorisch.
Obligatorische Umfrage.
Äh.
Vote.
Nee.
Prediction.
Prediction.
Wird das Ergebnis stimmen?
Ja, nein.
Was denkt ihr?
Stimmt's oder stimmt's nicht?
Die Zahl, die wir haben.
Ihr könnt Channel Points wetten.
Ich hätte gedacht, man muss den Punkt escapen.
Na, vielleicht gibt's ja noch irgendwie Probleme mit dem Regex.
Ihr seid aber...
Ihr seid aber äußerst zuversichtlich.
Ich möchte euch mal dran erinnern.
Ich möchte euch mal dran erinnern.
Dass die letzten Male es, glaube ich, nie First Try mit dem eigentlichen Test-Input funktioniert hat.
Obwohl der...
Wobei doch, das letzte Mal hat's, glaube ich, funktioniert, First Try.
Obwohl der Text...
Der...
Der...
Test-Input funktioniert hat.
Okay, 400.000 Kekse zu 12.
Da können...
Da können...
Jetzt, wenn jetzt einer ordentlich was setzt, bei 9, kann er richtig Geld gewinnen.
Geld.
Geld.
Null Kekse, Alter.
Geld.
Wir sind hier nicht bei Money Gambling.
Äh, Casino-Stream, Alter.
Kein...
Kein...
Äh...
Ist...
Sind Casino-Streams eigentlich immer noch so angesagt?
Ich glaube, auf Twitch ist es ein bisschen weniger geworden, ne?
Ja, die sind jetzt alle auf Kick.
Aha.
Gibt doch noch ein paar Daupters.
Gibt doch noch ein paar Daupters.
Gute Wahl.
Ich kann mir nämlich auch nicht vorstellen, dass das direkt funktioniert.
Aber...
Ja, man weiß nicht.
Und dann sind wieder 400...
480 K weg.
Oder...
Oder 300 K weg.
Oder wie MontanaBlack jetzt sagen würde...
Äh...
Oder wie würde er denn sagen?
Digga, wieder 150 K weg.
Oder irgendwie sowas.
Auf jeden Fall, Digga.
Auf jeden Fall, Digga.
Benutzt du eigentlich GitHub Copilot?
Eine Umdrehung, Digga.
Was hältst du davon?
Äh, ich benutze tatsächlich...
Ich habe auch kein Copilot-Abo.
Das habe ich am Anfang mal ausprobiert.
Es ist...
Praktisch, aber jetzt nicht essentiell für mich.
Okay.
Probieren wir mal.
Probieren wir mal aus.
Also.
Schauen wir mal, ob die Daupters recht haben oder die Enjoyers.
Easy.
Easy.
Easy.
Easy as fuck.
Easy.
Easy as fuck.
Easy.
Easy.
Easy.
Easy.
Easy.
Easy.
Easy.
Easy.
Easy.
Easy.
Easy.
Easy.
Easy.
Easy.
Easy.
Easy.
Okay.
Ich habe selbst gedaubtet, dass das funktioniert.
Aber man muss sagen,
schön ist der Source Code nicht, oder?
Nee, ich bin mal sehr wenig AI-Zeug.
Ein Part 2.
Wir gucken jetzt Docke an.
Part 2 ertrage ich heute nicht.
Nein, Part 2 mache ich heute nicht.
Wie gesagt, Part 1 war schon abfuck.
Sonst kommen wir heute wieder nicht dazu, uns das andere anzugucken.
Auch wenn ich schon massive finden dran bin.
Ach so.
So, Modgis.
Moment, wir müssen Prediction.
Ähm, Max, ich habe keine Ahnung, wie man Prediction auflöst.
Kannst du das machen?
Streamer, lack critical information.
Wir machen da innumerable draus.
Einfach wieder slash Prediction.
Ach ja, choose outcome.
Wird das Ergebnis stimmen?
Ja.
Complete prediction.
Are you sure?
Ja is the correct outcome.
Ja.
Something went wrong.
Was?
Hast du schon?
Hast du das schon gemacht?
Ach so.
Ich wollte gerade sagen, warum geht das denn?
Also schön ist echt was anderes.
Also was wir vielleicht machen können, das können wir noch hier reinschreiben.
Das muss keine eigene Zeile sein.
Das hier unten geht ja.
Das hier unten geht ja.
Aber das gefällt mir halt überhaupt nicht.
Das ist so richtig krass.
Das ist eklig, unleserlich alles.
Aber mir fällt jetzt auch nichts anderes ein, wie man es gescheit machen könnte, ehrlich gesagt.
Kommentare.
Ich glaube, es geht los mit Kommentaren.
Fangen wir nicht an.
Ich habe eine Idee, wie man das vielleicht ein bisschen schöner machen könnte.
Ich glaube nämlich, dass wir uns das hier sparen können.
Und dafür könnten wir sagen, Rose, wir starten.
Wir starten hier.
Wir machen das auch so, wir skippen so viele Rows und dann taken wir immer drei.
Habe ich da nicht das gleiche Problem?
Da habe ich doch genau das gleiche Problem, oder wie bei den anderen Sachen?
Das Funst glaube ich echt nicht.
String Join.
Das ist das Funst.
Das Funst.
Glaubt nicht.
Oh, mal kurz die Input rückgängig machen.
Monkes.
What?
Äh.
Ah ja.
Ne, passt doch.
Äh, wir joinen das an New Line.
Hä?
Ja.
Oh, ne Leute, das Funst nicht.
Ja, das...
Okay, dann fällt mir nicht ein, wie man das kürzer und knackiger machen könnte.
Weil das ist immer...
Das macht immer Probleme.
Weil entweder es geht nicht zurück.
Und dann ist quasi der Zeiger hier und es takt die nächsten zwei.
Oder er geht, wie es sein muss, eins zurück und takt...
Ne.
Dann müssen wir es so lassen.
Dann fällt mir jetzt auch erstmal nichts anderes ein, wie man es machen könnte.
Okay.
Also denn.
Ups.
Nein, nein.
Ich werde es mal committen.
Wobei, ich behalte mir mal vor, das noch irgendwie ein bisschen schöner zu machen.
So richtig...
So richtig nice finde ich es nicht.
Mir gefällt es irgendwie nicht so richtig gut.
Gerade das hier.
Aber komm.
Wurscht.
Git.
Status.
Git.
Add.
Git.
Commit.
Day.
Drei.
Push.
Äh, also.
Part 2.
Okay, was müssen wir...
Wir gucken mal, was Part 2 ist.
Immerhin.
Ja, wir wollen mal kurz drüber gucken, was es ist.
Auch wenn ich Part 2 jetzt nicht mehr machen will.
Okay, bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla.
Missing part wasn't the only issue.
One of the gears in the engine is wrong
Aha
Okay
A gear is any Sternchen Symbol
Das ist
Das das angrenzend an exakt zwei Nummern ist
Da muss man das zusammenrechnen
Oh
Ach du Scheiße man
Keck G
Top left
Weil angrenzend daran
Oh shit
Alter wie soll das funktionieren
Das ist fast das gleiche wie eins
Ne
Guck mal
Ne ne ne das ist nicht fast das gleiche wie eins
Guck mal
Du kannst ein Sternchen an der Zahl dran stehen haben
Und das macht nix
Du musst quasi raus
Du musst dir quasi raussuchen
An welcher Zahl steht
Okay wir brauchen Step 1
Wir brauchen Step 1
Um uns alles rauszuholen
Was angrenzend ein Sternchen hat
Okay
Und
Dann müssen wir gucken
Ob in der Zeile
Darüber
Ne Zahl steht
Die auch da dran angreift
Boah ne das ist
Also da hab ich jetzt überhaupt keine Idee gerade
Und vor allem es könnte ja auch sein
Dass zwei Zahlen auf der gleichen Zeile nebeneinander stehen
Also wir müssen uns auf jeden Fall zuerst rausholen
Alle Zahlen mit
Mit einem Zeilen
Angrenzendem Sternchen
Das heißt wir können schon mal alles rausschmeißen wo keine Sternchen angrenzen
So und jetzt ist nur die große Preisfrage
Wie bringe ich die Zahlen dann richtig zusammen
Also mal angenommen ich filtere alle Zahlen raus
Die die Sternchen angrenzend haben
Dann muss ich trotzdem noch entscheiden welche Zahl ich mit welcher Zahl
Jetzt zusammenrechnen
Ne ne das ist so einfach ist das nicht
Ich muss nicht alle Zahlen zusammenrechnen
Ich muss die richtigen Zahlen zusammenrechnen
Also mal angenommen
Ich such mir jetzt alle Zahlen raus
Mit Sternchen
So dann finde ich die Zahlen und die Zahlen und
Da finde ich dann die Zahlen die Zahlen
So und jetzt muss ich gucken
Dass
Dass ich nicht aus Versehen die Zahlen mit dieser Zahl rechne
Und so
Also ich muss im Endeffekt gucken welche Zahl
Steht oben drüber
Steht unten drunter
Oh fuck ich
Ne mal muss ich rechnen
Ich muss 4, 6, 7 mal 35 rechnen
Aber nicht etwa
Mal 6
Boah kack also
Gibt es da irgendeinen Trick
Also
Ja easy
Wartet mal
Wartet mal
Ich habe eine Idee
Wir müssen
Doch ich habe eine Idee
Wir müssten das hier erweitern
Und dann
Und zwar
Sowas mit Breite und Höhe oder so
Also nicht wirklich die Selection
Wir bräuchten
Aber der Index muss nicht identisch sein
Guck hier ist der Index ganz woanders
Also wir bräuchten
Wir bräuchten hierfür
Wir bräuchten hierfür nicht einfach nur Text
Wir bräuchten hierfür quasi
Eine
Wir bräuchten Selections
Wir bräuchten Selections für jede
Für das hier für Surrounding Text
Und dann müsste ich gucken
Überschneiden sich Selections
Reicht das überhaupt
Der Index vom Symbol
Das ist eine gute Idee
Das ist eine gute Idee Chat
Das ist eine gute Idee
Index vom Symbol
Das ist gut
Wir müssen uns im Endeffekt
Ok ok
Wir müssten
Hier
Hier müssten wir quasi noch
Den Index im ursprünglichen Text
Uns merken
Und dann müssen wir uns im Endeffekt
Und dann
Überprüfen
Ob zwei Zahlen
Das gleiche
Das gleiche Sternchen sich teilen
Im Endeffekt
Also wir können quasi das behalten
So wie es ist
An der Stelle ist das blöd
Wir können das so behalten wie es ist
Nur dass wir hier
Da wo wir Surrounding Text kriegen
Wir brauchen nicht Surrounding Text
Wir brauchen
Surrounding Text
Plus Index
Doch doch doch wir machen jetzt
Das machen wir das nächste Mal
Da habe ich heute kein Hirn für
Ich überlege nur schon mal
Stimmt wir brauchen Surrounding Text
Also wir brauchen quasi dann nicht nur den Text
Sondern Text plus Index
Und wir können uns das hier
Im Endeffekt auch sparen
Sondern wir müssen einfach gucken
Ob ein Sternchen da ist
Das heißt wir brauchen dann
Sowas wie
Keine Ahnung Records
Eigentlich gar nicht
Eigentlich gar nicht
Eigentlich brauchen wir hier nur noch die Positions
Von dem Sternchen
Eigentlich bräuchten wir hier nur die Position
Von dem Sternchen zurück zu geben
Und uns das merken
Und dann gucken
Okay hey das ist doch gar nicht so kompliziert
Wie ich gedacht habe
Wir müssen uns hier die Position von dem Sternchen
Raussuchen und dann am Ende gucken
Welche Zahlen
Teilen sich
Einen gemeinsamen Sternchen Index
Das müssen wir machen
Also machen wir nicht jetzt
Wir müssen uns hier die Position von dem Sternchen raussuchen
Sondern jetzt gucken wir uns Dockge an
Also fast bringt wahrscheinlich nichts
Wobei
Ja egal
Gucken wir was nächstes Mal
Mein Hirn ist aufgebraucht
Wir gucken uns jetzt was einfaches an
Gucken wir uns jetzt Dockge an
Das wollte ich mir nämlich die ganze Zeit schon angucken
Sogar gestern schon
Aber gestern habe ich es nicht auf die Reihe gekriegt
Dockge ist ein Web Interface für Docker
Es gibt sogar ein Video zu
Aha
Das habe ich schon mal angehabt
Got it
Okay
Wir gucken uns das einfach ohne Video an
Dockge
Chat ich muss mal kurz was essen
Ich habe Hunger
Lass mich mal kurz was futtern
Damit ich wieder Brain Kapazität frei habe
Dockge angucken
Und was trinken
Korrekt
Excellent
Chat können wir uns irgendein ordentliches
Haben wir irgendein schönes Video was ich gucken kann
Während ich am futtern bin
Haben wir denn hier noch übrig
Google Suche stirbt
Warum du nicht mehr findest bei Google
Weil sinnloser Spam überall
Das Slow Death of Windows
Ist das so
Habe ich ja meine Zweifel
Okay komm
Scheiß drauf
Was ist das
Software Engineer
BMW Stress für den Algorithmus
Okay komm
Komm mal das
Okay komm
Komm mal das
Wurde auch erst vor 5 Tagen veröffentlicht
Alles klar
Leute ich muss mal kurz was essen
Dann machen wir weiter
Das große Ziel meines Programms ist es quasi dem Fahrzeug beizube-
Was?
Das große Tier?
Also was haben wir denn hier
Tobias ist Doktorand bei BMW in München und arbeitet im Bereich Software Engineering
Für seine Doktorarbeit versucht er einen schon existierenden
Kamerabasierten Algorithmus so zu verbessern
Das das Fahrzeug weiß wo es sich genau befindet
Macht man das nicht eigentlich über GPS?
Zu gucken wo man sich befindet?
Der Algorithmus soll eine Zentimeter genaue Lokalisation des Fahrzeuges sein
Hat man dafür nicht GPS?
Ich meine okay über GPS kann man vielleicht keine Doktorarbeit schreiben aber
GPS und Parkhaus und Tunnel
Achso
Ja ihr habt Recht
Aber im Parkhaus dürfte es auch enorm schwierig werden nur mit Kameras festzustellen in welchem Parkhaus man jetzt ist
Egal wir werden es ja vielleicht lernen in dem Video
Gucken wir mal
Wupp Wupp Wupp
Das große Ziel meines Programms ist es quasi
Ich verstehe immer das große Tiere meines Programms
Was sagt der?
Das Ziel?
Ich verstehe große Tiere
Das große Ziel meines
Der sagt Tiere
Mein Ohr ist einfach nicht up to date
Das Ziel ist es quasi dem Fahrzeug beizubringen wie ein Mensch sich in der Umgebung zu orientieren oder beziehungsweise orientieren zu können
Hoffentlich funktioniert es dann auch
Aber ich würde sagen links, mitte, rechts, mitte, rechts
Jetzt ist es nochmal schon kritischer Punkt hier
Jetzt kommen wir aus dem Tunnel raus und ins Helle rein
Schief gehen könnte das die Technik einfach nichts aufzeichnet
Hi ich bin der Tobias und ich arbeite bei BMW im Bereich Software Engineering
Hi
Und heute würde ich gerne auf eine Testfahr gehen um zu überprüfen
Ob mein Programm das ich programmiert habe nicht nur im PC funktioniert
Sondern auch in der realen Welt funktioniert
Tabelmanagement wozu?
Das ist irgendein Testaufbau der danach wieder rausfliegt
Haben wir nicht schon mal sowas geguckt?
Wo die mit einem Tablet im Altersheim waren?
Erinnert ihr euch noch?
Da war doch was
Da waren die mit einem Tablet im Altersheim
Das ist das einzige was ich mir gemerkt habe
Es ist sehr unwahrscheinlich dass ein Programm auf Anhieb funktioniert
Und dann besteht ein Großteil der Arbeit als
Außer es ist written in Rust
Dann ist ja belegt dass es immer instant funktioniert
Und blazingly fast ist
In der Problemlösung um eben diese Programme die man am Anfang geschrieben hat dann auch wirklich zum Laufen zu bringen
Ich esse Toastbrot
Stimmt die Fußballer App hatten wir auch schon
Und bereit
Fast
Wir schauen kurz rauf würde ich sagen
Versprechen kurz
Genau
Ich glaube wir haben 7er BMW heute
Komm kurz drüber einfach
Ist das teuer?
Chat ich habe keine Ahnung von Autos
Ist ein 7er BMW teuer?
Das ist ein Stehtisch
Da kann man sich ein bisschen hinstellen
Da kann man die Route besprechen genau
Da können wir jetzt sehen wo es geht
Ja ok
Besonders interessant für mich sind zum einen hier der P-Tunnel
Weil eben das System ja unterstützen soll wenn zum Beispiel GPS ausfällt oder ähnliches
Und da ist im Tunnel ganz interessant
Das da einfach eine Situation mit drin ist in der ich eben Sensor Ausfall simuliere
Und im Tunnel ist halt kein GPS vorhanden
Wo du mir eigentlich am meisten noch während der Fahrt helfen kannst ist dann mich hier durchzulotsen
Das wir dann hier wieder rauskommen
Das könnte sein das ich da ein bisschen Probleme bekomme
Genau und sonst eigentlich
Wäre es cool wenn du einfach ein bisschen mitschaust und unterstützt
Klar
Zu BMW bin ich gekommen in dem ich nach einer Werkstudentenstelle Ausschlag gehalten habe
Und ich wollte irgendwas mit Karten machen
Ich wollte mich mit kartenbasierten Informationen beschäftigen
Und vielleicht auch irgendwie in eine größere Firma kommen
Und dann bin ich eben auf BMW gekommen
Und habe dann eine Stellenanzeige gefunden wo es um Speedlimits in Kartendatenmaterial ging
Schauen wir mal in den Keller runter und suchen den Schlüsselkasten
Da habe ich letztens
Da haben wir uns im Stream ja auch mit Speedlimits und Kartenmaterial beschäftigt
Ihr erinnert euch vielleicht noch Dunkel
Wo ich das Plugin für mein Garmin
Fahrradcomputer programmiert habe
Da wollte ich ja auch gucken
Ob man nicht irgendwie von der AP das Speedlimit zur GPS Position abfragen kann
Und ja das ging aber es war nur sehr umständlich
Und ich habe da nie weiter gemacht an der Stelle
Also ich gehe mal davon aus bei denen muss das etwas professioneller laufen als bei mir
Und dann können wir starten
Weil Windows Logik Theo
Das versteht keiner wahrscheinlich nicht mal Microsoft ZEPS
M-C-I-95-E
Pass Pass
Laut dem Ding ist ja irgendwo da hinten gestanden
Ah da ist ja das Fahrzeug
Da steht er in der Ecke
Dann äh ja
Schön beleuchtetes Parkhaus
Ah guck mal
Elektroauto
Ogu
Wir haben hier im Kofferraum noch ein bisschen mehr Technik verbaut
Ich glaube das sind hier die Datenlogger
Das heißt hier werden die Daten vom Bordnetz aufgezeichnet
Im Fahrzeug
Genau
Die wir später auswerten können
Aber für mich die eigentlich wichtige Technik ist vor dem Fahrzeug verbaut
Und zwar würde es hier um diese Kamera gehen in der Windschutzscheibe
Die Kamera ist in momentan jedem BMW-Fahrzeug verbaut
Und deswegen ist es sehr interessant für BMW diese Kamera deutlich mehr zu verwenden als sie aktuell verwendet wird
Aktuell wird sie eigentlich hauptsächlich dafür verwendet um den Abstand zum Vordermann abzuschätzen
Oder um die Spurmarkierungen zu erkennen
Ja
Und um eben die Kamera mehr...
Hat tatsächlich mein Fiat auch
Man kann auch Verkehrsschilder und so Zeug erkennen
Funktioniert auch recht gut
Einzubinden da sie schon vorhanden ist überall
Möchten wir auch untersuchen ob sie für den Lokalisationsalgorithmus oder für die Lokalisationsmethodik verwendbar ist
Ich habe im Studium Fahrzeuglokalisation gehabt
Das hat mich dann sehr interessiert
Und deswegen habe ich auch dann die Masterarbeit bei BMW angenommen dann
Wo es eben um Fahrzeuglokalisation in Parkgaragen gegangen ist
Und dann durfte ich sechs Monate lang bei BMW meine Masterarbeit schreiben
Und aus dieser Masterarbeit ist dann quasi konsekutiv hervorgegangen
Dass ich meine Promotion dann mit einem ähnlichen Thema wie ich eine Masterarbeit hatte dann fortsetzen konnte
Ich möchte euch offiziell zu meinem neuen Masterstudenten vorstellen
Das ist Alan Thomas
Er ist schon seit eineinhalb Wochen hier
Aber wir hatten nicht die Chance euch alle offiziell zu vorstellen
Wir sitzen alle in einem Boot
Ich kann als Software-Ingenieur arbeiten
Weil das ingenieurtechnische Wissen das ich aus meinem Studium mitgenommen habe
Muss irgendwie auch den Computern beziehungsweise der Technik beigebracht werden
Zum einen wissen
Okay was möchte ich an der einen Hand was ich mir geistig überlegt habe umsetzen
Was brauche ich hier
Und zum anderen was kann denn überhaupt die Programmierung
Was kann jetzt mein Rechner was kann der Sensor den ich einsetzen möchte
Wie kann ich das zusammenbringen
Und deswegen ist dieses Software
Ist das ein Ubuntu oder was hat er da am Start
Das sieht ein bisschen nach Ubuntu Desktop aus
Hier mit der Zeile neben und so
Auf jeden Fall Gnome
Ja die geben ihren Leuten wenigstens gescheite Notebooks und gescheite Betriebssysteme um darauf zu arbeiten
Also insofern finde ich das schon mal top
Der Development auch ein sehr großes Feld
Oh Gott mal da
C++
Das wäre ja schon mal wieder abgetönt für mich
Aber gut für Embedded Autogramm C++ verstehe ich ja noch irgendwo
Wo man nicht nur das Wissen braucht wie ein Computer funktioniert
Sondern eben auch viel viel mehr zusammenbringen muss
Die Ideen von der mathematischen Seite die Ideen von Ingenieurseite
Die Ideen von irgendwelchen Kunden vielleicht
Ich weiß mir gar nicht
Wo ich mir mehr Gedanken drüber machen soll
Das SpaceX mit Javascript in Weltall fliegt
Oder das BMW Sachen auf C++ Basis funktionieren
Ich meine seriös die Ernsthaft beides ist kein Problem
Ja die ganzen SpaceX Terminals und sowas in der Rakete auch
Das ist alles irgendeine Elektronen Javascript Geschichte
Aber es gibt auch Buttons dafür
Falls das noch nicht verstanden ist
Falls es mal wieder nicht funktioniert
Auf der rechten Seite sieht man eben das Eingangsmaterial
Und da sieht man hier dann das ist die Bilder die aus der Frontkamera vom Fahrzeug kommen
Und die grünen Vierecke die hier sind sind die extrahierten Features
Und die Idee ist des Programms sich über diese Features Schritt für Schritt
Bei jedem Bild nach vorne zu hangeln
Und so die Position immer von der vorhergehenden ausgehend dann zu berechnen
Jetzt verstehe ich auch
Jetzt verstehe ich auch was der vorhat
Jetzt ergibt das ja auch Sinn
Die gucken per GPS wo ist das Auto
Und dann fahren die kurzzeitig in irgendwas rein wie den Tunnel zum Beispiel
Oder im Parkhaus wo GPS nicht funktioniert
So und jetzt willst du weiterhin orten wo das Auto ist
Das heißt die Kamera läuft ja die ganze Zeit mit
Und die versuchen quasi so zu extrapolieren
Quasi die Position anhand der Merkmale auf dem Bild
Wie die so an der Kamera vorbeiziehen
Ich meine das funktioniert natürlich umso schlechter umso länger
Es kein GPS Signal gibt
Aber für so ein paar Meter nur geradeaus und so
Kann ich mir durchaus vorstellen dass das funktioniert
Smarty McFly danke für den Sub
Wupp Wupp Wupp Wupp Wupp Wupp
Auf diesem Testdatenmaterial wird dieser Fehler angezeigt
Und jetzt wird er angezeigt
Und jetzt wird er angezeigt
Könnte vielleicht auch C++ liegen
Auf der Testfahrt möchte ich einfach eigenes Datenmaterial erzeugen
Auf dem ich dann sicher sein kann
Okay hier und hier habe ich das gemacht
Weil ich bin das Fahrzeug gefahren
Also wenn die Testfahrt jetzt nicht erfolgreich sein sollte
Müsste ich sie dann in der Folge wiederholen
Und dann musste ich alles nochmal vorbereiten
Und nochmal Zeit investieren
Wenn ich da zu lange brauche dann kann ich am Ende nicht mehr auf die Daten zugreifen
Und ich kann auch nicht mehr auf das BMW Equipment zugreifen
Und müsste dann eigentlich mit dem weiterarbeiten
Was ich schon erstellt habe
Beziehungsweise ausgewertet habe
Aber wenn es nicht ausreichend ist
Kann es am Ende auch bedeuten
Dass ich meine Doktortitel nicht bekomme
Wieso hat der Bildschirm und benutzt sie nicht?
Wahrscheinlich weil das ein Wechselarbeitsplatz ist
Technik einfach nichts aufzeichnet
Dass wir am Ende gar zwar die Strecke abgefahren haben
Aber keine Daten haben
Das wäre natürlich der Worst Case
Ähm und sonst
Und sonst könnte noch schief gehen
Dass vom Verkehr her vielleicht das nicht möglich ist
Dass ich meine Manöver fahren kann
Deswegen bin ich schon zwar guter Dinge
Aber ein bisschen nervös doch ob wirklich alles hinhaut
Also dann fahren wir mal raus
Gucken ob der Ausweis funktioniert
Also wenn dann die Situationen kommen
Ist es wichtig dass wir darauf achten
Dass wir ordentlich die Zeit beschreiben
Der andere hat keinen Bock
Ich glaube der andere versucht sich einfach ein bisschen zurückzuhalten
Weil es halt ein Fernsehbeitrag
Na crasht jetzt
Weil es halt ein Fernsehbeitrag über den anderen Typ ist
Bleiben oder mitdenken
Vor allem was wir gemacht haben
Deswegen wollen wir ganz wichtig darauf achten
Welche Zeit startet das Manöver
Um es anschließend dann in den Testdaten
Genau auslesen zu können
Wann wir da gucken müssen
Und zum anderen
Dass wir die Manöver ordentlich fahren
Konzentriert fahren
Dass man das dann in der Auswertung gut vergleichen kann
Und natürlich dass wir während der Fahrt keinen Unfall bauen
So fertig erst
Man kennt es vielleicht auch vom normalen Navigationsgerät
Wenn man im Urlaub in den Alpen oder so durch den Tunnel durchfährt
Dass das Navigationsgerät sagt
Okay wir fahren einfach geradeaus weiter
Obwohl es dann gar nicht stimmt
Weil einfach keine Verbindung zu den Satelliten hergestellt werden kann
Diesen Ausfall möchten wir überbrücken
Indem wir mit meinem System dann hier eben reingehen
Hoffentlich
Ich finde das ist eine gute Idee
Funktioniert dann auch
Also jetzt sind wir hier
Und als Doktor musst du schon ein bisschen pfeifert sein
Mit dem Manöver starten
Sobald es dann dreispurig wird
Aber ich würde sagen
Links
Mitte
Rechts
Mitte
Rechts
Oder so
Ich muss mich gerade kurz konzentrieren
Dass ich hier rauskomme
So genau
Also jetzt musste ich
Gerade darauf achten
Einmal dass ich den Verkehr nicht störe
Und da keinen Unfall provoziere
Jetzt ist es nochmal so ein kritischer Punkt
Jetzt kommen wir aus dem Tunnel raus
Und ins Helle rein
Und das sind auch immer dann interessante Wechsel für die Kamera
Die Kamera muss sich genauso wie der Mensch
Auch erstmal an das Licht quasi gewöhnen
Und das sind kurze Bereiche
Wo es eben dann zu Abbrüchen in der Lokalisation kommen kann
Wie wir das machen mit Kameras
Hat er ja vorhin versucht zu erklären
Die Kamera läuft ja die ganze Zeit
Und er versucht dann quasi in dem Bild
Bestimmte Merkmale zu erkennen
Und die dann quasi von Bild zu Bild
Zu tracken
Bis sie halt aus dem Bild rausgehen
So würde ich es mal beschreiben
Also er erkennt dann diese
Keine Ahnung
Da ist eine Ampel
Da ist irgendwie ein Schild
Da ist irgendwie was
Und die bewegen sich ja von Bild zu Bild
Und anhand dessen kann man tracken wo man sich befindet
Also
Es klingt schon irgendwie nachvollziehbar
Klingt aber auch nicht gerade easy
Das ist jetzt auch gut
Jetzt kommen wir nämlich in den Bereich rein
Wo links und rechts die Lärmschutzwände sind
Das heißt wir haben dann deutlich mehr Punkte wahrscheinlich rundum
Und wenn dann der LKW vorne dran ist
Dann ist es durchaus interessant
Was dann aus der Sicht fällt tatsächlich
Ganz ehrlich wenn ich das Auto so sehen würde
Würde ich gar nicht vermuten
Dass es einfach 150k kostet
Anpel danke schon für den Sub
Ja lief ziemlich gut würde ich sagen
Wir haben mehr Situationen gefunden
Als wir davor gedacht haben
Da ist ein LKW vor uns gefahren
Und da haben wir mal gesagt
Okay fahren wir mal hinterher
Und gucken ob das irgendwelche Auswirkungen hat
Vielleicht auf das Punktfeld
Oder auf den Blickwinkel den wir aus dem Fahrzeug raus haben
Ich hoffe das das Datenmaterial auch dementsprechend gut ist
Und genau sonst
Mehr sehen wir dann sobald ich die Daten habe
Natürlich möchte ich nicht nur die wissenschaftliche Seite bedienen
Wie heute bekommt er die Auswertung
Wie jetzt haben die da nicht gleich irgendwie
Das Ding mitgenommen mit den Daten
Cool was bei BMW auch oft möglich ist
Das Promotionsthemen nach dem Abschluss der Promotion
Ganz oft auch in der Serienentwicklung landen
Und man dann eben auch wenn es dann am Ende funktioniert
Stolz darauf sein kann
Das an dem man seine Doktorarbeit geschrieben hat
Serienanwendung in einem Fahrzeug gefunden hat
Und dann muss man sich auch vorstellen
Wie das Ganze aussieht
Teams am Start
Ein bisschen nervös bin ich schon
Ist natürlich jetzt sehr entscheidend oder sehr interessant
Was dabei wirklich herausgekommen ist
Ob es jetzt funktioniert ob es nicht funktioniert
Aber ich bin guter Dinge
Dass es schon einen positiven Ausgang hat
Ich bin gespannt
Und hier die Punktwolke, die sich entwickelt.
Das haben wir doch jetzt noch mal gestellt für den Beitrag, oder?
Der wird sich das doch im Vorfeld angeguckt haben, was da rausgekommen ist.
Und nicht erst, wenn er Rücksprache mit seinem Chef hat.
Ups, hat nicht funktioniert.
Aber genau, da sind wir jetzt hier, weil hier die meisten Punkte leider auf dem LKW gefunden werden.
Oder hier auf bewegten Objekten und gar nicht auf den stabilen Sachen hier.
Das sieht man auch, weil der LKW sich wegbewegt vom Fahrzeug.
Fährt er hier nach hinten anstatt nach vorne?
Das ist schlecht.
Okay, das heißt, die müsste man einerseits filtern.
Ein paar Punkte sieht schon gut aus.
Der hier wäre cool, aber bei der Masse von anderen Punkten, dann haben die kein Gewicht auf die Lokalisation.
Genau, das heißt, du brauchst mehr Punkte und du musst die schlechten Punkte rausfiltern.
Genau, ich brauche vor allem viel mehr Punkte auf Sachen.
Also, die sich nicht bewegen.
Ich würde dann tatsächlich vielleicht nochmal mit dem Power nochmal ein Treffen vereinbaren.
Und dann wirklich die Punkte ansprechen, also auch das Bild zeigen.
Und dann die Punkte ansprechen.
Welchen Teil würdest du dann genau austauschen?
Den Feature-Extraktor, also den Open-Source-Orb-Extraktor rausnehmen.
Und dann den BMW in der Form.
Was richtig, richtig teures Closed-Source rein.
Von SAP.
Und Oracle.
Das es auch gleich 800k plus kostet.
Vom Power und seinem Team entwickelten Extraktor dann einbauen.
Achso, doch nicht.
Und wird das jetzt weiter feilen, bis das ein gutes Ergebnis, also auch algorithmisch ein gutes Ergebnis rauskommt.
Und das sind genau die richtigen Schritte in die Richtung.
Es ist ganz gut, dass das trotzdem passiert ist.
Also, dass genau diese Situation mit dem LKW in dem Einfahrtsbereich von dem Tunnel.
Weil wir damit vielleicht sonst anders vielleicht gar nicht auf dieses Problem gestoßen wären.
Und jetzt haben wir eben genau dieses Problem gefunden.
Und können noch in einem relativ frühen...
Ja, macht ja auch Sinn.
Ich meine, dass das alles First Drive funktioniert, ist ja nicht davon auszugehen.
Und so vielleicht spätere Probleme dann jetzt schon angehen.
Wenn ihr wissen wollt, wie es ist, Software-Engineering zu studieren, dann klickt hier.
Und wenn ihr mehr Inhalte...
So, jetzt wissen wir bescheid, wie es bei BMW läuft.
Passt dazu Mario Kart Musik.
Und jetzt gucken wir uns Docke an.
Ja.
Ja.
Oh Leute, ich muss jetzt noch mal kurz was Süßes futtern.
Was haben wir denn hier noch?
Ich habe immer noch die Lidl Nikolaustüte da.
Also, letztens habe ich den Milka Nikolaus gefuttert.
Dann das andere Zeug.
Ich habe jetzt noch übrig, pass mal auf, eine Sache ist noch drin.
Und zwar steht nicht drauf, was es ist.
Geil.
Doch.
Das ist...
Wie heißt das?
Ich bin zu dumm, das auszulesen.
Mi...
Miki...
Nussecken.
Nussecken.
Irgendwas mit Nussecken.
Irgendwie Miki, Nussecken, was weiß ich.
Lidl Zeug.
Oder Edeka?
Ich weiß es keiner mehr genau.
Ich glaube Lidl.
Warte mal, hier.
Lidl Nussecken.
Äh...
Die da.
Exakt genau die sind das.
Meine sehen aber nicht so gut aus, wie auf dem Bild.
Meine sehen viel gestauchter aus, als auf dem Bild.
Na egal, muss ich jetzt eins futtern.
Easy.
Ah, das ist Mininus.
Echt nicht Miki.
Und noch einer.
Ah.
Und noch einer.
Sind 20 Stück oder so drin.
Ich war gestern wieder rennen, da habe ich genug Kalorien verbraucht, dass ich heute
mal 3-4 Nussecken fressen kann.
Und morgen früh wieder.
Wie sieht es aus mit der Freundin?
Mit der Freundin?
Mit der Freundin?
Mit der Freundin?
Mit der Freundin?
Mit der Freundin?
Mit der Freundin?
Mit der Freundin?
Mit der Freundin?
Mit der Freundin?
Mit der Freundin?
Mit der Freundin?
Mit der Freundin?
Mit der...
Auf welche spielst du an?
Nussecken.
Ok, auch geht.
Genug Nussecken gefressen.
Potman i!
Monkeess.
Ich werde mal...
Einen Snapshot machen.
Ah, das muss man...
Muss man das irgendwie als Rute laufen lassen?
Oder so...
Archlinux ist supported!
Easy!
Dann ist alles gut.
Dann kann ich das ja weiter benutzen.
Gut, dass ich ein...
snapshot gemacht habe ok also wie ok so gut warum eigentlich als gut ich meine ich kann docker auch
ohne gut also wir probieren zwar ohne gut ja mal schauen ob es ohne gut funktioniert mkd
mkd habe ich doch doch doch da müssen wir das hier downloaden immer noch mal hoch mkd stacks
docker compose jammel read carefully geben wir reden wir reden hervor aus port container port
run docker data app data ok ja left steck was was left stacks path gleich gleich gleich weit
stacks passt was also wir wollen das verzehr ich will mal gucken ob das
ohne gut läuft geht deswegen den ports jahr 5001 ist kein problem das muss begleichen verzeichnet
ich habe so meine zweifel dass ich das richtig mache docker compose ab ein docker composer am
start was ist das hier jetzt aber doch gepullt schau mal jetzt bin ich gespannt aufs funst
doch läuft docker ps auf port 5001 ok localhost 5001 doc doc language englisch username admin
passwort 1 2 3 5 6 wer hätte sich das nur gedacht wie jetzt lasst mich das passwort
doch so machen wie ich will ok 1 2 3 4 5 6 sie macht neun sie macht neun das stimmt ok
ok mal ein anderes passwort 1 2 3 kq 1 2 3 das ist okay das ist fein ok und jetzt da grüder ausmachen
guck mal hier hat er richtig advanced schattierungen auf dem kompost button
seht ihr das massive scan stacks folder compose your first stack ja aber das doch mal
stackname nimmt doch 굳은не defaultADDock defolcenter aqa outras
hitzimes will dass deswegen als hochlaufen vielleicht weil das netzwerk
ok ich bin ich bin etwas unschlüssig was ich was ich da eigentlich sehe also das ist im
prinzip und web interface um docker conference files anzulegen oder wie oder was wenn ich
ich jetzt hier add container mach okay container name who am i docker hub können wir auch nehmen
traffic who am i das ist so ein name und da kann ich hier wahrscheinlich image editieren
ok ok das ist quasi ein docker compose bilder das finde ich gar nicht so schlecht nicht dass
man es wirklich bräuchte ehrlich gesagt docker compose falls sind jetzt ja nicht so kompliziert
aber wir testen es jetzt einfach mal safe ok das war ein docker compose file in engine
x auf port 8080 und ein terminal keckel aber läuft nicht start also wie portena ich hoffe
nicht weil portena nervt mich immer startet ok hier hat man jetzt
den docker compose file auf port 8080 und ein terminal keckel ok aber läuft nicht start also wie portena ich hoffe nicht weil portena nervt mich immer startet ok hier hat man jetzt
ein terminal kann man ach guck mal man kann sich sogar direkt per shell
attachen das finde ich ganz praktisch active container keckel konsole ich
bezweifle dass ich root bin im container
das filter der garantiert frontendseitig dass das frontendseitig gefiltert ist
so also hier sieht man die log ausgabe man sieht die compose jammer und man
sieht worauf das läuft da kann man drauf klickt man geht's auf ja das ist
super simpel gemacht weil landet man bei nx sondern wir das noch mal anders
virtuelle garage in first time
stop end da unstopped und down löscht wahrscheinlich auch alle volumes und sowas
also docker compose mäßig probiert update es gibt kein neues was ich mal
probieren will ist goin
hours video löscht wahrscheinlich auch alle volumes und sowas also docker compose mäßig probier abt selbst gib kein neues was ich mal probieren will ist adaptations podeis evasipe update sie gibt kein neues was ich mal probieren will ist
was ist denn wenn ich 37 mache läuft es jetzt mit 37
man sieht leider die engine x-version nicht was mich interessiert wenn ich
jetzt sage update da muss man ach moment das ist die docker
compose version ich kack noob was ich da geändert habe das ist ja blödsinn
das ist die docker compose version hier ist image latest das meine ich ein
docker hab engine x image in x official kann man das hier nicht ordentlich copy
pasten bookworm nehmen wir jetzt mal dass sie jetzt ändere
url das brauche ich nicht was ist der unterschied zwischen safe
ok deploy bedeutet
wahrscheinlich safe plus restart oder nicht ja ja ja
glaub schon ach nee man muss auf update nochmal drücken
jetzt haben wir die andere version gepult easy ja funktioniert immer noch
das ist deutlich ich weiß nicht ich finde es jetzt schon deutlich angenehmer
als portena einer ist active null sind gecrashed
keine inactive docker run kann man auch so machen ok da probieren wir das doch
mal
haben wir noch irgendwie der cam champ das wird nicht funktionieren docker run
ubuntu hier debian probieren wir das doch mal aus was er damit was er damit
macht ach nee convert to compose ja das ist das ist unsinnig das also für den
container finde ich aber ganz gut das ist im prinzip zwei sachen
das ist einmal ein docker compose file bilder web interface
und gleichzeitig übersicht ich finde das gar nicht mal übel ehrlichgesagt das ist
etwas kleines übersichtlich ist wofür es da ist ohne jetzt irgendwie auszurufe
wirklich eine ganz gute idee ja wenn du irgendwie peer daheim eine kleine kiste
stehen hast und willst ja deine service ich weiß ganz ehrlich man könnte auch
einfach sein ich mache doch mal kommt post von handlockt mich psh ein und stattet und stoffe den grauen erst 효 hardest verwendet
so ein dann bin ich wohl grad dem urlaub external ab Stress Relief i warte ich bin fertig
Hand, logge mich per SSH ein und starte
und stoppe den Kram von Hand. Also das ist
jetzt auch nicht das Ding. Aber für das, was
es sein soll, ist es glaube ich gar nicht so übel.
Praktisch ist halt auch, dass du fertige
Compose-Decks einfach in den Ordner schmeißt.
Das stimmt wohl, wobei ich
habe noch nie fertige Compose-Decks verwendet.
Ich mache die Dinger immer neu, dass ich auch weiß,
was da drin ist und was sie
da machen. Was mich
jetzt noch interessieren würde ist,
Docker PS.
Welches?
Ah, das ist am
Default-Docker-Interface, würde ich
sagen.
Kann man von einem Git-Repo bilden?
Ermutlich nicht.
Aber wir können es mal ausprobieren.
Da bin ich mir aber aus dem Kopf gar nicht sicher, wie das
funktioniert. Da muss man irgendwie ein Bild reinschreiben
in das... Okay, wir
packen einfach in den Stack nochmal einen Container dabei.
Max, wir probieren
das mal aus. Wie heißt
dein Projekt nochmal? Snap? Ne, nicht
Snap. Du weißt, was ich meine. Das mit dem
Wake-on-LAN. Das gibt es doch bestimmt auch als Docker-Container.
Ähm...
Upsnap.
Docker-File. Ist doch hier.
Arch-Linux, by the way.
Okay.
Dann probieren wir das
doch mal aus.
Neuer Container.
Hat zwar jetzt da drin in dem Stack nichts
wirklich zu suchen.
Okay. Also man kann nur
die... Ich muss Docker-Compose
build. Weiß ich
beim besten
Willen nicht, wie das funktioniert.
Da muss man doch sagen,
irgendwie, man muss doch irgendwie
so einen Bild-Eintrag machen und dann irgendwie
das hier reinschreiben mit dem
Docker-File irgendwie, ne?
Das benutze ich so gut wie nie.
Understanding. Building Docker-Image
with Docker-Compose. Alles klar.
Alter. Ich... Nein.
Ey. Geht mir nicht auf den Sack.
Doch, doch. Du kannst in Docker-Compose
kannst du irgendwelche Bild-Files
angeben. Genau. So.
Path.
To-Docker-File.
Da brauchen wir jetzt wahrscheinlich
die
RAW-URL, dass
das funktioniert.
Aber Moment, Max.
Das funktioniert überhaupt nicht mit deinem Projekt, weil
Target-US und Target-Arch
ist natürlich nicht gesetzt, ne?
Das kann
nicht funktionieren.
Da müssten wir selbst angeben.
Aber man könnte, also man
könnte wahrscheinlich schon
hier den Build
File reinschreiben.
Wollen wir mal.
Gucken. Gucken, was passiert.
Komm.
Wir, wir, wir machen das mal anders.
Wir funsten. Das haben wir hier. Edit.
Das löschen wir mal.
Save. Machen jetzt hier ein neues.
Bloop. Container.
Edit.
So. Dann wollen wir kein Image, sondern
Build.
Mit dem File. Da sollte er uns zumindest sagen.
Hier. Port.
Ah. Port. Brauchen wir nicht. So.
Save.
Und Start.
Ja. Das würde
funktionieren. Kann man, aber er kann's nicht
automatisch. Also, das fehlt
jetzt, weil wir die Variable nicht gesetzt haben, ne? Aber
du kannst das, du kannst
den Webinterface eintragen. Aber auf der anderen
Seite. Ah, ich müsste, was muss ich nehmen?
Dev.
Also quasi
Dev.
Excellent. High IQ. Systema.
Professional Modgis.
Save.
Start.
Wow.
Ne, das mag er nicht.
Fail to compute cache key.
Ich glaube, das ist ein Problem
von dem Dockerfile.
Das ist für GitHub Actions oder so
ausgelegt, aber nicht um Lokale zu bilden.
Also prinzipiell scheint es aber zu
funktionieren, dass man damit auch
Images bauen lassen kann.
Was ja auch irgendwie logisch ist.
Es ist ja im Endeffekt nur ein
Webinterface
Docker Compose.
Ich muss euch ehrlich sagen, ich find das vom Ansatz her
gar nicht übel. Das ist,
deswegen hab ich dort auch gesagt, wir machen dort mehrere Sachen
on stream, weil viel gibt's hier ja nicht
anzugucken.
Aber ich finde, also die Sache
wofür es ist, ist echt nicht
verkehrt. Was macht denn Stop and Down?
Es macht auf jeden Fall nicht Delete.
Es löscht wahrscheinlich nur alle
Volumes und Netzwerkinterfaces und sowas.
Ja, genau.
Löscht den Container und Netzwerk.
Das ist ne gute Idee.
Dogege.
Wie auch immer auf den Namen gekommen ist. Hört sich fast ein bisschen an
wie nen Twitch Emote.
Vielleicht ist er von
Doge draufgekommen.
Ich weiß
nicht, was ich da mehr ausprobieren soll.
Du kannst halt Docker Compose
Files erstellen übers Webinterface.
Ich mein, was wir mal machen könnten
noch ist,
was Docker Graphical Environment
was?
Gibt es eine unkomplizierte
Möglichkeit Docker Compose Stack
per GitOps zu managen?
Du meinst sowas wie
Argo CD
für Docker Compose
naja
GitHub Actions
oder irgendwas anderes
was bei euch
serverseitig läuft und dann das Deployment macht?
Also ich bin mir
ich weiß nicht, ob es da irgendwas fertiges
gibt. Wenn ihr da
Compose Files, die man automatisch dahin
legt. Das probieren wir jetzt mal aus.
Das ist ne gute Idee. Also angeblich
geht das ja.
Das probieren wir mal tatsächlich aus.
Ähm
Decks
Kekkel Stack ist da.
Dann machen wir jetzt mal hier mkdir
der lulw Stack
Ja
Compose YAML
Das ist der lulw Stack
der allerdings andere Ports braucht, weil ansonsten
das innen kann er
funsten. Wunderbar.
So und jetzt
Scan Stacks Folder
Tatsächlich
Checkte. Also man kann es auch
von Hand editieren und so. Das finde ich
ist auch ein gutes Feature. Start
Started
Jetzt
Localhost Port 8001
Funst
Das Projekt ist 2 Wochen alt? Echt?
Der ist aber super aktiv
da an der Lute.
Naja nicht ganz. Nicht ganz.
Scheint schon etwas
älter zu sein. Ok
3, sagen wir mal so
Ok, ja
Oktober, November
Also sagen wir mal, runden wir mal auf
sagen wir mal 2, ok sagen wir mal 2,5 Monate
Ok
Der hat bestimmt auch mal bald so viele
Sterne wie der Fiat Champ
Vor allem im Umgang mit den Issues
kann man sich vom Fiat Champ
echt noch was abschneiden, ja
Weil es gibt ja keine Fehler, also gibt's
auch keine Issues
Ich find das, ich find das gut
Was passiert wenn ich hier delete und das vorher importiert
hab? Dann löscht
er den ganzen Ordner, gell?
Ja, jetzt der ganze Ordner
weg
Also für das, was es sein soll, find ich
gut. Wie bekomme ich
das hin, dass beim Docker
compose build immer die Datenbank
getroppt wird und neu importiert
wird? Puh
Du
Also, ich kann dir sagen, wie ich's
in Kubernetes machen würde
Aber ich weiß nicht
Gibt es sowas wie
Init container in Docker
Compose?
Das weiß ich nicht, ob's da sowas gibt
Ich mein
Was du machen kannst ist
Du kannst mehrere Container
Du kannst mehrere Container starten
Also mit, ich sag dir
wie ich's mit Kubernetes machen würde
Kubernetes Init
Container kannst du machen
Das wird vor dem
vor dem eigentlichen Start kannst du Container
mit Custom Scripts ausführen, easy
Aber mit
Docker Compose weiß ich nicht
Docker Compose
Custom Scripts, also du kannst immer
noch einen zweiten Container reinpacken
Oder
Du baust ein eigenes Image
Ja, das ist mir
auch gerade so. Ja guck
Hier machen sie's doch
Du startest einfach bei
Also bei Kubernetes ist das halt deutlich einfacher
Weil alles was im
gleichen Pod läuft
Hat halt die gleichen Ressourcen drin
Also du kannst das gleiche Filesystem und alles zugreifen
Eigenes Image
bauen klingt allerdings auch ganz sinnig
Aber weißt du
wie ich das machen würde?
Ich würde mein Datenbankmanagement
komplett aus Docker rauslassen
Ich würde die Datenbank
einfach
vorher von Hand droppen
Dann machst du dir im Zweifelsfall
Legst du dir ein Skript an und sagst
Irgendwie, ja
Neuaufbau.sh
Oder recreate.sh
Was dann zuerst dir
Vorher eine Abfrage macht
Wollen sie das wirklich tun?
Und dann
Postgres CLI
Dingsbums Drop macht
Ich würde es wahrscheinlich gar nicht in Container einbauen
Ehrlich gesagt
Richtig, genau, tatsächlich
So würde ich es auch machen
Ich würde mein Datenbankmanagement aus Postgres rauslassen
Wenn du das ganze
Per Terraform machst in irgendeiner Cloud Umgebung
Könntest du das dort einbauen
Quasi Infrastruktur einmal resetten
Und dann neue Images starten
Aber das ist natürlich
Wahrscheinlich eher nicht
Also wenn es lokal bei dir ist würde ich es nicht in Docker einbauen
Ich würde mein Datenbankmanagement rauslassen
aus Docker
Docke
Chat
Was könnten wir noch ausprobieren?
Ich glaube das war es
Deswegen habe ich mir heute auch zwei Themen für den Stream überlegt
Weil ich mir gedacht habe
Wenn wir jetzt irgendwie komplexere
Compose Sachen zusammen klicken
Doch wir gucken uns doch mal an
Aber bringt es jetzt halt auch nicht
Weil das wird alles können was Docker Compose halt kann
Aber ich finde es schön dass es so eine Art
Idiotensicherer
Docker Compose
Bilder ist
Und gleichzeitig was zum Status anzeigen
Finde ich eigentlich ganz gut
Man kann verschiedene Ports hinzufügen
Verschiedene Volumes hinzufügen
Restart Policy
Environment Variablen
Container Dependencies
Verwende ich nie
Habe ich glaube ich noch nie verwendet
Da kann man zum Beispiel einstellen das der eine nach dem anderen starten soll
Und sowas
Url Local Host
Keck W Punkt
Services
Ach ok
Ah ich dachte das kann man jetzt hier anklicken
Und wo steht jetzt
Wo steht jetzt die Url hier
Ach hier oben
Ah cool
Das ist eine gute Idee
Da kann man Services hinterlegen
HTTPS
Also ganz funktionieren tut es aber noch nicht
Oder
Doch man muss da einfach nur refreshen
Ja
Eigentlich eine gute Idee
Auch schön das er die nicht irgendwo anders zwischen speichert
Sondern direkt im Compose File
So als Custom Resource
Ding
Also
Man hatte hier Shell Access
Ich bin unschlüssig wie
Ob das kleinseitig gecheckt wird
Aber das ist ja auch schon mal
Einfach mal unabhängig davon
Das würde ich auf jeden Fall
Nicht einfach so auf meinem
Home Server laufen lassen
Ich meine daheim
Wenn ihr die einzigen seid
Also das würde ich nicht einfach so offen laufen lassen
Da würde ich in irgendeiner Art und Weise
Noch was davor packen
Ich meine ja du hast ja eh
Authentifizierung Login Krempel
Aber wie sicher der ist
Weiß man ja nicht
Also vielleicht vielleicht tatsächlich nicht
Irgendeine Reverse Proxy oder sowas davor
Aber die Idee finde ich gut
Gefällt mir
Also wenn ich mal in irgendeiner Art und Weise
Ich weiß nicht für was ich es brauchen könnte
Ja weil aktuell läuft es bei mir über
Unraid und ich finde das Interface
Deutlich hübscher als von Unraid
Hat das Webhooks
Ne keine Webhooks
Zumindest hier nicht
Hier nicht
Ich meine du kannst natürlich immer in dein Docker Compose File
Irgendwas reinschreiben was dann ausgeführt wird
Aber ne hat es anscheinend nicht
Wobei wir können ja mal gucken
Book
Ne
Mal gucken was er schreibt als Unterschied zu Portena
Ja
Also außer das ich halt Portena nicht mag
Ja
Mir gefällt das
Ich bin ja sonst immer am meckern
Aber es gibt so ein paar Sachen
Die treffen bei mir immer so den Nerv von
Simpel und löst das was es lösen soll
Gut das gefällt mir hier
Web Interface
Web Interface
Fühlt sich auch schön responsive an
Ist das wieder eine Vue App
Mal gespannt
Uptime Kuma ist in Vue gebaut
Und das hier ist in
Habt ihr irgendeinen Plan
Setup Vue
Ok es ist wieder irgendeine Vue.js
Vue.js App würde ich sagen
Ja
Wir können natürlich im GitHub Repo gucken
Dann wirst du das ganz genau
Es ist Vue
Ein Vue Enjoyer
Nicer Vue Enjoyer
Ja gut
Hm dann lassen wir das mal so
Delete
Und ich restore meinen Snapshot wieder
Weil ich diesen ganzen Krempel hier drauf
Nicht brauche
Yes ok
Chat
Wir sind fertig für heute
Ich bin mit allem durch
Sag doch
Doc wird kurz und knackig
Ich glaube ich mache jetzt noch
Eine Runde Kreiselgrind
Aber ohne euch
Ja ohne euch
Kreiselgrind
Genug geschwätzt
Cleaning up
Sehr gut
Ja alles klar
Da sehen wir uns morgen wieder Leute
Würde ich sagen
Gibt es noch
Wenn es noch irgendwas super wichtiges gibt
Könnt ihr jetzt fragen
Ansonsten bin ich jetzt gleich weg
Ohhhh
Weiß ich nicht ob man das braucht
Ich glaube der Scope ist eindeutig etwas kleiner
Da gewählt Multi Host
Wenn ich Multi Host hätte
Achso du meinst das man mehrere
Nicht Clustert sondern das man mehrere
Damit verwalten könnte
Ach warum dann müsste man
Dann würdest du einfach überall
Ich verstehe was du meinst
Wir können gleich leveln
Ich will meinen Charmie leveln
Steen bist du noch da willst du deinen Döner leveln
Mein Charmie muss gelevelt werden
Any any levelors
Ich glaube er ist schon wieder weg
Na gut dann sehen wir uns Leute
Bis dann machts gut
See you
