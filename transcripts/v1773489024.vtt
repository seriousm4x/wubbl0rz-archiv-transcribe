WEBVTT

00:16.180 --> 01:48.590
wir haben nicht so viel zeit 145 mal gucken ob er dort gescheit was auf die reihe kriegen ich

01:48.590 --> 01:57.510
erzähle euch auch gleich um was es geht nämlich meine sound settings richtig gemacht habe ein

01:57.510 --> 02:08.320
bisschen bisschen was ein spannenderes angemacht habe das haben wir denn hier genau das ist mit

02:08.320 --> 02:17.020
vocals vocals das sagt das legt mich ab das kann ich mir nicht geben weg das gut

02:17.020 --> 02:37.150
das ist nice da freuen die sich bestimmt meine ist auch richtig happy seit die seit

02:37.150 --> 02:43.030
ist ja schon ein bisschen seitdem ich den sound da gebaut habe also diese diesen ich

02:43.030 --> 02:51.120
habe ja unseren so eine terrasse zum hof hin mit so einem wie nennt man das so so

02:51.120 --> 02:52.060
so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so so

02:52.060 --> 02:59.200
das ist kein sound es ist so netznetz ja die beiden vom stream titel das war heute auch das

02:59.200 --> 03:04.970
war doch ich mache meine vor allem inner aus finalPatzen aber halt auch während der stream

03:04.970 --> 03:10.190
so richtig anläuft nicht ein bisschen was erzähle tech wirker daher danke für den sap cleaning

03:10.190 --> 03:17.150
iberus teile geht's abfeuers wieder als erstes am start so muss das sein aber man hat ich bin

03:17.150 --> 03:22.530
mir gar nicht sicher habe ich auf der neuen vor allem überhaupt schon mein main.net entwicklungs

03:22.530 --> 03:23.250
zeug eingerichtet

03:23.570 --> 03:25.090
Ist da überhaupt schon was drauf?

03:27.260 --> 03:29.780
Wenn nicht, muss ich irgendwie mal ein Passwort resetten und so.

03:29.860 --> 03:30.360
Mal gucken.

03:32.120 --> 03:35.960
Ich mache jetzt erstmal schnell Package-Updates.

03:36.700 --> 03:39.120
Und dann erzähle ich euch, um was es geht.

03:39.340 --> 03:41.140
Denn ich habe nämlich was sehr Cooles gelesen.

03:41.740 --> 03:45.520
Es gab jetzt ein .NET 8 Preview-Version.

03:48.110 --> 03:49.590
Lass mich mal kurz checken.

03:52.190 --> 03:53.550
Ah, okay, Rider habe ich installiert.

03:53.630 --> 03:57.810
Das heißt wahrscheinlich auch, ich habe die Toolbox installiert.

03:57.810 --> 03:59.410
Okay, ich bin schon eingeloggt.

03:59.490 --> 04:00.830
Nice, okay, pock.

04:01.570 --> 04:02.670
So, darfst du es mal upgraden.

04:03.450 --> 04:03.850
Pac-Man.

04:06.490 --> 04:08.950
Darauf alles upgraden.

04:09.070 --> 04:10.650
Upgrade einfach mal alles, dann ist gut.

04:12.950 --> 04:14.030
Nein, heute nicht.

04:14.250 --> 04:15.550
Heute machen wir was anderes.

04:16.330 --> 04:18.690
Ich bin mir gar nicht sicher, ob heute alles, wahrscheinlich nicht komplett,

04:18.910 --> 04:23.310
aber zumindest in Ansätzen, ob wir heute da was auf die Reihe kriegen.

04:23.350 --> 04:25.930
Aber das muss ich mir angucken, weil ich bin da wirklich gespannt drauf,

04:25.930 --> 04:29.290
ob die das auf die Reihe bekommen haben in .NET.

04:29.510 --> 04:33.770
So, dass das vielleicht in einem Bereich Konkurrenz zu Go wird,

04:34.310 --> 04:38.050
wo Go bisher wirklich ungeschlagen nice ist.

04:39.270 --> 04:45.290
Und was ist eurer Meinung nach, vielleicht könnt ihr euch ja schon überlegen, was ich meine.

04:45.750 --> 04:49.310
Was ist der Bereich, in dem, also ich meine jetzt nicht unbedingt die Sprache an sich,

04:49.490 --> 04:52.090
sondern so das Handling von Go.

04:52.090 --> 04:59.090
Also was macht Go wirklich richtig gut, was sonst keine Sprache ähnlich gut ist.

04:59.510 --> 05:03.190
Ich meine keine Sprachfeature oder kein Framework-Feature.

05:03.590 --> 05:06.110
Single Binaries, richtig, genau das meine ich.

05:06.310 --> 05:07.730
Das meine ich, Single Binaries.

05:08.450 --> 05:10.050
Das Blixer hat wieder hier, higher IQ.

05:10.970 --> 05:12.850
Wusste, wusste gleich schon, was Sache ist.

05:14.890 --> 05:16.030
Single Binary.

05:16.530 --> 05:17.850
You Launcher.

05:20.130 --> 05:20.890
War fort.

05:21.850 --> 05:22.230
Ja, ja.

05:22.230 --> 05:26.570
So, das Ganze hier noch updaten und dann haben wir es eigentlich.

05:26.730 --> 05:26.890
Genau.

05:27.670 --> 05:29.270
Single Binary, da sage ich gleich was dazu.

05:29.510 --> 05:31.450
Single Binaries, das meine ich.

05:32.630 --> 05:38.330
Und zwar, ich habe ein Blogpost gelesen von dem .NET Team.

05:39.170 --> 05:45.390
Und die haben geschrieben, dass sie ihre Ahead of Time Compilation,

05:45.490 --> 05:49.350
was scheuer das Wort ist, also im Prinzip das, was man so normal unter Kompilieren versteht,

05:50.470 --> 05:52.690
jetzt verbessern wollen mit .8.

05:52.690 --> 05:59.380
Und wenn das stimmt, könnte das vielleicht,

05:59.580 --> 06:01.440
in diesem Beispiel,

06:01.460 --> 06:03.620
in diesem Bereich, Go, ein bisschen Konkurrenz machen.

06:03.620 --> 06:05.860
Natürlich wird das noch nicht so geil sein, wie mit Go.

06:06.180 --> 06:09.420
Ich meine, Single Binaries in Go sind extrem nice gemacht.

06:09.900 --> 06:11.140
Die sind lauffähig.

06:13.620 --> 06:19.460
Die sind lauffähig, ja, zurück bis Kernel 2, 6, 38 oder sowas.

06:19.880 --> 06:22.100
Go Binaries kannst du überall drauf laufen lassen.

06:22.100 --> 06:23.860
Also, ganz so geil wird das nicht.

06:23.860 --> 06:27.900
Aber wenn es schon auf Linux in den letzten fünf, sechs Jahren läuft, ist ja eigentlich auch okay.

06:28.460 --> 06:30.100
So, folgenden Blogpost gab es.

06:30.140 --> 06:31.420
Und da labert man.

06:31.460 --> 06:32.720
Da läuft Microsoft wieder viel rum.

06:33.100 --> 06:34.140
Was, wenn der Tag lang ist?

06:35.220 --> 06:37.240
Könnte was von ChatGPT geschrieben sein.

06:37.320 --> 06:39.320
Jetzt weiß ich auch, warum Microsoft da mit dran beteiligt ist,

06:39.340 --> 06:41.320
um solche komischen Blogposts zu schreiben.

06:42.200 --> 06:45.040
So, und irgendwann kommt dann Native Ahead of Time.

06:45.580 --> 06:47.820
Also, das haben die ja schon eine Weile drin.

06:53.420 --> 06:55.460
Das haben die ja schon eine Weile drin.

06:55.460 --> 07:04.600
Und zwar, dass du .NET nicht nur mit der .NET Runtime ausführen kannst.

07:05.240 --> 07:05.980
Also, quasi.

07:06.360 --> 07:06.860
Jit.

07:07.640 --> 07:08.700
Nicht Shit, Shit.

07:08.700 --> 07:09.700
Jit, Jitten.

07:10.200 --> 07:16.040
Also, dass da quasi zur Laufzeit generiert, was ausgeführt wird.

07:17.240 --> 07:20.400
Das ist ja immer noch der Default-Weg, wie .NET Programme ausgeführt werden.

07:20.900 --> 07:22.320
Also, ein bisschen so wie...

07:22.960 --> 07:23.720
Also, was heißt ein bisschen?

07:23.720 --> 07:25.360
Im Prinzip so genau, wie Java das macht.

07:25.640 --> 07:26.720
Nur, dass es nicht Java ist.

07:28.120 --> 07:31.120
Oder wie das sogar JavaScript mittlerweile teilweise macht.

07:31.480 --> 07:35.120
Zumindest, das war ja bisher so der Weg, wie man .NET ausgeführt hat.

07:35.120 --> 07:35.240
Zumindest, das war ja bisher so der Weg, wie man .NET ausgeführt hat.

07:35.240 --> 07:41.040
Und seit .NET 7 haben die jetzt besseren Support eingebaut,

07:41.120 --> 07:45.140
für das man sein komplettes .NET Programm fix und fertig kompilieren kann,

07:45.220 --> 07:47.060
als Single Binary und es dann läuft.

07:47.880 --> 07:52.260
Dass es einfach läuft, ist auch ein bisschen zu viel des Guten.

07:53.160 --> 07:55.620
Je nachdem, was für Features man nutzt, läuft es gar nicht.

07:56.100 --> 08:00.960
Und das hoffe ich halt, dass es besser wird damit.

08:01.520 --> 08:05.200
Und die Größe von .NET Binaries ist noch ein bisschen heftig.

08:05.760 --> 08:07.900
So, und das will ich heute mal ausprobieren.

08:07.960 --> 08:10.660
Ich habe mir auch eine coole Anwendungsidee überlegt.

08:11.500 --> 08:12.720
Wir können mal was basteln.

08:13.040 --> 08:15.260
Weil, um sowas zu testen, ja.

08:15.780 --> 08:20.840
Hier schreiben sie ja zum Beispiel auch, ein Hello World Programm ist jetzt 1,84 Megabyte.

08:21.000 --> 08:23.180
Ja, was interessiert mich in Hello World Programm?

08:23.620 --> 08:27.280
Ich brauche ja schon ein paar Libraries dabei und ein bisschen Features dabei.

08:27.380 --> 08:29.520
Am Ende sind wir bestimmt nicht bei 1,84 MB.

08:30.120 --> 08:34.600
Aber wenn wir unter 20 MB oder so sind, für ein Binary, was ausgeführt wird.

08:34.680 --> 08:35.220
Und das ist ja auch eine coole Anwendungsidee.

08:35.220 --> 08:37.260
Und wenn man das schnell startet, dann ist das wirklich gut.

08:37.580 --> 08:41.440
So viel kleiner ist, wenn du Go mit ordentlichen Features verwendest, das auch nicht.

08:43.600 --> 08:45.400
Ja, und da bin ich wirklich mal gespannt.

08:45.880 --> 08:46.780
So, haben wir jetzt alles geupdatet.

08:47.620 --> 08:49.760
Dann kann ich nämlich abschließend nochmal neu starten.

08:50.200 --> 08:52.780
Und dann kann ich noch den, während es neu startet, Chat beantworten.

08:54.580 --> 08:55.160
Hier war doch irgendwas.

08:56.520 --> 08:57.580
Hau mal deine Meinung raus.

08:57.700 --> 09:01.580
Hab die Möglichkeit, über eine Arbeitnehmerüberlassung in DevOps-Priorität einzuhängen.

09:01.940 --> 09:04.040
Die checken aber nicht, dass ich wenig praktische Erfahrung habe.

09:04.040 --> 09:05.280
Ich habe nur trotzdem Wagen.

09:05.600 --> 09:06.040
Ganz ehrlich, Arbeitnehmerüberlassung.

09:06.780 --> 09:11.760
Arbeitnehmerüberlassung klingt immer so ein bisschen nach Personalverschacher-Ding.

09:12.160 --> 09:13.320
Ja, das ist ja nicht wild.

09:13.720 --> 09:16.420
Wir haben auch ein paar Externe, die über eine Zwischenfirma gekommen sind.

09:18.960 --> 09:20.020
Boah, keine Ahnung.

09:21.940 --> 09:23.820
Kann ich dir jetzt so aus dem Bauch nichts sagen.

09:23.920 --> 09:25.420
Kommt auch ein bisschen auf die Vermittlerfirma.

09:25.520 --> 09:27.920
Und vor allem kommt es auf die Firma an, wo du dann hingehst.

09:28.640 --> 09:35.300
Also, wenn du die Firma nice findest oder Bock drauf hast, dass du wenig praktische Erfahrung hast, ist das jetzt nicht so wild.

09:35.300 --> 09:38.020
Wichtig ist, dass du gut googeln kannst und nicht schnell einarbeiten kannst.

09:38.480 --> 09:46.000
Es ist immer ein Unterschied, ob du die Technologie kennst oder ob du weißt, wie sie eingesetzt wird.

09:46.060 --> 09:47.160
Also, nee, das muss ich anders sagen.

09:47.500 --> 09:57.140
Es ist ein Unterschied, ob du jetzt beispielsweise Technologie XY kennst, weil du weißt ja immer noch nicht, wie sie genau eingesetzt wird.

09:59.510 --> 10:02.490
Und das kann von Unternehmen zu Unternehmen variieren.

10:02.650 --> 10:06.590
Also, nur weil du eine Technologie kennst, heißt das nicht, dass du automatisch weißt, wie das dort eingesetzt wird.

10:07.390 --> 10:08.770
Das heißt, das ist nicht so wild.

10:09.230 --> 10:11.530
Wie hast du FZN für die History eingerichtet?

10:11.550 --> 10:15.750
So, aber ich mache das wieder aus.

10:15.890 --> 10:17.830
Ich habe meine Confi noch nicht gesynct.

10:18.130 --> 10:20.210
Der anderen VM habe ich das schon wieder aus.

10:20.770 --> 10:22.750
Ich habe das jetzt ein paar Wochen ausprobiert.

10:22.850 --> 10:26.030
Ich muss ehrlich sagen, meins ist es nicht.

10:27.650 --> 10:28.270
Okay, da.

10:28.710 --> 10:29.290
Nee, das nicht.

10:29.390 --> 10:29.890
Das ist Blödsinn.

10:31.190 --> 10:31.890
Das hier.

10:33.930 --> 10:38.090
FZ8 Keybindings, die haben so ein automatisches ZSH-Skript.

10:40.130 --> 10:41.090
Aber ich bin...

10:41.550 --> 10:42.870
Ich finde das nicht so gut.

10:43.130 --> 10:43.890
Ich finde das nicht so gut.

10:44.270 --> 10:49.530
Ich mag die klassische History mit Steuerung eher hoch und runter tatsächlich lieber als das.

10:50.530 --> 10:58.310
Da ist mir das mit Substream-Matching und alles schon ein bisschen zu viel des Guten, weil der findet ja Dinger, die du gar nicht finden willst.

11:00.490 --> 11:01.990
Ich weiß nicht, ob überhaupt...

11:05.220 --> 11:05.940
Ja, das stimmt.

11:06.120 --> 11:07.560
Das stimmt bis jetzt ja auch.

11:10.760 --> 11:11.080
Nee.

11:12.500 --> 11:13.260
Haben wir nicht.

11:16.350 --> 11:17.770
Welche Distribution hast du?

11:17.770 --> 11:18.570
Das ist Arch.

11:18.750 --> 11:19.050
Warte mal.

11:19.150 --> 11:20.110
Für euch habe ich doch immer...

11:20.110 --> 11:21.210
Ich habe den Kram hier noch am Start.

11:21.290 --> 11:21.450
Guck.

11:21.870 --> 11:22.710
Arch, by the way.

11:23.030 --> 11:23.510
Was sonst?

11:32.440 --> 11:32.980
Was sonst?

11:33.720 --> 11:35.160
Nur Arch only.

11:37.780 --> 11:37.980
Gut.

11:38.180 --> 11:38.320
So.

11:39.700 --> 11:41.900
.NET install curl.

11:42.000 --> 11:43.740
Die haben noch so ein komisches Installer-Skript.

11:45.140 --> 11:46.480
Installieren wir uns mal .NET 8.

11:48.440 --> 11:49.640
Und dann...

11:51.500 --> 11:55.960
Immer, immer ganz wichtig.

11:56.680 --> 11:58.780
Immer fremde Sachen aus dem Internet.

11:58.780 --> 11:59.480
Nach...

11:59.480 --> 12:01.560
Curl nach Bashpipen.

12:01.640 --> 12:02.100
Ganz wichtig.

12:02.200 --> 12:02.840
So macht man es.

12:03.820 --> 12:06.720
Äh, Channel 8.0 brauchen wir, glaube ich.

12:10.190 --> 12:11.750
Am besten noch sudo davor.

12:11.970 --> 12:12.190
Genau.

12:14.190 --> 12:15.870
Direkt blind aus dem Internet.

12:16.530 --> 12:17.150
Von Reddit.

12:17.370 --> 12:18.910
Von 4chan am besten noch.

12:19.590 --> 12:21.230
Blind alles reinpasten.

12:22.010 --> 12:22.370
Okay.

12:22.750 --> 12:23.270
Repos.

12:23.750 --> 12:24.310
MKDier.

12:24.310 --> 12:30.610
Und anhand des Verzeichnis-Namens erkennt ihr vielleicht schon, was wir heute machen.

12:30.610 --> 12:32.610
Wir legen VMs an.

12:32.610 --> 12:33.110
Für...

12:34.170 --> 12:36.170
Oh, ich hab gar keinen, gar keinen Lib-Wirt und so noch.

12:36.530 --> 12:38.730
Wir legen KVM-VMs lokal an.

12:39.070 --> 12:40.070
Einfach weil es geht.

12:40.950 --> 12:42.270
Weil ich irgendwas brauche.

12:43.270 --> 12:45.270
Was Low-Level-Shit benutzt.

12:45.670 --> 12:47.450
Also Interop mit C-Libraries.

12:47.850 --> 12:49.250
Ich brauch irgendwas, was...

12:49.490 --> 12:52.410
...ein bisschen advancedere .NET Abhängigkeiten hat.

12:52.670 --> 12:55.950
Und dann halt gucken, lässt sich das kompilieren und wie klein ist es am Ende.

12:58.400 --> 12:58.900
Ja, und...

12:59.360 --> 13:01.120
Ich hab mir... Das ist nicht auf GitHub.

13:01.120 --> 13:04.980
Ich hab mir ein Tool gebaut vor einer Weile.

13:04.980 --> 13:06.080
Da kann ich sowas hier machen.

13:06.080 --> 13:07.440
Ich hab das hier nicht drauf.

13:07.440 --> 13:08.880
Da kann ich sowas hier machen.

13:08.880 --> 13:10.620
VM Start Kekkel.

13:10.620 --> 13:14.080
So, und dann legt er mir eine temporäre lokale VM mit dem Debian an.

13:15.420 --> 13:18.240
Und wenn ich so mache, schmeißt er die alle wieder weg.

13:18.240 --> 13:20.580
Weil ich brauche manchmal trotz Container...

13:20.580 --> 13:24.300
Trotz Container brauche ich manchmal eine richtig echte VM.

13:24.300 --> 13:26.300
Um Sachen mal schnell auszuprobieren.

13:28.080 --> 13:28.580
Ja.

13:28.580 --> 13:30.880
Zum Beispiel um einen Runner zu installieren.

13:30.880 --> 13:32.120
Für GitLab oder sowas.

13:32.120 --> 13:33.620
Und das macht man am besten in der VM.

13:33.620 --> 13:35.620
Wenn man Docker in Docker bauen will.

13:35.620 --> 13:36.620
Manchmal ist es praktisch.

13:36.620 --> 13:38.620
Außerdem ist das jetzt nur...

13:39.620 --> 13:41.620
...für die...

13:41.620 --> 13:43.620
...für den Versuch, ja.

13:44.620 --> 13:48.620
Ich hoffe wir kriegen da irgendwas Annehmbares hin bis 22 Uhr.

13:49.620 --> 13:52.620
So, also dann legen wir mal ein .NET Projekt an.

13:52.620 --> 13:53.620
.NET

13:53.620 --> 13:54.620
.NET

13:54.620 --> 13:56.620
New Console

13:57.620 --> 13:58.620
Alles klar.

13:58.620 --> 14:02.830
Und dann machen wir RIDER mal auf.

14:02.830 --> 14:04.070
Ja, ja, alles gut.

14:04.070 --> 14:05.070
Wir trusten.

14:05.070 --> 14:09.860
GachiBuzz.

14:09.860 --> 14:10.860
So.

14:10.860 --> 14:12.860
Loading Project.

14:12.860 --> 14:13.860
Loading Error.

14:13.860 --> 14:15.860
Geht schon gut los.

14:15.860 --> 14:17.860
Ich glaube ich weiß warum.

14:17.860 --> 14:19.860
Weil...

14:19.860 --> 14:21.860
...der .NET 8 noch gar nicht erkannt hat.

14:21.860 --> 14:23.860
Obwohl ich schon installiert habe.

14:23.860 --> 14:25.860
Probieren wir das mal aus.

14:25.860 --> 14:29.860
Ja guck, der hat .NET 8 nicht erkannt.

14:29.860 --> 14:31.860
Kack, noob.

14:31.860 --> 14:33.860
So, wunderbar.

14:33.860 --> 14:35.460
So, wenn wir jetzt Glück haben.

14:35.460 --> 14:37.700
Sollte er das alles erkennen.

14:37.700 --> 14:41.260
Oder auch nicht.

14:41.260 --> 14:43.260
Reload Project.

14:45.260 --> 14:47.260
Ah, jetzt hat er alles erkannt.

14:47.260 --> 14:49.260
Nice, nice, nice, nice.

14:49.260 --> 14:50.260
Sehr schön.

14:50.260 --> 14:51.260
Okay.

14:51.260 --> 14:52.260
Da machen wir ein ordentliches Farbschema.

14:52.260 --> 14:54.260
Sonst wird das ja nix.

14:54.260 --> 14:55.260
RIDER.

14:55.260 --> 14:56.260
Wir wollen Visual Studio.

14:56.260 --> 14:57.260
Visual...

14:57.260 --> 14:58.260
Wo ist es denn?

14:58.260 --> 14:59.260
Visual Studio Dark.

14:59.260 --> 15:00.260
Wollen wir haben.

15:00.260 --> 15:03.260
Dass es so schön Microsoft .NET mäßig aussieht.

15:03.260 --> 15:05.260
Gut.

15:05.260 --> 15:07.260
Hello World Programm.

15:07.260 --> 15:09.260
Also, Repos vor MChamp.

15:09.260 --> 15:11.260
Und jetzt gucken wir, jetzt vergleichen wir mal.

15:11.260 --> 15:13.260
Gucken wir mal kurz, ob das stimmt.

15:13.260 --> 15:15.260
Überhaupt, was Microsoft da schreibt.

15:15.260 --> 15:17.260
Microsoft selbst sagt ja.

15:17.260 --> 15:23.260
Dass ein .NET Programm nur noch 1,4 MB oder sowas groß ist.

15:23.260 --> 15:25.260
Und das testen wir jetzt mal.

15:25.260 --> 15:27.260
Das probieren wir jetzt mal aus.

15:27.260 --> 15:29.260
Ob das denn überhaupt stimmt.

15:29.260 --> 15:31.260
Ne, Dracula mag ich nicht.

15:31.260 --> 15:33.260
Ob das denn überhaupt stimmt.

15:33.260 --> 15:35.260
Was Microsoft da so sagt.

15:35.260 --> 15:37.260
Ähm.

15:37.260 --> 15:38.260
Hier.

15:38.260 --> 15:39.260
Microsoft sagt.

15:39.260 --> 15:41.260
Ein Hello World .NET 8 Programm mit.

15:41.260 --> 15:43.260
Wenn es kompiliert ist.

15:43.260 --> 15:45.260
Braucht nur noch 1,84 MB.

15:45.260 --> 15:48.600
Das heißt.

15:48.600 --> 15:50.600
Wir testen das jetzt mal.

15:50.600 --> 15:51.600
Und gucken.

15:51.600 --> 15:52.600
Wow.

15:52.600 --> 15:54.600
What the fuck.

15:54.600 --> 15:55.600
Java.

15:55.600 --> 15:56.600
Geh mal fort.

15:56.600 --> 15:57.600
Ähm.

15:57.600 --> 15:59.600
Und testen mal, ob das jetzt auch wirklich der Fall ist.

15:59.600 --> 16:01.600
Also.

16:01.600 --> 16:03.600
.NET.

16:03.600 --> 16:05.600
Publish.

16:05.600 --> 16:06.600
So.

16:06.600 --> 16:09.600
Wenn ich den Kram noch aus dem Kopf wüssten würde.

16:09.600 --> 16:10.600
Es ist "-p".

16:10.600 --> 16:11.600
Und dann irgendwie.

16:11.600 --> 16:12.600
Publish.

16:12.600 --> 16:13.600
AOT.

16:13.600 --> 16:14.600
Gleich True.

16:14.600 --> 16:15.600
Kann das sein?

16:15.600 --> 16:16.600
Ergibt das Sinn?

16:16.600 --> 16:17.600
Output.

16:17.600 --> 16:20.940
Build Directory.

16:20.940 --> 16:21.940
Ok.

16:21.940 --> 16:25.950
Er kackt schon mal nicht ab.

16:25.950 --> 16:26.950
Ok.

16:26.950 --> 16:28.950
Wahrscheinlich stimmt das, was ich gemacht habe.

16:28.950 --> 16:29.950
So.

16:29.950 --> 16:30.950
Build.

16:30.950 --> 16:31.950
Das .NET Programm ist.

16:31.950 --> 16:32.950
Wait a minute.

16:32.950 --> 16:33.950
Das ist aber.

16:33.950 --> 16:34.950
Das ist aber.

16:34.950 --> 16:35.950
Was.

16:35.950 --> 16:36.950
Was zum.

16:36.950 --> 16:37.950
Ah.

16:37.950 --> 16:38.950
Was ist mit meiner Shell los, Mann?

16:38.950 --> 16:41.460
Was war das denn jetzt?

16:41.460 --> 16:42.460
Hat komische Zeichen reingepastet.

16:42.460 --> 16:47.330
So.

16:47.330 --> 16:48.330
Also.

16:48.330 --> 16:49.330
Ohne zu strippen.

16:49.330 --> 16:50.330
Ist das schon einmal.

16:50.330 --> 16:51.330
Sehe ich das richtig?

16:51.330 --> 16:55.110
Das ist.

16:55.110 --> 16:56.110
Wie viel ist das?

16:56.110 --> 16:57.110
9 MB?

16:57.110 --> 16:58.110
Ja.

16:58.110 --> 17:00.810
9 MB groß.

17:00.810 --> 17:01.810
Ok.

17:01.810 --> 17:02.810
Strip.

17:02.810 --> 17:03.810
Strip.

17:03.810 --> 17:04.810
Symbols.

17:04.810 --> 17:07.500
Lasst uns mal schauen, wie groß es jetzt ist.

17:07.500 --> 17:08.500
Immer noch 8,9 MB.

17:08.500 --> 17:09.500
.NET.

17:09.500 --> 17:10.500
.NET.

17:10.500 --> 17:11.500
.NET.

17:11.500 --> 17:12.500
.NET.

17:12.500 --> 17:13.500
.NET.

17:13.500 --> 17:16.780
.NET.

17:16.780 --> 17:17.780
.NET.

17:17.780 --> 17:18.780
.NET.

17:18.780 --> 17:23.970
.NET.

17:23.970 --> 17:24.970
.NET.

17:24.970 --> 17:25.970
.NET.

17:25.970 --> 17:26.970
.NET.

17:26.970 --> 17:31.070
.NET.

17:31.070 --> 17:32.070
.NET.

17:32.070 --> 17:33.070
.NET.

17:33.070 --> 17:34.070
.NET.

17:34.070 --> 17:37.020
.NET.

17:37.020 --> 17:38.020
.NET.

17:38.020 --> 17:39.020
.NET.

17:39.020 --> 17:40.020
.NET.

17:40.020 --> 17:51.100
.NET.

17:51.100 --> 17:52.100
.NET.

17:52.100 --> 17:53.100
.NET.

17:53.100 --> 17:55.420
.NET.

17:55.420 --> 17:56.420
.NET.

17:56.420 --> 17:57.420
.NET.

17:57.420 --> 17:58.420
.NET.

17:58.420 --> 17:59.420
.NET.

17:59.420 --> 18:00.420
.NET.

18:00.420 --> 18:01.420
.NET.

18:01.420 --> 18:02.420
.NET.

18:02.420 --> 18:03.420
.NET.

18:03.420 --> 18:04.420
.NET.

18:04.420 --> 18:05.420
.NET.

18:05.420 --> 18:10.740
.NET.

18:10.740 --> 18:11.740
.NET.

18:11.740 --> 18:12.740
.NET.

18:12.740 --> 18:13.740
.NET.

18:13.740 --> 18:14.740
.NET.

18:14.740 --> 18:17.240
.NET.

18:17.240 --> 18:18.240
.NET.

18:18.240 --> 18:19.240
.NET.

18:19.240 --> 18:20.240
.NET.

18:20.240 --> 18:26.100
Also das ist ja weit von dem entfernt, was Microsoft sich da...

18:26.100 --> 18:26.620
Ah, guck mal jetzt.

18:28.520 --> 18:30.740
Sag mal, was zum Teufel ist mit meinem Terminal los?

18:37.760 --> 18:43.690
Ah, das ist schon besser.

18:44.890 --> 18:48.430
1,9 MB, das ist richtig, was Microsoft da sagt.

18:49.310 --> 18:50.430
Tatsächlich, guck mal.

18:51.010 --> 18:54.070
Nur noch 1,9 MB groß der VM-Champ.

18:56.570 --> 18:57.430
Okay, das funktioniert.

18:57.430 --> 19:00.330
Jetzt vergleichen wir das mal auf die Schnelle.

19:00.850 --> 19:03.630
Ich stelle mal kurz hier um auf .NET.

19:04.070 --> 19:09.870
Die Debug-Datei, da sind Symbole drin, also sprich, wie die Funktionen heißen und sonst was.

19:14.740 --> 19:15.760
Wofür braucht man das?

19:17.440 --> 19:23.160
Das braucht man, dass du es ordentlich debuggen kannst.

19:24.220 --> 19:28.720
Mit irgendeinem Debugger, dass du weißt, wie die Funktionen noch heißen.

19:28.720 --> 19:30.720
Also, wenn eine Funktion aufgerufen wird...

19:31.540 --> 19:34.600
Und die Debug-Datei nicht hast, dann weißt du nicht mal, wie die ursprünglich hieß.

19:37.920 --> 19:39.780
Die Debug-Datei würde ich ja auch nicht ausliefern.

19:41.600 --> 19:44.340
Die ist für dich zum ausprobieren.

19:45.060 --> 19:49.620
Also, wenn du wirklich debuggen musst, dass du weißt, wo er gerade ist und was er gerade aufruft.

19:49.740 --> 19:58.200
Weil, wenn die Funktionen heißen octopus.output, dann weißt du schon mal, was Bescheid ist.

19:58.760 --> 20:00.680
Wenn die Funktionen so heißen, dann weißt du nicht so genau gibt es die Funktionen?

20:00.980 --> 20:02.760
was das ist. Sag mal, was zum Teufel ist mit

20:02.760 --> 20:03.740
meiner Shell los?

20:06.020 --> 20:07.880
Klar kannst du die ausführen ohne Debug-File.

20:07.980 --> 20:09.340
Das ist überhaupt kein Ding. Guck mal.

20:09.860 --> 20:11.160
AM, VM-Champ,

20:12.100 --> 20:14.080
Debug. Geht immer noch.

20:15.080 --> 20:15.780
Überhaupt kein Problem.

20:17.400 --> 20:18.100
Das ist nicht Fleet.

20:18.200 --> 20:19.820
Das ist Rider mit dem neuen UI.

20:20.600 --> 20:22.120
So, wir stellen das jetzt mal testweise

20:22.120 --> 20:23.580
um. Auf .

20:23.580 --> 20:32.590
Kann man das hier nicht umstellen? Auf .NET

20:32.590 --> 20:33.450
8.

20:36.080 --> 20:38.280
Ich stelle es auf .NET Standard um.

20:38.280 --> 20:40.080
Easy. Dann sollte es auf jeden Fall gehen.

20:41.160 --> 20:41.520
Ähm.

20:42.760 --> 20:43.280
Publish.

20:46.500 --> 20:48.360
Alter, was geht mit

20:48.360 --> 20:50.020
meinem Terminal ab, Alter?

20:50.260 --> 20:52.120
Das kann doch nicht sein, dass das Laufen kaputt ist.

20:52.460 --> 20:53.680
Ich krieg hier Anfälle.

21:06.200 --> 21:07.160
Okay, ähm.

21:09.950 --> 21:11.270
Kann ich das nicht hier auf

21:11.270 --> 21:15.750
.NET 8 raus?

21:22.180 --> 21:23.160
Unallable, okay.

21:34.400 --> 21:35.520
Darf ich das jetzt übersetzen

21:35.520 --> 21:39.790
vielleicht? Was?

21:41.650 --> 21:41.950
Alter.

21:41.950 --> 21:42.010
Alter.

21:43.530 --> 21:45.990
Ich will keine fucking Class Library, Mann.

21:46.230 --> 21:50.570
Ach, kann man das nicht machen, oder wie?

21:50.570 --> 21:52.570
Ah, das ist ja doof.

21:52.570 --> 21:56.710
Äh.

21:56.710 --> 21:58.710
Warum kann ich in die .NET-Version nicht runtergehen?

21:58.710 --> 22:00.710
Warum geht das nicht?

22:00.710 --> 22:02.710
Ich mein, ich kann, ich kann sagen

22:02.710 --> 22:06.730
Unload. Wo ist denn der

22:06.730 --> 22:08.730
Unload-Knopf überhaupt jetzt?

22:08.730 --> 22:10.730
Unload Project.

22:10.730 --> 22:12.730
So.

22:12.730 --> 22:14.730
Ich, ich kann da in .NET 7 reinschreiben.

22:14.730 --> 22:18.170
So, easy.

22:18.170 --> 22:24.230
Oh, jetzt funktioniert's auch.

22:24.230 --> 22:26.230
Äh, Liga, da kann ich dir gleich was zu sagen.

22:26.230 --> 22:30.890
Wenn ich mich nicht hundertprozentig sehen kann.

22:30.890 --> 22:32.890
Wenn ich sicher bin.

22:32.890 --> 22:34.890
So.

22:34.890 --> 22:36.890
Guck mal, wie groß das ist.

22:36.890 --> 22:38.890
Okay.

22:38.890 --> 22:40.890
Das ist schon ein Unterschied. Guck mal.

22:40.890 --> 22:42.890
Mit der alten .NET-Version ist es

22:42.890 --> 22:44.890
5,6 MB für ein publisches

22:44.890 --> 22:46.890
Hello-World-Kurs. Und mit der neuen ist es

22:46.890 --> 22:48.890
1,9.

22:48.890 --> 22:50.890
Das ist, das ist tatsächlich echt

22:50.890 --> 22:52.890
eine gute Verbesserung.

22:52.890 --> 22:54.890
Da kann man nix sagen.

22:54.890 --> 22:56.890
So. Also.

22:56.890 --> 22:58.890
Ähm. Ich bin nicht zu stark.

22:58.890 --> 23:00.890
Ich seh unsere Pipelines, die empfehlen .NET Restore,

23:00.890 --> 23:02.890
aber auch .NET Build.

23:02.890 --> 23:04.890
Doch, die Sache ist bloß die,

23:04.890 --> 23:06.890
ich hab keine Ahnung, warum die Leute überhaupt

23:06.890 --> 23:08.890
noch Build und Restore verwenden.

23:08.890 --> 23:10.890
Die können einfach Publish verwenden.

23:10.890 --> 23:12.890
Das macht beides in einem.

23:12.890 --> 23:14.890
Also, keine Ahnung, warum das über...

23:14.890 --> 23:16.890
Ich weiß, sogar das offizielle .NET

23:16.890 --> 23:18.890
Docker-File-Example

23:18.890 --> 23:20.890
macht das mit, mit Restore.

23:20.890 --> 23:22.890
Vielleicht um,

23:22.890 --> 23:24.890
vielleicht fürs Caching von den Containern.

23:24.890 --> 23:26.890
Das kann natürlich sein,

23:26.890 --> 23:28.890
wenn sich der Source-Code ändert,

23:28.890 --> 23:30.890
tun das nicht, ähm,

23:30.890 --> 23:32.890
jedes Mal...

23:32.890 --> 23:34.890
Also, du kannst ja, wenn du,

23:34.890 --> 23:36.890
wenn du ein Docker-File hast,

23:36.890 --> 23:38.890
dann merkt das sich ja, an welchem,

23:38.890 --> 23:40.890
an welchem Step du was geändert hast

23:40.890 --> 23:42.890
und macht dann ab da weiter.

23:42.890 --> 23:44.890
So, wenn du quasi Publish, also quasi den Restore

23:44.890 --> 23:46.890
für die Dependencies und die Nougat-Packages

23:46.890 --> 23:48.890
und alles, wenn du das

23:48.890 --> 23:50.890
in einem Befehl hast mit Publish

23:50.890 --> 23:52.890
und in Build und du änderst am Build-Befehl was,

23:52.890 --> 23:54.890
dann muss er das alles wieder machen.

23:54.890 --> 23:56.890
Also, vielleicht ist das

23:56.890 --> 23:58.890
ein Restore und dann ein Publish

23:58.890 --> 24:00.890
hinterher und dann Build, ist

24:00.890 --> 24:02.890
vielleicht, dass das Docker-Caching

24:02.890 --> 24:04.890
das besser hinbekommt.

24:04.890 --> 24:06.890
Aber ansonsten kannst du einfach .NET Publish verwenden.

24:06.890 --> 24:08.890
Das macht alles in einem. Also, eigentlich braucht man das

24:08.890 --> 24:10.890
gar nicht.

24:10.890 --> 24:12.890
Eigentlich overrated, outdated,

24:12.890 --> 24:14.890
gbated.

24:14.890 --> 24:16.890
So. Alles klar.

24:16.890 --> 24:18.890
Dann können wir jetzt hier anfangen.

24:18.890 --> 24:20.890
Ich hab die .NET-Version

24:20.890 --> 24:22.890
wieder hochgestellt.

24:22.890 --> 24:24.890
Gucken wir mal, ob das wieder funktioniert.

24:24.890 --> 24:28.970
.NET Publish.

24:28.970 --> 24:30.970
So. Und jetzt

24:30.970 --> 24:32.970
passt mal auf, was wir heute

24:32.970 --> 24:34.970
probieren werden. Ich bin mir nicht sicher, ob wir das überhaupt

24:34.970 --> 24:36.970
auf die Reihe bekommen.

24:36.970 --> 24:40.600
Ich muss gerade erst mal schnell

24:40.600 --> 24:42.600
KVM installieren. Und zwar,

24:42.600 --> 24:44.600
man kann ja auf der Linux-Kiste,

24:44.600 --> 24:46.600
ja, ja, ich weiß, es läuft gerade nichts.

24:46.600 --> 24:48.600
Man kann ja auf der Linux-Kiste lokal VMs benutzen.

24:48.600 --> 24:50.600
So. Und ich wollte schon immer mal

24:50.600 --> 24:54.170
gucken, wie man

24:54.170 --> 24:56.170
VMs erstellt

24:56.170 --> 24:58.170
über die

24:58.170 --> 25:00.170
Linux-VM-Erstellungs-API.

25:00.170 --> 25:02.170
Das hat nicht wirklich

25:02.170 --> 25:08.170
so viel Sinn.

25:08.170 --> 25:10.170
Ich hab mir letztens so ein Tool zusammengescriptet.

25:10.170 --> 25:12.170
Aber wir können das ja

25:12.170 --> 25:14.170
mal über die API machen.

25:14.170 --> 25:16.170
Und das Gute ist,

25:16.170 --> 25:18.170
das eignet sich dementsprechend auch wunderbar als

25:18.170 --> 25:20.170
Compiler-Testprojekt,

25:20.170 --> 25:22.170
weil ich muss Low-Level-Kram verwenden, plus

25:22.170 --> 25:24.170
ein paar ein bisschen etwas anstehende Libraries.

25:24.170 --> 25:26.170
Ich muss mir jetzt aber erst mal

25:26.170 --> 25:28.170
libvirt und qemo und den ganzen Shit erstellen.

25:28.170 --> 25:32.250
Gucken wir mal, ob das überhaupt

25:32.250 --> 25:34.250
funktioniert, damit

25:34.250 --> 25:36.250
ich da drauf zugreifen kann.

25:36.250 --> 25:38.250
Okay.

25:38.250 --> 25:40.250
Libvirt gibt es nicht.

25:40.250 --> 25:42.250
Dann meinetwegen muss ich das noch starten.

25:42.250 --> 25:44.250
Systemctl enable libvirt.

25:44.250 --> 25:46.250
Not exist.

25:46.250 --> 25:50.260
Okay. Start.

25:50.260 --> 25:55.180
Sag mal,

25:55.180 --> 25:57.180
warum ist denn das so

25:57.180 --> 26:03.940
lahm, meine Tastatur?

26:05.940 --> 26:07.940
Ah, viel besser.

26:07.940 --> 26:09.940
Okay.

26:09.940 --> 26:11.940
Kann man das jetzt laufen?

26:11.940 --> 26:13.940
Kann man KVM laufen?

26:13.940 --> 26:15.940
Nee, wir haben kein

26:15.940 --> 26:17.940
KVM. Oh fuck, ich habe schon

26:17.940 --> 26:19.940
lange kein KVM mehr installiert.

26:19.940 --> 26:25.940
KVM?

26:25.940 --> 26:34.760
Okay, KVM ist, ja.

26:34.760 --> 26:36.760
Ach du Kacke.

26:36.760 --> 26:38.760
Arch KVM install.

26:38.760 --> 26:40.760
Das müssen wir jetzt mal auf die Schnelle gucken.

26:40.760 --> 26:42.760
Check

26:42.760 --> 26:44.760
support.

26:44.760 --> 26:46.760
Okay, kann meine CPU in der VM das?

26:46.760 --> 26:48.760
Nein. Das heißt, ich muss meine

26:48.760 --> 26:50.760
VM erst mal wieder ausschalten.

26:50.760 --> 26:52.760
Und in den

26:52.760 --> 26:54.760
Settings nested Virtualisierung einschalten.

26:54.760 --> 26:56.760
Sonst wird das nämlich nicht funktionieren.

26:56.760 --> 27:00.970
nested Virtualisierung.

27:00.970 --> 27:02.970
Okay.

27:02.970 --> 27:04.970
Also, wenn ich eine VM

27:04.970 --> 27:06.970
in einer VM starten will, dann geht das

27:06.970 --> 27:08.970
nicht. Das geht nur, wenn man nested

27:08.970 --> 27:10.970
Virtualisierung einschaltet. Also falls ihr irgendwann mal

27:10.970 --> 27:12.970
Probleme habt und euch

27:12.970 --> 27:14.970
fragt, warum ihr in eurer VM keine

27:14.970 --> 27:16.970
VM starten könnt, dann liegt das höchstwahrscheinlich

27:16.970 --> 27:18.970
daran, weil keine nested Virtualisierung

27:18.970 --> 27:20.970
eingeschaltet ist.

27:20.970 --> 27:22.970
Normalerweise braucht es ja auch niemand.

27:22.970 --> 27:24.970
Habt ihr schon mal VMs in einer VM laufen

27:24.970 --> 27:26.970
lassen und

27:26.970 --> 27:28.970
wenn ja,

27:28.970 --> 27:33.430
warum? Okay.

27:33.430 --> 27:35.430
Virtualisierung ist enabled.

27:35.430 --> 27:37.430
Proxmox Test Setup. Ja, verstehe.

27:37.430 --> 27:39.430
Dafür ist es sinnvoll.

27:39.430 --> 27:41.430
Auf jeden Fall.

27:41.430 --> 27:43.430
WSL. Ja gut, WSL.

27:43.430 --> 27:46.940
WSL ist

27:46.940 --> 27:48.940
doch keine nested Virtualisierung.

27:50.940 --> 27:52.940
Es sei denn, du hast Windows in der VM und dann WSL.

27:54.940 --> 27:56.940
Zu schauen, wie scheiße die Performance ist.

27:56.940 --> 27:58.940
Die Performance ist nicht gut, aber so

27:58.940 --> 28:00.940
ist ja eh die Scheiße, dass es unbenutzbar ist.

28:00.940 --> 28:02.940
Ist es gar nicht.

28:02.940 --> 28:04.940
Es geht sogar halbwegs.

28:04.940 --> 28:08.440
So.

28:08.440 --> 28:10.440
Geht

28:10.440 --> 28:12.440
mein KVM denn jetzt?

28:12.440 --> 28:14.440
Was ist denn das hier mit J?

28:14.440 --> 28:25.370
No hypervisor options

28:25.370 --> 28:27.370
found. Okay.

28:27.370 --> 28:29.370
Habe ich kein QEMO? Da muss ich mal kurz

28:29.370 --> 28:31.370
gucken, wie installiert man den ganzen Krempel?

28:46.280 --> 28:48.280
Okay, war das klar?

28:48.280 --> 28:50.280
Nein, nein, nein, nein.

28:50.280 --> 28:52.280
Moment.

28:52.280 --> 28:54.280
Was muss ich denn installieren?

28:54.280 --> 28:56.280
QEMO? KVM?

28:56.280 --> 28:58.280
Hm. Wie heißt denn das Package,

28:58.280 --> 29:00.280
was ich da...

29:00.280 --> 29:02.280
QEMO Full vielleicht? Gibt es?

29:04.280 --> 29:06.280
Okay. Ja, ja.

29:06.280 --> 29:15.480
Hau drauf. Gib ihm.

29:15.480 --> 29:17.480
So.

29:17.480 --> 29:20.860
Hoffen wir mal, dass ich

29:20.860 --> 29:22.860
jetzt ein funktionierendes...

29:22.860 --> 29:29.050
Ah, jetzt funktioniert es.

29:29.050 --> 29:31.050
Okay. Jetzt kann ich VMs starten.

29:31.050 --> 29:33.050
Alles gut.

29:33.050 --> 29:35.050
So. Dann muss ich mich

29:35.050 --> 29:37.050
wahrscheinlich noch in die libvirt Gruppe

29:37.050 --> 29:42.600
packen.

29:42.600 --> 29:44.600
User add libvirt

29:44.600 --> 29:46.600
glaube ich zumindest. Sonst darf ich von mir

29:46.600 --> 29:48.600
aus nicht darauf zugreifen.

29:48.600 --> 29:50.600
Wobei, brauche

29:50.600 --> 29:54.100
ich das überhaupt?

29:54.100 --> 29:56.100
Add connections

29:56.100 --> 30:07.540
user session. Okay.

30:07.540 --> 30:11.050
Ach ja.

30:11.050 --> 30:14.870
Okay. Das testen wir jetzt mal.

30:14.870 --> 30:16.870
Debian Cloud

30:16.870 --> 30:18.870
Image Download. Wir gucken mal, ob

30:18.870 --> 30:20.870
die VM in der VM funktioniert.

30:20.870 --> 30:22.870
Bullseye Latest.

30:22.870 --> 30:24.870
Klingt eigentlich ganz gut.

30:24.870 --> 30:26.870
AMD 64

30:26.870 --> 30:28.870
QCow

30:28.870 --> 30:30.870
Image. Genau das brauchen wir.

30:30.870 --> 30:34.310
Debian 1 Generic.

30:34.310 --> 30:36.310
Cloud Generic.

30:36.310 --> 30:43.140
Wunderbar. Gib ihm.

30:43.140 --> 30:45.140
So. Schauen wir mal, ob meine VM lokal

30:45.140 --> 30:47.140
funktioniert.

30:47.140 --> 30:49.140
Mit dem Wirt Manager. Wie gesagt,

30:49.140 --> 30:51.140
das, was ich hier jetzt mit dem Wirt Manager

30:51.140 --> 30:53.140
mache, das will ich

30:53.140 --> 30:55.140
über die KVM

30:55.140 --> 30:57.140
oder die libvirt API machen.

30:57.140 --> 30:59.140
Das muss man über irgendwelche C-APIs

30:59.140 --> 31:01.140
aufrufen. Das wird ganz aberhandig gleich.

31:01.140 --> 31:03.140
Aber dann sehen wir auch, ob

31:03.140 --> 31:05.140
die Kompilierung von .NET was taugt,

31:05.140 --> 31:07.140
wenn das alles funktioniert. Falls

31:07.140 --> 31:09.140
ich überhaupt was auf die Reihe kriege.

31:09.140 --> 31:11.140
So.

31:11.140 --> 31:13.140
Ja, ja. Local Install

31:13.140 --> 31:15.140
Media. Boah, wie geht

31:15.140 --> 31:17.140
denn der Kram? Ich benutze das eigentlich

31:17.140 --> 31:21.160
nie. Download.

31:21.160 --> 31:26.200
Debian.

31:26.200 --> 31:28.200
Select. Ja, Linux.

31:28.200 --> 31:32.150
Linux 20

31:32.150 --> 31:34.150
2020.

31:34.150 --> 31:36.150
Perfekt. Das wollte ich schon immer haben.

31:36.150 --> 31:38.150
Zwei. Eine

31:38.150 --> 31:40.150
CPU reicht. 1024 MB

31:40.150 --> 31:42.150
reicht auch.

31:42.150 --> 31:44.150
Storage.

31:44.150 --> 31:46.150
Ja. Perfekt. Wunderbar.

31:46.150 --> 31:49.660
Alles klar.

31:49.660 --> 31:51.660
Finish.

31:51.660 --> 31:53.660
Ok. Funktioniert.

31:53.660 --> 31:55.660
Funktioniert.

31:55.660 --> 31:57.660
Also ich meine,

31:57.660 --> 31:59.660
die VM bootet nicht,

31:59.660 --> 32:01.660
aber die VM startet. Das reicht.

32:01.660 --> 32:05.610
Das reicht mir eigentlich schon.

32:05.610 --> 32:07.610
Das ist kein ISO. Du hast Recht.

32:07.610 --> 32:09.610
Das ist kein ISO. Das ist ein komplettes

32:09.610 --> 32:11.610
VM-Image. Ok. Aber

32:11.610 --> 32:13.610
die VM startet. Das ist das Eigentliche, was

32:13.610 --> 32:15.610
ich haben will.

32:15.610 --> 32:17.610
Delete.

32:17.610 --> 32:19.610
Funktioniert. Gut. So.

32:19.610 --> 32:21.610
Und jetzt gucken wir mal, wie wir das

32:21.610 --> 32:23.610
über die API machen können.

32:23.610 --> 32:25.610
Das wird

32:25.610 --> 32:30.260
was.

32:30.260 --> 32:32.260
Das wird was.

32:32.260 --> 32:34.260
Lib wird

32:34.260 --> 32:36.260
API.

32:36.260 --> 32:38.260
Documentation.

32:38.260 --> 32:44.140
Oh, jetzt wird es abartig.

32:44.140 --> 32:47.640
Äh.

32:47.640 --> 32:49.640
API-Reference. Excellent.

32:49.640 --> 32:57.720
Ok.

32:57.720 --> 32:59.720
Ähm.

32:59.720 --> 33:01.720
Domain. Aus irgendwelchen Gründen

33:01.720 --> 33:03.720
nennt sich eine VM in KVM Domain.

33:03.720 --> 33:05.720
Ich weiß auch nicht, warum.

33:05.720 --> 33:07.720
Es hat nichts mit DNS und so.

33:07.720 --> 33:09.720
Ach du Scheiße.

33:09.720 --> 33:17.900
Alter.

33:17.900 --> 33:19.900
MonkaW. Ok. Ich gebe zu,

33:19.900 --> 33:21.900
ich habe im Vorfeld schon ein bisschen gespickt.

33:21.900 --> 33:23.900
Ich weiß ein bisschen, nach was ich gucken muss.

33:23.900 --> 33:25.900
Connection gucken.

33:25.900 --> 33:27.900
Äh. Ne. Nach Connect

33:27.900 --> 33:31.660
muss ich gucken.

33:31.660 --> 33:33.660
Wenn ich das, wenn ich das richtig in Erinnerung habe. Connect.

33:33.660 --> 33:35.660
Hier. Connect.

33:35.660 --> 33:37.660
Connect.

33:37.660 --> 33:39.660
Aha. Nope.

33:39.660 --> 33:41.660
Wird nicht connected. Wo ist das denn?

33:41.660 --> 33:43.660
Also. Das funktioniert folgendermaßen.

33:43.660 --> 33:45.660
Eine VM über die

33:45.660 --> 33:47.660
über die Linux-API anzulegen.

33:47.660 --> 33:49.660
Man muss

33:49.660 --> 33:51.660
als erstes connect zu

33:51.660 --> 33:53.660
libvirt.

33:53.660 --> 33:55.660
libvirt ist dieses Ding, was

33:55.660 --> 33:57.660
der Wirt-Manager auch verwendet.

33:57.660 --> 33:59.660
Also keiner spricht direkt KVM.

33:59.660 --> 34:01.660
Die sprechen alle über diese API-Schnittstelle damit.

34:01.660 --> 34:03.660
Sondern man muss sich zu libvirt connecten.

34:03.660 --> 34:05.660
Am Ende muss man

34:05.660 --> 34:09.480
die Connection wieder closen.

34:09.480 --> 34:11.480
Dann muss man

34:11.480 --> 34:13.480
create-vm machen.

34:13.480 --> 34:15.480
Wie auch immer.

34:15.480 --> 34:17.480
Dann muss man aufs Netzwerk warten,

34:17.480 --> 34:19.480
dass das Ganze funktioniert.

34:19.480 --> 34:24.460
Und dann ist gut. Dann ist die VM wieder da.

34:24.460 --> 34:26.460
GitHub Code Pile. Frag mal.

34:26.460 --> 34:36.740
Okay.

34:36.740 --> 34:38.740
Connect.

34:38.740 --> 34:40.740
Also wie connecten wir uns zu libvirt?

34:40.740 --> 34:45.210
Das funktioniert

34:45.210 --> 34:47.210
so wie hier.

34:47.210 --> 34:49.210
Man muss dann hier irgendwie so eine Connection

34:49.210 --> 34:51.210
angeben.

34:51.210 --> 34:53.210
qemo://session

34:53.210 --> 34:55.210
Und

34:55.210 --> 34:57.210
dann funktioniert das. Aber ich muss jetzt erstmal die richtigen

34:57.210 --> 34:59.210
die richtigen APIs finden.

34:59.210 --> 35:02.710
Das heißt auf jeden Fall connect.

35:02.710 --> 35:04.710
So viel habe ich im Vorfeld schon raus

35:04.710 --> 35:06.710
rausbekommen.

35:06.710 --> 35:08.710
Oh.

35:08.710 --> 35:10.710
Obvious.

35:10.710 --> 35:12.710
Ja ich meine cringe wer das nicht weiß,

35:12.710 --> 35:14.710
dass es qemo://systemsession ist.

35:14.710 --> 35:16.710
Wo könnte das denn hier drinnen stehen?

35:16.710 --> 35:18.710
Wo könnte das denn hier drinnen stehen?

35:18.710 --> 35:24.520
Erstellst du gerade eine Linux-VM

35:24.520 --> 35:26.520
in eine Linux-VM?

35:26.520 --> 35:28.520
Richtig.

35:28.520 --> 35:30.520
Wo ist das Problem?

35:30.520 --> 35:32.520
Das ist dann zwar nicht mal blazingly fast,

35:32.520 --> 35:34.520
aber schnell genug.

35:34.520 --> 35:42.120
Host. Host muss ich bestimmt gucken.

35:42.120 --> 35:45.750
Connect.

35:45.750 --> 35:47.750
What the fuck man.

35:47.750 --> 35:49.750
Highlight all.

35:49.750 --> 35:51.750
Connect.

35:51.750 --> 35:53.750
Hier das sieht doch gut aus.

35:53.750 --> 35:55.750
Das sieht doch gut aus.

35:55.750 --> 35:57.750
Wir connect.

35:57.750 --> 35:59.750
Hört sich ein bisschen

35:59.750 --> 36:01.750
Wir connect.

36:01.750 --> 36:05.960
Das hört sich ein bisschen an wie

36:05.960 --> 36:07.960
Jetzt fehlen uns bloß noch Carlos Matos.

36:07.960 --> 36:09.960
Jetzt fehlen uns bloß noch Carlos Matos.

36:09.960 --> 36:11.960
Ach es geht ja noch weiter.

36:11.960 --> 36:16.040
Carlos Matos

36:16.040 --> 36:18.040
from New York City, New York.

36:18.040 --> 36:20.040
Hier.

36:20.040 --> 36:22.040
Wir connect open.

36:22.040 --> 36:24.040
Hier. Wir connect open.

36:24.040 --> 36:26.040
Das brauchen wir. Alles klar.

36:26.040 --> 36:28.040
IRQ shit.

36:28.040 --> 36:30.040
Wir connect open.

36:30.040 --> 36:32.040
So jetzt wird es spannend Leute.

36:32.040 --> 36:34.040
Native C Funktionen

36:34.040 --> 36:36.040
Native C Funktionen

36:36.040 --> 36:38.040
aus .NET aufrufen.

36:38.040 --> 36:40.040
Also.

36:40.040 --> 36:42.040
Okay erstmal.

36:42.040 --> 36:44.040
Okay erstmal.

36:44.040 --> 36:46.040
Erstmal allow unsafe code.

36:46.040 --> 36:48.040
Unsafe code wird das auf jeden Fall nicht funktionieren.

36:48.040 --> 36:50.040
Unsafe code wird das auf jeden Fall nicht funktionieren.

36:50.040 --> 36:52.040
DLL import.

36:52.040 --> 36:54.040
So jetzt muss ich abgucken.

36:54.040 --> 36:56.040
Ich muss abgucken weil

36:56.040 --> 36:58.040
Ich hab mir im Vorfeld schon ein Beispiel

36:58.040 --> 37:00.040
angeguckt und hab mir das hier

37:00.040 --> 37:02.040
ins Notepad auf

37:02.040 --> 37:05.860
auf dem anderen Bildschirm kopiert.

37:05.860 --> 37:07.860
Weil sonst

37:07.860 --> 37:09.860
plick ich da nicht durch wie das aussehen muss

37:09.860 --> 37:14.460
der Aufruf.

37:14.460 --> 37:16.460
So muss das aussehen.

37:16.460 --> 37:22.780
Sekunde.

37:22.780 --> 37:24.780
Ja so muss das aussehen.

37:24.780 --> 37:26.780
Hab ich schon rausgesucht.

37:26.780 --> 37:28.780
So muss das aussehen.

37:28.780 --> 37:30.780
Obviously muss das so aussehen.

37:30.780 --> 37:32.780
Also

37:32.780 --> 37:34.780
cringe wem nicht klar ist

37:34.780 --> 37:38.920
dass das so aussehen muss.

37:38.920 --> 37:40.920
So und jetzt müssen wir nur noch diese C Funktion

37:40.920 --> 37:42.920
irgendwie übersetzen in eine gültige

37:42.920 --> 37:44.920
C Sharp Funktionssignatur.

37:44.920 --> 37:46.920
Also das ganze muss

37:46.920 --> 37:48.920
schon mal in extra Klasse rein.

37:48.920 --> 37:50.920
Es gibt

37:50.920 --> 37:52.920
wird C Sharp Bindings. Ne die gibt es nicht.

37:52.920 --> 37:54.920
Hab ich im Vorfeld geguckt. Gibt es keine

37:54.920 --> 37:56.920
gescheiten. Es gibt offizielle

37:56.920 --> 37:58.920
Bindings. Die sind nur für .NET Framework.

37:58.920 --> 38:00.920
Wer auch immer seriously mit

38:00.920 --> 38:02.920
.NET Framework von Windows aus

38:02.920 --> 38:04.920
libvirt verwenden will. Und der Rest ist outdated

38:04.920 --> 38:06.920
und hat so Sachen wie Netzwerk

38:06.920 --> 38:08.920
Infos und so nicht drin. Es gibt keine

38:08.920 --> 38:10.920
gescheiten libvirt bindings. Leider.

38:10.920 --> 38:12.920
Sonst hätte ich die tatsächlich genommen.

38:12.920 --> 38:14.920
Okay. Wir connect

38:14.920 --> 38:16.920
pointer return der. Das ist mir doch

38:16.920 --> 38:18.920
egal was der return.

38:18.920 --> 38:20.920
So. Wir connect open.

38:20.920 --> 38:22.920
Das gibt

38:22.920 --> 38:24.920
ein String. Das sollte der richtig hinbekommen.

38:24.920 --> 38:29.260
Public

38:29.260 --> 38:31.260
class

38:31.260 --> 38:36.100
interop

38:36.100 --> 38:40.820
dll import

38:40.820 --> 38:44.200
unsave. Ne.

38:44.200 --> 38:48.730
Achso method.

38:48.730 --> 38:50.730
Okay. Public

38:50.730 --> 38:52.730
static extern

38:52.730 --> 38:54.730
wirste. Gut.

38:54.730 --> 38:56.730
So. Das müsste

38:56.730 --> 38:58.730
als Definition ausreichen um mich

38:58.730 --> 39:00.730
connecten zu können zu meinem

39:00.730 --> 39:02.730
lokal laufenden libvirt.

39:02.730 --> 39:04.730
Jetzt bin ich mal gespannt. Gucken wir mal.

39:04.730 --> 39:06.730
Also er return. Was returnt denn der überhaupt?

39:06.730 --> 39:08.730
Was ist denn das?

39:08.730 --> 39:10.730
Was ist denn das?

39:10.730 --> 39:12.730
This should be called first to get a

39:12.730 --> 39:14.730
connection to the hypervisor.

39:14.730 --> 39:16.730
Ja das ist nice.

39:16.730 --> 39:18.730
If name is null

39:18.730 --> 39:20.730
default environment

39:20.730 --> 39:22.730
environment will be used. Okay.

39:22.730 --> 39:26.100
Pointer to the hype.

39:26.100 --> 39:28.100
Jetzt gehts los mit pointer.

39:28.100 --> 39:30.100
Was auch sonst logischerweise.

39:30.100 --> 39:32.100
A pointer to the hypervisor

39:32.100 --> 39:34.100
connection or null in case of error.

39:34.100 --> 39:36.100
Alles

39:36.100 --> 39:38.100
klar.

39:38.100 --> 39:40.100
So.

39:40.100 --> 39:43.930
Probieren wir mal aus.

39:43.930 --> 39:45.930
Interop

39:45.930 --> 39:47.930
connection open

39:47.930 --> 39:49.930
qemo

39:49.930 --> 39:51.930
doppelpunkt doppelpunkt

39:51.930 --> 39:53.930
doppelpunkt slash slash slash

39:53.930 --> 39:55.930
session. Warum?

39:55.930 --> 39:57.930
Weil zu ist.

39:57.930 --> 39:59.930
So. Und da kommt irgendeine ID zurück. Irgendein

39:59.930 --> 40:01.930
Pointer. Wir gucken

40:01.930 --> 40:03.930
jetzt mal ob das null ist.

40:03.930 --> 40:05.930
Und wenn das null ist

40:05.930 --> 40:07.930
ist es kaputt oder ist es gecrashed oder

40:07.930 --> 40:09.930
wenn es eine Zahl ist dann funktioniert es. Hoffentlich.

40:09.930 --> 40:11.930
Wo sind wir denn?

40:11.930 --> 40:13.930
Repo

40:13.930 --> 40:15.930
vmchamp

40:15.930 --> 40:17.930
.net

40:17.930 --> 40:19.930
Ja. Geh mal weg.

40:19.930 --> 40:21.930
.net run

40:21.930 --> 40:23.930
forcechamp

40:23.930 --> 40:25.930
Es geht.

40:25.930 --> 40:27.930
Glaube ich zumindest.

40:27.930 --> 40:29.930
Es könnte auch ein Pointer

40:29.930 --> 40:31.930
ins nicht sein.

40:31.930 --> 40:33.930
Man weiß es nicht genau.

40:33.930 --> 40:35.930
Es könnte auch

40:35.930 --> 40:37.930
sonst wo hin pointen.

40:37.930 --> 40:39.930
Ja .net 8 alpha ist raus.

40:39.930 --> 40:41.930
Ist rausgekommen vor zwei Wochen.

40:41.930 --> 40:45.240
Könnte auch irgendein int

40:45.240 --> 40:47.240
im RAM sein. Random.

40:47.240 --> 40:49.240
Okay. Wir haben.

40:49.240 --> 40:51.240
Es sieht aus als hätten wir einen Pointer auf

40:51.240 --> 40:53.240
irgendwas wo ich nicht genau weiß auf was.

40:53.240 --> 40:57.000
Nehmen wir auch mal. Okay wir können

40:57.000 --> 40:59.000
hier mal Mist eintragen. Das stimmt schon.

40:59.000 --> 41:03.340
Ja geht dann

41:03.340 --> 41:05.340
auch nicht. Dann meckert er wegen

41:05.340 --> 41:07.340
irgendwelchen Rechten rum.

41:07.340 --> 41:09.340
Was System. Auf System habe ich auf jeden Fall

41:09.340 --> 41:11.340
keine Rechte. Ja tatsächlich.

41:11.340 --> 41:13.340
Okay da gehts

41:13.340 --> 41:15.340
da gehts kaputt an der Stelle. Wenn ich

41:15.340 --> 41:17.340
irgendwas anderes eintrage.

41:17.340 --> 41:19.340
Das sieht schon mal so aus als funktioniert das

41:19.340 --> 41:21.340
ganz. Okay.

41:21.340 --> 41:23.340
Weiter. Weiter im Text.

41:23.340 --> 41:25.340
So. Connection. Connection

41:25.340 --> 41:27.340
open. Wie erstellt man damit.

41:27.340 --> 41:29.340
Achso. Jetzt brauchen wir das ganze natürlich noch für

41:29.340 --> 41:31.340
Connection closed.

41:31.340 --> 41:33.340
Ich predikte

41:33.340 --> 41:35.340
einfach mal das es closed heißt.

41:35.340 --> 41:37.340
Ich hoffe es heißt nicht stopp

41:37.340 --> 41:39.340
oder sowas.

41:39.340 --> 41:41.340
Und dann braucht das

41:41.340 --> 41:46.630
hier.

41:46.630 --> 41:48.630
Ach ne hier. Und dann braucht es

41:48.630 --> 41:50.630
diesen Pointer um es wieder zu closen.

41:50.630 --> 41:52.630
Also.

41:52.630 --> 41:54.630
In Pointer.

41:54.630 --> 41:58.650
Connection.

41:58.650 --> 42:00.650
Schauen wir mal. Schauen wir mal ob das Connection herstellen

42:00.650 --> 42:02.650
und schließen wenigstens funktioniert.

42:02.650 --> 42:04.650
Close.

42:04.650 --> 42:06.650
Con-ID.

42:06.650 --> 42:08.650
So und wenn er jetzt nicht crasht.

42:08.650 --> 42:13.430
Bin ich happy.

42:13.430 --> 42:15.430
Er crasht nicht. Das sieht doch schon mal ganz gut aus.

42:15.430 --> 42:19.640
Okay.

42:19.640 --> 42:21.640
Nice.

42:21.640 --> 42:23.640
Und jetzt.

42:23.640 --> 42:25.640
Also wir können schon mal.

42:25.640 --> 42:27.640
Wir können schon mal eine Verbindung herstellen.

42:27.640 --> 42:29.640
Also halber Wirt Manager ist fertig programmiert.

42:29.640 --> 42:31.640
Wir können eine Verbindung zu dem Wirt herstellen.

42:31.640 --> 42:33.640
Das reicht.

42:33.640 --> 42:35.640
Rest kommt von alleine.

42:35.640 --> 42:37.640
Okay. Create

42:37.640 --> 42:39.640
Domain. Ne. Fuck.

42:39.640 --> 42:41.640
Aber ich bin ja auch

42:41.640 --> 42:43.640
falsch. Ich bin ja auch

42:43.640 --> 42:45.640
in Horus. Ich muss zu Domains. Create Domain.

42:45.640 --> 42:47.640
Create Domain.

42:47.640 --> 42:49.640
Fuck. Create.

42:49.640 --> 42:51.640
Wie erstellt man jetzt

42:51.640 --> 42:56.490
Vm?

42:56.490 --> 42:58.490
Wir Domain create Linux.

42:58.490 --> 43:05.220
Was?

43:05.220 --> 43:07.220
Was zum?

43:07.220 --> 43:09.220
Wir Domain create Linux.

43:09.220 --> 43:11.220
Wir Domain create

43:11.220 --> 43:13.220
XML. Wir Domain create

43:13.220 --> 43:22.620
with fi-

43:22.620 --> 43:24.620
Ach Domain create gibt es auch einfach.

43:24.620 --> 43:26.620
Okay. Gucken wir mal was das macht.

43:26.620 --> 43:28.620
Launch a defined Domain.

43:28.620 --> 43:30.620
Ach ne. Moment. Ich hab ja nix. Ich hab ja nix

43:30.620 --> 43:34.890
defined.

43:34.890 --> 43:36.890
Launch a defined Domain. If the call is successful

43:36.890 --> 43:38.890
it moves from the defined running domain. Ne.

43:38.890 --> 43:45.210
Ne. Ne. Ne. Ne.

43:45.210 --> 43:47.210
Domain create with

43:47.210 --> 43:53.720
XML.

43:53.720 --> 43:55.720
Wir brauchen

43:55.720 --> 43:57.720
Wir Domain create XML.

43:57.720 --> 43:59.720
Brauchen wir anscheinend.

43:59.720 --> 44:01.720
Guck mal.

44:01.720 --> 44:03.720
Launch a new guest domain

44:03.720 --> 44:05.720
based on an XML description.

44:07.720 --> 44:09.720
Die wollen uns quälen heute, oder?

44:09.720 --> 44:13.860
XML shit.

44:13.860 --> 44:20.950
Create

44:20.950 --> 44:22.950
XML flags.

44:22.950 --> 44:24.950
Was sind flags?

44:24.950 --> 44:26.950
Arrays or supported

44:26.950 --> 44:28.950
Wir Domain create flags.

44:28.950 --> 44:30.950
Wir Domain post,

44:30.950 --> 44:32.950
auto, bypass.

44:32.950 --> 44:34.950
Okay. Juckt mich nicht.

44:34.950 --> 44:36.950
Okay. Also.

44:36.950 --> 44:38.950
Wir Domain.

44:38.950 --> 44:40.950
Wir Domain create XML.

44:40.950 --> 44:45.290
Alles klar. Kopieren wir das mal.

44:45.290 --> 44:47.290
Das wird was.

44:47.290 --> 44:49.290
Ich bin echt gespannt ob ich in der Lage bin

44:49.290 --> 44:51.290
eine Vm zu erstellen über die

44:51.290 --> 44:53.290
CAP.

44:53.290 --> 44:55.290
So. Also.

44:55.290 --> 44:57.290
Domain pointer kommt zurück.

44:57.290 --> 44:58.670
Wunderbar, kann in Pointer bleiben.

44:59.190 --> 45:01.450
So, wir Connection Pointer, ist richtig.

45:02.050 --> 45:03.090
XML Description.

45:03.890 --> 45:04.530
String XML.

45:04.830 --> 45:08.070
Leute, wenn man das so macht, teilweise gibt es Memory Leaks.

45:08.370 --> 45:12.570
Das ist aber nicht schlimm, weil die Anwendung startet und stoppt sich eh wieder und wird alles aufgeräumt.

45:12.810 --> 45:14.910
Scheiß drauf, ob es Memory Leaks gibt oder nicht.

45:17.390 --> 45:19.730
Unsigned Int Flex.

45:22.300 --> 45:22.700
Flex.

45:22.940 --> 45:24.400
Okay, das setzen wir mal auf 0.

45:24.480 --> 45:25.920
Ich will eigentlich keine Flex setzen.

45:25.920 --> 45:33.000
Jetzt ist nur die Frage, wo kriegen wir mal ein gültiges XML für eine VM her?

45:35.420 --> 45:36.180
Interop.

45:36.620 --> 45:38.080
Create XML.

45:39.460 --> 45:39.680
So.

45:40.260 --> 45:44.500
Connection ID von meiner LibWirt Connection.

45:48.050 --> 46:00.470
Wenn man was wie macht, gibt es Leaks, wenn man so Native Funktionen aufruft und Managed Datentypen übergibt.

46:00.470 --> 46:03.250
In dem Fall in die Richtung geht es.

46:04.130 --> 46:04.670
Aber das ist...

46:04.750 --> 46:08.790
Das ist dann problematisch, sollte das die andere Seite irgendwie freigeben oder sowas.

46:10.030 --> 46:13.470
Also es gibt manchmal Probleme, wenn man Managed Datentypen hin und her schiebt.

46:14.290 --> 46:18.610
Und da muss man genau drauf achten, wer wie wann wo was freigeben muss.

46:26.040 --> 46:28.560
LibWirt DOM XML Example.

46:33.250 --> 46:35.150
Okay, das ist sehr kurz und knackig.

46:50.420 --> 46:52.700
Das ist sehr kurz und knackig.

46:55.150 --> 46:56.530
Das probieren wir jetzt mal aus.

46:56.530 --> 46:57.750
Okay, also.

46:59.050 --> 47:00.030
War XML.

47:01.310 --> 47:04.930
Jetzt können wir hier das neue String-Literal-Syntax verwenden.

47:06.130 --> 47:06.250
So.

47:09.280 --> 47:09.720
Okay.

47:11.060 --> 47:12.500
Übrigens, da müsst ihr drauf achten.

47:12.760 --> 47:18.980
Das kann ich euch an der Stelle nochmal kurz erzählen, weil da macht man sich Probleme und sucht danach ewig Fehler.

47:19.200 --> 47:22.880
Also, das erinnert vielleicht ein bisschen an Python hier an der Stelle.

47:23.000 --> 47:28.140
Das geht allerdings auch seit .NET 7, glaube ich, erst.

47:28.280 --> 47:29.700
Oder 6 oder 7, ich weiß nicht.

47:29.700 --> 47:32.720
Seit einem der allerletzten, recent C-Sharp-Version.

47:32.720 --> 47:36.280
Dass man Multi-Line-Strings so mit dreifachen Anführungszeichen machen kann.

47:36.680 --> 47:38.700
Es gibt noch mehr Varianten, wie man das machen kann.

47:38.820 --> 47:53.300
Aber wichtig ist, die schließenden Triple Quotes, die müssen auf der Höhe stehen, wo euer Text in der Datei anfangen soll.

47:53.600 --> 47:57.300
Wenn ich das so habe, wenn ich das hier so habe, dann...

47:59.680 --> 48:00.640
Moment, hier ist es mal neu.

48:01.260 --> 48:04.520
Wenn ich das so habe, dann landet es mit einem Text.

48:04.520 --> 48:05.920
Und dann ist es mit einem Tab in der Datei.

48:06.260 --> 48:08.540
Und je nachdem ist das dann vielleicht nicht gültig.

48:09.380 --> 48:11.860
Also, bei XML jetzt egal, aber das kann durchaus sein.

48:12.180 --> 48:22.440
Das heißt, man muss immer darauf achten, wo man hier die klausenden Triple Quotes platziert.

48:22.520 --> 48:24.000
Weil ihr seht es ja hier auch an dem Blauen.

48:24.620 --> 48:27.660
Das ist quasi die Baseline, wo es dann am Ende...

48:28.440 --> 48:30.120
Ja, mit Jammel wird es dann Fehler geben, genau.

48:30.420 --> 48:33.800
Das ist so die Baseline, wie es am Ende dann auch wieder rauskommt.

48:35.580 --> 48:36.620
Also, da muss man gucken.

48:36.820 --> 48:40.380
Also, man macht instinktiv es vorne, aber es ist falsch.

48:40.460 --> 48:42.780
Es muss dort sein, wo der Text aufhören soll.

48:44.780 --> 48:47.720
Weil, wenn ich die weiter einrücke, dann will er nicht.

48:50.260 --> 48:51.300
Und sagt, das geht nicht.

48:52.420 --> 48:55.000
Also, man muss das wirklich hier an der Stelle machen.

48:55.460 --> 48:59.900
Das haben die in Rider auch gut gemacht, dass man hier so eine blaue Linie bekommt.

49:01.040 --> 49:05.820
Okay, also, wir müssen ein paar Sachen generieren, dass man die vor allem anlegen kann anscheinend.

49:06.180 --> 49:07.960
Good, gleich, good, new.

49:13.320 --> 49:13.680
New?

49:15.760 --> 49:17.680
So, dann setzen wir das mal hier ein.

49:22.050 --> 49:23.610
Memory, ja, wunderbar.

49:24.510 --> 49:26.530
Reine CPU, wunderbar, wunderbar.

49:26.710 --> 49:28.410
Local Time, wunderbar, alles gut.

49:30.490 --> 49:34.730
Emulator, User Bin, QEMO, KVM, wunderbar.

49:35.310 --> 49:39.670
Source Files, wahr, lib, lib wird, Images, Demo 2, Image.

49:43.170 --> 49:44.890
Latest, Moment.

49:45.650 --> 49:47.230
Debian Cloud, hier.

49:47.230 --> 49:52.190
Wir müssen mal kurz noch ein Debian Cloud Image runterladen, um zu gucken, ob das dann auch funktioniert.

49:54.690 --> 49:55.970
Generic Cloud.

49:58.010 --> 49:59.050
Copy Link.

49:59.950 --> 50:00.510
WGET.

50:01.310 --> 50:01.710
Schön.

50:03.930 --> 50:05.630
32 Bit? Ach so.

50:09.400 --> 50:11.700
Ja, hm, was muss man da einstellen?

50:12.160 --> 50:14.760
Ich mein, ich kann es mal so lassen, es ist ja nicht...

50:16.080 --> 50:17.760
Es sollte ja nicht davon...

50:17.760 --> 50:18.760
Es sollte ja nicht davon...

50:18.760 --> 50:20.460
...kaputt gehen, oder?

50:21.220 --> 50:27.370
Wir können es doch einfach mal raus...

50:27.370 --> 50:31.940
Ne, komm, wir machen Arch...

50:31.940 --> 50:33.760
Ja, keine Ahnung, wie das aussehen muss.

50:36.820 --> 50:37.420
X...

50:37.420 --> 50:40.520
...86, 64 oder so?

50:41.780 --> 50:42.380
HVM?

50:43.220 --> 50:43.940
Was...

50:43.940 --> 50:46.500
Was ist HVM?

50:49.130 --> 50:51.830
Wir sollten uns mal so ein XML-File von irgendwo kopieren.

50:52.210 --> 50:54.110
Die MAC-Adresse schmeißen wir raus.

50:54.110 --> 50:56.110
So, ich muss gucken, ob mein...

50:57.390 --> 50:58.110
...Network...

50:58.930 --> 51:01.810
Ah, Mist, das Netzwerk ist noch gar nicht da.

51:01.870 --> 51:02.910
Aber das ist jetzt erstmal egal.

51:03.650 --> 51:05.790
Keymap, Graphics, Output brauchen wir nicht.

51:06.550 --> 51:07.790
Target Device, HDA.

51:08.430 --> 51:09.970
Äh, File...

51:09.970 --> 51:12.190
...ist...

51:12.190 --> 51:15.630
Ich bin mir gar nicht sicher, ob man das absolut angeben muss, aber wahrscheinlich.

51:16.570 --> 51:19.570
Ja, also File ist Debian Image.

51:20.750 --> 51:22.770
Bin ich mal gespannt, ob das funktioniert.

51:22.910 --> 51:23.430
Alter, lul.

51:24.850 --> 51:26.090
Ich hab ja so meine...

51:26.090 --> 51:27.490
...so meine Zweifel, ob...

51:30.930 --> 51:31.330
Moment.

51:31.650 --> 51:33.150
Muss ich auch an der Stelle...

51:33.150 --> 51:33.850
...QEMU...

51:33.850 --> 51:35.890
...QEMU System...

51:35.890 --> 51:38.870
...AMD64, wo ist das denn?

51:39.790 --> 51:40.470
Ne, das ist irgendwo.

51:41.810 --> 51:43.870
Ne, System X86 heißt das, glaube ich.

51:44.270 --> 51:44.970
Hier, X86.

51:45.470 --> 51:49.570
Das muss ich auch eintragen, sonst kann das an der Stelle auch schon mal nicht funktionieren.

51:51.570 --> 51:51.970
Ja.

51:52.970 --> 51:53.910
Okay, nice.

51:55.390 --> 51:56.390
Jetzt bin ich mal gespannt.

51:56.390 --> 51:57.310
Demo 2.

51:57.950 --> 52:00.710
Ja, Demo 2 ist perfekter Name für die HVM.

52:01.650 --> 52:03.150
Alles klar.

52:03.630 --> 52:06.350
Okay, dann probieren wir das mal aus, ob er die HVM jetzt erstellt.

52:10.120 --> 52:10.560
Da...

52:10.560 --> 52:13.740
Im Leben nicht, Alter, im Leben nicht.

52:14.260 --> 52:14.700
XML.

52:16.140 --> 52:16.900
Okay, gib ihm.

52:17.080 --> 52:17.280
Run.

52:22.370 --> 52:23.250
Network not found.

52:23.450 --> 52:24.370
No network with machine...

52:25.170 --> 52:26.370
...with matching name default.

52:27.890 --> 52:28.090
Ja.

52:30.130 --> 52:30.650
Toll.

52:36.810 --> 52:37.950
Ähm, warum, warum nicht?

52:41.720 --> 52:42.860
Wir lassen Network...

52:42.860 --> 52:44.100
Aber das Netzwerk brauche ich ja spielen.

52:44.100 --> 52:46.140
Wir lassen das Network einfach mal weg zum Ausprobieren.

52:46.240 --> 52:46.740
Not let's run.

52:46.740 --> 52:52.230
Die VM läuft.

52:54.230 --> 52:55.230
Die, die geht einfach.

52:57.210 --> 53:00.930
Okay, wir wissen nicht, ob sie geht, weil wir haben keine grafische Ausgabe, aber...

53:00.930 --> 53:02.590
Moment mal, ich, ich delete das nochmal.

53:04.050 --> 53:05.110
Ich delete das nochmal.

53:05.450 --> 53:06.870
Wo war das jetzt mit dem VNC?

53:10.670 --> 53:12.130
Wo war das jetzt mit dem VNC?

53:12.170 --> 53:13.690
Ich hab doch irgendwo ein VNC gelöscht.

53:13.970 --> 53:14.330
Graphics.

53:14.830 --> 53:16.670
Hier, VNC kommt da unten nochmal rein.

53:19.800 --> 53:20.840
Dass ich, dass ich auch was sehe.

53:22.280 --> 53:22.640
Run.

53:22.640 --> 53:22.720
Run.

53:23.560 --> 53:23.960
Run.

53:29.360 --> 53:30.140
No boot...

53:30.140 --> 53:32.780
No bootable device?

53:36.840 --> 53:38.800
Okay, die VM erstellt das schon mal und jetzt?

53:42.560 --> 53:43.420
IDE-Disk.

53:45.220 --> 53:47.320
Äh, nee, das wird so wahrscheinlich nix.

53:48.600 --> 53:49.460
Okay, delete.

53:49.840 --> 53:50.420
Ihr habt recht.

53:50.640 --> 53:52.820
Ich, ich, ich kopiere mir hier eine raus.

53:55.780 --> 53:56.140
Was hier?

53:56.280 --> 53:56.520
Zack.

53:57.960 --> 54:00.280
Wird, wird install.

54:01.720 --> 54:02.240
Example.

54:07.100 --> 54:08.140
Wird install.

54:08.140 --> 54:09.900
Okay, gut, hab ich drauf.

54:09.900 --> 54:21.260
Ähm, also, ich hab KVM-Install-Github, ja, ich verwende aktuell bei mir lokal so dieses

54:21.260 --> 54:27.120
Bash-Script vom Geo-Torres, um mir ab und zu lokal Test-VMs anzulegen.

54:27.200 --> 54:33.680
Das geht sehr zackig und sowas könnte man ja auch mal in C-Sharp bauen.

54:35.420 --> 54:39.060
Allerdings kann man uns da abgucken, wie wird, wie wird install funktioniert?

54:40.060 --> 54:40.720
Nämlich so.

54:40.720 --> 54:40.800
So.

54:43.290 --> 54:43.730
Also.

54:43.930 --> 54:44.610
Wird install.

54:45.830 --> 54:47.950
Graphics-Options brauchen wir nicht.

54:53.150 --> 54:54.750
Graphics-Options brauchen wir nicht.

54:56.030 --> 54:57.210
OS-Variant.

54:58.210 --> 55:00.850
Hm, bin ich mir unschlüssig, was da rein muss.

55:07.280 --> 55:08.780
Äh, Network-Options.

55:10.960 --> 55:12.120
Disk-Options.

55:14.420 --> 55:17.840
Äh, ey, da kann man uns gar nicht mehr nix so zusammen reimen gerade.

55:22.440 --> 55:22.860
Shit.

55:23.760 --> 55:25.500
Okay, wir müssen das, wir müssen das anders machen.

55:25.500 --> 55:26.840
Wir müssen hier eine VM erstellen.

55:26.940 --> 55:27.140
Test.

55:27.340 --> 55:29.460
Also, Create-New-Virtual-Machine.

55:32.000 --> 55:33.980
Manual-Manual-Install.

55:37.180 --> 55:38.060
X8664-VM.

55:39.320 --> 55:40.000
Äh, Linux.

55:41.440 --> 55:42.940
2020 soll da Kram.

55:43.060 --> 55:45.780
Oder Linux, ja, Generic-Linux, wunderbar.

55:46.440 --> 55:48.600
Ja, meinetwegen zwei CPUs.

55:49.000 --> 55:51.120
Select-Create-Custom-Storage.

55:51.320 --> 55:51.480
So.

55:52.460 --> 55:54.700
Und da wollen wir jetzt an der Stelle haben.

55:57.710 --> 55:59.070
Wo hab ich das runtergeladen?

55:59.070 --> 55:59.910
Repos.

56:00.170 --> 56:00.190
Repos.

56:00.190 --> 56:00.230
Repos.

56:00.230 --> 56:00.330
Repos.

56:00.330 --> 56:00.390
Repos.

56:00.390 --> 56:00.410
Repos.

56:00.410 --> 56:00.430
Repos.

56:00.430 --> 56:06.780
Repos.

56:06.780 --> 56:06.820
Repos.

56:06.820 --> 56:06.840
Repos.

56:06.840 --> 56:06.900
Repos.

56:06.900 --> 56:07.340
Repos.

56:07.360 --> 56:09.730
Repos.

56:09.730 --> 56:09.790
Repos.

56:09.790 --> 56:09.810
Repos.

56:09.810 --> 56:09.850
Repos.

56:09.850 --> 56:11.110
Genere Cloud-Image.

56:14.340 --> 56:15.400
Network-Section.

56:15.540 --> 56:16.160
User-Mode.

56:16.320 --> 56:16.600
Bridge.

56:16.700 --> 56:17.700
Bridge-Device.

56:21.140 --> 56:21.840
Was haben wir denn da?

56:26.150 --> 56:28.810
Hab ich, hab ich ein VIA, VIA-0 oder sowas?

56:32.780 --> 56:33.620
VIA-BR.

56:33.980 --> 56:34.540
Sudo.

56:36.080 --> 56:38.820
Legt er nicht standardmäßig ein Netzwerk-Interface an?

56:41.970 --> 56:42.570
Was ist doch hier?

56:42.670 --> 56:43.190
Default.

56:43.470 --> 56:44.450
Warum ist das inactive?

56:45.130 --> 56:45.770
Was ist da los?

56:47.390 --> 56:47.550
What?

56:48.850 --> 56:50.870
Unable to find DNS-Mask.

56:51.970 --> 56:53.110
Was der alles haben will.

56:53.230 --> 56:53.330
Was ist das?

56:53.330 --> 56:53.390
Was ist das?

56:53.390 --> 56:53.530
Was ist das?

56:53.530 --> 56:53.870
Was ist das denn?

56:53.990 --> 56:54.690
DNS-Mask.

56:54.790 --> 56:55.070
Gib ihm.

56:55.430 --> 56:55.670
Nice.

56:55.750 --> 56:56.250
DNS-Mask.

56:56.370 --> 56:56.670
Auch drauf.

56:58.290 --> 56:59.290
On-Boot-Active.

57:00.070 --> 57:00.510
Apply.

57:01.350 --> 57:04.110
So, jetzt sollten wir, jetzt sollten wir einen Virtual-Interface.

57:04.230 --> 57:06.410
Okay, VIA-BR-0 wollen wir haben.

57:07.650 --> 57:08.330
VIA-BR.

57:08.510 --> 57:10.470
Wobei, oder, oder einfach Default.

57:13.540 --> 57:15.380
Jetzt bin ich mal gespannt, ob das bootet, Alter.

57:18.220 --> 57:18.580
Okay.

57:19.020 --> 57:19.320
Bam.

57:20.680 --> 57:21.880
Debian bootet schon mal.

57:22.080 --> 57:22.520
Poggers.

57:24.120 --> 57:26.500
Aber Debian, ich hab keinen User und sonst was gesetzt.

57:26.500 --> 57:27.280
Das muss ich über Cloud.

57:27.280 --> 57:28.220
In den später machen.

57:29.480 --> 57:30.660
Aber Debian bootet.

57:30.960 --> 57:32.080
Ich bin, ich bin begeistert.

57:32.160 --> 57:34.500
Das heißt, hier können wir uns gleich die VM schon mal crappen.

57:35.200 --> 57:36.900
Also das XML von der VM crappen.

57:39.360 --> 57:41.380
Und mal gucken, ob sich das nach IP zählt.

57:41.940 --> 57:43.220
Das ist eine Nested-VM, ja?

57:43.880 --> 57:45.020
Das ist eine Nested-VM.

57:45.900 --> 57:48.460
Wir testen auch gleich mal, wie viel Nested-VM ich abkann.

57:49.400 --> 57:50.160
Wie viel da geht.

57:50.340 --> 57:52.840
Okay, das sieht, das sieht, sieht doch eigentlich alles ganz gut aus.

57:53.440 --> 57:53.840
XML.

57:55.120 --> 57:55.560
Boah.

57:55.820 --> 57:57.140
Alter, was hat der hier denn alles?

57:57.140 --> 58:00.140
Zieht es sich, zieht es sich in der IP?

58:03.350 --> 58:04.430
Äh, sieht nicht so aus.

58:06.290 --> 58:07.370
Sollte das nicht gehen.

58:07.490 --> 58:12.110
Naja, weil das sehr, äh, ja, wackelig aussieht alles.

58:13.330 --> 58:14.450
Ey, da zieht sich so, so kein.

58:14.670 --> 58:18.410
Wahrscheinlich habe ich keine Rechte auf die, auf das Interface.

58:25.100 --> 58:27.900
Die meisten Prozessoren schützen das nicht mit Nested-Virtualisierung.

58:28.260 --> 58:30.520
Doch, das kann so gut wie jede moderne CPU.

58:31.260 --> 58:32.080
Nested-Virtualisierung.

58:32.080 --> 58:33.900
Du musst es in den VM-Settings einschalten.

58:33.900 --> 58:35.700
Aber Nested-Virtualisierung geht einem schon lange.

58:38.350 --> 58:39.750
Was macht eine Nested-VM?

58:39.850 --> 58:43.950
Die macht das gleich wie eine normale VM, nur dass sie selbst wiederum in einer VM läuft.

58:44.050 --> 58:49.030
Also guck, ich habe Linux in einer VM laufen und in meiner VM habe ich ein weiteres Linux laufen.

58:50.250 --> 58:51.270
Okay, das mit...

58:54.890 --> 58:56.530
Brrr, CTL, Show.

58:58.820 --> 59:01.520
Okay, da sind schlicht und klar keine Interfaces dran.

59:01.940 --> 59:03.160
Wahrscheinlich habe ich keine Rechte.

59:03.860 --> 59:06.120
Wahrscheinlich, ich gehe davon aus, dass ich keine Rechte habe.

59:07.560 --> 59:09.280
Kann ich, kann ich vielleicht...

59:09.280 --> 59:09.540
Wir...

59:09.540 --> 59:11.500
Brrr, Null-Netzwerk-Interface machen.

59:13.120 --> 59:13.560
Okay.

59:16.400 --> 59:16.920
Testen wir mal.

59:17.040 --> 59:17.560
Shutdown.

59:18.580 --> 59:19.620
Force-Off, ja, ja.

59:21.480 --> 59:21.880
Weiter.

59:27.740 --> 59:29.400
Put a VM in my VM, genau.

59:29.560 --> 59:32.260
Natürlich, kein VM while I am VMing.

59:33.380 --> 59:34.880
Party, dankeschön für den Sub.

59:36.220 --> 59:38.520
Was ist der Vorteil von einer VM in einer VM?

59:39.000 --> 59:40.420
Naja, für die VM selber nix.

59:40.920 --> 59:44.460
Du kannst es allerdings von dem System managen, was du in der VM betreibst.

59:44.940 --> 59:46.240
Was ganz praktisch ist.

59:46.260 --> 59:49.800
So, jetzt bin ich mal gespannt, ob der sich jetzt hier was zieht.

59:50.160 --> 59:53.040
Aha, schon hängt ein Interface an meiner Bridge dran.

59:53.540 --> 59:54.400
Interessant, interessant.

59:55.780 --> 59:57.060
Jetzt kriegt er auch eine IP.

59:57.360 --> 59:57.580
Pog.

59:58.540 --> 59:59.920
Okay, das funktioniert schon mal.

59:59.980 --> 01:00:00.740
Das finde ich nice.

01:00:00.980 --> 01:00:01.180
Ping.

01:00:01.620 --> 01:00:02.860
Ping tut die VM auch.

01:00:03.420 --> 01:00:06.060
Ich habe kein Login, aber das XML können wir uns crappen.

01:00:06.600 --> 01:00:08.340
Das ist Pogas, das XML, das brauchen wir.

01:00:10.440 --> 01:00:11.480
So, delete.

01:00:13.480 --> 01:00:13.920
Delete.

01:00:14.780 --> 01:00:16.240
Alles klar, das XML nehmen wir.

01:00:16.240 --> 01:00:17.580
Jetzt, perfektes XML.

01:00:19.120 --> 01:00:20.120
Nice, so XML.

01:00:21.100 --> 01:00:22.060
Alter, ist das viel.

01:00:22.400 --> 01:00:23.440
Alter, ist das viel.

01:00:23.720 --> 01:00:24.460
What the fuck.

01:00:25.860 --> 01:00:27.700
MonkaS, da muss die Hälfte raus von.

01:00:29.760 --> 01:00:31.360
Da muss die Hälfte raus von.

01:00:31.400 --> 01:00:32.820
WCF, das hört ja gar nicht mehr auf.

01:00:34.100 --> 01:00:34.920
Okay, was haben wir hier?

01:00:35.920 --> 01:00:37.540
Generic Linux, hier, das.

01:00:37.720 --> 01:00:40.540
Da muss wieder meine ID rein.

01:00:41.460 --> 01:00:41.800
Great.

01:00:44.020 --> 01:00:44.500
Memory.

01:00:44.500 --> 01:00:44.640
Memory.

01:00:46.240 --> 01:00:46.800
Nee.

01:00:50.640 --> 01:00:53.200
Bytes to Gigabytes dürften genau.

01:00:53.600 --> 01:00:54.180
Ach nee, nee.

01:00:54.740 --> 01:00:55.140
Gibi?

01:00:57.930 --> 01:00:59.010
Nee, Gibi?

01:01:09.120 --> 01:01:09.480
Äh.

01:01:10.580 --> 01:01:10.880
Das ist ein.

01:01:12.260 --> 01:01:13.740
Peter Byte?

01:01:14.080 --> 01:01:14.580
Was?

01:01:17.600 --> 01:01:18.020
Aber warum?

01:01:19.160 --> 01:01:19.540
Was?

01:01:20.180 --> 01:01:20.760
Nein, nein, nein.

01:01:22.400 --> 01:01:23.160
Ja, ja.

01:01:24.600 --> 01:01:26.280
To Megabyte.

01:01:28.320 --> 01:01:29.520
PMB?

01:01:29.520 --> 01:01:29.720
Nee.

01:01:30.720 --> 01:01:31.220
Ach, Moment.

01:01:31.280 --> 01:01:32.720
Nein, das ist ein Unit Kilobyte.

01:01:33.080 --> 01:01:33.860
Ah, nee, nee, nee, nee, nee.

01:01:33.940 --> 01:01:35.040
Okay, das sind, das sind, das sind.

01:01:35.940 --> 01:01:36.300
Kilo.

01:01:36.840 --> 01:01:39.480
Kibi, Kibi Byte zu, zu Megabyte.

01:01:39.640 --> 01:01:40.740
Also, das zu Gibi.

01:01:41.060 --> 01:01:41.640
Heißt die Gibi?

01:01:43.060 --> 01:01:43.460
Gibi?

01:01:44.600 --> 01:01:45.780
Ja, okay.

01:01:46.500 --> 01:01:47.980
Also, 4 Gigabyte.

01:01:48.120 --> 01:01:48.740
Sehr, sehr gut.

01:01:49.260 --> 01:01:51.720
So, das heißt, wenn ich einfach nur, sagen wir mal.

01:01:54.610 --> 01:01:58.770
Wenn ich, wenn ich das Ganze nur in 500, das reicht ja.

01:01:58.890 --> 01:01:59.390
Als erstes Mal.

01:01:59.450 --> 01:02:00.210
Man muss ja jetzt übertreiben.

01:02:00.770 --> 01:02:01.490
Okay, wunderbar.

01:02:03.170 --> 01:02:07.490
Man kann die Unit anpassen, wahrscheinlich schon, aber so ist, ist okay.

01:02:10.740 --> 01:02:12.820
Was Memory, Current Memory?

01:02:14.320 --> 01:02:15.760
Ach so, naja, das interessiert mich nicht.

01:02:16.440 --> 01:02:29.100
Static, V, was, V, Out CPU, Placement, Static, 1, reicht.

01:02:33.190 --> 01:02:41.100
Boot Device, HD, das klingt, sieht doch, sieht doch ganz gut aus.

01:02:41.420 --> 01:02:44.360
Features, ja, wunderbar, genau.

01:02:44.560 --> 01:02:54.340
GPU, was, CPU Mode, Host Model, was, wie, ne, Host, was, Host, Pass to Check None, My Creatable On.

01:02:58.340 --> 01:02:59.280
Kein Schimmer.

01:02:59.780 --> 01:03:00.280
Okay, gut.

01:03:00.800 --> 01:03:03.040
Clock, yep, yep, Clock.

01:03:03.940 --> 01:03:09.180
Power of Destroy, PM, Devices, okay, jetzt, jetzt, jetzt interessant, Devices.

01:03:10.900 --> 01:03:11.460
Emulator.

01:03:13.780 --> 01:03:14.380
Disk.

01:03:15.480 --> 01:03:15.920
Okay.

01:03:18.720 --> 01:03:39.860
Hier ist mein Image drin, Controller Type, USB, ne, das, würde ich sagen, brauchen wir, wobei, scheiß drauf, ich pass da einfach nix, ich pass, ich pass einfach nix dran an, ist doch, ist doch egal, ich, ich lass es einfach, komm, alles gut so, wir, wir lassen es einfach.

01:03:40.500 --> 01:03:47.880
Das Einzige, was ich ändern muss, ist die MAC-Adresse von, die schmeißen wir einfach raus, in der Hoffnung, er generiert da eine neue.

01:03:49.640 --> 01:03:51.180
Was da alles drin ist, man.

01:03:51.760 --> 01:03:54.850
Ich lass es einfach so.

01:03:56.770 --> 01:03:58.550
Ich, ich lass es einfach so.

01:04:02.560 --> 01:04:04.700
Okay, und jetzt kriegen wir ne VM, Run.

01:04:08.070 --> 01:04:08.470
Zack.

01:04:09.430 --> 01:04:10.010
Da ist ne VM.

01:04:11.050 --> 01:04:12.630
Und warum heißt das Linux 2020?

01:04:13.910 --> 01:04:16.310
Weil, ah, weil ich den Namen nicht geändert hab.

01:04:17.190 --> 01:04:23.590
Der Name muss ja, keine Ahnung, VM Name gleich Test VM.

01:04:24.670 --> 01:04:25.150
Irgendwie so.

01:04:26.150 --> 01:04:26.470
So.

01:04:26.470 --> 01:04:26.550
So.

01:04:29.860 --> 01:04:30.940
Das scheint zu funktionieren.

01:04:30.980 --> 01:04:34.060
Ich bin, ich bin begeistert.

01:04:39.020 --> 01:04:40.420
Und wenn ich das jetzt erstelle?

01:04:42.340 --> 01:04:43.740
Dann heißt es auch Test VM.

01:04:44.380 --> 01:04:47.100
Das ist ja extrem, extremly nice.

01:04:52.740 --> 01:04:54.180
Ne, ne, ne, so einfach ist das nicht.

01:04:54.240 --> 01:04:57.100
Wir können uns aber mal die, die, die Publish Size zwischendurch angucken.

01:04:59.680 --> 01:05:03.280
So, so einfach machen wir das der ganzen Sache ja hier noch nicht, ja.

01:05:04.220 --> 01:05:07.340
Weil ich kann mich ja da beispielsweise per Netzwerk gar nicht drauf einloggen.

01:05:07.840 --> 01:05:08.220
Guckt mal.

01:05:08.780 --> 01:05:10.260
Das Ding zieht sich zwar an der IP, aber das Ding zieht sich zwar an der IP, aber das Ding zieht sich zwar an der IP, aber das Ding zieht sich zwar an der IP, aber das Ding zieht sich zwar an der IP, aber das Ding zieht sich zwar an der IP.

01:05:10.740 --> 01:05:16.420
Aber ich wette mit euch, SSH, SSH Login ist nicht möglich.

01:05:16.780 --> 01:05:17.540
Ne, ne, ne, ne.

01:05:17.540 --> 01:05:20.860
Da brauchen wir jetzt noch einen Cloud Init File, was wir rein, ranhängen oder so.

01:05:22.780 --> 01:05:24.500
So, aber löschen wir erstmal die VM.

01:05:27.380 --> 01:05:27.540
Ja.

01:05:28.500 --> 01:05:28.940
Exzellent.

01:05:30.780 --> 01:05:32.780
Und mal gucken, wie groß das Ganze jetzt ist.

01:05:33.740 --> 01:05:34.460
Publish.

01:05:34.660 --> 01:05:36.140
Das dürfte noch nicht sonderlich groß sein.

01:05:36.140 --> 01:05:38.500
Wir haben ja keine zusätzlichen Libraries drinne und sonst was.

01:05:42.470 --> 01:05:43.110
Ja, aber wenn man das jetzt.

01:05:44.110 --> 01:05:44.350
Was?

01:05:44.390 --> 01:05:44.790
Sag mal.

01:05:45.150 --> 01:05:49.990
Was genau geht mit meinem Terminal da ab?

01:05:57.290 --> 01:05:59.050
Immer noch 1,8 MB groß.

01:05:59.970 --> 01:06:01.010
Ja, das ist doch nicht schlecht.

01:06:02.090 --> 01:06:02.690
Das ist Rider.

01:06:02.850 --> 01:06:03.390
Ja, richtig.

01:06:08.760 --> 01:06:09.620
1,8 MB.

01:06:10.220 --> 01:06:13.620
Ja, wir haben ja auch noch nichts ernstzunehmendes gemacht.

01:06:14.500 --> 01:06:18.580
Boah, ist das ein abartig fettes, großes XML, Mann.

01:06:21.060 --> 01:06:21.540
So.

01:06:25.440 --> 01:06:27.500
War das Hello World nicht 1,9?

01:06:28.240 --> 01:06:29.080
Gute Frage.

01:06:29.800 --> 01:06:30.480
Weiß ich nicht mehr.

01:06:31.560 --> 01:06:32.360
Kann schon sein.

01:06:36.210 --> 01:06:41.010
So, also wir haben ja mega hässliches XML, Interop mit C.

01:06:41.330 --> 01:06:42.730
Die Datei ist immer noch klein.

01:06:42.730 --> 01:06:43.770
Das ist schon mal nice.

01:06:44.210 --> 01:06:46.250
Jetzt müssen wir noch mal ein paar andere Sachen ausprobieren.

01:06:46.250 --> 01:06:51.650
Wir machen jetzt noch mal ein paar Libraries dazu, damit man einfach mal sehen, ob, wie schnell das größer wird.

01:06:51.890 --> 01:06:54.210
Wir machen mal ein bisschen farbige Konsolen Ausgabe.

01:06:55.850 --> 01:06:59.370
Weil wer will keine farbige Konsolen Ausgabe beim VM erstellen?

01:07:02.720 --> 01:07:02.960
So.

01:07:03.680 --> 01:07:05.360
Markup.

01:07:07.200 --> 01:07:09.760
Ah, wir müssen noch warten, ob das Netzwerk...

01:07:09.760 --> 01:07:15.260
Wir müssen warten, wenn die VM richtig hochgefahren ist und das Netzwerk ready ist.

01:07:15.940 --> 01:07:17.300
Ja, das müssen wir natürlich noch machen.

01:07:18.600 --> 01:07:21.700
Markup, Interpolated, was auch immer.

01:07:22.480 --> 01:07:23.000
Markup.

01:07:24.920 --> 01:07:25.480
Markuplein.

01:07:27.200 --> 01:07:27.340
So.

01:07:28.040 --> 01:07:28.480
In...

01:07:28.480 --> 01:07:29.840
In...

01:07:29.840 --> 01:07:30.640
In...

01:07:30.640 --> 01:07:31.720
Gelb.

01:07:31.720 --> 01:07:33.720
Starting-VM.

01:07:33.720 --> 01:07:34.720
Vm-Name.

01:07:34.720 --> 01:07:38.100
So, jetzt kriegen wir das in Gelb.

01:07:38.100 --> 01:07:41.300
Richtig advanced aus, langsam.

01:07:41.300 --> 01:07:42.300
So, jetzt ist das Binary garantiert viel fetter.

01:07:42.300 --> 01:07:45.830
Könnte ich wetten.

01:07:45.830 --> 01:07:46.830
Weil jetzt ist noch Spectre-Console dabei.

01:07:46.830 --> 01:07:47.830
Das ist eine recht, recht fette Library.

01:07:47.830 --> 01:07:48.830
Bild.

01:07:48.830 --> 01:07:49.830
Hä?

01:07:49.830 --> 01:07:50.830
Schon 3,8 MB groß.

01:07:50.830 --> 01:07:51.830
Schon 3,8 MB groß.

01:07:51.830 --> 01:07:52.830
Ja.

01:07:52.830 --> 01:07:53.830
Ja.

01:07:53.830 --> 01:07:54.830
Ja.

01:07:54.830 --> 01:07:55.830
Ja.

01:07:55.830 --> 01:07:56.830
Ja.

01:07:56.830 --> 01:07:57.830
Ja.

01:07:57.830 --> 01:07:58.830
Ja.

01:07:58.830 --> 01:07:59.830
Ja.

01:07:59.830 --> 01:08:00.830
Ja.

01:08:00.830 --> 01:08:01.830
Ja.

01:08:01.830 --> 01:08:02.830
Ja.

01:08:02.830 --> 01:08:03.830
Ja.

01:08:03.830 --> 01:08:04.830
Ja.

01:08:04.830 --> 01:08:05.830
Ja.

01:08:05.830 --> 01:08:06.830
Ja.

01:08:06.830 --> 01:08:07.830
Ja.

01:08:07.830 --> 01:08:08.830
Ja.

01:08:08.830 --> 01:08:09.830
Ja.

01:08:09.830 --> 01:08:10.830
Genau.

01:08:10.830 --> 01:08:11.830
3,8 MB groß.

01:08:11.830 --> 01:08:12.830
Es wächst.

01:08:12.830 --> 01:08:13.830
Aber es ist immer noch komplett im Rahmen...

01:08:13.830 --> 01:08:14.830
Ich mein...

01:08:14.830 --> 01:08:15.830
Was sind...

01:08:15.830 --> 01:08:16.830
Was sind 3,8 heutzutage?

01:08:16.830 --> 01:08:17.830
Easy.

01:08:17.830 --> 01:08:18.830
Ist doch kein Problem, oder?

01:08:18.830 --> 01:08:19.830
Ich mein, also...

01:08:19.830 --> 01:08:21.830
Ne Go-Anwendung ist jetzt auch nicht soo viel kleiner.

01:08:21.830 --> 01:08:22.830
Ich weiß nicht.

01:08:22.830 --> 01:08:24.830
Habt ihr mal den Plan von euch?

01:08:24.830 --> 01:08:27.070
Wie groß ist eine Hello World Go-Anwendung?

01:08:29.530 --> 01:08:30.530
Manchmal-.

01:08:30.530 --> 01:08:31.530
Wahrscheinlich auch ungefähr in dem...

01:08:32.530 --> 01:08:33.530
...Kram...

01:08:33.530 --> 01:08:36.530
...Irgendwie 2 MB oder sowas, ja.

01:08:36.530 --> 01:08:37.530
1,2 MB...

01:08:37.530 --> 01:08:48.900
das sind log files größer ja das stimmt so wie kriegen wir denn jetzt raus ob die vm eine

01:08:48.900 --> 01:09:07.930
gültige ip hat da gibt es doch bestimmt irgend irgendwelche c functions wieder so suchen wir

01:09:07.930 --> 01:09:23.180
einfach mal hier ip address ok wir domain ip address wie du mein ip address das was ist das

01:09:23.180 --> 01:09:34.340
pc connect als weil ja wenn schon mal das hier mit was haben wir denn hier wir domain interface

01:09:34.340 --> 01:09:41.820
addresses okay das ist das ist ein pointer zur vm das ist ein was ist das denn

01:09:41.820 --> 01:09:52.000
ein array pointer auf dem array herr sowas in der richtung an sein source flex oh jetzt wird

01:09:52.000 --> 01:10:03.340
es eklig jetzt wird es eklig ok auf geht's wie kriegen wir hier die wie kriegen wir jetzt hier

01:10:03.340 --> 01:10:10.520
die ip von der vm raus also das ganze ding als schon mal wir domain interface address

01:10:10.520 --> 01:10:13.500
ob wir es lieb wie soll es so anders heißen dann

01:10:13.900 --> 01:10:20.380
haben wir ein in pointer und das ist halt die vm die domain heißt das bei

01:10:20.380 --> 01:10:26.420
denen immer so dann brauchen wir ein vier domain interface pointer auf

01:10:26.420 --> 01:10:34.660
pointer auf pointer und mein ist das ist das ein triple pointer oder was ein ein

01:10:34.660 --> 01:10:48.680
pointer zu einem pointer der auf den potter will ich nicht aus für wenn schon

01:10:48.680 --> 01:10:57.940
muss das über die api gehen welche klippe und manager benutzt du das ist

01:10:57.940 --> 01:11:03.520
green clip mit rufi integrationen ok wir machen wir machen wir die

01:11:03.520 --> 01:11:10.020
unstrittigen teile an sein int also wir brauchen hier irgendwie so ein schritt

01:11:10.020 --> 01:11:14.260
wo ich auch keine ahnung wie man das ganze abbilden aber zeilen umbruch

01:11:14.260 --> 01:11:24.780
zeilen umbruch zeilen umbruch und dann brauchen wir sonst und flex flex

01:11:24.780 --> 01:11:25.000
laufenden

01:11:25.000 --> 01:11:35.400
lassen wir auch auf null ok wie kriegen wir diesen krempel dahin interfaces

01:11:35.400 --> 01:11:46.100
wir domain interface pointer wir domain interface das ist das ist wirklich ein

01:11:46.100 --> 01:11:50.500
triple pointer ein pointer auf den pointer der auf den point als acht du

01:11:50.500 --> 01:11:59.430
große scheiße man ok jetzt haben wir das das truck ok dann brauchen wir uns truck

01:11:59.430 --> 01:12:00.830
truck

01:12:00.830 --> 01:12:09.270
ich ahne schlimmes public an safe truck so keine charakter wir wollen das als

01:12:09.270 --> 01:12:12.270
beide haben

01:12:12.630 --> 01:12:22.780
ein an public public moment ich muss das kann man weg machen so also hardware

01:12:22.780 --> 01:12:29.020
address nächste ist hat wird das wahrscheinlich die mac oder sowas in der

01:12:29.020 --> 01:12:31.340
richtung

01:12:31.380 --> 01:12:48.230
interfaces sein sind addresses ich ahne schlimmes und dann haben wir

01:12:48.230 --> 01:12:50.750
als letztes einen weiteren point of point

01:12:50.750 --> 01:12:52.690
trocken

01:12:52.690 --> 01:12:55.790
26

01:12:55.790 --> 01:12:57.370
ok damit Agriculture

01:12:57.370 --> 01:13:03.370
setzt uns erstmal nicht weiter auseinander gucken ob bis dahin

01:13:03.370 --> 01:13:05.030
funktioniert

01:13:05.030 --> 01:13:06.230
Ebola

01:13:06.230 --> 01:13:07.290
ja sage man network.

01:13:07.290 --> 01:13:07.790
ーshore house int legion

01:13:07.790 --> 01:13:08.190
ちょっと want to talk again log ao health information

01:13:08.190 --> 01:13:09.690
Kirsty bless das kommt zu hause ab think you know i already get out eat or die ab so the other day you j grill too much sagt mir okay man aber oh das könnte man mal ich moderator oder ich sehr vieleics habt ihr auch in Evennet field계ac undo check it i loft audience about the entrepreneur trial and do you think about that chat lief er nach der Dig because of the bahms Pods network DHCP lies also sachter

01:13:09.830 --> 01:13:19.790
so und das heißt jetzt wie zum teufel muss das hier sein das sind interfaces pointer auf was

01:13:19.790 --> 01:13:31.180
hat er hier für schmerzen an das ganze ding ist an safe mann an safe pointer auf pointer

01:13:31.180 --> 01:13:52.410
auf pointer fragt man ok kommt an safe auf geht's ja in pointer auf die domain ok create

01:13:52.410 --> 01:14:01.750
xml das gibt glaube ich eine id zurück stimmt das gibt eine id zurück ja das war was man dann

01:14:01.750 --> 01:14:09.670
wiederum braucht um auf das andere zu zeigen ok domain kommt mich jetzt einfach vor mld

01:14:09.790 --> 01:14:16.150
da weiß ich wenigstens was gemeint ist ok interop wisst ihr wisst ok wir haben noch

01:14:16.150 --> 01:14:22.930
eine vm mit ip laufen das ist perfekt ach nee wir müssen ja neu erstellen sonst klappt's ja

01:14:22.930 --> 01:14:35.260
nicht das ist mega sas hat um nicht zu sagen hypersas ich löscht es mal weil um die vm id

01:14:35.260 --> 01:14:40.500
rauszukriegen müssen wir die vm erstellen sonst krieg ich die id nicht mehr raus und das ist

01:14:40.500 --> 01:14:43.480
dieses keine richtige id das ist ein pointer das heißt dass nachdem das pointer ausgelöst

01:14:43.480 --> 01:14:46.720
ist oder gesagt wird oder so muss ich einfach den pointer auswählen also ich schau aber

01:14:46.720 --> 01:14:49.740
ich muss mal genau gucken was ich da drauf hab ich das hier drauf jetzt noch mal ich

01:14:49.740 --> 01:14:55.580
muss alles hier drüber ach ich bin nicht sicher wie ich hier alles drüber angeblieben

01:14:55.580 --> 01:15:00.520
hab und ich muss alles jetzt einfach an der struktur auswählen ja der pointer auf das

01:15:00.520 --> 01:15:04.740
ist nicht wie es eigentlich passiert okay ich mach jetzt mal so du kannst hier ein

01:15:04.740 --> 01:15:10.940
tällатель oder so was zählen hier für die interop in dem fall also ich hab jetzt mal

01:15:10.940 --> 01:15:15.160
ein pointer auf pointer auf monga w ich halte hier 내가 ich halte ingen an ich halte hier

01:15:15.160 --> 01:15:24.940
das ist eigentlich oder ich habe das bei von von dem wem ich hier auch nur die man momentan

01:15:24.940 --> 01:15:26.440
Was ist denn jetzt? Ah, hier Null.

01:15:29.720 --> 01:15:30.520
Ah, ne, das ist nicht so.

01:15:33.540 --> 01:15:34.860
Ah, wir Interface.

01:15:36.640 --> 01:15:37.120
Unsafe.

01:15:37.720 --> 01:15:38.320
Weil es nicht.

01:15:42.690 --> 01:15:43.550
Und jetzt?

01:15:45.910 --> 01:15:46.350
Ne.

01:15:48.190 --> 01:15:50.170
Doppel, Doppelpointern muss ich.

01:15:51.610 --> 01:15:52.490
Inter, und jetzt?

01:15:52.790 --> 01:15:53.090
Und?

01:15:54.030 --> 01:15:54.990
Adresse auf

01:15:54.990 --> 01:15:56.870
Interfaces.

01:15:58.330 --> 01:15:58.810
Okay.

01:15:58.810 --> 01:16:00.630
Und dann

01:16:00.630 --> 01:16:02.490
Source Null flaggen.

01:16:02.530 --> 01:16:03.990
Ich hoffe mal, dass Source Null ist.

01:16:04.950 --> 01:16:06.250
Was ist denn Source?

01:16:07.570 --> 01:16:08.530
Source ist

01:16:08.530 --> 01:16:09.850
Source.

01:16:11.610 --> 01:16:12.750
Source ist

01:16:12.750 --> 01:16:14.590
Leases. Das klingt doch gut.

01:16:14.670 --> 01:16:15.670
Agent oder Arb.

01:16:31.760 --> 01:16:32.540
Ach du Scheiße.

01:16:33.840 --> 01:16:34.820
Warum geht es jetzt nicht?

01:16:35.880 --> 01:16:36.380
Weil

01:16:36.380 --> 01:16:39.700
Inter... Moment, ist das?

01:16:40.220 --> 01:16:42.020
Das ist ein Triple Pointer.

01:16:42.020 --> 01:16:42.880
Seht ihr das?

01:16:42.880 --> 01:16:56.480
Triple Pointer.

01:16:58.240 --> 01:17:00.240
Also ich muss quasi hier sagen.

01:17:00.240 --> 01:17:02.240
Pointer, Pointer.

01:17:02.240 --> 01:17:06.120
Ach du Scheiße, man.

01:17:06.120 --> 01:17:08.120
Was ist das denn?

01:17:08.120 --> 01:17:10.120
Seriously?

01:17:10.120 --> 01:17:12.120
Pointer, Pointer.

01:17:12.120 --> 01:17:14.120
Das funktioniert.

01:17:14.120 --> 01:17:16.120
So.

01:17:16.120 --> 01:17:18.120
Und das soll jetzt gehen, oder was?

01:17:18.120 --> 01:17:22.970
Pointer Champ.

01:17:22.970 --> 01:17:24.970
Ja.

01:17:24.970 --> 01:17:29.370
Pointer Champ. Ja.

01:17:29.370 --> 01:17:33.370
Was returnt denn das eigentlich?

01:17:33.370 --> 01:17:35.370
Was mache ich?

01:17:35.370 --> 01:17:39.370
Ich versuche eine VM zu erstellen über die CAP unter Linux.

01:17:39.370 --> 01:17:41.370
Was prinzipiell funktioniert.

01:17:41.370 --> 01:17:43.370
Aber jetzt will ich rausbekommen.

01:17:43.370 --> 01:17:45.370
Okay, das ist ein Count quasi.

01:17:45.370 --> 01:17:49.700
N.

01:17:49.700 --> 01:17:51.700
N ist immer die beste Bezeichnung.

01:17:51.700 --> 01:17:53.700
Da weiß man Bescheid.

01:17:55.700 --> 01:17:57.700
Okay, hier haben wir die VM-ID.

01:17:57.700 --> 01:17:59.700
So, und das müssen wir jetzt

01:17:59.700 --> 01:18:01.700
in der Schleife machen, Leute.

01:18:01.700 --> 01:18:03.700
Weil, das braucht hier eine Weile,

01:18:03.700 --> 01:18:05.700
bis die True

01:18:05.700 --> 01:18:07.700
Await

01:18:07.700 --> 01:18:09.700
Oh, Moment.

01:18:09.700 --> 01:18:11.700
Awaiten kann man nicht

01:18:11.700 --> 01:18:17.580
in Unsafe, oder?

01:18:17.580 --> 01:18:19.580
Natürlich. Natürlich kann man nicht

01:18:19.580 --> 01:18:21.580
kann man keine Await machen in Unsafe.

01:18:21.580 --> 01:18:23.580
Das ist natürlich klar.

01:18:25.580 --> 01:18:27.580
Also müssen wir den Klassiker rausholen.

01:18:27.580 --> 01:18:29.580
Threat, Sleep.

01:18:29.580 --> 01:18:31.580
Für eine Sekunde.

01:18:31.580 --> 01:18:33.580
Und dann probieren wir das Ganze nochmal aus.

01:18:33.580 --> 01:18:37.400
Bin ich auch mal gespannt.

01:18:37.400 --> 01:18:42.890
Run.

01:18:42.890 --> 01:18:51.770
Okay.

01:18:51.770 --> 01:18:53.770
Noch haben wir keine IP.

01:18:53.770 --> 01:18:55.770
Noch haben wir keine IP.

01:18:55.770 --> 01:19:05.800
Noch keine IP.

01:19:05.800 --> 01:19:07.800
Keine IP.

01:19:07.800 --> 01:19:09.800
Jetzt haben wir eine IP.

01:19:11.800 --> 01:19:17.160
Äh.

01:19:17.160 --> 01:19:26.490
Das interessiert ihn aber nicht.

01:19:26.490 --> 01:19:28.490
Das ist dem ziemlich egal.

01:19:28.490 --> 01:19:37.180
Na gut.

01:19:37.180 --> 01:19:41.190
Abbrechen.

01:19:41.190 --> 01:19:43.190
Das probieren wir mal aus.

01:19:43.190 --> 01:19:45.190
Auf der Shell.

01:19:45.190 --> 01:19:47.190
Wie geht denn das?

01:19:47.190 --> 01:19:51.080
Domain Interface.

01:19:51.080 --> 01:19:53.080
Adress. Ja.

01:19:53.080 --> 01:19:56.390
Alter, meine Shell ist übelst kaputt.

01:19:56.390 --> 01:19:59.830
Was ist denn das für ein Kack, Mann?

01:19:59.830 --> 01:20:01.830
Requires Domain.

01:20:01.830 --> 01:20:03.830
Achso, ich habe jetzt gar keine VM mehr angelegt.

01:20:03.830 --> 01:20:05.830
Doch, doch. Habe ich noch.

01:20:05.830 --> 01:20:09.590
Test-VM.

01:20:09.590 --> 01:20:11.590
Mit der offiziellen

01:20:11.590 --> 01:20:13.590
Kommandozeile

01:20:13.590 --> 01:20:15.590
findet man auch keine IP.

01:20:15.590 --> 01:20:17.590
Warum das denn?

01:20:17.590 --> 01:20:19.590
Special Hyper Secrets IP?

01:20:19.590 --> 01:20:21.590
Oder wie?

01:20:21.590 --> 01:20:23.590
Was ist ein Pointer?

01:20:23.590 --> 01:20:25.590
Also das Konzept an sich

01:20:25.590 --> 01:20:27.590
ist relativ simpel.

01:20:27.590 --> 01:20:29.590
Insgesamt

01:20:29.590 --> 01:20:31.590
schießt er dir aber relativ schnell in den Fuß.

01:20:31.590 --> 01:20:33.590
Also ein Pointer ist eine Kombination

01:20:33.590 --> 01:20:35.590
aus zwei Sachen.

01:20:35.590 --> 01:20:37.590
Ein Pointer ist einmal

01:20:37.590 --> 01:20:39.590
die Arbeitsspeicheradresse

01:20:39.590 --> 01:20:41.590
wo etwas liegt

01:20:41.590 --> 01:20:43.590
und die Typinformation

01:20:43.590 --> 01:20:45.590
was an dieser

01:20:45.590 --> 01:20:47.590
Speicheradresse liegt.

01:20:47.590 --> 01:20:49.590
Also wenn du die Information hast

01:20:49.590 --> 01:20:51.590
ein

01:20:51.590 --> 01:20:55.030
16 Bit

01:20:55.030 --> 01:20:57.030
Int liegt an

01:20:57.030 --> 01:20:59.030
dieser Speicheradresse

01:20:59.030 --> 01:21:01.030
dann kannst du das auslesen.

01:21:01.030 --> 01:21:03.030
Du gehst zu dieser Speicheradresse hin

01:21:03.030 --> 01:21:05.030
und weißt du musst 2 Byte

01:21:05.030 --> 01:21:07.030
auslesen beginnend

01:21:07.030 --> 01:21:09.030
an der Pointeradresse

01:21:09.030 --> 01:21:11.030
dass du dein 16 Bit

01:21:11.030 --> 01:21:13.030
dein Int 16 bekommst.

01:21:13.030 --> 01:21:15.030
Also ein Pointer ist nicht wirklich nur ein Zeiger

01:21:15.030 --> 01:21:17.030
auch wenn sich das immer so anhört.

01:21:17.030 --> 01:21:19.030
Ein Pointer ist die Kombination aus

01:21:19.030 --> 01:21:21.030
Speicheradresse plus

01:21:21.030 --> 01:21:23.030
Typ.

01:21:23.030 --> 01:21:25.030
Wollt Pointer außen vor

01:21:25.030 --> 01:21:27.030
das sind nur Pointer.

01:21:27.030 --> 01:21:29.030
Ja wenn du sowas hier hast in C

01:21:29.030 --> 01:21:31.030
dann ist das die Information

01:21:31.030 --> 01:21:33.030
ähm

01:21:33.030 --> 01:21:35.030
es ist ein Int

01:21:35.030 --> 01:21:37.030
was dort im Speicher steht

01:21:37.030 --> 01:21:39.030
also die Speicheradresse

01:21:39.030 --> 01:21:41.030
plus die Typinformation.

01:21:41.030 --> 01:21:51.960
Und nun?

01:21:51.960 --> 01:21:53.960
Jetzt hast du mehr RAM.

01:21:53.960 --> 01:21:55.960
Ohne RAM zu downloaden.

01:21:55.960 --> 01:21:57.960
So also

01:21:57.960 --> 01:21:59.960
noch nicht mal die offizielle

01:21:59.960 --> 01:22:01.960
das offizielle

01:22:01.960 --> 01:22:03.960
Kommandozeilentool kriegt das raus.

01:22:03.960 --> 01:22:05.960
Was kann man hier hinten noch?

01:22:05.960 --> 01:22:07.960
Source angeben. Lease.

01:22:07.960 --> 01:22:09.960
Das ist das was ich gerade mache.

01:22:09.960 --> 01:22:11.960
Was haben wir sonst noch zu bieten?

01:22:11.960 --> 01:22:13.960
Agent. No Agent. ARP.

01:22:13.960 --> 01:22:15.960
Aha! ARP funktioniert.

01:22:15.960 --> 01:22:17.960
Ok. Warum auch immer.

01:22:17.960 --> 01:22:19.960
Ich wills gar nicht wissen.

01:22:19.960 --> 01:22:21.960
ARP ist

01:22:21.960 --> 01:22:23.960
Magic 2

01:22:23.960 --> 01:22:25.960
Ok. Alles klar.

01:22:25.960 --> 01:22:27.960
Also muss ich hier Source 2

01:22:27.960 --> 01:22:29.960
reinschreiben.

01:22:29.960 --> 01:22:31.960
Und jetzt probieren wir das ganze nochmal.

01:22:31.960 --> 01:22:33.960
Delete.

01:22:33.960 --> 01:22:35.960
Run.

01:22:35.960 --> 01:22:37.960
Ups.

01:22:37.960 --> 01:22:39.960
Ja ja. Nein nein 2.

01:22:39.960 --> 01:22:41.960
Run.

01:22:41.960 --> 01:22:45.660
Bam.

01:22:45.660 --> 01:22:47.660
Was passiert dann wenn ich meinen

01:22:47.660 --> 01:22:49.660
Pointer hin und her caste?

01:22:49.660 --> 01:22:51.660
Dann sagst du

01:22:51.660 --> 01:22:53.660
du weißt es besser als dein Compiler.

01:22:53.660 --> 01:22:55.660
Du sagst ihm ey

01:22:55.660 --> 01:22:57.660
an dieser Stelle ist gar kein Int

01:22:57.660 --> 01:22:59.660
sondern eigentlich ein

01:22:59.660 --> 01:23:01.660
anderes Ding.

01:23:01.660 --> 01:23:03.660
Das muss nicht zwangsläufig so sein

01:23:03.660 --> 01:23:05.660
aber das kannst du ihm sagen

01:23:05.660 --> 01:23:07.660
dass du das besser weißt.

01:23:07.660 --> 01:23:09.660
Wenn du einen Pointer ohne Typ

01:23:09.660 --> 01:23:11.660
Informationen hast dann musst du es sogar machen.

01:23:11.660 --> 01:23:15.740
Und was ja in C relativ

01:23:15.740 --> 01:23:17.740
Oh was ist das?

01:23:17.740 --> 01:23:19.740
Was ist das?

01:23:19.740 --> 01:23:26.120
Wait a minute. Der erkennt das es

01:23:26.120 --> 01:23:30.070
eine IP hat. Pog.

01:23:30.070 --> 01:23:32.070
Das geht einfach.

01:23:32.070 --> 01:23:35.960
Stellt euch das mal vor.

01:23:35.960 --> 01:23:37.960
Das muss man den Linux Leuten

01:23:37.960 --> 01:23:39.960
ja echt lassen.

01:23:39.960 --> 01:23:41.960
Das sieht immer abartig aus.

01:23:41.960 --> 01:23:43.960
Weil du halt irgendwelchen

01:23:43.960 --> 01:23:45.960
C Interop machen musst.

01:23:45.960 --> 01:23:47.960
Aber unterm Strich

01:23:47.960 --> 01:23:49.960
funktioniert es meistens einfach.

01:23:49.960 --> 01:23:51.960
Natürlich

01:23:51.960 --> 01:23:53.960
kannst du dir bei jedem Schritt

01:23:53.960 --> 01:23:55.960
selbst in den Fuß schießen.

01:23:55.960 --> 01:23:57.960
Aber es funktioniert meistens

01:23:57.960 --> 01:23:59.960
einfach.

01:23:59.960 --> 01:24:01.960
Und die Dinger sind ja recht gut zu bedienen

01:24:01.960 --> 01:24:03.960
auch. Kann man nichts sagen.

01:24:03.960 --> 01:24:05.960
So und jetzt.

01:24:05.960 --> 01:24:07.960
Und jetzt ist die Frage.

01:24:07.960 --> 01:24:13.060
Wie kann ich

01:24:13.060 --> 01:24:15.060
jetzt auf meine Interfaces zugreifen?

01:24:15.060 --> 01:24:19.910
Also wenn ich jetzt

01:24:19.910 --> 01:24:21.910
ein Interface gefunden habe.

01:24:21.910 --> 01:24:23.910
Dann müsste ich doch eigentlich sagen können

01:24:23.910 --> 01:24:25.910
Interfaces

01:24:25.910 --> 01:24:27.910
0. Weil ich habe ja

01:24:27.910 --> 01:24:29.910
mindestens eins gefunden.

01:24:29.910 --> 01:24:31.910
Interfaces 0.

01:24:31.910 --> 01:24:33.910
Und dann number of addresses ausgeben.

01:24:35.910 --> 01:24:37.910
So.

01:24:37.910 --> 01:24:39.910
Wie wird die VM erstellt?

01:24:39.910 --> 01:24:41.910
Also woher weiß der welches Image?

01:24:41.910 --> 01:24:43.910
Hier her.

01:24:43.910 --> 01:24:45.910
Weil ich ein riesen fettes ekliges XML habe.

01:24:45.910 --> 01:24:49.220
Wo das alles drin steht.

01:24:49.220 --> 01:24:51.220
Wo man die Hälfte wahrscheinlich entfernen könnte draus.

01:24:51.220 --> 01:24:53.220
Muss ich auch mal gucken.

01:24:53.220 --> 01:24:55.220
Wie man das XML vielleicht.

01:24:55.220 --> 01:24:57.220
So viele PCI und Serial und so.

01:24:57.220 --> 01:24:59.220
Brauche ich. SATA brauche ich alles gar nicht.

01:24:59.220 --> 01:25:06.820
Oh was jetzt?

01:25:06.820 --> 01:25:10.520
198?

01:25:10.520 --> 01:25:12.520
Was habe ich jetzt

01:25:12.520 --> 01:25:18.330
verkehrt gemacht?

01:25:18.330 --> 01:25:20.330
Ah ich kann nicht drauf zugreifen logischerweise.

01:25:20.330 --> 01:25:22.330
Ich bin ja auch doof.

01:25:22.330 --> 01:25:24.330
Ich kann nicht drauf zugreifen solange es noch nicht angelegt ist.

01:25:24.330 --> 01:25:26.330
Ok das ist natürlich klar.

01:25:26.330 --> 01:25:29.900
Das kann nicht funktionieren.

01:25:29.900 --> 01:25:33.340
Also muss ich checken ob das

01:25:33.340 --> 01:25:35.340
Kann man nicht einfach 0 check machen?

01:25:35.340 --> 01:25:37.340
Ne.

01:25:37.340 --> 01:25:39.340
Ich muss einfach check if

01:25:39.340 --> 01:25:41.340
n größer 0.

01:25:41.340 --> 01:25:43.340
So und nur dann mache ich das.

01:25:43.340 --> 01:25:45.340
Ansonsten warten wir ab.

01:25:45.340 --> 01:25:47.340
Auf geht's.

01:25:47.340 --> 01:25:51.800
Let's go.

01:25:51.800 --> 01:25:53.800
So.

01:25:53.800 --> 01:25:55.800
Wir sollten jetzt gleich die IP Adresse sehen.

01:25:55.800 --> 01:25:57.800
Sobald er hier eine IP Adresse bekommt.

01:25:57.800 --> 01:25:59.800
Bin ich gespannt.

01:25:59.800 --> 01:26:18.150
Number of address is 1.

01:26:18.150 --> 01:26:20.150
Ok der kann sogar die Adresse da raus holen.

01:26:20.150 --> 01:26:22.150
Nicht schlecht.

01:26:22.150 --> 01:26:24.150
Nicht schlecht.

01:26:24.150 --> 01:26:26.150
Wir machen das mal alles auf dem Desktop hier.

01:26:26.150 --> 01:26:28.150
Sonst müssen wir so viel hin und her switchen.

01:26:28.150 --> 01:26:32.360
So.

01:26:32.360 --> 01:26:34.360
Eigentlich könnten wir gleich noch ein delete hinterher machen.

01:26:34.360 --> 01:26:36.360
Wobei er dann das Image wahrscheinlich auch löscht.

01:26:36.360 --> 01:26:38.360
Wobei er dann das Image wahrscheinlich auch löscht.

01:26:38.360 --> 01:26:40.360
So.

01:26:40.360 --> 01:26:42.360
Und jetzt muss ich die Adressen da raus holen.

01:26:42.360 --> 01:26:44.360
Wie hole ich die Adressen da raus?

01:26:44.360 --> 01:26:46.360
Wie hole ich die Adressen da raus?

01:26:46.360 --> 01:26:48.360
Wir Domain Interface.

01:26:48.360 --> 01:27:04.470
Wir Domain IP Adress Pointer.

01:27:04.470 --> 01:27:08.040
Wir Domain IP Adress Pointer.

01:27:08.040 --> 01:27:10.040
Wir Domain IP Adress Pointer.

01:27:10.040 --> 01:27:14.700
Hier.

01:27:14.700 --> 01:27:16.700
Das brauche ich auch noch.

01:27:16.700 --> 01:27:18.700
Als Struct.

01:27:18.700 --> 01:27:20.700
Public unsaved Struct.

01:27:20.700 --> 01:27:22.700
Wir Domain IP Adress.

01:27:22.700 --> 01:27:24.700
Wir Domain IP Adress.

01:27:24.700 --> 01:27:26.700
Wir Domain IP Adress.

01:27:26.700 --> 01:27:28.700
So machen wir das mal weg.

01:27:28.700 --> 01:27:30.700
Also.

01:27:30.700 --> 01:27:32.700
Was brauchen wir denn hier jetzt?

01:27:32.700 --> 01:27:34.700
Wir brauchen ein Typ.

01:27:34.700 --> 01:27:36.700
Wir brauchen ein Typ.

01:27:36.700 --> 01:27:38.700
Das ist ein Int.

01:27:38.700 --> 01:27:42.390
Das ist ein Int.

01:27:42.390 --> 01:27:44.390
Ein Typ.

01:27:44.390 --> 01:27:49.110
Die Adresse als String.

01:27:49.110 --> 01:27:51.110
Als Byte.

01:27:51.110 --> 01:27:53.110
Ist wahrscheinlich sinniger.

01:27:53.110 --> 01:27:55.110
Und dann ein Prefix.

01:27:55.110 --> 01:27:57.110
Als unsigned Int.

01:27:57.110 --> 01:27:59.110
Als unsigned Int.

01:27:59.110 --> 01:28:01.110
So.

01:28:01.110 --> 01:28:03.110
Und davon wollen wir jetzt ein Array haben.

01:28:03.110 --> 01:28:06.550
Und davon wollen wir jetzt ein Array haben.

01:28:06.550 --> 01:28:08.550
Das ist sowas.

01:28:08.550 --> 01:28:10.550
Ich blick nicht mehr durch.

01:28:10.550 --> 01:28:12.550
Wo muss man hin?

01:28:12.550 --> 01:28:14.550
Das ist dann ja sowas hier.

01:28:14.550 --> 01:28:16.550
Ein Pointer.

01:28:16.550 --> 01:28:21.590
Auf.

01:28:21.590 --> 01:28:23.590
Das Start Element von einem Array.

01:28:23.590 --> 01:28:25.590
Das ist dann ja sowas hier.

01:28:25.590 --> 01:28:27.590
Ein Pointer.

01:28:27.590 --> 01:28:29.590
Auf.

01:28:29.590 --> 01:28:36.170
Das Start Element von einem Array.

01:28:36.170 --> 01:28:38.170
Ich bin mir nicht sicher ob ich sowas machen darf.

01:28:38.170 --> 01:28:40.170
Ob er das dann richtig erkennt.

01:28:40.170 --> 01:28:42.170
Okay, so.

01:28:42.170 --> 01:28:54.570
greifen da jetzt einfach drauf zu scheiß drauf addresses und davon die erste und davon dann die

01:28:54.570 --> 01:29:13.140
moment das ist ein byte wie bekomme ich aus einem byte array einen string geht das

01:29:13.140 --> 01:29:19.720
gescheit ein null terminiertes byte array zu einem string wie funktioniert das in c sharp

01:29:19.720 --> 01:29:28.000
gescheit irgendwie sowas hier ne encoding utf 8 ich hoffe mal dass du dir was get string und

01:29:28.000 --> 01:29:41.570
dann vom beiz aber da brauche ich ein byte count shit woher weiß ich denn woher weiß ich okay na

01:29:41.570 --> 01:29:48.410
ip-adresse ist einfach 8 irgendwas nicht wirklich aber die ersten wir machen einfach mal die ersten

01:29:48.410 --> 01:29:53.730
acht charakters das ist dann quasi 192 punkt 168

01:29:53.750 --> 01:30:04.080
punkt also dass der anfang von der ip müsste ich dann zumindest sehen hier jetzt habe ich den wird

01:30:04.080 --> 01:30:25.570
manager geschlossen ich nur okay jetzt jetzt crash wahrscheinlich gleich so der holt sich

01:30:25.570 --> 01:30:31.570
jetzt eine ip die vm muss erst ein bisschen dauert auch ein bisschen bis sie startet und

01:30:31.570 --> 01:31:12.500
alles funktioniert oh nee das war ein zeilenumbruch problem hier es geht

01:31:12.620 --> 01:31:24.500
einfach aber wie kriege ich das ist das problem ist nicht gelöst wie kriege ich ein null terminierten

01:31:24.500 --> 01:31:42.540
string ag da muss das der overflow fragen weit weiter 0 terminated to string da gibt es doch da

01:31:42.540 --> 01:31:50.960
gibt es auch bestimmt chat gpt fragen das kriege ich auch ohne chat chat chat gpt da gibt es doch

01:31:51.420 --> 01:32:12.860
bestimmt irgendein irgendein trick da gibt es doch bestimmt irgendein trick wie man das wie man das

01:32:12.860 --> 01:32:22.320
also das ist ein utf 8 string höchstwahrscheinlich ein null terminated utf 8 string und das will ich

01:32:22.320 --> 01:32:28.800
in den c sharp string ach ja übrigens nur mal so ich ich zeige euch mal was weil ihr weil ihr

01:32:28.800 --> 01:32:29.820
vielleicht mal das problem haben könntet man denkt sich jetzt ja so als würde ich jetzt mal das problem

01:32:29.820 --> 01:32:32.120
haben könnte man denkt sich jetzt ja so als würde ich jetzt mal das problem haben könnte man denkt

01:32:33.060 --> 01:33:05.270
sich jetzt ja so als würde ich jetzt mal das problem haben könnte man denkt sich jetzt ja so an der stelle gucke mal warum nehmen wir nicht charakter könnte man sich ja denken warum nehmen wir nicht charakter weil es ist es sind es sind ja sind ja buchstaben und jetzt machen wir mal passt mal auf new string weil das ist dann relativ einfach dann darf man das direkt null terminiert reinmachen und jetzt machen wir mal passt mal auf new string weil das ist dann relativ einfach dann darf man das direkt null terminiert reinmachen und jetzt machen wir mal passt mal auf new string weil das ist dann relativ einfach dann darf man das direkt null terminiert reinmachen und jetzt machen wir mal passt mal auf new string weil das ist dann relativ einfach dann darf man das direkt null terminiert reinmachen und jetzt machen wir mal passt mal auf new string weil das ist dann relativ einfach dann darf man das direkt null terminiert reinmachen und jetzt machen wir mal passt mal auf new string weil das ist dann relativ einfach dann darf man das direkt null terminiert reinmachen und jetzt machen wir mal passt mal auf

01:33:05.930 --> 01:33:07.530
So, was meint ihr, was jetzt passiert?

01:33:08.090 --> 01:33:09.910
Sieht doch jetzt eigentlich richtig aus.

01:33:10.010 --> 01:33:11.610
Ich kann euch sagen, dass es nicht funktionieren wird.

01:33:13.890 --> 01:33:14.690
Glaube ich zumindest.

01:33:21.960 --> 01:33:23.140
Es gibt einen schon Skid an.

01:33:23.220 --> 01:33:23.800
Was sonst?

01:33:23.960 --> 01:33:24.420
Was sonst?

01:33:25.120 --> 01:33:27.760
So, also ich könnte wetten, dass es nicht funktioniert.

01:33:29.730 --> 01:33:35.410
Dass es abkackt oder sehr merkwürdige Zeichen ausgibt auf der Kommandozeile.

01:33:39.850 --> 01:33:40.670
Ja, macht es.

01:33:41.030 --> 01:33:41.790
Es funktioniert nicht.

01:33:41.870 --> 01:33:43.710
Und mein Terminal sagt, es kackt gleich ab.

01:33:45.310 --> 01:33:45.590
Jaja.

01:33:45.590 --> 01:33:48.690
Tja, Chad, warum funktioniert das nicht?

01:33:48.790 --> 01:33:53.670
Es ist ein Null-Terminated-Character-Array.

01:33:53.770 --> 01:33:55.010
Das ist schon richtig.

01:33:55.850 --> 01:33:57.090
Aber warum geht das nicht?

01:33:57.210 --> 01:34:00.950
Also sprich, warum ist das hier so nicht möglich, obwohl das doch ihr Charakter ist?

01:34:01.370 --> 01:34:03.650
Das liegt daran, was ist das, was ich euch zeigen wollte?

01:34:03.690 --> 01:34:11.830
Das liegt daran, weil ein Charakter in C-Sharp nicht ein Byte ist.

01:34:13.270 --> 01:34:15.570
Normalerweise ist ein Charakter, zumindest in C ist das so.

01:34:15.650 --> 01:34:18.250
Ist ein Charakter gleich ein Byte.

01:34:18.910 --> 01:34:19.690
In C-Sharp nicht.

01:34:20.710 --> 01:34:22.430
In C-Sharp ist ein Charakter.

01:34:23.130 --> 01:34:24.150
Chad, wer weiß es?

01:34:26.920 --> 01:34:29.240
Wie viel Byte hat ein Charakter in C-Sharp?

01:34:31.940 --> 01:34:32.500
Pausierungschamp?

01:34:33.180 --> 01:34:35.080
Wer ist High IQ und wer ist es?

01:34:36.020 --> 01:34:36.260
Vier?

01:34:36.360 --> 01:34:37.100
Ne, fast.

01:34:38.480 --> 01:34:39.240
Sixty-nine?

01:34:39.500 --> 01:34:40.080
Fast richtig.

01:34:42.280 --> 01:34:42.800
Sechzehn?

01:34:42.860 --> 01:34:43.000
Ne.

01:34:46.280 --> 01:34:48.080
Du bist mit sechzehn aber schon mal nicht verkehrt.

01:34:49.160 --> 01:34:50.320
Es sind bloß nicht sechzehn Byte.

01:34:50.700 --> 01:34:51.260
Es sind zwei.

01:34:51.580 --> 01:34:51.880
Richtig.

01:34:51.880 --> 01:34:52.880
Es sind zwei.

01:34:53.080 --> 01:34:53.520
Zwei.

01:34:54.020 --> 01:34:54.860
Es sind zwei Byte.

01:34:54.940 --> 01:34:55.780
Es sind sechzehn Byte.

01:34:56.220 --> 01:35:02.560
Es ist quasi UTF-16, wie C-Sharp intern arbeitet.

01:35:03.080 --> 01:35:03.380
Warum?

01:35:04.080 --> 01:35:05.280
Das weiß nur Microsoft.

01:35:06.500 --> 01:35:09.280
Historisch, weil das wahrscheinlich vor der Erfindung von UTF-8 war.

01:35:15.070 --> 01:35:15.150
Ja.

01:35:16.190 --> 01:35:17.110
Das sind sechzehn Byte.

01:35:17.330 --> 01:35:18.970
Deswegen funktioniert das nicht richtig.

01:35:23.190 --> 01:35:24.190
Deswegen funktioniert das nicht richtig.

01:35:24.250 --> 01:35:25.850
Deswegen muss ich explizit sagen, hier guck mal.

01:35:26.370 --> 01:35:27.430
Das ist ein Byte.

01:35:27.430 --> 01:35:29.570
Und jetzt muss ich mir überlegen, okay.

01:35:29.570 --> 01:35:38.370
Wie bekomme ich denn, bitteschön, aus diesen Bytes, aus diesen UTF-8 Bytes, jetzt ein C-Sharp-String?

01:35:39.870 --> 01:35:41.890
So, wo ist die John Skeet-Antwort, Leute?

01:35:45.720 --> 01:35:51.980
Fastest way to convert a possibly null-terminated ASCII Byte to String.

01:35:54.600 --> 01:35:54.960
Ja, Moment.

01:35:55.120 --> 01:35:57.160
Das ist, das ist, das zählt nicht.

01:36:02.180 --> 01:36:05.280
Das, das zählt nicht, weil da ist, das ist ja schon im Array.

01:36:05.280 --> 01:36:06.660
Und im Array.

01:36:07.280 --> 01:36:10.000
Ist ja schon eine Längen-Information drinne.

01:36:14.780 --> 01:36:15.260
Es muss.

01:36:22.580 --> 01:36:23.780
Zweite oder dritte Antwort?

01:36:29.760 --> 01:36:30.640
Nope, das stimmt nicht.

01:36:30.840 --> 01:36:31.600
Das, das bringt nix.

01:36:31.740 --> 01:36:32.500
Das, das bringt nix.

01:36:36.960 --> 01:36:39.120
Das geht so nicht.

01:36:49.270 --> 01:36:51.310
Ich mein, eine Schleife, das funktioniert.

01:36:51.430 --> 01:36:53.570
Ich könnte eine Schleife machen und das selbst rausholen.

01:36:56.300 --> 01:36:57.720
Was haben wir denn hier zu bieten?

01:37:00.650 --> 01:37:01.590
Okay, C-Sharp.

01:37:06.500 --> 01:37:07.380
UTF-8.

01:37:08.560 --> 01:37:10.080
Pointer to String.

01:37:13.130 --> 01:37:13.830
Native UTF-8.

01:37:13.830 --> 01:37:13.890
Native UTF-8.

01:37:13.890 --> 01:37:13.970
Native UTF-8.

01:37:13.990 --> 01:37:14.170
Native UTF-8.

01:37:14.170 --> 01:37:15.070
Managed String.

01:37:15.730 --> 01:37:20.160
Boah, was zum...

01:37:26.600 --> 01:37:27.540
Gibt's da nix Fertiges?

01:37:29.380 --> 01:37:32.500
Marshall Pointer to String UTF...

01:37:33.040 --> 01:37:33.820
Ja!

01:37:34.380 --> 01:37:35.780
Das sieht gut aus!

01:37:36.860 --> 01:37:38.260
Der Marshall wieder mal.

01:37:39.760 --> 01:37:41.260
Der Marshall.

01:37:42.780 --> 01:37:43.920
UTF-8.

01:37:44.440 --> 01:37:48.200
Pointer to String.

01:37:49.440 --> 01:37:50.560
UTF-8.

01:37:51.940 --> 01:37:53.320
Pointer, okay.

01:37:53.320 --> 01:37:53.380
Okay.

01:37:53.380 --> 01:37:54.580
Okay, Bites.

01:37:57.400 --> 01:38:00.320
Okay, das will er als Endpointer wahrscheinlich haben.

01:38:00.420 --> 01:38:01.020
Das ist okay.

01:38:01.180 --> 01:38:01.660
Darf er.

01:38:03.280 --> 01:38:04.020
Wenn er meint.

01:38:06.630 --> 01:38:07.770
Okay, String.

01:38:10.760 --> 01:38:11.480
Alles klar.

01:38:12.980 --> 01:38:15.240
Löschen wir die 4M und gucken, ob es jetzt funktioniert.

01:38:16.160 --> 01:38:18.440
By the way, Leute, ich hab mich wieder übel sidetracken lassen.

01:38:18.600 --> 01:38:20.000
Eigentlich wollte ich mich mit der...

01:38:20.000 --> 01:38:21.740
Meine Schelle ist kaputt.

01:38:22.300 --> 01:38:25.060
Mit der Größe von Binarys beschäftigen.

01:38:25.060 --> 01:38:28.760
Was wir wieder nur zum Teil gemacht haben.

01:38:28.760 --> 01:38:35.390
Aber wieder was gelernt.

01:38:39.580 --> 01:38:42.380
So, wenn jetzt alles klappt, krieg ich die IP-Adresse von...

01:38:43.480 --> 01:38:45.380
Der 4M ausgespuckt.

01:38:49.850 --> 01:38:50.410
Nice!

01:38:51.130 --> 01:38:51.470
Easy!

01:38:54.540 --> 01:38:55.440
Eckermann-Shit.

01:38:55.960 --> 01:38:56.980
Easy as fuck.

01:38:57.380 --> 01:38:58.980
E-E-Easy as fuck.

01:38:59.300 --> 01:38:59.560
Easy.

01:38:59.900 --> 01:39:00.660
Get rekt.

01:39:00.920 --> 01:39:01.960
Easy as fuck.

01:39:02.240 --> 01:39:03.460
Der Marshall war's wieder.

01:39:08.550 --> 01:39:10.150
Der Marshall war am Start.

01:39:14.160 --> 01:39:17.080
Ist es jetzt möglich, Unsafety-Sharp-Inline-Assembly zu schreiben?

01:39:17.680 --> 01:39:17.780
Ich weiß es nicht.

01:39:17.780 --> 01:39:17.820
Ich weiß es nicht.

01:39:17.820 --> 01:39:19.600
Ich hab keine Ahnung, ob das geht.

01:39:21.660 --> 01:39:25.800
Also, direkt in der Sprache integriert ist es nicht.

01:39:26.500 --> 01:39:30.100
Aber es gibt bestimmt irgendwelche Zusatzdinger, wo das tut.

01:39:32.220 --> 01:39:32.780
Marshalak.

01:39:38.030 --> 01:39:39.610
Ja, das ist gut hier.

01:39:39.690 --> 01:39:40.570
Das find ich nice.

01:39:43.220 --> 01:39:45.420
Was passiert eigentlich, wenn ich die 4M lösche?

01:39:46.060 --> 01:39:49.000
Crash das dann, weil der Pointer nicht mehr gültig ist?

01:39:49.500 --> 01:39:50.580
Oder was passiert?

01:39:50.580 --> 01:39:52.580
Jetzt bin ich gespannt.

01:39:52.620 --> 01:39:54.260
Oh, ja.

01:39:54.600 --> 01:39:55.160
Es crasht.

01:39:56.980 --> 01:39:58.080
Domain not found.

01:39:59.260 --> 01:40:01.100
Object instance not set.

01:40:01.940 --> 01:40:02.160
Okay.

01:40:02.480 --> 01:40:05.380
Man darf ihm das nicht unterm S weglöschen.

01:40:06.660 --> 01:40:07.600
Dann kackt er ab.

01:40:10.070 --> 01:40:10.830
Aber das ist cool.

01:40:11.010 --> 01:40:12.550
Das hätte ich nicht gedacht, dass das so geht.

01:40:13.950 --> 01:40:14.390
Publish.

01:40:14.550 --> 01:40:16.770
Wie groß ist das Executable jetzt?

01:40:19.740 --> 01:40:20.220
Build.

01:40:23.760 --> 01:40:24.720
3,8 MB.

01:40:24.940 --> 01:40:25.520
Das ist ja nix.

01:40:28.980 --> 01:40:29.120
Was?

01:40:31.470 --> 01:40:31.690
Also.

01:40:32.690 --> 01:40:35.790
Warum ist meine Shell so abgefuckt, kaputt?

01:40:35.930 --> 01:40:36.550
Was ist da los?

01:40:39.640 --> 01:40:40.300
Das ist cool.

01:40:45.570 --> 01:40:47.130
Weil das in Kernel pointed.

01:40:47.270 --> 01:40:47.470
Nee.

01:40:49.190 --> 01:40:49.830
Weil...

01:40:49.830 --> 01:40:52.920
Das ist nicht gecrashed.

01:40:53.100 --> 01:40:56.280
Weil es irgendwie unmanaged Probleme gegeben hat.

01:40:56.340 --> 01:40:57.840
Das ist gecrashed, weil...

01:40:59.500 --> 01:41:03.840
Er anscheinend versucht hat, hier drauf zuzugreifen.

01:41:04.940 --> 01:41:06.060
Weil es noch größer...

01:41:06.060 --> 01:41:08.540
Also, ich hab es wahrscheinlich gerade in dem Moment gelöscht,

01:41:08.540 --> 01:41:09.380
wo es das...

01:41:09.380 --> 01:41:15.320
noch größer als null war und dann hat er versucht hier drauf zuzugreifen oder in welcher zeile 201

01:41:15.320 --> 01:41:23.360
ja genau also ich habe das gelöscht wo der check das war ein ganz unglückliches timing anscheinend

01:41:23.360 --> 01:41:35.180
na oder na oder das ist doch irgendwie im abgeschrieben dass das gefunden hat was auch

01:41:35.180 --> 01:41:39.440
immer jeder ist der ist gecrasht weil ich hier versucht habe auf interfaces zuzugreifen auf den

01:41:39.440 --> 01:41:49.760
ersten index und das gab es da nicht mehr weil ich gelöscht hatte ja aber gut man war ja war

01:41:49.760 --> 01:41:56.660
irgendwie zu erwarten sollte man sollte man auch nicht machen haben wir wieder was gelernt leute

01:41:56.660 --> 01:42:05.300
wie man bekommt wie man per api also per pc library interface vms erstellt unter linux

01:42:05.300 --> 01:42:20.140
was das war auf die schnelle machen können ich glaube nicht was ich mich jetzt

01:42:20.140 --> 01:42:29.420
noch frage ist was ich mir jetzt noch frage ist worauf sind diese beine resets lauffähig

01:42:29.420 --> 01:42:35.950
dass das müsste man vielleicht mal schnell ausprobieren noch ich kommentiere mal alles

01:42:35.950 --> 01:42:59.580
aus ich komme ein thema alles aus ablisch habe ich jetzt wieder mit so worauf worauf

01:42:59.580 --> 01:43:07.800
sind die lauffähig also mama docker ran doch ran

01:43:12.120 --> 01:43:17.100
linux support und netz ja das ist was die supporten das geht aber meistens trotzdem

01:43:17.100 --> 01:43:29.010
eine ganze ecke weiter weiter zurück minimum ja ich brauch für dort 98 ich brauch ich brauch für

01:43:29.010 --> 01:43:37.490
dort 88 haben wir da schon ein review haben sie nicht rein geschrieben ich weiß nicht was

01:43:37.490 --> 01:43:44.310
minimum support ist für für für dort 88 alles das kann man das kann man einfach auch

01:43:44.330 --> 01:44:02.490
ausprobieren können wir sagen einfach dokka ran nicht portman borgherr m und zwar ubuntu

01:44:02.490 --> 01:44:11.870
2004 sollte auf jeden fall noch noch gehen das ist glaube ich kein problem 2004 so als

01:44:11.870 --> 01:44:20.750
müssen wir mountain mein docker stellt ist zu lange her wie ging das jetzt pbd slash bild

01:44:20.750 --> 01:44:32.980
mounted nach bild mache ich das richtig so einer warum ist meine chance so im arsch ich will ich

01:44:32.980 --> 01:44:40.840
will das irgendwie kaputt meine meine vorwärts rückwärts tasten bin das testen wir jetzt mal

01:44:40.840 --> 01:44:44.040
wo das worauf das läuft cd

01:44:44.080 --> 01:45:04.440
bild ja vor allem champ es ich verstehe wenn ich wenn ich das kompilieren dann nimmt es die

01:45:04.440 --> 01:45:13.480
c libraries von meinem host das ist ein sonderfall zu also wenn ich das normale erstellen vorne von

01:45:13.480 --> 01:45:18.520
einem executable machen mit dotnet dann benutzt er die sachen die schon drin sind die quasi

01:45:18.520 --> 01:45:18.880
eingebaut

01:45:18.940 --> 01:45:24.700
sind wenn ich es allerdings komplett kompilieren so dass gar keine dotnet runtime mehr vorhanden ist

01:45:24.700 --> 01:45:38.030
dann heißt es ich benutze die von meinem bild von meinem host system okay das ist natürlich blöd das

01:45:38.030 --> 01:45:47.390
heißt im endeffekt ich müsste quasi ein docker file bauen wird heute vielleicht bis sie knapp

01:45:47.390 --> 01:45:54.290
müssten docker fall bauen wo die sachen drin gebaut werden wir machen mal klickt die die

01:45:54.410 --> 01:46:05.750
kurzvariante von dem docker fall und zwar wir nehmen mal ubuntu wir machen jetzt gar kein docker

01:46:05.750 --> 01:46:16.710
fall ich maute das jetzt hier rein ich maute das jetzt hier rein install dotnet müssen wir jetzt hier

01:46:16.710 --> 01:46:22.970
machen minus 8.0 also ich meine alter

01:46:22.970 --> 01:46:23.150
alter

01:46:23.150 --> 01:46:23.210
alter

01:46:23.210 --> 01:46:23.290
alter

01:46:23.290 --> 01:46:25.210
alter

01:46:25.210 --> 01:46:25.250
alter

01:46:25.250 --> 01:46:25.270
alter

01:46:25.270 --> 01:46:25.290
alter

01:46:25.290 --> 01:46:25.330
alter

01:46:25.330 --> 01:46:25.450
alter

01:46:25.450 --> 01:46:25.470
alter

01:46:25.470 --> 01:46:25.590
alter

01:46:25.590 --> 01:46:25.650
alter

01:46:25.650 --> 01:46:25.710
alter

01:46:25.710 --> 01:46:25.810
alter

01:46:25.810 --> 01:46:25.890
alter

01:46:26.110 --> 01:46:28.890
Es ist kein Curl installiert, ich fass es nicht.

01:46:29.230 --> 01:46:31.070
Na gut, es sind minimale Container-Images.

01:46:32.870 --> 01:46:34.930
Aber muss heute auch Curl drauf sein.

01:46:37.310 --> 01:46:39.430
Kann man sich das so vorstellen wie Server-Side-Rendering?

01:46:39.610 --> 01:46:41.830
Was? Hä? Wie jetzt?

01:46:43.130 --> 01:46:44.090
Das verstehe ich nicht.

01:46:47.930 --> 01:46:49.710
Doch, du kannst ein Image von Microsoft nehmen.

01:46:49.790 --> 01:46:51.510
Das bringt allerdings an der Stelle nichts,

01:46:52.050 --> 01:46:55.290
weil du das älteste Image, also das älteste OS nehmen musst,

01:46:55.570 --> 01:46:57.870
was du mit deinem Output-Binary supporten musst.

01:46:57.870 --> 01:47:00.230
Weil wir machen kein normales .NET-Bild,

01:47:00.330 --> 01:47:05.310
wir machen diese experimentelle .NET 8 Komplett-Kompilierung.

01:47:09.220 --> 01:47:10.220
Okay, Bild.

01:47:11.140 --> 01:47:12.960
Das ist schon mal, da sieht man mal schon wieder,

01:47:13.420 --> 01:47:20.410
das ist schon mal abfuck im Vergleich zu Go.

01:47:20.670 --> 01:47:23.130
Mit Go hast du die Probleme schlicht und ergreifend nicht.

01:47:26.030 --> 01:47:27.170
Weißt du, das ist schon mal doof.

01:47:27.950 --> 01:47:29.230
Das ist schon mal nicht gut.

01:47:34.470 --> 01:47:35.330
Ico, Alter.

01:47:39.480 --> 01:47:40.440
Wie heißt denn der Kram?

01:47:47.440 --> 01:47:48.500
Wie heißt das?

01:47:53.180 --> 01:47:54.320
Hier, was ist da?

01:47:55.200 --> 01:47:56.320
Das brauchen wir.

01:48:02.830 --> 01:48:04.650
Go-Syntax ist halt bodenlos.

01:48:05.930 --> 01:48:09.210
Ja, Go-Syntax ist, meine Güte, jetzt ist es ja mal gut hier.

01:48:09.830 --> 01:48:14.290
Go-Syntax ist, aber ist schon halbwegs erträglich, geht schon.

01:48:14.910 --> 01:48:17.450
Aber wirklich schön, muss ich sagen, also wirklich, wirklich warm,

01:48:17.550 --> 01:48:19.650
so komplett werde ich mit der Go-Syntax auch nicht.

01:48:24.360 --> 01:48:26.120
Plattform-Linker, not found.

01:48:30.390 --> 01:48:32.870
Bild, wie heißt das?

01:48:32.870 --> 01:48:34.870
Bild Essentials?

01:48:36.110 --> 01:48:42.110
Nee, ähm, Base-Bild, ah, fuck, wie heißt denn das unter Debian?

01:48:52.740 --> 01:48:54.740
Einfach, ah, okay, easy.

01:48:55.600 --> 01:48:57.600
Einfach ohne S, na dann, easy.

01:49:06.370 --> 01:49:17.360
Also unter Ubuntu 20.0, alles klar, natürlich, was, was sonst?

01:49:19.620 --> 01:49:24.060
Ich finde, das ist ganz eindeutig, was das uns sagen soll.

01:49:26.040 --> 01:49:44.590
Komplett klar, ja.

01:49:47.980 --> 01:49:48.820
Also, wenn sich das noch nicht mal, ja, ja, ja, ja, ja.

01:49:48.820 --> 01:49:52.320
Wenn sich das noch nicht mal gescheit unter Ubuntu 20.04 übersetzen lässt,

01:49:54.920 --> 01:49:57.240
dann kannst du es ja fast, fast komplett.

01:49:57.680 --> 01:50:00.300
Was hat er denn jetzt, was will er mir eigentlich sagen?

01:50:06.260 --> 01:50:08.280
Bist du nicht auf V20, doch?

01:50:10.360 --> 01:50:15.680
Was, .NET 7 supportet doch nicht erst ab 22.10.

01:50:16.020 --> 01:50:19.720
.NET 7 geht, glaube ich, bis Ubuntu 18.04 oder so?

01:50:33.070 --> 01:50:35.090
Ja, Commercial Support ist doch egal.

01:50:41.010 --> 01:50:41.810
Ihr Minimum.

01:50:42.310 --> 01:50:45.810
Minimum Lib C, muss man gucken.

01:50:50.100 --> 01:50:56.300
Es ist bis Debian 10 und Ubuntu 18.04, siehste?

01:50:56.300 --> 01:51:03.160
Die Chance, dass es auf noch älteren läuft, ist sogar gar nicht so, gar nicht so unnötig.

01:51:03.520 --> 01:51:07.580
Also, was der hier für Schmerzen hat, ich habe absolut keinen plassen Schimmer.

01:51:11.380 --> 01:51:15.860
Also, ich weiß auch nicht, was er für Probleme hat, ehrlich gesagt, weil,

01:51:15.860 --> 01:51:19.720
also, ich habe garantiert irgendeine Abhängigkeit nicht.

01:51:22.620 --> 01:51:24.040
Aber man weiß es halt nicht.

01:51:25.100 --> 01:51:28.440
Ich kann es mal bilden, ich kann es mal bilden ohne Ahead of Time.

01:51:31.280 --> 01:51:32.420
Ja, easy, gar kein Problem.

01:51:41.480 --> 01:51:42.160
Ich habe Dependencies.

01:51:43.980 --> 01:51:45.100
Dependencies, müssen wir mal kurz gucken.

01:51:46.920 --> 01:51:49.140
.NET 7 Dependencies, was brauchen wir denn hier?

01:51:52.550 --> 01:51:55.490
GNU C++ Library, okay, das müssen wir bestimmt alles.

01:51:56.290 --> 01:51:57.750
Upt, Install, Lib.

01:51:58.710 --> 01:51:59.190
Ne.

01:52:01.710 --> 01:52:06.010
Das ist doch mit Build Essentials, Build Essentials bestimmt, bestimmt drauf.

01:52:08.490 --> 01:52:09.250
Oder nicht?

01:52:12.440 --> 01:52:13.820
Welche davon denn jetzt?

01:52:16.800 --> 01:52:17.700
Welche davon?

01:52:19.140 --> 01:52:20.480
Geht anscheinend nicht drauf.

01:52:24.300 --> 01:52:26.180
Welche, welche davon denn jetzt überhaupt?

01:52:30.150 --> 01:52:31.210
Kann man, kann man nicht einfach...

01:52:32.670 --> 01:52:34.130
Gibt es da nicht so eine Standard oder so?

01:52:37.920 --> 01:52:39.180
Ja, ich weiß nicht welche.

01:52:41.560 --> 01:52:43.240
Ich installiere jetzt einfach alle.

01:52:49.910 --> 01:52:50.030
So.

01:52:50.030 --> 01:52:56.380
Was will der eigentlich alles haben, Mann?

01:53:02.430 --> 01:53:03.930
Ach, hat er, stand es da drin, ne?

01:53:04.770 --> 01:53:05.190
Moment.

01:53:05.830 --> 01:53:07.590
Hätte ich mir vielleicht mit Output-Richtung angucken sollen.

01:53:08.090 --> 01:53:08.950
Cannot find?

01:53:10.210 --> 01:53:11.870
Wo zum Teufel siehst du das?

01:53:12.490 --> 01:53:12.990
Das da?

01:53:13.990 --> 01:53:14.890
Cannot find.

01:53:15.130 --> 01:53:16.010
Wo steht da?

01:53:16.330 --> 01:53:19.050
Wo steht Cannot find minus LZ?

01:53:19.830 --> 01:53:20.210
Ach da!

01:53:21.630 --> 01:53:21.990
Zlib.

01:53:22.810 --> 01:53:26.280
Wie heißt denn das?

01:53:26.820 --> 01:53:27.720
Zlib Dev?

01:53:28.540 --> 01:53:28.740
Ne.

01:53:28.740 --> 01:53:30.540
Warum heißt die ganze?

01:53:30.560 --> 01:53:32.840
Warum heißt die ganzen Sachen immer so unintuitiv?

01:53:35.720 --> 01:53:36.640
Zlib C.

01:53:47.320 --> 01:53:47.880
Äh.

01:53:52.100 --> 01:53:53.880
Ja, das war bestimmt das Falsche.

01:53:59.560 --> 01:54:00.960
Zlib 1G.

01:54:01.280 --> 01:54:02.320
Natürlich, natürlich.

01:54:02.940 --> 01:54:03.740
Was, was sonst?

01:54:04.440 --> 01:54:05.520
Die Header brauchen wir ja.

01:54:05.740 --> 01:54:06.380
Ich geb dir Header.

01:54:07.560 --> 01:54:09.200
Ah, guck mal.

01:54:09.540 --> 01:54:11.040
Jetzt hat das funktioniert.

01:54:11.680 --> 01:54:16.080
Also 2204 ist überhaupt kein Problem zu bilden.

01:54:20.180 --> 01:54:20.520
Build.

01:54:20.520 --> 01:54:20.620
Build.

01:54:22.080 --> 01:54:23.060
Vm-Champ.

01:54:23.180 --> 01:54:24.180
Ja.

01:54:24.180 --> 01:54:25.180
Ja.

01:54:25.180 --> 01:54:26.180
Okay.

01:54:26.180 --> 01:54:27.180
Eine Sache.

01:54:27.180 --> 01:54:28.180
Nochmal kurz gucken.

01:54:28.180 --> 01:54:29.180
1604.

01:54:29.180 --> 01:54:30.180
Das wird sich überhaupt nicht mehr installieren lassen, glaub ich jetzt.

01:54:30.180 --> 01:54:31.180
Und das wird sich, glaub ich, gar nicht mehr installieren lassen.

01:54:31.180 --> 01:54:32.180
Also ich geh nicht davon aus, dass es überhaupt läuft.

01:54:32.180 --> 01:54:44.030
Okay, 1604 läuft auch.

01:54:44.030 --> 01:54:45.030
Moment.

01:54:45.030 --> 01:54:46.030
Dotnet.

01:54:46.030 --> 01:54:52.440
Dotnet.

01:54:52.440 --> 01:54:53.440
Info.

01:54:53.440 --> 01:54:54.440
Ja, ja.

01:54:54.440 --> 01:55:03.600
Leute.

01:55:03.600 --> 01:55:04.600
Ja, ja.

01:55:04.600 --> 01:55:05.600
Ja, ja.

01:55:05.600 --> 01:55:09.890
Ja, ja.

01:55:09.890 --> 01:55:10.890
Ja, ja.

01:55:10.890 --> 01:55:11.890
Ja, ja.

01:55:11.890 --> 01:55:12.890
Ja, ja.

01:55:12.890 --> 01:55:13.890
Ja, ja.

01:55:13.890 --> 01:55:16.650
Ja, ja.

01:55:16.650 --> 01:55:17.650
Ja, ja.

01:55:17.650 --> 01:55:18.650
Ja, ja.

01:55:18.650 --> 01:55:19.650
Ja, ja.

01:55:19.650 --> 01:55:20.650
Ja, ja.

01:55:20.650 --> 01:55:21.650
Ja, ja.

01:55:21.650 --> 01:55:22.650
Ja, ja.

01:55:22.650 --> 01:55:25.650
Live IQ 66 hieß der Krempel oder?

01:55:25.650 --> 01:55:26.650
Dev.

01:55:26.650 --> 01:55:30.460
Ich hasse diesen Namen von den...

01:55:30.460 --> 01:55:34.460
Das kann es doch keiner merken, man.

01:55:34.460 --> 01:55:35.460
55.

01:55:35.460 --> 01:55:39.220
Wir 66 waren gestern 55 war damals.

01:55:39.220 --> 01:55:43.350
Obviously.

01:55:43.350 --> 01:55:45.350
Und jetzt war das was.

01:55:45.350 --> 01:55:50.140
Z clip.

01:55:50.140 --> 01:55:56.410
ist Okay, dass das das heißt einfach immer gleich.

01:55:56.410 --> 01:55:58.810
Das ist richtig.

01:55:58.810 --> 01:56:00.550
irit und lies dass sie alleine.

01:56:00.550 --> 01:56:14.840
cd bild okay mal gucken wir beim abkacken zu plattform linke ach so ja

01:56:14.840 --> 01:56:20.520
ab install install bild essentials deswegen macht man sich dann

01:56:20.520 --> 01:56:24.060
normalerweise docker fall hast du das problem nicht und muss sich von hand

01:56:24.060 --> 01:56:40.920
machen in general okay sie kommen das läuft sogar das läuft sogar auf ubuntu

01:56:40.920 --> 01:56:45.640
16 04 noch hier das ist dass das doch gar kein problem

01:56:45.640 --> 01:56:52.600
das ist doch gar kein ding also 16 04 ist mir alt genug

01:56:52.600 --> 01:57:08.860
sage ich euch ganz ehrlich 1,9 1,9 mb library und ich meine das ist über sechs

01:57:08.860 --> 01:57:12.780
jahre alt des linux das ist doch schon das doch in ordnung wo wir noch mal

01:57:12.780 --> 01:57:16.920
just for fun okay wir machen jetzt wir machen jetzt als letzte amts handlung

01:57:16.920 --> 01:57:21.880
heute wie überspringen jetzt 16 04 wir machen jetzt 12

01:57:21.880 --> 01:57:33.770
4 12 04 okay wir wissen jetzt ja langsam wie es geht ab update damals gab

01:57:33.770 --> 01:57:39.140
es noch nicht mal ab

01:57:40.680 --> 01:57:47.220
get update das ist so alt oh fuck leute dafür gibt es noch nicht mal mehr

01:57:47.220 --> 01:57:55.150
packages okay wir können das nicht verwenden die

01:57:55.150 --> 01:58:05.170
mirrors sind offline okay keine chance okay 14 04 kommt

01:58:05.170 --> 01:58:19.890
ist 14 russen mir jetzt genau okay da gab es ab schon jetzt halte ich schaue

01:58:19.890 --> 01:58:23.270
mal kurz ob das funst

01:58:23.590 --> 01:58:46.540
ok download klappt noch ab install das da und bild essential jetzt will mal

01:58:46.540 --> 01:58:51.640
gespannt ob der bild klappt ich glaube ich glaube ja nicht ja genau wunderbar

01:58:51.640 --> 01:58:52.360
wunderbar

01:58:52.480 --> 01:58:53.400
Excellent, excellent.

01:58:54.220 --> 01:58:55.060
Upt-Search.

01:58:57.600 --> 01:58:58.880
Wie hieß das Ding damals?

01:58:59.100 --> 01:59:00.840
Upt-Install. Ah, 52.

01:59:01.140 --> 01:59:02.300
52 sind wir jetzt.

01:59:02.880 --> 01:59:03.620
Es wird immer älter.

01:59:06.600 --> 01:59:08.100
So, und jetzt bauen wir das Ganze mal.

01:59:08.260 --> 01:59:08.920
CD-Build.

01:59:10.680 --> 01:59:10.860
Oh.

01:59:12.660 --> 01:59:14.040
Cannot get required symbol.

01:59:14.120 --> 01:59:14.680
SSL-Z.

01:59:15.280 --> 01:59:17.980
Z-Alpen-Protoss. Alles klar.

01:59:18.220 --> 01:59:19.860
Die Alpen-Protoss sind am Start.

01:59:21.080 --> 01:59:22.860
Wusste gar nicht, dass die auch in den Alpen sind.

01:59:22.860 --> 01:59:28.650
Die Alpen-Protoss machen nicht mal mit.

01:59:29.470 --> 01:59:30.210
Okay, also.

01:59:30.530 --> 01:59:33.490
Ubuntu 14.04 funktioniert nicht mehr.

01:59:33.650 --> 01:59:34.290
Das ist zu alt.

01:59:38.360 --> 01:59:39.880
Man könnte jetzt sicherlich rumbasteln

01:59:39.880 --> 01:59:41.840
und SSL-Support deaktivieren

01:59:41.840 --> 01:59:43.120
und solche Geschichten, aber

01:59:43.120 --> 01:59:44.180
scheiß drauf.

01:59:45.460 --> 01:59:46.580
Also das funktioniert nicht mehr.

01:59:46.940 --> 01:59:49.020
16.04 ist das Letzte, wo es drauf läuft.

01:59:49.300 --> 01:59:51.800
Obwohl der offizielle Support schon

01:59:51.800 --> 01:59:53.900
bei 18.04 Plus ist.

01:59:59.300 --> 02:00:00.620
Also finde ich okay.

02:00:02.300 --> 02:00:02.860
Offiziellen

02:00:02.860 --> 02:00:04.500
Support auf 18.04 stellen

02:00:04.500 --> 02:00:05.740
und

02:00:05.740 --> 02:00:08.760
in Wirklichkeit noch 16.04

02:00:08.760 --> 02:00:09.340
supporten.

02:00:09.920 --> 02:00:12.300
Beziehungsweise lauffähig sein.

02:00:12.440 --> 02:00:13.580
Support wird es ja nicht.

02:00:14.720 --> 02:00:16.780
Ja, nice. Also ich gehe mal

02:00:16.780 --> 02:00:18.560
davon aus, mit einem gebauten Binary,

02:00:18.980 --> 02:00:20.300
was so alt ist,

02:00:23.960 --> 02:00:24.700
dann geht das schon.

02:00:30.170 --> 02:00:31.370
Guck, das läuft auch hier drauf.

02:00:32.510 --> 02:00:34.070
Kann ja mehr oder weniger Zufall sein.

02:00:34.070 --> 02:00:35.770
Aber das ist gut.

02:00:36.030 --> 02:00:36.550
Das ist gut.

02:00:37.550 --> 02:00:40.010
Dann sind die Binarys nämlich tatsächlich auch,

02:00:40.030 --> 02:00:43.500
lauffähig

02:00:43.500 --> 02:00:45.340
auf den wichtigsten Systemen.

02:00:46.720 --> 02:00:47.140
Ich meine,

02:00:48.760 --> 02:00:50.020
braucht man wirklich was,

02:00:51.820 --> 02:00:53.680
was eine C-Library

02:00:53.680 --> 02:00:54.380
voraussetzt,

02:00:55.340 --> 02:00:57.020
die älter ist als

02:00:57.020 --> 02:00:59.340
sechs Jahre rausgekommen,

02:00:59.980 --> 02:01:01.700
ist die ja wahrscheinlich noch früher.

02:01:03.460 --> 02:01:04.680
Also die, guck mal mal,

02:01:05.100 --> 02:01:07.160
Ubuntu 16.04

02:01:07.160 --> 02:01:08.640
LibC Version.

02:01:15.300 --> 02:01:15.740
Okay.

02:01:15.740 --> 02:01:15.820
Okay.

02:01:16.940 --> 02:01:25.820
LibC Release

02:01:25.820 --> 02:01:26.800
Date

02:01:26.800 --> 02:01:29.600
2016.

02:01:33.530 --> 02:01:34.990
Ja, sieben Jahre alt

02:01:34.990 --> 02:01:35.870
ist das jetzt genau.

02:01:40.500 --> 02:01:41.420
Also ich würde sagen,

02:01:42.480 --> 02:01:44.000
sieben Jahre alte C-Library,

02:01:44.140 --> 02:01:45.080
damit läuft es noch.

02:01:45.960 --> 02:01:48.300
Das ist zwar nicht so krass, wie mit

02:01:48.300 --> 02:01:50.460
Go. Ich meine, Go-Binarys,

02:01:50.640 --> 02:01:51.780
also alles, was

02:01:51.780 --> 02:01:54.480
Go-Only-Sachen verwendet, wohlgemerkt

02:01:54.480 --> 02:01:56.580
nur, also mit irgendwelchen Abhängigkeiten

02:01:56.580 --> 02:01:58.260
drumherum hast du dann auch wieder andere Probleme.

02:02:03.770 --> 02:02:04.170
Auf der,

02:02:04.290 --> 02:02:06.050
auf der Seite wurde das sogar erwähnt.

02:02:06.250 --> 02:02:07.610
Weißt du, lass uns mal mal schnell gucken.

02:02:09.110 --> 02:02:11.070
Aber das ist, das ist, das ist nicht so krass wie Go.

02:02:11.190 --> 02:02:12.890
Mein Go-Binarys sind ja lauffähig

02:02:12.890 --> 02:02:14.190
bis zurück zu

02:02:14.190 --> 02:02:16.730
Kernel 2.6.8.30

02:02:16.730 --> 02:02:18.510
oder sowas. Du kannst ja quasi

02:02:18.510 --> 02:02:20.610
aktuelle Go-Programme auf

02:02:20.610 --> 02:02:22.310
Linux-System laufen lassen von

02:02:22.310 --> 02:02:24.310
vor 20 Jahren oder so.

02:02:24.310 --> 02:02:27.790
Ja, nicht ganz, aber von vor

02:02:27.790 --> 02:02:29.190
15 Jahren oder so.

02:02:33.180 --> 02:02:33.980
Hier steht nix.

02:02:34.880 --> 02:02:39.800
Ups. Hier steht nix von

02:02:39.800 --> 02:02:47.450
Ach, hätte ich das,

02:02:47.450 --> 02:02:49.450
hätte ich das mal gewusst, da hätte ich das einfach copy-pasten können.

02:02:49.450 --> 02:03:00.060
Ja, Go,

02:03:00.060 --> 02:03:02.060
Go ist lauffähig auf

02:03:02.060 --> 02:03:04.060
Linux-Systemen, die älter sind als Go selbst.

02:03:04.060 --> 02:03:06.060
Ja.

02:03:06.060 --> 02:03:08.060
Also hier steht nichts von 16.04.

02:03:08.060 --> 02:03:12.520
Auf der, auf der Tabelle der

02:03:12.520 --> 02:03:21.980
Linux-Version. Hier?

02:03:21.980 --> 02:03:23.980
Äh, 18.04 steht da drin.

02:03:25.980 --> 02:03:27.980
16. Ach, hier.

02:03:27.980 --> 02:03:29.980
Ach, das ist die,

02:03:29.980 --> 02:03:39.180
ah, GLIB C2

02:03:39.180 --> 02:03:41.180
16. Ja, gut.

02:03:41.180 --> 02:03:43.180
Ähm, das passt ja.

02:03:43.180 --> 02:03:45.180
Wir haben ja 26, äh,

02:03:45.180 --> 02:03:47.180
223 bei, bei Ubuntu

02:03:47.180 --> 02:03:49.180
16.04 gehabt.

02:03:49.180 --> 02:03:54.280
Aber trotzdem, das ist,

02:03:54.280 --> 02:03:56.280
das ist alt, das ist alt genug.

02:03:58.280 --> 02:04:00.280
Kann man nix sagen. Also ich glaub,

02:04:00.280 --> 02:04:02.280
das ist echt ganz gute Alternative, wenn man

02:04:02.280 --> 02:04:04.280
Bock hat, die Sachen in C-Sharp zu programmieren.

02:04:06.280 --> 02:04:08.280
Und die Libraries und alles das

02:04:08.280 --> 02:04:10.280
drumherum gescheit funktioniert

02:04:10.280 --> 02:04:12.280
mit dem, wir haben ja heute nicht so

02:04:12.280 --> 02:04:14.280
viele eingebunden, also Sp-

02:04:14.280 --> 02:04:16.280
Reflection kannst du dir eh wahrscheinlich

02:04:16.280 --> 02:04:18.280
abschminken mit, mit irgendwelchen

02:04:18.280 --> 02:04:20.280
Native-Kompilierungssachen.

02:04:20.280 --> 02:04:22.280
Aber trotzdem, das ist cool, dass das

02:04:22.280 --> 02:04:28.410
geht. Okay, Leute,

02:04:28.410 --> 02:04:30.410
macht's gut. Ich geh jetzt pennen.

02:04:30.410 --> 02:04:32.410
Bis denn. See you.
