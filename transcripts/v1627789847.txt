Ja Leute, ich dachte mir so, es ist 20.20 Uhr, ich kann jetzt eh nichts mehr machen, da komme ich noch einfach mal eineinhalb Stunden on, muss bloß erwarten, bis Twitch das mitgekriegt hat, Omegalul, Omegalul, bis jetzt hat es Twitch dafür nicht gecheckt, Boomer müde, Bett geht heim, moin Michael50, Billian, Oma wieder da, und was macht Lisa?
Ist doch Lisa, oder?
Manchmal merke ich mir so random Sachen, ich weiß nicht, ich kann dir nicht sagen, was gestern war, aber manche Sachen merke ich mir.
Läuft's bei euch, ja?
Moin Sirius Max, Modcheck ist auch am Start.
Ja, also ich habe heute, wir waren Sushi essen, Moment, Sushi essen und sie hat bezahlt, aha.
Ja, 2022 ist das ja kein Ding mehr.
Da muss man sich auch mal einladen lassen.
63 Euro, das ist ganz schön teuer, mein Sushi ist immer teuer, aber mittlerweile ist es echt abfuck teuer.
Ich habe mir überlegt, ich habe heute Thunfisch gekauft, aus der Dose, Thunfischdose, so ein paar hundert Gramm oder so, 3 Euro pro Dose, Alter.
Na dann, dann hast du entweder sehr viel Eindruck gemacht, oder es hat andere Gründe, wo man dann immer nur schluckt.
Spekulieren kann.
So, jetzt hat's Twitch kapiert.
Nein, mein viel, na das ist doch schön.
Ich bin echt froh, dass ich nicht mehr so oft essen gehe.
Ich gehe tatsächlich auch so gut wie gar nicht mehr essen, also ich bin ja erst, ich bin ja nicht in Frankfurt, also selten nur noch in Frankfurt.
Und, ähm, genau, also, wie gesagt, ich bin ja kaum noch in Frankfurt, dementsprechend gehe ich auch nicht essen.
Ich war letzte Woche tatsächlich zwei Tage da, zwei Tage essen.
Und gleich danach an einem Tag wieder ordentlich, ja, also, ich gehe da nicht mehr essen.
Ich bin eh kaum da, und wenn ich da bin, sollte ich besser nicht essen gehen.
Dankeschön Leon, massive vier Monate Hyper-Subscription hier.
Mario, dankeschön für den Sub. Ja, da war richtig, richtig Dampf wieder.
Und dazu kommt, dass man richtig viel Geld spart. Also, ich bin ungefähr,
sonst immer einmal im Monat zur Bank, also ich bin öfters zur Bank gegangen, aber ich bin,
ich bin einmal im Monat zur Bank gegangen, immer um halt Geld für den Monat abzuheben, so.
Ich habe ungefähr, jeden Monat habe ich irgendwie so 1.000 Euro abgehoben, und jeden Monat, so.
Und ich musste dieses Jahr irgendwie, also normalerweise musste ich wirklich jeden Monat 1.000 Euro abheben, so für Zeugs halt, ja.
Essen, mal was einkaufen und so, so. Und jetzt, und jetzt, seit ich, seit ich, seit Corona und seit Homeoffice,
ich glaube, ich war dieses Jahr erst vier Mal oder so. Drei oder vier Mal auf der Bank.
Reste habe ich online bestellt, online gekauft, bezahlt, aber ich gebe halt kaum noch was zu essen aus.
Es ist ein Riesenunterschied, ob du täglich in Frankfurt irgendwie 10 bis 15 Euro oder so ausgibst,
was Essen angeht und drumherum, oder daheim halt einfach fast nichts im Vergleich.
Für die Drogen am Bahnhof.
Sorry, mit dem, mit dem Bluterguss im Arm und dem Frankfurter Bahnhof habe ich dir ja schon erzählt,
oder habe ich euch ja schon erzählt.
Du fängst demnächst eine Lehre an, eine zweite Lehre als Fachinformatiker an, das ist nice.
Machst du eine Umschulung oder machst du eine, eine ganz normale Ausbildung bei irgendeinem Betrieb?
Weil, Kollege, Kollege, muss man, vollkommen falsch, ein um drei Ecken Bekannter hat mich gefragt,
ob ich ihm nicht irgendwie so einen Praktikumsplatz bei uns vermitteln könnte.
Und dann habe ich gesagt, ja, ich kann ja mal fragen, so ein bisschen meine gute, wie sagt man so, Karma,
ne, so ein bisschen so meine gute Aura ein bisschen wieder auffrischen, ja.
Er hat gesagt, ja, mache ich.
Dann habe ich unseren Ausbildungschef gefragt, wie es aussieht mit Umschulung und Praktikum machen und sowas.
Dann meinte der, ah, weiß er nicht so genau, braucht ein bisschen mehr Details.
Dann habe ich dem, dem um drei Ecken Bekannten, habe ich gesagt,
dann das geschickt, habe ich gesagt, hier, guck mal, der hat noch ein paar Fragen.
Und dann hat der Typ eine Woche gebraucht, darauf zu antworten.
Ich habe eigentlich gar keinen Bock mehr, das jetzt unserem Ausbildungschef zu schicken.
Der Kerl ist eh schon unten durch, wenn nicht eine Woche dauert, bis der auf die einfachsten Sachen antwortet.
Also, weiß nicht, ob ich da nochmal ein gutes Wort einlegen soll.
Ich hatte gewissen, ey, das ist wie gesagt nice.
Du machst eine richtige Ausbildung, also drei Jahre.
Drei Jahre Azubi-Grind ist gestartet.
Erstes Kind heißt Wobblos, so muss das sein.
Aber mit Null, ja.
Ich frage mich, sind Buchstaben, äh, Schwachsinn, Buchstaben, klar.
Sind Zahlen im Namen erlaubt in Deutschland?
Darf man das machen?
Also darf man sein Kind, äh, keine Ahnung, Max420 oder so nennen?
Oder Sixty nach hinten oder was auch immer.
Nein, ist nicht erlaubt.
Self-Made Eyes.
Huge.
Abo-Falle zugeschlagen wieder.
24 Monate, dankeschön.
Du installierst gerade Manjaro auf deinem Arbeits-Notebook.
Warum denn kein echtes Arch, by the way?
Da würde sich der Chat hier freuen.
Nur echtes Arch ist richtiges Arch.
Manjaro ist Fake-Arch.
Aber ich verwende es auch.
Wollte die Kinder durchnummerieren.
Sag mal, ich zolle irgendwas.
Normalerweise haben wir nach, ähm, 10 Minuten Stream irgendwie 150, 200 Leute.
Habe ich irgendwas verpasst?
Ist heute irgendwas?
Ich meine, nicht, dass es ein super spannendes Thema heute gäbe oder so, was die Leute verpassen würden.
Ja, das ist nicht so.
Ach, Discord hat es auch noch nicht gecheckt?
Ja, dann hat es Twitch einfach noch gar nicht überall rausgeschickt.
Guck mal hier, was ist da los?
Also es sind, das stimmt übrigens auch nicht.
Bei mir sind es angeblich gerade 91.
Na, dafür sind es schon wiederum zu viele.
Was machst du mit der neuen VM weiter?
Ja, weiß nicht, die alte tut ja.
Aber ja, müsste ich mal, ich müsste vor allem mal meinen Surface-Book einrichten, was ich da von der Arbeit bekommen habe.
Mit Linux, das liegt jetzt auch schon wieder zwei Wochen hier rum.
Du nutzt SteamOS auf Steam Deck für die Arbeit.
Meinst du, das ist wirklich eine gute Umgebung zum Arbeiten?
Weißt du?
Also, geht das gut?
Du würdest die Qt-VM benutzen.
Ist die safe for work?
Moment.
Du meinst die hier?
Die einzig wahre, beste Desktop-Oberfläche, die je erstellt wurde.
Meinst du die hier?
Ja.
Das, äh, die ist...
Die ist safe for work, die kannst du verwenden.
Aber, ich glaube, jetzt haben wir auch genug gesehen, jetzt kann ich wieder ausmachen.
Oh, ich muss Ubuntu updaten.
Ja, ich weiß, dass ich Ubuntu updaten muss.
Das ist nämlich noch, wartet mal.
Das ist nämlich noch ein...
Achso, ich hab's, hör mir schon auf.
Das ist nämlich noch ein Ubuntu 2104.
Das ist ganz schön alt.
Sogar das Trash-Directory ist cute.
Ja, alles hyper cute.
So.
Machen wir mal wieder aus.
Cute OS.
Das ist...
Nein, nein, nein, nein, das ist nicht cute OS.
Das ist, ähm...
Moment, wie hieß das?
Nicht, nicht Ubuntu, sondern...
Ähm...
Oh, ich hab vergessen, wie das hieß.
Nein, nein, nein, nein, nein, nein, nicht Ubuntu.
Wartet mal.
Es gibt eins, das so heißt, aber das ist was anderes.
Ich muss mal kurz gucken.
Mo Buntu.
Mo Buntu.
Mo Buntu war das.
Genau.
Jetzt weiß ich's wieder.
Mo Buntu.
Die Webseite sieht Monkatos aus, ist sie aber nicht.
Guck mal hier.
Mo Buntu.
Also wer sein Ubuntu ver...
Äh...
Ver, ver, ver, ja, ähm...
Ajajan will...
Verweebiesieren.
Das ist das Richtige hier.
Mit Moe ausgesprochen.
Und wann...
Was?
Moe Buntu?
Was?
Ist nur 2204?
Wie, da gibt's noch kein...
Das läuft doch überall drauf, oder?
Das ist doch nur letztendlich ein Gnome-Skin.
Der scheiß Gnome.
Das ist doch nur ein Gnome-Skin.
Das kannst du wahrscheinlich sogar unter Arch, by the way, installieren.
Ist das auch für Arch?
Ja, siehste, das gibt's für alles Mögliche.
Mo...
Was?
Mo B?
Da ist die Moe-App.
Wie auch immer das ausgesprochen wird.
SteamOS ist auch nur ein Modifier.
Ein modifiziertes Arch.
Ja.
Mo...
Wund...
Ach, was auch.
Was wär's?
Okay, ich hab jetzt ungefähr Chat.
Ich hab jetzt mindestens acht verschiedene Aussprachen von euch gehört.
Es hat keiner irgendeine Ahnung.
Ihr könnt's ruhig zugeben.
Es weiß keiner, wie man das richtig ausspricht.
Oh, jetzt kommen wir jetzt schon mit Lautumschrift und so wieder an.
Einziges, einziges Pfeilfeld-Kommentieren.
Wobei man halt gar nicht weiß, wie man das wirklich...
Also, ich weiß anhand diesem hier nicht, wie man das ausspricht.
Moe.
Moe.
Buntu.
Wie man nochmal Jason ausspricht.
Genau so, wie ich's jetzt ausgesprochen habe.
Außer der eine Typ, der meint, dass es...
J-J-Joson heißt.
J-Joson.
J-Joson oder so.
Aber wo wir grad beim Thema sind.
Das Thema ist ja, wie man was ausspricht, ja.
Und es gibt ja schon seit Ewigkeiten diese Diskussion.
Ob GIF oder JIF.
Ich hab heute in der Mittagspause...
Okay, ich gebe zu, nicht in der Mittagspause.
Nebenbei auf dem Kopfhörer.
Ein...
Ein Vortrag geguckt.
Den ich echt spannend...
Also nicht komplett.
Wie gesagt, Viertelstunde oder so hab ich geguckt.
Ein Vortrag geguckt von einer Konferenz hier.
Äh, why webtech is like this.
Der erzählt ein bisschen was über Mosaik und Boomer-Zeug.
Ich hab geguckt...
Ich hab geguckt...
Bis, wo er Mosaik zeigen wollte.
Ich mein, wenn wir sonst nix zu tun haben, können wir uns den Vortrag zusammen angucken.
Ich fand's wirklich spannend.
Oder wir gucken FireShip, neues Video.
How to never write bug.
Ähm, das sieht zwar so aus, als hätte ich's geguckt, aber ich hab's nicht geguckt.
Ich hab's einfach nur aufgemacht und...
Dann war's offen.
Kann ich deine Nachricht umbeantworten?
Was denn?
GitHub oder Shithub?
Naja.
Der Meme-Faktor ist natürlich Shithub.
Gerade, gerade durch der Endpunkt.
Ach, noch weiter oben.
Was denn jetzt?
Was, wie, wo?
Kannst du ein Portal empfehlen, auf dem man zum Beispiel technische Fortbildung Richtung Sensorik...
Boah.
Keine Ahnung.
Ich habe keine Ahnung.
Das Einzige, was ich an Fortbildungen kenne, beziehungsweise, nee, muss man nicht sagen, kenne, aber das Einzige...
Gut, mal diese grottenschlechte Azure-Schulung, die ich letztens auf der Arbeit gemacht habe, außen vor.
Weil, das war wirklich PowerPoint.
Und geklicke ohne Sinn und Verstand.
Und der Typ meinte ja auch noch, das muss so sein.
Oh, der war cringe, Alter.
Der Trainer, dieser Azure-Trainer.
Leute, wie spricht, wie, wie spricht, sprecht ihr das hier aus?
Mal gucken, wie Google das ausspricht.
Q.
Nein, nein, nein, nein.
Das, ich meine nicht den Billardstock.
Ich meine, ich meine die Warte, ich meine die Warteschlange.
Warteschlange.
Nein, nein.
Q.
Q.
Q.
Q.
Q.
Okay.
Q.
So spricht man das aus.
Und ich, ich sprich, ich sprich das auch Q aus.
Genau.
Und der, der, der Azure-Trainer, wisst ihr, wie der das ausgesprochen hat?
QI.
Und ich bin mir nicht sicher, ob der das...
Ich, ich, ich war mir am Anfang nicht sicher, meint der das ernst?
Aber der hat das so oft gesagt.
Der hat so oft das Absicht...
QI hat er gesagt die ganze Zeit.
Und bis ich dann irgendwann gesagt habe, festgestellt,
der, der meint das ernst.
Der NQI-t und DQI-t wahrscheinlich auch.
QI.
Ja.
Und irgendwie dachte ich mir dann mit der Zeit so, also...
Was ist, was, wer, wer wird denn hier alles drehen?
Aber Microsoft, man.
QI.
Bei dir auf der Arbeit sagt einer zu Vue.js, wo?
Und, und, und JS?
Was sagt der, wie?
Vujes?
Oder so?
Vujes?
Anstatt Vue.js?
Vujes?
Finde ich eigentlich gar nicht schlecht.
Boah.
Vujes.
Vujes.
Ach, nur Vue.
Alles klar.
Tja.
Gut, es gibt eh auch die Diskussion, was Java und Java und ach, was nicht alles, was nicht alles ist.
Aber das mit GIF und GIF ist mir gerade eingefallen, weil ich den Talk ganz interessant fand.
Und ich könnte fast wetten, das kommt da auch noch irgendwann dran.
Ah ja, was ich jetzt habe, ganz vergesslich.
Also was ich, neben dieser grottenschlechten Azure-Schulung, jetzt weiß ich auch wieder, was ich sagen wollte.
Ähm, mal mein WeebOS zumachen.
Das Einzige, wo ich mal tatsächlich so ein paar, ein paar Web, Webinars oder wie man es nennt, Kurse gemacht habe,
war bei, wie heißt diese Plattform?
Da hatte ich, da habe ich mal vor Jahren einen Ember.js-Kurs, hatte ich mir mal irgendwo gekauft.
Ähm, einen, ich glaube einen ASP.net-Kurs.
Als ich damit mal, als ich ja noch gar keine Ahnung von hatte, habe ich mir irgendwo auch mal, wie heißt denn das?
Wie heißt, wie heißt, warte mal.
Udemy, ja, ich glaube Udemy.
Ja, ja, genau, ich glaube Udemy, das kann sein.
Ja, ja, ja, ich glaube schon.
Oder gibt es, gibt es nicht sowas wie, wie NetAcad?
Ne, ne, ne, ne, NetAcad, das ist Cisco, gell?
Das ist, das ist verwechselt.
Ja, ja, ich glaube, ich, ich glaube, dann war es wahrscheinlich.
Nicht ASP.net, ASP.net Core.
ASP.net ist shit, ASP.net Core ist gut.
Die Sache ist halt, warum heißt das Core?
Ja, weil mal die Microsoft-Benahmung halt absolut keck, äh, quadruple U ist,
weil Microsoft ihren Shit nicht richtig benennt.
Das kommt noch von .NET Core, was es ja eigentlich in der Form gar nicht mehr gibt,
weil .NET, äh, Core 4 quasi umbenannt wurde in .NET 5,
was allerdings nichts mit .NET Framework 4.8 zu tun hat.
Also wer denkt, dass .NET 5 die Weiterentwicklung von .NET Framework 4.8 ist, liegt falsch.
.NET 5 ist die Weiterentwicklung.
Von, äh, .NET Core 3.1.
Alles klar?
Morgen frage ich's ab.
Ja, das, das, dann ist, ich, ich kenne das aber, glaube ich, von Cisco Fortbildung.
Haben wir nicht dieses, dieses, dieses Emote mit der Katze jetzt?
Für sowas?
Doch, genau, hab ich extra hinzugefügt.
Den hier.
Muss man in so einem Fall nutzen.
Huh, huh, huh.
Dafür muss man, Microsoft ist halt nicht FIFED, das ist ja das Problem, deswegen benennen sie das auch so bescheuert.
Ich sag nur OneX.
Xbox OneX und sowas.
Präseriv, dankeschön für den Sub.
Ein Jahr voll.
Den goldenen Keks am Start.
Leute, der goldene Keks ist quasi das, das higheste Kekstier, was wir haben.
Ich möchte, müsste unbedingt mal neue Kekse beauftragen.
Allerdings hat die Emote- und Keks-Designerin grad andere Probleme.
Die kommt, soweit ich weiß, aus der Ukraine.
Ist jetzt irgendwie geflüchtet, sonst wohin.
Die hat, glaube ich, grad andere Probleme als Emotes zu malen.
Oder auf Office 365.
Ja, das habe ich bis heute nicht verstanden.
Heißt das jetzt Office 365 oder Microsoft 365?
Es heißt immer noch Office 365, aber ich dachte, es wurde umbenannt in Microsoft.
Ja, was denn jetzt?
Microsoft 365 und teilweise Office 365.
Meine Güte, Microsoft.
Könnt ihr euch nicht mal für eins entscheiden?
Ich meine, ja, ab jetzt Microsoft 365 ist so ab jetzt, dass es sogar auf der offiziellen Office-Seite noch Office 365 heißt.
Guck mal.
Ach, jetzt steht Microsoft 365.
Ah ja, Mensch, wer soll denn da noch durchblicken, Alter?
Mal ganz davon abgesehen, ich verwende den Mist eh nicht.
Ganz ehrlich, man braucht keine Office-Anwendung.
Office-Anwendungen sind absolut bloated.
Einfach Text, ach, Text-Editor.
Kommando-Zeile seht.
AWK reicht.
Ich habe 4 Millionen Tabs.
Ja, Moment.
Ich habe da noch Tabs.
Und?
Also, wenn schon, wenn schon, denn richtig, ja.
Ich habe da noch Tabs.
Und?
Ich glaube, hier habe ich letztens was zugemacht.
Und hier habe ich auch noch Tabs.
Warte mal, hier habe ich auch noch Tabs.
So.
Oh, da habe ich letztens zugemacht.
Es kamen noch Tabs offen.
Ja, so muss das sein.
Dark Zone.
Primers am Start hier.
Dankeschön für den Sub.
Die Kollegen brauchen noch ihre Excel-Ansicht.
Okay, okay, Excel ist in Ordnung.
Ist in Ordnung.
Excel ist tatsächlich die einzige Office-Anwendung, so in diesen, diesen Kern-Office-Anwendungen, die ich irgendwo noch verstehe.
Der Prime-Sellout ist real.
Wie viel RAM ich habe?
Ich glaube, 32G.
Ja, guck mal, sind nur 8 belegt.
Das ist ja fast nichts.
Also, da geht auf jeden Fall noch ein bisschen mehr.
PowerPoint.
Nee, PowerPoint mag ich überhaupt nicht.
Ich musste letztens, ich habe doch am Montag eine Präsentation gehabt.
Und ich musste das in dem Fall mit PowerPoint machen, weil, ja, wieder Corporate Identity PowerPoint-Vorlage.
Sonst rasten sie bei uns wieder aus.
Und PowerPoint, ich kriege Anfälle.
Also, das Einzige, was ich gerne mache, wenn ich so Slides erstelle, stinkt normal Markdown untereinander.
Ein paar Bilder vielleicht noch zwischendurch Gutes.
Was magst du lieber?
Hä?
Who?
Who?
Was?
Zwischen was?
Also, an Software für Präsentation.
Wie gesagt, ich mache am liebsten ein paar Seiten Markdown und dann als PDF und gut ist.
Haben wir schon irgendwie einen neuen Red...
Och, hör mal auf.
Hör mal auf.
Ich habe es gesehen.
Ich meine, immerhin wird es als Android-Spielegerät verkauft und nicht wie dieses Logitech-Ding als reines Streaming-Ding,
wo ich mich immer frage, wie kommen die auf die Idee...
Gut, ich habe es ja letztens im Stream schon erklärt, wie die auf so Ideen kommen.
Das liegt einfach am mittleren bis oberen Management.
Irgendeiner pitcht komische Ideen und ja, keiner traut sich dann so wirklich was dagegen zu sagen und alle machen mit,
weil wenn einer nicht mitmacht, dann muss er sich anhören, ah, du hast einfach nur unsere Vision nicht verstanden.
Und deswegen werden so komische Dinger gebaut, obwohl sie eigentlich offensichtlich keinen Sinn haben.
Ne, Excel habe ich auch nie verstanden, mache ich auch nicht.
Aber Excel ist das einzige der Office-Produkte, was irgendwie sinnvoll ist.
Excel ist quasi die IDE der Buchhaltung oder die IDE der Projektmanager.
Ich habe gestern von einem gehört, dass sie ein Ticketsystem über eine Shared-Excel-Tabelle haben.
Ich glaube mal, dass das gar nicht so wenig verbreitet ist.
Ich glaube, das haben sogar relativ viele.
Guck mal, wie oft liest man, dass Leute, dass kleinere Firmen, kleinere Unternehmen ein Windows-Share haben,
wo alles quasi drauf liegt, was sie haben.
Also alles, quasi ihr Leben sozusagen.
Ihr digitales Firmenleben liegt auf einem Windows-Share.
Und was meint ihr, warum es so viele Kopie von WordDoc, Kopie von WordDoc, Kopie, Kopie von WordDoc, Kopie, Kopie, Kopie von WordDoc, Kopie, Kopie, Kopie, Kopie, Kopie von WordDoc gibt?
Ja, genau wegen so einem Blödsinn.
Weil die Leute auch 2022 immer noch nicht in der Lage sind, ihren Kram richtig zu bedienen.
Und das wird wahrscheinlich auch nicht so, wird auch nie wieder so werden.
Wisst ihr?
Früher dachte ich, wir gucken uns gleich das Fireship-Video an und dann gucken wir uns den Talk an.
Da muss ich zum Glück nicht so viel erzählen.
Wobei, ha, lul.
Hast du ein NAS?
Wenn ja, welches?
Hatte mir vor einem Jahr den DS200J ohne Docker-Support von Synology Gold.
Sehr dumme Entscheidung.
Ich habe keinen Fertignas.
Ich habe mittlerweile ein HP Microserver 10. Generation Plus.
Mit drei 10TB-Platten drin.
Und das reicht.
Habt ihr schon Fleet angeguckt?
Nein.
Und ich weiß auch nicht, wozu man Fleet brauchen soll.
Ja, ich weiß, Chaosfish.
Bei uns ist das teilweise auch so.
Gerade was die Personalabteilung angeht und sowas.
Das sind irgendwie 40 Leute.
Also frag mich jetzt riesen...
Also nur die...
Da kannst du knicken.
Was für einen Raid hast du laufen?
Aktuell gar keins.
Ich habe zwei...
Ich habe zwei der drei Platten zusammengefasst zu einem 20TB-Verbund.
Jebott.
Raid ist outdated in 2022.
Wer macht noch Raid?
Wir sollen immer Daten aus Excel-Dateien aussehen, die schafft es, die brauchbar...
Ach, du Kacke.
Nee, zum Glück nicht.
Wobei wir nicht viel besser sind.
Wir haben tatsächlich noch ein paar XML-Services.
Und CSV-Dateien.
Habe ich auch schon öfters gesehen bei uns.
Wo werden die Dateien für das Wubblos-Archiv gespeichert?
Wo ist meine Serious Max-Frage?
Ich weiß es nicht.
Wahrscheinlich bei Google Drive oder so.
Ja, gut.
So ist es.
Ja, so sehe ich es auch.
Du wirst ja in größeren Unternehmen oftmals dazu erzogen, Schwachsinn nicht mehr zu hinterfragen.
Sie sagen das zwar immer, aber sie wollen das nicht.
Zum Beispiel.
Geht Hand in Hand mit dem, was ich gesagt habe.
Es werden halt da Anreize gesetzt, es nicht zu sagen.
Es wird immer erzählt.
Ich weiß nicht, vielleicht kennt ihr das von euch auf der Arbeit.
Es wird immer gesagt, wir wollen uns...
Wir wollen uns verbessern und immer, wenn man Verbesserungspotenzial erkennt, soll man was sagen und wenn man was sieht, was man verbessern kann, immer was sagen.
Leute, glaubt mir.
Ich habe in der Zeit, wo ich da bin, schon so oft, wirklich so oft was gesagt.
Was meint ihr?
Bei wie vielen Sachen, wo ich mal was erzählt habe, ist was rausgekommen?
Und bei wie vielen Sachen, von wo ich was dazu gesagt habe, ist es im Endeffekt negativ für mich gewesen, weil ich mich am Ende um Teile davon kümmern musste.
Also es ist komplett für den Arsch.
Weil, und das ist meiner persönlichen Ansicht nach mit das größte Problem, was es in größeren Unternehmen gibt, wenn es um das Thema Innovation, beziehungsweise eben Sachen gegen die Wand fahren geht.
Das ist genau das, was ich gerade zu dem Logitech Handheld erzähle, ein bisschen was, was er hier auch auf Twitter schreibt.
Irgendeiner kommt auf die Idee, Produkt oder Service oder wir sollten jetzt XYZ machen.
Kommt ja auch.
Kommt auf die Idee.
So, dann bespricht er das mit ein paar Managertypen oder pitcht das mal einem seiner Chefs oder macht da halt einen größeren Vortrag drüber.
Und irgendeiner, der in der Position ist, das entscheiden zu können, der keine Ahnung von dieser Thematik hat, lässt sich das erklären und sagt, jawoll, gute Idee, das machen wir jetzt.
Die Leute, die Plan von dem Thema haben, schlagen in dem Moment die Hände über dem Kopf zusammen und denken sich, Alter, was ist das für ein undurchdachter...
Käse.
So, und dann kommt das Problem.
Dann sagen das ein paar Leute, so nach dem Motto, also an sich ja nett gedacht, aber das und das und das ergibt keinen Sinn und das und das wird sofort Probleme machen und wir haben doch sowas auch schon mal probiert und das ging doch nicht, weil so und so.
Und dann wird den Leuten gesagt, das kannst du gar nicht wissen, ob das diesmal auch wieder in die Hose geht.
Viel wichtiger ist, damit das klappt.
Dass alle an unsere Vision glauben.
Also, wenn man diese Kombination hört, an Vision und man muss dran glauben, das nimmt dann schon religiöse Züge an und da ist dann jeglicher Zug abgefahren.
Weil das läuft dann darauf raus, dass quasi selbst bei der Fertigstellung noch komplett die Augen davor verschlossen wird, dass man eigentlich die Sachen entweder an dem vorbei entwickelt hat, was es sein sollte.
Oder die Hälfte.
Weil man sich gar nicht umgesetzt hat, weil es wieder rausdefiniert wurde oder sonst was.
Aber du musst an die Vision glauben.
Und dann ist, dann ist eigentlich vorbei.
Sieht man bei, wisst ihr was das, wisst ihr was das beste, prominenteste Beispiel dafür ist, dass es bei vielen großen Unternehmen und auch bei Weltklasse Unternehmen so läuft?
Facebook Metaverse.
Die Leute, die an dieser Metaverse Geschichte programmieren, die machen jeden Tag, wenn sie das sehen, das hier.
Das hier.
Die gehen an den Rechner und machen das hier.
Und danach machen sie nochmal das.
Und danach machen sie das hier.
Und dann denken sie sich, an was für einem Kack muss ich denn hier eigentlich arbeiten?
Dann machen sie ihren Kontostand auf und denken sich erstmal.
Und denken weiter, ja gut, ich muss den Kram ja nur programmieren, benutzen muss ich ihn ja nicht.
Und dann kommt ihr Chef und jetzt kommt's.
Das ist kein Witz, das ging letztens erst durch die News.
Das ging letztens erst durch die News.
Und dann schreibt, Moment, ich zeige euch das.
Facebook oder, haben wir das nicht bei Golem irgendwo gelesen?
Golem Facebook Metaverse.
Irgendwas mit lieben hieß das.
Ja.
So.
Die Programmierer von Meta, von dieser Metaverse, die haben selber keinen Bock das zu verwenden.
Guck, der schreibt, der Projektmanager davon schreibt.
Auf die Frage, also es geht da drum, warum die eigenen Mitarbeiter, die Meta, die das Metaverse entwickeln, das Metaverse nicht verwenden.
Und dann fragt er, warum ist das so?
Warum lieben wir das Produkt, das wir entwickelt haben, nicht so sehr, dass wir es ständig verwenden?
Weil es ein Scheißprodukt ist.
Und keiner als irgendwelche desillusionierte Schmalspur-Manager glauben an dieses Produkt.
Aber.
Niemand darf es.
Öffentlich sagen, dass er nicht dran glaubt.
Weil ansonsten kriegt er erzählt, du glaubst ja nicht an unsere Vision und du kannst das doch gar nicht wissen.
Rede das mal nicht schlecht.
Schmalspur, das hat mein Opa immer gesagt.
Das hat mein Opa immer gesagt.
Das passt wunderbar dabei.
Mein Opa hat immer gesagt, Schmalspur-Denker zu solchen Leuten.
Das passt eigentlich ganz gut.
So.
Und es hat das Fazit, wenn wir es nicht lieben, wie können wir erwarten, dass unsere Benutzer es lieben?
Ihr könnt es nicht erwarten.
Das ist scheiße.
Niemand liebt das.
Oh.
Oh.
Ich weiß nicht, ob ihr das Rauschen gehört habt.
Ich habe gerade den Klinke-Stecker, weil ich ein bisschen auf den Tisch gehauen habe.
Ich habe gerade den Klinke-Stecker von meinem Lautsprecher irgendwie durch Vibrationen auf dem Tisch an den Klinke-Stecker von meinem Mikro dran gemacht.
Und es gab ganz komische Geräusche.
Ist Metaverse von raus.
Das ist so Work in Progress.
Work in Progress ist auch so eine tolle Sache.
So.
Und danach hat er das rumgeschrieben und da haben sich die Leute gedacht.
Who cares?
Oder was der Typ erzählt.
Und jetzt kommt der Hit.
Und jetzt kommt der Hit.
Ich wette mit euch.
Die Entwickler haben darauf entweder nur die Augen gerollt, weil sie das schon kennen.
Oder haben halt nochmal gesagt.
Leute, das was wir hier bauen ist kompletter Blödsinn.
Warum wir das nicht benutzen?
Weil wir den Sinn drin nicht sehen, das zu benutzen.
Guckt euch mal die Entwickler von VRChat an und sowas.
Die benutzen ihren Kram.
So.
Ein paar Wochen später kam dann das da von dem gleichen Manager-Dude.
Jeder in dieser Organisation.
Hat den Job, sich in Horizon Worlds zu verlieben.
Wir können das nicht tun, ohne es zu verwenden.
Kommt da rein.
Also sprich, das ist genau das, was ich gesagt habe.
Es ist offensichtlich Bullshit.
Die Leute wissen, dass es Bullshit ist.
Die daran arbeiten.
Also die, die Ahnung haben von der Technik und wissen, dass es Bullshit ist.
Die haben das sicherlich auch schon gesagt.
Aber wenn du es sagst, heißt das, du darfst es nicht sagen.
Du musst an die Vision glauben.
Und deswegen klappt das nicht.
Das ist in ganz vielen großen Unternehmen verbreitet, diese Denkweise.
Niemand will diesen Campbell verwenden.
Ich meine, was zum Teufel?
Das sieht fast schlechter aus wie Second Life 1995.
Nee, wann kam Second Life raus?
2003?
Wie schafft man das?
Das sieht schlechter aus als Second Life.
Und das spielt keiner mehr.
Okay, ich bin mir gar nicht sicher, ob es schlechter aussieht als Second Life.
Ich weiß nicht, ob diesen Campbell überhaupt noch jemand...
Ich weiß nicht.
Ich weiß nicht.
Sagen wir mal, es sieht nicht...
Naja...
Doch, das sieht schlechter aus als Second Life.
Das sieht aus wie Mii-Charaktere und nicht gekonnt.
Sieht ein bisschen aus wie die alten Xbox-Avatare.
Ich meine, Second Life hat wenigstens so Umgebung.
Ich meine, was ist denn das hier?
Was ist denn das?
Was sollte das hier neben sein?
Ein Quadrat mit nichts oder wie?
Und Beine haben sie auch nicht.
Ich meine, was...
Also...
Ich weiß nicht. So, und das ist tatsächlich
das Problem, was in vielen großen Unternehmen
meiner Meinung nach herrscht.
Warum da auch Innovationstechnik
oftmals nicht viel bei rumkommt.
Kann man Second Life...
Keine Ahnung. Das Spiel
interessiert mich ehrlich gesagt überhaupt nicht.
So, wir gucken jetzt das neue... Leute, wir können...
Wir haben nur noch eine Stunde Zeit. Ich kannte... Wir können das Talk-Video
nicht gucken.
Ich wollte mit euch eigentlich hier den Talk
angucken.
Können wir uns dann morgen oder so angucken.
Mal schauen.
Also die ersten Viertelstunde
fand ich wirklich... Wir können einfach die Hälfte...
Wir können einfach... Wir können einfach... Wir können einfach
anfangen zu gucken.
Aber vorher sollte ich ja noch
das Fireship-Video gucken, meint ihr, ja.
Dann gucken wir uns... Wir gucken uns das Fireship-Video an.
Also wir wissen ja prinzipiell,
einfach keine Fehler programmieren,
dann braucht man nämlich keine Tests
und keine Dokumentation schreiben.
Just... Just no error.
Ein Programmierer ist es,
keine Fälle zu schreiben,
keine Fehler zu machen.
Das ist leider virtually unmöglich.
Wenn dein Code nicht...
Nein.
Da hat er bei mir noch nie im Stream geguckt.
Wir machen nie Fehler im Stream.
...verkündet.
99% der Zeit...
Es läuft alles immer First Try.
First Try Only Programming.
...ist dein eigenes Code zu verurteilen.
Du kannst dich nicht auf mich verurteilen.
Aber um 0,99% der Zeit
ist es die Furcht von jemand anderem auf deinem Team
und du kannst...
Natürlich, natürlich.
...ansonsten abgeworfen werden.
Aber die anderen 0,0099% der Zeit
ist ein Bug in irgendeinem schäden Lager.
Oder...
NPM hat mal wieder irgendwelche Packages gelöscht.
Wobei, das geht, glaube ich, mittlerweile gar nicht mehr.
Oder werft diesen Müll raus.
Niemand braucht is-odd und is-even als NPM,
aber es gibt es trotzdem.
Ja, oder es ist jetzt,
wo wir ihn gerade sehen,
oder es ist C++.
Dann ist 99% der Zeit die Sprache dran schuld.
Ah, yes.
Was hast du gegen C++?
Leider nix Wirksames.
Ja, außer es ist C++.
Ja, das kann man so nicht sagen.
Das kann man so nicht sagen.
C++ ist schon blazingly fast.
Bis es abkackt.
Weil du irgendwo dir selbst in den Fuß geschossen hast.
Ja.
Erinnert sich noch jemand an den Debian-Random-Nummer-Generator,
der gewürfelt hat und immer 5 rauskam?
Error-Messages.
Spaß beiseite.
Error-Messages ist der Grund,
weil es ja öfters mal gefragt wird,
warum ich mein Windows und die ganzen Sachen
immer auf Englisch stehen habe.
Ich verwende deutsches Tastatur-Layout
und das ist ja alles kein Problem,
aber ich habe alles immer auf Englisch stehen,
gerade, dass man solche Meldungen ordentlich googeln kann.
Stellt euch mal vor.
Was ist, was ist das?
Stell dir mal solche Microsoft-Meldungen vor auf Deutsch.
Da findest du nix dazu.
Wie, meine, guck mal.
Wie hätte, wie hätte das,
wie hätte Microsoft diesen Kram übersetzt?
Windows muss neu gestartet werden,
weil ein entfernter,
äh,
äh,
entfernter Prozedurenaufruf,
Dienst,
ähm,
unerwartet beendet hat,
sich beendet hat.
Dann würdest du ja denken,
was?
Was wollt ihr von mir?
Ja, copy-paste den Kram aus.
Auf Englisch findest du sofort was.
Das ist korrekt.
Einfach so lange Sachen reinkopieren,
copy-pasten an andere Stellen,
bis es keinen Fehler mehr hat.
Das ist eine gute Idee.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
So, so macht man das. Da sieht man es als ein erfahrener Googler.
Console-Write-Line-Debugging. Beste.
WubLoss approved. Keiner braucht Debugger. Overrated.
Weil es ist, guck mal, wenn man keine Fehler programmiert, brauchst du keine Debugger.
Du brauchst keine Tests und Dokumentation.
Leute, mir fallen immer noch mehr Vorteile ein, just fehlerfrei zu programmieren.
Ausgaben brauchst du trotzdem noch, weil der User möchte ja manchmal wissen, was passiert.
Das ist nicht etwa, um festzustellen, dass etwas Falsches passiert, sondern einfach nur, dass das was passiert.
Und was passiert? Naja, logischerweise das Richtige.
Ich bin eh dafür, ich bin eh dafür, jeden nur erdenklichen State in jede Anwendung einzuprogrammieren, einzukompilieren,
weil dann kann man inputless, outputless das Programm laufen lassen und es kann also bewiesenermaßen keinen Fehler geben.
Weil wenn du alle möglichen States schon im Voraus eingestellt,
eingekompiliert hast, ja, dann ist das Programm eigentlich nur ein riesenlanges If.
Das ist dann vielleicht mehr Petabyte groß als Teilchen im Universum, aber es hat keinen Fehler.
Also es ist eigentlich alles ganz easy.
Das ist eigentlich alles ganz einfach.
Du kannst auch an verschiedenen Ebenen loggen, wie Info, Warnung und Fehler, um die Priorität dieses Daten zu organisieren und den Konsol Dürr zu benutzen, um es als Hierarchie zu zeigen.
Die Grundlage ist, dass Logging ein perfekt akzeptabler Weg ist, um zu Debuggen.
Und du solltest ein bisschen Zeit nehmen, um die volle API des Loggers in deiner Sprache zu lernen.
Ja, Dice sollte mal hier den Chat als Consultant anheuern.
Ohne Scheiß, Leute, der Chat hätte ein besseres Battlefield entwickelt, als Battlefield 2042 ist.
No, it's that it gets harder and harder to do, as your code grows larger and more complex.
Luckily, modern IDEs and editors have tools that can help you observe and execute your code at scale.
Okay, ich muss sagen, es gibt tatsächlich, jetzt mal Spaß beiseite, es gibt tatsächlich was, was auch noch ganz gut ist, neben Commandline.
Okay, ich muss sagen, es gibt tatsächlich, jetzt mal Spaß beiseite, es gibt tatsächlich was, was auch noch ganz gut ist, neben Commandline.
Und das sind die Browser-Developer-Tools.
Also da muss ich sagen, was JavaScript angeht, ist das wirklich praktisch.
Und vor allem, wenn man das in Integration mit zusätzlichen Developer-Tools-Erweiterungen verwendet, beispielsweise gibt es für SvelteKit gibt es was, da sieht man wirklich coole Sachen.
Also ich muss sagen, Browser-Developer-Tools sind tatsächlich nice.
Und ich bin der Meinung, die Firefox-Developer-Tools sind immer noch besser als Chrome.
... Debuggers, and there's one integrated...
Ja, Chat-Developer-Tools.
... It allows you to traverse through frames in the call stack, which means you can pinpoint the exact moment a bug occurs.
It's possible to pause the execution of your code at any time using a debugger statement, or better yet, you can use the IDE to set up breakpoints that don't require any modifications to the actual code.
In addition, it eliminates the need to pollute your code with console logs everywhere, because instead, you can just add log points by clicking next to the line of code that you want to log.
So basically, a debugger is just a more sophisticated way to run and inspect your code.
Eventually, you'll find a bug that you just cannot fix.
When that happens, it can sometimes help to not focus on a solution, but figure out a way to reproduce the problem with a minimal amount of code.
That's true.
... like starting an entirely new project, where the only goal is to make the...
Das ist tatsächlich nicht verkehrt.
Wenn du alles wegschmeißt, was du nicht brauchst, dass der Fehler auftritt.
Weil dann kannst du viel einfacher die Bedingungen dir genauer angucken.
Also sprich, bei was geht's kaputt?
Und du kommst vielleicht dahinter, okay...
Was weiß ich?
Wenn ich...
Wenn ich...
Zahlen mit Kommas, also wenn ich Floating-Point-Zahlen reinstecke, dann geht's kaputt.
Bei Ints ist okay.
Und vielleicht ist es am Ende wirklich ein Bug in der Sprache.
Wobei, erfahrungsgemäß, es ist meistens kein Bug in der Sprache.
Ich will nicht sagen nie, aber es ist meistens kein Bug in der Sprache.
Außer es ist C++.
Und in C++ ist es wahrscheinlich kein Bug, sondern absichtlich so.
...
Das ist ja...
Das Schöne daran ist, wenn man seine Sachen eingecheckt hat, es muss ja nicht Git sein,
in irgendeinem Versionsverwaltungssystem, ist das meistens ganz praktisch, meistens ganz nützlich dafür,
um rauszufinden, woran das liegt.
Weil du einfach gucken kannst, wie sah es vorher aus, als es geht, wie sieht es jetzt aus, als es nicht geht.
Und falls ihr das noch nicht kennt, ein sehr nützliches Tool dafür ist git-b-sect.
Da kannst du Git sagen, bei dieser Version, beziehungsweise bei diesem Comet ging's noch,
und bei diesem Comet ist es kaputt.
Und dann halbiert Git immer das.
Das fängt dann in der Mitte an, zwischen den zwei Comets.
Dann testest du, ist es immer noch kaputt?
Dann sagst du, git-b-sect ist immer noch kaputt?
Dann wieder ein Comet dazwischen?
Und dann teilt sich das so ran an das Comet, was es kaputt gemacht hat.
Falls man das jetzt irgendwie verstanden hat, was ich da versucht habe zu erklären.
...
...
Alter, Testing, keck, wait.
Jetzt will der uns auch schon was erzählen zum Testen.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
gitignore-File.
Das sind so quasi, quasi hier dazwischen
sind die. Und es funktioniert
trotzdem alles.
Ja, ffminimal
testing.
Und ich nehme die minimalste
Form von minimal, nehme ich gar keine.
Aber ich habe mir ernsthaft überlegt,
tatsächlich,
auch wenn ich jetzt die ganze
ich habe mir tatsächlich überlegt, ob ich nicht
zwei, drei Tests reinmachen soll,
für ganz spezielle Fälle, die mir jetzt schon ein paar Mal
kaputt gegangen sind.
Zum Beispiel, dass da die
Sensoreinheit nicht richtig setzt.
Habe ich jetzt schon ein paar Mal kaputt
gemacht.
Dass die
exportierten Sensoren nicht den
richtigen Namen hatten, das habe ich auch schon ein paar Mal kaputt
gemacht. Und das andere
fällt mir gerade nicht ein.
Was war das? Habe ich sogar letztens
im Stream kaputt gemacht.
Ich glaube, ich glaube,
ähm, ne, Fiat API Response
kann ich nicht testen, gescheit.
Ja, aber ich habe mir überlegt, tatsächlich,
ich sollte da mal ein paar Tests rein
machen.
Dass ich nicht jedes Mal
alles von Hand ausprobieren muss, ob es noch
funktioniert.
Und letztens, nachdem du den Test passen kannst,
wirst du von dem selben Bug wiederentwickelt.
Ein weiterer Weg, Bugs zu fangen, bevor
sie ein Problem werden, ist, ein Tool zu nutzen,
das einen Art von statischen Analysen
auf deinem Code verwendet. Im Falle von JavaScript,
ist das die meiste übliche Art, das zu nutzen.
Am besten, am besten sind ja
Tests, wo dann getestet
wird, die Ausgabe muss
5 sein.
Dann schlägt der Test fehl.
Keiner weiß genau, warum.
Die Ausgabe ist jetzt
auf einmal 7.
Und, naja,
aber es hat nicht so große Auswirkungen.
Also schreiben wir einfach in den Test rein,
Ausgabe kann 5 oder 7 sein,
4 oder 7, war das okay?
Es ist ein Typescript, der ein ganzes Typesystem
auf den Code verwendet.
Mit MATLAB habe ich nie was
hingebastelt.
Ist das etwa Rust?
Ach nein, es ist Typescript.
Nicht Blazing, die Fast.
Tja, wenn man gescheite Sprachen verwendet,
dann gibt's das Problem nicht.
Naja, gut.
Außer,
das ist C++.
Wobei, hey, das kann man C++ nicht vorwerfen.
Also das funktioniert in C++
meistens tatsächlich ganz gut.
Außer man übertreibt's mit Templates.
Ja, bei Python hast du eh komplett verloren.
Was, äh, sowas mit Types.
Wobei, selbst Python hat mittlerweile, glaube ich,
Type Annotations und so Zeug.
Habe ich letztens gerade erst wieder was drüber gelesen.
Oh.
Which is to turn off your computer and take a break.
If I had a dollar for every time I was fighting a bug,
then went and took a break,
and came back and immediately solved it,
I would have a shitload of dollars.
I like to go outside, get some exercise,
bask in the sun,
and enjoy a smooth and flavorful Marlboro cigarette.
Marlboro may surprise you.
It's the filter cigarette
with the unfiltered taste.
On second thought, you may want to skip the cigarette
unless your goal is to die a horrible, agonizing death.
And if you go to hell,
the only programming language they have down there is Java.
Thanks for watching.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Thanks for watching.
And I will see you in the next one.
Excellent.
Jetzt haben wir wieder was gelernt.
In this video.
What the f...
Ne, das wollte ich jetzt nicht gucken.
Was machst du eigentlich,
wenn Chrome Manifest V3 kommt?
Denn die haben es jetzt ja schon mal wieder in Java verschoben.
Was ist an Java so schlimm?
Eigentlich nix.
C++ ist die deutlich schlimmere Sprache.
Java ist nicht so schlimm.
C++ ist die deutlich schlimmere Sprache.
absolut okay, gerade
die Java VM ist gut, da kann man auch
sowas wie Kotlin dann verwenden, was nochmal
zumindest von dem, was ich gesehen habe,
nochmal annehmbarer ist, ja, nochmal
ein bisschen schöner.
Nee, ganz im Ernst, ja,
es herftet C Sharp an,
dass es das Microsoft Java wäre und ja, das hat auch
gerade, weil es so super
objektorientiert angefangen hat, mal
gewisse
Ähnlichkeiten gehabt, aber mittlerweile muss man sagen,
C Sharp macht Java echt nur noch
was vor, ja. Ich weiß nicht, haben die
mittlerweile gescheite Generics überhaupt in Java?
Haben sie doch seit Jahren nicht
drin, ne.
Ihren komischen Optional Return
Type, den keiner verwenden will, habe ich jetzt
letztens in Artikel drüber gelesen, also
die beklägern sich bei Java wirklich
nicht mit Ruhm.
Scala ist für alle Leute gut, die gerne Klammern
mögen. Any
Klammer-Fans?
Any Klammers?
Klingt bescheuert. Ja, also Scala
ist für alle, aber gut, noch
schlimmer,
noch schlimmer ist
tatsächlich Erlang, was Klammern angeht.
Erlang by Example,
ja, ja, zeigt mal hier Erlang.
Ah, yes!
Exa... Wobei, ganz
im Ernst, das sieht
sehr stark nach, äh, aus wie
C Sharp Pattern Matching,
aber Erlang ist halt
klammerig.
Ja gut, Lisp ist der
Inbegriff von Klammern.
Deswegen wird sich mir auch nie erschließen, wie man auf
die glorreiche Idee kam oder wie sie
damals auf die Idee gekommen sind,
Emacs
Lisp, äh, Lisp-Dialekt
einzubauen. Das ist so eine, das ist wirklich
das hässlichste, was ich kenne.
Gut, aber Emacs ist eh gestorben, seit
Visual Studio Code und JavaScript Erweiterbarkeit.
Gut, ich meine, ich gehe davon
aus, dass er das hier anders sieht.
Wenn nicht beim Installieren der Java Runtime
erstmal ein paar Browser-Plugins...
Äh, weiß ich gar nicht, ob das mittlerweile
noch so ist. Also unter Windows
war das eh nur so. Keine Ahnung.
VimScript, naja, VimScript,
ist auch jetzt nicht
schön, aber ganz ehrlich,
VimScript ist mir rein von Syntax
und sowas tatsächlich lieber als
Emacs Lisp.
Gut, damals konnten sie auch nicht JavaScript
einbauen, damals gab es JavaScript noch nicht.
NeoVim macht es ja ein bisschen anders.
Die haben jetzt, glaube ich, Lua drin.
Lua ist aber auch so eine komische Sprache.
Sprachen, wo Arrays bei 1
anfangen, sind mir prinzipiell
suspekt. Kann man Java zu was
im Kompilieren? Du kannst prinzipiell
alles zu was im Kompilieren. Ob es da was gescheites
für Java gibt, weiß ich nicht.
Also, für C-Sharp gibt es ja
Blazor, beziehungsweise
irgendwas anderes habe ich...
Ich glaube, Uno hatte auch was für
C-Sharp zu WebAssembly.
Das Problem an Blazor ist nur,
dass es nicht C-Sharp zu WebAssembly
kopiert, sondern
die haben die .NET Runtime
also die haben Mono
damals, ich weiß nicht, ob es mittlerweile
auf .NET Core Basis ist, die haben
Mono zu WebAssembly
kompiliert und laden dann das
C-Sharp da rein und lassen es dort
ausführen. Dementsprechend ist Blazor
alles andere als Blazingly Fast und
eigentlich total abartig.
Kann man JavaScript zu WebAssembly kompilieren? Ja,
das geht. Du kannst sogar mit...
Es gibt sogar mittlerweile schon Projekte für
Server-Side WebAssembly. Lacht nicht,
das ist wirklich so. Server-Side
WebAssembly, das gibt es.
Das ist tatsächlich... Das hört sich zwar
erstmal widersprüchlich an,
aber Server-Side WebAssembly ist ein
Ding mittlerweile. Kennst du
einen Weg über einen ESP, eine
Webseite aufzurufen, die ein Login benötigt?
Klar, der Standard
Web-Client kann
zumindest Basic-Auth, ja.
Oder nimm irgendeinen
x-beliebigen HTTP-Client,
hab ich HTML-Client gesagt, ich mach HTTP-Client.
Der Standard-HTTP-Client kann
auf jeden Fall Basic-Auth.
Ansonsten nimmst du irgendeinen anderen
HTTP-Client
für Arduino bzw. ESPs.
Gibt's massig.
Gibt's massig auf GitHub.
Aber der Offizielle kann das,
relativ sicher, alles, was du brauchst.
War das nicht so ein Delphi-Verschnitt?
Warum
Server-Side JavaScript?
Dass die ganzen Frontend-Dudes sich auslassen
können überall.
Arzi, danke schön für den Sub.
So, wir gucken jetzt aber trotzdem noch ein bisschen
den
Konferenztalk. Wie gesagt, ich hab
heute erst... Wir können's wahrscheinlich nicht
ganz fertig gucken heute, gerade wenn ich
zwischendurch wieder am Labern bin.
Aber die erste...
Wie gesagt, ich kenne den Talk nicht ganz.
Ich hab nur geguckt, als er BisserBisserMosaik
vorgestellt hat. Ich fand das wirklich
sehr spannend.
Der Typ ist, glaube ich,
vom Microsoft-Blazer-Team, wo wir's
gerade davon hatten. Also, die Technologie,
die ich jetzt persönlich nicht so geil finde.
Aber ich fand den Vortrag
gerade zur History von Browsern
und JavaScript und der hat
auch viele interaktive Demos mit VMs
mit Windows 95 drin und sowas.
Das fand ich...
Nee, Windows 3.11 oder so.
Das fand ich tatsächlich ganz spannend.
Gucken wir uns das einfach mal an.
Excel Esports.
Wait a minute. Was?
Ist das ein Witz oder ist das ernst gemeint?
All-Star-Battle
Excel Esports.
Das ist doch ein Witz, oder?
Das ist doch irgendein...
What the fuck?
Competitive Excel.
Competitive Excel.
Ernsthaft.
Es gibt ernsthaft
Competitive Excel.
Machen die da gerade Peggle oder sowas
in Excel?
Excel Game Dev. Da warte ich noch drauf.
APM!
Hahaha!
A-P-M Anzeige.
Kekke.
Haha. Geil.
Ja.
Okay, kommen wir mal kurz weiter.
I'm curious.
You were close there.
Excel on fire.
Was?
Was zum...
Das ist doch...
Das ist doch die...
Die Firma von...
Von Anders.
Anders.
Das ist doch wieder CS-Kommentator heißt.
Caster.
What the hell?
Wie viele Views hat das?
700.000.
Competitive Excel.
Ich fass es nicht.
Competitive Excel.
Excel Esports.
Oh, Asiate.
Easy.
Easy win.
Wetten, wer gewinnt?
Easy.
Okay, wer hat gewonnen?
Tatsächlich.
Ich wusste es, Alter.
Bam.
Natürlich muss der Asiate gewinnen.
Easy.
Easy win.
Denkt dran, es gibt immer einen, der es besser kann als ihr.
Selbst wenn ihr es gut könnt.
Pech gehabt.
Rekt.
Aber sie...
Aber warum hat das...
Das ist ein halbes Jahr...
700.000 Aufrufe.
Geil.
Also...
Excel...
Excel Esports.
Hut ab.
Gut ab.
So, wir gucken jetzt mal den Anfang von diesem Konferenztalk,
dass wir noch ein bisschen was schauen können.
Wie gesagt, ich habe geguckt, so ungefähr bis hier, wo Ramosaik gezeigt hat.
Ich fand es echt spannend.
Mal gucken, ob das...
Ja, die restliche Präsentation auch so gut ist.
Mal kurz gucken, dass die Lautstärke stimmt.
All right.
Let's do this then.
So, I know people will keep walking in.
That's totally fine.
Well done to those of you who have made it here.
Okay, ich skippe mal kurz das Intro.
...on stuff to do with the web.
So, that's...
So, that's...
Ist laut genug?
Versteht man was?
Bisschen lauter?
So, Moment.
...of the front-end web stuff.
And I've worked with the web, I think, for my whole professional career,
which is quite a while.
And I really like it.
I think it's a great area of technology...
So ist gut.
So ist gut, denke ich.
...it's clearly very, very important.
You know, there's pretty much every developer in the world
has to do some stuff with web technology.
Ja, das sage ich ja auch immer.
Du kommst, egal...
Selbst wenn du Cobol-Mainframe-Entwickler bist,
du kommst nicht um Web-Technologien vorbei.
So it's nice to be in that.
But it does keep changing, right?
Like, let's be clear, we're constantly inventing new ways
of doing stuff over and over again.
And probably you would agree that...
Die interessanten Sachen gehen gleich los.
...on average, over time, things get more complex
rather than less complex.
And I sometimes wonder, well, why is that?
How did we get to this?
Who decided to make up all these things?
And why did they do it?
And, like, could they have done it differently?
Was it all a big mistake?
So that's kind of what this talk is designed to look into.
We're going to go back through some of the major events
through Web's history and see what happened
and who the characters were, what they decided to do
and what they were offering.
Now, obviously, this is just one person's subjective telling
of the story.
It's not an absolute truth.
Okay, ich wusste nicht, dass das Intro so lang geht, aber...
It's a mixture of some research and some first-hand experiences
from certain parts of it that I was there for.
But I can't cover everything.
And inevitably, I will miss out
whichever is your personal favorite.
So, just let's just accept...
Also, my personal favorite thing
is, selbstverständlich, Internet Explorer.
Ich denke, da sind wir uns einig.
The goal will be that, at the end of this,
when you go back into your Web development jobs,
you will be able to see so many things that are there
and think, oh, yeah, I see that came from that technology
and, oh, that reminds me of how this person
was trying to solve a problem in a certain way.
And maybe that will put into perspective a little bit
of where the Web is and where it even might go in the future.
We'll talk a little bit about that right at the end.
So, if we're going to talk about where the Web is,
we should obviously start right at the beginning.
And the obvious place to do that...
Jetzt fängt es an, interessant zu werden.
...is with someone that I'm sure you've heard of,
Tim Berners-Lee, who was working...
Lebt er eigentlich noch?
Lebt er noch?
Ich bilde mir ein, ich habe letztens gelesen,
dass er gestor...
Letztendlich gab es doch News, dass er gestorben ist, oder?
Lebt er noch?
Okay, ich habe nichts gesagt, der lebt noch.
Der lebt noch.
...early 90s.
Dann hatte er Geburtstag oder so.
But do you know why?
Do you know what he was trying to achieve at the time?
Well, apparently...
Also, jetzt erklärt er, warum er das Internet erfunden hat.
Nein, nicht das Internet, stimmt nicht, nicht das Internet.
Nicht das Internet.
Warum HTML und...
...HTTP und sowas erfunden wurden.
Sapsa, danke schön für den Zap.
...a complicated place to work.
You know, they had a lot of big projects going,
they were building particle accelerators and such like.
And Berners-Lee kept track of all his work
in a piece of software that he wrote,
called Enquire.
And it was kind of like a notes management thing that he made.
And he had a kind of primitive hypertext thing going on,
because he was able to link from one note to another note.
And he really liked this system
and he thought everybody should use it.
He really wanted everyone in CERN to standardize on this.
And in fact, he even wanted to go further
and network everyone's notebooks together.
So you can see where this is going, right?
So he wrote this proposal...
Muss ich mal auf die Luft überlegen.
Für 1989...
War das ziemlich revolutionär von der Idee.
Ich meine, guck mal, wer hat damals Netzwerk gemacht?
Information Management, a proposal.
Ja, hat kein Mensch gecheckt damals.
...that you would not recognize today.
It's all specific to...
Und wisst ihr, was auch geil ist?
Ich glaube, das sagt er auch gleich.
Eines der Hauptanwendungszwecke,
womit sich das damals durchgesetzt hat, ist,
weil er das Telefonbuch...
...als Webseite angeboten hat.
Er hat das Telefonbuch automatisiert erstellt als Webseite.
Und das war wohl im CERN der Renner.
...CERN. It's quite hard to make sense of.
But there's some parts in there that you would recognize.
For example, this picture here.
A picture in which he depicts the idea of a client browser,
which runs on many platforms...
Also wo es jetzt interessant wird gleich, ist, wenn er den...
Hier, hier geht's los.
Wenn er den ersten...
Er zeigt den allerersten Browser, zeigt er,
und den allerersten Webserver, den Original-Code.
You would probably also recognize this.
This is the idea of a server,
which takes existing database content
and makes it look like hypertext.
In other words, he was inventing server-side rendering there,
right in his very first document.
The reason why he...
Gut, server-side rendering war lange Zeit das einzige Rendering,
was es gab.
...was he knew that there was a good chance that
if he submits this proposal, everyone will go,
oh, that's a good proposal, and then just...
completely ignore it.
Like, how many of you have done that in your work?
Like, yeah, it's a common thing.
He knew that would happen.
So his hack to make people use this
was to take some information that they actually needed,
specifically the CERN phonebook...
Das fand ich so geil.
Beste Anwendung.
Erst mal eine Webseite mit dem Telefonbuch machen,
und dann wurd's der Renner.
...automatically generate the hypertext for that from a database.
Now, he didn't just write these documents...
Da muss ich's merken.
Die erste Anwendung für einen Browser,
beziehungsweise HTML, war ein automatisch aus der Datenbank
generiertes CERN-Telefonbuch.
Und dann sagt mal heute einer noch was,
wenn Behörden Fax verwenden, ja.
Gut, nur mit dem Unterschied, es war 1989.
Ja.
Das fand ich jetzt echt spannend.
Den allerersten Web-Server.
1990.
1990.
700-something Lines of CERN.
700-something Lines of CERN.
300-something Lines of CERN.
In Java wär das grad mal Hello World.
Und in C++ würd es wahrscheinlich gar nicht starten.
And the code quality is, well, it's clearly a prototype.
And I think we've all done some pretty bad things in our prototypes.
But the great thing about this is that it actually worked.
And in fact, we can still compile and run it today.
I had to make about three very small tweaks to the code
to deal with some compiler errors.
And then it built in a modern GCC.
So to do that, let's run GCC.
To compile...
Let's compile that Web-Server there.
And we've just built a 22-Kilobyte binary.
22 Kilobyte, der erste Web-Server der Welt.
...demon.
And that is the original Web-Server.
So let's run it.
Okay, and that's running now.
And you can see that it's listening on port 2784.
Nicht 80.
Why is it that?
Why isn't it port 80?
Well, we'll come to that in a second.
Now, I can't connect a modern Web-Browser to this,
because this only speaks a very ancient dialect of HTTPD,
which has been lost in time.
And now the only way we can really talk to it
is to connect to it from Telnet.
So I'm gonna do that.
So let's go Telnet and connect to that.
Kannst du übrigens heute noch machen, geht heute noch.
Weiß nicht, wer das kennt.
Aber ich zeige euch das mal.
Ich muss es euch unter Linux zeigen,
weil unter Windows ist Telnet nicht dabei.
Unter Windows ist Telnet ein extra Feature,
was man hinzufügen muss.
telnet google.de port 80 get slash.
Und siehe da, Google.
Also, redirect.
Bad request.
Aber ich habe einen HTTP-Request gemacht.
Das funktioniert heute immer noch.
Now, if you know anything about HTTP,
you would think that probably the way to get it to do something
would be to do something like this, to get the home page.
That's how a modern browser would do something.
But if we try that, it just goes unrecognized command get.
And that's a bit strange, because if you read the source code,
you see that it does have stuff to do with get requests.
But if you reverse engineer it a little bit more,
what you'll find is, that if you say get,
and then the name of a file that's actually in that directory,
then it will serve that file to you.
Das geht heute noch.
So the very first web server was a static files web server,
which is the sort of thing we still do today.
So that makes sense.
Now, it's not just that.
It's also got a bunch of other things that we wouldn't recognize now.
Like, it's got this find feature that's built into the web server.
Das gibt es heute in der Form nicht mehr.
Es gibt heute WebDAV und so was.
Aber find ist nicht mehr Standard-HTTP.
And also,
is a place where Tim establishes a beautiful tradition for web servers,
which continues to this day,
which is having terrible security vulnerabilities.
And we can see one.
Ja gut, Tradition muss aufrecht erhalten werden.
Quite easily.
Right here.
The one that really stands out most, I think,
is on line 286 here.
Das ist natürlich wirklich die Hardcore-Variante.
System exec.
Irgendwas, was reinkommt.
Das wird ein Code auswählen,
wie zum Beispiel eine Schale auswählen,
um ein natives Programm zu machen.
Und was ist das System-Kommand?
Das ist das, was wir bekommen,
wenn wir ein paar User-Inputs zusammen konkatenieren.
So können wir einfach nur arbitrarische Sachen auf dem Server machen.
Also Leute, jetzt macht euch mal keine Gedanken,
wenn ihr sowas programmiert.
Eine der schlauesten Leute der letzten, was weiß ich, 50 Jahre,
was Informatik-Sachen angeht,
hat sowas auch programmiert. Easy.
Keine Sorge.
Es ist einfach sehr freundlich und community-minded.
You also might wonder about this weird port number
that they were using.
Well, that port number changed a little bit later.
If we look at the version 3 of this technology,
you'll see this is where they switched
from the old port to the new port.
This old port number, apparently,
those are the last four digits of Berners-Lee's
parents' phone number, supposedly.
Das finde ich halt zu geil, was man da erfährt.
Der erste HTTP-Port war 2017.
2784, weil das die Telefonnummer von ihm daheim war.
But then in 1992 they were allocated port 80.
And that's when they said that they felt that they'd really made it
when they got this nice round port number.
So that's the original web server.
But there's also an original web browser.
Übrigens wisst ihr, wenn ihr danach sucht,
wie war der Port?
Wenn man nach 784port sucht,
dann findet man heute noch unter anderem die Beschreibung
World Wide Web Development.
Also das ist heute noch quasi in die Annalen
der Internetgeschichte eingegangen.
www.devports2784.com
Und das ist das, was sie sagten,
dass sie wirklich es geschafft haben,
dass sie dieses schöne, runde Portnummer bekommen haben.
So that's the original web server.
But there's also an original web browser.
We can have a look at that as well.
And that's actually quite a much more sophisticated piece of code.
And I'm gonna show you that inside Nextstep.
Now, how many of you have ever used Nextstep?
Zero. Okay.
Chad, wer von euch hat Nextstep verwendet?
Ich noch nie.
Ich weiß, dass das irgendwas mit Mac oder so zu tun hat.
This was an operating system
of a company called Next,
which was run by Steve Jobs
after he was forced out of Apple,
before he went back to Apple.
And you can recognize a lot of stuff in this
in modern Mac OS.
For example, it has the spinning beach ball
whenever it's busy.
It also has this kind of three-column file browser,
which you might recognize today.
And inside this here, I've got the source code
for worldwideweb.app, which Berners-Lee wrote.
Und that can still be .app,
so wie heute noch unter Mac OS.
Und run.
So let's have a go at running that browser.
I've got it installed here,
if I double-click on this.
And what you'll see is,
it's quite different from anything
that you would recognize as a modern browser today.
So one thing is...
Leute, so sah der allererste Browser aus.
Every page you open comes up in a separate window,
which is just kind of like floating around independently.
And then the controls are all in this other floating window.
And we've got this back and next and previous and stuff.
And you probably think you know what that means,
but I'm afraid you're wrong,
because back, sorry,
next and previous do not mean
what they mean in a modern web browser.
It's something to do with like
going through a list of links incrementally.
It's kind of hard to make sense of.
We've got other stuff in here.
For example, we've got this about screen
that Berners-Lee put in.
Let's see what that says.
It says it's an exercise in global information availability.
So I'd say it's pretty successful as an exercise,
as things go.
We've also got...
What else have we got in there?
We've got some weird stuff
that you wouldn't expect.
Check spelling.
So you can do spell checking
of the page that you're visiting.
Now you might think,
why on earth would you want to do that?
Well, there's a good reason, okay?
Because this is not just a web browser.
Any page you go to,
you can just start changing it, right?
You can just edit...
Das geht heut nicht.
You see, and it's even got
this surprisingly sophisticated style editor
where I can go and choose different styles.
Immer noch besser als Safari, ja.
Kind of hard to see.
We've got all this configuration stuff
that shows up.
And we've even got various diagnostics
where we can do showing the HTML sources
and seeing other things about what's going on.
So we've kind of got early browser dev tools
in there right at the very beginning.
Now, in terms of the ability to edit sites,
well, it makes sense, right?
Because Berners-Lee's idea was that this was a big,
globally shared, networked notebook,
which people should be able to edit.
So, you know, kind of like early echoes
of Wikipedia in there.
But, of course, it was always designed to be distributed,
not just a single server.
So that's the original web browser.
It did have a bit of a critical flaw as a plan, though.
So let's just get out of there.
Ja, das UI ist gewöhnungsbedürftig.
So the big problem here was that Berners-Lee
has made this lovely web browser prototype
which runs on Next,
but no one apart from Tim
has a Next computer in CERN.
So this project is at serious risk of just dying,
like in its first week.
But thankfully, it was rescued.
Now, there was an intern at CERN at that time
called Nicola Pella,
and she could see what Berners-Lee was doing.
Ist er sich sicher, dass das she ist?
Weil es gab auch genug Männer, die Nicola hießen.
Aber wahrscheinlich hat er nachgeguckt.
Außerdem ist das heutzutage eh kein Thema mehr.
Ich sag nix.
Ich sag nix dazu.
And thankfully, she invented a way
of rendering the hypertext as plain text
that would be possible to use on the computers
that other people had actually got.
So I think we can be very glad for that,
because we would not be here talking about the web
if that hadn't happened.
But that's just text mode,
and that's not really what people wanted.
Document design mode on in der Konsole,
du kannst bei...
Ja, aber da war es standardmäßig so.
Okay, da hat er recht.
As soon as this was made public,
people started...
Das sieht ein bisschen aus wie Lynx, oder?
And the first one that is perhaps recognizable to modern eyes
is this one, Viola.
You can see it's got the address bar at the top,
it's got back and forward.
Man muss sagen, Leute, man darf das nicht vergessen,
das war erst 1992.
Das ist jetzt zwar schon eine ganze Weile her,
aber das ist jetzt nicht irgendwie ultralange her.
Also das ist jetzt nicht krieglange her oder so.
So alt ist der ganze Kram noch gar nicht.
Und das war ja noch wirklich komplett in den Anfängen.
Das hat bestimmt noch 10 Jahre gedauert,
bis das langsam aber sicher irgendwie mal
wirklich großartig verbreitet wurde,
sodass nennenswert Leute daheim hatten und sowas.
Ja, 2002, kommt hin, ja.
Also ich hatte meinen ersten Internetanschluss 1997
so in dem Dreh rum.
Und damals dann auch Netscape Navigator
und solche Geschichten noch am Start waren.
Und diese hässliche AOL und die Online-Einwahlsoftware,
und das war, das hast du richtig gehört,
da gab es noch nicht viel im Internet.
Damals wurden Bücher verkauft mit Linklisten drinnen.
Ich hab mir auch gedacht, the fuck?
Ich bin älter, ja.
Ich bin 1984 geboren.
Boah!
CSS in die Ursprünge.
Ich hab mir gedacht,
ich hab mir gedacht,
okay, es sieht noch nicht aus wie CSS,
aber es ist CSS.
Obviously that hadn't been invented yet,
but it was a thing like that,
that he came up with and put in there.
And you can kind of see how that would work from the syntax.
But even more impressively than that,
it had built-in scripting.
Again, not JavaScript, that hadn't been invented,
but the whole browser was built in this kind of scripting language.
Der JavaScript-Vorgänger.
And he allowed you to embed
the same scripting language in your pages.
To dynamically change the content.
So that really set some direction
for what a web page could do.
Now, people didn't really use this at scale either,
because this was a Unix-only thing.
The first browser that was cross-platform enough
and friendly enough for lots of people to use it
bis hierhin hab ich jetzt geguckt,
is this thing, NCSA Mosaic.
And I'm just gonna show you that before we get on to talk
Oh, Mosaic. Ey, wenn ihr Mosaic seht,
euch fällt sofort auf, an was das erinnert.
...worked for the web.
So, I'm gonna show you that inside Windows 3.1.
So, let's bring that up now.
Now, might be a bit before the time of most of you.
I don't know why that's just gone black.
What's going on here?
My screen has just gone black mysteriously.
Windows?
Don't know why.
Yeah, that's because I'm doing a live demo, obviously.
That's the primary reason.
Okay, well, here it is.
Nope, it does not like that.
Alright, well, I think we might do without seeing...
Es war doch klar, dass es mit Windows jetzt nicht tut, oder?
Ich zeige euch mal ein Bild von Mosaic.
Mosaic Browser.
Und wenn ihr euch das Bild von Mosaic anguckt,
dann werdet ihr feststellen,
an was erinnert euch euch das?
Oder besser gesagt das.
Es hat durchaus Ähnlichkeiten mit
Netscape Navigator, oder?
Findet ihr nicht auch?
Beziehungsweise, so wie Browser,
am Anfang ausgeschaut,
und wie Browser heute immer noch ein bisschen ausschauen.
Du hast eine Adressleiste gehabt.
Du hast einen Vorwärts- und Rückwärtsknopf gehabt.
Du hast eine Toolbar gehabt.
Also, man erkennt tatsächlich schon den...
Guck mal, du hast so eine Progress.
Man erkennt in irgendeiner Art und Weise
schon einen Webbrowser da drinnen.
Yeah, let's just kill that.
So, Mosaic was an early browser
that looks familiar to modern people.
And...
Let's get back to... There we go.
The main innovation that happened with Mosaic
was that it looked a lot like what you would see today.
So it had all the kind of HTML rendering
that you would expect, like things are in paragraphs.
Optimiert für Microsoft Internet Explorer in 640 mal 480.
They've got lists, they've got links.
You can hover a link and your cursor goes blue.
All of that kind of traditional stuff.
But the main thing that was the really big surprising innovation
was inline images.
Now, up until that point,
browsers did not render images inside pages.
You had to open them in a separate window.
So you might be thinking,
well, how did this new standard come to be?
What did the standardization process look like at that time?
Was wir uns anschauen,
wir schauen uns Browser und JavaScript History an.
Das ist ein NDC Talk von vor einer Woche ungefähr.
Was there a standardization?
Ich habe die ersten Viertelstunde geguckt.
Also ne, bis dahin, die ersten 13 Minuten.
Ich fand das echt spannend und ich dachte mir,
wir gucken uns das einfach mal im Stream an.
So, let's get a little snapshot
of what that was like for the people at the time.
So, image tag.
Leute, wahnsinns Innovation damals.
Ich meine, du konntest, du konntest
Images einfach anzeigen jetzt.
Inline in der Seite.
At this time, there was just a mailing list.
And one day, the person who was building this
WWW Talk mailing list,
Moment.
Gibt's die immer noch?
Okay, die gibt es prinzipiell noch,
aber niemand schreibt mehr da drin.
Spam.
Spam ist in der WWW Talk mailing list.
Alles klar, top.
Browser Mark Andreessen,
who we're gonna hear more about in a minute.
He sent a message to this mailing list saying,
hey, I'd like to present a new HTML tag
called img.
And I want it to have an attribute called circ.
Okay, and then he gives an example of that at the bottom.
And the reply comes back almost straight away,
saying, oh yeah,
I've already invented that exact thing,
except my invention is totally different.
And why don't you call it img,
and why isn't the attribute source?
Oh, that's a very reasonable question.
I think we can all agree.
Weilabkürzung und beizsparen.
Weilabkürzung und beizsparen.
Weilabkürzung und beizsparen.
However, nobody addressed that point whatsoever.
It was totally ignored,
because Berners-Lee then came in,
and said, no, no, no, no,
hang on a minute.
It should not be called img,
or even img.
It should be an a-tag,
and it should be rel="embed,present".
Alles klar.
Obviously.
... are gonna like that a lot better.
So then,
they had a little bit of a heated debate
for a few days,
where they were pitching their counter-proposals.
And Berners-Lee was really sticking to the idea
that no,
it's not appropriate for it to be an a-tag.
But then he makes a bit of a tactical error,
because he says,
oh, we can't change HTML now anyway,
because it's being standardized.
We just have to leave it as it is.
Now, unfortunately,
having made that blunder,
that gave the opportunity for Andreessen to come back
and say, well, Tim,
I absolutely agree with you in all cases,
which is why I'm gonna completely ignore you
and do what I said originally.
Even if your standards
say otherwise,
the investors have just got to innovate.
So he went ahead and did that.
And he came back a couple of weeks later to confirm,
yeah, we're definitely going with IMG and SERC,
like I said in the first place.
I wasn't really asking your permission.
This is just what I'm gonna do.
So, I don't know if Berners-Lee felt at all burned
by this exchange,
but it just so happens that the following year
he set up the W3C.
Die gibt's heut auch noch.
Die machen heut immer noch die ganzen Web-Standards.
Und da sitzen wenigstens Leute drin,
die nicht nur Bullshit machen,
wie im C++-Gremium.
Da sitzen tatsächlich Leute drin,
die anscheinend wissen, was sie machen.
Wie 3C.
Die Webseite von denen sieht tatsächlich aus
wie von 1995.
Naja.
Also,
schön ist die Webseite, nett,
aber es geht klar.
Die war schon mal schlimmer.
Was zum Teufel?
Was geht denn jetzt im Chat ab, Alter?
MonkaS?
Was zum...
Ist das...
Ist das ein Werbe-Bot?
Keck, wait, Alter.
Ich mein, ich frag mich jetzt
allen Ernstes, gibt's wirklich
jemand,
der Geld dafür ausgibt,
um
seinen eigenen Stream in
anderen Streams per Bot
zu spammen?
Ich mein, hä?
Wo ist der Sinn davon?
Naja, gut.
Was auch immer.
Hatte ich auch noch nicht.
Ist Premiere.
Hab ich so noch nicht gesehen.
Der Bot ist schlau und kann followen.
Das bringt dem Bot nicht viel,
weil er 20 Minuten gefollowt haben muss,
glaube, dass das funktioniert.
Aber ich bin froh, dass wir Mods haben,
die wissen, was sie machen.
Wir haben noch 10 Minuten Zeit.
Wir gucken jetzt einfach weiter.
Leute, wir müssen einmal im Chat,
eine Runde Mod-Check, please.
Wir hatten mal
Pat the Mods, hatten wir mal.
Das Emote gibt's aber anscheinend nicht mehr.
Eine Runde Mod-Check.
Weil wir so High-IQ
Moderators haben.
Mods loben, genau.
Okay, wir gucken jetzt nochmal 10 Minuten weiter.
Also wir sind stehen geblieben,
als sie dieses Web-Standardisierungs-
Gremium aufgemacht haben.
Und es ging schnell los.
Es waren wahrscheinlich hunderten,
wenn nicht tausende Web-Page.
Und es ging so schnell los.
Es ging fast jedes Jahr um 10.
Es war jedes Jahr zwischen 90 und 100.
Mein Chat im Stream ist verbuggt,
der kommt nicht hinterher.
Der kommt nicht hinterher, der Chat.
Kann man das reloaden?
Hm, kann man den Chat irgendwie reloaden?
Ich bin dazu pepega,
das ordentlich, ordentlich zu bedienen.
Chat-Overflow, ja.
Kann man das irgendwo...
So, vielleicht hier irgendwie eine andere Höhe
reinschreiben oder so?
Dass der reloadet.
Shutdown Source when not visible.
Okay. Ah!
Chat resettet, Leute.
Massive. Chat
resettet. Bot outsmarted.
Was ist denn hier los?
Ey, komischer Spambot war am Start.
Jetzt geht's wieder.
So, wir gucken jetzt noch 10 Minuten
vor dem Talk. Morgen gucken wir die restliche Hälfte.
Gucken, was jetzt noch kommt.
Weil jetzt müssen eigentlich noch ein paar interessante Sachen kommen.
Jetzt müsste irgendwie noch Netscape kommen und sowas.
Und ich war dabei. 97.
Telekom DSL-Anschluss.
768 Kilobit.
Kannst du das Follow-Gif ausmachen?
Öh, normalerweise
followen gar nicht so viele,
aber du hast recht.
Jetzt aktuell wäre das schon nicht
verkehrt.
Warum ich das überhaupt follow? Ja.
One of the high points of this comes in
94, 95,
when two big corporations
show up. Well, Netscape was not a big
corporation originally. They were a startup.
So, Andreessen, who had worked on
Mosaic, he
left and he went to work
for a startup. And they weren't gonna make a web browser.
They actually wanted
to make an online gaming network
for the Nintendo 64.
Ein online gaming network
für Nintendo 64.
Gut, das hat ja Nintendo
wahrscheinlich im Keim erstickt,
so wie ich Nintendo kenne.
Ich mein, Nintendo in online,
in einem Satz, das ergibt
ja heute noch keinen Sinn.
Aber 1995 erst recht nicht.
But Nintendo
were just taking too long to release that.
Ja, wer hätte das gedacht?
Wer hätte das gedacht?
Oh, I don't know. Should we just make another browser, maybe?
So they did that.
And that's how Netscape Navigator was born.
Das ist ja... Okay, das wusste ich
auch noch nicht. Okay, Moment.
Netscape und dementsprechend Mozilla
und Firefox
gibt es also nur,
weil die ursprünglichen
Entwickler nichts besseres
zu tun hatten, als einen Browser zu
entwickeln, weil Nintendo es damals
mit online schon verkackt hat.
Hab ich das richtig verstanden?
Ja.
Oh, das wusste ich auch nicht,
dass IE quasi
dass IE quasi
ein Fork war in der ersten Version.
Weißt du schon,
warum es Playstation überhaupt nicht...
Ja gut, die Story kennt ja mittlerweile jeder,
dass die Playstation mal ein Super Nintendo CD-Laufwerk
sein sollte.
Ich mochte,
ich mochte damals, 1997,
ich mochte Netscape, wirklich.
Ich hab richtig gerne Netscape verwendet.
Netscape Navigator 6
oder sowas war das dann.
Mit diesen komischen
3D-Buttons und sowas.
Nicht 67
alter 6.
Diesen 3D-Optik-Buttons
und sowas hier.
Ne, das meine ich nicht.
Das meine ich nicht.
Hier, mit diesen 3D-Style-Buttons
und so, ja genau.
98 rum, ja.
Das hab ich richtig gerne verwendet damals.
War mir deutlich lieber als Internet Explorer.
Später, paar Jahre später
konntest du nur Internet Explorer
verwenden und dann halt eigentlich Firefox.
Ich hab glücklicherweise Internet Explorer
nie wirklich lange verwendet.
Ich hab relativ,
also ich hab angefangen, hab ich Netscape
verwendet. Irgendwann war es halt
so, dass einige Sachen nur gescheit mit Internet Explorer
funktioniert haben und Internet Explorer,
sagen wir mal, gut genug war, dass man keinen extra
Browser mehr gebraucht hat.
Aber Internet Explorer war halt abfuck.
Schon damals. Und
als Firefox rausgekommen ist, da hieß
dann nicht Firefox, da hieß dann auch
Firebird Browser, falls sich da irgendjemand
dran erinnern kann.
Das haben die umbenannt wahrscheinlich, weil es
Probleme mit dem Datenbankhersteller gab
oder so, ich weiß es nicht. Aber
die, ich kenne noch,
also ich habe Firefox schon verwendet, da hieß
er noch Firebird Browser.
Und ja, Pidgin
hab ich auch viel verwendet.
Wo sind wir stehen geblieben? Ja.
Die meisten waren nicht mehr auf
der Welt, ja. Das stimmt wohl.
But it was, you know, a resounding
win for the browser.
Anyway, that's enough about
browsers. Let's talk a little bit about how
web programming actually worked.
Sunderbird hieß früher anders.
Das stimmt. Ich weiß aber nicht
mehr wie. Sunderbird hieß
definitiv anders.
Weiß ich nicht.
Oh nein! Oh nein! Leute, jetzt ist
vorbei.
PHP betritt die Bühne.
Jetzt ist, jetzt ist
alle, alle Hoffnung vergeben ist hier.
Die Personal Homepage Tools 1.0
sind am Start.
Man darf aber nicht vergessen, es war eine Wahnsinns
Innovation damals. Ich meine,
heute ist PHP auch noch eines der
verbreitetsten Backend-Technologien überhaupt.
Und PHP hat
immer noch den Vorteil, es
läuft überall.
Versuch mal irgendwie eine
.NET Anwendung beim 0 nach 15
Hoster laufen zu lassen. Ist nix.
PHP. Jeder billigst
jeder billigst China-Chinesen
Hoster kann PHP.
Der ist einfach mal nacktes SQL drinne.
Oh oh.
And this is the original syntax.
Okay, so this is an early sample.
You can see it was done with HTML
comments for generating HTML.
It had some cool, powerful features.
Like, can you see it does SQL queries
there online six or seven or something
like that. And of course it has a
SQL injection vulnerability.
They always
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
Leute, Leute, Connect Using SSL, das gab es damals auch schon.
Kein Magier, ein Zauberer.
Schon spät, ja.
Die Frontpage-Geschichte gucken wir noch fertig.
Wie das ausschaut.
Wie das ausschaut.
Mailto geht heute auch noch.
Schönes Windows 97 Design.
Soll ich euch mal was zeigen, was auch noch aus dieser Zeit in Windows, sogar in Windows 11 glaube ich noch drin ist.
Guckt mal.
Der Icon-Dialog.
Und davon dann sowas hier zum Beispiel, ja.
Sowas hier.
Guckt euch das Icon an.
Das ist straight aus Windows 3.11 oder so.
Oh, findet ihr nicht auch, dass das super Corporate-mäßig aussieht?
Lila Hintergrund, lila Schrift.
Das hätte meinem damaligen Lehrer in der Schule gefallen.
Leila, leila, leila.
Heute verstehen die meisten da unter einen Schlager, aber der war seinerzeit schon voraus.
Ich weiß nicht, was die Designers dachten, aber natürlich können wir da rein und starten, was wir editen können.
Ich weiß nicht, sagen wir mal, mein Website, ich weiß es nicht.
Aber sobald wir das HTML erstellt haben, hatte es auch ein paar verstörende, mächtige Features.
Zum Beispiel können wir ins Skript gehen.
Verstörende, mächtige Features.
Das ist auch so eine Redewendung, die benutzt ihr wahrscheinlich öfters, weil vielleicht ein bisschen verstörend mächtige Features.
Ja, alles klar.
VB-Skript, MonkaS, jetzt ist vorbei.
Na, Gott sei Dank ist es JavaScript geworden und nicht VB-Skript.
Ich meine, JavaScript war auch lange Jahre übelster Abfang, aber VB-Skript wäre ja, also, ich weiß nicht, was ich schlimmer finden würde.
Also, das ist noch schlimmer als JavaScript.
Wir sprechen darüber ein bisschen.
Richtig, also JavaScript und CSS.
Wir sprechen darüber ein bisschen.
Vielleicht habt ihr die Geschichte über JavaScript gehört, wie es in zehn Tagen erschienen ist.
Na, das ist wahrscheinlich wahr.
Also, Brendan Eich wurde an Netscape eingeladen und als er angefangen hat, haben sie ihm gesagt, hey, Brendan, in zehn Tagen werden wir ein All-Hands-Meeting haben.
Glaubst du, es wäre möglich, für dich eine Demo zu machen, wie eine Skript-Language, die in den Netscape-Browser hineingehen könnte?
Es muss nicht gut sein, niemand wird es benutzen oder so.
Und so hat er es gemacht.
Er hat hart gearbeitet.
Er hat hart gearbeitet.
Er hat hart gearbeitet.
Er hat hart gearbeitet.
Jetzt wundert sich keiner mehr, warum JavaScript jahrelang so Kacke war, oder?
Jetzt wundert sich keiner mehr, warum JavaScript jahrelang so Kacke war, oder?
Jetzt wundert sich keiner mehr, warum JavaScript jahrelang so Kacke war, oder?
Die Design-Guidance, die Andreessen zu Anfang gegeben hat, hat wirklich den Bereich von JavaScript bis in die heutige Zeit geworfen.
Zum Beispiel hat Andreessen gesagt, das kann nicht eine gekomplizierte Sprache sein, weil ich Leute möchte, die können, die Code direkt in ihre HTML-Page schreiben.
Das ist eine Design-Gesellschaft, die mit uns bis zum WebAssembly geklappt ist.
Also von vorn an würde ich sagen, das ist ein Norweger, aber der Rest, keine Ahnung.
Ja, aber es hat schon, dass es Family heißt, es hat schon gewisse Ähnlichkeiten zu heutigem CSS.
On-Size, Point, Point-Units, Pixel, Millimeter, das gibt es heute alles.
Excel.
Jetzt mal seriously, 99% der Web-Developer scheißen komplett auf Accessibility.
Hier in Australien, du hast das Disability Discrimination Act of 92 und es spricht nicht über die Web, weil die Web natürlich zu neu war, um darüber zu sprechen, aber es exkludiert die Web auch.
Ja.
Die Frameworks können das überhaupt nicht machen.
Woher soll das Framework wissen, was ein guter Alttext für dieses Image ist?
Das macht keiner so richtig heutzutage.
Wie gesagt, es ist ein Unterschied zwischen, man sollte es machen, es würde zum guten Ton gehören und man macht es.
Zählt, zählt dick.
Zählt man mit dick auch unter den Dis-Disability-Act?
Berners-Lee knew that they were going to have to do something about this.
He sent out a message to a newsletter in 96 saying, hey, what are the best practices, what are people doing, how are we going to make this work well?
And then the following year, this led to having a big meeting in the US White House with a US Senator and they founded the Web Accessibility Initiative.
And that gave some confidence to the US government to update their Section 508 rules the following year to clarify that,
electronic services would be protected by that legislation.
So it was really, obviously a legal requirement at that point.
And to help web developers actually do this.
Es ist ein legal requirement, aber ab da haben alle Seiten angefangen, Java Flash zu verwenden, was überhaupt nicht accessible war, accessibility hatte.
Also ab da, wo es legal requirement ist, benutzen alle Flash und es funktioniert damit nicht.
Five hat.
Five hat.
Five hat.
Five hat.
Five hat.
All the content accessibility guidelines were formed by this group the following year.
And the version two of that actually became part of EU law officially.
So the EU law basically just says you need to follow these guidelines version two.
It was updated again a little bit later.
Now I think as web developers the main thing to observe is that we should be grateful that these guidelines existed so early and the fact that they were written by you.
Also, dass sie da dran gedacht haben 1998 muss man wirklich mal sagen Hut ab.
Understood the web because if they were not, then today.
Oder, man lässt es einfach bleiben, wie 90% der Entwickler heutzutage.
Oh, MonkaS, ASP.NET 1, okay, der Typ ist von Microsoft, aber jetzt wird es schmerzhaft, Leute, jetzt wird es schmerzhaft.
Oh nein.
Objekt-Oriented-Chat.
Ich ahne, jetzt kommt Webforms.
Ich ahne, jetzt kommt Webforms, es gibt kaum was Schlimmeres.
Es kommt Webforms, Webforms kommt jetzt.
Gibt es so etwas ähnliches eigentlich noch?
Ich glaube, Webforms würden theoretisch immer noch funktionieren, es benutzt bloß keiner mehr.
Okay.
Because I'm using hardware from 20 years in the future, which is also what we recommend for modern Visual Studio.
Hey, so langsam, das wünschtest du dir doch auch wieder nicht, dass du es nur mit 20 Jahren, mit Hardware aus 20 Jahren aus der Zukunft verwenden kannst.
Ich werde es einem neuen Projekt veröffentlichen und ich werde es dem sehr erfreulichen Namen Webapplikation 11 geben, weil ich mich heute nicht zu inventiv fühle.
Und wenn das kommt, werdet ihr sehen, hier ist der Visual Designer.
Das ist Webforms, MonkaS.
Just like in Windows Forms.
No!
Oh Gott!
Webforms.
I'm going to add a label, I'm going to just say, hey there, okay, and I'm going to add a button and let's move that along.
And I'm going to do some really high quality graphic design here, where I'll make that.
Stellt euch mal vor, so haben Leute Webseiten erstellt.
Diesen Müll haben wir zu verdanken, optimiert für Microsoft Internet Explorer in 640x480.
We can switch over onto the HTML.
And we can see it's not too bad actually, it kind of looks alright.
With some exceptions, like what on earth is that?
I don't know what that is, I don't want to know.
Das ist absolutes Positioning auf der Seite ist das.
But let's just run it anyway and see what comes up.
Alright, so Control F5, I'm in my browser and we've got our button.
Okay, now it won't do anything if I click it.
Let's add some interactive behaviors to this.
And it was really nice.
Okay, we could go and we can double click on that button.
And we get into our code editor and we can use the brand new C-Sharp for the browser.
Wobei das alles Server-Site gerendert wurde, ja.
So I'm going to say that when we click on this button, I'm going to change the text on it to say you clicked at and then date time dot now.
Okay, run that again.
And then when I click my button, you'll see I get the time.
That's pretty nice.
And I can click it again and each time I click it, the time is going to update.
So how is this working?
How is it being interactive, even though we've got no JavaScript in the page?
Well, one clue that we can get is if we use the back and forwards buttons.
So watch as I press back and forwards, I'm going backwards and forwards in time.
So what is going on there?
Das Ding rendert unter der Haube immer eine komplett neue Seite, oder?
Advanced, isn't it?
We can't even do that with modern tech.
How are they doing that?
Well, the trick is how it's implemented.
So if we go into view source here.
We can see this giant blob of base64-encoded stuff.
It's a bit hard to read, I know.
Can we change the font?
I'll just leave it.
Okay, so we've got a massive base64 blob.
And this represents the UI state.
So there's an object-oriented representation of the UI, which is serialized into that blob.
And when I click a button, it sends that to the server.
Wisst ihr das Quick?
So das neue Hype-Framework, was es aktuell so gibt.
Dass sie das ähnlich machen.
It builds the UI state.
It runs the action that I've just put some logic for.
It re-renders the new HTML and also re-emits that base64 blob.
So it can update again.
And as a consequence, each version of that ends up in the browser's history.
That's a pretty clever solution to doing interactivity.
But it does some other quite nice solutions to certain problems as well.
For example, back at this time, CSS was...
Als er der Handy tut, soll man seine Hand wegmachen.
And if you wanted to do something like horizontal and vertical centering of something,
well, you could probably just forget it,
unless you had like a PhD in browser quirks or something like that.
But if you were an ASP.NET developer, you could do it quite well.
You could just go like this.
There we go.
That's probably about the middle, isn't it?
Save that, go back into my browser.
Optimiert für Microsoft Internet Explorer in 640x480.
Now, of course, that worked just by disgustingly putting the absolute pixel positions into the page there.
And this whole idea started to fall apart a few years later for reasons that we'll talk about.
Alright, so this was the hottest way of doing web development at that time.
And it seemed like it would always be like that.
Until a couple of years later, something new came.
Doch, wir haben tatsächlich letztens erst Battlefield gespielt.
Which absolutely shook things up.
Leute, es ist soweit.
Ruby ist am Start.
Das gucken wir uns das nächste Mal an.
Haben jetzt ungefähr die Hälfte angeguckt.
Wir gucken morgen dann den Rest.
Ruby, endlich.
Haben wir es geschafft.
Ich hätte nicht gedacht, dass Ruby da drinnen vorkommt.
So maßgebend für...
Naja gut, Server-seitig, Backend-seitig hat Rails schon das Ganze ziemlich umgekrempelt.
Ja, ich finde den Vortrag echt richtig spannend.
Finde ich gut.
Twitter hat sich heute wieder gefreut über mein Bahn-Geflame.
Einer hat geschrieben, er ist nur noch auf Twitter,
dass er mich die Bahn beleidigen sehen kann.
Was für euch witzig ist, ja, auf Twitter,
was dort für Entertainment sorgt, ist für mich ernst.
Ich meine das so.
Ich schreibe das nicht einfach, weil ich denke,
ah, heute wird es mal wieder Zeit, die Bahn zu flamen.
Nein, ich habe richtigen Hass auf die Bahn.
Heute morgen auch wieder.
Das erste, was ich mache, ist, ich stehe auf,
gucke aufs Handy, sehe mein Zug, fällt aus.
Gucke, was ist der nächste Zug, fällt auch aus.
Du hast noch einen schicken neuen Fiat, ja, den habe ich.
Der ist auch nice.
Der Fiat ist nice.
Ja, Chat, Chat, serious, seriously.
Meint ihr, ich wäre noch nicht auf die Idee gekommen,
nachdem ich, also, meint ihr, ich wäre nicht ohne den Chat
auf die Idee gekommen, dass, wenn ich mir ein neues Auto gekauft habe,
ich das Auto auch benutzen könnte?
Also, kommt, ist das bei euch eine Möglichkeit?
Könnt ihr denken, ja, auf die Idee ist der Max vielleicht selbst gekommen,
sein neues Auto zu benutzen?
Ja, offensichtlich nicht.
Ja, aber was für ein Smartphone benutzt du?
Ich habe ein iPhone aktuell.
Ich habe hier daheim eine wilde Mischung aus iPads, iPhones und Android Dashboards.
Das auch.
Das auch.
PCOM-Config zeigen?
Die habe ich doch auf.
Die habe ich doch auf PCOM-Config.
Sehr ausführlich.
Sehr, sehr viel drin.
Okay, Leute.
Badge-Time.
Ich glaube, es wird mal wieder Zeit für den Badge-Song, oder?
Also, für meine Outromusik.
Mal wieder Outromusik.
Also, Leute, wir sehen uns.
Bis dann, macht's gut.
See you.
