so leute auf geht's da bin ich wir werden heute unser cloud native game etwas absteppen
alles klar soweit ja weil server von hand anklicken ist out in der heutigen zeit geht
das alles automatisiert niemand klickt mehr server von hand an geschweige denn
fast server noch von hand an das hört sich jetzt zwar ein wenig gut technisch an aber
wisst was ich meine und ich habe schon mal was mit terraform gemacht von der ganzen weile bzw
auf der arbeit ab und zu ein paar sachen eingetragen und so grob habe ich das alles
schon mal gesehen aber so wirklich von grund auf da mal irgendwas eingerichtet also quasi
wenn es noch gar nichts gibt habe ich noch nicht ich dachte mir das wird mal zeit da
sich jetzt ein bisschen mit auseinanderzusetzen und
wir machen das in der hessener cloud demnächst hoffe ich startet auch noch eine weitere
kooperation mit hessener gucken wir uns noch ein bisschen mehr an und ich kriege vielleicht auch
wieder einen gutscheincode weil der aktuelle hessener gutscheincode den es hier bei mir im
chat gibt da ist ja outdated overrated debated den gibt es ja nicht mehr vielleicht kriegen
wir das irgendwie hin ja nick dankeschön für den sub übrigens leute wer von euch ist hans feldt
da steckt ihr das gesagt wer zeichnet dieosi vol1 hat indiciert hat ihn darinto
an".
derjenige der es geschrieben hat weiß genau wer es ist, ja wer ist hans feld chat wer
von euch ist hans feld.
Ist hans feld schon da.
ich habe nämlich eine mail von hans feld heute morgen zufällig gesehen in meinem
e mail postfach und das ist so offensichtlich hat gbait.
äh zeige ich euch mal so offensichtlich hat gbait.
wer von euch.
Wer von euch ist das?
Achtung.
Wer von euch ist Hans Feld?
Passt auf.
Ja.
Die E-Mail habe ich heute gekriegt.
Und das ist so offensichtlicher Fake.
Wer von euch
wollte mich
jibben?
Wer will mich jibben, Alter?
Fake News.
Und das Beste ist,
ich werde
meinen Anwalt
einschalten wegen meinem Windows 10
Video.
Wem war es
heute von euch heute Morgen langweilig?
Gebt es zu, Leute.
Also,
das nehme doch nicht mal ich
ernst.
Das ist einfach nur
Hanna G. Bate.
Hans Feld
hat geschrieben.
So.
Wer hat sich denn sonst noch
gemeldet?
Rise of Kingdoms.
Das klingt nach einem billigen.
Das ist bestimmt Chainlord.
Das ist bestimmt Chainlord.
Ja, das passt.
Immer noch auf Jobsuche.
Ja, es wird auch nicht sich so schnell ändern.
Ich werde ja auch nicht jetzt sagen,
okay, das Erste, was es hier gibt,
mache ich oder so.
Ich bin immer noch auf der Suche.
Ähm.
Was ist Rise of Kingdom?
Das ist bestimmt China-Chinesen-Mobile.
Crap-Game, oder?
Die wollen irgendwas
Video-Integration haben.
Moment.
Was?
Okay, das ist die falscheste Schreibweise
von Ägypten, die ich je gesehen habe,
hier drinnen.
Ach so, der hat einfach Z und Y verwechselt.
Ja, dann geht's ja eigentlich.
Also, die Sponsoring-Anfragen sind wieder ganz grausam.
Irgendwelche komischen
Mobile-Games, World of Warships
ist auch wieder am Start.
Weitere China-Chinesen-Sachen.
Alles, alles, Mist.
Ja, so ungefähr, so ungefähr.
Welches Gui benutzt du in Arch-Stilungs?
I3.
Arch, by the way.
Das ist I3.
Ne, nicht G-Bated.
Das ist wirklich, das ist wirklich I3.
Ja, I3.
Ähm.
Und.
Ja gut, die Anwendung sieht man ja.
Das ist noch nicht mal,
das ist noch nicht mal richtiges Arch.
Das stimmt, das ist nur Manjaro.
Man darf ja, habe ich gehört, man darf als Manjaro,
User nicht sagen Arch, by the way.
Das ist quasi Gotteslästerung.
Ja, richtig, richtig.
Das Einzige, was geht.
Alles andere sind Noobs.
Warum nicht Wayland?
Beziehungsweise, warum nicht Swayland?
Das ist ganz einfach.
Weil es läuft wie Shit.
Weil es überhaupt nicht richtig läuft in der VM.
Und überhaupt nicht richtig
ist nicht etwa so.
Es gibt Probleme,
wenn man genau hinguckt.
Nein, nein, nein, nein.
Der Screen Refresht nicht.
Also ein.
Ein Desktop, der also beziehungsweise ein
Window Manager, wo sich der Desktop nicht neu,
also dass der Inhalt des Fensters nicht neu aufbaut,
ist ziemlich unsinnig, weil.
Du bewegst die Maus und siehst nicht,
dass die Maus sich bewegt,
weil der Inhalt des Bildschirms Refresht sich nicht.
Der Inhalt des Bildschirms Refresht sich nur,
wenn ich die Konsole switche und zurück.
Also ist bescheuert.
Das kann man mit irgendeiner Environment Variable.
Umgehen.
Danach gibt es aber andere Probleme.
Wir haben es ausprobiert im Stream.
Das war komplett unusable.
Wir haben es.
Also man kann das mit irgendeiner Variable konnte man setzen,
aber dann ging das nächste nicht richtig.
Copy Paste geht nicht.
Copy Paste in der VM geht nicht richtig mit Sway und Wayland.
Also das ist halt.
Das ist halt Fail.
Und ich behaupte mal Desktop Virtualisierung hier in Form von irgendwie irgendwie eine VM.
So wenig verbreitet ist es jetzt auch wiederum nicht,
als dass man das komplett verlässt.
Und nachlässigen kann.
Und bis das bis das eingebaut ist,
fällt bei mir Sway und Wayland flach.
Das liegt an der Kombination.
Das liegt an der Kombination von Wayland und den VMs.
Ich bin mir sicher,
die könnten sich drei Jahre.
Das ist ja in der Linux.
Das ist ja eine Linux Welt gang und gäbe.
Die könnten sich sicherlich drei Jahre drüber streiten,
wer jetzt genau dran schuld ist.
Das ist mir aber als User vollkommen egal.
Das ist ähnlich,
wie sich Grafikkartenhersteller,
Mesa Treiber Entwickler,
Browser Hersteller,
Desktop Entwickler jahrelang unter Linux gestritten haben.
Was was zeigst du euch einfach.
Was Video,
also was GPU Decoding angeht.
Guck unter Windows.
Unter Windows braucht der Browser hier.
Wo steht der Krempel jetzt?
Der Browser braucht halt nicht wirklich viel.
Und die CPU,
die GPU decodet den größten Teil.
Vom Video.
Und das Ganze selbst in 1044p.
Das juckt ihn überhaupt nicht.
So.
Und das Video wird halt GPU decodet.
Guck ich hab 9% von dem Video
und der Rest macht die GPU.
Und das ist halt unter Linux nicht.
Unter Linux hast du bei so einem 1080,
1080 oder 440p Video,
hast du einfach 100% CPU Last,
weil das alles in der,
alles über die CPU geht.
Mittlerweile ist es besser.
Ich kann es euch zeigen.
Guckt hier.
Oder die coolen Leute hab ich ja gehört.
Die coolen Leute verwenden B-Top jetzt.
Ja B-Top.
Okay viel viel viel nicer.
Muss ich mir Werbung angucken vor meinem eigenen Video,
alter.
Noch mehr Werbung.
Rotkäppchens nach der Chöre.
Ja genau.
Da hab ich jetzt,
da hab ich komplett drauf gewartet jetzt,
dass ich das,
das wollte ich sehen.
So auf kann jetzt mein Video mal losgehen.
So guckt.
Bam.
1044p.
Einfach mal massive CPU.
Okay die Anzeige ist,
ja mal hardcore pepega.
Die stimmt überhaupt nicht.
Okay so.
Guckt es euch hier an.
Brutalste CPU Last.
So.
Also das ist halt Müll.
Und mittlerweile geht das unter Linux halbwegs.
Mittlerweile geht das unter Linux halbwegs.
Mit GPU Beschleunigung.
Allerdings auch nicht für alle Codexen,
die Grafikkarten unterstützen.
Und ja es müssen so ein bisschen die Sterne im richtigen Winkel stehen,
dass das klappt.
Stripes Dankeschön für den Sub.
Leon danke für den Sub.
Passt mal auf,
wenn ihr denkt B-Top sieht fancy aus.
B-Top kann auch viel viel krasser aussehen.
Äh.
B-Top.
Kann auch viel krasser aussehen.
Guckt mal,
man kann hier das Menü aufmachen.
Und das sieht,
jetzt sieht das aus,
jetzt sieht das aus wie ein DOS Game oder so.
Von 1995.
Presets kann man durchschalten.
Guckt da kann man sogar die,
die, die,
Leute!
Fuck!
IP-Leak!
Was mach ich denn jetzt?
Schon,
schon drin?
Chat?
Schon,
schon eingeloggt?
Jetzt ist eh zu spät.
IP-Leaked.
Fuck.
Dass ich immer die IPs leaken muss hier.
Ja.
Login Host.
Auf geht's.
Ja.
Gut.
Sag mal,
sag wenn du drinne bist.
Ok.
Sag,
sag Bescheid.
Sag Bescheid.
Dann schalte ich die VM aus.
Also Terraform.
Ja.
Was machen wir heute?
Also ich hab mir folgendes überlegt.
Ähm.
Ich hab,
ich hab,
ich zeig jetzt erst mal kurz was das ist.
Also Terraform ist ein Cloud Provisioning Tool.
Oder was sagen die denn selbst,
was sie sind?
Sekunde.
Erstmal hier Dark wieder ausmachen.
Flashbang raus.
Also.
Wie sagen sie denn?
Wie sagen sie denn?
Automatisiert,
Automatisierungstool für Cloud Infrastruktur.
Also im Prinzip ist das das,
was man beispielsweise von Hand klickt.
Bei einem Cloud Anbieter,
sei es jetzt bei Hetzner,
sei es jetzt bei Amazon,
sei es jetzt bei Azure oder Google oder sonst wo.
Ja.
Da kann man Server hinzufügen,
verschiedene Optionen anklicken,
Loadbalancer erstellen,
Firewall Regeln erstellen und alle möglichen Dinger.
Das macht man halt normalerweise im Web Interface.
Oder aber,
man ist schon etwas advancer und benutzt Tools zum Beispiel,
wie das Hetzner Cloud CLI.
Aber das ist natürlich nicht so geil,
wenn man das öfters machen muss.
Und es ist auch nicht so geil,
wenn man regelmäßig neue Infrastruktur hinstellen muss.
Oder aber,
wenn man zum Beispiel Sachen macht,
wie rollierendes oder wie nennt man das?
Rolling.
Wie heißt,
wie nennt man das auf Deutsch?
So Rolling Deployments.
Wie nennt man das auf Deutsch?
Rollierendes Deployment?
Klingt auf Deutsch irgendwie bescheuert.
Also wenn man zum Beispiel,
drei,
fortlaufendes Deployment.
Ne,
fortlaufendes Deployment ist eher die Geschichte von Continuous Integration und Continuous Delivery.
Das ist ja damit nicht gemeint.
Das ist ja damit nicht gemeint.
Was ich meine ist folgendes.
Ne,
Hetzner Sponsoring ist aber gerade wieder in der Mache.
Ja.
Also zum Beispiel,
du hast hier,
Leute,
warum mache ich das eigentlich mit Paint?
Draw.io.
Wir machen das einfach damit.
New Diagramm.
Ja,
ja.
Was?
Warte mal.
Konnte man nicht einfach irgendwie,
ne,
bin verwirrt.
Ging das nicht Local Storage?
Ach,
die Site Later muss man machen.
Na,
bescheuert.
Also,
ähm,
haben die,
haben die hier ein Load Balancer?
Bild wie?
Balancer?
Gibt's nicht als Bild?
Na gut.
Doch,
sowas haben die.
Also,
der Load Balancer,
ich,
ich versuch euch das mal anzumalen.
So,
der Load Balancer hat irgendeine Public IP,
ja?
Äh,
Public IP 8.8.1.1.
Ich glaub,
das ist der zweite.
Ist das nicht der Google Backup DNS?
Ups.
Keine Ahnung.
Blub,
blub,
blub,
blub.
So,
das ist meine Public IP.
Und,
jetzt hat man da drei Server dahinter stehen.
Es müssen ja nicht zwangsläufig drei sein.
Man kann das ja auch so skalieren,
aber ich mal das jetzt einfach mal so als,
als drei,
drei Server.
Kann man die nicht zusammen,
irgendwie?
Ich bin kein Draw IO Bro,
seh ich grade.
So,
also,
du hast hier drei Server,
und auf die Load Balancestour.
Wie verbindet man den Kram?
So.
So.
Ähm,
jetzt ist die Sache,
jetzt ist die Sache folgendes.
Stimmt,
wem gehört eigentlich 69,
69,
69,
69,
69,
69,
69,
69,
69,
69,
69,
69,
69,
69,
69,
69,
69,
69,
69,
69,
69,
69,
69,
69,
69,
69,
69,
69,
69,
69,
69,
69,
69,
69,
69,
69,
69,
69,
69,
69,
69,
69,
Und du scheinst zu wissen, wer Hans Feld ist.
Das wusste J-Law, die Mail passt einfach zu gut.
Genau, er hat nicht gefragt, wer das ist.
Erwischt, erwischt.
Okay, J-Law, ich zeige dir, wer Hans Feld ist.
Hans Feld hat mir eine E-Mail geschrieben zu meinem Windows-Video.
Und ich will jetzt gerade rauskriegen, wer das vom Chat gewesen ist,
weil diese Mail ist so offensichtlich, J-Bait.
Also Hans Feld schreibt zu meinem Windows-Video,
Sorry, aber muss das sein, dass hier ein Teenie Bullshit erzählt?
Der hat keine Ahnung, was er da rauslässt und sagt auch Sachen, die so nicht stimmen.
Nachweislich sagt er somit Fake News.
Du hast...
Sag mal, J-Law, wo bist du nicht gebannt?
Okay, bei mir auf dem Discord noch nicht anscheinend.
So, ähm...
Und ich werde hier mit meinem Anwalt klären,
sollte das Video nicht...
Anzeige zu erstatten wegen Verbreitung falscher Tatsachen.
Also J-Law, der war es wirklich nicht, dem glaube ich das, weil...
Der würde garantiert zugeben, wenn man ihn erwischt hätte,
beziehungsweise wenn er das wäre,
weil dann würde er sich abfeiern im Chat, dass er mich geil gerollt hat.
Aber die Mail ist so hardcore J-Bait,
das muss einer aus dem Chat sein, anders kann ich es mir nicht erklären.
So, also jetzt kommen wir mal zurück, was wir heute mit Terraform machen.
Also, Loadbalancer am Eingang und dahinter drei Application-Server mit Software-Version 1.
So, und jetzt habe ich was programmiert und es gibt jetzt Software-Version 2.
Jetzt ist die Sache.
Mal angenommen, ich schalte hier jetzt ein...
Was will das Ding von mir?
Nein, ich will die 1...
So.
So.
Benutzen wir...
Benutzen wir der KQES-Service.
Also, theoretisch könnte ich jetzt einfach die Software-Version 1 hier abschalten,
Version 2 draufschieben und Version 2 starten.
So.
Das Problem ist aber, dass in dieser Zeit, wo Version 1 down ist, bis Version 2 up ist,
je nachdem, wie gut ich das hier mit meinem Loadbalancer manage,
wenn hier ein User ankommt und der Loadbalancer Loadbalancen zufälligerweise
noch auf...
auf diesen Server hier unten, dann kriegt er einen Fehler, weil das läuft ja gerade
nicht auf dem Server.
So, das kann man...
Das kann man auf verschiedene Arten regeln.
Zum Beispiel kann man einen Health-Check machen vom Loadbalancer an den Server und
der Loadbalancer guckt regelmäßig nach, ob der Server noch lebt.
Das macht der Loadbalancer eh, weil er muss ja Anfragen hinschicken und wenn die abkacken,
dann weiß er es.
Aber es hat...
seinen Sinn, das kann ich vielleicht an der Stelle auch mal erklären, es hat schon durchaus
seinen Sinn, einen extra Health-Check zu machen auf seinen Backend-Server neben dem normalen
Loadbalancen, weil zum Beispiel, wenn ich jetzt den Service hier runterfahre, beziehungsweise
wenn ich den Service hier runterfahren will, dann kriegt das der Loadbalancer nicht instant
mit und wenn jetzt gerade im falschen Moment, also machen wir mal, ich schalte hier jetzt
den Service ab, im nächsten ist es alles testrelevant hier.
Und ich schalte den Service ab, der Loadbalancer hat es noch nicht mitgekriegt, der braucht
1-2 Sekunden, bis er das mitkriegt, dann schickt er den User hier wieder auf den Server und
hier läuft kein Service mehr.
Deswegen macht man einfach einen Health-Check und ich sag dem Service hier, Web-Server,
fahr dich runter, dann setzt der Web-Server, beziehungsweise meine Backend-Anwendung ist
es, den Health-Check auf 503, war es 503?
Genau.
Dann setzt der beim runterfahren, das Server setzt den Health-Check auf 503.
Das heißt, der Loadbalancer bekommt beim Health-Check mit, aha, Service ist nicht
mehr erreichbar, aber der Server antwortet noch in der Zwischenzeit und erst nach sagen
wir 5 Sekunden, schaltet sich der Service dann wirklich aus.
Das heißt, sobald ich sage, Backend bitte runterfahren, liefert der Health-Check 503
zurück, nach 1-2-3 Sekunden checkt das der Loadbalancer, schickt dementsprechend keinen
neuen User mehr auf meinen Server und dann wartet er 5 Sekunden und fährt sich runter.
So.
Und.
Das kann man alles wunderbar von Hand machen oder man benutzt irgendeine Automatisierungslösung
dafür.
Man kann das in irgendein Config-Management rein prügeln, sei es Ansible oder Puppet oder
man kann das auch mit Terraform machen.
Terraform hat den Charme, ich lass das mal kurz auf, nein, ich will mir nicht mein Video
jetzt angucken.
Terraform hat den Charme, dass es deutlich besser ist, was Infrastruktur, also Infrastruktur-Provisioning
angeht, als jetzt was über Ansible.
Die Tools haben gewisse Überschneidungen, aber sind im Prinzip für unterschiedliche
Sachen gedacht.
Ja, Ansible ist dafür gedacht, dass du Server, die da sind, konfigurierst und Terraform ist
dafür gedacht, dass du Server noch gar nicht hast, sondern anlegen willst mit speziellen
Parametern.
Ja, mit dieser IP, mit diesem Festplattenplatz, mit diesem Netzwerk und sonst wie und also
mit Terraform legst du Server und Infrastruktur an, mit Ansible kannst du es konfigurieren.
Aber, die beiden Tools, Ansible haben wir uns ja auch schon mal zusammen hier angeguckt,
ähm, so, und, nee, nee, Terraform ist deutlich mehr als ein Wrapper, ich mein, unter der Haube
benutzt das bestimmt die Tools von den jeweiligen Herstellern, weil wie sollen sie sich sonst
an der offiziellen API gescheit kommunizieren mit denen, aber, nee, nee, das ist, vor allem
ist das einheitlicher.
So, natürlich kannst du mit Ansible auch Server anlegen.
Und du kannst mit Terraform auch Server konfigurieren, aber das Provisioning ist in Ansible nicht so
schön wie in Terraform und das Konfigurieren ist in Terraform nicht so schön wie in Ansible.
So, und man kann gucken, beispielsweise hier in der Registry von Terraform, ob das unterstützt
ist, was man, was man benutzen will als Cloud Anbieter und wir wollen zum Beispiel Hetzner
verwenden.
Aber Hetzner hat sich ziemlich threeheadig nicht Hetzner genannt.
Bei Terraform, das finde ich nicht so clever, weil die Leute suchen nach Hetzner, aber
nein, man muss eigentlich nach H-Cloud suchen, H-Cloud ist das Richtige.
So, und, also mein Ziel ist halt folgendes, ich werde versuchen sowas hier aufzubauen.
Also, ein Loadbalancer davor mit Zertifikat über Terraform, ja, und das habe ich, wie
gesagt, das habe ich from scratch noch nie gemacht.
Das heißt, es kann auch sein, dass es nicht richtig funktioniert.
Also, Loadbalancer davor, dann eins, zwei, drei, macht letztendlich keinen Unterschied.
Application Server dahinter, Anwendung draufschieben, mal schauen, wie wir das dann machen und dann
einmal gucken, ob wir das irgendwie durchdeployed kriegen, ohne dass was kaputt geht.
Ja, so habe ich mir das gedacht.
So, das machen wir jetzt auch.
Ich habe schon was angelegt und zwar, wir benutzen wieder CAC WSService.
Wer das nicht kennt.
Das ist ein Testprojekt, was wir öfters verwenden, wenn wir irgendwelche Cloud-Geschichten ausprobieren.
Und zwar ist CAC WSService eine ASP.NET Anwendung, die nichts anderes macht, wie ein Bild, ein
CAC W-Bild zu rotaten.
Ich kann euch das mal zeigen, wie das aussieht.
Ich weiß gar nicht, ob man das überhaupt lokal starten kann.
Ach ne, Moment.
CAC WSService.net run.
So.
Hi Happen, Dankeschön für den Sub.
Was?
Oh.
Moment.
Ist CAC WSService etwa noch so alt, dass es nicht .NET 6 fähig ist?
Ab was für Infrastrukturgrößen lohnt sich das?
Ja, hm, da kann man sich, da kann man sich drüber streiten, also ich würde sagen, es
lohnt sich weniger ab Infrastrukturgrößen.
Da wird also, beziehungsweise, da ist es schwierig zu sagen, ab wann sich's lohnt, ja, also was
weiß ich.
Wenn du 20, 30 Kisten hast, finde ich, lohnt sich schon, aber es ist eigentlich viel eher
die Frage, musst du die oft anfassen?
Also sprich, baust du da öfters mal Kisten neu auf oder hast du irgendeine Deployment-Strategie,
die enthält, Kisten neu aufzubauen, weil man muss, das muss ich jetzt an der Stelle auch
sagen.
Also, was man ja auch machen kann, die klassische Variante wäre, ich bin der Admin, gibt es
einen Admin?
Gibt's einen Admin?
Ey, es gibt sogar einen Admin-Icon, ja, Five-Head-Admin, also, was man auch machen könnte, ist, die
klassische Variante wäre, man, guck mal, die haben echt, die haben echt für alles irgendeinen,
oh, Hi-Res, Hi-Res-Build, Secure, ja.
Also, die klassische Variante wäre ja folgendes.
Man baut sich diese Infrastruktur einmal auf und wenn man dann was dran ändern will,
lockt sich der Admin-PSSH da drauf ein, kopiert irgendeine neue Version hin, stoppt die alte,
startet die neue, guckt in der Zwischenzeit im Loadbalancer, dass keine Connections mehr
da sind und dann ist gut.
Aber, es gibt einen Nachteil von dieser ganzen Geschichte.
Also, nicht nur, dass man einen Admin braucht, der ein bisschen weiß, was er macht und da
gibt es...
Irgendwie auch ziemlich viele Three-Head-Leute, aber es gibt einen Vorteil, wirklich die Sache
in Terraform zu machen, also mehrere, beziehungsweise in einem Infrastructure-as-Code-Tool, wie sich
das nennt, weil es gerade jemand im Chat geschrieben hat.
Ein Vorteil ist, du siehst automatisch so grob, wie die Server eingerichtet sind.
Das heißt, es ist weniger die Frage, so nach dem Motto, ja, welche IP haben wir den Dingern
denn gegeben?
Was haben wir da für ein Betriebssystem drauf?
Haben wir das und das Tool installiert?
Du hast dadurch, dass du deine Server-Definition in, es ist kein YAML-File, aber ich sage es
mal, in einen YAML-File schreibst, hast du immer was, wo du nachgucken kannst, so ungefähr
wie deine Server ausschauen.
So, und das Nächste ist, mit der Zeit, und das kennt wahrscheinlich jeder, der so mal
die klassische Turnschuh-Administration noch gemacht hat, also wirklich jede Menge Kisten
noch im Rechenzentrum hatte, sich darum gekümmert hat oder auch jede Menge VM hattest, es gibt
einen riesen Vorteil für mich.
Und ich finde, da wird nicht oft genug herausgestellt.
Und zwar, mit der Zeit sammelt sich auf von Hand administrierten Servern jede Menge Müll
an.
Irgendjemand hat mal Btop nachinstalliert, weil er Btop geil fand, irgendjemand hat mal
Logs gezogen in ein Verzeichnis, irgendjemand hat mal temporär ein Unit-File erstellt mit
irgendeinem Workaround für irgendeinen Service, irgendjemand hat mal temporär eine zweite
Platte eingehängt, weil er irgendwie Backups mal hin und her schieben musste.
Irgendeiner hat...
Ich weiß nicht, ich habe das nun aber nicht gesagt, ich habe vorher ein Problem gemacht,
aber...
Also man hat gewiss auch für die
Server, also für den Webserver, ihr habt...
Das ist...
Das ist...
c engine xd und da kannst du deine einzelnen dateien reinlegen so jetzt
gehen wir mal von aus irgendjemand hat damals eine datei angelegt für ein
wordpress und mittlerweile ist da kein wordpress mehr drauf aber du willst einen
neuen service hinlegen auf dem gleichen port wie damals der wordpress lief
niemand hat diese alte datei gelöscht klar kannst du sagen ja gut der typ halt
damals aufpassen müssen aber man kann es halt prinzipiell umgehen und dann hast
du hast du probleme vielleicht hast du noch überbleibsel von deiner wordpress
config im web im config verzeichnis vom web server liegen obwohl da kein wordpress
mehr drauf ist du machst jetzt eine neue php anwendung drauf und die hat auf
einmal irgendwelche insecure settings von irgendeiner drei jahre alten wordpress
installation oder irgendjemand hat mal ssh keys erlaubt sich einzuloggen und die nie
wieder
gelöscht und du hast mitarbeiter ssh keys drin die seit vier jahren nicht mehr
da sind das kann dir alles passieren so und deswegen finde ich hat terraform
noch eine weitere beziehungsweise solche infrastructure as code tools einen
weiteren riesen vorteil und zwar du kannst deine server wenn du es halbwegs
gescheit machst du kannst deine server wegschmeißen gibt es in hakel es gibt
es gibt keine autoscaling groups es gibt jetzt neuerdings groups für
das verteilen im rechenzentrum dass du nicht auf der gleichen hardware läuft
sowas an die autoscaling groups wie in aws gibt es nicht so und das kannst du
also dass die probleme die ich gerade beschrieben habe die kannst du ganz
einfach lösen indem du deine server regelmäßig wenn
irgendwas ist wegschmeißt und neu aus der konfiguration hinstellst das klingt
natürlich erstmal wahnsinnig aufwendig weil man denkt sich so server wegschmeißen
fans auf convertsnick dann du bist mit dem anger� und wenn dann Hauptsache
selbst investors bei der wahl mit dem cartridges drin sind oder wenn du
gleich malash auchической erregt dann geht einzige andere sache der
konzeption ist also du musst dann Konflikte stellen du musst den neuen
server anlegen dann musst du auf den server drauf connecten
man installiert den webserver man ist man in kopf die anwendung drauf so wenn man
das so macht dann ist es ein riesen akt › 2 › re نہnt das soils verужnungsrecht
ungefähr in der geschwindigkeit wie dein cloud provider das zulässt dass du über die api dinge
anlegst also du kannst ein server für die hetzer cloud ungefähr in 20 sekunden neu professionieren
du löscht das ding du wartest ein paar sekunden dass der laut balancer das rausnimmt du stellst
den server neu hin lässt irgendwelche in skripts laufen paar sekunden die dann was drauf installieren
und da ist das war wieder da das hat den vorteil der server ist exakt in dem stand wie er in deiner
config datei beschrieben ist und dadurch dass du den bei jedem deployment und bei allem möglichen
wegschmeißen kannst neu erstellen kannst sammelt sich kein müll drauf an der im zweifelsfall zu
irgendwelche sicherheitsproblemen führt voll redeployment habe ich noch nicht gehört aber
warum nicht wir müssen auch mal ein paar it buzzwords implementieren das macht nicht nur
in der cloud sind das macht auch mit einem eigenen rechner
zentrum sind das kannst du im eigenen rechenzentrum auch machen stell dir vor du hast den esx cluster
du hast kvm backends xen backends was auch immer gerade esx warum nicht kannst du auch machen ist
sogar sinnvoll zu machen problematisch ist halt nur wenn viel externe sachen dran hängt bei uns
auf der arbeit im rechenzentrum würde das zum beispiel nicht gut funktionieren weil dort ist
alles so oldschool durch organisiert dass du nicht einfach sagen kannst ich lege jetzt mit
terraform drei neue server an und die funktionieren dann da musst du erst mal zum netzwerk team und
sagen welche ip adresse könnte ich denn nehmen ja ich meine wer hat schon mal was von dhcp
welche ip darf ich denn nehmen kann das jemand im ip management system für mich reservieren
ah ja ok dann braucht die neue ip noch irgendwelche firewall freischaltung moment storage anbindung
braucht das auch noch dann muss ich zum sahnteam weil die müssen das ding ja erst mal richtig zonen
ach moment welche storage tier will ich eigentlich muss das schnell sein oder muss das langsam sein
ja also wenn man natürlich solche oldschool dinge auf der arbeit hat ihr kennt eventuell wenn ihr
in dem bereich arbeit dann ist das nix dann ist es nämlich eine sache von drei vier tagen wenn
nicht wochen bis ein neues system dasteht aber das muss ja nicht so sein ja die cpu ist ein
bisschen lahm wenn es die dual core cpu ist oder ist das die quad core variante
das ist okay das ist in ordnung kannst du nehmen ich meine das hat kein ja die hat definitiv mehr
power als raspberry pi ist okay und die brauchen nicht viel strom kann man kann man empfehlen es ist
nicht schlecht wenn du alles entwickler machen lässt hast aber auch probleme weil du dann
irgendwelche datenbank passwörter im git drin stehen hast im zweifelsfall so was ja so also
jetzt habe ich das das habe ich das denke ich ganz ganz gut erklärt und wir werden wieder unseren keck
wss service verwenden ich muss übrigens gerade mal keck wss service updaten sehe ich da gerade
keck wss service ist zu alt wie kann das sein warum ist es schon wieder outdated overrated
jebaited ich muss das kurz upgraden wo haben wir es denn hier keck wss service da ist es der ist
noch .NET 5 wir müssen upgraden auf .NET 6 gucken ob das einfach funktioniert das ist eine sache von
zwei minuten
ein halbes jahr alt ist schon legacy unload wo leute wo ist der unload knopf ach da habe ich nicht
gesehen so .NET 6 load das war das war das upgrade mehr müssen wir nicht machen auf gib ihm so .NET run
.NET run
also keck wss service macht folgendes wenn du ihnen aufruft kriegst du einen
random rotiertes keck w bild mit transparenz der hintergrund sieht weiß aus aber es ist
ein transparenter hintergrund also der also nächstes startup gründung ist schon raus das
ist so ein test service den wir gebaut haben um sachen auszuprobieren der kann nix anderes
als bilder distur 홀 aber das ist ein web service den man wunderbar auch ein bisschen stressen kann
Mit tausenden Anfragen.
Und dann gucken, wie viel CPU-Laster es generiert und alles.
Du kannst das Bild kopieren, ja, ja.
Und ich glaube, Keg WSService ist mittlerweile so advanced.
Oh, Kekona gibt es auch.
Get Kekona.
Moment, Moment.
Was ist denn das?
Wait a minute, warum ist Slash Kekona das gleiche wie Slash...
Okay, keine Ahnung.
Leute, das ist überhaupt nicht die aktuellste Keg WSService-Version.
Guckt mal.
Fix.
Doch, das ist die aktuellste Version.
Okay.
Na dann.
Ich bilde eigentlich ein, wir haben das verbessert mittlerweile.
Dass es gar keine...
Dass es das Bild-Rotaten im RAM macht.
Ja.
Aber wie dem auch sei...
Warum habe ich da verschiedene...
Ich weiß wirklich nicht mehr, was ich da getrieben habe.
Egal.
Es funktioniert.
Sonderlich sinnvoll ist dieser Service eh nicht.
So, und das ist...
Das ist der Service, mit dem wir das immer ausprobieren.
Ansonsten ist hier nichts weiter drinne.
Es ist noch...
Ich kann das mal öffnen.
Es ist noch ein Ansible-Playbook drinne.
Irgendwo hier.
Wo wir die Server damals über Ansible konfiguriert haben, aber das machen wir heute nicht.
Heute bauen wir nämlich die gesamte Infrastruktur auf und das Ganze eben mit Terraform.
Und übrigens, die Domain ist auch wunderbar.
Keckw.
Die S?
Was auch immer.
Keckw.
Keckw.services.
Ich habe eine extra Domain dafür.
Da läuft gerade nichts, aber da wird dann gleich was drauf laufen.
Diese Domain haben wir übrigens dem SiriusMax zu verdanken aus dem Chat, der sich die Domain damals registriert hat, als ich das gestreamt habe.
Und mir die Domain geschickt hat.
Mit Übergabe-Code.
Übrigens, Max, es kann auch nicht mehr passieren.
Dass wir deinen Namen leaken.
Ich habe vorhin extra bei der Domain-Registry Fake-Namen reingeschrieben.
Falls wir uns da einloggen sollten.
So, also.
Wohlgemerkt, ich habe noch nie from scratch was mit Terraform gemacht.
Ich habe Terraform schon benutzt, aber ich habe noch nie mit dem leeren Editor angefangen.
So, ich habe hier schon einen Ordner gemacht, der sich Infra nennt.
Und das zeige ich euch jetzt.
Nicht, weil dann könntet ihr bei mir in der Hetzner-Cloud Dinge machen, die ihr nicht machen sollt.
Ich habe hier eine Datei angelegt, api.tf war es.
Da steht mein Hetzner-API-Token drin.
Das zeige ich euch nicht.
Und wenn ich es euch zeige, muss ich es halt schnell löschen, bis ihr es abgetippt habt.
Aber das mache ich nicht.
Okay.
Chat ist schon drin.
Na, vielleicht sollte ich.
Ich überlege gerade.
Ich glaube, ich move das.
Ein Verzeichnis.
Ich move das aus dem Git-Repo raus.
Irgendwo.
Irgendwo in meinem Heimatverzeichnis oder so.
Wobei ich gar nicht weiß, ob Terraform das dann einlesen kann.
Ist wurscht.
Wenn ich es leake, ist es nicht so schlimm.
Ich kann einfach hier das API-Token dann löschen.
Yes, wir trusten.
Also, aktuell gibt es hier noch nichts in dem Verzeichnis.
Und ich lege jetzt mal eine Terraform-Datei an.
Und die Datei mache ich besser nicht auf.
New File, Main.tf.
Search Marketplace.
So.
Ich weiß auch, dass es Terraform-Wissel-Studio-Code-Plugins gibt.
Chat, was ist davon zu empfehlen?
Warum geht...
Das ist das Offizielle.
Und was hat Anton Kulikow am Start?
Ist das besser?
GT-Knor habe ich das schon drin.
Terraform-Auto-Complete.
Die Offizielle hat auch Auto-Complete.
Ach, kein Chimam.
So.
Machen wir das mal kurz hier in einem eigenen Fenster.
Sonst ein bisschen...
Moment.
Jetzt habe ich das Falsche gemooved.
Okay, also.
Jetzt gucken wir uns das mal an.
Es gibt hier einen Provider für Hetzner Cloud.
Und die haben auch ein paar Beispiele drin, wie das funktioniert.
Und was man da jetzt machen kann, ist...
Das ist ja wirklich basicste Config.
Man muss seinen API-Token hinterlegen.
Das habe ich schon gemacht.
Könnt ihr ruhig...
Macht eine Umfrage.
Ich lege meinen API-Token nicht.
Macht eine Umfrage, wenn ihr wollt.
Ähm...
Was hältst du von AI-Tools wie GitHub CodePilot?
Ich muss dir ehrlich sagen, ich habe es noch nicht groß benutzt.
Ich habe ja schon Videos gesehen von Leuten,
die über ihre Erfahrungen berichtet haben.
Das gibt es jetzt ja auch fast schon ein Jahr.
Und die finden es richtig geil.
Aber GitHub CodePilot soll demnächst kostenpflichtig werden.
WeirdChampChat.
Höchst WeirdChamp.
Die Abstimmung mit Keksen ist halt etwas wenig aussagekräftig,
aber kostet Channel Points.
Sollen wir recht sein.
Ach, das ist gar keine Abstimmung.
Das ist eine Prediction.
Das ist dann tatsächlich sinnvoll.
Ich habe nichts gesagt.
Mods.
Pfeifert.
Time.
HighIQ.
Moderation hier.
Ja, mache ich.
Also da bin ich ja froh.
Die meisten Leute sind der Meinung, ich leake meinen API-Token gar nicht.
Ich habe auch nicht vor, meinen API-Token zu leaken.
So, auf geht's.
Also, das ist so eine Basic-Config, die bei sich in der Hilfeseite stehen haben.
Das probieren wir jetzt mal aus.
Also, Token habe ich in den Secrets gesetzt.
Das zeige ich euch jetzt nicht.
Und so kann man anscheinend einen Server anlegen bei der Hetzner Cloud.
Wenn ich das richtig...
Leute, wie gesagt, falls wir hier irgendwelche HighIQ-Terraform-Benutzer da haben.
Ich bin mir da bei den Sachen nicht so hundertprozentig sicher.
Wie gesagt, ich habe das schon benutzt.
Aber ich bin jetzt da nicht der Profi drin.
Ich glaube, dass da oben ist ein Unique Key für jede Ressource.
Den braucht man.
Das ist nicht der Servername.
Das heißt, hier könnte ich auch Wubbeldiwub reinschreiben.
Und dann könnte ich hier unten Servername gleich machen.
Das muss aber, glaube ich, irgendwie Unique sein da oben.
Wie setzt man den Token?
So.
Du legst eine Datei an, die api.tf war.
Oder secrets.tf war.
Oder was auch immer.
Und dann sagst du ihm, wo er die Variable rauslesen soll.
Und das hier ist tatsächlich ganz cool.
Wenn du sagst, sensitive gleich true.
Dann checkt er, dass in keinem Log-Output automatisch...
Also, dann filtert er aus Log-Output automatisch das Secret raus, sollte es da drin stehen.
Das ist eigentlich ganz schlau.
Wie sieht die tf-was-Datei aus?
Einfach hier war.
Einfach hier war.
Gleich.
Blub.
So.
tf ist terraform.
Genau.
So.
Und jetzt kommt der letzte Punkt, wo ich weiß, was man machen muss.
Man muss terraform init machen.
Man muss einmal initial terraform...
Nee, ich glaube bei jedem, wo man neue Provider benutzt, muss man glaube ich init machen.
Zumindest muss man einmal initial terraform init machen, dass er die ganzen Dependencies installiert.
Was man braucht.
Also, zum Beispiel, wenn man die Hetzner Cloud Provider verwendet.
Terraform selbst ist ja...
Terraform selbst ist...
Achso, vielleicht soll ich terraform erstmal installieren.
Wäre natürlich auch noch eine Möglichkeit, ne?
Leute, wie machen das denn eigentlich die coolen Leute mit terraform?
Machen die Leute...
Installieren die terraform lokal?
Oder installieren die terraform über...
Oder benutzen die das über einen Docker-Container?
Und machen dann immer docker run terraform?
Wie machen das die Cloud-Native-Hai-IQ-Leute?
Installiert tfn...
Terraform-Version-Manager?
Warum brauche ich verschiedene terraform-Versions?
Warum nicht einfach den letzten?
Oh, nice.
Aber...
Wo ist der Sinn?
Docker ist schon wieder out für lokale Sachen?
Nö, was soll denn...
Was soll denn Docker für lokale Sachen ersetzt haben?
Da fällt mir ja nix...
Nix ein.
Oh nein.
Nein, Potman ist es nicht.
Die Popularität von Potman hält sich in Grenzen.
Ja, aber bestimmt nicht...
Bestimmt nicht, wenn sie zum ersten Mal irgendwas erproben in der neuen Umgebung.
Nee, LXC...
LXC ist alles.
Ach so.
Ich installiere das jetzt einfach so.
Ich installiere das jetzt einfach so.
Terraform.
Was zum Teufel ist Terragrunt?
Was ist Terra...
Okay.
Es gibt wieder hunderttausend Dinger, wo man nicht checkt, was...
Terragrunt.
Try and maintainable terraform code.
Terragrunt.
Leute, wisst ihr was?
Ich mache einfach gar nichts, bis es in die Terraform und gut ist.
Terraform fertig.
So.
Bevor wir jetzt anfangen mit irgendwelchen super-advancen, high-IQ-Fivehead-Sachen,
werden sie jetzt einfach ganz normal terraform.
Terraform...
Terraform...
Init.
Bam.
Okay, das ist ja schon mal gut, wenn das Beispiel 1 zu 1 copy-pasted schon mal nicht funktioniert.
Das ist ja toll.
Okay.
Also.
Failed to query available provider packages.
Could not retrieve list of available versions.
Hä?
Ist die Registry down oder was?
Das glaube ich aber nicht.
Das glaube ich aber nicht.
Did you intend to use Hetzner H-Cloud?
Ja, weiß ich doch nicht.
Intende ich Hashi...
HashiCorp H-Cloud oder Hetzner Cloud H-Cloud zu verwenden?
Ich glaube, ich will Hetzner Cloud H-Cloud verwenden,
weil zumindest so heißt das hier H-Cloud.
Hetzner Cloud H-Cloud heißt das hier.
Ich muss das nicht freischalten.
Klickt mal rechts auf Use Provider.
Ah, Terraform 0.13 Plus.
Exzellent.
Das muss man auch erstmal wissen.
Alles klar.
Das heißt, ich muss den Krempel hier reinkopieren.
Jetzt mal eine blöde Frage.
Warum hat man da sowas eingeführt,
wenn das früher ohne extra Config ging?
Warum macht man absichtlich...
Okay, ich glaube, ich kann es mir vorstellen,
wahrscheinlich, dass man...
private Registries verwenden könnte oder sowas.
Gehe ich jetzt einfach mal von aus.
Ist es sinnvoll, die Version hardcoded zu schreiben
oder sollte er einfach immer die letzte Version nehmen?
Keine Ahnung.
Probieren wir mal.
Also, Terraform Init.
Ja, das sieht schon besser aus.
So, und jetzt Terraform Apply.
Das sollte nicht funktionieren.
Ja, ich muss die AP Secrets anklicken.
Ist klar.
So, das dürfte jetzt nicht gehen,
weil ich habe ja hier bei dem Server,
den er anbietet,
den er anlegen soll,
nichts eingegeben.
Weder Name vom Server,
noch Betriebssystem-Image,
noch Server-Typ,
noch IP nix.
Erstmal Plan for Apply.
Moment.
Ach hier, genau, so ging das.
Warfile.
So, also, er erzählt mir jetzt,
geht nicht, weil...
Missing Argument.
Server Type is required.
Und Name is required.
Okay.
Name für unseren Server.
Cute Chat 1.
Wir haben ja mehrere.
Später.
Wie, äh, Comment war so, ne?
Loop Terraform.
Wie macht man eine Schleife?
Terraform Tipps und Tricks.
Four Statements.
Four Expressions.
Wir brauchen ja drei Server.
Also, Server Name, Cute Chat.
Dann fehlt Server Type.
Aber ich find's cool,
dass sie die Autocompletion haben
und das sogar für die,
für die Hetzner Cloud Sachen.
Exploit 126.
Dankeschön für den Sub.
Aber sie autocompleten anscheinend
nicht die Sachen hierfür.
Okay, was muss,
was gibt es für Server Type?
Docs.
Server.
Äh, Type.
Ach hier, das sind denen ihre,
das sind denen ihre Kisten,
was das sein soll.
Also sprich, das ist das,
wenn ich hier auf Add Server klicke,
das ist das hier unten,
wie fett die Kiste sein soll.
Eine CPU und RAM und SSD und, und, ja,
da kommt nix, nix Großartiges, das,
der, der Kleinste reicht.
Wo gibt's denn eine Übersicht?
Gibt's hier, gibt's hier eine Übersicht?
Was ist alles,
was es alles für Types gibt?
Ne, ne?
Steht nicht drinne.
Aber gut, das wissen wir ja,
weil das die gleichen sind,
die hier unten stehen.
Also sprich, CX11 ist der Kleinste.
Alles klar.
So, und wir werden das jetzt übrigens dann heute auch richtig machen,
weil Hetzner hat ein neues Feature, und zwar,
nein, die wollte ich euch jetzt nicht zeigen.
Vielleicht ist ja Hans Feld mittlerweile hier.
Ähm, Hetzner hat jetzt ein neues Feature eingeführt,
und zwar, das kann ich euch zeigen,
man kann jetzt endlich,
da warte ich schon seit einem Jahr drauf,
dass wir das endlich mal machen,
man kann jetzt endlich sagen,
ich möchte keine Public IP haben,
sondern Private Network.
Sondern Private Networks.
Also sprich, ich kann endlich einen Cloud-Server anlegen,
den ich nicht vom Internet aus erreichen kann.
Und jetzt ist natürlich gleich die nächste Frage,
da warte ich ja schon drauf,
warum will man sowas denn machen?
Ganz einfach,
warum man sowas machen will,
weil der Eingang muss von außen erreichbar sein.
Die Kisten dahinter müssen vom Eingang nicht erreichbar sein.
So.
Name gleich Test Count Punkt Index.
Count Punkt Index geht aber wahrscheinlich nur,
wenn es in der Schleife ist, oder?
Terraform Count Index.
Das Count-Meta-Argument.
Wir legen jetzt erstmal testweise,
bevor wir solche Spiele reinmachen,
testweise einen Server an.
Also was brauchen wir denn?
Name gleich Server-Type gleich.
Äh, Image.
Image gibt es, Image brauchen wir.
Ubuntu...
Jetzt muss ich mal gucken, wie man das schreibt.
Haben wir hier ein Beispiel?
Hier, Ubuntu 20.04.
Wir machen Ubuntu 22.
Ubuntu 22.04.
Und jetzt gucken wir mal,
wie ist eigentlich so die Convention hier zum Einrücken?
Two Spaces?
4 Spaces?
Wahrscheinlich ziemlich wurscht.
Ich persönlich mag ja 2 Spaces.
Wie du den Server per Ansible konfigurierst?
Ja, per Jump-Pause.
Würde ich das machen.
Wobei, mal gucken.
Mal gucken.
Ich weiß noch nicht.
Vielleicht gebe ich den Dingern zum Testen heute auch einfach Public IPs.
Ist wurscht.
Ich mach mal kurz ein Apply.
Das wird...
Achso, wie gebe ich SSH-Keys an?
SSH-Keys...
Oh, wie heißt der richtige SSH-Key von mir?
Test at Test?
Max at Desktop?
Max at Poggers?
Max at Poggers 2?
Welcher ist der richtige?
Im Zweifelsfall alle.
ID RSA Pub...
Ich hab da nur ein...
Nee, nee, nee, nee.
Fuck.
Ich hab mehrere.
Aber ich hab den ID...
Moment.
Ich hab den ID RSA Pub, aber ich hab kein ID RSA.
Max at Poggers.
Max at Poggers.
Das dürft ihr nicht...
Okay, Max at Poggers ist dann der Richtige.
Also kann ich sowas hier machen?
Max at Poggers?
Oder muss man bei SSH-Keys wirklich Keys...
Public Keys reinschreiben?
SSH-Keys?
SSH-Keys?
SSH-Keys?
SSH-Keys?
SSH-Keys?
SSH-Keys?
SSH-Keys?
SSH-Keys?
SSH-Keys?
Ähm...
SSH...
SSH-Key...
List...
SSH-Key-IDs or Names which should be injected into...
Okay, Names.
Alles klar.
Okay, dann...
Dann bauen wir das Ding mal auf und gucken, ob's funktioniert.
Also, was jetzt passieren sollte von der Idee her ist...
Wenn ich Terraform Apply mache, oder gucken wir erst mal planen, ob das funktioniert...
Was?
Äh...
Eine Idee.
Eine Idee.
Eine Liste von Strings.
Liste von Strings.
Da müssen wir ganz korrekt sein.
Also, das würde er jetzt machen.
Also, bevor ich Apply mache.
Also, das würde er jetzt machen.
Er würde einen neuen Server anlegen, der sich QChat1 nennt.
Backups würde er ausschalten.
Datacenter ist dynamisch.
Firewall ist alles dynamisch.
IP-Adresse macht er...
Alles gut.
Probieren wir das mal aus.
Terraform Apply.
Gibt es irgendwie die Möglichkeit?
Gibt es irgendwie die Möglichkeit, dass man sich das var-File sparen kann?
Gibt es irgendwie die Möglichkeit, dass man sich das var-File sparen kann?
Dass er automatisch da reinguckt?
Dass man hier irgendwie was machen kann, wie include var-File und so?
Terraform include var-File?
Ja?
Macht das Sensitive raus?
Ja, ganz bestimmt.
Okay, weiß ich aber grad nicht wie.
Das wäre natürlich ganz praktisch, wenn man das includen könnte.
Okay, wie auch immer.
machen jetzt apply und der sollte jetzt uns ein server anlegen der cute chat 1
heißt location location sollten wir noch angeben und zwar wir wollen nicht nach
helsinki sondern wir wollen nach location ja mbg 1 ist okay mbg 1 ist
nürnberg ok also terraform plan alles klar ubuntu 2204 kleinste kiste ssh key mit hinzugefügt
backups sind aus und location steht hier gar nicht da datacenter ja da location oder muss ich
eine minute
was ist denn
das
was ist der unterschied zwischen datacenter und location hier ist location ach da kann man das
noch genauer spezifizieren oder was nicht das brauche ich location reicht mir alles da so
terraform apply yes will ich machen creating da ist er cute chat 1 server da also ihr seht
server anlegen hat 13 sekunden gedauert und kopieren wir mal die ip und gucken
ob man das hier anlegen kann und dann können wir das hier anlegen und gucken ob man das hier
anlegen kann und dann können wir das hier anlegen und gucken ob man das hier anlegen kann und dann können wir das hier anlegen und gucken ob man sich drauf einloggen kann
Ne, haha, Leute, ich guck nicht, ob ich mich drauf einloggen kann.
Cheap baited, cheap baited.
Weg damit.
Cheap bait, ne, destroy.
Ne, wie hängt das, apply minus destroy?
Ja, yes.
So, Server wieder weg.
Guck, also Terraform kann den Kram, den er angelegt hat, auch wieder rückgängig machen und wegschmeißen.
So, ich hab nämlich was vergessen.
Damit ich nicht meine IP leake, ich muss noch was machen, Leute.
Und zwar brauche ich ein Cloud-Init.
Man kann bei jedem Server, den man aufbaut, ein Skript angeben, das der nach dem Aufbau ausführt, was er machen soll.
Also, nein, das stimmt nicht, das ist kein Skript.
Das ist eine YAML-Config oder ein Skript.
Man kann beides machen.
YAML-Config oder Skript, geht beides.
Guck, also man kann entweder YAML-Config machen oder...
...direkt ein Skript reinschreiben in Cloud-Init.
Weiß gar nicht, ob die das hier als Beispiel drin haben.
Und wozu jetzt...
Was?
Und Terraform wird jetzt wofür genau benutzt?
Zum automatischen Anlegen von Cloud-Infrastruktur.
Und nicht nur zum Anlegen, sondern auch zum gewissen Maße Konfigurieren, aber vor allem Anlegen mit den richtigen Settings.
Einfach bei einem Server, den man einmal erstellt und dann nie wieder, ist das ziemlich egal.
Aber...
Aber wenn du so Sachen wie...
...Deployment von neuen Versionen ohne Unterbrechung machen willst, zwischen Server neu aufbauen, ab und zu mal vielleicht auch...
...wenn du einen super beliebten Service hast, das Hochskalieren auf mehrere Systeme, ist das praktisch.
Ne, mit TensorFlow hat das nichts zu tun.
So, also wir brauchen Cloud-Init.
Wie macht man hier Cloud-Init bei Hetzner?
Cloud...
Cloud-Init.
User-Data.
User-Data.
User-Data.
Haben die da ein Beispiel für?
Nein, natürlich nicht.
User-Data.
Terraform Multiline Strings.
Was ist der Unterschied zu Ansible?
Die Schwerpunkte sind anders.
Ansible ist dafür da, Systeme, die vorhanden sind, zu konfigurieren.
Und Terraform ist da, Systeme, die nicht da sind, anzulegen.
Du kannst das natürlich...
...mit beidem...
...zum gewissen Grad auch machen, was das jeweils andere Tool kann.
Also du kannst mit Terraform auch zum gewissen Grad deine Server konfigurieren.
Und du kannst mit Ansible auch bis zu einem gewissen Grad Infrastruktur anlegen.
Wobei, man finde ich schon, den einen grundsätzlichen Unterschied sieht,
sowas wie Terraform Destroy gibt es bei Ansible nicht.
Also Ansible kann meines Wissens nach, kann sein, dass sich das mittlerweile geändert hat,
aber würde mich wundern.
Ansible kann beispielsweise nicht Playbooks rückgängig machen.
Terraform schon.
Also Terraform kann halt Sachen, die es angelegt hat, wieder rückstandslos entfernen.
Das geht mit Ansible nicht.
Mit Ansible musst du dann quasi in einem...
Also mal angenommen, du hast mit Ansible eine Datei angelegt über dein Playbook, etc.
Und du wirfst die aus deiner Ansible-Konfiguration raus, dann ist die weiterhin auf dem Server da.
Du wirst das dann erstmal in Ansible quasi ein etc.
Etc.
Blub.
Remove reinschreiben.
Aber du kannst bis zum gewissen Teil mit beiden Tools beides machen.
So, also wo sind wir stehen geblieben?
Ähm, User-Data.
Ja, wie kriege ich da...
Okay.
Terraform Cloud Init.
Da.
Das mag ich an den Terraform-Sachen auch.
Die haben ganz gute Hilfeartikel.
SSH-Key.
Nee, wo mache ich hier?
User-Data.
User-Data.
Nee.
Einfach reinschreiben oder was?
Terraform Multi-Line-Strings.
Ich glaube, Terraform konnte diese Bash-Geschichte als für Multi-Line...
Hier, das da.
Das da.
Hier dort machen.
Genau.
Kann ich das einfach so machen?
Nee, das funktioniert so schon mal nicht.
Ach so, ich darf es nicht quoten.
Stimmt.
Und wenn ich das noch richtig in Erinnerung habe...
Ähm.
Man muss ein Minus davor machen, sonst kann man es nämlich nicht einrücken.
So, also wir brauchen jetzt ein kleines Skript.
Und, ähm, das habe ich schon.
Von einem der letzten Streams habe ich das noch.
Ich muss mir das zumindest mal rauskopieren.
Und dann hoffen wir, dass es funktioniert.
So.
Das braucht man normalerweise nicht.
Das brauche nur ich jetzt beim Streamen.
Was das macht, ist folgendes.
Der baut jetzt einen Server auf mit dem Namen QChat1.
Und danach lässt er dieses Skript laufen.
Was dieses Skript macht, ist...
Es geht in etc.ssh.sshd.config.
Und löscht das SSH beim Einloggen, die IP des letzten Login zeigt.
Also wenn ich nicht meine Vodafone IP...
Wieso nicht über externe Datei einlesen?
Kann man auch machen.
Aber für die drei Zeilen brauche ich keine externe Datei.
So, danach startet der SSH neu.
Und wenn das jetzt funktioniert, kann ich mich auf der Kiste einloggen, ohne meine IP zu leaken.
Auf geht's.
Terraform.
Plan.
Ja.
Übrigens, das hier, falls jetzt irgendjemand denkt, ich habe meinen Token geleakt.
Nein, das ist nicht das Token.
Das ist, ich glaube, Base64 encoded mein Skript.
Okay, apply.
Bam.
Was?
Ach so.
Yes.
Creating.
Da wird er created.
Server wird angelegt.
Server wird provisioned.
So.
Gibt es eigentlich sowas wie Terraform List oder sowas?
Dass ich mir anzeigen kann, was der gerade hat?
Alles?
Was?
Ja.
Terraform State.
Terraform Show.
Terraform Show.
Ach ja, da, das meine ich.
Genau, Show war es.
So ist das.
Also, ja, Public IP vom System.
Wir sind hier, User Data.
So, wenn ich jetzt alles richtig gemacht habe, dann kann ich mich einloggen.
Und falscher SSH-Key?
Moment, mal gucken, falscher SSH-Key vielleicht.
Ähm, keine Ahnung.
Nee, der legt nicht neue Keys an.
Ich habe die nicht.
Ich habe die nicht.
Ich habe die nicht.
Ich habe die nicht.
Ich habe die nicht.
Ich habe die nicht.
Ich habe die nicht.
Ich habe die nicht.
Ich habe die nicht.
Ich habe die nicht.
Ich habe die nicht.
Ich habe die nicht.
Ich habe die nicht.
Ich habe die nicht.
Er soll Max & Poggers verwenden.
Wir können mal nachgucken.
Ich brauche das nie nach dem Anlegen.
Wo sieht man überhaupt, welche Keys hier ausgewählt sind?
Ähm.
Sieht man das überhaupt nachträglich noch?
Sieht man das überhaupt nachträglich?
Hm, wo könnte das stehen?
Networking?
Das Security gibt es doch hier gar nicht.
Security gibt es links.
Nee, ich glaube, das kann man nachträglich nicht mehr sehen.
Ja, nee.
Ich will noch wissen, ob der für den Server
das Richtige ausgewählt hat.
Also, anscheinend schon
Max at Poggers.
Okay, dann probieren wir es
doch mal nochmal aus. Also, guck mal.
Wir sind jetzt relativ schnell im Ausprobieren.
Jetzt können wir irgendwie sagen, Destroy. Bam.
Yes, jetzt ist der Server weg.
Doch, ich kann über das
Webinterface, aber das ist ja nicht so ein Zweck der Sache.
Ne, die
gute Frage, wo das Date
gespeichert wird.
Hier.
Hier.
Also, du kannst
am besten
machst du gleich eine schöne
Git-Ignore-Datei.
Ich weiß nicht, was Best Practice ist,
ob man State eincheckt oder nicht, aber ich würde
eher vermuten, nein, man checkt State nicht an.
So, wir machen
jetzt Test, Add,
Add, Test.
Meckert der eigentlich, wenn ich was angebe,
was es nicht gibt? Das probieren wir jetzt mal
kurz aus. Apply.
Ja, ja, yes.
Der Created nicht.
Das juckt dir nicht.
SSH Keynot Found. Okay.
Der checkt das schon.
Der, okay.
Dann habe ich vielleicht einfach den
falschen Key genommen.
Gibt es sowas wie Apply minus
Y oder so?
Nein.
Kann man nicht gleich sagen, yes?
Ja.
Auto-Approve.
Apply. Bam.
So, aber gucken wir mal,
ob ich mich jetzt danach drauf einloggen kann.
Die Instanz gibt es nicht.
Ne, du hast gesehen, der hat nichts angelegt.
Der hat alles wieder rückgängig gemacht.
Beziehungsweise, ich glaube, Hetzner
hat in der API-Abfrage schon gesagt,
nö, gibt es nicht. So, State.
Ne, Show.
Show war es. Hier, da sind wir.
SSH, Root, Add.
SSH, Keygen.
Minus R.
Yes.
Haha.
Da sind wir.
Und der Login steht nicht drin.
Moment, der Login steht immer erst beim zweiten Mal drin.
Der Login steht nicht drin.
Es hat funktioniert, Leute.
Update.
So, Server ist da.
Ist angelegt.
So.
Destroy.
Destroy. Bam.
Und jetzt kann ich das Ding wieder löschen.
Ja, das ist natürlich cool.
Also, mit der Geschwindigkeit hast du definitiv
im
Auto-Approve.
Immer Auto-Approve. Alles weg.
Da hast du eher nicht das Problem.
Da bist du auf jeden Fall
langsamer im Web-Interface.
Zack.
Und alles wieder weg. Gut.
Jetzt machen wir noch eine Sache in unser Aufbauskript.
Beziehungsweise in unser
Cloud-Init-Skript.
Update.
Update. Upgrade. Fertig.
Äh. Ich mach das jetzt ohne Ansible.
An der Stelle brauch ich ja für die paar Sachen wirklich kein Ansible.
So. Fertig.
So, und jetzt probieren wir drei Server anzulegen.
Da muss ich... Wie geht das mit dem Index?
Count.
Count ist ein Meta-Argument.
Defined by Terraform Language.
Count Index.
Also, im Prinzip...
So was?
Ich nenne das einfach mal Node.
Dann...
Muss das Unix sein?
Oder checkt der das automatisch?
COVID-19...
COVID-9...
910 ist krank.
Das ist schlecht.
MonkaS.
Kein Reboot?
Ehrlich gesagt...
Nee.
Das dauert dann nämlich zu lang, wenn ich reboote.
Was? Du musst noch...
Ah. Ach, so geht das.
Ah, ja.
Also quasi...
Vier Stück?
Oder drei Stück?
Und dann...
Qt, Chat, Node...
Node.
Irgendwie so.
Weiß gar nicht, konnte man überhaupt...
Dürfte man Underscores machen in Servernamen bei Hetzner?
Irgendwo war das nicht erlaubt.
Ist Ansible so was ähnliches wie Formen?
Nee, das ist was komplett anderes.
Formen ist ein...
Wie sagen sie offiziell?
Lifecycle-Management-Ding?
Im Prinzip ist Formen ein Web-Interface,
wo du Server anlegst und dann
von Puppet oder Ansible als Inventar
verwenden kannst.
Das kann man ganz ehrlich...
Das, was man mit Formen macht,
kannst du auch mit einem großen YAML-File machen.
Wir haben auf der Arbeit auch Formen.
Ich mag das Tool nicht sonderlich gern.
Aber vielleicht...
Wir gucken mal. Ich mach mal doch ein Reboot
und mal gucken, wie lang das braucht jetzt insgesamt.
Also...
Destroy hab ich schon.
Apply.
Wir sollten jetzt, wenn das funktioniert,
wir sollten 3 Server bekommen,
die QChat-Node haben.
Es kann aber sein, dass Underscore bei Hetzner
in Servernamen nicht erlaubt ist.
Ach ja, und jetzt ein weiterer Vorteil
von Terraform zu von Hand ist,
von Hand müsste ich die Server
der Reihe nach durchklicken.
Terraform kann das bis zu 10 Server gleichzeitig,
ich glaub, das ist Default-Setting,
parallel anlegen.
Terraform Apply.
Bam.
Oh. Okay. Alles klar.
Ich darf keine Underscores verwenden.
Creating.
Und ihr werdet sehen gleich...
Zack.
3 neue Cluster-Nodes
am Start.
So, und jetzt kommt natürlich
der DevOps Any% Speedrun, Leute.
Wir müssen mal kurz unsere Terraform-Sachen
für 2 Minuten unterbrechen,
weil mir ist gerade ein Problem eingefallen,
was mich theoretisch extrem abfacken würde.
Ja, genau.
Terraform
kann KVM,
allerdings nicht von Haus aus.
Es gibt aber ein Plugin, KVM.
Du kannst ESX machen.
Du kannst mehr oder weniger
die meisten...
Du kannst auch Docker-Container damit anlegen
und sowas. Also ja, kannst du lokal auch machen.
Ich finde das sogar eigentlich eine ganz coole Sache.
Ich meine, nur weil da Cloud dransteht,
kann man das lokal auch verwenden.
Was benutzt du für ein Desktop-Environment?
Das ist Manjaro.
Also nicht Arch, by the way,
als Manjaro-User sagt, man benutzt Arch
und
I3-VM.
So, jetzt checken wir mal, ob wir uns drauf einloggen können.
QChat, Node,
1, ssh, root, add.
Hehe.
Das ist der Reboot, den ich
eingebaut habe.
Jetzt muss ich mal kurz auf meinen Reboot warten.
Deswegen mag ich das mit dem Reboot
nicht, denn...
Jetzt kann ich das nämlich auch nochmal erklären.
Warum ich der Meinung bin,
muss nicht unbedingt sein.
Weil,
wenn man das System öfters
neu aufbaut, hat es automatisch...
Also ich würde das System gar nicht rebooten.
Ich würde das System einfach neu aufbauen,
wenn ich einen
Loadbalancer davor habe und Updates machen will.
Das ist
wahrscheinlich die einfachere Variante.
Gut, man ist dann halt nicht super
aktuell, sondern irgendwie
2-3 Tage alt, bis Hetzner
das Image aktualisiert.
Alter!
Kackel!
Da sind wir wieder.
Ich könnte das nutzen, wenn ein Reboot
indicated ist.
Ich weiß nicht, ob Terraform sowas kann.
Terraform, ssh...
Aber du hast das Richtige erkannt.
Wisst ihr, was mir gerade eingefallen ist?
Weshalb wir unsere Terraform
Sache für 2 Minuten mal unterbrechen müssen.
Und zwar...
Ähm...
Wir könnten jetzt
Folgendes machen.
Der Login ist
jetzt halt ziemlicher Abfuck.
Wir könnten jetzt aber sagen,
hcloud server list
und dann sehen wir hier, das sind unsere Server.
Wir könnten jetzt folgendes machen.
Passt mal auf.
Massive, Massive, Fifat.
Enter, Enter, Tilde...
Das kenne ich noch nicht.
Wir können jetzt Massive, Massive, Fifat
machen hier. Passt mal auf.
Bin mal gespannt, ob ich das so aus dem Stehgreif
was hinkriege. Wir könnten uns jetzt
automatisches Menü basteln zum Einloggen.
Also, ssh
root, add
Zack.
Ähm... Okay, Moment.
Das muss ich mal anders machen.
hcloud grep
Wenn's geht, zeige ich euch, was ich meine.
hcloud grep
Ähm...
Hä? Kann das...
Muss das das zwangsläufig
in CSV auflisten?
Das ist ja eklig.
Awk
awk
awk-syntax, Leute.
Print, Dollar, 2,
so, ah, okay,
nice, nice, six hat time.
Ähm...
Aber mehr, mehr...
Okay.
Du hast recht.
Nee, nicht tail,
nicht tail minus 3,
hat, nee,
oder war das tail, dass man die erste Zeile
abschneidet?
Oder tail, oder hat?
War das head?
Nee, Moment, ähm...
Head plus 1?
Warte mal.
Head, remove, first line.
Ach, tail minus n
plus 2, okay.
Alles klar, das wusste ich
aus dem Kopf nicht.
So, und guckt mal, nur mal so die, also, nur mal so
als Idee, was ich jetzt grad machen, was ich jetzt
grad machen will, wo ich grad...
Print, Dollar,
4.
Und jetzt, und jetzt, passt mal auf,
und jetzt haben wir ne Liste,
die wir auswählen können.
Das heißt, theoretisch könnte ich jetzt sowas
machen, ssh, root,
add, das da,
und jetzt,
hätt's da, mag
das nicht, dass ich das so oft abfrage, oder so,
glaub ich, und jetzt
kann ich auswählen, den Server,
und er macht automatisch
ssh-login. Ist das nicht
pock?
Was ist
FZF?
FZF ist ein
Command Line Fuzzy
Finder. Hat
auch, hat auch, äh,
ziemlich
viele Sterne, 45.000
Sterne mittlerweile.
Meine Güte.
Ja, du hast recht, wir können das,
wir können das noch verbessern, ja,
unser Skript ist noch nicht frei fertig genug,
ähm, wir machen das so,
wir, wir machen das mit
dem AWK raus, wir machen
so, FZF,
ja,
ähm, und dann
speichern wir das, keine Ahnung,
result, speichern wir da drin,
echo,
$result,
und da
machen wir jetzt das AWK hinter,
ich hoffe, dass das funzt, was ich da
jetzt mache, $2,
ne,
$4 war's,
ja, genau,
ja, das kann ich machen,
so, und das Ganze
jetzt, root, add,
Alter, haha, was ein Ding, ey,
funzt, okay,
also,
das ist tatsächlich ganz nützlich, muss ich
sagen, ich glaub, sowas sollte ich mir für die Arbeit
auch mal bauen, mit unseren ganzen SSH-Dingern,
ich kann es auf dem,
aus dem FZF wieder rauspipen,
du hast recht, ich kann's aus dem, aus dem FZF
wieder rauspipen, ich brauch das gar nicht
zwischenspeichern.
Stimmt.
Einfach so, ne,
hä, ich glaub, Hetzner drosselt mich schon,
jetzt krieg ich ne Auswahl mit allen
Nodes, die ich laufen hab, sag ich will mich
auf den verbinden, zack,
oh, das ist cool, das gefällt mir,
ich glaube, sowas muss ich mir, ich glaub,
sowas muss ich mir für die Arbeit bauen, für alle,
für alle Kisten, ich mein, ich hab dann halt
3000 Linux-Kisten in der Auswahl, aber das
macht ja nix, haha, das ist trotzdem
schnell durchsucht, okay,
edits, ZSH,
äh, alias,
äh,
SSH,
mir fällt, mir fällt grad nix anderes ein,
äh, gleich das da,
so,
hups, äh, wobei, war gar, war
gar nicht so schlecht, hups,
Moment,
w, warte mal,
hab ich irgendwas, ah,
nee, nee, nee, Moment, das ist jetzt natürlich bescheuert,
äh, wie, wie mach ich
ein,
warte mal, wie setz ich ein Alias mit,
muss ich das,
so machen, und dann
da drinne,
ups, warte,
SSH,
fuck, geht nicht,
aber ich, ich, ich hab irgendwas verkehrt
gemacht hier, SSH,
root, add, da fehlt
noch ne Klammer,
äh, wo,
was, ich muss die Dinger escapen,
nee, am Ende fehlt
keine Klammer, nee,
wo soll da ne Klammer fehlen, hier ist ne Klammer,
nee, warum sollte da ne,
was,
ah,
ihr habt recht, da,
da fehlt die Klammer,
Chat hat immer recht,
ah, oft, oft,
oft hat der Chat recht, das liegt
aber nur an den ganzen Prime-Subs,
weil die Leute mittlerweile einfach massive
high IQ haben, ok,
Funs, oder auch nicht,
funktioniert nicht,
nicht, nicht, nicht high IQ
genug gewesen,
ok, wisst ihr was, wisst ihr was,
ich, ich,
wir machen das jetzt anders,
mein AWK braucht tatsächlich,
ja, so, und ich denke,
dass ich das so machen kann,
an der Stelle,
also, Struggle is real, äh,
ja, ich glaube auch, ich glaube der Alias
tut's, tut's nicht, ja,
ok, Function,
Keckel, ey,
HSSH,
der Alias ist dazu,
zu schlecht,
für,
so, jetzt aber, ha,
ah,
ja, so, nice,
so ist das doch schon
besser, so, und jetzt kann ich jedes
Mal, wartet mal,
hier mal anladen, kurz
anmachen, und jetzt kann ich jedes Mal,
äh, repo,
repo, kekw,
S2 Service, da sind wir, Infra,
so, und jetzt kann ich jedes Mal, wenn ich
den Kram, guck mal, guck mal, wie, wie nice das ist!
das ist. Mal angenommen, ich mache jetzt, ich schmeiße
jetzt meine ganze Server-Infrastruktur wieder
weg. Bam, destroy.
Alle Kisten wieder weg. Zack.
Den Reboot mache ich, by the way,
weg. Der ist useless.
So.
Apply.
Lass ich jetzt die Server neu aufbauen.
Jetzt ändern
sich die IPs und jetzt ändern sich die
IDs und alles mögliche.
Und jetzt sind die Server neu aufgebaut.
Und jetzt sage ich einfach
H-S-S-H
und
zack, habe ich die neuen IPs drin und kann
sagen, ach, ich will da hin.
Okay, der Server ist noch nicht da.
War vielleicht
ein bisschen zu schnell.
Und jetzt habe ich schon die neuen IPs und alles
drin. Das ist sehr nice.
Das gefällt mir.
Ja.
Ja gut, das ist jetzt, weil es die IP tatsächlich
doppelt gegeben hat.
Nice.
Ne,
wir können
das anders machen. Wir können einfach
die Hardcore-Variante machen.
S-S-H-O
Strict Host Key Checking
gleich No.
Ich bin mir ehrlich gesagt nicht
sicher, was der Unterschied zwischen Off und No
ist.
Guckt und schon.
Ups.
Könnt ihr es einfach neu einlesen.
Und schon
geht es
trotzdem.
Weil das ignoert.
Okay, weiter.
Also, wir können jetzt
easy drei Server aufbauen und ihr seht,
wie zackig das funktioniert.
Was brauchen wir jetzt als nächstes? Und Server wieder gelöscht.
Gut, also,
lasst mal überlegen. Was brauchen wir denn? Loadbalancer brauchen wir
als nächstes, würde ich sagen.
Weil wir wollen ja sowas hier bauen.
Loadbalancer
und drei Applications. Und wir brauchen ein Netzwerk.
Wir brauchen
ein privates
Private Netz.
Das ist das.
Die Server selbst lasse ich mal
jetzt mal mit Public IP dran.
Weil, das ist
zum managen jetzt und zum ausprobieren
einfacher.
Aber eigentlich will ich die ja ohne Public IP haben.
Okay.
Also, wie baut man jetzt
ein Loadbalancer
mit dem Terraform?
Es gäbe jetzt ja mehrere
Varianten. Entweder
wir nehmen den Loadbalancer, den
Hetzner anbietet.
Oder wir bauen selbst ein, das mit
würde ich das nächste Mal machen.
Und jetzt zum ausprobieren einfach den von Hetzner nehmen.
Da können wir nämlich auch gleich gucken, wie gut die Terraform Integration ist.
Selbstbauen ist jetzt auch nicht so schwierig, wenn man sowas wie Kadi verwendet oder meinetwegen auch HAproxy. Wobei HAproxy müsste ich mir auch mal angucken. Da bin ich auch nicht so auf dem aktuellsten Stand.
Erstmal brauchen wir ein Netzwerk.
Oder Traffic oder irgendwas in der Richtung können wir nehmen.
Jetzt brauchen wir als erstes ein Netzwerk.
Ein Private, hier, Loadbalancer Network.
Server Network.
Oder kann man bei Server vielleicht
das Netzwerk direkt angeben?
Network.
Network ID.
Network Zone.
IP Range.
H-Cloud Network Subnet.
Ok, wie genau funktioniert das jetzt?
Network?
Wartet mal, nur mal, dass ich das jetzt richtig verstehe.
Man muss, man definiert das
Netzwerk.
Man muss, man definiert das Netzwerk.
Man muss, man definiert das Netzwerk.
Man nutzt sein Netzwerk hier oben.
Und hier unten definiert man dann quasi
eigentlich nur
in welches Netzwerk der Server
gehängt werden soll.
gehängt werden soll.
Also sprich, brauche ich sowas.
Ok.
Network Subnet.
Was ist Terraform?
Ein Tool um
Cloud Ressourcen, nicht nur Cloud,
um Ressourcen anzulegen.
Also um VMs zu erstellen, Container zu erstellen
und
mit den richtigen Settings anzulegen vor allem.
Also im Prinzip das, was du im Web Interface
von deinem Cloud Anbieter machen kannst,
kannst du so mit deinem
Config File reproduzierbar machen
und halt deutlich schneller als mit
als von Hand im Web Interface.
als von Hand im Web Interface.
Also, Resource H-Cloud Network.
Also, Resource H-Cloud Network.
Warum gibt es Subnet?
Achso, man kann
ein Netz anlegen und dann noch verschiedene
Subnets drin definieren.
Achso.
Das Tool nutzt die API.
Jaja, klar, sonst würde es ja gar nicht funktionieren.
Und der Terraform Provider ist auch offiziell von Hetzner.
So.
Also, das ist hier private.
Wie soll man das nennen?
C000 Dings.
Ja, passt.
Also gibt es das net.
So, und da kann ich
da jetzt sowas sagen, wie Network?
Ne, ne, das muss ich...
Network?
IP will ich nicht.
Network ID.
Hm.
Woher weiß ich denn die Network ID?
Woher weiß ich denn die Network ID?
Achso.
Also, quasi...
Also, quasi...
So?
Da bin ich ja mal gespannt, ob das so funktioniert,
was ich gebaut habe.
Also, von der Idee her sollte der jetzt das...
Also, der sollte folgendes machen, was ich hier...
Also, man kann hier auf Networks gehen.
Create Network.
Und da kann man ein internes Netzwerk für seine Server anlegen.
Also auf Cloud-Seite.
Was nicht mit dem Internet verbunden ist.
Und was auch nix mit dem Netzwerk daheim zu tun hat.
Und was auch nix mit dem Netzwerk daheim zu tun hat.
Sondern auf Server-Seite.
Auf Cloud-Seite ein Netzwerk anlegen,
wo die Server untereinander kommunizieren können.
Wo du dann auch beispielsweise
Server drüber ansprechen kannst,
die gar nicht im Internet hängen.
Also von der Idee her, wenn das jetzt funktioniert,
sollte der ein neues Netzwerk anlegen.
Und unsere drei Serverkisten
an dieses Netzwerk attachen.
Wenn ich das richtig verstehe.
Ist das ähnlich zu Ansible?
Es sind unterschiedliche...
Was ist denn das hier?
Ach, das ist... Ihr habt abgestimmt.
Ne, das ist ähnlich.
Aber vom Ansatz her
komplett anders gedacht.
Terraform ist dafür da,
um Server anzulegen.
Und Ansible ist dafür da,
um Server zu konfigurieren.
Also, wenn man größere Sachen hat,
ist die Wahrscheinlichkeit, dass man beides verwendet,
gar nicht so gering.
Und...
Du kannst mit Ansible aber halt auch
ein bisschen Sachen anlegen
und du kannst mit Terraform auch ein bisschen
Sachen konfigurieren.
Aber wenn du deinen Server
komplexer konfigurieren musst,
wenn du da drauf sagen musst, hey,
ich muss den Nginx installieren,
dort muss ich irgendwas austauschen,
in der Config-Datei da noch 20 User anlegen,
dann hier noch eine PHP-Anwendung hinpacken,
das über Ansible
und das Anlegen der Kisten über Terraform.
Oder aber
du brauchst es nicht so oft,
dann kannst du es auch über dein Ansible-Playbook machen.
Es hat gewisse Überschneidungen, aber
die...
Also, wofür es gedacht ist,
ist halt der Unterschied zwischen
das eine ist zum Konfigurieren gedacht
und das andere ist zum Anlegen gedacht.
Genau, du könntest beispielsweise,
ja, das könntest du machen,
du könntest natürlich, nachdem Terraform
den Server aufgebaut hat,
kannst du dein Ansible-Playbook darauf laufen lassen.
Ja, das wäre gar keine schlechte Idee.
Aber ich komme aktuell mit einem minimalst
Bash-Ding aus
für Server-Config.
So, jetzt gucken wir mal,
ob der jetzt das private Netzwerk anlegt,
ob das jetzt funktioniert.
Ich finde es blöd, dass das Destroy da hinten
als Argument ist.
Gibt es nicht auch so?
Okay, das ist praktisch, weil...
So,
das zahlt tatsächlich, das hat funktioniert.
Private Networks, da ist es.
Jetzt werden Server angelegt
und die Server sollten in das Netzwerk gepackt werden.
Schauen wir mal.
Gucken wir mal, ob das jetzt funktioniert hat.
A problem has occurred.
A problem has occurred.
Check your... Was?
Okay, was auch immer.
Scheint noch alles zu
funktioniert.
Okay, Server sind wieder da.
Networking...
There is no private IP.
There is no private IP.
Attached to network.
No networks available in the network zone
of the selected location.
Ich habe das Netzwerk im falschen Rechenzentrum
angelegt bei denen. Kann das sein?
Network ist angelegt
in...
Keine Zone?
Ich glaube, das ist broken.
Ich glaube, das ist kaputt.
Ich glaube, das ist kaputt.
Okay.
Ah, hier.
Destroy. Destroy.
Bam.
Siehst du, alles wieder weg.
Alles wieder entfernt.
Nicht klicken.
Braucht man ein Subnet?
Ich glaube eher, dass ich vergessen habe,
bei dem Netzwerk zu sagen,
Location oder sowas.
Ne.
Wo weiter?
Hm.
Vielleicht muss ich ein Subnet anlegen?
Kann das sein?
Ich kann gar keine Location
anlegen.
Ah, aber hier kann ich Locations anlegen.
Was wird denn bei
Hetzner berechnet? Quasi nix.
Die Server werden stündlich
oder so abgerechnet.
Also,
unterm Strich wahrscheinlich
ein paar Cent
oder so. Könnte sogar
sekündlich sein. Also, das kostet
nix im Endeffekt.
So gut wie nix.
Okay, das ist falsch.
Wie hab ich das gemacht? Typ?
Woher weiß ich denn
was es für Netzwerkzonen
gibt? Was ist denn, wenn ich das
im Webinterface anklicke?
Hier, EU Central, US East.
Ach, guckt mal,
hier legt er auch das Subnet standardmäßig an.
Okay.
Das heißt, ich muss auf jeden Fall ein Subnet
anlegen. Sonst wird das nicht
funktionieren. Äh, anders ausgedrückt,
wenn man die 24-7 im Monat durchlaufen
würde, was das kosten würde. Ah, 3 Euro
oder so, die kleinste Kiste.
Ohne IP.
So, guckt mal.
Ähm. Du willst
Private Networks haben, du willst keine
Public IPs haben. Wait a minute,
ist das teurer?
Hä?
Äh.
Ach nee, so rum. Äh,
3,56 Euro im Monat.
Die kleinste Kiste. Ich mein, mit der kleinsten
Kiste kannst du jetzt keine Bäume ausreißen,
aber, äh, wenn du, je nachdem was du
machen willst, reichen dir auch eine CPU und
2 GB RAM.
Also ich persönlich finde ja preis-leistungsmäßig
am besten die 3-Core-Kiste.
Drei Kerne? Also ich persönlich
brauch eher drei Kerne und vier RAM als
zwei und acht RAM, aber, also generell
kann man eigentlich sagen,
die hier und die hier, aber ich persönlich,
ich persönlich die hier. Also
das ist, das ist ehrlich gesagt meine Lieblingskiste.
Beispielsweise,
die sind 24-7 verfügbar,
ja. Du kommst,
du bekommst da auch einen Mail-Server
günstig drauf.
Also,
du kannst
das prinzipiell bei jedem
XP, ich werde ja noch nicht gesponsert von Headstart,
du kannst das, aktuell
nicht, du kannst das bei jedem
x-beliebigen Cloud-Anbieter machen.
Die Frage ist halt eher, ob man sich einen privaten
Mail-Server wirklich geben möchte.
Ne, das ist nicht außen
aufrufbar, das ist ein privates Netzwerk
für, zwischen deinen Servern.
Du kannst dann beispielsweise von Server A
nach Server B was kopieren
über ein privates Netzwerk, ohne dass du es über das Internet
kopieren musst.
Wobei, die würden es wahrscheinlich eh nicht rausrouten,
aber, ja. Und, du kannst
dementsprechend Server anlegen, die gar keine
Public-IP haben.
Meinst du Home Assistant, oder was?
Die würde ich aber nicht in die Cloud packen.
Also, ich weiß nicht,
E-Mail-Server selber hosten, ne.
Würde ich auch nicht machen.
Du musst es in die Cloud legen, da du keine
Alexa-Integration
Ne, du musst es doch nicht in die Cloud
legen, oder? Du musst, glaube
ich, dafür sorgen, dass Google von außen
auf einem speziellen Port drauf hinkommt,
aber dazu musst du es doch nicht in die Cloud legen.
Also, da würde ich mir was anderes überlegen,
als meinen kompletten Home Assistant in die Cloud
zu stellen, weil, dein Home Assistant muss an interne
muss doch an interne Systeme drankommen,
von da kommst du doch gar nicht hin. Und du willst
bestimmt kein Reverse VPN
machen.
Ja gut, du musst wissen, was du da machst.
So.
Also, wo sind wir jetzt stehen?
Private Network. Wir brauchen
ein Subnet, habe ich gelesen.
Sonst funktioniert es anscheinend nicht.
Also, das ist die komplette IP-Range.
Dann gibt es jetzt
H-Cloud Network Subnet.
Das ist dann
0
slash
ja, meinetwegen slash 24
oder so. Ja, machen lassen
wir es so. Type, was?
Type Cloud? Moment, da gibt es verschiedene Types.
Server, Cloud, V-Switch.
What the fuck?
Äh.
Was ist denn da der Unterschied?
V-Switch?
Weil hier kann ich den Type ja auch nicht
auswählen. Hm.
Gucken wir mal, was da der Unterschied ist.
Ach, das ist für irgendwelche
Hardwares, Root-Server-Kisten.
Ok, nee.
Das brauchen wir nicht. Ok, EU-Central.
Neues Netz. Soll mir
alles recht sein.
Ja, das ist
Qt Chat
Net. So.
ID.
Und jetzt muss ich da wahrscheinlich sowas
hier angeben. Ok, schauen
wir mal, ob es jetzt funktioniert. Apply.
Bam.
Okay,
jetzt habe ich keine Ahnung mehr, wie das funktioniert.
Jetzt weiß ich nicht, was ich
verkehrt gemacht habe.
Also das mit dem Subnet anlegen war alles
korrekt. Das hat er
richtig gemacht. Ah,
ich glaube, ich weiß was falsch. Nee.
Network. Da müssen wir noch mal Server-Config
kurz gucken. Server.
Server Network.
Hä? Network?
Subnet? Ja.
Ach so.
Man gibt nicht die Subnet-ID an.
Man gibt
die normale Network-ID
an. Aber woher weiß
er dann, in welches Subnet er soll?
Ja, ich will ja, dass er
automatisch was zugeordnet bekommt.
Ja gut, ich habe ja nur, ich habe
ja in dem Fall jetzt nur ein Subnet.
Ok, wir gucken einfach mal, was passiert.
Was?
Reference
to undeclared resource.
Ach so.
Ja gut, aber wenn es optional ist.
Ich muss eben noch auswählen, in welche
Subnets ich will, ohne eine IP
eingeben zu müssen. So, schauen wir mal,
ob das jetzt funktioniert hat. Source-Server ist da.
Networking.
Ok, hat funktioniert.
Alles klar.
Network private.
Da sieht man auch, da sieht man auch die Ressourcen, die zugeordnet
sind. Subnets und was
da drin ist. Nee, also es
funktioniert ja anscheinend jetzt. Ist ja alles in Ordnung.
Wobei, Monsieur, kann ich
nicht einfach sagen, ich mache ein Subnet,
was komplett
komplette IP-Range ist
und gut ist?
Jaja, dass der die IP-Adressen random
DHCP-Technik oder so vergibt,
ist schon klar. Die Sache ist nur die,
mal angenommen, ich hätte jetzt hier zwei.
So. Mal angenommen, ich hätte
hier zwei.
Und ich möchte jetzt, dass mein Server
hier raus was bekommt und nicht
da raus. Wie würde
ich ihm das denn jetzt sagen? Weil so sage ich ihm ja
nur, joine da rein.
Was jetzt gar nicht der Fall ist.
Das,
das können wir jetzt mal ausprobieren.
Es gibt Hetzner-Codes, ja, aber die sind abgelaufen.
Meinst du, er kriegt dann zwei?
Das kann man hier noch angeben.
Nicht, was?
Äh, achso, Moment. QChat-Netz
eins und zwei.
Gucken wir mal, was er macht.
Ich meine, guck mal, wie schnell das jetzt geht. Ach, fuck.
IP-Ranges
overlap. Äh.
Nee.
Bin ich jetzt blöd?
Da überlappt doch nix.
Da war noch ein Server-Network. Ja, das stimmt.
Nee, ich leg zwei
Subnetze an da drin.
Das muss doch eigentlich funktionieren.
Da, da überlappt doch
nix.
Das ist von zwei,
äh, von null bis 250.
Das ist von eins, null 250.
Das eine Subnet gab's
aber doch schon hier. Das sollte der aber eigentlich,
äh, das sollte der eigentlich
checken. Das sollte der
eigentlich kapieren. Du musst das nicht
vorher löschen. Destroy.
Bam.
Alles weg. Was ist das hier?
Es gibt noch Server-Network.
So, subnet.
Hä? Also das...
Also die...
Meinst du, der kann das nicht umbenennen?
Äh, ich denke, das
passiert jetzt wieder das gleiche.
Ja, ist wirklich alles weg.
Schauen wir mal.
Ja, weil, guck mal.
Das Netzwerk anlegen mit den zwei
Subnets, das funktioniert. Kein Problem.
So, und jetzt bin ich halt mal
gespannt, in welchem Netz die Server drinstehen.
Ja, okay, das mit dem Umbenennen scheint nicht
funktioniert zu haben. Ja, wahrscheinlich. Wahrscheinlich
war's das. So.
Guck! Die sind jetzt
random! Mal in eins, mal in
zwei!
Ich muss doch irgendwie an... Ich muss doch irgendwie
angeben können,
in welches Subnet mein
Server joinen soll. So passt
es, so passt es aber nicht wirklich, oder?
Null.
Ne, das ist,
das ist nicht so sehr der Zweck der Sache.
Ne, hab ich doch!
Passt nicht. Ist verkehrt.
Ach so, meinst du, nur eins von...
Ich will ja nicht zwei Adressen. Ich will alle im gleichen
haben. Will nicht zwei Adressen
haben. Das ist doch unsinnig. Das muss doch
anders funktionieren.
Also, hier legt er was an. Hier legt er einen Server
an. So, und hier macht er
was? Server-ID des
IP... Aber das konnte man doch direkt
auch bei dem Server auch vergeben.
Okay, das ist ne Sache, die check ich nicht.
...
Ähm, nicht zwangsläufig.
Nicht zwangsläufig.
Es könnte doch sein, dass ich zwei
verschiedene Clustergruppen anlegen will.
Ja, ich... Die
QChat-Nodes und die Ayaya-Nodes. Und
beide sollen unterschiedliche Subnetzes rein.
Aber beide haben das gleiche übergeordnete
Netz.
Kann schon sein. Aber letztendlich ist es wurscht,
weil...
Ich mach das einfach weg.
Und sag, der soll das komplette
Slash8 verwenden und who cares.
...
0 Slash8. Gut ist. Fertig.
Zack.
Gut. Also, das würde ich
sagen, das funktioniert.
Du musst noch an das
depends-on-hcloud-network-subnet
denken. Das...
Sonst versucht er die Server
gleichzeitig mit den... Sonst versucht er
das Netzwerk mit dem...
Gleichzeitig... Also, du meinst, ich muss
da reinschreiben hier noch...
depends... Ne, wo steht
das? Server...
depends-on...
Aha!
Ah! Verstehe.
Okay, das ist natürlich...
Das ist natürlich sinnvoll,
dass ihr die Server
auf jeden Fall erst anlegt nach
dem. Ja, okay.
Das leuchtet ein. Das...
Das lass ich mir gefallen. Also, wenn man hier... Also, sprich,
sag ich dem da jetzt... äh...
depends-on...
Warum hab ich das eigentlich nicht hier zu...
Depends hab ich hier nicht auf...
depends-on-hcloud-network-subnet
depends-on-hcloud-network-subnet
und dann das da?
Okay.
Das ist ne gute Idee.
Naja, die...
Die Sachen in Terraform sind relativ einheitlich.
Relativ. Manche Sachen sind halt
cloud-spezif... provider-spezifisch.
Aber das
unten drunter, die API, ist natürlich jedes Mal anders.
Je nach Cloud-Anbieter. Also, es sieht
aber ungefähr ähnlich aus. Also, wenn du bei AWS
was anlegst, hast du halt AWS-spezifische
Sachen drin. Aber User-Data hast du beispielsweise
bei ganz vielen für Cloud-Init.
Ja.
Also, es ist schon server-spezifisch.
Äh, provider-spezifisch.
Okay.
Was auch immer. Wir applyen das jetzt
nochmal. Jetzt sollten wir
drei Server haben.
Ein Subnet.
Und alle Server sollten da
dranhängen. Ja.
Network. Subnet.
Aber noch hat er nicht erstellt.
Da sind sie.
Jawoll.
QChat-Node 012
ist am Start. Perfekt. Nice.
Okay. Also, das funktioniert schon mal.
Jetzt müssen wir gucken, wie wir
Load-Balancer anlegen.
Six-Set. Six-Set-Time.
Wie legen wir Load-Balancer
an über die API? Also, wir wollen
ja, wie gesagt, sowas hier bauen.
Ein Load-Balancer vorne
und dann hinten drauf Load-Balanzen auf die
internen Server.
So, wie legen wir einen
Load-Balancer an?
Load-Balancer-Network.
Provides erhänzender Cloud-Load-Balancer-Network.
Private-Network.
Okay.
Ne, das brauchen wir nicht.
Das ist für einen...
Ne, ne. Das kriegen wir bestimmt.
Load-Balancer.
Target.
Nach welchen Kriterien soll er welche Last balancen?
Einfach der Reihe nach.
Aktuell läuft auf den Servern im Backend
ja noch gar nix.
Vielleicht sollten wir auf den Servern
irgendein Hallo-Welt
oder so starten.
Guck mal, wir können jetzt unser
SSH... Achso, Moment.
Doch. Komm, wir können unseren SSH-Wrapper
verwenden und uns drauf
connecten und uns
freuen, wie gut das funktioniert.
Ähm, auf welcher
IP sind wir jetzt?
Hab ich gar nicht geguckt.
Äh.
Wait a minute.
Wo sind wir hin? Connected.
Da. Okay, damals.
Upinstall
Engine N... Alter.
Engine X.
Warum hat er die Pakete nicht aktualisiert?
Gute Frage. Hab ich das rausgeschmissen?
Doch, der hat die Pakete aktualisiert.
Der schreibt... Der schreibt
dummes Zeug.
Der schreibt Blödsinn.
Der schreibt
Mist in den Output.
Vielleicht hab ich mich auch schon eingeloggt noch während
das lief. Keine Ahnung. Aber hat
funktioniert.
So, ich installier mal kurz den Engine X.
Und dann gucken wir, ob
ich die Hallo-Welt-Seite krieg, wenn ich da drauf
komm. Was?
Jaja.
Was zum...
Welcome to Engine X!
Okay, da sind wir. Wunderbar.
So, ich mach das auch gleich
über mein Terraform-Skript. Ich will bloß gucken,
dass es automatisch
äh, ohne Rückfragen installiert.
Aber wenn ich minus Y hinmach...
Ja, Moment.
Diese Abfragen sind ja mal richtig hängengeblieben.
Die müssen weg. Muss ich das
mit apt-get machen?
apt-get minus Y oder so?
Wie krieg ich das hin, dass er keine
interaktiven Abfragen macht?
apt-get yes.
Also doch minus Y.
Der fragt nach. Was ist das?
Export Debian Frontend non inter...
Seriously?
Okay, das ist mir...
Das ist mir neu. Das wusste ich
noch nicht, dass man das machen muss.
Das kenn ich nicht.
Checkt der das denn, wenn ich...
Okay, okay. Mal was anderes.
Mal was anderes.
Wenn ich sage...
Und es darüber mache...
Dann müsste das doch eigentlich
checken, dass ich kein interaktives Terminal
hab, oder? No.
Ja, das checkt er.
Das checkt er.
Dann wird das wahrscheinlich in dem Cloud
Init auch checken, weil er kapiert, dass
es kein interaktives Terminal ist.
Das probieren wir jetzt aus.
Ich glaube, ich brauche gar nichts.
Ich glaube, ich muss gar nichts machen.
Er checkt das nicht. Mal gucken.
Mal schauen. Mal schauen, ob das
jetzt klappt. Also.
Wir machen den Krempel nochmal weg.
Wie ist denn das? Ist das
apt-get upgrade?
Dass das ein bisschen einheitlich ist.
Oder war es dist upgrade?
Ne, Y
davor.
Ich verwende eigentlich schon ewig
apt-get. Weiß ich gar nicht, ob es update und upgrade
gibt.
Pull upgrade? Es gab auch noch
dist upgrade.
Gab es auch noch.
Das ist obsolet. Okay.
Ich glaube euch das jetzt, Chat.
So.
Er hat destroyed.
Und jetzt wird applied.
Den ganzen Krempel wieder hingestellt.
Jetzt gucken wir mal, ob wir einen nginx gleich drauf haben.
Aber das ist cool zu sehen, wie schnell das geht.
Oder? Ich meine, guck mal.
Wir haben jetzt innerhalb von 20 Sekunden
unsere Cloud-Umgebung. Okay, Cloud-Umgebung
ist
ist vielleicht etwas
übertrieben
das jetzt zu nennen.
Aber ich meine immerhin, da würden wir locker
zwei, drei Minuten rumklicken.
Oh. Ja.
Ist gut.
Ja, man weiß halt nicht so genau, wann es fertig aufgebaut ist.
Gibt es irgendwie die Möglichkeit
Terraform noch so eine Art
Health-Check zu machen? So nach dem
Motto, ähm
dass ich dann
also wisst ihr, dass ich sowas hier machen kann?
Touch? Keine Ahnung.
Kackel? Irgendwie. Und dann check ich
ob es die Datei gibt, weil
sonst nimmt er ja Server ins
Loadbalancing theoretisch schon auf,
die er noch gar nicht aufnehmen sollte, weil er noch gar nicht
fertig ist. Ja.
Das machen wir jetzt aber nicht. Wir deployen uns jetzt kein
Kubernetes.
So. Login.
Guck mal, er hat immer noch nicht gecheckt, dass er
der läuft immer noch im Hintergrund
mit dem Update.
Ne, Upget Full Upgrade
gibt's
anscheinend auch.
Ja. Sonst würde er meckern.
Der macht immer, der macht grad Full Upgrade gibt's
für beides anscheinend. Also ich hab eh
keinen blassen Schimmer, warum es
Uptitude und Upget gibt.
Debian Leute sind einfach zu
High IQ dafür.
Ja, du kannst beim Loadbalancing Health-Check
ähm definieren,
aber
ich müsste irgendwie,
dass Terraform das checkt.
Wobei, müsste ich
das? Ne, ich würde einfach die Anwendung als letztes
starten und gut ist.
Na, der RPM ist ja
noch abartiger. Also
RPM kannst du mich echt jagen mit.
So. Jetzt ist er fertig.
Netstat. Ist der
Nginx auf?
Nginx ist da. Ok.
Zack.
Webserver ist am Start. Ok.
Das Funst, also unsere Server
sind da. Ja, kann ich jetzt den
Loadbalancer da vorhauen?
Ok. Loadbalancer.
Loadbalancer mit der Hetzner Cloud.
Da muss ich die Server taggen, dass das
funktioniert. Also.
Gucken wir mal. Wie macht man
Loadbalancer?
Server my Server.
Ja. Also.
Der Loadbalancer
sollte auf jeden Fall als erstes
gebaut werden.
Kann ich sowas sagen, wie depends
on
chat
lb?
Weil
es wäre sinnvoll, wenn die Server erst
gebaut wären, wenn der Loadbalancer da ist.
Auf der anderen Seite, warum?
Ne, das ist Schwachsinn.
Umgedreht. Umgedreht
muss das sein.
Ne, ne, Server. Ne, ne, ne. Server-ID will ich nicht.
Server-ID brauche ich nicht. Ne, das kann man schon
parallel machen, weil wir haben ja Health-Checks.
Das ist egal. Das passt schon. Muss ich nicht.
Muss ich nicht machen.
Ne, Server-IDs will ich nicht. Ich will das über Tags machen.
Weil Server-IPs und Server-IDs
sind bescheuert.
Also. Bei Hetzner
Loadbalancer mache ich das so. Man kann
Ich zeige euch das mal, wenn man Loadbalancer
anlegt. Also das ist so das, was ich
am praktischsten finde. Wenn du Loadbalancer
anlegst. Ja. Netzwerk auswählen. Targets.
So. Und da kann man Label auswählen.
Und bei
dem Label kann man, man kann jedem
Server einen Tag verpassen.
Und dementsprechend muss ich nicht
die Loadbalancer-Config anpassen,
wenn ich neue Server hinzufüge. Also
zum Beispiel. Ich zeige euch das mal.
Von Hand jetzt. So. Wir geben
diesem Server jetzt ein Label. Wenn ich wüsste
wo man das hier jetzt macht.
Irgendwie hier oben.
Ach. Wo sind die? Hier. War das. Genau.
Label. Also ich kann jetzt zum Beispiel
sagen Keckel.
Oh. Bestes
Label überhaupt.
Und jetzt lege ich den Loadbalancer
an. Ich will aber kein
Hands-On in dem Fall. So. Jetzt lege ich
den Loadbalancer an. Private Network.
Ähm.
Ja. Services. Source. Destination.
Port 80. Round Robin. Alles ok.
Create.
So. Und jetzt
sage ich dem hier Services.
Oder ne. Targets. Label.
Und als Label will ich
äh.
Keckel. Äh. Warum ist
der down? Der sollte auf
Port 80 eigentlich ready sein?
Ist doch healthy.
Passt doch. So. Und ihr seht
jetzt ist ein Server da drinnen.
Und schaut mal.
Wenn ich jetzt. Also das
ist meine Loadbalancer Config.
Und wenn ich jetzt. Also hier.
Guckt. Wenn ich auf die Loadbalancer IP gehe.
Kriege ich Welcome to Nginx.
Das ist. Obwohl. Hier. Der Server hat die IP.
Und der Eingang. Also das hier.
Ist der Eingang. Und das andere ist der Server dahinter.
So. Und jetzt.
Deswegen ist das mit den Labels ganz cool.
Deswegen kann ich jetzt sagen. Ok.
Ähm.
Wir gehen jetzt hier in die Server Config.
Und ich hab jetzt einen neuen Server gebaut.
Und. Ich sag mal. Den da.
Und der kriegt auch ein Label.
Keckel. Bestes Label.
Und.
Jetzt. Seht ihr.
Die Loadbalancer Config. Hat sich.
Automatisch.
Den. Der zweite Node
geadded. Also sprich.
Ich kann Server hinzufügen. Und die kommen ins
Loadbalancing rein.
Automatisch. Ohne das ich die Loadbalancer
Config anpassen muss. Deswegen ist das mit
Labels deutlich cooler.
Man wird ja verrückt. Wenn
ihr immer das 1 zu 1 mappen musst.
So. Loadbalancer kommt weg.
So. Wir destroyen
das ganze nochmal.
Das kann man jetzt. Siehst. Jetzt kann man das
mega easy machen. Infrastruktur hoch
hochziehen und wieder löschen. Ok.
Also. Loadbalancer.
LB11. NBG1. Ist gut. LB11
ist der kleinste.
Mein Loadbalancer. Das ist der
QChat LB.
Was sonst?
So. Type Server.
Nein. Type Server ist falsch.
Type. Ähm.
Type. Wo steht es denn? Hier.
Ne.
Target.
Ach hier. Loadbalancer. Target.
Type Label
Selector. Ja.
Ok. Ok. Ok.
Also. Das muss ich jetzt
erstmal checken. Wie das gedacht
ist. Kann ich das Target nicht
hier drinne? Doch. Kann ich doch hier drinne.
definieren.
Moment.
Beide Leute.
Kann ich das Subnet auch hier drinne
definieren? Ne. Das geht. Das geht nicht.
Also. Loadbalancer.
Target ist äh. Type ist
in dem Fall
Label Selector.
Server ID gibt es
nicht. Aber
Use Private IP.
Ne.
Wollen wir eine Type?
Ach so.
Ist das. So. Ok.
Label. Ähm.
QChat
Note.
Ok. Das heißt ich muss
meine Server jetzt taggen.
Also Label. Ok.
Das müssen wir mal der Reihe nach probieren ob das funktioniert.
Also. Label Selector.
Also alle Server in den Loadbalancer
aufnehmen die das Label QChat
Note haben. Ähm.
Und Use Private IPs.
Ist wahrscheinlich ganz sinnvoll weil
meine. Uch. Das kennt er ja gar nicht.
Ne. Das ist im Target
muss das rein. Use.
Warum ist
das durchgestrichen?
Warum? Warum ist das
durchgestrichen? True.
Optional?
Ne. Das ist nicht
Deplicated. Wär ja auch
bescheuert. So. Und
das Netzwerk muss noch attached werden.
Das Netzwerk muss noch
attached werden.
Oh. Netzwerkzone.
Jetzt wirds. Jetzt wirds aber Advanced Network.
Netzwerkzone gibt's hier überhaupt
nicht zum auswählen.
Moment. Balancer.
Network Zone.
Network Zone of the required location
is set. Ach ne. Das ist
wo er sie die Public
IP anlegen soll. Ne. Das
ist was anderes.
Loadbalancer Network.
Vielleicht checkt er das
wenn ich. Wenn ich sage Use Private
IP.
Vielleicht checkt er das.
Mal gucken. Mal gucken was passiert.
Mal gucken was passiert. Apply.
Oh. Was jetzt?
Unsupported
Argument.
Label Selector.
Warum nicht? Steht doch hier
drinne.
Loadbalancer
Service gibt's noch?
Ah ja. Service brauchen wir auch noch. Wir müssen ja einstellen
was der Loadbalancer loadbalancen soll.
Ist natürlich auch noch sinnvoll.
Was eine Vereinswebseite an einem
Wochenende immer sehr viele Zugriffe. Wie könnte
ich mir da Performance dazu holen? Die DB und
Webseiten liegen zum Beispiel bei Hetzner Server XY.
Es ist die Frage wo
es Performance Probleme gibt.
Ist es das Netzwerk? Ist es die
CPU vom Server? Ist es die Datenbank?
Die einfachste Variante ist einfach
fettere Hardware.
Also da kannst du
Da kannst du nicht
viel schief gehen.
Also eine
Vereinswebseite kommt ihr an die Grenze.
Was habt ihr denn da für ein Verein?
Also ganz im Ernst.
Selbst mit dem allerkleinsten Server kannst
du hunderte User gleichzeitig
wahrscheinlich wenn es eine statische Webseite
ist surfen. Das juckt den überhaupt nicht.
Was ist das für eine krasse
Bestimmt
auf Java Basis oder so.
Also ich mein ja das wäre natürlich auch eine Variante.
Aber das ist glaube ich viel zu kompliziert
für sowas kleines.
Also das müsste. Gut.
Ich mein nachdem es eine Datenbank ist
ist halt die Frage ob es
vielleicht an der Datenbank liegt.
Weil du kannst natürlich 3 weitere
Applikationsserver davor packen.
Aber wenn es an der Datenbank liegt
macht es es dann nicht unbedingt besser.
Also du musst erstmal rauskriegen
woran es liegt.
Also wo es, warum es langsam ist.
Und dann kannst du dir was überlegen.
Wenn es nämlich an der Datenbank liegt
dann ist es relativ einfach.
Oder mehr RAM.
Je nachdem woran es hängt.
Und du kannst Server auch automatisch hoch
und runter skalieren mit Hetzner.
Aber da musst du sie für ausschalten.
Also du kannst
den Server so lassen wie er ist
und mehr CPU reinmachen und so das geht.
Aber dafür musst du ihn ausschalten.
Das ist dann nicht so sinnvoll an der Stelle.
Ansonsten müsstest du dir
Gedanken machen um Datenbankcluster
und da wird es dann wieder eklig.
Ich würde aber erstmal gucken
woran es denn liegt dass es langsam ist.
So.
Was hat er jetzt für Schmerzen?
Label Selector.
Warum ging das jetzt nicht?
Label Selector.
Loadbalancer ID. Achso.
Das Target habe ich doch reingeschrieben.
Wo ist denn das Problem?
Sag doch genau
ich darf das hier reinschreiben.
Loadbalancer Target.
Sag doch.
Label Selector.
Warum ist Label Selector hier nicht erwartet?
Der schlägt.
Der schlägt mir doch Label Selector.
Ne.
Hä?
Wait a minute.
Server ID?
Warte mal jetzt blicke ich nicht mehr durch.
Äh.
Ich muss eine eigene Ressource machen wahrscheinlich.
Ja tatsächlich.
Das habe ich aber noch nicht so genau gecheckt
wenn ich ehrlich bin.
Warum muss ich manchmal
eine eigene Ressource machen und manchmal
und manchmal darf ich das
Warum darf ich das hier inline schreiben?
Und manchmal nicht?
Und manchmal nicht?
Das leuchtet mir noch nicht so ganz ein.
Also brauche ich
Loadbalancer
Target.
Okay.
Ja das ist aber
eklig. Ich meine es wäre schöner wenn ich das
inline schreiben könnte.
Loadbalancer Target.
Cute Chat LB Target.
Type.
Label Selector.
Loadbalancer ID.
Loadbalancer ID.
Das da.
Server ID. Nope. Keine Server ID.
Use Private.
Ach hier darf ich das jetzt machen.
Das inline ist nur die Referenz
auf eine Ressource die du separat
erstellen musst.
Ach so.
Aber warum. Hm?
Aber
warum sollte ich das dann hier angeben
an der Stelle überhaupt?
Also das heißt das hier
bräuchte ich nicht.
Ich kann es im Prinzip so machen.
Ne. So.
So.
So. Und jetzt
kann ich das Target hier raus
lassen wahrscheinlich.
So. Und so
musst du. Okay. Bin ich mal gespannt
ob das so tut. Apply.
Oh. Oh.
Add Label Selector. Target Loadbalancer is not
attached to a network.
Oh.
Dann habe ich es verkackt. Okay.
Weiter. Dann muss
ich noch ein Loadbalancer Network.
Das ist aber schon. Also das.
Weiß ich. Die Syntax könnte schon
schöner sein. Was ist das?
Ich zeig es dir.
Ich zeig es dir gleich. Sobald es funktioniert.
Also ganz kurz. Du kannst mit Terraform
Cloud Ressourcen anlegen. Ohne das du den
Kram von Hand im Web Interface
klicken musst. Das ganze relativ schnell
und relativ automatisiert.
Aber irgendwie bin ich gerade
zu blöd das richtig zu machen.
Also was muss ich machen?
Cloud Balancer. Loadbalancer
Network.
Aber ich will doch gar keine IP angeben.
Ach ne. Network ID
gibt man einfach nur an.
Cloud und nicht Cloud
Ressourcen. Genau. Stimmt. Hast recht.
Jaja. So. Und hier muss ich jetzt auch noch
Moment. Moment. Hier muss ich jetzt auch noch
sagen. Bei dem Loadbalancer muss
ich auf jeden Fall sagen.
Depends on
Depends on
das Subnet hier.
Also sprich.
Der darf den Loadbalancer erst anlegen wenn das
Netzwerk für den Loadbalancer und die Server da ist.
Ok.
Hcloud Loadbalancer Target. Haben wir.
IP kriegt der Loadbalancer.
Das soll sich einer ausdenken.
Ist mir doch egal.
Network. My Network ID. So.
Private. Private Network
ist das.
Das ist aber schon. Also.
Da muss ich sagen. Das könnte
schon ein bisschen schöner
gemacht sein. Das finde ich sehr umständlich
gerade.
Also. Jetzt müsste es doch passen.
Der Loadbalancer hat
LB
Network.
Ne. Pulumi kenne ich
gar nicht.
Ist das. Ist das die.
Ist das
die. Der neueste. Der neueste
Shit. Pulumi vs
Terraform. Aber wahrscheinlich
hat Pulumi gar nicht die ganzen Provider
oder? Ach tatsächlich.
Ähm.
Ist das. Der Terraform
Provider. Quasi.
Haben die ein Modul das sie
Terraform Provider verwenden können?
Das wäre natürlich nice.
Was TypeScript
Python Ghost. Moment.
Man kann das in .NET programmieren?
Das wird mir ja gleich deutlich
sympathischer nochmal.
Ok Leute. Das probieren wir als nächstes aus.
Nicht heute. Aber das probieren wir.
Das probieren wir als nächstes aus.
Ich meine das ist doch cool. Wenn die Anwendungen
und das Zeug in der gleichen
Sprache programmiert ist.
Mal gucken ob es jetzt funktioniert meine
Config die ich gebaut habe.
Ja. Neue Streamidee.
Alter.
Loadbalancer is not attached to a
Network. Aber ich sage ihm doch attache
mal das Network.
Oder muss ich ihm sagen depends
on. Wait a minute.
Ok. Das ist schon echt kompliziert.
Also wie funktioniert
das jetzt. Also das Target
Dependet.
Dependet on.
So.
Weil. Das hier muss er doch
attachen jetzt.
Ich will nicht das der LB von den Servern abhängig ist.
Ja. Doch. Theoretisch.
Schon. Aber der soll
das ruhig parallel aufbauen dürfen.
Ach jetzt geht das. Oder wie?
Aha. Das war es. Ok.
Ich hätte es auch wirklich.
Ja. Ich könnte es wirklich nach den Servern machen.
Ok. Jetzt hat das funktioniert.
Loadbalancer.
QChat LB.
No Targets. Ok. No Targets
ist klar. Weil meine Server haben ja
noch keine.
Services hat es auch noch nicht.
Ok. Service müssen wir auch anlegen noch.
Boah. Das wird jetzt ein bisschen.
Das wird aber ein bisschen unübersichtlich.
Der Fedminister. Ach ne.
Der Medminister hat eine Frage.
Was hat er denn gefragt?
Ah. Wenn
die Server. Ja. Ja. Habe ich doch schon gesagt.
Könnte man machen. Ja.
Das Label. Ja. Das Label
muss noch sein. Aber das ist mir gerade ein bisschen
sehr umständlich. Weil
da musst du echt genau gucken was was ist.
Das hätte man schon
schöner machen können.
Ne. Mehr konnte man ja gar nicht
machen. Ja. Das müsste man
wirklich in mehrere Dateien aufteilen.
Loadbalancer. Sonst wie. Ok. Aber
Aber so. Das.
Moment. Wenn ich das in die rein.
Macht das Terraform von oben nach unten
wenn nichts definiert ist?
Target.
So. Und wie kriege ich da jetzt den Loadbalancer
Service hin? Dass das auch dann auf
irgendwas Loadbalanced?
Loadbalancer Service.
Ok.
Protokoll. HTTP.
HTTP.
Loadbalancer ID.
Ist der hier.
Ha. Cloud. Loadbalancer.
Der Cute Chat LB.
Muss man da ID hinten
dran machen? Manchmal ist es ID hinten
dran. Manchmal nicht.
Was macht man
mit Terraform? Cloud Ressourcen oder generell
VMs und
Container und Sachen automatisch erstellen
und anlegen lassen.
So. Protokoll. HTTP ist gut.
Port. Listenport 80.
Destination
Port. Ah. Ok. Wenigstens ist
es irgendwie halbwegs innovativ.
Intuitiv gemacht. Health Check.
Lassen wir erstmal. Haben wir gerade noch keinen?
Muss ich da auch sagen?
Depends on irgendwas?
Ne. Das wird es wahrscheinlich checken.
Das ist
also die Loadbalancer-Config finde ich
ein bisschen sehr
umständlich. Warum kann man das nicht einfach
alles in diesen Loadbalancer reinschreiben?
Was man da braucht. So. Service.
Ok. Da sollte jetzt ein
HTTP-Service hinzufügen, dass der
Loadbalancer HTTP loadbalancet.
Übrigens hier auch das coole.
Du musst es ja nicht jedes Mal destroyen und neu aufbauen.
Du kannst es auch applyen und schon ist es alles
Loadbalancers. Services.
Port 8080.
So. Und jetzt kriegen unsere Server
Label. Und zwar
Qt Chat Node kriegen unsere Server.
Label.
Das ist eine Liste.
Halla. Stand da. Ne.
Eine Liste.
Qt Chat Node. Ok.
Und jetzt. Also wenn
jetzt alles funktioniert.
Du brauchst das Depends on beim
Target nicht.
Doch. Ne. Ach ja. Das habe ich
das habe ich eben um
die Reihenfolge geändert.
Ok.
Wenn ich das jetzt applye. Oder auch
nicht. Was?
Labels. Map of Strings required.
Wait a minute. Was?
Äh.
Was? Label?
Map of Strings.
Äh. Wie macht man
ne Map? Ok.
Terraform Map of Strings.
Map.
Was? Aha.
Also.
So.
Oder Doppelpunkt.
Ah ne. Doppelpunkt.
So. Weil ich hab kein Value.
So. Oder. Oder.
Ach ne. So. Ok.
Apply. Nein. Falsch.
Label Value is not correctly
formatted.
Warum? Ok.
Das ist high IQ.
Es ist ein Doppelpunkt. Anstatt
ein Gleich. Oder ist es ein Gleich. Anstatt ein Doppelpunkt.
Äh.
Terraform Labels Map.
Mein Value darf nicht leer sein.
Dann haben die das aber doof
programmiert. Weil im
Webinterface darf er leer sein.
Muss da wirklich was drinstehen?
Da schreib ich halt
mal 1 rein. Oder so.
1. Ach das ist ok. Oder was?
Ok. Das ist
anscheinend erlaubt.
Ok. So. Und
jetzt haben wir im Loadbalancer
Moment. Loadbalancer
Mixed.
Wo ist der Health Check
kaputt Leute?
Ah ne. Ist alles da.
Ok. Es hat funktioniert.
Ach man kann das ganz weglassen. Wirklich?
Geht das? Ne. Dann
mag er nicht. Ne.
Das geht nicht.
Guck dann. Dann meckert
er hier schon rum. Und einfach
nur Gleich geht auch nicht. Dann fehlt
ihm was. Also anscheinend muss
man das wirklich so machen.
Aber es soll mir
recht sein. Ich mein.
Da könnte ich einfach jetzt hier nochmal den Index
einsetzen. Weil.
Weil. Ja.
Was? Null?
Null. Das ist ne gute Idee.
Vielleicht funktioniert das.
Null?
Wir sind ja hier nicht in JavaScript. Aber.
Ah. Das Null.
Ok. Auf die Idee wäre
ich nicht gekommen. Ganz ehrlich.
Es funktioniert aber auch nicht.
Es funktioniert
aber auch nicht.
Ne. Das checkt er nicht.
Ok.
Das ist. Das kapiert er nicht. Ok.
Ne. Dann. Dann mach ich jetzt doch das was ich vorher
vorhatte. So.
Soll das nicht ein Doppelpunkt oder ein Gleich? Das ist ne gute Frage.
Ob ein Doppelpunkt oder ein Gleich.
Ja. Das. Das funktioniert.
Ist egal.
Doppelpunkt oder Gleich.
Ja. Dann mach ich
Doppelpunkt. Alles gut. Nice.
So. Also das funktioniert. Und jetzt haben wir
in unserem Loadbalancer auch 3 Targets.
Das heißt wir sollten jetzt überall.
Oder auch nicht.
Ähm. Warum geht das nicht?
Ach doch geht.
Hat eine Weile gebraucht. Da sind wir.
Leute. Also.
Das Loadbalancen auf die Nginx
Standardseite funktioniert schon mal.
Gut. Also das ist.
Wobei ich ehrlich sagen muss. Also die Server
Config und so ist super. Nice.
Habe ich überhaupt keine Schmerzen mit.
Aber die LB Config ist schon.
Leicht. Leicht.
Paints champig.
Loadbalancer.
Service. Loadbalancer.
Target.
Das ist schon ein bisschen. Weiß nicht.
Naja. Ich meine.
Es gibt schlimmeres.
Ja. Also das ist ja immer noch
halbwegs übersichtlich.
Im Prinzip noch nicht mal 100 Zeilen. Und da macht unser ganze.
Oh. Jetzt ist.
Leute. Was ist hier los?
Fake News.
Es geht alles.
Stimmt überhaupt nicht.
Stimmt überhaupt nicht. Der Server ist noch da.
Der. Der.
Der Loadbalancer lügt. Alter.
Fake News. Komplett.
Stimmt nicht.
Servers. Da ist alles ab.
Alles ab. Und gut.
Der hat irgendeinen Health Check.
Verschluckt.
Der sollte hoffentlich aber
gleich wieder grün werden.
Was ist das?
Ja. Irgendwann machen wir nochmal Kubernetes.
Leute. Ich sehe schon. Komm.
Auch. Aber dann brauche ich erst wieder
das Hetzer Sponsorship.
Warum wird denn der. Warum wird denn der.
Nicht grün?
Auf welchem sind wir auf Node 0?
Wo ist das Problem hier?
Hat er den jetzt. Sag mal. Hat er den
Loadbalancer vielleicht geblockt?
Weil er zu oft drauf zugegriffen hat?
Oder sowas.
Ne. Nginx Log kann ich nicht aufmachen.
Wenn ich das Nginx Log aufmache.
Ne.
Also. Der Loadbalancer hat keinen
Bock auf Node 0.
Das interessiert den nicht.
Port 80 ist
unhealthy.
So. Mal gucken was passiert.
Wenn ich jetzt.
Also. Node 0 meint er ist kaputt.
Node 0 ist
debated out there. Wir machen den aus.
Moment. Ich bin auf Node 0.
Systemctl
Systemctl
Status
Nginx
Ist auch active.
Das heißt er sollte auch enabled sein.
Ok. Power off.
Und Power on.
Der Server ist online.
Ich weiß. Ich bin auch grad per SSH drauf eingeloggt.
Das funktioniert.
Aber der Loadbalancer ist
der Meinung. No Pass gibt es
nicht. Aber zum Glück sind die anderen
beiden da.
Node 0 ist wieder da.
Und jetzt ist der
Server oben.
Jo. Was hast du
für eine Tastatur? Irgendein Logitech
Dings.
Also.
Der Loadbalancer hat definitiv
irgendwelche Schmerzen mit meinem
ersten Node.
Und ich weiß nicht warum.
Kommt der denn über die private IP drauf?
Es wäre schon komisch.
Weil.
Ach jetzt ist er wieder cool.
Leute. Es ist alles gut. Es war anscheinend
gar nichts.
Es ist alles ok wieder.
Wunderbar.
So. Also. Können wir die Load aus
ihr.
Komm. Wir machen mal kurz ein bisschen.
Wir machen mal ein bisschen
Load. Schauen wir mal.
Gucken wir mal ob da irgendwas
nennenswertes. Ne da gehen wir.
Da gehen wir im.
Äh. In die Auslastungs
Crafts.
Oh. Eine Connection
pro Sekunde. Huiuiui.
Ok. Machen wir mal kurz ein bisschen
Test.
Äh.
HTTP.
Hey ist quasi
der geistige Nachfolger.
Von dem Apache
Load. Äh. Von dem Apache Load
Server Benchmark Tool.
Nur das das jetzt Multithreaded ist.
Und besser. Und. Und. Ich glaub sogar in Rust
programmiert. Die coolen Leute machen
alles in Rust. Ok. Hier haben wir 40 Connection
gehabt. Wollen wir das
Ding mal ein bisschen stressen?
Da muss ich mal kurz gucken wie viel
man hier machen kann. Number of requests
to run. Default ist 200.
Number of workers 50. Rate
Limit. Also ich mein wir können
wir können mal ein paar. Wir können mal ein bisschen mehr
Requests machen. Ich hoffe der Stream
kackt nicht ab bei 2000 Requests.
Läuft. Läuft der Stream noch?
Alles gut? Ja sind immer noch.
Moment. Der kriegt nicht genug parallel durch.
Kann das sein?
Der Stream ist überhaupt nicht weg. Ich hab doch Vorschau an.
Der Stream hat noch nicht mal geruckelt.
Ähm.
Number of requests to run. Number of workers to run.
50. Ist doch ok.
Ok. Weißt du was?
Bam. Gib ihm.
Oh ja. 3000.
Request pro Sekunde.
Ok da geht ein bisschen was.
Ich mein irgendwie nennenswert. Auslastung werden wir
hier nicht bekommen.
Na doch. Guck mal. Der Nginx Worker.
Wir haben 20%
CPU Auslastung pro Server.
Ich hab 50
Worker. Das sollte doch reichen oder?
Meinst du das ist zu wenig?
Meinst du das ist zu wenig?
50. Also
Keine Ahnung. 500. 500
Worker. Bam. Oh. Oh.
Oh. Oh.
Leute. Leute. Mein Stream kackt ab.
Can't wait.
Oh. Oh.
Das ist zu viel.
Haha.
Oh.
100.
Ok passt.
Aber alles gut.
Also gibt ordentliche Connections.
Funzt alles.
Der Server ist auch der Meinung.
Er ist jetzt bei 50% CPU Last.
Also der kriegt schon ordentliche
Der kriegt schon ordentlich was ab.
6000
Request pro Sekunde.
Ja. Please abbrechen.
Bam.
Der muss jetzt erst mal wieder
einkriegen. Guck mal.
Der Nginx Worker ist immer noch
Am schwitzen.
Moment.
Solltet ihr nicht eigentlich aufhören
jetzt Request zu machen?
Oder seid. Ihr seid auch am Start
jetzt oder? Chat. Seid ihr auch
am Start?
Ihr müsst am Start sein.
Von mir kann es
nicht mehr liegen.
Der Chat ist auch am Start.
Und spammt das Ding voll.
So Chat. Ihr könnt wieder
ausmachen. Ja. Ja.
Hört mal auf. Wir testen
es dann ob das mit dem Deployment
funktioniert.
Ich logge keine IPs. Ne.
Soll ich IPs loggen?
Ich darf gar keine IPs loggen.
Ich würde nie IPs loggen.
So.
Ja jetzt passt es wieder.
Chat hat aufgehört. Alles klar.
Ja also wir haben doch ganz gut.
Ihr meint aber guck mal insgesamt hatten wir
bloß 5 Mbit. Also es hält sich sehr
in Grenzen.
Übrigens Loadbalancer kann man live
scalen. Server kann man soweit
ich weiß nicht live
scalen. Genau.
Da musst du den Server nämlich ausschalten.
Ok. Wunderbar.
Also das funktioniert.
Nein ich logge
keine IPs. Wie kommst du da drauf?
Ich hab das natürlich alles entfernt.
Ähm.
So.
Was kann man als nächstes machen?
Muss gerade mal überlegen
wo wir stehen geblieben sind. Also wir haben jetzt
ich mein wir haben ja den Kram hier.
Ist eigentlich mittlerweile Hans Feld
am Start.
Der mir diese Gbait E-Mail geschrieben
hat.
Also das haben wir jetzt soweit gebaut.
Ich weiß nicht ob ich das mit dem Deployment
jetzt noch machen soll.
Lass mal kurz in mich gehen.
Wo sind wir denn stehen geblieben?
Wir haben das automatisch aufgebaut.
Wir gucken jetzt noch mal ob das automatische
aufbauen funktioniert.
Ein Zertifikat.
Ja du hast recht.
Natürlich wir wollen ein Zertifikat
haben. So machen wir
das. Das habe ich ja ganz
vergessen. Managed
Certificate. Ok.
Wie funktioniert das jetzt?
Ich mein Hetzner selbst kann dir
Let's Encrypt Zertifikate übers Web Interface
machen. Man könnte das auch selbst
machen und das Zertifikat dann hochladen
aber du kannst auch
sagen Services
Add Service
TLS Termination HTTPS
280 und dann kannst du ein Zertifikat
hinzufügen. Also
die meisten Zertifikate sind schon
expired. Aber man könnte
sich ja auch neue ausstellen
lassen jetzt. Ok. Managed
Certificate.
Übrigens to do.kekw.services
Es ist anscheinend
noch
keine. Es ist noch nicht so lang
her gewesen wo wir das verwendet haben.
Wait a minute. Expires?
Hä?
Wir haben das erst im April
gemacht? Ist es
so kurz her
dass wir Svelte geübt haben?
Kann gar nicht sein. Das haben wir doch letztes Jahr schon
gemacht. Ist auch egal.
Wie kriegen wir Zertifikate?
Hier. Hcloud
Managed Certificate
Managed Certificate
Und
das wird glaube ich jetzt ziemlich
big brain. Obtain a cloud
Hetzner Cloud Managed TLS Certificate
Ich will keine
Zertifikat uploaden. Ich will, dass die mir eins
ausstellen. Also die sollen mir
über Let's Encrypt eins ausstellen. Ich will das
Ich meine ich könnte das selbst machen.
Lokal mit irgendwie einem Certboard
und es dann hochladen.
Aber...
Wenn die das machen können, warum nicht?
Weil wenn ich Certboard machen will
jetzt beispielsweise für
kekw.services
Dann müsste
ich irgendwie über die
Da müsste ich mir erstmal einen
APKey für ein DNS besorgen und sowas.
Haben die was für DNS?
DNS?
Was ist denn R-DNS?
Reverse DNS
DNS?
Cert
Uploaded Certificate
Certificates
Ah ja gut.
Da könnte ich das Zertifikat, das könnte ich mir
lokal mit einem Certboard irgendwie ausstellen und dann
hochschieben.
Ja das könnte ich machen. Aber die sollen mir lieber
selbst mal eins ausstellen.
Resource Cloud Managed
Okay probieren wir es mal aus.
Also nachdem der
Loadbalancer da ist vielleicht
Gucken ob das funktioniert.
Domain Names
Wir wollen
Sternische Punkt kekw.services
Das ist ja
noch auf Hetzner umgebogen. Das müsste noch
funktionieren. War es
.service oder .services?
Hat jemand aufgepasst?
Na super.
Geil.
kekw.services
war es.
kekw.services
Discard
Also kekw.services Wildcard
Zertifikat
Ähm
Okay brauchen wir ein Wildcard Zertifikat?
Ist egal.
Für was sind
die Labels? Jetzt blick ich nicht
ganz durch wie das gedacht ist.
Domain Names
Zertifikat will be obtained.
User defined Labels
should be created with. Ach so.
Das ist das ich es dann einfacher wieder finde oder
wie? Nö ich brauch kein Label.
Ne Moment. Oder
ist. Da bin ich mir jetzt gar nicht
so sicher ehrlich gesagt wofür das da ist.
Egal. Apply.
Wir probieren das jetzt einfach mal aus.
Was er macht.
Apply. Gucken was passiert.
Mehr als
Let's Encrypt für die Woche gesperrt werden kann ich nicht.
Zertifikat
managed. Creating. Okay.
Das dauert jetzt ein bisschen.
Der muss ja diesen ganzen Let's Encrypt
Zertifizierungskram da
durchmachen. Okay
Creation complete. A service
for the given source port is already defined.
Ich weiß du sollst es ja auch
nicht neu anlegen. Kekl alter.
Okay.
Ist jetzt ein wenigstens ein Zertifikat da.
Oh. Habe ich die Services
Oh ich glaube ich habe die Services
gerade gekillt.
Aber hätten wir dann theoretisch ein
TLS Termination
Zertifikat. Ach hier guck dir mal.
Managed Cert. Da ist es doch.
Aber das sollte nicht
Managed Cert heißen. Managed Cert ist ein
ziemlicher Kackname. Ich muss bloß aufpassen
Leute. Ich darf nicht so viele Zertifikat
also Let's Encrypt hat jetzt
relativ großzügige Limits aber
halt doch
hat schon halt
Limits.
So. Das Zertifikat heißt
Qt Chat
Cert
So.
Und jetzt müssen wir
auf den Loadbalancer Service
auf den Loadbalancer Service
und dem sagen, dass der
dieses Zertifikat verwenden soll. Also wahrscheinlich
hier
Hier. Dem muss ich nämlich sagen, dass er Zertifikate
verwenden soll. Und
dementsprechend muss ich das Zertifikat
vor dem Service erstellen
weil ansonsten wird das nix.
Was genau ist ein Wildcard Zertifikat eigentlich?
Das ist ein Zertifikat was für alles
gültig ist unterhalb von kekw.services
für Sternchenpunkt
kekw.services. Normalerweise würdest du
oder normalerweise würdest
du das Zertifikat ausstellen für diese
Domain. lul.kekw.services
Dann bräuchtest du für jede
Domain ein extra. Ich meine können wir an der
Stelle eigentlich jetzt auch mal machen ehrlich
gesagt.
Wir können dann auch noch ein DNS
Eintrag machen falls das über Terraform
geht. Ja DNS Eintrag. Das muss ich
mal noch. DNS.
Muss ich mal gucken wie wir das machen.
Ja wir stellen uns ein Zertifikat hierfür
aus. Ja also wir haben jetzt hier irgendwie
Hello.
Hello.kekw.services
Haben wir jetzt.
Und die Label
brauche ich nicht. Die sind unsinnig.
Und wie kriege ich denn jetzt hier den
das Zertifikat
da rein.
Also Protokoll kann http
https sein. Listenport
muss logischerweise 443 sein.
Destinationport port 80.
Wo sich nur
Cuties rumtreiben dürfen. Ist doch so.
Chat oder ist das hier nicht so.
Ich dachte hier sind einzig
und alleine Cuties
unterwegs. Oder oder
nicht. Jetzt
enttäuscht mich nicht Chat.
Chat hat kein Bock was zu zu sagen.
Also.
Deswegen lurke ich nur.
Vielleicht liegt es daran ja.
Vielleicht hast du Angst ausgeschlossen
zu werden aus dem Cutie Chat.
Hälfte
Weep Hälfte
Giga Chat.
Ganz bestimmt ja.
Manche Leute sind Giga Chat und Weep in einem.
Geht das
überhaupt.
Da haben die Nemers was dagegen.
So wo gebe ich denn jetzt hier das Zertifikat an.
Enable
Protokoll Support.
Was auch immer.
Certificates hier.
List of IDs from Certificates with
Loadbalancer. Ok.
Also gebe ich jetzt hier
Redirect http. Ja das wollen wir auch.
http support
Sie wollten hinschreiben https supports
wahrscheinlich.
Die wollten https support schreiben.
Also Certificates kann ich
da jetzt hinschreiben.
Cert. Ne.
Hm.
Gibt es hier angeblich gar nicht.
http supports
the following fields.
Wie http. Kann ich
einfach http jetzt.
Ok das finde ich irgendwie.
Das habe ich noch nicht so genau kapiert.
Wann man Sachen hier inline schreiben darf.
Und wann man extra Ressourcen
anlegen muss. Ok.
http supports
fields. Ok.
Also.
Certificate.
Oder das muss sogar https sein.
Redirect http.
Certificates.
Und da jetzt
eine Liste mit den IDs.
So. Die Liste
von den IDs ist ja
hcloud.managezertifikat
cutechatcert.
Für was ist reverse DNS gut?
Naja. Für was ist DNS gut?
DNS ist gut um Namen zu
IPs aufzulösen.
Und jetzt bist du dran Logical.
Für was ist reverse DNS gut?
Bei DNS löst du Namen zu IPs auf.
Was machst du mit reverse DNS?
Du hast es falsch gelesen. Du hast reverse Proxy gelesen.
Also was Lithium schreibt ist
Schwachsinn. Musst du dir nicht merken.
Also. DNS löst
Namen zu IPs auf.
Und reverse DNS löst IPs zu Namen auf.
Man muss aber sagen.
In DNS kann
ähm
Ein Name
Kann im Zweifelsfall
mehrere
IPs auflösen. Ja.
Zu mehreren IPs.
Aber was nicht geht ist.
Du kannst nicht eine
IP zu mehreren Namen
reverse auflösen lassen.
So. cutechatcert
destination port
So. redirect
redirect http
true 0w
Ok. Wenn jetzt alles
funktioniert Leute.
Sollten wir
gleich ein Loadbalancer haben mit
gültigem Zertifikat.
Und dann fehlt uns noch der DNS.
Apply
Ach fuck. Na super.
Das wäre ja zu einfach.
Incorrect attribute.
Zertifikat. Achso. Punkt ID fehlt.
Punkt ID.
Aha.
Modifications complete.
Was macht der Loadbalancer?
Discard changes.
Der Loadbalancer macht noch gar nichts.
Warum legt der
neue IPs an? Hä?
Ok. Ich sag nix.
Still creating.
Ja. Das Zertifikat erstellen dauert 30-40 Sekunden.
So.
Creating. LB service. Alles klar.
Hat funktioniert.
So. Da sind wir.
Services.
Ja. Und.
Wo?
Ja. Der braucht kurz.
Der Heißkater ist reingedrückt.
Wo sehe ich denn jetzt die Zertifikate?
cutechatcert. Da sind wir.
Zack. Funst.
Das wird sich
gleich wieder erholen hier.
Geh ich mal von aus.
So. Wunderbar.
Jetzt fehlt bloß noch DNS.
DNS.
Aber das funktioniert wahrscheinlich
nicht. Wo war jetzt
Hetzner Cloud Reverse Entry?
Ähm.
Ne. Ich brauch DNS Einträge.
Terraform
Hetzner DNS.
Hetzner
DNS Record.
Vielleicht gibt es die hier. Guck mal.
Hetzner DNS Record Resource.
So. So. Was gibt es noch bei Hetzner?
Ach. Das sind jetzt.
Das sind jetzt
User Dinger.
Hetzner DNS.
API Token. Hetzner DNS API Token.
Okay. Das hat mit der Cloud nichts zu tun.
Ne. Dann kann ich das so nicht machen.
Aber was ich machen kann ist
jetzt von Hand den DNS
Eintrag zu machen.
Chat. Ihr müsst mal kurz weggucken.
Ich bin mir nicht ganz sicher was man sieht.
Wenn ich den.
Ich bin mir nicht ganz sicher was man sieht.
Wenn ich die DNS Settings aufmache.
DNS Settings.
Ne. Man sieht gar nichts.
Man sieht. Man sieht überhaupt nichts.
Nichts. Nichts Schlimmes.
So.
Display.
Ne. Man sieht überhaupt nichts Schlimmes.
Also. Queque Service. Können wir hinzufügen.
Gut. Das müsste man
halt gucken wie man da
Hetzner DNS
API.
API Zugriffstoken erstellen.
Okay. Das gucken wir uns
Das gucken wir uns das nächste Mal.
Also das nächste Mal muss ich mal aufschreiben.
Stream Ideen.
Ähm. Hier. Pulumi
hieß das was?
Terraform Alternative
Hetzner DNS
API Terraform
Ja. Weil wir sollten die Loadbalancer
schon automatisch in DNS aufnehmen.
Zumindest was wir jetzt machen müssen
ist folgendes.
Ich muss die IP vom Loadbalancer
nehmen. Die da.
Public IP vom Loadbalancer.
Und ein A-Record anlegen. Und zwar
für. Was? Für Hello
Queque.Services
Also A-Record
und die IP. Ach guckt mal da.
Ah. Den Loadbalancer
kann ich aber nicht.
Den Loadbalancer kann ich aber nicht auswählen.
Die Nodes kann ich auswählen.
Den Loadbalancer kann ich nicht auswählen.
Ne. Okay. Das ist. Das ist.
Das müssen sie noch anpassen.
Weil ich will ja nicht auf den Server Loadbalancen.
Ich will ja auf den.
Auf den Loadbalancer auflösen.
So. Und jetzt müsstet ihr gleich.
A-Record
Jetzt müsstet ihr gleich
von euch aus.
Wenn das auflösen geht.
Noch. Noch löst er nicht auf.
Oh.
Ich habs auch falsch gemacht.
Es ist Hello.Queque.Services
Alles klar.
Aber kaum macht man das richtig. Funktioniert's auch.
Haha. Auflösung geht.
Ich selbst kann es
noch nicht auflösen.
Warum nicht?
Aber Google. Moment.
Eben konnte es Google noch auflösen.
Okay. Das ist noch nicht so ganz
propagated würde ich sagen.
Geht's bei euch schon?
Was sagt Cloudflare dazu?
Cloudflare hat's schon
gecheckt.
Wie kann ich den lokalen
Linux Clear DNS Cache
Was?
System D Resolve?
Ne. Ich hab kein System D Resolve.
Äh.
Weiß ich auch aus dem Kopf nicht.
War das Arp? Arp minus Dings?
Oder Ubuntu?
Ah. Wunderbar.
Ja. Sag mir wie's geht.
System D Resolve?
Weiß ich nicht. Anscheinend macht's das.
Ich hab doch kein System D Resolve.
Ne.
Ich hab keine Ahnung.
Du kommst auf die Default-Site.
Ja. Das ist richtig.
Ping.
pinghello.kegw.services
Hmm.
Also Leute. Aus irgendwelchen
Gründen.
Hab ich bei mir irgendwelche dummen
Weiterleitungen für kegw.services?
Hab ich in meinem
Hab ich vielleicht in meinem DNS
lokal Schwachsinn gemacht?
Sekunde.
Ich glaub nicht, dass es
Ich glaub das ist mein Router.
Der den Kram gecached hat.
Der DNS in meinem Router
hat das Ding gecached. Wart mal. IP
DNS Cache
Flush Cache
Ping
Fuck. Warum kennt
der das nicht? Der sagt
das ist Unknown. Und ich verwende
als Upstream den Google DNS.
Hä?
Das muss ich nicht verstehen, oder?
Ich hab keine Ahnung.
Ne, mein Windows löst das auch nicht auf. Warum nicht?
Aber bei euch geht's, oder was?
Irgendein
DNS bei mir auf dem Weg hat das gecached,
dass es das nicht gibt.
Das ist natürlich auch
toll. Gucken wir mal im Browser.
Hello.kegw.services
Nö.
Also ich darf meinen eigenen Kram nicht
aufrufen. Das ist natürlich auch geil.
Ne.
Ich seh schon in meinem Router, dass es Unknown ist.
Also sprich.
Google DNS oder so.
Hat das...
Ja guck mal, der Google DNS, der antwortet auch mit.
Der Google DNS ist sich
noch nicht einig, was Sache ist.
Der weiß es noch nicht.
Gucken wir mal.
Manchmal hat er, manchmal hat er nicht.
Naja, dass er...
Keine Ahnung. Gut.
Ach jetzt. Gucken wir mal.
Jetzt hat er es glaube ich kapiert.
Jetzt hat es auch der Google
DNS gecheckt. Okay.
Wo ist mein Router?
Da werfe ich es jetzt auch nochmal raus.
Okay.
Ping.
Ach jetzt funzt es. Okay.
Das war jetzt ja der größere Akt.
Kegwait.
Jetzt funktioniert es.
Okay Chat, ich muss mal
ein paar Fenster zumachen bei mir in der Vorschau.
Das ist definitiv
zu viel. So.
Okay das funktioniert.
Jetzt geht es bei mir auch. Und wir müssten
ein gültiges Zertifikat haben. Ja.
Guckt. Gültiges Zertifikat.
Connection is secure. Let's encrypt.
Ich meine es ist die Standardseite. Okay.
Meinetwegen. Lass es mir jetzt gefallen.
Also mit dem Deployment gucken wir uns dann
tatsächlich das nächste Mal an.
Ich bin ja schon mit 3 Stunden 18 wieder on.
Das ist schon schön lang.
Aber ich finde es nicht schlecht.
Also das ist nice. Das gefällt mir.
Jetzt bin ich mal gespannt, was der macht.
Was hat der denn für Schmerzen mit dem ersten
Service?
Was hat der mit diesem einen Node für Probleme?
Ich meine ich wette mit euch der Node funktioniert.
Vollkommen normal. Gar kein Problem.
Ich kann das ins Repo pushen.
Ja. Das hier kann ich pushen.
Git. Git Status.
Jaja.
Ähm.
Die. Was ist denn?
Hm. Wie macht man das jetzt richtig?
Terraform. Git.
Ignore.
TFState. Terraform.
Genau. Das brauche ich.
Ähm. Gibt es die Möglichkeit,
das Terraform Zeug vielleicht
in einem anderen Verzeichnis auszuführen?
Na gut.
Git Add. Machen wir mal Punkt.
Jetzt sollte der nur das
Verzeichnis. Ah ne. Der hat den anderen
Krempel auch mit geaddert. Das ist natürlich bescheuert.
Das ist natürlich doof.
Äh. Äh. Äh. Staged.
Ne. Äh. Git. Oh. Wie war das?
Äh.
Minus. Äh. Staged.
Git Reset.
Minus. Minus.
Staged.
Irgendwie so. Ne.
Oh Gott. Äh.
Git Add.
Wie macht man Git Add rückgängig
und nur Git Add.
Ne. Ne. Das ist mir. Das geht alles.
Git Rm. Minus. Minus.
Cached. Es ist Minus.
Minus. Staged.
Ich dachte auch, dass es Git Reset. Minus. Minus.
Staged ist. Ist es aber nicht.
Oh. Nicht Restore.
Nein. Nein. Nein.
Ich meine. Natürlich.
Das funktioniert. Es geht auch.
Ja. Also ich kann. Aber das kann ja nicht Sinn und Zweck.
Das kann ja nicht Sinn und Zweck der Sache sein.
Ja. Weil das.
Weil das alles.
In ein Repo soll. Das hat auch keinen Sinn.
Wenn ich den Krempel jetzt über.
50. 50. 50 Dinger verteile.
Ach so.
Ich bin jetzt echt verwirrt.
Wie das richtig gewesen ist.
Ich meine. Wir können einfach.
Wir können einfach den Krempel raushauen hier.
So. Wunderbar.
Ich will ja alles raushauen.
Okay. Wir brauchen ein ordentliches
Git Ignore.
Git Ignore.
Ne. Git Reset Punkt.
Reicht nicht.
Also. Infra. Slash.
Also hier. Wir brauchen das Git Ignore
File einfach davon. Easy.
Und wir schmeißen das
Git Ignore weg.
Git Ignore.
Machen neues.
Git Ignore.
Da pasten wir den Shit rein.
Gutes.
Add.
Ignore.
Jawoll. Das sieht gut aus.
Jetzt will er diesen ganzen Müll gar nicht
adden.
Terraform Lock?
Was ist das?
Das soll da definitiv auch nicht rein.
Siehste. Das Git.
Oder soll das da rein?
Soll das da rein?
Was steht denn da drinnen?
Ach ist das. Ist das quasi die.
Meine Dependencies oder. Oder. Hä?
Okay. Ne. Das wollen wir dann doch.
Mitnehmen.
Dann. Dann wollen wir das doch.
Okay. Also er addet das.
Den Controller.
Git Ignore.
Main TF.
Die API Keys lässt er aber glücklicherweise
raus. Das.
Das muss ich aber noch da rein schreiben.
So.
Nicht das er da auf blöde Ideen kommt.
Git Add. Minus A.
Bam.
Okay.
Gut.
Commit. A. Minus M.
Hackle.
Beste.
Git Lock. Minus 1. Minus.
Name. Only.
Zeigen was er Committed hat.
Ja. Die Main Terraform rein. Das Lock File.
Git Ignore. Irgendwie diesen neuen Service.
Was auch immer ich da dran gemacht hab.
Wann wird die Prediction aufgelöst?
Kurz bevor ich den Stream ausmache.
So. Okay.
Was wir jetzt nochmal probieren ist.
Wenn ich das jetzt.
Was hat der für Schmerzen.
Mit dem ersten Note man.
Vielleicht muss ich doch.
Irgendwelche Health Checks angeben.
Services.
Wo gibt man die Health Checks an?
Health Check.
Ja.
Ist eigentlich richtig.
Ist vollkommen okay.
Proxy Protokoll.
Äh.
Vollkommen in Ordnung.
Das ist ein anderer.
Was ist das so?
Das versteh ich nicht.
Zumindest wir sollten jetzt noch.
Discard Changes.
Also wir stoppen jetzt mal einfach alles.
Destroy. Bam.
Jetzt ist alles weg.
Ich hoffe mein Zertifikat ist noch da.
Oh nein.
Der macht das Zertifikat auch weg.
Das ist doof.
Dann läuft man relativ schnell in Let's Encrypt Limits.
Wollen wir mal kurz gucken.
Ob wirklich das Zertifikat weg ist.
TLS bye bye.
Das ist wirklich weg.
Gibt das irgendwie die Möglichkeit.
Was zu protecten.
From Deletion.
Ne das ist.
Das ist pro Domain.
Terraform.
Ich hab vorhin irgendwas mit Life Cycle Hooks gelesen.
Dass man ihm sagen kann.
Ne Create Before Destroy.
War das nicht.
Prevent Destroy.
Achso ne.
Dann gibt es ein Error.
Aber das ist nicht das was ich haben will.
Prevent.
Destroy.
Certificate.
Ich glaube das muss man dann anderweitig machen.
Und kann das nicht in dieses Playbook.
Reinschreiben.
Da müsste ich mir was überlegen.
Aber wir schauen jetzt mal.
Ob das komplette Neuaufbauen.
Ordentlich funktioniert.
Eigentlich wisst ihr was ich will.
Ich will das der nur guckt das das Zertifikat da ist.
Aber es nie löscht.
Sowas gibt es aber wahrscheinlich nicht oder.
So Add Only.
Mit State AM aus dem State löschen.
Five Head Time.
Da gibt es bestimmt was.
Wie das besser funktioniert.
Ich will ja kein existierendes benutzen.
Ich will ein neues hinzufügen.
Wenn das noch nicht da ist.
Aber er soll beim Down das nicht löschen.
Also ich glaube.
Ich muss das anderweitig machen.
Ich muss das selbst generieren.
Und dann kann ich genau.
Dann kann ich eins hinzufügen.
Anderweitig.
Jaja.
So löscht der das halt automatisch.
Prevent Destroy.
Certificates.
Da steht doch gar nichts über Zertifikate drinnen.
Cake Wait.
Ja das ergibt keinen Sinn.
Das stimmt schon.
Das muss ich anders.
Ich muss das selbst.
Ich muss das selbst mir generieren.
Mit einem Zert Button.
Und dann uploaden.
Irgendwie so.
Da muss ich mir was überlegen zu.
Aber ich werde den Kram jetzt nochmal hochladen.
Und gucken ob jetzt alles funktioniert.
Mit dem Anlegen.
Aber den Loadbalancer.
Ganz im Ernst.
Den Loadbalancer machen wir nach den Servern.
Also quasi.
Diesen ganzen Krempel.
Loadbalancer.
Wenn der Server.
Fertig ist.
Depends on das Netzwerk.
Ist tatsächlich sinnvoll.
Und jetzt.
Das können wir jetzt hier.
Depends on.
Wie habe ich das?
Einfach nur Node.
Benennen wir um.
Depends on.
H-Server.
Gut.
So und.
Da können wir das nämlich weg machen.
Weil die Server ja schon dependen an das Netz.
Oder kann ich das weglassen.
Wenn das danach kommt.
Werden wir gleich sehen.
Ich habe ja auch gesagt.
Ich soll das besser angeben.
Na schauen wir mal.
Also Apply.
Mal gucken ob das jetzt alles funktioniert.
So.
Create, create, create.
Server create.
Ja Server.
Createn.
Creation complete.
Netzwerk ist angelegt.
Loadbal-
Was?
Da drauf.
Was hat er jetzt denn für Schmerzen?
Add label selector.
Target loadbar is not attached to a network.
Warum nicht?
Muss ich wirklich sagen?
Depends on?
Ja.
Anscheinend.
Und wo hat er jetzt das Zertifikat her?
Wait a minute.
Das Zertifikat ist doch noch da.
Hat Hetzner das Zertifikat gecached?
Weil das ging definitiv zu schnell.
Das ging definitiv zu schnell.
Die haben das Zertifikat irgendwo gecached.
100 pro.
100 pro.
Unhealthy.
Oh jetzt ist gar nichts drinne.
Ja weil noch kein Nginx installiert ist.
Das wird jetzt gleich grün erst.
Ja.
Das muss jetzt erstmal.
Jetzt sollte das gleich checken, dass es wieder grün ist.
Wobei ist mir egal.
Ich destroy das jetzt nochmal.
Und guck ob es jetzt wenigstens durchläuft und funktioniert.
Kannst du nicht das Initscript?
Doch das würde ich gerne. Aber ich weiß nicht wie.
Ich würde gerne sagen hier.
Warten.
Bis das durch ist.
Ich weiß bloß nicht.
Okay warte mal.
Terraform wait for cloud init.
Normalerweise würde das anders funktionieren.
Das macht ja eigentlich auch keinen Sinn.
Normalerweise hätte ich einen ordentlichen Health Check.
Der einfach checkt.
Slash Health und dann halt wenn der Server da ist.
Das ist schon okay.
Dafür sind Health Checks ja da.
Das ist eigentlich in Ordnung so.
So mal gucken ob es jetzt funktioniert.
Weil jetzt habe ich ihm ja gesagt.
Du bist abhängig vom Netzwerk.
Du musst warten bis Netzwerk da ist.
Dass das geht.
Creation complete.
Loadbalancer Zertifikat.
Alter.
Was ist das Problem?
Label selector target.
Loadbalancer not attached to network.
Also ich muss. Moment.
Wo kackt der mir denn ab?
Der kackt mir ab bei Qt Destroy.
Bei Qt Chat.
Target.
Hier kackt der ab.
Muss ich ihm vielleicht sagen.
Depend on.
Chat LB oder.
Also das ich ihm sagen muss hier.
Depend on.
Network.
So.
Ja das soll auch aufs Network dependen.
Alles gut.
Ne der LB wird nicht erstellt.
Wir.
Wir probieren das jetzt einfach nochmal aus.
So der dependet.
On das Network.
Also der dependet.
Darauf.
Und der auf die eigentlich Netzwerksachen.
Aha.
Jetzt hat es funktioniert.
Ok.
Ich habe nichts gesagt.
Das lag an einem dieser Dinger.
Muss mir jetzt mal genauer nachschauen.
So Loadbalancer.
Status unknown.
Die Server sind ja auch noch gar nicht da.
Die müssen jetzt.
Die müssen jetzt nach und nach.
Ready.
Ready werden.
Das sollte.
Das sollte in spätestens einer Minute oder so eigentlich alles grün werden.
Guck mal.
HSSH.
Zack da sind meine Nodes schon.
Netstat.
Guck mal.
Der ist mit dem Update noch gar nicht durch.
Ja dann ist kein Wunder.
Der macht noch Update.
Full Upgrade dauert anscheinend ein bisschen.
Wie würde man das schneller hinkriegen?
Eigentlich nur mit einem eigenen Ubuntu Image oder sowas.
Aber das muss nicht sein.
Also das Full Upgrade braucht aber ewig.
Jetzt.
Jetzt hat er Nginx installiert.
Gleich da.
Jetzt läuft er auf Port 80.
Vielleicht erst Nginx installieren.
Ne.
Der soll vorher schon erst upgraden.
Server soll nie ins Internet ohne Sicherheitspatches.
So.
Status ist 0 von 1.
Er sollte es jetzt aber gleich checken.
Dass die Server da sind.
Und dann sollte der Kram.
Langsam aber sicher auf Healthy gehen.
Und fürs nächste mal mache ich mir Gedanken.
Wie wir das gescheit machen können mit.
Mit Deployment.
Weil ich möchte ja das das der Reihe nach geht.
Also ich müsste quasi so was hier machen wie.
Also quasi.
Dass er den neuen Server hinstellt.
Bevor der alte Destroyed wird.
Und der alte muss sich dann am Anfang schlagen lassen.
Und der alte muss sich dann am Anfang schlagen lassen.
auf 503 stellen dass der load balancer quasi alle alle verbindungen kappt nee das ist total easy so
rolling deployment zu machen ich nehme einfach den den tag vom server weg und dann checkt es
der load balancer und der load balancer load balancer und erst wenn der tag vom server weg
ist dann fahre ich die anwendung runter da weiß ich bloß nicht wie ich das terraform beibringe
also ich müsste das irgendwie müsste irgendwie terraform sagen können es soll den tag entfernen
bei einem destroy weiß ich nicht ob das funktioniert da sind wir leute funzt wieder
keckhello.keckw.services da sind wir zack das hat mit kubernetes jetzt nichts zu tun wir haben ja
keinerlei container workloads oder sonstwas gerade okay das funktioniert noch oder auch nicht
das funktioniert nicht warum ach weil sich die ip des load balancers geändert hat
deswegen brauchen wir unbedingt entweder feste alps das können wir hier mitmachen was das sind
die ipv6 dinger oder wir brauchen automatisches anpassen vom dns weil normalerweise löscht man
den load balancer ja
nicht normalerweise würdest du mir die notes löschen weiß aber das funktioniert ganz gut
das finde ich finde ich finde ich top das gefällt mir warum haben deine vor allem so
public apps rein zum besseren ausprobieren bräuchten sie nicht bräuchten sie nicht wir
können die entfernen wir können die public das machen wir jetzt noch wir entfernen jetzt noch
die public apps die brauchen wir nämlich nicht mehr dass das machen wir jetzt noch da komme ich
da von außen nicht mehr drauf
es läuft nicht mehr ohne
작업s wegen der der übung so destroy das machen wir jetzt noch alles alles wieder weg hier sagt sagt networt sonst wie weg die streu network diestro alles destroyed kannst du beim lb rules festlegen dass demudge zu bestimmte machines gehen ja dem Judge hier geht es einfachından
demuga
kann ich andere tags geben oder ich kann auch direkt ip einstellen dankeOSH
gut also ich habe nie aktiviert und habe mir ataup ㅋㅋㅋㅋình hier den untereens und ich bin tatsächlich auch jetzt mehr angestanden aber eben für adm中 habe ich gar keine zurzeit hier des ».
charles j.j. imd
machen, weil
der kein SSH-Login hat.
Ich könnte SSH über den...
Ich könnte den Loadbalancer SSH-Loadbalancen
lassen, aber dann komme ich immer random auf den Server
raus. Das ist vielleicht auch nicht so sinnvoll.
Ja. Kannst doch
einzelne Ressourcen tainten.
Aha. So.
Also wie kriege ich das
denn jetzt da weg, dass
die Public IPs haben?
Server.
Private?
Ach, so meinst du das?
Ja, das wird funktionieren.
Das wird funktionieren, aber das finde ich
irgendwie auch nicht so schön.
Ich würde ganz ehrlich, ich würde wahrscheinlich
den Loadbalancer
dann eh selbst bauen und darüber dann
jump-hosten auf die Kisten.
Oder man macht einen VPN.
Wann gibt es die Domain? Welche
Domain? Die ging doch eben schon.
So. Also.
Wie macht man denn jetzt die...
Wie macht man
keine Public IPs?
So? Public Net
Server.
Ne.
Ne?
Public Net? So.
Public Net
Falls.
Falls.
So. Ich will ja gar keine
Public IPs. Ich will ja nur das
Private Network.
Hier. Apply.
Okay, das scheint zu funktionieren.
Ja. Funst. Keine Public IP.
Sehr schön.
Na, da kannst du dich doch nicht beschweren.
Guck mal. Innerhalb von 20 Sekunden
oder so ist unser Cloud-Klempel am Start.
So. Und die Targets...
Gut, die brauchen ein bisschen, bis
alle fertig konfiguriert sind.
Das Update funktioniert gar nicht wahrscheinlich.
Stimmt schon.
Das Update...
Na, oder das nuttet irgendwie raus.
Das weiß ich nicht. Das ist
bestimmt... Das geht. Ich könnte mir
vorstellen, das geht.
Äh. Okay. Ich hab nichts
gesagt. Ne.
Oder... Ja, was denn jetzt, Cloud-Balancer?
Ne, der hat keine Public. Der hat nichts
Public-mäßiges.
Ähm. Ich bin mir ehrlich gesagt
nicht sicher, ob der Server
rein mit der Private IP rauskommt.
Ob dort irgendwie ein Gateway
ist für
Ad-Root-Gateway.
Ne. Das müsste man
wahrscheinlich... Ja.
Gute Frage. Nächste Frage.
Das müsste ich mir überlegen, wie man das macht.
Das müsste ich mir überlegen,
wie man das ausgehend ausgehen...
macht. Doch. Kann ich.
Guck. Da kann Public...
Alles. Alles wegmachen.
Nächstes Gold-PF-Sense.
Naja. Und die
kommen jetzt natürlich auch nicht ready, weil der
keinen Internetzugang hat.
Ja, ist so. Das Ding hat keine IPv6.
Ist Public Network
is disabled.
Ja. Ich mein, klar, man
könnte IPv6 anmachen.
Man könnte IPv6
anmachen. Dann kann der da drüber laden.
Aber will ich ja nicht.
Ich... Mir persönlich sind so Server
dann echt am liebsten, wenn die nicht ins Internet
können.
Ich muss bloß sorgen... Ich muss bloß dafür sorgen,
dass es raus...
nach außen kommt.
Und...
Und dass ich draufkomme, wohlgemerkt.
Also ich brauch auf jeden Fall in irgendeiner Art und Weise
noch einen Eingang.
Das könnte aber die kleinste...
die kleinste Kiste sein, die die haben.
Das ist ja... Da muss ich auch mal Gedanken
zu machen.
Oh.
Hetzner?
Private Cloud... Nee, nee, nicht.
Hetzner Cloud... Private Network?
Not. Weiß ich, ob die so...
PF Sense.
Ja, klar.
Ich hauste mir
natürlich jetzt noch ein eigenes PF Sense, natürlich.
Ach du Scheiße.
Die wollen wirklich was mit PF...
Nee, mit PF Sense ganz bestimmt nicht.
Da muss ich mal gucken, was da der...
Der...
Der...
Der Way ist, ja.
Meinung zu Vivaldi-Browser finde ich ganz cool,
aber irgendwie hat's...
Doch nicht so den...
den ausschlaggebenden Punkt, dass ich gesagt habe,
ich verwende den jetzt.
Von der Idee her finde ich's cool.
Das ist ja eine ehemalige Opera, Leute.
Nope.
Also die Server kommen nicht ins Internet.
Das muss ich mir tatsächlich mal überlegen, wie man das
gescheit machen könnte.
Mein... Okay. Leute, wir haben jetzt
18 Uhr. Ich geh gleich was fordern.
Eine Sache probieren wir mal schnell noch aus.
Ähm...
Was ist da?
Add Server.
Nürnberg.
2204.
Ein Ding. Public...
Public IP. Private Networks.
Test.
Ach so.
Ha!
Ich hab ja da noch nicht mal SSH-Keys drauf.
Das müsste ich dann wirklich per...
per Jump-Host machen.
Also zeig mal kurz her.
Nein.
Das hab ich falsch gemacht. Guck.
Kack-Noob.
Verdrückt.
Verklickt hab ich mich.
Weg. Ich will löschen wieder.
Auf, lass mich löschen.
Oh.
Neuer Server. Jetzt aber.
Nürnberg.
2204. Das, das, das.
Das.
User Data.
Bäh.
So.
Oh.
Ob der das checkt?
Okay. User Data.
Test.
So. Jetzt, jetzt, jetzt.
Connecten wir uns mal per Jump-Host da drauf.
Und schauen, ob das funktioniert.
Wästest du mit jedem Money?
Ne. Die Server... Naja.
Die Server werden sekündlich abgerechnet.
Also, das hat mich...
Der ganze Stream heute hat mich vielleicht...
20 Cent gekostet oder so.
Root-Add.
Ah, ist noch nicht da.
Na gut.
Dü-dü-dü-dü-dü-dü-dü.
Dü-dü-dü-dü-dü-dü-dü-dü-dü-dü-dü.
SSH.
Igen.
Minus.
Röh.
Weg.
Yes.
Still of No.
Alles klar.
So.
Ähm.
Jetzt probieren wir mal was aus.
Wir haben jetzt so Public IP.
Stündlich.
Na gut, aber wenn ich die unter einer Stunde hab.
Wie gesagt, das hat nicht viel gekostet.
Ähm.
So.
Also, wenn ich den...
Wenn ich den Kram jetzt hier erstellt hab.
Und hier hab ich die...
Hier hab ich...
Wo ist die interne IP von dem Server?
Ist der nicht attached?
Private Networking?
Achso.
Hab ich das vergessen?
Jetzt.
Hier.
Da.
Also.
Ähm.
Wir haben doch jetzt hier...
Jetzt bin ich mal gespannt, ob ich das auf die Reihe krieg.
Also wir haben jetzt Server, die diese IP hier haben.
Kann ich da jump-hosten drauf?
Also.
SSH minus...
J.
Auf den da.
Hat der kein SSH laufen?
Oder wie ging das nochmal?
Okay.
Das Ding hat immer SSH laufen.
Okay, dann ist jetzt vorbei.
Moment, der andere hat SSH...
Ne, das ist der da.
Okay, wenn die Dinger nicht mal SSH...
Äh.
Wait a minute.
Warum hat einer SSH laufen und einer nicht?
Okay, das funktioniert.
Guck mal, jetzt bin ich auf QChat Node 2.
Und zwar.
Das ist jetzt SSH-Trick 17.
Also ich sag SSH jetzt, ich will auf diesen Server mich connecten über diesen.
Das Root kann man hier weglassen, wenn es immer der gleiche User ist.
Ne.
Das ist es nicht.
Okay.
Kann man nicht.
Das heißt, SSH lockt sich darauf ein und nimmt dann meinen Key lokal mit und lockt sich darauf ein.
So.
Jupp.
Network unreachable.
Da geht nix.
Da müsste ich mir irgendwas bauen.
Jetzt ist natürlich die Frage.
Erlaubt der Loadbalancer ausgehenden Traffic?
Wahrscheinlich nicht, oder?
Der wird nur eingehenden Traffic machen.
Ja.
So, ich müsste jetzt quasi sowas hier machen.
Als Default Gateway.
Und dann, was hat mein Loadbalancer für eine IP?
Weiß ich jetzt gar nicht.
Was hat denn der Loadbalancer für eine IP?
Ich glaube aber nicht, dass der auch Gateway machen kann.
Das wäre...
Das glaube ich, das würde keinen Sinn ergeben.
Aber ich probier's, ich probier's mal aus.
0.0.0 Default Gateway und...
Nope.
Äh.
Muss ich ja noch Root at Default machen?
Dass das geht?
Weil da fehlt, da fehlt jetzt ja...
Root at Default GW 10.0.0.5.
Wie?
Network is unreachable?
Moment.
Warum ist das...
Mach ich das falsch?
Wie das Network is unreachable?
Ist das gleiche Netzwerk?
Und ich kann's sogar pingen?
Äh, das ist schon...
Äh, 1 geht? Okay.
Ah, 5 geht nicht.
Vielleicht muss ich...
Was war das IP?
Dell?
Was? Nee, das war doch GW.
Nee, nee, nee, sag ich doch GW.
Also aus irgendwelchen Gründen ist Network unreachable.
Obwohl er im gleichen Netzwerk ist.
Alles klar.
Ähm...
Ja, aber das ist wahrscheinlich auch gar nicht gedacht.
Ach so, du meinst...
Das ist doch egal, über welche Art und Weise ich das hätte.
Also, den Loadbalancer kannst du auf jeden Fall nicht nehmen.
Ausgehend.
Da müsste ich jetzt selbst irgendwas bauen, um wieder rauszukommen.
Ist jetzt kein...
großer Akt und auch kein großer Verlust,
dass das nicht geht?
Müsste ich mir was überlegen.
Das glaub ich auch, dass sie das denken.
Also, Status. Wo sind wir stehen geblieben?
Def...
Aus irgendwelchen Gründen...
Was?
Das hab ich überhaupt nicht gemacht.
Oh doch, naja, gut.
Ähm, Comet.
Kekkel. Push.
Ach, aus irgendwelchen Gründen heißt das Ding Brot.
Moment, ich hab da...
Sekunde, ich hab da verschiedene Branches.
Zack.
Warum hab ich da verschiedene Branches, meine Güte?
Das ist doch gar...
Und in beiden Branchen
ist exakt das gleiche drin.
Ja, das ist natürlich äußerst sinnvoll,
dass ich da zwei verschiedene Branchen...
Was für was hatte ich da zwei verschiedene Branches gemacht?
Ich weiß es gar nicht mehr.
Normalerweise ist es die falsche Richtung.
Aber...
Ist eh die gleichen Comets. Master. Bam.
Ja, irgendwas hatten wir uns
in dem Stream damals gedacht. Ich weiß es nicht mehr.
So.
Jetzt haben wir unseren Terraform-Krempel auch noch gepusht.
Also, wer sich angucken will,
was wir heute gemacht haben,
da steht alles drin.
In dem Repo.
Was ist denn die Readme eigentlich so hässlich?
Edit this file e.
E. File e.
Sag mal, ist Github gerade kaputt?
Achso, ich bin nicht eingeloggt.
Bin nicht eingeloggt.
Kein keck w.
Aber das keck w ist der Service.
Keckel.
Wunderbar.
Jetzt ist die Readme
viel besser.
Ne, wir haben kein...
Stimmt, wir haben kein Projektbild.
Ich weiß, was wir für ein Projektbild machen.
Ich weiß,
was wir für ein Projektbild machen.
Wie heißt denn dieses Emote,
wo...
Wo der keck w-Typ so im Schlafanzug
im Kreis sich dreht?
Ihr wisst, was ich mein.
Ich weiß nicht, wie das heißt.
Es gibt das und es gibt auch das,
das sich im Kreis dreht, oder?
Keck wiggle.
Keck wiggle.
Ist das ein Seagull-Emote, oder?
Wir machen
keck by.
Keck by. Bestes.
Keck by. FFZ.
Oder ist es ein Better Twitch TV Emote?
Beste.
Ja, wir brauchen unbedingt
ein Projektbild.
Das ist ganz wichtig.
Ich will ja das animierte haben.
So, hier das da.
Wir includen das jetzt einfach
ganz frech in unsere Readme.
Wim, Readme?
Ich kann mir immer nicht merken, wie man Bilder macht
in Markdown. So, oder?
Markdown Insert Images.
Ja.
Genau.
Ausrufezeichen?
So?
Okay.
Keck by.
Massive.
Ich hoffe, der kann das Bild einbinden so rum.
Alles klar.
Jetzt haben wir auch,
jetzt ist perfektes Projekt.
Jetzt kann sich keiner mehr beschweren.
Jetzt hat es alles, was es braucht.
Ein Ansible Playbook, Terraform
Config, ein
der besten Microservice der Welt
und Keck by als Emote.
Jetzt ist alles gut.
Easy Clap.
Leute, 4 Stunden.
Alter, das hat länger gedauert, als ich mir das vorgestellt habe.
Ich hoffe, euch hat es
gefallen. Wir werden daran auf jeden Fall weiterbauen.
Er muss ja hier seine
DevOps, muss er sein DevOps Game
upsteppen.
Sein Cloud Native
DevOps, äh,
seine Cloud Native agilen
DevOps Skills erweitern.
Für mehr Buzzwords.
Der Katz,
oh, die liegt irgendwo im Flur
und rollt sich da rum.
Also Leute,
ich geh jetzt was essen. Wir sehen uns.
Bis dann. Macht's gut. See you.
