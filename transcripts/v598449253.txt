so da bin ich soll ich was erzählen ich habe heute morgen mit dem kollege auf der arbeit
geschwätzt über teams ist ja alles nur noch remote bei uns und er hat mir erzählt er hat
eine tochter in war das klub kolumbien oder irgendwo südamerika und der hat gemeint er
ist erstaunt wie gut dort online schule funktioniert und bei uns gar nicht das
sagt doch schon mal alles oder wenn kolumbien besser online schule machen kann als wir das
technik land kolumbien wie gesagt bei uns fehlt immer noch der scheinwerfer mit dem
overhead projektor an den himmel
der hat erzählt die machen die schreiben arbeiten die können arbeiten abgeben die
müssen dann immer so einen quiz machen sprich ob sie es kapiert haben das sehen sie das können
sie online einreichen und sie kriegen sogar am ende angezeigt bei diesem quiz quasi was
was nicht stimmt und was sie sich noch mal angucken müssen und das haben die dort in
kolumbien garantiert nicht selbst programmiert die verwenden irgendwas was fertig ist aber die
kriegen jetzt die kriegen das gebacken wir kriegen das nicht gebacken sie baro ist zwölf
monate am start ich glaube sie bach oder bist glaube ich noch länger am start oder bin ich als
zehn monate partner bin wahrscheinlich erst zehn monate partner danke schön für zehn monate in
folge huge als er hat oder wenn man sich das überlegt dass kolumbien besser online schule
hinkriegt ein bisschen laut ja also wenn ihr das in kolumbien besser hinkriegen mit online
schule als wir also wir stehen echt wir stehen echt mit dem internet auf kriegsfuß in deutschland
wir kriegen das nicht gemacht was man ja auch hier wieder jetzt dran sieht was ich gerade bei heise gelesen habe
hab. Alter, Windows!
Windows, was ist mit dir los?
Könnt ihr euch noch dran erinnern,
Leute? Könnt ihr euch noch dran erinnern,
dass ich dieses Mikrofon letztens auf
70 oder 71 runtergestellt hab?
Warum steht das jetzt auf 88?
Was macht Windows?
Oder ist das Teams?
Könnte das Teams sein? Skype war ja
auch dafür bekannt, komische Settings zu machen.
Ja, wir haben jetzt Keks-Points.
Nicht mal Cute-Points.
Das ist bestimmt... Aber das hat es
vor Teams auch schon gemacht. Außerdem hab ich Teams
nur... Ich hab nur Teams im Browser und Teams
im Browser kann ja die Windows-Audio-
Settings nicht verändern.
Übrigens auch lustig hier, ne? Hier hab ich
gerade mal zwei von drei
Sternen und hier, bam! Anschlag.
In your face.
Wupp, wupp.
Ja, guckt euch das mal an hier.
Corona-Datenspende-App.
Das Robert-Koch-Institut
CCC warnt vor diversen Schwachstellen.
Wer hätte
das nur gedacht, dass wir nicht in der Lage sind,
eine App zu programmieren?
Erinnert mich an unsere wahnsinnig sicheren
Wahlautomaten. Und was
war das andere noch? Gesundheitsakte?
Passt, oder?
Schlägt so in die gleiche Kerbe.
Von Unfähigkeit.
Das Pipega-Board. Hier ist das Pipega-Board.
Oh je, ich muss noch ein paar
Fragen
beantworten, wie es aussieht.
Nutzt du eigentlich
die neue Mod-Ansicht? Ne. Achso, du meinst, kann ich
mich. Kek, weh.
Verguckt.
Ich hab mir die neue Mod-Ansicht noch einmal angeguckt.
Aber ich bin ja auch kein Mod.
Ja, und
ich hab gedacht,
bevor ich mich jetzt weiter über C++ aufrege,
was definitiv
passieren wird, und heute sind wir so früh, dass wir eigentlich
fertig werden müssten.
Wobei, nagelt mich nicht drauf fest,
ihr wisst, wenn ich einmal
angefangen hab, gesidetrackt zu werden, dann wäre ich
richtig gesidetrackt.
Ich hab gedacht, bevor wir uns diese heiße
News-Meldung durchlesen, gucken wir uns mal an, was
der CCC geschrieben hat.
Ist, glaube ich,
ein bisschen sinnvoller.
Das sind keine PP-Gas.
Die sind meistens
weit davon entfernt.
Aber, dass wir keine sichere App auf die Reihe
kriegen, ist schon mal geil.
Und diese CCC,
das sind ja keine richtigen Papers, wir nennen das
diese Analyse-Dinger, sind immer ziemlich gut.
Weil da steht am Anfang immer
kurz zusammengefasst für die Noobs drinnen, was
sie gefunden haben.
Also, was haben
sie denn gefunden?
Also, Blackbox Sicherheitsbetrachtung
der Corona-Datenspende-App des
Robert-Koch-Instituts.
So.
Ähm, bla bla bla bla bla bla bla bla bla bla bla bla.
Folgende
Sicherheitsmängel der Corona-Datenspende-App
wurden identifiziert und mit entsprechenden
Empfehlungen dokumentiert. Okay, gucken wir mal.
Nintendo wurde
wohl gehackt. Echt?
Hab ich noch nicht gesehen.
Ah!
Interessant. Gibt's da auch
irgendwie was bei Heise
oder so?
Gibt's nicht.
Okay, also was ist Nintendo-Hack?
Hast du schon gehört, dass es einen Half-Life-Alex-Mod
gibt für Maus und Keyboard? Ne, hab ich nicht.
Aber das ist so ein Spiel, das will ich gar nicht
2D mit Maus und Tastatur spielen.
Okay, also
Nintendo wurde gehackt. So, das ist doch so.
Das wusste ich noch gar nicht.
Warum? Was, was, wie?
Äh, bla bla bla.
Two-Step-Verification.
Hab ich nicht an auf meinem Nintendo-Account.
Wobei, kann das nicht sein?
Kann das sein, dass man, kann man, muss man
nicht sogar zwei, zwei Faktor-Authentifizierung
einschalten, sobald man was
bezahlen will?
Moment, ne. Man braucht den Google-Authenticator
und mit Nintendo,
also Nintendo kriegt auch nix selbst auf die Reihe,
oder? Warum können die, warum können
die keine, warum können die keine
zumindest mal SMS
oder, oder irgendwie andere
Message-Authentifizierung machen?
Ich mein, die billigste
Form von, ähm,
zwei-Step-Authentifizierung ist immer noch,
du kriegst ne E-Mail geschickt, du musst dann auf den Link klicken.
Ein Bot.
What the fuck?
Hatten wir schon ewig, nenn mal.
Oh, ich kack-Noob, jetzt hab ich, jetzt hab ich die Nachricht
gelöscht, aber ihn nicht geblockt.
Mods, könnt ihr das machen?
Den, den Typ blocken?
Ähm,
ah, sehr gut.
Ja, die wissen Bescheid.
Wissen, wie's geht.
Okay, also das heißt, ich muss mir mal
aufschreiben, nachher muss ich mal gucken,
ob mein Nintendo
Account Two-Step-Authentification
hat, oder zumindest irgendwas, ach, keine Ahnung,
die ganze, ganze Crap immer.
Da sind wir wieder beim Thema, wir hatten vorhin was mit,
oder gestern was mit, ähm,
Passwort-Apps,
und ganz ehrlich, wenn man sowas sieht,
wollt ihr wirklich eure Passwörter online in irgendeiner Passwort-App
speichern?
Ey, ich sag, ich sag nix dagegen, dass sie den Google Authenticator
verwenden. Man könnte aber einfach
mehrere Sachen anbieten.
Aller mal besser als einfach nur Passwort.
Team Max
Electronics, drei Monate,
ja, huge.
Subscriber.
Muss ich mir nachher mal angucken,
was da mit Nintendo los ist. So, jetzt wollten wir uns mal angucken,
was das, äh,
was der Chaos Computer Club
über die Corona-App rausgekriegt hat.
Also, folgende Sicherheitsmängel,
wir lesen uns jetzt das nicht alles durch,
wir gucken uns die Zusammenfassung an, also sprich, das hier.
Also, folgende Sicherheitsmängel,
der Corona-Datenspende-App
wurden identifiziert und Empfehlungen gegeben.
Also, was ist der,
erster Punkt, Fitness-Daten
werden regelmäßig nicht vom Smartphone des
Datenspenders aus an das
RKI übermittelt,
sondern vom Robert-Koch-Institut direkt
beim Anbieter des Fitness-Trackers
oder Google Fit abgefragt.
Äh.
Weißt du gar nicht, dass das überhaupt geht.
Und erst anschließend pseudonymisiert.
Ja, das ist, das ist schon mal bescheuert, ne?
Ich mein, ich kann mir vorstellen, warum sie das machen,
dass sie das irgendwie, die, die,
du kannst es einfacher von irgendeinem
Anbieter was abrufen, wie
von der Smartphone, vom Smartphone
der Smartwatch Sachen dir übertragen lassen,
aber allein schon im Sinne des
Datenschutzes wäre es sinnvoller,
das vom Gerät direkt übertragen
zu lassen und gleich zu anonymisieren
bei der Übertragung. Zumal,
und das ist ja der nächste Punkt,
hier speichern sie die Zugangsdaten.
Müssen sie ja,
sonst können sie wahrscheinlich an die API nicht dran.
Da sieht man aber schon wieder der nächste Fail.
Also rückt da euren Kram nicht raus.
Wer programmiert den Kram eigentlich immer?
Also hierzu speichere ich das Robert Koch Institut
Zugangsdaten, mit denen unter anderem
auf die vollständige Fitness-Historie
und die Namen der Datenspender
zugegriffen werden kann.
Exzellent.
Gibt genug Leute, denen ist das wurscht.
Ja, also sieht man,
man sieht es ja an allen Ecken und Enden,
dass die Leute sagen, pff, who cares, das hat eh schon jeder meine Daten,
was juckt mich?
Okay.
Jeder, wie er will.
Ich habe da schon oft genug was zu gesagt, wie ich das denke,
aber im Endeffekt jeder, wie er will.
Jeder muss gucken, was er mit seinem Kram macht.
Die Möglichkeit,
Datenspender unter Missbrauch dieser Zugangsdaten
direkt zu identifizieren,
hebelt den Zweck der Pseudonymisierung aus.
Ja, logisch.
Da kann man sich es auch fast gleich sparen.
Choose my name wahrscheinlich,
allerdings müssen sie das ja trotzdem machen,
wenn sie es direkt
beim Anbieter des Fitness-Trackers oder bei Google Fit abfragen.
Da müssen sie zumindest mal
20 Fitness-Tracker-APs und Google Fit unterstützen.
Was auch immer.
Machen, was sie wollen.
Ich kann es verstehen, dass man es macht.
Sicher ist es nicht.
So, es ist
beabsichtigt, aus den Analyseergebnissen
der Fitnessdaten lokale Maßnahmen
zur Eindämmung Corona-Pandemie
abzuleiten.
Das einfache Einbringen falscher Fitnessdaten
erlaubt jedoch eine gezielte Beeinflussung dieser Maßnahmen.
Da haben sie nicht unrecht,
da habe ich gar nicht dran gedacht.
Also sprich, wenn ich jetzt,
wenn ich mal angenommen, ich möchte manipulieren,
was da als Ergebnis rauskommt,
könnte ich einfach sinnlose
Schwachsinns-Fitnessdaten pushen.
Okay.
Habe jetzt nicht dran gedacht.
Ergibt aber auch irgendwie Sinn.
Bei Verknüpfung der App mit einem Fitness-Tracker
müssen dessen Zugangsdaten eingegeben werden.
In der Mehrzahl der Fälle können diese
durch manche Mittelangreifer mitgelesen werden.
Das ist natürlich doof.
Zugangsdaten können zum Beispiel bei Verlust
oder Diebstahl des Smartphones durch Dritte gestohlen werden.
Ja gut, das ist ja meistens so.
Also, kommt drauf an.
Bei iPhones eher weniger.
Und bei Android, je nachdem, was die Leute installiert haben.
Das heißt ja aber viele Sachen.
Das ist jetzt wirklich nicht unbedingt so spezifisch für diese App.
Der Server des RKI exponiert zusätzliche Funktionalität
wie ein Management- und Admin-Interface.
What the fuck, warum?
Okay, das ist schon massive.
Okay, das ist schon massive.
Massive pepega.
Warum macht man Admin- und Management-Interfaces ins Internet?
Warum macht man sowas?
Wie kommt man auf die Idee, dass das eine gute Idee ist?
Was, so wie?
So wie eine SOAP-API?
Was ist denn mit denen los?
Die sind auch 1998 stehen geblieben, oder?
Moment, was war denn das gerade für eine Musik?
Genau, das war Tales of Symphonia.
Kam mir irgendwie übelst bekannt vor.
Also das ist, naja, SOAP, gut.
Es ist eine API, meinetwegen.
Die können sie machen, wie sie wollen.
So richtig modern ist es nicht.
Das hier ist aber das viel größere Problem.
Management- und Admin-Interface im Internet.
Das heißt nicht zwangsläufig, dass es unsicher ist,
aber sie schreiben es ja auch hier,
dass du viel mehr Angriffsfläche hast,
dadurch, dass es im Internet hängt.
Musikliste?
Ich kann da keine Musikliste erstellen.
5 Stunden.
Das ist eine 5-Stunden-YouTube-Video.
Das ist keine Playlist.
Also eine Playlist, wo ich nicht weiß, welche Lieder was sind.
Aber wenn du es wissen willst, hier, das da ist es.
Top 1000 Nintendo Songs of All Time.
400 bis 301.
Okay, was kommt als nächstes noch?
Kenntnis des Pseudonyms eines Datenspenders.
Erlaubt Dritten, dessen Verknüpfung mit einem Fitness-Tracker einzusehen
oder zu manipulieren.
Das ist natürlich schon mal super.
Das ist natürlich schon mal ganz doll.
Zudem besteht die Gefahr, dass Dritte darüber Ansprüche inklusive
Recht auf Einsicht gemäß DSGV...
Hä?
Okay, war so immer, aber das ist schon mal dumm.
Also sprich, wenn du irgendeinen Nickname kennst,
von jemand, der die App verwendet,
kannst du wohl die Daten seines Fitness-Trackers einsehen.
Das ist schon mal Fail.
Oh, Moon Moon Subs.
Hehehe.
Ähm...
Zudem sind die Anforderungen eine wirksame Einwilligung
zur Verarbeitung von Gesundheitsdaten nach DSG...
Gut, das wäre mir persönlich jetzt ziemlich wurscht.
Bei der DSGVO weiß ja eh keiner so genau,
wann, wie, was, ab welcher Stelle legal ist und wann nicht.
Okay, den Rest gucken wir uns jetzt nicht an.
Ich wollte bloß mal kurz so drüber gucken.
Wenn du jetzt schon irgendwelche Curl-Aufrufe siehst, siehst...
Ähm...
Gut, ähm...
Zumindest scheint das Ding nicht sonderlich sicher zu sein.
Und man kann wohl nur jedem abraten,
diese Corona-App zu verwenden.
Ah...
Ist wieder der Wahnsinn.
Ich frag mich bei sowas immer,
wer den Kram programmiert.
Die werden es nicht selbst machen,
die werden das irgendwo beauftragen.
Aber die Kombination aus so grundlegenden Schwachstellen
und einer SOAP-API im Internet
inklusive Admin- und Management-Interfaces,
äh...
gibt Grund zu der Annahme,
dass es nicht die größten, äh...
Leuchten auf dieser Erde gibt.
Auf dieser Erde sind, die das Ganze programmieren.
Die Fitness-Drecke-App ist relativ unwichtig,
die große...
Ey, wenn die Fitness-Drecke-App schon so im Arsch ist,
dann will ich gar nicht wissen,
was mit der großen App los ist.
Ich kenne nur die SOAP im Fernsehen.
Ja, für alle, die es nicht kennen.
Ich schock euch mal.
Ich zeige euch mal ein Beispiel von einer SOAP-XML-API.
Gibt's bestimmt...
Gibt's bestimmt schöne...
Gibt's bestimmt schöne Beispiele auf Wikipedia oder so.
Ja...
Hier...
Hier ist ein schönes Beispiel von einer SOAP-API.
Da wird ganz viel XML hin und her geschickt bei einer SOAP...
Bei SOAP-Requests.
Das hat man so 2000 rumgemacht.
So...
So 95...
95 bis 2005 oder so.
Ist einfach mal so aus dem Bauch raus gesagt.
In dem Dreh hat man das gemacht.
Und ihr könnt euch vorstellen,
XML ist ja nur selten kurz.
In dem Fall ist das ein kurzes Beispiel.
Die eigentlichen SOAP-Requests,
die sind fünf Seiten lang.
Das will man eigentlich nicht haben.
Und es ist echt...
Das ist eine Wissenschaft für sich.
Es sagt schon alles,
dass die alte API von DHL noch über XML-SOAP funktioniert.
Die neue mittlerweile nicht mehr.
Aber so die...
Die...
Die stable DHL-API,
die man auch als erstes unter Google findet,
die verwendet auch noch XML-SOAP.
Solar...
Oh...
Jetzt kommt aber hier die Crap-Software an den Start, Alter.
SolarWinds and Central verwendet auch SOAP-API.
Musste damit arbeiten.
Hm...
Wir haben ein System bei uns auf der Arbeit.
Das hat eine ganz tolle Taktik,
was API angeht.
Das ist so ein zentrales Verwaltungstool,
wo alle Hardware,
alle Server,
alle IP-Adressen,
alle einzelnen Teile und Domains
und so ein Ding,
wo alles zentral drin verwaltet wird.
Und das ist ein Tool,
das ist...
Die Oberfläche ist schon absolut mega für den Arsch.
Ich kann es euch mal zeigen.
Äh...
Ich glaube, das ist die alte Version davon.
So...
Ich muss euch mal...
Guck mal!
Also, wenn du schon mal bei einem Anbieter
keine Screenshots von der Oberfläche findest,
da weißt du schon mal Bescheid,
dass es Kacke ist.
Ich versuche euch mal ein paar Bilder davon zu zeigen.
Ja...
Ja...
Wer so eine Kacke programmiert,
das ist Oberflächen-Design von 2001.
Ja...
Da Fuck!
Da Fuck!
Guckt euch das mal an!
Oh...
Ja!
So sieht der Scheiß aus!
Guckt es euch an!
Es ist fürchterlich!
Ja...
Es ist absolut...
Genau so sieht der Kram aus!
Es ist absolut...
Es ist absolut fürchterlich!
Es ist optimiert für den Microsoft Internet Explorer,
aber es funktioniert auch,
glücklicherweise,
in anderen Browsern.
So, und die haben es ganz besonders toll gemacht.
Die haben es ganz besonders toll gemacht mit ihrer API.
Ähm...
Die haben einen API-Guide,
der ist 25 Seiten,
das ist eigentlich auch ganz gut,
aber die haben ihre API 20 mal umgestellt in der Vergangenheit,
immer auf das, was hip war.
Deswegen läuft es jetzt so,
dass man alles über HTTP-Post-Requests macht.
Man macht sogar das Ausloggen,
sogar das Logout über den Post-Requests.
Ähm...
Man macht alles über HTTP-Post-Requests,
und der Inhalt von den Requests,
das ist JSON mit Embedded XML.
Sowas habt ihr noch nicht gesehen.
Das ist JSON mit Embedded XML.
Ja, das sieht dann ungefähr so aus.
Ähm...
Mal exemplarisch,
mal so beispielsweise.
Also da hast du dann hier so ein JSON-Dokument.
Warte mal hier kurz.
Ähm...
JSON.
Ja, JSON hast du irgendwie sowas wie,
keine Ahnung,
ähm, ähm,
Server,
äh,
keine Ahnung,
äh,
äh,
äh,
Production,
irgendwas,
keine Ahnung,
steht dann drinnen.
So, und dann hast du unten Filter.
Dann kannst du Filter eingeben.
Filter.
So, und normalerweise,
jetzt muss man ja sagen,
was da gefiltert werden soll.
So.
Und dieses, diese, diese, diese,
Query-Filter-Engine unten drunter ist wahrscheinlich noch so alt,
die stammt noch aus der Zeit,
wo man SOAP-Requests gemacht hat.
Deswegen brauchst du da jetzt so,
brauchst du dann so einen, so einen,
so ein Ding wie irgendwie
Search,
Note,
ähm,
Lookup,
blub,
äh,
Search,
Note,
irgendwie so in der Richtung,
ja, ich,
ich vermeide das.
Ich frag einfach alle Server ab
und filter das dann,
danach.
Äh,
Lookup,
und dann machst du danach irgendwie noch,
noch irgendwie,
ähm,
keine Ahnung,
äh,
äh,
Filter,
Name,
äh,
Contains,
das ist dann so ein Ding am Ende.
Das ist,
das ist quasi,
äh,
JSON mit Embedded XML.
Die,
die Response ist dann YAML.
Das,
das muss ich dir mal vorschlagen,
das machen die wahrscheinlich auch.
Äh,
warum,
warum hör ich mein Kopfhörer nur noch auf einer Seite?
Was ist da los?
Wartet mal.
Hä?
Hallo?
Kopfhörer?
Nichts?
Warum?
Ah, jetzt.
Excellent.
Excellent.
Max hat gehustet.
Oh,
Scheiße, Alter.
Das ist wahnsinnig,
Big Brain,
was die da gemacht haben.
Wie findest du eigentlich Metro,
äh,
schrecklich?
Absolut schrecklich,
finde ich.
Ruckelt der Stream,
Leute?
Ruckelt der Stream?
Nö.
Meine Vorschau ruckelt,
aber der Stream ruckelt nicht.
Meine Vorschau,
Pepega-Vorschau ruckelt.
Ja,
ja,
ja,
Pepega-Vorschau ruckelt.
Ich brauch eh keine Vorschau,
solange es nicht ruckelt.
Alles gut.
So,
ähm,
also Metro,
finde ich absolut,
absolut schrecklich.
Kachelgeschichten.
Muss echt nicht sein.
Ähm,
auch wenn ich kein Apple-Fan bin,
ich muss sagen,
so rein
UI-mäßig,
wenn man so die Auswahl hat,
es gibt ja,
es gibt ja so drei,
es gibt ja so drei,
drei große Dinger.
Es gibt diese Microsoft,
äh,
nennen wir es mal,
das war das Metro.
Danach war es Flat,
Flat Design Gedöns.
Weiß ich gar nicht mehr,
wie es hieß.
Und jetzt ist es,
glaube ich,
nee,
ähm,
wie heißt das jetzt von Microsoft?
Oh Gott,
die Namen,
die kann man sich alle merken.
Ähm,
Fluent,
Fluent Design ist es jetzt.
Fluent Design.
Okay.
Also,
man hat ja so diese drei Sachen.
Man hat diese Microsoft Fluent,
Fluent Design-Geschichte.
Dann hast du Material,
Material Design von Google.
Und dann hast du,
ähm,
so,
so,
so,
so Projektion.
Und attempting in Google Design von Google.
Und hast das,
ähm,
wie heißt das von Apple?
Dieses Apple Design,
halt.
So.
Und,
wenn ich die Auswahl dazwischen hab,
muss ich ehrlich sagen,
dass Apple Design,
rein von der Benutzbarkeit her,
wenn wir jetzt mal von,
von,
von Mobile reden,
gefällt mir persönlich am besten.
Ähm.
Und auch auf dem Desktop
ist mir das am liebsten,
wobei ich sagen muss,
dass ich halt Apple
als Plattform,
dass ich,
dass ich MacOS als Plattform
nicht sonderlich genutzt bin.
Also!
Und,
plattform nicht sonderlich gerne habe wenn ich video kram und und spielen will
nämlich windows für alles andere nämlich linux also ich habe eigentlich
gar keinen großartigen anwendungszweck aktuell für mac es gibt ein paar
programme die ich gerne und der mac os verwenden würde aber dafür noch externe
mac os rechner hinstellen ist eigentlich 10 windows 10 ist fluent design
allerdings so wie das bei microsoft halt ist nicht durchgängig nicht durchgängig
also zum beispiel der taschenrechner der ist fluent design sieht übrigens
potthässlich aus das ding an der stelle das ist fluent design allerdings
nicht alles weil alte anwendungen zum beispiel sind entweder noch ganz
klassisches uralt win32 gdi sonstwie gedöns oder so ein hybrid so ein
hybridding aus win 32 mit mit wie heißen die kram hier aber noch mal
ribbon ribbons und sowas also microsoft ist ganz mir ist wirklich ganz ganz
gut
wir die mischung da draußen das neueste design prinzip ist halt quasi bei
microsoft fluren design da stellen sie ihre eigenen sachen immer mehr drauf um
leider sind die die in windows 10 mitgelieferten apps zum größten teil
absoluter krebs da war outlook express besser als das
windows 10 mail programm und das heißt schon was
so deswegen ich finde das prinzipiell gut was microsoft hier gemacht hat mit
fluren design da gibt es auch ein schönes video zu von der idee her ist
das gut das ist eines der wenigen designs die auch schöne schöne
farbverläufe und kontraste haben ich google material design finde ich hat
auch schöne kontraste aber alles andere sie an material design so aus als hat
das einer mit pain zusammen gewusst also ich bin überhaupt kein fan von von
material design obwohl ich selbst und die letzten web anwendungen selbst mit
material design gemacht habe
weil es cross-platform halt gut akzeptiert ist mir gefällt es nicht
das sieht man schon daran man nur so ein vergleich kennt ihr alle den time picker
von ios ja den hat glaube ich jeder zumindest schon mal gesehen das ist der
time picker von ios oder date date time picker von ios also sprich das
colts die hier so durch das ist das ist quasi so ein rundes rad so ein bisschen
wie die heartstone matchmaking suche na kennt ihr ja
das noch immer mehr kennt jemand von euch den standard will material design
date time不 ist das ist der hier also war ganz im ernst
wer um alles in der welt bei google ist auf die 힘들 reiche ideen gekommen dass
das ein guter date time pe descon Trivac
da blickt doch keine sau durch
drift
es es findet
des Belarusers sich ein bisschen überholt das ist jetzt richtig der cannons conc 집에 gehabt wie man schon noch nicht mehriert
Es ist, es könnte auch ein bisschen, es könnte auch ein bisschen Kokona-Style sein, dass die gedacht haben, ey, wer braucht da schon 24 Zeichen drauf?
Die dachten, die haben wahrscheinlich gedacht, ey, man braucht doch bloß bis 12 und dann ist es gut.
Das, das, das, das, die Minuten kommen danach.
Das kommt ja auch noch dabei.
Also sprich, du willst, ich kann euch mal ein Beispiel zeigen.
Ja, ich zeige euch mal ein Beispiel.
Von einem Material Design Date.
Date, ah ne, ich muss, ich, ich, Date Picker, Time Picker, ähm, Time Picker, so.
Das ist, das ist ein nachgebauter Material Design Time Picker.
So, AM, PM, so, und du schaltest hier oben zwischen Minuten und, und Stunden um.
Wir, wir brauchen mal ein 24 Stunden Design, haben die hier ein 24 Stunden Design drin?
Ja, also, das ist schon mal komplett, äh, Cancer, wenn ich mir das hier angucke.
Also du brauchst dann, ähm, keine Ahnung, ähm.
Ähm, äh, und dann schaltet er um auf Minuten.
Ich meine, fuck, was ist das?
Das ist zum Kotzen, Alter.
Das kriege ich Anfälle, wenn ich sowas sehe.
Also ich finde es nicht schön.
Ich, ich lasse gelten, ich habe das im Chat schon gesehen, ähm, ich lasse gelten, wenn man sagt, dass wenn man geübt ist, dass es schneller geht.
Lasse ich irgendwo gelten, wenn man sich wirklich dran gewöhnt hat.
Allerdings finde ich die, die mentale Überlastung, die man hat.
Wenn erst mal dieser Date-Time-Picker aufploppt, die ist es, die ist es nicht wert.
Da, da bist du erst mal 10 Sekunden verwirrt, äh, wenn du den Date-Time-Picker auf, auf, aufploppt, weil die ja natürlich auch da nicht einheitlich sind mit 12 Stunden, 24 Stunden.
Du bist erst mal 10 Sekunden verwirrt, bis du durchblickst.
Ähm, da gefällt mir der hier wirklich um Längen besser.
Und ihr wisst, ich bin kein großer Apple-Fan, aber das kriegen die besser hin.
Zumal das Feeling auf nem Touchgerät auch viel schöner ist.
Ja, es ist, äh, Schaumparty-Besucher, ich kann, wie gesagt, ich kann nichts dagegen sagen, wenn das persönliche, der persönliche Geschmack eben das eine besser findet.
Aber für mich ist das hier viel, viel angenehmer.
Vor allem, du kannst auch viel schöner auf nem, auf nem Touchgerät hier durchscrollen, als dass du hier durchscrollen kannst.
Man könnte sagen, okay, hier muss ich nicht durchscrollen.
Hier kann ich direkt drauf.
Aber ich find's persönlich viel einfacher hier, wenn ich sag, okay, ich brauch jetzt 4 Uhr, dass ich da mal, flupp, mit dem Finger nach oben hab, 4.
Find ich viel, viel angenehmer als dieses, dieses Ding hier.
Bissche Geschmackssache ist natürlich dabei.
Aber wer, wer auch immer bei Google auf die Idee gekommen ist, dass dieses Default-Ding die beste Wahl ist, die einem einfällt für nen Date-Time-Picker, dann weiß ich auch nicht.
Das Ding ist so schlimm, dass das die einzige Beautify-Komponente ist, die ich nicht verwende.
Weil ich keinem zumuten will, da drüber ne Uhrzeit auszuwählen.
Ja, ja, so viel genug zum, zum Rant über Date-Time-Picker, ich weiß auch nicht, wo wir da drauf gekommen sind.
Äh, irgendwie, auf irgendwelchen Gründen von Nintendo-Sachen.
Ähm, lieber nen Slider, klar, Slider-Beste.
Auch so ein Ding, was ich beim Material-Design komisch finde, ist...
Buttons?
Dass der Button nicht gedrückt wird, sondern dass der Button quasi, dass der Button quasi, äh, rauskommt, als, anstatt es reingeht, wenn man draufklickt.
Ist auch so ne, so ne Sache, die ich erstmal ein bisschen verwirrend finde.
Ansonsten, was ich beim Material-Design gut finde, ist, dass es eben breit akzeptiert ist mittlerweile.
Also sprich, Material-Design, oder Material-Design ist quasi das neue Bootstrap.
Wo, wo früher Seiten alle, alle, also Anwendungen, Seiten, Web, also Webseiten, alle möglichen Anwendungen haben's nachgemacht, waren alle Bootstrap.
Heute sind die meisten Material.
Was ich gut finde, wenn die Leute sich an was gewöhnt haben, weil dann muss nicht jeder sich was Eigenes aus den Fingern saugen und du wirst auch nicht blöd angeguckt, so nach dem, wo du, huh, wie sieht denn deine Anwendung aus?
Machst du Material-Design, auch wenn du es selbst nicht schön findest, damit die Leute sind wenigstens zufrieden.
So, mal kurz gucken, was wir noch ein paar Fragen haben.
Äh, bist du gespannt auf das neue Surface-Programm?
Surface Book 3?
Nee, ehrlich gesagt nicht, ich hab mich damit auch nicht beschäftigt, ich hab auch kein Surface Book.
Soll ja wohl einer der wenigen in Microsoft-Hardware sein, wo die Leute die Bude einrennen.
Äh, welche Mac-Programme sind das?
Also, ich kann's jetzt gerade gar nicht mehr ganz aktuell sagen, weil ich hab mich schon eine Weile nicht mehr damit beschäftigt.
Das waren ursprünglich, war das Omni-Crafel.
Äh, die To-Do-App, die, glaub ich, einfach auch To-Do heißt.
Dann, das ist jede Menge, äh, Programme mit Kaldabrücken.
Und Kaldab und Kaldab-Support für Mac gibt, die es halt irgendwie überall anders nicht richtig funktioniert.
Ähm, ziemlich schwierig.
Wenn man sich mal vergleicht, Thunderbird mit Kaldab-Integration, wenn man das mit einem ordentlichen, äh, Programm unter Mac vergleicht,
ist das schon, sind da schon Welten dazwischen.
Da gibt's richtig gute, richtig gute To-Do-Apps und Kalender.
Und, ähm, wo das schön integriert ist, das ist ja unter Linux und Windows wahnsinnig schlimm.
Ähm, was waren das andere noch, was ich verwenden wollte?
Ähm, äh, krieg ich das jetzt gar nicht mehr zusammen.
Aber nix Wichtiges, also nix so wichtig, dass ich sagen würde, dafür lohnt es sich, das noch ein extra Mac hinzustellen.
Äh, kannst du, kennst du eine gute Empfehlung, wie man ein ESP32 einrichtet und installiert?
Hm, beim ESP32 ist nicht so viel mit einrichten und installieren.
Das ist eigentlich was, was dafür gedacht ist, dass du selbst programmierst.
Also, das ist eher eine Plattform, wo du dir selbst was zusammenbauen kannst, was du willst.
Also, sprich, du holst ein ESP32-Board.
Du holst dir ein paar Sensoren.
Was du messen willst.
Und dann musst du halt, musst du ja wissen, was du damit machen willst.
Es gibt ein paar fertige Sachen.
Kannst du das Motor nehmen, zum Beispiel.
Das ist eine fertige Firmware für ESP2866.
Ich weiß gar nicht, läuft die auf dem ESP32?
Wahrscheinlich.
Äh, die ist ganz gut.
Du kannst, wenn du es nicht so sehr mit C oder Python, also nicht so richtig Hardcore mit Programmieren hast, ist, äh, ESPHome auch ziemlich gut.
Das sind alles, äh, Firmwares für, äh, ESP32.
Für den ESP32 und ESP2866, die dir viel Arbeit abnehmen.
Ja, also, der hat, der, also, das hier finde ich richtig gut für Leute, die eben nicht, äh, so die großen Programmierer, die großen Programmier-Pros sind.
Das Motor für, für kleine Sachen, die einfach was ein- und ausschalten sollen, ist das gut.
Ähm, wenn du wirklich was brauchst, Custom für dich, unterschiedliche Sensoren, dann nimm ESPHome.
Allerdings, ich bin davon weggekommen jetzt, ich hab ja mal ein paar Sachen mit ESPHome ausgerü- ausgerüstet, aber im Nachhinein hat's das für mich komplizierter gemacht, als einfach den Kram weiter selbst zu programmieren.
Selbstprogrammieren hat den Vorteil, man weiß wirklich genau, was das Ding macht.
Und wenn man eine gewisse Logik braucht, die man, die man ja oftmals, wenn man eine Hardware mit Sensoren hat, braucht man ja eine gewisse Logik dahinter.
Man möchte in so, in so einem Intervall was schicken.
Man möchte die Daten, die man vom Sensor bekommt, so und so auffangen.
Man möchte die Daten auch bereiten, um sie dann weiter zu ver- zu, zu verschicken.
Das ist eh individuell, für das, was man machen will.
Und ich finde es einfacher, die Logik direkt in C zu programmieren, als in irgendeinem Jammel-Dialekt oder so.
So, ähm, so viel, so viel da dazu.
Jupp.
Das hatten wir, ah, das, ah, das ist von gestern, ne?
Boah, so viel Zeug.
Alles nicht gelöscht.
Das wird nicht, guck dir mal den aktuellen Markt an, so viele Arbeits-
Okay, ich weiß keine, ich weiß nicht mehr, um was es da geht.
Was bei uns gibt es in Europäien, der immer Montags die Termine für die Woche vergibt.
So 20% Termine sind für Kontrollen.
Ah, gibt bestimmt bei Riederskolen hinkriegen.
Dein Meme-Tool braucht noch die Tanz in Afrika, damit es sagt, nee, wozu.
Die habe ich heute Morgen erst wieder gesehen auf Twitter, hat irgendjemand gepostet.
Äh, 20, 20 Euro, irgendwie in dem Dreh.
Das hatten wir gestern schon aus, das hatten wir gestern schon ausführlich beantwortet, ne?
Ziemlich sicher.
Das hatten wir auch schon, dass es nicht löst.
Gut, so Leute, wir haben alle Fragen beantwortet.
Oh, der Delete-Knopf, seht ihr den Delete-Knopf?
Der Delete-Knopf ist verbuggt.
Das fixen wir jetzt aber nicht.
Wir machen jetzt mal ein bisschen, ein bisschen C++.
Dass ich mich ein bisschen beschweren kann wieder.
So, wo sind wir denn gestern schön stehen geblieben?
Ähm, also nochmal kurz hier die, nochmal kurz mal Übersicht verschaffen.
Handle Error, bla.
Ah.
Ach ja, ist der Patrick schon?
Ja.
Der Patrick wollte ja in der Library nach dem Bug suchen, warum wir hier einen Restart machen müssen.
Ich hab heute Morgen, ich hab heute Morgen auch mal kurz nebenbei ein bisschen geschaut.
Und ich glaube, ich weiß an welcher Stelle das liegt.
Ähm, was das wird.
Also, ich erzähl's nochmal ganz kurz.
Kann ich eigentlich immer am Anfang des Streams nochmal kurz recappen.
Moment, wo sind die Bilder?
Ich hatte doch die Bilder eben.
Warte, wo, wo?
Wo sind die Bilder?
Ich hatte eben die Bilder.
Ich hab sie doch eben gerade noch gesehen.
Hier.
Hier.
Post.
Da ist es.
Also, ähm, das ist, äh, mein Gegensprechanlagen-Telefon von der Tür-Gegensprechanlage und das ist ein Tablet, das sieht man, ja, Tab-Organisation.
So, und was ich da eingebaut hab, ist, ich hab so einen kleinen, äh, Tiny Pico ESP32 da eingebaut.
Hier, sieht man es schöner.
Der ist ungefähr ein bisschen größer wie, wie, wie so mein Daumennagel, die Dinger sind wirklich klein.
Ist aber ein vollwertiger ESP32.
Siehst du ja im Vergleich zur, zur Batterie.
Ähm, und da hab ich einen davon hinter diesem Telefon drinne, drinne stecken.
Und der erkennt, wann es klingelt und wann jemand den Hörer abgenommen hat.
Natürlich wär es gut, das Ding ist ja da fest installiert, natürlich wär es gut, wenn man das über das WLAN updaten könnte.
Und irgendwie hab ich mir in den Kopf gesetzt, ich möchte das Ding über WLAN, allerdings über HTTPS updaten.
Es ist überhaupt gar kein Problem.
Ein ESP32.
Ein ESP32 zu updaten, da gibt's sogar schon fix und fertige Sachen über HTTP.
Überhaupt kein Ding.
Ist auch total easy selbstprogrammiert.
Über HTTPS ist eine andere, andere Hausnummer, ja.
Ähm, da gibt's schlicht und ergreifend nichts Fertiges zu.
Deswegen machen wir das selbst.
Aber wir machen das nicht ganz blind.
Ich hab mir im Vorfeld schon ein bisschen was überlegt und ein bisschen was aufgeschrieben, was wir machen können.
Ähm, und wir sind gestern stehen geblieben.
Wenn ich das richtig sehe.
Wir haben einen Webserver gestartet, ich muss mal übrigens den ESP gerade connecten, seh ich hier.
Der ist gar nicht dran.
Wo ist mein ESP?
Ah, hier.
Da ist er.
Dit, dit, dit.
Connect.
Ah, yes.
So.
Also, wo wir stehen geblieben sind, ist, wir haben, wir generieren beim Starten vom ESP ein neues self-signed SSL-Zertifikat.
Was lustigerweise funktioniert.
Was bei mir nie funktioniert hat.
Aber gestern im Stream hat's funktioniert.
Den connect mal einfach über USB.
Ja.
Den connectest du über USB.
Oder aber, du kannst halt danach über WLAN updaten.
Über HTTP gar kein Problem, über HTTPS.
Schwierig, ja.
Also du kannst den über USB connecten.
Und, ähm, quasi initial deinen Programm hochladen.
Wenn du den dann halt irgendwo hinter der Wand eingebaut hast, keine Ahnung, an der Haustür eingebaut hast.
Dann ist halt doof mit USB anschließen.
Deswegen muss man das Ding auch über das WLAN updaten können.
Was ist ein ESP?
ESP ist ein Microcontroller.
Gibt's mehrere von.
Von einem chinesischen Hersteller.
Wo kommt, oder südkoreanisch?
Wo kommt Espressif her?
Shanghai.
China.
Oder China, wie die coolen Leute sagen.
Aus China.
Das sind Microcontroller von einem chinesischen Hersteller.
Die gibt's in zwei Varianten.
Einmal als ESP8266.
Und als ESP32.
Die ESP32 ist die Dual-Core-Variante und die auch schneller ist und viel mehr Features hat.
Da gibt's ein Plugin für VS Code.
Ja, es gibt Platform IO.
Nennt sich das.
Das ist eine komplette IDE für alles, was ESP-Zeugs und Arduino und alles mögliche.
Dadurch, dass die halt sehr viel unterstützen, ist es nicht immer so, die nicht immer wahnsinnig schnell sind.
Die letzte Software-Version.
Die brauchen auch manchmal 1-2 Monate, bis sie updaten.
Espressif liefert aber doch nur das Layout.
Ich weiß nicht, wer die eigentlich in Chips herstellt.
Die Boards machen auf jeden Fall mehrere Hersteller.
Also der ESP82 ist ja nur quasi der Chip mit CPU und Bluetooth und Gedöns drauf.
Die Boards an sich machen andere Hersteller.
Es gibt zum Beispiel das Board hier.
Dann gibt's noch die größere Variante.
Dieses Node.
Node.
MCU.
Ding.
Hier.
Die gibt's noch.
Die sind eigentlich relativ beliebt.
Die sind ein bisschen größer.
Da hast du die Pins schon vorinstalliert.
Also schon drauf gelötet.
Musst du gar nichts mehr machen.
Es gibt auch noch andere richtig nice Boards.
Zum Beispiel der hier.
Der ESP32 Fire Beetle.
Sieht zwar auch auf den ersten Blick mal so aus, wie jedes ESP82 Board.
Allerdings das Coole an dem ist.
Erstmal hat es einen Batterie-Connector.
Kriegt man aber an anderen Boards auch ohne Probleme dran.
Aber es ist für Batteriebetrieb ausgelegt.
Und das verbraucht so gut wie nichts im Standby.
Die haben es nämlich hier mal richtig gemacht.
Wenn das Ding über Batterie betrieben wird, schaltet er alles aus.
Alle Spannungswandler für USB, alles was man nicht irgendwie braucht, schaltet er aus.
Das heißt, er verbraucht im Deep Sleep, verbraucht der Fire Beetle bloß, glaube ich, 11 Micro Ampere oder so.
In dem Dreh.
Also fast nichts.
Wenn du das Ding nur ab und zu mal, wenn du das Ding nur ein paar mal am Tag aufwachen lässt, um irgendwelche Bodenfeuchtigkeit, Temperatur oder was auch immer zu übertragen, dann hält dir das Ding zwei Jahre an einer normalen Batterie.
Also mit einer normalen Batterie meinst du einen normalen Akku, keine Batterie.
Ja, 11 Micro Ampere ist nicht wenig, das stimmt.
Aber für ein Ding mit Onboard WLAN, Onboard Bluetooth.
Dual-Core 240 MHz, Low-Power 8 MHz-Core.
Also von den Features her gibt es das schon.
Und es gibt auch gar nicht mal so viele andere, die featuremäßig auch nur ansatzweise mithalten könnten, die in den Regionen sind.
Mir würde es ja schon reichen, wenn du da irgendwie was per Funk oder so übertragen könntest.
Also ich kenne da nicht so viele.
Habe ich mich mit Micro Ampere vielleicht verletzt?
Micro Ampere jetzt vielleicht vertan, warte mal.
Ne, ne, ist ziemlich sicher, Micro Ampere.
SP32, Deep Sleep.
Ich habe es gemessen, ich glaube es waren 11 Micro Ampere.
Warte mal, 0,05.
Das ist jetzt aber Milli Ampere, oder?
Ja, 10, 10 Micro Ampere im Deep Sleep.
Zum Beispiel auf dem Friedhof.
Ja, das stimmt, auf dem Friedhof habe ich einen Fire Beetle 32 stehen.
Habe ich nicht wirklich.
Ich habe euch gebetet, also ich habe einen gebaut dafür, aber der steht gerade nicht da.
Hat das schon mal jemand versucht?
Ne, ich kann es mir mal angucken.
Der steht gar nicht da, aber ich habe das nie fertig gemacht.
Real Vim in Visual Studio Code.
Ne, habe ich nicht probiert.
Mir haben die bisherigen Vim Plugins für Visual Studio Code auch überhaupt nicht gefallen, weil die alle so geleckt haben.
Und falls jetzt irgendjemand fragt, warum ich auf einem Friedhof einen ESP32 hatte,
beziehungsweise wieder haben werde, liegt das da dran.
Muss ich mal kurz ausholen.
Ich habe einen Bodenfeuchtigkeitssensor.
Keinen da, von denen da habe ich.
Den da.
Da habe ich hier oben einen Schrumpfschlauch drum gemacht, um die Elektronik.
Und ein bisschen, was ist das, so ein Spray drüber gemacht.
Dass quasi die Elektronik nicht komplett rostet und kaputt geht.
Und das Ding ist an einem ESP32 dran.
Und das ist auf dem Friedhof.
Das heißt, ich bekomme immer mit, wann ich auf den Friedhof fahren muss und gieße.
Zum Gießen.
Ich kriege live, naja mit ein paar Stunden Verzögerung, einfach in Harz eingießen.
Ja, das ist so was.
Das ist so eine Art Harz.
Das ist irgendwas zum Sprayen.
Ich habe mir extra bei Amazon so eine Dose gekauft.
Ich glaube, das ist irgend so ein Harz.
Zum Spraysäuren.
So, und das, der Plan ist, dass ich das wieder auf den Friedhof bringe.
Weil da steht es ja aktuell nicht.
Und das überträgt dann die Daten vom Friedhof zu mir heim.
Und das funktioniert.
Das funktioniert.
Der Friedhof ist ungefähr 1,1 Kilometer weg.
Und da werde ich euch jetzt natürlich fragen.
Okay.
Wie möchte man 1,1 Kilometer Daten übertragen?
Das ist ja ganz schön weit weg.
Da habt ihr recht.
Das ist ganz schön weit weg.
Deswegen mache ich das auch nicht per WLAN.
Und ich habe da auch keinen Mobilfunk oder sowas drin.
Das mache ich mit LoRa auf 868 Megahertz.
Genau.
Mit so einem Modul.
Und so einer Antenne.
So einer kleinen Antenne.
Und das einzige, was da rausguckt an der Erde, am Grab.
Das ist tatsächlich die Antenne.
Und ihr werdet nicht glauben, wie gut das funktioniert.
1,1 Kilometer Übertragung.
Ich habe es natürlich.
Das haben wir sogar mal im Stream gemacht, oder?
Haben wir das nicht sogar mal im Stream zusammen ausprobiert?
Die Übertragung ist sehr langsam.
Also wirklich sehr langsam.
Wir reden da von Bytes.
Und noch nicht mal pro Sekunde.
Also keine Ahnung.
Ich sage jetzt einfach mal.
Ich habe fast das langsamste eingestellt, was geht.
Das sind dann irgendwie, keine Ahnung.
Ich sage jetzt einfach mal 20 Bytes.
In 5 Sekunden oder so.
Die Übertragung ist wirklich langsam.
Aber sie geht 1,1 Kilometer.
Und für ein bisschen Sensordaten ist es auch vollkommen egal.
Ob das Ding so lange braucht oder nicht.
Was soll das auf dem Friedhof machen?
Das war ja schon mal auf dem Friedhof.
Das misst die Bodenfeuchtigkeit.
Also wie nass die Erde ist.
Und wie nass die Erde ist.
Und wie nass die Erde ist.
Und wie nass die Erde ist.
Am Grab von meinem Opa und meiner Oma.
Am Grab von meinem Opa und meiner Oma.
Hast Glück gehabt, dass dich keiner
beim Buddel auf dem Friedhof erwischt.
Warum? Ich darf da auch Blumen ein- und ausgraben.
Das ist überhaupt kein Problem.
Das ist überhaupt kein Ding.
Oh, beste Outromusik.
Das ist nicht Mario 64.
Das ist...
Ist das nicht...
Ist das nicht die Mario 64 Credits?
Und nicht Mario Kart 64 Credits?
Warte mal,
bis ich die 5G-Fraktion sehe.
Ja, ich werd's dann erstmal ausprobieren.
So viel dazu.
Wir machen jetzt erstmal ein bisschen weiter.
Also, wir sind hier stehen geblieben.
Wir generieren uns beim Start vom ESP ein Zertifikat.
Ein Fake-Zertifikat natürlich.
Gucken, ob das geklappt hat.
Mit dem Zertifikat generieren wir nicht...
Achso, vorher machen wir WLAN an.
Und da ich mein Passwort nicht leake,
hab ich das hier
in der extra Datei ausgelagert.
Wir machen WLAN an, generieren ein Zertifikat.
Gucken, ob das Zertifikat generieren geklappt hat.
Dann starten wir den Web-Server.
Und...
Also auf Port 443, SSL.
Und dann unterhalb der Route
slash update
registrieren wir uns
die Funktion, wo dann
unser Firmware-Update hingeschickt wird.
Also sprich,
wenn ich
ein Firmware-Update hochlade,
also das ist die IP, die der Controller kriegt
im WLAN.
Wenn ich ein Firmware-Update hochlade,
dann kommt das in dieser Methode raus
und ich kann's auf die...
auf den Flash vom Controller schreiben.
So, soweit sind wir aktuell.
Ähm...
Und jetzt probieren wir nochmal aus,
wo wir stehen geblieben sind.
Was zuletzt funktioniert hat.
So, also starten wir mal
den Upload.
Äh, no route to host.
Weil andere IP gekriegt...
Was für eine IP hab ich gekriegt?
Ähm...
Insane Evie.
Wenn du ziemlich gute...
Also wenn du Sichtlinie...
Oder sag mal, wenn nicht so viel dazwischen ist,
kannst du mit LoRa auch 2,7 Kilometer machen.
Bei mir ist das Problem,
ich wohne zwar
jetzt nicht mitten in der Stadt,
aber auch nicht so richtig am Rand.
Ähm, ah ne.
Also wenn du wirklich in der Stadt wohnst,
dann geht das keine 2,7 Kilometer.
Allerdings geht das manchmal...
Also mit Glück, mit Glück
kann das trotzdem gehen.
Ich hab schon Leute gesehen im Internet,
die machen das so.
Die positionieren ihre LoRa Antennen quasi Richtung...
Richtung Wolken.
Richtung Himmel.
Und ähm,
die hoffen dann,
dass mal irgendein reflektiertes Signal ankommt.
Aber das funktioniert glaube ich
nicht zuverlässig.
Ja, aber selbst wenn du den Funkmaß baust,
bringt das nix, weil der Sensor selbst,
der ist ja bloß 10 Zentimeter über der Erde.
Minecraft-Mod? Ne, hab ich...
Null.
Fuck, ich hab schon wieder nicht geguckt.
Was hast du jetzt für eine IP gekriegt?
Ah, 60146.
So, gucken wir mal, ob das Ganze funktioniert jetzt.
Ah, geh runter.
Okay, also das Upload...
Was ist das hier?
Ah, was ist das?
Geh runter.
Okay, clear, getrackt.
Also der Upload funktioniert.
Sieht man ja.
Es wird immer weniger und dann schreibt das Ganze...
Ne, auf Flash schreibt das noch nicht.
Fertig, sehr schön.
Also der Upload klappt.
Also sprich, ich kann die Firmware hochschieben,
die Firmware kommt dann hier raus
und hier muss ich jetzt checken,
ob ich die Firmware...
wie ich die Firmware auf das Gerät schreibe.
WD-MyCloud...
Keine Ahnung, was das ist.
Ich weiß nicht, was das ist.
Irgendwas mit... irgendeine externe Festplatte wahrscheinlich.
Oh, das ist ein cooles Gehäuse.
Tatsächlich, ja.
Aber ich weiß nicht, wie gut das mit einem Bodenfeuchtigkeitssensor funktioniert,
weil der muss ja wahrscheinlich in den Boden.
So, also.
Es gab übrigens gestern noch einen schönen Hinweis,
was wir machen sollen ist,
wir sollen noch checken,
ob die Firmware die passende Checksumme hat,
nachdem wir sie erhalten haben.
Da habe ich mir mal schlau gemacht, wie das Ganze geht.
Man kann hier sagen...
Äh...
Update...
Set MD5-Summe.
Da kann man dann irgendwas...
Da kann man irgendeine MD5-Summe setzen
und am Ende, wenn das Update fertig ist,
checkt der, ob die MD5-Summe passt.
So, und deswegen
machen wir das jetzt erstmal mit der Checksumme.
Ich habe mir eben schon angeguckt, wie das Ganze funktioniert.
Also ich würde sagen,
wir machen das total simpel.
Das ist ja nix, was jetzt irgendwie absolut hackerresistent,
was auch immer,
wahnsinnig secure sein soll.
Ich möchte damit meine Geräte updaten.
Ich möchte es über HTTPS machen.
Aus...
Nicht wirklich nachvollziehbaren Gründen, weil...
Es ist eh außer meine Geräte in diesem WLAN niemand.
Das heißt, ich könnte es auch eigentlich ohne Probleme über HTTPS machen.
Aber irgendwie will ich es lieber über HTTPS machen.
Was ja auch der Vorteil ist, dass...
Wenn mal irgendein Gastgerät drin hängt oder so,
kann keiner meine Passwörter aus der Firmware auslesen.
Was schwachsinnig ist, was eh keiner macht, aber...
Ich finde es einfach besser,
Firmware-Updates über HTTPS zu machen.
Da, was ich weiß, da ist...
Wurscht, was ich übertrage, es kann keiner lesen unterwegs.
Musst du dann immer die neue Checksumme eingeben?
Ja, deswegen machen wir das über einen Parameter.
Und zwar...
Machen wir das so.
Fuck.
Das.
Wir quoten das Ganze mal.
Und zwar übergeben wir das einfach als Parameter
und sagen hier Checksum gleich...
Jetzt müssen wir mal gucken, wo unsere Firmware liegt.
Unsere Firmware liegt nämlich hier drunter.
Das ist unser Firmware-File.
So.
Dann machen wir das jetzt nämlich so.
So, jetzt haben wir die Firmware hier drin.
Und die können wir jetzt bei jedem Upload hier automatisch reinschreiben.
Wenn man sich nicht vercopy-pastet natürlich.
So, und jetzt überträgt der bei jedem...
Natürlich nicht so.
Sondern so.
Und jetzt überträgt der bei jedem Update...
Als Parameter in der URL...
Die MD5-Checksumme...
Für die Firmware.
Das können wir jetzt ausprobieren, ob das Ganze funktioniert.
Ähm...
Und zwar, wir machen jetzt hier keine Updates.
Wir lassen uns jetzt mal die MD5-Summe ausgeben.
Und zwar gibt es da eine...
Habe ich nämlich im Vorfeld schon geguckt, wie das Ganze funktioniert.
Es gibt hier so ein...
GetParams.
Und da gibt es ein GetQuery-Parameter.
So.
Und da wollen wir nämlich Checksumme haben.
Also sprich das da.
Und dann können wir hier übergeben.
In der URL.
Warum benutzt du denn die MD5-Summe, aber dann HTTPS?
Na, das eine hat mit dem anderen nur bedingt was zu tun.
HTTPS ist in dem Fall dafür da, dass...
Der sehr sehr unwahrscheinliche Fall, aber...
Der ist damit halt auch ausgeschlossen.
Dass jemand unterwegs quasi mitlesen könnte, was ich zum Controller als neue Firmware uploade.
Und die MD5-Checksumme ist dafür da, dass ich kontrollieren kann, dass die Firmware fehlerfrei angekommen ist.
Ja, ob jetzt MD5 oder SHAD-256 ist doch wurscht.
Für die reine Verifizierung, dass die Firmware richtig übertragen wurde, tut es die MD5-Checksumme auch.
Und ich glaube eingebaut hier in der Update Library vom ESP ist auch nur MD5.
Und deswegen mache ich es auch mit MD5.
Weil, warum soll ich was eigenes stricken, wenn hier schon MD5 dabei ist.
Was die Überprüfung für mich macht.
Das ist dann einfacher.
Also, wir holen uns jetzt mal den Checksum-Parameter.
Ähm, dann brauchen wir da einen Standard-String.
Den nennen wir irgendwie Checksum.
Vielleicht wurschteln wir das Ding dann.
Checksum.
So, jetzt gucken wir nach, wenn der Parameter da ist.
If Checksum... Oh, wie macht man das in C++ überhaupt?
Äh, ich glaube das ist was, das ist 0.
Ähm, dann sagen wir Update Setup.
Mit MD5... Ne, das geht anscheinend nicht.
Checksum.
Also, von der Idee her sollte es jetzt folgendermaßen funktionieren.
Ich schicke hier eine Checksumme mit.
Und der guckt, ob ich eine Checksumme mitgeschickt habe.
Wenn ich eine Checksumme mitgeschickt habe, dann überprüft er am Ende des Updates, ob die Checksumme stimmt.
So, und warum darf ich in C++ nicht überprüfen, ob das leer ist?
Was, und Checksum?
Ah ja, tatsächlich.
Macht er...
Nee, oder auch nicht.
Warum eigentlich nicht?
Steht doch explizit da, ich soll das als Referenz übergeben.
Warum, warum, warum geht das nicht mit einem unter vor?
Der sagt doch, ich soll das als Referenz...
Meiner Patrick hat auch recht.
Also, ich hab's eigentlich falsch gemacht, aber jetzt mach ich's richtig und jetzt ist es kaputt?
C++, äh...
Sind wir wieder beim eigentlichen Thema.
So, kann mir irgendjemand erklären, warum das nicht funktioniert?
Okay.
Ist das hier 0?
Ist das hier 0 überhaupt?
Ist das hier 0 oder ist das schon standardmäßig initialisiert?
Nee, na, das...
Kann man sowas machen?
Warum kann ich nicht gucken, ob da nichts drin ist?
Kann ein String nicht 0 sein oder so?
Ist das vielleicht so komische Convention irgendwie in C++?
C++ Check if 0 String.
String.
Weil du String empty brauchst.
Ja, pff.
Ich will das wissen.
Okay, String empty.
What the hell?
Okay, also wenn String not empty ist...
Ich glaub, das ist jetzt ein Bug, die Anzeige.
So.
Okay, das scheint zu funktionieren.
Das kann nur 0 sein, wenn's ein Pointer ist.
Ja, dann erklär mir aber mal,
dann erklär mir aber mal, warum das hier
valid ist.
Strings sind intern bestimmt schon Referenzen.
100 pro, sonst wird das hier nicht funktionieren.
Weil in C++
alles valid ist. Aber guck mal,
ein String muss ja
eine Referenz sein, sonst könnte ich meinen normalen
String ja nicht als Referenz übergeben.
Ähm...
Und wenn ich es als Referenz übergebe,
ist es ein Fehler.
Das heißt im Endeffekt, ein String
ist schon eine Referenz und das ist erlaubt.
So.
Das ergibt sonst keinen Sinn.
Das heißt, es ist schon eine Referenz.
Und aus irgendwelchen Gründen ist der Vergleich mit 0
nicht erlaubt, deswegen lassen wir's
einfach so und das muss funktionieren.
Besser
charArray. Ey, ohne
Scheiß, hätten wir dann ein charArray, dann wüssten wir wenigstens,
wie's funktioniert. So.
Ähm, das lassen wir jetzt so.
Jetzt uploaden wir das mal und gucken uns...
Ah ne, Moment, ich sollte vielleicht mal den Kram ausgeben.
Serial Brindeln.
Und zwar die
Checksumme.
Die Checksumme geben wir aber nur aus, wenn was gesetzt ist.
Auf uploaden.
Ich muss nochmal uploaden. Let's go.
Wow.
Achso.
Das geht natürlich nicht.
Weil das ja ein Standard-
String ist und das ist ja ein Arduino-
String.
Einfach voidcasten. Ja, im Zweifelsfall
ist dann... Dann, da ist
alles möglich, ja.
Upload. Fertig.
So, dann schauen wir mal,
was jetzt passiert.
Hm, vielleicht sollte ich einfach mal
als BinaryData
irgendwas
einfach mal leer lassen.
Ah, ne, da geht's nicht.
Ah.
Ah.
Ah.
Jetzt. Nein.
The fuck.
Ah.
Zu schnell.
Zu viel.
Warum eigentlich
genau 10++?
Ja, weil das das einzige ist, was ich nehmen kann.
Okay, Moment.
Wo ist hier mal ein anderer?
Der muss mal weg kurz.
Und sehe ich das nicht.
Es muss 10++ sein.
Etwas anderes. Du hast plus...
Es gibt zwei Varianten.
Also, es gibt drei.
Es gibt drei Varianten,
einen ESP32 zu programmieren.
So drei, sagen wir mal, drei verbreitete.
Es gibt das SDK
vom Hersteller.
Das ist ESP-
EDF. Das ist reines C.
Das ist reines C.
Dann gibt es
eine Arduino...
Portierung
auf einen ESP32.
Als Aufbau
auf dem ESP-EDF.
Das ist C++.
Und dann gibt es noch die Möglichkeit
eine Micro-Python-Firmware zu flashen
und Micro-Python zu machen.
Die Sache ist die, warum ich Arduino nehme.
Weil die ganzen Geräte
und Sensoren-Libraries
weil es dort
für Arduino am meisten gibt.
Am liebsten würde ich es in ESP-EDF
rein in C machen.
Allerdings hört es da schon auf,
beispielsweise meine kleinen LCD-Displays
anzusprechen.
Das funktioniert damit schon nur noch sehr umständlich.
Das ist halt super, weil es für Arduino
die ganzen Libraries gibt.
Es gibt da noch so eine Hybrid-Möglichkeit.
Man kann
ESP-EDF
verwenden und man kann
die Arduino-Implementierung
dort als Modul laden.
Das Problem ist jetzt,
das ist im Prinzip das, was die Arduino-Ladung
Leute auch machen, also die Arduino-Portierungsleute
auch machen, nur dass die davon
quasi stable Releases rausbringen.
Die Sache ist bloß die,
dass das permanent broken ist.
Und man
jeden Tag eine halbe Stunde
nachpatchen muss, bis es funktioniert wieder.
Okay, mal gucken, ob das jetzt mit der
Checksumme funktioniert.
Ah, yes, guck mal da, Checksumme.
Checksumme, wunderbar, funktioniert.
Excellent.
Habt ihr das gesehen?
Checksumme ist am Start.
Gut.
Dann,
dann legen wir mal los.
Also, wir wissen jetzt schon mal,
dass die Daten, die wir uploaden,
ankommen. Das heißt, wir sagen jetzt
Update Begin.
Update Begin möchte eine
Größe haben und wohin ich
mein Firmware-Update schreiben
will.
Was wurde aus dem Ladebalken? Der kommt gleich noch.
Der Ladebalken kommt gleich noch.
Den bauen wir gleich noch ein.
Klappt die Validierung auf die Checksumme?
Das werden wir gleich sehen.
Hast du schon mal versucht,
ein Arduino über ein Raspberry zu programmieren?
Nein, habe ich noch nicht.
C++, du tust mir echt leid.
Ja, ich habe keine andere Möglichkeit
in dem Fall. Also, die Firmware-Update-Funktion
möchte eine Länge haben
von der neuen Firmware und das Ziel, wo es hin soll.
Länge kriegen wir aus
dem Request
und das Ziel ist Flash.
Das Update
ist relativ clever.
Also, die eingebaute Update-Funktion
vom ESP32, die ist relativ clever.
Wenn das failed,
der hat standardmäßig
zwei Partitionen, nennen wir das mal Partitionen.
Drei. Drei Partitionen.
Der hat einmal,
ich sage einfach Partition 0,
das ist ein Bootmanager,
ein ganz, ganz Mini-Bootmanager.
Partition 1
ist eine Firmware.
Partition 2 ist eine Firmware
für OTA, also sprich für Update.
Das heißt, er schreibt quasi erstmal das Update,
der überschreibt seine eigene
Firmware nicht. Der überschreibt
die Firmware quasi auf eine zweite Partition
und erst, wenn ich sage Update
Finish End, dann
switcht er das im Bootloader um. Und beim nächsten
Boot ist er auf der neuen Firmware.
Und als dritte Partition hast
du so ein
Mini-Filesystem, wo du
Dateien drauf speichern kannst.
Du bekommst auch Mitleid, ja.
Du bekommst OpenGL plus C++ Mitleid.
Das ist ja beides eklig.
Man muss sagen, das ist gar nicht so schlecht.
Also, sogar auf dem ESP82
66 finde ich dieses Feature super.
Man kann nämlich einstellen,
man macht 1 MB
1 MB
Firmware Partition,
1 MB Update Partition
und 2 MB
Filesystem Partition.
Machen das Konsolen auch
mehrere Partitionen für Updates?
In etwas
komplizierter Art und Weise ziemlich sicher.
Jedes Gerät, was
kaputt gehen kann
bei einem Firmware Update, sollte
das so machen. Außer Nintendo.
Ich weiß es bei den neuen
Nintendo Konsolen nicht.
Bei der Wii
hat Nintendo
das bei Firmware Updates
ganz merkwürdig gemacht.
Die Wii hatte
alle
Firmware Releases,
die es jemals gegeben hat,
mit irgendwie
einem inkrementellen Algorithmus
dahinter, dass sie nicht alle speichern müssen.
Die hatten alle Firmware Releases
die es gegeben hat,
immer auf dem internen Speicher drauf.
Weil
Nintendo einen absoluten
Big Brain Schachzug gemacht hat.
Die haben sich gedacht,
wir können uns Flash Speicher sparen.
Ähm
Und ähm
Die haben
die Firmware gesplittet.
Die hatten quasi
einen internen Mini Firmware Teil
und die restlichen
Teile, die man für Spiele und Zeug
gebraucht hat, waren auf der
Game Disc mit drauf.
Das heißt, dass aber
der Firmware Teil, der auf der Game
Disc mit drauf war,
zu dem internen Firmware Teil
auf der Wii passen musste.
Deswegen mussten die auf der Wii
jegliche jemals erschienene Firmware
Version behalten.
Weil sonst hättest du ein altes Spiel eingelegt
und es wäre nicht mehr gestartet.
Das war Nintendo
Big Brain Logik.
Galaxy Beste.
Okay.
Remix.
Was benutzt du für eine Programmiersprache,
wenn du frei wählen darfst?
Kommt drauf an, für was.
Aber wenn ich die auf freier Auswahl habe
und was wofür es sich eignet,
eindeutig immer C-Sharp,
weil es meine absolut Lieblingssprache ist.
So, also wir machen jetzt ein Update
auf das Flash.
Auf das interne Flash.
Das heißt, wir sagen Update Begin.
Sollte es nicht passen,
dann geben wir den Fehler aus
und ich würde sagen, wir returnen
oder so.
Vielleicht returnen wir.
Mal gucken.
So.
Kennst du gute Ressourcen
zu Vulkan? Nee.
Ich muss sagen,
3D-Programmieren habe ich auch nur sehr
grundlegend Ahnung.
Ich hab mal in Rust
mit
Corona
Ich hab mich nur verschluckt an so komischen
Blaubeer. Blaubeer.
Ähm.
Ich hab mal in Rust eine
Teekanne angezeigt in OpenGL.
Die Teekanne ist so diese
Standardübung, die jeder
macht, der OpenGL
verwende. Aber mehr als
eine Teekanne angezeigt in OpenGL habe ich
noch nie. Dank diesem Tutorial
weiß ich aber, was der Unterschied ist zwischen einem Pixel-Shader
und einem Vertex-Shader.
Der eine sagt, wo der Pixel ist,
der andere sagt, welche Farbe der Pixel hat.
Okay.
Also wir schreiben das Update
auf das...
Wir sagen, wir wollen unser Update auf das Flash speichern.
Wenn wir nicht genug Platz
haben, dann schmeißen wir eine Fehlermeldung.
So.
Dann lesen wir die Firmware ein.
Das erste,
was wir bei jedem Schleifendurchlauf machen
ist, gucken,
ob es irgendwelche Fehler
gibt beim
updaten.
Sollte es Fehler beim
updaten geben,
schreiben wir das Ganze als Fehler raus und
brechen ab. Das brechen ab speichern wir uns
jetzt, weil wir gehen natürlich davon aus, dass
wir fehlerfreien, perfekten Code
programmieren, der nie abstürzt.
Gerade mit dieser
tollen HDDP-Library. Da brauchen wir keine
Fehlerbehandlung. Wir geben die Fehlermeldung raus
und alles ist gut.
So. Hier schreiben wir die
Firmware jetzt auf das Flash.
In den Flash-Speicher.
Ähm.
Kurz überlegen.
Ging das
nochmal hier? Update. Write.
Write. So. Und da muss man
jetzt sagen. Ich glaube,
wie viel er schreiben soll, ne? Genau.
Also
sprich Buffer,
was wir hier oben von unserem HTTP-
Request gekriegt haben, speichern wir
jetzt auf das Flash vom Controller.
Und so viel wir gelesen haben.
Also sprich wahrscheinlich meistens
512. So.
Dann haben wir das ins Flash geschrieben.
Jetzt können wir nämlich gleich gucken, ob es funktioniert.
Da haben wir das ins Flash geschrieben.
Ähm.
Wir haben hier unsere tolle Fehlerbehandlung.
Wenn es irgendeinen Fehler gibt, starten wir einfach neu.
Das machen wir hier oben auch.
Easy. Wenn es einen Fehler gibt,
starten wir neu. Easy. So.
Beste. Beste
Fehlerbehandlung aller Zeiten.
So.
Die Content Length,
die machen wir mal weg.
So. Ähm.
So. Und wenn das hier durchgelaufen ist,
wenn das hier durchgelaufen ist,
das bedeutet, ich habe das komplette
Firmware abgeloadet.
Würde bei einem Neustart
nicht jedes Mal trotzdem alles sich wiederholen.
Ne.
Das wird ja erst getriggert, wenn ich ein Upload starte.
Und dass ich neu ein Upload starten kann,
muss ich neu starten, weil
dieser komische HTTPS
Webserver Library ein bisschen
verbuggt ist. Und die dann hängt.
So. Also wenn die Schleife
hier durch ist, dann bedeutet es,
der Request ist fertig, ich habe
alles hochgeladen. Wenn ich
alles hochgeladen habe, checken wir am Ende
nochmal abschließend,
ähm, ob alles
funktioniert hat.
Ähm. Das habe ich übrigens abgeguckt aus
einer anderen Update-Geschichte. Da kann ich
sagen, okay, ähm, Update
ist fertig, lass mal Update abschließen.
Und nur wenn das hier klappt,
dann startet er auch neu und lädt das
neue Update. So.
Wenn das nicht funktioniert
hat, dann geben wir
die Fehlermeldung aus und starten
neu. Äh.
Und wenn das Ganze, wobei das
mit dem Neustarten können wir uns eigentlich sparen,
mit dem Neustart machen wir eh. Wir starten immer neu.
Wenn wir fertig sind, starten wir immer
neu.
Gibt keine andere
Variante. Wird immer
neu gestartet. Sprich, wenn wir hier
angekommen sind, wenn wir hier
angekommen sind,
dann sollte eigentlich
Update finished. Dann sollte das Update
eigentlich funktioniert haben.
Okay. Starting. Punkt, Punkt, Punkt.
Jetzt gucken wir mal, ob der Kram klappt, den
ich hier gebastelt habe.
Vielleicht erst Return-Status-Code. Ja, das
wäre gut. Dann
hängt nämlich der Client nicht.
Machen wir noch
einen Mini-Delay rein, dass er auch Zeit hat, das
zurückzuschicken. Würde es
nicht auch Sinn machen, den Fehler als HTTP-Response
zurückzu... Ja. Würde es.
Würde es, würde es, würde es. Müssen wir gleich
machen. Müssen wir gleich noch
richtig machen.
So. Also, von der Idee her sollte
der jetzt die neue
Firmware hochladen,
einen Checksummen-Check machen,
die...
Ne, am Ende soll der die
Checksumme checken.
Der sollte die Firmware hochladen, auf
Flash-Speicher schreiben,
einen MD5-Check machen
am Ende. Hier.
Und dann neu starten und eine neue Firmware laden.
Mal gucken, ob das jetzt klappt.
Ah, vielleicht hätte
ich mal eine...
Och, das geht doch relativ schnell.
Wenn das jetzt klappt,
geht das wirklich sehr, sehr zügig.
Update finished! Restarting!
Ähm...
Ich macht... Ich... Ne, ne, so wie
ich das verstehe, ist das... Hier
setzt man... Ähm...
What?
Oh.
Ne, glaub ich hab da Mist gemacht.
Ähm, so wie ich das verstehe,
setzt man hier, was am Ende
erwartet
wird. Also, ich
vermute mal, hier setzt man, was, was es
sein soll. Und am Ende
probiert er, probiert er, ob das
ähm...
dann auch stimmt.
Das heißt, ich muss gar nichts selbst machen.
So, das Update hat angeblich funktioniert.
Wir können jetzt mal ausprobieren, ob das Update funktioniert hat.
Wir schreiben hier einfach mal in unsere
Loop rein. Loop 1, 2, 3.
Das heißt, wenn ich jetzt ein Update mache,
und danach starte,
dann, äh,
sollte da jetzt Loop 1, 2, 3 stehen.
Also sprich, wenn jetzt gleich Loop 1, 2, 3
dasteht, hat das Firmware-Update übers WLAN funktioniert.
Vorher muss ich aber noch eine Sache
machen. Ich muss dem Ding ja sagen, dass er
die Firmware neu kompilieren soll,
vorm Uploaden. Ähm...
Home?
Wo liegt denn der Kram nochmal?
Home? Max?
Und dann Platform.io?
Äh...
Ach du Scheiße.
Wo liegt denn der Kram nochmal?
Pio...
Äh...
Oje.
Wo liegt das Platform.io Library nochmal?
Äh, äh, Binary nochmal?
Ähm...
Lib?
Naja.
Irgendwo hier. Pinf?
Bin?
Ups. Ah, da ist es.
Ah.
Jetzt kompiliert er den Kram
und lädt es direkt nacheinander hoch.
Ja, genau.
Er kompiliert die Firmware und jetzt lädt er es ab.
Ab. Jetzt lädt er es ab.
Wtf.
Das heißt, wenn er jetzt alles richtig gemacht hat
und neu startet...
Sollte da Monitor eigentlich gleich
Loop 1, 2, 3 stehen.
Bam.
Easy. Hat funktioniert.
Firmware-Update über WLAN erfolgreich.
Siehste? Und alles nur
dank der tatkräftigen
Unterstützung des Q-Chats.
Sonst hätte das nicht funktioniert.
Gut.
Firmware-Update funktioniert. So, das was wir hier gemacht haben,
ist natürlich ein bisschen Fail, weil die Verbindung
von WLAN und WLAN-Takt ab und er startet neu.
Das ist nicht so Sinn und Zweck der Sache.
Ähm.
Das sollten wir doch irgendwie anders...
Wird das auf Github veröffentlicht?
Kann ich machen. Ich weiß nicht,
wie viele Leute das wirklich interessiert.
Aber ich kann hier machen.
Ich kann es so einfach als...
Ohne mein WLAN-Passwort vielleicht.
Einfach mal so pushen.
Vielleicht so als Exempel.
Exempel ESP32 HTTPS OTA.
So.
Also.
Das funktioniert schon mal.
Das ist schön.
Ähm.
Das Passwort...
Ich habe eh ein eigenes Streaming-WLAN.
Da passiert nichts großartiges.
Ähm.
Ja gut, wenn das jetzt funktioniert.
Ist doch schon mal nice.
Dann...
Dann können wir das jetzt noch ein bisschen
schöner machen.
Ähm.
Wir brauchen noch eine ordentliche...
Ausgabe, was das macht.
Weil aktuell sehen wir hier gar nichts.
Wir haben ja unsere Curl-Progress-Bar.
Aber hier haben wir überhaupt keine ordentliche
Ausgabe. Ähm.
Was das Ding gerade macht. So.
Das heißt hier geben wir dann irgendwie sowas
aus von der Richtung hier.
Update in progress und dann Prozent.
Und da machen wir dann auch unseren krassen Spinner hin.
Wo haben wir den Spinner? Hier.
Der Spinner wird jetzt gleich noch
eingebaut.
Das es dann auch...
stylisch ausschaut.
Vielleicht kriegen wir das sogar
bei Curl als Antwort. Können wir das dann
schicken.
Also.
Sagen wir mal Update.
Prozent.
Von. Ja 100.
Ähm.
Nicht Printl.
Printf.
So.
Da müssen wir jetzt irgendwie den Progress errechnen.
Wie können wir den Progress
errechnen, wo wir gerade
sind beim Update?
Ähm.
Skillkiller schreibt.
Ich möchte prüfen, ob in einem Bild ein weißes Icon vorhanden ist.
Das Icon ist aber halb durchsichtig.
Hast du eine Idee, wie ich sowas trotzdem
über die RGB-Zahlen finden kann?
Ja.
Indem du es nicht mit RGB machst, sondern mit RGB-A.
Indem du noch den Transparenz-Channel
mitnimmst.
Weil du musst ja einen Transparenz-Channel haben.
Sonst wäre das nicht halb durchsichtig.
Oder verstehe
ich das nicht.
Dadurch, dass das Bild durchsichtig ist, musst du ja
einen Transparenz-Channel haben.
Sonst wäre das Bild nicht durchsichtig.
Dann musst du einfach in den Transparenz-Channel gucken,
ob an der Stelle, wo du Pixel suchst,
ob da was transparent ist.
Kommt drauf an, wenn er nur einen Screenshot hat,
dann hat er den Alpha-Channel nicht mehr.
Ja, aber wenn er nur einen Screenshot hat,
dann ist auch nichts durchsichtig.
Ach, du hast einen Screenshot.
Ah, ok.
Also sprich, das war mal durchsichtig.
Du hast es gescreenshottet.
Und jetzt ist es nicht
mehr durchsichtig.
Jetzt hast du immer den gleichen Hintergrund
vom Screenshot.
Wie könnte man sowas gut erkennen?
Hm, wie könnte man sowas gut erkennen?
Da fällt mir jetzt nichts ein.
Also wenn du...
Hast du das Icon in der ursprünglichen Variante?
Da könntest du wahrscheinlich
irgendwas subtrahieren voneinander
und gucken, ob es dann schwarz ist oder so.
Aber da fällt mir jetzt nichts gescheites ein.
Da muss man irgendeine
Magic machen wahrscheinlich,
dass man das rauskriegt.
Moin, Bananawave.
Jetzt habt ihr mich ganz verwirrt.
Was wollte ich denn machen?
Das ist glaube...
Es könnte sogar Wii Sports sein.
Ja.
Das scheint Wii Sports zu sein.
Ne, da habe ich gerade spontan keine Idee.
Das ist auch kompliziert.
Also, ähm...
Also generell,
Bilderkennung ist nicht ohne.
Aber wir sind hier im Jahr 2020.
Lasst es einfach von der Microsoft
ähm...
Bilderkategorisierungs-AI
in Azure berechnen.
Und bezahlt einfach pro Request.
Easy.
So, was wollte ich jetzt machen?
Ich habe das voll verdrängt, Leute.
Ah, hier. Anzeige, Update, Progress.
Ähm, okay.
Wie kann ich den Progress berechnen?
Ähm, blub, blub, blub, blub, blub, blub.
Aber sagen wir mal hier.
Auto.
Update. Progress.
Der fängt ja mal mit 0 an.
Sollte zumindest.
Hier oben.
Haben wir 0 Progress, weil wir haben auch nichts eingelesen.
Ähm...
So, da haben wir
File Length.
File Length, so.
Irgendwie müsste man doch jetzt ausrechnen können.
Also quasi
so was in Form von
wenn das was eingelesen ist,
dann sagen wir jetzt einfach
äh...
Update. Progress.
Ne, nicht plus, gleich.
Gleich.
Ähm, was haben wir hier oben?
File Length.
File Length.
Äh...
File Length ist das, was ich aktuell
eingelesen habe.
Also im Prinzip
Länge.
Länge durch
File Length, oder?
Gibt das Sinn?
Also quasi insgesamt
Länge. Vielleicht soll ich es mal
besser nennen. Insgesamt Länge durch
File Länge. Ist das Sinnprozent? Dann mal 100?
Ergibt, ergibt das Sinn?
Passt das,
was ich da mache?
Ist das Visual Studio Code? Ja.
Gibt das Sinn, was ich hier mache?
Probieren wir mal aus,
ob das funktioniert. Ob wir jetzt eine ordentliche Anzeige
bekommen, wie weit das Update ist.
Du, du, du, du,
du, du, du.
So.
Mal gucken, ob das jetzt funktioniert mit dem Progress.
Wie ich mir das gedacht habe.
Oh.
Quickmuffs.
Nicht so ganz.
Ach ne, ist ja auch falsch rum.
Ist ja auch falsch rum, oder?
Das stoppt,
das stoppt jetzt bei 100 von 100 gleich.
Das ist ja auch falsch rum.
Ich bin ja auch...
...
Okay, warte mal.
Ich will ja eigentlich auch
File Length
mal 100
durch insgesamte
Länge.
So, ich glaube, das ist
eher das, was ich haben will.
Quickmuffs, Leute.
Excellent.
Gucken, ob das
jetzt klappt.
Alles andere easy, aber so Ausgaben
macht es immer kompliziert.
So.
Upload. Bam.
Okay.
Bless RNG.
Funktioniert's?
Ah, yes, excellent.
Ich habe wieder mein Headset
ausgemacht auf der einen Seite. Wie geht denn das?
Wie schaffe ich das immer,
mein Headset auf der einen Seite auszumachen?
Das kann doch nicht sein.
Moment, ich glaube, das ist einfach
ein bisschen...
So, jetzt.
Das hat rumgespackt,
das Kabel.
Ah, ja. Wieso nicht Prozent dahinter?
Hat keinen tieferen Sinn.
Blobsrusher, drei Monate.
Danke schön.
Komm mal, funktioniert.
Update 100, 100, 100. Huge.
Wir können das jetzt noch
besser machen. Wir können jetzt sagen,
Progress.
Jetzt machen wir so, nur
wenn der aktuelle Progress größer
ist wie der letzte Progress,
nur dann updaten wir
Progress.
Und nur dann geben wir
was aus. Dann spammen wir nicht so rum.
Und spammen immer nur dann rum, wenn wir
eine neue Prozentzahl erreicht haben.
Was passiert hier?
Wir updaten übers WLAN
meinen...
einen ESP32.
Allerdings nicht einfach
nur updaten übers WLAN, sondern über
HTTPS updaten. Also verschlüsselt
updaten. Über verschlüsselte
Verbindung updaten. Und es scheint
tatsächlich zu funktionieren.
Ja, kann man. Okmim, kann man.
So, gucken wir mal wieder, ob
das Firmware-Update klappt.
Bam.
So, und von der Idee
jetzt, sollte der
jetzt weniger spammen und trotzdem
den Progress anzeigen.
Hey!
Easy.
Easy, easy.
Easy as fuck.
E-e-easy as fuck.
Funktioniert.
Easy as fuck.
Es geht sogar relativ schnell, oder?
Für das, dass das ein verschlüsseltes Update ist.
Also über eine verschlüsselte Verbindung geht.
Restart. Finished.
Jetzt startet er neu mit Loop 5.
Yep. Funs.
Cool.
Sebaru, du hättest es gerne auf 10 Nachkommastellen genau.
Ja, das können wir machen.
Wir sorgen einfach dafür,
dass wir hier... Wir verwenden Doubles.
Wir machen Floats. Floats
sind uns zu ungenau, oder?
Wir verwenden Doubles.
Richtig.
Nee, wir lassen das so.
Das ist doch ganz nice.
Ja, das funktioniert erstaunlich gut.
So, aber jetzt können wir
noch mal eines... Wir wollen ja unseren Spinner
noch einbauen. Hier, den da.
Spinner.
So.
Was hat der eigentlich für Schmerzen hier?
Warum kackt... Achso, weil der Header fehlt hier.
Include Arduino.
Hat jemand von euch
eigentlich eine Ahnung?
Jetzt frage ich mich schon eine ganze Weile.
Ich meine, ich könnte Google fragen, aber
der Chat ist ja immerhin
immerhin der...
Der Chat weiß das bestimmt auch.
Was ist denn
der Unterschied zwischen
Anführungszeichen Arduino
oder
ähm ähm ähm
Spitze Klammer auf und zu Arduino?
Jetzt noch was, wo die Versionsnummer
ausgelesen wird.
Du meinst quasi,
die If-Versionsnummer größer, nur dann updaten?
Klammer auf,
Klammer zu sucht im Pfad, der mit i angegeben ist.
Ja gut, da editiere ich eh von Hand
nichts dran.
Keks Point Wastes.
Keks Point Wastes im Chat.
Kommt mir irgendwie bekannt vor.
Ist das... Ah ne, kenn ich nicht.
Aber Kirby-Musik, immer gut.
So, unser toller, toller
Kommandozeilen-Spinner.
Den können wir jetzt mal wieder einbauen.
Und zwar
löschen wir mal alles,
was auf der Zeile steht.
Wir brauchen noch ein...
Wo haben wir denn hier?
Ein globales Spinner-Objekt.
Äh, geht nicht, weil
include helper
Äh, macht man eigentlich
include helper
Dings
HPP
Ach, was auch immer.
Kann man eigentlich auch direkt
CPP-Dateien includen?
Und dann einfach alles in einem
schreiben und auf diesen altertümlichen
Header und Implementierungskram
scheißen?
Äh, wieso eigentlich
eine Checksumme mit MD5 und nicht
mit Chart 256? Ganz einfach,
weil
das Ding nur MD5-Summe
eingebaut unterstützt und alles andere
müsste ich selbst machen.
Ich verstehe eh nicht, warum die mal
sich im C++-Gremium nicht mal
eh ein bisschen den Sachen
widmen, dass das ein bisschen, ein bisschen,
moderner wird alles, ja?
Das ganze rumhantieren mit irgendwelchen
Header-Files und, und
man muss das so includen.
Es fängt ja schon damit an, dass man
in, in Headern sowas hier oben
reinschreiben muss.
Ups, hallo?
Das ist nicht doppelt included und solche Dinger.
Warum muss ich mich um so'n Crap überhaupt noch
kümmern im Jahr 2020?
Die sollen ein ordentliches
Modulsystem machen.
Die sollen ein ordentliches
Modulsystem machen
und auf diesen ganzen
Header-Implementierungskram scheißen,
meiner Ansicht nach.
Dann könnte man nämlich auch einen ordentlichen
Paketmanager für C++ machen.
So wie es
jede halbwegs moderne
Programmiersprache mittlerweile hat.
Das ist richtig oi,
Threehead.
Aber das C++-Gremium spritzt sich eh immer
die harten Sachen, bevor die irgendwas beschließen.
Anders kann ich mir da viele Sachen nicht
erklären, ey.
Ich mein, die C++-
Lambda-Syntax ist schon
abenteuerlich, ja.
Aber wenn man da noch checken muss, dass man
an manchen Stellen Funktionen
verwenden kann, aber keine Lambdas verwenden kann
und manchmal auch keine Funktionen in Klassen, aber
Funktionen außerhalb von Klassen funktionieren,
manche Sachen du als Standard
function casten kannst und manche
nicht, und dann
ist, dann ist vorbei. Also,
ne. Und eine Sache über die
ich ja immer flamen könnte bei C++ ist,
warum enthält Standard-String
kein toLower und toUpper?
Ist das, sind das so
bloated Methoden,
dass eine Standard
Library-String-Implementierung
kein toUpper und toLower
kann, oder wie? Ist das, ist das zu bloated
für C++? Das geht nicht.
Es gibt, es gibt
standard toLower, standard toUpper,
ähm,
aber warum ist sowas nicht eingebaut? Wozu hat man Klassen,
wenn es nicht in der Klasse eingebaut ist?
Ja, es gibt ne standard toLower,
ne standard toUpper, aber warum ist das nicht
in der String-Klasse drin?
Damit stelle ich doch in Frage, warum
ich überhaupt Klassen hab, wenn das nicht dabei ist.
Ähm,
wo hab ich jetzt aufgehört zu editieren? Ja,
Helper haben wir eingebunden,
Spinner haben wir auch eingebaut, jetzt gucken wir mal, dass wir hier einen schönen,
ähm,
einen schönen Progress-Balken hinbekommen.
Spinner.
So. Ähm.
Guck mal, ob das jetzt klappt.
Wow, was, ist es kaputt, Leute.
Achso.
Weil das ja ein
Standard-String ist und
kein C-String.
Wat? Was?
Redefinition?
Wat? Ah.
Hups. Haha. Hups.
Haha.
Was hat der hier für Schmerzen?
Wat?
Okay, irgendwas hab ich falsch gemacht. Warte mal.
Irgendwas hab ich falsch gemacht.
Oh!
Falscherum, Leute. Falscherum.
Ah, yes.
So ist besser. Gleich nochmal uploaden. Falscherum.
Zuerst
der Warte-Balken und dann die
Fortschrittszahlen.
Diesmal hast du sogar die IDE auf, weil du hast gestern verpasst.
Wir haben gestern das fast, fast, fast schon fertig gemacht.
Ist das Linux?
Ja. Das ist ein
Manjaro mit i3-WM.
Unfair, der Compiler
hat immer recht, ja.
So sieht's aus.
Und wenn er mal nicht recht hat,
kannst du auch nichts dagegen machen.
War nur da, als du über Corona gesprochen hast.
Kann ich verstehen, da wäre ich auch abgehauen.
Oh, Serial. Output.
Oh, Leute.
Der Spinner funktioniert.
Poggers, oder?
Huge Pog.
Momente mal.
Warum schreibt er das jetzt untereinander?
Ach so.
Weil ich ihm sage, dass er es untereinander schreiben soll.
Richtig pepegal.
Richtig.
Ja, Tommy, das kann ich verstehen.
Das ist überall gerade.
Was macht das Backslash R?
Das setzt die Stelle, wo geschrieben wird, wieder am Anfang der Zeile zurück.
Das kommt noch aus Schreibmaschinen-Zeiten.
Also sprich,
der schreibt was hin
und beim nächsten Durchlauf
setzt er einfach dort, wo er anfängt zu schreiben,
wieder am Anfang der Zeile und überschreibt das damit.
Warum direkt viermal?
Weil ich mir nicht ganz sicher bin, wie...
Eigentlich ist es bescheuert.
Warum viermal?
Ich habe keine Ahnung.
Eigentlich kompletter Schwachsinn, warum ich viermal reingemacht habe.
Das ist ja kein Tab, der eine gewisse Länge hat.
Es ergibt keinen Sinn, warum es viermal drin ist.
Jetzt, wo ich drüber nachdenke, ergibt das keinen Sinn.
Guckt euch das mal an.
Ist das nicht ein wunderschöner Update-Indikator?
Massive.
Das ist das.
Der Premium-Update-Indikator.
Wahnsinn.
Was macht dein Programm?
Also, was ist das Ziel?
Das Ziel ist, dass ich meine Microcontroller,
die ich hier im Haus im Einsatz habe,
über WLAN updaten kann.
Und nicht einfach nur über HTTP,
sondern ich habe mir in den Kopf gesetzt,
ich will das Ganze über HTTPS machen.
Und das hat sich deutlich schwieriger gestaltet,
als ich das angenommen habe am Anfang.
Über HTTP ist es total einfach.
Da gibt es sogar fertige Sachen.
Da machst du eine neue Firmware,
upload über HTTPS,
und gut ist,
über HTTPS musst du den Kram selber machen.
Es gibt einen HTTPS-Webserver hier,
für den Controller.
Aber das eigentliche Handling vom Update
muss man selber machen.
Und scheint zu funktionieren.
Und statt Loop 5...
Nee, Loop 5 ist das eigentliche Programm.
Das eigentliche Programm macht aktuell nichts,
außer Loop 5 ausgeben.
Also hier, hier kommt das eigentliche Programm hin.
Den Kram können wir übrigens rausschmeißen.
Das heißt, wir müssen den Kram ausgeben.
Das eigentliche Programm ist halt zur Zeit nur eine Zeile lang.
Es geht mir ja auch darum,
dass ich das Update implementiert kriege.
Baust du noch einen Trigger
zum Start des Webservers ein
oder verbrennt die Loop später
24 Stunden Strom und Leistung?
Ja.
Kannst du eh nichts dagegen machen.
Es gibt keine Möglichkeit,
den Kram irgendwie...
Also du kannst in...
In einem Task kannst du sagen,
ja, ich kann den Kram ausgeben.
Dann kannst du sagen,
ja, ich gebe meine CPU-Zeit ab.
Aber im Endeffekt,
wenn alle Tasks ihre CPU-Zeit abgeben,
läuft trotzdem eine Endlosschleife.
Also es gibt da keine Stromsparmodi für die CPU.
Das einzige, was du machen kannst,
ist Deep Sleep.
Und dann läuft gar nichts mehr in der Zeit,
wo er Deep Sleept.
Das kann man machen.
Man kann sagen Enter Deep...
Hier.
Du kannst sagen,
du kannst ESP Deep Sleep Start machen.
Ähm...
Und dann macht er halt gar nichts mehr.
Bis der Wake-up Interrupt kommt.
Oder der...
Oder der Wake-up Timer.
Ja, sag ich ja.
Du kannst entweder einen Wake-up Interrupt
oder einen Wake-up Timer machen.
Wie versorgst du die Teile später mit Strom?
Moin Michael, 50 Billionen.
Ähm...
Es gibt...
Zwei Varianten,
wie ich das aktuell mache.
Die eine Sache ist...
Am Hoftor.
Der ist mit Batterie.
So, ich starte mal kurz ein Update.
Dann werde ich das alles beantworten,
was im Chat steht.
Erst mal Update gucken, ob das jetzt funktioniert.
Also eine Sache ist mit Batterie.
Da habe ich so eine 500...
1200 mAh...
Was ist das?
Lithium...
Polymer?
So ein Akku.
So ein kleiner Akku-Pack ist das.
So eine kleine...
Ähm...
So ein kleiner Akku, der ist so...
So groß wie Zeigefinger
und Mittelfinger zusammen.
So ein kleiner, kleiner Akku.
Nee, kein 18650.
Da habe ich auch welche für.
Fuck, jetzt habe ich geguckt.
Hat es jetzt funktioniert?
Hat es jetzt eigentlich funktioniert?
Okay, ich muss nochmal updaten.
Die verwende ich
bei der Geschichte am Hoftor.
Und...
Das andere ist halt einfach über USB.
Doch es gibt noch eine dritte Variante.
Die Weihnachtsbaumbeleuchtung.
Als einziger.
Die Weihnachtsbaumbeleuchtung läuft direkt über das Netzteil.
Weil das sind 5 Volt LEDs.
Für den Weihnachtsbaum.
Und an dem 5 Volt habe ich auch gleich den Controller dran.
Aber den Rest, den versorge ich tatsächlich über USB.
Ähm...
Ich habe einen Akku.
Und mit Deep Sleep hält das Zeug auch relativ lang.
Ich habe wieder nicht geguckt.
Meine...
Leute, ich muss jetzt mal was anderes reinschreiben.
Hat es jetzt funktioniert?
Vielleicht sollte ich mal kurz gucken, ob das auch mal macht,
was ich so denke.
Ja, Update. Okay.
Ähm...
Seit wann bekommt man hier Kekse und keine Punkte?
Seit diesem Stream.
Ähm...
Und Potato Churchman.
Aber der dürfte nicht wirklich viel Strom verbrauchen.
Doch, schon.
So, jetzt muss ich mal kurz gucken,
was...
Ah, yes. Hat funktioniert.
Hat funktioniert.
Ja, nice.
Ja, du hast recht.
Nach dem Update finished muss ich noch
eine New Line davor machen.
So.
Darf man das überhaupt in Brindeln reinschreiben? Geht das?
Macht er das wahrscheinlich?
Macht er das?
Ähm...
Der verbraucht nicht viel Strom.
Doch, ähm...
Der verbraucht zwar im Vergleich zu PC
oder im Vergleich auch zu einem großen Raspberry
oder auch zu einem Raspberry Zero
braucht er nicht viel Strom,
aber er braucht zu viel
für
an einem Akku.
Und es gibt hier einen schönen Rechner,
wenn man mal so grob ausrechnen will,
wie lang das hält.
Muss ich mal kurz...
Ich kann mir immer nicht merken, wie das Ding heißt.
Der da.
Der da.
Da kann man eintragen,
wie viel Zeit das Ganze im Deep Sleep ist,
wie viel die Hardware braucht, wenn sie an ist
und wie viel das Ganze im Deep Sleep verbraucht.
Das können wir jetzt mal beispielsweise exemplarisch eingeben.
Also die Hardware verbraucht, sagen wir mal,
100...
150 Milliampere, wenn sie an WLAN...
Ähm...
Ja, du hast recht.
Aber das will ich eh rausschmeißen.
Wenn ich weiß, dass es funktioniert.
Die Build Time.
Echt? Kann ich da einfach...
Geht das?
Habe ich noch nie gemacht.
Das ist so eine globale Makro-Geschichte.
Gibt es denn so ein Time?
Oh.
Excellent.
Was ist das für ein Ding?
Ein String.
Das probieren wir mal aus.
Das muss ich jetzt mal gucken.
Der Chat hat mal wieder zugeschlagen.
So, also.
Gucken wir mal in den Calculator rein.
Also, die Controller brauchen so ungefähr 150 Milliampere,
wenn sie WLAN übertragen.
Gehen wir mal von aus, der braucht nur 100,
weil der ab und zu mal nur WLAN was überträgt.
Duration of Code Execution lassen wir aus,
weil der läuft permanent.
Sleep Time 0.
So, Deep Sleep Mode gibt es nicht.
Und das ist 1200 Milliampere Stunden.
Ähm, Batterie.
Ging das nicht so?
Musste man da jetzt irgendwas eintragen?
Ah, 0, genau.
Also hier ist im Prinzip egal, wieviel ich eintrage.
Ich muss die Sleep Time auf 0 stellen.
Das ist das.
Also, wenn er permanent an ist,
dann siehst du, das Ding würde nur 9 Stunden laufen an so einer Batterie.
Also, die verbrauchen nicht viel Strom.
Die verbrauchen im Vergleich zu einem Raspberry Zero,
verbrauchen die...
relativ wenig Strom, aber es reicht trotzdem nicht,
um die 24-7 an der Batterie laufen zu lassen.
Eine Möglichkeit wäre schon,
wenn man irgendwie ein bisschen größeren Akku-Pack dran macht.
Einen größeren Akku-Pack dran macht
und dann irgendwie noch Solar oder so.
Ähm...
Das wäre vielleicht möglich,
aber die viel schönere Variante ist,
der Kram, der muss ja meistens gar nicht permanent laufen.
Also, bei meinem Bodenfeuchtigkeitssensor mach ich so,
da wache ich, glaube ich, fünfmal am Tag auf und übertrage was
und gehe gleich wieder in Deep Sleep.
XFightle1337, zehn Monate, dankeschön, huge sub.
Massive. Six-Hat-Subscriber.
Der IQ ist heute wieder eh ganz oben im Chat.
Das funktioniert, mit der Build Time, das habe ich noch nie gesehen.
Gibt es irgendwo noch woanders,
wo man gucken kann, was es noch so für Makros gibt?
Warum kann ich das Makro überhaupt nicht anklicken?
Wo ist das überhaupt defined?
Oder ist das irgendeine Compiler-interne Geschichte,
die nirgendswo defined ist?
Gut, die kann ja nirgendswo defined sein, weil...
Sonst wäre sie ja nicht dynamisch beim Kompilieren.
Aber das ist cool. Das gefällt mir echt.
Das heißt, wenn ich jetzt neu kompiliere und uploade,
dann habe ich danach gleich die neue Build Time.
Das finde ich äußerst nice.
Um nicht zu sagen.
So, und... Genau, zum Thema Laufzeit.
Man kann mit Deep Sleep echt viel machen.
Weil...
Ich sage mal, niemand möchte eigentlich eine Sensordaten
wirklich im Takt von irgendwie 100 Millisekunden übertragen.
Wie viele Zeilen Code wohl der normale GCC-Compiler hat?
Gibt es bestimmt ein GitHub.
Gibt es bestimmt ein GitHub-Mirror, genau.
So, ach du Scheiße.
So, Statistics.
Äh, Statistics, wo steht denn der Kram?
Hier.
Ach nee, da steht gar nicht wie viel, oder was?
Oh...
Das ist ja doof.
Ich dachte, man sieht, wie viele Codezeilen das sind.
Aber ich meine, es sind ja allein schon 48.000 Dateien.
Also, GCC ist relativ umfangreich.
Es soll ja mittlerweile so schlimm sein,
dass sogar die GCC-Pros nicht mehr richtig GCC-maintain.
Hast du deine Beleuchtung auch in Home Assistant?
Und wie hast du diese umgesetzt?
Nur teilweise. Ich habe gar nicht so viel fancy RGB-Beleuchtung.
Ich habe ein paar Shelly Cloud Relays.
Am Stromschalter sind die.
Äh, am Lichtschalter.
Die kann man hier in die Dose einbauen.
Am Lichtschalter sind die.
Dann habe ich eine Lampe mit wechselnden Farben.
Die zeigt mir an, wie viel Verspätung die Bahn hat.
Kein Witz. Das Einzige ist weg von dem Ding.
Bis morgen sehe ich, wie viel Verspätung man zu hat.
Ähm...
Ansonsten habe ich nicht so viel Beleuchtung.
Also Dauer-Blink.
Nee, die blinkt nicht. Die schwankt von grün zu rot.
Also von grün zu orange zu rot.
Na, so ganz stimmt die Bildzeit nicht, oder?
20.06 Uhr.
Äh, die USB-Schraube.
B-Schalter sind verschickt.
Hat AliExpress vor zwei Tagen geschrieben.
Äh, kannst du das erklären, wie du das mit dem Zug machst, mit der Zugverspätung?
Ja, kann ich dir zeigen.
Ich muss dir aber zusagen, so 100%ig verlassen kann man sich nicht drauf,
weil die Bahn-API manchmal rumspackt.
Damit mache ich das.
Also trotzdem immer noch mal auf dem Smartphone gucken,
was wirklich der Fall ist.
Darüber mache ich das.
Das ist schon fertig eingebaut in Home Assistant.
Da kannst du Tricks sehen.
Du klickst in deine YAML-Config ein.
Und musst du sagen, von wo nach wo.
Man kann auch sagen, dass man nur, genau das ist wichtig,
dass man nur direkte Verbindungen...
Nee, ich bin mittlerweile auch auf dem Standpunkt,
dass ich, wenn ich mit dem zufrieden bin,
oder sag mal so, wenn ich 90% mit dem zufrieden bin,
was es gibt,
dass ich eher das verwende, was es gibt,
weil da muss ich mich nicht drum kümmern.
So, und dann sagst du, only direct connections.
Und dann hast du den Sensor.
Und dann hast du den Sensor.
Und dann ist halt Home Assistant Magic,
wie du eine Lampe ansteuerst.
Ja, ich wollte noch was zum Thema Deeps.
Das wirklich updaten tut sich das nicht, oder?
Die Zeit.
Da steht die ganze Zeit schon 20.06.
Ach, wahrscheinlich, weil ich nichts geändert hab, hä?
Der hat wahrscheinlich gar nicht neu kompiliert.
Der ist wahrscheinlich Big Brain und hat gesagt,
aha, es hat sich im Source Code nichts geändert,
ich kompiliere gar nicht neu.
Und welchen Output hat sie?
Die Lampe leuchtet, wenn der Zug Verspätung hat.
Nee.
Nee.
Die Lampe leuchtet morgens immer.
Die leuchtet grün.
Oder die leuchtet in irgendeinem anderen Farbton bis zu rot.
Über orange.
Haha.
Jetzt hat es funktioniert.
Okay, man muss auch was kompilieren, dass es klappt.
Abhängig dann vom Grad der Verspätung.
Genau.
So sieht es aus.
Excellent sieht es aus.
Also, der Updates-Update-Geschiss funktioniert.
Das ist doch schon mal schön.
Ähm...
Grün für aufstehen und rot für hast du nicht aufstehen.
Eigentlich eher umgedreht.
Umso mehr Verspätung der Zug hat, umso länger kann ich theoretisch pennen.
Aber ich sehe das erstmal nicht auf, wenn ich aufstehe.
Also, die hängt im Flur.
Die hängt über meinem Arbeitszimmer.
Über meiner Arbeitszimmertür hängt die.
Schräg gegenüber ist die Tür von meinem Schlafzimmer.
Also sprich, sobald ich morgens rauskomme, sehe ich, was die für eine Farbe hat.
Und wenn die rot ist, dann weiß ich schon, die Bahn hat es komplett verkackt.
Weil ich wohne nicht so weit weg von der Station, in Aschaffenburg fährt der Zug los.
Und ich bin nicht so extrem weit weg.
Das heißt, wenn das rot ist, wenn ich aufstehe, dann ist komplett verschissen.
Dann ist sogar die Frage, ob ich nicht zum nächsten Bahnhof gehe.
Was ist das für eine Lampe?
Boah...
Ähm...
Da muss ich in meiner Amazon-Historie nachgucken.
Irgend so ein...
Billig...
Billig-China-Ding.
Kann ich dir gerade nicht sagen.
Irgendein...
Gibt es so etwas wie Yeelight?
Gibt es so etwas?
Jela...
Das könnte...
Es ist auf jeden Fall über SeaWave steuerbar.
Nee...
Ich sag es dir.
Ich kann es dir sagen, aber das ist nichts tolles.
Das ist irgendeine billige...
Billige-China-RGB.
Lampe...
Ich finde es nicht.
Vielleicht habe ich es nicht über Amazon bestellt.
Wenn ich es nicht über Amazon bestellt habe, dann...
Keine Chance, jetzt das zu finden.
Ah! Hose?
Nee, eine Hose ist es nicht.
Nee.
Keine Ahnung.
Sollen wir LED vielleicht suchen?
Hm...
Ah! Hier!
Ich habe es gefunden.
Das Ding ist das.
Habe ich mal bei Amazon...
Habe ich mal bei Amazon...
Billig...
Billig gesehen, habe es mir bestellt.
Das Teil...
Geht über...
Geht über...
Nee...
Ist das überhaupt das Richtige?
Also, ich sag mal so.
Es ist die einzige Lampe, die ich über meine Amazon-Bestell-Historie gefunden habe.
Die Chance, dass es diese Lampe ist, ist relativ hoch.
Die Chance, dass es diese Lampe ist, ist relativ hoch.
Es ist auf jeden Fall eine Z-Wave-Lampe.
Es ist auf jeden Fall eine Z-Wave-Lampe.
Weil ich das meiste Wireless-Zeug an Geräten über Z-Wave mache.
Weil ich das meiste Wireless-Zeug an Geräten über Z-Wave mache.
Weil ich das meiste Wireless-Zeug an Geräten über Z-Wave mache.
Ja.
So, um jetzt noch mal ganz kurz was zu sagen zur Laufzeit von dem Ding.
Also, dass man nämlich sieht, dass Deep Sleep richtig was bringt.
Also, dass man nämlich sieht, dass Deep Sleep richtig was bringt.
Aber, dass man auch das richtige Board haben muss.
Also sprich, wenn sich jemand jetzt so einen...
Also, mit das beliebteste ESP32-Boards dürften diese Dinge sein.
Also, mit das beliebteste ESP32-Boards dürften diese Dinge sein.
Also, mit das beliebteste ESP32-Boards dürften diese Dinge sein.
Die sind auch super, um Sachen auszuprobieren.
Die sind auch super, um Sachen auszuprobieren.
Das sind die besten Boards, um irgendwas auszuprobieren.
Die kommen nämlich komplett fertig.
Mit ordentlich Flash-Speicher, vorgelöteten Pins, USB, alles dabei.
Mit ordentlich Flash-Speicher, vorgelöteten Pins, USB, alles dabei.
Und ist nicht so teuer.
Ich kann es über AliExpress kaufen, kostet die Hälfte.
Ähm, allerdings sind diese Boards nicht für Deep Sleep geeignet.
Ähm, allerdings sind diese Boards nicht für Deep Sleep geeignet.
Man kann zwar Deep Sleep machen, und dafür brauchen die auch weniger.
Man kann zwar Deep Sleep machen, und dafür brauchen die auch weniger.
Aber die schalten beispielsweise die Spannungsversorgung und Spannungswandler für USB nicht aus.
Aber die schalten beispielsweise die Spannungsversorgung und Spannungswandler für USB nicht aus.
Aber die schalten beispielsweise die Spannungsversorgung und Spannungswandler für USB nicht aus.
Was heißt, das verbraucht im Deep Sleep gar nicht so viel weniger, wie im laufenden Betrieb.
Was heißt, das verbraucht im Deep Sleep gar nicht so viel weniger, wie im laufenden Betrieb.
Was heißt, das verbraucht im Deep Sleep gar nicht so viel weniger, wie im laufenden Betrieb.
Zwar schon ein bisschen, aber nicht viel.
So, und das sackt natürlich massiv.
So, und das sackt natürlich massiv.
Und wenn man aber das richtige Board dafür hat, dann braucht das ungefähr, sagen wir mal, 11 mA im Deep Sleep.
Das heißt, wenn wir jetzt mal davon ausgehen, dass wir 2 Sekunden was ausführen und danach 2 Minuten Deep Sleepen,
dann sieht man schon, jetzt hält die 120 mA Akku auf einmal schon 24 Tage.
So, und umso sparsamer man hier wird, umso mehr geht das Ganze hoch.
Das sind mA, das sind mA, ja.
Und das sind mA Stunden.
Oder was meinst du?
Also das ist Absicht.
Ich sag ja, wenn man ein Board hat, was ordentlich Deep Sleep kann, dann ist das ungefähr der Verbrauch im Deep Sleep.
Die Node MCUs brauchen eher das als das.
Brian sagt, habe meine Hausautomatisierung mit Open Hub gemacht für KNX.
Ne, 11, dann habe ich mich falsch verstanden. Es sind 11 mA im Deep Sleep mit einem guten Board dafür.
Ja, also ich habe mit Open Hub noch nichts gemacht, aber Open Hub ist Java, soweit ich weiß.
Das hat mich schon mal abgeschränkt damals.
Und mit KNX habe ich noch gar nichts gemacht.
So, und das Ding, was ich beispielsweise am Friedhof installiert hatte,
weil ich es wieder installieren werde,
das braucht ungefähr nur eine Sekunde, oder lassen wir es mal auf zwei Sekunden beim Ausführen.
Aber das Deep Sleep, einfach mal fünf Stunden.
Also sagen wir mal vier Stunden zu Minuten.
Das kann ja Google mittlerweile ganz gut, muss man nächstes Mal großartig rechnen.
Achso, zu Sekunden, weil was haben, zu Sekunden.
Das Sleep einfach mal so lang.
Und zack, das ist jetzt mit Vorsicht zu genießen.
Und es braucht auch eher 150, 150 mA.
So.
Und sagen wir mal, selbst wenn es vier Sekunden braucht, hält das Ding immer noch eins bis zwei Jahre.
Ja, oder gehen wir mal hoch.
Sagen wir mal zehn.
Und dann hält, dann brauchst du, dann hast du jetzt mal, ohne dass du dir jetzt großartig Mühe gibst,
wenn das Ding halt einfach vier Stunden Deep Sleep, zehn Sekunden was macht, vier Stunden Deep Sleep.
Und vier Stunden Deep Sleep ist okay.
Ich brauche nicht auf die Minute.
Ich brauche nicht auf die Minute genaue Bodenfeuchtigkeitswerte.
Das reicht, wenn es ein paar Mal am Tag macht.
Man kann es weiter optimieren, dass man beispielsweise sagt, okay, nachts, wenn es Nacht ist, verschicke ich nichts.
Kann man ja auch machen.
Dann braucht man, spart man nochmal deutlich mehr.
Und da sieht man schon, wenn man jetzt noch ein bisschen optimiert, schafft man schon zwei Jahre, eins, zwei Jahre mit so einem Standard-Akku.
Schickst du auch den Batteriezustand mit.
Nee, da müsste ich nämlich extra was basteln.
Das Board hat keinen, keinen Sensor für die Input-Spannung von der Batterie.
Da müsste ich da noch irgendwas dran basteln, dass das geht.
Könnt ihr auf die Seite, nein, wir machen hier keine Werbung für irgendwelche komischen Dinger.
So, gut, also Update funktioniert.
Jetzt ist die große Preisfrage, Leute.
Es ist 20.23 Uhr.
Ich habe noch genug Zeit.
Wir haben jetzt, wir haben jetzt, wir haben jetzt, wir haben jetzt, wir haben jetzt, wir haben jetzt, wir haben jetzt, wir haben jetzt, wir haben jetzt, wir haben jetzt,
wir haben jetzt, wir haben jetzt, die Möglichkeit, also folgende Sachen könnten wir machen.
Wir können weiter an der ESP-Geschichte bauen, denn ich hatte ja eigentlich noch vor, dass ich nicht nur Updates machen kann, sondern auch Log-Dateien über Websockets empfangen kann.
Also sprich hier Logs, so nach dem Motto.
Das heißt, wir müssen gucken, wie man Websockets mit der Library macht.
Das ist die eine Variante, was wir machen können noch, weil die Updates funktionieren jetzt wohl ganz gut.
Die zweite Variante ist, was wir machen können.
Ich schreibe es mal auf.
Erstens, was wir machen können, ist Secure SSL Websockets ausprobieren mit der Library.
Zweitens ist den Bug suchen mit der Endlosschleife in der Web-Server-Library.
Patrick, hast du irgendwas rausgefunden? Du wolltest doch mal gucken.
Zweitens, wir können versuchen, ob wir den Endlosschleifen-Bug finden und ihn irgendwie aushebeln können.
Wenn du das machen willst mit KNX, nee, will ich nicht. Garantiert nicht.
Ich will in meinen Wänden nichts mehr rumbasteln.
Die dritte Variante ist, was ganz was anderes.
Wir können uns mal wieder Stellenanzeigen angucken.
Haben wir bestimmt schon zwei Monate nicht gemacht.
Und ich würde vorschlagen, als erstes gucken wir uns jetzt noch ein paar Essens-Videos an, weil ich habe...
Echt riesen Kohlendampf und ich habe Essen neben mir stehen.
Und dann könnt ihr euch ja überlegen, was wir machen wollen.
Drei.
Könnt ihr euch ja mal überlegen.
Wir gucken jetzt erst ein paar Hapa-Hapa-Videos.
Onion-Burgers.
Gut, das letzte Mal haben mir ein paar Leute gesagt, sie wollen gerne noch mal ein paar andere Essens-Videos gucken,
als immer Barbecue-Pit-Boys, wobei ich halt gerne Barbecue-Pit-Boys gucke.
Habt ihr Vorschläge für gute Essens-Videos?
Und ich meine jetzt nicht irgendwelche Troll-Essens-Videos, wo Leute dann eklige Dinger machen,
sondern wirklich Essen-Videos, wo man gutes Essen sieht und dabei essen kann.
Was gibt es da für schöne Channels?
HowToBasic zum Beispiel schon mal nicht.
HowToBasic ist es ganz garantiert nicht.
Wobei ich HowToBasic, ich gucke fast jedes Video, ne?
Ich finde die Dinger übelst geil, einfach weil die so gestört sind.
French-Guy-Cooking.
Okay.
Okay, French-Guy-Cooking.
Baguette.
Someone here.
Also.
I made Ramen from scratch using trash.
Warum use the trash?
Zucchini peeling.
Oh, oui, oui.
Starting to get some nice...
Starting to get...
Nice.
Die Ramen-Videos von dem sind ziemlich pfeifert, okay?
Aber was auch immer cool zu gucken ist, ist...
Satisfying Egg Sandwich, war das, glaube ich?
Nee.
Ja doch, sowas hier.
Wo die teilweise übelstes Tempo vorlegen.
Okay, wir gucken.
This video is brought to you...
...by Skillshare.
...by Skillshare.
Hey guys, salut, this is Alex.
I hope you guys are well, I hope you guys are being safe, I hope you guys are staying at home.
Well, I'm definitely am, I'm stuck at home, I can't get out without a written permission.
Unfortunately, the studio is...
Das ist mir fast schon zu französisch.
Ich muss mal kurz Licht anmachen und was...
...zu drücken, Alter.
...of one thing I...
...smell amazing.
...with flavors and these...
Ich mag keine Baguette.
Hey, Mensch, der Patrick mit der...
...flavorful Ramen Broth.
Wo wird gekocht, Leute?
Ich will sehen, wo gekocht wird.
Easy.
Easy.
Nee, nee, ich brauch was, wo man permanent gutes Essen sieht, sonst kann ich nicht futtern dabei.
Ich brauch irgendwas anderes.
Was hatten wir noch für Vorschläge eben gerade?
Traffel Thirsty, kenn ich nicht.
Kenn ich nicht.
Was ist das?
Pommes, man.
Fried Noodle Pancake, okay.
Pommes, man.
Schon nie was von gehört.
Oh, da geht's aber ab hier.
Ah, yes.
Das klingt doch nach was für mich.
So, fertig.
Flamme an.
Oh, das fängt gar nicht erst an zu brennen.
Marquins habe ich früher öfters geguckt, allerdings habe ich den Eindruck, der ist mittlerweile...
Übelst krass sellout in Form von, dass er alles geil findet.
Der sitzt bei jedem...
Bei der...
Bei dem kleinsten Essen sitzt er da und macht...
MMMMMMMMHM
Ah, ich weiß nicht.
MMMMMMHMHMHM
Okay, zeigen.
...steller bestellt habe, weil ich wollte...
Ich wollte so ein Steak essen.
Deswegen, genau, haben wir heute Steaks, deswegen wollen wir heute...
Steaks.
Und wir machen heute mal noch dazu ein paar...
So Leute, ich werde mal nebenbei was futtern.
... und mal mit Serrano schinken.
Schinken machen wir. Und dann würde ich sagen,
nehmen wir uns mal hier so vier, fünf Stück oder was.
So, dürft ihr das da hinhauen.
Schneiden wir eben hier um das Ende ab.
Und dann nehmen wir uns ein schickes
Schalken. Und danach,
danach, wenn wir das geguckt
haben, wir müssen
noch unbedingt, da kommen wir nicht
drum rum, wir müssen noch wieder ein
Kokona
Barbecue Pit Boys Video gucken.
Das geht nicht ohne.
Warum hast du
C++? Weil C++ eine Kaffee-Sprache ist.
Heute mag kein Belgen.
Wenn du es genau wissen willst, ich habe
ein riesen Textdokument mittlerweile, weil diese Frage
öfters kommt. Aber ich bin
gerade am Futter. Ich gönne dir danach gerne
was zu erzählen. Ich habe gesagt,
weil es eine Kack-Sprache ist.
Wo sich wahrscheinlich das Standardisierungs-
Gremium
vor jedem Meeting erstmal die harten Sachen
spritzen muss. Weiß nicht, wie die andersweitig
auf die Idee kommen.
Erstmal so hauchdünn
geschnitten.
Soll ich den nicht so ganz kaputt bekommen.
Mein Problem jetzt hier. So, den wickeln wir jetzt
ein. Dann haben wir das nämlich, weil das dauert ja eh länger,
weil wir das ja schön indirekt grillen wollen.
Also nicht auf der... Bisschen leise, oder?
Flame.
Die machen wir auch gleich keinen Hexen weg von.
Einfach gleich mit schönen Olivenöl einwickeln.
Die Jungs auf den Grill und dann...
Also eine Sache, die ich immer anbringen kann, was ich
zum Beispiel an C++ bis heute nicht verstehen werde,
ist, warum
hat die
die Standard-String-Klasse
aus der Standard-Library, warum hat die
kein To-Upper und To-Lower dabei?
Warum? Das ergibt für mich überhaupt
keinen Sinn.
Es gibt zwar Standard-To-Upper und Standard-To-Lower,
aber warum ist das nicht in der Klasse drin?
Wozu hat man denn die Klassen, wenn man
sowas da nicht einbaut? Ist das zu bloated
To-Upper und To-Lower?
Dann ballern wir die einfach auf die Feuerplatte drauf.
Irgendwie ist die Lautstärke gesackt.
Dann freuen sich auch die Damen immer.
Dann haben wir da so ein paar Streus hier.
Hauptsache Grünzeug.
Wir machen das jetzt auch heute mal...
Also wenn To-Upper und To-Lower
schon zu bloated ist, dann weiß ich auch nicht.
Vor allem geteilt, wenn man so will, weil wir für Stakes
einfach nur eine Hölle viel Hitze brauchen.
Deswegen machen wir auf dem Part jetzt einfach mal die Kohle,
damit es richtig heiß wird. Und auf dem Part machen wir Holz.
Warum kann ich aus einem Vektor
mit der Löschen-Methode,
wo man einen Index braucht, kein Index
angeben, sondern muss
Iterator Begin plus Index machen?
Auch sowas.
Man baut alles ein in die Standard-Library
und dann ist es eklig zu benutzen.
Da können wir gleich das Gemüse draufschmeißen, weil das brauchen wir nicht ganz so viel Hitze.
Aber dann haben wir es so ein bisschen getrennt.
Dann ist es auf der einen Seite so richtig heiß
und auf der anderen Seite so ein bisschen heiß.
Aber da können wir jetzt gleich die
die Dingens draufpacken.
Genau, das Scheibchen.
Den Spargel, den machen wir jetzt auch
schnieke in Butterschmalz.
Bald ist es vorbei,
heißt, dass das Update-Zeug funktioniert.
Einmal schmelzi machen hier.
Weil der lässt sich nämlich schön hier...
Dann haben wir auch richtig schön
eine Butterschmalz-Not.
Ja, Hitze ist definitiv da.
Ich will jetzt sehen, wie das draufgeschmissen wird.
Oliven-Oil.
Zeig.
Also, die Steaks würden mir reichen.
Spargel
bräuchte ich jetzt nicht.
Können wir gleich, wenn wir die wenden,
dann haben wir die richtig schön in Butterschmalz.
Aber siehst du, hier ist auch schon Hitze drauf,
deswegen gar nicht so hot machen, weil jetzt haben wir richtig
Power-Hitze schon hier.
Ah, das wird schon...
Ah.
Butterschmalz.
Oh, die Steak.
Die ist schon gut heule heiß, jetzt das Ding.
Einfach mal...
Swing.
Wann kommt das Steak drauf?
Ah, Moment, das habe ich verpasst.
Das geht ja nicht.
Ah, yes.
Was genau brauchst du eigentlich gerade?
Dass ich meine
ganzen im Haus verteilten Microcontroller
ordentlich über WLAN updaten kann,
Firmware-Update machen kann.
Und zwar nicht nur über HTTP,
sondern über HTTPS.
HTTP ist überhaupt kein Ding, ist total easy.
Aber über HTTPS muss man
zum größten Teil zumindest das Uploaden
und das Verarbeiten des Updates selber machen,
weil es nichts Fertiges gibt.
Ich habe mir wieder sowas ausgesucht,
was irgendwie sonst kein Mensch auf der Welt anscheinend macht.
Ah, yes.
Also so ein Steak wünsche ich mir jetzt auch reinhauen.
So.
Das sieht ja schon mal
ganz schnieke aus.
Und in der Zeit, wo die in der einen Seite
schon mal eben ein bisschen ankokeln,
und dazu C++,
ne, aktuell esse ich was,
und danach wieder C++,
oder aber,
je nachdem wie der Chat sich das überlegt,
gucken wir uns danach noch ein paar Stellenanzeigen an.
Weil die eigentliche Update-Variante geht ja.
Was wir jetzt noch machen müssen ist,
heute oder morgen,
gucken, dass wir die Websockets zum Laufen kriegen.
Gucken, dass wir vielleicht diesen Endlosschleifen-Bug
in dieser komischen
Webserver-Library finden.
Oder wir gucken uns nachher Stellenanzeigen an.
Ich kann das auf Github packen, aber das wird halt einfach so...
Also ich pack das, wenn schon, nicht als fertige Sache hoch,
sondern einfach so als Example, dass man sich abgucken kann.
Den Bug hast du gefunden?
Ich hab vorhin auch mal reingeguckt.
Ich glaube, ich bin auch halbwegs drauf gekommen, woran es liegt.
So leicht vor sich hin.
Noch weiter brutzeln.
Naja, in den Server ist jetzt zu viel gesagt.
Ich hab halt einen Microcontroller, der Firmware-Updates braucht.
Oder mehrere.
Und die sind halt in sehr ungünstigen Stellen, sodass ich das nicht per USB machen kann.
Mhm.
Die sind auch schon so leicht farbe.
Ich dachte, die dauern eh ein bisschen länger, aber die will ich auch nicht so in die Hitzezone reinlegen.
Deswegen verteilen wir die hier mal so ein bisschen.
Aber es riecht schon schön Serrano-risch.
Das sieht für dich nicht nach C++ aus, das ist richtig.
C++ ist hier.
Das ist ein Steak, muss man eigentlich kein Hexenwerk machen.
Aber ich muss auch mal was fruttern.
Zwischendurch.
Kann man einfach nur...
Hölle, Hölle, Hölle, Hölle heiß.
Je heißer, desto besser.
Und dann müssen wir von beiden Seiten aber nur, damit die richtig schön Kruste kriegen.
Einfach nur angegrillt werden, die Jungs.
Guck mal, sieht man hier von hier.
Siehst du, hier ist noch nicht...
Dauert noch, ne?
Haben wir nochmal ein bisschen...
Was sind das für riesen Salzkörner?
Ist noch nicht ganz...
Die Boys gucken wir dann nach.
Aber es wird, es wird.
Aber es riecht doch schon lecker nach Steaks, auf jeden Fall.
Bestimmt irgendeine Meersalz-Geschichte.
Ja.
Ja, siehst du, da wird schon...
Wow.
Da war heißer.
Oh ja, das wünschen wir jetzt auch rein.
Aber genau das wollen wir haben.
Eine richtig schöne Kruste.
Hat das im Video gerade geknipst wie ein Fotoapparat?
Habe ich nicht gehört.
Von beiden Seiten.
Und dann können wir die gleich auf Kerntemperatur ziehen.
Vielleicht, Sebarro, vielleicht hast du ja auch einen Fotografier-Trojaner bei dir drauf.
Der Geräusche macht.
Ach, bei der Instagram-Einblendung.
Okay, da war ich gerade...
Ich bin am Kauen gerade nebenbei.
Da habe ich das nicht gehört.
Ja.
Okay, der Chat beruhigt den Sebarro, das ist nett.
So, überschüssige Salz weg.
Und dann können wir gleich umdrehen.
Siehst du, guck.
Eine Seite schon heller Kruste.
Zweite Seite, dann können wir noch ein bisschen drehen.
Ja, und wenn der Alkohol jetzt dann verbrannt ist, dann ist das auch wieder alles harmlos.
Guck mal jetzt hier, wie geil die aussehen, die Jungs.
Das sieht echt gut aus.
Und jetzt ziehen wir die einfach nur da oben hin, weil jetzt müssen wir nur Kerntemperatur haben.
Einfach aus der Hitze raus, dass wir jetzt nur noch das schicke Aroma haben.
Und jetzt warten wir einfach praktisch.
Kann man, wenn man keine Temperatur hat, kann man das auch mit dem Handballen messen.
Also wenn du jetzt hier so hast, dann hast du richtig, richtig hart.
Das ist so, ich weiß nicht, wer die Methode kennt.
Sonst einfach Temperatur messen, so ist es recht weich.
Und so wird es immer härter.
Und so kann man das dann auch letztendlich fühlen.
Mit dem besten Grillzocken der Welt.
Wann es dann ready ist.
Also ein bisschen müssen wir noch.
Ja, ist schon fast fertig, die Jungs.
So, mal gucken.
Was mein grüner, nicht grüner Daumen, was mein Steakdaumen sagt, wie weit wir sind.
Ich bin ja mal gespannt.
Das ist ja ein riesen Grill, der der Typ hat.
Könnte das schon, könnte das was geworden sein?
Ja, doch.
Das war jetzt ein bisschen well done, aber egal.
Ein bisschen rosa dürfte es sein.
Aber ich würde es trotzdem sofort fordern.
Können wir die Steaks nämlich runternehmen, machen da jetzt mal schick.
Jetzt haben wir es auch gehört, Sie Bauer.
Die brauchen wir ja gar nicht.
Und jetzt einfach mal schniek in kleine Stückchen Schnibbeldinski.
So, bin ich mal gespannt jetzt.
Zack.
Aber es ist auf jeden Fall noch gut weich.
Vom Dingens her.
Guck mal, ist immer noch mega weich.
Ich mache das sowieso immer gerne, wenn die so, wenn die so weich sind.
Und?
Komm, du sollst auch mal was probieren.
Okay, jetzt wird noch gefuttert, ist jetzt egal.
Aber die Dinger sahen echt gut aus.
So, jetzt müssen wir uns nochmal die Kokona-Variante davon angucken.
Wo alles mit der Machete gemacht wird.
Beef-Bacon-Bagel-Burger.
Easy.
Welcome to BBQ-Pit-Boys.com.
Today we're grilling up a Beef-Bacon-Bagel-Burger at the Pit.
Das haben wir schon geguckt, oder?
Haben wir das schon geguckt?
And it's really easy to do.
That's right.
Beef-Bacon-Bagel-Burger.
Alright.
Das haben wir schon geguckt, oder?
This recipe, you're gonna eat some tomatoes.
We got some pickles.
We got...
Ähm, was haben wir hier noch?
Chicken.
Chicken, ähm...
Chili-Chicken-Sub.
Easy.
Nachdem es bei uns kein Subway mehr gibt...
Welcome to BBQ-Pit-Boys.com.
Today we're grilling up a Chili-Chicken-Sub at the Pit.
And it's really easy to do.
Alright.
For this recipe, you're gonna need some chicken breast, some sesame oil, some salt.
Here we've got some paprika, some black pepper, some white pepper, garlic...
Wie?
So viel Grünzeug?
Was ist denn mit denen los?
...eggs, nice tomatoes.
Here we've got a cayenne pepper, right?
And here we have an Anaheim pepper.
Use your favorite peppers.
Äh, ist das da wo immer...
Ist nicht...
Ist in Anaheim nicht immer MLG?
Und...
Und, äh...
BlizzCon?
Und...
Und Gedöns?
Über BlizzCon bin ich mir gar nicht sicher.
Aber...
Aber, ähm...
Anaheim ist doch immer...
Ja, was auch immer.
And we've got some good bread.
And your favorite BBQ sauce.
Now, let's, äh...
Let's put this together.
And I'm telling you, this is real easy to do.
You gotta check this out, right?
Now, you can get the exact ingredients by heading on over to our phone apps.
We've got an iPhone app, an Android app.
You can download it and then print out from there.
But let's get back to what we're doing here.
So now we threw all the spices into the bowl.
And here we're separating the yolk from the white, right?
We don't need the yolk.
We want the white to help, äh, bond the spices to the chicken.
Simple enough, right?
So we'll just separate the yolks.
Save the yolks for the beer later, right?
Alright.
Now...
Heute hat er gar keine, hat er gar nicht seine Machete dabei.
Chicken breasts in half.
Make them real thin so they cook quick and they stay real moist.
Now you can see these, äh, boneless chicken breasts, skinless chicken breasts are real small.
They're coming from these new chickens on the market.
Very, very young chickens.
Very, very tender.
Moist when you cook them up.
They're good.
So, anyway.
We'll throw those, äh, chicken breasts into the bowl.
And we'll crush the chili pepper.
It smells good.
Not really good with the seeds.
Unless you insist on having the seeds.
Some will say, well, there's all the heat.
Aber das sagt er sonst immer gerne.
It smells good.
Some heat in the seeds.
But we're mostly after the flavor here, right?
Not necessarily make it, äh, make it fire.
No, we don't want the fire.
Alright.
The chili pepper has been, äh, chopped up.
Alright.
And we'll chop up some garlic.
Hätte man jetzt sowas wie nen Löffel.
Aber Löffel ist da nicht angesagt.
It's not cooking unless there's some garlic in there.
Garlic is chopped.
And we'll give it a good mix.
Ach, das hat er vor.
Ne, dann braucht er auch keinen Löffel.
Use your God-given hands and fingers to do it.
It does the best job.
Better than gloves.
Now.
We're gonna take these Anaheim-loved peppers, right?
And we're just gonna roast them a bit.
Char them up on each side.
There's gonna be a lot of flavor in that, right?
We don't wanna overcook them.
Just char them.
Alright.
Simple enough.
Now.
We'll put our grill plate on our hibachi here.
Das sind ja riesige Peperoni hier.
And hibachi cooking is awesome.
You gotta check it out.
Old school.
But nothing like hibachi.
And we're gonna throw some oil on the plate.
Was?
Hamachi?
Because we're gonna do a quick fry.
Just like that.
This won't take long.
Maybe a couple minutes at the most.
Ne, ich kenne den ersten Teil.
PC lustig.
Ich hab echt Hamachi verstanden.
Ich hab echter Matschi verstanden.
You smell that?
It smells good.
It's good.
Oh yeah.
Give them a flip.
Grill marks.
Now there's no breading on this.
So.
Denen würde ich auch zutrauen, dass sie in Motoröl grillen.
This is what they're gonna look like.
Pretty good.
So no breading.
Perfect.
Perfect for a sandwich.
I told you.
I told you.
I told you.
I told you.
I told you.
I told you.
I told you.
I told you.
I told you.
I told you.
I told you.
I told you.
I told you.
I told you.
I told you.
I told you this is gonna be easy.
Prutzel, prutzel, prutzel.
Alright.
Ich bin gleich fertig essen.
Time to take them off the grill.
There's nothing more to say here.
I'm just kind of watching.
Also ich hab mal gehört, dass man, wenn man das Zeug aus der Pfanne oder vom Grill nimmt,
dass man, egal ob jetzt Hähnchen, Steaks oder sonst was, dass man die Dinger erstmal
Minuten stehen lassen soll, bevor man daran rumschnippelt. Ich bin mir nicht sicher, warum.
Sonst geht der Saft raus.
Die sind immer so feinfühlig mit dem Belag, Alter, guck euch das mal an.
Das wird einfach nur reingestopft.
Es ist definitiv mehr als beim Subway.
Haha.
Haha.
Boah, das sieht aber trotzdem gut aus.
Das kriegst du, das kriegst du dann mal zugeklappt, wie willst du das essen, wie willst du das
essen?
Haha.
Das ist doch gar nicht essbar so richtig am Stück.
Haha.
Haha.
Haha.
Haha.
Haha.
Haha.
Haha.
Haha.
Haha.
Haha.
Haha.
Haha.
Haha.
Haha.
Haha.
Haha.
Haha.
Haha.
Haha.
Haha.
Haha.
Haha.
Haha.
Haha.
Haha.
Haha.
Haha.
Haha.
Haha.
Haha.
Haha.
Haha.
Haha.
Haha.
Haha.
Haha.
Haha.
Haha.
Haha.
jetzt lustig ist fünf minuten vielleicht nächstes mal ich guck jetzt noch 1 1 1
hier vorne ist teilweise davon das ist genau richtig wo ist das schießt
vielleicht hat er hier irgendwie ein paar grümel drüber oder so
pc lustig merkst du das nächste mal
es ist alles gut
wir wollen hier ein bisschen bacon brauchen wir haben hier ein bisschen
größebraten du willst du größebraten schuhen wenn du kannst du wirst du
deinen spg da ist der käse leute hier haben wir garlika salt granulat
wir haben die dämpferstange du wirst dir ein paar cherrypepper brauchen um
ein bisschen hektik zu erhöhen hier haben wir ein bisschen creme
cheese du wirst ein bisschen dämpfersteine brauchen du wirst ein
bisschen
Was ist denn das für eine Zwiebel? Sie mutiert? Tschernobyl-Zwiebel?
Da hat er echt einen Löffel, ich glaub's dann.
Jetzt werden wir die Zwiebeln aus den Zwiebeln und ein paar von der Membran auf der Innenseite entdecken.
Die Membran hat die größte Menge Wärme.
Und dann, wenn wir das machen, nehmen wir das Creme-Cheese-Mix und geben es in die Zwiebel.
Genau so.
Das ist gut genug, um schon zu essen.
Dann jam mal richtig rein.
So, wir machen das weiter.
Du weißt jetzt, wie du das machst.
Nun.
Was wir tun werden,
ist, es mit Bacon zu füllen.
Das ist das Wichtigste.
Ich verwende einfach ein normales, geschnittenes Bacon.
Ich nehme einfach einen
gefüllten Popper da.
Ich gebe ihm eine gute Füllung.
Technik-Bauer, Twitch Prime.
Dankeschön.
Oh ja. Nichts wie Jalapeno-Popper.
Im Stream spielen, wenn es ein gutes Game gibt.
Perfekt.
Dann schon.
Nun.
Wir werden diese Popper kochen.
Und hier verwenden wir...
...eine Art Standard-Grill.
Aber wir kochen sie indirekt.
Wir wollen das nicht direkt über den Topf kochen,
weil es das Bacon brennt.
Also machen wir das indirekt, wie ein Ofen.
Und natürlich kannst du das auch in einem Ofen machen.
Gut. Perfekt.
Wir lassen ihn kochen.
Und es wird nicht lange dauern.
Ja, Eleven Corders Lachen gehört irgendwie dabei.
Dass er immer sagt, es riecht gut.
Es sieht gut aus.
Hahaha.
So, ich weiß, dass man Emulator spielen kann.
Aber angeblich kommen die Emulator-Spieler zusammen.
Und man kann nicht die Smartphone-Noobs ownen.
Nun, natürlich, wie ihr wisst,
ihr Jalapeno-Popper-Afficianos wisst,
dass sie bereit sind zu essen.
Gut.
Die Jalapeno-Popper sind fertig.
Nun.
Wir werden die Burgers kochen.
Und das ist eine einfache Art, das zu machen.
Wir wollen, dass jeder Burger perfekt ist.
So ein Ding drauf.
Fuck.
So, jeder Teig ist ...
... ungefähr 1 Kilo.
1 Kilo ist was?
55 Gramm?
So.
Und wir teilen es in zwei.
Also machen wir ...
... 2, 4, 6, 8 ...
Du machst die Mathematik.
Der Patrick ist da.
500 Gramm?
Nun, du machst deine Burger, wie du möchtest.
Wir benutzen unsere SPG für die Saison.
Wir treffen ein bisschen Wurst.
Wir nehmen ein bisschen Worcestershire-Sauce.
Und das ist so, wie es in Worcestershire genannt wird.
Und ...
... geben wir es in eine gute Mischung.
Formen wir eine Patte.
Du bekommst das Bild, oder?
Wie viel ist denn 1 Kilo?
Das ist ...
Fuck.
450 Gramm.
Das ist ja ein riesen Burger.
Alter, 450 Gramm.
Bloß noch restlicher Belag drauf.
Das ist echt ordentlich.
Wenigstens ist man satt danach.
Ein kleiner Happen, ja.
Ein halbes Pfund.
Okay, 220 Gramm.
Und wir gehen langsam hier, weil ...
... einige von euch sind Neue.
Ihr wollt sehen, wie man einen Jalapeno-Papper-Burger macht, oder?
Gut.
Zwei halbe Kilo Patten werden gemacht.
Und los geht's.
Ihr nehmt zwei eurer gekocten Jalapeno-Pappers.
Nehmt sie auf den Topf.
Und kommt mit in eine andere Patte.
Das sind wieder 500 Gramm.
Das sind verpackte Burgers.
Jetzt sind wir wieder ...
Jetzt sind wir wieder bei der ursprünglichen Größe.
Ihr macht diese für eure Familie, Freunde oder was auch immer.
Und die werden es lieben.
Das ist ein 1 Kilo plus Burger.
Verpackt mit Jalapeno-Pappern.
Ihr macht euch ein bisschen schmerzhaft aus.
Ihr werdet beide aber nicht wollen.
Ihr werdet mich nicht lieben.
Der Wurm ist auf den Seiten ziemlich gut gewärmt.
Er hält den Cheese drinnen.
Was, ein riesiges Ding!
Am meisten ...
... gut genug.
Jetzt ...
... falls euch dieταusende ins Schlaf gelangen.
Wir machen noch einen.
Jeder ist ein 1 Kilo Burger.
Mit zwei Pappern.
Zwei halbe Kilo Pappern.
Was hat es gekostet, Siebhau?
Warum sind das eigentlich
Jalapeno Poppers?
Das heißt Poppers.
In dem Fall.
Oh mein Gott.
Perfekt.
Ein weiterer Jalapeno Popper
ist bereit.
Okay.
Wieder.
So ist es gemacht.
Ihr werdet mir jetzt
ein paar dieser machen.
Chat, ich würde euch die Hälfte abgeben.
Wenn ich jetzt so einen Burger kriegen würde.
So wirklich viel Hunger habe ich nicht.
Aber die Hälfte würde ich essen.
Der Rest kriegt dann Chat.
Seid ihr dabei?
Chat, wir teilen uns so einfach.
Wie hast du das bestellt?
So einen Sesamkrieg?
Ne, einfach das da.
Ich habe einfach drauf genommen.
So einen will ich.
Was?
Das ist ein Riesenteiler.
Ey.
Okay.
Das sieht ja aus wie eine Brustimplantat.
Ja, stimmt.
Von der Form her vielleicht ein bisschen.
Ja.
Now, this time
we're gonna grill at very low heat.
It will be direct over the charcoal.
But we're gonna be less than 325 degrees Fahrenheit.
We don't wanna cook these fast.
Das geht fast als Spenderorgan durch von der Größe her.
Hahaha.
Burgers to form up.
This won't take long.
Good.
Now, while we're waiting, we're gonna chop up the onions.
Oh, es kommt noch Grünzeug.
We're gonna take these cherry peppers.
And some of these have some...
Grünzeug.
...heat in them.
Now, this is optional.
Use your favorite peppers.
Add as much heat as you like.
We'll pull out some of the seeds.
Vorsicht.
Of course, there's no capsaicin in the seeds.
There's no heat in the seeds.
Only in the membrane.
But you know that, right?
So, we'll just chop these up pretty fine.
Guck mal, wie er auf der Tomate tanzt.
Good enough.
Oh, der jetzt passt nicht mehr.
Das ist Alibi-Grün.
And we'll add them to the chopped onions.
And then throw a tablespoon of butter.
Because we're gonna fry this.
Alright?
We're gonna use it as a condiment.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
Now we will take long, you sweat it down...
And brown them up a little bit too.
Just like that, alright!
The little fry, these burger are done.
We cooked them to about 150 degrees Fahrenheit, more or less.
It's time to serve them up.
Das Brötchen und der Belag, ey.
Oh, doch, guck mal.
Guck mal, wie viel Grünzeug da drauf kommt.
Doch so viel.
Oh, fuck, Alter.
Wie sollst du das essen?
Oh, fuck.
Perfect Size.
Oh, das ist ein Riesenteiler.
Aber ich glaube, schmecken tut es wirklich leid.
Full of Cheese.
Great Flavor.
Kieferbrecher, oder?
Zum Thema Kieferbrecher.
Bevor ich die Weisheitsszene rausgekriegt habe,
um jetzt mal euch wieder den Appetit zu verderben,
weil da viele Leute gesagt haben,
sie haben so viel Hunger durch das Video gekriegt.
Um euch ein bisschen den Appetit zu verderben,
noch mal eine cool Story, Max.
Als ich meine Weisheitsszene noch drin hatte,
und der Grund, warum ich sie hab rausmachen lassen letztendlich auch war,
das hat sich auf der einen Seite entzündet,
und weil gerade einer geschrieben hat, Kieferbrecher,
ich konnte, ohne Scheiß, ich konnte den Mund nicht mehr öffnen.
Ich konnte den Mund gerade mal so weit aufmachen,
dass ich meinen kleinen Finger reinstecken konnte.
Mehr ging nicht.
Und es hat ultra wehgetan.
Hat übelst wehgetan hinten.
Hast du das nicht schon mal im Video erzählt?
Kann sein. Kann sein, dass ich das schon mal erzählt habe.
Es hat übelst wehgetan.
Und wenn ich mir überlege, wie klein so ein kleiner Finger ist.
Wieso stecken sie den Finger hin?
Das ist so eine Beschreibung, dass ihr euch vorstellen könnt,
wie wenig ich so ungefähr aufmachen konnte.
Und das hat fünf, sechs Wochen gedauert,
bis das wieder weg war.
Das war eines der unangenehmsten Sachen, die ich je hatte.
Okay, Chat. Habt ihr es euch überlegt?
Weiter programmieren?
Oder noch mal?
Wir können mal eine Runde Stellenanzeigen angucken.
Wir haben nur noch um knapp eine Stunde Zeit.
Ansonsten, wir machen eh die nächsten Tage damit weiter.
Wenn wir jetzt das machen.
Vorher haben ein paar Leute geschrieben drei.
Jetzt schreibt Banana Wave eins und zwei.
Eins oder zwei.
Ist gut.
Michael, 50 Billiarden, drei, drei, drei.
Eins, eins.
Weitermachen, weil sonst beendest du es nicht.
Okay, also ich würde sagen, wenn wir jetzt mal sagen,
das hier ist Programmieren und das hier ist drei,
dann sind aktuell, glaube ich, fast 50, 50 für Weiterprogrammieren
und drei, drei.
Dann machen wir es so, dann gucken wir uns,
das ist mir auch lieber,
weil da muss ich mich jetzt nicht noch konzentrieren,
bevor ich dann pennen gehe.
Dann gucken wir uns das an.
Dann gucken wir uns eine Runde Stellenanzeigen an.
Und vielleicht machen wir morgen einfach schon weiter.
Es funktioniert ja.
Es ging jetzt am Ende doch einfacher, als ich gedacht habe.
Und Patrick, falls du was gefunden hast,
kannst du ja mal im Discord schreiben.
Gut, ich würde sagen, es soll gut shit heißen,
aber mit neun passt nicht so richtig.
Gutschneid, Gutschneid, Gutschneid.
Gut, SH9T.
Dankeschön für den Prime Sub.
Jetzt mal kurz die Musik wieder anschmeißen.
Schott.
Soll das heißen?
Schott.
Da wäre ich im Leben ja drauf gekommen, dass es Schott heißen soll.
Da hätte ich eher mit einer Null gerechnet oder so.
Das ist Sascha.
Okay, den Namen von dir habe ich mir nicht gemerkt.
Schön, dass da Sascha auch am Start ist.
Bist du gerade auf der Arbeit?
Nachtschicht-technisch.
Ach, Elternzeit.
Ja, noch besser.
Noch besser.
Also, wo haben wir das letzte Mal geguckt?
Ich gucke ja immer ganz gerne bei den Golem-Stellen anzeigen.
Ich weiß auch nicht so genau, warum.
Irgendwie, weil da besonders viel Schwachsinn drin ist.
Gibt es als Entwickler Nachtschicht?
Bei den meisten Entwicklern eher nicht.
Klar weiß ich, wer das ist.
Hör nicht auf den Sebarro.
Okay, also.
Was wollen wir heute mal gucken?
Wir gucken mal, was es in der Nähe von Frankfurt gibt.
Was so in der Corona-Zeit...
Genau, heute gucken wir mal wirklich als...
Nach was suchen wir dann?
Nach was wollen wir heute mal suchen?
Wir können nicht immer nur nach DevOps und Admin und sonst was suchen.
Nach was?
Nach Fachinformatiker.
Fachinformatiker sucht keiner.
Also nicht mit dieser Bezeichnung.
Da findest du nur Azubi-Stellen.
DevOps.
Bäcker.
Ja.
Was passiert hier?
Wir gucken uns gerade ein paar Stellen anzeigen.
Also vorher haben wir 2 Stunden C++ programmiert, aber das reicht jetzt irgendwann.
Was mit Sicherheit anders?
IT bei der Bayerischen Polizei.
Oh.
Das muss ich mir mal angucken.
IT bei der Bayerischen Polizei.
Lustig machen.
Meistens schon.
Ja, meistens schon.
Manchmal sind aber ein paar gute Sachen dabei.
Okay, was gibt es denn bei der Bayerischen Polizei?
Zeige ich dir mal her.
Ja.
Was macht man da so?
Haben wir das nicht schon mal geguckt?
Kommt mir irgendwie bekannt vor.
So viele Grills.
Informatik-Profis mit Polizeistern.
Oh, Vollzugsdienst ist doof.
Da musst du vor Ort irgendwo hin, ne?
Das sagt.
Hessen sucht auch Leute für Sayo.
Schick mal einen Link.
Schick mal einen Link.
Ihre Voraussetzungen.
Okay, checken wir mal.
Checken wir mal.
Du wurdest für das BKA angeworben.
Ernsthaft?
Und?
Und?
Vollzug?
Das ist doch Knast.
Nee, ich glaube, Vollzug ist die Umschreibung für quasi alles, wo man halt was macht in dem Sinn.
Also sprich, wo man irgendwo hingeht und wo Leute festgenommen werden, wo irgendwas durchsucht wird.
Ich glaube, das ist alles Vollzug.
Dort, wo Sachen vollzogen werden.
Ich glaube nicht, dass sie damit unbedingt Knast meinen.
Ja, das, was man hier verdient, ist zumindest bei den letzten Stellenanzeigen, wo wir geguckt haben, bei der Polizei und bei der Bundeswehr haben wir auch mal geguckt.
Das war nicht so sonderlich viel, was man da verdient.
Okay, also was braucht man denn dafür, um IT-Kriminalist zu werden?
Achso, das ist, was man gelernt haben muss?
Ah, okay, easy.
Kann ich schon mal ähnlich machen.
Kann ich ähnlich machen.
Ich habe keinen Abschluss.
Ich kann nicht.
Ich habe nichts studiert.
Das fällt schon mal raus.
Wobei die sich ganz schön selbst die Kandidatenliste einschränken.
Was macht denn ein ITler vor Ort?
Ein Windows-Passwort-Karten, ja, zum Beispiel.
Ich könnte mir vorstellen, dass du auch zum Beispiel mitgehst, um zu schauen, dass jemand nicht seine Verschlüsselung aktiviert.
Also, es ist ja so, dass wenn du, angenommen, du hast einen Server laufen mit verschlüsselten Platten und die sind ja, solange das Server on ist und vielleicht irgendwie auch noch per File-Server erreichbar ist,
und die sind ja, solange das Server on ist und vielleicht irgendwie auch noch per File-Server erreichbar ist,
sind die ja entschlüsselt, zumindest halt zum Zugriff.
So, das heißt, dann ist wahrscheinlich unter anderem dein Job, zu gucken und aufzupassen, dass der Typ nicht aus Versehen Strom ausschaltet oder so.
Beziehungsweise halt zu schauen, dass dann nichts passiert.
Es gibt ja Leute, die haben so viel kriminelle Energie, habe ich letztens in irgendeiner Präsentation, in irgendeinem Vortrag auf YouTube gehört,
die haben an der Tür einen Schalter, einen Stromschalter an der Tür.
Das heißt, wenn die Polizei klingelt und die gucken durch den Türspion,
den Fakt, die Polizei ist da, drücken die auf den Schalter und alles geht aus und die Festplatten sind wieder verschlüsselt.
Letztens, ich glaube vom CCC, nee, was, C36C,
von irgendeiner Chaos-Computer-Konferenz habe ich da letztens einen Vortrag gesehen,
hat einer gesagt, hier, dann Schalter an die Tür machen zum Ausschalten, wenn die Polizei klingelt.
Eigentlich eine clevere Idee, ja.
DevOps Engineer Linux.
Sascha, der ist da was.
Der ist bei uns hier.
Also, die Innofex, ähm, was haben wir da?
In Karlsruhe, Pforzheim, Köln, München, ja und wo ist Frankfurt?
Ich habe Frankfurt gesucht.
Ich habe Frankfurt gesucht.
Also eine Sache sieht man hier schon mal, die aktuellen Jobangebote sind absolut mickrig im Vergleich zu dem, was es sonst gibt.
Achso, ich sollte vielleicht mal meinen Titel ändern.
IT-Stellenangebote checken.
Was ist das für eine Musik, kommt mir auch bekannt vor.
Paper Mario.
Ist das Paper Mario?
Erinnert mich an irgendwas anderes.
So, also, bla bla bla bla bla bla bla juckt über...
Ich, ich frage mich immer noch, warum so viele Stellenanzeigen mit diesem Standard,
wir sind die größten, besten, tollsten, irgendwas, ähm, anfangen.
Das ist doch erstmal vollkommen unerheblich.
Unerheblich, oder?
Oh ja, das muss man sich gleich schon angucken.
Ups.
Moment, man kann das nicht anklicken, doch.
So.
Als DevOps-Engineer berätst du unsere Kunden von der Konzeption bis zur bla bla bla bla bla
und gestaltest aktiv die Konfiguration.
Betrieb der Lebensbasis ist okay, das passt dazu.
Du erstellst noch verbesserte Diplomaten und Betriebsprozesse, passt auch,
sowie die Automatisierungslösung, Continuous Integration,
das Delivery, passt auch.
So sorgst du dafür, dass bla bla bla bla,
dabei behältst du stets im Auge
und bist so maßgeblich
einer Weiterentwicklung unserer Logging, Monitoring, Testautomatisierung beteiligt.
Als Teil des Entwicklungsteams bist du der Ansprechpartner für die Entwitt...
Wenn es um den Einsatz neuer Technologien...
Ja, das passt so im Großen und Ganzen, der gibt irgendwie Sinn.
Äh, der Zwiebelgeist schreibt, ähm...
Stellenanzeigen laufen in Unternehmen so ab,
Fachabteilungen schreiben, was sie brauchen, normalerweise stichpunktartig,
dann klatscht da eher den Standardtext der Firma außen rum
und formuliert je nach Mode einen Text.
Ja, ich hatte, wie gesagt, ich verrate ja nicht, wo ich arbeite,
aber bei uns gibt es Stellenanzeigen, die sind genau so entstanden.
Und total, teilweise, sowas von realitätsfremd,
da wollten sie Leute haben, die was auf die, die alles können.
Da wollten sie Leute haben, die ESX können,
Windows AD können, Linux können, Backup können,
Zabbix Monitoring können, Netzwerkenntnisse haben, alles.
Und wo wir uns damals auch gedacht haben, ey, wenn die so einen finden...
Achso, ja, und die Bereitschaft zur Nacht- und Schichtarbeit.
Kommt auch dabei.
Also richtige, richtige massive Stonksleute waren da am Start.
Und da haben wir uns damals schon gedacht, ey, wenn die da irgendeinen finden,
der das wirklich alles hat,
oder...
Oder...
Oder auch nur ansatzweise.
Der macht das dann nicht für die Kohle, die es dafür gibt.
Okay, zur Besetzung untersuchen wir Expertinnen,
die folgende Skills haben.
Leidenschaft und Begeisterung für neue Technologien und Themen rund um Linux und Cloud.
Ja, aber da würde ich mich schon mal dabei zählen, ja.
Praktische Erfahrung mit Infrastructure as Code,
CI, CD-Werkzeugen und dem Aufbau von Pipelines haben.
Aufpassen, ja.
Mobilität und Flexibilität.
Also mit Mobilität und Flexibilität bin ich vorsichtig.
Ähm...
Da kann es nämlich durchaus sein, dass sie dich sonst wo hinschicken.
Und Dinger von dir wollen, auf die du wahrscheinlich keinen Bock hast.
So nach dem Motto, du bist einen Tag die Woche daheim oder so.
Ne, da wäre ich das...
Naja.
Äh, unser Angebot.
Coole Kolleginnen, offene Ohren und offene Türen.
Inno...
Also mit Leerzeichen, mit Leerzeichensätzen haben die es auf jeden Fall schon mal nicht so.
Äh, innovative Technologien und viel Spaß bei der Arbeit.
Das muss ich zeigen.
Ähm, hohe Freiheitsgrade durch flache Hierarchien, Kurzeinscheidungen und Eigenverhandlungen.
Der Witz ist, ähm, das schreiben die sogar bei uns und das trifft überhaupt nicht zu.
Da weiß ich, ich weiß in dem Fall, was man auf sowas hier geben kann.
Ähm...
Also bei uns ist das theoretisch alles vorhanden, aber am Endeffekt ist es einfach nur wir.
Jährliches Weiterbildungsbudget, Techdays, Meetups.
Remote First.
Okay.
Aber wie passt denn Remote First mit Mobilität und Flexibilität für Projektarbeit vor Ort zusammen?
Das, das beißt sich doch jetzt irgendwie, oder?
Wenn eines, wenn eines der Hauptpunkte ist Mobilität und Flexibilität bei unserem Kunden vor Ort und dann ist es Remote First.
Man sitzt im Homeoffice des Kunden.
Ah, man sitzt beim Kunde und arbeitet Remote fürs...
Ah, ja, jetzt habe ich verstanden, Leute.
Ah, jetzt.
Excellent.
Genau, man sitzt beim Kunde und lockt sich Remote auf der Arbeit ein.
Excellent Logik.
Ähm...
Arbeitgeberzuschuss zur betrieblichen Altersvorsorge.
Gut.
Ohne, das ist, das ist, das ist, ja, das ist ein Pluspunkt, aber man muss auch ganz ehrlich sagen, ohne Arbeitgeberzuschuss ist betriebliche Altersvorsorge unsinnig.
Das wirkt nur durch den Arbeitgeberzuschuss überhaupt interessant.
Der Zwiebelgeist scheint gelabert zu beherrschen.
Wieso?
Was?
Das hat er geschrieben.
Ähm, hat geschrieben.
Das Stichwort hier ist bei unserem Kunden vor Ort.
Ja, das sticht mir auch ganz, ganz stark ins Auge.
Kann gegebenenfalls eine Projektüberlassung für andere Firmen sein.
Kann durchaus, durchaus möglich, ja.
Also da hätte ich schon mal gar keinen Bock drauf.
Optionales Fahrzeug oder Jobrad Leasing.
Private Nutzung von Notebook und Smartphone.
Okay, das haben wir auch.
Wir bieten ja eine berufliche Perspektive und...
Blablabla.
Blablablabla.
Blablablabla.
Nee.
Das würde mir jetzt überhaupt nicht jucken, ja.
Oh, ein Junior-Java-Developer.
Endlich mal wieder Java entwickeln.
Wer hat da nicht schon mal wieder Bock drauf?
Wieso checkst du Stellenangebote?
Bin gerade erst dazu gekommen.
Einfach nur so.
Einfach nur in Bonn?
Ich habe in Frankfurt gesucht.
Mehr gibt es nicht, ne?
Okay.
Es gibt halt aktuell gerade wenig.
Da können wir nochmal gucken.
Ja, die meisten Stellenanzeigen sind schon ziemlich Bullshit.
Also, die sind nicht so, als hätte ich da irgendwie Bock drauf hinzugehen.
IT-Sec.
Können wir gleich so.
So, mal lieber hier da ein bisschen mehr los.
PwC.
Och, nee.
Gehen wir fort.
Ähm...
Geistesblitze in Java-Webanwendungen.
Ach, nee.
Geistesblitze in Java-Webanwendungen.
Geistesblitze in Java-Webanwendungen umwandeln.
Mit agilen DevOps-Teams.
Ah, yes.
Schade, dass du in FFM suchst.
Ich suche ja eigentlich gar nicht gerade.
Ich gucke ja nur, weil es Spaß an der freut.
Aber wenn, dann gucke ich auch da, wo es in der Nähe ist.
Ähm...
Ja, oh, gucke mal hier.
MonkaDB-Jobs.
Wir müssen bei der Gelegenheit gleich nochmal gucken, was die Telekom macht gerade.
Machen wir schon mal off.
Coach im Bereich DevOps.
Wie wird man ein DevOps-Coach?
Das muss ich mir jetzt mal angucken, was die Bana schreibt.
Die Magenta-DNA.
Ja, Leute, die Magenta-DNA.
Der Zwiebelgeist hat von der Farbe im Chat her vielleicht die Magenta-DNA.
Der sieht schon ziemlich magenta aus vom Username bei mir gerade.
Ich weiß nicht, welche Farbe er bei euch hat.
Deute das auf die Telekom hin.
Als Coach musst du sicher mit Leuten reden.
Da hast du recht.
Das ist nix für mich.
Das fällt bei mir schon mal komplett flach.
Ich tippe lieber, als mit Leuten zu reden.
Wisst ihr ja.
Äh, also was wollen sie denn hier haben?
Du übernimmst Verantwortung, als DevOps-Coach begleitest du Mitarbeiter, arbeitest zusammen mit ihnen darauf hin, DevOps-Produktionsmodelle einzuführen.
What?
DevOps-Produktionsmodelle.
Ich hätte schon mal keine Ahnung, was die da drunter verstehen.
Oh, oh, geil.
Oh, geil.
Oh, geil.
Oh, geil.
Oh, geil.
Oh, geil.
Die dazu notwendige übergreifende Koordination und Förderung einer, jetzt kommt's, einer proaktiven Zusammenarbeit mit dem Agility-Master.
Excellent.
Der Agilitätsmeister.
Das ist, das ist schon mal toll, dass die Bahn sowas hat.
Excellent.
Der Agility-Master.
Was macht man so als Agility-Master?
Agile.
Agility-Master.
Plus 50 Decks.
Genau.
Der Agility-Master.
Spot-Consulting-Blog.
Ich will denen eigentlich keine Views geben, das klingt schon so nach...
Ja.
Also, die, die würden sich als, als, als Agility-Master gehen die durch.
Ja, okay.
Besser als was bei uns rumläuft.
Alter, was ein Geschwätze.
Gehalt Agility-Master.
Guck mal mal, was Agility-Master so verdient.
Ah, da muss...
Also.
Da ist man nicht wirklich agil.
Ich dachte, wenn man so richtig agil ist, dann ist auch, dann ist auch das Gehalt entsprechend agil.
Agile-Master.
Was es nicht alles für ein Bullshit gibt mittlerweile.
Ich tippe lieber als zu reden, es streamt bei Twitch.
Ja, das ist auch schon ein Unterschied.
Hier rede ich ja meistens zumindest mit Leuten, die das Thema interessieren.
Und, und, und hier sind wenig Stonks-Leute am Start.
Okay.
Ähm.
Ich muss das BWL-Zeug erstmal wegmachen wieder.
Also, der, der, der Agility-Master, das ist, das ist schon mal nix für mich.
Außerdem muss ich den Chat nicht angucken.
Ich bin froh, dass ich den Chat nicht angucken muss.
Und ich bin froh, dass der Chat mich auch nicht angucken kann.
Hierbei.
Wenn ich, wenn ich mich grad da hänge.
Das könnte ich mit Facecam nicht machen.
Such mal nach Embedded Hardback.
So.
Ähm.
Ich könnte wenden, da finde ich nix.
Hast du was gegen Manager oder Controlling-Leute oder generell gegen BWL?
Weder noch.
Ich hab gegen die Leute eigentlich prinzipiell gar nix.
Ich hab nur was gegen den hohen Anteil an, äh, Dummschwätzern in dieser Ecke.
Das heißt nicht, dass es nicht auch Leute gibt, die wirklich eine Bereicherung darstellen in diesem, in diesem, äh, Segment.
Das.
Kann man ja jetzt auch, äh, kann man ja nicht abstreiten.
Es gibt auch wirklich Leute, die sind.
Es ist gut, dass sie da sind.
Und die bringen auch was.
Aber die heiße Luftquote ist in dem Bereich halt enorm hoch.
Hast du schon mal über einen Job in der IT beim BND oder BFV?
Was, Battlefield 5?
Nee.
Was ist BFV?
Irgendein Amt, hä?
Nein, hab ich noch nicht.
Wir haben uns mal Jobs angeguckt.
Genau, was soll ich suchen?
Embedded, Embedded Hardware.
Embedded, so, so, so sagen wir mal Embedded.
Embedded Hardware, Skill.
Gucken wir mal.
Gucken wir mal in Frankfurt.
Frankfurt ist immer gut, weil in Frankfurt gibt's viel Kohle.
Ja, okay, aber da sieht man ja gar nicht, was ist für Geldgepatrik.
Das, ähm, da schreibt ja keiner.
Äh, Gehalt.
Okay, also gucken wir mal, Gehalt.
Embedded Hardware.
Nee, wie, wie, wie, wie, wie?
Wie kriegt man hier das Gehalt raus?
Wie kann man da jetzt hin?
Wie kann man denn jetzt zu...
Wie kann man denn jetzt von
Hardware-Engineer
zu Gehalt?
Ne, also hier stehen bei den wenigsten...
Ja, guck mal, war das da.
Das ist ja nix.
Was du da kriegst im Durchschnitt, ja.
Alles für so spezialisierte
Leute.
Woodface, ja Patrick.
Da willst du nicht für schaffen hier.
Ja, du bist ja auch in der Schweiz.
In der Schweiz da...
Dafür ist in der Schweiz auch alles teurer.
So.
Wie viele Jahre hast du denn Erfahrung?
Äh...
14? Ne.
Oh, das ist...
Splatoon, oder?
Nice.
Ich spiele also überhaupt nicht.
Aber die Musik finde ich nice.
Also...
Erfahrung habe ich 14 Jahre.
Und davon ungefähr...
Ah, sagen wir mal...
Sagen wir mal 8 Jahre im DevOps-Bereich
als Release-Manager.
Ähm...
Schrägstrich...
Code-Reviewer.
Ich komme ja selbst noch wenig auch zum Programmieren aktuell.
Also ungefähr 8 Jahre.
Kommt hin.
Ja, so in dem Dreh.
Das ist jetzt schwierig aus dem Kopf zu kriegen.
Hast du überlegt, als Freier zu...
Als Freier zu arbeiten, Alter?
Ja.
Äh...
Ich weiß, was du meinst.
Ja und ne.
Also ja, habe ich mir schon überlegt.
Aber nicht viele Gedanken drüber gemacht.
Ich bin da auch...
Ich bin da echt ganz zufrieden, wie es jetzt gerade ist.
Ich meine, klar...
Mir ist auch klar, dass wenn ich wechseln würde...
Ich habe ja...
Vor... Wann war das?
Vor 2 Jahren, wo wir hier auch im Stream schon mal geguckt haben.
Wo sich danach im Stream auch ein paar Leute gemeldet haben.
Tatsächlich.
Aus Frankfurt, weil ich es lustig fand.
Ich war ein bisschen umgehört.
Und war auch bei einer...
Bei einer Firma vor Ort.
Ähm...
Und da habe ich...
Da hätte es gleich instant...
Instant eine ganze Ecke mehr Kohle gegeben.
Aber...
Ich bin insofern ganz froh, da wo ich gerade bin.
Ähm...
Ich meine...
Das Gras ist auf der anderen Seite immer grüner.
Erstens...
Bist du gekündigt worden?
Ne.
Bin ich nicht.
Erstens weißt du, worauf du dich einlässt.
Ich kenne die Leute.
Ich komme mit den Leuten super klar.
Ich arbeite nur 4 Tage die Woche.
Und ähm...
Insofern...
Ich verdiene ja noch nebenbei ein bisschen andere Sachen.
Ich habe wirklich aktuell eigentlich kein großes Interesse zu wechseln.
Was machst du denn mit einer Uhrleiste?
Mach mal Ausrufezeichen 1 im Chat.
Mach mal Ausrufezeichen 1.
Siehst du?
Da unterscheidet sich schon Big Brain zu Small Brain im Chat.
Die coolen Leute schreiben nämlich Ausrufezeichen 1 als Wort.
Ne.
Da fällt jeder das erste Mal.
Wenn ich sage Ausrufezeichen 1.
Jeder schreibt Ausrufezeichen.
Ausrufezeichen 1.
Aber muss Ausrufezeichen 1 schreiben.
Aber da gibt es eine Erklärung.
Wo ich das mal versucht habe.
Bisschen genauer zu erklären, warum ich immer 1 tippe.
Im Prinzip ist es eine blöde Angewohnheit von mir.
Der Sebaro hat es oben schon eingegeben.
Darf ich mal blöd fragen, was du einem Sussat mit 3 Jahren Erfahrung zur Zeit empfehlen würdest?
Boah.
Ich bin echt nicht der Beste.
Ich weiß nicht, was da drin irgendwelche Jobadvices irgendwie zu geben, weil ich meine, ich habe jetzt in 14, 14 Jahren ungefähr einmal meinen Job gewechselt.
Also ich habe meine Ausbildung gemacht bei einem Provider.
Und jetzt bin ich, dann bin ich dahin gewechselt, wo ich jetzt bin.
Da bin ich immer noch.
Also letztens gab es noch wieder ein bisschen mehr Kohle.
Also so nicht nur wegen dem Tarifvertrag.
Das heißt da.
Bin ich ab und zu mal am nerven.
Aber ich.
Bin da glaube ich der falsche, die krassen Ratschläge geben zu können.
Zumal das extrem davon abhängig ist, in welcher Region du bist und wie es aktuell gerade bei der ganzen Corona Geschichte aussieht, kann ich dir erst recht nicht sagen.
Ich weiß, dass zum Beispiel unsere externen gerade ein bisschen.
Bisschen hibbelig sind, was das angeht.
Weil es wohl gerade schlechte Aussicht.
Aussichten gibt, was was Jobs angeht, wobei ich mir halt immer denke, dass wenn du dich in einem Bereich wirklich gut auskennt und das ist ein Bereich, der auch gefragt ist, gerade in so einem in so einem Gebiet wie Rhein-Main-Gebiet oder Frankfurt, da wirst du wahrscheinlich immer irgendetwas finden.
Ach so, in welche Richtung man sich spezialisieren könnte.
Also es ist grundlegend, würde ich sagen, was du dich fragen musst, ist.
Willst du eher also in die drei drei Sachen drei Sachen musst du dich einfragen sind Führungspositionen und irgendwelche Projektmanagement Geschichten was für dich.
Und wenn du bei der Technik bleiben willst.
Legt ihr eher programmieren oder oder eher so eine Richtung.
Also willst du willst du Entwickler werden oder willst du eher so in Richtung.
DevOps Cloud und sonst was gehen, wobei Cloud für beides gilt, so wenn man jetzt mal von meinem Bereich ausgeht.
Also wenn ich da jemandem was empfehlen würde, mal angenommen, du hättest jetzt frisch Fachinformatiker Systemintegration oder sowas gelernt und willst dir einen Bereich aussuchen, dich zu spezialisieren, dann würde ich sagen als erstes überlegt mal, was dir an sich gefällt.
Also sprich, was was machst du gerne, was interessiert dich auch privat, weil es ist ätzend, wenn man sich mit Sachen beschäftigen muss, wo man keinen Bock drauf hat.
Und das ist so ein so ein so ein.
Strudel irgendwie, also sprich, wenn du.
Dich mit was auskennt, was dich interessiert, dann wirst du mit der Zeit auch immer besser, weil es dich eben interessiert, nicht nur auf der Arbeit und auch privat und dadurch steigen wiederum die Chancen, dass du in dem Bereich arbeiten kannst, der dich interessiert und dadurch wirst du wieder besser in dem Bereich und du hast noch bessere Chancen, in dem Bereich wieder was zu finden, zu arbeiten.
Aber allgemein.
Was zurzeit angesagt ist, sind jegliche Cloud Geschichten.
Also wenn du dich jetzt erst mal durch die Bank, egal ob es jetzt Azure ist oder ob es AWS ist, Google, wie heißt die Google Cloud Services nochmal, ob es Google ist, das ist jetzt erst mal, ja, nicht so wild, GCP genau, das ist auch sehr firmenspezifisch, was die dann, was die dann einsetzen, aber Cloud ist eindeutig ein Thema.
Cloud in Kombination mit Content.
Das ist so der Bereich, der gerade voll angesagt ist, wenn du, wenn du hippe Technologien lernen willst.
Cloud, Kubernetes, Container.
Was ist Kubernetes überhaupt, fragt der Sebaro, das ist ein Container-Orchestrierungs-Software.
Ist Serverless noch in, ja, ja, das gehört alles zu Serverless.
Oder.
Da gibt's so viele Buzzwords.
Cloud ist ja mittlerweile schon Mainstream.
Serverless, dann gibt's noch Function as a Service, bla bla bla bla.
Im Prinzip ist das alles nur Buzzword-Bullshit.
Serverless ist nicht Serverless.
Totaler Blödsinn.
Das Einzige, was Serverless ist, ist vielleicht dein Rechenzentrum.
Aber irgendwo steht immer noch ein Server, der den Kram ausliefert.
Also Serverless ist genau das Gegenteil von Serverless.
Kann man damit viele VMs deployen?
Kann man damit viele VMs deployen?
Wie alle vorkonfiguriert sind oder wie?
Nee, keine VMs.
Du kannst dir das vielleicht ein bisschen so vorstellen wie VMs, aber es sind nicht wirklich eigenständige VMs.
Es sind eigene Prozesse in so einer Art Sendbox.
Also sprich, der Unterschied, wenn du unter Linux jetzt einfach ein Programm startest und ob du das jetzt in einem Container unter Linux startest, ist gar kein so großer Unterschied.
Das ist nachhaltig.
Das ist nach wie vor auf dem gleichen Host, im gleichen Kernel ein weiterer Prozess.
Der Unterschied zwischen einem normal gestarteten Prozess und einem quasi containerisierten Prozess ist, dass der seine eigenen Libraries und quasi eigene User-Space mitbringt und ein bisschen Sendbox-Sachen drumherum hat, die ihn ein bisschen abkapseln vom Host und von anderen Prozessen.
Nicht so sehr, wie es eine VM macht.
Du hast beispielsweise halt viel, du hast kein virtualisiertes Filesystem.
Du hast kein virtualisiertes Netzwerk oder sonst was in der Richtung.
Was natürlich den Vorteil hat im Vergleich zu einer VM.
Du kriegst deutlich mehr Container auf die Hardware drauf als VMs.
Nicht so sehr von der CPU.
Nicht so sehr von der CPU, sondern eher vom RAM-Verbrauch.
CPU-Performance ist jetzt in einer VM zu dem Host kein allzu großer Unterschied.
Ich meine, guck mal.
Ich habe hier meine VM laufen mit 8 GB RAM.
Theoretisch könnte ich 6 GB RAM haben.
Da könnte ich 16 reinmachen.
Da in der VM habe ich auch 16.
4 CPU-Kern von 6.
Und die Performance in der VM ist absolut native.
Du merkst keinen Unterschied dazwischen.
Zwischen VM und Host-CPU.
CPU wohlgemerkt.
Wo du was merkst, ist natürlich bei Grafik-Ausgabe und Video-Decoding, weil du das nicht über die Grafik-Karte machen kannst in der VM.
Aber die reine CPU-Performance ist zwischen VM und Host kaum ein Unterschied.
Nehmt sich nichts.
Der große Unterschied zwischen das, was du wirklich sparst bei Containern, ist RAM.
Weil VMs brauchen verhältnismäßig viel RAM, weil halt alles virtualisiert werden muss.
Eigenes Betriebssystem, eigener Kernel, der läuft.
Dafür sind VMs halt besser isoliert gegenüber Containern.
Ganz grober Rundumschlag jetzt.
Genau, ausgelagerter Server gleich Serverless.
Richtig.
Serverless ist absolut nicht Serverless.
Das ist eh so ein Thema.
Da könnte ich mich Stunden drüber auslassen.
Genau, du schleppst immer ein komplettes Betriebssystem mit.
Unabhängig davon, Cbaro, muss man sagen, auch wenn gerade Containerisieren voll der heiße Shit ist, hast du schon mal was mit Docker und Stream gemacht?
Ich glaube schon.
Ja, ja, öfters mal schon.
Nicht unbedingt Docker als hauptsächliches Thema, sondern halt um Sachen auszuprobieren.
Nichtsdestotrotz darf man eine Sache nicht vergessen.
Man sollte immer das nehmen, was passt.
Ich meine, aktuell ist halt Kubernetes, Cloud, Container, kriegt man voll angesagt.
Aber es hat überhaupt keinen Sinn, wenn man daheim was Kleines laufen lassen will, da jetzt mit irgendwie großartigem Containerisierungszeug anzufangen.
Also irgendwie Raspberry Pi, Kubernetes Cluster oder so abgedrehte Sachen.
Es ist vollkommen okay, wenn man darauf scheißt und zwei Services auf der Liste hat.
Wenn man die Lidungskiste daheim bei sich startet, ohne gänzlich, ohne jegliche Container, ohne VMs, ohne Docker, ohne Kubernetes, ohne alles.
Man muss immer gucken, was angemessen ist.
Und wenn ich jetzt zum Beispiel, ähm, sagen wir mal, wenn ich eine Firewall in einer VM laufen lassen will, dann würde ich das auch auf jeden Fall in einer VM machen und nicht in einem Container, weil es da auf Isolierung ankommt.
Also man muss gucken, dass man das nimmt, was für die jeweilige Aufgabe passt.
Ne?
Nextcloud war doch im Docker-Onstream, ich glaube schon, ja.
So, wo sind wir denn stehen geblieben?
Okay, die Bahn sucht Leute, das hatten wir schon.
Full-Stack-Engineering.
Okay, da verstehe ich eigentlich so, Full-Stack ist für mich eher Richtung Programmierer, aber gucken wir mal, was da steht.
Oh, krasse Business-Fotos.
Sibaro, das ist ein typischer Fall von, man sollte es so machen, wie es am besten funktioniert für einen.
Man darf sich nicht so sehr durch irgendwelche Hype-Technologien aufschwätzen lassen, wie man, ähm, wie man Sachen macht.
Wenn das für dich die einfachste Variante ist und die günstigste Variante, dann nimm zwei Server, fertig.
In den Größenordnungen spricht ja da auch überhaupt nichts dagegen.
Wenn du jetzt auf diesen Server, nur mal, nur mal als Beispiel, für, ähm, wo sich sowas lohnen kann.
Angenommen, du hast eine, du hast eine Web-Anwendung, wo du, pff, was machst du denn da drüber?
Wo die Leute Konzerte buchen, ne, Konzerte buchen, das ist, das ist scheiße.
Fitness, du hast eine Fitness, eine Fitness-Web-Anwendung.
Corona, du hast eine Corona-Fitness-App.
So, und, ähm, die App ist unterschiedlich stark frigmentiert, äh, je nachdem, wie viele Leute gerade, äh, Corona haben, äh, wie viele Leute Fitness, äh, wie die, wie das Wetter ist, ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
machen viele Leute Fitness draußen, du hast viel mehr
Datenaufkommen, als wenn das
Wetter schlecht ist.
So, und da ist es ganz praktisch,
wenn du das so weit modular hast
und das in irgendeiner Cloud
Container-Orchestrierung laufen hast,
weil da kannst du relativ einfach sagen,
okay, heute ist gutes Wetter,
ich weiß, heute kommt der Ansturm
und du skalierst das
schon mal im Vorfeld hoch, dass du
sagst, wir gehen jetzt von 8
Containern auf 32 oder so
oder aber
noch besser, du hast Loadbalancer davor,
du machst das dynamisch, also sprich, sobald
die Kisten
über eine gewisse
Auslastungsschwelle
drüber gehen, kannst du einfach hochskalieren
und das ist natürlich eine Sache, das machst du mit
VMs und gar Hardware nicht so leicht.
Aber das bringt dir natürlich nur
erst was, wenn dann
bei einer gewissen Größe. So, was mich
hier schon mal dran abschreckt ist,
die sehen alle so ultra
Business-mäßig aus mit
Anzug und so.
Ist das Xenoplay-Musik? Ja.
Der Rollout von Pokémon Go.
Ja, genau, sowas zum Beispiel.
Ja, oder irgendein
Launch von irgendeinem Game oder ein Add-on.
Neue Spiele Add-on Launched.
Erstmal Login-Server hochfahren von
20 auf 300.
Okay.
Union Investment.
Sind das nicht die, sind das die nicht mit den Checks?
Ah, nee, das ist Western Union.
Also, ist der Experte
für Fondsvermögensverwaltung in der
Genossenschaftsgruppe. Ja, das ist natürlich
enorm wichtig, dass ich das
sofort mal erzählt krieg, ja.
Ähm.
Bla, bla, bla,
bla, bla, bla.
Bla, bla.
Gut, vollkommen uninteressant.
Hier.
Hierin.
Schreibt man das echt so?
Tatsächlich.
Hier, hierin sind
exquisite
Wortwahl.
Excellent.
Okay.
Als Dev-Aufsprecher nicht für digitale Prozesse
rund um die Gelder. Bla, bla, bla, bla, bla.
Koordinieren sie in einem
cross-funktionalen, agilen
Team die technische und inhaltliche
Verfügbarkeit. Ah, ja.
Sowie Stabilität für Umgebung
gemeinsam mit dem
1015
gegründeten...
Der Name kommt mir bekannt vor.
Der Name kommt mir irgendwie bekannt
vor. Sind die nicht bei uns
in Frankfurt um die Ecke?
Irgendwie kommt mir der Name übelst bekannt vor.
Ja.
Hauptbahnhof,
die sind hier bei uns um die Ecke.
Der Name kommt mir übelst bekannt vor.
Ich glaub, da sind manche Mexikaner
bei uns am Futtern, ne. Irgendwie kommt mir
der Name echt bekannt vor. Ich weiß nicht,
woher.
Aber irgendwie kommt mir der Name echt bekannt vor.
Oh, Anno, jetzt, jetzt, jetzt geht's aber ab hier.
Wir wollen zur Zeit,
er schreibt gerade, wir wollen zur Zeit
ein dediziertes Testsystem
probransch hochfahren lassen. Das klingt natürlich sehr sinnvoll.
Und jetzt, jetzt kommt's hier.
Nur leider ist die Architektur
nicht dafür ausgelegt.
Müssten dafür einen dedizierten
Hadoop-Mini-Cluster jedes Mal hochfahren.
Excellent.
So, ähm,
also das ist jetzt,
was haben wir sonst noch hier Schönes?
Ah, das ist, das ist alles so langweilig
geschrieben irgendwie.
Schnittstelle zwischen, ja, Zustände für das Monitoring,
ja, okay, Konzeption.
Ja, gut.
Dahinter stehen sie als Mensch.
Berufserfahrung als
DevOps-Engineer oder Softwareentwickler, idealerweise
im Finanzumfeld.
Naja, Leute, das wär ja
wie die Faust aufs Auge für mich, oder?
Berufserfahrung als
DevOps-Engineer oder Softwareentwickler,
idealerweise im Finanzumfeld. Das ist ja,
da trifft ja, da trifft ja alles.
Also das ist ja schon,
ah, optimaler kannst du nicht mehr sein.
Äh, magst du, suchst du? Nein, mach ich nicht.
Ich guck einfach nur, was es gibt.
Hauptsächlich, um mich ein bisschen, äh,
abzulästern über Stellenanzeigen, aber
die ist, über die Stellenanzeige kann man
nicht mal ablästern, die find ich einfach noch ein bisschen langweilig.
Continuous Delivery
Integration, sowohl in
methodischer als auch in technologischer
hinsicht.
Jenkins Nexus Rundeck,
guck mal da.
Ich wusste gar nicht, dass es Leute gibt, die wirklich
Rundeck verwenden.
Nexus deutet schon mal darauf hin, dass es
Java ist.
Dubiosa Stack,
das gehört auch nicht wirklich zusammen, muss man
sagen. Na, wobei, doch,
so blöd, so blöd ist das gar nicht.
Nexus, das ist für, für, für Java,
ja, fertige Java anwendig.
Ehrlich gesagt, ich hab bis heute nicht genau gecheckt,
wofür Nexus eigentlich da ist. Ich glaube,
da sind irgendwelche fertigen Java-Builds, werden da
drin verwaltet oder so. Es ist jetzt hier irgendein Java,
Java-Gedöns auf jeden Fall.
Ähm,
Jenkins als, als
Job-Build,
was auch immer, Server, und Rundeck,
um das fertig Gebildete zu deployen.
Garantiert, könnte ich wetten.
Also, äh,
ja, The Owned, das können wir uns
gerne angucken, wenn du es rausrücken willst, aber
eh besser nicht.
Jenkins kann auch deployen, natürlich kann Jenkins,
allein schon, weil Jenkins beliebige
Bash-Befehle, äh,
ausführen kann, oder alles mögliche ausführen.
Aber ich vermute, die verwenden Rundeck zum Deployen,
weil ansonsten würde Rundeck keinen Sinn machen.
Also, ich denke mal, hier ist das
Java-Zeug drinne, hier wird,
hier werden die Sachen gebaut und vielleicht
gegen irgendwas getestet, und hier wird's deployed.
So, sehr gute Kenntnisse
in Linux, Unix, Java,
äh, muss das sein?
Java Enterprise, sowie
Konfiguration von Widefly
und JBoss. Widefly hab ich keine Ahnung,
was das ist, wahrscheinlich irgendein Application-Server.
JBoss ist ein Application-Server,
Nginx ist ein Web-Server.
Erfahrung in Scripting, Markup, Bash, Python,
ja, Jammel.
SQL, Postgres, passt alles.
Kenntnisse in, in, in Hira,
oder, oh, sorry, Leute, Leute, Leute.
Hira, ich hab's, tut mir leid, ich hab's
korrekt ausgesprochen. Jira,
natürlich.
Jira, Jira,
Jira.
Jira.
Hey.
Also,
offiziell heißt es Hira, nur mal, um das
nochmal klarzustellen an der Stelle, ja.
Äh, schon arbeitslos durch Corona,
nee.
Widefly ist der Open-Source-JBoss, aha.
Hier lernt man noch was,
Chat, hier, hier ist,
hier lernt man noch was.
Also, Hira,
Jenkins, it's, oh,
Nagiyose.
Also,
es sind keine wirklich Nagiyose, es sind,
äh,
irgendwann mal Nagiyose gewesen.
Und, äh,
es gibt,
äh,
es gibt,
äh,
es gibt,
äh,
es gibt,
äh,
Bitbucket,
Wildfly,
Keycloak,
Puppet,
Angular,
WTF,
ohne Scheiß,
diese Stellenanzeige passt zu 90%,
wie die Forst aufs Auge bei mir.
Jetzt mal,
das ganze Java-Zeug außen vor,
aber,
der ganze andere Kram,
ich mag Nagiyos, Leute,
ich hab's euch schon ein paar Mal erzählt,
aber,
ich bin vorbelastet, was Nagiyos angeht,
ich mag Nagiyos.
Ich mag Nagiyos.
Ich weiß, viele Leute sagen,
Nagiyos,
geh mal fort,
aber ich mag Nagiyos.
Analytische Fähigkeiten gepaart mit einer kommunikativen
und integrativen Person,
was soll ich mir denn da drunter vorstellen?
Das ist,
das ist so ein typischer,
so ein typischer Personalsatz, oder?
Was zum Teufel soll das sein?
Analy...
Das können die dir wahrscheinlich selber nicht erklären,
wenn du sie fragst.
Stonks sentence,
ja, aber echt.
Nagiyos war dein Abschlussprojekt in der Schule.
Sehr nice.
Mein Abschlussprojekt damals bei der Ausbildung war
ein OpenVPN.
Layer 2 OpenVPN.
Analytische Fähigkeiten,
okay, gepaart mit einer,
also mit einer kommunikativen und integrativen Persönlichkeit.
Also das heißt,
jemand, der gut mit Leuten reden kann
und der sich in bestehende Sachen einlädt,
reinfügen kann oder sowas.
Sehr gute Deutschkenntnis in Wort und Schrift
sowie gute Englischkenntnisse.
Ja, die, meine, meine absolut exzellenten Englischkenntnisse
habe ich ja schon öfters im Stream unter Beweis gestellt.
Da muss ich ja nichts mehr, äh,
das ist ja über, über jeden Zweifel erhaben.
Haben wir schon öfters gehört hier.
Äh,
neben einer überdurchschnittlichen
sowie leistungsorientierten Vergütung
erhalten selbstverständlich eine Reihe...
blablablablablablablabla
blablablablablablabla
blablablablablablabla
blablablablablablablabla
blablablablablablablabla
blablablablablablablablabla
blablablablablablablablablablablablablablablablablablablablabla
blablablablablablabla
Förderung der beruflichen Weiter...
Ja gut.
Das ist ja auch das Interesse dran.
Von denen.
Brauchst du Englisch bei der Arbeit?
Ich hab nicht umsonst alles bei mir auf Englisch stehen.
Jegliche Browser, jegliche Sachen.
Das einzige, was ich auf Deutsch hab,
ist auf meinem Rechner, ist Tastatur-Layout.
Ach so, du meinst Englisch mit Leuten reden.
Eher just for fun.
Also es reden eigentlich alle Deutsch,
aber wir haben, äh,
Wir haben zwei Amis, wir haben ein paar Engländer, also ein paar Schnipsel immer zwischendurch, so ein bisschen aus Spaß, aber jetzt nicht wirklich lang.
Und ich brauche auch immer ein bisschen, bis ich reinkomme.
Hat man vor allem bei der Gamescom immer gemerkt, so einen ersten Tag ist übelstes Gestammel.
Aber wenn man sich daran gewöhnt hat, geht es flexibles Arbeiten, Fahrtkosten zu Jobticket, Angebot zur Betrieblichkeit.
Unterstützungsangebote für Kinderbetreuung.
Das finde ich mal gut, dass das jemand reinschreibt.
Das finde ich mal gut, dass das jemand reinschreibt, wenn er es hat, weil das ist ein echter Vorteil.
Je nachdem wie die Unterstützungsangebote aussehen.
Aber für Leute, die Kinder haben und teilweise auch nicht wissen wohin und keinen Platz kriegen, was auch immer, ist das wirklich nicht schlecht.
Check ZipGate aus, der Steilhengst wieder.
Hatten wir doch schon mal, hatten wir doch schon mal.
ZipGate Jobs, hatten wir doch schon mal.
Ne, nicht SP-Gate.
ZipGate.
Haben wir uns doch schon mal...
Haben wir uns doch schon mal angeguckt.
So, ich gucke den gerade noch mal fertig hier.
Da gucken wir ZipGate.
Sportangebote.
Mittagessen, Kantine.
Leute, ich hätte nicht für möglich gehalten, wie gut das ist, wenn man...
Also einmal natürlich Mittagessen Zuschuss kriegt, aber wenn man eine Kantine im Haus hat.
Weil, man denkt sich immer so nach dem, ah, immer wieder jeden Tag ins Gleiche und ah, ist doch kacke.
Aber es ist viel besser.
Man ist einfach sofort da, kann essen und wieder zurück.
Ansonsten musste 45 Minuten oder so am Tag länger auf der Arbeit bleiben.
Einfach nur durch das Hin und Zurück und das Mittagessen und alles drumherum.
Das ist voll für den Arsch.
Und eine Kantine ist das Beste, was es gibt.
Es ist erstens nicht viel teurer als drumherum.
Bei uns gibt es zum Beispiel kostenlos trinken, was du bei keinem anderen Restaurant...
...in der Umgebung kriegst.
Und du bist halt sofort da, kannst essen und gehst wieder rein und bist am Start.
Das ist die...
Also Kantine lohnt sich wirklich.
Mitarbeiter, Rabatte und dieses und das.
Also ich muss euch ehrlich sagen, die Anzeige finde ich gar nicht schlecht.
Die finde ich gar nicht schlecht, die Anzeige.
Ja.
Ja, war es das Problem, aber...
Das ist das, was mich abschreckt.
Aber nee, aber mal ernsthaft.
Das macht echt keinen schlechten Eindruck hier.
So, okay, Zip-Gate.
Wir gucken jetzt mal Zip-Gate an.
Also, Zip-Gate.
Übersicht.
13 offene Jobs.
Was haben wir zu bieten?
Full-Stack-Entwickler.
In.
Such bei der Bahn.
Haben wir das das letzte Mal schon?
Was ist deine Lieblingssprache?
Also wenn ich komplett...
Also wenn sich der Einsatzzweck dafür eignet und wenn ich wirklich komplett machen kann, weil ich will, .net.
Also C-Sharp.
C-Sharp ist meine absolut Lieblingssprache.
Und .net-Core mittlerweile auch meine absolut Lieblingsplattform.
Aber ich...
Also es sei denn, es ist wirklich irgendwas, was halt...
Wo es nicht geht.
Ich weiß ja, Patrick, für den ist C das einzig wahre.
Eventuell noch Assembler.
Könnt ihr euch noch an den Stream erinnern, wo wir mal auf dem ESP2866, wo wir Assembler programmiert haben?
Boah, das ist ein Rotz.
Benutzt dann .net und lässt dann über Java.
Natürlich, .net ist auch besser.
Why do Java developers wear glasses?
Okay, der ist so schlecht und schon so oft gebracht, dass es Pains Champ ist, muss ich sagen.
Go, doch.
Go habe ich...
Diese Videoüberwachungsgeschichte, die ich für meine Kameras gebastelt habe, die ist ja eine Mischung aus...
Die erste Version war eine Mischung aus Go und C.
Allerdings war der Interop von Go und C so abartig, dass...
Dass ich das jetzt zum größten Teil in C-Sharp neu gebastelt habe.
Mit ein bisschen Go, da komme ich nicht drumherum.
Rust.
Ja, Rust ist nice.
Aber ich muss dem Patrick insofern schon recht geben.
C ist eine super Sprache.
Du weißt in der Regel immer, was passiert.
Das, was man bei anderen Sprachen nicht wirklich sagen kann.
Guckt euch den C++-Crap hier an manchen Stellen an, den wir vorher hatten.
Wo du keinen blassen Schimmer hast.
Warum manche Sachen nicht erlaubt sind und warum manche Sachen gehen.
Das Problem hast du bei C nicht.
Bei C geht erstmal nix.
Außer es geht.
Und dann geht's.
Das ist ja das Schöne an C.
C kann nix im Endeffekt.
C hat außer den Basics nix.
Aber die funktionieren halt gut.
Das ist nicht schlimm.
Du kannst ja in C alles machen.
Du kannst ja in C komplett alles machen.
C++ ist historisch gewachsen.
Ich weiß...
Ich weiß nicht, was mit dem Standard-Gremium los ist.
Es leuchtet mir echt nicht ein.
Die basteln an so vielen Sachen rum.
Und machen die Sachen so unnötig kompliziert in C++.
Ähm...
Also ich mein, wenn...
Wenn allein schon eine Feature-Ankündigung...
Da... Es gab ja letztens...
Wir haben uns ja letztens mal diese Feature-Ankündigung von...
Für C++... Was war das? C++20.
Dieses...
Der Patrick weiß es vielleicht noch. Was hatten wir uns da angeguckt?
Irgendwelche...
Irgendwelche Template...
Ähm...
Covariance...
Bla...
Irgend...
Sowas ganz merkwürdiges Feature hatten wir uns angeguckt.
Also wenn du...
Wenn du schon die Feature-Ankündigung...
Mit Beispielen...
Drei Concepts...
Drei Seiten brauchst und am Ende absolut keinen Schimmer hast...
Was die Feature-Ankündigung eigentlich ankündigt...
Dann stimmt irgendwas nicht.
Vor allem, dass mal wieder...
Ähm...
Dass mal wieder...
Zig Zeichen doppelt belegt sind...
Ähm...
Teilweise Zeilenumbrüche an...
Zeilenstellen sind...
Wo du dann denkst...
Was macht da jetzt ein Zeilenumbruch drinne?
Ähm...
Dass manche Sachen doppelt und dreifach belegt sind...
Irgendwie...
Alter, wenn ich so...
Wenn ich die Sachen bei C++ sehe, krieg ich echt immer Anfälle.
C++ ist Elite aus diesem Grund...
Kompliziert...
Ah...
Verstehe...
Verstehe...
Äh...
Der Chief schreibt...
C ist halt Müll, was Stack-Overflows betrifft.
Ist ganz einfach.
Keine Stack-Overflows programmieren.
Eats.
Easy.
Easy.
Easy.
Easy as fuck!
Und wenn nicht...
Crashs halt.
Ja, das ist natürlich ein Problem, aber...
Man kann...
Man kann halt...
Man kann halt irgendwie nicht alles haben.
Ja?
Man kann nicht ne...
Ne Sprache haben, die möglichst...
Minimal und...
Und...
Aus dem Weg geht...
Und quasi mehr oder weniger 1 zu 1...
Bisschen...
Bisschen Abstraktion über...
Über...
Ganz Low-Level ist...
Mit der man dann auch maximale Performance haben will...
Das beißt sich so ein bisschen.
Bei Rust...
Rust ist ja ne Sprache, die hätte ich so...
Früher persönlich nicht für möglich gehalten.
Weil ich halt halt...
Ich hätte halt immer gesagt, okay...
Wenn du es komfortabler haben willst...
Und wenn du es...
Sichere haben willst...
Dann...
Hast es halt auch nicht mehr ganz so Low...
Und du hast vor allem ein bisschen langsamer.
Logischerweise.
Zum Beispiel...
Was ist die...
Musst du eigentlich morgen arbeiten?
Ja, aber ich hab ja Homeoffice.
Das heißt...
Ich kann auch...
Aber wir haben noch kurz Zeit.
Das heißt, du hast dann zwei Varianten.
Entweder...
Um jetzt mal beim...
Beim Thema...
Beim Thema...
Overflows zu bleiben.
Entweder...
Machst du vor jedem Zugriff...
Einen Overflow-Check.
Das ist langsamer.
Aber sicher.
Oder nicht.
Und dann bist du wieder bei C.
Deswegen hätte ich sowas wie Rust...
Früher nicht für möglich gehalten.
Rust macht das eigentlich super clever.
Rust erkennt...
Quasi zur Compile-Zeit...
Ob das, was du programmiert hast...
Zu 99%...
Das, was du programmiert hast...
Und bevor es das nicht erkennt, kackt es eher ab.
Und sagt, darfst du nicht kompilieren.
Erkennt zur Compile-Zeit, ob dein Code so programmiert ist,
dass es überhaupt zu Overflows kommen kann.
Also so nach dem Motto...
Der Thread läuft noch weiter, obwohl du eigentlich schon rausgehst.
Und solche Dinger.
Das checken die alles.
Das ist eine Sache, die hätte ich, bevor es Rust gegeben hat,
gar nicht für möglich gehalten.
Weil das ist, wenn man es so will, die optimale Kombination aus...
Performance...
Sicherheit...
Und auch teilweise Komfort.
Das Problem ist nur bei Rust...
Irgendeinen Tod musst du sterben.
Das Problem bei Rust ist...
Da ist zwar alles andere toll.
Aber Rust ist halt echt kompliziert.
Bis man da mal reinkommt.
Du lernst jetzt Cobol.
Cobol ist die zukunftssichere Sprache.
Nur so halb Kappa.
Weil...
Cobol-Entwickler wird es immer geben.
Ruby.
Ruby ist auch toll.
Ruby mag ich.
Ruby ist neben C Sharp meine zweite Lieblingssprache.
Leider gibt es nicht mehr so viele Varianten,
gerade Ruby zu verwenden.
Rails ist im Arsch.
Verwendet keiner mehr.
Auch wenn es immer noch ein ganz cooles Framework ist.
Linux-seitig Scripting ist eigentlich 90% Bash.
Und wenn keiner Bock auf Bash hat, dann ist es Python.
Ruby eigentlich so gut wie nie.
Perl verwendet auch kein Sau mehr.
Es gibt leider gerade wenig.
Es gibt wenig Anwendungsgebiete für Ruby.
Auch wenn ich es blöd finde, weil Ruby ist eine super Sprache.
Die haben Sonderzeichen ihrer Syntax, von denen du bis dahin nicht mal wusstest,
dass es die gibt, richtig.
So sieht es halt in C++ aus.
In Rust allerdings ist es auch nicht ganz sonderzeichenfrei.
Arbeit.
Arbeitst du, kennst du Ansible?
Ja.
Kenne ich, habe ich auch schon ein bisschen mit was gemacht.
Finde ich ist eine super Geschichte.
Arbeiten nicht.
Da haben wir eine uralt Puppet Base.
Die wird immer noch aktiv weiterverwendet und gepflegt.
GitLab ist doch Ruby.
Früher war es das?
Jetzt weiß ich nicht.
Früher war GitLab eine Rails-Anwendung.
Aber ab jetzt geht es los.
Und wie ist es mit Terraform?
Terraform, ist das dieses Haschikorb-Terraform-Ding?
Die hat noch so einen komischen Namen.
Haschikorb, Haschikorb.
Nicht großartig.
Also, ich weiß, dass es ein Tool ist zum, na, wie heißt es so schön,
dass du quasi nicht die Sachen aufbaust und hinstellst,
sondern dass du quasi Config-Dateien erstellst,
dass dann Terraform für dich die Kisten so hinstellt.
Infrastructure ist das.
Infrastructure ist Code, genau.
Ja, da, da steht es.
Ähm, habe ich aber noch nicht viel mitgemacht.
Tschüss meine Damen und Herren, fünf Monate, Dankeschön.
Huge.
Dankeschön.
So, wir gucken jetzt mal schnell über die Angebote von ZipGate rüber,
weil, sollen ja mal drüber gucken, ZipGate, also.
Nichts dabei, bewirbt sich trotzdem.
Kinderbetreuung, NRW, oder Produkt, oder, äh, äh.
Was für ein Ding?
Holistische, was?
Holistische?
Ich weiß ja nicht mal, was das ist.
Ja, alles gut, Zwiebelgeist.
Gummibär Games, Twitch Prime, Dankeschön.
Ich habe bestimmt jede Menge Subs heute wieder übersehen,
weil ich vorher so beim Proggers konzentriert war.
Gucken wir doch mal rein, wen haben wir denn da hier noch?
Ich glaube, ich habe sie alle.
Ich habe sie alle.
Also, ich habe keine Ahnung, was für Holistische.
Designerin, WebDigital, UX-Designer, Produktdesignerin, VoIP, Voice.
Software-Engineer, Plattform-Foundation, Full-Stack-Entwickler.
Okay, gucken wir mal, was ZipGate da so am Start hat.
Wir suchen dich.
Full-Stack-Entwickler, in.
Deine Arbeit möchtest du nicht über den Zaun geworfen bekommen
und stattdessen ein neues Feature von der Konzeption bis zum Release
und darüber hinaus begleiten.
Endlich mal eine ordentliche Einleitung.
Nicht so diese Geschichte, wir sind führend im Bereich von Voice-over-IP-Kommunikation
und bla bla bla bla.
Sondern einfach mal geschrieben, was Sache ist.
Ich weiß nicht, ob es sich als Video gut eignet.
Machst du momentan andere Tätigkeiten beim Job wegen der Corona?
Nö.
Die Polizei-Hessen kann ich gleich machen.
Mach ich nicht, mach genau das gleiche wie vorher.
Es ist bei uns auch gerade eher noch mehr los als sonst.
Gerade weil lustigerweise unser Außendienst jetzt gerade
nach anderen Möglichkeiten sucht, Dinger zu verkaufen.
Okay, JavaScript und Java sind keine Fremdsprachen für dich
und gehen dir fluffig von der Hand.
Ja, Java muss es sein, ja.
Du kannst problemlos an einem Tag tief in CSS, am nächsten Tag in MySQL einsteigen.
Kommt drauf an, was ich damit machen soll am Ende.
Ich würde nicht von mir behaupten, dass ich innerhalb von einem Tag
mich so tief in eine Technologie einarbeiten kann,
dass ich da was Produktionsreifes fabrizieren kann.
Und jeder, der das behauptet, wird früher oder später Mist zusammenbasteln.
Java gleich C-Sharp, change my mind.
Ja, Java vier Buchstaben, C-Sharp zwei Buchstaben.
Das ist schon mal ganz einfach.
Zusammen mit deinem Team liebst du es, die volle Verantwortung für ein Produkt zu übernehmen.
Du bist begeistert, wenn Kundinnen deine Arbeit sofort...
Ich muss manchmal immer noch über diese Schreibweise lachen.
Aber man muss halt korrekt sein.
Man kann nicht einfach so neutral schreiben, begeistert, wenn Kunden...
Eines müssen Kundinnen sein.
Dein Wissen gibst du außerdem gerne weiter und weißt, dass man nie ausnimmt.
Da haben sie recht.
Dann bewirb dich jetzt.
Okay, unser Technologie-Stack.
JavaScript, Node.js, React, Redux, Yarn.
Die sich übrigens gerade bei Yarn selbst ins eigene Fleisch schneiden mit Yarn 2.
Ich weiß nicht, ob ihr das mitgekriegt habt.
Die haben jetzt die zweite Version von ihrem Paketmanager rausgebracht,
der nicht richtig kompatibel zu Version 1 ist und Sachen Standard gesetzt hat,
die die Hälfte der JavaScript-Pakete unbrauchbar macht.
Ganz merkwürdig, was da abgeht.
Also, ja, ja.
Ne, habe ich wenig bisher mitgemacht.
Ich bin ja eher der Vue.js-Man.
Das eher.
So, ähm, unsere Backend...
Okay, Wildfly scheint anscheinend voll angesagt zu sein.
Wert X, sagt mir Null.
Basierende Java Microservices, die wir per REST und Enterprise Message Bus verfügen.
Ich habe keine Ahnung, was der Enterprise Message Bus ist, aber ist bestimmt irgendwas mit Java.
Außerdem arbeiten wir noch mehrere Perl und...
Oh, Perl!
Da sind sie aber exquisit unterwegs mittlerweile.
Man hat ja früher immer gesagt, Perl ist so die einzige Write-Only-Programmiersprache.
Zusätzlich integrieren wir Zip-Gain in andere Produkte und setzen dazu die APIs der Anbieter,
zum Beispiel Google oder Salesforce.
Was?
Ah, und nutzen dazu die.
Okay.
Wir stehen auf Clean Code und haben einen eigentlichen Code-Style,
den wir viel diskutieren, den wir gemeinsam...
Das ist nicht übel.
Wobei ich ja jemand bin, der dann immer der Meinung ist, dass, ähm, das am allerlogischsten ist, so wie ich das mache.
Und ich mich dann wahrscheinlich erst mal ärgere, dass die das nicht so machen wollen, wie ich.
Aber da kann ich mit leben.
Da kann ich mit leben, ja.
Ähm, ich hab dann auch keine Schmerzen, das anders zu machen.
Man codet so wie Standard Library, ey, da ist sich selbst nicht mal Microsoft einig.
Gerade bei C-Sharp hast du zwei Fraktionen.
Du hast die, die, ähm, Klassen, also private Variablen, mit, äh, Underscore machen.
Oder die es nicht mit Underscore machen, deswegen, und bei, und, und dann dis davor schreiben, um zu kennzeichnen, dass es ne Klasse, private Klassenvariable ist.
Und du hast beides bei Microsoft.
In den, sogar in den offiziellen Beispielen hast du beides.
Der Style Guide bei Microsoft sagt meiner Meinung nach, dass man...
äh, kein Underscore verwendet, sondern, ähm, private Klassenvariablen, Member, wie auch immer, klein schreibt.
In den Beispielen haben sie oftmals aber Underscore.
Ryder hat standardmäßig Underscore gemacht.
Ich, ich find's mittlerweile auch gut. Ihr erkennt's noch, ihr könnt euch vielleicht noch dran erinnern, so vor nem, vor eins, zwei Jahren, wo man, ähm, dort, wo ich die Sachen in C-Sharp gemacht hab, da hab ich immer dis und, und klein geschrieben.
Mittlerweile bin ich auch ein Fan von Underscore.
Was kann man mit den Keksen machen?
Kannst die ausgeben.
Für sinnlose Sachen, wie zum Beispiel, äh, dass du nem Emote ein, eine Sonnenbrille aufsetzen kannst, zum Beispiel.
Sieht dann so aus.
Oder die Nachricht hervorheben kannst, oder sowas.
Du hast fast 20k?
Boah, ich hab unendlich.
Aber nur bei mir auf dem Channel.
Ähm, ja, aber die Stellenanzeige find ich nicht, nicht schlecht.
Wenigstens ist kein...
Kein Ultra-Selbstbeweihräucherung am Start, am Anfang.
Okay, ich komm jetzt aber schnell in die Polizei Hessen und dann, äh, ist vorbei für heute.
Also, was will denn die Polizei Hessen?
Duale Studium mit Schwerpunkt Cybercrime.
Ne, duale Studium will ich nicht machen.
Bringe Licht ins Darknet.
Wetten, dass das alles keine Polizisten sind, die auf dem Bild sind, sondern irgendwelche Models, die sie dahingestellt haben.
Ich weiß das noch, in der Firma, wo ich ganz am Anfang gearbeitet hab, bei dem Provider,
da war in, in den offiziellen, äh, ja, in dem offiziellen Anpreisungsmaterial, ähm, waren auch alles Models.
Und, und halt auch professionelle Fotografen, die das gemacht haben, aber halt so getan haben, als Best-Mitarbeiter von der Firma.
Ich will zur Polizei.
Mit Abitur Fachhochschulmaß als Sp...
Ja, natürlich.
Das ist genau das Richtige für mich.
Was ist denn die Wachpolizei?
Ja, äh, ist das jetzt wirklich relevant, was ich irgendwann mal für einen Abschluss gemacht hab?
Wen juckt das, dass ich vor, vor, keine Ahnung, vor, keine Ahnung, 18 Jahren mal einen Realschulabschluss gemacht hab, oder so?
Prima.
Ah, oder einen entsprechenden Abschluss.
Ja, Moment, wo steht denn jetzt, was die für, wo ist denn jetzt, wo sind denn jetzt die Jobanzeigen?
Wir bieten Fragen, Antworten, what?
Ich check, ich check die Seite schon mal gar nicht.
Okay, wir bieten.
Faires Gehalt, sicheres und familiöses Soziales Engagement.
What?
Wollen die mich veräppeln?
Ah, das ist für die Ausbildung.
Haben die nicht irgendwas normales?
Ich mein, die brauchen doch auch Leute, die Software entwickeln.
Die müssen doch keine Polizisten sein.
Haben die nicht normale Jobs?
Und das machen dann externe Unternehmen, okay.
Ja, aber da kann ich jetzt nichts zu sagen, also ich find das irgendwie verwirrend, also.
Okay, was auch immer.
Das verwirrt mich schon so, ich wüsste gar nicht, wo ich da anfangen sollte, wenn ich da hin will.
Oder geschweige denn als was?
Mindestgröße 1,55.
Oh, ist das nicht diskriminierend, wenn man kleiner ist?
Da ist gleich die Anzeige raus, oh.
Ja, hab ich knapp, 1,55.
EU-Bürger gelten die gleichen Voraussetzungen.
Okay.
Höchst aller, oh.
Oh, oh, oh, oh, Leute.
Das wird eng.
Das wird eng.
Habe ich nicht mehr lang Zeit.
Habe ich nicht mehr lang Zeit.
Oh.
Gibt's auch noch Maxgröße?
Wahrscheinlich nicht.
Zum Übungstest, okay.
Oh, Leute, ich muss jetzt offline.
Zum Übungstest.
Was?
Wenn die Uhrzeit, okay, das machen wir das nächste Mal, oder?
Was, was?
Wenn die Uhrzeit der anzuklickenden Uhr eine oder drei Stunden nach der vergangenen Uhr angezeigt wurde,
kann ich nicht mehr online streamen.
Was?
Oh, das ist mir zu big brain für kurz, bevor ich ins Bett gehe.
Das mache ich jetzt nicht.
Das machen wir das nächste Mal.
Das mache ich jetzt nicht.
Ich habe es mir gebuckt, Marc.
Das machen wir das nächste Mal.
Das mache ich jetzt nicht.
Da kann ich nachher nicht pennen, wenn ich mich noch mal ordentlich konzentrieren muss.
Oh, die Telekom-Seite ist weg.
Konzentration, keck, weh.
Gut, machen wir morgen weiter.
Oder übermorgen, oder so, mal gucken.
Ich wollte ja eigentlich ein bisschen mehr streamen wieder.
Wenn ich schon keine YouTube-Videos mache.
Sibaro, hast du gesehen, dass wir jetzt sogar das im Mord haben?
Ja, hat er, hat er, hat er.
Hätte mich auch gewundert, wenn nicht.
Also, Leute.
Ja.
Machen wir Schluss.
Wir sehen uns.
Vielleicht morgen schon wieder.
Ich hoffe es mal zumindest.
Bis denn.
See you.
