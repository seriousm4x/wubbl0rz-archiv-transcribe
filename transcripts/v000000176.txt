So, bin ich am Start.
Irgendwie hat Twitch keine Ankündigung verschickt, kann das sein?
Ihr seid bestimmt alle über Twitter da, oder?
Oder ist jemand über Twitch direkt da?
Lolololololololololol.
Easy.
Über Twitch? Okay.
Wundert mich.
Weil ich hatte den Stream bestimmt
drei, vier Minuten laufen.
Echt? Okay.
Ihr seid über Twitch da? Aha.
Weil ich hatte den
Stream irgendwie schon drei, vier Minuten laufen
und es war die ganze Zeit bei null Zuschauern.
Hab ich mir gedacht, irgendwie
verschickt Twitch nix.
Und ich hab es nochmal auf Twitter gepostet.
Und weiß es nicht.
Broggers?
Doch, ging, okay.
Also, was wir heute machen.
Nichts Großartiges.
Und zwar, ich zeige euch das mal.
Wir machen erstmal kurz Visual Studio auf.
Wir brauchen einen ordentlichen Titel.
Der Titel ist viel zu seriös.
Wir machen, wir machen irgendwas anderes.
Der Titel ist viel zu seriös.
Seid mal bitte kreativ.
Was könnten wir denn für einen schönen Titel nehmen?
Danach mache ich auch die Kirby-Musik aus.
Und zeige euch, was wir machen.
Also, ich meine, es steht ja schon im Titel, was wir machen.
So prinzipiell, ne?
Irgendwas, irgendwas, was zu Twitch passt.
Omega-Broggers oder irgendwie sowas.
Hat jemand irgendeine glorreiche Idee?
Ich sehe, ihr seid genauso unkreativ.
Sehe ich, was das anbelangt.
Proggers, Proggers, keine Ahnung.
Ich bin gerade echt heute nicht mehr sonderlich kreativ.
Ja.
Ei.
Nicht nur nicht kreativ, sondern kurz vor Verrecken, ey.
So, also.
Was können wir da als schönen Titel machen für den Stream?
Was können wir da als schönen Titel machen?
Sklaven Proggers.
Ja, ich mache das sogar kostenlos.
Eigentlich total.
Eigentlich total bescheuert, ne?
Aber ich meine, er schwimmt ja nicht gerade im Geld.
Und außerdem mag ich ihn.
Da kann man was umsonst machen.
Wir bashen Twitch.
Ne, das ist, das ist.
Ähm.
Ein kleiner Proggers möchte aus dem Bälle-Paradies abgeholt werden.
Was haltet ihr davon?
Ähm.
Äh, ich weiß nicht.
Ich weiß nicht.
Ähm.
Ich bin echt.
Ich bin heute echt nicht sonderlich kreativ, ne.
Und ich sage ja immer, Programmieren ist eine, eine kreative, ähm, Arbeit, ja.
Aber das kriege ich schon noch hin.
Also.
Proggers.
Hab gehofft, dass du streamst, als ich auf Twitter gelesen habe.
Ja, Beat, ich muss euch ja ehrlich sagen, ich habe ja auch, also einer der Gründe, warum ich gesagt habe, ey, ich mache dir das, ist ja gerade, dass ich streamen kann.
Das ist ja gerade, das ist auch der Grund, also einer der Hauptgründe, warum ich gesagt habe, wir machen es.
Und er wollte ja eigentlich, ich zeige es euch gleich.
Wir machen Proggers.
Bis zum Unfall.
Wir schreiben.
Wir schreiben bis mit 2S.
Dann sind die ganzen Twilight-Leute getriggert.
Ja, dreimal, genau.
Dreimal 280 TI als Bezahlung.
Da fällt mir echt nichts anderes mehr ein, als easy.
Easy.
So.
Also, was wir heute machen.
Ich habe.
Also, ungefähr schon überlegt, wie das, wie das Ganze aussehen soll.
Muss man gucken, ob Twitch jetzt den Titel ändert.
Gleich noch.
Also, was wir heute machen.
Ich habe auf Twitter gelesen, das ist der gute Hardware Rat.
Ein Skript, das er weiß nicht so genau, was er da schreibt.
Das, das ist, das ist viel zu unsophisticated, was er da will.
Das ist, äh, das ist langweilig.
Wir müssen da schon ein bisschen, ein bisschen, äh, noch die Messlatte oben drauf legen, ja.
Also, er schreibt hier, er braucht ein Skript, das folgendes kann.
Windows-Key aus einem Nass holen.
Was?
Brauche man?
Windows-Key aus einem Nass holen aus einer Textdatei, der oberste Key.
Aktivierung mit dem Key durchführen und wenn erfolgreich Key löschen.
Jemand, plan davon.
Ich meine, das könnten wir machen.
Bis auf den Zugriff auf den Windows-Share.
Wo ich keine Ahnung hätte, wie ich das gescheit mit, äh, .NET oder PowerShell mache.
Sind das wahrscheinlich 15 Zeilen.
Das ist allerdings viel zu billig für uns.
Das heißt, ich habe mir gedacht und ich habe mir so gedacht, was könnte man machen, was ihm auch was bringt.
Ich meine, es bringt ja nichts, das alles komplizierter zu machen, als es irgendwie sein muss.
Nur, dass wir uns hier dran aufgehangen können, ne.
Das ist ja nicht Sinn und Zweck der Sache irgendwie.
Ja.
Äh, übrigens, ähm, das, das, das, mein, mein DirectX, ähm, GIF-Render-Ding ist fast fertig.
Jetzt können wir auch die Tare fertig machen.
Genau, deswegen habe ich gedacht, wir machen das folgendermaßen.
Wieso ist es ein Chrome und ein Blau?
Weil es kein Chrome ist, sondern ein, Achtung, ein Chromium.
Chromium.
Chromium-Beste.
Ich kann dir gar nicht mehr genau erklären, warum es ein Chromium ist.
Weil Chromium, ich weiß es nicht.
Weil ich mir gedacht habe, ich installiere, na, Chromium haben wir ja auch installiert.
Es ist ja nicht so, als hätten wir hier zu wenig, zu wenig Webbrowser irgendwie am Start.
Oh, ne, Vivaldi habe ich nicht mehr installiert.
Aber prinzipiell haben wir jetzt ja, wir haben gerade mal vier Browser auf.
Also, da geht ja eigentlich schon noch ein bisschen was.
So, also, und was ich mir gedacht habe, was wir machen, ist, wie gesagt, es muss ihm ja auch was bringen.
Es kann ja nicht einfach komplett sinnlos, äh, sinnlos kompliziert sein, nur weil wir jetzt Bock haben drauf.
Also, ich habe mir gedacht, wir machen das folgendes.
Ja, hier unten irgendwie, was auch immer, wer hier unten rumspammt, weiß ich nicht, dass schon einer was gemacht hat.
KMS-Server, na, KMS-Server ist ja nur eindeutig zu naheliegend.
So, und ich habe mir gedacht, wir machen das folgendermaßen.
Ähm, er braucht dazu allerdings, und ich denke mal, dass er das hat, weil ich meine, da hat er geschrieben, äh, vom Nastholen.
Er braucht dazu allerdings eine zweite Kiste, neben dem Rechter, den er installieren will.
Und.
Und, wir werden das folgendermaßen machen.
Also, ich habe mir das so überlegt.
Also, fangen wir mal anders an.
Die Billig-Variante wäre wirklich so, wie er das schreibt.
Also, sprich, man macht ein Programm und eine Settings-Datei.
In der Settings-Datei steht drinne, Adresse vom Nastholen, Username fürs Nastholen, Passwort fürs Nastholen, Fahrt zur Datei, oder aber auch noch irgendwie, keine Ahnung, ähm, irgendwas so.
Das muss in der Settings-Datei drinne stehen, dabei ist ein Programm.
Das ziehst du auf den USB-Stick bei.
Das führst du auf dem jeweiligen Rechner aus.
Das macht nichts anderes, wie zum Nassig-Connecten die Key-Datei ziehen, Key löschen, Nassdatei wieder hinschieben und Windows aktivieren.
Oder halt, man könnte es in die Installation einbauen, oder sowas, was auch immer.
Ähm, naja, das, das wäre die Billig-Variante.
Ich habe mir gedacht, wir machen das einfach ein bisschen advancer und ein bisschen schöner, dass er auch sehen kann, zum Beispiel, wie viel Kies er in der Woche so verbraucht, oder sowas.
Weil, letztendlich hat man die Sachen dadurch, dass man sie...
...dass man die Kies quasi löscht und sich einen Zeitstempel holen kann, ja eh schon irgendwo zur Hand, ja.
Also, wir machen das, wir machen da ein bisschen mehr drum herum und ich habe mir gedacht, dass es richtig simpel wird für ihn, splitten wir das auf.
Und zwar, jetzt machen wir mal eine krasse Pain-Skills.
Kommen wir jetzt mal an den Start.
Warte mal, ich mach mal kurz Kirby aus, Kirby geht mir auf den Sack.
Ähm, 24-7 haben wir wieder unseren Chill-Step-Stream.
Ah, das ist immer so entspannend.
Gucken, dass es nicht zu laut ist.
Ah, das ist gut.
Da ist man doch gleich schon viel entspannter.
Und, deswegen habe ich mir gedacht, wir splitten das auf.
Wir machen da eine Server-Komponente und eine Client-Komponente.
Die Client-Komponente kann er sich in seinen Installer einbauen.
Da hat er wahrscheinlich einen Custom-Installer oder irgendwie so ein Windows.
Das heißt, bei Windows bootest du ja nicht über...
Also, du machst kein PXE-Boot, du machst was PE-Boot, irgendwie so.
Windows kenne ich mich eigentlich gar nicht großartig mit aus.
Deswegen habe ich gedacht...
Ähm, vor allem...
Was?
Vor allem so automatisch in der KVM-Instanz?
Was?
Verstehe ich nicht.
Ähm, zumindest habe ich mir gedacht, wir machen da eine Server-Komponente oder Client-Komponente drauf.
Die Client-Komponente kann er in seinen Installer einbauen.
Und, die macht nichts anderes, wie...
Ähm, autodiscovern im gleichen Netzwerk.
Wo quasi die Server-Komponente autodiscovern.
Und sich von dort einen gültigen Key abholen.
Windows aktivieren.
Und wenn es geklappt hat mit dem Windows aktivieren.
Dann den Key, quasi im Server sagen, Key löschen.
Und das Schöne daran ist, wenn wir quasi schon eine Server-Komponente bauen, die autodiscovered werden kann.
Können wir natürlich da auch noch ein bisschen einen Web-Service dranhängen.
Wo er im Web-Interface beispielsweise gucken kann...
Ähm...
Welche Keys noch verfügbar sind.
Da kann er neue Keys hinzufügen.
Weil mit der Textdatei auf dem NAS bin ich mir gar nicht mal so sicher, ob das so eine sinnvolle Idee ist.
Ähm, das kann man immer noch einbauen.
Ich denke die bessere Variante ist wahrscheinlich so ein Import-Knopf.
Wo man einmal die Keys importieren kann.
Und dann über das Web-Interface managt.
Müssen wir mal gucken.
Aber, das mit dem NAS funktioniert natürlich auch.
Das ist kein Ding.
Aber, wir werden das Ganze so aufsplitten ungefähr in...
Wir basteln quasi einmal eine Server-Komponente.
Das muss dann auch irgendwie nach vorne gehen.
Und dann in einer Kiste im gleichen Netz laufen.
Sonst finden das die Clients nicht.
Das sieht dann folgendermaßen aus.
Ich weiß nicht...
Oh, da ist er.
Ähm...
Jetzt wo du gerade da bist...
Ähm...
Muss das unbedingt eine Textdatei auf dem NAS sein?
Also es ist nicht so, dass es nicht funktioniert.
Aber über ein Web-Interface wäre das doch viel schöner.
Weil über ein Web-Interface könnte man zum Beispiel dann so Dinge auch noch auswerten wie...
Keine Ahnung.
Wann welche Keys verwendet wurden und sowas.
Das kann man automatisch mitloggen lassen.
Ähm...
Beziehungsweise du siehst auch was du für einen Key-Verbrauch in der Woche hast.
Oder...
Ähm...
Welcher Rechner welchen Key eingelöst hat.
Und solche Dinger.
Ich brauche Paint gar nicht.
Also ich glaube...
Okay, wenn ihr das nicht unbedingt auf dem NAS braucht, dann ist das glaube ich so viel schöner.
Ich mache einfach mal...
Und du kannst dir das ja danach angucken.
Ähm...
Ob das letztendlich so passt.
Die einzige Sache, die du noch machen musst ist...
Ähm...
Also wenn ich du sage...
Wenn ich meine ich Hardware hat.
Ist...
Ähm...
Du musst das mit der Aktivierung dann mal ausprobieren.
Weil ich kann alles hier lokal bei mir testen.
Ob das funktioniert.
Auch das Discoveren im Netz und sowas.
Was ich halt bei mir lokal nicht gescheit testen kann ist ob die eigentliche Aktivierung klappt.
So.
Okay.
Fangen wir mal an.
Also ich habe mir das...
Wie gesagt.
Ich habe mir das folgendermaßen gedacht.
Sie brauchen einmal eine Server-Seite.
Die machen wir wie gehabt.
Da haben wir jetzt ja schon ein bisschen Erfahrung mit gesammelt.
Machen wir mit ASP.NET Core.
Und wir brauchen eine Client-Seite.
Mit der fangen wir auf.
Eine Client-Seite.
Mit der fangen wir auch an.
Ähm...
Wir machen eine Client-Seite die den Server quasi...
Discovered im...
Ich muss das...
Ich muss das nochmal im...
Ich muss das nochmal aufmalen.
Wie das Ganze dann funktioniert.
Nur das was...
Das was man...
Das was man irgendwie checkt.
Ich weiß nicht wie ich das...
Versteht man das wie ich das meine?
Also zum Beispiel.
Man hat...
Man hat einen Windows Installer.
Da ist quasi der...
Activator Client drin.
Oder wie auch immer man das Ding nennt.
Und...
Den starten sie dann nach der Installation.
Klicken sie drauf.
Oder lassen sie automatisch von der Installation starten.
Keine Ahnung.
Ist ja im letzt...
Im Endeffekt auch egal wer den startet.
Dann guckt der.
Im Netz.
Wo er gerade ist.
Wo denn der Server steht.
Machen Broadcast.
Ins Netz.
Wo der Server steht.
Der die Keys kennt.
Wenn er den gefunden hat.
Dann ruft er sich von dort nen Key ab.
Aktiviert Windows.
Und sagt dem Server.
Er kann den Key löschen.
Versteht man wie ich...
Was ich...
Was ich vorhabe ungefähr.
Oder muss ich das aufmalen?
Das hat nämlich den Vorteil.
Man kann alle Settings auch lokal am Server machen.
Also zentral.
Und muss...
Muss...
Keine...
Configs verteilen.
Oder so.
Heute mal wieder ne Runde Battlefield.
Ich...
Hab...
Letzten paar Tage gar kein Battlefield mehr gespielt.
Und ich hab...
Mir hats...
Schon wieder fast gereicht.
Leute.
Ihr könnt euch...
Gar nicht vorstellen.
Wie sehr ich mich...
Darauf freue.
Also fiktiv.
Ja.
Weil man weiß ja nicht.
Ob es wirklich so ist.
Darauf freue.
Wenn...
Wirklich...
Damit...
Unternehmen...
Nicht nur...
Aber ich weiß nicht.
Ich weiß nicht.
Ok.
Wollen wir sie mal aufs neu...
Ich will sie mal aufs neu.
Wir haben doch keine infrastructure.
Wie soll ich das machen?
Wir haben die...
Die...
Wir haben die...
Die...
Die...
Die...
Die...
Die...
Die...
Die...
Die...
Que...
Die...
Die...
Die...
Die...
Die...
Die...
Die...
wir wollen es ja schließlich nicht Web Application
2 nennen, das ist, äh, klingt irgendwie
ein bisschen hängen geblieben, ne
äh
also wenn, wenn wir das, äh
ob der am gleichen Route hängt
oder so, ist egal, der, der muss
im gleichen, also der muss, ähm
im gleichen Netz hängen
der muss im gleichen Netz stehen
wie, ähm
die
Systeme, die aufgebaut werden
also IP-technisch muss der im gleichen Netz
stehen
das ist wichtig, sonst funktioniert
das nicht, wenn, wenn's da
wenn's da nix gibt, dann baue ich das trotzdem
weil das die schönere Lösung zum Bauen ist
und dann verwendest
du den Client halt meinetwegen einfach nur
zum Aktivieren und lässt den Server bleiben
ähm
aber wie gesagt, du warst ja am Anfang nicht da, warum ich
überhaupt die Lösung mit dem Server vorgeschlagen hab
Server-Client-Geschichte ist
erstens, ähm
weil's natürlich die saubere, schönere
Lösung ist, und zweitens natürlich auch, dass
wir hier was zum Basteln haben
weil das eigentliche Aktivierungsskript sind wahrscheinlich so
naja, irgendwie so 15 Zeilen PowerShell oder sowas
deswegen, ich mach das jetzt einfach mal und dann kannst du dir das ja mal angucken
aber der Server muss im gleichen Netz stehen, das auf jeden Fall, sonst
funktioniert's nicht, weil wir machen UDP-Autodiscovery
äh, und das
geht nur ins gleiche Netz
könnten vielleicht Multicast machen, falls der, falls das über, ne
geht Mult, geht Multicast so ohne weiteres über den Router drüber, ja muss ja
eigentlich, oder?
kein, ne oder? Keine Ahnung
ich hab mit Multicast so wenig gemacht bisher
wie, lol, haha, genau, Keylogger
jetzt hab ich, jetzt wurde ich enttarnt, ja, ich will eigentlich nur auf die ganzen
Hardware-Rad-PCs den Max-Keylogger draufbringen
ok, wie nennen wir das Ding jetzt, ähm
Proggers, wir nennen's einfach Proggers
mir fällt's, fällt grad nichts anderes ein
wie, wir machen das so
wir nennen die Server-Seite, nennen wir Proggers
und die Client-Seite nennen wir Poggers, okay?
und die Client-Seite nennen wir Poggers, okay?
das wird, das wird überhaupt nicht mehr durchblickt, glaub ich
so, empty-projekt, keine HTTPS, zack
so, wir fangen mal mit dem Client an
weil ich bin mir nur nicht ganz sicher, wie man das beispielsweise machen kann
dass man aus, ne, ähm
quasi aus einer eigenen Anwendung, dass man dort einen zweiten Prozess startet
und Admin-Rechte anfordert
muss man ja, für Windows-Aktivierung
also sprich, ich würd gern quasi dann dort drinnen dieses Aktivierungsprogramm starten
und das muss dann halt ein Pop-Up kommen
für die, die da sind, die da sind, die da sind, die da sind, die da sind, die da sind
und das muss dann halt ein Pop-Up kommen für
oh, das ist ne nice Idee
und das ist ne nice Idee
Proggers für Client, oh, das gefällt mir, Moonbeer, äh, Moonbeer, Desmond
das find ich richtig gut
so, ähm
ändern wir mal, äh
ähm, äh, äh, äh
ne, was mach ich denn da?
Neue Solution wollen wir adden
nächste Solution, wo ist er?
da, ähm
wo steht's?
wo steht's?
Console-App, ok, da ist die Console-App
heißt Proggers
ok, also, von der Idee her
wir müssen jetzt erstmal so grob den Ablauf hier
basteln und danach, als erstes
bauen wir auf jeden Fall die Autodiscovery
weil da hab ich nicht so wirklich Ahnung, wie man's
macht, das Webinterface ist dann
Webinterface halt
kann man nicht allzu viel
verkehrt machen, aber, ähm, mit der
Autodiscovery muss ich mal gucken
wir brauchen als erstes mal ein schön, schönes Banner
äh, gibt's sowas wie
Ficklet Online, ich weiß, das ist
bevor er jetzt sagt, alter, dann
ich weiß, der Name ist dumm, Ficklet
aber, Ficklet
hat eigentlich gar nichts damit zu tun, wie es sich anhört
das ist ein
Tool unter Linux, mit dem man Bannerschriften
machen kann
und, mal gucken, ob's das online gibt
sonst muss ich in die VM
wir brauchen für ne Konsolenanwendung
ja, sowas da, wir brauchen
für ne Konsolenanwendung brauchen wir erstmal ein tolles Banner
was angezeichnet wird, das ist das
A und O bei jeder Konsolenanwendung
eine Konsolenanwendung
ohne schönes Banner
ist unbrauchbar
ja, der, das Auge ist
mit, auch als Admin
was schreiben wir da rein?
Activator
oder irgendwie sowas
das sieht alles ganz schön kacke aus
öh, oh
oh, das sieht auch ganz gut aus
oh ja, das ist gut
Activator
ja, das finde ich viel
das finde ich viel besser, dann machen wir das A noch weg
ah ja, so ist das nice
äh, Banner
oh ja, jetzt müssen wir
den Scheiß, äh, müssen wir das mal richtig einrücken
hier alles
Moment, wo geht's los? Banner
da würd ich sagen, hä?
ach ne, Moment, ich bin jetzt falsch
das gehört ja dahin
so, der Activator, gucken wie das jetzt aussieht
das wichtigste
zwar das unsinnigste, aber automatisch
gleichzeitig mit das wichtigste
äh, fuck, falsches Projekt
ich will nicht Proggers starten, ich will Coggers starten
Activator
ah, wunderbar, geht schon gut los
jetzt ist, jetzt kann's gar nix
mal schief gehen, eigentlich, ne
ok, also von der Idee her brauchen wir auf jeden Fall
brauchen wir
wir machen das alles in main, der Client, der wird wahrscheinlich
irgendwie so 50 Zeilen lang oder so, das Hältchen
grenzen, ähm, also wir brauchen auf jeden Fall
nen UDP Client
mit dem wir dann unser Autodiscovery
Zeug machen können
und dann brauchen wir auf jeden Fall noch nen Web Client
wir nennen das Ding auch
P-Client
und dann brauchen wir auf jeden Fall noch nen Web Client
mit dem wir von unserem Server später
Key anfordern, Key löschen und sowas
können, tja, ich muss jetzt nur mal gucken
dass ich hier im Chat nix übersehe
ja, Programm fertig, Banner ist da
kein Problem, easy
ähm
so, machen wir da nochmal ne neue Zeilen
drunter, so, und dann sagen wir irgendwie sowas
dass man auch ein bisschen sieht was das Ding macht
Search for Key Server
ich mein
das ist ja nur Fake Ausgabe, macht ja noch gar nix
so, ähm
und jetzt müssen wir
irgendwie, ich, da muss ich erstmal nen Server
Part basteln zum Autodiscovern, dass das
funktioniert
also von der Idee her sagen wir dann irgendwie, also so
hier müssen wir jetzt, äh, Autodiscover
Server, den es ja noch gar nicht
gibt
hier müssen wir, so Server Found oder irgendwie sowas
dann
müssen wir
Key, dann müssen wir den Key
abrufen, danach müssen wir so ungefähr die
so ungefähr den Flow haben
von dem was, was dann irgendwie, was weiß ich
äh, Downloading Key
oder sowas
Key from, und da kommt dann hinten
die IP vom Server oder irgendwie die
URL vom Server an, woraus, woraus ichs herholt
naja, und dann wird aktiviert irgendwie sowas
also wir basteln jetzt erstmal den
Autodiscovery Geschichte
warum kann man den nicht so
abrufen, weil ich
kein Partner bin
speichere das doch als Textdatei
und lese das ganze dann als Ressource aus
kannst die Datei ja als Ressource
äh, äh, äh
was, das Banner
ne, das Banner ist jetzt nix was als Ressource
speichern muss ich mal so
so viel ist es jetzt auch nicht
Welche Cherry MX Switches benutzt die
Dastatur? Speed?
MX Red Speed
oder irgendwie so, ich hab ne
äh
ja das Ding
hab ich
das sind, lass mal gucken was da
Switches, ja
Cherry MX Speed
ist das
ich hab mich jetzt mittlerweile ganz gut dran gewöhnt
auch wenn ich die Tasten immer noch einen dicken zu klein finde
ich hab das Gefühl die sind so 1-2 Millimeter
unterschiedlich zu anderen Tastaturen
kommt mir irgendwie so vor
naja, zumindest, äh sag mal
Pixels bei euch in der Vorschau
auch so, oder liegt das, ach ne
ich hab meinen Vorschau auf 360p stehen
da muss man sich jetzt nicht wundern
lull
eieiei
so, ähm
ok, weiter gehts, jetzt müssen wir erstmal den
Autodiscover Teil basteln
ähm, wie gesagt, unsere Server Seite
ist wieder ASP.NET Core, das heißt
wir können, hab ich nämlich letztens in nem Tutorial
zugelesen
wir können hier nämlich nen Service
hosten lassen
also man braucht gar keinen Windows Server
äh keinen Windows Service oder sowas zu machen
sondern man kann den Background Service mittlerweile
direkt in ASP.NET Core
hosten lassen
aber vorher machen wir uns
nen eigenen Ordner
Ordner
Services
so, add
things
äh, äh
Discover Service
Service
stellen wir das mal hier oben
was ist das für Autotune Musik
so, und dann brauchen wir sowas wie
I Hosted Service
...
bla bla, Implement Interface
Visual Studio
deswegen muss ich sagen, Visual Studio ist für mich
beste Idee
das fließt so, wenn man das verwendet
irgendwie
so, ähm
so, jetzt müssen wir irgendwie
das ganze hier starten, dass der
also von der Idee her wird das jetzt so laufen
jetzt brauch ich doch nochmal Paint
von der Idee her
wird das so laufen, also jetzt brauchen wir mal ne Kiste
was ist das, Server Kiste
wir machen das anders
warum mach ich das überhaupt mit Paint, wir können doch irgendwie
Draw IO oder so verwenden, ist doch viel schöner
ähm
kann ich nicht einfach
sagen, ich will es nicht speichern
decide later
Server
ja, sehr schön
Server, PC
ha, krass
was da alles drin ist
Client
sieht eins hässlicher aus als das andere, Client
es ruckelt
viel zu fett das Ding
also von der Idee her
wie kann man hier Pfeile jetzt machen
Pfeile
ja, Pfeile, nice
also
also von der Idee her
äh, das ist scheiße zu bedienen
aber das dicker machen
aha, oh, geh weg
also von der Idee her
wird das jetzt folgendermaßen funktionieren
ähm, kann man da was draufschreiben
UDP
Prodcast
also
der Client
macht ein UDP Prodcast
zu Port 888
oder Port, keine Ahnung
denken wir uns, gibt es einen Port
der gut zu Hardware Rad passt
äh, keine Ahnung
Port 841
ne, das ist zu viel
1, 2, 3, 7, 6
keine Ahnung, es ist vollkommen egal welcher Port
so, der Client, der wird jetzt
ich muss mir das selbst mal aufmalen, dass ich es ungefähr nenne
also der Client wird jetzt
UDP
Prodcast machen auf Port
ähm
1, 2, 3, 7
ja, aber das könnte schon belegt sein
420
ja, also, der Client macht jetzt
einen UDP Prodcast auf Port
1, 2, 3, 7, 6
das ist so schepp, das wird sonst keiner verwenden
dann
schickt ihm der Server
eine Antwort
also der Server lauscht
auf ähm
also da
der bindet sich an Port 1, 2, 3, 7, 6
und dann
schickt er ihm eine Antwort zurück
an ihn
an ihn direkt
schickt er eine Antwort zurück und da steht dann drinnen
ähm
sowas wie ähm
da schicken wir ihm den JSON zurück
wo dann drinnen steht
IP und
Port vom Server
Slash
irgendwie
IP Keys
oder sowas
so, und schon ist das ganze Auto discovered
die Frage ist
was soll das werden? ähm
warte mal, ich zeig's dir nochmal
also der gute Hardware Art, der möchte ein
Skript haben, was ihm
sein Windows Zeug aktiviert
aus einer Textdatei vom NAS
ja, wir waren schon öfters auf deinem Webshop
im Stream
wir haben, die Leute sagen auch immer so nach dem Motto
was hatten wir letztens?
irgendwie hat einer letztens
sowas geschrieben wie
was sagst du zur XY
sonstwas Grafikkarte bei Hardware Art
da haben wir gleich nachgeguckt
was haben wir uns jetzt schon angeguckt?
nicht wirklich viel
außer die Homepage
naja zumindest
TeraFox, also nachdem das hier ja
ein bisschen zu wenig sophisticated ist
ein PowerShell Skript
was so Dinger macht, bauen wir da jetzt
eine zweiteilige Geschichte
wo man auch die Keys drinnen verwalten kann
dass man das nicht mehr über Textdatei gefuddelt
auf dem NAS machen muss
und dementsprechend können wir auch
eine schöne Auswertung machen
im Webinterface so nach dem Motto
wie viel Keys werden heute verbraucht
vielleicht kann man sich daraus auch ableiten
wann muss man neue Keys bestellen
und vor allem
wann wurden die Dinger eingelöst
das ist glaube ich ganz interessant
da kann man immer nachgucken
im Zweifelsfall kann man sogar
ich weiß nicht, setzt du irgendwie
den Username irgendwie
auf Kundenname oder so
weil dann könnte man uns sogar noch merken
bei den Keys
wie der Username hieß
von dessen Account aus
der Rechner aktiviert wurde
dann hast du sogar eine direkte Zuordnung
wer welche Windows Keys gekriegt hat
so
wir brauchen jetzt erstmal einen UDP Service
ja so genau
und TeraFox, das Schöne daran wird
man muss ja irgendwie die Sache dann verbinden
sprich der Client der
die Konsolenanwendung die auf den Rechnern
dann mit dem Key Windows aktiviert
und auf dem Server
und nachdem man ja die Config nicht quasi
überall hin mitverteilen will
versuche ich das das Ding sich
autodiscovern kann im gleichen Netzwerk
also der macht dann irgendwie einen UDP Broadcast
der sauber antwortet
ansonsten, was auch immer geht
ist natürlich, du kannst die IP direkt eintragen
das funktioniert natürlich auch
so, also das heißt wir brauchen jetzt hier
auch auf jeden Fall einen UDP Client
man muss sich nicht wundern
einen UDP Service gibt es nicht
da müsst ihr Microsoft fragen
warum es das nicht gibt
Microsoft hat sich gedacht
ein UDP Client reicht auch
mit einem UDP Client können wir auch Server machen
bin ich verschrieben?
bin ich verschrieben gerade?
bin ich verschrieben?
die Frage ist wie sicher das Ganze ist
gar nicht
muss es aber auch nicht
weil es nur lokal bei ihm im Netzwerk ist
das hat keinerlei User
wir könnten da noch irgendwie eine Basic Auth
oder sowas davor machen
aber ich habe jetzt keine User Authentifizierung
oder sonst was geplant
was ist der Vorteil von UDP in dem Fall
jetzt gar nichts wirklich
der Vorteil ist ein bisschen
dass du Discovery Broadcast
mit TCP nicht machen kannst
logischerweise
geht das mit TCP nicht
so also
wir starten jetzt einen UDP Client
und dann müssen wir irgendwie sagen
ich muss mal was nachgucken Leute
ich habe da nämlich UDP Client schon ein paar mal
UDP Client
dass ich mal ein Beispiel finde
wie man den Kreml jetzt richtig verwendet
UDP Client
warum geht das nicht
weil du bei einem
TCP immer eine Sequence
also immer eine
du hast ja bei TCP
hast du ja immer eine Session
ja doch eine Session hast du bei TCP
immer
wenn du quasi
du musst ja bei TCP
sagen ich möchte eine
Verbindung aufbauen und das geht natürlich
immer nur quasi erstmal mit einem Ziel
ganz billig gesagt
und wenn du jetzt einen Broadcast raus schickst
quasi wenn du das Ziel nicht kennst
wenn du einfach sagst an alle dann geht das mit TCP nicht
irgendwie geht es bestimmt auch
du könntest das so machen wie blowitup sagt
du könntest einfach jede
du könntest quasi Nmap machen so
du könntest jede IP scannen
das ist aber nicht Sinn und Zweck der Sache
machst einfach du machst den UDP Broadcast
in dem Tempo wie wir heute
weitermachen wird das aber nix
so wo habe ich denn hier was
UDP Client
ein bisschen Spicken aus dem Kopf weiß ich jetzt auch nicht
alles auswendig
also als erstes müssen wir an den Task starten
das ist schon mal klar
return Task
run
bam
Task run
und da drin sagen wir jetzt wir packen den ganzen Kram
erstmal in den Task rein
Task run
UDP Client
dann sagen wir ihm
wie geht das aha
ich copy paste mir das jetzt einfach mal
von dem anderen Zeug was ich hier noch habe
ne bei uns heißt es jetzt
UDP Client
Endpoint
Port 8888
wollen wir nicht wir haben gesagt wir nehmen
Port was Port
1 2 3
7 6
das ist so ein schepper Port den werde ich mir nie im Leben merken können
kannst du
einen Command Project machen
äh ja ich habe für die anderen Projekte habe ich schon
alle Commands
allerdings
für das hier nicht haben wir irgendeinen Mod am Start
ist doch sonst immer ein Mod am Start
sind die ganzen Mods
sind die ganze Mods
nicht das es jetzt noch Aufstände gibt oder so weil die Mods nicht da sind
na mal gucken
vielleicht kommt ja gleich noch einer
weil die könnten das machen
keine Mods da
so weiter gehts
da ist der Baro da ist er doch
jetzt hat einer gefragt ob wir nicht für das
für das hier noch einen Command machen können
der Sibaro kann das gut
der Sibaro können wir das wieder so machen
ich laber jetzt nochmal kurz 30 Sekunden
was wir hier heute machen
und dann kannst du einen Clip von machen
als Command irgendwie einfügen
also wir basteln
ein Tool für Hardware Rad das er seine Windows Systeme
aktivieren kann allerdings nicht einfach
ein PowerShell Script wie er sich das vorgestellt hat
sondern ein bisschen anspruchsvoller
wir machen einen Server Teil und einen Client Teil
den Client Teil kann er bei sich auf den
Kundensystem verteilen
zum aktivieren natürlich dann wieder löschen
der lässt man natürlich da drauf
und der Server Teil da kommen die ganzen Windows Lizenzen rein
und der Client holt sich das dann vom Server ab
und löscht es dann auch da wieder
und im Webinterface vom Server kann man dann so
Auswertungen machen wie
was weiß ich wer hat welchen Key aktiviert
oder wie viele Keys in der Woche habe ich
verwendet oder sowas
in der Richtung
einfach weil es zu
langweilig wäre
einen PowerShell Script zu machen
also
so ok
ich guck mal wir machen das mal
wir sind jetzt ganz brutal
Endlosschleife ihr wisst ich bin Fan von Endlosschleifen
habt ihr das letzte mal gesehen
ich tippe das jetzt mal ab von dem anderen
was ich hier schon mal gemacht habe
Endpoint
und dann versuche ich mir nochmal irgendwie zusammen zu reimen
was ich da hier gemacht habe wie das funktioniert hat
ne das heißt nicht Server
UDP Client
heißt es natürlich
und dann versuche ich euch zu erklären
was ich hier gemacht habe
also ich kann jetzt schreiben
Encoding
ach ist nicht importiert deswegen geht das nicht
ASCII reicht uns
wir brauchen keine
speziellen
TIFF8 Dinger
ok
also von der Idee her
macht es jetzt folgendes
wir registrieren das jetzt als neuen Hintergrund Service
bei ASP.NET Core
muss das ein Server
sein mit Windows oder Linux oder reicht das nicht?
was ist denn das für ein NAS
was ist denn das für ein NAS
ist das irgendwie ein Synology oder sowas
weil wenn das ein NAS ist wo man
Docker drauf laufen lassen kann
ja ja das geht
also wenn das ein
Synology oder sowas ist
da läuft dann ein Linux drunter
ja ja das geht das reicht
da muss ich bloß noch
eine .NET Core Anwendung draus machen
habe ich noch nie gemacht für
Docker auf dem NAS laufen lassen
müssen wir mal gucken
aber das hat natürlich seinen Vorteil
man lernt auch wieder was bei
das kann kein Docker
oh ne oder
ja das kriegen wir schon irgendwie zum laufen
irgendwie geht das
wenn nicht mache ich dir halt ein PowerShell Skript
das können wir immer noch machen
aber so ist das viel geiler
haben wir auch was zu tun
also von der Idee her
was das hier jetzt macht
wir registrieren das jetzt als Hintergrund
ich muss jetzt mal ein bisschen hin machen
ähm
wir registrieren uns jetzt als Hintergrund Service
für unser ASP.NET Core Programm
Startup
ähm
Services
Hosted Service
unseren ähm
Discover Service
und mehr müssen wir nicht machen
ich zeige euch das mal wenn wir das ganze jetzt starten
ich mache jetzt hier mal sowas was weiß ich
hallo
wenn wir das ganze jetzt starten
ach Moment man sollte das richtige Projekt
zum starten auswählen
IIS
Woodface
ja
oh
äh
Moment
oh ich sollte vielleicht mal den Port ändern
das läuft jetzt auf dem gleichen Port wie das Meme Tool
das geht natürlich nicht
das geht nicht
Moment
da muss das Meme Tool mal kurz auf einen anderen Port machen
das ist ja nicht
ähm
nicht wirklich
ja
jetzt mal Refreshen auf der anderen Seite
geht noch
alles gut
ähm
gut und den hier können wir laufen lassen
ja guck hier bam
hallo ja das triffts eher
so ähm
also da startet uns jetzt unseren Hintergrund Service
hier in einem eigenen Thread wieder
oder ich wurde jetzt letztes mal belehrt
das ist kein eigener Thread das ist ein eigener Task
was nicht immer genau das gleiche ist
und da läuft jetzt einfach eine Endlosschleife
die darauf wartet
dass irgendwelche Clients
äh UDP Broadcast
Messages schicken
wird das Projekt auf GitHub veröffentlicht kann ich machen
kann ich machen
was würdest du sagen muss man wissen um einen Job für Csharp.net
zu bekommen
äh ich würde sagen
es kommt auf den Job an
ich weiß das ist jetzt die beschissenste Antwort die man geben kann
ähm
aber ich würde fast sagen das wichtigste ist gar nicht mal so sehr
dass man der Ultra Pro ist
jetzt äh
explizit in Csharp sondern einfach dass man programmieren kann
ja wenn man was schon in einer anderen Sprache
gemacht hat
und jetzt in einen Laden kommt der quasi hauptsächlich Csharp
und .NET macht
das kriegt man auch
relativ gut hin
ich mein es ist natürlich ganz cool wenn man die Standard Library kennt
und ich mein die .NET Standard Library
ist schon ziemlich groß
und wir mittlerweile
ist fast alles drin
für ASP.NET Backend
schwierig zu sagen also ich hab
ASP.NET Backend selbst noch nie
professionell gemacht
Command ist erstellt perfekt
nice
ist das schon wieder abgekackt
warum ist das Meme Tool
abgeschissen was soll das
hier Sibaro nice gemacht
kackt das vielleicht ab wenn ich das hier starte
was ist das für ein Scheiß
will mich das verarschen
dann starte ich es halt ohne Debugger
was
warum geht das zu
warum geht das zu
wenn ich das andere schließe
was macht Visual Studio da für komische Dinger im Hintergrund
ok ich mach es einfach mal aus
und starte es hier drüber
äh
war das falsche
äh
ok wo ist das Problem
Visual Studio was machst du denn für komische Dinger
was ist das denn hier wieder
ich starte es ja schon extra ohne Debugger
naja
ja ist gut
so und warum
warum genau
beendet sich das jetzt
wenn ich das hier starte
und beende
macht es nicht mehr ok
ich hab keine Ahnung was das eben war
aber jetzt funktioniert es
perfekt
so also ähm
wir werden das jetzt folgendermaßen
machen wenn der wenn das
Ding ein UDP Broadcast
ein Broadcast
empfängt mit der
Response Message
Discover
muss uns irgendwas ausdenken was wir reinschreiben
dann antworten wir
damit
kopiere ich mich aus dem anderen Projekt raus
dann antworten wir dem Typ der angefragt hat
also von der Idee her ist es jetzt folgendermaßen
hier im Hintergrund läuft jetzt halt der
der UDP Server und wartet darauf
dass er eine Broadcast Message
vom Client kriegt
wenn er eine Broadcast Message vom Client kriegt
in der drinnen steht Discover
dann schickt er an den
Client zurück
eine Message wo er das Web Interface
findet also nicht das Web Interface
wo er den Web Service findet
was natürlich eine sehr nice Geschichte ist
dann kann quasi der Client
autodiscovern wo er weitere Informationen
findet das ist sehr sehr
nice
ich hab irgendwas noch im Augenwinkel gesehen
dass irgendeiner gefragt hat warum ich kein
Console Readline mache oder sowas
ich sehs jetzt nicht wirklich
ach Florian echt das hab ich auch gemacht
mit meinem DS Lite hab ich übelst
auf Twitter rum geflammt bis sie das gemacht haben
was ist das für ein Web Server Framework
das ist von C Sharp
ne das ist ASP.NET Core das ist dabei
also ich find die Nachricht nicht mehr
irgendeiner hat gefragt warum ich nicht noch irgendwie
ne Console Readline machen muss ich mein wozu
muss ich nicht
ich hab hier ne Endlosschleife drin
die schleift sich einfach rein ab
und irgendwann wird sie mit dem Rest
beendet
also wir brauchen jetzt ne Message die wir zurückschicken
an den
Client
da machen wir ne schöne
JSON Message
da machen wir ne schöne
JSON Message
JSON Converter
ne äh
Convert
Convert war es
Serialize Object
und das ist ganz cool gemacht da kann man
einen anonymen Typ
reinstecken und sagen wie man das ganze aufbauen will
und wir
sagen einfach also das ist die Message
die dann beim Client letztendlich ankommt
und wir sagen dem einfach nur
wo man
und ich weiß das das so nicht funktioniert
ich sag so bevor jetzt irgendeiner sagt Max da steht aber Localhost
drinne
das ist die Message die wir an den Client schicken
wo anhand dessen
er dann weiß wo das Server steht
und unter welchem Port dann das
Web Interface und die API
verfügbar ist
was war das für ein Port
5000 ne
es ist Standard ASP.NET Core
Port
5000
API
Keys
wir könnten dem Client auch initial noch ein bisschen
mehr Information übermitteln aber das
passt schon
so und daraus machen wir jetzt
ne Byte Array weil das Ding unbedingt
Bytes haben möchte was
irgendwie kacke ist weil es einfacher wäre
wenn man direkt ne String übergeben kann
aber kann man nicht
falls ich
irgendwas übersehe Leute müsst ihr noch AdWords Blur
dabeischreiben so wie es im Chat steht
weil ich kann mich nicht
hier aufs Programmieren konzentrieren
plus die ganze Zeit auf den Chat
das heißt wenn ich es im Augenwinkel rot sehe dann sehe ich das besser
also jetzt
sagen wir hier Encoding
get Bytes
ist die Musik eigentlich laut genug
also jetzt ist die Musik gerade aus
aber wenn sie denn läuft
ach guck mal hier Bytes Bytes Bytes
Bytes Endpoint sehr schön
gut
das müsste jetzt erstmal reichen
auf Server Seite
können wir gucken ob das Discovered auf Client Seite
funktioniert
ist die Musik abgekackt gerade
ok starten wir mal
starten wir mal die ASP.NET Core Geschichte
so und jetzt gehen wir mal in den Client
rein
und gucken ob wir den Server Discovered
kriegen
wieder ein bisschen spicken
Musik passt ok nice
wieder abgucken
Search for Key Server
das heißt da sagen wir jetzt
aber das machen wir mal
hier oben
Endpoint
IP Endpoint
das ist immer ein bisschen redundantes Getippe
bei dem ollen Zeug
Broadcast
so der Client muss den UDP Broadcast schicken
den der Server dann quasi
erhält und ihm die Antwort
schickt woran er das Webinterface findet
und zwar auf Port
wie hieß der Kram jetzt noch
ich kann mir diesen Port nicht merken den wir uns ausgedacht haben
Port
12376
das Port ist so schepp den kann man sich echt nicht merken
ähm
so gut
Search for Key Server
Response
Ups Client schreiben
Receive
ne nicht Receive Send
ja Send
vorher muss ich noch sagen aha
gut das ich hier schon mal was hab
wo ich noch ein bisschen abgucken kann
von früher
Broadcast Enabled
muss man nämlich noch setzen
weil sonst geht es nicht
so jetzt kann ich sagen Send
und jetzt muss ich wieder eine Message
schreiben mit
ich muss den ganzen Krempel wieder machen
Message gleich
Discover
Bytes das ist ja immer der gleiche Kram
Encoding
kann man noch ASCII Encoding direkt nehmen
Encoding
Get Bytes
das kann man bestimmt irgendwie kürzen
da könnten wir irgendwie eine Extension Method bauen oder?
ich glaub das ist eine ganz gute Idee
wir könnten eine Extension Method bauen die ähm
quasi String zu Byte Array ASCII macht
anstatt das man jedes mal diesen ganzen
Schwubbel da
machen muss
ich glaub das wäre ganz nice
Message
Send Byte
Byte Slang
und da muss jetzt der Endpoint
rein den wir da oben erstellt haben
das ist richtig so und wenn das jetzt
funktioniert sollten wir eigentlich als
Response
ich will erst mal gucken ob es prinzipiell funktioniert
Test
Test ja ok Server
Found ok prinzipiell funktioniert
das ganze das heißt wir haben jetzt an den Server was geschickt
und jetzt müssen wir gucken ob wir eine
ordentliche Antwort kriegen
ähm das heißt dazu sagen wir jetzt
UDP Client
Client schreiben
UDP Client Receive
vom Endpoint
oder?
mach ich das richtig?
glaub schon
das ist falsch was ich hier gemacht habe siehste
ich muss nämlich sagen dass es an den
Port schicken soll
Broadcast
das ist für die Antwort dann
eieiei
so Endpoint
und da müssten wir jetzt eigentlich
als Response
vom Server was bekommen
bin ich
mal gespannt
ob wir da irgendwas kriegen äh zweimal
Response können wir das ganze nicht nennen
Response
so
so jetzt gucken wir mal ob das funktioniert
so
ja nice
wir kriegen geschwubbelt zurück
das war schon mal schön
so das heißt da
gucken wir jetzt
Response Message
gucken wir mal rein ob da auch jetzt
das richtige drinnen steht
und danach erzähl ich das
nochmal was das jetzt eigentlich macht für alle
die es nicht so ganz mitgekriegt
haben Response Message
so da müsste jetzt drinnen stehen hier als Antwort
die Adresse vom Server wo ich das
das eigentliche Interface finde
ja guck da
soll ich doch mal erklären was das jetzt macht
oder konnten wir mir so insoweit folgen
also wir haben
wir haben eine Server Komponente
da starten wir einen UDP Server auf Port
12376
und der lauscht auf UDP
Broadcast Pakete
wenn dann ein UDP hier sieht man das
wenn dann ein UDP Broadcast Paket empfängt
was unser Client schickt
und wenn dort drinnen
die Message Discover steht
dann schickt er ihm zurück
wo der Client den eigentlichen Service
findet
wozu brauchen wir das ganze
im Prinzip ganz logisch
der Client weiß nicht
wo es den Service zu finden gibt
also sprich wenn euer Client
nicht weiß also wir schreiben jetzt mal eine IP rein
da ist es glaube ich eindeutiger
wenn der Client nicht weiß
jetzt müssen wir neu starten
sonst steht es nicht drinnen
und wenn der Client nicht weiß
wo er denn den eigentlichen Service findet
kann er nichts machen
das heißt man müsste jeden Client von Hand konfigurieren
und sagen hier guck mal den Service
wo du deine weiteren Informationen findest
der ist da
wenn man das nicht will
und ein Server im gleichen Netz stehen hat
kann man das autodiscoveren lassen
also sprich man schickt vom Client aus
ein UDP Broadcast Paket los
mit der Message Discover
das ist jetzt was was ich mir ausgedacht habe
man schickt das Server darauf
mit der Information wo genau
jetzt also konkret mit der IP
dem Port und der kompletten URL
wo es weitere Informationen gibt
das heißt so kann man quasi
autodiscover
wo man hin muss mit dem Client
ohne dass man das
an jedem Rechner eingestellt kriegen muss
das ist ganz praktisch
und so wie es aussieht
klappt das auch
so ganz nice
ok
mit was machen wir jetzt weiter
machen wir jetzt mit der Serverseite
oder mit der Clientseite weiter
sagen wir machen mal mit der Serverseite weiter
wir machen mal ne
so ein minimales
Web Interface
das man so ungefähr sieht was da am Ende rein soll
also
dazu legen wir uns mal auf Serverseite
ein paar neue Ordner an
wir brauchen nämlich einmal Controllers
wir brauchen
was wie Data oder so
und Models
schauen wir mal
MVC ganz klassisch
so in unserem Models Ordner legen wir jetzt mal
eine Klasse an für den Windows Key
den Dinger nennen wir jetzt auch Windows
Windows Key
wie heißen die Dinger
wie heißen die Dinger eigentlich offiziell
die heißen ja nicht Windows Key
und die heißen ja nicht Windows Serien
weiß jemand zufällig wie das
richtig heißt
Volumen Lizenz
wie heißt das Windows
Cheat 1905
es wird in nächster Zeit
weiter Devstreams geben
allerdings muss ich auch mal
wieder ein paar Sachen spielen
ich bin schon gar nicht mehr großartig dazu gekommen
irgendwas zu spielen
Lizenzschlüssel Windows Lizenz
das ist aber ziemlich blöd
das ist auf License Key
ok nennen wir es Windows
License
Windows License ok
so und so eine Windows License
von der Idee her hat
das ganze ein Model in der Datenbank
wird eine SQLite Datenbank
braucht das Ding auf jeden Fall eine ID
da kommen wir nicht drum herum
dann braucht das Ding den eigentlichen CD Key
hier kommt der eigentliche CD Key
dann rein also hier was
123456-1234-
das Ding
also Cheat 1905
warum fragst du denn willst du mehr
Entwicklungs Streams oder würdest du dir wünschen
dass es mal wieder ein bisschen mehr Gaming Streams gibt
so dann
da sind wir jetzt mal richtig pro
da kommen wir noch so was rein
da stehen die ganzen Ruby Leute drauf
dann speichern wir uns noch
wann der Lizenzschlüssel quasi
eingegeben wurde
und dann speichern wir uns noch
wann das Ding
used at
fällt mir nichts besseres ein
Gaming was spielst du so
in letzter Zeit habe ich hauptsächlich Battlefield gespielt
davor ewig Overwatch
und da waren wir richtig gut
aber da haben wir es verkackt
und Blizzard auch
so
und dann speichern wir uns noch
also mir fallen jetzt
keine tollen Namen für die Dinger ein
also von der Idee her ist das so
hier kommt dann in der Datenbank
also Datenbank hört sich jetzt zu übertrieben an
das wird so ein billiges SQLite Ding
also nicht viel besser als ein Textfile
wobei kann man so nicht sagen
SQLite ist an sich gar nicht schlecht
Clive Twitch 2
ich glaube viele Leute gucken einfach zu
weil sie den Technik Kram interessant finden
und können mir oftmals gar nicht so richtig folgen
frage ich immer zwischendurch nach
ob man alles soweit checkt was ich treibe
und oftmals stelle ich dann dann fest
ich habe mir selbst nicht richtig Gedanken zugemacht
und es geht gar nicht
ja TiraFox da müssen wir uns mal Gedanken drüber machen
wenn es soweit ist
warum lässt du manchmal eine Zeile frei beim Code schreiben
das ist mein Bauchgefühl
wie Sachen zusammen gehören
also zum Beispiel
used at used for gehört irgendwie zusammen
created at ist alleine
und key und id ist auch relativ unique
und ähnlich
also von der Idee her
wenn wir das jetzt so machen
hier kommt der Windows Key rein
der CD Key
also hier irgendwie
wie sehen diese CD Keys eigentlich aus
wir brauchen da nachher noch ein C
oh Leute wir machen jetzt
cooperative
ja man könnte das auch im JSON speichern
wobei ich glaube mit SQLite ist einfacher
wir müssen das jetzt mal cooperative machen
und zwar wir brauchen später noch
einen richtig coolen
Racket
für Windows CD Keys
weil wir müssen ja gucken
es könnte ja sein dass sie sich vertippen
oder vercopy-pasten und dann wäre Mist drin
das wollen wir ja nicht
Windows 10 Key Example
wie sehen die Keys eigentlich mittlerweile aus
jetzt ist Instant Twitch-Bahn raus
ah hier guck mal
1,2,3,4,5
minus 1,2,3,4,5
also es sind
5 mal 5
sehe ich das richtig
5 mal 5
5
da kommt der CD Key rein
und hier kommt rein wann das ganze
Keyfile, ne ne brauche ich nicht
aber das ist
das einzige was Hardware als Selbsttest muss
wirklich ob das Aktivierung funktioniert
ähm
How do you like Vue.js
I am a big noob in
Frontend Development
I can not compare it to Angular or React
I started with Vue.js
only a few months ago
I am a big Vue.js noob
if you looking for someone that can programming
in Vue.js
I think it's better to go to Youtube
and watch tutorials
from someone who has
more experience in Vue.js
Musik eskaliert ernsthaft
ok ähm so hier schreiben wir rein
wann der Key angelegt wird
also von der Idee her machen wir das so
der Client sagt dann wenn er Windows aktivieren konnte
Hallo Server ich habe Windows aktiviert
bitte diesen Key entfernen
und dann zu diesem Zeitpunkt
schreiben wir hier rein
und dann wurde der Key geused
das heißt man kann man hat so ein Log
wer was aktiviert hat
so und used for können wir dafür verwenden
dass dort dann auch drinnen steht
der Benutzeraccount von dem das ausgeführt wurde
weil vielleicht
ich weiß ja nicht genau wie er es macht
aber vielleicht heißen ja die Benutzeraccounts
von je nachdem wie der Kunde heißt
und dann würde dann quasi auch hier noch
hier drinnen stehen
für wen welcher CD Key verwendet wurde
das ist eigentlich ganz ganz nützlich
wenn wir die Information eh schon haben
können wir sie auch verwenden
habe gerade der Problem mit dem Handy
auf dem äh wie gesagt
ich erwarte nicht das du dir das jetzt
komplett anguckst
kannst gucken wenn es dir gefällt
ansonsten kriegst du es auch so
du musst nicht gucken
was soll das Programm später machen
mach mal Ausrufezeichen
ähm
was für ein Befehl
haben wir
Ausrufezeichen HR Tool
jetzt spammen sie alle
ok ähm
eine Sache machen wir jetzt noch
wir sagen hier sowas wie
ist used
und dann nehmen wir ein neues C Sharp 7
Feature
wenn jetzt nämlich die
Zeit was mache ich denn hier
ich kann überhaupt nicht mehr richtig tippen
wenn nämlich die Zeit
noch default ist
also sprich wenn used add noch nicht
gesetzt ist
irgendwie so das ist nicht der schönste Check
aber mir fällt gerade kein besserer ein
wenn die Zeit schon noch nicht gesetzt ist
dann wurde der Key noch nicht verwendet
das ist ein bisschen einfacher
als immer mit einem DateTime zu hantieren
ok das ist unser Model
für die Datenbank
jetzt brauchen wir ein Package
und zwar wir brauchen
wir brauchen
äh nein
SQL
ne oh fuck wie hieß das
ne wir brauchen Entity Framework oder
oh fuck wie hieß der
wie hieß denn der Kram wieder
die Suche hier in Visual Studio ist so kacke
wir brauchen Entity Framework
wie heißt denn das Ding Entity Framework
SQLite brauchen wir
144 ja übelst krass ey
ok MVC können wir schon mal hinzufügen
das brauchen wir auf jeden Fall auch
wie heißt denn das ähm
mal gucken wie das in Nougat heißt
ich find's auch ah so ok
ich find's auch toll dass man die Sachen besser
über die Webseite findet als in Visual Studio selbst
ist halt Microsoft Logik
äh Hardware Ratchet noch mal eine Frage
wie könnte man nämlich auch einbauen
nachdem wir jetzt ja quasi schon eine Server Komponente haben
und ähm
ein Client der Windows aktivieren kann
wenn wir das fertig haben
wäre es relativ einfach was einzubauen
dass der Client noch ähm
zusätzliche Befehle ausführt ne also wenn du irgendwie
quasi nach dem Windows aktivieren
noch ein paar Dinger machen möchtest wie zum Beispiel
ähm
die die Programme von dir löschen
also mal angenommen der letzte Schritt
den du immer machst ist Windows aktivieren
und danach löscht du alles von Hardware Ratchet
runter könnte man das dann beispielsweise
auch noch hinterlegen dass der irgendwie
nen Custom Script am Ende ausführt
so nach dem Motto hallo ich bin mit allem fertig
Custom Script ausführen kann sich dann auch runterladen
kannst du quasi auch zentral verwalten
und dann lädt er sich nen Script runter und flutsch
macht alles weg was da drin steht
da musst du nicht mal selbst aufräumen
automatisches Formatieren
von den unformatierten Platten
also das kann ich nicht einbauen aber
ich kann da die Möglichkeit einbauen
dass das Ding sich nen äh
nen Script abruft das du hinterlegen kannst
was er machen soll
und es ausführt zum Schluss noch
da musst du halt gucken wie man das macht
mit dem Plattenformatieren
so irgendwie in PowerShell oder in Batch
oder sowas
so und jetzt haben wir hier sqlite kommt noch hinzu
zack sehr schön
ja wir accepten alle Terms
wir accepten immer alle Terms
gibt es irgendjemand der das liest
gibt es wirklich jemand der die Lizenzbedingungen immer liest
ähm
PowerShell Batch ja was denn jetzt
es gibt gar nichts anderes
unter Windows
PowerShell oder Batch eins von beiden
an was anderes hast du keine Chance
ok ähm
Data jetzt brauchen wir noch einen dbcontext
ab dbcontext
und den
kopieren wir uns
weil
easy dbcontext
easy live
wir kopieren uns das einfach aus dem Memeboard rüber
viel besser
bla bla bla ab dbcontext dbcontext
import
äh nein es sind keine Memes
es sind äh
Lizens
ne wie habe ich den Krempel jetzt nochmal genannt
Windows
Lizens
heißt doch nicht Memes
keine Ahnung
Lizenses
options options bla
sonstwas das brauchen wir nicht
das ganze müssen wir noch registrieren
services use
äh
ich kopiere es mir einfach auch hier her
warum soll man alles aus dem Kopf wissen
und warum soll man alles immer neu basteln
dass ich das auch einfach aus
was anderem kopieren kann
ja
da
plus das wir jetzt hier keine Meme db
hinzufügen sondern eine
keine Ahnung
Lizens db
import import zack
dann machen wir noch
use mvc
use mvc
add mvc
mvc
ok
was auch immer
ach add mvc
add mvc meinetwegen
das ist bei Microsoft immer nicht so ganz ähm
ach nein doch ist sogar relativ konsistent
hier unten ist es use und da oben ist es add
use mvc
das da unten
kommt weg
use mvc
use file server
und
und wir initialisieren die Datenbank auch gleich
ähh
appdb context
also das ist das schöne
das dependency injection schon komplett mit dabei ist
bei ASP.NET Core das ist halt sehr praktisch
ähm
das heißt ich muss jetzt nicht hier irgendwie sagen
new app context sonst war es
sondern kann einfach hier injecten rein
und sagt dann irgendwie
x database ensure created
das heißt wenn die Datenbank noch leer ist
legt das auch an mit dem Schema wie es sein soll
äh was mache ich eigentlich hier
use file server
use file server
dazu dass das funktioniert müssen wir noch was hinzufügen
und zwar
ich glaub
static files
static files ja
dass ich mir den Krams mittlerweile schon merken kann
ist echt der Wahnsinn
wenn man das oft genug macht dann
merkt man sich wirklich den größten Mist
ok blablabla
file server schon cleared jetzt gucken wir mal was passiert wenn wir starten
ob irgendwas abkackt oder so
ne guckt aber die Datenbank ist nicht da
die Datenbank wird erstellt sehr schön
und er zeigt nichts an
weil ich noch keine Seite habe die gerade zeigen soll
was irgendwie logisch ist
das heißt wir legen jetzt mal eine html Seite an
so
new item
html
index
html
so wenn ich das jetzt starte sollte
eine leere html Seite kommen
jo sehr schön
leere html Seite
so und da schreiben wir jetzt irgendwie
oben sowas hin wie
hardware rad keys
irgendwas
dass man sieht das was drauf steht
boah wir brauchen ein font
wir brauchen einen ordentlichen font
kopieren wir uns
ordentlichen font hier
view brauchen wir noch
brauchen wir alles noch
ähm wir machen inline css
wir brauchen keine extra css
scheiß drauf
äh
hier mein regex
oh guck mal da
hier dein regex
den kopier ich mir mal rüber mal gucken was das äh
der sieht schon mal abenteuerlich aus auf jeden fall
der regex
geht backre äh äh äh
look behind
überhaupt ist das look behind oder
ist das look behind
fragezeichen doppelpunkt
geht das überhaupt in .net
ähm hast du schon mal versucht mit node eine
applikation zu machen
ja aber noch nie was ernsthaftes
also der regex sieht schon mal sehr abenteuerlich aus
also ich vermute mal
was er macht ist
das ist zeichengroup wordcharacters
also wordcharacters in dem fall
klein a bis z
groß a bis z
also im prinzip fast alles außer lehrzeichen
und sonderzeichen
ähm
5 moment
funktioniert das
5 wordcharacters
genau 5 wordcharacters
ähm
gefolgt von einem minus
und das ganze 4 mal
ja weil das letzte hat kein minus hinten dran
gefolgt von 5 wordcharacters
der
regex sieht ganz ähm
das sieht eigentlich so aus
als müsste er funktionieren ja
ne hexschriftart hexschriftart
äh verwende ich nur unter linux
und im terminal ich hab das gerne
dass ich quasi ein bisschen
andere schriftarten zwischen den systemen hab
dass ich gleich direkt weiß was was ist
was administrator warte wie ist das
ne
das muss ich mal gucken wie wir das machen mit dem benutzernamen
mal schauen
ok ähm machen wir weiter
jetzt haben wir eine leere html seite wo hardware hardkeys draufsteht
sebaro jetzt tu mal nicht so
ähm
ok ähm
wie fangen wir jetzt am besten an um das auszuprobieren
ich würd sagen wir machen
auf unserer html seite einfach nen
formular wo wir
mal ohne kontrolle irgendwie sinnlos
cd keys reinpasten können
und einfach gucken ob er das in der datenbank speichert
das heißt wir brauchen jetzt einen controller
den legen wir von hand an
ähm
und nennen ihn
ich nenn ihn keycontroller
weil license
ist es mir zu lang
keycontroller
controller base
ja und dann copy paste ich mir das hier
von dem anderen zeug mal rüber
api controller
api controller keys
das haben wir gesagt als url
ähm
get all media das waren wir jetzt
wir lassen alles auf
ne alles auflisten bringt uns nix weil wir haben ja nix
windows
license
so
da müssen wir uns noch ne datenbank kontext
injecten dass wir auf die datenbank zugreifen können
ab
db kontext
bam
das mag ich von visual studio
das ist echt nice
so ähm
return licenses
gut
so und jetzt machen wir nen post
zum anlegen von
neuen
zum anlegen von neuen
keys
äh post
post key
from
form
string key
wir machen einfach mal ganz
wir machen als einfach auf der seite ein formular mit text
area wo wir keys pushen können
jetzt habe ich hier
achso wie return
ok wir gucken jetzt mal ob das posten
von ner webseite aus geht
so
from form
ich versuche jetzt mal
von ner webseite wir machen jetzt ne
ne text area drauf also wir sagen jetzt hier mal
form das wird ganz billig form action
nach api slash keys
method
post
und da versuchen wir jetzt
achso form encoding brauchen wir noch
enc type
multipart
ähm
da sagen wir jetzt text area
da kann ich mal richtig
eindrücken text area
a b c
name
wie haben wir es hier genannt
das muss gleich heißen sonst kann er das nicht mappen
keys dann brauchen wir jetzt noch nen button
um das ganze zu submitten
type
stop submit
so
wenn ich das jetzt richtig gemacht habe
sollte ich ne webseite haben mit ner text
area und nem formular
wo ich
ok es sieht mega hässlich aus
das muss ich nochmal zumachen
es sieht wirklich richtig aber
safe
ich weiß wie wir das machen wir machen edit
ähm
text area
columns ne wie war das
rows rows
50
rows 30
columns 50 dann sieht es ein bisschen schöner aus
ok
das sieht zwar sehr behilflich aus
jetzt gucken wir mal ob das posten zum solver
funktioniert
also hier könnte man dann keys reinpasten
a b c
äh
network mal gucken ob es geht
das hat funktioniert
alter
guck da
was machen wir auf der serverseite
die wir gepostet haben
first try
easy
progress
first try
ok dann
dann sagen wir jetzt mal
mal gucken ob das von der logik her funktioniert
für jeden key
wir splitten das
keys split
oh jetzt kommt wieder windows schiss
das funktioniert bestimmt nicht
für jeden betriebssystem tut das aber von windows aus tut das wieder nicht richtig
wenn ich sage split
an line ending
es gibt wieder probleme ohne ende ey
ich weiß das jetzt schon ich weiß jetzt schon dass es nicht funktionieren wird richtig
ich dachte wir machen das nämlich so
weil ähm
normalerweise hast du ja quasi
ein eintrag im web interface
für ein
ding in der datenbank
ja aber
nachdem er wahrscheinlich ne liste hat mit 500 cd keys
ist es über so ein textfeld
zum rein copy pasten
doch etwas
schöner zu managen als
add key
ein key add add key
nächster key add
das ist blöd da brauchst du irgendwas zum reinpasten hier
so deswegen habe ich mir gedacht
wir machen das so
machen einfach ein textfeld
wir machen das noch ein bisschen schöner
ähm
oder ich weiß nicht wie viele keys hast du so in diesem textfeld
drin stehen so dass wir ungefähr wissen was da auf uns zukommt
an menge
was ist was was ist debarro
ach du scheiße
100 stück ja das kann man
das kann man easy easy handeln
über welche wege kriegst du die keys
kriegst du die per mail
oder kriegst du die ähm aus
ne microsoft account oder
vielleicht könnte man das abrufen auch irgendwie
automatisch machen
ok ähm aber ich weiß
jetzt schon das splitten wird nicht richtig funktionieren
ich hab's im
gefühl irgendwie weil windows line ending
rumspacken wird
ok aber wir machen das jetzt erstmal
ganz
billig wir fügen einfach mal
alles ein
also sagen wir hier key
also
wir müssen erstmal eine neue license anlegen
per mail aha ok
ähm
wir müssen eine neue
license anlegen
license
key wird der key
hier im input license
ähm
created at with date time
now
license ähm
aber sonst überhaupt noch was
used at used for ne gibt's noch nicht
so und dann sagen wir license at
license sonst hier unten speichern
wir den ganzen kram in die datenbank
at
ohne regex ohne check
ohne sonstwas einfach mal gucken ob's geht
a b c
gucken ob das selfin jetzt funktioniert
ja ne hat er gemacht
sqlite browser
gucken wir mal nach ob der kram jetzt in der datenbank
drinnen steht
müsste jetzt eigentlich funktioniert haben
windows gefuddelt da wieder
so browse data
zack da stehen die keys drinnen in der datenbank
used at created at ist auch
auf das richtige datum
gesetzt wenn ein key
nicht funktioniert server spackt
oder so muss der nicht funktionieren ähm
der nicht funktionierende der bleibt
einfach in der liste stehen
das werden bloß funktionierende keys
gelöscht
sofern man
diesem windows
aktivierungstool entlocken kann ob es
funktioniert hat oder nicht
aber das muss das ding
das ding wird ja irgendwie melden hat geklappt oder hat nicht geklappt
also ich würd die keys nur löschen
wenn das aktivieren geklappt hat und sonst bleiben die
einfach drinnen
so jetzt mit dem splitten
funktioniert nicht warte mal
ich weiß dass das
ich kann euch jetzt schon sicher sagen
dass es probleme machen wird
ähm
split new line cross platform
was gibts denn da schönes
easiest way to split cross platform
das da ja gut auf die idee
wäre ich auch gekommen
endings
clock allee hat eine gute idee
äh
äh wo denn
ah da
kannst du ja im frontend per javascript beim klick auf den
submit button die backslider
das muss hier im backend gehandhabt werden
das könnte man machen
als letzte sache wenn es sonst nicht funktioniert
ok
ähm
einfach vom client ein array mit
pre split keys in den body
ja dann müssen wir
dann müssen wir
aber das submitten irgendwie intercepten
also sprich wir können nicht einfach submit machen
von der form sondern müssen
quasi ein eigenes submit machen
aber es wäre sicherlich nicht
verkehrt von der client den kram schon splitten zu machen
also ich fänds
ich fänds ganz cool wenn man schon direkt hier sowas
reinkriegen würde vom
vom client das wäre nicht schlecht
kontrollieren ob das regex matcht
oder sonst was
was ist wenn der client kein javascript enablen hat
dann geht das ganze frontend nicht
das können wir machen
das finde ich nicht schlecht
das merke ich schon mal
split on client
aber die regex geschichte unsere müssen wir trotzdem hier machen
das heißt wir lassen uns jetzt erstmal so
und gucken uns dann danach an wird das auf github veröffentlicht ja ich denke schon
da ist ja nichts
hardware rad spezifisches
im eigentlichen sinn drin
simplified ist doppelt so lang
easy simplified
mache aus 3 zeilen 5
simplified
split
split endings
split options
remove
empty
none
remove empty ist auch nicht schlecht
da ist der ganze schmodder weg der noch übrig bleibt
nein das ist kein auftrage im eigentlichen sinne
ich habe bloß gesagt das passt ganz gut
ich kann sowas machen und
das eignet sich super für ein stream
wäre es nicht einfacher
dass man auf dem server die keys
aus der textdatei holt
doch prinzipiell schon
du hast wenn du es rein in der textdatei
machst natürlich mehrere probleme
erstens was passiert wenn mal 2 leute gleichzeitig
ein system aufbauen
und du kannst hier keine zusätzlichen informationen speichern
wie zum beispiel
wann es aktiviert wird
für wen es aktiviert wurde
wann der key eingespielt wurde
und dementsprechend auch
keine auswertung mitmachen
das wäre halt die 20 zeilen powershell variante
ähm
so jetzt brauchen wir unseren krassen regex
wo haben wir den hier
regex weil es werden bloß dinge eingefügt
die ordentlich
geregex sind dass da nicht irgendein miss drin ist
steht
das einlesen der keys ja kann man doch
achso du meinst so ein import button
oder so ja das könnte man machen
als nächstes kommt noch einer mit an
wäre eine powerpoint datei nicht besser
oder das allerschlimmste
wäre eine lotus notes config
nicht besser
so
ok jetzt bauen wir mal unseren
geilen regex
padern
und mal gucken ob der funktioniert der regex
sag mal ich habe irgendwie
miscopy pasted oder
der regex sah doch nicht so aus
oder
doch
ja sah so aus
der sieht hier viel breiter aus
oder latex könnten wir
es auch machen richtig
ist es ja latex
so moment jetzt erstmal mal kurz
kurz kurz
schau jetzt muss das ding erstmal ordentlich regexen
regex
tag match
if
regex match
ähm
key
ja dann nur wenn das funktioniert
fügen wir es ein sonst fügen wir es nicht ein
das heißt
unser ganzen komischen
schwubbel keys hier
die können wir jetzt nicht mehr einfügen
wenn sie nicht schon drin sind
das geht jetzt alles nicht mehr
ich sollte das redirect ausschalten
ne ok das einfügen funktioniert nicht mehr
das heißt unser regex funktioniert mal
mal gucken ob unser regex jetzt die ordentlichen dinger durchlässt
äh wir wollen nicht redirecten wir wollen redirecten
doch wir wollen redirecten wieder auf die startseite
ähm
so schmeißen wir
die datenbank mal wieder weg
weil da ist ja mist drin
und jetzt gucken wir mal ob der regex wirklich funktioniert
jetzt bin ich mal gespannt
achso
ähm
also 1 2 3 4 5
1 2 3 4 5
zack das sollte gehen
achso
ich hab ja noch nix was die keys wieder abruft
lul
aber wir können mit dem sqlite
explorer mal gucken ob es richtig geschrieben hat
ja
hat er
na used add ist nicht gesetzt
created add erster key drin
ok funktioniert
das heißt er fügt auch wirklich nur keys ein
die äh richtig sind
du musst überprüfen ob was übrig geblieben ist
ja moment
natürlich
der regex ist so nicht richtig
so ist schöner
äh
also sprich
erst der abfang
dann der regex
und dann ende
das heißt alles was darauf nicht matcht
darf nicht rein
ja
dat war zwar ein guter hinweis
glockxhd
doch das machen wir irgendwann noch
lul das wärs jetzt ey
iwebclient der automatisch die e-mail zu abruft
lul
woher kommt in deinem post die ok methode
vom ähm
vom basecontroller? und ok in redirect geben halt ne
iaction result raus
was dann asp.net core irgendwie matching macht
so
ja das funktioniert doch schon mal eigentlich ganz gut
ja
so
also
das ist auf jeden fall noch verbesserungswürdig ne
wir können noch keine keys gescheit löschen und sonst was
aber an sich ist das doch schon mal
ganz nice
jetzt brauchen wir noch was
moment warum heißt das noch get memes
das ist falsch
ähm äh
keys
lul
ok und dann brauchen wir noch was
für unseren client der
ähm nen key abholt
den man get key
und zwar
als ähm
lass ich mal gucken wie das aussehen muss
ahja
das machen wir jetzt so
wir wollen einfach irgendeinen
freien key abrufen
das heißt dann müssen wir sowas hier aufrufen
im endeffekt guckt also wir müssen was hier machen
wie RP keys
free und dann krieg ich irgendein
oh ups dann krieg ich irgendeinen
freien key
where und jetzt kommen wir
kommen wir wieder zurück zu dem warum ich
das vorhin eingebaut haben
das man abfragen könnte ob das ganze schon benutzt wird oder nicht
hallo je jan
das andere kann ich nicht aussprechen aber jan kann ich
zumindest schon mal erkennen
ähm licenses
licenses where
jetzt kommt trick 17
where licenses
ist not just das geil oder jetzt kriege ich quasi die erste weil wenn ich schon
sagen die erste first of all das machen jetzt kriege ich quasi die erste den
ersten windows kino billig sagt der nicht in der nicht benutzt dass die
john leistens könnte ja auch sein dass es nicht funktioniert das könnte ja auch
sein ich weiß gar nicht kann man hier irgendwie so was machen wie return was
macht man eigentlich wenn ich ich kann ja nicht return return 404 ja ich weiß
nicht wie man 404 return ich habe keine ahnung ist gute frage
http code status status cola und wir wollen kein
jahr
die namen wollen nur eine windows-lizenz haben ja gut das geht es natürlich nicht
weil man kann ja status code nicht zu windows das muss ich mal google googeln
type status code action result moment das ist action result und zwar wenn los
leistens jetzt funktioniert das gibt es doch als
action
result ey action result so funktioniert das gehabt es not found and not found
but not found ist ja nicht so doch warum eigentlich ja doch finde ich ganz nett
so ist das schick so als können wir wieder zurück wechseln
sind ideainal und mal schauen ob das abrufen funktioniert was heißt das als
interface
ile represents or auto tuning air is an it sort of Notes Tid jer fluggebauch...
Auto tun... Auto tun... Auto tun... Auto tune... Auto tun.. Auto tuner Autotune yeah...
Auto-Tune, Beste.
So, ähm, gut.
Jetzt gehen wir mal unseren Kommando-Zahlen-Client zurück.
So, wir haben
jetzt hier discovered, das wird jetzt ein bisschen
den Schmorder, den wir nicht
gemacht haben, löschen wir schon mal wieder.
Also, wir haben jetzt
discovered die Url,
wo wir hinmüssten.
In Response-Message
steht das drinnen. Wobei,
Response-Message ist JSON, das müssen wir
erst nochmal parsen.
JSON.
Ah, da ist es doch.
Ah, gefuckt.
Da war es doch eben.
Das Weep-Nice-Wu willst du haben?
So,
die volle Weep-Ladung für alle.
Boah, XML.
Äh, ich bin verwirrt.
Was wollte ich jetzt machen?
Ähm,
genau, ich wollte
äh,
ich wollte parsern.
Nee.
JSON
Convert
war das.
JSON Convert.
Deserialize. Ich habe das noch nie ausprobiert,
ob das funktioniert. Dynamic.
Was, Statuscode auf 418?
Was ist denn 418?
Haha, ich bin ein... Ja, das machen wir.
Das ist nice.
Dass es das überhaupt gibt, ne? Ist schon wieder total gestört.
Warum um alles in der Welt
gibt es den offiziellen
HTTP-Statuscode?
Ich bin eine T-Kalle.
Da sieht man halt,
dass zur damaligen Zeit, wo diese
Sachen gebastelt wurden,
da halt schon noch
die richtigen Leute dabei gesessen haben.
Deserialize Object Dynamic.
Get das?
JSON.
Nee, wie nennen wir das denn jetzt?
Server Settings
heißt das. So.
Nein, Server.
Info ist da drin.
Oh nee, Dynamic geht nicht.
Ah nee, ich muss sagen,
Wasser.
Deserializen soll. Okay, scheint doch zu funktionieren.
Gucken wir mal.
Server Info Url.
Hm?
Ach nee, Sekunde.
Erstmal Proggers starten
und danach umschalten
auf Coggers.
Die Namen, Alter.
So, jetzt ist Coggers gestartet.
Nice.
Und?
Und, äh, Coggers funktioniert.
So, Server All.
Das heißt, jetzt können wir einen Key abrufen.
Mal gucken, ob das funktioniert.
Ich meine, ein Key haben wir drinnen.
Oder?
Hatten wir noch einen Key drinnen?
Ich glaube, einen Test-Key haben wir
schon in der Datenbank drinnen.
Und zwar, ja, xxxxxxxx
Test-Key. Sehr schön.
Ähm, das heißt, jetzt nehmen wir
unseren Web-Client
und sagen Download String.
Download String.
Download String.
Adresse.
Url.
Kann man Dynamic und String,
kann man die Konketten oder so?
Geht das?
Url plus
äh, free.
Wir können das noch viel schöner machen.
Ähm, wir übergeben
einfach die ganzen Dinger.
Ähm, hier Discover Service.
Wir übergeben dem einfach
hier, ähm,
Base-Url.
Weil da muss ich den Kram mit dem
Client nicht zusammenbauen.
Das ist doch viel schöner so.
Base-Url. Ähm,
Key-Url. Was soll ich? Mir fällt jetzt nichts
Gescheites ein.
Free. Und, ähm,
irgendwie so.
Das ist halt diese bescheuerte
Benahmung irgendwie.
Base-Url.
Base-Url brauchen wir da gar nicht eigentlich.
Key-Url.
Ja gut, die Lead muss ich mir eh selbst
zusammenbauen.
Ja.
Die Lead muss ich mir eh selbst zusammenbauen,
weil da muss ja eine ID hinten dran.
Weiß jemand, wo man aktuelle Windows-Images runterladen kann?
Direkt bei Microsoft.
Okay, starten wir das Ding nochmal.
Wechseln wir mal
auf den Coggers.
Und jetzt gucken wir mal, ob es noch
funktioniert.
Jaja, ich weiß, dass das Downloaden nicht funktioniert.
C-Doppelpunkt-Free konnte er nicht finden.
Ach, war Witz.
Ähm,
es ist ja auch nicht, es ist,
ähm, Base-Url.
What?
Wart mal.
Wart mal, stimmt meine Url denn überhaupt?
Base-Url.
Nein, wir wollen nicht Base-Url, wir wollen
Key-Url.
Jetzt hab ich's ja, drei Stunden später.
Key-Url.
Free.
Gut.
Okay, mal gucken, ob das geht.
Äh.
Hab ich was vergessen?
Two.
Wie, wie macht man ein Dynamic zu Stringen, weißt du das?
Wie macht man ein Dynamic,
ein Dynamic zu Stringen, äh.
Keine Ahnung, wie das geht.
Vielleicht sollte man es doch nicht als Dynamic machen.
Convert to String.
Was passiert, wenn der Aktivator beim Aktivieren abkackt?
Gar nichts.
Weil das Löschen des Keys ganz am Ende passiert,
wenn alles durch ist und überprüft wurde, ob es aktiviert ist.
Aktuell ruft er sich nur einen Key ab und macht ja noch nichts.
Convert to String.
So.
What?
Achso, ist Localhost lauscht ja aktuell.
Es ist ja aktuell lauscht es ja nur an Localhost.
Ähm.
Ja.
Dann stelle ich da nochmal Localhost ein, bis wir es dann am Ende auf die Server-IP stellen.
So sind wir.
Was, wenn zwei Aktivator gleichzeitig einen Key requesten, bekommen die nicht denselben?
Wahrscheinlich schon.
Wahrscheinlich schon.
Da müssen wir mal schauen.
Da müsste man irgendwie noch sowas einführen, wie irgendwie Pending oder sowas.
Mal aufschreiben.
Könnte man machen.
Ja doch, das ist gar keine schlechte Idee.
Man setzt das auf Pending.
Und danach auf Used.
Und Pending-Keys werden nicht rausgegeben.
Moin, ManiacTV.
Zuletzt vor 10 Jahren.
Ja, das ist schon...
Ich bin da schon eine Weile am Start, ja.
Ah, das können wir vielleicht hier reinmachen.
So, mal gucken, ob das jetzt funktioniert.
Schalten wir mal auf Coggers wieder um.
Scheint funktioniert zu haben, Leute.
Scheint funktioniert zu haben.
Download String.
Da sollte jetzt der Key drinnen stehen.
Ähm.
License.
Die License sollte da jetzt drinnen sein.
Ja. Cool.
Seht ihr das?
License abgerufen.
Key.
License.
Und dann lassen wir uns das wieder parsen als Dynamic.
Wirklich ganz nützlich.
Normalerweise bin ich kein großer Fan von Dynamic.
Aber für so
JSON-Geschwurbel ist das ganz okay.
License-Info ist jetzt...
Ja, genau.
Das kriegen wir jetzt vom Server geschickt.
Da steht der Key drinnen.
Das ist doch echt ganz nice.
So.
License-Info.
Und dann haben wir jetzt zur Auswahl License-Info-ID.
Key.
Das juckt uns eigentlich hier auf dem Client alles nicht.
Das heißt,
eigentlich könnten wir auch
da gar kein JSON zurückschicken,
sondern einfach nur
einen stinknormalen
Key.
Aber dann können wir das nicht mehr löschen, richtig.
Müssen wir mal gucken.
Also so ist das auch auf jeden Fall
kein Ding.
So, jetzt aktivieren wir Windows irgendwie.
Wie auch immer das funktioniert, muss ich erstmal nachgucken,
wie man das macht.
Wenn wir Windows aktiviert haben,
wir bauen jetzt hier irgendwie was ein.
Activate.
Yes, No.
Console.Read.
Key.
Dann warten wir mal.
Und danach, jetzt tun wir mal so,
als hätten wir Windows aktiviert.
Wir faken das jetzt einfach mal
und jetzt löschen wir es.
Jetzt hat Windows ordentlich aktiviert
und jetzt löschen wir den Key
von der Server-Seite aus.
Dazu brauchen wir ein
Delete.
Ein Delete brauchen wir dazu.
Gucken wir uns wieder ab
aus unserem Memeboard.
Viel besser. Da wissen wir nämlich schon,
dass das funktioniert, was da drin steht.
Delete.
Delete. Delete.
Key.
From Route.
Oder wie der Cisco-Fan sagen würde,
From Route ist
Context Find
ID.
Oder auch nicht.
Was hat der für Schmerzen?
Ah.
License.
Find ID.
Context.
Remove.
License. Remove.
Key.
Und Datenbank
speichern.
Was ist Cheat?
Ich habe es nicht gelesen.
Ja, der DPS einschalten können wir
immer noch. Das ist wirklich das kleinste
Problem an der ganzen Geschichte.
Da setzt du ein Häkchen HTTPS an.
So kannst du Windows aktivieren.
Ja, Sibaro, ich weiß,
das habe ich schon gesehen,
aber ich kann mein Windows ja hier nicht aktivieren.
Das heißt, das muss Hardware auf jeden Fall selbst ausprobieren.
Ich kann hier alles testen lokal, außer das eigentliche
Windows aktivieren.
Und das Verschlüsseln von den
Keys können wir auch machen.
Wobei man sagen muss,
aktuell liegen sie in der Textdatei und
verschlüsselt auf dem NAS.
Das ist jetzt weder besser noch schlechter hier.
Ähm.
Return. Okay.
Aber das können wir machen.
Das ist eigentlich keine schlechte Idee.
Schreibe ich mal noch rein.
Enk. Keys. Indb.
Können wir machen. Da müssen wir halt irgendeinen
Schlüssel vergeben, den wir dann auch irgendwo
reinschreiben. Aber, naja.
Pff.
Das ist lokal im Netz. Scheiß drauf.
Okay. Ähm.
So.
Windows aktivieren. Fragezeichen.
So. Jetzt haben wir Windows auf
Magic Art und Weise irgendwie
aktiviert.
Und jetzt löschen wir das.
Ja, MasterDomTV, das hatten wir gerade schon.
Den Fall.
Deswegen machen wir noch ein Pending-Feld.
Deswegen machen wir noch ein Pending-Feld.
Hast du gelesen, was Hardware hat geschrieben?
Nee.
Kann
dieses Ding auch der Server abspielen, wo
eine Soundanlage dranhängt?
Du willst doch auf dem NAS laufen lassen.
Wenn du dann in einem NAS eine Box
hängst, geht das auch, ja.
Wie du das genau bei dir installierst,
können wir ja nochmal gucken.
Also, was ist installiert, wo du das jetzt
genau drauf machst, können wir nochmal gucken.
Aber wenn dort Boxen
dran sind, kann man auch Sound abspielen.
Aus Docker raus allerdings nicht.
Von einem Windows-System
kein Ding.
Also, wenn du es auf einem Windows-System machst,
dann geht das auf jeden Fall.
So. Ähm.
Habe ich jetzt das Delete eingefügt hier?
Warte mal. Ich bin gerade
ein bisschen verwirrt. Hier.
Delete. Delete-Key. Genau.
Der Delete-Key wird nur aufgenommen.
Ähm.
Also, der Delete-Key wird nur aufgerufen
vom Client,
wenn das Aktivieren erfolgreich war.
Wir tun jetzt mal so,
als wäre das
Aktivieren erfolgreich,
äh, Masterdom, das werde ich erstmal nicht
verfolgen, sowas.
Wobei man das machen könnte,
wenn der
Rechner nochmal neu entsteht. Das könnte man
tracken. Man könnte sich die ID
irgendwie speichern.
Ich weiß nicht, ob das ein Szenario ist, was
gebraucht wird.
Ähm.
Man könnte sich,
man könnte sich ja hier used for, man könnte sich
irgendwie Hardware-ID
oder so speichern für
neu aktivieren.
Das könnte man machen.
Ja, das könnte man tatsächlich tun, ja.
Weil wir löschen ja keine Keys,
sondern wir setzen Keys nur auf used,
dass man im Nachhinein nachgucken kann, was Sache ist.
Okay, delete key.
Progress.
So, Webclient.
Jetzt löschen wir.
Webclient. Das ist jetzt ein bisschen eklig
gemacht. Man muss jetzt sagen,
Upload. Upload.
String. Ist eigentlich egal,
was wir nehmen.
Ähm. Address.
Ist Server-Info.
Base-Url.
Was haben wir hier?
Okay, das müssen wir mal kurz
selbst zusammenbauen.
Äh, wisst ihr was? Ich schreib mal kurz
hardcoded rein, weil ich guck will, ob es funktioniert.
Ähm. Plus
License-ID.
License-Info.
License-Info.
ID. Geht das so?
Boah, da kackt das ab.
Okay, Methode
ist, ähm, delete.
String-Data
leer. Brauchen wir nicht.
Wollen uns einfach nur löschen.
Yes. Boah.
404 not found. Weil?
Weil?
Warum ist not found?
Was ist, was genau?
Was genau ist
falsch?
Was genau ist falsch?
Hm. Stimmt doch.
Delete.
404.
Ah! Okay, ich
muss...
Upload. Äh, okay.
Upload. Kann man hier 0?
Kann man hier 0 reinstecken irgendwie?
Value cannot be known.
Wie? Alter,
.NET. Wie schick ich denn
einfach nen leeren Delete-Request an diese
URL? Ich will einfach nur nen
Delete-Request ohne Payload schicken.
Webclient delete.
How to send...
Ich will, will kein Body.
Webclient restful delete.
Na, String empty haben wir doch schon gemacht grade.
Also, das ist ja das gleiche im Endeffekt.
Ähm.
Aha.
Okay. Upload.
Upload.
Values.
New.
New was auch immer für
ne Collection. Yes.
Was? Warum?
Warum?
Ha. Request
delete.
Api key 1.
Not found.
Warum? Warum ist
das jetzt, äh, warum not found?
Delete ID.
Hm.
From route.
Müsste eigentlich funktionieren.
Hab ich mich irgendwo verschrieben?
Hab ich mich irgendwo
verschrieben?
Tja, warum macht er das jetzt
nicht?
Ist da noch ein Key in der Datenbank?
Ja, müsste.
Und er würde mir auf jeden
Fall kein 404 werfen.
Wisst ihr was? Ich schreib das jetzt mal
hier von Hand rein.
Delete.
So.
Jetzt hängt es irgendwie.
Hat er es jetzt gelöscht?
Das ging jetzt?
Moment.
Jetzt bin ich ja überhaupt verwirrt.
Warum ging
das jetzt und vorher? Na, das ist doch exakt die gleiche
Uhr. Oder auch nicht?
Vielleicht
auch nicht. Ne, der Key ist immer noch
drin. Debuggen
mit Ride Line 0.
Search for Key.
Äh, ich glaube uns ist irgendwie das
ASP.NET Ding gerade ein bisschen
abgeschissen. Activate.
Yes.
Jetzt hat es funktioniert.
Vielleicht hätte ich das mal vorher neu starten sollen.
Jetzt hat es funktioniert.
Und wenn ich jetzt refreshe.
Kann man ja nicht refreshen. Jetzt ist der
Key weg. Hä?
Ok, nochmal. Neuer
Key einfügen.
So. Edit.
Key ist
eingefügt.
Gefügt.
Key ist eingefügt.
Das
irritiert mich jetzt, dass das da so rumspackt.
Key ist eingefügt.
So. Ok, probieren wir
das Ganze nochmal aus.
Activate. Yes. Jetzt geht's.
Ok.
Keine Ahnung, was das gewesen ist.
Jetzt funktioniert's.
Kein Schimmer. Kein Schimmer.
War als würde ich mir wieder einen selbst so
kack Key schreiben. Ähm.
Jetzt könnte sich irgendeiner Copy
pasten und mir in den Chat Copy pasten, wenn ich wieder
was brauche.
Ähm. Ist das ein neuer
Twilight Film? Ich hab drauf gewartet, dass endlich
einer kommt mit dem und was
zur Twilight sagt.
Ok, jetzt funktioniert's.
Keine Ahnung, was das
gewesen ist. Ok, das ist doch
nice. Also.
Vielleicht sollten wir jetzt noch zum Abschluss.
Also prinzipiell funktioniert's.
Jetzt fehlt hier noch das eigentliche Aktivieren.
Aber so die
Grundlagen sind geschaffen.
Jetzt müssen wir natürlich noch gucken, wie man Windows wirklich aktiviert.
Und das ein bisschen sicherer
und schöner machen. Aber äh.
Prinzipiell klappt das.
Aber die Webseite
sieht halt schon mal nochmal mega hässlich aus, ne.
Ähm. Also. Dann würde ich sagen.
Machen wir die. Wir machen jetzt noch die letzten 10 Minuten
oder so. Machen wir die Seite noch ein bisschen schön, dass es auch
was hermacht.
Also.
Als erstes.
Als erstes
fügen wir mal auf UGS von irgendeinem
CDN ein.
Weil das werden wir auf jeden Fall
früher oder später brauchen.
So. Ähm.
Button.
Class.
Icons. Edit.
Ok. Jetzt haben wir schon mal ein Icon drauf.
Da machen wir dann nicht H1
drauf, sondern machen jetzt ein paar.
So.
Funktionell
und clean. Sieht mega hässlich aus.
Äh. Außerdem brauchen wir noch ein paar Tabs
für History.
Wer welche Keys eingelöst hat und so.
Ähm.
Viel komplizierter wird die Seite aber auch trotzdem nicht.
Machen wir mal ein Break dazwischen.
Ja.
Ok. Dann machen wir jetzt mal
ein Steil.
Steil. Nicht steiler.
Steil.
Ähm. Alles inline. Das wird so kurz
die Seite. Da brauchen wir keine extra
extra Geschichten hier.
Das wird vielleicht 50, 60
Zeilen lang. Ähm.
Body.
Kopieren wir uns das vom anderen.
Wie wir das mit der Schrift gemacht haben.
Body.
Ja ne. App ist es da.
Das da.
Alter Musik
wo geschwätzt wird ist so nervig.
So.
Mehr brauchen wir eigentlich gar nicht außer die eine Zeile.
So. Jetzt haben wir jetzt schon mal eine ordentliche
Schriftart.
Ja. Schon mal gut.
So. Font.
So.
Und da machen wir das nicht mit
Font.
Sagen wir Font Size
30 oder so.
Oh. 30.
40. Was nennt man da?
Wir brauchen ja noch das
Hardware Rad Logo.
Oh. 40. Die Schriftgröße ist doch ganz gut.
Hardware Rad Logo.
Gibt es doch bestimmt auch Transparent hier
irgendwo.
Transparent.
Transparent. Jawoll.
Komm wir fügen das direkt
von Youtube ein.
Image.
Image.
Source.
Das wird jetzt ein bisschen fett sein das Bild.
Bam.
Right.
Kannst ein CSS
Skills auspacken.
Wenn ihr ein komisches CSS seht sagt mal Bescheid.
Wisst, dass ich nicht der große
CSS Held bin.
Left.
Halt.
Bäh.
Was ist das?
Image.
Wollen wir ja wahrscheinlich auch nur ein
Image haben.
Image wird Content
Fit. Ne wie geht das?
Content Fit.
Ne.
Content.
Muss ich abgucken.
Content Fit.
Object Fit war das.
Eine Güte.
Objekt.
Bäh.
Object Fit.
Contain.
Clearfix.
Gut, dass du es sagst.
Ich hätte es jetzt wieder voll vergessen.
Deswegen hängt der ganze Mist da auch rechts rum.
Breite.
Hoofdspixel.
Höhe.
Hoofdspixel.
Ah. Sieht schon besser aus.
Clear.
Clear.
Oops.
Jaja.
Ah cool, wenn es keine Keys mehr gibt,
gibt es einen 404.
Sollte es nicht eigentlich einen 418 geben,
wenn es keine Keys geben sollte?
Das müssen wir gleich nochmal
investigaten.
Ähm.
Wie macht man das? Class Clear?
Aha.
Kann ich nicht einfach sagen, dass beides
Left ist?
Doch, so ist es besser.
Beides Left.
Ja.
Beides Left und
dann machen wir irgendwie noch eine Margin oder so.
Padding.
Right.
Was ist? Padding ist außen,
Margin ist innen. Ich kann mir das nie merken.
Ja, das sieht doch
jetzt ganz gut aus.
So, da drunter
kommt jetzt eine Navigation Bar.
Mit ein paar Links drinnen.
Links zu Keys.
Links zu Logs.
Links zu Stats.
Sieht total scheiße aus, aber das können wir
noch anders da formatieren gleich.
So.
Ah ne, umgedreht.
Padding innen, Margin außen. So rum.
Antheon. Es gibt sogar relativ viele,
die sich hier auskennen. Aber es gibt auch genauso viele,
die einfach nur so zugucken.
Moin, MacFuro.
Ja, jetzt haben wir die Seite noch ein bisschen hübscher
gemacht. Ich meine, sie sieht immer noch wirklich hübsch aus, aber
besser als nix.
So.
Morgen werden wir dann machen, dass das Ding, das Frontend
sich auch die Keys alle abruft und sowas.
Aber als Basis
ist das doch eigentlich schon ganz nice.
Also morgen machen wir das
fertig. Nicht so wie das Meme-Tool, was sich
seit Wochen schon hinzieht. Da kommt auch immer wieder was
dabei. Morgen machen wir das fertig.
Da fehlt ja nimmer viel.
Was wird gerade programmiert? Mach mal Ausrufezeichen
HR-Tool.
Sibaro, wir hatten vorher sogar schon über 150.
Ähm...
Ja, passt doch.
Wie könnte man
jetzt die Navigationsleiste noch ein bisschen hübscher machen?
Ah, ich kann so
CSS-Style gedönst.
Da bin ich nicht gut drinnen.
Da habe ich ja schon beim Meme-Tool übelst einen abgebrochen.
Ich meine, die Buttons
und die Textfelder sind auch kacke aus.
Ich will mich halt noch verbessern.
Alter, was ist los, Sibaro?
Oh, das Meme-Tool ist kaputt.
Meme-Tool geht
wieder.
KZFPS guckt
auch zu. Bringen sie
an.
Also, ich habe euch ja das Neueste noch gar nicht erzählt.
Wir sind jetzt für heute eh fertig mit Proggers.
Oder...
Wir machen zumindest nicht mehr viel heute.
Der Rest machen wir morgen fertig.
Ich habe euch ja das
Schlimmste noch gar nicht erzählt.
Und zwar...
Also, ihr kennt ja noch meine alte Katze.
Die hier.
Und vielleicht kennt... Ach, der Dude, ey.
Ich muss gleich noch was zu sagen, ey.
Vielleicht kennt ihr auch
meine
neue Katze.
Die habe ich ja auch schon ein paar Mal gezeigt.
Da.
Ja.
Also, das waren meine...
Meine beiden, die ich bisher hatte.
Ich kann das Ding nicht verschieben.
Also, nacheinander.
Zuerst hatte ich die, dann hatte ich die.
Und, ähm...
Die...
Die alte, die war ja auch krank.
Das war vor einem Jahr.
Die hier habe ich mir ja geholt.
Sie hat übrigens...
Ich habe es mir nicht ausgedacht, ne.
Sie heißt Barbie.
Das hat die Vorbesitzer ihr den Namen gegeben.
Ich würde meine Katze nie Barbie nennen.
Und...
Die habe ich mir erst irgendwie im...
April oder so geholt, ne.
Und die war jetzt den letzten Monat schon so krank,
dass sie gestern gestorben ist.
Das heißt, ich habe jetzt keine Katze mehr.
Und gestern Abend beim Tierarzt
haben sie einschläfern lassen.
Die konnte gar nicht mehr richtig laufen.
Also, ich bin gestern heimgekommen.
Ich bin gestern heimgekommen.
Und da ist die Katze rumgelaufen.
Ähm...
Übelst rumgeeilt.
Also, ich wusste ja, dass...
Dass das, äh...
Irgendwann eintritt demnächst, ja.
Aber ich wusste halt nicht, dass das jetzt schon ist.
Die war ja schon quasi acht Wochen.
Hatte ja mehr oder weniger nichts gefressen.
Nur noch irgendwie, ähm...
Also, sie hat Nierenprobleme gehabt.
Zahnprobleme und Nierenprobleme.
Wobei die Nierenprobleme das eigentliche waren.
Und da hat sie jetzt seit acht Wochen kaum noch was gefressen.
Und da hat sie jetzt seit acht Wochen kaum noch was gefressen.
Ich habe ihr immer so Zusatzzeug gekauft.
Ich habe ihr immer so Zusatzzeug gekauft.
Obwohl sie halt noch ein bisschen mit über die Runden gekommen ist.
Aber gestern bin ich heimgekommen.
Da hat sie sich schon immer so versteckt in den Ecken.
Und wenn sie rumgelaufen ist,
dann ist sie mit dem Kopf gegen die Heizung gerannt einmal aus Versehen.
Weil sie kaum noch Koordination hatte.
Weil sie kaum noch Koordination hatte.
Wir müssen jetzt übrigens mal...
Ich habe Twitter schon wieder zugemacht.
Ich habe Twitter schon wieder zugemacht.
Ich habe Twitter schon wieder zugemacht.
Die Katze müssen wir auch noch ins Meme-Board aufnehmen.
Die Katze müssen wir auch noch ins Meme-Board aufnehmen.
Dass wir beide haben.
MaoFPS
Die hat noch keinen Spitznamen gekriegt.
Die hatte ich noch nicht lange genug.
Jetzt haben wir sie beide.
Jetzt haben wir sie alle drinne.
Und wie gesagt,
die ist gestern schon
den ganzen Tag übelst
rumgeeiert.
Wurde mir berichtet.
Und dann abends.
Ich habe mir das auch noch ein paar Stunden angeguckt.
Aber dass es halt gerade schon gestern ist, war halt kacke.
Jetzt habe ich wieder keine Katz mehr.
Ja, das nur für den Fall der Fälle, weil immer die Leute fragen, was macht die Katz.
Ja, jetzt wisst ihr da Bescheid.
Das macht nichts mehr.
Hund? Nee, ich mag keine Hunde.
Ich war ja sogar, als die erste Katze gestorben ist.
Also sprich, ja.
Die hier.
Da war ich ja sogar im Tierheim und hab mal nach dem Hund geguckt.
Aber ich werde mit Hunden einfach nicht warm.
Ich werde mit Hunden einfach nicht warm.
Ich bin da auch zwei oder dreimal Gassi gegangen mit so einem kleinen.
Also jetzt nicht so einem ganz kleinen, weil die finde ich irgendwie eklig, sondern so einem mittelkleinen.
Aber ich werde mit Hunden nicht warm.
Das heißt, ich werde mir wahrscheinlich wieder eine Katze holen.
Wo ist die Facecam?
Lull.
Facecam.
Easy.
Gibt keine Facecam.
Kaboom-Handy, gibt es da wieder was zu gucken?
Ja, ich habe mit Kaboom telefoniert.
Wir gehen wahrscheinlich nächste Woche oder übernächste Woche wieder was futtern.
Eventuell die nächste Katze als Baby holen.
Ich will ja, ich hole mir absichtlich, ja stimmt, eine Million Abos, YouTube-Face-Reveal.
Hab ich ganz vergessen.
Ich hole mir ja absichtlich alte Katzen.
Erstens, weil kaum eine alte Katze holt.
Also wenn du mal ins Tierheim gehst, dann hast du ja auch eine alte Katze.
Wenn du ins Tierheim guckst, du hast, so viele Katzen, die da sind, sind halt schon, sagen wir mal, über acht oder so.
Die sind halt schon relativ alt.
Und einen Vorteil hat es, wenn man sich alte Katzen holt.
Also ich finde, das ist ein relativ großer Vorteil.
Wie täglich kann ich jetzt kostenpflichtige Abos bei YouTube machen?
Fällt mir gerade so auf, weil dort kann nebenbei das Studio auf.
Der Vorteil davon, sich alte Katzen zu holen, ist,
dass man halt weiß, was man kriegt.
Also sprich, wenn man die kennenlernt und man sich versteht,
dann kann man halt davon ausgehen, man versteht sich ja auch in einem Jahr noch oder so.
Die ändern sich halt nicht mehr, ja.
Und wenn du da eine hast, mit der du nicht klarkommst, kannst du auch sicher sein,
mit der kommst du auch später nicht wirklich viel besser klar.
Mein klar, natürlich ändert sich's immer, wenn sie dich dann erkennt oder so, ja.
Aber alte Katzen, die wissen halt schon, was abgeht.
Und entweder passt das, oder nicht.
Passt das zu einem, oder nicht?
Wobei ja hier, Barbie hat ja übelst rumgeschleimt, im Tierheim noch.
Und danach wollte sie eigentlich nur noch, wenn es ihr danach war, gestreichelt werden.
Aber, ich muss mal gucken.
Also ich werde jetzt erstmal abwarten, bis, ich denke mal irgendwie so, so März oder so.
Und dann werde ich wieder gucken.
Weil, also ich denke, es ist auf jeden Fall besser, nach Weihnachten zu gucken,
weil die ganzen Spasten, die sich dann irgendwelche Viecher holen und nach Weihnachten wieder zurückbringen,
gibt's ja leider, oder was heißt zurückbringen, teilweise sogar auch irgendwo aussetzen.
Aber die meisten sind ja wenigstens auch so anständig und bringen sie dann ins Tierheim.
Da ist dann wahrscheinlich, nach Weihnachten ist dann wahrscheinlich voll im Tierheim, ja.
Irgendwann so Januar oder so.
Wenn den Leuten dann auffällt, auch kleiner süßer Hund macht Arbeit,
oder aber der kleine süße Hund von vor zwei Jahren ist nicht mehr,
der ist klein und süß, und dann wird er natürlich immer ins Tierheim gebracht.
Oder Babykatze ist nicht mehr Babykatze, Babykatze ist jetzt groß.
Und man hat Babykatze nicht ordentlich beigebracht, wie es funktioniert.
Und Babykatze scheißt wohin.
Die Leute sind teilweise so ultra bescheuert, ne.
In dem Tierheim, wo ich die letzte, wo ich Barbie geholt habe,
da waren noch zwei andere Katzen.
Das waren, glaube ich, Geschwister oder so.
Und die wurden ein paar Tage vorher abgeholt.
Da waren wir schon mal da.
Wir waren ja ein paar Wochen da.
Und dann waren die weg.
Da haben sie gesagt, hey, die wurden mitgenommen.
Da habe ich so, ah, ist ja wunderbar, dass das für die geklappt hat.
Und dann bin ich, sind wir wiedergekommen, um halt die Katze abzuholen.
Und dann waren die beiden auf einmal wieder da.
Das war irgendwie so ein Abstand von drei Tagen oder so, wo man gedacht hat,
hä, wie kann das sein?
Erst wurden die mitgenommen und dann drei Tage später sind die Katzen wieder da.
Und die Leute, ja, die haben tatsächlich die Katzen mitgenommen,
haben sich dann drüber beschwert,
dass die Katze unterm Sofa sitzt und einen ausversehen einen Blumentopf umgeschmissen hat.
Und anstatt, jetzt muss man sich mal vorstellen, wie bescheuert die Leute sind, ne?
Also man holt sich eine Katze.
Das heißt, man muss sich ja vorher schon mal irgendwie, oder zwei Stück,
man muss sich ja irgendwie vorher schon mal geistig damit beschäftigt haben, was das heißt, ja?
Oder vielleicht auch schon mal ein bisschen im Internet gelesen haben,
dass das vollkommen normal ist, dass die Katze sich erst mal unterm Sofa setzt, ja?
Und dass, wenn die Katze rumrennt, halt auch mal was runterschmeißt.
Aber dann zu sagen,
ja,
dann bringt die Katze wieder zurück ins Tierheim.
Was sind das denn für Leute?
Ich meine, kannst du natürlich die Katze mitnehmen,
drei Tage bei dir quasi sich halbwegs einleben lassen
und dann wieder zurück ins Tierheim bringen.
Das ist jetzt doch mal voll bescheuert, ey.
Ja, und der hat nur im Käfig gesessen und rumgemauzt, der eine,
weil der hat die Welt nicht mehr verstanden, weißt du?
So erst sitzt der im Tierheim, dann wird er mitgenommen, freut sich,
rennt ein bisschen rum und dann kommt wieder wieder hingebracht.
Und dann hat er sich gecheckt, da, da, da, Alter, wow, es geht hier ab.
Ich check's nicht mehr.
Aber du kannst doch eine Katze nicht mehr zurückbringen,
bloß weil sie unterm Sofa sitzt und was runtergeschmissen hat.
Ich meine, man kann sich darüber aufregen, ja?
Man kann versuchen, der Katze irgendwie begreiflich zu machen,
dass das keine so gute Idee ist.
Aber sein Zeug muss man halt so hinstellen, dass es nicht runterfallen kann, ja?
Also wenn die Katze jetzt an der Tapete kratzt, ja?
Und man mal irgendwie ein bisschen klatscht oder Krach macht,
dass die Katze checkt, dass, dass,
dass nichts gewollt ist, das ist ja okay.
Aber dass man wegen sowas instant sagt, so nach dem Motto,
nee, also, also Katze, die den Blumentopf runterschmeißt,
nee, das geht nicht, da bringe ich die Katze wieder ins Tierheim zurück.
Ich weiß gar nicht, ob die Leute überhaupt irgendwie was im Hirn haben
und, und sich mal auch nur fünf Minuten Gedanken vorher gemacht haben,
wie es so ist, sich eine Katze zu holen.
Ich weiß es nicht, die Leute sind teilweise richtig stumm.
Ich würde die Katze auch behalten, wenn sie die Tapete,
aber ich würde sie nicht holen.
Ich würde die Katze irgendwie versuchen zu verklickern,
dass Tapete abreißen, scheiße ist.
Es muss sich übrigens beim Tierheim unterschreiben, ne?
Katzenumtausch.
Ohne Scheiß, das muss man unterschreiben mittlerweile.
Das, das, das, du musst ja, wenn du, wenn du, wenn du eine Katze aus dem Tierheim holst,
musst du ja quasi einen richtigen Vertrag unterschreiben,
wo sowas wie, wie Rückgabe und sowas drinne steht.
Also ist nicht so, dass du einfach hier so eine Katze holst.
Um Rückgabe unterschreiben, musst du unterschreiben,
was du, was du machst, wenn sie krank wird und so.
Aber da habe ich mich komplett drauf geschissen jetzt.
Ich musste zum Beispiel unterschreiben, dass wenn sie krank wird,
dass ich dann irgendwie sie, sie zurückbringe oder so.
Irgendwie zurückbringe zum Beispiel, weiß ich nicht,
ich bringe doch meine Katze nicht, wenn sie krank ist,
zum Behandeln zu dem Kack, äh, ich weiß nicht, ob er Kacke ist.
Lassen wir das mal weg.
Aber ich bringe doch meine Katze nicht, wenn sie krank ist,
zurück ins Tierheim, dass sie da vom Tierarzt behandelt wird,
der, der 150 andere am Tag behandelt.
Warum?
Warum? Da gehe ich selbst wohin.
Gehe ich hier bei uns hin.
Der kennt uns, der kennt die Katze.
Warum soll ich das machen?
Was heißt Rückgabe?
Ja, du kannst die Katze umtauschen.
Ich glaube kein Ding, kannst du unterschreiben, musst du unterschreiben.
Du musst die Katze auch eigentlich, wenn sie krank ist, wieder hinbringen und sowas.
Total bescheuert.
Aber ich meine, ich habe es letztendlich unterschrieben und...
Wer, wer will das Ganze kontrollieren, ja?
Also wenn du eine Katze aus dem Tierheim holst und das unterschreibst,
dann hat das, dann hat das ungefähr, wenn du das liest,
so den Charakter, wie wenn...
Wenn du dir, keine Ahnung, wie so Ikea-Sofa holst oder, oder sowas in der Richtung.
Ja, also wenn du dir den Ikea-Sofa mit Raten bezahlst und das unterschreiben musst,
ungefähr so ähnlich ist es auch, wenn du dir,
wenn du den Vertrag da im Tierheim für die Katze unterschreiben musst.
Das ist richtig bescheuert.
Aber letztendlich ist es halt da auch so,
du hast das unterschrieben und es kann eh keiner kontrollieren.
Wobei es halt auch total bescheuert ist.
Ich meine, letztendlich ist,
dass meine Katze, wenn ich die geholt habe,
dann gehe ich auch mit der zum Tierarzt und gehe nicht zum Tierheim und dann...
Das ist total bescheuert.
Ich will ja das Beste für die Katze und nicht irgendwie so 0815 Tierheim,
Tierarzt, der 150 aller Katzen auch noch macht.
Eigentlich sollte man unterschreiben, dass man sie nicht zurückgeben darf.
Ja, wenn schon überhaupt dann sowas, ja.
Aber es ist umgedreht.
Du unterschreibst das und sie zurückgeben darfst
und du unterschreibst auch in welchen Fällen du quasi das Tierheim...
Ich glaube, geht los, ja.
Würdest du für die Proger-Streams die Low-Latency-Options aktivieren?
Ja, ja, kann ich machen.
Wisst ihr überhaupt, wie das funktioniert, Low-Latency-Options?
Also nicht, wie man das aktiviert, sondern wisst ihr, was die machen?
Das kann ich euch jetzt noch kurz erzählen.
Wisst ihr, wie das technisch funktioniert mit Low-Latency-Options?
Auf Twitch.
Also nicht nur auf Twitch, überall Low-Latency-Options.
Wie ist der Zustand eigentlich für die Katzen im Tierheim?
Das kommt drauf an, in welchem Tierheim du bist.
Das ist ganz unterschiedlich.
Also, der Twitch-Stream und beziehungsweise generell Streaming funktioniert folgendermaßen.
Das ist eigentlich ziemlich billig, ja.
Und ziemlich simpel und deswegen funktioniert es wahrscheinlich auch so gut.
Also es funktioniert folgendermaßen.
Du hast irgendwo, wie sagen wir mal, du hast eine Kamera, wo ein Videostream von kommt.
Oder hier eine Aufnahme vom Bildschirm.
So, und daraus machst du einen H26.
Vier Stream und uploadest das irgendwo hin.
Zu Twitch in dem Fall.
So, und was Twitch dann macht, also damit, an der Stelle ändert übrigens Low-Latency-Option auch nichts,
dass ich den Stream von mir zu Twitch schicken muss.
Da ändert sich überhaupt nichts dran.
Das Interessante ist, wie Streaming funktioniert zu euch,
beziehungsweise für den Zuschauer an sich oder halt auch auf YouTube oder so.
Im Prinzip funktioniert das alles anders.
Das ist alles HLS-Streaming.
Ich glaube, HLS ist, glaube ich, das HTTP-Livestreaming.
So, und das funktioniert folgendermaßen.
Das ist HTTP-Streaming.
Das ist super billig.
Wenn du eine Uhr aufrufst, kriegst du eine Playlist.
Du kriegst eine Playlist und in der Playlist stehen Dateien drin.
So, eins, zwei, drei, vier.
So, und...
Die Datei enthält einen Schnipsel vom Stream von, sagen wir mal, zwei Sekunden.
Und du machst eigentlich, HLS-Streaming ist eigentlich nichts anderes wie,
dass du in regelmäßigen Abständen die Playlist neu abrufst
und wenn du unten angekommen bist, mit der nächsten Playlist oben anfängst.
In der nächsten Playlist steht dann halt hier oben irgendwie 101 oder 12, 13, 14.
Im Prinzip ist HLS-Streaming nichts anderes wie,
die zwei Sekunden, eins bis zwei Sekunden Schnipsel vom Video in der Playlist.
Das ist alles.
So, und ich glaube, die Standardzeit, also die Standardlänge von so einem Videoschnipsel
ist standardmäßig, glaube ich, zehn Sekunden.
Und der Intervall, in der er das abruft, keine Ahnung, ich weiß es aus dem Kopf nicht.
Zumindest das Einzige, was...
Ähm...
Low-Latency-Streaming macht, ist, diesen Intervall schneller und die Zeitenkürze.
Also sprich, dann geht nicht ein Schnipsel, geht nicht mehr eine Sekunde,
sondern nicht mehr zwei, drei Sekunden, sondern ein Schnipsel geht noch nur 0,5 Sekunden.
Dementsprechend musst du den Kram ja auch wieder schneller abrufen nacheinander.
So, und das Problem, was man daran sieht, ist, es kann natürlich schneller mal buffern.
Ja?
Bei dem anderen hast du quasi...
Eine Playlist.
Ach ja, und du kannst natürlich auch nur buffern, die Dinger, die du in der Playlist abgerufen hast,
weil die anderen kennst du ja noch nicht.
Also sprich, kannst ja die Konsole im Chrome öffnen, während du einen Stream öffnest.
Das ist eine gute Idee, Sibaro, das machen wir.
Da werdet ihr nämlich sehen, dass das so ist.
Wir gucken jetzt mal meinen Stream an.
Auf Twitch, Sound ist aus.
Guck, und wenn wir hier in bei Netzwerk reingucken...
Kleiner Scheiß mal weg.
Ja.
Okay, ne, die machen irgendwie noch anderes Zeug.
Man sieht es nicht richtig, aber...
Ich würde das gerne mal rüber machen.
Wie kann man das denn jetzt auf die rechte Seite machen, den Kram?
Die machen irgendwelche Web-Assembly-Geschichten.
Aber ich gehe mal davon aus, dass das im Kern...
Ja, guck, seht ihr es?
Das ist die Playlist, die hier abgerufen wird.
M3U8.
Da kommt dann eine Playlist jetzt raus.
Guck, das ist die Playlist.
Das ist die Playlist.
Und in der Playlist stehen wieder die einzelnen Videos drin.
TS-Files.
Die einzelnen Videos von jeweils ein paar Sekunden.
Und danach wird die nächste Playlist abgerufen.
So funktioniert HLS-Streaming.
Das ist eigentlich ziemlich easy.
Warum Twitch jetzt da so ihre krassen Random-Namen drin hat, weiß ich auch nicht.
Und mit Low-Latency-Streaming wird einfach der Schnipsel...
Wahrscheinlich sind das hier zwei Sekunden.
Der Schnipsel kürzer und der Intervall, wo abgefragt wird, kürzer.
Das ist alles.
Dementsprechend ist die Chance, dass es buffert,
bei Low-Latency-Streaming auch logischerweise höher.
Weil dann kann man keine 30 Sekunden mehr im Voraus buffern.
Wo man dann erstmal ein bisschen Buffer hat.
Falls es mal hängen sollte und man nachladen kann.
Wenn es bei Low-Latency-Streaming halt mal kurz hängt, dann hängt es halt.
Dann buffert es halt.
KD North.
Wie kann man programmieren lernen?
Das Beste ist, nicht zu sagen, ich möchte programmieren lernen.
Sondern das Beste ist, wenn du eine Idee hast, was du machen willst.
Und dann suchst du dir das raus, womit du das am besten umsetzen kannst.
Und lernst das.
Das ist für die Motivation auch deutlich besser.
Anstatt zu sagen, ich lerne jetzt programmieren und habe eigentlich keine Erfolgserlebnisse dabei.
Richtig, Sebarro.
Auf Empfängerseite kann man Low-Latency aktivieren.
Jo, dann ist gut, ja.
Ergibt ja auch irgendwo Sinn.
Irgendeiner hat vorhin was zu C-Sharp-Programmieren lernen gefragt, oder?
Ah, der ist auch KD North gewesen.
Okay.
Ja, was willst du denn machen?
Was hast du denn gemacht?
Was hast du denn gemacht?
Was hast du denn gemacht?
Ich habe eine Idee, KD North, was du programmieren möchtest.
Weil wie gesagt, einfach zu lernen, ich lerne jetzt programmieren, ist schwierig immer.
Weil da fehlt einem so ein bisschen auch die Motivation zu.
Meistens kommt ja die Sache, ich will jetzt programmieren lernen daher,
entweder weil man es für die Schule machen muss, dann hat man da keinen Spaß dran.
Oder aber oftmals kommt es ja daher, dass man sagt, ich muss jetzt programmieren lernen,
weil der Stein des Anstoßes quasi irgendein Problem ist, was man hat.
Oder irgendwas, was man gerne machen würde.
Ja, wenn man zum Beispiel sagen würde, hey, ich würde gerne eine Webseite machen für XY, keine Ahnung, für irgendwen.
Und wenn das quasi das Ziel ist, dann ist natürlich klar, dann bringt es nichts, wenn man irgendwie Bash, Python, Ruby, sonst was,
wobei zum Teil, macht, sondern dann sollte man sich schon mal HTML und JavaScript angucken.
Ja, also KD North, was willst du denn machen?
Hast du schon irgendeine Idee?
Kann ich dir sagen, was du dir am besten für eine Sprache angucken solltest?
Ach so, die Story mit dem Typen in der Bahn, ja, das wollte ich ja auch noch erzählen, genau.
Also der Dude hier auf, guck mal, letztens in der Bahn.
Also die Story dazu muss ich ja noch kurz davor erzählen.
Ich habe in der Bahn gesessen, habe gepennt.
Auf einmal denke ich mir so, Alter, hier riecht es irgendwie komisch.
Irgendwas riecht hier komisch, ne?
Und dann mache ich so die Augen auf, gucke rum, sehe nichts.
Und auf einmal, ey, auf einmal.
Auf einmal gucke ich neben mich.
So hier, gucke ich neben mich.
Und dann sitzt der Dude neben mir.
Hier.
So, und betet.
Er ist einfach am Beten gewesen neben mir.
Ich weiß nicht, wie ich den Scheiß groß machen kann, weil Twitter suckt.
Der Typ sitzt neben mir und betet.
Guckt euch mal die ekligen Füße an, Alter.
Oh, also ich habe keine Ahnung, ob er wirklich betet.
Äh, sieht so aus.
Du musst dir das mal überlegen, ey.
Ich meine, erstens auf den Stühlen und dann mit den nackigen Füßen und dann auch Stingefuß, ey.
Der Typ ist ins Meme-Port.
Alter, das wäre echt eklig, ey.
Das hat übelst gestunken, ey.
Du hast Glück, dass keine Pumpe in seinem Kopf war.
Arnele.
Ne, der Typ, der hat so einen fertigen Eindruck gemacht.
Der hätte sich wahrscheinlich schon lange davor in die Luft gesprengt.
Der wäre so gar nicht so weit gekommen.
Axel FPS, Handreveal, sieht man meine Hand?
Ja, man sieht meine Hand!
Ja, Hand, Handreveal.
Handreveal.
Pock, Alter.
Handreveal.
Sind das nicht diese Weiberschuhe, die alle mit da tragen?
Psychologische, Psycho, äh, du weißt, wen ich meine.
Ähm, wahrscheinlich.
Ich glaube nicht, dass der Typ so viel Kohle hat.
Der hat bestimmt irgendwo einfach Schuhe mitgenommen.
Entweder geklaut oder mitgenommen, die rumstanden.
Also...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
Ich weiß, dass C++ eine mächtige Sprache ist und ich finde sie auch ziemlich interessant,
aber was kann man als Anfängerprojekte machen?
Ähm, C++ ist zum Einstieg scheiße.
C++ ist...
Ich weiß, das werden viele Leute jahrelang C++ machen anders sehen.
Und auf diesem Niveau ist die Sprache auch nicht schlecht.
Aber C++ ist keine schöne Sprache in dem Sinn.
Es ist so ein taktisch Servier an vielen Stellen, es hat viele Anlasten dabei und das wird auch kein C++-Fan bestreiten können, dass da viele Anlasten dabei sind.
Du hast viele Konstrukte mit Doppelpunkt, Doppelpunkt und irgendwie so komische Dinger und C++-Leute neigen auch gerne dazu, alles abzukürzen.
Also hübsch ist es nicht, dazu kommt, dass wenn du nicht aufpasst und C++ nicht richtig modernes, auch ordentliches C++ lernst, dir auch relativ schnell selbst in den Fuß schießen kannst und auch wirst.
Auch das Library-Ökosystem ist in C++ Servier.
Prinzipiell muss man sagen, für C und C++ gibt es natürlich unglaublich viele Sachen, vor allem alte Sachen, neue Sachen nicht mal so richtig, zumindest nicht so viel.
Aber selbst da einfach mal in der Library einzubinden, ist teilweise schon gar nicht so einfach.
Und vor allem das Ganze zu finden.
Es gibt ja keine ordentliche Paketverwaltung für...
Also ich finde C++ ist zum Einstieg scheiße.
Was man damit machen kann?
Na gut, du kannst...
Tja, was macht man als Einsteiger am besten mit C++?
Ganz ehrlich, da fällt mir jetzt nichts Gescheites zu ein.
Du könntest mit...
Du könntest...
Du könntest Qt lernen.
Das ist ganz gut.
Du könntest Qt-GUIs machen.
Ist für mich das beste Cross-Plattform-GUI-Framework.
Origin hat übrigens auch Qt drunter.
Ob das jetzt ein gutes Beispiel ist, weiß ich nicht.
Qt ist das beste GUI-Framework, finde ich.
Cross-Plattform.
Wenn nicht sogar das beste überhaupt.
Also ich finde das in sich ziemlich cool.
Also QML, nicht Qt-Forms oder wie es heißt.
Assembler-Beste, naja.
Qt.
Ja, tatsächlich.
Man spricht es so aus.
Aber Qt ist wirklich schön.
Nimmt einem auch vieles Nervige von C++ ab.
Soll ich irgendwann mal das Meme-Tool Cross-Plattform machen, dann wird das GUI auf jeden Fall auch Qt.
Qt ist super.
Also mit DirectX zusammen...
Eher weniger.
Mit OpenGL zusammen ganz gut.
Deswegen ist auch...
Das erste, was man für Qt machen muss, also der Witz ist ja, man kann einstellen, dass Qt unter Windows mit DirectX laufen soll.
Läuft aber kacke.
Wobei ich mir gar nicht sicher bin, ob es Native DirectX-Unterstützung hat.
Was besser ist, das muss man sich mal vorstellen, wie fail das eigentlich ist.
Wenn du Qt startest und sagst quasi...
Ja, bei deinem Konfigurationscode...
Sagst du, er soll Angle verwenden.
Wisst ihr, was Angle...
Warte mal, Angle, hieß das Angle?
Ich glaube schon, wisst...
Gucken wir mal.
Das ist eines der abgedrehtesten Sachen überhaupt.
Ja.
Wenn du Qt mit Angle laufen lässt, ist das richtig schnell.
Angle ist ein On-the-Fly-OpenGL zu DirectX-Übersetzer.
Also sprich, Qt läuft besser mit...
Unter Windows.
Unter Windows.
Qt läuft selbst mit DirectX.
DirectX unter Windows, scheiße.
Direkt mit OpenGL, scheiße.
Qt läuft gut unter Windows, richtig gut.
Mit OpenGL zu DirectX-Übersetzer dazwischen.
Da läuft es aus irgendwelchen Gründen gut.
Keine Ahnung.
Warum?
Und dann am besten auch nur DirectX 9.
Aber so ist das halt mit Cross-Plattform-Zeug.
Da musst du dich halt oftmals mit Dingen rumschlagen,
die du mit der jeweiligen Technologie, die auf der Plattform zu Hause ist, nicht machen musst.
C++ ist der Qt-Creator.
Der Qt-Creator ist auch...
Der Qt-Creator ist auch die beste, freie C++-IDE, finde ich.
Den kannst du auf jeden Fall verwenden für C++.
Der Qt-Creator ist wirklich gut.
Aber stehen sie nicht sogar drauf?
Ich hatte ihn zumindest mal drauf.
Oder einfach Elektron nehmen.
So ist es.
Oder aber in Zukunft vielleicht Flutter.
Aber aktuell ist es so, dass es neben Qt keine ernstzunehmende...
Native-Cross-Plattform-GUI-Technologie gibt.
Gibt es nicht.
GTK kannst du komplett in die Tonne kloppen, was das angeht.
Also das ist Linux-Knome fertig aus.
Mehr nicht.
Wenn es ein bisschen aufgeblasener sein darf und ein bisschen mehr hipster und neuer, dann Elektron.
Oder aber vielleicht wirklich demnächst Flutter.
Voll zäh.
Matt, VLC ist das Beste.
Alternativ auch M-Player.
Aber VLC ist das Beste.
Okay, Leute.
Also.
Wisst ihr was?
Ich hole mir nochmal kurz was zu trinken.
Und dann schwätzen wir nochmal.
Wir können noch 15 Minuten labern.
Dann ist es 23 Uhr.
Dann gehe ich pennen.
Ich bin müde.
Den ganzen Tag Broggers schlaucht.
Also wenn ihr noch was wissen wollt oder noch irgendwelche Themen habt.
Schreibt es in die Kommentare.
Schreibt es in die Kommentare.
Schreibt es in die Kommentare.
Schreibt es in die Kommentare.
Schreibt es in den Chat.
Ich gucke es mir gleich an.
Ich hole mir noch kurz was zu trinken.
Ich habe einen übel trockenen Hals.
So.
Ups.
Falscher Knopf.
So.
Gibt es noch irgendwas?
Musst du am Wochenende arbeiten?
Nein, muss ich nicht.
Und auch am Montag nicht.
Das ist was sehr, sehr nice ist.
Ich weiß gar nicht mehr, wie ich es ausgehalten habe, früher überhaupt 5 Tage die Woche zu arbeiten.
Äh.
Stuhlmocker.
Ja, du kannst ja mal in die History gucken.
Ich habe relativ viele Programmier-Streams gemacht.
Ich habe relativ viele Programmier-Streams gemacht.
Auch in der Vergangenheit.
Du kannst auch beim Archiv, beim Sibaro gucken, im Archiv.
Ich habe eigentlich so die letzten Monate eher so 50-50 Gaming und Programmieren gemacht.
Und in letzter Zeit eigentlich hauptsächlich Programmieren, weil es keine Games gibt, die mir gefallen.
Oh, Mods sind wieder da.
Köpfe einziehen, ey.
Hat sich seit dem letzten Serverraum-Video was an deinem Setup geändert?
Noch nicht.
Läuft noch alles so, wie ich es da gezeigt habe.
Sieht dann auch ziemlich genauso aus.
Aber ich werde demnächst ein bisschen umbauen.
Der Server kommt wahrscheinlich weg, weil mir das ein bisschen zu viel Single-Point-Ophelia ist.
Der macht ja alles, ja.
Von TV-Aufnahme bis NAS, bis Internet-Router.
Der macht ja alles, das ist der Server, ja.
Die 4AE-Kiste.
Ich habe mir jetzt so ein Mikro, da habe ich letztens glaube ich schon mal gezeigt hier.
Ich habe mir so einen Mikrotik-Router gekauft.
Der macht da ein Internet-Gedöns.
Und WLANs.
Und da hast du nicht gesehen, das was jetzt die OpenSense-VM auf der Kiste macht.
Das wird auch eine extra Kiste.
Und Heimautomatisierung und TV-Aufnahme-Zeug wird auch eine extra Kiste.
Aber halt Low-Power-Stromverbrauch sparen.
Und ich hoffe, dass ich dann so ungefähr auf die Hälfte vom Verbrauch komme, wie es jetzt ist.
Aktuell braucht es komplette Rack.
Komplett.
Also sprich mit USB.
Und Server mit Switchen, mit Unity-Media-Mode, mit Fritzbox für die Telekom.
Also auch mit dem 10-Gigabit-Switch braucht es ungefähr 100 Watt Eidel.
Das ist nicht viel.
Also wer schon mal vor einem ordentlichen Rack gestanden hat, wird sich kaputt lachen bei dem Teil.
Was ich hier stehen habe.
Das ist nicht viel.
Aber trotzdem 100 Watt sind 100 Watt.
Die einfach nur da sind.
Und fangt mir jetzt bitte nicht an mit Watt pro Sekunde.
Da hatte ich letztens erst wieder eine riesen Diskussion.
Weil es gibt Leute, die haben da kein Verständnis für, dass es nicht pro Sekunde ist.
Sondern dass es schon eine Einheit ist, die quasi Energie pro Sekunde ist.
Und dann nochmal pro Sekunde ergibt.
Egal.
Anderes Thema.
VS Code oder Sublime Text?
Ja.
Das ist eine gute Frage.
Früher hätte ich immer gesagt.
Also eigentlich.
Wenn es rein ums Editieren.
Geht, würde ich sagen Wim.
Ich hätte auch lange Zeit gesagt, wenn es um Editieren plus extra Wurst geht.
Emax.
Allerdings ist die Emax Community mittlerweile deutlich langsamer als die anderen Communities, was neue Sachen angeht und was Weiterentwickeln angeht und was wichtige Features angeht.
So blöd es sich jetzt anhört.
Es kann nicht sein, dass ein Editor 2019 immer noch keine Emojis kann.
So doof das klingt, das braucht man eigentlich nicht.
Aber das ist ein gutes Beispiel dafür.
Und.
Deswegen würde ich sagen rein Editor, wenn man sonst nichts anderes außer editieren möchte.
Was man das, was was eigentlich der häufigste Fall ist, ja, wenn du auf dem Linux System unterwegs bist, willst du einfach nur schnell was editieren und brauchst keine großartigen zusätzlichen Dinger.
Dann würde ich sagen Wim.
Ansonsten muss ich sagen mittlerweile Visual Studio Code.
Früher hätte ich gesagt, Sublime Text.
Visual Studio Code.
Ist schnell genug.
Es kommt natürlich an den Speed, nicht an Sublime Text ran.
Nicht bei Ansatzweise.
Aber Visual Studio Code ist schnell genug und hat halt den Vorteil von dem saumäßig aktiven Plugin Ökosystem.
Allein schon dieser Live Surfer ist Gold wert, mit dem wir immer die Seiten previewed haben.
Was machen die Aktbilder auf dem Dachboden?
Jetzt hast du schön ausgerückt, dass du Aktbilder anscheinend Nacktbilder geschrieben hast.
Die sind nicht mehr.
Auf dem Dachboden, die sind, ähm, doch, die sind wieder auf dem Dachboden.
Die waren erst im Schuppen nebendran und jetzt sind sie wieder auf dem Dachboden, weil es da reingeregnet hat und ich wollte, dass die Bilder kaputt gehen.
Was ist eigentlich aus dem Freitag frei für YouTube geworden?
Mach ich doch, bloß dass es Montag ist.
Hast du eigentlich mal wieder Battlefield 5 gespielt?
Ja, habe ich, aber es ist nicht mein Game.
Den Server noch nicht ins Rack eingegliedert, nur da steht immer noch oben drauf.
Das hat ja auch damals einer geschrieben.
Unter einem Video, dass es keine allzu gute Idee ist, den ins Rack zu stöpseln und da habe ich mir gedacht, der hat eigentlich recht.
Blinkt dein Klo noch?
Nein, das blinkt nicht mehr.
Da habe ich die Filter gewechselt.
Dass das, dass mein Klo, dass der Hersteller für mein Klo ne Brandwarnung rausgegeben hat, habe ich euch erzählt, oder?
Hast du nur noch eine 32 Stunden Arbeitswoche?
Äh, ich weiß gar nicht, wie viel es ist.
Ich glaube sogar noch ein minimal weniger.
Ja.
War nämlich vorher auch schon keine 40, war 87, äh, äh, 37,59 oder so, ganz komisch war das.
Also kein 10 Gigabit mehr.
Ja, den 10 Gigabit-Switch werde ich wahrscheinlich behalten.
Den kann ich auch schlecht verkaufen, weil ich habe ja Custom-Lüfter drin und ein bisschen umgebaut.
Wie backupst du deine Daten mit Borg-Backup?
Welche Programmiersprachen beherrschst du?
Das müsste man eigentlich auch mal als, ähm...
Als Command im Chat machen, weil das wird fast jeden Stream mehrfach gefragt und ich muss mir immer übelst in mich gehen, dass ich nichts vergesse, also fangen wir mal an.
Also fangen wir mal an, äh, C-Sharp, Ruby, Python, halbwegs, ähm, ich kann nicht mehr denken, äh, keine Ahnung, 6, 7 Stücke oder so, ähm, Bash, Groovy,
äh, JavaScript, äh...
Ich habe bestimmt noch das eine oder andere vergessen, aber ich kann echt nicht mehr nachdenken gerade.
Ja, Qt mit C++ kriege ich auch noch gebacken.
Ähm, PHP kriege ich auch noch hin, wenn es sein muss.
Jetzt hört man gerade nichts anderes bei einem.
Ah ja, PowerShell, haha, das zähle ich mal nicht auf.
SQL kriege ich auch noch hin, weil das kann man eben wirklich als Programmiersprache durchgehen lassen.
Akronis sagt, Sibaro.
Also okay, für Windows vielleicht, für Windows vielleicht.
Aber ansonsten, ich nehme nur Borg Backup.
Wie wichtig ist eigentlich Mathe beim Programmieren?
Das kommt ganz drauf an, was du machen willst.
Das kommt wirklich ganz drauf an, was du machen willst, in welchem Bereich.
Jetzt hier bei dem Zeug, was wir hier machen, so ein bisschen Webkram und, und, das ist gar nicht...
Wenn du da irgendwie bei Machine Learning dabei bist, dann...
...sieht das schon wieder ganz anders aus.
Oder auch bei 3D-Geschichten.
Was, erzähl die Klogeschichte nochmal.
Äh...
Achso, die, dass es brennen kann.
Ähm...
Ja, der Hersteller hat Bescheid gesagt, dass...
Das ist jetzt ein Jahr oder so her, da hat der Hersteller Bescheid gesagt, dass das Klo anfangen kann, Feuer zu fangen.
Das hier.
Hab's da nicht noch ein Pro oder so?
Das da, genau.
Und ähm...
Man sieht's irgendwo...
Man sieht's nicht.
Also hier neben...
Das ist das Richtige eigentlich.
Ähm...
Hier neben ist so ein...
Nicht der Aufsatz.
Ich weiß gar nicht, ob das das 9000er war.
Ich hatte doch mal irgendwo ein Video gemacht.
8000 plus.
8000 plus.
Ja, genau, hier sieht man's gut.
Hier neben...
Kann man aufmachen und da ist Technik-Zeug drin.
Hier ist die Fernbedienung drinne.
Äh, da ist Technik-Zeug drinne.
Und es war wohl so, dass ähm...
Ein Bauteil, was die Spülflüssigkeit für zum Schläuchereinigen intern verteilt, das war porös und deswegen konnte quasi äh...
Entzündbare Reinigungsflüssigkeit auslaufen.
Entzündbare Reinigungsflüssigkeit auslaufen.
Und hier neben reintropfen und hier ist ja unten dann auch noch Lüfter, Heizung und sonst was und dann da reinlaufen und sich entzünden und das Klo konnte dir abfackeln.
Ja, das war das Problem da dran.
Da du gerade so gerne Fragen beantwortest, in letzter Zeit schon mal Wine plus DXVK bzw. Proton getestet?
Nein, hab ich noch nicht.
Soll aber gar nicht so übel sein.
Hast du schon mal groovy Pipeline-Skripts mit Jenkins gemacht?
Nein, hab ich nicht.
Für Jenkins gemacht?
Nein, hab ich nicht.
Wir haben echt ein Command fürs Klo, geil.
Haha, hast du jetzt ein anderes Klo?
Ne, da kam ein Typ vom Hersteller und hat es repariert.
Nachdem ich auf Twitter flayen musste.
Äh, Maripro95, es ist schwierig Informatik zu studieren ohne Programmieren zu lernen.
Irgendwelche Tipps?
Ja, der einfachste Tipp ist, nicht Programmieren lernen zu wollen.
Sondern quasi was bestimmtes machen zu wollen, wozu man programmieren können muss, falls man das jetzt verstanden hat.
Na, also ich meine, wenn du sagst, du machst Richtung Telekommunikation, könntest du zum Beispiel mal einen VoIP-Klein selbst basteln.
Natürlich nicht komplett selbst basteln, schon ein paar.
Weil das alles selbst basteln ist natürlich bei SIP und bei VoIP viel zu übertrieben.
Aber sowas könnte man ja mal machen.
Wenn du sagst, hey, das ist was, was dich interessieren würde, dann suchst du dir die passende Technologie aus, mit der man das machen könnte.
Wenn man damit rangeht und sagt, ich hab keinen Bock auf Programmieren und muss Programmieren lernen, ist schlecht.
Es ist immer besser, wenn man sich überlegt, was könnte man dann cooles machen und sich dann das passende dazu raussucht, was man dazu braucht, es zu machen.
Ganz ehrlich, hast du die Arschdusche vom Klo mal benutzt?
Klar, immer.
Das Beste, du kannst sogar heizen.
Ja, kannst sogar heizen.
Ja, kannst sogar heizen.
Guck, da, da sieht man es.
Das kommt dann hier rausgefahren und sprüht dir warmes Wasser an den Hintern.
Da hier, da sieht man es doch gut.
Das ist super, viel angenehmer als mit Klopapier.
Natürlich brauchst du immer noch Klopapier, musst einmal noch trocken machen danach, aber ansonsten.
Also, was ich nicht verwende, ist den Föhn.
Den Föhn verwende ich nicht.
Das hat ja hier, hier neben ist ein Föhn und hier ist Wasser.
Aber den Föhn verwende ich nicht, nur das Wasser.
Ja, das ist gut.
Klopapier, trocken und gut ist.
Kann das Klo auch das Verhalten des Benutzers auswerten?
Habe ich noch nichts zu gefunden.
Ja, und eine serielle Schnittstelle könnte es haben.
Auf der anderen Seite sind ein paar Anschlüsse.
Es könnte eine serielle Schnittstelle haben.
So.
Den könnte man mal hosten.
Ich habe in letzter Zeit keine Leute mehr gehostet, weil ich keinen gefunden habe.
Zum Hosten haben wir irgendwas.
Weil ich folge eigentlich fast nur englischsprachigen Channels.
Ich würde ganz gerne ein paar deutschsprachige hosten, aber da kenne ich keine.
Oder halt.
Irgendwas Kleines.
Es bringt jetzt nichts, wenn ich irgendwie Dance Gaming oder Gronkh oder so hoste.
Wenn das serielle Schnittstelle kann, kann das sogar Internet of Things.
Bezüglich Heimautomatisierung Internet of Things bin ich gerade dran, dass meine Türklingel intelligent wird.
Aber dazu muss erst noch die Kamera kommen.
Die ich mir bestellt habe.
Eine Vandalismus.
Äh.
Eine Vandalismusgeschichte.
Schützte.
Äh.
Gegengespräch.
Anlagen.
Kameram.
Der Krieger ist gerade online.
Wie viele Leute gucken eigentlich beim Krieger auf Twitch zu?
Was spielt der denn?
Casino.
Bäh.
Also ich weiß, das ist ja quasi seine, sein Ding so, aber Casino.
Casino-Streams hoste ich nicht.
Ich finde, das ist sowas, das wage ich auf Stream nicht.
Glücksspielzeug muss es eigentlich meiner Meinung nach nicht auf Twitch geben.
Glockens HD.
Wer weiß, was da drauf läuft?
Ein Linux wahrscheinlich.
Dann wird da wahrscheinlich auch Docker drauflaufen.
Gab's da nicht das Montana Black Drama?
Ich hab keine Ahnung.
Ich verfolge das überhaupt nicht.
Ich verfolge das überhaupt nicht mehr.
Ich guck auch kein deutschsprachiges Youtube mehr oder sonst was.
Also, kannst du voll knicken.
Warte, wen soll ich hosten?
Zeig mal.
Boah, ich bin übelst kaputt.
Ja, das ist aber englischsprachig.
Ich würde gerne jemand deutschsprachiges hosten.
Also ich weiß echt nicht, wen ich hosten soll.
Ach guck mal, Triax ist wieder entbannt. Nice.
Ja.
23. Samstag.
Ja, da merkt man, wenn man alt wird.
Dann hosten wir jetzt keinen.
Ich geh jetzt.
Ich geh jetzt off.
Das Problem ist, ich hab jetzt ja noch,
dadurch, dass ich jetzt hier so lange gesessen hab,
jetzt hab ich auch noch Hunger.
Aber jetzt noch was zu futtern ist ganz,
ist der Teufel, ja.
Warum hat Kaboom
eigentlich versucht Kontakt zu dir aufzunehmen?
Wie das klingt.
Das ist irgendwie
Geheimnis-Stelzerei.
Ja, zum Essen gehen.
Da hast du wieder was futtern gehen können.
Vielleicht
kriegen wir es ja dann sogar auf die Reihe,
was aufzunehmen.
Ich guck mal, was für deutsche Channels.
Sprachige Channels.
Ja.
Was macht er denn? Die Bastelnacht.
Ist das Tio?
Sieht übelst aus wie Tio.
Ne, doch nicht.
Doch, der sieht,
ich find, der sieht Tio schon ein bisschen ähnlich.
Ähm, was haben wir sonst noch auf Deutsch?
Ja, Kategorien.
Filter.
Wie kann man programmieren lernen effektiv?
Warst du grad weg?
Ich hab doch dein Zeug schon komplett
ausportet.
Weiß nicht, irgendwie ist da...
Da haben wir ein paar hotte Gamer-Grills,
die wir hosten können. Keine Ahnung, ich weiß nicht,
wen ich hosten soll.
Ah, Weep-Zeug.
In eines Deutschen gibt's der
WPF-Twitch-Chat-LED-Controller programmiert.
Ihn hier?
Oh, das sieht advanced aus.
Das sieht auf jeden Fall
nicht so billig aus,
wie mein Webfrontend.
Ah ne, ich bin gar nicht eingeloggt.
Leute, keine Ahnung.
Ich bin übelst im Arsch.
Ich mach jetzt Schluss.
Ich hoffe, euch hat's gefallen. Morgen machen wir das
Tool für
Hardware-Rad fertig.
Da fehlt dann immer viel.
Aber schick.
Ey, die Version schreibt man nicht, gefällt mir nicht.
Oh, die wollen's aber...
Das Trommelgrill!
Das Original ist immer noch am besten.
Orchestromix.
Das Original ist immer noch am besten.
Also, Leute.
Ich hoffe, euch hat's gefallen.
Bis denn.
See you.
Easy.
