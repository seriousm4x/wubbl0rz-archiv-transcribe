So, da ziehe ich FIFA-Packs, wer zieht keine FIFA-Packs?
Moment, Teams hat wieder mal ein Mikro festgestellt, ich merke das sofort.
Ne, um ehrlich zu sein, trotz Kappa, ja, ich weiß, aber ich habe in meinem Leben noch nicht einen FIFA-Pack gezogen.
Ich weiß gar nicht, wie das geht.
Und ich habe in meinem Leben, das ist jetzt ungelogen, ohne Scheiß, ich habe noch nie ein FIFA gekauft.
Ich habe auch noch nie ein Pro Evolution Soccer, falls es das noch gibt, gekauft.
Ich habe noch nie ein Fußballspiel gekauft.
Das einzige Fußballspiel, was ich habe, ist FIFA, frag mich nicht, 2015 oder irgendwie sowas, weil, ja, ich glaube die Xbox One, die ich gekauft habe, war ein FIFA-Bundle, weil es das einzige war, was es gegeben hat.
Oder war es die, oder war es, ne, die 360, können auch die 360, ach, keine Ahnung mehr.
Who cares, ja.
So, hört ihr mich überhaupt?
Ja, scheint zu funktionieren.
Ex-Co-Mission.
Moment, äh, Moment, äh, langsam, ich kann nicht, ich kann nicht lesen.
Ich, ich, es war heute echt anstrengend auf der Arbeit.
Muss ich ein bisschen, ein bisschen entspannen.
Also, hallo Max, habe gerade an dich denken müssen, als ich ein Raspberry Pi Kit auf Amazon gesehen habe.
Ah, nice, passt doch, wunderbar, gleich in den Stream, so muss das sein.
Aber wenn du Amazon hast, wenn du Amazon hast, da hast du bestimmt Amazon Prime, oder?
Weiß ja nicht, ob ich euch schon erzählt habe, was wir machen.
Was man mit Prime so machen kann auf Twitch.
Mit Prime könnt ihr nämlich einen Streamer eurer Wahl, das muss ja nicht ich sein, aber ich hätte natürlich auch nichts dagegen,
einen Streamer eurer Wahl einmal im Monat unterstützen.
Einen Prime-Sub.
Kostet euch nix.
Außer Prime, was er eh schon monatlich Bezos überweist.
Calimero09, danke schön für den Prime-Sub, das funktioniert immer.
Jetzt ist die Abo-Falle durch.
Flamongo am Start.
Da hüpfelt der Sub.
Ja, so sieht's aus.
Mal gucken, ich streame ja heute wieder in dieser neuen Kategorie auf Twitch.
Sehen wir mal, Lautstärke, ja, Musik kann man ein Ticken, ein Ticken leiser machen.
Oh, vielleicht, ja.
Zu leise.
Können sich wieder nicht entscheiden.
Ja.
Wollte nämlich mal was gucken.
Die Kategorie ist ja relativ neu.
Was ist denn hier eigentlich so am Start?
Sind das jetzt nur German-Streamer?
Ne, das ist ein Internet.
Die Kategorie, das streamt keiner mehr, oder?
Komm, noch was am Start.
Ersten Tag in dieser Kategorie waren relativ viele Leute am Start und jetzt gibt's nix mehr.
Was ist das?
Warum liegt die halb nackig auf dem...
Egal, ich will's gar nicht wissen.
Ich will's gar nicht...
Binary Search.
Was genau wird da gesercht?
Ich wusste gar nicht, dass man so programmiert.
Nun gut.
Soll jeder machen, was er Lustig ist?
Alles klar.
Ich wollte nur mal gucken, was hier sonst noch abgeht.
In der Kategorie.
Brain-to-Computer-Interface.
Bestimmt.
Das wird's sein.
Die hat vielleicht Twitch-Chat.
Twitch-Chat-to-Computer-Interface.
Twitch-Chat-Program...
Der nächste Schritt ist da nicht.
Twitch-Chat-Plays-Pokémon.
Die aktuellen Pokémon-Games müssen so schlecht sein.
Ich glaube, man sollte mal Twitch-Chat-Programs-Pokémon machen.
Da ist noch einer anders.
Das Aquarium erinnern.
Twitch-Chat...
Twitch-Chat...
Nee, Fish-Plays-Pokémon.
Wo dann...
Wo dann...
Kennt das noch jemand?
Wo dann ein Aquarium war.
Und der Twitch-Chat musste irgendwie den Fisch...
Irgendwie...
Jibaden in der Ecke zu schwimmen.
Und wenn der Fisch lang genug in der Ecke gestanden hat,
dann hat dann der jeweilig dazugehörige Controller-Button wurde geklickt.
Fisch-Plays-Pokémon war das noch.
Ich weiß gar nicht, ob die das durchgespielt haben am Ende.
Ja, Abo-Falle.
So muss das sein.
Dankeschön für den Sub.
Mac Silbermann.
Die China-Chinesen sind heute gar nicht am Start.
Wir basteln heute weiter.
Weil wisst ihr, es wird kalt.
Guckt mal, Wettervorhersage Hanau.
Guckt euch das mal an.
Es wird richtig cold AF.
Gut, die Schweizer im Chat, die sagen, wie ein Juxa, 10 Grad.
Aber es wird kühl.
So langsam aber sicher, müsste ich vielleicht mal meine Heizung steuern können über mein Hormuz.
Und ich hab mir heute was überlegt.
Eigentlich könnte ich die Heizungssteuerung noch viel mehr Big Brain machen.
Sag mal, gehen die Emotes in der Überschrift heute nicht?
Oder ist einfach mein Browser auf der anderen Seite kaputt?
Da müsste es ein Hackerman-Emote...
Hallo, Twitch, laden?
Kein Bock.
Doch, die Emotes gehen.
Ich glaub, mein Browser ist einfach kaputt.
Ja.
So sieht's aus.
Ja, also wie ihr seht...
Das Problem ist, ich hab ja neue Badges am Start.
Okay, da sag ich jetzt nochmal kurz was zu.
Ich hab ja neue Sub-Badges machen lassen.
Sehen so aus.
Neue Sub-Badges.
Das Problem ist nur...
Twitter, come on.
Das Problem ist nur, dass die Sub-Badges in klein skaliert Kacke aussehen.
Die sehen wirklich nicht gut aus.
Die sehen viel zu klein.
Kleinteilig aus.
Das ist aber nicht schlimm.
Weil die Designerin hat das schon angepasst.
Aber die ist grad dabei, das anzupassen.
Wir machen einfach den Ausschnitt größer und machen hier das Gesicht ein bisschen anders.
Dass dann quasi weniger Details auf so eine kleine Fläche kommen.
Weil, dürft ihr nicht vergessen, ich glaub die kleinen Emotes sind 16x16 oder so.
Der goldene Keks sieht böse high aus.
Ja.
Stimmt.
Und...
Vape Nation.
Leute, soll ich auch sagen, mein Halsweh ist besser.
Und es ist immer noch kein Corona.
Zum Glück.
Es hat sich jetzt ja so angehört, als warte ich endlich drauf.
So nach dem Motto, fuck, es ist immer noch kein Corona, Alter.
Aber es wird eh schwierig mit Corona bei mir.
Ich bin jetzt doppelt geimpft seit einem Monat.
Oder zwei Monate.
Eine Weile schon.
Die Antenne am Arm ist immer noch da.
Und ich hab einen Test gemacht, der war negativ.
Das heißt also,
dass das Corona ist, ist deutlich, es ist wirklich sehr unwahrscheinlich.
Kann ich gleich mal so sagen.
Ich muss hier vorher nochmal was, was wir heute machen.
Also ihr seht ja, es wird langsam kühl.
Und ich muss jetzt mal meine Heizung, meine Heizung steuern können.
Und ich hatte Big Brain Idee, was ich machen könnte.
Wenn die Steuerung von meiner Heizung funktioniert, über meinen Home Assistant,
dann kann ich übrigens mal anschalten nebenbei.
Dass das jetzt ganze, dass der ganze Krempel mal hochfährt.
Hier, Home Assistant vor allem.
Home Assis...
Nein, nicht die Qt4M, die Home Assistant vor allem.
Qt4M brauchen wir jetzt nicht.
Und die Stream vor allem.
Mein Ace, dankeschön für den Sub.
So.
Und ich habe mir folgendes überlegt.
Ich könnte eigentlich, nachdem ich...
Überall Temperatursensoren habe, könnte ich eigentlich die Heizung komplett automatisch machen.
Ich könnte nämlich einfach sagen, hey, sagen wir mal, wenn es im Flur unter Acht ist,
wenn es unter 18 Grad wird und es nicht Sommer ist, dann mach einfach die Heizung an.
Und wenn du die Heizung eingeschaltet hast, dann schalte die, dann schalte den Status für einen weiteren Tag nicht um.
Weil man muss da immer so eine kleine, so ein kleines, kleines Security Feature,
wie so der Security Feature, das ist ein doofes Begriff.
Man muss da immer so eine kleine, äh, ja, Sperre einbauen,
dass es nicht im Zweifelsfall sich fünfmal pro Sekunde an- und ausschaltet.
So ein Cool-Down.
Ja.
Genau.
Global Cool-Down.
Aber auf offene Fenster achten.
Ja, das ist das Schöne ist, ich habe ja auch Fenstersensoren.
Ich weiß auch, ob die Fenster auf sind.
Aber das ist kein Problem.
Weil er das eh nicht macht.
Wenn es einmal am Tag...
Das, da gibt es, da gibt es bestimmt, da gibt es bestimmt eine coole, eine coole Variante für, wie man das, wie man das machen kann.
Ja.
Und ihr seht, es wird kalt.
Deswegen muss jetzt wirklich endlich einmal die Heizungssteuerung gebaut werden.
Und...
Ich habe mir jetzt überlegt, wir machen es gleich richtig advanced.
Richtig advanced.
Home Assistant Thermostat.
Wir machen das richtig advanced, Leute.
Wir machen nicht einfach einen Button zum Heizung an- und ausschalten.
Wir machen sowas.
Hab ich kein Bild?
Okay.
Demo Home Assistant.
Guck mal, ob da was drin ist.
Wir machen es gleich richtig advanced.
Wir machen sowas hier.
Guck mal.
Wobei das, das nicht das Richtige ist, was ich mache.
Sowas in der Richtung.
Guck, wir machen sowas hier.
Wobei das, das, das Fail ist.
Das mache ich nicht so.
Ich mache einfach nur Heating und an- und aus.
Wir machen so ein richtiges Thermostat, wo ich einstellen kann.
Mal gespannt, wie man das dem beibringen kann, dass er das automatisch anlegen soll.
Tja, aber kommen wir mal hier zum Chat, mal schnell.
Hey Max, wie ist deine Meinung zu SAP?
Glaubst du, das ist wirklich ein Top-Arbeitgeber oder mehr Schein als ein...
Oh, das kann ich nicht einschätzen bei SAP.
Aber man darf nicht vergessen, SAP schafft es seit bestimmt 15 Jahren oder so.
Softwaretechnisch weltweit vorne mitzumischen.
Also so schlecht können die nicht sein.
Schau dir mal Simple Thermostat an.
Wobei, großer Laden an sich natürlich auch kein Garant ist.
Amazon hat nur auch nicht den besten Ruf und Amazon, da flutscht eigentlich normalerweise alles.
Was soll ich mir angucken?
Home Assistant, Simple HA.
Ne, nicht Simple.
Was?
Simple Thermostat.
Das da?
Das hier auf GitHub?
ABAP Stream, sowas werde ich nicht machen.
ABAP Stream, oder?
Kommt als nächstes FORTRAN, oder?
Ne, ich weiß, was wir als nächstes machen.
Als nächstes, wir haben letztes...
Wir haben letzten Weihnachten COBOL gemacht.
COBOL.
Wir haben letzten Weihnachten COBOL gemacht.
Wir machen dieses Mal COBOL in JavaScript.
Es gibt, es gibt COBOL...
Hab ich letztens gesehen, es gibt einen COBOL zu JavaScript Compiler, dass du COBOL im Browser verwenden kannst.
Nein, das stimmt nicht.
Kein Compiler.
Nein ein COBOL zu JavaScript Transpiler oder sowas.
Da kannst du quasi COBOL deine Webseite in COBOL programmieren.
RUST.
Ja, RUST müssen wir echt mal machen.
Oh де Mist...
Ich hab RUST...
Ich hab RUST ganz am Anfang verwendet, als es noch nicht mal eine Stable Version hatte.
Ähnlich, eigentlich lustigerweise, wie bei TypeScript.
Ich hab die meisten Hypesachen gemacht, bevor sie Hype waren.
Dann habe ich sie irgendwie sein lassen.
Und wir machen echt mal wieder RUST.
Ich hab ganz lange nichts mehr in RUST gemacht.
Nicht mal, nicht mal.
nichts mehr in Rust gemacht
es hat mich damals aber schon
teilweise echt Nerven gekostet
weil, weil Rust hat so eine
Syntax, so Syntax, die ich wirklich
äußerst
ähm, Big Brain finde
ähm, äh, Rust
muss ich euch mal zeigen, Rust Lifetime
Syntax
die ist echt
ein schönes Beispiel
ja, sowas hier zum Beispiel
also die Rust, die Syntax ist echt
Big Brain, guckt euch das
also die Rust Syntax ist wirklich
Massive Sixthead, das hier zum Beispiel
guckt, sowas hier, das ist echt
Next Level Shit
noch schlimmer
wird es mit Return Types, die dann so
genau sowas hier, sowas meine ich, also das ist
wirklich
also, ich weiß nicht
ob sich die
Rasterfinder mit so komischen Dingern
dann gefallen getan haben, auf der anderen
Seite muss man sagen, das was ich bisher von Rust
gesehen habe ist, das ist schon
relativ konsistent, muss man sagen
also, wie gesagt, ich hab das relativ
am Anfang verwendet, da ist bestimmt ganz viel
Neues mittlerweile dabei
ähm, vieles alte
macht man so gar nicht mehr
das ist schon
ziemlich
konsistent gewesen, wenn aber auch nicht so
eingängig von der Syntax
was dann, guten Package Manager, ja, das
sieht man, was man machen kann, wenn man
sich was ordentliches
überlegt, nicht so wie bei C++
ja, wie gesagt
mehr kann ich, also, sonst kann ich ja zu S
was ich eben schon gesagt habe, mehr kann ich zu SAP nicht sagen
also, muss ja schon, muss ja schon irgendeinen Grund
haben, warum die sich so lange vorne
halten und, äh, warum ihr Kram
immer noch in so vielen Unternehmen
ja eigentlich exklusiv eingesetzt wird
wie es da ist
kann ich dir nicht sagen, keine Ahnung
in der Regel kann man aber sagen
das Gras ist auf der anderen Seite immer
grüner, wie es so schön heißt, also
ich kenne das von, von
vielen Leuten bei uns und mir geht es auch manchmal so
da denkt man sich so, ah, bei uns
läuft es kacke und
was weiß ich, bei XY läuft
es bestimmt viel besser, aber alles
was ich dann immer von Leuten höre, die woanders
arbeiten, ist, dass es da auch nicht besser
läuft, ja, also das Gras ist auf
der anderen Seite immer grüner, denkst du immer, toller wie es ist
und wenn wir Services
den ganzen Tag verwenden, wenn wir YouTube verwenden
wenn wir Twitch oder Google oder sonst was verwenden
ihr könnt davon ausgehen
dass es im Backend, im Hintergrund, was da
alles läuft, auch nicht alles rosig
ist.
Da kriegen wir bloß nichts von mit
deswegen darf man
auch nicht den Fehler machen, zu denken
die machen das alle besser
die machen das alle nicht besser
du weißt nur nicht, was sie schlecht machen
deswegen
denkst du, ah, ja, ja, das passt schon, das kann nicht passieren
wenn man dann aber
teilweise sieht, wenn dann mal irgendwelche
Sicherheitslücken rauskommen und man dann
sieht, dass irgendwelche Hersteller
1, 2, 3, 4, 5, 6
als Datenbankpasswort haben und sowas in der
Richtung, da sieht man wieder
dass es im Prinzip stimmt, was ich sage
dass die auch alle nur
mit Wasser kochen im Endeffekt
man weiß es bloß normalerweise
nicht und natürlich sagen die
immer in ihrem, also alle, in ihrem Marketingmaterial
und wenn sie dann irgendwie
Werbung machen, so, ja, bei uns Sicherheit
das höchste Ziel und bla und
hier und da, aber im Endeffekt
ist das alles der gleiche Scheiß
so
dein Arm ist nicht explodiert
das sollte doch am 10.9., warum sollte
mein Arm am 10.9. explodieren?
ach du, ach du, du meinst, weil
äh, Dings da
der, der, nee, nicht Xavier Naidoo
Attila Hildmann, das bei sich auf
Telegram geschrieben hat
ja gut, das ist klar, ja
wenn der das schreibt, dann muss das ja eigentlich
ach, der Wendler war auch, der Wendler war es, ach ja
hab ich jetzt durcheinander gebracht
das, sorry Leute
das hab ich, das hab ich
wie kann man, wie kann man das auch nur durcheinander
bringen, ja
wenn der das schreibt, dann ist natürlich schon
ganz, ganz bedenklich, dass
das nicht, wenn das nicht eingetreten ist
kann eigentlich gar nicht sein
ich mein, ist schon jemals, ist schon
jemals
was, was jemand von denen erzählt hat, nicht eingetreten
kann das gar nicht sein
also, wenn dein
hier ist nix
guter, guter Witz, den, von dem Typ hab ich
nix mehr gelesen, bis jetzt
so, was Meinungen zu Lastenheften
ja, BWL
Stonks Oldschool Softwareprojekte
Style
wie soll ich das so sagen
findest du das, Meinungen zu Lastenheften, was soll ich sagen
wie wenn, wie wenn
wenn mich einer fragt, Meinungen zu Wasserhähnen
so, komm dann
Wasser raus
ich hab wahrscheinlich zu Wasserhähnen noch mehr Meinungen
als zu Lastenheften
MinAce, oder
MinAce, ja
MinAce, doch richtig, 141
oh, das ist ein Oldschool
Call of Duty Fan, bilde ich mir ein
aus diesem Username
rauszulesen, kann aber auch
sein, dankeschön für den Prime Sub
ach ja, Security by Design, ich muss euch was
lustiges von der Arbeit erzählen gleich
wartet mal
vielleicht könnte das für euch auch relevant sein
falls ihr es noch nicht mitgekriegt habt, weil morgen
morgen
morgen, wisst ihr was morgen
Chatfrage
an die Big Brain IT Spezialisten hier
was ist morgen 16 Uhr 1
was relativ wichtiges
für das
weltweite
Internet
Feierabend, nein
was ist morgen 16 Uhr 1
wenn ihr es nicht wisst, habt ihr es vielleicht noch nicht mitgekriegt
und vielleicht solltet ihr es besser mitkriegen
Byte Strike, das ist schon mal
fast richtig zu 99%
Let's Encrypt, richtig
richtig
der Chat weiß es, da muss ich nämlich gleich
was zu erzählen, also ich guck noch mal
kurz den Chat durch, achja
Simple Thermostat sollten wir anschauen
boah
meine Augen, Alter, was ist an
was ist an dem besser
was ist an dem
an dem Thermostat besser
als an dem
ja gut, das hier ist kacke zu bedienen
per Touch, das stimmt schon irgendwo
können wir nachher mal ausprobieren
wenn ich das Thermostat da drin hab
machen wir dann gleich
also
noch mal kurz den Chat durchgehen
iih
iih
wenn ich Dialog lese, ich hab was richtig cooles auf dem
im C-Sharp
Subreddit gefunden
und zwar, oh Alter
meine Augen, ey
äh, Button
weiß gar nicht wo es ist
warte mal, ich guck mal, wenn ich das jetzt
entfinde innerhalb der ersten
warum ist Reddit, warum ist das so
sackig, warum kann das nicht einfach mal die ordentliche
Ansicht haben
Button, Button, Button, Button, nope
Endless-Scroll, shit
Button, hier
guck mal, ich zeig's euch einfach auf Google
äh
es hat einer
Windows only, aber
Windows only
es hat einer eine Library programmiert
wo man, super
jetzt hat er nicht mal ein Bild, the fuck
wo man
in der Windows-Konsole Buttons erzeugen kann
die man klicken kann
das ist irgendein, das ist irgendein
MonkaS-Windows-Shit, guckt euch das mal an
Terminal aufmachen
guck mal, Windows-Terminal
Windows-Terminal
Buttons zum Anklicken
es ist Windows only, ich hab keine Ahnung wie es funktioniert
das ist bestimmt Legacy
NT 3.1 Zeug, ja kann sein
aber ist schon irgendwie cool
wird wahrscheinlich aber sonst keiner benutzen
Amazing 1&1, danke
für den Sub, warum sollte man sich das
antun, falls sich das auf Rust
bezogen hat, äh
weil Rust ein ziemlich cooles
Konzept hat
als Programmiersprache
Rust hat nämlich keinen
Runtime Overhead für Sicherheitschecks
aber
hat einen ziemlich cleveren
Compiler, der zu
Compilzeit schon, sagen wir mal
99% der üblichen Fehler
die man sich so einfängt
äh abfängt, zum Beispiel
wenn du eine Variable
anlegst und die out of scope
geht und du danach drauf zugreifst
und solche Sachen, das lässt Rust gar nicht
erst kompilieren, das ist
abfuck hoch 10
weil du es nicht gewöhnt bist, dass der Compiler dich wegen
dem Scheiß anmeckert
aber in der Regel kann man sagen
also das habe ich damals auch als ich ein bisschen Rust
programmiert habe gemerkt, in der Regel kann man
mehr als bei jeder anderen Programmiersprache
sagen, dass
wenn es in Rust kompiliert, dass es
funktioniert, das kann dich natürlich
nicht davor schützen
dass du selbst Logikfehler gemacht hast
das ist klar, das kann ja Rust
nicht wissen, aber
unabhängig von deinen Logikfehlern
funktioniert das
also es macht exakt das was da steht
und das ganze ohne irgendwelche
Runtimechecks
dementsprechend ist es quasi
so schnell wie C
was es auch in Benchmarks wirklich ist
das ist nicht nur gelaber wie bei anderen Sprachen
das ist wirklich so bei Rust
und ist aber nicht
anfällig für die Probleme die du teilweise
mit C hast
dafür hast du eine Syntax die
wirklich nur für 150
IQ plus geeignet ist
Memory Leaks, also Memory Leaks
in Rust produzieren sind sicherlich
möglich, du kannst
bestimmt Sachen anlegen und
irgendwie trickreich, du kannst
ne Liste
machen und immer nur Sachen reinschreiben
und nie wieder was löschen, ja klar
das kannst du fabrizieren
das ist dann aber kein
Fehler in dem Sinn
so, gucken wir mal kurz weiter
Headnog, dankeschön für den Sub
warum ist das deleted?
kann man das anklicken ohne dass man
was kommt denn da?
ich trau mich das jetzt an
magst du, das ist auch noch
sowas belangloses, alter
das ist auch so ein Jepp Kock Message
das ist schön zu hören
dass das auch noch andere so sehen
jaja, es stimmt
sollte auch sein
machst du mal ein bisschen was in Go?
können wir tatsächlich auch machen
ich hasse Go nicht, das stimmt überhaupt nicht
ich bin nicht der
riesen Fan von einigen
Syntax Entscheidungen und Sprachentscheidungen
die Go
Designer getroffen haben
aber ich find Go schon in Ordnung
Go ist jetzt vielleicht nicht meine Lieblingssprache
aber wenn ich mich
entscheiden müsste zwischen was in Go
oder in C++ zu programmieren, dann wisst ihr genau
was ich nehmen würde
C Sharp
ne, dann würd ich einfach nur Go nehmen
aber nicht wieder die Windows Defender auf Linux Story
ähm, wenn doch
was müsste man dann schreiben?
Chat, ihr wisst genau, Recycle Story
aber da muss
der Chainlaw erstmal da sein für
und
genau, jetzt sind wir beim eigentlichen Thema
Let's Encrypt, morgen
ich glaub Heise hat dann einen ganz guten Artikel
zu Encrypt
die ist ja schon wieder weg
Newsticker
wo ist der Newsticker
was ist mit dem Führerschein
Digital
Moment, das muss ich mir jetzt mal angucken
das hab ich natürlich gar nicht gelesen
ja
das da
der Rüpel, Dankeschön für den 18 Monats
Hypersubscription, morgen um
30. September um 16.01
wenn ich das
richtig in Erinnerung hab, also 14
14 GMT
16
schreibt Heise irgendwie auch mal die Uhrzeit
äh
nein
ja, genau
14.01 GMT
das ist glaub ich 16.01 bei uns
läuft
das Root-Zertifikat von
Let's Encrypt aus
das sollte man sich vielleicht mal
überlegen, ob das
Auswirkungen auf einen hat
diesmal ist es aber witzigerweise
umgedreht, es sind
die Serveranbieter
die Serviceanbieter gar nicht so sehr betroffen
sondern die
Clients, also ich muss
das jetzt mal ein bisschen erklären
also, Let's Encrypt ist
eine Zertifizierungsstelle wo man sich kostenlos
Zertifikate ausstellen kann
Zertifikate sind sowas was man hier braucht
dass die Seite über HTTPS
ordentlich funktioniert, dass man hier so ein Häkchen kriegt
man braucht Zertifikate auch noch für
vieles andere, aber das ist wohl
das meist verwendete, so
früher war das so, man muss Geld ausgeben
man musste zu Komodo gehen
sag jetzt absichtlich die, die es auch schon richtig verschissen
haben in der Vergangenheit, ja
zu Komodo oder was ist noch
Symantec oder was ist noch alles an
Geo Trusts
was ist noch alles gibt an
an Zertifikate
Zertifizierungsstellen, musst du da hingehen
musst einen Zertifizierungsprozess durchlaufen
und hat ein Zertifikat gekriegt
das ist glücklicherweise mittlerweile
kostenlos möglich mit
Let's Encrypt, bei Let's Encrypt musst du
nur noch belegen, dass dir die Domain gehört
das geht über ein automatisches Verfahren
und dann kriegst du kostenlos Zertifikate
Zertifikate und das ist das
Wichtige, die von jedem Browser
Trusted sind, also
jeder Browser vertraut Let's Encrypt
dementsprechend wenn ihr
Let's Encrypt Zertifikat habt, kriegt ihr auch
im Browser hier das Häkchen oben
oder das Schloss oben und sagt euer Connection ist Secure
ja wenn ihr zum Beispiel auf meine Seite
hier geht
Dark Theme und guckt da hin
dann werdet ihr sehen, aha Zertifikat
Connection ist Secure
Valid und zwar
mein Let's Encrypt Zertifikat ist
Valid vom, ah ne ist Cloudflare
Fuck, ich habe nichts gesagt
das ist ja hinter Cloudflare, aber da würde normalerweise
Let's Encrypt stehen, wenn ich es über Let's Encrypt
machen würde
Sloty kann ich gleich mal zusagen, aber
ich muss das jetzt erstmal fertig machen
so und was morgen passiert ist
das alte Root Zertifikat
von Let's Encrypt läuft ab
das ist für Serverbetreiber
überhaupt nicht schlimm
weil euer Zertifikat bleibt weiterhin gültig
die haben Big Brain Move gemacht
bei Let's Encrypt, ich glaube hier sieht man es auch irgendwie
die haben, ich habe es
persönlich selbst nicht hundertprozentig verstanden
aber die haben es
irgendwie so gemacht, die haben ihre neue
ihr neues Root Zertifikat
abgeleitet vom alten Root Zertifikat
als es noch gültig war
und die neuen Intermediate Zertifikate
die dann quasi auch
wogegen dann quasi auch die Zertifikate für euch
ausgestellt werden, die funktionieren
weiterhin, also als Serverbetreiber ist das
kein Problem, ich hoffe ich habe jetzt kein Mist
erzählt, es ist nicht so einfach
dieses Thema, die bleiben weiterhin
gültig, das ist überhaupt nicht das Problem
das funktioniert, also das ist hier wirklich
Big Brain was die gemacht haben, die haben auch hier
ein Sonderworkaround für
Android gebaut, also das ist wirklich
nicht schlecht, also das alte, das hier
das Root Zertifikat
warum hinter Cloudflare Angst vor
DDoS beim Preisschamp, also ich habe Angst
vor DDoS, das erste was passiert ist
dass irgendwelche Leute den Preisschamp gedDoS
haben, es ist nicht
so dass ich mir das einrede oder so
das ist das erste was noch während
dem Programmieren des Preisschamps
passiert ist, also
so
das hier ist das alte
Root Zertifikat was ausläuft
eure Zertifikate gehen im Endeffekt
hier gegen die Chain, das ist kein
Ding, so, also das ist für
Serverbetreiber kein Problem, aber so wie
hier es steht, alte Clients
können die Verbindung verlieren, das heißt
wenn ihr zum Beispiel
euren Chrome
5 Jahre nicht geupdatet habt
und auf einen Webserver zugreift
versus mit Let's Encrypt Zertifikat
dann ist es auf einmal nicht mehr gültig
das ist aber nicht das Problem, keiner
hat einen 3, 4, 5 Jahre alten, was weiß ich wann
ist da reingekommen, ich sag jetzt einfach irgendwas
Chrome, das ist nicht das Problem
aber, und jetzt kommt das eigentliche
Problem, weshalb ihr vielleicht, wenn ihr
so IT-mäßig irgendwo arbeitet, auch mal
überlegen solltet, ob
das nicht auch
ein Problem ist
AsirisMax, du musst mal wirklich gucken, ob
der Issuer das ist
das ist eigentlich nicht schlimm
das kann sein, dass das nur
angezeigt wird bei dir
weil
das allerletzte Glied in der Trust Chain
noch dieses DST-Root ist
ich würde wetten
du nimmst schon das Aktuelle
mit dem Zertifikat, weil die stellen glaube ich gar keine mehr aus
wo das hier nicht drin ist
so, aber jetzt kommt
der eigentliche Knackpunkt
warum es Probleme geben könnte und sich jeder mal Gedanken
machen sollte
es geht in dem Fall nicht um Serveranbieter
wo die Zertifikate nicht mehr gültig sind, sondern
es geht um Clients
und was können Clients sein
naja, zum Beispiel, wenn ihr den Linux Server habt
mit CentOS
zum Beispiel CentOS 7
CentOS 7
ist das letzte
also das letzte so richtige CentOS
was es geben wird in der
Seite, in der quasi
dieser Linie
und CentOS 7 ist ziemlich
alt
und wenn ihr das nicht auf dem aktuellen Stand
habt und dort auf irgendwelche
Dienste zugreift, dann wird
das am Morgen nicht mehr richtig funktionieren
so und jetzt komme ich zu der Story von mir
auf der Arbeit
wir haben nämlich auch CentOS 7
so und wir greifen zum Beispiel auf jede Menge
Let's Encrypt Zertifikate zu
unsere ganzen
Cloud Services haben Let's Encrypt Zertifikate
und wir dachten eigentlich
die ganze Zeit
also was heißt wir dachten, wir dachten eigentlich gar nichts
es hat im Prinzip
gar keiner mitbekommen
ich habe es am Dienstag zufälligerweise mitbekommen
und noch ein Kollege hat es mitbekommen
ich bin drauf gekommen, weil ich den Heiser Artikel gelesen habe
und dann habe ich in irgendeiner
Wartungsarbeiten Runde
gehört
dass da was ist und da habe ich mich wieder daran erinnert
hmmm
da ist doch was
so und jetzt kommt der Hit
bei CentOS 7
also, die haben schon
lange
boah fragt mich nicht
2 Jahren oder so
haben die das neue Zertifikat verteilt von Let's Encrypt
in den
Trust Store
also ich zeige euch mal wie das aussieht
jede Linux Distribution hat hier sowas
ETCS, ich hoffe unter Arch Linux ist es auch da
ich bin mir gar nicht so sicher
hier, da, guckt
hier
das ist quasi der Trust Store
das bedeutet, dort liegen die Zertifikate drin
von den Stellen
die weitere Zertifikate
ausstellen
also sprich, alle Zertifikate die von einem dieser Stellen
hier ausgestellt wurden
vertraut euer System
da sind zum Beispiel auch so Sachen drin wie
grep x3
das ist das alte Root Zertifikat
von Let's Encrypt
und das neue
boah wie ist das
ISRG
ist da auch drin
also
in meinem lokalen Trust Store ist alles drin
das funktioniert wunderbar, ist kein Problem
aber
genau das haben die unter CentOS 7 auch gemacht
mit einem Patch ausgeliefert
es gibt plus ein Problem
und das versuche ich euch jetzt mal zu zeigen
also sprich, wenn ihr Server
administriert mit CentOS 7
und nicht innerhalb der letzten paar Tage
Patches eingespielt habt
dann habt ihr wahrscheinlich am Morgen ein Problem
wenn ihr auf Let's Encrypt Services zugreift
das wird dann einfach nicht mehr gescheit funktionieren
denn
die haben zwar das Zertifikat verteilt
bei CentOS 7
also das neue
aber
die haben eine verbuggte OpenSSL Version
unter CentOS 7
und das wusste ich bis gestern Mittag auch nicht
so
CentOS 7
Let's Encrypt
OpenSSL
ich muss hier mal kurz suchen
ich weiß nicht ob ich das jetzt direkt finde
ob hier irgendwas steht
genau
OpenSSL Version
auf CentOS 7 hat nämlich
noch OpenSSL 1.0.2
und
OpenSSL 1.0.2
hat einen Bug
wenn im Trust Store
also hier
ETC, SSL, Certs
wenn unter CentOS 7
im Trust Store das neue
Zertifikat und das alte
Zertifikat liegen
dann gibt es bei OpenSSL einen Bug
dass wenn er quasi zwei Zertifikate
für die Trust Chain
findet und eines davon
ist ungültig, dann ist es
immer ungültig, das ist ein Bug
oder weiß ich ob es ein Bug ist
oder ein Feature zur damaligen Zeit
zumindest CentOS 7
ist das OpenSSL verbuggt
und das OpenSSL
ist 1.0.2
und 1.1.0
oder es gibt keine Größe
es gibt keine neuere Version als
1.0.2 für CentOS 7
das heißt wenn ihr ein CentOS 7 habt
und wollt ab morgen Mittag
16.02 auf Let's Encrypt Services
zugreifen, gibt es einen Fehler
dass die Verbindung nicht mehr secure ist
es sei denn
ihr habt den neuesten Patch eingespielt
der kam aber auch erst vor ein paar Tagen
äh
RPM, genau
This Package muss man
aktualisieren, nur mit dem Unterschied
dass die irgendwie
hä?
da gab es vor zwei Tagen
achso ist es vielleicht hier eins davon
WTF wo bin ich denn hier gelandet überhaupt
ja hier das da
guckt es gab am 14.09
einen Patch
ist ein bisschen laut
es gab einen Patch vor
einer Woche
die den Bug folgendermaßen
löst indem sie einfach das alte
Root-Zertifikat rausschmeißt
das heißt wenn ihr diesen Patch
nicht eingespielt habt
dann wird ab morgen
eure Verbindung nicht funktionieren
von CentOS 7 System
nochmal so nebenbei angemerkt
Hi Happen, Dankeschön für den Sub
ah ne, Timeout, Massive
Jana, danke für den Sub
Moin Vettels
Winnie, danke für den Sub
6 Monate hier, Massive
Benni, danke Prime Sub
jetzt gehts ja hier Schlag auf Schlag heute
so, ähm gehst du eigentlich
in New World rein, habt deine Meinung dazu nicht mehr richtig
ähm
ne erstmal nicht
ja garantiert werde ich nicht spielen
ja
bei uns ist das witzig
bei uns hat man sich überlegt, also wir haben ja auch
wir haben CentOS 7
und da hat man sich überlegt, ach
bis der CentOS 7 Support
ausläuft, haben wir eh alles
in der Cloud
ich postchampe da jedes mal bei dieser Aussage
bin mir da nicht so sicher
ob das wirklich der Fall
sein wird
welche Thermostate benutzt du
ähm ich benutze
du meinst an den Heizkörpern
an den Heizkörpern habe ich tatsächlich
die Fritz Deck Thermostate mittlerweile
ich habe ein paar ausprobiert
die Fritz Deck Thermostate
insgesamt muss ich ehrlich sagen
das ist das einzige was ich Fritz Deck habe
aber die Dinger funktionieren von allen
Dinger, also von allen Thermostaten
die ich ausprobiert habe am besten
die machen auch einen robusten ordentlichen Eindruck
ohne das die gleich auseinander fallen
wie manches Zigbee China Chinesen Zeug
kein Ding
also
das einzige was ich davon im Einsatz habe
Fritz Deck Home Automation
aber die Dinger sind tatsächlich
gar nicht schlecht und die gibt's
manchmal auch im Angebot
da sind die
2er Pack gar nicht mal so
teuer
dafür würde ich das auch nicht kaufen
aber man muss mal gucken
manchmal gibt's Angebote
wo es dann irgendwie 2er, 3er
4er Pack oder so gibt
das lohnt sich aktuell nicht
also 45 Euro für ein Thermostat
vielleicht beim nächsten
Prime Day, Black Friday
Black Friday Week, Prime Week
September Special Week
was auch immer es da bei Amazon alles gibt
hat man vielleicht Glück
aber die finde ich
wirklich nicht verkehrt
so was
was genau ist denn jetzt schon wieder
der digitale Führerschein
was soll das denn jetzt eigentlich schon wieder sein
Jano du hast deinen Einsatz schon verpasst
Recycle Story
und du warst nicht da
die Bundesregierung hat den Start eines weiteren
E-Government Projekts
wer hätte das gedacht
also komm das kann ja nicht sein, das kann nicht sein
also
als wäre schon jemals
als wäre schon jemals
irgendein IT Projekt unserer Regierung gescheitert
das können die mir noch nicht erzählen
es ist noch nie was in die Hose
gegangen
das glaube ich nicht, dass das in die Hose geht
noch nie
wir haben auch 50 MBit für jeden bis 2018
alles hat alles geklappt
D-Mail
riesen Erfolg
Alter jetzt erzähl doch mal nix
ich kenn sogar einen der für den
ne D-Mail oder was
wie hieß das andere
E-Post
wie hieß die Konkurrenz zu D-Mail
ich bin mir jetzt nicht sicher ob der für D-Mail oder die Konkurrenz
gearbeitet hat
E-Postbrief, da war es doch E-Postbrief
ich glaub E-Postbrief
was wollen die
was die offizielle App der Bunde für den digitalen Führerschein
ist eine Woche nach dem Start wieder geschafft
was war denn überhaupt das
wenn ich den Kerl schon sehe Alter
was war denn überhaupt der Sinn davon
Digital Enabling GmbH
ok
Moment die muss ich jetzt mal googeln
ist das
oh die Webseite sieht ja schon
wirklich
bleeding edge aus
wie sie hier geschickt umschreiben
dass das
dass es verkackt haben
ok Moment ihr müsst stark sein
wie sieht denn die Webseite im Original aus
das geht aber schöner
das sind doch Stockfotos oder
das ist doch so ein Moment das kenn ich doch
das ist doch so ein Bilderset
das kenn ich das habe ich schon gesehen
das ist doch so ein
fertig designtes Bilderset
also wenn es das nicht ist
haben sie was gemacht was der Sache sehr ähnlich sieht
Digital Enabling
was auch immer
die ID Wallet
die Brieftasche für digitale Identitäten
die Brieftasche für digitale Identitäten
das heißt
ich soll jetzt mein Corona Zeug
in der Corona App
einscannen da einscannen
da gibt es ja noch ganz verrückte Leute
die die Luca App am Start haben
wobei ne
da muss man ja nichts einscannen
also zeigt mal kurz her was war denn das Problem
App Store nicht entfernen
man gehe nun
Sicherheitshinweis nach und lege das System
auf höhere Nutzlasten aus
ja wer hätte auch damit rechnen können
das ist ja fast wie bei Blizzard
wer hätte nun damit rechnen können
dass die Leute es auch benutzen wollen
mal ganz davon abgesehen
wissen wir alle in der heutigen Zeit
dass einfach Schwachsinn und Architektur
technisch nicht richtig gemacht
wir haben schon bei KLS gelernt
dass man einzig das wichtigste ist
dass man skaliert
und die haben nicht richtig skaliert
das war das eigentliche Problem
hätten die nämlich richtig skaliert
dann hätten die ihre Services skalieren können
das meine ich jetzt tatsächlich ernst
blöder Spruch zum Einstieg
aber das meine ich jetzt ernst
gerade so einen Service
denke ich kann man super skalieren
selbst gehostet haben die das garantiert eh nicht
und mit Sicherheit wenn das von der Architektur
unten drunter gut gemacht ist
super ähm
scalen
was ist denn das Problem
sicherheitstechnisch eigentlich gewesen
da wurde nicht
diagonal ins Endgame skaliert
so sieht es aus
außerdem haben die kein Blockchain gemacht
also die hatten kein AI
und kein Blockchain
ohne das geht es eh schon aktuell nicht mehr
und bis
bis SecDevOps Leute
brauchen die auch
PullStack
PullStack bis SecDevOps
mit Blockchain
hier die Stockfotos
Chainlaw ich bin mir nicht so sicher ob ich das aufmachen soll
ahja tatsächlich genau
das sind die Stockfotos die ich meine
ja genau das was der Chainlaw
gepostet hat
ja
ich wusste auch dass mir die Stockfotos bekannt vorkommen
ok
also was gibt es denn sonst noch
Alter was ist das denn für
Spooky Spoda Musik
wo ist jemand stehen geblieben
hier zeig mal
das ist passend zum Thema das stimmt
also die ersten technischen Probleme mit der App
traten bald nach dem Start am 23. September auf
viele Nutzer konnten keinen digitalen
ah bla
was waren denn die Security Bedenken
ok was sagt der CCC
in den folgenden Tagen kritisieren
auch Sicherheitsexperten die Anwendung
man habe Grund zur Annahme
dass die Infrastruktur hinter der App
und die zu Grund liegende Block
ich habe nichts gesagt
Blockchain ist natürlich mit am Start
was sonst natürlich
warum auch immer man
für so eine App irgendwas mit Blockchain
braucht
will man da irgendwelche
will da irgendwie einer Transaktionen machen
an seinem Ausweis
zu einer anderen Person oder was
schau da einen Twitter Link an
welchen war mein
Twitter Link
hier Sekunde
ich zähle neun
Blockchains
was
was bin ich hier sehend
haben die da irgendwelche Testingsachen nicht
entfernt oder was
warum Blockchainen die alles
ist das für
Personalausweis Dealer oder was
dass du die Transaktionen
dann besser absichern kannst oder wie
ja wahrscheinlich hat irgend
jemand von den Typen die das beauftragt haben
gesagt aber aber Leute hier
macht das mit Blockchain
aber lasst mal weiter lesen
und jetzt okay
beim Einsatz der ID Wallet App
dient eine Blockchain bzw. ein dezentrales Netzwerk
Distributed Ledger
Distributed Ledger
als Vertrauensanker
die Aussteller von Nachweisen
wie im Fall des Führerscheins
was sollen in dem Netzwerk Prüfdaten
hinterlegen Prüfer zum Beispiel oder
sollen die Daten
steht aber immer noch nicht genau wozu
man da jetzt eine Blockchain braucht
sind für sowas nicht genau
Zertifikate erfunden worden
ist das nicht genau das wofür beispielsweise
eine also wir hatten es doch gerade
von CA's ja
ich kann auch nachvollziehen
ob
eine Zertifizierungsstelle
ein gültiges Zertifizierungsstelle egal vielleicht
muss man das im Detail kennen
ähm
nicht wozu man eine Blockchain braucht
Personensbeziehungen sollen ausschließlich auf
den Smartphone des Benutzers geworfen werden
deshalb die Bundesliga auch selbst das kann ja nicht
mal aussprechen
nicht für Polizeikontrollen als offizieller
Nachweis der Fahrerlaubnis zum Beispiel
der Polizei kann
achso
ahja gut
der ist so krass geil durch Blockchain geschützt
dass er schon mal für offizielle Zwecke nicht
gültig ist
na geil
ja wer hätte auch damit rechnen können
dass ein IT Projekt von unserer Regierung in die Hose geht
also ich bin wieder zutiefst überrascht
also mich wundert's jedes
das ist ja noch nie passiert
hier hätte man damit nur rechnen können
wer hat das angestoßener Scheuer
keine Ahnung
lässt sich aber anscheinend gerne damit vor der K...
Sekunde Leute
muss mal kurz meine Lizenz eingeben
oh ne
wo hab ich denn meine Lizenz
ach da
da ist ja meine Lizenz
hab sie gefunden
alles klar
passt
kann ich das starten
das war ohne Scheiß Leute
ich hab wirklich ne Lizenz
kann ich euch sogar beweisen da ich ne Lizenz hab
guckt
äh Klingelchamp
help about
licensed
to max k
subscription active
ja
ich hab wirklich ne Lizenz
wer jetzt erzählt hier ich würd irgendwelche Pirated Sachen verwenden
oder so
Nachnamen Leak
Wupp Leak
was kostet das
ich glaub 100
149 Euro im Jahr oder so
ich hab das komplette Desktop Packages
also ich hab das
Jetbrains Desktop
Package ich weiß gar nicht wie das heißt
All Products Package
genau 189 Euro oder so
kaufen
ne ne
ne das hab ich nicht
hä bin ich jetzt komplett hängengeblieben
das hab ich doch nicht gekauft
ach für Persönliche
persönliche Nutzung
ah ja ja ja
genau hier
das hab ich
genau wollt ich grad sagen so viel hab ich noch nicht bezahlt
249 Euro genau
und dann wirds bisschen billiger jedes Jahr
das Package hab ich mir geholt
das ist alles von denen drin
also ich finde die kann man wirklich unterstützen
und die machen auch gute Sachen
nachdem ich von denen im Prinzip Rider verwende
Goland verwende
und das die CEDE manchmal
oder die CC++EDE manchmal verwende
dachte ich mir so ey
warum nicht
ja
die Preise sind echt gut
ja ist echt ist wirklich so
da kannst du dich wirklich nicht beschweren
also die
die zwei verwende ich regelmäßig
C-Line verwende ich auch öfters
hab ich jetzt hier nicht installiert
die anderen Sachen verwende ich ehrlich gesagt nicht
PyCharm hab ich installiert
für alle Schaltjahre mal ein bisschen was machen
in der Richtung
eigentlich so gut wie nie
WebStorm bin ich bis jetzt nicht richtig warm geworden
mit und das andere brauch ich nicht
RubyMine brauch ich zum Glück auch nicht mehr
IntelliJ und so kannst du ja alles kostenlos verwenden
so ähm würd sagen
wir fangen jetzt mal an
wir machen jetzt mal was
ich mach jetzt noch mal kurz den Chat
ich dachte ich irgendwas übersehen hab
also ganz ehrlich
du kannst .NET programmieren
mit Visual Studio Code
ich hab das auch ne Weile gemacht
unter Linux mit Visual Studio Code
ich fand es viel hakeliger
als mit Rider
allein schon die ganzen Refactorings
in Rider
mehr Hilfen wenn du was hast
das automatische
importieren was besser funktioniert
als in Visual Studio und in Visual Studio Code
ähm
die Anzeige
von Parametern
und insgesamt
also insgesamt ist das eine viel rundere
Experience
Poetologie
aber man kann natürlich damit anfangen
ist kein Ding
besser als Monodevelop
oder sowas
ich weiß nicht ob jemand von euch mal Monodevelop verwendet hat
muss ich mich früher mit rumschlagen
das sollte sich aber mittlerweile wegen LSP
verwendet haben
naja Rider macht eigenes Zeug
Visual Studio kann höchstens so gut werden
mit LSP wie
Visual Studio selbst
was die verwenden
die Budget Planes haben ja für alles
noch eigeneres Tooling dabei
also beispielsweise auch wenn du
wenn man Goland verwendet
die verwenden ja auch nicht die offiziellen
und nicht nur die offiziellen Go Tools
die machen ja auch viel Analysen selbst
das heißt Goland ist
viel besser in Go was
Autocomplete und solche Sachen angeht
als sagen wir mal
Go mit Visual Studio Code
so mal gucken ob ich irgendwas
übersehen hab
ah Mist liegt
du hast keine Blockchain für Rider
ich glaube ich mach mal ein Feature Request auf
Budget Planes
das ist übrigens auch eine geile Aussage gewesen
wir haben
einen Anbieter bei uns auf der Arbeit
der E-Mail Spam Filter macht für uns
oh
und was bei uns
etwas merkwürdiges
Verfahren ist aber das ist Absicht
wir filtern unsere eigenen Mails
also normalerweise würde man ja
sagen wir haben einen Spam Anbieter
der eingehende Mails filtert
aber wir filtern auch ausgehende Mails
also Mails die quasi unsere
Außendienstmitarbeiter
schreiben die werden gefiltert
durch den Spam Filter
warum?
weil schlicht und ergreifend
Leute Spam verschicken von denen
und weil unsere Reputation
schon öfters mal
zwischen E-Mail Servern schon öfters mal
ziemlich gelitten hat wegen irgendwelchen Rumspammern
wir hatten sogar Leute die haben irgendwelche
Raubkopierten ISOs mal verschickt und sowas
als E-Mail Anhang 600 MB
und die haben dann sogar bei der Hotline
angerufen und sich beschwert
warum kann ich meine E-Mail nicht verschicken
weil du gerade versucht hast eine ISO zu verschicken
über ihren offiziellen
E-Mail Account
na gut und
dieser Anbieter
der
blockt natürlich auch ab und zu
mal falsche Mails
und
ich hab was programmiert was diese
falschen Mails
ich hab was programmiert was automatisch
die E-Mails
freigibt die im Spam Ordner landen
die ausgehend sind
das ist relativ simpel ich nehm einfach
einen Chrome und mach
mit Papier Fernsteuerung
ich klick quasi das was man von Hand im Web Interface
macht durch automatisch
im Hintergrund und das funktioniert
eigentlich auch ganz gut aber
bevor ich das gemacht hab haben wir den
Anbieter unseren Spam Filter Anbieter
angefragt und haben gesagt
sagt mal habt ihr nicht irgendwie eine
API für E-Mails freizugeben
ich mein das ist im Jahr 2021
warum geht das nur über
ein komisches uraltes Web Interface
warum kann man nicht einfach sagen hier wir
authentifizieren uns mit einem API Token und geben den Kram
über eine API frei und da haben die
geschrieben ne API
gibt es nicht gibt es nicht
aber sie haben
dazu schon einen internen Feature
Request eröffnet
hab ich mir auch gedacht wow
ist ja toll
da hab ich jetzt richtig viel von
...
da bin ich ja froh dass ihr einen internen Feature
Request eröffnet habt
natürlich gibt es das bis heute nicht
so Leute falls ich irgendwas übersehen hab
schreibts doch mal in den Chat
glaub ich hab ein paar Dinger vorhin übersehen
haben wir doch gemacht
das war legit der letzte Hetzner Server
Stream wo wir sowas gemacht haben
skalierbare Server Anwendung
das war der letzte Hetzner
Sponsor Stream wo wir sowas gemacht haben
das ist
zwei Wochen her oder so
da haben wir die manuelle Variante gemacht mit
KitKat
2.11
2.11
2.11
2.11
2.11
2.11
2.11
2.11
2.11
2.11
Knepp
K aggregiert
Ja, die Vorschau ist gerade bei mir im Browser, weiß ich nicht, aber das kannst du hier runterladen, das funktioniert.
Da haben wir das gemacht im Stream.
Ja, guck.
Jetzt bin ich wieder am Start.
Jetzt bin ich wieder am Start.
Oh, huge quality, hier sehe ich schon gerade.
Tja, das Archiv ist ein bisschen, ein bisschen viel Traffic auf Google vielleicht.
Von einem User, also für einen User-Account.
Übrigens, meine YouTube-Empfehlungen sind kaputt.
Seht ihr das?
Normalerweise kriegen wir immer noch, also halbwegs sinnvolle Sachen empfunden.
Äh, äh, äh, empfohlen.
Heute ist einfach komplett random.
Komplett random resettet.
Als hätte ich, wäre ich nie, als wäre ich nie eingeloggt gewesen bei YouTube.
Äh, nicht eingeloggt.
Also hätte ich, als hätte ich nie, hätte ich das nie verwendet.
Ich habe meinen Cache nicht gelernt.
Ne, ne, ist alles noch da?
Ist alles noch da?
Ich weiß, dass ich nicht eingeloggt bin.
Ich habe, ich meine ja auch nicht eingeloggt.
Ne, ich habe keine Cookies gelöscht.
Das geht, das ist...
Wahrscheinlich gerade broken.
Wie viel Cloud Storage?
Oh, ein paar Terabyte ist das, ist das schon.
Also, dann fangen wir mal an.
Basteln wir heute mal ein bisschen was.
Also, ich sage euch jetzt mal, wie es ist.
Real Talk, Leute.
Die beste Variante, Git zu verwenden, oder auch Shit, ist über die Kommandozeile.
Jeder, der Git nicht über die Kommandozeile bedient, ist ein Kacknoob.
So.
Jetzt ist es raus.
Hey, Max, was hältst du von Net...
Was, was für einem Ding?
Network Optics IP NX Professional Video Management.
Kein Schimmer.
Kannst du mal Git Cherryplick erklären?
Ja, da müsste ich ein Beispiel für.
Du nimmst halt ein Comet und schiebst es woanders hin.
Beziehungsweise, es stimmt nicht.
Stimmt nicht.
Das ist falsch.
Das ist eigentlich komplett falsch, was ich gerade gesagt habe.
Ein Git Cherryplick guckt sich das Diff an.
Von dem Comet, was du angibst.
Applied das Diff dort, wo du gerade bist in dem Branch.
Und macht dann ein neues Comet obendrauf.
Mit dem gleichen Inhalt, was Autor und sonst was angeht vom Original Comet.
Ich hab das doch...
Leute, ich mache es seit...
Ich weiß, das ist jetzt nicht wirklich ein gutes Argument.
Aber da sieht man, dass es auf jeden Fall funktioniert.
Ich mache es seit ein paar Jahren.
Wirklich.
Zum größten Teil lese ich Comets und Pull- und Merch-Requests von anderen Leuten.
Und kümmere mich darum, dass das rechtzeitig reinkommt.
Also ich würde sagen, mal locker 50% von meinem täglichen To-Do auf der Arbeit sind irgendwelche Git-Repo-Release-Management-Geschichten.
Und ich habe noch nie, jetzt ernsthaft, kein Witz, ich habe noch nie ein anderes Tool als die Git-Kommando-Zeile verwendet.
Außer, außer für DIVs.
Beziehungsweise Merch-Konflikt-DIVs.
Das ist das Einzige, wozu ich ab und zu mal ein externes Tool verwende.
Wenn man keinen Bock hat, in Wim komische Zeilen zu suchen, die anfangen mit so und so und so.
Nutzt ihr ein eigenes Git-Lab.
Wir hatten Git-Lab.
Das habe ich damals eingeführt.
Hatten sie aber keinen Bock mehr drauf.
Und haben jetzt Bitbucket für alle.
Seitdem funktionieren meine Git-Hooks nicht mehr.
Richtig.
Das ist richtig.
Dafür kann ich es verstehen, wenn Leute das verwenden.
Also wenn man so, so, äh.
Ich habe vergessen, wie das heißt.
Wenn man quasi so einzelne Zeilen nur addet, anstatt ganze Dateien und sowas.
Dann kann ich es verstehen, wenn man Hilfstools verwendet.
Aber das mache ich eigentlich.
Hangstate, genau, korrekt, ja, so heißt das, ja.
Ja, ich weiß, man kann, glaube ich, sogar mittlerweile Interactive adden und sowas.
Aber das brauche ich nicht.
Ich mache Changes, auch wenn es drei Dateien sind, sage ich dann, bam, neues Commit.
Das kriegt dann eh die besten Commit-Messages aller Zeiten, immer.
So Temp und Blub und sonst was.
Und am Ende mache ich dann meistens ein Commit raus und fasse das zusammen.
Das wird heute nichts.
Doch, wir fangen jetzt an, wir fangen jetzt an.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
mache immer innit ich mache innit obwohl ich habe irgendwann habe ich 30 innit messages was
keinen sinn ergibt oder oder temp oder egal doch das kenne ich das ist das ist ein svn client für
windows kenne ich das habe ich ganz ganz früher auch mal verwendet so also auf geht's wir machen
jetzt mal was sinnvolles wo sind wir denn stehen geblieben also ich habe meinen home system test
installation irgendwie macht den kam mir mal zu was haben die alles auf ich habe meine home
system test installation irgendwo da guck mal hier das ist meine home system test installation
so ein knopf für die heizung haben wir auch schon das haben wir das letzte mal gemacht da
kann ich mich daran erinnern wie kann man sogar drücken aber dann passiert nichts weil etwas
kaputt ist und hier haben wir ein device nämlich den heiz champ
der den button hat den switch hat für an und aus okay da kann ich mich doch gerade genau das haben
wir das letzte mal gemacht da sind wir stehen geblieben so und heute ist mein ziel dass ich
nicht einfach einen switch kriege sondern ein thermostat in meinem home assistant für die
heizung irgendjemand schreibt mir was auf dem handy war mal kurz kriege ich nachrichten aus
irgendeiner teams gruppe wo leute schreiben
pause bis 21 uhr ich bin seit 16 uhr weg mäßig dass jetzt endlich gesetzliche schulstoff die
leute bis 21 uhr machen oder nicht warum kriege ich jetzt noch benachrichtigung na gut so und
so soll es dann am ende aus denn ich will so ein thermostat machen das heißt ich muss jetzt irgendwie
gucken wie ich über die mtt schnittstelle sowie man den kram hier auch rein gekriegt haben eine
thermostat anlegen kann er soll also ich bin eigentlich ein thema hier die eine chemikastel
nicht damit ich wollte einfach mal ein thermostat anlegen aber das ist ja jetzt schon ein thema da
ique vor kurzem auch schon mal ein thema von dem heizungssystem und ich hab jetzt gar nicht mehr
gebraucht bis jetzt da gibt's aber man hat mir noch ein themastat am ende hier neumarket
So, wie haben wir denn hier aufgehört?
So, blubb, was ist das hier alles?
Crap, den wir nicht brauchen.
Achso, Moment, das war das, was wir hier getestet haben, ne?
Ich muss das nochmal kurz auskommentieren.
Wo sind wir denn stehen?
Was haben wir denn hier gebaut?
Okay, das hier war noch überhaupt nicht funktionsfähig.
She baited.
Das hat noch überhaupt nicht funktioniert, was wir da gemacht haben.
Ich kommentiere den Kram mal kurz wieder ein und gucke, ob das noch funktioniert, was ich da gebaut habe.
Also, was...
Wow.
Nö.
Warum funktioniert das jetzt nicht?
Bridge.
Okay, ich habe ehrlich gesagt keine Ahnung mehr, wo wir stehen geblieben sind.
Deswegen ignore ich das jetzt einfach mal und wir versuchen ein Thermostat zu bauen.
Dazu muss ich erstmal wissen, wie ich ein Thermostat anlege.
Deswegen suchen wir mal Home Assistance MQTT.
Da haben die nämlich Discovery.
Da habe ich nämlich ein schönes Beispiel für.
Wo die Hälfte nicht drin steht.
Das haben wir auch schon festgestellt.
Genau, hier haben sie ein Beispiel für ein Thermostat.
Also, wenn ich möchte, dass Home Assistant mein Gerät als Thermostat erkennt, muss ich eine MQTT-Message mit diesem JSON-Payload schicken, wenn ich das richtig sehe.
Was mir hier erstmal auffällt ist, dass sie unglaublich auf Abkürzungen stehen.
Ich meine, guckt euch das mal an.
Kur-Temp-Tüppel.
Oder Temp-Stat-T.
Das soll wahrscheinlich Topic heißen, wo das drauf lauscht oder so.
Welche Idee? Das ist Rider.
Ja, ja.
Warum ist MQTT so Painschamp?
Ist es gar nicht.
Das ist die JSON-Payload, der Painschamp ist.
Okay, dann probieren wir das doch mal anzulegen.
Wir legen jetzt mal ein Thermostat in Home Assistant an.
Das probieren wir mal aus.
So, bevor ich da irgendwie eine eigene Klasse oder sonst was zu baue,
wir machen das mal so wie das letzte Mal.
Wir legen dieses JSON-Ding mal von Hand an und gucken, ob das dann funktioniert.
So, hier Publish.
Subscribe, das brauchen wir nicht.
Ja, mal Debug-Ausgabe.
Was wir da haben, ist vielleicht nicht verkehrt.
So, jetzt mal schauen.
Also, was braucht man denn hier?
Name.
Name wird auf jeden Fall...
Name wird auf jeden Fall...
Heizung.
Ist doch egal, wie ich das nenne.
So, Device-Info.
Wollen wir das haben?
Device-Info ist bei Home Assistant...
Das ist eine richtig coole Sache, die sie sich hier ausgedacht haben.
Das ist eine richtig coole Sache, die sie sich hier ausgedacht haben.
Das ist eine richtig coole Sache, die sie sich hier ausgedacht haben.
Und zwar...
Leute, ich hab keinen Bock da so geplätt...
Okay, hier funktioniert der Dark-Reader nicht so wirklich gut,
aber ich glaube, die haben einen Dark-Stream mittlerweile.
Lasst mal kurz gucken.
Dark.
Ja.
Gleich viel besser.
So.
Was ganz cool ist, man kann bei Home Assistant...
Also, Geräte können sich automatisch dort eintragen lassen.
Man muss nicht mehr alle Geräte in die Config eintragen.
Man muss nicht mehr alle Geräte in die Config eintragen.
Das geht aber nur, wenn das Gerät quasi weiß, dass man Home Assistant verwendet,
beziehungsweise es eine Option hat, es in einem Home Assistant-kompatiblen Format zu announcen.
So, und da kann man jetzt sagen, man legt ein Gerät an.
Das ist dann das hier in dem Fall.
Kann man sagen, hier, ich bin ein Raspberry Pi, hergestellt vom Twitch-Chat.
Hostname ist der hier und Version-Number ist der hier.
Ziemlich bescheide Version-Number, by the way.
Und dann legt er das hier so als Device an.
Und alle Sensoren...
Die man jetzt anlegt, unten drunter, ja, von Schaltern bis Temperatursensoren und sonst was,
die kommen als Einträge unter diesem Device.
Das heißt, man hat jetzt nicht 20 unabhängig voneinander angelegte Sensoren,
sondern alle Sensoren gehören zu einem Gerät.
So, und jetzt versuche ich mal ein Thermostat anzulegen.
Da muss ich jetzt mal gucken, wie wir das machen.
Also, State, Topic, wir müssen das mal zusammenbauen.
Ich copy-paste mir mal das Beispiel.
Also, das da müssen wir jetzt anlegen.
Und gucken, ob da dann ein Thermostat im Web-Interface bei rauskommt.
Ich habe da so meine Zweifel, dass das auf Anhieb funktioniert.
Aber, ah, schauen wir mal, schauen wir mal.
Also, State, Topic ist dann...
Bauen wir das mal, bauen wir das mal so zusammen.
Zack.
Äh, Name.
Wie heißt das? Heizung.
Ich hab...
Hier ist Heizchamp.
Heizung.
So, Sensorname.
So, ID braucht irgendwas, irgendwas Randomizedes.
Aber, ist jetzt zum Testen eigentlich egal?
Was?
Wie ist eigentlich das Overlay von Home Assistant?
Also, bezüglich auf dem Tablet und zum Steuern?
Ja, das ist alles das Gleiche. Das ist immer das hier.
Guck, das ist ziemlich...
Das ist ziemlich, ähm, wie sagt man?
Responsive.
Das Web-Interface von denen.
Das kannst du ohne Probleme auf dem Tablet verwenden.
Huge responsiveness hier.
Das haben die wirklich gut gemacht, das Web-Interface.
Du kannst das ohne Probleme gut, gut scalen.
Also, du kannst das auf dem Tablet.
Du kannst genau das gleiche Interface auf dem Tablet verwenden.
Wenn wir jetzt hier unsere Test Home Assistant Installation nehmen.
Du kannst ja hier oben verschiedene Tabs.
Also, wenn du beispielsweise eine Ansicht haben willst, wo nur die fünf wichtigsten Sachen drauf sind.
Kannst du dir das als Tab machen und das hier dann als Bookmark speichern oder so.
Das geht.
Aber du verwendest das gleiche Interface wie auf dem Desktop.
Ja, die App ist ja im Prinzip das Web-Interface als App gepackt.
Das ist ja quasi...
Nennt Browser.
Mit Native Funktionen für das jeweilige Device dabei.
Ja, aber das Web-Interface ist jetzt quasi so ein Webview.
Name.
Name.
Name.
ID.
Wir brauchen mal eine ID.
Irgendeine random ID.
Ich würde sagen, die ID ist random genug, oder?
Bam.
Huge ID.
Alles klar.
Command Topic.
Things.
Also, was muss ich denn jetzt anlegen, damit ich ein Thermostat im Home Assistant bekomme?
Name.
Name haben wir schon.
Mode Command.
Also, ich werf mal alles raus, was aus meiner Sicht nicht sinnvoll aussieht.
Templates brauchen wir nicht.
Online, offline.
Ist immer online.
Brauchen wir nicht.
Templates rauswerfen.
Also, meine Heizung kann nur an- und ausgeschaltet, beziehungsweise...
Nee, das stimmt nicht.
Meine Heizung, also das Thermostat, was der anlegt, kann die Heizung nur an und ausgeschaltet,
beziehungsweise...
Nee, das stimmt nicht.
Meine Heizung...
Also, das Thermostat, was der anlegt.
Kann die Heizung nur aus- oder aufheizend schalten, was sinnvoll ist.
Was anderes kann meine Heizung eh nicht.
Temperature Steps 0,5.
Machen wir nicht.
Temperature Steps 1.
Minimaltemperatur ist...
Keine Ahnung.
5.
Maximaltemperatur ist...
35.
Reicht.
Okay.
Current Temp Topic.
Das heißt doch bestimmt Topic, oder?
Soll ich irgendeine Abkürzung für...
Ach doch, hier.
Guck mal.
Okay.
Anstatt Current Temp Topic...
Das heißt doch bestimmt Topic, oder?
Soll ich irgendeine Abkürzung für...
Ach doch, hier.
Guck mal.
Okay.
Anstatt Current Temp T kann ich auch Current Temperature Topic schreiben.
Ist halt die Frage.
Will ich das ausschreiben?
Will ich das abkürzen?
Eigentlich ist es mir egal.
ID wolltest du auf die MAC-Adresse setzen?
Ja, will ich auch.
Haben wir auch hier schon programmiert.
Aber ich will jetzt erstmal ein leeres Thermostat anlegen im Home Assistant Web Interface,
um zu gucken, ob das überhaupt funktioniert, was ich hier mache.
Dann kann man da ja auch...
Dann kann man da ja auch was Sinnvolles reinschreiben.
Kann die Heizung nicht aus...
Warmwasser, Warmwasser und Heizung, doch.
Aber das ist nicht, was ich in so einem Thermostat einstellen will.
In dem Thermostat will ich nur Temperatur einstellen und Heizung an und aus.
Das Warmwasser würde ich gar nicht in dieses Thermostat reinpacken.
Das würde ich als extra Button machen.
Deswegen, wir brauchen als Sensoren...
Wir brauchen als Sensoren, also sprich als Geräte, die da in Home Assistant auftauchen,
brauchen wir am Ende...
Wir brauchen hier einen Thermostatsensor.
Wir brauchen einen Switch.
Wir brauchen zum Beispiel Warmwasser umschalten und sowas in der Richtung.
Und wir brauchen sicherlich noch ein paar Sensors für irgendwelche Infos.
Von Inventarnummer bis Brennertemperatur und sonstige Geschichten.
Also die drei Sachen müssen wir dann anlegen, sodass Home Assistant das versteht.
Ich will jetzt erstmal ein Thermostat anlegen und gucken, ob das funktioniert.
Also Name, State Topic, Command Topic.
Okay, fangen wir mal oben an.
Mode, CMD, Topic.
What the fuck?
Okay, wir machen das jetzt.
Wir copy-pasten das jetzt einfach mal sinnlos und gucken, ob dann irgendwas rauskommt, was aussieht wie ein Thermostat im Webinterface.
Also Command Topic brauchen wir nicht.
State Topic, wir ersetzen das jetzt einfach mal zu irgendwas Sinnvollem, das dem entspricht, was da oben drin steht.
Also, wir brauchen ein Command Topic.
Und das ist in dem Fall Home Assistant, ach Climate.
Guck mal, ich hab hier noch Switch drinstehen, das kann ja gar nicht funktionieren.
So.
Home Assistant, Climate, ID, Name, State.
Okay.
Ist aber falsch.
Ich will...
Thermostat, Mode, CMD haben.
Ich vermute mal, dass irgendein Magic eintragt, dass das nur so funktioniert.
Welche Distro verwenden wir?
Das ist Manjaro mit i3WM.
Ja, korrekt.
Das, was der Bot auch schon geschrieben hat.
So, also Thermostat.
ModeStat, äh, State.
Wunderbar.
State lassen wir einfach so.
Af, af, af, was für ein Ding?
AFTT?
AFTI?
Was?
Was für ein Ding?
Availability Topic.
Wer hat denn das abgekürzt?
Es gibt doch die i3-Config auf GitHub.
Das stimmt.
Ich habe mal irgendwann so eine Minimalversion von meinen Config-Files auf GitHub hochgeladen.
Das ist nicht so wirklich...
Hä?
Was machen wir?
Warum schreibe ich da .NET hin?
.Files, Alter.
Ja.
So eine Minimal-Config von meinem Kram hochgeladen.
Das ist nicht wirklich alles.
Und das ist auch nicht so wahnsinnig aktuell.
Das ist schon zwei Jahre her.
Aber für das meiste reicht es.
Du kannst zum Beispiel von der WIM-Config bis...
Hier ist nicht viel drin.
Äh, bis zur i3-Config von mir das Zeug angucken.
WIM oder NEO-WIM?
Ach, das ist das, was dir am liebsten ist.
Ich glaube, ich habe...
Was habe ich denn?
Ich glaube, ich habe einen normalen WIM.
Keinen NWIM.
Was ist denn ein NEO-WIM?
Nö, ich habe...
Ach.
Also das, was...
Ich verwende das ja nur auf der Kommandozeile,
um Sachen schnell zu editieren.
Ich...
Also...
Mir ist das ziemlich egal.
Ich habe auch mal eine Weile NEO-WIM verwendet.
Das war so, als ich auf dem Trip war.
Ich will meinen WIM zu einer IDE umbauen.
Ich habe damals sogar...
Ich habe damals sogar ein eigenes WIM Autocomplete...
Äh, nicht Autocomplete. Stimmt nicht.
Äh, File-Search-Plugin gebastelt.
Mit Ruby zu C-Bindings.
Ganz abgedrehter Shit.
Voller Müll eigentlich im Nachhinein betrachtet.
Aber...
Das war...
Das, was es gab, war mir damals zu langsam.
Und als ich festgestellt habe,
ich muss anfangen...
Das war so der Anfang vom Ende, wo ich versucht habe,
meinen WIM zu...
Umzubauen zu...
Zu...
Zur Allzweckwaffe.
Habe...
Als ich festgestellt habe, ich muss eigene Sachen programmieren,
dass ich so Basic-Sachen...
Äh, wie File-Search schnell genug hinbekomme.
Ich weiß, da gibt es mittlerweile bestimmt bessere Sachen.
Habe ich mir gedacht, warum...
Willst du eigentlich dein WIM umbauen...
In was, was du für alles verwenden kannst?
Und dann habe ich angefangen, einfach die...
Passenden Tools...
Für...
Den passenden Einsatzzweck zu verwenden.
Ja?
Sei es Visual Studio unter Windows.
Visual Studio Code für...
Ähm...
Für Frontend.
Arduino Zeug zum Beispiel.
Also für Frontend Zeug.
Für Arduino Zeug.
Für irgendwelche Kram.
Rider für .NET unter Linux.
GoLand für Go.
Äh...
Ich habe einfach...
Ich...
Ich nehme jetzt einfach die passenden Tools dafür.
Und...
Äh...
Ich habe lang genug an meiner WIM-Config rumgeschraubt.
Und versucht, das zu einer Allzweckwaffe zu machen.
Ich habe alles weggeschmissen mittlerweile.
Ein paar Basic WIM-Settings und fertig.
Ja.
Okay, machen wir mal weiter.
Also...
Thermostat-CMD.
Visual Studio Code ist ziemlich nice.
Also gerade Platform-IO für...
Äh...
Für...
Arduino-kompatibles Zeug ist wirklich nice.
Und auch was an Plugins gibt.
Also man kann eigentlich über Visual Studio Code...
Kaum was Schlechtes sagen.
Vielleicht, dass es ein JavaScript-Programm ist.
Aber ansonsten ist Visual Studio Code doch echt nicht schlecht.
Was sagt ihr, Leute?
WebStorm?
WebStorm oder Visual Studio Code für Frontend-Zeug?
Ich habe WebStorm nie richtig verwendet.
Würde mich mal interessieren, falls einer von euch schon beides ausprobiert hat.
WebStorm oder Visual Studio Code?
Ich meine, Visual Studio Code hat eindeutig die Plugin-Welt auf seiner Seite.
Deswegen kann man gar nicht sagen, dass Visual Studio Code für Frontend-Zeug nicht
so gut ist.
Also...
Also...
Also...
Also...
Also...
Also...
Also...
Also...
Also...
Also...
Also...
Also...
Also...
Also...
Also...
Also...
Also...
Also...
Also...
Also...
Also...
Also...
Also...
Also...
Also...
Also...
Also...
Also...
Also...
Also...
Also...
Also...
Also...
Also...
Also...
Also...
Also...
Also...
Also...
Also...
Also...
Also...
Also...
Also...
TempCMDT, meine Güte, was haben die sich denn da wieder ausgedacht, TempCMDT, das kriegt TargetTempCMD, ich copy-paste das jetzt einfach nur, so, dann haben wir als nächstes wieder irgendein StatTopic, das kriegt das gleiche wie oben, so, dann haben wir CurrentTempTopic,
das ist anscheinend auch das gleiche wie oben, so, dann brauchen wir MinTemp, gut, MinTemp habe ich halt 5, ups, gleich, ist ja richtig, was, hast du WimControl, nein, habe ich nicht, habe ich nicht, ich stehe total auf diese WimBedienLanguage, ja, also ich finde das nice, wenn du mit F und T in Wim springen kannst, mit N hoch und runter suchen,
äh, großes D ab da, Zeile löschen, äh, X drunten runter schreiben, ich, ich, ich finde die WimLanguage an sich zum Ende hier richtig geil, aber ich komme damit im Kopf nicht klar, wenn ich nicht in der Konsole und nicht in Wim bin, WimKeys zu verwenden, sobald ich irgendwie so einen Editor wie hier habe, dann bin ich in meinem Kopf in Mausbedienung, ich kann das nicht erklären, wenn ich jetzt, wenn ich das hier jetzt aufmache, gar kein Problem, da bin ich in Tastaturbedienung, das, da muss ich überhaupt nicht nachdenken,
aber sobald ich sowas hier vor mir habe, da bin ich...
in meinem Kopf in Mausbedienung, ich meine, ich benutze ein paar Sachen, ja, hier sowas wie zum Beispiel Zeilen verschieben, was aus irgendwelchen Gründen nicht geht, ja, also manche Shortcuts verwende ich hier drin auch, aber ich bin hier im Mausbedienungsmodus, ich komme damit nicht klar, CMDT ist wahrscheinlich ein Shortcut für CMD-Topic, ja, ja, ja, mit Sicherheit, Command-Topic ausgeschrieben wahrscheinlich sogar, wahrscheinlich, wie gesagt, wahrscheinlich ist die volle Schreibweise,
Mode, Command-Topic, so, Maximaltemperatur, so, Steps, Steps lassen wir weg, Steps ist standardmäßig bestimmt 1, so, Mode, ah ja, Modes, okay, da, oh, mal gucken, ob das jetzt serialisiert kriegt, so eine Bring-Array, gleich, New, Chasen, ah, da kann das, ah ja, nice, kann der sowas hier machen, hey, cool,
Off, by the way, das, was ihr hier seht, ist übrigens nicht Newtonsoft, Chasen.net oder sowas, das ist die neue, das ist die neue .NET 6, ähm, Chasen-API, die sie oben drauf gebaut haben auf, äh, wie heißt das, System Text Chasen, die haben doch vor einer Weile Newtonsoft Chasen rausgeschmissen aus ASP.net.com und haben ihren eigenen Krempel drauf gemacht, so, und daraufhin haben die Leute gesagt, Microsoft, sei dir bescheuert,
der neuen Kram, der mag zwar schnell sein, aber keine Sau kann den bedienen, und jetzt hat Microsoft gesagt, ah ja, gut, dann machen wir halt mit .NET 6, da noch was oben drauf, was man besser bedienen kann, so, und das ist das, und soweit ich weiß, arbeitet daran auch der ehemalige Entwickler, äh, Federführerin von Newtonsoft, Chasen.net, also, sprich, Microsoft hat den Typ quasi eingekauft, der, der die bekannteste Chasen-Library für .NET 6, äh, Chasen-API, der, der, der, der, der, der, der, der, der, der, der, der, der, der, der, der, der, der, der, der, der, der, der, der, der, der, der, der, der, der, der, der, der, der, der, der, der, der, der, der, der, der, der,
naja, ich persönlich verwende eigentlich immer noch am liebsten Newtonsoft, Chasen.net, einfach weil ich mich daran gewöhnt habe, und dieser, was weiß ich, wahnsinnige Performance-Overhead, äh, bisher bei mir noch nie Probleme gemacht hat, aber ich kann mir vorstellen, dass man wirklich Probleme bekommt, wenn man da, äh, Millionen Requests hat, ja, aber das haben, haben meine Anwendungen in der Regel nicht.
Ist New Chasen Object das gleiche wie New Chasen Object, ja, ja, das ist das gleiche, das ist so, äh, Objekt-Initializer-Syntax, das ist das gleiche, guck, der sagt ja auch hier, du kannst das weglassen, das finde ich übrigens auch cool an Rider, ne, by the way, so Dinger, dass die dir das anzeigen als, äh, ist eigentlich nicht erforderlich, teilweise machen sie das im Visual Studio, aber mittlerweile auch schon.
So, und jetzt gucken wir mal.
Schauen wir mal, ob der jetzt ein Thermostat anlegt, also ich würde mir ja echt den Arsch weisen, wenn das jetzt einfach funktioniert, äh, Mode of On, Publish, ne, ne, Publish ist schon mal falsch, wir wollen auch auf Climate publishen, Config, richtig, Chasen Message, gut, schauen wir mal, was der ausgibt, zu String, schauen wir mal, was der ausgibt, ob da irgendwas Sinnvolles bei rumkommt, Run, was denn jetzt schon wieder?
Moment, das hatten wir doch schon mal, Export, ah, jetzt geht's.
Das ist, weil ich, das ist, weil ich .NET, äh, 6 Preview-Versionen installiert habe, okay, also das kommt hier serialisiert raus bei am Ende, das macht er aus diesem Objekt, was ich angelegt habe, angelegt hat, Name, Unique ID, das Device, Maut, CMD, so, das sieht jetzt erstmal ganz gut aus, mal gucken, was da, was da im Home Assistant rausgekommen ist jetzt, nichts, ja, das ist schon mal gut, das hat schon mal nicht funktioniert, das ist schon mal, schon mal nice, ne.
Das hat einfach gar nichts gemacht, ich lösche das nochmal, gucken, ob da irgendwas anliegt, einfach nicht funktioniert, na gut, äh, Console, Readline, ich bin mir nicht ganz sicher, ob der schon alles fertig abgeschickt hat, sollte er eigentlich, deswegen mache ich einen Awaiter vor, aber man weiß ja nie, nope, der legt nichts an, okay, RIP, was, was mache ich falsch, was, was, was mache ich falsch hier?
Äh, Modes, Off.
Sieht gut aus, sieht gut aus, sieht gut aus, Climate, Unique ID, Heize, sieht eigentlich alles relativ nice aus, warum das jetzt nicht funktioniert, verstehe ich nicht, jetzt ist der Big Brain Chat gefragt, ja, Chat, sag mir mal, woran es liegt, wir gucken mal in das Log, wir gucken mal in das Log rein, ob der irgendwelche Probleme hat beim Serialisieren, oh je, oh je, was?
Wow.
Wow.
Wow.
Error, was?
Async Discovery, ja, genau das will ich verwenden, und was ist jetzt die Fehlermeldung genau?
Multiple Invalid Extra Keys Not Allowed, äh, habe ich irgendwas falsch gemacht?
Habe ich irgendwo, ich habe doch, ich habe doch bestimmt irgendwo was ganz offensichtliches falsch geschrieben, das sieht, also weil das, ne, das ist richtig, guck mal,
die Weißmenü, Moment, der schreibt das groß, könnte das das Problem sein, weil es groß geschrieben ist?
Könnte das wirklich, könnte das das Problem sein, wenn er das groß serialized?
Wäre natürlich bescheuert, aber, ich mache das jetzt einfach so, äh, Moment, wie, wie sage ich ihm das denn jetzt, dass er das bitte schon anders serializen soll?
Wobei, ich glaube, das hatten wir schon mal, das hat, das hat doch, das hat doch funktioniert.
Ich meine, ich kann das da, was, Jason Property oder so?
So drüber schreiben, und ihm sagen, das soll gefälligst Manufacturer heißen, und dann sollte er das klein schreiben, das ist natürlich jetzt die eklige Variante, aber das funktioniert.
Man kann dem, man kann dem Serializer garantiert sagen, bitte serialize, serialisiere alles klein, Jason Note Options, ja, das geht bestimmt.
Man kann dem bestimmt sagen, der soll mal, Robert, gucke mal, da ist es doch direkt.
Da.
Also, da, ich muss echt mal sagen, das mag ich, an, am ganzen .NET Framework.
Das ist logisch aufgebaut.
Das ergibt meist, meistens Sinn, was die sich da überlegt haben, wo da was steht.
Nicht immer, aber meistens.
Deswegen findet man den Kram auch so schnell.
So, mal gucken, ob das jetzt funktioniert.
Dazu kann ich nur sagen,
also anscheinend funktioniert das nicht, obwohl ich die Property Options,
die ich hier angegeben habe.
Ich habe gesagt, Property Name Case Insensitive, True, und es juckt hier nicht.
Was ist denn, was ist denn Default?
Sieht man das irgendwie, was Default ist?
Was passiert denn, wenn ich Fault sage?
Ne, ist mir egal.
Okay, das funktioniert nicht so, wie ich mir das gedacht hätte.
Ist das ein Bug vielleicht?
.NET
Microsoft-Hilfe-Seiten sind mal wieder richtiger Paints-Champ wahrscheinlich.
Alter, Deutsch, please, mach es mal auf Englisch.
Lol.
To compare,
Moment, to compare property names, Jusinke?
Ach, Moment, das hat mit, das hat mit Serialisieren überhaupt nichts zu tun, oder was?
Ja, geil.
Das ist, das ist ja überhaupt, überhaupt nicht missverständlich, wofür das da ist.
Na gut, komm, dann, dann schreibe ich das jetzt hier einfach oben drüber.
JSON Property Name.
Einfach mal nur, um zu gucken, ob der Kram wirklich,
an, an case-sensitive oder nicht, liegt.
So, das, das, das.
Kommen hier, Name.
Name, oh, Name.
Model.
Version.
Line.
Line.
Line, und jetzt brauchen wir noch Identifiers.
Ah, das glaubt nicht, dass das da dran liegt.
Das wär richtig hängengeblieben, wenn da, wenn der Kram case-sensitive wäre.
Ne, das kann ich mir eigentlich nicht vorstellen.
So, bam.
Jetzt macht er alles klein.
Jetzt schauen wir mal, wie es hier ausschaut.
Ne, Grip.
Extra Keynote Allowed.
Device Version.
Tja, das ist aber richtig.
Irgendwas ist hier anderweitig kaputt.
Das ist richtig.
Ich weiß, dass das richtig ist, weil das heißt, dass es genau eins zu eins so das letzte Mal funktioniert.
Das ist aber ein neuer Fehler.
Ja, jetzt ist es Version.
Ja.
Ja.
Aber im Prinzip ist es das gleiche.
Was hat er denn für Schmerzen?
Wo ist denn jetzt das Problem?
So, ich mach mal kurz, ich mach jetzt Device einfach mal weg.
Was, was eigentlich keinen Unterschied machen sollte.
Dann legt das halt ohne an.
Äh, hat wieder nicht funktioniert, ne?
Ne, doch.
Identifiers.
Moment, hat das jetzt, hat das jetzt funktioniert?
Schauen wir mal.
Äh, wo ist das?
Developer Tools.
Climate.
Heiz...
Das hat jetzt funktioniert?
Was hat er denn für ein Problem mit dem Device?
Was hat er denn damit für ein Problem?
Nimm SW-Version.
Ja, natürlich!
Das Problem hatten wir doch das letzte Mal schon.
Es ist SW-Version, nicht Version.
Genau, das Problem hatten wir doch das letzte Mal schon.
Und das hatte ich hier auch gefixt, aber ich hab das nicht hier drinnen angepasst, als wir da eine extra Klasse draus gemacht haben.
Ja, es ist SW-Version.
Genau, das gleiche Problem hatten wir doch das letzte Mal schon.
Ah, ne Kühle.
Ok.
Wie krieg ich denn das jetzt gelöscht?
Äh, Configuration?
Ne, oh ne.
Devices, Devices, Entities.
Wo ist die Heizung?
Da.
Delete.
Geht nicht.
Ich muss das über MQTT wieder löschen.
Der selbe Fehler, als immer.
Der Chat merkt es erst jetzt.
Wisst ihr, da brauchen wir eindeutig mehr Prime-Subs.
mehr Prime Subs, dass der Chat mehr IQ-Punkte
kriegt und das früher merkt.
Äh, okay, dann machen wir jetzt
Up.
Click.
Ja, Config.
Den Kram löschen wieder.
Config. Man musste einfach eine leere
Config-Message, glaube ich, schicken.
Dann löscht
das wieder. So, und zwar
auf Climate. Auf wo müssen
wir hin? Home Assistant Climate
Config.
Ich hoffe, der löscht das wieder.
Config.
Oh, Mist. Was jetzt?
Ah, ein Quote zu viel.
Zack.
Ha! Und weg ist es.
Weg ist es.
So, und jetzt können wir gucken,
ob er das richtig anlegt wieder.
So, Device gleich JSON-Device
und jetzt haben wir eben gesagt, er soll es serialisieren
als SW-Version.
Okay,
aber die Fehlermeldung konnte wirklich ein bisschen
besser sein.
SW-Version.
Bin ich nicht sicher, ob das jetzt funktioniert hat.
Integrations-Device.
Da ist es, der Heizchamp.
Bam! Heizung.
Jawoll!
GG Eats.
So, jetzt mal gucken, ob wir das als Thermostat anlegen können.
Ah ja,
not available ist gut.
So.
Schmeißen wir das mal weg.
Delete Card und sagen jetzt, wir wollen
ein Thermostat haben.
Thermostat.
Ja, da ist es.
Nur, dass irgendwie
nix stimmt.
Dass da nix an Werten
drin steht.
Na gut, aber wir haben zumindest schon mal
ein Thermostat, was
äußerst useless ist gerade.
Aber er hat es angelegt
als Climate-Komponente, dass ich ein Thermostat
machen kann. Das ist doch schon mal was.
So, Developer-Tools.
Gucken wir mal, was der hier sagt.
Climate-Heizung ist...
Climate-Heizung ist...
Mindest-Temperatur 5, Max-Temperatur
35 Tage, Temperature-Step...
Ah, okay. Current-Temperature und
Temperature sind nicht gesetzt. Das müssen wir jetzt noch machen.
So. Genau.
Ich habe nämlich noch gar nichts gesetzt.
Ich habe nämlich noch gar nichts gesetzt. So.
Dann müssen wir in die Hilfe gucken, wie das weitergeht.
Äh.
Thermostat.
Da.
Also. Man legt das an.
So wie ich das angelegt habe.
Und dann braucht man ein...
State-Payload, wo man
Sachen reinschreibt, was gerade Sache ist.
Okay. Dann machen wir das doch jetzt.
Hier legt er an.
Ich hole das nochmal rein.
Jetzt setzen wir einen State-Payload.
Also brauchen wir wieder das Topic.
Brauchen wir wieder das Topic.
Okay, also.
MQTT-Client. Publish.
Auf dieses Topic.
Auf dieses Topic.
Ähm.
So, da müssen wir jetzt ein Objekt für anlegen.
Mal gucken, wie das mit dem...
Lass mal ein Thermostat
anhand des Devices anzeigen.
Äh, was meinst du?
Du meinst, wenn ich hier draufklicke...
Wenn ich hier draufklicke, dann passiert...
Ja.
Ein Thermostat.
Operation Heat On Off. Guck mal, das hat er auch gecheckt.
Und Target Temperature kennt er nicht.
Aber man sieht, dass er das genommen hat.
Weil ich sage ihm ja explizit,
das kann nur heizen oder ausgeschaltet.
Also es kann nur im Prinzip an- oder ausgeschaltet werden.
Ja.
Das funktioniert.
Was ist das eigentlich für ein Symbol?
Das sieht aus wie ein durchgestrichener User.
Aber das soll...
Sieht das...
Sieht dieses Symbol irgendwie nach Klimaanlage aus?
Ach nee, das ist so eine...
Das ist so ein Tacho hier.
Jetzt erkenne ich das.
Findet ihr nicht auch, dass das aussieht wie ein durchgestrichener User?
Das hier ist der User hier unten.
Und das ist ein durchgestrichener User.
Ja, ja, ich weiß, das ist ein Thermostat.
Aber sag doch mal, das sieht aus wie ein durchgestrichener User.
Das sieht aus wie ein User-Symbol.
Guckt, das hier ist der Kopf.
Das hier ist so der...
Das ist der Körper vom User.
Und der hat quasi sowas im Kopf stecken.
Ich hab da einen User erkannt.
Durchgestrichener User.
Das sieht doch wirklich so aus.
Jetzt erzählt mir nix.
Findet ihr nicht, dass das so aussieht?
Na, okay.
Was willst du da machen?
Du siehst es auch.
Ja, hab ich doch mal Glück gehabt.
Okay, ähm...
Never mind.
Never mind.
State Message gleich...
Kann der was Anonymes serialisieren?
Das probieren wir jetzt gleich mal aus.
Ob der irgendwelche anonymen Typen serialisieren kann.
Mode gleich off.
Target Temp gleich...
Was ist denn das hier?
21,5.
Current Temp gleich 23,60.
Ah, nee, Moment.
Punkt.
Konastyle.
So, und jetzt sagen wir hier...
Wie serialisiert man hier nochmal was?
Äh, Moment.
Wie serialisiert man hier überhaupt ein einzelnes Objekt?
Jason Serialize?
Nee.
Ah, doch.
Serialize.
State Message.
Das klappt.
Nee, das wird nicht funktionieren.
Ich hab das mal kurz noch serialisiert oben drüber aus.
Mal gucken, was da rauskommt.
Naja, doch.
Das sieht eigentlich ganz gut aus.
Das ist ne ordentliche Chasen Message.
Okay, was ist da jetzt rausgekommen bei?
Da ist rausgekommen, dass es...
Nicht funktioniert hat?
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
nathat.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ich habe das mal noch mal umgearbeitet.
Naja, es ist deiner Rаже.
Hier ist meine letzte Nummer.
Und...
So um alltägliche Probleme zu lösen
Ohne einem Kurs in die Quere zu kommen
Mit richtig guter Standard Library
Alles dabei, ganz gute Paketauswahl
Cross-Plattform
Für alles was man so braucht
Kannst du zwei positive Eigenschaften
Von C++ sagen
Naja
Es ist schnell
Und
Es wird mit den neuen
Versionen
In manchen Punkten
Weniger Scheiße
Aber insgesamt
Kommt eigentlich immer nur mehr Mist
Obendrauf
Was hältst du von Rust?
Aber das hatten wir vorhin schon relativ ausführlich
Ich finde Rust ist richtig Poggers
Leider ist Rust richtig
Massive Brain
Mit solcher Syntax
Mit dieser krassen
Rust Lifetime Syntax
Also da brauchst du wirklich mindestens
20 Prime Subs
Dass du das verstehst
Vorher ist dein Kopf einfach nicht groß genug
Und
Es erweitert ja jeder Prime Sub
Bekanntlichermaßen den Intelligenzquotient
Aber ich finde Rust richtig nice
Ich hab Rust benutzt als es noch Beta war
Als es ganz frisch war
Hab ich richtig viel damit gemacht
So zum ausprobieren
Ich fand das richtig nice
Und ich finde Rust auch immer noch richtig nice
Aber es ist
Finde ich keine Sprache
Die man startet
Um mal schnell was auszuprobieren
Da ist es auf jeden Fall nicht das richtige
Wie findest du die Ruby Syntax?
Top
Ich persönlich muss sagen
Es war ja lange Zeit so ein bisschen so
Bei
Also ein bisschen unter Linux
So ein bisschen so Sprachenkrieg
Zwischen Ruby und Python
Ja die einen haben gesagt
Oh ja hier
Ruby gerade auch als Ruby on Rails
So voll angesagt war
Ne korrekt 25 Monate
Huge Subscription
Jetzt geht es aber richtig gut um die Sprache zu machen
Jetzt geht es aber richtig los hier
Chillfreak auch 5 Monate
Massive Subscriptions hier
Alle beide
Und dabei war ja so ein bisschen
Sprachenkrieg angesagt
So Python, Ruby, sonst was
Aber heute kann man eindeutig sagen
Ruby on Rails ist nicht mehr von Bedeutung
Auf jeden Fall nicht für neue Projekte
Und insgesamt auch eigentlich kaum noch von Bedeutung
Und Python hat einfach gewonnen
Was das angeht
Gerade durch die ganze Machine Learning AI Geschichte
Ist es nicht mehr so wichtig
Das ist einfach
Ganz weit vorne
Auch zu Recht
Aber ich muss sagen
Mir persönlich
Gefällt die Ruby Syntax besser
Das heißt nicht, dass ich Python hässlich finde
Das kann man auch wunderbar lesen
Und jedes Mal wenn ich damit was mache
Was nicht so oft ist
Aber jedes Mal wenn ich damit was mache
Bin ich begeistert von
Wie einfach man die meisten Sachen machen kann
Gerade weil die Python Standard Library
Mittlerweile richtig cool ist
Von CSV Parser
Und von Python Standard Library
Bis IP Calculator
Ist alles in der Python Standard Library drin
Und mal ehrlich
Die wenigsten Standard Libraries
Haben einen CSV Parser mit drin
Ich glaube Go hat einen
Aber viel mehr fallen mir da jetzt nicht ein
Ich glaube Go hat einen CSV Parser
PHP, ja gut
PHP wundert mich nichts mehr
Aber die meisten Programmiersprachen
Werden in ihrer Standard Library
Keinen CSV Parser haben
Und
Und Python hat einen
Und ich muss sagen
Also
Das finde ich nice
Dass der so viel drin ist
Und auch die Syntax ist schon cool
Und jedes Mal wenn ich damit was mache
Bin ich immer
Bin ich immer begeistert
Wie gut das funktioniert
Ja
Hältst du von Java
Abstand
Java ist nicht mein Fall
Was habt ihr gegen PHP?
Nix wirksames
Doch
PHP ist gerade mit Laravel oder sowas
Gar nicht so verkehrt
Ja
Ja
Ja
Ja
Ja
Ja
Ja
Ja
Ja
Ja
Ja
Ja
Ja
Ja
Ja
Ja
Ja
Ja
Ja
Ja
Ja
Ja
Ja
Ja
Ja
Ja
Ja
Ja
Ja
Ja
Ja
Ich finde es geht
PHP
Ich habe es schon öfters im Stream gesagt
PHP ist eigentlich besser als sein Ruf
PHP ist keine scheiß Sprache mehr so wie früher
Mit dem richtigen Framework
Also PHP geht
Also wenn ich die Auswahl hätte
Eine Web-Anwendung
Äh
Mit C++ machen zu müssen
Oder PHP
Ja da weiß ich
Im Backend
Da weiß ich auf jeden Fall was ich verwenden würde
Ja
So was?
Mal eine Frage
Würde ich eine Art Kartenspiel
Äh
Was?
Domain treffen?
Ach ne Dungeons and Dragons
Okay
Zu viele Abkürzungen
In Python mit Klassen oder mit
Hä?
Das eine hat mit dem anderen noch überhaupt nichts zu tun
Das sind zwei komplett
Das sind doch zwei
Komplett
Äh
Unterschiedliche Paar Schuhe
Oder
Deine Karten
Musst du als Klassen anlegen
Wenn du es objektorientiert machen willst
Ja dann hast du irgendeine Base-Kart-Klasse
Und erbst dann da irgendwas von
Wie auch wie auch immer
Gibt es da zig Varianten wie man das machen kann
Aber vergesst den äh
Die die Singleton-Management
Das Singleton-Management-Factory-Repository-Pattern nicht
Ohne das kannst du garantiert kein Kommandozeilen-Spiel programmieren
Würde zumindest der Java-Programmierer sagen
Aber...
Also du legst die Karten als Klassen an
Und dann hast du halt am Ende eventuell
Für jeden Spieler
Einen Dictionary mit Karten die sie haben
Was du auch machen kannst
Weil die Karten können ja nicht doppelt vorkommen
Da kannst du sogar ein Dictionary nehmen
Mit irgendwie Name von der Karte vorne drin
Oder was auch immer
Versteh nur Bahnhof
Ich talk
Was?
Ich talk nur Netzwerk
Lell
Dann
Ja das machen wir das nächste Mal
Äh ich wollte ja nicht sagen, dass ich die Karten als Klasse verwenden will
Ich wollte ja nicht sagen, dass ich die Karten als Klasse verwenden will
Ich wollte ja nicht sagen, dass ich die Karten als Klasse verwenden will
Ich wollte ja nicht sagen, dass ich die Karten als Klasse verwenden will
Ich wollte ja nicht sagen, dass ich die Karten als Klasse verwenden will
Ich wollte ja nicht sagen, dass ich die Karten als Klasse verwenden will
Ich wollte ja nicht sagen, dass ich die Karten als Klasse verwenden will
Ich wollte ja nicht sagen, dass ich die Karten als Klasse verwenden will
Ich wollte ja nicht sagen, dass ich die Karten als Klasse verwenden will
Ich wollte ja nicht sagen, dass ich die Karten als Klasse verwenden will
Ich wollte ja nicht sagen, dass ich die Karten als Klasse verwenden will
Ich wollte ja nicht sagen, dass ich die Karten als Klasse verwenden will
Ich wollte ja nicht sagen, dass ich die Karten als Klasse verwenden will
dass Layer-3-Switche Router sind und umgedreht und sowas.
Aber lass ich bleiben.
Ich habe wieder dumme Comments gelesen in YouTube und habe mich aufgeregt.
Also wenn du was wissen willst, frag, aber wenn das natürlich überhaupt nicht deine Welt ist,
ist es schwierig mit Fragen.
Ich würde es tatsächlich auch nicht übertreiben.
Klassen, also Karten ist ein sehr beliebtes Beispiel,
um Objektorientierung quasi zu üben, auch in Schulen und sowas.
Man muss es nicht übertreiben.
Also man kann es mit Karten wirklich krass übertreiben, mit 85 Milliarden Klassen.
Man muss es aber nicht.
Ich würde es auch nicht zu sehr übertreiben.
Ja, das stimmt, Dungeons & Dragons ist kein Kartenspiel.
Es gibt noch nicht mal Karten.
Es gibt Charakter-Sheets, aber das sind ja keine Karten.
Du könntest aber dann früher oder später in das Rechteck-Quadrat-Problem laufen,
je nachdem, wie du deine Klassen-Hierarchie machst.
Kennt ihr das Rechteck-Quadrat-Problem,
beziehungsweise das Ellipse-Kreis-Problem bei Objektorientierung?
Ich hoffe, ich kriege das jetzt aus dem Kopf noch richtig hin, was das ist.
Also, wie würdet ihr eine Klassen-Hierarchie aufbauen?
Machen wir mal ein Beispiel hier.
Glas.
Glas.
Mein Glas.
Würdet ihr sagen, also mal angenommen, ihr wollt eine Klasse abbilden,
Rectangle, schreibt man das so,
und ihr wollt eine Klasse abbilden, irgendwie Square.
So.
Das ist der Deadly Diamond.
Ja, sowas ist in der Richtung.
Wer erbt von was?
Wer erbt von was?
Ist Rectangle die Base-Klasse von Square?
Oder ist Square die Base-Klasse von Rectangle?
Oder machen wir es mit Kreis, ja?
Machen wir mal hier was, was ich...
Also, instinktiv würde man ja eigentlich sagen, so, ne?
Ja, instinktiv würde man dann eigentlich sagen, so.
Aber, man bekommt dann Probleme, wenn man da jetzt irgendwelche Properties anlegen will.
Weil, zum Beispiel bei Rectangle kannst du sagen,
x, int, x, int, y, oder so.
Und das ergibt ja bei Square jetzt gar nicht so viel Sinn.
Weil, da ist alles gleich.
Ich meine, klar, kannst du in dem Fall auch machen.
Ich muss mir mal ein Beispiel dazu angucken, weil was...
Ich weiß gar nicht mehr genau, nicht, dass ich jetzt Mist erzähle.
Kreis-Ellipse-Problem, genau.
So.
Haben die da ein gescheites Beispiel für?
Naja, gibt's da nicht, gibt's da nicht irgendein gescheites...
Alter, ja, ich schau, ich übertreib's mal.
Äh, ist das Lisp?
Oder was ist das?
Monka S?
Monka S?
Kreis-Ellipse, was anderes wie Square-Rectangle.
Ja, du hast recht.
Du hast, du hast, du hast recht.
Man muss das mit Kreis-Ellipse machen.
Ich glaube, dann versteht man es besser.
What the hell?
Was zum...
Ah.
Ja, also, machen wir es, machen wir es mal so.
Also, normalerweise würdest du jetzt sagen, ja, was heißt denn Ellipse?
So, hier, machen wir mal so, Ellipse.
Du machst das auf Deutsch, Alter.
Kreis.
Kreis.
So.
Normalerweise, oder wir können das, sagen wir mal so, wir könnten das auch, wir könnten das, wir könnten das auch mit Square-Ellipse machen.
Jetzt hast du halt das Problem, dass du beim Kreis jetzt quasi...
Ach, ich krieg nicht mal...
Ich krieg's nicht mal zusammen, wie das jetzt genau war.
Es ergibt zumindest keinen Sinn, weil du bei dem einen...
Was brauchst, was beim anderen drin ist und umgedreht auch nicht.
Bei wem ist das noch nicht so lange her?
Wer weiß das noch?
Kreis ist ein Spezialfall der Ellipse.
Ja, mathematisch gesehen schon, programmiertechnisch funktioniert das nicht.
Einerseits ist ein Kreis eindeutig eine Ellipse, genau.
Was dafür spricht, dass es wiederum ein Subtyp der Ellipse handelt.
Genau.
Das funktioniert aber nicht.
Das funktioniert aber nicht.
Andererseits führt die Unterstützung einer nachträglichen, unabhängigen Veränderung der Länge, die für die Ellipse...
Genau, genau.
Das ist...
Deswegen, deswegen, das kann man durchaus auch mit Square Rectangle machen.
So, hier hast du jetzt das Problem, dass du in der Base-Klasse erlaubst, X und Y zu setzen.
Genau, jetzt ist es mir wieder eingefallen.
Das Problem ist jetzt, dass du damit den Square kaputt machst.
So, deswegen funktioniert das nicht.
Also sprich, ich hab jetzt den Kram angelegt und wenn ich jetzt einen Square anlege...
Äh, wenn ich jetzt einen Square anlege...
Äh, wenn ich jetzt einen Square anlege...
Äh, wenn ich jetzt einen Square anlege...
Oh, dann kann ich jetzt immer noch X und Y setzen, was keinen Sinn ergibt.
Weil ich könnte sagen, X ist 4 und Y ist 2.
Dann ist das aber kein Square mehr.
Das...
Jaja, dann kann man, dann kann man, da kann man natürlich drumherum wursten.
Ja, du kannst zum Beispiel sagen, okay, das hier ist, ist, ist Abstract oder irgendwie sowas.
Oder, oder Virtual.
Da müsste man es überschreiben.
Aber man kriegt es immer noch nicht.
Weg.
Man kriegt es immer noch nicht weg.
Also es ist auf jeden, es ist auf jeden Fall da.
Also du kriegst, du könntest das heiden vielleicht irgendwie.
Aber man, ich glaube man sieht, man sieht schon halbwegs das Problem.
Ne, das funktioniert nie.
Wir können es aber anders machen.
Wir müssen es nicht mit Properties machen.
Wir können auch sagen, okay, wir haben jetzt, wir haben jetzt irgendwie nur Rectangle.
Und da kannst du jetzt sagen, keine Ahnung, äh, Void, Set, X.
Oh.
Irgendwie Void.
Set, Y.
So, das ist jetzt da drin.
Int.
So, und das erbt jetzt Square automatisch.
Ergibt aber keinen Sinn.
Ich meine, was ich machen könnte, ist natürlich, ich könnte, könnte sagen, okay, die Dinger sind, sind Virtual.
Also was man zum Beispiel, also eine Lösung, was man machen kann.
So, ich könnte sagen, die Dinger sind Virtual.
Zum Beispiel, bin ich jetzt total verwirrt?
Achso, Cannot Be Private, ja, ja.
Also ich, ich, ich könnte zum Beispiel sagen, sie sind Virtual.
Dann.
Dann kann ich sagen, dass ich die überschreibe.
Aber, dann habe ich erstens immer noch sinnlose Benahmungen drin bei einem Square.
Set, X, Set, Y.
So, und die Frage, wie verwende ich das jetzt?
Set, X ergibt keinen Sinn.
Set, Y ergibt eigentlich auch keinen Sinn.
Also müsste ich theoretisch dann sowas hier machen.
Ähm.
Ich setze jetzt einfach nur Public Set.
X, keine Ahnung.
Also ich müsste quasi eine neue Set-Methode machen für Square, was beides setzt.
Und dann müsste ich den anderen Kram überschreiben und darin eine Exception werfen oder sowas.
Was auch bescheuert ist.
Ja.
Also was man daran nur sieht ist, nur weil die Sache logisch ist von der Vererbung her,
heißt das nicht, dass es auch praktisch gesehen Sinn ergibt.
Es gibt noch ein Problem mit C++ dank der Mehrfachvererbung.
Ja, das hast du auch.
So, übrigens, es gibt da ein paar Ansätze für, wie man das lösen könnte.
Dieses Problem.
Allerdings nicht so, nicht mit dieser klassischen, wir machen so eine Vererbungshierarchie.
Umgekehrt, genau, lustigerweise, umgekehrt würde das funktionieren in dem Fall.
Ja, du hast recht.
Umgekehrt würde es funktionieren.
Aber dann hast du das Problem.
Dass du da eine Vererbungshierarchie hast, wo Rectangle, wo quasi ein Rechteck von einem Quadrat erbt,
was rein logisch gesehen irgendwie nicht intuitiv ist.
Das würde in dem Fall tatsächlich funktionieren.
Du müsstest sagen, Square ist die Base-Klasse und Rectangle ist quasi das Abgeleit davon.
Was aber auch, gerade mathematisch, das ergibt auch so keinen Sinn.
Das ist das Problem.
Ja.
Das hier mag vielleicht mathematisch richtig sein, ist aber objektorientierungstechnisch Schwachsinn.
Und umgedreht ergibt das Ganze logisch keinen Sinn.
Also, man könnte versuchen, sowas hier zu lösen.
Zum Beispiel, wenn man jetzt sagt, Class Rectangle.
Und ich bastle jetzt mal beispielshaft was zusammen.
Das muss jetzt keinen großen Sinn ergeben.
Da kann man nicht, man könnte es zum Beispiel mit Interfaces machen.
Aber man könnte es zum Beispiel sagen, was weiß ich.
Muss man jetzt mal ein gescheites Beispiel dazu einfangen.
Benutzt du eigentlich Wim?
Ja, oft.
Ja, also man könnte zum Beispiel irgendwie sowas machen wie ein Interface, wie...
Ähm...
Mir fällt jetzt echt nichts Sinnvolles ein, ja.
Äh...
Zumindest würde man diese Methoden in das Interface auslagern.
Und dann würde man halt noch ein Interface machen.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
Also quasi mehr Composition als Vererbung.
Ja, sowas Dummes habe ich auch gedacht, Alter.
Irectangle-Label oder sowas.
Nein, das will man nicht.
Das könnte man sicherlich irgendwie zusammen basteln.
Also, in dem Fall würde ich sagen, ist es eindeutig.
Also, anstatt sowas hier zu machen.
So was kann man besser machen, wenn ich...
Da müsste ich mir im Vorfeld ein paar sinnvolle Beispiele für überlegen.
In dem Fall wäre es besser, tatsächlich, man macht hier nichts großartig mit Vererbung.
Man könnte zum Beispiel irgendwie eine Base-Klasse machen, Shape oder sowas, ja.
Wo man dann so ganz, wo man dann zum Beispiel sowas macht wie Public, Void, Draw oder irgendwie sowas drin hat.
Was für alle Shapes gilt.
Aber, dass man die eigentlichen Eigenschaften dann irgendwie über Interfaces macht, kann man sich unterschiedliche Sachen mitmachen.
Also, dass man mehr Composition macht als Vererbung.
Aber, das ist Big-Brain-Fragen, ja.
Shape würde ich wahrscheinlich Abstract machen, ja.
Das stimmt, das stimmt.
Das ist jetzt verständlich.
Wirklich zu Big-Brain.
Kannst du die Funktion nicht private machen bei der Erbenden-Klasse?
Nein, das geht nicht.
Das zeige ich jetzt noch ganz kurz, dann mache ich doch mal schnell weiter.
Wir haben ja schon 1, 2, 3, das zeige ich noch jetzt.
Also, man denkt, also, das eigentliche Problem ist, dass du nicht was wegwerfen kannst, was in der Base-Klasse drin ist.
Ich müsste eigentlich sagen, Rectangle hat diese Methoden, aber ich möchte nur eine der beiden haben in Square.
Was leider nicht funktioniert ist, Override Y und dann zu sagen Private.
Das geht nicht, weil die Base-Klasse ja explizit sagt Public.
Es ist aber auch ganz logisch, dass das nicht funktioniert.
Also, wenn das in irgendwelchen Programmiersprachen funktioniert, ergibt das logisch gesehen keinen Sinn.
Weil du kannst den hier immer zur Base-Klasse casten und hättest dann wieder Zugriff drauf.
Also, wenn das irgendeine Programmiersprache erlaubt, ergibt es keinen Sinn.
Selbst wenn das hier Private erlaubt wäre, würde ich Square wieder zu Rectangle casten, wäre es wieder Public.
Gibt keinen Sinn.
Warum nicht die Verarbeitung umdrehen?
Ja, das ist in dem Fall tatsächlich die Lösung, die ergibt aber aus mathematischer Sicht keinen Sinn.
Dann würdest du nämlich sagen, quasi ein Rechteck ist ein Quadrat.
Aber ein Rechteck ist kein Quadrat.
Ja, man kann in C++ tatsächlich noch ein bisschen tricksen.
Ich könnte jetzt zum Beispiel sagen...
Wie das jetzt funktioniert?
New?
Genau, ich könnte sagen, Public New Void.
Dann würde es das Alte hypen.
Das heißt aber nicht, dass es dann weg ist.
Und sobald ich es zur Base-Klasse caste, ist es auch wieder weg.
Vergesst es einfach, Leute.
Vollkommen egal für die Uhrzeit.
Ihr habt recht, es ist für die Uhrzeit zu Big Brain Time.
Ja, das würde auch Probleme sein.
Aber ich glaube, man hat es jetzt halbwegs verstanden.
Wie ich jetzt da drauf gekommen bin, ist eine gute Frage.
Ich glaube, weil irgendjemand gefragt hat...
Genau, es hat jemand gefragt, wie er ein Kartenspiel mit Klassen implementieren würde.
Und da kannst du, denke ich mal, relativ schnell in solche Probleme laufen.
Wir definieren das einfach um.
Welches Tool zum Dokumentieren von Code würdest du empfehlen?
Gar keins.
Guter Code dokumentiert sich selbst.
Braucht man nicht.
Overrated, Cheapated, Outdated.
Komplett useless.
Und Tests kann man auch gleich weglassen.
Okay.
API-Dokumentation braucht auch keiner.
Einfach richtig programmieren.
Ohne Fehler.
Und schon ist das Problem gelöst.
Aber ernsthaft...
Alles immutable, gell?
Nee, aber ernsthaft.
Das ist eine Frage, die ich mir auch stelle, was da ein guter Mittelweg ist.
Wir haben für viele Sachen, die wir auf der Arbeit machen, haben wir einen Confluence.
Wo so Sachen drin stehen, wie zum Beispiel, warum welche Technologie ausgewählt wurde.
So was in der Richtung.
Das ist aber auch nicht der Weisheitsletzter Schluss, weil das quasi schon ab dem Abspeichern der Seite veraltet ist.
Ich habe da keine gute Empfehlung, ja.
Das finde ich ist übrigens eine gute Taktik.
Einfach alles immutable.
Leute, das ist so eine typische Aussage.
Das, hier, weißt du, das wird, ich könnte, also mich würde mich nicht wundern, wenn in 1, 2 Jahren das der neue Trend ist.
Dass das irgendwelche super Big Brain Consultants dann den Leuten...
...verkaufen würden.
Das heißt natürlich dann nicht einfaches, einfach immutable machen.
Das heißt dann entweder immutable Design oder das ist eigentlich auch schon zu low level.
Das braucht einen richtig, richtig Big Brain Name.
Und dann kommen in 1, 2 Jahren die ganzen Hyper Consultants und Konferenztalker und sagen einfach alles immutable machen.
Und machen da ganze große Wissenschaft drum.
Ja, das ist richtig, das ist richtig.
Aber das ist ja damit nicht gemeint.
Immutable by Design.
Da müsste es, da müsste es, da braucht es ein richtig gutes Buzzword für.
Dass das, dass, dass das funktioniert.
Irgendwie, mein Cloud, sowas, sowas in Richtung Cloud Native.
Nur für immutable by Design.
Oder eine gute Abkürzung, ja.
Aber immutable by Design ist zu immutable Blockchain Technology.
Was weiß ich.
Oder es muss, es muss ja auch mit Blockchain auch nichts zu tun haben.
Es muss keine Blockchain einfach im Namen haben.
Native Immutability.
Und dann müssen wir noch irgendeine Zertifizierung uns dafür ausdenken.
Max, Max riecht die Stonks, ja.
Also wir schreiben erstmal jetzt ein Manifest.
Das Native Immut...
Oh, ich kann das nicht mehr aussprechen.
Das Native Immutability Manifesto.
Manifest brauchen wir jetzt.
Und dann verkaufen wir das an irgendwelche Stonks-Leute.
Und dann machen wir, dann machen wir irgendwelche, irgendwelche YouTube, YouTube-Videos für.
Dann machen wir da so einen Titel.
Warum ich Programmiere hassen für Immutability oder sowas.
Ja, ja, ja, ja.
Nein, nein, es ging ja darum.
Es ging ja darum, fehlerfreie Software zu programmieren.
Und wenn man alles immutable macht, also quasi, ich weiß es, Leute.
Hard-Coded by Design quasi, ja.
Also man, man, man programmiert jede nur erdenkliche Situation, die auftreten könnte, schon hart in sein Programm ein.
Das heißt, das ganze Programm besteht dann einfach nur noch aus ganz vielen Ifs.
Ohne Input, nur Output.
Und dann kann man endlich sagen, wir haben fehlerfreie Programme.
Die sind dann halt petabyte groß, weil jeder Fall drin sein muss.
Aber das ist, das wäre echt, das wäre so ein typischer, so ein typischer IT.
Buzzword Trend, den ich mir wirklich gut vorstellen könnte in 1, 2 Jahren.
Ja, hör mal auf.
Ich habe da mal ein Video zu Source Code von dem Zeug geguckt.
Ja, oh fuck.
Wir haben 21.50 Leute.
Kann das sein, dass wir 2, 2 Stunden 15 lang nicht mehr programmiert haben als ein Jason Objekt?
Das ist das wirklich?
Ja, ich glaube wirklich.
Nicht mehr gemacht als ein Jason Objekt anzulegen in 2,5 Stunden.
Das ist aber ganz schön schlecht, oder?
Ich wäre nie fertig.
Ich muss erfrieren übermorgen, Leute.
Ich muss, ich erfriere übermorgen, weil ich meine Heizung nicht einschalten kann.
Wir haben doch noch 10 Minuten aufgehend.
Huge Productivity.
Immutable Design Philosophie jetzt hier.
Also, warum ging das denn jetzt nicht?
Ich wollte nachgucken, warum das hier nicht funktioniert hat.
Also, System Logistics.
Wobei, jeder mag nicht, weil, could not pass temperature from, warum?
Ich habe das genau nach eurem Beispiel gemacht.
Ich habe es genau nach eurem Kack-Beispiel gemacht.
Es funktioniert nicht.
Wir setzen einfach die Templates.
Wie sind die Templates?
Wir setzen die Templates.
Mode, Template?
Brauchen wir?
Was machen wir jetzt?
Easy, easy.
Wir kriegen das hin, Leute.
Wir kriegen das hin bis 22.
Ich sage es euch.
Wollen wir?
Komm, wir machen ein Point.
Meint ihr, ich kriege es bis 22 schon hin?
Also, das ist das Zertifizium.
Das ist das Zertifizium.
Das ist das Zertifizium.
Das ist das Zertifizium.
Das ist das Zertifizium.
Der Thermostat da ist mit sinnvollem.
Ähm, ich mache mal jetzt einen Point auf.
Mit sinnvollen Defaultwerten.
Geht es bis 22 Uhr?
Ja?
Nein.
Dauerabstimmung, eine Minute.
Bam.
Speedrun.
Also, das brauchen wir.
Dann brauchen wir Current Temp Template.
So, was brauchen wir sonst noch?
Mode Template, Template Temp Stat Template.
Meine Güte, wer hat die Benamung wieder?
Ähhhhh.
Wer hat die Benahmung wieder ausgedacht?
Template.
So, was muss denn in dieses Template jetzt rein?
Äh, MQTT, Home Assistant, Value, Template.
Ich brauche da irgendein Example für.
Ja, Predict, ich habe jetzt keine Zeit.
Ich muss mich jetzt konzentrieren.
Äh, wie geht denn das?
Wie geht denn das?
Example.
Ich brauche Example.
Example.
Please.
Value.
Value, Jason.
Jawohl.
Example.
Da ist es.
Ich habe es.
Da.
Value, Jason.
Mode.
Hier.
Ne, ne, ne.
Mode.
Äh, äh, was ist das?
Temp.
Temp TPL.
Temp TPL ist was?
Target Temp?
Current Temp?
Ach, warte, was weiß ich.
Äh, Stat.
Ne, Current Temp.
Target Temp.
Warum sind die Dinger auch so kacke benannt?
Nein.
Oh, der Chat, das ist halt ein großes Vertrauen in mich.
So.
Ähm.
Ja.
Bäm.
Wer hat gesagt, dass es nicht funktioniert bis 22 Uhr?
Wer hat gesagt, dass es nicht geht?
Ich gucke jetzt nach, wer abgestimmt hat.
Instant Bann.
Wer, wer hat, wer hat nicht believed hier?
Funktioniert.
Es funktioniert.
Guckt.
Zack.
Zwei Minuten hat es gedauert.
Geht das leider?
Ah, ja.
Ah, wir setzen, Moment, wir setzen Mode.
Sekunde.
Wir setzen Mode noch auf Heat.
Noch besser.
Guck mal da.
Kann man sogar ausschalten und anschalten.
Also, die Commands funktionieren nicht, aber man sieht, dass das, dass das Setzen schon mal klappt.
Wie er 23,6 aufgerundet hat auf 24.
Was auch in Ordnung ist für die Anzeige.
Was soll er sonst hinschreiben?
Ich meine, Funktionalität ist immer noch nicht gegeben.
Ich meine, es, es, es überträgt Daten, die einfach fake sind.
Okay.
Okay, das nächste Mal müssen wir uns dann aber wirklich...
Publisht er schon die neuen Temps, die eingestellt werden?
Das gucken wir jetzt noch.
Das gucken wir jetzt noch.
Das gucken wir jetzt noch.
Das gucken wir jetzt noch, ob das funktioniert.
Ähm, also.
Ne, MQTT-Client.
Kann er mal schreiben.
Sub?
Ne, Filter.
Filter.
Filter.
Zwar filtern auf das Mode.
Mode-Command.
Ah.
Ah.
Also, von der Idee her, sollte der jetzt hier unten ausspucken, wenn ich den Modus umschalte.
Gucken wir mal, ob das funktioniert.
Modus umschalten.
Zack.
Zack.
Bam.
Off-Feed.
Der subscribt schon, wenn einer was klickt im Webinterface.
Klar kannst du blöde Fragen stellen.
Immer.
Welche PC-Hardware hast du?
Ganz einfach.
Da gibt es ein Video.
Meine PC-Hardware ist vier Jahre alt und immer noch wunderbar top aktuell, auch für Spiele,
weil sich da nichts mehr tut.
Korrekt.
Ich muss dir das Video nicht verlinken, aber wenn du dir dummes Gelaber von mir ansehen
willst zum Rechner, da, da sind die Teile.
Massive Kamera-Arbeit fällt mir da gerade wieder auf.
Ja, ich habe bloß mehr RAM drin.
Ich habe 2x60, ich habe 32G jetzt drin.
Aber hier ist das alles.
Also, Frage, Chat, was war?
Was heißt war?
Das kommt ganz entscheidend auf die Programmiersprache an, was sie damit meint.
Also, war in JavaScript ist was ganz anderes als war in C-Sharp.
Und noch was anderes wie in Go.
Also, das hängt von der Programmiersprache ab.
Ja, war ist die Abkürzung für Variable, meistens.
Das hängt von der Programmiersprache ab, was das ist.
Also, in JavaScript ist es die oldschooligste Variablen-Zuweisung oder Variablen-Deklaration überhaupt.
War war, glaube ich, das Erste, was es gab in JavaScript oder so.
Das verwendet, glaube ich, keiner mehr.
Heute, wenn man cool ist, verwendet man, glaube ich, Let in JavaScript und Konst kein War mehr.
Aber War kann man verwenden in JavaScript, aber JavaScript ist nicht so konsistent.
In C-Sharp ist es eine Abkürzung.
Und zwar, das kann ich dir zeigen.
In C-Sharp kannst du zum Beispiel sowas schreiben.
War, wir machen das jetzt mal richtig, richtig deutscher YouTube-Programmier-Tutorial, Zahl gleich 1.
Kannst du in C-Sharp machen.
Die Sache ist jetzt die, dass dieses War eigentlich so tut, als wäre das irgendein Typ, wo man alles reinschreiben kann.
Wenn man das von JavaScript kennt.
Man kann da aber nicht alles reinschreiben.
Wenn ich jetzt zum Beispiel versuche, in Zahl irgendeinen Text reinzuschreiben,
sagt er, nee, nee, nee, nee, das geht nicht, weil du kannst nicht einfach einen Text in eine Zahl umwandeln.
Das heißt, in C-Sharp ist das nach wie vor alles typisiert.
Und wenn ich jetzt zum Beispiel hier mal drübergehe und gucke, was ist denn das eigentlich,
dann sagt er mir, ja klar, äh, mal hier, Zahl, sagt mir, das ist ein Int.
Also im Prinzip ist War in C-Sharp eigentlich nur eine Abkürzung dafür,
dass ich mir es erspare, den Datentyp hinzuschreiben.
Ich meine, war in C-Sharp ist das eigentlich nur eine Abkürzung dafür, dass ich mir es erspare, den Datentyp hinzuschreiben.
Ich meine, war in C-Sharp eigentlich nur eine Abkürzung dafür, dass ich mir es erspare, den Datentyp hinzuschreiben.
Der Int macht jetzt vielleicht nicht so viel Sinn, ist genauso lang, ne.
Aber ich könnte halt zum Beispiel jetzt auch, äh, sowas hier machen.
So zu Text reinschreiben.
Da könnte ich auch war davor schreiben.
Aber wenn ich jetzt gucke, jetzt ist es ein Text.
Also, es ist, es ist, in C-Sharp ist das eigentlich bloß eine, ein syntaktische,
ein syntaktischer Zucker, dass ich meine, äh, Datentypen nicht hinschreiben muss.
Ja, um die ganze Sache aber jetzt noch mal, äh, äh, äh, noch ein bisschen weiter auszuführen schnell.
Es gibt in C-Sharp, seit der letzten C-Sharp-Version gibt es den umgedrehten Fall.
Das hier kennt ja jeder.
Na, sagen wir mal, war new list int, so, 1, 2, 3, 4.
So, was das hier jetzt ist, eine Liste, was das hier jetzt ist, ist eine Liste mit den Zahlen 1, 2, 3, 4.
Das kennt, glaube ich, jeder.
Wisst ihr auch, dass das umgedreht geht?
Wisst ihr auch, dass ihr sagen könnt, das geht aber erst seit einem der letzten C-Sharp-Versionen.
Wisst ihr, dass ihr sagen könnt, also, wir lassen jetzt mal das Initialisieren weg.
Also, das hier ist jetzt quasi eine Liste mit Zahlen.
Also, eine Liste mit Ints, in die ich beliebig viele Zahlen reinschreiben kann.
Liste, add, 2, so.
Das geht, das geht auch umgedreht.
Ich kann auch sagen, Liste int, Liste.
Und dann sage ich.
Ich sage einfach nur noch new.
Das ist das Umgedrehte wahr.
Der erkennt anhand der linken, anhand der linken Seite, dass das eine Liste ist aus int.
Und macht daraus im Endeffekt das da.
Also, es reicht, wenn ich jetzt nur noch new schreibe, weil er weiß, dass das eine Liste ist.
Was natürlich nicht funktioniert, ist die Kombination von beidem.
Dann sagt er, ja gut.
Ja, was denn jetzt?
Also, das kann ja logischerweise nicht funktionieren.
Ich kann nicht links quasi das per, wie soll man sagen, per Ableitung zuweisen lassen und rechts auch.
Das geht natürlich nicht.
Na klar geht das in .NET Core.
Das ist .NET Core hier.
Das geht in .NET Core natürlich.
Ach so, ja du hast recht, in .NET Core geht das nicht.
Weil es ist ja, es heißt jetzt ja .NET.
.NET Core.
Es heißt jetzt ja .NET.
Es heißt ja nicht mehr .NET Core.
Übrigens, wer sich jetzt fragt, wofür man das braucht.
In dem Fall ist das natürlich ziemlich bescheuert.
In dem Fall ist das ziemlich bescheuert.
Aber zum Beispiel, wenn ihr eine Klasse habt.
Ja, Public Class Twitch Chat.
Und da drinne sagt ihr dann zum Beispiel Private Read Only Liste int oder hier String.
String.
Ich kann ja schreiben ja.
User.
Dann könnt ihr das jetzt so machen.
Das ist natürlich schon nice.
Weil war ist in dem Kontext nicht erlaubt in C Sharp.
Hier ist es ganz praktisch.
Früher musste man immer hier sowas hinschreiben.
Das braucht man jetzt nicht mehr.
Es reicht jetzt einfach new.
Das ist das tatsächlich ganz nice.
Das geht übrigens auch bei Funktionen.
Also wenn ihr jetzt sowas habt wie Void.
Blub.
Blub.
Blub.
Und die Funktion erwartet hier eine Liste.
Und ihr wollt es jetzt übergeben.
Ihr wollt da was Neues anlegen.
Das ist jetzt ein knacktes Beispiel.
Aber es funktioniert.
Ach ne, das ist ja.
Muss ich auch andersrum schreiben.
So und jetzt sage ich T.
Jetzt sage ich T.
Blub.
Dann kann ich einfach nur hier sagen new.
Ist zwar so ziemlich die hässlichste Variante.
Aber das funktioniert.
Und das funktioniert auch an anderen Stellen.
Ja, C++ ist eine richtige Scheißsprache.
Hast du gut erkannt.
Ja, das funktioniert damit.
Und auch wenn das hier, also warum das ein richtig cooles Feature ist.
Auch wenn das hier jetzt noch relativ kurz aussieht.
Es gibt manchmal Dinger, die werden ein bisschen länger.
Mal vielleicht ein bisschen übertriebenes Beispiel.
Was auch halbwegs neu ist, wie Sharp Features verwendet.
Wir wollen das ganze Multithreaded machen.
Deswegen nehmen wir jetzt hier ein Concurrent Dictionary.
Mit einem Key von String, allerdings einem Value aus einem Tuppel von Int und Int.
Und wir geben denen sogar noch einen Namen.
Int ist was weiß ich.
Start und End.
So, jetzt wird es schon ein bisschen viel, oder?
User.
Normalerweise müsste ich jetzt sowas hier machen.
Im alten C Sharp.
Müsste ich jetzt sowas hier schreiben.
Das kann keine Sau mehr lesen, oder?
Also das ist das wirklich vorbei.
Bei der.
Also bei dieser Zeile ist jetzt wirklich Ende.
So, jetzt kann ich einfach so.
Wow, wow, wow, wow.
Jetzt kann ich einfach so schreiben.
Und jetzt ist das natürlich schon deutlich besser lesbar.
Wie machst du das, dass da Topic oder Item steht?
Ey, das ist, das macht Rider standardmäßig so hier die Idee.
Ah, das ist natürlich recht praktisch jetzt an der Stelle.
Das mag jetzt vielleicht ein bisschen konstruiert sein hier.
Aber ganz so abwegig ist das nicht.
Sowas hier zu haben.
Das kann ich mir sogar.
Das würde sagen, kann ich mir gut vorstellen, dass es.
So oder so ähnlich recht oft vorkommt.
Wann ist das dazu gekommen?
Ich glaube beim letzten.
Ich glaube bei Dotnet 5.
Bei C Sharp.
Was ist das?
8 oder 9?
Sunny 3 Config auf GitHub aktuell fast fast.
Also das ist wirklich nice.
Und die haben.
Die haben wirklich das.
Das muss ich ja mal den Leuten bei.
Bei C Sharp.
Beziehungsweise.
Den C Sharp Language Designern.
Wirklich mal zugutehalten.
Die schaffen das.
Seit 20 Jahren.
Sprache zu designen.
Die.
Aktuell bleibt.
Auch mit aktuellen Gedanken und aktuellen Features.
Ja also C Sharp wird ja.
Es hat sich ja in eine.
Deutlich in eine.
Mehr funktionale Richtung entwickelt als früher.
Früher war C Sharp rein.
Objektorientiert.
Mittlerweile hast du ziemlich viel funktionale Anleihen.
Wusste dir zum Beispiel, dass man folgendes schreiben kann.
Muss ich jetzt muss ich jetzt noch zeigen.
Na also mal angenommen.
Ihr habt hier jetzt.
Nehmen wir mal hier.
Oder machen.
Machen wir es mal.
Wir nehmen wieder unsere Twitch Twitch Chat Klasse.
So da gibt es jetzt eine Funktion drinne.
Public Void.
Ad User.
Und ihr wollt hier ein String User.
User oder Name oder so.
Das kann ja.
Das kann ja durchaus mal vorkommen.
Die Double TV.
Dankeschön für den Sub.
So jetzt müsstet ihr ja normalerweise gucken.
Hey.
If.
Name.
Ist das 0.
Also vielleicht übergibt hier irgendjemand was.
Mit 0.
Dann sagen wir.
Throw.
New.
Argument.
Exception.
Leck mich.
Das müsste man die ganze Zeit machen.
Und ich zeige jetzt nicht.
Nullable Reference Types.
Oder sonst was.
Sondern.
Eine Sache wo man sieht.
Dass sich die Sharp ein bisschen in die funktionale Richtung entwickelt.
Anstatt.
Name.
Gleich gleich 0 zu schreiben.
Kann ich auch schreiben.
Name.
Is.
Not.
0.
Das ist auch neu.
Funktioniert jetzt.
Ja ja.
Ich mache halt.
Das liegt aber daran.
Nicht dass die irgendwie die Sprache aufgebohrt haben.
Das hier ist jetzt die Sharp Pattern Matching.
Das heißt.
Die bessere Variante wäre sowas zu prüfen.
Wie.
Name.
Is.
String.
Ja sowas sowas könntest du zum Beispiel prüfen.
Oder.
Du könntest du gerne dann daraus eine eigene Variable machen.
Wenn ich jetzt nicht ganz falsch liege.
Wo du dann in dem If darauf zugreifen kannst.
Also das ist.
In vielen Stellen.
Haben die da viel Funktionales eingebaut.
Geht die Schreibweise New auch mit Non Primitive Types.
Ich meine eine Liste ist kein Primitive Type.
Geht in Richtung Python.
Na ja.
Ein bisschen vielleicht.
Ich meine guck mal.
Das hier ist mein Main File.
Ich brauche nun nicht mal meine Main Methode in C Sharp jetzt.
Sonst auch glaube ich seit Version 9.
Gab es mit JetPrint Annotation nicht sogar ein Not 0.
Kann sein.
Was man jetzt allgemein in C Sharp machen kann.
Das ist die Geschichte.
Aber das ist ein komplett eigenes Thema.
Also da kann man wirklich einiges machen.
Und die haben es halt geschafft.
Deswegen müsste ich wirklich mal einen Hut ziehen.
Von den Language Designern.
Die haben das wirklich geschafft über 20 Jahre hin.
Mit ein paar kleinen Pausen zwischendurch.
Wo Microsoft nicht so genau wusste was sie machen sollten.
Aber spätestens seitdem sie es Open Source gemacht haben.
Kann man wirklich nur den Hut vor den C Sharp Language Designern ziehen.
Willst du nicht einfach ausgehen VM?
Die haben es wirklich geschafft die Sprache aktuell zu halten.
Und neue Features einzubauen.
Ich meine Async Await kommt aus der C Sharp Ecke.
Wo ist denn das Problem VM wieder?
Ah jetzt.
Async Await kommt aus der C Sharp Ecke.
Das ist mittlerweile in Java drin.
Ich glaube in Rust mittlerweile auch.
Äh Javascript meine ich ist es drin.
In Rust mittlerweile auch.
In Java weiß ich es nicht.
Also da hat sich schon einiges getan.
Die letzten Jahre über.
Weiß ich nicht.
Gute Frage.
Letztes Mal hat es noch rumgebuggt bei mir.
Die beste Unterstützung für Async Await hat immer noch C++.
Und wisst ihr auch warum?
Die haben Async Await Unterstützung eingeführt.
Aber nichts in der Standard Library hat Async Await implementiert.
Typische C++ Scheiße Alter.
Ist echt so.
Typische C++ Kacke.
Die haben einfach gesagt.
Wir denken uns was aus wie man Async Await in C++ machen könnte.
Aber einbauen tun wir es nicht.
Und einbauen brauchst du jetzt irgendwelche komischen Third Party Libraries.
Und es funktioniert.
Es ist wirklich.
Also C++ ganz im Ernst.
Was?
Ich will jetzt nicht von Anfang.
Sonst sitze ich um 23 Uhr immer noch da.
Aber es ist wirklich der Wahnsinn.
Nein, nein, nein, nein.
Das eine hat mit Microsoft überhaupt nichts zu tun.
C Sharp ist von Microsoft.
C++ wird von einem Gremium standardisiert.
Weil sie nicht weiß was es eigentlich macht.
Nichts gescheites auf jeden Fall.
C++ ist nicht von Microsoft.
Microsoft hat einen C++ Compiler.
Einer von vielen.
Ich muss das Video mit der Endpunkt hochladen.
Ich muss es aber noch fertig schneiden.
Ich hatte heute keine Zeit für.
Nein, nein.
C++ ist nicht von Microsoft.
Auch C ist nicht von Microsoft.
Also so an Programmiersprachen die Microsoft verbrochen hat.
Fällt mir als erstes C Sharp ein.
Und danach Visual Basic.
Und alle seine Abkömmlinge.
Gibt es noch C++ Compiler?
GCC, LVM und Microsoft?
Ja.
Es gibt für ganz viele abgedrehte Plattformen C Compiler.
Aber das dürften die verbreitetsten sein.
Mit ihren Abwandlungen.
Also beispielsweise der ESP32.
Für diese extensa Plattform.
Was auch immer.
Verwenden GCC.
Mit Custom Zeug für ihren Kram.
Und Rust verwendet LVM.
Und das sind so mit die verbreiteten Sachen.
Also ich meine LVM ist ja quasi eher so eine Compiler Architektur.
Wo man seine eigenen Sachen drauf basteln kann.
.NET ist auch Microsoft.
Das ist richtig.
.NET ist die Runtime.
Wo unter anderem C Sharp drauf läuft.
Aber das hat mit der Sprache nichts zu tun.
F Sharp genau.
Ja hast recht.
Ich sage Ruby on Rails muss ich zum Glück nicht mehr machen.
Ruby finde ich ist eines der besten Sprachen die es gibt.
Ruby on Rails bin ich ganz happy.
Dass ich damit nichts mehr machen muss.
Ihr wisst ja ich verwende den Swagstack.
Den Swagstack.
Der Swagstack ist.
SQLite.
Vue.js.
ASP.NET Core.
Und CraftQL.
Der Swagstack.
So Leute ich gehe jetzt ins Bett.
Woop old.
Wir sehen uns.
Schön das so viele mit dabei gewesen sind.
Bis die Tage.
See you.
Machts gut.
.NET.
.NET.
.NET.
.NET.
.NET.
