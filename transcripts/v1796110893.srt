1
00:01:21,580 --> 00:01:42,600
So, ich bin am Start, alles wieder in Ordnung, ja geht, also es war gestern Abend echt, ist noch ein bisschen, ist noch schlimmer geworden, also ich war glaube ich insgesamt, ja ich muss glaube ich fünfmal aufs Klo oder so, bis es dann wieder gut war, bis ich dann keinen Bauchweh mehr hatte, also das weiß ich, was es war, ich hab das manchmal,

2
00:01:42,600 --> 00:02:18,020
ja, meistens so ein paar Stunden nach dem letzten Essen, irgendwie manchen Tagen vertrage ich nix, weiß nicht woran das liegt, ja war gestern Abend blödes Timing, aber gut, was soll ich machen, ich mein, ich kann ja schlecht mit Bauchweh vorm Rechner sitzen und streamen, in die Hose kacken oder so, naja, das geht ja nicht, also insofern, keine Chance, komm, wir machen wieder ein bisschen Wupp Wupp von gestern an, Wupp Wupp, stehen geblieben, Wupp Wupp,

3
00:02:20,760 --> 00:02:57,320
hast du heute Urlaub? Nein, ich hab heute keinen Urlaub, ich krieg das hier, den Stream als Arbeitszeit bezahlt, Quatsch Leute, Lull, ich arbeite, ich arbeite nur vier Tage in der Woche und montags hab ich immer frei, was sehr, sehr ist, nein, nein, ich hab keinen Urlaub,

4
00:02:58,920 --> 00:03:01,340
ich hatte dieses Jahr noch gar keinen Urlaub, ich hab sogar den Abend,

5
00:03:01,360 --> 00:03:31,340
ich hab den alten Urlaub mitgenommen vom alten Arbeitgeber zum neuen, der neue hat's noch nicht gut geschrieben, aber ich denke mal, das werden die im Laufe der Woche machen, Strategie nicht gut gewählt, ja, das stimmt, ich weiß, dass ihr gerade alle arbeiten müsst, aber was wäre besser, gar nicht jetzt, oder, was soll ich machen, ne, außerdem könnt ihr den Stream sicherlich als Fort- und Weiterbildung abrechnen, ja, so würde ich das auch machen, ich mein, hier lernt man ja was, wir gucken uns heute wieder Google Cloud mit Terraform an und ich zeige euch heute, ich mach jetzt das gleiche,

6
00:03:31,360 --> 00:04:20,630
Intro nochmal, was ich, was ich gestern gesagt hab, so, äh, und zwar, ich zeige euch heute, wie's richtig geht, ganzen Dezember Urlaub, weiß ich nicht, ich hab mich schon, hab ich noch nicht geplant, das zählt fast als Arbeitszeit, dass wir, da wir uns auch, äh, Google Cloud im Geschäft anschauen, ja, das ist so, passt doch, passt auch ganz, passt auch gut, wieso, wie gesagt, wir machen ja hier wirklich Sachen, die euch auch auf der Arbeit was bringen, also, das ist ja nicht, muss es ja nicht komplett verheimlichen, man, gerade wenn ihr was mit Google Cloud und Terraform macht, dann ist es jetzt, es ist ja wirklich,

7
00:04:20,650 --> 00:04:50,510
so was wie, wie, wie Weiterbildung, wenn man so will, ja, natürlich ist vielleicht der Chef ein bisschen skeptisch, wenn das auf Twitch-TV passiert, man, man weiß ja nicht, übrigens, mein, mein Ex-Kolleg, oder was, mein, mein Ex-Kolleg, der mit mir auf die neue Arbeit, der wieder mein richtiger Kollege jetzt, äh, ihr wisst ja, ähm, der hat heute auch angefangen, der hat wieder richtig die Arschkarte gezogen, der war irgendwie im Urlaub vorher und wollte eigentlich gestern da sein und heute anfangen auf der Arbeit und dann ist irgendwie sein Flieger ausgefallen,

8
00:04:50,650 --> 00:05:23,290
er ist heute erst um elf oder so was in Frankfurt angekommen, macht super Eindruck am ersten Arbeitstag, oder, wenn du anstatt morgens wie verabredet erst um elf auftauchst, war das bei der Pizza letzte Woche nicht auch so, ich weiß es nicht, es wäre auf jeden Fall denkbar und wenn es bei der, immer bei der Pizza ist, dann sollte ich vielleicht abends keinen, es ist ja nicht so, ich esse ja gar keine ganze Pizza, ich esse meistens zwei, zwei, drei Stück, je nachdem, wie groß die sind, das ist auch so ganz dünne Pizza,

9
00:05:24,550 --> 00:05:26,810
also, da ist eigentlich nichts,

10
00:05:26,830 --> 00:05:35,170
nix dran, großartig, aber gut, es kann doch durchaus an abends Pizza liegen, dass ich Bauchweh hab, ja.

11
00:05:40,200 --> 00:05:44,020
Bei meiner Arbeit gibt es einen DNS-Block für Twitch, hä?

12
00:05:45,760 --> 00:05:57,560
Ach so, ein DNS wird geblockt für Twitch, okay, ich dachte, du hast einen Block für Twitch in deiner DNS-Configuration, hä?

13
00:05:57,560 --> 00:05:57,600
Was?

14
00:06:02,450 --> 00:06:04,690
Terraform Apply, wir machen mal Terraform Destroy.

15
00:06:04,730 --> 00:06:29,580
Okay, wenn wir gerade dabei sind, ah, no, wir destroyen das nicht, es gibt nämlich einen Bug, den ich euch gleich zeigen muss, du kannst den Stream ja, du kannst den Stream ja, ja, Chat, Leute, ich meine, ich kann auch heute Abend streamen, wenn euch das lieber ist, aber, ich glaube, jetzt wieder aufzugehen ist auch doof, oder?

16
00:06:33,450 --> 00:06:41,550
Ich meine, ihr könnt den Stream ja auch im Wort gucken, das ist ja immer noch irgendwie drei Monate auf Twitch, oder ihr geht auf archivwublos.tv, könnt euch das im Wort anschauen.

17
00:06:41,610 --> 00:06:57,800
Oder ihr geht auf den Wort-Channel auf YouTube, also, wir müssen noch ein paar Sachen anpassen, was wir gestern gemacht haben, ich mach nochmal, ich mach nochmal ein bisschen Intro, ja.

18
00:06:58,820 --> 00:07:06,160
Oh, nice, Pfeifert, ich bin nicht ausgelockt aus Google Cloud, das ist schon mal gut, da muss ich mich nämlich nicht wieder einloggen.

19
00:07:07,780 --> 00:07:11,060
Unknown Error, Keckel, Keckel Test 1, 2, 3, perfekt.

20
00:07:13,100 --> 00:07:19,060
Also, ich mach nochmal das Intro, von dem ich gestern gemacht hab, also wir haben ja vor zwei Tagen bisschen rumgebastelt.

21
00:07:19,200 --> 00:07:22,940
Mit Google Cloud und Terraform, ich erzähl euch ja auch gleich nochmal kurz, was Terraform ist.

22
00:07:24,160 --> 00:07:34,860
Vor allem, wenn wir da rumkonfigurieren, und da war ja ein bisschen das Problem, dass ich selbst, mir ist noch nicht so genau im Vorfeld angeguckt hab, wie man den Terraform Google Cloud Provider benutzt.

23
00:07:34,980 --> 00:07:42,500
Also, sprich, wie man den Terraform Google Cloud provisioniert, und ich hab mir das jetzt ein bisschen angeguckt, und heute zeige ich euch, wie man das richtig macht.

24
00:07:43,120 --> 00:07:48,960
Damit ich nicht alle Lorbeeren selbst ernte hier, ich hab mir ein YouTube Tutorial angeguckt.

25
00:07:49,200 --> 00:07:59,180
Und von irgendeinem Anton, das hier, hab ich mir angeguckt, und hab mich davon ein bisschen inspiriert.

26
00:07:59,280 --> 00:08:01,480
Also, wir machen es allerdings nicht genauso, wie er das macht.

27
00:08:02,280 --> 00:08:06,740
Ich werd die Terraform Datei ein bisschen anders benennen, und auch ein bisschen anderen Inhalt reinschreiben.

28
00:08:07,240 --> 00:08:14,620
Aber das war ein sehr gutes Tutorial für Terraform, Kubernetes Cluster, und so ein bisschen Basic Usage von Terraform plus Google Cloud.

29
00:08:15,560 --> 00:08:18,100
Weil es ist doch schon anders als Azure, muss man sagen.

30
00:08:18,840 --> 00:08:21,380
Terraform, jetzt nochmal zur Erklärung, was das Ganze ist.

31
00:08:21,400 --> 00:08:25,600
Bei der Erklärung selbst von denen, ihrer Seite, blickt man ja nicht wirklich durch, was die einem sagen wollen.

32
00:08:26,920 --> 00:08:28,100
Was ist Terraform?

33
00:08:29,240 --> 00:08:37,760
Terraform ist ein Tool, mit dem man sich Cloud-Infrastruktur provisioniert.

34
00:08:39,240 --> 00:08:43,360
Kann man sich jetzt vielleicht ein bisschen schwierig was darunter vorstellen.

35
00:08:43,360 --> 00:08:51,180
Ganz praktisches Beispiel, wenn ihr bei irgendeinem Cloud-Anbieter, sei es bei Hetzner, sei es bei DigitalOcean,

36
00:08:51,400 --> 00:08:59,240
sei es bei Google Cloud, das ist eigentlich vollkommen egal, wenn ihr dort beispielsweise VMs installieren wollt,

37
00:08:59,240 --> 00:09:05,240
Netzwerke anlegen wollt, bei irgendeinem Cloud-Provider, dann könnt ihr das entweder von Hand im Web-Interface machen,

38
00:09:05,240 --> 00:09:11,240
was halt nicht reproduzierbar ist, das müsst ihr dann jedes Mal machen und dürft keine Zwischenschritte vergessen und sowas.

39
00:09:11,240 --> 00:09:14,240
Oder ihr macht das mit Terraform.

40
00:09:14,240 --> 00:09:21,240
Terraform ist quasi ein Cloud-übergreifendes Tool, wo man Cloud-Ressourcen anlegen kann.

41
00:09:21,240 --> 00:09:29,080
So dass es reproduzierbar ist und man nicht alles immer wieder von Hand machen muss.

42
00:09:29,080 --> 00:09:33,080
Terraform hat noch ein weiteres cooles Feature, wobei das manchmal auch Probleme...

43
00:09:33,080 --> 00:09:39,210
Ich mach die Musik aus.

44
00:09:39,210 --> 00:09:43,040
Wupp wupp wupp.

45
00:09:43,040 --> 00:09:45,040
Terraform der große Bruder von Ansible.

46
00:09:45,040 --> 00:09:47,040
Ne, sind zwei unterschiedliche Tools.

47
00:09:47,040 --> 00:09:51,040
Kann ich aber auch noch gleich was zu sagen, weil das gerne gefragt wird.

48
00:09:51,040 --> 00:09:53,040
Also, um das jetzt hier nochmal abzuschließen.

49
00:09:53,040 --> 00:09:57,040
Terraform hat noch ein weiteres sehr nice Feature.

50
00:09:57,040 --> 00:09:59,040
Was wir vielleicht auch gleich sehen werden.

51
00:09:59,040 --> 00:10:04,040
Und zwar, Terraform merkt sich, welche Infrastruktur man damit angelegt hat.

52
00:10:04,040 --> 00:10:06,040
Und man kann damit die Infrastruktur auch wieder löschen.

53
00:10:06,040 --> 00:10:11,040
Also sprich, wenn ihr Terraform benutzt, um bei Hetzner in der Cloud 10 VMs zu erzeugen.

54
00:10:11,040 --> 00:10:17,040
Und ihr wollt die dann irgendwann wieder löschen, dann könnt ihr einfach sagen Terraform Destroy.

55
00:10:17,040 --> 00:10:19,040
Das ist das Gegenteil von Terraform Apply.

56
00:10:19,040 --> 00:10:25,040
Dann guckt es in seinen State rein und sieht, aha, ich habe vorher diese und diese VMs aufgesetzt.

57
00:10:25,040 --> 00:10:27,040
Das sind also diese VMs mit diesen Inputs.

58
00:10:27,040 --> 00:10:29,040
Die internen IDs und sowas.

59
00:10:29,040 --> 00:10:31,040
Die muss ich jetzt auch wieder löschen.

60
00:10:31,040 --> 00:10:35,040
Und wenn jemand von Hand sich einloggt und dann in der Cloud an den VMs rumspielt.

61
00:10:35,040 --> 00:10:37,040
Und hier Terraform wieder ausführt.

62
00:10:37,040 --> 00:10:39,040
Dann merkt Terraform, dass da einer was von Hand geändert hat.

63
00:10:39,040 --> 00:10:41,040
Und bietet das an, das wieder rückgängig zu machen.

64
00:10:41,040 --> 00:10:45,040
Also, es ist ein sehr nützliches Tool.

65
00:10:45,040 --> 00:10:47,040
Es gibt noch mehr Tools in dieser Richtung.

66
00:10:47,040 --> 00:10:49,040
Terraform ist nicht das einzige, sollte man sagen.

67
00:10:49,040 --> 00:10:53,480
Auch sehr beliebt ist Pulumi.

68
00:10:53,480 --> 00:10:57,480
Das ist von den Features her ungefähr...

69
00:10:57,480 --> 00:11:00,480
...gleich mit Terraform.

70
00:11:00,480 --> 00:11:10,480
Allerdings, man benutzt das mit einer handelsüblichen normalen Programmiersprache.

71
00:11:10,480 --> 00:11:13,480
Also in Terraform definiert man seine Ressourcen so.

72
00:11:13,480 --> 00:11:15,480
In so einer komischen...

73
00:11:15,480 --> 00:11:17,480
Das ist kein YAML, das ist HCL nennt sich.

74
00:11:17,480 --> 00:11:19,480
Das sieht ein bisschen aus wie YAML vielleicht.

75
00:11:19,480 --> 00:11:24,480
In so einer extra Definitionssprache macht man das in Terraform.

76
00:11:24,480 --> 00:11:26,480
Und in Pulumi macht man das zum Beispiel...

77
00:11:26,480 --> 00:11:32,480
...in C-Sharp oder in Getting Started.

78
00:11:32,480 --> 00:11:36,040
Gucken wir uns mal sowas an.

79
00:11:36,040 --> 00:11:39,040
In Pulumi macht man das zum Beispiel...

80
00:11:39,040 --> 00:11:42,040
Es wäre natürlich sehr nice, wenn man ein schönes Beispiel hätte.

81
00:11:42,040 --> 00:11:53,400
Ja gut, genau hier sieht man es.

82
00:11:53,400 --> 00:11:55,400
In Pulumi würde man das gleiche dann machen.

83
00:11:55,400 --> 00:11:59,400
Bloß, dass man das zum Beispiel in JavaScript, Python, Go, C-Sharp...

84
00:11:59,400 --> 00:12:03,400
...oder auch in so einem YAML-Dialekt machen kann.

85
00:12:03,400 --> 00:12:05,400
Ist deutlich vielseitiger.

86
00:12:05,400 --> 00:12:07,400
Pulumi als Terraform.

87
00:12:07,400 --> 00:12:10,400
Dadurch, dass es eben ein Framework ist...

88
00:12:10,400 --> 00:12:14,400
...für so die handelsüblichen Programmiersprachen, die es gibt.

89
00:12:14,400 --> 00:12:16,400
Also wenn man ganz abgedrehte Sachen machen will...

90
00:12:16,400 --> 00:12:18,400
...ist das wahrscheinlich mit Pulumi einfacher.

91
00:12:18,400 --> 00:12:20,400
Dafür ist der Einstieg auch komplizierter.

92
00:12:20,400 --> 00:12:22,400
Terraform hat das auch erkannt.

93
00:12:22,400 --> 00:12:25,400
Wir machen jetzt mal so einen Rundum-Überblick.

94
00:12:25,400 --> 00:12:27,400
Terraform hat das auch erkannt.

95
00:12:27,400 --> 00:12:30,400
Und hat CDKTF ins Leben gerufen.

96
00:12:30,400 --> 00:12:32,400
Das ist Terraform.

97
00:12:32,400 --> 00:12:33,400
Allerdings nicht mehr...

98
00:12:33,400 --> 00:12:36,400
...in ihrem komischen eigenen Dialekt hier.

99
00:12:36,400 --> 00:12:38,400
In ihrem eigenen YAML-Dialekt.

100
00:12:38,400 --> 00:12:42,400
Sondern Terraform auch in handelsüblichen Programmiersprachen.

101
00:12:42,400 --> 00:12:45,400
Ist auch eine coole Geschichte.

102
00:12:45,400 --> 00:12:46,400
Habe ich selbst noch nie benutzt.

103
00:12:46,400 --> 00:12:48,400
Haben wir bei uns im To-Do drinne stehen.

104
00:12:48,400 --> 00:12:50,400
Werden wir irgendwann demnächst mal ausprobieren.

105
00:12:50,400 --> 00:12:54,400
Das Ganze, egal jetzt ob Terraform oder Pulumi...

106
00:12:54,400 --> 00:12:57,400
...nennt man Neudeutsch Info.

107
00:12:57,400 --> 00:13:00,400
Wobei Neudeutsch ist vielleicht ein bisschen verkehrt.

108
00:13:00,400 --> 00:13:02,400
Wenn man hip sein will, ja.

109
00:13:03,400 --> 00:13:05,400
Also auch auf Neuenglisch...

110
00:13:05,400 --> 00:13:08,400
...nennt man das Ganze Infrastructure as Code.

111
00:13:08,400 --> 00:13:09,400
Warum?

112
00:13:09,400 --> 00:13:10,400
Man sieht es ja hier schon.

113
00:13:10,400 --> 00:13:12,400
Man beschreibt nur noch...

114
00:13:12,400 --> 00:13:14,400
...was in der Cloud angelegt werden soll.

115
00:13:14,400 --> 00:13:16,400
Zum Beispiel so ein Netzwerk hier.

116
00:13:16,400 --> 00:13:18,400
Mit dieser IP-Range.

117
00:13:18,400 --> 00:13:20,400
Und Terraform übersetzt das dann...

118
00:13:20,400 --> 00:13:22,400
...in die passenden Cloud-Ressourcen.

119
00:13:22,400 --> 00:13:24,400
Man muss die Cloud-Ressourcen nicht selbst anlegen.

120
00:13:24,400 --> 00:13:26,400
Also ich könnte auch zum Beispiel...

121
00:13:26,400 --> 00:13:28,400
...hier bei Google in das Web-Interface gehen.

122
00:13:28,400 --> 00:13:31,400
Und in Netzwerke.

123
00:13:31,400 --> 00:13:32,400
Und dann sagen...

124
00:13:33,400 --> 00:13:38,760
...create network.

125
00:13:38,760 --> 00:13:39,760
Könnte ich auch machen.

126
00:13:39,760 --> 00:13:41,760
Ich könnte es aber auch Terraform machen lassen.

127
00:13:41,760 --> 00:13:43,760
Das heißt, dementsprechend...

128
00:13:43,760 --> 00:13:45,760
...Infrastructure as Code.

129
00:13:45,760 --> 00:13:47,760
Man beschreibt halt, was man haben will.

130
00:13:47,760 --> 00:13:49,760
In Source-Code-Dateien.

131
00:13:49,760 --> 00:13:50,760
Und Terraform...

132
00:13:50,760 --> 00:13:52,760
...applied das dann, das nennen die auch so...

133
00:13:52,760 --> 00:13:54,760
...auf die jeweilige Cloud-Umgebung.

134
00:13:54,760 --> 00:13:55,760
Man könnte das auch für Azure machen.

135
00:13:55,760 --> 00:13:56,760
Oder für DigitalOcean.

136
00:13:56,760 --> 00:13:58,760
Oder für AWS oder sowas.

137
00:13:58,760 --> 00:14:00,760
Wobei man auch sagen muss...

138
00:14:00,760 --> 00:14:02,760
...Terraform...

139
00:14:02,760 --> 00:14:04,760
...ist keine Abstraktionsschicht...

140
00:14:04,760 --> 00:14:06,760
...zwischen den Clouds.

141
00:14:06,760 --> 00:14:08,760
Also man definiert...

142
00:14:08,760 --> 00:14:10,760
...in Terraform jetzt nicht...

143
00:14:10,760 --> 00:14:12,760
...ein Netzwerk oder eine VM...

144
00:14:12,760 --> 00:14:14,760
...oder ein Kubernetes-Cluster...

145
00:14:14,760 --> 00:14:16,760
...jedes Mal gleich, egal ob für Azure...

146
00:14:16,760 --> 00:14:18,760
...oder für Google.

147
00:14:18,760 --> 00:14:20,760
Man muss schon die Cloud-spezifischen Sachen...

148
00:14:20,760 --> 00:14:22,760
...machen, nur dass man es halt in Terraform...

149
00:14:22,760 --> 00:14:24,760
...reproduzierbar machen kann und State-Tracking dabei hat.

150
00:14:24,760 --> 00:14:26,760
Dann sollte man noch eine Sache...

151
00:14:26,760 --> 00:14:28,760
...erwähnen. Wie gesagt, letztendlich...

152
00:14:28,760 --> 00:14:30,760
...unter der Haube ist es eigentlich ziemlich wurscht...

153
00:14:30,760 --> 00:14:32,760
...was man verwendet. Ob es jetzt Terraform ist...

154
00:14:32,760 --> 00:14:34,760
...oder Pulumi ist.

155
00:14:34,760 --> 00:14:36,760
Oder hier dieses neue Terraform...

156
00:14:36,760 --> 00:14:38,760
...mit in Programmiersprachen verwendet.

157
00:14:38,760 --> 00:14:40,760
Wichtig ist, dass das Team damit klarkommt...

158
00:14:40,760 --> 00:14:42,760
...wofür man das benutzt...

159
00:14:42,760 --> 00:14:44,760
...beziehungsweise in dem man ist...

160
00:14:44,760 --> 00:14:46,760
...oder für die man das erstellt.

161
00:14:46,760 --> 00:14:48,760
Anwendungsentwickler selbst mögen wahrscheinlich...

162
00:14:48,760 --> 00:14:50,760
...ein bisschen lieber Pulumi.

163
00:14:50,760 --> 00:14:52,760
Wohingegen die klassischen Admin-Teams...

164
00:14:52,760 --> 00:14:54,760
...wahrscheinlich eher die...

165
00:14:54,760 --> 00:14:56,760
...Terraform-Geschichte mögen.

166
00:14:56,760 --> 00:14:58,760
Man muss sagen...

167
00:14:58,760 --> 00:15:00,760
...Terraform ist das deutlich verbreitetere Tool...

168
00:15:00,760 --> 00:15:02,760
...versus Pulumi.

169
00:15:02,760 --> 00:15:04,760
Also Terraform ist viel, viel verbreiteter.

170
00:15:04,760 --> 00:15:06,760
Terraform ist quasi so der...

171
00:15:06,760 --> 00:15:08,760
...wie nennt man das so schön...

172
00:15:08,760 --> 00:15:10,760
...der Industriestandard, falls es da sowas...

173
00:15:10,760 --> 00:15:12,760
...gibt. Also Terraform ist das...

174
00:15:12,760 --> 00:15:14,760
...bekanntere und das verbreitetere...

175
00:15:14,760 --> 00:15:16,760
...von beiden Tools. Und wenn ihr Jobs sucht...

176
00:15:16,760 --> 00:15:18,760
...ist Terraform-Knowledge...

177
00:15:18,760 --> 00:15:20,760
...häufiger...

178
00:15:20,760 --> 00:15:22,760
...gerne gesehen als Pulumi-Knowledge.

179
00:15:22,760 --> 00:15:24,760
Wobei man halt auch sagen muss...

180
00:15:24,760 --> 00:15:26,760
...wenn man Pulumi kann, kommt man relativ schnell...

181
00:15:26,760 --> 00:15:30,520
...in Terraform rein und umgedreht.

182
00:15:30,520 --> 00:15:32,520
Genau, soviel zum Thema Infrastructure as Code.

183
00:15:32,520 --> 00:15:34,520
Jetzt mal zu der eigentlichen Frage...

184
00:15:34,520 --> 00:15:36,520
...wie es mit Ansible aussieht.

185
00:15:36,520 --> 00:15:38,520
Terraform und Ansible sind zwei...

186
00:15:38,520 --> 00:15:42,600
...unterschiedliche Tools. Und zwar...

187
00:15:42,600 --> 00:15:44,600
...Ansible...

188
00:15:44,600 --> 00:15:46,600
...ist ein Tool um Server...

189
00:15:46,600 --> 00:15:48,600
...zu konfigurieren und Terraform...

190
00:15:48,600 --> 00:15:50,600
...ist ein Tool um Infrastruktur...

191
00:15:50,600 --> 00:15:52,600
...anzulegen. Kann man sich quasi...

192
00:15:52,600 --> 00:15:54,600
...so vorstellen, mit Terraform...

193
00:15:54,600 --> 00:15:56,600
...erzeuge ich meine Cloud-Ressourcen...

194
00:15:56,600 --> 00:15:58,600
...unter anderem auch VMs...

195
00:15:58,600 --> 00:16:00,600
...und mit Ansible konfiguriere ich...

196
00:16:00,600 --> 00:16:02,600
...die VMs dann, wenn es notwendig ist.

197
00:16:02,600 --> 00:16:04,600
Der Trend geht ja dahin, dass...

198
00:16:04,600 --> 00:16:06,600
...Cloud-Ressourcen möglichst...

199
00:16:06,600 --> 00:16:08,600
...konfigurationsfrei sein sollten...

200
00:16:08,600 --> 00:16:10,600
...möglichst immutable sein sollen...

201
00:16:10,600 --> 00:16:12,600
...was natürlich Schwachsinn ist in der Realität...

202
00:16:12,600 --> 00:16:14,600
...tritt das auch nicht ein...

203
00:16:14,600 --> 00:16:16,600
...aber so...

204
00:16:16,600 --> 00:16:18,600
...geht zumindest der Trend hin...

205
00:16:18,600 --> 00:16:20,600
...was ja auch sinnvoll ist.

206
00:16:20,600 --> 00:16:22,600
Also wenn man jetzt beispielsweise 20...

207
00:16:22,600 --> 00:16:24,600
...virtuelle Maschinen in der Cloud erzeugen will...

208
00:16:24,600 --> 00:16:26,600
...dann würde man das mit Terraform erzeugen...

209
00:16:26,600 --> 00:16:28,600
...und wenn die noch etwas...

210
00:16:28,600 --> 00:16:30,600
...spezielle, kompliziertere Konfigurationen...

211
00:16:30,600 --> 00:16:32,600
...brauchen, dann würde ich das mit...

212
00:16:32,600 --> 00:16:34,600
...Terraform konfigurieren...

213
00:16:34,600 --> 00:16:36,600
...mit Ansible konfigurieren...

214
00:16:36,600 --> 00:16:38,600
...nicht mit Terraform, mit Terraform provisionieren...

215
00:16:38,600 --> 00:16:40,600
...mit Ansible konfigurieren...

216
00:16:40,600 --> 00:16:42,600
...die Tools haben...

217
00:16:42,600 --> 00:16:44,600
...gewisse Überschneidungen, man kann...

218
00:16:44,600 --> 00:16:46,600
...teilweise Cloud-Infrastruktur auch...

219
00:16:46,600 --> 00:16:48,600
...mit Ansible anlegen, man kann teilweise...

220
00:16:48,600 --> 00:16:50,600
...ein bisschen so mit Inline Bash Scripts und sowas...

221
00:16:50,600 --> 00:16:52,600
...auch mit Terraform dann...

222
00:16:52,600 --> 00:16:54,600
...Sachen konfigurieren...

223
00:16:54,600 --> 00:16:56,600
...sagen wir mal so 10-20%...

224
00:16:56,600 --> 00:16:58,600
...überschneiden sich vielleicht...

225
00:16:58,600 --> 00:17:00,600
...aber grundsätzlich sind das eigentlich schon...

226
00:17:00,600 --> 00:17:02,600
...ziemlich unterschiedliche Tools...

227
00:17:02,600 --> 00:17:04,600
...Terraform ist zum Anlegen, zum Provisionieren...

228
00:17:04,600 --> 00:17:06,600
...und Ansible ist zum Konfigurieren...

229
00:17:06,600 --> 00:17:08,600
...so, das ist so der grundlegende Unterschied...

230
00:17:08,600 --> 00:17:10,600
...das heißt, wenn man...

231
00:17:10,600 --> 00:17:12,600
...Cloud-Infrastruktur mit Terraform anlegt...

232
00:17:12,600 --> 00:17:14,600
...ist sie noch nicht unbedingt in dem Zustand, wie man...

233
00:17:14,600 --> 00:17:16,600
...das haben will, zum Beispiel auf VMs und da...

234
00:17:16,600 --> 00:17:18,600
...wenn man es braucht, kommt dann sowas wie...

235
00:17:18,600 --> 00:17:20,600
...Ansible ins Spiel, also beides...

236
00:17:20,600 --> 00:17:22,600
...sehr nützliche Tools und auch...

237
00:17:22,600 --> 00:17:24,600
...sowohl Terraform als auch Ansible...

238
00:17:24,600 --> 00:17:26,600
...recht gefragt...

239
00:17:26,600 --> 00:17:28,600
...wenn man sich mal so...

240
00:17:28,600 --> 00:17:30,600
...ja so...

241
00:17:30,600 --> 00:17:32,600
...Skill-Anforderungen anguckt...

242
00:17:32,600 --> 00:17:34,600
...die Arbeitnehmer...

243
00:17:34,600 --> 00:17:36,600
...die Arbeitgeber aktuell suchen...

244
00:17:36,600 --> 00:17:38,600
...ist sowohl...

245
00:17:38,600 --> 00:17:40,600
...Ansible als auch Terraform ganz gut dabei...

246
00:17:40,600 --> 00:17:42,600
...Polumi, was Infrastructure as Code...

247
00:17:42,600 --> 00:17:44,600
...angeht, ein bisschen weniger, wobei ich...

248
00:17:44,600 --> 00:17:46,600
...persönlich, wenn ich für mich privat...

249
00:17:46,600 --> 00:17:48,600
...machen würde, ja, ich persönlich mag...

250
00:17:48,600 --> 00:17:50,600
...Polumi mehr als Terraform...

251
00:17:50,600 --> 00:17:52,600
...also Geschmackssache und CDKTF...

252
00:17:52,600 --> 00:17:54,600
...hab ich ausprobiert...

253
00:17:54,600 --> 00:17:56,600
...soviel mal zur ganz schnellen...

254
00:17:56,600 --> 00:17:58,600
...Übersicht, was Infrastructure as Code angeht...

255
00:17:58,600 --> 00:18:00,600
...mag jetzt vielleicht ein bisschen abstrakt sein...

256
00:18:00,600 --> 00:18:02,600
...wir gucken uns das gleich an...

257
00:18:02,600 --> 00:18:04,600
...ich erzähle euch noch was dazu...

258
00:18:04,600 --> 00:18:06,600
...ein Tool will ich aber jetzt...

259
00:18:06,600 --> 00:18:08,600
...an der Stelle auch noch erwähnen...

260
00:18:08,600 --> 00:18:10,600
...wenn wir gerade dabei sind...

261
00:18:10,600 --> 00:18:12,600
...und zwar ist das Crossplane...

262
00:18:12,600 --> 00:18:14,600
...das ist gerade im Kubernetes...

263
00:18:14,600 --> 00:18:16,600
...aber da lasse ich mich jetzt nicht...

264
00:18:16,600 --> 00:18:18,600
...großartig drüber aus...

265
00:18:18,600 --> 00:18:20,600
...gerade im Kubernetes-Umfeld sehe ich da...

266
00:18:20,600 --> 00:18:22,600
...in sowas in der Richtung die Zukunft...

267
00:18:22,600 --> 00:18:28,790
...also sprich...

268
00:18:28,790 --> 00:18:30,790
...Crossplane ist auch ein Tool...

269
00:18:30,790 --> 00:18:32,790
...nur mal ganz zwei Sätze dazu, weil ich den Ansatz...

270
00:18:32,790 --> 00:18:34,790
...wirklich sehr, sehr nice finde und ich hoffe...

271
00:18:34,790 --> 00:18:36,790
...dass ich damit auch mal so...

272
00:18:36,790 --> 00:18:38,790
...im Kubernetes-Umfeld was machen kann...

273
00:18:38,790 --> 00:18:40,790
...wenn man...

274
00:18:40,790 --> 00:18:42,790
...ehe plant...

275
00:18:42,790 --> 00:18:44,790
...seine Sachen auf dem Kubernetes-Cluster zu deployen...

276
00:18:44,790 --> 00:18:46,790
...dann kann man ja auch theoretisch...

277
00:18:46,790 --> 00:18:48,790
...die Konfiguration anstatt über Terraform...

278
00:18:48,790 --> 00:18:50,790
...auch...

279
00:18:50,790 --> 00:18:52,790
...in Kubernetes-Config erstellen...

280
00:18:52,790 --> 00:18:54,790
...also brauche ich keine Terraform-Files...

281
00:18:54,790 --> 00:18:56,790
...und keine Kubernetes-Yammels, sondern ich kann für alles...

282
00:18:56,790 --> 00:18:58,790
...Kubernetes-Yammels machen...

283
00:18:58,790 --> 00:19:02,550
...und Crossplane bietet...

284
00:19:02,550 --> 00:19:04,550
...dafür die Möglichkeit zum Beispiel...

285
00:19:04,550 --> 00:19:06,550
...nur mal so jetzt...

286
00:19:06,550 --> 00:19:08,550
...was man damit Cooles machen kann...

287
00:19:08,550 --> 00:19:10,550
...dann kann man auch...

288
00:19:10,550 --> 00:19:12,550
...eine Anwendung haben, die ich auf dem Kubernetes-Cluster...

289
00:19:12,550 --> 00:19:14,550
...deployen will, die allerdings...

290
00:19:14,550 --> 00:19:16,550
...nicht rein aus Kubernetes-Ressourcen...

291
00:19:16,550 --> 00:19:18,550
...besteht, zum Beispiel...

292
00:19:18,550 --> 00:19:20,550
...ich habe ein Kubernetes-Deployment...

293
00:19:20,550 --> 00:19:22,550
...was im Prinzip ein Container-Image ist mit der Anwendung drin...

294
00:19:22,550 --> 00:19:24,550
...das braucht aber zusätzlich noch...

295
00:19:24,550 --> 00:19:26,550
...eine Datenbank, die nicht im Kubernetes-Cluster...

296
00:19:26,550 --> 00:19:28,550
...laufen soll, zum Beispiel...

297
00:19:28,550 --> 00:19:30,550
...hier Cloud SQL bei Google...

298
00:19:30,550 --> 00:19:32,550
...ne, das ist die neue...

299
00:19:32,550 --> 00:19:34,550
...hier Cloud SQL bei...

300
00:19:34,550 --> 00:19:36,550
...Google Cloud...

301
00:19:36,550 --> 00:19:38,550
...wie verbinde ich das Ganze jetzt zusammen?

302
00:19:38,550 --> 00:19:40,550
Das ist so mit der klassischen...

303
00:19:40,550 --> 00:19:42,550
...Infrastructure-as-Code...

304
00:19:42,550 --> 00:19:44,550
...nicht so ohne weiteres möglich, du brauchst...

305
00:19:44,550 --> 00:19:46,550
...einmal ein Kubernetes-YAML-Deployment...

306
00:19:46,550 --> 00:19:48,550
...und du brauchst irgendwas, was deine...

307
00:19:48,550 --> 00:19:50,550
...Cloud SQL-Datenbank...

308
00:19:50,550 --> 00:19:52,550
...provisioniert...

309
00:19:52,550 --> 00:19:54,550
...das heißt, du müsstest dann quasi...

310
00:19:54,550 --> 00:19:56,550
...Terraform und...

311
00:19:56,550 --> 00:19:58,550
...dein Kubernetes-Zeug irgendwie verbinden...

312
00:19:58,550 --> 00:20:00,550
...geht, ja Flux...

313
00:20:00,550 --> 00:20:02,550
...kann das mit einem...

314
00:20:02,550 --> 00:20:04,550
...Terraform-Controller, aber...

315
00:20:04,550 --> 00:20:06,550
...es ist nicht so schön, das ist das wo Crossplane...

316
00:20:06,550 --> 00:20:08,550
...dazukommt, Crossplane...

317
00:20:08,550 --> 00:20:10,550
...ist anders, du kannst quasi dann ein Deployment...

318
00:20:10,550 --> 00:20:12,550
...konfigurieren für Kubernetes...

319
00:20:12,550 --> 00:20:14,550
...und gleichzeitig allerdings auch im gleichen...

320
00:20:14,550 --> 00:20:16,550
...Config-File oder so im gleichen Kontext...

321
00:20:16,550 --> 00:20:18,550
...auch noch sagen, ich möchte bei Google...

322
00:20:18,550 --> 00:20:20,550
...eine Datenbank provisionieren...

323
00:20:20,550 --> 00:20:22,550
...ich sehe da persönlich die Zukunft...

324
00:20:22,550 --> 00:20:24,550
...im Kubernetes-Umfeld eindeutig...

325
00:20:24,550 --> 00:20:26,550
...bei Crossplane, weniger...

326
00:20:26,550 --> 00:20:28,550
...bei Terraform, Terraform wird immer noch...

327
00:20:28,550 --> 00:20:30,550
...wichtig bleiben, allein schon...

328
00:20:30,550 --> 00:20:32,550
...zum initialen Aufbau und ganzer...

329
00:20:32,550 --> 00:20:34,550
...Cloud-Umgebung, das wird man ja mit Crossplane...

330
00:20:34,550 --> 00:20:36,550
...auch nicht machen...

331
00:20:36,550 --> 00:20:38,550
...aber gerade das Handling von Anwendungen...

332
00:20:38,550 --> 00:20:40,550
...und Deployments in Kubernetes...

333
00:20:40,550 --> 00:20:42,550
...was externe Ressourcen zusätzlich...

334
00:20:42,550 --> 00:20:44,550
...braucht, da sehe ich die Zukunft bei Crossplane...

335
00:20:44,550 --> 00:20:46,550
...ich habe mir das in...

336
00:20:46,550 --> 00:20:48,550
...letzten paar Wochen über schon ein bisschen angeguckt...

337
00:20:48,550 --> 00:20:50,550
...noch nie großartig was mitgemacht, aber...

338
00:20:50,550 --> 00:20:52,550
...das sieht wirklich gut aus, hat noch ein paar...

339
00:20:52,550 --> 00:20:54,550
...Nachteile versus Terraform, aber ich...

340
00:20:54,550 --> 00:20:56,550
...persönlich denke, da geht die Zukunft...

341
00:20:56,550 --> 00:20:58,550
...hin, was...

342
00:20:58,550 --> 00:21:00,550
...Kubernetes-Deployments angeht, aber das...

343
00:21:00,550 --> 00:21:02,550
...gucken wir uns heute nicht an, heute machen wir den Klassiker...

344
00:21:02,550 --> 00:21:04,550
...Terraform...

345
00:21:04,550 --> 00:21:06,550
...den man auch auf absehbare Zeit...

346
00:21:06,550 --> 00:21:08,550
...immer noch brauchen wird, also Crossplane...

347
00:21:08,550 --> 00:21:10,550
...wird nie Terraform ersetzen...

348
00:21:10,550 --> 00:21:12,550
...sondern eher im Kubernetes-Umfeld ein bisschen...

349
00:21:12,550 --> 00:21:14,550
...die Sachen übernehmen, aber irgendwann...

350
00:21:14,550 --> 00:21:16,550
...muss man ja mal initial den Cluster hinstellen, ja...

351
00:21:16,550 --> 00:21:18,550
...ohne Kubernetes-Cluster kannst du ja auch...

352
00:21:18,550 --> 00:21:20,550
...darauf nichts ausführen, und dafür wird es nach wie vor...

353
00:21:20,550 --> 00:21:22,550
...für immer auf absehbare Zeit...

354
00:21:22,550 --> 00:21:24,550
...zumindest wahrscheinlich Terraform oder Pulumi...

355
00:21:24,550 --> 00:21:26,550
...oder sowas in der Richtung bleiben, das heißt...

356
00:21:26,550 --> 00:21:28,550
...Terraform ist ein sehr wichtiger Skill...

357
00:21:28,550 --> 00:21:30,550
...wenn man im...

358
00:21:30,550 --> 00:21:32,550
...ja, so im...

359
00:21:32,550 --> 00:21:34,550
...DevOps-Bereich, im...

360
00:21:34,550 --> 00:21:36,550
...Server-Administrationsbereich, aber auch im...

361
00:21:36,550 --> 00:21:38,550
...Entwicklungsbereich unterwegs ist...

362
00:21:38,550 --> 00:21:40,550
...Terraform ist aktuell überall...

363
00:21:40,550 --> 00:21:45,360
...so...

364
00:21:45,360 --> 00:21:47,360
...soviel zur Einleitung...

365
00:21:47,360 --> 00:21:52,150
...hab ich mir grad ein bisschen aus den Fingern...

366
00:21:52,150 --> 00:21:54,150
...gesaugt, aber Chat, ich glaub man hat alles soweit...

367
00:21:54,150 --> 00:21:56,150
...verstanden, oder? Ich verstehe, dass viele den Stream...

368
00:21:56,150 --> 00:21:58,150
...auf der Arbeit nebenbei laufen haben und nicht soviel...

369
00:21:58,150 --> 00:22:00,150
...schreiben können, Chat...

370
00:22:00,150 --> 00:22:02,150
...ich glaub, konnte man halbwegs...

371
00:22:02,150 --> 00:22:04,150
...ne, auf absehbare Zeit...

372
00:22:04,150 --> 00:22:06,150
...ja, für immer ist nix...

373
00:22:06,150 --> 00:22:08,150
...gerade in der IT, aber...

374
00:22:08,150 --> 00:22:10,150
...Terraform hat sich so etabliert...

375
00:22:10,150 --> 00:22:12,150
...dass ich nicht sehe, dass irgendwas...

376
00:22:12,150 --> 00:22:14,150
...großartig Terraform in nächster Zeit...

377
00:22:14,150 --> 00:22:16,150
...den Platz 1...

378
00:22:16,150 --> 00:22:18,150
...schreitig machen wird, dahinter ist ein bisschen Pulumi...

379
00:22:18,150 --> 00:22:22,100
...und...

380
00:22:22,100 --> 00:22:24,100
...alles andere spielt eigentlich kaum...

381
00:22:24,100 --> 00:22:31,760
...ne größere Rolle.

382
00:22:31,760 --> 00:22:33,760
Kann ein Terraform mit Ansible zusammenarbeiten?

383
00:22:33,760 --> 00:22:35,760
Ja, kannst du.

384
00:22:35,760 --> 00:22:37,760
Ja, kannst du machen.

385
00:22:37,760 --> 00:22:39,760
Okay, also die Host-Datei...

386
00:22:39,760 --> 00:22:41,760
...die kannst du auch mit irgendeinem Inline Bash-Script...

387
00:22:41,760 --> 00:22:43,760
...in Terraform...

388
00:22:43,760 --> 00:22:45,760
...erstellen.

389
00:22:45,760 --> 00:22:47,760
Also ich würd nicht...

390
00:22:47,760 --> 00:22:49,760
...ich würd nicht Ansible...

391
00:22:49,760 --> 00:22:51,760
...zusätzlich noch an Start bringen, nur um...

392
00:22:51,760 --> 00:22:53,760
...die Host-Datei zu erstellen...

393
00:22:53,760 --> 00:22:55,760
...auf VMs.

394
00:22:55,760 --> 00:22:57,760
Aber du kannst selbstverständlich...

395
00:22:57,760 --> 00:22:59,760
...Terraform und Ansible zusammen ausführen...

396
00:22:59,760 --> 00:23:01,760
...gibt's ja mehrere Möglichkeiten...

397
00:23:01,760 --> 00:23:03,760
...wie du das machen kannst.

398
00:23:03,760 --> 00:23:05,760
Also es gibt ja bei Ansible, dass du das...

399
00:23:05,760 --> 00:23:07,760
...pullen kannst...

400
00:23:07,760 --> 00:23:09,760
...aus dem Git-Repo...

401
00:23:09,760 --> 00:23:11,760
...oder aber auch von nem zentralen Ding...

402
00:23:11,760 --> 00:23:13,760
...quasi pushen kannst auf die Kiste...

403
00:23:13,760 --> 00:23:15,760
...zum Ausführen. Du könntest quasi zum Beispiel...

404
00:23:15,760 --> 00:23:17,760
...am Ende von einer...

405
00:23:17,760 --> 00:23:19,760
...von einem Terraform...

406
00:23:19,760 --> 00:23:21,760
...Run, der dir VMs anlegt...

407
00:23:21,760 --> 00:23:23,760
...könntest du in dem Cloud-Init-File...

408
00:23:23,760 --> 00:23:25,760
...anstoßen, dass Ansible ausgeführt wird.

409
00:23:25,760 --> 00:23:27,760
Und das geht. Das ist sogar sehr sinnvoll...

410
00:23:27,760 --> 00:23:29,760
...zusammen zu verbinden, wenn man komplexere...

411
00:23:29,760 --> 00:23:31,760
...Konfigurationsaufgaben für VMs hat.

412
00:23:31,760 --> 00:23:33,760
Also wenn du wirklich öfters...

413
00:23:33,760 --> 00:23:35,760
...VM anlegst mit Terraform, die dann...

414
00:23:35,760 --> 00:23:37,760
...auch irgendwie ein bisschen komplizierter...

415
00:23:37,760 --> 00:23:39,760
...eingerichtet werden müssen, als einfach nur...

416
00:23:39,760 --> 00:23:41,760
...Standard-Image drauf...

417
00:23:41,760 --> 00:23:43,760
...dann ist das sogar wirklich sinnvoll...

418
00:23:43,760 --> 00:23:45,760
...Terraform und Ansible zu kombinieren.

419
00:23:45,760 --> 00:23:47,760
Man kann Ansible...

420
00:23:47,760 --> 00:23:49,760
...die Kiste konfigurieren, Terraform hat's ja vorher...

421
00:23:49,760 --> 00:23:54,290
...angelegt.

422
00:23:54,290 --> 00:23:56,290
Kann ich mit Terraform standardisierte AD-Gruppen anlegen?

423
00:23:56,290 --> 00:23:58,290
Habe ich noch nie gemacht, weil ich mit Windows nichts zu tun habe...

424
00:23:58,290 --> 00:24:00,290
...aber ich bin mir ziemlich sicher, dass das geht.

425
00:24:00,290 --> 00:24:05,650
Original scharf, dankeschön...

426
00:24:05,650 --> 00:24:07,650
...für den Sub.

427
00:24:07,650 --> 00:24:11,030
So, so sieht's aus.

428
00:24:11,030 --> 00:24:13,030
Und ich zeige euch heute, wie man das ordentlich macht...

429
00:24:13,030 --> 00:24:15,030
...in Terraform für Google Cloud.

430
00:24:15,030 --> 00:24:20,000
Wir werden heute folgendes machen.

431
00:24:20,000 --> 00:24:22,000
Moment, ich muss mal kurz was im Chat noch beantworten.

432
00:24:22,000 --> 00:24:24,000
Wie kommuniziert Terraform mit Ansible?

433
00:24:24,000 --> 00:24:26,000
Gar nicht.

434
00:24:26,000 --> 00:24:28,000
Also, achso, ja, okay...

435
00:24:28,000 --> 00:24:30,000
...jetzt weiß ich, was du machen willst.

436
00:24:30,000 --> 00:24:32,000
Wie kannst du das Ansible Inventory...

437
00:24:32,000 --> 00:24:34,000
...erstellen mit Terraform?

438
00:24:34,000 --> 00:24:36,000
Ja, da musst du dir...

439
00:24:36,000 --> 00:24:38,000
...das würde ich gar nicht so sehr machen, also...

440
00:24:38,000 --> 00:24:40,000
...es gibt keine direkte...

441
00:24:40,000 --> 00:24:42,000
...also, es gibt vielleicht mittlerweile irgendwelche Plugins oder so...

442
00:24:42,000 --> 00:24:44,000
...keine Ahnung.

443
00:24:44,000 --> 00:24:46,000
Also es gibt jetzt standardmäßig keine direkte Kommunikation...

444
00:24:46,000 --> 00:24:48,000
...zwischen Terraform und Ansible.

445
00:24:48,000 --> 00:24:50,000
Es gibt verschiedene Sachen, wie du das machen kannst.

446
00:24:50,000 --> 00:24:52,000
Du willst ja quasi dein...

447
00:24:52,000 --> 00:24:54,000
...Ansible Inventory...

448
00:24:54,000 --> 00:24:56,000
...nicht das Haus, weil du willst dein...

449
00:24:56,000 --> 00:24:58,000
...Ansible Inventory mit Terraform erstellen.

450
00:24:58,000 --> 00:25:00,000
Ja gut, so direkt...

451
00:25:00,000 --> 00:25:02,000
...gibt es da glaube ich nichts eingebautes.

452
00:25:02,000 --> 00:25:04,000
Was du machen kannst in Terraform, das...

453
00:25:04,000 --> 00:25:06,000
...gucken wir uns vielleicht auch an, nachher...

454
00:25:06,000 --> 00:25:08,000
...du kannst Outputs definieren.

455
00:25:08,000 --> 00:25:10,000
Das sind quasi Werte, die...

456
00:25:10,000 --> 00:25:12,000
...Terraform, nennen wir es mal, exportiert.

457
00:25:12,000 --> 00:25:14,000
Also zum Beispiel...

458
00:25:14,000 --> 00:25:16,000
...du legst eine VM an...

459
00:25:16,000 --> 00:25:18,000
...mit Terraform und dann kannst du als Output...

460
00:25:18,000 --> 00:25:20,000
...die IP und den Namen...

461
00:25:20,000 --> 00:25:22,000
...von dieser VM...

462
00:25:22,000 --> 00:25:24,000
...die sie bekommen haben nach dem Anlegen, mit Terraform...

463
00:25:24,000 --> 00:25:26,000
...wieder exportieren und das...

464
00:25:26,000 --> 00:25:28,000
...könnte dann in irgendeiner Art und Weise...

465
00:25:28,000 --> 00:25:30,000
...Ansible bei dir benutzen, um sich...

466
00:25:30,000 --> 00:25:32,000
...in der Inventory zu bauen, wenn man das so machen will.

467
00:25:32,000 --> 00:25:34,000
Schöner wäre die Variante...

468
00:25:34,000 --> 00:25:36,000
...allerdings...

469
00:25:36,000 --> 00:25:38,000
...wenn du das unabhängig voneinander machst...

470
00:25:38,000 --> 00:25:40,000
...weil du willst ja auch nicht unbedingt...

471
00:25:40,000 --> 00:25:42,000
...immer Terraform am Start haben, wenn du...

472
00:25:42,000 --> 00:25:44,000
...Sachen konfigurieren willst.

473
00:25:44,000 --> 00:25:46,000
Dann sind wir jetzt aber schon im...

474
00:25:46,000 --> 00:25:48,000
...Bereich ja quasi...

475
00:25:48,000 --> 00:25:50,000
...Discovery, Service Discovery, Inventory...

476
00:25:50,000 --> 00:25:52,000
...Discovery und...

477
00:25:52,000 --> 00:25:54,000
...Resource Management, dass du quasi irgendwo...

478
00:25:54,000 --> 00:25:56,000
...einen Key-Value-Store hast oder...

479
00:25:56,000 --> 00:25:58,000
...irgendwo was, wo das registriert wird...

480
00:25:58,000 --> 00:26:00,000
...initial, die Kisten, die du aufgebaut hast.

481
00:26:00,000 --> 00:26:02,000
Ja, oder...

482
00:26:02,000 --> 00:26:04,000
...aber die einfachere Variante...

483
00:26:04,000 --> 00:26:06,000
...ist, also es gibt zwei Varianten, die noch deutlich...

484
00:26:06,000 --> 00:26:08,000
...simpler sind. Du benutzt einfach...

485
00:26:08,000 --> 00:26:10,000
...das jeweilige Cloud...

486
00:26:10,000 --> 00:26:12,000
...Kommandozeilen-Tool von dem...

487
00:26:12,000 --> 00:26:14,000
...Cloud-Anbieter, was du verwendest.

488
00:26:14,000 --> 00:26:16,000
Ja, du kannst ja zum Beispiel relativ easy...

489
00:26:16,000 --> 00:26:18,000
...hier mit GCP...

490
00:26:18,000 --> 00:26:20,000
...GCP Compute...

491
00:26:20,000 --> 00:26:22,000
...äh, nee, was ist es?

492
00:26:22,000 --> 00:26:24,000
Ach, weiß ich gar nicht.

493
00:26:24,000 --> 00:26:26,000
Ähm...

494
00:26:26,000 --> 00:26:28,000
...kannst du dir deine VMs anzeigen lassen.

495
00:26:28,000 --> 00:26:32,980
Ist das Addresses List?

496
00:26:32,980 --> 00:26:34,980
Ich hab noch das falsche Projekt ausgewählt.

497
00:26:34,980 --> 00:26:36,980
Ha, muss man gleich mal ändern.

498
00:26:36,980 --> 00:26:38,980
Also kannst du ja auch mit dem jeweiligen Cloud-Tool...

499
00:26:38,980 --> 00:26:40,980
...des Anbieters, was du ausgewählt hast, auflisten...

500
00:26:40,980 --> 00:26:42,980
...was dann dort Terraform für VMs...

501
00:26:42,980 --> 00:26:44,980
...erzeugt hat.

502
00:26:44,980 --> 00:26:46,980
Ist besser, da musst du die zwei Sachen nicht miteinander...

503
00:26:46,980 --> 00:26:48,980
...verdrahten.

504
00:26:48,980 --> 00:26:50,980
Ja, oder...

505
00:26:50,980 --> 00:26:52,980
...die allerbeste...

506
00:26:52,980 --> 00:26:54,980
...Lösung, wenn möglich, bei dir...

507
00:26:54,980 --> 00:26:56,980
...ist, du lässt einfach...

508
00:26:56,980 --> 00:26:58,980
...nach einem Terraform Run...

509
00:26:58,980 --> 00:27:00,980
...automatisch die neu erstellte VM...

510
00:27:00,980 --> 00:27:02,980
... äh, Ansible ausführen.

511
00:27:02,980 --> 00:27:04,980
Du kannst ja in Terraform...

512
00:27:04,980 --> 00:27:06,980
...Inline-Script angeben, so eine...

513
00:27:06,980 --> 00:27:08,980
...Zeile, gibst du einfach Ansible Run...

514
00:27:08,980 --> 00:27:10,980
...oder Ansible Playbook...

515
00:27:10,980 --> 00:27:12,980
...dann kannst du ein Git-Repo angeben...

516
00:27:12,980 --> 00:27:14,980
...das Ansible automatisch applied wird...

517
00:27:14,980 --> 00:27:16,980
...nach jedem Starten einer neuen VM.

518
00:27:16,980 --> 00:27:18,980
Das ist auch möglich. Musst du halt überlegen...

519
00:27:18,980 --> 00:27:25,170
...was bei dir am besten passt.

520
00:27:25,170 --> 00:27:39,240
So, äh, ich muss mal das...

521
00:27:39,240 --> 00:27:41,240
...Default-Projekt festlegen, kurz bevor...

522
00:27:41,240 --> 00:27:43,240
...wir hier anfangen.

523
00:27:43,240 --> 00:27:45,240
So, kommen wir jetzt aber mal zu Terraform und Google Cloud.

524
00:27:45,240 --> 00:27:47,240
Ich hab ein Projekt angelegt schon...

525
00:27:47,240 --> 00:27:49,240
...Cackle Stream 1...

526
00:27:49,240 --> 00:27:51,240
...äh...

527
00:27:51,240 --> 00:27:53,240
...what the hell?

528
00:27:53,240 --> 00:27:55,240
Was hab ich hier reinkopiert?

529
00:27:55,240 --> 00:27:57,240
Ach, die Projektnummer...

530
00:27:57,240 --> 00:27:59,240
...ich hab das falsche kopiert, lol.

531
00:27:59,240 --> 00:28:10,100
Ja, aber das sind meistens...

532
00:28:10,100 --> 00:28:12,100
...Provisioners, die sollte man wirklich nur als...

533
00:28:12,100 --> 00:28:14,100
...letzte Instanz wählen.

534
00:28:14,100 --> 00:28:16,100
Ich weiß nicht, auf was sich das...

535
00:28:16,100 --> 00:28:18,100
...bezieht jetzt gerade.

536
00:28:18,100 --> 00:28:20,100
Du magst Recht haben, aber ich weiß nicht, was du meinst.

537
00:28:22,100 --> 00:28:25,410
So, deine Meinung...

538
00:28:25,410 --> 00:28:27,410
...ich hab damit noch nichts gemacht.

539
00:28:27,410 --> 00:28:29,410
Ich weiß, dass das irgendwie so ein...

540
00:28:29,410 --> 00:28:31,410
...bisschen containerzentriertes...

541
00:28:31,410 --> 00:28:33,410
...OS ist, so wo alles...

542
00:28:33,410 --> 00:28:35,410
...abgeschottet in Containern läuft.

543
00:28:35,410 --> 00:28:37,410
Glaube zumindest, dass es das war.

544
00:28:37,410 --> 00:28:39,410
Oder bringe ich das jetzt durcheinander?

545
00:28:39,410 --> 00:28:41,410
Weil so, dass das irgendwas ist mit eigenem Package Manager...

546
00:28:41,410 --> 00:28:43,410
...dafür alles containerisiert, hab ich noch nicht ausprobiert.

547
00:28:43,410 --> 00:28:45,410
Klingt Security-technisch...

548
00:28:45,410 --> 00:28:47,410
...nach einer sehr nicen Sache...

549
00:28:47,410 --> 00:28:49,410
...und auch um Dinger rückstandslos zu entfernen.

550
00:28:49,410 --> 00:28:51,410
Ich hab es noch nicht ausprobiert.

551
00:28:51,410 --> 00:28:53,410
Keine Ahnung, kann ich nichts weiter zu sagen.

552
00:28:53,410 --> 00:29:00,310
Ach, ist das nicht das mit den...

553
00:29:00,310 --> 00:29:05,160
...was war denn das mit den Containern?

554
00:29:05,160 --> 00:29:07,160
Ja stimmt, das könntest du machen lassen.

555
00:29:07,160 --> 00:29:09,160
Wobei die schönere...

556
00:29:09,160 --> 00:29:11,160
...jetzt weiß ich, was er meint.

557
00:29:11,160 --> 00:29:13,160
Die schönere Variante ist ja irgendein Cloud-Init-File...

558
00:29:13,160 --> 00:29:15,160
...zu nehmen, was das macht.

559
00:29:15,160 --> 00:29:17,160
Ich würde auch nicht Terraform unbedingt...

560
00:29:17,160 --> 00:29:19,160
...warten lassen, sondern...

561
00:29:19,160 --> 00:29:21,160
...irgendein Cloud-Init reinhauen...

562
00:29:21,160 --> 00:29:23,160
...und wo beim Start dann am Ende Ansible ausgeführt wird.

563
00:29:23,160 --> 00:29:27,490
Kann ja Terraform...

564
00:29:27,490 --> 00:29:29,490
...ich würde gar nicht Terraform wissen lassen...

565
00:29:29,490 --> 00:29:31,490
...dass Ansible noch läuft.

566
00:29:31,490 --> 00:29:33,490
Also sprich...

567
00:29:33,490 --> 00:29:35,490
...wozu sollte...

568
00:29:35,490 --> 00:29:37,490
...das Terraform wissen? Terraform ist fertig...

569
00:29:37,490 --> 00:29:39,490
...sobald die VM über die API angelegt ist...

570
00:29:39,490 --> 00:29:41,490
...und running ist.

571
00:29:41,490 --> 00:29:43,490
Danach kann Ansible machen, was es will.

572
00:29:43,490 --> 00:29:45,490
Also ich würde gar nicht so sehr...

573
00:29:45,490 --> 00:29:47,490
...Kommunikation zwischen Ansible und Terraform probieren.

574
00:29:47,490 --> 00:29:49,490
Denn es sind ja zwei unterschiedliche Tools...

575
00:29:49,490 --> 00:29:51,490
...die auch nicht zwangsläufig von einer abhängig sind.

576
00:29:51,490 --> 00:29:53,490
So, also...

577
00:29:53,490 --> 00:29:55,490
...fangen wir mal an. Ich habe ein Projekt...

578
00:29:55,490 --> 00:29:57,490
...angelegt in der Google Cloud...

579
00:29:57,490 --> 00:29:59,490
...mit dem sprechenden Namen...

580
00:29:59,490 --> 00:30:01,490
...KekkelStream1.

581
00:30:01,490 --> 00:30:03,490
Wenn ihr ein Projekt in der Google Cloud anlegt...

582
00:30:03,490 --> 00:30:05,490
...zeige ich euch...

583
00:30:05,490 --> 00:30:07,490
...grad mal ein, weiß nicht ob ich es Trick nennen soll...

584
00:30:07,490 --> 00:30:09,490
...aber ich nenne es mal Trick.

585
00:30:09,490 --> 00:30:11,490
Normalerweise ist es so...

586
00:30:11,490 --> 00:30:13,490
...wenn ihr hier irgendwas anlegt...

587
00:30:13,490 --> 00:30:15,490
...so blubb, ihr könnt das Ding...

588
00:30:15,490 --> 00:30:17,490
...Projektname blubb...

589
00:30:17,490 --> 00:30:19,490
...und dann erstellt Google für euch...

590
00:30:19,490 --> 00:30:21,490
...eine Projekt-ID, die weltweit...

591
00:30:21,490 --> 00:30:24,870
...einzigartig ist.

592
00:30:24,870 --> 00:30:26,870
Allerdings muss ich sagen...

593
00:30:26,870 --> 00:30:28,870
...ist das Handling...

594
00:30:28,870 --> 00:30:30,870
...von diesen IDs...

595
00:30:30,870 --> 00:30:32,870
...ja...

596
00:30:32,870 --> 00:30:34,870
...vielleicht...

597
00:30:34,870 --> 00:30:36,870
...bisschen kryptisch, wenn man die an manchen Stellen...

598
00:30:36,870 --> 00:30:38,870
...eintragen muss.

599
00:30:38,870 --> 00:30:40,870
Wenn man die Möglichkeit hat...

600
00:30:40,870 --> 00:30:42,870
...hier oben was einzutragen, was unique ist...

601
00:30:42,870 --> 00:30:44,870
...dann seht ihr...

602
00:30:44,870 --> 00:30:46,870
...dann generiert das keine Projekt-ID.

603
00:30:46,870 --> 00:30:48,870
Also man muss sich überlegen...

604
00:30:48,870 --> 00:30:50,870
...was einem wichtiger ist...

605
00:30:50,870 --> 00:30:52,870
...ein cooler...

606
00:30:52,870 --> 00:30:54,870
...kurzer Projektname...

607
00:30:54,870 --> 00:30:56,870
...und dafür aber eine...

608
00:30:56,870 --> 00:30:58,870
...nicht zu merkende ID...

609
00:30:58,870 --> 00:31:00,870
...oder vielleicht ein etwas längerer Projektname...

610
00:31:00,870 --> 00:31:02,870
...aber der weltweit...

611
00:31:02,870 --> 00:31:04,870
...einzigartig ist...

612
00:31:04,870 --> 00:31:06,870
...und ihr könnt den überall verwenden...

613
00:31:06,870 --> 00:31:08,870
...ich find's zum Beispiel ganz cool...

614
00:31:08,870 --> 00:31:10,870
...wenn man dann sowas macht...

615
00:31:10,870 --> 00:31:12,870
...man kann ja zum Beispiel sowas machen...

616
00:31:12,870 --> 00:31:14,870
...Wubblors Stream 1...

617
00:31:14,870 --> 00:31:16,870
...und sowas in der Richtung...

618
00:31:16,870 --> 00:31:18,870
...da ist relativ sicher davon auszugehen...

619
00:31:18,870 --> 00:31:20,870
...dass das weltweit unique ist...

620
00:31:20,870 --> 00:31:22,870
...ich weiß, es gibt jetzt bestimmt irgendwelche Leute...

621
00:31:22,870 --> 00:31:24,870
...die mir auf den Sack gehen wollen...

622
00:31:24,870 --> 00:31:26,870
...und Wubblors Stream 1, 2, 3, 4 und so schon bei sich registrieren...

623
00:31:26,870 --> 00:31:28,870
...einfach nur, dass es angelegt ist...

624
00:31:28,870 --> 00:31:30,870
...ich kenn euch...

625
00:31:30,870 --> 00:31:32,870
...aber...

626
00:31:32,870 --> 00:31:34,870
...normalerweise finde ich das die schönere Variante...

627
00:31:34,870 --> 00:31:36,870
...weil dann ist es irgendwo...

628
00:31:36,870 --> 00:31:38,870
...sprechend und ohne...

629
00:31:38,870 --> 00:31:40,870
...kryptische ID hinten dran...

630
00:31:40,870 --> 00:31:42,870
...natürlich...

631
00:31:42,870 --> 00:31:44,870
...könnt ihr die Dinger dann nicht sowas nennen wie...

632
00:31:44,870 --> 00:31:46,870
...default oder so...

633
00:31:46,870 --> 00:31:48,870
...das ist logischerweise schon belegt...

634
00:31:48,870 --> 00:31:50,870
...gibt...

635
00:31:50,870 --> 00:31:52,870
...mehrere Leute auf der Welt...

636
00:31:52,870 --> 00:31:54,870
...die schon den Projektnamen...

637
00:31:54,870 --> 00:31:56,870
...default verwendet haben...

638
00:31:56,870 --> 00:31:58,870
...also...

639
00:31:58,870 --> 00:32:00,870
...unser Ziel heute ist folgendes...

640
00:32:00,870 --> 00:32:02,870
...wir...

641
00:32:02,870 --> 00:32:04,870
...ich mach nochmal von Anfang an...

642
00:32:04,870 --> 00:32:06,870
...was wir gestern gemacht haben...

643
00:32:06,870 --> 00:32:08,870
...ist ja nahezu nichts...

644
00:32:08,870 --> 00:32:10,870
...ich zeig's einfach nochmal...

645
00:32:10,870 --> 00:32:12,870
...also was wir heute machen ist folgendes...

646
00:32:12,870 --> 00:32:14,870
...wir richten Google Cloud in Terraform ein...

647
00:32:14,870 --> 00:32:16,870
...wir legen Netzwerke an...

648
00:32:16,870 --> 00:32:18,870
...wir legen...

649
00:32:18,870 --> 00:32:20,870
...einen Router an...

650
00:32:20,870 --> 00:32:22,870
...wir legen NAT-Regeln an...

651
00:32:22,870 --> 00:32:24,870
...also NAT-Regeln an, dass wir ins Internet kommen...

652
00:32:24,870 --> 00:32:26,870
...wir legen...

653
00:32:26,870 --> 00:32:28,870
...Firewall-Regeln an, dass wir per SSH...

654
00:32:28,870 --> 00:32:30,870
...drauf zugreifen können...

655
00:32:30,870 --> 00:32:36,610
...was machen wir noch...

656
00:32:36,610 --> 00:32:38,610
...wir legen eine...

657
00:32:38,610 --> 00:32:40,610
...Jump-VM an...

658
00:32:40,610 --> 00:32:42,610
...dass wir uns quasi von daheim...

659
00:32:42,610 --> 00:32:44,610
...in unsere private Google Cloud connecten können...

660
00:32:44,610 --> 00:32:46,610
...wir legen...

661
00:32:46,610 --> 00:32:48,610
...einen...

662
00:32:48,610 --> 00:32:50,610
...Kubernetes-Account an...

663
00:32:50,610 --> 00:32:52,610
...wir legen ein Kubernetes-Cluster an...

664
00:32:52,610 --> 00:32:54,610
...und ein Kubernetes-Node-Pool an...

665
00:32:54,610 --> 00:32:56,610
...allerdings...

666
00:32:56,610 --> 00:32:58,610
...nicht public...

667
00:32:58,610 --> 00:33:00,610
...das ist alles in einem privaten Netz...

668
00:33:00,610 --> 00:33:02,610
...also wir werden das Netz hier verwenden...

669
00:33:02,610 --> 00:33:04,610
...das ist alles in einem privaten Netz...

670
00:33:04,610 --> 00:33:06,610
...das heißt man kommt vom Internet aus nicht dran...

671
00:33:06,610 --> 00:33:08,610
...ist glaube ich sogar ein bisschen billiger...

672
00:33:08,610 --> 00:33:10,610
...weil man keine public IPs braucht...

673
00:33:10,610 --> 00:33:12,610
...kostet ja alles Geld...

674
00:33:12,610 --> 00:33:14,610
...ich gehe mal ganz stark davon aus, dass es nicht umsonst ist...

675
00:33:14,610 --> 00:33:16,610
...ich weiß es aus dem Kopf nicht, wie es in Google Cloud ist...

676
00:33:16,610 --> 00:33:18,610
...aber höchstwahrscheinlich sind public IPs nicht umsonst...

677
00:33:18,610 --> 00:33:20,610
...das heißt...

678
00:33:20,610 --> 00:33:22,610
...das ist alles nicht aus dem Internet...

679
00:33:22,610 --> 00:33:24,610
...erreichbar, das heißt man muss über so einen...

680
00:33:24,610 --> 00:33:26,610
...Zwischenschritt...

681
00:33:26,610 --> 00:33:28,610
...dass man zu seinem Cluster hinkommt...

682
00:33:28,610 --> 00:33:30,610
...was nicht bedeutet...

683
00:33:30,610 --> 00:33:32,610
...dass der Cluster nicht von außen...

684
00:33:32,610 --> 00:33:34,610
...erreichbar gemacht werden kann...

685
00:33:34,610 --> 00:33:36,610
...für Services, die im Internet...

686
00:33:36,610 --> 00:33:38,610
...angeboten werden sollen...

687
00:33:38,610 --> 00:33:40,610
...aber der Cluster selbst...

688
00:33:40,610 --> 00:33:42,610
...also die Management Interface von dem Cluster...

689
00:33:42,610 --> 00:33:44,610
...und von den VMs als...

690
00:33:44,610 --> 00:33:46,610
...die sind nicht aus dem Internet erreichbar...

691
00:33:46,610 --> 00:33:48,610
...Services, die auf dem Cluster laufen...

692
00:33:48,610 --> 00:33:50,610
...irgendwelche Webseiten oder Webservices...

693
00:33:50,610 --> 00:33:52,610
...die können aus dem Internet per Ingress erreichbar sein...

694
00:33:52,610 --> 00:33:54,610
...aber ich denke mal, das werden wir heute nicht machen...

695
00:33:54,610 --> 00:33:56,610
...so weit werden wir nicht kommen...

696
00:33:56,610 --> 00:33:58,610
...wie gesagt, ich sage es nochmal...

697
00:33:58,610 --> 00:34:00,610
...ich habe mir das nicht alles selbst ausgedacht...

698
00:34:00,610 --> 00:34:02,610
...ich habe gestern ein richtig gutes...

699
00:34:02,610 --> 00:34:06,880
...Tutorial Video geguckt...

700
00:34:06,880 --> 00:34:08,880
...von ihm hier...

701
00:34:08,880 --> 00:34:10,880
...sonst hätte ich das auch nicht so schnell gecheckt...

702
00:34:10,880 --> 00:34:12,880
...wie man die Sachen gut in Terraform macht...

703
00:34:12,880 --> 00:34:14,880
...aber wie gesagt, ich habe ein paar Sachen angepasst...

704
00:34:14,880 --> 00:34:16,880
...und ein paar Dinge fehlen aus meiner Sicht auch...

705
00:34:16,880 --> 00:34:18,880
...die man machen sollte...

706
00:34:18,880 --> 00:34:22,580
...gut, auf geht's...

707
00:34:22,580 --> 00:34:24,580
...Windows, was Windows, wo Windows...

708
00:34:24,580 --> 00:34:26,580
...ach, du meinst hier Windows...

709
00:34:26,580 --> 00:34:28,580
...ja, ich habe ein Setup aus...

710
00:34:28,580 --> 00:34:30,580
...Linux Kiste hier und Windows Kiste hier...

711
00:34:30,580 --> 00:34:32,580
...also ich habe für...

712
00:34:32,580 --> 00:34:34,580
...Videos schneiden...

713
00:34:34,580 --> 00:34:36,580
...Videos auf YouTube hochladen, Streaming...

714
00:34:36,580 --> 00:34:38,580
...Sachen spielen...

715
00:34:38,580 --> 00:34:40,580
...und für alles andere habe ich meine Linux Kiste am Start...

716
00:34:40,580 --> 00:34:42,580
...oder ist das ein gutes KDE Stream...

717
00:34:42,580 --> 00:34:44,580
...nö, das ist Windows...

718
00:34:44,580 --> 00:34:46,580
...das ist Windows und das ist Linux...

719
00:34:46,580 --> 00:34:48,580
...i3...Arch by the way...

720
00:34:48,580 --> 00:34:50,580
...sollte ich vielleicht öfters mal erwähnen...

721
00:34:50,580 --> 00:34:52,580
...weil die coolen Leute, wenn sie Arch verwenden...

722
00:34:52,580 --> 00:34:54,580
...erwähnen das auch öfters...

723
00:34:54,580 --> 00:34:56,580
...ich glaube...

724
00:34:56,580 --> 00:34:58,580
...noch cooler wäre man nur mit Gentoo...

725
00:34:58,580 --> 00:35:00,580
...oder Gentoo...

726
00:35:00,580 --> 00:35:02,580
...wie das manche...

727
00:35:02,580 --> 00:35:04,580
...aussprechen...

728
00:35:04,580 --> 00:35:06,580
...gut, also fangen wir nochmal ganz...

729
00:35:06,580 --> 00:35:08,580
...von Anfang an an...

730
00:35:08,580 --> 00:35:10,580
...ich werde mir mal ein paar Sachen...

731
00:35:10,580 --> 00:35:12,580
...Leute...

732
00:35:12,580 --> 00:35:14,580
...wir müssen noch eine Sache von gestern fixen...

733
00:35:14,580 --> 00:35:16,580
...sonst muss ich ein neues Projekt anlegen...

734
00:35:16,580 --> 00:35:18,580
...und dann fangen wir nochmal von vorne an...

735
00:35:18,580 --> 00:35:20,580
...hier an der Stelle...

736
00:35:20,580 --> 00:35:22,580
...ich mach das jetzt einfach mal...

737
00:35:22,580 --> 00:35:24,580
...dann erklär ich...

738
00:35:24,580 --> 00:35:26,580
...dann erklär ich...

739
00:35:26,580 --> 00:35:28,580
...dann erklär ich was es macht...

740
00:35:28,580 --> 00:35:30,580
...wenn wir soweit sind...

741
00:35:30,580 --> 00:35:32,580
...Terraform apply...

742
00:35:32,580 --> 00:35:34,580
...so mehr haben wir noch nicht...

743
00:35:36,580 --> 00:35:38,580
...und dann machen wir das nochmal rückgängig...

744
00:35:38,580 --> 00:35:40,580
...und dann fangen wir von vorne an...

745
00:35:40,580 --> 00:35:42,580
...so ja, yes, wunderbar...

746
00:35:42,580 --> 00:35:44,580
...ok, gut...

747
00:35:44,580 --> 00:35:46,580
...Terraform destroy...

748
00:35:46,580 --> 00:35:48,580
...so man hat jetzt vielleicht...

749
00:35:48,580 --> 00:35:50,580
...ohne dass ich das jetzt im Detail erklärt habe...

750
00:35:50,580 --> 00:35:52,580
...was passiert ist...

751
00:35:52,580 --> 00:35:54,580
...man sieht jetzt zum Beispiel schon mal was richtig cooles...

752
00:35:54,580 --> 00:35:56,580
...Terraform...

753
00:35:56,580 --> 00:35:58,580
...kann Ressourcen anlegen...

754
00:35:58,580 --> 00:36:00,580
...und kann, also mit Terraform apply...

755
00:36:00,580 --> 00:36:02,580
...sachen anlegen...

756
00:36:02,580 --> 00:36:04,580
...ich hoffe ich hab mein Projekt jetzt nicht kaputt gemacht...

757
00:36:04,580 --> 00:36:06,580
...weil ich das vorhin letztes mal vergessen hab...

758
00:36:06,580 --> 00:36:08,580
...ne ok...

759
00:36:08,580 --> 00:36:10,580
...er scheint zu funktionieren...

760
00:36:10,580 --> 00:36:12,580
...Terraform merkt sich welche Ressourcen das angelegt hat...

761
00:36:12,580 --> 00:36:14,580
...und kann die Dinger danach auch wieder löschen...

762
00:36:14,580 --> 00:36:16,580
...das ist sehr praktisch, also wenn ich...

763
00:36:16,580 --> 00:36:18,580
...ich kann quasi was aufbauen...

764
00:36:18,580 --> 00:36:22,150
...und rückstandslos wieder entfernen...

765
00:36:22,150 --> 00:36:24,150
...also eigentlich eine ganz coole Geschichte...

766
00:36:24,150 --> 00:36:26,150
...wenn man zum Beispiel in einem Projekt was aufbaut...

767
00:36:26,150 --> 00:36:28,150
...wo man nicht danach, wenn man fertig ist...

768
00:36:28,150 --> 00:36:30,150
...das ganze Projekt in der Cloud wieder löscht...

769
00:36:30,150 --> 00:36:32,150
...aber ich zeige es euch...

770
00:36:32,150 --> 00:36:34,150
...ich zeige es euch im Detail...

771
00:36:34,150 --> 00:36:36,150
...so ich hoffe das klappt jetzt...

772
00:36:36,150 --> 00:36:38,150
...Network delete...

773
00:36:38,150 --> 00:36:40,150
...er sollte alles löschen...

774
00:36:40,150 --> 00:36:42,150
...so und ich kopiere mir jetzt noch zwei Scripts...

775
00:36:42,150 --> 00:36:44,150
...die ich mir gebastelt habe rüber...

776
00:36:44,150 --> 00:36:46,150
...das macht es nämlich ein bisschen einfacher...

777
00:36:46,150 --> 00:36:48,150
...das erste ist ein Initscript...

778
00:36:48,150 --> 00:36:53,190
...legen wir hier mal rein...

779
00:36:53,190 --> 00:36:55,190
...ah nein es hat funktioniert...

780
00:36:55,190 --> 00:36:58,500
...ähm...

781
00:36:58,500 --> 00:37:00,500
...geke Terraform...

782
00:37:00,500 --> 00:37:02,500
...so ich lösche mal kurz...

783
00:37:02,500 --> 00:37:04,500
...meinen ganzen Terraform State...

784
00:37:04,500 --> 00:37:06,500
...so als hätten wir noch nichts gemacht...

785
00:37:06,500 --> 00:37:08,500
...Terraform Logs und alles...

786
00:37:08,500 --> 00:37:10,500
...so dann machen wir noch ein extra Verzeichnis...

787
00:37:10,500 --> 00:37:12,500
...nennen wir mal Terraform...

788
00:37:12,500 --> 00:37:14,500
...und alles was es hier gibt...

789
00:37:14,500 --> 00:37:16,500
...reinschieben...

790
00:37:16,500 --> 00:37:18,500
...weil wir müssen es ein bisschen besser strukturieren...

791
00:37:18,500 --> 00:37:20,500
...denn hier kommt ja später noch ein Kubernetes...

792
00:37:20,500 --> 00:37:22,500
...ordner hin...

793
00:37:22,500 --> 00:37:24,500
...und alles mögliche...

794
00:37:24,500 --> 00:37:26,500
...wir machen jetzt mal hier ein Script hin...

795
00:37:26,500 --> 00:37:29,880
...das nennen wir init...

796
00:37:29,880 --> 00:37:31,880
...und ich kopiere mal was rein...

797
00:37:31,880 --> 00:37:33,880
...und dann führen wir das mal aus...

798
00:37:33,880 --> 00:37:35,880
...das macht es nämlich ein bisschen einfacher...

799
00:37:35,880 --> 00:37:37,880
...so also...

800
00:37:37,880 --> 00:37:39,880
...ich kann euch nicht sagen ob das der Weisheitsletzter Schluss ist...

801
00:37:39,880 --> 00:37:41,880
...das so zu machen...

802
00:37:41,880 --> 00:37:43,880
...so wenn ich ein neues Google Cloud Projekt...

803
00:37:43,880 --> 00:37:45,880
...anfange...

804
00:37:45,880 --> 00:37:47,880
...bereite ich das ein bisschen darauf vor...

805
00:37:47,880 --> 00:37:49,880
...dass ich mit Terraform meine ganzen Ressourcen...

806
00:37:49,880 --> 00:37:51,880
...anlegen kann...so und zwar...

807
00:37:51,880 --> 00:37:53,880
...ich suche mir einmal die aktuelle Projekt-ID...

808
00:37:53,880 --> 00:37:55,880
...raus...dann lege ich ein...

809
00:37:55,880 --> 00:37:57,880
...Storage Bucket an...

810
00:37:57,880 --> 00:37:59,880
...zeige ich euch gleich wofür das notwendig ist...

811
00:37:59,880 --> 00:38:01,880
...und ich lösche das Default...

812
00:38:01,880 --> 00:38:03,880
...die Default Firewall Regeln und das Default Netzwerk...

813
00:38:03,880 --> 00:38:05,880
...ans Trinken erinnern...sehr gut...

814
00:38:05,880 --> 00:38:09,760
...exzellent...schau dir mir...

815
00:38:09,760 --> 00:38:11,760
...Terra Mix an...

816
00:38:11,760 --> 00:38:13,760
...Terranigma kenn ich...

817
00:38:13,760 --> 00:38:15,760
...achso für...

818
00:38:15,760 --> 00:38:17,760
...ja es gibt ja ein paar Terraform Rapper...

819
00:38:17,760 --> 00:38:19,760
...ich bin immer noch für...

820
00:38:19,760 --> 00:38:21,760
...Raw Terraform...

821
00:38:21,760 --> 00:38:23,760
...so dann führen wir das jetzt mal...

822
00:38:23,760 --> 00:38:25,760
...aus...

823
00:38:25,760 --> 00:38:27,760
...achso das alte Storage...

824
00:38:27,760 --> 00:38:29,760
...Bucket können wir auch noch löschen...

825
00:38:29,760 --> 00:38:31,760
...Cloud...

826
00:38:31,760 --> 00:38:33,760
...Storage...

827
00:38:33,760 --> 00:38:35,760
...warum ist das so fett...

828
00:38:35,760 --> 00:38:42,020
...Alter...

829
00:38:42,020 --> 00:38:44,020
...das da...

830
00:38:44,020 --> 00:38:46,020
...ja...

831
00:38:46,020 --> 00:38:48,020
...so löschen wir mal das Storage Bucket...

832
00:38:48,020 --> 00:38:50,020
...und dann fangen wir an...

833
00:38:50,020 --> 00:38:52,020
...Delete...

834
00:38:52,020 --> 00:38:54,020
...zack...

835
00:38:54,020 --> 00:38:57,650
...okay führen wir das In-Hit Script aus...

836
00:38:57,650 --> 00:38:59,650
...wie gesagt ich mach nachher noch ein Github Repo...

837
00:38:59,650 --> 00:39:01,650
...wo das alles drin ist...

838
00:39:01,650 --> 00:39:03,650
...auf löschen...

839
00:39:03,650 --> 00:39:05,650
...please...

840
00:39:05,650 --> 00:39:10,310
...yes...

841
00:39:10,310 --> 00:39:12,310
...so das dauert jetzt kurz...

842
00:39:12,310 --> 00:39:14,310
...und dann können wir uns schon ein bisschen um die...

843
00:39:14,310 --> 00:39:16,310
...Terraform Sachen kümmern...

844
00:39:16,310 --> 00:39:18,310
...dieses In-Hit Script habe ich mir...

845
00:39:18,310 --> 00:39:20,310
...einfach nur gemacht damit es schneller geht...

846
00:39:20,310 --> 00:39:22,310
...aus einem Default Projekt...

847
00:39:22,310 --> 00:39:24,310
...das so zu bauen das ich Terraform ausführen kann...

848
00:39:24,310 --> 00:39:26,310
...also das erste was man für...

849
00:39:26,310 --> 00:39:28,310
...Terraform konfigurieren muss ist folgendes...

850
00:39:28,310 --> 00:39:30,310
...man muss angeben...

851
00:39:30,310 --> 00:39:32,310
...welche Provider man benutzen will...

852
00:39:32,310 --> 00:39:34,310
...wir benutzen Google...

853
00:39:34,310 --> 00:39:36,310
...das heißt wir benutzen den Terraform Provider für Google...

854
00:39:36,310 --> 00:39:38,310
...wer hätte das gedacht...

855
00:39:38,310 --> 00:39:40,310
...dann muss man noch einstellen welches Projekt...

856
00:39:40,310 --> 00:39:42,310
...man...

857
00:39:42,310 --> 00:39:44,310
...befüllen will...

858
00:39:44,310 --> 00:39:46,310
...und ihr seht ja hier Kekkel Stream 1 ist mein Projekt...

859
00:39:46,310 --> 00:39:48,310
...und dann noch in welcher Region wir das ganze...

860
00:39:48,310 --> 00:39:50,310
...machen wollen...

861
00:39:50,310 --> 00:39:52,310
...wir wollen das in der Region...

862
00:39:52,310 --> 00:39:54,310
...Europe West 3 machen...

863
00:39:54,310 --> 00:39:56,310
...Europe West 3 ist Frankfurt am Main...

864
00:39:56,310 --> 00:39:58,310
...wenn man nicht weiß...

865
00:39:58,310 --> 00:40:00,310
...was es ist...

866
00:40:00,310 --> 00:40:02,310
...Europe West 3...

867
00:40:02,310 --> 00:40:04,310
...man kann hier nachgucken bei Google...

868
00:40:04,310 --> 00:40:06,310
...z.B. hier...

869
00:40:06,310 --> 00:40:08,310
...Europe West 3...

870
00:40:08,310 --> 00:40:10,310
...da sieht man...

871
00:40:10,310 --> 00:40:12,310
...Europe West 3 ABC...

872
00:40:12,310 --> 00:40:14,310
...das sind die Zonen btw...

873
00:40:14,310 --> 00:40:16,310
...Europe West 3 ist Frankfurt Germany...

874
00:40:16,310 --> 00:40:18,310
...aktuell zumindest...

875
00:40:18,310 --> 00:40:20,310
...das hier ist die Region...

876
00:40:20,310 --> 00:40:22,310
...und das hier unten drunter...

877
00:40:22,310 --> 00:40:24,310
...dieses minus ABC...

878
00:40:24,310 --> 00:40:26,310
...das sind Zonen...

879
00:40:26,310 --> 00:40:28,310
...und manchmal muss man bei Google Cloud...

880
00:40:28,310 --> 00:40:30,310
...entscheiden...

881
00:40:30,310 --> 00:40:32,310
...möchte man Sachen in einer Region...

882
00:40:32,310 --> 00:40:34,310
...oder in einer Zone aufbauen...

883
00:40:34,310 --> 00:40:36,310
...wenn man das in einer Region aufbaut...

884
00:40:36,310 --> 00:40:38,310
...dann werden manchmal...

885
00:40:38,310 --> 00:40:40,310
...z.B. wenn man Storage oder sowas anlegt...

886
00:40:40,310 --> 00:40:42,310
...dann wird das automatisch repliziert...

887
00:40:42,310 --> 00:40:44,310
...oder die Kubernetes...

888
00:40:44,310 --> 00:40:47,750
...Node...

889
00:40:47,750 --> 00:40:52,020
...wie heißt...

890
00:40:52,020 --> 00:40:54,020
...man repliziert automatisch in...

891
00:40:54,020 --> 00:40:56,020
...alle Zonen einer Region...

892
00:40:56,020 --> 00:40:58,020
...das kostet mehr...

893
00:40:58,020 --> 00:41:00,020
...ist nice...

894
00:41:00,020 --> 00:41:02,020
...will man aber oftmals gar nicht haben...

895
00:41:02,020 --> 00:41:04,020
...d.h. man sollte sich immer überlegen...

896
00:41:04,020 --> 00:41:06,020
...möchte man was regional...

897
00:41:06,020 --> 00:41:08,020
...oder wirklich nur was in einer Zone aufbauen...

898
00:41:08,020 --> 00:41:10,020
...und in einer Zone es aufzubauen...

899
00:41:10,020 --> 00:41:12,020
...ist meistens billiger...

900
00:41:12,020 --> 00:41:14,020
...weil regional bedeutet in der Regel...

901
00:41:14,020 --> 00:41:16,020
...in allen 3 Zonen einer Region...

902
00:41:16,020 --> 00:41:18,020
...ja und es gibt noch bei...

903
00:41:18,020 --> 00:41:20,020
...Storage auch die Möglichkeit...

904
00:41:20,020 --> 00:41:22,020
...so das ist eine ganz simple...

905
00:41:22,020 --> 00:41:26,040
...Config was ich eigentlich...

906
00:41:26,040 --> 00:41:28,040
...wofür ich Terraform...

907
00:41:28,040 --> 00:41:30,040
...in dem Fall hier eigentlich verwenden will...

908
00:41:30,040 --> 00:41:32,040
...ich will das für...

909
00:41:32,040 --> 00:41:34,040
...ich soll euch vielleicht mal das...

910
00:41:34,040 --> 00:41:36,040
...Terraform-Config-File zeigen...

911
00:41:36,040 --> 00:41:38,040
...ich will das ganze für die Projekt-ID...

912
00:41:38,040 --> 00:41:40,040
...KekkelStream1 verwenden...

913
00:41:40,040 --> 00:41:42,040
...Region ist Europe-West3...

914
00:41:42,040 --> 00:41:44,040
...und die Zone wenn ich Zonen verwenden...

915
00:41:44,040 --> 00:41:46,040
...möchte dann möchte ich...

916
00:41:46,040 --> 00:41:48,040
...die Unterregion...

917
00:41:48,040 --> 00:41:50,040
...-a verwenden...

918
00:41:50,040 --> 00:41:52,040
...und die Unterregion in dem Fall ist halt...

919
00:41:52,040 --> 00:41:54,040
...die Zone, so nennt sich das bei Google Cloud...

920
00:41:54,040 --> 00:41:56,040
...und...

921
00:41:56,040 --> 00:41:58,040
...wenn man hier so ein File anlegt...

922
00:41:58,040 --> 00:42:00,040
...Terraform.tf war es...

923
00:42:00,040 --> 00:42:02,040
...dann zieht Terraform hier den Inhalt...

924
00:42:02,040 --> 00:42:04,040
...dieser Variablen aus diesem...

925
00:42:04,040 --> 00:42:06,040
...Variabelfile, das ist ganz nützlich...

926
00:42:06,040 --> 00:42:08,040
...es kann ja durchaus sein, dass ich die gleiche...

927
00:42:08,040 --> 00:42:10,040
...Terraform-Config...

928
00:42:10,040 --> 00:42:12,040
...es kann ja durchaus sein, dass ich...

929
00:42:12,040 --> 00:42:14,040
...die gleiche Terraform-Config...

930
00:42:14,040 --> 00:42:16,040
...für mehrere...

931
00:42:16,040 --> 00:42:18,040
...Projekte...

932
00:42:18,040 --> 00:42:20,040
...benutzen möchte...

933
00:42:20,040 --> 00:42:22,040
...dann könnte es sein, dass ich zum Beispiel sowas habe wie...

934
00:42:22,040 --> 00:42:24,040
...CackleStreamDev...

935
00:42:24,040 --> 00:42:26,040
...CackleStreamLive oder sowas...

936
00:42:26,040 --> 00:42:28,040
...und dass ich das darauf dann applyen will...

937
00:42:28,040 --> 00:42:30,040
...also ist das ganz sinnvoll...

938
00:42:30,040 --> 00:42:32,040
...so die grundlegenden Sachen so wie Region...

939
00:42:32,040 --> 00:42:34,040
...Zone und vor allem...

940
00:42:34,040 --> 00:42:36,040
...Projekt-ID...

941
00:42:36,040 --> 00:42:38,040
...variabel zu machen...

942
00:42:38,040 --> 00:42:40,040
...man könnte sich das übrigens auch komplett sparen...

943
00:42:40,040 --> 00:42:42,040
...man könnte zum Beispiel hier auch...

944
00:42:42,040 --> 00:42:44,040
...sagen Default...

945
00:42:44,040 --> 00:42:46,040
...und dann könnte ich hier mein Projekt eintragen...

946
00:42:46,040 --> 00:42:48,040
...was ich aber ein bisschen blöd finde...

947
00:42:48,040 --> 00:42:50,040
...weil es könnte ja sein, dass ich was anderes...

948
00:42:50,040 --> 00:42:52,040
...verwenden will und aus versehen es dann in diesem Projekt...

949
00:42:52,040 --> 00:42:54,040
...ausführe, obwohl ich das vielleicht gar nicht will...

950
00:42:54,040 --> 00:42:56,040
...also ist...

951
00:42:56,040 --> 00:42:58,040
...so finde ich es auf jeden Fall schöner...

952
00:42:58,040 --> 00:43:00,040
...bis jetzt passiert noch nichts großartig...

953
00:43:00,040 --> 00:43:02,040
...wir haben jetzt nur den Google Provider konfiguriert...

954
00:43:02,040 --> 00:43:04,040
...und paar Basic-Variablen...

955
00:43:04,040 --> 00:43:06,040
...angelegt, die wir in Zukunft brauchen...

956
00:43:06,040 --> 00:43:08,040
...der nächste Schritt ist das hier...

957
00:43:08,040 --> 00:43:12,950
...ja, da kann man sich jetzt überschreiten...

958
00:43:12,950 --> 00:43:14,950
...macht man das in der extra...

959
00:43:14,950 --> 00:43:16,950
...Datei oder macht man das hier beim...

960
00:43:16,950 --> 00:43:18,950
...Provider drinnen...

961
00:43:18,950 --> 00:43:20,950
...was das macht ist...

962
00:43:20,950 --> 00:43:22,950
...die Voraussetzung dafür, dass wir...

963
00:43:22,950 --> 00:43:24,950
...auch was anderes machen können, nämlich...

964
00:43:24,950 --> 00:43:26,950
...das aktiviert in meinem Projekt erstmal...

965
00:43:26,950 --> 00:43:28,950
...bestimmte Services...

966
00:43:28,950 --> 00:43:30,950
...weil wenn ich jetzt hier reingehe...

967
00:43:30,950 --> 00:43:32,950
...wobei ich habe es gestern schon...

968
00:43:32,950 --> 00:43:34,950
...aktiviert, ich kann es euch nicht zeigen...

969
00:43:34,950 --> 00:43:36,950
...normalerweise, wenn ich jetzt hier reingehe...

970
00:43:36,950 --> 00:43:38,950
...in die Kubernetes Engine oder...

971
00:43:38,950 --> 00:43:40,950
...in die Compute Engine...

972
00:43:40,950 --> 00:43:42,950
...Compute Engine ist bei Google Cloud quasi alles...

973
00:43:42,950 --> 00:43:44,950
...was mit virtuellen Maschinen zu tun hat...

974
00:43:44,950 --> 00:43:46,950
...dann würde jetzt normalerweise hier was aufploppen...

975
00:43:46,950 --> 00:43:48,950
...Achtung, dieser Service ist nicht aktiviert...

976
00:43:48,950 --> 00:43:50,950
...sie müssen diesen Service erst aktivieren...

977
00:43:50,950 --> 00:43:52,950
...so und nachdem ich...

978
00:43:52,950 --> 00:43:54,950
...das ich eben...

979
00:43:54,950 --> 00:43:56,950
...den Compute Engine verwenden will...

980
00:43:56,950 --> 00:43:58,950
...kann ich hier sagen, Compute Engine...

981
00:43:58,950 --> 00:44:00,950
...Service...

982
00:44:00,950 --> 00:44:02,950
...aktivieren...

983
00:44:02,950 --> 00:44:04,950
...und das hier ist wichtig an der Stelle...

984
00:44:04,950 --> 00:44:08,520
...ich weiß nicht ob es ein Bug ist...

985
00:44:08,520 --> 00:44:10,520
...oder ob es...

986
00:44:10,520 --> 00:44:14,660
...by Design ist...

987
00:44:14,660 --> 00:44:16,660
...man kann über...

988
00:44:16,660 --> 00:44:18,660
...Terraform Services die man...

989
00:44:18,660 --> 00:44:20,660
...aktiviert hat für das Projekt nicht wieder...

990
00:44:20,660 --> 00:44:22,660
...deaktivieren...

991
00:44:22,660 --> 00:44:24,660
...ich bin mir auch gar nicht sicher...

992
00:44:24,660 --> 00:44:26,660
...ob man Services wieder deaktivieren kann...

993
00:44:26,660 --> 00:44:28,660
...mit Web Interface...

994
00:44:28,660 --> 00:44:30,660
...glaub ich habe ich es noch nie gemacht...

995
00:44:30,660 --> 00:44:32,660
...geht wahrscheinlich auch irgendwo...

996
00:44:32,660 --> 00:44:34,660
...also wenn ich jetzt beispielsweise für dieses Projekt...

997
00:44:34,660 --> 00:44:36,660
...Compute Engine komplett wieder deaktivieren will...

998
00:44:36,660 --> 00:44:38,660
...dann wüsste ich gar nicht wo ich es mache...

999
00:44:38,660 --> 00:44:40,660
...und wenn man das hier einstellt...

1000
00:44:40,660 --> 00:44:42,660
...und ich mein...

1001
00:44:42,660 --> 00:44:44,660
...Terraform Projekt wieder entferne...

1002
00:44:44,660 --> 00:44:46,660
...dann lässt es das ganze einfach enabled...

1003
00:44:46,660 --> 00:44:48,660
...das ist quasi nur...

1004
00:44:48,660 --> 00:44:50,660
...anschalt only...

1005
00:44:50,660 --> 00:44:52,660
...ausschalten gibt es nicht mehr...

1006
00:44:52,660 --> 00:44:54,660
...das ist bei Services wichtig...

1007
00:44:54,660 --> 00:44:56,660
...weil ansonsten schmeißt...

1008
00:44:56,660 --> 00:44:58,660
...Terraform irgendwelche Fehler...

1009
00:44:58,660 --> 00:45:00,660
...also wenn ihr komische Fehler bekommt bei Terraform Destroy...

1010
00:45:00,660 --> 00:45:02,660
...belegt euch vielleicht ob ihr bei...

1011
00:45:02,660 --> 00:45:04,660
...Servicedefinition Disable on Destroy...

1012
00:45:04,660 --> 00:45:06,660
...ausschalten müsst...

1013
00:45:06,660 --> 00:45:08,660
...das dient aber alles noch...

1014
00:45:08,660 --> 00:45:10,660
...dazu das vorzubereiten für das was wir...

1015
00:45:10,660 --> 00:45:12,660
...machen wollen als es noch gar nichts...

1016
00:45:12,660 --> 00:45:14,660
...großartiges passiert...

1017
00:45:14,660 --> 00:45:16,660
...der nächste Block...

1018
00:45:16,660 --> 00:45:18,660
...ist wichtig...

1019
00:45:18,660 --> 00:45:20,660
...wenn ihr Terraform nicht nur alleine verwenden wollt...

1020
00:45:20,660 --> 00:45:22,660
...überlegt euch mal...

1021
00:45:22,660 --> 00:45:24,660
...ihr verwendet Terraform im Team...

1022
00:45:24,660 --> 00:45:26,660
...die Configs hier benutzen...

1023
00:45:26,660 --> 00:45:28,660
...mehrere Leute gleichzeitig...

1024
00:45:28,660 --> 00:45:30,660
...ich habe ja gesagt Terraform speichert...

1025
00:45:30,660 --> 00:45:32,660
...sich was es gemacht hat...

1026
00:45:32,660 --> 00:45:34,660
...standardmäßig...

1027
00:45:34,660 --> 00:45:36,660
...speichert Terraform das Lokal...

1028
00:45:36,660 --> 00:45:38,660
...bei euch im Verzeichnis...

1029
00:45:38,660 --> 00:45:46,290
...was...

1030
00:45:46,290 --> 00:45:48,290
...ich kack noob...

1031
00:45:48,290 --> 00:45:50,290
...mein Initscript funktioniert ja noch gar nicht so...

1032
00:45:50,290 --> 00:45:52,290
...ok...

1033
00:45:52,290 --> 00:45:55,990
...warum eigentlich nicht...

1034
00:45:55,990 --> 00:45:59,680
...achso weil ich das falsche Projekt eingetragen habe oder...

1035
00:45:59,680 --> 00:46:01,680
...ja ich noob habe da dev...

1036
00:46:01,680 --> 00:46:03,680
...eingetragen alter...

1037
00:46:03,680 --> 00:46:05,680
...nicht dev...

1038
00:46:05,680 --> 00:46:07,680
...naja egal...

1039
00:46:07,680 --> 00:46:09,680
...und wenn man jetzt mit mehreren Leuten...

1040
00:46:09,680 --> 00:46:11,680
...verwenden möchte...

1041
00:46:11,680 --> 00:46:13,680
...dann ist der State...

1042
00:46:13,680 --> 00:46:15,680
...den Terraform standardmäßig hier...

1043
00:46:15,680 --> 00:46:17,680
...bei euch lokal im Dateiverzeichnis...

1044
00:46:17,680 --> 00:46:19,680
...im Filesystem speichert...

1045
00:46:19,680 --> 00:46:21,680
...wird dann zu einem Problem...

1046
00:46:21,680 --> 00:46:23,680
...weil es könnte jetzt ja sein...

1047
00:46:23,680 --> 00:46:25,680
...dass ich das gerade ausführe...

1048
00:46:25,680 --> 00:46:27,680
...bei mir lokal und jemand anderes bei sich lokal...

1049
00:46:27,680 --> 00:46:29,680
...ausführt...

1050
00:46:29,680 --> 00:46:31,680
...dann haben wir zwei Terraform States die voneinander nichts wissen...

1051
00:46:31,680 --> 00:46:33,680
...das muss...

1052
00:46:33,680 --> 00:46:35,680
...über kurz oder lang zu Problemen führen...

1053
00:46:35,680 --> 00:46:37,680
...weil Terraform merkt sich...

1054
00:46:37,680 --> 00:46:39,680
...was es gemacht hat...

1055
00:46:39,680 --> 00:46:41,680
...und versucht es immer rückgängig zu machen...

1056
00:46:41,680 --> 00:46:43,680
...wenn jemand außerhalb von Terraform was dran gemacht hat...

1057
00:46:43,680 --> 00:46:45,680
...und wenn jemand Terraform auf einem anderen Rechner...

1058
00:46:45,680 --> 00:46:47,680
...laufen lässt...

1059
00:46:47,680 --> 00:46:49,680
...und die beiden voneinander nichts wissen...

1060
00:46:49,680 --> 00:46:51,680
...dann denken beide der andere hätte es ihm kaputt gemacht...

1061
00:46:51,680 --> 00:46:53,680
...das heißt man muss sich überlegen...

1062
00:46:53,680 --> 00:46:55,680
...wo man den Terraform...

1063
00:46:55,680 --> 00:46:57,680
...wo man den Terraform State speichert...

1064
00:46:57,680 --> 00:46:59,680
...und den Terraform State...

1065
00:46:59,680 --> 00:47:01,680
...kann man zum Beispiel in einem Storage Bucket...

1066
00:47:01,680 --> 00:47:03,680
...speichern in der Cloud...

1067
00:47:03,680 --> 00:47:05,680
...auf dieses Bucket greifen dann alle Leute...

1068
00:47:05,680 --> 00:47:07,680
...gleichermaßen zu...

1069
00:47:07,680 --> 00:47:09,680
...und es gibt keinerlei so...

1070
00:47:09,680 --> 00:47:11,680
...Synchronisationsprobleme und...

1071
00:47:11,680 --> 00:47:13,680
...einer macht dem anderen den State kaputt...

1072
00:47:13,680 --> 00:47:15,680
...das heißt da können mehrere Leute Terraform ausführen...

1073
00:47:15,680 --> 00:47:17,680
...und...

1074
00:47:17,680 --> 00:47:19,680
...es ist...

1075
00:47:19,680 --> 00:47:21,680
...alles gut...

1076
00:47:21,680 --> 00:47:25,250
...funktioniert...

1077
00:47:25,250 --> 00:47:30,040
...ja macht das...

1078
00:47:30,040 --> 00:47:32,040
...heute nicht arbeiten Max oder ist montags frei...

1079
00:47:32,040 --> 00:47:34,040
...ich habe montags frei immer...

1080
00:47:34,040 --> 00:47:37,480
...arbeiter habe ich montags frei...

1081
00:47:37,480 --> 00:47:39,480
...so ich muss mal kurz hier in meine Buckets gehen...

1082
00:47:39,480 --> 00:47:41,480
...ich habe glaube ich irgendwas erstellt...

1083
00:47:41,480 --> 00:47:43,480
...was ich nicht erstellen wollte...

1084
00:47:43,480 --> 00:47:48,000
...weil ich blöd rumeditiert habe...

1085
00:47:48,000 --> 00:47:54,450
...ist doch alles da...

1086
00:47:54,450 --> 00:47:58,020
...eigentlich alles gut...

1087
00:47:58,020 --> 00:48:00,020
...warum ist mein Innenscript gefailt...

1088
00:48:00,020 --> 00:48:02,020
...ah gut keine Ahnung...

1089
00:48:02,020 --> 00:48:04,020
...ich führ es so nochmal aus...

1090
00:48:04,020 --> 00:48:09,440
...nö geht doch alles...

1091
00:48:09,440 --> 00:48:11,440
...alles gut...

1092
00:48:11,440 --> 00:48:13,440
...also...

1093
00:48:13,440 --> 00:48:15,440
...wie wird bei GCP der Stateload gemanagt oder passiert das auch...

1094
00:48:15,440 --> 00:48:17,440
...ja...

1095
00:48:17,440 --> 00:48:19,440
...ich habe ein Bucket...

1096
00:48:19,440 --> 00:48:21,440
...wenn du das über Cloud Storage machst...

1097
00:48:21,440 --> 00:48:23,440
...hast du überhaupt keine Probleme mehr...

1098
00:48:23,440 --> 00:48:25,440
...wenn mehrere Leute...

1099
00:48:25,440 --> 00:48:27,440
...das heißt...

1100
00:48:27,440 --> 00:48:29,440
...überhaupt keine Probleme ist bei Terraform immer so ein Ding...

1101
00:48:29,440 --> 00:48:31,440
...das kann immer irgendwie außer Sync geraten...

1102
00:48:31,440 --> 00:48:33,440
...weil irgendwelche komischen Sachen passieren...

1103
00:48:33,440 --> 00:48:35,440
...aber du solltest keine Probleme mehr haben...

1104
00:48:35,440 --> 00:48:37,440
...wenn du den kompletten Terraform State...

1105
00:48:37,440 --> 00:48:39,440
...in dem Bucket speicherst...

1106
00:48:39,440 --> 00:48:41,440
...du musst das übrigens auch nicht...

1107
00:48:41,440 --> 00:48:43,440
...hier zwangsläufig...

1108
00:48:43,440 --> 00:48:48,680
...so machen wie ich das gemacht habe...

1109
00:48:48,680 --> 00:48:50,680
...die unterstützen mehrere Backends...

1110
00:48:50,680 --> 00:48:52,680
...also sie unterstützen alle...

1111
00:48:52,680 --> 00:48:54,680
...großen Cloud Anbieter...

1112
00:48:54,680 --> 00:48:56,680
...jeweils die...

1113
00:48:56,680 --> 00:48:58,680
...das spezielle von denen...

1114
00:48:58,680 --> 00:49:00,680
...aber auch S3...

1115
00:49:00,680 --> 00:49:02,680
...da bin ich jetzt bescheuert wo ist das denn...

1116
00:49:02,680 --> 00:49:04,680
...each Backend...

1117
00:49:04,680 --> 00:49:06,680
...available Backends...

1118
00:49:06,680 --> 00:49:08,680
...also die können natürlich...

1119
00:49:08,680 --> 00:49:10,680
...die können Google Cloud...

1120
00:49:10,680 --> 00:49:12,680
...die können natürlich auch Azure...

1121
00:49:12,680 --> 00:49:14,680
...und die können auch S3...

1122
00:49:14,680 --> 00:49:18,180
...du kannst es auch in Postgres speichern...

1123
00:49:18,180 --> 00:49:20,180
...als Secret im Kubernetes Cluster...

1124
00:49:20,180 --> 00:49:22,180
...webserver was auch immer...

1125
00:49:22,180 --> 00:49:24,180
...oder auch in Console...

1126
00:49:24,180 --> 00:49:26,180
...oder auch ganz ganz toll in der Alibaba Cloud...

1127
00:49:26,180 --> 00:49:31,090
...ne du kannst...

1128
00:49:31,090 --> 00:49:33,090
...du kannst bei AWS auch in einem S3 Bucket speichern...

1129
00:49:33,090 --> 00:49:35,090
...wenn du willst...

1130
00:49:35,090 --> 00:49:39,680
...du musst das nicht über DynamoDB machen...

1131
00:49:39,680 --> 00:49:41,680
...kannst du auch...

1132
00:49:41,680 --> 00:49:43,680
...ach Moment...

1133
00:49:43,680 --> 00:49:45,680
...Sekunde ich habe nichts gesagt...

1134
00:49:45,680 --> 00:49:50,400
...ich habe Mist erzählt...

1135
00:49:50,400 --> 00:49:52,400
...this Backend also supports...

1136
00:49:52,400 --> 00:49:54,400
...State Locking and Consistency Checking...

1137
00:49:54,400 --> 00:50:03,440
...ok...

1138
00:50:03,440 --> 00:50:05,440
...vielleicht habe ich dir auch Mist erzählt...

1139
00:50:05,440 --> 00:50:07,440
...vielleicht habe ich dir auch Mist erzählt...

1140
00:50:07,440 --> 00:50:09,440
...vielleicht habe ich dir auch Mist erzählt...

1141
00:50:09,440 --> 00:50:11,440
...this Backend supports State Locking...

1142
00:50:11,440 --> 00:50:13,440
...ne doch geht...

1143
00:50:13,440 --> 00:50:15,440
...das geht alles über das Storage Bucket...

1144
00:50:15,440 --> 00:50:17,440
...in dem Fall...

1145
00:50:17,440 --> 00:50:19,440
...das funktioniert...

1146
00:50:19,440 --> 00:50:21,440
...das kann man alles so machen...

1147
00:50:21,440 --> 00:50:23,440
...wenn man mehrere Umgebungen hat...

1148
00:50:23,440 --> 00:50:25,440
...dass man zum Beispiel DevInt...

1149
00:50:25,440 --> 00:50:27,440
...oder was weiß ich...

1150
00:50:27,440 --> 00:50:29,440
...DevLive...

1151
00:50:29,440 --> 00:50:31,440
...oder was auch immer hat...

1152
00:50:31,440 --> 00:50:33,440
...kann man hier noch Unterordner machen...

1153
00:50:33,440 --> 00:50:35,440
...wenn man unterschiedlich speichern will...

1154
00:50:35,440 --> 00:50:39,460
...ja...

1155
00:50:39,460 --> 00:50:41,460
...muss man sich ein bisschen angucken...

1156
00:50:41,460 --> 00:50:43,460
...was der jeweilige Cloud Anbieter unterstützt...

1157
00:50:43,460 --> 00:50:45,460
...und jetzt können mehrere Leute...

1158
00:50:45,460 --> 00:50:47,460
...parallel Terraform ausführen...

1159
00:50:47,460 --> 00:50:49,460
...ohne das was kaputt geht...

1160
00:50:49,460 --> 00:50:51,460
...so weit so gut...

1161
00:50:51,460 --> 00:50:53,460
...es gibt eine Sache die man noch machen sollte...

1162
00:50:53,460 --> 00:50:55,460
...die wir jetzt aber nicht gemacht haben...

1163
00:50:55,460 --> 00:50:57,460
...man kann hier...

1164
00:50:57,460 --> 00:50:59,460
...bei diesem Storage in der Google Cloud...

1165
00:50:59,460 --> 00:51:01,460
...einstellen dass das eine History...

1166
00:51:01,460 --> 00:51:03,460
...sich speichert...

1167
00:51:03,460 --> 00:51:05,460
...in dem Fall der Fälle das irgend jemand Mist baut...

1168
00:51:05,460 --> 00:51:07,460
...und was kaputt macht...

1169
00:51:07,460 --> 00:51:09,460
...könnte man so den State wieder...

1170
00:51:09,460 --> 00:51:11,460
...hat man quasi so ein automatisches...

1171
00:51:11,460 --> 00:51:13,460
...7 Tage Backup vom Terraform State...

1172
00:51:13,460 --> 00:51:15,460
...falls irgend jemand Mist eingetippt hat...

1173
00:51:15,460 --> 00:51:17,460
...und ich möchte es einfach schnell wieder rückgängig machen...

1174
00:51:17,460 --> 00:51:19,460
...machen wir jetzt an der Stelle nicht...

1175
00:51:19,460 --> 00:51:21,460
...is Overkill brauchen wir nicht...

1176
00:51:21,460 --> 00:51:23,460
...so und wenn wir das alles eingerichtet haben...

1177
00:51:23,460 --> 00:51:25,460
...können wir anfangen unser Google Cloud Projekt...

1178
00:51:25,460 --> 00:51:27,460
...anzulegen...

1179
00:51:27,460 --> 00:51:29,460
...das war alles nur Zeremonie jetzt...

1180
00:51:29,460 --> 00:51:31,460
...zur Vorbereitung...

1181
00:51:31,460 --> 00:51:33,460
...und wir fangen jetzt an...

1182
00:51:33,460 --> 00:51:35,460
...also wie gesagt...

1183
00:51:35,460 --> 00:51:37,460
...wir legen Netzwerke an...

1184
00:51:37,460 --> 00:51:39,460
...Routen an, Firewall Regeln an...

1185
00:51:39,460 --> 00:51:41,460
...Jump VM in die Cloud an...

1186
00:51:41,460 --> 00:51:43,460
...paar Accounts an, Kubernetes Cluster...

1187
00:51:43,460 --> 00:51:45,460
...und Kubernetes Cluster Node Pool...

1188
00:51:45,460 --> 00:51:47,460
...wir fangen allerdings ganz simpel an...

1189
00:51:47,460 --> 00:51:49,460
...und führen es mal aus...

1190
00:51:49,460 --> 00:51:51,460
...und dann versuche ich mal so ein bisschen grob zu erklären...

1191
00:51:51,460 --> 00:51:53,460
...was Terraform eigentlich macht...

1192
00:51:53,460 --> 00:51:55,460
...und warum es nützlich ist...

1193
00:51:55,460 --> 00:51:57,460
...und was das coole ist...

1194
00:51:57,460 --> 00:51:59,460
...wenn man seine Infrastruktur mit Terraform...

1195
00:51:59,460 --> 00:52:01,460
...verwaltet...

1196
00:52:01,460 --> 00:52:03,460
...damit wir unsere ganze Cloud Infrastruktur...

1197
00:52:03,460 --> 00:52:05,460
...zu anlegen ist das aller erste was wir brauchen...

1198
00:52:05,460 --> 00:52:07,460
...ein Netzwerk...

1199
00:52:07,460 --> 00:52:09,460
...und ich bin mal so frei und benenne das um...

1200
00:52:09,460 --> 00:52:11,460
...und zwar ein Network...

1201
00:52:11,460 --> 00:52:13,460
...und wir fassen das ein bisschen zusammen...

1202
00:52:13,460 --> 00:52:15,460
...wir fassen nämlich Subnetz...

1203
00:52:15,460 --> 00:52:17,460
...und Netz Network zusammen...

1204
00:52:17,460 --> 00:52:19,460
...hab ich mir überlegt...

1205
00:52:19,460 --> 00:52:21,460
...ist glaube ich einfacher zu verstehen...

1206
00:52:21,460 --> 00:52:23,460
...was letztendlich passiert...

1207
00:52:23,460 --> 00:52:25,460
...also...

1208
00:52:25,460 --> 00:52:27,460
...hier sagt man...

1209
00:52:27,460 --> 00:52:29,460
...mittels Terraform...

1210
00:52:29,460 --> 00:52:31,460
...an Google Cloud...

1211
00:52:31,460 --> 00:52:33,460
...wollen wir ein Netzwerk erstellen...

1212
00:52:33,460 --> 00:52:35,460
...mit der IP Range...

1213
00:52:35,460 --> 00:52:37,460
...oder mit der...

1214
00:52:37,460 --> 00:52:39,460
...SIDR...

1215
00:52:39,460 --> 00:52:41,460
...SIDR...

1216
00:52:41,460 --> 00:52:43,460
...das ist Classless Inter Domain Routing...

1217
00:52:43,460 --> 00:52:45,460
...kein Mensch...

1218
00:52:45,460 --> 00:52:47,460
...spricht das jemals so aus...

1219
00:52:47,460 --> 00:52:49,460
...wie auch immer...

1220
00:52:49,460 --> 00:52:51,460
...man könnte es einfach IP Range nennen...

1221
00:52:51,460 --> 00:52:53,460
...aber in dem Fall ist es IP Sidr Range...

1222
00:52:53,460 --> 00:52:55,460
...es gibt eigentlich...

1223
00:52:55,460 --> 00:52:57,460
...heutzutage so gut wie...

1224
00:52:57,460 --> 00:52:59,460
...warum sollte man andere Sachen benutzen...

1225
00:52:59,460 --> 00:53:03,730
...ich weiß es nicht...

1226
00:53:03,730 --> 00:53:05,730
...das ist die Range...

1227
00:53:05,730 --> 00:53:07,730
...die wir für unsere IPs benutzen...

1228
00:53:07,730 --> 00:53:09,730
...das heißt...

1229
00:53:09,730 --> 00:53:11,730
...10.0.0.0 slash 24...

1230
00:53:11,730 --> 00:53:13,730
...wir können mal gucken...

1231
00:53:13,730 --> 00:53:15,730
...ich meine es ist in dem Fall wirklich extrem simpel...

1232
00:53:15,730 --> 00:53:17,730
...leute...

1233
00:53:17,730 --> 00:53:19,730
...wer hat aufgepasst in der Berufsschule...

1234
00:53:19,730 --> 00:53:21,730
...was ist die erste IP...

1235
00:53:21,730 --> 00:53:23,730
...und was ist die letzte IP...

1236
00:53:23,730 --> 00:53:25,730
...die wir benutzen können in der Range...

1237
00:53:25,730 --> 00:53:27,730
...was ist die erste IP...

1238
00:53:27,730 --> 00:53:29,730
...und was ist die letzte IP...

1239
00:53:29,730 --> 00:53:31,730
...nutzbare IP...

1240
00:53:31,730 --> 00:53:33,730
...nutzbare IP wohlgemerkt...

1241
00:53:33,730 --> 00:53:35,730
...also 10.0.0.0 slash 24...

1242
00:53:35,730 --> 00:53:37,730
...die erste IP ist was...

1243
00:53:37,730 --> 00:53:39,730
...HiIQ Chat...

1244
00:53:39,730 --> 00:53:41,730
...jetzt enttäuscht mich nicht...

1245
00:53:41,730 --> 00:53:43,730
...es ist sehr simpel...

1246
00:53:43,730 --> 00:53:45,730
...das kann jeder Azubi in der dritten Woche...

1247
00:53:45,730 --> 00:53:47,730
...eins richtig...

1248
00:53:47,730 --> 00:53:51,430
...und was ist die letzte nutzbare IP in diesem Netz...

1249
00:53:51,430 --> 00:53:53,430
...254...

1250
00:53:53,430 --> 00:53:55,430
...exzellent...

1251
00:53:55,430 --> 00:53:57,430
...also das ist quasi das hier...

1252
00:53:57,430 --> 00:53:59,430
...bis...

1253
00:53:59,430 --> 00:54:01,430
...254...

1254
00:54:01,430 --> 00:54:03,430
...korrekt...

1255
00:54:03,430 --> 00:54:05,430
...Wir haben hier IP Calc...

1256
00:54:05,430 --> 00:54:07,430
...sehr nices Tool...

1257
00:54:07,430 --> 00:54:09,430
...Hosts Minimum...

1258
00:54:09,430 --> 00:54:11,430
...1 Host Maximum...

1259
00:54:11,430 --> 00:54:13,430
...254...

1260
00:54:13,430 --> 00:54:15,430
...und Broadcast Adresse ist 255...

1261
00:54:15,430 --> 00:54:17,430
...das heißt nutzbar in diesem Netz...

1262
00:54:17,430 --> 00:54:19,430
...sind 254 IPs...

1263
00:54:19,430 --> 00:54:21,430
...und die Netzadresse...

1264
00:54:21,430 --> 00:54:23,430
...ist das da...

1265
00:54:23,430 --> 00:54:25,430
...und also die Netzadresse ist das hier...

1266
00:54:25,430 --> 00:54:27,430
...und die Netmaske in dem Fall ausgeschrieben...

1267
00:54:27,430 --> 00:54:29,430
...das da...

1268
00:54:29,430 --> 00:54:31,430
...also das ist glaube ich das ziemlich...

1269
00:54:31,430 --> 00:54:33,430
...simpelste IP Netz was man überhaupt haben kann...

1270
00:54:33,430 --> 00:54:35,430
...oftmals...

1271
00:54:35,430 --> 00:54:37,430
...verwendet man daheim ja eher...

1272
00:54:37,430 --> 00:54:39,430
...das hier oder sowas hier...

1273
00:54:39,430 --> 00:54:41,430
...aber wir machen jetzt einfach mal das hier...

1274
00:54:41,430 --> 00:54:43,430
...hat den Vorteil werdet ihr später auch noch sehen...

1275
00:54:43,430 --> 00:54:45,430
...ein Netz zu verwenden was ihr...

1276
00:54:45,430 --> 00:54:47,430
...nicht zu Hause benutzt weil...

1277
00:54:47,430 --> 00:54:49,430
...wenn ihr euch dann später...

1278
00:54:49,430 --> 00:54:51,430
...so nennen wir es mal VPN mäßig...

1279
00:54:51,430 --> 00:54:53,430
...in eure Cloud verbinden wollt...

1280
00:54:53,430 --> 00:54:55,430
...ist es praktisch wenn es...

1281
00:54:55,430 --> 00:54:57,430
...dieses Netz bei euch lokal nicht gibt...

1282
00:54:57,430 --> 00:54:59,430
...weil ansonsten habt ihr das Problem...

1283
00:54:59,430 --> 00:55:01,430
...dann könnt ihr entweder nur auf das Netz lokal...

1284
00:55:01,430 --> 00:55:03,430
...bei euch zugreifen oder auf das Netz in der Cloud...

1285
00:55:03,430 --> 00:55:05,430
...zugreifen weil das ist das gleiche Netz...

1286
00:55:05,430 --> 00:55:07,430
...oder ihr müsst sehr viele komische Dinger machen...

1287
00:55:07,430 --> 00:55:09,430
...es ist sinnvoll...

1288
00:55:09,430 --> 00:55:11,430
...ein Netz zu benutzen was man...

1289
00:55:11,430 --> 00:55:13,430
...lokal nicht hat...

1290
00:55:13,430 --> 00:55:15,430
...zumal man hier sehr viele Möglichkeiten hat...

1291
00:55:15,430 --> 00:55:17,430
...das ist glaube ich standardmäßig in Slash 8...

1292
00:55:17,430 --> 00:55:19,430
...was dafür vorgesehen ist...

1293
00:55:19,430 --> 00:55:21,430
...als private IP Range...

1294
00:55:21,430 --> 00:55:25,000
...wobei ist es das überhaupt...

1295
00:55:25,000 --> 00:55:27,000
...ich glaube es ist standardmäßig in Slash 8...

1296
00:55:27,000 --> 00:55:29,000
...was man also man kann quasi das hier...

1297
00:55:29,000 --> 00:55:31,000
...das hier und das hier frei...

1298
00:55:31,000 --> 00:55:36,610
...frei benutzen...

1299
00:55:36,610 --> 00:55:38,610
...ja geht wieder besser...

1300
00:55:38,610 --> 00:55:40,610
...habe ich hier irgendwelche...

1301
00:55:40,610 --> 00:55:42,610
...Pepo Pupu Fire Toilet angesagt...

1302
00:55:42,610 --> 00:55:44,610
...Servus Max...

1303
00:55:44,610 --> 00:55:46,610
...weißt du ob man auf Linux Guzzi Sharp .NET...

1304
00:55:46,610 --> 00:55:48,610
...ja beste Umgebung dafür...

1305
00:55:48,610 --> 00:55:50,610
...wie kommst du drauf...

1306
00:55:50,610 --> 00:55:52,610
...dass es vielleicht nicht möglich sein sollte...

1307
00:55:52,610 --> 00:55:54,610
...das ist die beste Entwicklungs...

1308
00:55:54,610 --> 00:55:56,610
...beste Entwicklungsplattform für .NET mittlerweile...

1309
00:55:56,610 --> 00:55:58,610
...besser als Windows...

1310
00:55:58,610 --> 00:56:00,610
...die beste Plattform...

1311
00:56:00,610 --> 00:56:02,610
...um .NET Programme .NET Core...

1312
00:56:02,610 --> 00:56:04,610
...beziehungsweise es ist ja eigentlich nur noch .NET...

1313
00:56:04,610 --> 00:56:06,610
...heißt es jetzt...

1314
00:56:06,610 --> 00:56:08,610
...Dotnet 6, 7, 8...

1315
00:56:08,610 --> 00:56:10,610
...Programme entwickeln will ist das beste...

1316
00:56:10,610 --> 00:56:12,610
...was man machen kann auf Linux Basis...

1317
00:56:12,610 --> 00:56:14,610
...es sei denn man möchte eine Windows Only...

1318
00:56:14,610 --> 00:56:16,610
...GUI das ist korrekt...

1319
00:56:16,610 --> 00:56:18,610
...aber warum sollte man eine Windows GUI unter Linux...

1320
00:56:18,610 --> 00:56:20,610
...erstellen wollen...

1321
00:56:20,610 --> 00:56:22,610
...es gibt Möglichkeiten mittlerweile relativ gut...

1322
00:56:22,610 --> 00:56:24,610
...Cross-Plattform GUIs mit C Sharp zu erstellen...

1323
00:56:24,610 --> 00:56:26,610
...leider ist Cross-Plattform GUI immer noch...

1324
00:56:26,610 --> 00:56:28,610
...ziemlich Pains Champ...

1325
00:56:28,610 --> 00:56:30,610
...auch der Grund warum sich Elektron...

1326
00:56:30,610 --> 00:56:32,610
...so durchgesetzt hat die letzten Jahre...

1327
00:56:32,610 --> 00:56:34,610
...Avalonia ist...

1328
00:56:34,610 --> 00:56:36,610
...pretty POG...

1329
00:56:36,610 --> 00:56:38,610
...wie geht es dir...ja wieder besser...

1330
00:56:38,610 --> 00:56:42,050
...probiert kann man es nicht nennen...

1331
00:56:42,050 --> 00:56:44,050
...ich habe mal ein paar Beispielsachen...

1332
00:56:44,050 --> 00:56:46,050
...durch geklont von denen...

1333
00:56:46,050 --> 00:56:48,050
...von der Webseite...

1334
00:56:48,050 --> 00:56:53,860
...also nicht großartig was gemacht...

1335
00:56:53,860 --> 00:56:57,240
...alles klar...

1336
00:56:57,240 --> 00:56:59,240
...genau...

1337
00:56:59,240 --> 00:57:01,240
...wir legen jetzt Netzwerke in der Google Cloud an...

1338
00:57:01,240 --> 00:57:03,240
...ist Elektronik...

1339
00:57:03,240 --> 00:57:05,240
...nur eine Web Anwendung...

1340
00:57:05,240 --> 00:57:09,890
...eine Windows Only GUI...

1341
00:57:09,890 --> 00:57:11,890
...eine Windows Only GUI...

1342
00:57:11,890 --> 00:57:13,890
...unter Linux entwickeln ist schwierig...

1343
00:57:13,890 --> 00:57:15,890
...da kannst du es ja nicht ausprobieren...

1344
00:57:15,890 --> 00:57:17,890
...also wenn du Windows Only Software...

1345
00:57:17,890 --> 00:57:19,890
...entwickelst dann würde ich die...

1346
00:57:19,890 --> 00:57:21,890
...logischerweise auch unter Windows entwickeln...

1347
00:57:21,890 --> 00:57:23,890
...wenn du Avalonia...

1348
00:57:23,890 --> 00:57:25,890
...Cross-Plattform GUI benutzen...

1349
00:57:25,890 --> 00:57:27,890
...möchtest die würde dann unter Linux...

1350
00:57:27,890 --> 00:57:29,890
...und Windows laufen...

1351
00:57:29,890 --> 00:57:31,890
...aber testen musst du sie nach wie vor...

1352
00:57:31,890 --> 00:57:33,890
...unter Windows...

1353
00:57:33,890 --> 00:57:35,890
...also wenn du Windows Only...

1354
00:57:35,890 --> 00:57:37,890
...Software entwickelst dann mach das unter Windows...

1355
00:57:37,890 --> 00:57:39,890
...was anderes macht auch keinen Sinn...

1356
00:57:39,890 --> 00:57:45,760
...wie gesagt es sei denn benutzt du...

1357
00:57:45,760 --> 00:57:47,760
...Cross-Plattform GUI Framework...

1358
00:57:47,760 --> 00:57:49,760
...und...

1359
00:57:49,760 --> 00:57:51,760
...hoffst das es unter Windows dann auch so aussieht...

1360
00:57:51,760 --> 00:57:53,760
...wie das was du unter Linux testest...

1361
00:57:53,760 --> 00:57:55,760
...unter Windows programmieren...

1362
00:57:55,760 --> 00:57:57,760
...macht halt überhaupt keinen Spaß...

1363
00:57:57,760 --> 00:57:59,760
...aber wir müssen bei Google Cloud...

1364
00:57:59,760 --> 00:58:01,760
...Config bleiben sonst wird das heute nichts...

1365
00:58:01,760 --> 00:58:03,760
...also...

1366
00:58:03,760 --> 00:58:05,760
...wir legen jetzt Netzwerke in der Google Cloud an...

1367
00:58:05,760 --> 00:58:07,760
...also wir haben ein relativ...

1368
00:58:07,760 --> 00:58:09,760
...großzügiges Netz...

1369
00:58:09,760 --> 00:58:11,760
...254 Hosts haben wir hierfür...

1370
00:58:11,760 --> 00:58:13,760
...und...

1371
00:58:13,760 --> 00:58:15,760
...es gibt ein paar Sachen die man hier angeben muss...

1372
00:58:15,760 --> 00:58:17,760
...die ganz praktisch sind...

1373
00:58:17,760 --> 00:58:19,760
...oder besser gesagt...

1374
00:58:19,760 --> 00:58:21,760
...wenn es ein bisschen schwierig wird...

1375
00:58:21,760 --> 00:58:23,760
...und zwar das erste ist hier Depends On...

1376
00:58:23,760 --> 00:58:25,760
...wir möchten Netzwerke erst anlegen...

1377
00:58:25,760 --> 00:58:27,760
...nachdem alle APIs...

1378
00:58:27,760 --> 00:58:29,760
...aktiviert wurden...

1379
00:58:29,760 --> 00:58:31,760
...im Google Cloud Projekt was wir brauchen...

1380
00:58:31,760 --> 00:58:33,760
...das müssen wir aber nur einmalig machen...

1381
00:58:33,760 --> 00:58:35,760
...dass wir sicherstellen können...

1382
00:58:35,760 --> 00:58:37,760
...bevor wir anfangen irgendwas zu machen...

1383
00:58:37,760 --> 00:58:39,760
...dass die nötigen APIs im Projekt...

1384
00:58:39,760 --> 00:58:41,760
...eingeschaltet sind...

1385
00:58:41,760 --> 00:58:43,760
...das kann 20-30 Sekunden dauern...

1386
00:58:43,760 --> 00:58:45,760
...und dementsprechend ist das einmal sinnvoll...

1387
00:58:45,760 --> 00:58:47,760
...als Abhängigkeit zu definieren...

1388
00:58:47,760 --> 00:58:49,760
...so...

1389
00:58:49,760 --> 00:58:51,760
...ist erstmal wurscht wie das Ding heißt...

1390
00:58:51,760 --> 00:58:53,760
...ist auch erstmal wurscht ich benutze es...

1391
00:58:53,760 --> 00:58:55,760
...ich nenn es mal übrigens um...

1392
00:58:55,760 --> 00:58:57,760
...ich nenn es mal Default...

1393
00:58:57,760 --> 00:58:59,760
...weil ich habe das Default Netzwerk gelöscht...

1394
00:58:59,760 --> 00:59:01,760
...das finde ich viel angenehmer...

1395
00:59:01,760 --> 00:59:03,760
...Routing Mode...

1396
00:59:03,760 --> 00:59:05,760
...ihr könnt übrigens wenn ihr die Terraform...

1397
00:59:05,760 --> 00:59:07,760
...Visual Studio Code Erweiterung installiert habt...

1398
00:59:07,760 --> 00:59:09,760
...könnt ihr euch die Hilfetexte aus den jeweiligen...

1399
00:59:09,760 --> 00:59:11,760
...Cloud API Docs anzeigen lassen...

1400
00:59:11,760 --> 00:59:13,760
...sprich was hier möglich ist...

1401
00:59:13,760 --> 00:59:15,760
...und hier steht auch so ein kleiner Hilfetext dabei...

1402
00:59:15,760 --> 00:59:17,760
...und das es als mögliche Values...

1403
00:59:17,760 --> 00:59:19,760
...Regional und Global gibt...

1404
00:59:19,760 --> 00:59:21,760
...weil Routing Mode für unser Netzwerk...

1405
00:59:21,760 --> 00:59:23,760
...Regional ist vollkommen okay...

1406
00:59:23,760 --> 00:59:25,760
...Auto Create Subnets würde ich auch ausschalten...

1407
00:59:25,760 --> 00:59:27,760
...ich will die Sachen selbst anlegen...

1408
00:59:27,760 --> 00:59:29,760
...und das hier...

1409
00:59:29,760 --> 00:59:31,760
...finde ich tatsächlich relativ...

1410
00:59:31,760 --> 00:59:35,840
...nützlich...

1411
00:59:35,840 --> 00:59:37,840
...und zwar...

1412
00:59:37,840 --> 00:59:39,840
...Delete Default Routes on Create...

1413
00:59:39,840 --> 00:59:41,840
...setze ich auf False...

1414
00:59:41,840 --> 00:59:43,840
...das ist ganz nützlich dafür...

1415
00:59:43,840 --> 00:59:45,840
...wenn man zum Beispiel mit seinen VMs...

1416
00:59:45,840 --> 00:59:47,840
...ins Internet raus will um Paketupdates zu machen...

1417
00:59:47,840 --> 00:59:49,840
...braucht zwar glaube ich noch eine NAT Regel...

1418
00:59:49,840 --> 00:59:51,840
...bin ich mir jetzt gar nicht ganz sicher...

1419
00:59:51,840 --> 00:59:53,840
...aber...

1420
00:59:53,840 --> 00:59:55,840
...wenn man das komplett abgeschottet isoliert machen will...

1421
00:59:55,840 --> 00:59:57,840
...dann würde man das auf True setzen...

1422
00:59:57,840 --> 00:59:59,840
...wenn man aber zum Beispiel mit seiner VM...

1423
00:59:59,840 --> 01:00:01,840
...noch ordentlich ins Internet will...

1424
01:00:01,840 --> 01:00:03,840
...und eine Default Route haben möchte...

1425
01:00:03,840 --> 01:00:05,840
...dann würde ich das hier ausschalten...

1426
01:00:05,840 --> 01:00:07,840
...und hier unten...

1427
01:00:07,840 --> 01:00:09,840
...legen wir das eigentliche Netzwerk an...

1428
01:00:09,840 --> 01:00:11,840
...also das hier ist im Prinzip nur so ein...

1429
01:00:11,840 --> 01:00:13,840
...container...

1430
01:00:13,840 --> 01:00:15,840
...in dem man dann verschiedene Subnets...

1431
01:00:15,840 --> 01:00:17,840
...anlegen kann...

1432
01:00:17,840 --> 01:00:19,840
...man sieht es ja auch hier, dass man hier erst die IP Range angibt...

1433
01:00:19,840 --> 01:00:21,840
...nicht wie erwartet...

1434
01:00:21,840 --> 01:00:23,840
...mit dem Netzwerk selbst...

1435
01:00:23,840 --> 01:00:25,840
...sondern erst bei Subnet...

1436
01:00:25,840 --> 01:00:27,840
...so und das ist im Prinzip alles was ich euch schon erzählt habe...

1437
01:00:27,840 --> 01:00:29,840
...wir legen ein Subnet an...

1438
01:00:29,840 --> 01:00:31,840
...mit der IP Range...

1439
01:00:31,840 --> 01:00:33,840
...quasi die hier bis die hier...

1440
01:00:33,840 --> 01:00:35,840
...in der Region...

1441
01:00:35,840 --> 01:00:37,840
...die wir vorher als Variable definiert haben...

1442
01:00:37,840 --> 01:00:39,840
...also quasi hier in der Region...

1443
01:00:39,840 --> 01:00:41,840
...in der Region Europe West 3...

1444
01:00:41,840 --> 01:00:45,670
...und sagen dieses Subnet...

1445
01:00:45,670 --> 01:00:47,670
...gehört zu diesem Network...

1446
01:00:47,670 --> 01:00:49,670
...und...

1447
01:00:49,670 --> 01:00:51,670
...das ganze soll Private sein...

1448
01:00:51,670 --> 01:00:56,200
...ach ne Moment...

1449
01:00:56,200 --> 01:00:58,200
...das ist das die VMs Google...

1450
01:00:58,200 --> 01:01:00,200
...API Services...

1451
01:01:00,200 --> 01:01:02,200
...drauf zugreifen können, ja das ist sinnvoll...

1452
01:01:02,200 --> 01:01:04,200
...das schalten wir ein...

1453
01:01:04,200 --> 01:01:06,200
...und das wars, das wars für die Netzwerk Config...

1454
01:01:06,200 --> 01:01:08,200
...mehr müssen wir an der Stelle nicht machen...

1455
01:01:08,200 --> 01:01:10,200
...was jetzt passieren wird ist folgendes...

1456
01:01:10,200 --> 01:01:12,200
...wenn wir jetzt mal hier in Netzwerke gehen...

1457
01:01:12,200 --> 01:01:14,200
...übrigens bei Google Cloud...

1458
01:01:14,200 --> 01:01:16,200
...nennen sich Netzwerke VPC...

1459
01:01:16,200 --> 01:01:18,200
...ich glaub Virtual Private Cloud...

1460
01:01:18,200 --> 01:01:20,200
...

1461
01:01:20,200 --> 01:01:22,200
... weshalb man das nicht einfach nur Networks genannt hat...

1462
01:01:22,200 --> 01:01:24,200
...entzieht sich meiner Kenntnis...

1463
01:01:24,200 --> 01:01:26,200
...trotzdem muss man sagen...

1464
01:01:26,200 --> 01:01:28,200
...Google Cloud hat finde ich...

1465
01:01:28,200 --> 01:01:30,200
...noch ganz gute Benamungen...

1466
01:01:30,200 --> 01:01:32,200
...nicht so wie AWS...

1467
01:01:32,200 --> 01:01:34,200
...wo man echt nicht weiß wie die Sachen heißen...

1468
01:01:34,200 --> 01:01:36,200
...bei Google Cloud finde ich heißen die Dinger...

1469
01:01:36,200 --> 01:01:38,200
...meistens relativ gut benannt...

1470
01:01:38,200 --> 01:01:40,200
...Cloud Storage, SQL...

1471
01:01:40,200 --> 01:01:42,200
...Compute, Kubernetes...

1472
01:01:42,200 --> 01:01:44,200
...kann man sich alles was darunter vorstellen...

1473
01:01:44,200 --> 01:01:46,200
...bei Amazon heißt das dann...

1474
01:01:46,200 --> 01:01:48,200
...Fargate...

1475
01:01:48,200 --> 01:01:50,200
...und solche Geschichten...

1476
01:01:50,200 --> 01:01:52,200
...wobei es auch EKS...

1477
01:01:52,200 --> 01:01:54,200
...zumindest das was ich bisher von Amazon...

1478
01:01:54,200 --> 01:01:56,200
...gesehen habe...

1479
01:01:56,200 --> 01:02:01,750
...bei Google sind die Dinger ganz ok...

1480
01:02:01,750 --> 01:02:03,750
...Route 53 ist doch eindeutig...

1481
01:02:03,750 --> 01:02:05,750
...ich meine zumindest Port 53 und DNS...

1482
01:02:05,750 --> 01:02:07,750
...bringt man halbwegs zusammen...

1483
01:02:07,750 --> 01:02:09,750
...aber die Benahmung bei AWS finde ich...

1484
01:02:09,750 --> 01:02:11,750
...so ihr seht wir haben keinerlei Netzwerke...

1485
01:02:11,750 --> 01:02:13,750
...angelegt...

1486
01:02:13,750 --> 01:02:15,750
...das heißt wenn wir unsere Terraform jetzt ausführen...

1487
01:02:15,750 --> 01:02:17,750
...wir haben übrigens noch was vergessen...

1488
01:02:17,750 --> 01:02:19,750
...aber ich lege erstmal das Netzwerk an...

1489
01:02:19,750 --> 01:02:21,750
...dann zeige ich euch was noch fehlt...

1490
01:02:21,750 --> 01:02:23,750
...sollten wir danach ein Netzwerk haben...

1491
01:02:23,750 --> 01:02:25,750
...und zwar mit dieser IP Range...

1492
01:02:25,750 --> 01:02:27,750
...und das ist Terraform...

1493
01:02:27,750 --> 01:02:29,750
...Apply...

1494
01:02:29,750 --> 01:02:31,750
...so wenn man Terraform Apply macht...

1495
01:02:31,750 --> 01:02:33,750
...ups...

1496
01:02:33,750 --> 01:02:35,750
...was...

1497
01:02:35,750 --> 01:02:37,750
...ja ich sollte es auch vielleicht Default nennen...

1498
01:02:37,750 --> 01:02:39,750
...und nicht die Sache von gestern...

1499
01:02:39,750 --> 01:02:41,750
...wenn man Terraform Apply macht...

1500
01:02:41,750 --> 01:02:43,750
...dann zeigt einem Terraform immer erst an...

1501
01:02:43,750 --> 01:02:45,750
...bevor es anfängt...

1502
01:02:45,750 --> 01:02:47,750
...was es machen würde...

1503
01:02:47,750 --> 01:02:49,750
...das heißt Terraform hat sich jetzt connected...

1504
01:02:49,750 --> 01:02:51,750
...zur Google Cloud...

1505
01:02:51,750 --> 01:02:53,750
...übrigens wer sich fragt wie connected sich Terraform...

1506
01:02:53,750 --> 01:02:55,750
...überhaupt zur Google Cloud...

1507
01:02:55,750 --> 01:02:57,750
...das geht über das...

1508
01:02:57,750 --> 01:02:59,750
...Google Cloud Command Line Tool...

1509
01:02:59,750 --> 01:03:01,750
...wenn man das eingerichtet hat...

1510
01:03:01,750 --> 01:03:03,750
...das heißt bevor man das macht...

1511
01:03:03,750 --> 01:03:05,750
...muss man einmal gcloud init machen...

1512
01:03:05,750 --> 01:03:07,750
...und gcloud...

1513
01:03:07,750 --> 01:03:09,750
...äh ne auth...

1514
01:03:09,750 --> 01:03:11,750
...ja...

1515
01:03:11,750 --> 01:03:13,750
...gcloud auth application default login...

1516
01:03:13,750 --> 01:03:15,750
...Projektname bla bla bla...

1517
01:03:15,750 --> 01:03:17,750
...also man muss es einmal einrichten...

1518
01:03:17,750 --> 01:03:19,750
...und sich einmal anmelden...

1519
01:03:19,750 --> 01:03:21,750
...und dann kann Terraform das ganze über das Google Cloud Utility machen...

1520
01:03:21,750 --> 01:03:23,750
...das heißt man muss in Terraform...

1521
01:03:23,750 --> 01:03:25,750
...und in seinem Git Repo...

1522
01:03:25,750 --> 01:03:27,750
...wo man seine Terraform Files hat...

1523
01:03:27,750 --> 01:03:29,750
...keine Tokens und Passwörter hinterlegen...

1524
01:03:29,750 --> 01:03:31,750
...sofern derjenige...

1525
01:03:31,750 --> 01:03:33,750
...ein...

1526
01:03:33,750 --> 01:03:35,750
...eingerichtetes Google Cloud...

1527
01:03:35,750 --> 01:03:37,750
...Command Line Tool bei sich...

1528
01:03:37,750 --> 01:03:39,750
...auf dem Rechner hat...

1529
01:03:39,750 --> 01:03:41,750
...also wenn man sagt Terraform Apply...

1530
01:03:41,750 --> 01:03:43,750
...dann sagt einem Terraform erstmal was es machen würde...

1531
01:03:43,750 --> 01:03:48,980
...bei IBM...

1532
01:03:48,980 --> 01:03:50,980
...heißen die Dinge glaube ich auch VPC...

1533
01:03:50,980 --> 01:03:52,980
...bei IBM...

1534
01:03:52,980 --> 01:03:54,980
...IBM verkaufen einem auch tolle Großrechner...

1535
01:03:54,980 --> 01:03:56,980
...die dann bei einem im Rechenzentrum stehen...

1536
01:03:56,980 --> 01:03:58,980
...der vielleicht gar nicht gehört...

1537
01:03:58,980 --> 01:04:00,980
...IBM macht viele Sachen...

1538
01:04:00,980 --> 01:04:02,980
...wobei die aller schlimmsten sind immer noch Oracle was das angeht...

1539
01:04:02,980 --> 01:04:04,980
...was Lizenzierung und...

1540
01:04:04,980 --> 01:04:06,980
...vire Verträge angeht...

1541
01:04:06,980 --> 01:04:08,980
...ich glaube beim Oracle kommt da nix ran...

1542
01:04:08,980 --> 01:04:10,980
...wobei ich habe gehört SAP soll auch nicht ohne sein...

1543
01:04:10,980 --> 01:04:12,980
...ich bin froh das ich nie große...

1544
01:04:12,980 --> 01:04:14,980
...berührungspunkte bisher mit SAP hatte...

1545
01:04:14,980 --> 01:04:16,980
...und ich habe es ehrlich gesagt auch nicht vor...

1546
01:04:16,980 --> 01:04:18,980
...wenn man Terraform...

1547
01:04:18,980 --> 01:04:20,980
...Apply macht dann...

1548
01:04:20,980 --> 01:04:22,980
...erzählt einem Terraform erstmal was es machen würde...

1549
01:04:22,980 --> 01:04:24,980
...da kann man jetzt gucken ob das...

1550
01:04:24,980 --> 01:04:26,980
...passt was man da...

1551
01:04:26,980 --> 01:04:29,420
Also ob das so sein soll.

1552
01:04:31,120 --> 01:04:37,100
Terraform ist jetzt zu meiner Google Cloud in das Projekt gegangen und hat nachgeguckt, was ist denn schon da und was soll das anlegen.

1553
01:04:37,100 --> 01:04:44,310
Und jetzt schickt es mir ein Report und sagt, okay, ich würde folgende Sachen machen.

1554
01:04:44,830 --> 01:04:51,070
Ich lege ein Netzwerk an und ich lege ein Subnet an mit diesen Eigenschaften.

1555
01:04:51,250 --> 01:04:54,150
So, da kann ich jetzt durchgucken und alles ist gut.

1556
01:04:54,310 --> 01:04:57,350
Ja, und es enabelt unser Projekt, unsere APIs.

1557
01:04:57,350 --> 01:04:59,770
Dann sage ich, okay, sieht gut aus. Yes.

1558
01:05:00,610 --> 01:05:15,910
Wer keinen Bock hat, darauf zu warten und sich sicher ist, dass er immer fehlerfrei seine Terraform-Config erstellt, der kann sagen, auch wenn ich es nicht unbedingt empfehlen würde, der kann sagen, Terraform Apply minus Auto Approve.

1559
01:05:20,760 --> 01:05:23,320
Und dann sagt es automatisch Yes.

1560
01:05:23,800 --> 01:05:25,540
Ich weiß nicht, wie ihr das handhabt, Leute.

1561
01:05:26,340 --> 01:05:31,040
Seid ihr eher im, ich gucke mir alles an und sage Yes oder seid ihr eher im Auto Approve Lager?

1562
01:05:31,040 --> 01:05:34,120
Für die Leute, die schon ein bisschen Terraform benutzen oder Terraform öfters benutzen.

1563
01:05:34,600 --> 01:05:36,220
Ich muss sagen, ich bin faul as fuck.

1564
01:05:36,760 --> 01:05:39,040
Das heißt, ich benutze ganz gerne Auto Approve.

1565
01:05:40,540 --> 01:05:41,660
So, Terraform ist durch.

1566
01:05:43,920 --> 01:05:46,260
Wo läuft denn Terraform in der Praxis auf einer VM?

1567
01:05:46,320 --> 01:05:47,320
Ah, da kann ich gleich was zu sagen.

1568
01:05:47,740 --> 01:05:52,520
So, Terraform ist durch und wir sehen, dass es ein Netzwerk gibt.

1569
01:05:53,060 --> 01:05:55,420
Mit dem Namen Default, mit einem Subnet.

1570
01:05:57,060 --> 01:05:59,000
Und das ist das Subnet, was wir angegeben haben.

1571
01:05:59,120 --> 01:06:00,540
Also, das hat schon mal funktioniert.

1572
01:06:00,540 --> 01:06:01,520
So, und jetzt.

1573
01:06:01,520 --> 01:06:07,700
Das ist das Feature schlechthin, warum man Terraform benutzt.

1574
01:06:07,800 --> 01:06:08,300
Oder zwei.

1575
01:06:08,700 --> 01:06:12,100
Zwei Features schlechthin, warum man Terraform benutzt.

1576
01:06:12,460 --> 01:06:13,460
Das erste habt ihr gesehen.

1577
01:06:13,560 --> 01:06:16,140
Man hat jetzt alles, was man hier hat, definiert in der Textdatei.

1578
01:06:16,560 --> 01:06:24,060
Das heißt, wenn ich ein nächstes Projekt anlege und das genauso konfigurieren will, würde ich die Variablen austauschen.

1579
01:06:24,400 --> 01:06:29,780
Würde sagen, Terraform Init, Terraform Apply und es wäre genau in dem Zustand, wie es sein soll.

1580
01:06:30,340 --> 01:06:30,780
So.

1581
01:06:31,520 --> 01:06:34,280
Ähm, ich sag erst noch mal was hierzu.

1582
01:06:34,840 --> 01:06:37,760
Also, wo läuft denn Terraform dann in der Praxis auf einer VM?

1583
01:06:38,200 --> 01:06:40,820
Terraform kann ohne Probleme bei dir auf dem Laptop laufen.

1584
01:06:41,320 --> 01:06:42,420
Oder aber in einer VM.

1585
01:06:42,780 --> 01:06:43,760
Oder in einer Cloud VM.

1586
01:06:44,160 --> 01:06:45,940
Oder theoretisch glaube ich sogar in einer Cloud Shell.

1587
01:06:46,820 --> 01:06:57,060
Ähm, du kannst allerdings auch einen Workflow in GitLab oder in GitHub machen, der für dich Terraform Applied.

1588
01:06:57,060 --> 01:06:58,800
Da gibt es ein ganz cooles Projekt.

1589
01:06:59,000 --> 01:07:01,120
GitHub Terraform.

1590
01:07:01,520 --> 01:07:03,160
Atlantis.

1591
01:07:04,360 --> 01:07:06,920
Wenn man im Team arbeitet, ist es tatsächlich ganz nice.

1592
01:07:06,920 --> 01:07:13,480
Und zwar ist das eine Pull Request Integration für Terraform.

1593
01:07:15,520 --> 01:07:17,660
In einer, ja, kannst du es auch in einer Pipeline ausführen.

1594
01:07:17,660 --> 01:07:18,060
Genau.

1595
01:07:18,060 --> 01:07:21,400
Ja, oder GitHub Actions, was ja im Prinzip so eine, ist ja eine Pipeline.

1596
01:07:21,900 --> 01:07:32,080
Ja, wenn man das im Team hat, äh, im Team benutzt und das ein bisschen strukturierter haben will, dann kann man Atlantis benutzen und Atlantis hängt sich quasi in diesen Team.

1597
01:07:32,080 --> 01:07:32,780
Und Atlantis hängt sich quasi in diesen Team.

1598
01:07:32,780 --> 01:07:34,240
Und Atlantis hängt sich quasi in diesen Pull Request Workflow rein.

1599
01:07:34,680 --> 01:07:43,350
Ich weiß nicht, ob es ein gutes, ein gutes, ja, hier sieht man es eigentlich ganz gut, ja.

1600
01:07:43,790 --> 01:07:44,810
Open Pull Request.

1601
01:07:45,330 --> 01:07:50,470
So, und dann schreibt ihr Atlantis quasi rein, was würde jetzt passieren mit einem Terraform Plan.

1602
01:07:50,930 --> 01:07:53,930
Terraform Plan ist das, was das anzeigt, was es machen würde.

1603
01:07:54,770 --> 01:08:00,670
So, und dann können auch andere Leute diesen, diesen Output von dem Plan reviewen und approven.

1604
01:08:00,670 --> 01:08:07,810
Und wenn das gemerged wird, so, dann, wenn das gemerged wird, dann.

1605
01:08:07,830 --> 01:08:16,740
Dann wird das Ganze, ach ne, man applyt es erst und dann mergt man das.

1606
01:08:16,860 --> 01:08:17,440
Okay, auch gut.

1607
01:08:17,800 --> 01:08:20,380
Dann ist das Ganze ein bisschen nachvollziehbarer.

1608
01:08:29,030 --> 01:08:31,750
Wo ist der Unterschied zu Docker mit Docker Compose?

1609
01:08:34,240 --> 01:08:42,360
Docker ist die, dein Command Line Tool, um Container zu starten, zu stoppen, down zu loaden und anzulegen.

1610
01:08:42,820 --> 01:08:47,720
Und Docker Compose ist was, um mehrere Docker Images miteinander zu verbinden.

1611
01:08:52,120 --> 01:08:54,200
Also du kannst mit Docker Compose.

1612
01:08:54,220 --> 01:09:01,100
Alles das machen, was du auch von Hand mit Docker machen kannst, nur halt in einer automatisierten Art und Weise.

1613
01:09:02,300 --> 01:09:11,320
Und unterm Strich sind alle diese Tools, egal ob es Docker ist, Potman, Kubernetes oder was auch immer, benutzen die alle die gleiche Funktionalität.

1614
01:09:11,580 --> 01:09:12,840
Ja, das kann man nicht oft genug sagen.

1615
01:09:13,480 --> 01:09:19,720
Die, also die Möglichkeit Container auszuführen, Container gibt es ja eigentlich gar nicht, habe ich ja schon oft genug gesagt.

1616
01:09:20,220 --> 01:09:21,900
Das sind Kernelfunktionen von Linux.

1617
01:09:21,900 --> 01:09:31,460
Und das besteht hauptsächlich aus zwei Potman, aber Pogman wäre auch, gibt es, gibt es mal ein Gitter.

1618
01:09:37,200 --> 01:09:41,040
Okay, es gibt schon auf Gitter Projekte, die sich Pogman nennen.

1619
01:09:43,740 --> 01:09:48,160
Ja, also nochmal, nochmal zu dieser, zu dieser Container Geschichte, immer schnell was gesagt.

1620
01:09:49,300 --> 01:09:57,120
Letztendlich sind das zwei Funktionalitäten zum größten Teil, die Linux anbietet und die ausnahmslos alle Container Runtimes benutzen.

1621
01:09:57,500 --> 01:10:00,320
Weil es gibt keine Container, außer das.

1622
01:10:00,380 --> 01:10:02,680
Was der Linux-Kernel anbietet, sind zwei Sachen.

1623
01:10:03,200 --> 01:10:07,800
Das sind C-Names und Namespace, äh, C-Groups und Namespaces, so rum.

1624
01:10:08,580 --> 01:10:18,620
Das eine ist so ein bisschen Sandboxing und das andere ist, in, dass man quasi so tun kann, als wären Sachen anders.

1625
01:10:18,720 --> 01:10:21,700
Zum Beispiel andere IP, andere Hostname, als es wirklich ist.

1626
01:10:22,240 --> 01:10:23,920
Unter der Haube gibt es keine Container.

1627
01:10:23,920 --> 01:10:29,920
Es gibt Sandboxe Prozesse mit C-Groups und Prozessen, den du vorstellst.

1628
01:10:30,380 --> 01:10:33,480
Stockerhaukels, der Hostname wäre anders mit Namespaces.

1629
01:10:34,000 --> 01:10:36,980
Aber unter der Haube, es gibt eigentlich keine Container in dem Sinn.

1630
01:10:37,920 --> 01:10:45,980
Sondern, das ist Linux-Kernel-Funktionalität, die um ganz normale Prozesse drumherum gelegt wird.

1631
01:10:46,440 --> 01:10:58,440
Also, ob ihr jetzt zum Beispiel Echo 1, 2, 3 so ausführt oder Docker, Run, ähm, ja, Ubuntu, Echo, Echo 1, 2, wie geht das nochmal, Ubuntu?

1632
01:10:58,440 --> 01:11:00,360
Ich weiß nicht, ob das sowas so funktioniert.

1633
01:11:00,380 --> 01:11:08,350
Ne, wie, wie, wie führt man ein Kommando drinnen aus?

1634
01:11:09,130 --> 01:11:11,470
Da muss ich Bash, muss ich Bash minus C machen?

1635
01:11:13,510 --> 01:11:16,530
Weißt du, ey, ich hab keinen Plan aus dem Kopf, wie es funktioniert.

1636
01:11:16,770 --> 01:11:18,450
Muss ich, nee, ich muss Exec machen, oder?

1637
01:11:19,710 --> 01:11:22,150
Ähm, jetzt kann ich mir aus dem Kopf nicht merken.

1638
01:11:23,490 --> 01:11:25,490
Exec, hier, das, das, das muss ich machen.

1639
01:11:27,840 --> 01:11:29,920
Aber ich will Runnen und direkt Exec machen.

1640
01:11:30,020 --> 01:11:31,440
Warte mal, wie ging das? Minus It?

1641
01:11:32,380 --> 01:11:34,360
Das will ich machen, das will ich machen, okay.

1642
01:11:34,360 --> 01:11:34,440
Okay.

1643
01:11:37,260 --> 01:11:45,000
Also, ob ich jetzt sowas hier mache, ähm, kann man jetzt hier minus C, Echo 1, 2, 3 machen?

1644
01:11:45,380 --> 01:11:46,040
Ja, das funktioniert.

1645
01:11:46,400 --> 01:11:57,880
Okay, also, ob ich jetzt sowas hier ausführe, oder ob ich hier sowas hier ausführe, da ist weniger Unterschied, ich, im Detail natürlich schon, ist weniger Unterschied dazwischen, als man vielleicht so denkt.

1646
01:11:58,940 --> 01:12:04,280
Das hier wird auf meinem Host-System ausgeführt, genauso wie das, es wird beides auf meinem Host-System ausgeführt.

1647
01:12:04,280 --> 01:12:07,240
Der Unterschied ist, hier benutzt es Binaries von Ubuntu.

1648
01:12:07,260 --> 01:12:14,040
Ubuntu, um es auszuführen, aber unter der Haube sind das beides Prozesse auf meinem Host.

1649
01:12:14,480 --> 01:12:16,060
Das ist nicht wie bei VMs.

1650
01:12:17,260 --> 01:12:21,160
Also, da ist weniger Unterschied dazwischen, als man denkt.

1651
01:12:22,060 --> 01:12:26,680
Das hier ist kein Ubuntu im eigentlichen Sinne, das ist nach wie vor der ganz normale Kernel, der hier auch läuft.

1652
01:12:27,640 --> 01:12:30,440
Ähm, so.

1653
01:12:30,980 --> 01:12:37,200
Wenn ich jetzt, wenn ich mir hier anzeigen lasse, was ich, was ich, da bin ich mal gespannt, was eigentlich in der VM passiert, wenn ich das ausführe.

1654
01:12:37,200 --> 01:12:38,740
Äh, in der, im Container.

1655
01:12:38,820 --> 01:12:40,820
Was ist denn da passiert, wenn ich das ausführe?

1656
01:12:40,820 --> 01:12:44,820
Ja, da steht, da steht Mist da, der nicht, der nicht wirklich stimmt.

1657
01:12:44,820 --> 01:12:46,820
Doch, hier seht ihr es doch, guckt mal.

1658
01:12:46,820 --> 01:12:48,820
Also, euch wird vielleicht was auffallen bei den Sachen.

1659
01:12:48,820 --> 01:12:51,820
Hier lasse ich mir die Kernel-Version anzeigen auf meinem Host.

1660
01:12:51,820 --> 01:12:54,820
Hier lasse ich mir die Kernel-Version im Container anzeigen, guckt mal da.

1661
01:12:54,820 --> 01:12:57,820
Es ist der gleiche Kernel.

1662
01:12:57,820 --> 01:13:04,820
Also, ob ich was im Container ausführe, oder ob ich was auf meinem Host ausführe, das ist gar kein so großer Unterschied.

1663
01:13:04,820 --> 01:13:07,820
Das eine ist ein Prozess, der direkt losläuft.

1664
01:13:07,820 --> 01:13:10,820
Hier, auf meinem Host.

1665
01:13:10,820 --> 01:13:16,820
Und das andere ist ein Prozess, der auch direkt losläuft, nur dass noch ein bisschen Sandboxing-Zeug drumherum kommt.

1666
01:13:16,820 --> 01:13:21,820
Es sind beides Prozesse auf meinem Host.

1667
01:13:21,820 --> 01:13:23,820
Im gleichen Kernel.

1668
01:13:23,820 --> 01:13:26,820
Das ist der große Unterschied von Containern zu VMs.

1669
01:13:26,820 --> 01:13:28,820
Container gibt es in dem Sinn nicht.

1670
01:13:28,820 --> 01:13:34,820
Container ist ein Sammelsurium aus verschiedenen Sachen, die der Linux-Kernel bereitstellt,

1671
01:13:34,820 --> 01:13:36,820
und die manche Container-Runtimes, wie Docker, oder so,

1672
01:13:36,820 --> 01:13:39,820
bereitstellen.

1673
01:13:39,820 --> 01:13:42,820
Einen Container an sich gibt es in Linux so gar nicht.

1674
01:13:42,820 --> 01:13:44,820
Auch wenn das so genannt wird.

1675
01:13:44,820 --> 01:13:47,820
Das ist ein Sammelsurium aus verschiedenen Funktionen.

1676
01:13:47,820 --> 01:13:52,820
Und unter der Haube sind es ganz normale Prozesse, die im gleichen Kernel laufen,

1677
01:13:52,820 --> 01:13:55,820
wie alles andere, was ich sonst so ausführe.

1678
01:13:55,820 --> 01:13:58,820
Bei einer VM wäre das was anderes.

1679
01:13:58,820 --> 01:14:04,820
Wenn ich zum Beispiel jetzt sage, hier, wir machen mal eine Debian...

1680
01:14:04,820 --> 01:14:05,820
S...

1681
01:14:05,820 --> 01:14:07,820
Legt die mal neu an.

1682
01:14:07,820 --> 01:14:08,820
Das ist richtig.

1683
01:14:08,820 --> 01:14:09,820
Kubernetes ist keine Container-Runtime.

1684
01:14:09,820 --> 01:14:10,820
Kubernetes ist ein Orchestrierungs-Tool.

1685
01:14:10,820 --> 01:14:11,820
Ich weiß gar nicht, was Kubernetes mittlerweile standardmäßig für eine Runtime nimmt.

1686
01:14:11,820 --> 01:14:12,820
Container-D?

1687
01:14:12,820 --> 01:14:13,820
Oder Run...

1688
01:14:13,820 --> 01:14:14,820
Ich weiß gar nicht.

1689
01:14:14,820 --> 01:14:15,820
Ist das bei LXC gleich?

1690
01:14:15,820 --> 01:14:16,820
Richtig.

1691
01:14:16,820 --> 01:14:17,820
Das ist bei LXC genau das gleiche.

1692
01:14:17,820 --> 01:14:18,820
Seba...

1693
01:14:18,820 --> 01:14:19,820
Se...

1694
01:14:19,820 --> 01:14:20,820
Se...

1695
01:14:20,820 --> 01:14:21,820
Seba...

1696
01:14:21,820 --> 01:14:22,820
Su...

1697
01:14:22,820 --> 01:14:23,820
Chan...

1698
01:14:23,820 --> 01:14:24,820
95...

1699
01:14:24,820 --> 01:14:25,820
Se...

1700
01:14:25,820 --> 01:14:26,820
Se...

1701
01:14:26,820 --> 01:14:27,820
Se...

1702
01:14:27,820 --> 01:14:28,820
Se...

1703
01:14:28,820 --> 01:14:29,820
Se...

1704
01:14:29,820 --> 01:14:30,820
Se...

1705
01:14:30,820 --> 01:14:31,820
Se...

1706
01:14:31,820 --> 01:14:32,820
Se...

1707
01:14:32,820 --> 01:14:33,820
Se...

1708
01:14:33,820 --> 01:14:34,820
Se...

1709
01:14:34,820 --> 01:14:35,820
Chan...

1710
01:14:35,820 --> 01:14:36,820
95...

1711
01:14:36,820 --> 01:14:37,820
Danke für den Sub.

1712
01:14:37,820 --> 01:14:42,610
Das ist bei LXC genau das gleiche.

1713
01:14:42,610 --> 01:14:46,610
Diese ganzen Tools, ob Podman, ob Docker, ob...

1714
01:14:46,610 --> 01:14:48,610
Ja, was auch immer.

1715
01:14:48,610 --> 01:14:58,220
Aus irgendwelchen Gründen funktioniert meine Debian vor...

1716
01:14:58,220 --> 01:15:01,220
Oh, ich habe einen Kernel-Update gemacht, ohne neu zu starten.

1717
01:15:01,220 --> 01:15:02,220
Kann das sein?

1718
01:15:02,220 --> 01:15:06,580
Nice.

1719
01:15:07,580 --> 01:15:08,580
Starten meine VMs nicht.

1720
01:15:08,580 --> 01:15:09,580
Auch sehr cool.

1721
01:15:09,580 --> 01:15:10,580
Ja.

1722
01:15:10,580 --> 01:15:16,220
Pogu.

1723
01:15:16,220 --> 01:15:18,220
Geht ja gut los, was ich jetzt zeigen wollte.

1724
01:15:18,220 --> 01:15:19,220
Ja.

1725
01:15:19,220 --> 01:15:25,750
Vielleicht...

1726
01:15:25,750 --> 01:15:26,750
Vielleicht startet es jetzt?

1727
01:15:26,750 --> 01:15:35,080
Okay.

1728
01:15:35,080 --> 01:15:36,080
Scheint...

1729
01:15:36,080 --> 01:15:37,080
Jetzt...

1730
01:15:37,080 --> 01:15:38,080
Jetzt scheint es zu funktionieren.

1731
01:15:38,080 --> 01:15:41,080
Pogsbox, danke für den Sub.

1732
01:15:41,080 --> 01:15:42,080
Ja.

1733
01:15:42,080 --> 01:15:44,080
Das ist bei LXC genau das gleiche.

1734
01:15:44,080 --> 01:15:46,080
Das ist bei LXC genau das gleiche.

1735
01:15:46,080 --> 01:15:49,080
Also egal, ob es Docker, LXC oder Podman ist.

1736
01:15:49,080 --> 01:15:57,080
Das sind alles nur Frontends für die Linux-Kernel-Funktionalität, die man zusammenfasst als Container.

1737
01:15:57,080 --> 01:15:58,080
Ja.

1738
01:15:58,080 --> 01:16:00,080
Also Namespaces, C-Groups.

1739
01:16:00,080 --> 01:16:01,080
Natürlich gehört es auch...

1740
01:16:01,080 --> 01:16:04,080
Natürlich gehört es zu so einem Container, zu so einer Container-Runtime noch mehr.

1741
01:16:04,080 --> 01:16:06,080
Die muss das Image runterladen vom Container.

1742
01:16:06,080 --> 01:16:08,080
Die muss die Kernel-APIs ansteuern.

1743
01:16:08,080 --> 01:16:10,080
Aber unter der Haube ist das genau das gleiche.

1744
01:16:10,080 --> 01:16:15,080
Also es macht eigentlich keinen Unterschied, ob ich LXC, Docker oder Podman verwende.

1745
01:16:15,080 --> 01:16:21,080
Und am Ende ist es ein Prozess, der über die Kernel-Schnittstellen für, wenn es mal

1746
01:16:21,080 --> 01:16:23,080
Containerisierung gestartet wird.

1747
01:16:23,080 --> 01:16:25,080
Natürlich ist das Handling.

1748
01:16:25,080 --> 01:16:26,080
So.

1749
01:16:26,080 --> 01:16:27,080
So.

1750
01:16:27,080 --> 01:16:28,080
Und jetzt ist jetzt der Unterschied.

1751
01:16:28,080 --> 01:16:29,080
Also guckt euch mal an.

1752
01:16:29,080 --> 01:16:32,080
Uname-A, sagt er mir.

1753
01:16:32,080 --> 01:16:33,080
Es ist Arch.

1754
01:16:33,080 --> 01:16:36,080
Was sehr merkwürdig ist für den Ubuntu.

1755
01:16:36,080 --> 01:16:38,080
Warum das ein Arch-Kernel ist.

1756
01:16:38,080 --> 01:16:39,080
So.

1757
01:16:39,080 --> 01:16:41,080
Uname-A auf meinem Host und Uname-A im Container.

1758
01:16:41,080 --> 01:16:43,080
Ihr seht, es ist der gleiche Kernel.

1759
01:16:43,080 --> 01:16:45,080
Uname-A.

1760
01:16:45,080 --> 01:16:50,080
Uname-A in der VM ist Linux Debian Test-VM 5.10.

1761
01:16:50,080 --> 01:16:54,080
Also das ist der große Unterschied zwischen VMs und Container.

1762
01:16:54,080 --> 01:16:56,080
Auch wenn das immer ein bisschen über den Haufen geschmissen wird.

1763
01:16:56,080 --> 01:16:58,080
Eine VM ist wirklich ein Komplett-Virtualisierer.

1764
01:16:58,080 --> 01:17:00,080
Ein Komplett-Virtualisiertes System.

1765
01:17:00,080 --> 01:17:02,080
Inklusive eigenem Kernel.

1766
01:17:02,080 --> 01:17:04,080
Braucht dementsprechend auch mehr Ressourcen.

1767
01:17:04,080 --> 01:17:07,080
Was Speicherplatz angeht.

1768
01:17:07,080 --> 01:17:09,080
Was vor allem RAM-Usage angeht.

1769
01:17:09,080 --> 01:17:13,080
Deswegen sind Container deutlich schneller gestartet und leichtgewichtiger als VMs.

1770
01:17:13,080 --> 01:17:16,080
Weil Container gar nicht existieren.

1771
01:17:16,080 --> 01:17:19,080
Weil Container ganz normale Prozesse in meinem Host-Kernel sind.

1772
01:17:19,080 --> 01:17:21,080
Wie alles andere auch.

1773
01:17:21,080 --> 01:17:23,080
Nur ein bisschen besser gesandboxed.

1774
01:17:23,080 --> 01:17:25,080
Also das ist ein Unterschied.

1775
01:17:25,080 --> 01:17:27,080
Ob man was in der VM ausführt oder im Container.

1776
01:17:27,080 --> 01:17:30,080
Weil es ist grundlegend einfach was ganz anderes.

1777
01:17:30,080 --> 01:17:34,080
Das heißt, ich kann auch in der VM manche Sachen machen, die ich im Container nicht machen kann.

1778
01:17:34,080 --> 01:17:37,080
Ich kann im VM zum Beispiel Kernel-Module laden.

1779
01:17:37,080 --> 01:17:41,080
In einem Container kann ich keine Kernel-Module laden oder unloaden.

1780
01:17:41,080 --> 01:17:46,080
Mit speziellen Rechten mag das vielleicht gehen.

1781
01:17:46,080 --> 01:17:52,080
Aber zumindest teilen sich alle Container, die ich starte, die gleichen Host-Kernel-Module.

1782
01:17:52,080 --> 01:18:07,580
Ist ein Unterschied.

1783
01:18:07,580 --> 01:18:09,580
Der Sibaro war schon lange nicht mehr da.

1784
01:18:15,740 --> 01:18:17,740
Ist eine VM nicht auch ein Prozess?

1785
01:18:17,740 --> 01:18:18,740
Nee.

1786
01:18:18,740 --> 01:18:22,740
Eine VM ist zwar ein Prozess, der gestartet wird, um die VM zu starten.

1787
01:18:22,740 --> 01:18:25,740
Aber das ist wirklich dein komplett virtualisiertes System.

1788
01:18:25,740 --> 01:18:29,740
Du siehst ja beispielsweise auch nicht...

1789
01:18:29,740 --> 01:18:31,740
Okay, guck mal.

1790
01:18:31,740 --> 01:18:33,740
Wir machen jetzt nochmal einen Docker-Run.

1791
01:18:33,740 --> 01:18:35,740
Ähm...

1792
01:18:35,740 --> 01:18:37,740
Sleep 5.

1793
01:18:37,740 --> 01:18:38,740
So.

1794
01:18:38,740 --> 01:18:40,740
Und jetzt sage ich PSAux Grab Sleep.

1795
01:18:40,740 --> 01:18:41,740
Ich hoffe das funktioniert.

1796
01:18:41,740 --> 01:18:42,740
Da, guck mal da.

1797
01:18:42,740 --> 01:18:43,740
Was sehe ich denn hier?

1798
01:18:43,740 --> 01:18:44,740
Was sehe ich hier?

1799
01:18:44,740 --> 01:18:47,740
Als ganz normalen Prozess in meiner Prozess-Tabelle.

1800
01:18:47,740 --> 01:18:48,740
Was sehe ich hier?

1801
01:18:48,740 --> 01:18:50,740
Bash-C Sleep.

1802
01:18:50,740 --> 01:18:56,740
Was ein weiterer Beweis dafür ist, es ist ein stink-normaler Prozess, den ich im Kernel starte.

1803
01:18:56,740 --> 01:18:59,740
Äh, äh, den ich, den ich im Container starte.

1804
01:18:59,740 --> 01:19:01,740
Also ihr seht es ja...

1805
01:19:01,740 --> 01:19:02,740
Ups.

1806
01:19:02,740 --> 01:19:04,740
Jetzt habe ich, jetzt habe ich Mist gemacht.

1807
01:19:04,740 --> 01:19:05,740
So.

1808
01:19:05,740 --> 01:19:06,740
Hier.

1809
01:19:06,740 --> 01:19:07,740
Da steht es.

1810
01:19:07,740 --> 01:19:08,740
Laufende Prozesse.

1811
01:19:08,740 --> 01:19:09,740
Bin Bash-C Sleep 20.

1812
01:19:09,740 --> 01:19:12,740
Das ist das, was ich eigentlich im Container ausgeführt habe.

1813
01:19:12,740 --> 01:19:15,740
Also weiteres Beleg dafür, dass das stimmt, was ich gesagt habe.

1814
01:19:15,740 --> 01:19:18,740
Wenn ich was im Container starte, es gibt keinen Container.

1815
01:19:18,740 --> 01:19:22,740
Das ist ein ganz normaler Prozess, der hier in meinem System läuft.

1816
01:19:22,740 --> 01:19:24,740
Nur ein bisschen besser Sandboxed.

1817
01:19:24,740 --> 01:19:25,740
Und jetzt ist er weg.

1818
01:19:25,740 --> 01:19:29,740
Also das ist wie bei Portal, wo es den Cake nicht gibt.

1819
01:19:29,740 --> 01:19:31,740
Container gibt es eigentlich gar nicht.

1820
01:19:31,740 --> 01:19:35,740
Das ist ein Sammelsurium aus Sachen, was man so unter Container versteht.

1821
01:19:35,740 --> 01:19:37,740
Also es gibt keinen Container in dem Sinn.

1822
01:19:37,740 --> 01:19:40,750
Genau.

1823
01:19:40,750 --> 01:19:42,750
Und bei einer VM ist das anders.

1824
01:19:42,750 --> 01:19:44,750
Wenn ich eine VM starte.

1825
01:19:44,750 --> 01:19:49,960
Ich starte nochmal eine VM.

1826
01:19:49,960 --> 01:19:51,960
Eine Abstraktionsebene.

1827
01:19:51,960 --> 01:19:56,960
Ja, es ist ein bisschen, es ist eher so ein bisschen Sandboxed das Ganze.

1828
01:19:56,960 --> 01:19:57,960
Genau.

1829
01:19:57,960 --> 01:19:58,960
So.

1830
01:19:58,960 --> 01:20:04,960
Wenn ich eine VM starte und darin was ausführe, dann wird euch auffallen, da sehe ich nichts.

1831
01:20:04,960 --> 01:20:06,960
Okay, die VM läuft auch noch nicht.

1832
01:20:06,960 --> 01:20:08,960
VM läuft gleich.

1833
01:20:08,960 --> 01:20:14,300
Gut, dass wir den VM-Champ gebaut haben, oder?

1834
01:20:14,300 --> 01:20:16,300
Kann ich so Sachen besser zeigen.

1835
01:20:16,300 --> 01:20:22,620
Auf Debian.

1836
01:20:22,620 --> 01:20:23,620
Booten.

1837
01:20:23,620 --> 01:20:24,620
Please.

1838
01:20:24,620 --> 01:20:25,620
Break it.

1839
01:20:25,620 --> 01:20:26,620
So.

1840
01:20:26,620 --> 01:20:27,620
Und jetzt mache ich hier mal das Gleiche.

1841
01:20:27,620 --> 01:20:30,620
Was habe ich in der VM aus, was habe ich im Container ausgeführt?

1842
01:20:30,620 --> 01:20:33,620
Sleep 20 an A minus A.

1843
01:20:33,620 --> 01:20:34,620
So.

1844
01:20:34,620 --> 01:20:35,620
Und jetzt werdet ihr sehen.

1845
01:20:35,620 --> 01:20:39,340
Ich sehe nichts.

1846
01:20:39,340 --> 01:20:43,340
Was ich sehe, ist so Sachen wie zum Beispiel QEMU.

1847
01:20:43,340 --> 01:20:45,340
Dass das läuft.

1848
01:20:45,340 --> 01:20:46,340
Oder KVM.

1849
01:20:46,340 --> 01:20:47,340
Ne.

1850
01:20:47,340 --> 01:20:48,340
Ja.

1851
01:20:48,340 --> 01:20:49,340
Sowas sehe ich.

1852
01:20:49,340 --> 01:20:52,340
Also ich sehe, dass ein Prozess läuft, der eine VM virtuall.

1853
01:20:52,340 --> 01:20:54,340
Gestartet hat, wenn ich weiß, was dieser Prozess macht.

1854
01:20:54,340 --> 01:20:57,340
Aber ich sehe nicht, was in dieser VM läuft.

1855
01:20:57,340 --> 01:20:59,340
In der Prozessliste von meinem Host.

1856
01:20:59,340 --> 01:21:02,340
Weil es eben in einer komplett virtualisierten Kiste läuft.

1857
01:21:02,340 --> 01:21:05,340
Wo mein Host Kernel, mein Host System gar nichts mit zu tun hat.

1858
01:21:05,340 --> 01:21:06,340
Ja.

1859
01:21:06,340 --> 01:21:09,340
Das einzige, was ich hier starte, ist die Software, die die Virtualisierung macht.

1860
01:21:09,340 --> 01:21:14,340
Aber was dann in der virtualisierten VM läuft, hat mit meinem Host System nichts zu tun.

1861
01:21:14,340 --> 01:21:17,340
Dementsprechend sieht man auch hier, ich habe einen eigenen Kernel.

1862
01:21:17,340 --> 01:21:19,340
So wie ich das bei Debian erwarten würde.

1863
01:21:19,340 --> 01:21:21,340
Aber wenn ich jetzt exakt das Gleiche mache.

1864
01:21:21,340 --> 01:21:22,340
Guck mal Leute.

1865
01:21:22,340 --> 01:21:24,340
Ich habe hier oben gestartet.

1866
01:21:24,340 --> 01:21:27,340
In Debian 11 habe ich gestartet.

1867
01:21:27,340 --> 01:21:28,340
So.

1868
01:21:28,340 --> 01:21:33,030
Jetzt machen wir mal Docker run Debian.

1869
01:21:33,030 --> 01:21:35,030
Debian 11.

1870
01:21:35,030 --> 01:21:38,030
Ich weiß gar nicht, ob man 11 überhaupt machen kann.

1871
01:21:38,030 --> 01:21:40,030
Und ihr werdet feststellen, dass.

1872
01:21:40,030 --> 01:21:41,030
Ja ja.

1873
01:21:41,030 --> 01:21:42,030
Download Image.

1874
01:21:42,030 --> 01:21:43,030
Warte mal.

1875
01:21:43,030 --> 01:21:44,030
Ich mache das mal weg.

1876
01:21:44,030 --> 01:21:45,030
Und ihr werdet feststellen, dass der Unterschied schon ziemlich groß ist.

1877
01:21:45,030 --> 01:21:48,030
Hier ist es nämlich nach wie vor Host Kernel 6.2.11 Arch.

1878
01:21:48,030 --> 01:21:51,030
Und hier oben ist es das gleiche Debian System.

1879
01:21:51,030 --> 01:21:52,030
Es ist beides ein Debian System.

1880
01:21:52,030 --> 01:21:54,030
Es ist beides ein Debian 11.

1881
01:21:54,030 --> 01:21:59,030
Hier oben in der VM habe ich den Kernel 15 Debian.

1882
01:21:59,030 --> 01:22:06,030
Und hier unten habe ich, obwohl ich angeblich den Debian in Anführungsstrichen gestartet habe, nach wie vor 6.2.11 Arch.

1883
01:22:06,030 --> 01:22:08,030
Und man sieht, Container ist komplett geschwindelt.

1884
01:22:08,030 --> 01:22:10,030
Es gibt keine Container.

1885
01:22:10,030 --> 01:22:19,030
Es gibt nur paar Kernel Funktionalitäten und ein bisschen Kleber, die das zusammenführt als Container Runtime.

1886
01:22:19,030 --> 01:22:21,030
Und man nennt es dann halt Container.

1887
01:22:21,030 --> 01:22:23,030
So, aber genug zu dem Thema.

1888
01:22:23,030 --> 01:22:28,070
Das kann man nicht oft genug sagen.

1889
01:22:28,070 --> 01:22:42,180
Es ist egal, welche Container Runtime du benutzt.

1890
01:22:42,180 --> 01:22:43,180
Das ist im Prinzip immer das gleiche.

1891
01:22:43,180 --> 01:22:49,180
Man kann auch Container Images in einer VM ausführen.

1892
01:22:49,180 --> 01:22:51,180
Dann sind es trotzdem keine Container mehr danach.

1893
01:22:51,180 --> 01:22:53,180
Das sind VMs.

1894
01:22:53,180 --> 01:22:56,810
So, aber wo bin ich denn stehen geblieben?

1895
01:22:56,810 --> 01:23:03,810
Ich wollte eigentlich die zwei Features zeigen, warum man Terraform benutzt.

1896
01:23:03,810 --> 01:23:05,810
Also das erste habt ihr ja schon gesehen.

1897
01:23:05,810 --> 01:23:09,810
Man könnte jetzt reproduzierbar das in unterschiedlichen Projekten anlegen.

1898
01:23:09,810 --> 01:23:16,810
Egal, ob das jetzt in meinem Kekkel Stream 1 Projekt ist oder in Kekkel Stream 99 oder in Plup 1, 2, 3.

1899
01:23:16,810 --> 01:23:20,810
Egal, ich könnte reproduzierbar den ganzen gleichen Krempel anlegen.

1900
01:23:20,810 --> 01:23:23,810
Immer wieder mit Terraform auf die gleiche Art und Weise.

1901
01:23:23,810 --> 01:23:34,180
So, eine weitere coole Geschichte ist, Terraform merkt sich, was es gemacht hat.

1902
01:23:34,180 --> 01:23:37,820
Terraform hat einen State.

1903
01:23:37,820 --> 01:23:41,820
Terraform hat sich gemerkt, wenn ich jetzt hier nochmal Apply mache,

1904
01:23:41,820 --> 01:23:47,820
Terraform hat sich gemerkt, dass es Netzwerke für mich angelegt hat.

1905
01:23:47,820 --> 01:23:51,820
Das heißt, wenn ich jetzt nochmal Terraform Apply mache, schlägt es auch nicht vor, was zu machen,

1906
01:23:51,820 --> 01:23:56,820
sondern weil sie sagt, hier meine Infrastruktur und das, was ich konfiguriert habe, ist gleich.

1907
01:23:56,820 --> 01:23:59,820
Das heißt, Terraform weiß, dass es die Netzwerke angelegt hat.

1908
01:23:59,820 --> 01:24:05,820
Das bedeutet auch, wenn ich jetzt alles wieder löschen will, was ich mit Terraform aufgebaut habe,

1909
01:24:05,820 --> 01:24:06,820
dann könnte ich sagen Terraform Destroy.

1910
01:24:07,820 --> 01:24:10,820
Mache ich jetzt nicht, weil ich brauche sie ja gleich wieder.

1911
01:24:10,820 --> 01:24:17,820
Dann würde Terraform nachgucken und sagen, jawoll, ich werde einfach das, was ich angelegt habe,

1912
01:24:17,820 --> 01:24:24,820
nämlich das Network und das Subnet und hier so ein paar APIs eingeschaltet, werde ich einfach wieder löschen.

1913
01:24:24,820 --> 01:24:28,820
Und um euch zu zeigen, dass das auch tatsächlich der Fall ist,

1914
01:24:28,820 --> 01:24:32,820
oder wenn ich jetzt hier von Hand noch ein zusätzliches Netzwerk anlege,

1915
01:24:32,820 --> 01:24:34,820
hier bla bla plups, ist wurscht, wie das heißt.

1916
01:24:34,820 --> 01:24:36,820
Hier Subnet 122168.0.

1917
01:24:37,820 --> 01:24:38,820
Slash 4 und 2.

1918
01:24:38,820 --> 01:24:39,820
Moment, das ist der Name.

1919
01:24:39,820 --> 01:24:40,820
0w.

1920
01:24:40,820 --> 01:24:49,150
Region Asia ist vollkommen egal.

1921
01:24:49,150 --> 01:24:50,150
IP Range.

1922
01:24:50,150 --> 01:24:59,620
So, wenn ich das hier jetzt anlege und sage Terraform Destroy,

1923
01:24:59,620 --> 01:25:10,620
dann sagt Terraform nichts von diesem neu angelegten Netzwerk.

1924
01:25:10,620 --> 01:25:11,620
Warum nicht?

1925
01:25:11,620 --> 01:25:14,620
Weil Terraform es nicht selbst erstellt hat.

1926
01:25:14,620 --> 01:25:17,620
Terraform interessiert sich nur für Sachen, die Terraform selbst angelegt hat.

1927
01:25:17,620 --> 01:25:21,620
Ja, man kann Sachen importieren in Terraform, aber in der Regel ist es so,

1928
01:25:21,620 --> 01:25:26,620
Terraform hat es nicht selbst angelegt, also interessiert sich Terraform auch nicht dafür.

1929
01:25:26,620 --> 01:25:32,620
Terraform merkt sich, was es erstellt hat und kann das auch wieder löschen oder überprüfen,

1930
01:25:32,620 --> 01:25:35,620
ob das richtig ist.

1931
01:25:35,620 --> 01:25:37,620
So, jetzt gucken wir uns mal was weiteres an.

1932
01:25:37,620 --> 01:25:43,230
Ich löscht es, löscht es jetzt einfach wieder.

1933
01:25:43,230 --> 01:25:47,230
Ja, je nachdem was der macht, das ist nämlich das nächste, was ich euch zeigen will.

1934
01:25:47,230 --> 01:25:50,230
So, ich löscht den Krempel gerade mal wieder.

1935
01:25:50,230 --> 01:25:51,230
Delete.

1936
01:25:51,230 --> 01:25:52,230
Yes.

1937
01:25:52,230 --> 01:25:55,230
Also das nicht mit Terraform erstellte.

1938
01:25:55,230 --> 01:26:00,230
So, mal angenommen, ich gehe jetzt in das Netzwerk rein, was ich mit Terraform angelegt habe.

1939
01:26:00,230 --> 01:26:02,230
So, ich gehe jetzt in das Subnet hier rein.

1940
01:26:02,230 --> 01:26:04,230
Ich weiß gar nicht, ob man da was gescheit ändern kann.

1941
01:26:04,230 --> 01:26:11,230
Und ich sage jetzt, nee, nee, IP Range soll eigentlich Slash 25 sein, anstatt Slash 24.

1942
01:26:11,230 --> 01:26:12,230
Und ich speichere das jetzt.

1943
01:26:12,230 --> 01:26:15,230
Ja, natürlich, man kann immer noch viel zusätzlich machen.

1944
01:26:15,230 --> 01:26:16,230
Also, fuck ja.

1945
01:26:16,230 --> 01:26:24,630
Äh, 21.

1946
01:26:24,630 --> 01:26:26,630
Aber man darf es nicht kleiner machen.

1947
01:26:26,630 --> 01:26:27,630
Man darf es nur größer machen.

1948
01:26:27,630 --> 01:26:30,630
Dann fragt, oh warte, jetzt bin ich gespannt.

1949
01:26:30,630 --> 01:26:32,630
Jetzt bin ich gespannt, was Terraform macht.

1950
01:26:32,630 --> 01:26:36,630
Wahrscheinlich wird Terraform das Netzwerk neu erzeugen, weil es sich nicht ändern kann.

1951
01:26:36,630 --> 01:26:38,630
Oder es backt rum.

1952
01:26:38,630 --> 01:26:39,630
Gucken wir mal.

1953
01:26:39,630 --> 01:26:42,630
Bin ich mal gespannt, wie Terraform das jetzt händelt.

1954
01:26:42,630 --> 01:26:44,630
Weil Terraform müsste es ja eigentlich kleiner machen.

1955
01:26:44,630 --> 01:26:50,100
So, also irgendjemand ist jetzt ins Webinterface gegangen.

1956
01:26:50,100 --> 01:26:52,100
Und hat da dran rumgespielt.

1957
01:26:52,100 --> 01:26:54,100
Jetzt mache ich mal Terraform Apply.

1958
01:26:54,100 --> 01:26:59,100
Und jetzt guckt Terraform nach, wie ist der State, wie er sein soll.

1959
01:26:59,100 --> 01:27:01,100
Und wie ist der State, wie er wirklich ist.

1960
01:27:01,100 --> 01:27:04,100
Und jetzt sagt Terraform, Momente mal.

1961
01:27:04,100 --> 01:27:05,100
Guckt mal da.

1962
01:27:05,100 --> 01:27:13,200
Irgendwie ist es Slash 23, aber es sollte doch Slash 24 sein.

1963
01:27:13,200 --> 01:27:20,200
Terraform ist aber auch schlau genug, dass es weiß, es kann es nicht einfach ändern, sondern es muss replaced werden.

1964
01:27:20,200 --> 01:27:22,200
Dann kann ich jetzt sagen, jetzt sage ich Yes.

1965
01:27:22,200 --> 01:27:31,200
Und dann wird Terraform jetzt das Subnet löschen und das Subnet neu anlegen mit der richtigen Subnet Mask oder mit der richtigen Net Mask hinten dran.

1966
01:27:31,200 --> 01:27:37,200
Das sind die zwei richtig nicen Features an Terraform.

1967
01:27:37,200 --> 01:27:40,200
Dass Terraform weiß, was es gemacht hat.

1968
01:27:40,200 --> 01:27:48,200
Und Terraform Sachen korrigieren kann oder Sachen rückstandslos, rückstandslos, manchmal bleiben trotzdem ein paar Sachen übrig, rückstandslos wieder entfernen kann.

1969
01:27:48,200 --> 01:27:51,200
Neben dem reproduzierbar aufbauen.

1970
01:27:51,200 --> 01:27:54,200
Und das ist wirklich extrem nice.

1971
01:27:54,200 --> 01:27:58,200
Gerade wenn ihr im Projekt seid, also wenn mehrere Leute hier in diesem Projekt rumwursten.

1972
01:27:58,200 --> 01:28:04,200
Und ihr wollt danach nicht das komplette Projekt löschen, wenn ihr durch seid, sondern nur eure Ressourcen wieder entfernen.

1973
01:28:04,200 --> 01:28:06,200
Dann ist Terraform wirklich sehr praktisch.

1974
01:28:06,200 --> 01:28:12,200
Weil ansonsten müsstet ihr von Hand hingehen und alles im Web Interface wieder wegklicken, was ihr angelegt habt.

1975
01:28:12,200 --> 01:28:17,090
So und jetzt hat Terraform das wieder geändert.

1976
01:28:17,090 --> 01:28:22,090
Deswegen sage ich in Anführungsstrichen rückstandslos in Anführungsstrichen.

1977
01:28:22,090 --> 01:28:25,090
So und jetzt wird Terraform wieder sagen, jo passt.

1978
01:28:25,090 --> 01:28:29,090
Manchmal muss man mit Terraform Sachen exkluden.

1979
01:28:29,090 --> 01:28:33,090
Und ich sage das jetzt auch nur, weil manchmal das jemand im Chat gesagt hat.

1980
01:28:33,090 --> 01:28:35,090
Das kann man hier machen.

1981
01:28:35,090 --> 01:28:37,090
Man kann hier glaube ich ignore.

1982
01:28:37,090 --> 01:28:41,090
Man kann sagen, ey Terraform scheiß mal drauf, weil einer was von Hand geändert hat.

1983
01:28:41,090 --> 01:28:45,090
Aber das sollte man nur an Stellen machen, wo es auch wirklich notwendig ist.

1984
01:28:45,090 --> 01:28:50,090
Ansonsten versucht Terraform das immer in den Stand zu bringen, wie es hier im Code steht.

1985
01:28:50,090 --> 01:28:57,090
Was auch der Grund ist, warum sich das ganze Infrastructure as Code nennt.

1986
01:28:57,090 --> 01:29:04,090
Weil man seine Infrastruktur hier in Code, in Textdateien beschreibt.

1987
01:29:04,090 --> 01:29:06,090
Gut, jetzt machen wir mal was Sinnvolles.

1988
01:29:06,090 --> 01:29:08,090
Wir haben ja im Prinzip nur ein Netzwerk angelegt bisher.

1989
01:29:08,090 --> 01:29:10,090
Wir brauchen noch ein paar andere Sachen.

1990
01:29:10,090 --> 01:29:15,090
Und zwar, wir möchten ja VMs erzeugen können.

1991
01:29:15,090 --> 01:29:17,090
Ein Kubernetes Cluster erzeugen können.

1992
01:29:17,090 --> 01:29:19,090
In diesem Kubernetes Cluster.

1993
01:29:19,090 --> 01:29:23,090
Also mehrere Nodes für den Kubernetes Cluster erzeugen können.

1994
01:29:23,090 --> 01:29:26,090
Mehrere Pots laufen lassen können.

1995
01:29:26,090 --> 01:29:29,090
Und Deployments laufen lassen können im Kubernetes Cluster.

1996
01:29:29,090 --> 01:29:32,090
Das heißt, wir brauchen noch mehr IP Ranges.

1997
01:29:32,090 --> 01:29:34,090
Und das ist ein bisschen eklig gemacht.

1998
01:29:34,090 --> 01:29:41,090
In der Terraform Config für Google Cloud.

1999
01:29:41,090 --> 01:29:43,090
Wir machen Ignore Changes.

2000
01:29:43,090 --> 01:29:45,090
Ja, wir machen auch Ignore Changes bei einer VM gleich.

2001
01:29:45,090 --> 01:29:47,090
Nämlich für SSH Keys.

2002
01:29:47,090 --> 01:29:48,090
So.

2003
01:29:48,090 --> 01:29:50,090
Und dafür gibt es folgende Sachen.

2004
01:29:50,090 --> 01:29:55,090
Neben einer primären IP Range kann man für ein Subnet auch.

2005
01:29:55,090 --> 01:29:57,090
Es ergibt Netzwerktechnisch, Leute.

2006
01:29:57,090 --> 01:29:59,090
Ich sage es euch einmal an der Stelle.

2007
01:29:59,090 --> 01:30:02,090
Netzwerktechnisch ergibt das, was ich jetzt hier konfiguriere, keinen Sinn.

2008
01:30:02,090 --> 01:30:04,090
Aber man muss es bei der Google Cloud so machen.

2009
01:30:04,090 --> 01:30:06,090
Sonst funktioniert es nicht.

2010
01:30:06,090 --> 01:30:09,230
So.

2011
01:30:09,230 --> 01:30:15,230
Man kann jetzt nämlich noch sagen, mehrere Secondary IP Ranges anlegen.

2012
01:30:15,230 --> 01:30:17,230
Wollen einen Block haben.

2013
01:30:17,230 --> 01:30:18,230
Secondary IP Range.

2014
01:30:18,230 --> 01:30:22,230
Und da kann man jetzt noch zusätzliche IP Ranges definieren.

2015
01:30:22,230 --> 01:30:27,230
Die nicht zwangsläufig hier drinnen liegen müssen unbedingt.

2016
01:30:27,230 --> 01:30:31,820
Sondern andere.

2017
01:30:31,820 --> 01:30:32,820
Ja.

2018
01:30:32,820 --> 01:30:36,820
Da kann man zum Beispiel jetzt so etwas sagen wie Range Name.

2019
01:30:36,820 --> 01:30:37,820
So.

2020
01:30:37,820 --> 01:30:41,820
Also wir brauchen einmal eine Range für Kubernetes Pods.

2021
01:30:41,820 --> 01:30:47,900
Also letztendlich die Container, die ich in meinem Kubernetes Cluster laufen lasse.

2022
01:30:47,900 --> 01:30:49,900
Die sollen ja interne IPs kriegen.

2023
01:30:49,900 --> 01:30:51,900
Und das macht man über so eine Secondary Range.

2024
01:30:51,900 --> 01:30:52,900
So.

2025
01:30:52,900 --> 01:30:55,900
Da muss man wieder eine weitere Range angeben.

2026
01:30:55,900 --> 01:31:01,900
Und da können wir jetzt irgendwie so etwas machen wie hier 10.1.0.0.

2027
01:31:01,900 --> 01:31:02,900
Gut.

2028
01:31:02,900 --> 01:31:18,860
Dann können wir halt nur mal gucken, ob das geht oder ob es irgendwelche Auflagen gibt,

2029
01:31:18,860 --> 01:31:20,860
dass man das nicht machen darf.

2030
01:31:20,860 --> 01:31:30,480
Wir können auch Slash 16 machen.

2031
01:31:30,480 --> 01:31:32,480
Das ist vielleicht gar nicht so blöd.

2032
01:31:32,480 --> 01:31:34,480
Dann haben wir mehr Platz.

2033
01:31:34,480 --> 01:31:35,480
Dann haben wir mehr Pods.

2034
01:31:35,480 --> 01:31:37,480
Dann können wir quasi das hier für Pods benutzen.

2035
01:31:37,480 --> 01:31:38,480
So.

2036
01:31:38,480 --> 01:31:42,780
Das können wir machen.

2037
01:31:42,780 --> 01:31:43,780
Und dann brauchen wir nochmal was.

2038
01:31:43,780 --> 01:31:44,780
Das können wir jetzt keine Ahnung.

2039
01:31:44,780 --> 01:31:45,780
10.2.0.0.

2040
01:31:45,780 --> 01:31:46,780
Slash 16.

2041
01:31:46,780 --> 01:31:47,780
Oder wir können auch etwas kleineres nehmen.

2042
01:31:47,780 --> 01:31:48,780
Ist eigentlich vollkommen egal.

2043
01:31:48,780 --> 01:31:49,780
Das nächste ist für.

2044
01:31:49,780 --> 01:31:50,780
Wann brauchen wir das überhaupt?

2045
01:31:50,780 --> 01:31:51,780
Ich glaube.

2046
01:31:51,780 --> 01:31:52,780
Ich glaube, das reicht.

2047
01:31:52,780 --> 01:31:53,780
Für die für die Nodes selber.

2048
01:31:53,780 --> 01:31:54,780
Ich bin mir nicht sicher, ob wir das brauchen.

2049
01:31:54,780 --> 01:31:55,780
Müssen wir.

2050
01:31:55,780 --> 01:31:58,470
Müssen wir gleich machen.

2051
01:31:58,470 --> 01:31:59,470
Ja.

2052
01:31:59,470 --> 01:32:00,470
Ja.

2053
01:32:00,470 --> 01:32:01,470
Ja.

2054
01:32:01,470 --> 01:32:02,470
Ja.

2055
01:32:02,470 --> 01:32:03,470
Ja.

2056
01:32:03,470 --> 01:32:04,470
Ja.

2057
01:32:04,470 --> 01:32:05,470
Ja.

2058
01:32:05,470 --> 01:32:06,470
Ja.

2059
01:32:06,470 --> 01:32:07,470
Ja.

2060
01:32:07,470 --> 01:32:08,470
Ja.

2061
01:32:08,470 --> 01:32:09,470
Ja.

2062
01:32:09,470 --> 01:32:10,470
Ja.

2063
01:32:10,470 --> 01:32:11,470
Ja.

2064
01:32:11,470 --> 01:32:12,470
Ja.

2065
01:32:12,470 --> 01:32:13,470
Ja.

2066
01:32:13,470 --> 01:32:14,470
Ja.

2067
01:32:14,470 --> 01:32:15,470
Ja.

2068
01:32:15,470 --> 01:32:16,470
Ja.

2069
01:32:16,470 --> 01:32:21,920
Ja.

2070
01:32:21,920 --> 01:32:22,920
Ja.

2071
01:32:22,920 --> 01:32:23,920
Ja.

2072
01:32:23,920 --> 01:32:24,920
Ja.

2073
01:32:24,920 --> 01:32:25,920
Ja.

2074
01:32:25,920 --> 01:32:26,920
Ja.

2075
01:32:26,920 --> 01:32:27,920
Ja.

2076
01:32:27,920 --> 01:32:30,940
Ja.

2077
01:32:30,940 --> 01:32:31,940
Ja.

2078
01:32:31,940 --> 01:32:32,940
Ja.

2079
01:32:32,940 --> 01:32:33,940
Ja.

2080
01:32:33,940 --> 01:32:34,940
Ja.

2081
01:32:34,940 --> 01:32:35,940
Ja.

2082
01:32:35,940 --> 01:32:36,940
Ja.

2083
01:32:36,940 --> 01:32:37,940
Ja.

2084
01:32:37,940 --> 01:32:38,940
Ja.

2085
01:32:38,940 --> 01:32:39,940
Ja.

2086
01:32:39,940 --> 01:32:40,940
Ja.

2087
01:32:40,940 --> 01:32:41,940
Ja.

2088
01:32:41,940 --> 01:32:42,940
Ja.

2089
01:32:42,940 --> 01:32:43,940
Ja.

2090
01:32:43,940 --> 01:32:44,940
Ja.

2091
01:32:44,940 --> 01:32:45,940
Ja.

2092
01:32:45,940 --> 01:32:46,940
Ja.

2093
01:32:46,940 --> 01:32:49,020
dass wir das so machen, ansonsten

2094
01:32:49,020 --> 01:32:50,700
ansonsten funktioniert es nicht, so, machen wir mal

2095
01:32:50,700 --> 01:32:53,240
Terraform Apply, gucken, ob wir alles richtig gemacht haben

2096
01:32:53,240 --> 01:32:57,560
Wasche-Tabs

2097
01:32:57,560 --> 01:33:01,480
Die Wäsche-Tabs-Challenge

2098
01:33:01,480 --> 01:33:15,220
Gut

2099
01:33:15,220 --> 01:33:16,720
Weiter geht's

2100
01:33:16,720 --> 01:33:19,380
Terraform legt den ganzen

2101
01:33:19,380 --> 01:33:21,640
Darf das mehrfach

2102
01:33:21,640 --> 01:33:23,220
sein? Ja, das darf mehrfach sein

2103
01:33:23,220 --> 01:33:25,640
Wie gesagt, ich muss auch sagen, Terraform

2104
01:33:25,640 --> 01:33:27,500
ist zwar mit Abstand das verbreitetste Tool

2105
01:33:27,500 --> 01:33:29,520
dafür, ich persönlich mag die

2106
01:33:29,520 --> 01:33:31,280
Syntax von HCL nicht wirklich

2107
01:33:31,280 --> 01:33:34,840
Man muss sich halt ein bisschen mit auskennen

2108
01:33:34,840 --> 01:33:37,420
weil das, ja, weil das so zu den

2109
01:33:37,420 --> 01:33:39,360
Standard-Skills mittlerweile gehört

2110
01:33:39,360 --> 01:33:41,280
Ich persönlich mag die

2111
01:33:41,280 --> 01:33:43,640
Terraform-Syntax nicht, deswegen finde ich das

2112
01:33:43,640 --> 01:33:45,700
gut, dass sie sowas wie CDKTF

2113
01:33:45,700 --> 01:33:47,740
jetzt haben, dass man das mit normalen Programmiersprachen

2114
01:33:47,740 --> 01:33:49,760
machen kann, mein persönlicher Favorit

2115
01:33:49,760 --> 01:33:50,860
ist nach wie vor Pulumi

2116
01:33:50,860 --> 01:33:53,360
aber Terraform ist mit Abstand

2117
01:33:53,360 --> 01:33:55,900
das verbreitetste, schlicht und ergreifend

2118
01:33:55,900 --> 01:33:58,960
Diesmal wirklich, wieso?

2119
01:33:59,080 --> 01:34:01,220
Das ist das zweite Mal, wo wir das gemacht haben

2120
01:34:01,220 --> 01:34:02,720
Letztes Mal hatte ich keinen Bock mehr zu

2121
01:34:02,720 --> 01:34:04,480
streamen und gestern hatte ich Dünnschiss

2122
01:34:04,480 --> 01:34:06,720
Konnte ich nicht streamen

2123
01:34:06,720 --> 01:34:09,220
So, jetzt haben wir das angelegt

2124
01:34:09,220 --> 01:34:11,520
Ist die Playlist vorbei?

2125
01:34:11,520 --> 01:34:17,840
Ah, die war zu epic, die Playlist

2126
01:34:17,840 --> 01:34:19,600
Kann die Syntax komplex werden?

2127
01:34:19,600 --> 01:34:22,380
Ja, auch, aber die Syntax ist nicht schön

2128
01:34:22,380 --> 01:34:24,100
Zum Beispiel, wenn du Schleifen machen musst

2129
01:34:24,100 --> 01:34:26,160
und sowas, das ist einfach abartig

2130
01:34:26,160 --> 01:34:27,800
Es könnte ja durchaus sein, dass ich eine Schleife

2131
01:34:27,800 --> 01:34:29,320
machen will, ja, hierfür jetzt

2132
01:34:29,320 --> 01:34:31,580
für mehrere Netzwerke

2133
01:34:31,580 --> 01:34:33,760
Und Schleifen hier

2134
01:34:33,760 --> 01:34:35,320
Terraform Loops

2135
01:34:35,320 --> 01:34:40,860
Das ist nicht

2136
01:34:40,860 --> 01:34:43,720
wirklich aktuell

2137
01:34:43,720 --> 01:34:45,040
2016

2138
01:34:45,040 --> 01:34:49,210
Kein offizielles

2139
01:34:49,210 --> 01:34:50,550
Ding

2140
01:34:50,550 --> 01:34:55,500
Ja, dann machst du das so

2141
01:34:55,500 --> 01:34:57,420
Ja, dann schreibst du Count

2142
01:34:57,420 --> 01:34:58,940
und dann macht er das mehrfach

2143
01:34:58,940 --> 01:34:59,900
und dann kannst du hier so irgendwie

2144
01:34:59,900 --> 01:35:02,220
Count Index Variable einsetzen

2145
01:35:02,220 --> 01:35:04,340
Das ist wirklich abartig

2146
01:35:04,340 --> 01:35:05,900
Schleifen, Schleifen, Terraform

2147
01:35:05,900 --> 01:35:07,060
Das wird, da ist

2148
01:35:07,060 --> 01:35:10,800
Ja, genau, man kann dann auch

2149
01:35:10,800 --> 01:35:13,020
irgendwie so Wildcard Patterns

2150
01:35:13,020 --> 01:35:13,260
und so

2151
01:35:13,360 --> 01:35:14,380
komisches Gedöns machen

2152
01:35:14,380 --> 01:35:16,060
Das ist wirklich abartig

2153
01:35:16,060 --> 01:35:18,960
Also, insofern ist so Sachen wie

2154
01:35:18,960 --> 01:35:20,900
Pulumi schon ganz nice, weil man einfach

2155
01:35:20,900 --> 01:35:22,900
eine vollwertige, echte Programmiersprache hat

2156
01:35:22,900 --> 01:35:23,900
Alles ist gut

2157
01:35:23,900 --> 01:35:25,960
So, also, machen wir weiter

2158
01:35:25,960 --> 01:35:30,950
Das nächste ist äußerst unspektakulär

2159
01:35:30,950 --> 01:35:32,330
Das nennen wir

2160
01:35:32,330 --> 01:35:32,850
2

2161
01:35:32,850 --> 01:35:35,690
2 Router.tf

2162
01:35:35,690 --> 01:35:38,430
Und das kopiere ich jetzt, weil wir da schlicht und ergreifend

2163
01:35:38,430 --> 01:35:39,250
gar nichts machen müssen

2164
01:35:39,250 --> 01:35:40,010
So, ja

2165
01:35:40,010 --> 01:35:44,060
Das ist einfach

2166
01:35:44,060 --> 01:35:46,680
Äh, hups, vielleicht auch im richtigen

2167
01:35:46,680 --> 01:35:47,680
Ordner

2168
01:35:47,680 --> 01:35:48,680
So

2169
01:35:48,680 --> 01:35:50,680
Ich glaube, dazu muss ich jetzt nicht

2170
01:35:50,680 --> 01:35:52,680
Wollen wir nichts großartiges erzählen

2171
01:35:52,680 --> 01:35:54,680
Das nächste wird schon ein bisschen interessanter

2172
01:35:54,680 --> 01:35:56,680
Wir müssen, äh, NAT-Regeln anlegen

2173
01:35:56,680 --> 01:35:58,680
Also sprich, dass unsere

2174
01:35:58,680 --> 01:36:00,680
VMs zum Beispiel ins Internet connecten können

2175
01:36:00,680 --> 01:36:07,960
Ah

2176
01:36:07,960 --> 01:36:09,960
So, was ist mit dieser Playlist

2177
01:36:09,960 --> 01:36:16,410
los, Mensch?

2178
01:36:16,410 --> 01:36:18,410
Was bin ich denn? Du siehst Terraform-Config

2179
01:36:18,410 --> 01:36:20,410
Auf jeden Fall

2180
01:36:20,410 --> 01:36:22,410
So, als nächstes brauchen wir

2181
01:36:22,410 --> 01:36:24,410
NAT-Regeln

2182
01:36:24,410 --> 01:36:26,410
Damit unsere Kisten sich in die Internetseite verändern können.

2183
01:36:26,410 --> 01:36:28,410
So, das geht folgemaßen

2184
01:36:28,410 --> 01:36:29,410
Resource

2185
01:36:29,410 --> 01:36:30,410
Google

2186
01:36:30,410 --> 01:36:32,410
Compute

2187
01:36:32,410 --> 01:36:33,410
Router

2188
01:36:33,410 --> 01:36:34,410
NAT

2189
01:36:34,410 --> 01:36:37,410
Jetzt werdet ihr auch gleich sehen, warum wir einen Router anlegen mussten

2190
01:36:37,410 --> 01:36:40,410
Weil ich kann keine NAT-Regeln anlegen, ohne dass ich vorher einen Router angelegt habe

2191
01:36:40,410 --> 01:36:42,410
So

2192
01:36:42,410 --> 01:36:44,410
NAT-Regeln, damit unsere Kisten ins Internet kommen

2193
01:36:44,410 --> 01:36:45,410
Also, Name

2194
01:36:45,410 --> 01:36:47,410
NAT

2195
01:36:47,410 --> 01:36:49,410
Haben wir nur eins, so

2196
01:36:49,410 --> 01:36:51,410
Router gleich

2197
01:36:51,410 --> 01:36:53,410
Ähm, den hier im Endeffekt

2198
01:36:53,410 --> 01:36:55,410
Äh, Router

2199
01:36:55,410 --> 01:36:56,410
Moment, warte mal

2200
01:36:56,410 --> 01:36:58,410
Ich hoffe, das Ding kann Auto-Complete

2201
01:36:58,410 --> 01:37:00,410
Google Default Router

2202
01:37:00,410 --> 01:37:02,410
Genau, es kann Auto-Complete

2203
01:37:02,410 --> 01:37:04,410
Äh, Self-Link

2204
01:37:04,410 --> 01:37:09,410
Wenn man Self-Link benutzt, das ist auch so eine Google Terraform-Eigenheit

2205
01:37:09,410 --> 01:37:14,410
Dann bedeutet das, dass diese Ressource gelinkt wird mit dieser Ressource

2206
01:37:14,410 --> 01:37:16,410
Und die hängen voneinander ab

2207
01:37:16,410 --> 01:37:18,410
Das heißt, dann weiß Terraform

2208
01:37:18,410 --> 01:37:21,410
Das hier darf es erst nach dem hier machen

2209
01:37:21,410 --> 01:37:23,410
So, wenn ich das richtig verstanden habe

2210
01:37:23,410 --> 01:37:49,850
Ja

2211
01:37:49,850 --> 01:37:50,850
Ja

2212
01:37:50,850 --> 01:37:51,850
So, ähm

2213
01:37:51,850 --> 01:37:53,850
Jetzt müssen wir noch zwei andere Sachen anlegen

2214
01:37:53,850 --> 01:37:56,850
Und zwar müssen wir angeben, welche Region

2215
01:37:56,850 --> 01:37:58,850
Region haben wir eine Variable für

2216
01:37:58,850 --> 01:38:00,850
Unsere Region ist

2217
01:38:00,850 --> 01:38:01,850
So sieht man ja nicht

2218
01:38:01,850 --> 01:38:04,850
Unsere Region ist Europe-West-3

2219
01:38:04,850 --> 01:38:08,230
Also Region gleich Europe-West-3

2220
01:38:08,230 --> 01:38:13,230
Jetzt müssen wir ein bisschen Terraform-Matching machen für Google

2221
01:38:13,230 --> 01:38:15,230
Und zwar copy-paste ich mir das mal

2222
01:38:15,230 --> 01:38:17,230
Wir müssen folgendes angeben

2223
01:38:17,230 --> 01:38:19,230
Source-Subnetwork IP-Ranges to NAT

2224
01:38:19,230 --> 01:38:21,230
Da steht auch die Erklärung

2225
01:38:21,230 --> 01:38:22,230
Was das Ganze ist

2226
01:38:22,230 --> 01:38:28,400
High-IQ-Shit, also erlaubt ist

2227
01:38:28,400 --> 01:38:35,400
All subnetworks, all IP-Ranges, all subnets, all primary IPs and list of subnetworks

2228
01:38:35,400 --> 01:38:38,400
Das heißt, ich kann jetzt hier selbst angeben

2229
01:38:38,400 --> 01:38:47,950
Welche NAT-IPs das Ding verwenden soll

2230
01:38:47,950 --> 01:38:50,950
Beziehungsweise welche

2231
01:38:50,950 --> 01:38:55,950
Welche Subnets für NAT benutzt man?

2232
01:38:55,950 --> 01:38:57,950
Es ist Google-Logik

2233
01:38:57,950 --> 01:38:59,950
Wobei man das auch nicht zwangsläufig bräuchte

2234
01:38:59,950 --> 01:39:01,950
Man könnte es wahrscheinlich

2235
01:39:01,950 --> 01:39:02,950
Man könnte es auch

2236
01:39:02,950 --> 01:39:03,950
Ich lasse es mal weg

2237
01:39:03,950 --> 01:39:05,950
Vielleicht geht es auch so

2238
01:39:05,950 --> 01:39:06,950
Mal ausprobieren

2239
01:39:06,950 --> 01:39:08,950
Das habe ich tatsächlich auch aus einem Tutorial

2240
01:39:08,950 --> 01:39:10,950
Also weiß nicht, warum man das so macht

2241
01:39:10,950 --> 01:39:13,950
Das ist von Cloud-zu-Cloud-Anbieter ein bisschen unterschiedlich

2242
01:39:13,950 --> 01:39:16,950
Zumindest muss man jetzt noch die NAT-IPs angeben

2243
01:39:16,950 --> 01:39:30,580
Also sprich, welche ausgehenden IP-Adressen man verwendet

2244
01:39:30,580 --> 01:39:32,580
Das heißt, man muss die IPs angeben

2245
01:39:32,580 --> 01:39:34,580
Welche ausgehenden IP-Adressen man verwendet

2246
01:39:34,580 --> 01:39:39,580
Und wer jetzt denkt, man könnte hier einfach sowas reinschreiben

2247
01:39:39,580 --> 01:39:41,580
Naja, ist ein bisschen zu einfach

2248
01:39:41,580 --> 01:39:44,580
Weil ich weiß ja meine IP nicht

2249
01:39:44,580 --> 01:39:46,580
Es sei denn, ich habe die im Vorfeld angelegt

2250
01:39:46,580 --> 01:39:50,580
Das heißt, ich muss jetzt auch externe IPs anlegen

2251
01:39:50,580 --> 01:39:55,580
Und das geht mit Google Compute Address

2252
01:39:55,580 --> 01:39:59,580
So, da kann man NAT-IPs oder irgendwie sowas angeben

2253
01:39:59,580 --> 01:40:04,280
Übrigens, das sollten wir auch mal NAT nennen

2254
01:40:04,280 --> 01:40:06,280
Und da kann man dann sagen

2255
01:40:06,280 --> 01:40:07,280
Hier Name

2256
01:40:07,280 --> 01:40:11,480
Address-Type

2257
01:40:11,480 --> 01:40:12,480
Das ist jetzt wichtig

2258
01:40:12,480 --> 01:40:13,480
Address-Type muss man reinschreiben

2259
01:40:13,480 --> 01:40:16,990
External

2260
01:40:16,990 --> 01:40:19,990
Und Network-Tier können wir Standard lassen

2261
01:40:19,990 --> 01:40:20,990
Depends on

2262
01:40:20,990 --> 01:40:21,990
Brauchen wir auch nicht

2263
01:40:21,990 --> 01:40:23,990
So, das müsste jetzt eigentlich so funktionieren

2264
01:40:23,990 --> 01:40:24,990
Und an der Stelle sage ich

2265
01:40:24,990 --> 01:40:37,560
IPs benutzt doch mal bitteschön die IPs von Google Compute Address Punkt NAT

2266
01:40:37,560 --> 01:40:39,560
Da geht das AutoComplete wieder nicht

2267
01:40:39,560 --> 01:40:40,560
Wo AutoComplete geht?

2268
01:40:40,560 --> 01:40:42,560
Und wann AutoComplete geht?

2269
01:40:42,560 --> 01:40:43,560
Keine Ahnung

2270
01:40:43,560 --> 01:40:50,560
Ich glaube das Terraform Plugin von Visual Studio Code ist einfach eklig

2271
01:40:50,560 --> 01:40:52,560
Genau, ich hoffe das funktioniert so

2272
01:40:52,560 --> 01:40:55,560
Es könnte sein, dass ich den Subnet angeben muss

2273
01:40:55,560 --> 01:40:57,560
Achso, ich habe eine List of Subnets angegeben

2274
01:40:57,560 --> 01:40:58,560
Ich will ja nicht

2275
01:40:58,560 --> 01:40:59,560
Ich will...

2276
01:40:59,560 --> 01:41:00,560
Was ist hier möglich?

2277
01:41:00,560 --> 01:41:01,560
Was kann man hier angeben?

2278
01:41:01,560 --> 01:41:02,560
Source Subnet

2279
01:41:02,560 --> 01:41:03,560
Moment

2280
01:41:03,560 --> 01:41:05,560
Source Subnetwork IP ranges to NAT

2281
01:41:05,560 --> 01:41:08,560
How NAT should be configured per Subnet

2282
01:41:08,560 --> 01:41:14,560
If all subnets of all of the in every are allowed

2283
01:41:14,560 --> 01:41:16,560
Ja, das ist durchaus okay

2284
01:41:16,560 --> 01:41:23,760
If all primary IP ranges

2285
01:41:23,760 --> 01:41:24,760
Wollen...

2286
01:41:24,760 --> 01:41:26,760
Ne, wir wollen all IP ranges haben

2287
01:41:26,760 --> 01:41:42,020
Ne, wollen wir nicht

2288
01:41:42,020 --> 01:41:58,450
Wollen wir nicht

2289
01:41:58,450 --> 01:42:09,410
Wir wollen nur NAT erlauben aus diesen IP ranges

2290
01:42:09,410 --> 01:42:10,410
Wisst ihr was?

2291
01:42:10,410 --> 01:42:11,410
Scheiß drauf

2292
01:42:11,410 --> 01:42:13,410
Wir tragen jetzt mal da alle ein

2293
01:42:13,410 --> 01:42:19,560
So

2294
01:42:19,560 --> 01:42:23,560
Ich glaube, dass das Security-Technik nicht die beste Variante ist

2295
01:42:23,560 --> 01:42:30,560
Und übrigens, man könnte glaube ich hier an der Stelle auch Auto machen

2296
01:42:30,560 --> 01:42:32,560
Probieren wir das mal aus

2297
01:42:32,560 --> 01:42:37,560
Weil dann brauche ich wahrscheinlich diese Einträge hier nicht

2298
01:42:37,560 --> 01:42:40,070
Schauen wir mal

2299
01:42:40,070 --> 01:42:42,070
Mal gucken, ob sich das applyen lässt

2300
01:42:42,070 --> 01:42:44,070
Ich bin mir da selbst nicht ganz sicher

2301
01:42:44,070 --> 01:42:46,070
Ich habe es ja im Vorfeld schon ausprobiert

2302
01:42:46,070 --> 01:42:48,070
Aber im Vorfeld habe ich es anders gemacht

2303
01:42:48,070 --> 01:42:51,070
Aber ein bisschen die Sachen vereinfachen ist ja nicht verkehrt

2304
01:42:51,070 --> 01:42:52,070
So

2305
01:42:52,070 --> 01:42:55,070
Also, er will jetzt ein paar Regeln anlegen

2306
01:42:55,070 --> 01:42:58,070
Und ein NAT-Objekt und ein Router und so

2307
01:42:58,070 --> 01:42:59,070
Mal gucken, ob er Fehler schmeißt

2308
01:42:59,070 --> 01:43:02,070
Wenn er Fehler schmeißt, dann habe ich es verkehrt gemacht

2309
01:43:02,070 --> 01:43:06,890
Zumindest kommen wir jetzt gleich zu einem interessanten Part

2310
01:43:06,890 --> 01:43:08,890
Wir sind ja noch bei Netzwerk-Config

2311
01:43:08,890 --> 01:43:10,890
Das ist relativ...

2312
01:43:10,890 --> 01:43:12,890
Ah, ja, okay

2313
01:43:12,890 --> 01:43:16,460
That's all we know

2314
01:43:16,460 --> 01:43:18,460
Nice, GG Eats

2315
01:43:18,460 --> 01:43:20,460
Da weiß man auch sofort Bescheid, oder?

2316
01:43:20,460 --> 01:43:23,460
Es ist komplett, komplett obvious, was kaputt ist

2317
01:43:23,460 --> 01:43:26,460
Also, wenn ihr nicht versteht, dann cringe, ja

2318
01:43:26,460 --> 01:43:33,650
Es ist eigentlich logisch, woran es liegt, oder?

2319
01:43:33,650 --> 01:43:37,960
Versteht man, versteht man doch sofort

2320
01:43:37,960 --> 01:43:40,960
Nicht eingeloggt, doch, doch, ich bin eingeloggt

2321
01:43:40,960 --> 01:43:43,960
Ich habe irgendwo einen Config-Fehler drin

2322
01:43:43,960 --> 01:43:53,080
Äh, ja

2323
01:43:53,080 --> 01:43:57,080
Also, ich kann jetzt einfach mal das kopieren, von dem ich weiß, dass es geht

2324
01:43:57,080 --> 01:43:59,080
Ähm

2325
01:43:59,080 --> 01:44:01,080
Wie habe ich das Netzwerk genannt hier? Internal... ähm...

2326
01:44:02,080 --> 01:44:04,080
Also, ich hätte jetzt...

2327
01:44:04,080 --> 01:44:06,080
Ich habe es ein bisschen vereinfacht jetzt für den Stream

2328
01:44:06,080 --> 01:44:08,080
Ich habe jetzt eigentlich gehofft, das funktioniert auch

2329
01:44:08,080 --> 01:44:11,080
Was er für Probleme hat, man weiß es nicht

2330
01:44:11,080 --> 01:44:13,080
Router was not found on the server

2331
01:44:13,080 --> 01:44:15,080
Warum?

2332
01:44:15,080 --> 01:44:17,080
Habe ich hier vielleicht... Moment, Router?

2333
01:44:17,080 --> 01:44:18,080
Muss ich... Habe ich das falsch...

2334
01:44:18,080 --> 01:44:22,080
Ah, muss man Router nicht self-link, sondern name machen? Vielleicht

2335
01:44:22,080 --> 01:44:30,020
Yes

2336
01:44:30,020 --> 01:44:37,000
Ja, es ist teilweise etwas undurchsichtig, was man braucht

2337
01:44:37,000 --> 01:44:40,000
The name of the Cloud Router in which that will be... Okay

2338
01:44:40,000 --> 01:44:43,000
Hier muss man den name angeben, es steht ja sogar da

2339
01:44:43,000 --> 01:44:44,000
Es steht ja sogar da

2340
01:44:44,000 --> 01:44:48,000
Leider ist es halt das dumme, dass es nicht Router name heißt, weil dann wüsste man gleich, was Sache ist

2341
01:44:48,000 --> 01:44:50,000
Aber so ist das halt

2342
01:44:50,000 --> 01:44:51,000
So, jetzt hat es funktioniert

2343
01:44:51,000 --> 01:44:52,000
Nice

2344
01:44:52,000 --> 01:44:53,000
Gut

2345
01:44:53,000 --> 01:44:55,000
Kommen wir jetzt mal zu ein bisschen was Spannenderem

2346
01:44:55,000 --> 01:44:58,000
Ähm, nämlich... Na gut, wir müssen noch eine Firewall-Regel anlegen

2347
01:44:58,000 --> 01:44:59,000
Das ist tatsächlich jetzt nicht so spannend

2348
01:44:59,000 --> 01:45:00,000
Machen wir ein neues File

2349
01:45:00,000 --> 01:45:05,560
4... oder Firewall-Rules

2350
01:45:05,560 --> 01:45:06,560
.tf

2351
01:45:06,560 --> 01:45:16,360
Imagine... Ja, die Variablen sind wirklich nicht so nice

2352
01:45:17,360 --> 01:45:21,360
So, das copy-paste ich, weil das ist relativ selbsterklärend

2353
01:45:21,360 --> 01:45:25,360
Also, wir wollen SSH-Zugang erlauben, und zwar von überall

2354
01:45:25,360 --> 01:45:31,360
Von überall wird SSH erlaubt auf Port 22

2355
01:45:31,360 --> 01:45:38,360
Nachdem, um das jetzt mal ein bisschen zu relativieren, dass das Security technisch gar kein so großes Problem ist

2356
01:45:38,360 --> 01:45:41,360
Es ist nichts davon public im Internet verfügbar

2357
01:45:41,360 --> 01:45:46,360
Also ihr müsst euch vorher authentifizieren, bevor ihr euch überhaupt versuchen könnt, über SSH einzuloggen

2358
01:45:46,360 --> 01:45:51,360
Was im Endeffekt heißt, es ist nicht schlimm, dass wir von allen Ranges das Ganze erlauben

2359
01:45:51,360 --> 01:45:54,360
Ja, also...

2360
01:45:54,360 --> 01:45:56,360
SSH ist überall erlaubt

2361
01:45:56,360 --> 01:45:59,360
Und jetzt kommt tatsächlich, finde ich, was ganz interessantes

2362
01:45:59,360 --> 01:46:01,360
Und danach führen wir es auch nochmal aus

2363
01:46:01,360 --> 01:46:03,360
Wir brauchen eine Jump-VM

2364
01:46:03,360 --> 01:46:07,360
Denn bisher ist alles private in der Google Cloud, was wir angelegt haben

2365
01:46:07,360 --> 01:46:08,360
Wir haben ja private Netze

2366
01:46:08,360 --> 01:46:13,360
Der private Kubernetes-Cluster wird auch nicht von außen zugänglich sein

2367
01:46:13,360 --> 01:46:15,360
Das heißt, wir müssen jetzt irgendwas anlegen

2368
01:46:15,360 --> 01:46:21,360
Und zwar eine, nennen wir es mal, Jump-VM.tf

2369
01:46:21,360 --> 01:46:26,360
Das ist eine virtuelle Maschine über Google Cloud Compute

2370
01:46:26,360 --> 01:46:28,360
Eine VM-Instance

2371
01:46:28,360 --> 01:46:29,360
Die legen wir jetzt nicht im Webinterface

2372
01:46:29,360 --> 01:46:31,360
Einmal hier ganz normale Google Cloud VM

2373
01:46:31,360 --> 01:46:33,360
Die Dinger sind übrigens schweineteuer

2374
01:46:33,360 --> 01:46:35,360
Ich zeige euch nochmal exemplarisch

2375
01:46:35,360 --> 01:46:38,360
Also wenn ihr einfach nur eine VM wollt, ist Google Cloud der Witz

2376
01:46:38,360 --> 01:46:42,670
So eine popelige VM, 28 Dollar

2377
01:46:42,670 --> 01:46:44,670
Und dann gucken wir mal hier, Europe

2378
01:46:44,670 --> 01:46:46,670
Europe, Frankfurt

2379
01:46:46,670 --> 01:46:48,670
So eine popelige VM

2380
01:46:48,670 --> 01:46:50,670
Zwei CPUs

2381
01:46:50,670 --> 01:46:52,670
Und das ist noch die Shared-Plattform

2382
01:46:52,670 --> 01:46:54,670
Machen wir mal was ordentliches

2383
01:46:54,670 --> 01:46:57,670
N2 Standards

2384
01:46:57,670 --> 01:47:09,980
Die wollen ernsthaft 74 Euro

2385
01:47:09,980 --> 01:47:12,980
Für eine 2,8 GB VM

2386
01:47:12,980 --> 01:47:15,980
Da kriegst du bei Hetzner 3 Server für

2387
01:47:15,980 --> 01:47:17,980
Mit ordentlich Power

2388
01:47:17,980 --> 01:47:20,980
Kann man die 1 überhaupt noch auswählen?

2389
01:47:20,980 --> 01:47:22,980
Das sind die alten

2390
01:47:22,980 --> 01:47:24,980
Gibt es die 1 noch?

2391
01:47:24,980 --> 01:47:25,980
Ja, First Generation

2392
01:47:25,980 --> 01:47:26,980
Die sind ein bisschen billiger

2393
01:47:26,980 --> 01:47:29,980
Aber auch nicht, aber auch nicht so viel

2394
01:47:29,980 --> 01:47:32,980
Guck mal, 32 Euro für

2395
01:47:32,980 --> 01:47:34,980
Einen Kern

2396
01:47:34,980 --> 01:47:37,980
Und 4 GB RAM

2397
01:47:37,980 --> 01:47:40,980
32 Euro

2398
01:47:40,980 --> 01:47:43,980
Jetzt guck mal, was wir, pass mal auf

2399
01:47:43,980 --> 01:47:49,510
Jetzt guck mal, was wir bei Hetzner Cloud dafür bekommen

2400
01:47:49,510 --> 01:47:54,120
Prices

2401
01:47:54,120 --> 01:47:57,120
So, bei Hetzner Cloud kriegen wir, wir brauchen

2402
01:47:57,120 --> 01:47:58,120
Ja, komm, mit IP

2403
01:47:58,120 --> 01:48:00,120
Das macht man aber ohne

2404
01:48:00,120 --> 01:48:01,120
So

2405
01:48:01,120 --> 01:48:05,440
Ok, Dedicated machen wir auch

2406
01:48:05,440 --> 01:48:06,440
Also

2407
01:48:06,440 --> 01:48:08,440
Wir kriegen, bei Hetzner würden wir tatsächlich

2408
01:48:08,440 --> 01:48:10,440
Dedicated

2409
01:48:10,440 --> 01:48:15,130
Auch eine

2410
01:48:15,130 --> 01:48:19,660
Wie viel, wie viel kostet's?

2411
01:48:19,660 --> 01:48:20,660
32 Euro

2412
01:48:20,660 --> 01:48:21,660
Ja

2413
01:48:21,660 --> 01:48:24,660
Da würden wir 2 CPUs und 8 GB RAM kriegen

2414
01:48:24,660 --> 01:48:27,660
Versus eine CPU und 4 GB RAM

2415
01:48:27,660 --> 01:48:29,660
Besser bei Hetzner würde ich dann tatsächlich sogar

2416
01:48:29,660 --> 01:48:31,660
Die hier nehmen

2417
01:48:31,660 --> 01:48:34,660
Und da kriegen wir dann tatsächlich

2418
01:48:34,660 --> 01:48:36,660
8 CPUs

2419
01:48:36,660 --> 01:48:38,660
Und 16 GB RAM

2420
01:48:38,660 --> 01:48:40,660
So

2421
01:48:40,660 --> 01:48:42,660
Aber gut, das ist, das ist vielleicht fairer

2422
01:48:42,660 --> 01:48:44,660
Wenn man es dann mit denen vergleicht

2423
01:48:44,660 --> 01:48:46,660
Die sind nämlich auch Shared

2424
01:48:46,660 --> 01:48:48,660
Shared Medium

2425
01:48:48,660 --> 01:48:51,660
Also 2, 2 V-CPUs, 4 GB RAM

2426
01:48:51,660 --> 01:48:53,660
32 Euro, auch nicht viel billiger

2427
01:48:53,660 --> 01:48:55,660
32 Euro

2428
01:48:55,660 --> 01:48:58,660
Ja, also, man kriegt bei Google, kriegt man

2429
01:48:58,660 --> 01:49:00,660
2 CPUs, 4 GB Memory

2430
01:49:00,660 --> 01:49:02,660
Und bei Hetzner kriegt man quasi

2431
01:49:02,660 --> 01:49:04,660
8 CPUs und 16 GB RAM

2432
01:49:04,660 --> 01:49:06,660
Wo ist der Unterschied?

2433
01:49:06,660 --> 01:49:07,660
Shared und Not Shared

2434
01:49:07,660 --> 01:49:08,660
Ja, ob es exklusiv für dich ist

2435
01:49:08,660 --> 01:49:09,660
Oder ob andere auch noch Zeit

2436
01:49:09,660 --> 01:49:11,660
CPU-Zeit abbekommen

2437
01:49:11,660 --> 01:49:15,800
Also das können dann beispielsweise

2438
01:49:15,800 --> 01:49:16,800
Das könnte dann zum Beispiel

2439
01:49:16,800 --> 01:49:18,800
Ein Vm-Cluster sein

2440
01:49:18,800 --> 01:49:20,800
Wo halt

2441
01:49:20,800 --> 01:49:21,800
Nicht nur

2442
01:49:21,800 --> 01:49:22,800
Du drauf bist

2443
01:49:22,800 --> 01:49:24,800
Sondern auch ein paar andere Leute

2444
01:49:24,800 --> 01:49:33,620
Shared kann manchmal ein bisschen langsamer sein

2445
01:49:33,620 --> 01:49:34,620
Ja

2446
01:49:34,620 --> 01:49:35,620
Bei, bei, hier ist es so

2447
01:49:35,620 --> 01:49:36,620
Du kannst, du kannst

2448
01:49:36,620 --> 01:49:38,620
Wenn du kurzzeitig

2449
01:49:38,620 --> 01:49:40,620
Wenn du kurzzeitig mehr brauchst

2450
01:49:40,620 --> 01:49:42,620
Dann

2451
01:49:42,620 --> 01:49:43,620
Es kann aber auch sein

2452
01:49:43,620 --> 01:49:44,620
Dass ich jetzt sogar Mist erzähle

2453
01:49:44,620 --> 01:49:45,620
Wie es ist

2454
01:49:45,620 --> 01:49:46,620
Wenn du

2455
01:49:46,620 --> 01:49:47,620
Oder halt, dass ich Mist erzähle

2456
01:49:47,620 --> 01:49:48,620
Aber, aber ich, ich glaube

2457
01:49:48,620 --> 01:49:49,620
Es ist, wenn du

2458
01:49:49,620 --> 01:49:50,620
Wenn du kurzzeitig mehr brauchst

2459
01:49:50,620 --> 01:49:53,620
Dann kriegst du für, glaube ich

2460
01:49:53,620 --> 01:49:54,620
Bis zu 120 Sekunden

2461
01:49:54,620 --> 01:49:56,620
Auch ein bisschen mehr Leistung

2462
01:49:56,620 --> 01:49:57,620
So, das, das, das ja

2463
01:49:57,620 --> 01:49:59,620
Also was ich, was ich euch zeigen wollte

2464
01:49:59,620 --> 01:50:01,620
Vm's sind unsinnig teuer

2465
01:50:01,620 --> 01:50:02,620
Über die Google Cloud

2466
01:50:02,620 --> 01:50:05,620
Also einfach nur Vm's anlegen

2467
01:50:05,620 --> 01:50:06,620
Würde ich da nicht

2468
01:50:06,620 --> 01:50:07,620
Würde ich da nicht machen

2469
01:50:07,620 --> 01:50:09,620
So

2470
01:50:09,620 --> 01:50:11,620
Also wir erstellen jetzt mal eine Vm

2471
01:50:11,620 --> 01:50:13,620
Resource

2472
01:50:13,620 --> 01:50:14,620
Google

2473
01:50:14,620 --> 01:50:15,620
Compute

2474
01:50:15,620 --> 01:50:16,620
Nicht Computer

2475
01:50:16,620 --> 01:50:18,620
Google Compute Instance

2476
01:50:18,620 --> 01:50:19,620
Nennt sich das ganze

2477
01:50:19,620 --> 01:50:20,620
Instance

2478
01:50:20,620 --> 01:50:21,620
Name heißt

2479
01:50:21,620 --> 01:50:22,620
Äh

2480
01:50:22,620 --> 01:50:23,620
Jump Host oder sowas

2481
01:50:23,620 --> 01:50:24,620
Jump

2482
01:50:25,620 --> 01:50:26,620
Name

2483
01:50:26,620 --> 01:50:27,620
Hallo

2484
01:50:27,620 --> 01:50:28,620
What the

2485
01:50:28,620 --> 01:50:29,620
Fuck

2486
01:50:29,620 --> 01:50:31,620
Name

2487
01:50:31,620 --> 01:50:32,620
Alles klar

2488
01:50:32,620 --> 01:50:33,620
Name gibt es nicht

2489
01:50:33,620 --> 01:50:34,620
Sehr gut

2490
01:50:34,620 --> 01:50:35,620
Obwohl, obwohl ich weiß

2491
01:50:35,620 --> 01:50:36,620
Dass es Name gibt

2492
01:50:36,620 --> 01:50:37,620
An der Stelle

2493
01:50:37,620 --> 01:50:38,620
Das Auto komplett ist

2494
01:50:38,620 --> 01:50:39,620
Pega und Brocken

2495
01:50:39,620 --> 01:50:47,050
Äh

2496
01:50:47,050 --> 01:50:54,550
Was auch immer

2497
01:50:54,550 --> 01:50:55,550
So

2498
01:50:55,550 --> 01:50:56,550
Jetzt muss ich hier

2499
01:50:56,550 --> 01:50:57,550
Maschinen Type angeben

2500
01:50:57,550 --> 01:50:58,550
Maschinen Type ist das

2501
01:50:58,550 --> 01:50:59,550
Was ich hier auswählen kann

2502
01:50:59,550 --> 01:51:00,550
Und wir nehmen die kleinsten

2503
01:51:00,550 --> 01:51:01,550
Dies gibt

2504
01:51:01,550 --> 01:51:02,550
Als Jump Host

2505
01:51:02,550 --> 01:51:03,550
Also was

2506
01:51:03,550 --> 01:51:04,550
Was im Monat

2507
01:51:04,550 --> 01:51:05,550
Nur noch

2508
01:51:05,550 --> 01:51:06,550
8 Euro kostet

2509
01:51:06,550 --> 01:51:07,550
Also wir wollen haben

2510
01:51:07,550 --> 01:51:08,550
Etu

2511
01:51:08,550 --> 01:51:09,550
Mikro

2512
01:51:09,550 --> 01:51:10,550
Übrigens

2513
01:51:10,550 --> 01:51:11,550
Ich bin der Meinung

2514
01:51:11,550 --> 01:51:12,550
Die könnten das Auto

2515
01:51:12,550 --> 01:51:13,550
Komplett viel viel besser machen

2516
01:51:13,550 --> 01:51:14,550
In dem

2517
01:51:14,550 --> 01:51:15,550
In der Terraform

2518
01:51:15,550 --> 01:51:16,550
Visual Studio Code

2519
01:51:16,550 --> 01:51:17,550
In der Internet

2520
01:51:17,550 --> 01:51:18,550
In der Internet

2521
01:51:18,550 --> 01:51:19,550
In der Internet

2522
01:51:19,550 --> 01:51:20,950
Visual Studio Code Extension.

2523
01:51:23,950 --> 01:51:25,190
Weil du kannst zum Beispiel hier

2524
01:51:25,190 --> 01:51:27,130
nicht Auto-Compliten.

2525
01:51:27,250 --> 01:51:28,550
Das wäre ja ohne Probleme möglich,

2526
01:51:29,210 --> 01:51:31,210
was einzubauen, was du scannst

2527
01:51:31,210 --> 01:51:32,790
für den Google-Provider.

2528
01:51:34,050 --> 01:51:35,650
So, MachineType E2Micro,

2529
01:51:35,710 --> 01:51:37,190
das ist die billigste 4M, die es gibt.

2530
01:51:37,870 --> 01:51:39,370
Dann müssen wir noch eine Zone angeben,

2531
01:51:39,490 --> 01:51:40,830
wo das Ganze erstellt werden soll.

2532
01:51:40,830 --> 01:51:42,850
Zone ist bei uns Frankfurt.

2533
01:51:44,110 --> 01:51:44,210
Also,

2534
01:51:45,250 --> 01:51:46,810
Europe West 3

2535
01:51:46,810 --> 01:51:48,690
minus A ist unsere Zone.

2536
01:51:50,250 --> 01:51:50,930
Wir müssen

2537
01:51:50,930 --> 01:51:52,690
eine Sache noch customizen, nämlich die

2538
01:51:52,690 --> 01:51:53,230
Boot-Disk.

2539
01:51:54,890 --> 01:51:57,050
Und zwar

2540
01:51:57,050 --> 01:51:57,890
das Image.

2541
01:51:59,030 --> 01:52:00,650
Warum kann ich nicht Enter drücken an der Stelle?

2542
01:52:01,970 --> 01:52:02,910
Das Image ist

2543
01:52:02,910 --> 01:52:04,790
Debian Cloud

2544
01:52:04,790 --> 01:52:06,850
slash Debian 11.

2545
01:52:07,250 --> 01:52:08,510
Also das, was wir eben auch

2546
01:52:08,830 --> 01:52:10,510
nach übrigens Auto-Compliten

2547
01:52:12,230 --> 01:52:12,530
wieder

2548
01:52:12,530 --> 01:52:14,590
komplett procken, das automatisch formatieren.

2549
01:52:15,170 --> 01:52:16,410
Wir wollen ein Debian 11

2550
01:52:16,410 --> 01:52:16,950
drauf machen.

2551
01:52:18,210 --> 01:52:20,310
Und wir brauchen ein Network-Interface,

2552
01:52:20,750 --> 01:52:20,910
ein

2553
01:52:20,910 --> 01:52:22,390
Network-Interface für die 4M.

2554
01:52:23,210 --> 01:52:24,670
Da gehen wir an Network

2555
01:52:24,670 --> 01:52:26,830
und an der Stelle im Prinzip

2556
01:52:26,830 --> 01:52:29,190
unser Default-Network,

2557
01:52:29,270 --> 01:52:30,450
was wir vorhin angelegt haben.

2558
01:52:30,950 --> 01:52:32,990
Und die 4M soll seine IPs beziehen

2559
01:52:32,990 --> 01:52:33,830
von

2560
01:52:33,830 --> 01:52:36,890
vom internen Subnet.

2561
01:52:37,350 --> 01:52:37,970
Also von

2562
01:52:37,970 --> 01:52:39,390
10.0.0.

2563
01:52:39,710 --> 01:52:42,270
10.0.0.0

2564
01:52:42,270 --> 01:52:43,010
slash 24.

2565
01:52:43,710 --> 01:52:44,530
Das ist ja das, was wir

2566
01:52:44,530 --> 01:52:47,610
konnte man hier nicht eigentlich

2567
01:52:47,610 --> 01:52:48,830
auch, nee Moment, ich hab was vergessen.

2568
01:52:48,990 --> 01:52:50,410
Self-Link muss ich noch machen.

2569
01:52:50,910 --> 01:52:54,130
Ja, hier, da, da kommt das her.

2570
01:52:57,660 --> 01:52:57,780
So.

2571
01:52:58,920 --> 01:53:01,300
Das war's. Eine Sache fügen wir aber noch ein.

2572
01:53:02,860 --> 01:53:03,880
Sonst wird's nämlich eklig.

2573
01:53:04,840 --> 01:53:06,120
Lifecycle ignore changes.

2574
01:53:06,280 --> 01:53:07,520
Man kann Terraform sagen,

2575
01:53:08,680 --> 01:53:09,880
dass es manche Änderungen,

2576
01:53:09,880 --> 01:53:12,180
die außerhalb von Terraform passieren,

2577
01:53:12,340 --> 01:53:13,140
ignorieren soll.

2578
01:53:14,240 --> 01:53:15,960
Und ich finde es sinnvoll,

2579
01:53:16,060 --> 01:53:18,100
wenn man die SSH-Keys nicht über Terraform

2580
01:53:18,100 --> 01:53:18,900
selbst managt,

2581
01:53:19,780 --> 01:53:21,880
diese zu ignorieren, weil, wenn ich mich

2582
01:53:21,880 --> 01:53:23,520
sonst dort per SSH einlogge,

2583
01:53:23,700 --> 01:53:26,620
und dann meckert Terraform das nächste

2584
01:53:26,620 --> 01:53:28,640
Mal rum und sagt, oh, die SSH-Keys

2585
01:53:28,640 --> 01:53:30,280
sind unterschiedlich, ah, ich möchte die

2586
01:53:30,280 --> 01:53:32,460
4M jetzt bitte anpassen. Wollen wir nicht.

2587
01:53:32,540 --> 01:53:34,660
SSH-Keys kann Terraform ignorieren.

2588
01:53:34,740 --> 01:53:36,460
Aber die 4M soll sie tracken und sollen

2589
01:53:36,460 --> 01:53:38,460
sie anlegen. So, und wenn ich das

2590
01:53:38,460 --> 01:53:39,740
jetzt richtig gemacht habe,

2591
01:53:40,540 --> 01:53:41,660
alles, dann

2592
01:53:41,660 --> 01:53:43,140
apply,

2593
01:53:44,180 --> 01:53:46,220
dann sollte Terraform jetzt vorschlagen,

2594
01:53:46,340 --> 01:53:47,380
eine 4M anzulegen.

2595
01:53:48,840 --> 01:53:49,320
Und

2596
01:53:49,320 --> 01:53:52,560
ja, sieht gut aus.

2597
01:53:52,680 --> 01:53:53,540
Network Interface,

2598
01:53:53,540 --> 01:53:55,380
Bootdisk, neue Compute Resource

2599
01:53:55,380 --> 01:53:57,500
und neue Firewall-Regeln

2600
01:53:57,500 --> 01:53:59,500
für SSH, alles klar. Ja, Terraform

2601
01:53:59,500 --> 01:54:01,580
legt es mal an. Und wenn ich alles richtig gemacht

2602
01:54:01,580 --> 01:54:03,580
habe, dann hat

2603
01:54:03,580 --> 01:54:05,540
Terraform gleich eine 4M

2604
01:54:05,540 --> 01:54:06,420
erzeugt für mich.

2605
01:54:07,460 --> 01:54:08,100
Da ist sie doch schon.

2606
01:54:09,860 --> 01:54:10,980
Ja, Internal IP

2607
01:54:10,980 --> 01:54:13,500
1002. Wir können auch

2608
01:54:13,500 --> 01:54:15,140
gleich mal ausprobieren, ob wir da drauf kommen.

2609
01:54:16,500 --> 01:54:17,240
Können wir ausprobieren.

2610
01:54:17,340 --> 01:54:19,720
Sagen wir nämlich jetzt einfach Cloud Compute

2611
01:54:19,720 --> 01:54:21,380
SSH, und zwar zur

2612
01:54:21,380 --> 01:54:22,580
Jump, zu Jump.

2613
01:54:23,540 --> 01:54:25,300
Und jetzt sagen wir Tunnel Through IAP.

2614
01:54:29,590 --> 01:54:31,190
Braucht man, macht er eigentlich

2615
01:54:31,190 --> 01:54:33,050
automatisch, braucht man aber dann,

2616
01:54:33,670 --> 01:54:35,150
wenn die 4M selber

2617
01:54:35,150 --> 01:54:37,470
keine Public IP hat.

2618
01:54:38,130 --> 01:54:39,430
Ja, direktes SSH

2619
01:54:39,430 --> 01:54:41,150
auf die 4M geht nur,

2620
01:54:41,510 --> 01:54:43,550
wenn die 4M selbst eine Public IP hat.

2621
01:54:43,650 --> 01:54:45,070
Hat sie nicht, sie hat nur eine Interne IP.

2622
01:54:45,590 --> 01:54:46,790
Deswegen muss man das durch diesen,

2623
01:54:47,110 --> 01:54:48,990
muss man sich SSH tunneln durch so einen

2624
01:54:48,990 --> 01:54:51,390
extra Google Tunnel. So, mache ich

2625
01:54:51,390 --> 01:54:51,910
das jetzt mal.

2626
01:54:53,610 --> 01:54:55,030
Und jetzt generiert er mir

2627
01:54:55,030 --> 01:54:56,830
erstmal SSH-Keys und

2628
01:54:57,090 --> 01:54:59,050
überträgt diese SSH-Keys

2629
01:54:59,050 --> 01:54:59,810
an die 4M.

2630
01:55:00,830 --> 01:55:02,970
Deswegen habe ich auch, jetzt ergibt

2631
01:55:02,970 --> 01:55:04,810
das auch Sinn, deswegen habe ich eben auch

2632
01:55:04,810 --> 01:55:06,990
in Terraform gesagt, Terraform, ignorier mal bitte

2633
01:55:06,990 --> 01:55:09,150
die SSH-Keys, sonst würde beim nächsten

2634
01:55:09,150 --> 01:55:10,810
Apply Terraform jetzt sagen,

2635
01:55:10,890 --> 01:55:13,110
oh nein, die SSH-Keys haben

2636
01:55:13,110 --> 01:55:15,110
sich geändert. Jetzt ist ganz böse

2637
01:55:15,110 --> 01:55:16,390
und das muss jetzt unbedingt

2638
01:55:16,390 --> 01:55:17,730
überschrieben werden.

2639
01:55:18,670 --> 01:55:20,990
Und ihr seht, ich bin auf meiner Cloud 4M

2640
01:55:20,990 --> 01:55:22,630
drauf. Funktioniert auch.

2641
01:55:23,270 --> 01:55:24,910
Update. Mein NAT

2642
01:55:24,910 --> 01:55:26,850
funktioniert. NAT ist richtig eingerichtet.

2643
01:55:26,850 --> 01:55:28,250
Schau mal, sehr gut, hat funktioniert.

2644
01:55:29,910 --> 01:55:30,130
Jo.

2645
01:55:32,930 --> 01:55:34,830
Jetzt habe ich eine 4M. Über die 4M

2646
01:55:34,830 --> 01:55:36,770
kann ich mich jetzt in meine Google Cloud

2647
01:55:36,770 --> 01:55:39,110
verbinden, weil ihr seht ja,

2648
01:55:39,490 --> 01:55:40,710
Google Cloud technisch ist

2649
01:55:40,710 --> 01:55:42,850
alles nicht aus dem

2650
01:55:42,850 --> 01:55:44,830
Internet erreichbar. Das kann ich jetzt

2651
01:55:44,830 --> 01:55:46,190
nur nochmal betonen.

2652
01:55:46,490 --> 01:55:48,910
Da kommt man ja easy drauf. Ne, ne, man kommt nicht easy

2653
01:55:48,910 --> 01:55:51,050
drauf. Das ist alles ein internes

2654
01:55:51,050 --> 01:55:52,710
Netz, Private IP

2655
01:55:52,710 --> 01:55:54,970
Range und nicht aus dem Internet

2656
01:55:54,970 --> 01:55:55,550
erreichbar.

2657
01:55:56,910 --> 01:55:58,910
Das heißt, auch wenn ich hier irgendwelche Security,

2658
01:55:58,930 --> 01:56:00,770
problematische Security Sachen mache,

2659
01:56:01,090 --> 01:56:02,890
ist jetzt erstmal nicht so schlimm, weil die

2660
01:56:02,890 --> 01:56:04,430
Sachen sind aus dem Internet eh nicht erreichbar.

2661
01:56:04,710 --> 01:56:06,790
Was nicht heißt, dass ich nicht bestimmte

2662
01:56:06,790 --> 01:56:08,850
Services, ähm, ja,

2663
01:56:09,030 --> 01:56:10,090
erreichbar machen

2664
01:56:10,090 --> 01:56:15,140
könnte. Okay.

2665
01:56:16,380 --> 01:56:17,100
Weiter geht's.

2666
01:56:17,860 --> 01:56:19,460
Wir haben jetzt alles Wichtige angelegt.

2667
01:56:19,660 --> 01:56:20,940
Also wir haben unsere Jump4Ms,

2668
01:56:21,280 --> 01:56:22,500
wir haben unsere

2669
01:56:22,500 --> 01:56:25,240
Netzwerke. Jetzt kommen

2670
01:56:25,240 --> 01:56:26,880
wir mal zum Kubernetes Cluster.

2671
01:56:29,610 --> 01:56:31,110
Und um den Kubernetes Cluster

2672
01:56:31,110 --> 01:56:33,010
anzulegen, wir machen eine Sache nochmal zwischen

2673
01:56:33,010 --> 01:56:34,950
durch. Da bin ich mir nicht ganz so sicher,

2674
01:56:35,070 --> 01:56:36,930
warum man das braucht, aber in dem

2675
01:56:36,930 --> 01:56:38,570
Tutorial stand das drin. Das heißt, ich

2676
01:56:38,570 --> 01:56:40,670
vermute mal, das hat irgendeinen

2677
01:56:40,670 --> 01:56:42,830
irgendeinen Sinn.

2678
01:56:43,370 --> 01:56:45,290
Wie ich es immer im falschen Verzeichnis anlege.

2679
01:56:47,550 --> 01:56:48,390
Und zwar, wir legen noch

2680
01:56:48,390 --> 01:56:50,210
ein Service Account an für unser

2681
01:56:50,210 --> 01:56:52,490
Kubernetes. Ich vermute

2682
01:56:52,490 --> 01:56:54,310
mal, das ist später relevant,

2683
01:56:54,890 --> 01:56:56,470
wenn ich in meinem Kubernetes Cluster

2684
01:56:56,470 --> 01:56:58,510
auf Secrets zugreifen will und sowas.

2685
01:56:59,310 --> 01:57:00,310
Oder um

2686
01:57:00,310 --> 01:57:02,210
vielleicht von anderen Services

2687
01:57:02,210 --> 01:57:04,030
auf meinen Kubernetes Cluster zuzugreifen.

2688
01:57:04,390 --> 01:57:06,110
Ich bin mir nicht ganz sicher, wozu man das braucht.

2689
01:57:06,830 --> 01:57:08,090
Ich habe es bis jetzt noch nicht gebraucht,

2690
01:57:08,630 --> 01:57:09,630
aber ich vermute mal,

2691
01:57:10,510 --> 01:57:12,190
es hat seinen Sinn, dass sie das im Tutorial auch

2692
01:57:12,190 --> 01:57:12,650
gemacht haben.

2693
01:57:14,550 --> 01:57:16,190
Und jetzt kommen wir zu unserem Kubernetes

2694
01:57:16,190 --> 01:57:18,330
Cluster. Ich Terraform applye

2695
01:57:18,330 --> 01:57:20,450
nochmal, dass wir hier up to date

2696
01:57:20,450 --> 01:57:20,750
sind.

2697
01:57:27,840 --> 01:57:28,820
Ja, yes,

2698
01:57:29,020 --> 01:57:30,740
alles gut, das wird klappen. So,

2699
01:57:30,860 --> 01:57:32,980
jetzt kommen wir zur eigentlichen Sache, die wir machen wollen,

2700
01:57:33,080 --> 01:57:34,900
nämlich unser Kubernetes Cluster anlegen

2701
01:57:34,900 --> 01:57:36,980
in der Google Cloud. Dazu

2702
01:57:36,980 --> 01:57:39,000
legen wir auch wieder Terraform an. Terraform

2703
01:57:39,000 --> 01:57:40,740
File an 7 minus

2704
01:57:40,740 --> 01:57:42,660
Kubernetes Cluster

2705
01:57:42,660 --> 01:57:44,960
.tf. Und das ist

2706
01:57:44,960 --> 01:57:46,980
jetzt in der Tat etwas trickreicher,

2707
01:57:47,100 --> 01:57:48,840
wie das funktioniert mit einem Kubernetes Cluster.

2708
01:57:49,080 --> 01:57:50,660
Und zwar, das erste, was man machen muss, natürlich,

2709
01:57:51,160 --> 01:57:52,340
man muss eine Ressource anlegen.

2710
01:57:52,860 --> 01:57:54,460
Google Container

2711
01:57:54,460 --> 01:57:56,000
nennt sich das, Cluster.

2712
01:57:56,520 --> 01:57:58,660
Nicht Kubernetes, nein, Google

2713
01:57:58,660 --> 01:58:01,100
Container Cluster.

2714
01:58:02,260 --> 01:58:02,700
Dem kann man

2715
01:58:02,700 --> 01:58:04,840
einen Namen geben und in dem Tutorial, was ich geguckt

2716
01:58:04,840 --> 01:58:07,020
habe, haben sie ihn Primary

2717
01:58:07,020 --> 01:58:08,880
genannt, was ich eigentlich ganz sinnvoll finde, weil

2718
01:58:08,880 --> 01:58:17,300
das der einzige Kubernetes Cluster ist, den wir anlegen. Man könnte ihn auch Cluster oder wie

2719
01:58:17,300 --> 01:58:26,790
auch immer nennen. So, name, gleiche wie gehabt. Location und da ist es jetzt wichtig, dass wir

2720
01:58:26,790 --> 01:58:39,050
sagen location.zone. Ansonsten braucht er nämlich viel zu viel Disk Space. Wenn ich hier sagen würde

2721
01:58:39,050 --> 01:58:44,250
location.region, dann würde er, also wenn ich jetzt region angebe anstatt zone, dann würde das

2722
01:58:44,250 --> 01:58:49,310
replizieren dreimal alles. Und dann bin ich an meinem Storage Quota. Also wir haben nur einen

2723
01:58:49,310 --> 01:58:55,290
Single Location Cluster. Ist nicht sonderlich hoch verfügbar. Gut, aber für die Demo jetzt egal.

2724
01:58:55,290 --> 01:59:01,670
Nächste Sache, die auch wichtig ist, removeDefaultNodePool. Das müssen wir auf true setzen.

2725
01:59:01,670 --> 01:59:08,850
Und true 0w und den InitialNodeCount. Alter, was ist denn mit dem? Warum ist diese

2726
01:59:08,850 --> 01:59:08,870
Echtzeit? Warum ist diese Echtzeit? Warum ist diese Echtzeit? Warum ist diese Echtzeit? Warum ist

2727
01:59:08,870 --> 01:59:09,030
diese Echtzeit? Warum ist diese Echtzeit? Warum ist diese Echtzeit? Warum ist diese

2728
01:59:09,030 --> 01:59:17,610
Extension so kacke? Auf 1. Was das macht, ist normalerweise, wenn ein Google

2729
01:59:17,610 --> 01:59:22,870
Kubernetes Cluster, Google Kubernetes Engine Cluster erzeugt wird, bringt er einen Standard

2730
01:59:22,870 --> 01:59:30,450
NodePool mit. Das wollen wir nicht. Wir wollen einen extra NodePool anlegen, weil es könnte

2731
01:59:30,450 --> 01:59:35,190
ja sein, dass wir unterschiedliche Workloads für den Cluster haben. Dass wir zum Beispiel

2732
01:59:35,190 --> 01:59:40,230
Workloads haben, die besonders starke Kubernetes Nodes brauchen und welche

2733
01:59:40,230 --> 01:59:48,850
die mit weniger starken Kubernetes Nodes auskommen. Das spart Kosten. Also ich kann natürlich überall

2734
01:59:48,850 --> 01:59:54,550
die fettesten Kubernetes Nodes hinstellen, aber das kostet halt. Wenn ich sage, hey,

2735
01:59:54,550 --> 01:59:59,790
wir machen einfach NodePools, einmal ein NodePool mit BilligNodes und einmal ein NodePool mit

2736
01:59:59,790 --> 02:00:03,930
HighPerformanceNodes, dann kann ich mir Geld sparen. Ich kann natürlich auch alles mit

2737
02:00:03,930 --> 02:00:08,190
HighPerformanceNodes aufbauen, aber es ist wahrscheinlich gar nicht notwendig. Das heißt,

2738
02:00:08,190 --> 02:00:09,510
wir löschen den HighPerformanceNodeCount. Das heißt, wir löschen den HighPerformanceNodeCount.

2739
02:00:09,510 --> 02:00:10,030
Das heißt, wir löschen den HighPerformanceNodeCount. Das heißt, wir löschen den

2740
02:00:10,030 --> 02:00:18,010
initial angelegten Pool für Nodes in diesem Cluster und legen gleich selbst von Hand noch

2741
02:00:18,010 --> 02:00:24,730
einen NodePool an. Nodes sind bei Kubernetes im Prinzip ja die Teile, aus denen sich der

2742
02:00:24,730 --> 02:00:30,850
Kubernetes Cluster zusammensetzt. Ein Kubernetes Cluster besteht aus mehreren Nodes. Auf jedem

2743
02:00:30,850 --> 02:00:36,670
Node läuft dann das ganze Kubernetes Zeug immer. Also nicht die Container mit der Anwendung,

2744
02:00:36,670 --> 02:00:39,910
sondern das ganze Kubernetes Management Zeug läuft auf jedem Node.

2745
02:00:40,030 --> 02:00:48,310
So, also erstmal alles weg. Jetzt müssen wir dem Ding natürlich noch sagen, welches Netzwerk soll

2746
02:00:48,310 --> 02:00:54,670
das denn benutzen und da wollen wir unser Default Network, falls es hier irgendwo steht. Network

2747
02:00:54,670 --> 02:00:59,170
Default. Dann muss man dem Ding noch sagen, welches Subnetwork es benutzen soll und das

2748
02:00:59,170 --> 02:01:06,700
soll unser Default Subnetwork benutzen. Logging, Monitoring lassen wir aus. Es gibt noch eine

2749
02:01:06,700 --> 02:01:11,180
wichtige Sache, Networking Mode und da sollten wir reinschreiben. Wir können ja mal gucken, was alles.

2750
02:01:11,340 --> 02:01:18,840
Ah super, gibt keine Hilfe, gibt keine Hilfe. Wir wollen VPC Native haben. Es gibt die Möglichkeit,

2751
02:01:18,840 --> 02:01:24,840
dass die IPs geroutet werden aus dem Kubernetes Cluster oder das IP-Aliasing benutzt wird.

2752
02:01:24,840 --> 02:01:33,660
IP-Aliasing ist grob gesagt auf einem Netzwerk Interface mehrere IPs und Routing ist Routing.

2753
02:01:33,660 --> 02:01:40,180
Anderes Netz über den Gateway und IP-Aliasing ist

2754
02:01:41,340 --> 02:01:50,630
glaube ich schneller und einfacher. Jetzt können wir noch ein paar andere Sachen machen. Wir könnten

2755
02:01:50,630 --> 02:01:56,450
zum Beispiel noch den Standard Ingress Controller löschen und sowas. Das lassen wir uns, sparen wir

2756
02:01:56,450 --> 02:01:59,630
uns jetzt aber alles, weil so viel Kubernetes Config machen wir heute nicht. Wir legen den

2757
02:01:59,630 --> 02:02:04,610
Cluster an, reproduzierbar. So, jetzt ist noch eine weitere wichtige Sache. Wir müssen ihm sagen,

2758
02:02:04,610 --> 02:02:13,070
was für Kubernetes soll denn da eigentlich drauf? Und es gibt die Auswahl zwischen Stable, Regular

2759
02:02:13,070 --> 02:02:13,570
und

2760
02:02:14,570 --> 02:02:23,250
Rapid, genau. So, da kann man mehrere, da gibt es verschiedene Release Cycles. Wenn ich sage Stable,

2761
02:02:23,250 --> 02:02:29,890
gibt es alle paar Monate Upgrades. Wenn ich sage Regular, gibt es mehrfach im Monat Upgrades und

2762
02:02:29,890 --> 02:02:35,930
wenn ich Rapid sage, kriege ich Kubernetes Upgrades wöchentlich. Also, wenn ich immer eine super

2763
02:02:35,930 --> 02:02:41,390
aktuelle Kubernetes Version haben möchte, dann nehme ich Rapid, ansonsten nehme ich Regular.

2764
02:02:41,390 --> 02:02:42,230
Wir nehmen jetzt Regular.

2765
02:02:42,230 --> 02:02:44,270
Regular.

2766
02:02:44,570 --> 02:02:48,890
Das ist tatsächlich eine wichtige Geschichte und ich habe gesehen, bei uns auf der Arbeit,

2767
02:02:48,890 --> 02:02:52,730
habe ich schon einen Fehler entdeckt oder ich vermute, dass es ein Fehler ist. Ich habe gesehen,

2768
02:02:52,730 --> 02:02:58,510
dass die irgendwo hardcoded in ihr Terraform Kubernetes Versionen reingeschrieben haben.

2769
02:02:58,510 --> 02:03:09,920
Das wird über kurz oder lang zu Problemen führen, weil die Cluster geupdatet werden und Terraform

2770
02:03:09,920 --> 02:03:16,100
dann eine andere Version sieht, als bei ihm im State steht. Also, das wird, es wird noch Probleme geben.

2771
02:03:16,460 --> 02:03:20,400
Muss ich ja gleich mal morgen gucken, ob das wirklich so ist oder ob das nur für mich so ausgesehen hat.

2772
02:03:20,400 --> 02:03:29,360
Rapid ist aber nicht Unstable. So wie ich das verstehe nicht. Ich gehe davon aus, es sind nur

2773
02:03:29,360 --> 02:03:35,340
normale Kubernetes Releases, aber halt schnell, nachdem sie rausgekommen sind. Und da buggt ja

2774
02:03:35,340 --> 02:03:46,060
auch ganz gerne mal was. Also, wenn du nicht neue Features brauchst, kannst du durchaus auch auf

2775
02:03:46,060 --> 02:03:52,140
Stable gehen. Also, es sind keine Beta Releases, sondern es geht einzig und allein, wie oft wird geupdatet.

2776
02:03:52,140 --> 02:03:52,640
Also, es sind keine Beta Releases, sondern es geht einzig und allein, wie oft wird geupdatet. Also, es sind keine Beta Releases, sondern es geht einzig und allein, wie oft wird geupdatet.

2777
02:03:53,020 --> 02:03:53,520
Also, es sind keine Beta Releases, sondern es geht einzig und allein, wie oft wird geupdatet.

2778
02:03:53,520 --> 02:04:02,160
Und Kubernetes Versionen kommen ja relativ oft raus. Wir können sonst, erinnere mich mal dran, wir können im Web Interface später gucken, was zur Auswahl steht.

2779
02:04:02,160 --> 02:04:06,670
Oder wir können auch so bei Google gucken.

2780
02:04:06,670 --> 02:04:12,670
So, also wir gehen mit Regular, ganz normal, ganz normale. Update Intervall wollen wir haben.

2781
02:04:12,670 --> 02:04:18,670
So, und jetzt muss man sagen, jetzt wird es super weird champig, was man einstellen muss.

2782
02:04:18,670 --> 02:04:25,790
Man muss eine IP Allocation Policy einstellen. Das ist, aus welchen IP Ranges,

2783
02:04:25,790 --> 02:04:33,790
Kubernetes, also die Services auf dem Kubernetes Cluster selbst, IPs beziehen sollen.

2784
02:04:33,790 --> 02:04:41,790
Und aus welcher IP Range die Pods, also die Container, die auf dem Kubernetes Cluster laufen, ihre IPs beziehen sollen.

2785
02:04:41,790 --> 02:04:47,790
Und das bekommen wir hier her. Guck mal, bei unserem Netzwerk haben wir doch das hier angelegt.

2786
02:04:47,790 --> 02:04:54,790
K8S Services, K8S Pods. Das brauchen wir an der Stelle jetzt. Also, IP Allocation Policy.

2787
02:04:54,790 --> 02:05:00,790
Man kann, ach guck mal, man kann das auch so direkt zuordnen. Das ist vielleicht auch nicht schlecht.

2788
02:05:00,790 --> 02:05:16,710
Ah, nice. Also man kann hier sagen, okay, Services, Cluster Secondary IP Range Name.

2789
02:05:16,710 --> 02:05:22,710
Das ist das, was wir dort angegeben haben. Cluster Secondary IP Name.

2790
02:05:22,710 --> 02:05:28,710
Und entweder können wir jetzt da reinschreiben, K8S Pods.

2791
02:05:28,710 --> 02:05:38,710
Und K8S Services, das ist übrigens Secondary Services, Secondary Range Name.

2792
02:05:38,710 --> 02:05:44,210
Dass er weiß, wo er seine IPs herbeziehen soll.

2793
02:05:44,210 --> 02:05:50,210
Ich vermute mal, man kann hier auch das irgendwie linken, indem man sagt, das muss ich jetzt mal ausprobieren, indem man sagt,

2794
02:05:50,210 --> 02:05:59,780
Network, nee, Google Subnets Internal Secondary IP Range.

2795
02:05:59,780 --> 02:06:00,780
Google Subnets Internal Secondary IP Range.

2796
02:06:00,780 --> 02:06:01,780
Google Subnets Internal Secondary IP Range.

2797
02:06:01,780 --> 02:06:07,780
Kann man da mehrere angeben? Hier, Secondary IP Range Name.

2798
02:06:07,780 --> 02:06:16,690
Nee.

2799
02:06:16,690 --> 02:06:20,690
Okay, da bräuchte ich jetzt irgendeinen Terraform-Experten, der weiß, wie das funktioniert.

2800
02:06:20,690 --> 02:06:25,220
Ich weiß nicht, ob man da sowas angeben kann.

2801
02:06:25,220 --> 02:06:28,220
Aber wenn man den Namen braucht, ist der eh blöd.

2802
02:06:28,220 --> 02:06:31,980
Na gut.

2803
02:06:31,980 --> 02:06:34,980
Wir schreiben es so rein, da weiß ich, dass es funktioniert.

2804
02:06:34,980 --> 02:06:37,980
So, also, das ist das Wichtigste hier.

2805
02:06:37,980 --> 02:06:41,980
Die Container, die ich auf dem komponiertes Cluster starte, die ziehen ihre IPs

2806
02:06:41,980 --> 02:06:44,980
aus dieser IP Range.

2807
02:06:44,980 --> 02:06:46,980
Intern.

2808
02:06:46,980 --> 02:06:50,980
Also, da bekommen die eine zugewiesen, wenn sie gestartet sind.

2809
02:06:50,980 --> 02:06:53,980
Beziehungsweise, wenn sie gestartet werden.

2810
02:06:53,980 --> 02:06:55,980
Das Wichtigste, das muss man machen.

2811
02:06:55,980 --> 02:07:01,980
Und jetzt noch eine wichtige Config für alle Cluster, die nicht öffentlich im Internet verfügbar sein sollen.

2812
02:07:01,980 --> 02:07:05,980
Man muss als erstes einstellen, Enable Private Nodes.

2813
02:07:05,980 --> 02:07:09,980
Und dann muss man einstellen, Enable...

2814
02:07:09,980 --> 02:07:11,980
Geist, Alter.

2815
02:07:11,980 --> 02:07:12,980
Enable Private Endpoint.

2816
02:07:12,980 --> 02:07:14,980
Die zwei Sachen muss man machen.

2817
02:07:14,980 --> 02:07:20,980
Und wenn man das gemacht hat, noch mal weirdchampiger, muss man noch mal eine extra IP Range angeben.

2818
02:07:20,980 --> 02:07:24,980
Für die Managed Kubernetes Cluster Seite von Google.

2819
02:07:24,980 --> 02:07:28,980
Und das nennt sich Master IPv4 Sidre Block.

2820
02:07:28,980 --> 02:07:30,980
Weil, fragt mich nicht.

2821
02:07:30,980 --> 02:07:33,980
Und dann nehme ich das, was Google in seinem Beispiel hingeschrieben hat.

2822
02:07:33,980 --> 02:07:35,980
Das hat nichts mit meinen IPs zu tun.

2823
02:07:35,980 --> 02:07:37,980
Das ist die IP Range.

2824
02:07:37,980 --> 02:07:40,980
Das ist die Managed Kubernetes Service von Google.

2825
02:07:40,980 --> 02:07:42,980
Was die dafür nehmen soll.

2826
02:07:42,980 --> 02:07:44,980
Das ist nicht, worum ich mich kümmern muss.

2827
02:07:44,980 --> 02:07:46,980
Aber ich kann es trotzdem aussuchen.

2828
02:07:46,980 --> 02:07:49,980
Weil ich mich vielleicht zu irgendeiner API oder so connecten will.

2829
02:07:49,980 --> 02:07:53,360
Aus diesem Bereich.

2830
02:07:53,360 --> 02:07:57,360
Das ist übrigens die offizielle Range, die Google vorschlägt, dass man die dafür nimmt.

2831
02:07:57,360 --> 02:08:07,280
Es muss Slash 28 sein, was anderes ist nicht erlaubt.

2832
02:08:07,280 --> 02:08:09,280
Genau, und am Ende kopiere ich mir noch was raus.

2833
02:08:09,280 --> 02:08:11,280
Am Ende gibt es noch eine Config.

2834
02:08:11,280 --> 02:08:14,280
Welche internen Netze alles auf meinen Kubernetes Cluster zugreifen dürfen.

2835
02:08:14,280 --> 02:08:15,280
So.

2836
02:08:15,280 --> 02:08:16,280
Who cares?

2837
02:08:16,280 --> 02:08:17,280
Wurscht.

2838
02:08:17,280 --> 02:08:18,280
Next.

2839
02:08:18,280 --> 02:08:19,280
So.

2840
02:08:19,280 --> 02:08:20,280
Wir haben den Default Pool gelöscht.

2841
02:08:20,280 --> 02:08:21,280
Da.

2842
02:08:21,280 --> 02:08:22,280
Guckt hier.

2843
02:08:22,280 --> 02:08:23,280
Remove Default Node Pool.

2844
02:08:23,280 --> 02:08:24,280
Wobei.

2845
02:08:24,280 --> 02:08:26,280
Wir können den Kubernetes Cluster jetzt eigentlich erstmal anlegen lassen.

2846
02:08:26,280 --> 02:08:27,280
Apply.

2847
02:08:27,280 --> 02:08:28,280
Ich hoffe das geht ohne Pool.

2848
02:08:28,280 --> 02:08:33,280
Und ich warne euch jetzt schon mal, das kann durchaus 4-5 Minuten dauern.

2849
02:08:33,280 --> 02:08:38,280
Das ist mega langsam Kubernetes Cluster zu professionieren in Google Cloud.

2850
02:08:38,280 --> 02:08:45,100
Allerdings in allen anderen Cloud Plattformen ist es ähnlich langsam, wenn nicht sogar noch

2851
02:08:45,100 --> 02:08:46,100
langsamer.

2852
02:08:46,100 --> 02:08:50,100
Wir checken mal, ob wir alles richtig gemacht haben.

2853
02:08:50,100 --> 02:08:51,100
Nein.

2854
02:08:51,100 --> 02:08:52,100
Haben wir nicht.

2855
02:08:52,100 --> 02:08:53,100
Oh ne.

2856
02:08:53,100 --> 02:08:54,100
So.

2857
02:08:54,100 --> 02:08:55,100
This is secondary IP Range.

2858
02:08:55,100 --> 02:08:56,100
Ja.

2859
02:08:56,100 --> 02:08:57,100
Kaum macht man es richtig.

2860
02:08:57,100 --> 02:08:58,100
Ja.

2861
02:08:58,100 --> 02:08:59,100
Kaum macht man es richtig, dann wird es auch funktionieren.

2862
02:08:59,100 --> 02:09:00,100
Sag mal, ich habe es früher falsch gemacht.

2863
02:09:00,100 --> 02:09:14,320
Wie beschissen ist diese Visual Studio Code Extension eigentlich?

2864
02:09:14,320 --> 02:09:15,320
Jetzt weiß ich auch, warum die nur 2,5 Sterne von 5 hat.

2865
02:09:15,320 --> 02:09:16,320
Oder nur 2 von 5 Sterne.

2866
02:09:16,320 --> 02:09:17,320
Weil die einfach suckt.

2867
02:09:17,320 --> 02:09:18,320
Ich weiß nicht.

2868
02:09:18,320 --> 02:09:19,320
Ich weiß nicht.

2869
02:09:19,320 --> 02:09:20,320
Ich weiß nicht.

2870
02:09:20,320 --> 02:09:21,320
Ich weiß nicht.

2871
02:09:21,320 --> 02:09:22,320
Ich weiß nicht.

2872
02:09:22,320 --> 02:09:23,320
Ich weiß nicht.

2873
02:09:23,320 --> 02:09:24,320
Ich weiß nicht.

2874
02:09:24,320 --> 02:09:25,320
Ich weiß nicht.

2875
02:09:25,320 --> 02:09:26,320
Ich weiß nicht.

2876
02:09:26,320 --> 02:09:27,320
Ich weiß nicht.

2877
02:09:27,320 --> 02:09:28,320
Ich weiß nicht.

2878
02:09:28,320 --> 02:09:29,320
Ich weiß nicht.

2879
02:09:29,320 --> 02:09:30,320
Ich weiß nicht.

2880
02:09:30,320 --> 02:09:31,320
Ich weiß nicht.

2881
02:09:31,320 --> 02:09:32,320
Oh, was habe ich verkehrt gemacht?

2882
02:09:32,320 --> 02:09:33,320
Null.

2883
02:09:33,320 --> 02:09:35,940
Ok, Primary Network Default Cluster.

2884
02:09:35,940 --> 02:09:38,940
Ah, das habe ich falsch gemacht.

2885
02:09:38,940 --> 02:09:42,320
Ah ja, Self-Link, weil Google Logik Self-Link.

2886
02:09:42,320 --> 02:09:46,610
Das sieht schon besser aus.

2887
02:09:46,610 --> 02:09:50,540
So, und dann jetzt Glück haben.

2888
02:09:50,540 --> 02:09:53,440
Schlägt der mir vor, ein Kubernetes Cluster anzulegen?

2889
02:09:53,440 --> 02:09:58,380
Hier war der End Point, so.

2890
02:09:58,380 --> 02:10:01,820
Yes, und wie gesagt, Warnung, das nicht wundern.

2891
02:10:01,820 --> 02:10:04,900
Es dauert 4-5 Minuten oftmals, bis das Ganze erstellt ist.

2892
02:10:04,900 --> 02:10:09,060
Also nicht wundern, nicht zwischendurch abbrechen, das dauert einfach eine Weile.

2893
02:10:09,540 --> 02:10:14,900
Man kann dem ganzen Treiben im Webinterface zugucken, zumindest nach einer gewissen Weile.

2894
02:10:15,320 --> 02:10:19,380
Wenn wir in die Google Kubernetes Engine gehen, sieht man, okay, der Cluster ist schon da,

2895
02:10:19,920 --> 02:10:23,520
aber er ist noch am Professionieren und Node Numbers 1 stimmt auch nicht.

2896
02:10:23,520 --> 02:10:25,880
Das sind die initialen Nodes, die dann wieder gelöscht werden.

2897
02:10:26,720 --> 02:10:31,520
Bei der Gelegenheit würde ich euch empfehlen, werft mal einen Blick auf...

2898
02:10:31,520 --> 02:10:43,140
Alter, ich habe keine Push-Notification gekriegt.

2899
02:10:43,520 --> 02:10:46,480
Ich soll doch bitte Firmware-Update auf meinem Katzenbrunnen machen.

2900
02:10:46,580 --> 02:10:49,440
Dafür kriege ich Push-Notifications. Alter, geht mir nicht auf den Sack.

2901
02:10:50,840 --> 02:11:03,090
Das wird gleich ignored.

2902
02:11:04,930 --> 02:11:07,550
Und jetzt kommt noch der Weekly Cleaning Reminder.

2903
02:11:07,550 --> 02:11:20,130
Na gut, jetzt habe ich ganz vergessen, was ich sagen wollte, Leute.

2904
02:11:23,720 --> 02:11:26,820
Ja, das kann ein bisschen dauern, bis der Kubernetes Cluster angelegt ist.

2905
02:11:27,160 --> 02:11:28,740
Ja, aber wir sollten mal auf Billing gehen.

2906
02:11:29,420 --> 02:11:32,500
Und wir gucken uns die Quotas an.

2907
02:11:35,980 --> 02:11:44,920
Und da wird man gleich sehen, das dauert ein bisschen, bis das aktualisiert ist.

2908
02:11:45,600 --> 02:11:49,840
Und da wird man gleich sehen, dass der Speicherplatz verbraucht.

2909
02:11:50,620 --> 02:11:53,100
Das dauert manchmal ein bisschen, bis die Quotas aktualisiert sind.

2910
02:11:54,000 --> 02:11:55,820
Gehen wir mal hier, Total SSD.

2911
02:11:57,900 --> 02:11:59,560
Ist das das Richtige?

2912
02:11:59,560 --> 02:12:02,600
Ne, das ist nicht das Falsche.

2913
02:12:03,740 --> 02:12:04,260
SSD.

2914
02:12:04,380 --> 02:12:06,200
Hier, SSD.

2915
02:12:08,280 --> 02:12:09,820
SSD Total Storage.

2916
02:12:10,640 --> 02:12:13,040
Ja, da habe ich ein Limit von 250 Gig.

2917
02:12:13,780 --> 02:12:17,720
Und mein Kubernetes Cluster wird ein bisschen was brauchen.

2918
02:12:22,860 --> 02:12:24,820
Das braucht aber ein bisschen, bis das aktualisiert ist.

2919
02:12:24,900 --> 02:12:25,560
Manchmal nicht so schnell.

2920
02:12:37,500 --> 02:12:37,680
So.

2921
02:12:42,690 --> 02:12:46,410
Irgendwann sollte der Kubernetes Cluster fertig angelegt sein.

2922
02:12:49,300 --> 02:12:50,540
Wie gesagt, das dauert ein bisschen.

2923
02:12:52,220 --> 02:12:52,340
So.

2924
02:12:52,640 --> 02:12:54,540
Und irgendwann aktualisiert jetzt auch das Quota.

2925
02:12:54,540 --> 02:12:54,580
Ja.

2926
02:12:59,120 --> 02:13:01,480
Und dann wird er wieder angezeigt, dass er irgendwie 100 Gig oder so verbraucht hat.

2927
02:13:01,600 --> 02:13:02,100
Oder was auch immer.

2928
02:13:02,400 --> 02:13:02,720
Ne, Moment.

2929
02:13:02,800 --> 02:13:06,840
Der sollte mir gar nichts anzeigen, weil ich ja alle Nodes wieder lösche.

2930
02:13:07,460 --> 02:13:07,680
Null.

2931
02:13:08,000 --> 02:13:09,740
Ne, aktuell ist es sogar gut, dass da Null steht.

2932
02:13:12,280 --> 02:13:12,680
Ja.

2933
02:13:13,640 --> 02:13:15,220
Weil der löscht ja wieder alle Nodes.

2934
02:13:15,300 --> 02:13:19,060
Da dürfte nur, wenn überhaupt, kurz zwischenzeitlich mal 100 stehen.

2935
02:13:19,140 --> 02:13:20,120
Guck hier, jetzt steht 100 da.

2936
02:13:23,560 --> 02:13:24,600
Current Usage 100.

2937
02:13:27,950 --> 02:13:32,090
Weil standardmäßig ein Kubernetes Cluster, wenn man nichts explizit angibt,

2938
02:13:32,090 --> 02:13:34,090
ein Node 100 Gigabyte SSD speichert.

2939
02:13:34,370 --> 02:13:39,050
Der sollte der aber auch gleich wieder löschen, weil ich habe ihm ja gesagt,

2940
02:13:39,150 --> 02:13:42,690
hier, Delete, also Remove Default Node Pool.

2941
02:13:43,310 --> 02:13:43,430
So.

2942
02:13:43,530 --> 02:13:45,590
Während er anlegt, wir können ja eigentlich schon mal weitermachen

2943
02:13:45,590 --> 02:13:47,030
und wir können unseren Node Pool anlegen.

2944
02:13:49,120 --> 02:13:56,360
Nennen wir mal K8S Node Pool, Node Pool Punkt PF.

2945
02:13:57,260 --> 02:13:57,420
So.

2946
02:13:57,720 --> 02:14:02,020
Und da stellen wir jetzt ein, die ganzen Nodes von unserem Cluster.

2947
02:14:02,020 --> 02:14:05,660
Wie gesagt, ein Kubernetes Cluster besteht aus unterschiedlich vielen.

2948
02:14:05,680 --> 02:14:12,140
Die Nodes müssen nicht zwangsläufig alle die gleiche Hardware sein.

2949
02:14:12,540 --> 02:14:15,380
Das macht man ganz gerne mal, vor allem, wenn man das selbst aufbaut.

2950
02:14:15,520 --> 02:14:19,020
Aber ein Kubernetes Cluster kann aus unterschiedlichen Nodes bestehen.

2951
02:14:19,720 --> 02:14:24,280
Was eventuell auch ganz sinnvoll ist, wenn ihr zum Beispiel ein paar Anwendungen habt,

2952
02:14:24,400 --> 02:14:29,680
die viel Performance brauchen und ein paar sporadische Tasten und ein paar Low Performance Anwendungen,

2953
02:14:29,680 --> 02:14:34,680
wo man zum Beispiel auch damit leben kann, dass...

2954
02:14:35,680 --> 02:14:39,060
die erstmal eine Weile brauchen, bis sie starten und sowas in der Richtung.

2955
02:14:39,140 --> 02:14:41,140
Da kann man mehrere Node Pools machen.

2956
02:14:41,580 --> 02:14:44,640
Da muss man aber halt sagen, worauf was professioniert werden soll.

2957
02:14:45,000 --> 02:14:47,080
Das heißt, wir legen heute nur einen Default Node Pool an.

2958
02:14:47,160 --> 02:14:50,940
Und ich behaupte mal, das ist standardmäßig auch zum größten Teil so.

2959
02:14:51,100 --> 02:14:53,820
Ja, dass es ein Cluster gibt und ein Node Pool gibt.

2960
02:14:54,300 --> 02:15:00,720
Aber es ist tatsächlich ganz praktisch, dass ich den Node Pool unabhängig einstellen kann vom Cluster.

2961
02:15:01,480 --> 02:15:04,620
Nämlich zum Beispiel kann ich ihn auch kleiner einstellen, als ich will.

2962
02:15:04,800 --> 02:15:05,640
Und dementsprechend...

2963
02:15:05,640 --> 02:15:06,280
kann ich ihm Geld sparen.

2964
02:15:06,520 --> 02:15:07,860
Also, mal mal Resource.

2965
02:15:09,240 --> 02:15:11,880
Google Container Node Pool.

2966
02:15:15,340 --> 02:15:15,900
Heißt...

2967
02:15:15,900 --> 02:15:17,180
Wie habe ich den Cluster genannt?

2968
02:15:18,300 --> 02:15:23,560
Primary Pool oder wie soll ich das Ding nennen?

2969
02:15:27,850 --> 02:15:29,750
Pool. Ich nenne es einfach Pool. Fertig.

2970
02:15:33,860 --> 02:15:36,980
So, das Ding kriegt wieder einen Namen.

2971
02:15:37,620 --> 02:15:42,830
Dann muss man natürlich sagen, für welchen Cluster der Pool ist.

2972
02:15:43,930 --> 02:15:46,150
Für unseren Primary Kubernetes Cluster.

2973
02:15:47,030 --> 02:15:51,530
Wir sind mal großzügig und sagen Node Count 3.

2974
02:15:52,030 --> 02:15:53,810
Das funktioniert so standardmäßig nicht.

2975
02:15:53,910 --> 02:15:56,170
Wie gesagt, ich habe zu wenig Festplattenplatz.

2976
02:15:56,310 --> 02:15:58,090
Ihr seht, fünf Minuten, das Ding ist immer noch nicht angelegt.

2977
02:15:58,850 --> 02:16:00,050
Ich habe zu wenig Festplattenplatz.

2978
02:16:00,530 --> 02:16:04,850
Deswegen muss ich jetzt noch eine Node Config angeben.

2979
02:16:05,590 --> 02:16:08,930
Und zwar unter anderem Disk Size Gigabyte.

2980
02:16:09,010 --> 02:16:09,630
Da machen wir 40.

2981
02:16:10,030 --> 02:16:12,590
Das heißt, er legt drei Nodes an.

2982
02:16:12,590 --> 02:16:14,530
Mit jeweils 40 Gigabyte SSD Platz.

2983
02:16:14,690 --> 02:16:18,450
Heißt im Endeffekt 120G SSD Speicher.

2984
02:16:19,210 --> 02:16:22,370
Das passt ohne Probleme in meinen Quota rein.

2985
02:16:22,470 --> 02:16:22,990
Gar kein Ding.

2986
02:16:25,100 --> 02:16:28,260
So, jetzt können wir noch ein paar andere Sachen angeben.

2987
02:16:31,480 --> 02:16:35,280
Nämlich, dass das Ding sich Auto-Upgraden soll und automatisch reparieren soll.

2988
02:16:35,340 --> 02:16:36,360
Habe ich auch aus dem Tutorial.

2989
02:16:36,480 --> 02:16:38,840
Keine Ahnung, was es genau macht.

2990
02:16:39,720 --> 02:16:43,240
Aber automatisches Reparieren und nachts nicht angerufen werden,

2991
02:16:43,300 --> 02:16:45,120
ist prinzipiell schon mal ganz nice.

2992
02:16:46,620 --> 02:16:52,580
Service-Account können wir angeben in der Node Config muss man das, glaube ich, machen.

2993
02:16:52,660 --> 02:16:57,480
Service-Account können wir den Kubernetes-Account angeben,

2994
02:16:57,560 --> 02:16:59,460
den wir vorhin angelegt haben.

2995
02:16:59,560 --> 02:17:04,510
So, Machine-Type für die Nodes.

2996
02:17:04,610 --> 02:17:05,890
Wir wollen es möglichst billig haben.

2997
02:17:05,990 --> 02:17:10,130
E2-Small, das ist das, was irgendwie 15 Euro oder so im Monat kostet.

2998
02:17:10,230 --> 02:17:20,340
Also im Prinzip kostet uns das gesamte Setup irgendwas um 70 Euro im Monat oder so.

2999
02:17:20,520 --> 02:17:24,580
Also da sieht man, so ein Managed-Kubernetes-Cluster bei dem großen Cloud-Anbieter

3000
02:17:24,680 --> 02:17:27,280
muss nicht zwangsläufig günstig sein.

3001
02:17:27,380 --> 02:17:31,720
Ich würde mal sagen, so ungefähr 70 Euro im Monat wird uns der ganze Spaß kosten.

3002
02:17:31,820 --> 02:17:36,880
Ohne jetzt großartig Storage-Preise und Traffic-Preise und sowas dabei.

3003
02:17:36,980 --> 02:17:38,580
Also das kann schon recht teuer werden.

3004
02:17:38,680 --> 02:17:41,180
Also wer auf die Idee kommt, Cloud ist immer billiger,

3005
02:17:41,280 --> 02:17:43,620
würde ich so pauschal nicht unterschreiben.

3006
02:17:43,720 --> 02:17:51,870
So, und noch was aus dem Tutorial, wo ich auch nicht weiß, was das macht.

3007
02:17:51,970 --> 02:17:55,380
Das ist irgendwelche Berechtigungen.

3008
02:17:55,380 --> 02:18:03,990
Worauf die Nodes zugreifen dürfen.

3009
02:18:04,090 --> 02:18:06,890
Das war's. Mehr brauchen wir nicht für unseren Kubernetes-Cluster.

3010
02:18:06,990 --> 02:18:10,790
Für den Node-Pool, wenn wir... Alter, wie lange brauchen das bitte zum Anlegen?

3011
02:18:10,890 --> 02:18:17,170
Das ist ja Resident Sleeper, Mann.

3012
02:18:17,270 --> 02:18:21,610
Wie gesagt, ich habe euch gewarnt, das ist ultra lahm teilweise.

3013
02:18:21,710 --> 02:18:30,400
Also Kubernetes-Cluster erzeugen, da drehst du teilweise 10 Minuten Däumchen.

3014
02:18:30,500 --> 02:18:39,780
Der ist wirklich schon ins Bett ge... Still creating.

3015
02:18:39,880 --> 02:18:50,780
Alles Arbeitszeit, genau, so sieht es aus.

3016
02:18:50,920 --> 02:18:53,880
Eats Money, alles abbrechen, na klar.

3017
02:18:53,980 --> 02:18:59,950
Na, ich werde garantiert einstechen, bevor ich ein Kubernetes-Cluster aufbaue.

3018
02:19:00,050 --> 02:19:04,050
Erst mal schön Home Office startet, einstechen, Zeit eintragen

3019
02:19:04,150 --> 02:19:06,550
und dann Kubernetes aufbauen.

3020
02:19:06,650 --> 02:19:13,100
Nicht vorher.

3021
02:19:13,200 --> 02:19:16,700
Also ich habe das vorhin noch mal ausprobiert, da hat es nur 5 Minuten gebraucht.

3022
02:19:16,800 --> 02:19:23,000
Aber es könnte sein, dass in einem neuen Projekt das Ganze langsamer geht.

3023
02:19:23,100 --> 02:19:25,400
Ach, guck mal, er hat den Node mittlerweile gelöscht.

3024
02:19:25,500 --> 02:19:27,600
Das heißt, er müsste fast durch sein.

3025
02:19:27,700 --> 02:19:32,200
Er ist fertig, easy, yeah, nice.

3026
02:19:32,300 --> 02:19:34,800
Hat ja nur 9 Minuten 30 gebraucht.

3027
02:19:34,900 --> 02:19:37,540
So, mein Kubernetes-Cluster ist running.

3028
02:19:37,640 --> 02:19:40,980
Aktuell total unnütz, Node-Number 0, total CPU...

3029
02:19:41,080 --> 02:19:43,700
Also ein Kubernetes-Cluster hat quasi eine Hülle ohne Nodes.

3030
02:19:43,800 --> 02:19:45,380
Das bringt mir natürlich nichts.

3031
02:19:45,480 --> 02:19:49,680
Das heißt, jetzt applye ich mal noch mal Terraform mit meinem Node-Pool.

3032
02:19:49,780 --> 02:19:51,600
Und jetzt sollte ich ein Kubernetes-Cluster bekommen,

3033
02:19:51,700 --> 02:19:57,400
wenn ich alles richtig gemacht habe, mit drei Nodes, jeweils 40 Gigabyte SSD-Speicher,

3034
02:19:57,400 --> 02:19:59,960
und ja, jetzt nicht die fetteste VM.

3035
02:20:00,060 --> 02:20:02,100
Ich glaube, ein CPU-Core pro Node.

3036
02:20:02,200 --> 02:20:03,300
Aber zum Testen reicht das, ja.

3037
02:20:03,400 --> 02:20:04,800
So, Terraform apply.

3038
02:20:04,900 --> 02:20:08,560
Mal gucken, was Terraform anzeigt, was es machen möchte.

3039
02:20:08,660 --> 02:20:11,740
Schadet nichts, sich das immer mal anzugucken.

3040
02:20:11,840 --> 02:20:15,100
Fuck, Alter, wo ist das Problem?

3041
02:20:15,200 --> 02:20:18,700
Incorrect attribute value type.

3042
02:20:18,800 --> 02:20:19,540
Cool.

3043
02:20:19,640 --> 02:20:21,560
Cluster, Container-Cluster-Primary.

3044
02:20:21,660 --> 02:20:26,060
Habe ich wieder Self-Link oder was vergessen?

3045
02:20:26,160 --> 02:20:27,200
Cluster.

3046
02:20:27,200 --> 02:20:28,400
Das muss man machen.

3047
02:20:28,500 --> 02:20:30,200
Cluster to create a Node-Pool for.

3048
02:20:30,300 --> 02:20:33,300
Cluster must be present in location...

3049
02:20:33,400 --> 02:20:36,600
Okay, Self-Link vielleicht.

3050
02:20:36,700 --> 02:20:37,960
Gucken wir mal, ob das jetzt funktioniert.

3051
02:20:38,060 --> 02:20:43,460
Also es ist nicht unbedingt immer alles so hundertprozentig klar,

3052
02:20:43,560 --> 02:20:45,200
was man da einstellen muss.

3053
02:20:45,300 --> 02:20:46,240
Deswegen Fall...

3054
02:20:46,340 --> 02:20:48,800
Alter.

3055
02:20:48,900 --> 02:20:54,330
ID.

3056
02:20:54,430 --> 02:20:58,630
Das heißt, falls ihr bei eurem Arbeitgeber so was aufsetzen müsst,

3057
02:20:58,730 --> 02:21:00,930
lasst euch auf jeden Fall eine Spielumgebung...

3058
02:21:00,930 --> 02:21:03,930
geben, um da ein bisschen rumzuprobieren.

3059
02:21:04,030 --> 02:21:06,130
Das Schöne an dieser Terraform-Geschichte ist,

3060
02:21:06,230 --> 02:21:08,630
wenn es einmal angelegt ist hier und es funktioniert,

3061
02:21:08,730 --> 02:21:10,430
dann funktioniert es immer reproduzierbar.

3062
02:21:10,530 --> 02:21:13,230
Und das ist ja auch eines der großen Selling Points,

3063
02:21:13,330 --> 02:21:14,230
wie man dann so schön sagt,

3064
02:21:14,330 --> 02:21:17,130
für das du es reproduzierbar immer wieder so aufbauen kannst.

3065
02:21:17,230 --> 02:21:19,430
Okay, das war jetzt anscheinend richtig mit der ID.

3066
02:21:19,530 --> 02:21:21,530
Es wäre natürlich sinnvoll, wenn hier stehen würde,

3067
02:21:21,630 --> 02:21:24,830
the Cluster ID to create a Node-Pool for.

3068
02:21:24,930 --> 02:21:31,150
Aber nein, obviously muss da ID rein,

3069
02:21:31,250 --> 02:21:32,750
so wie man das selbstverständlich

3070
02:21:32,750 --> 02:21:34,550
ganz einfach erkennen konnte.

3071
02:21:34,650 --> 02:21:37,050
So, jetzt wird eine Node-Pool erstellt.

3072
02:21:37,150 --> 02:21:40,150
Der Node-Pool zu erstellen dauert noch einmal fünf Minuten.

3073
02:21:40,250 --> 02:21:42,850
Das ist alles nicht so schnell.

3074
02:21:42,950 --> 02:21:44,050
Wenn wir Glück haben,

3075
02:21:44,150 --> 02:21:47,050
hat unser Quota mittlerweile wieder aktualisiert auf null runter.

3076
02:21:47,150 --> 02:21:48,850
Nee, hat noch nicht aktualisiert.

3077
02:21:48,950 --> 02:21:50,050
Ah, gut.

3078
02:21:50,150 --> 02:21:51,150
Debated.

3079
02:21:51,250 --> 02:21:55,360
So, also Leute, ich habe ungefähr noch eine halbe Stunde Zeit.

3080
02:21:55,460 --> 02:21:56,960
Ich zeige euch jetzt noch eine coole Sache.

3081
02:21:57,060 --> 02:21:58,860
Ach ja, Frage, Chat.

3082
02:21:58,960 --> 02:22:01,960
Soll ich dieses Repo auf GitHub hochpushen,

3083
02:22:02,060 --> 02:22:03,960
dass ihr abgucken könnt?

3084
02:22:04,160 --> 02:22:12,980
Du, du, du.

3085
02:22:13,080 --> 02:22:15,980
Trinken, sehr gut, mache ich jetzt.

3086
02:22:16,080 --> 02:22:20,700
So, okay.

3087
02:22:20,800 --> 02:22:23,700
Dann machen wir schon mal ein GitHub.

3088
02:22:23,800 --> 02:22:26,700
Ah, Moment, da müssen wir auf Firefox aufmachen.

3089
02:22:26,800 --> 02:22:28,700
Auf Firefox sind wir eingeloggt.

3090
02:22:28,800 --> 02:22:30,700
GitHub.

3091
02:22:30,800 --> 02:22:34,390
GitHub.

3092
02:22:34,490 --> 02:22:36,390
Repo, New Repo.

3093
02:22:36,490 --> 02:22:40,390
In der Pfeife der Orga natürlich.

3094
02:22:40,490 --> 02:22:42,390
Ah, komm, wo bloß?

3095
02:22:42,490 --> 02:22:45,090
K8SG...

3096
02:22:45,090 --> 02:22:47,290
GCP...

3097
02:22:47,390 --> 02:22:50,700
Ja, nennen wir es mal so.

3098
02:22:50,800 --> 02:22:52,500
Wie ist das so im neuen Job?

3099
02:22:52,600 --> 02:22:53,700
Sehr viele Abkürzungen

3100
02:22:53,800 --> 02:22:56,700
und ich blicke noch bei ganz vielen Sachen nicht durch.

3101
02:22:56,800 --> 02:22:57,800
Keine mit Zugangsdaten.

3102
02:22:57,900 --> 02:23:03,780
Ja, ja, natürlich.

3103
02:23:03,880 --> 02:23:05,580
Ja.

3104
02:23:05,680 --> 02:23:07,480
Aber seit Ende letzter Woche ist besser.

3105
02:23:07,580 --> 02:23:10,180
Ich habe jetzt wenigstens was, was ich machen kann.

3106
02:23:10,280 --> 02:23:14,910
SSH-Login geht übrigens immer noch nicht nach zwei Wochen.

3107
02:23:15,010 --> 02:23:16,710
Wie viel der Config kannst du wiederverwenden,

3108
02:23:16,810 --> 02:23:18,510
wenn man den Hoster wechselt?

3109
02:23:18,610 --> 02:23:20,110
Ehrliche Meinung, ehrliche Antwort?

3110
02:23:20,110 --> 02:23:21,110
Gar nichts.

3111
02:23:21,210 --> 02:23:24,110
Dafür ist Terraform nicht gedacht.

3112
02:23:24,210 --> 02:23:27,110
Terraform abstrahiert nicht zwischen Cloud-Anbietern,

3113
02:23:27,210 --> 02:23:32,110
sondern macht den Aufbau bei einem Cloud-Anbieter reproduzierbar.

3114
02:23:32,210 --> 02:23:34,110
Ja, und mit State-Tracking und alles.

3115
02:23:34,210 --> 02:23:36,110
Wenn du jetzt umziehen willst nach Azure,

3116
02:23:36,210 --> 02:23:38,110
ist die Config komplett anders.

3117
02:23:38,210 --> 02:23:42,110
Ich meine, allein schon, dass du hier oben drinnen stehen hast,

3118
02:23:42,210 --> 02:23:44,110
Resource Google-Container-Node-Pool.

3119
02:23:44,210 --> 02:23:46,110
Das heißt, bei Azure bestimmt nicht so

3120
02:23:46,210 --> 02:23:48,310
und hat bestimmt noch andere Settings.

3121
02:23:48,310 --> 02:23:50,310
Nichts kannst du davor verwenden.

3122
02:23:50,410 --> 02:23:51,310
Gar nichts.

3123
02:23:51,410 --> 02:23:55,540
No pass.

3124
02:23:55,640 --> 02:24:06,260
Haben wir überhaupt schon ein Repo angelegt?

3125
02:24:06,360 --> 02:24:11,460
Terraform-Git-Ignore.

3126
02:24:11,560 --> 02:24:14,460
Gibt es auch bestimmt ein gutes Git-Ignore-Template.

3127
02:24:14,560 --> 02:24:16,460
Wobei, wir haben eh kein State.

3128
02:24:16,560 --> 02:24:18,460
Vim-Git-Ignore.

3129
02:24:18,560 --> 02:24:23,670
Status-Git-Init.

3130
02:24:23,770 --> 02:24:25,670
Git-Status-Terraform.

3131
02:24:25,770 --> 02:24:26,670
Ja, ja, okay.

3132
02:24:26,770 --> 02:24:28,670
Git-Add.

3133
02:24:28,770 --> 02:24:30,670
Status, ja, okay.

3134
02:24:30,770 --> 02:24:32,570
Der checkt den ganzen Müll nicht mit ein.

3135
02:24:32,670 --> 02:24:33,570
Alles gut.

3136
02:24:33,670 --> 02:24:37,670
Git-Remote-Add.

3137
02:24:37,770 --> 02:24:38,670
GitHub.

3138
02:24:38,770 --> 02:24:39,670
Boom.

3139
02:24:39,770 --> 02:24:41,670
Okay.

3140
02:24:41,770 --> 02:24:44,980
Google-to-Azure-Converter.

3141
02:24:45,080 --> 02:24:45,980
Also, ich könnte mir vorstellen,

3142
02:24:46,080 --> 02:24:48,980
dass es tatsächlich Konvertierungsprojekte gibt.

3143
02:24:49,080 --> 02:24:50,980
So eine Cloud-Infrastruktur,

3144
02:24:51,080 --> 02:24:52,980
Terraform-Config und eine andere.

3145
02:24:53,080 --> 02:24:53,980
Wie gut das funktioniert,

3146
02:24:54,080 --> 02:24:55,980
ich habe da meine Zweifel.

3147
02:24:56,080 --> 02:24:58,980
Moment, ist er fertig?

3148
02:24:59,080 --> 02:24:59,980
Terraform-Stells?

3149
02:25:00,080 --> 02:25:00,980
Ja, ist fertig.

3150
02:25:01,080 --> 02:25:01,980
Easy, hat funktioniert.

3151
02:25:02,080 --> 02:25:04,080
Also, unser Node-Pool ist fertig.

3152
02:25:04,180 --> 02:25:04,980
Okay.

3153
02:25:05,080 --> 02:25:05,980
Also, unser Node-Pool ist angelegt.

3154
02:25:06,080 --> 02:25:08,980
Wir haben einen Kubernetes-Cluster in der Google Cloud am Start

3155
02:25:09,080 --> 02:25:14,980
mit 3 Nodes, 6 CPUs und 6 GB RAM.

3156
02:25:15,080 --> 02:25:16,980
Wir können jetzt mal kurz in die Übersicht reingucken.

3157
02:25:17,080 --> 02:25:19,980
Wir sehen, okay, wir haben sogar ein Kubernetes-Upgrade available.

3158
02:25:20,080 --> 02:25:21,980
Was haben wir für ein Upgrade available?

3159
02:25:22,080 --> 02:25:24,980
Wir können auf den Rapid-Channel gehen.

3160
02:25:25,080 --> 02:25:26,980
Dann kriegen wir diese Dinger hier zur Auswahl.

3161
02:25:27,080 --> 02:25:28,980
Wir können auf den Regular-Channel gehen.

3162
02:25:29,080 --> 02:25:30,980
Da kriegen wir die hier zur Auswahl.

3163
02:25:31,080 --> 02:25:32,980
Oder wir gehen auf den Stable-Channel.

3164
02:25:33,080 --> 02:25:35,880
Dann gibt es die 25 noch gar nicht.

3165
02:25:35,980 --> 02:25:38,260
Verstehe.

3166
02:25:38,360 --> 02:25:43,810
Tja, aber wir machen jetzt keine Updates.

3167
02:25:43,910 --> 02:25:45,810
Bist du eigentlich als typischer Programmierer,

3168
02:25:45,910 --> 02:25:47,810
der eigentlich nur programmiert?

3169
02:25:47,910 --> 02:25:48,810
Ich?

3170
02:25:48,910 --> 02:25:51,810
Nee, ich arbeite nicht als Software-Entwickler.

3171
02:25:51,910 --> 02:25:53,810
Ich mache was ganz anderes.

3172
02:25:53,910 --> 02:25:55,810
Ich mache eher sowas hier.

3173
02:25:55,910 --> 02:25:58,810
Also, beim alten Arbeitgeber war ich DevOps-Engineer,

3174
02:25:58,910 --> 02:26:01,810
beim neuen bin ich Senior Linux-Engineer.

3175
02:26:01,910 --> 02:26:03,810
Ich bin nicht, ich bin, ich war noch nie

3176
02:26:03,910 --> 02:26:05,810
hauptberuflicher Software-Entwickler

3177
02:26:05,910 --> 02:26:07,810
und habe ich eigentlich auch gar nicht vor.

3178
02:26:08,010 --> 02:26:10,810
Ich weiß auch nicht, ob mein Programmier-Stelz

3179
02:26:10,910 --> 02:26:13,810
dafür reicht, ob ich das machen könnte überhaupt.

3180
02:26:13,910 --> 02:26:15,810
Habe ich aber ehrlich gesagt überhaupt keinen Bock drauf.

3181
02:26:15,910 --> 02:26:17,810
Ich finde den Bereich, wo ich jetzt bin,

3182
02:26:17,910 --> 02:26:19,810
ist eigentlich genau das Richtige.

3183
02:26:19,910 --> 02:26:21,810
Und gerade die ganze Cloud-Geschichte ist was,

3184
02:26:21,910 --> 02:26:26,470
was mir auch echt Bock macht.

3185
02:26:26,570 --> 02:26:29,470
Und was wir sehen, wir haben kein external Endpoint

3186
02:26:29,570 --> 02:26:30,470
vom Kubernetes-Cluster.

3187
02:26:30,570 --> 02:26:33,470
Das heißt, das ist nicht erreichbar aus dem Internet.

3188
02:26:33,570 --> 02:26:37,470
So, und jetzt zeige ich euch noch mal was sehr Nices.

3189
02:26:37,570 --> 02:26:43,760
Naja, im DevOps-Bereich, du kannst aus mehreren Ecken

3190
02:26:43,860 --> 02:26:46,660
kommen, also klassischer DevOps bedeutet ja,

3191
02:26:46,760 --> 02:26:50,660
dass Entwickler sich auch ein bisschen über den Tellerrand

3192
02:26:50,760 --> 02:26:53,660
hinausschauen und Sachen, die sie entwickelt haben,

3193
02:26:53,760 --> 02:26:55,660
auch selbst betreiben.

3194
02:26:55,760 --> 02:26:57,660
Das ist so das, wo DevOps eigentlich herkommt.

3195
02:26:57,760 --> 02:27:01,660
Mittlerweile hat sich dieses Wort eher, eher selbst verflüchtigt,

3196
02:27:01,760 --> 02:27:04,660
dass es quasi ganz eigene DevOps-Teams gibt,

3197
02:27:04,760 --> 02:27:13,620
beziehungsweise auch ehemalige Admins und Plattform-Architekten.

3198
02:27:13,720 --> 02:27:15,620
Und hast du nicht gesehen,

3199
02:27:15,720 --> 02:27:19,520
die sich um Tool-Bereitstellung, Tool-Verwaltung kümmern

3200
02:27:19,620 --> 02:27:23,520
und man da irgendwie so den Stempel DevOps draufdrückt.

3201
02:27:23,620 --> 02:27:27,520
Ja, also das hat sich so ein bisschen verflüchtigt, das Wort.

3202
02:27:27,620 --> 02:27:31,520
Also ein bisschen selbstständig gemacht, das ist das DevOps-Wort.

3203
02:27:31,620 --> 02:27:34,520
Das heißt, nur wenn du, du brauchst keinen großen Hintergrund

3204
02:27:34,620 --> 02:27:35,520
in Software-Entwicklung.

3205
02:27:35,620 --> 02:27:38,520
Es ist allerdings von Vorteil meiner Ansicht nach,

3206
02:27:38,620 --> 02:27:41,520
dass man ein bisschen Ahnung von Software-Entwicklung hat

3207
02:27:41,620 --> 02:27:43,520
im DevOps-Bereich.

3208
02:27:43,520 --> 02:27:47,420
Oftmals darum, Bild-Tools bereitzustellen,

3209
02:27:47,520 --> 02:27:50,420
Bild-Prozesse bereitzustellen für Software

3210
02:27:50,520 --> 02:27:53,420
oder Tools für Entwickler bereitzustellen

3211
02:27:53,520 --> 02:27:57,420
oder irgendwelche Continuous Delivery, Continuous Integration,

3212
02:27:57,520 --> 02:27:59,420
Build-Sachen zu bauen.

3213
02:27:59,520 --> 02:28:01,420
Das heißt, es ist nicht verkehrt, sich ein bisschen auch

3214
02:28:01,520 --> 02:28:03,420
in die Entwickler reinversetzen zu können.

3215
02:28:03,520 --> 02:28:05,420
Aber du musst jetzt vorher, du musst jetzt vorher nicht irgendwie

3216
02:28:05,520 --> 02:28:07,420
Hauptberuf für Software-Entwickler gearbeitet haben,

3217
02:28:07,520 --> 02:28:09,420
um heute in den DevOps-Bereich reinzukommen.

3218
02:28:09,520 --> 02:28:11,420
Weil DevOps heute quasi was Eigenständiges ist.

3219
02:28:11,520 --> 02:28:13,420
Es hat sich quasi,

3220
02:28:13,620 --> 02:28:19,160
verselbstständigt.

3221
02:28:19,260 --> 02:28:21,160
Ja, das kommt, ja, das stimmt.

3222
02:28:21,260 --> 02:28:23,160
Na, komm, jeder Admin, der was auf sich hält,

3223
02:28:23,260 --> 02:28:25,160
nennt sich doch heute auch DevOps-Engineer.

3224
02:28:25,260 --> 02:28:27,160
Guck mich an.

3225
02:28:27,260 --> 02:28:33,800
Ist doch fast schon normal.

3226
02:28:33,900 --> 02:28:35,800
Deswegen habe ich ja auch gerade gesagt, wo es herkommt

3227
02:28:35,900 --> 02:28:38,800
und was man heute zum größten Teil darunter versteht.

3228
02:28:39,900 --> 02:28:42,800
Herkommt, habe ich ja gerade gesagt, eher aus dem Software-Entwicklungsbereich,

3229
02:28:42,900 --> 02:28:44,800
dass dort die Software, die man programmiert hat,

3230
02:28:44,900 --> 02:28:46,800
auch selbst verwaltet, selbst betrieben wird.

3231
02:28:46,900 --> 02:28:49,800
Dass man sich auch ein bisschen um Operations kümmert.

3232
02:28:49,900 --> 02:28:51,800
Dass man quasi ein Dev ist,

3233
02:28:51,900 --> 02:28:53,700
die halt die Operations macht.

3234
02:28:53,800 --> 02:28:56,700
Aber wird ja mittlerweile im praktischen Alltag eher,

3235
02:28:56,800 --> 02:28:58,700
wurde wie gesagt, das ist ja eher,

3236
02:28:58,800 --> 02:29:00,700
hat sich ja verselbstständigt das Wort,

3237
02:29:00,800 --> 02:29:02,700
dass es jetzt auch eigene DevOps-Teams und sowas gibt.

3238
02:29:12,430 --> 02:29:14,330
Also du stellst die programmierte Software bereit

3239
02:29:14,430 --> 02:29:17,330
und schaust, dass die auf dem Server oder so läuft oder so.

3240
02:29:17,430 --> 02:29:23,330
Ja, also es ist jetzt vielleicht nicht ganz so geschliffen formuliert,

3241
02:29:23,430 --> 02:29:26,330
aber das ist auf jeden Fall Teil dessen,

3242
02:29:26,430 --> 02:29:29,330
was in vielen DevOps-Teams gemacht wird.

3243
02:29:29,330 --> 02:29:33,230
Du schaust, dass es automatisierte Build-Prozesse gibt für die Software.

3244
02:29:33,330 --> 02:29:37,230
Du schaust, dass es beispielsweise auch sowas gibt wie automatisierte Tests,

3245
02:29:37,330 --> 02:29:45,230
automatisierte Build-Workflows, automatische Handling von Pull-Requests.

3246
02:29:45,330 --> 02:29:48,230
Also zum Beispiel, wenn ein Pull-Request erstellt wird,

3247
02:29:48,330 --> 02:29:50,230
dass eine Testumgebung erstellt wird,

3248
02:29:50,330 --> 02:29:52,230
dass der Pull-Request da drin nochmal temporär gemerged wird,

3249
02:29:52,330 --> 02:29:54,230
Tests durchgeführt wird,

3250
02:29:54,330 --> 02:29:57,230
dann, dass es ein Bot gibt, der den Pull-Request reinschreibt.

3251
02:29:57,330 --> 02:29:59,230
Jawohl, Tests sind erfolgreich gelaufen.

3252
02:29:59,230 --> 02:30:01,130
Das ist auch immer sowas in der Richtung,

3253
02:30:01,230 --> 02:30:04,130
also automatische Build-Pipelines.

3254
02:30:04,230 --> 02:30:07,130
Und letztendlich gehört auch oftmals mit dazu,

3255
02:30:07,230 --> 02:30:10,130
dass das, was gebaut wurde, dann deployed wird am Ende.

3256
02:30:10,230 --> 02:30:15,130
Also das heißt ja nicht umsonst Continuous Integration und Continuous Delivery.

3257
02:30:15,230 --> 02:30:20,130
Und der Continuous Delivery, das CD, wo das CD steht,

3258
02:30:20,230 --> 02:30:22,130
wie gesagt Continuous Delivery,

3259
02:30:22,230 --> 02:30:26,130
das ist das, was man allgemein unter Deployment quasi versteht.

3260
02:30:26,230 --> 02:30:29,130
Also Continuous Integration,

3261
02:30:29,230 --> 02:30:32,030
du fügst permanent neue,

3262
02:30:32,130 --> 02:30:35,030
du nimmst Pull-Requests, fügst permanent neue Features hinzu,

3263
02:30:35,130 --> 02:30:39,030
möglichst schnelle Iterationen, wie man das so schön nennt,

3264
02:30:39,130 --> 02:30:44,030
und baust das, baust neue Versionen und die gebauten Versionen deployst du dann

3265
02:30:44,130 --> 02:30:47,030
und das ist der Continuous Delivery Teil.

3266
02:30:47,130 --> 02:30:51,180
Es ist alles ein bisschen schwammig.

3267
02:30:51,280 --> 02:30:53,180
Ich kann euch das auch nicht besser erklären.

3268
02:30:53,280 --> 02:30:57,180
Außerdem verstehen auch viele Unternehmen alle wieder ein bisschen was anderes darunter.

3269
02:30:57,280 --> 02:31:03,900
Und ja, ja, das stimmt schon.

3270
02:31:04,100 --> 02:31:05,900
Man muss sich, je nachdem, wo du mal liest,

3271
02:31:06,000 --> 02:31:08,900
muss man sich natürlich nach dem richten, was gewollt ist.

3272
02:31:09,000 --> 02:31:11,900
Ich habe aktuell auch meine Probleme mit meinem Windows Notebook

3273
02:31:12,000 --> 02:31:14,900
und bin schon am überlegen, wie ich mich am besten irgendwie durchtunnel,

3274
02:31:15,000 --> 02:31:16,900
ohne dass es illegal wird.

3275
02:31:17,000 --> 02:31:19,900
Also insofern, ja.

3276
02:31:20,000 --> 02:31:21,900
Ja, also ich wollte euch jetzt ja noch was zeigen.

3277
02:31:22,000 --> 02:31:23,900
Wie gesagt, ich habe noch 20 Minuten Zeit.

3278
02:31:24,000 --> 02:31:25,900
Ich zeige euch jetzt noch was wirklich sehr Nices.

3279
02:31:26,000 --> 02:31:27,900
Wir pushen, wir pushen das Ganze erstmal.

3280
02:31:28,000 --> 02:31:31,900
Dieses Inet-Skript könnt ihr eigentlich vergessen.

3281
02:31:31,900 --> 02:31:36,800
Git, Commit, warte mal, Add.

3282
02:31:36,900 --> 02:31:37,800
Haben wir schon geadded?

3283
02:31:37,900 --> 02:31:38,800
Add.

3284
02:31:38,900 --> 02:31:41,800
Git, Commit, minus A, minus M, Inet.

3285
02:31:41,900 --> 02:31:47,800
Git, Push, Push, GitHub, Master.

3286
02:31:47,900 --> 02:31:48,800
Oh, Master.

3287
02:31:48,900 --> 02:31:51,800
Leute, bitte nicht Twitter Bescheid sagen.

3288
02:31:51,900 --> 02:31:59,800
So, und jetzt gehen wir mal auf GitHub und in meinem Repo ist es drinne.

3289
02:31:59,800 --> 02:32:02,700
Also falls sich jemand angucken will, was ich heute fabriziert habe,

3290
02:32:02,800 --> 02:32:03,700
dann kann er sich das hier angucken.

3291
02:32:03,800 --> 02:32:05,700
Wobblos, K8S, GCP.

3292
02:32:05,800 --> 02:32:07,700
Es ist noch nicht ganz fertig.

3293
02:32:07,800 --> 02:32:09,700
Ich kann noch ein bisschen Werbung machen für den Stream,

3294
02:32:09,800 --> 02:32:11,700
beziehungsweise auch vielleicht für meinen YouTube-Channel.

3295
02:32:11,800 --> 02:32:15,700
Sie können ja mal bei mir vorbeigucken auf YouTube, auf Twitter und hier.

3296
02:32:15,800 --> 02:32:19,700
Followen, wenn es euch gefällt, auf Twitch.

3297
02:32:19,800 --> 02:32:23,700
Denn wir machen die nächsten Tage das Projekt noch ein bisschen weiter.

3298
02:32:23,800 --> 02:32:28,700
Das Ziel ist ja, dass wir am Ende einen funktionsfähigen Kubernetes-Cluster haben.

3299
02:32:28,700 --> 02:32:33,600
In der Google Cloud, auf dem wir auch zwei Demo-Anwendungen deployen.

3300
02:32:33,700 --> 02:32:37,600
Auch public zugänglich, also ihr könnt dann im Internet auch drauf.

3301
02:32:37,700 --> 02:32:42,600
Dass wir dann Zertifikatsmanagement dabei machen, automatisches Deployment drauf machen.

3302
02:32:42,700 --> 02:32:44,600
Und das eben ordentlich einrichten.

3303
02:32:44,700 --> 02:32:52,600
Und das Ganze auch Security-technisch mit verschlüsselter Kommunikation im Cluster mit einem Service-Mesh aufbauen.

3304
02:32:52,700 --> 02:32:55,600
Weil das aktuell gerade so der neueste Shit ist.

3305
02:32:55,700 --> 02:32:56,600
Oh, guck mal.

3306
02:32:56,600 --> 02:32:59,500
Ich habe meinen Terraform-Log auch noch gepusht.

3307
02:32:59,600 --> 02:33:01,500
Ist das gut oder schlecht?

3308
02:33:01,600 --> 02:33:03,500
Ist wahrscheinlich gar nicht so wild.

3309
02:33:03,600 --> 02:33:12,430
Dann sollte man das Terraform-Log einchecken oder nicht?

3310
02:33:12,530 --> 02:33:19,090
Da ist auf jeden Fall drinne die Version und sowas sind da geloggt.

3311
02:33:19,190 --> 02:33:23,090
Ich weiß jetzt nicht, ob man das normalerweise mit eincheckt oder nicht.

3312
02:33:23,190 --> 02:33:29,940
Gucken wir mal, was das gitignore sagt.

3313
02:33:30,040 --> 02:33:32,940
Log, ja, das wird mit eingexeckt.

3314
02:33:33,040 --> 02:33:34,940
Ja, sollte man.

3315
02:33:34,940 --> 02:33:36,840
Gut, dann ist gut.

3316
02:33:36,940 --> 02:33:48,730
Ja, es stimmt, es ist sinnvoll, das einzuchecken, weil es könnte ja sein, dass bei der nächsten Version andere Sachen unterstützt werden und es gar nicht mehr funktioniert.

3317
02:33:48,830 --> 02:33:51,730
Ja, ja, okay, ist eigentlich logischer.

3318
02:33:51,830 --> 02:33:53,730
So, also.

3319
02:33:53,830 --> 02:33:55,730
Da haben wir unser Kubernetes-Cluster laufen.

3320
02:33:55,830 --> 02:33:57,730
Also folgt mir gerne auf Twitch.

3321
02:33:57,830 --> 02:34:00,730
Ich würde mich sehr freuen, wenn ihr die nächsten Streams auch wieder am Start seid.

3322
02:34:00,830 --> 02:34:08,730
Wir basteln hier dran weiter, sodass wir im Endeffekt einen super konfigurierten, gut lauffähigen, automatisch deployenden Kubernetes-Cluster am Start haben.

3323
02:34:08,730 --> 02:34:10,630
In der Google Cloud.

3324
02:34:10,730 --> 02:34:12,630
So, jetzt wollte ich euch noch eine andere Sache zeigen.

3325
02:34:12,730 --> 02:34:14,630
Und zwar, ich habe jetzt meinen Kubernetes-Cluster.

3326
02:34:14,730 --> 02:34:16,630
Der läuft jetzt, den seht ihr ja auch hier.

3327
02:34:16,730 --> 02:34:18,630
Ja, da.

3328
02:34:18,730 --> 02:34:20,630
Der ist am Start.

3329
02:34:20,730 --> 02:34:22,630
Wie komme ich denn jetzt da dran?

3330
02:34:22,730 --> 02:34:24,630
So, das ist jetzt der eigentliche Knackpunkt.

3331
02:34:24,730 --> 02:34:26,630
Wie komme ich denn jetzt da dran?

3332
02:34:26,730 --> 02:34:28,630
Gar nicht so einfach.

3333
02:34:28,730 --> 02:34:32,630
Es gibt hier so ein Hilfskommando, connect.

3334
02:34:32,730 --> 02:34:35,630
Bringt mir allerdings nicht so viel.

3335
02:34:35,730 --> 02:34:39,140
Vergiss das nicht wieder zu löschen.

3336
02:34:39,140 --> 02:34:42,040
Oh ja, sonst ist mein Guthaben schnell weg.

3337
02:34:42,140 --> 02:34:44,040
Also, ich kann hier...

3338
02:34:44,140 --> 02:34:46,040
Ah, okay.

3339
02:34:46,140 --> 02:34:53,040
Ich muss irgendwas installieren für meine Google-Command-Line-Tools.

3340
02:34:53,140 --> 02:34:55,040
Wie macht man das?

3341
02:34:55,140 --> 02:34:57,040
Wie installiert man da was?

3342
02:34:57,140 --> 02:35:00,540
Install.

3343
02:35:00,640 --> 02:35:04,540
Google-Components-Install-Auth-Plugin.

3344
02:35:04,640 --> 02:35:08,540
Die haben übrigens einen mega hässlichen Progress-Bar hier unten.

3345
02:35:08,540 --> 02:35:11,440
Weiß nicht, was die Google-Leute sich dabei gedacht haben, dass das hübsch ist.

3346
02:35:11,540 --> 02:35:16,030
Ich weiß ja nicht.

3347
02:35:16,130 --> 02:35:19,030
Marzilein sagt, der Auer.

3348
02:35:19,130 --> 02:35:23,030
War letztens bei Hetzner und hat darüber Videos gemacht.

3349
02:35:23,130 --> 02:35:25,030
Oft hat man da viele einzelne Systeme gesehen.

3350
02:35:25,130 --> 02:35:29,030
Ich habe das so verstanden, dass diese einzelnen Systeme vermietet werden.

3351
02:35:29,130 --> 02:35:36,030
Gibt es aber nicht auch die Form, dass man nur einen Teil eines größeren Systems oder ganze Cluster mietet und sich das je nach Lust und Last verteilt?

3352
02:35:36,130 --> 02:35:37,030
Glaube du erst.

3353
02:35:37,130 --> 02:35:39,030
Das gibt es beides, ja.

3354
02:35:39,130 --> 02:35:40,030
Was heißt beides?

3355
02:35:40,030 --> 02:35:41,930
Das ist ein fließender Übergang.

3356
02:35:42,030 --> 02:35:43,930
Also, was es gibt.

3357
02:35:44,030 --> 02:35:45,930
Wir machen das jetzt mal ganz schnell.

3358
02:35:46,030 --> 02:35:46,930
Was es gibt.

3359
02:35:47,030 --> 02:35:50,930
Das erste, was es überhaupt gab, war ein dediziertes Server.

3360
02:35:51,030 --> 02:35:53,930
Das heißt, du hast hier so einen Server, den du da siehst, hast du dir gemietet.

3361
02:35:54,030 --> 02:35:54,930
Der gehört dir.

3362
02:35:55,030 --> 02:35:56,930
Nur, dass er bei Hetzner im Rechenzentrum steht.

3363
02:35:57,030 --> 02:35:57,930
Der gehört dir.

3364
02:35:58,030 --> 02:35:58,930
Da kannst du alles drauf machen, was du willst.

3365
02:35:59,030 --> 02:35:59,930
Ich glaube, man kann sogar ins BIOS.

3366
02:36:00,030 --> 02:36:00,930
Oder?

3367
02:36:01,030 --> 02:36:01,930
Kann man sogar ins BIOS?

3368
02:36:02,030 --> 02:36:02,930
Ich weiß gar nicht.

3369
02:36:03,030 --> 02:36:03,930
Ich glaube schon.

3370
02:36:04,030 --> 02:36:04,930
Es ist dein Server.

3371
02:36:05,030 --> 02:36:08,930
Das ist in den letzten Jahren ein bisschen außer Mode gekommen.

3372
02:36:08,930 --> 02:36:15,830
Weil, man muss sich um alles selbst kümmern und es ist auch nicht hoch verfügbar.

3373
02:36:15,930 --> 02:36:16,830
Es ist halt einfach ein Server.

3374
02:36:16,930 --> 02:36:17,830
Ohne irgendwas.

3375
02:36:17,930 --> 02:36:18,830
Einfach ein nackiger Server.

3376
02:36:18,930 --> 02:36:20,830
Und wenn die Festplatte kaputt ist, ist er kaputt.

3377
02:36:20,930 --> 02:36:22,830
Man muss sich selbst um Backups und alles kümmern.

3378
02:36:22,930 --> 02:36:24,830
So, also das ist das eine.

3379
02:36:24,930 --> 02:36:26,830
Das gibt es schon ganz lang.

3380
02:36:26,930 --> 02:36:29,830
Heutzutage ist das Bare Metal, nennt man das, wenn man cool sein will.

3381
02:36:29,930 --> 02:36:31,830
Früher hat man mal das Dedicated Server genannt.

3382
02:36:31,930 --> 02:36:33,830
Heute ist das Bare Metal.

3383
02:36:33,930 --> 02:36:38,830
Der nächste Schritt war, dass die...

3384
02:36:39,030 --> 02:36:41,830
Hoster VMs angeboten haben.

3385
02:36:41,930 --> 02:36:48,830
VMs, das sind virtuelle, virtuelle Server, die auf irgendeinem Virtualisierungscluster laufen.

3386
02:36:48,930 --> 02:36:53,830
Das sind dann quasi mehrere dieser Kisten, die du siehst, zusammengefasst zu einem Virtualisierungscluster.

3387
02:36:53,930 --> 02:36:58,830
Und darauf laufen dann potenziell aber mehr VMs, als du dort Server siehst.

3388
02:36:58,930 --> 02:37:01,830
Also mal angenommen, du siehst dort, du hast drei fette Server.

3389
02:37:01,930 --> 02:37:04,830
Darauf kannst du ohne Probleme 200 VMs laufen lassen.

3390
02:37:04,930 --> 02:37:06,830
Und die werden dann vermietet.

3391
02:37:06,830 --> 02:37:09,730
Allerdings, das ist, glaube ich, das so ein bisschen auch, was du meinst.

3392
02:37:09,830 --> 02:37:12,730
Allerdings da natürlich von der Leistung her auch nur anteilig.

3393
02:37:12,830 --> 02:37:21,730
Also du kannst zwar 200 VMs drauf machen, aber wenn du unter der Haube in dem Cluster nur drei Nodes mit jeweils acht CPU-Kernen hast, kannst du halt...

3394
02:37:21,830 --> 02:37:27,730
Du kannst zwar VMs vermieten mit 800 CPUs.

3395
02:37:27,830 --> 02:37:34,730
Wenn aber alle deiner Kunden gleichermaßen Lastursachen da drin, dann teilen die sich die Infrastruktur unten drunter.

3396
02:37:36,850 --> 02:37:38,750
Das ist wahrscheinlich das, was du meinst.

3397
02:37:38,750 --> 02:37:45,650
Und dann gibt es natürlich noch den neuesten Shit, dass man gar keine Server mehr mietet und auch keine VMs mehr mietet, sondern sich Services mietet.

3398
02:37:45,750 --> 02:37:48,650
Wie zum Beispiel das, was wir hier heute gemacht haben.

3399
02:37:48,750 --> 02:37:52,650
Wir haben ein Kubernetes-Cluster angelegt in der Google Cloud.

3400
02:37:52,750 --> 02:37:56,650
Und ja, letztendlich irgendwo auf irgendwelcher Hardware läuft das auch.

3401
02:37:56,750 --> 02:37:59,650
Die Hardware steht in Frankfurt, mehr weiß ich dazu aber nicht.

3402
02:37:59,750 --> 02:38:01,650
Ich weiß nicht, welche Hardware das ist.

3403
02:38:01,750 --> 02:38:03,650
Doch, kann ich nachgucken, aber es muss mich nicht interessieren.

3404
02:38:03,750 --> 02:38:07,650
Welche Hardware es ist, wie das verwaltet wird, kann mir vollkommen egal sein.

3405
02:38:07,650 --> 02:38:12,550
Ich bekomme mein Kubernetes-Cluster und kann mit den passenden Tools darauf zugreifen.

3406
02:38:12,650 --> 02:38:16,550
Ist natürlich noch ein bisschen teurer, aber ich muss mich auch weniger drum kümmern.

3407
02:38:16,650 --> 02:38:24,010
So, jetzt wird euch vielleicht was auffallen.

3408
02:38:24,110 --> 02:38:33,010
Wir möchten jetzt ja zum Beispiel sowas machen wie cubectl get pods-a.

3409
02:38:33,110 --> 02:38:38,320
Und jetzt werdet ihr sehen, hm, das geht ja gar nicht.

3410
02:38:38,420 --> 02:38:39,320
Und Chat, wer hat mitgedacht?

3411
02:38:39,320 --> 02:38:44,220
Warum geht mein cubectl nicht, obwohl ich mich gegenüber meines Clusters authentifiziert habe?

3412
02:38:44,320 --> 02:38:46,220
Werden aufgepasst, warum geht das nicht?

3413
02:38:46,320 --> 02:38:49,790
Chat enttäuscht mich nicht.

3414
02:38:49,890 --> 02:38:54,660
HiIQ.

3415
02:38:54,760 --> 02:38:56,660
Warum komme ich da nicht hin?

3416
02:38:56,760 --> 02:38:59,660
Du musst erst auf den Jump-Post, richtig.

3417
02:38:59,760 --> 02:39:04,100
Mein Cluster ist nicht public.

3418
02:39:04,200 --> 02:39:06,100
Ich habe keinen public Endpunkt.

3419
02:39:06,200 --> 02:39:15,100
Ich müsste quasi zu 1.7.2.16.0.2, äh 16.0.2, komme ich aber nicht hin, weil mein Cluster nicht public ist im Internet.

3420
02:39:15,100 --> 02:39:19,000
Das heißt, ich brauche einen Jump-Post und dafür habe ich mir was gebastelt.

3421
02:39:19,100 --> 02:39:25,000
So, die offizielle Variante, wie man sowas macht, ist, also das Einfachste wäre das hier.

3422
02:39:25,100 --> 02:39:33,000
Das Einfachste wäre, wir machen ein, wir loggen uns per SSH ein und machen dann hier, habe ich noch nicht mal entstehen,

3423
02:39:33,100 --> 02:39:39,000
würden dann hier auf der VM, wo wir per SSH, also das ist die VM, die hier in der Google Cloud läuft,

3424
02:39:39,100 --> 02:39:46,640
und würden unsere cubectl-kubernetes-Administration darüber machen.

3425
02:39:46,740 --> 02:39:50,640
Das wäre möglich, ist ein bisschen blöd, ist eine extra Kiste, müssen wir alles neu entstehen.

3426
02:39:50,740 --> 02:40:02,640
Wir müssen jetzt, wir müssen jetzt eher gucken, wie können wir uns tunneln zu dem Kubernetes-Cluster über die VM.

3427
02:40:02,740 --> 02:40:05,640
Da habe ich mir ein paar, da habe ich mir was zu überlegt.

3428
02:40:05,740 --> 02:40:09,640
Also, die schönste Variante ist ein VPN, ja.

3429
02:40:09,740 --> 02:40:12,640
Man kann ein VPN einrichten in der Google Cloud.

3430
02:40:12,740 --> 02:40:14,640
Es ist sogar, glaube ich, WireGuard-kompatibel.

3431
02:40:14,740 --> 02:40:16,640
Man könnte WireGuard benutzen.

3432
02:40:16,740 --> 02:40:26,540
Dann baut man ein VPN auf, quasi in seine, in das private Netz, in seiner Google-Infrastruktur und kann sich dann dahin verbinden.

3433
02:40:26,640 --> 02:40:29,540
Da muss man aber VPNs einrichten und hier und bla.

3434
02:40:29,640 --> 02:40:34,540
Wenn man einfach nur cubectl ausführen will über den Jumppost, gibt es, gibt es einfachere Varianten.

3435
02:40:34,640 --> 02:40:38,540
Nämlich, man kann das hier machen.

3436
02:40:38,640 --> 02:40:42,540
Ich zeige, ich zeige euch jetzt nur mal die, die, die Kurzvariante.

3437
02:40:42,640 --> 02:40:44,540
Man kann das hier machen.

3438
02:40:44,540 --> 02:40:49,440
Ich compute SSH auf den Jumppost und dann minus D1337, das ist der Port.

3439
02:40:49,540 --> 02:40:51,440
Quieting, sonst wie so.

3440
02:40:51,540 --> 02:40:53,440
Was macht das Ganze?

3441
02:40:53,540 --> 02:40:57,440
Das baut, und jetzt ist, das ist wirklich extrem Six Head.

3442
02:40:57,540 --> 02:40:59,440
Äh, Moment.

3443
02:40:59,540 --> 02:41:03,440
Export, HTTPS, SOX, Proxy, wie, wie macht man das jetzt?

3444
02:41:03,540 --> 02:41:16,440
Das...

3445
02:41:16,540 --> 02:41:18,440
So, und was macht das jetzt?

3446
02:41:18,540 --> 02:41:25,440
Das SSH verbindet sich auf meinen Jumppost, auf meine VM, durch den normalen Google-Tunnel.

3447
02:41:25,540 --> 02:41:28,340
Macht bei mir lokal ein SOX-Proxy auf.

3448
02:41:28,440 --> 02:41:30,340
Und wartet einfach da drauf.

3449
02:41:30,440 --> 02:41:33,340
Das heißt, wenn ich jetzt sage hier...

3450
02:41:33,440 --> 02:41:41,340
Export, HTTPS-Proxy, SOX 5, Localhost, Port 1337.

3451
02:41:41,440 --> 02:41:43,340
Und machen wir mal HTTP auch.

3452
02:41:43,440 --> 02:41:47,340
Und jetzt sage ich cubectl, cubectl get ports.

3453
02:41:47,440 --> 02:41:50,340
Haha, es funktioniert.

3454
02:41:50,440 --> 02:41:54,340
Das ist wirklich das, das billig VPN.

3455
02:41:54,340 --> 02:42:02,410
Also, wenn ich keinen Bock habe, Google Cloud VPN einzurichten, ich möchte mich einfach nur tunneln.

3456
02:42:02,510 --> 02:42:05,410
Das ist ein Tipp, das könnt ihr, das könnt ihr überall drauf anwenden.

3457
02:42:05,510 --> 02:42:08,410
Das ist ja ein ganz normales SSH-Kommando unter der Haube.

3458
02:42:08,510 --> 02:42:10,410
Ja, das sind die SSH-Parameter.

3459
02:42:10,510 --> 02:42:12,410
Ähm...

3460
02:42:12,510 --> 02:42:14,410
Das ist halt sehr nice.

3461
02:42:14,510 --> 02:42:21,410
Das heißt, ihr könnt euch jetzt mal auf die Schnelle in eure Cloud-Infrastruktur verbinden, die ja, die ja wirklich nur lokal erreichbar ist, eigentlich.

3462
02:42:21,510 --> 02:42:23,410
Innerhalb dieses Netzes in der Google Cloud.

3463
02:42:23,510 --> 02:42:25,410
Und...

3464
02:42:25,510 --> 02:42:27,410
Ihr könnt drauf zugreifen.

3465
02:42:27,510 --> 02:42:30,310
Ihr könnt allerdings nicht mehr machen als cubectl in dem Fall.

3466
02:42:30,410 --> 02:42:37,310
Äh, ich meine, ihr könntet, ihr könnt noch auf andere Server zugreifen an der Stelle, wenn ihr mit einem Browser einen SOX-Proxy eintragt.

3467
02:42:37,410 --> 02:42:39,310
Es ist allerdings nicht so schön.

3468
02:42:39,410 --> 02:42:43,310
So, und ich habe mir jetzt noch eine, eine kleine Erweiterung dazu ausgedacht.

3469
02:42:43,410 --> 02:42:47,310
Wie gesagt, ich sage euch gleich dazu, ich empfehle euch nicht, das im produktiven Umfeld zu benutzen.

3470
02:42:47,410 --> 02:42:51,310
Dann würde ich tatsächlich ein VPN aufsetzen.

3471
02:42:51,410 --> 02:42:53,310
Aber ich habe noch was anderes gebaut.

3472
02:42:53,410 --> 02:42:55,310
Und ich zeige euch jetzt mal ein Six-Head-Script.

3473
02:42:55,410 --> 02:42:57,310
Was ich mir überlegt habe.

3474
02:42:57,410 --> 02:42:59,210
Tunnel.sh.

3475
02:42:59,310 --> 02:43:01,210
Bam.

3476
02:43:01,310 --> 02:43:03,210
Zack.

3477
02:43:03,310 --> 02:43:05,210
Was macht das?

3478
02:43:05,310 --> 02:43:07,210
Ich führe es erstmal aus, okay?

3479
02:43:07,310 --> 02:43:09,210
Ich führe es erstmal aus.

3480
02:43:09,310 --> 02:43:11,210
Wir gucken, ob es funktioniert.

3481
02:43:11,310 --> 02:43:15,040
Und dann, und dann erkläre ich euch schnell nochmal, wie es funktioniert.

3482
02:43:15,140 --> 02:43:17,040
Oh, ich bin doof.

3483
02:43:17,140 --> 02:43:19,040
Ich habe das, ich habe das Exit nicht rausgenommen.

3484
02:43:19,140 --> 02:43:28,300
Lul, weh.

3485
02:43:28,400 --> 02:43:30,300
So, sudo.

3486
02:43:30,400 --> 02:43:32,300
So, und wir haben einen Tunnel am Start.

3487
02:43:32,400 --> 02:43:38,170
Oh, fuck.

3488
02:43:38,170 --> 02:43:41,580
Irgendwas ist kaputt.

3489
02:43:41,680 --> 02:43:47,770
Kackel, ich weiß nicht warum.

3490
02:43:47,870 --> 02:43:52,300
Was ist kaputt?

3491
02:43:52,400 --> 02:43:54,300
Oh nein.

3492
02:43:54,400 --> 02:43:56,300
Irgendwas ist kaputt.

3493
02:43:56,400 --> 02:43:58,300
Shit.

3494
02:43:58,400 --> 02:44:01,800
Warum?

3495
02:44:01,900 --> 02:44:03,800
Okay, wir müssen mal ein Script schnell fixen.

3496
02:44:03,900 --> 02:44:05,800
Was ist, was ist denn hier kaputt?

3497
02:44:05,900 --> 02:44:07,800
Was habe ich, was habe ich kaputt gemacht?

3498
02:44:07,900 --> 02:44:09,800
Okay, ich kann euch, ich kann euch mal kurz erklären, was das macht.

3499
02:44:09,900 --> 02:44:11,800
Ist das gerade deine Public IP?

3500
02:44:11,900 --> 02:44:13,800
Das hier?

3501
02:44:13,900 --> 02:44:15,800
Ne, das ist nicht meine Public IP.

3502
02:44:15,800 --> 02:44:17,700
Das und das auch nicht.

3503
02:44:17,800 --> 02:44:19,700
Also, ähm.

3504
02:44:19,800 --> 02:44:21,700
Was der machen sollte, ist folgendes.

3505
02:44:21,800 --> 02:44:23,700
Schon Urlaub im neuen Job.

3506
02:44:23,800 --> 02:44:25,700
Oder heute, heute habe ich freien Tag, ja.

3507
02:44:25,800 --> 02:44:27,700
Also, ähm.

3508
02:44:27,800 --> 02:44:29,700
Ich, ich, ich, ich erkläre euch mal, was das macht.

3509
02:44:29,800 --> 02:44:31,700
Das holt sich, das holt sich mein Default Interface und die Projekt ID.

3510
02:44:31,800 --> 02:44:33,700
Dann lädt sich ein, äh, SOX Proxy Tunnel Tool runter von Github.

3511
02:44:33,800 --> 02:44:35,700
Was von irgendwelchen Chips kommt.

3512
02:44:35,800 --> 02:44:37,700
Was von irgendwelchen Chips kommt.

3513
02:44:37,800 --> 02:44:39,700
Was von irgendwelchen Chips kommt.

3514
02:44:39,800 --> 02:44:41,700
Was von irgendwelchen Chips kommt.

3515
02:44:41,800 --> 02:44:43,700
Was von irgendwelchen Chips kommt.

3516
02:44:43,700 --> 02:44:45,600
Was von irgendwelchen Chips kommt.

3517
02:44:45,700 --> 02:44:47,600
Was von irgendwelchen Chips kommt.

3518
02:44:47,700 --> 02:44:49,600
Was von irgendwelchen Chips kommt.

3519
02:44:49,700 --> 02:44:51,600
Was von irgendwelchen Chips kommt.

3520
02:44:51,700 --> 02:44:53,600
Was von irgendwelchen Chips kommt.

3521
02:44:53,700 --> 02:44:55,600
Was von irgendwelchen Chips kommt.

3522
02:44:55,700 --> 02:44:57,600
Was von irgendwelchen Chips kommt.

3523
02:44:57,700 --> 02:44:59,600
Was von irgendwelchen Chips kommt.

3524
02:44:59,700 --> 02:45:01,600
Was von irgendwelchen Chips kommt.

3525
02:45:01,700 --> 02:45:03,600
Was von irgendwelchen Chips kommt.

3526
02:45:03,700 --> 02:45:05,600
Was von irgendwelchen Chips kommt.

3527
02:45:05,700 --> 02:45:07,600
Was von irgendwelchen Chips kommt.

3528
02:45:07,700 --> 02:45:09,600
Was von irgendwelchen Chips kommt.

3529
02:45:09,700 --> 02:45:11,600
Was von irgendwelchen Chips kommt.

3530
02:45:11,600 --> 02:45:13,160
die falschen IPs. Kann das sein?

3531
02:45:14,000 --> 02:45:15,720
Was für IPs habe ich genommen?

3532
02:45:16,940 --> 02:45:17,500
Ich habe andere

3533
02:45:17,500 --> 02:45:19,280
IPs genommen, als in meinem

3534
02:45:19,280 --> 02:45:23,120
Testaufbau. Äh, Network?

3535
02:45:25,650 --> 02:45:26,630
Ah, 24.

3536
02:45:28,370 --> 02:45:28,890
Exzellent.

3537
02:45:29,370 --> 02:45:30,470
Daran wird es wahrscheinlich liegen.

3538
02:45:32,670 --> 02:45:33,870
Ich habe andere IPs genommen.

3539
02:45:37,070 --> 02:45:38,230
Machen wir hier nochmal ein Sleep davor.

3540
02:45:41,700 --> 02:45:43,000
Was ist mit dem Stackoverflow Darkmode?

3541
02:45:43,000 --> 02:45:44,860
Passiert jetzt mein Darkreader. Der macht komische Dinger.

3542
02:45:48,160 --> 02:45:49,480
Der Darkmode

3543
02:45:49,480 --> 02:45:51,240
vom Chrome macht komische Sachen.

3544
02:45:52,400 --> 02:45:52,560
So.

3545
02:45:52,560 --> 02:45:54,500
Und jetzt sollte das eigentlich

3546
02:45:54,500 --> 02:45:59,620
funktionieren. Ich hoffe mal, dass ich das richtig gemacht habe.

3547
02:45:59,720 --> 02:46:01,100
Brage, Leute. Brage.

3548
02:46:01,240 --> 02:46:01,940
Please, brage.

3549
02:46:03,220 --> 02:46:06,390
Brage. Brage.

3550
02:46:08,010 --> 02:46:08,450
Ach,

3551
02:46:09,250 --> 02:46:09,950
shit, Alter.

3552
02:46:15,190 --> 02:46:16,450
Das funktioniert nicht.

3553
02:46:17,010 --> 02:46:18,690
Was habe ich denn kaputt gemacht, Mann?

3554
02:46:19,070 --> 02:46:21,290
Warum geht mein Six-Head-Skript nicht?

3555
02:46:25,780 --> 02:46:26,340
Was ist das?

3556
02:46:26,420 --> 02:46:27,140
Warum geht das nicht?

3557
02:46:49,000 --> 02:46:50,780
Warum geht das nicht? Ich habe keine Ahnung.

3558
02:46:56,860 --> 02:46:58,140
Was meckert

3559
02:46:58,140 --> 02:46:58,460
er denn?

3560
02:46:59,520 --> 02:47:00,240
Was meckert

3561
02:47:00,240 --> 02:47:00,760
er denn hier?

3562
02:47:02,100 --> 02:47:03,440
Connect? No?

3563
02:47:04,400 --> 02:47:04,760
Was?

3564
02:47:07,650 --> 02:47:10,050
Lookup local? Wait a minute.

3565
02:47:10,970 --> 02:47:12,150
Was ist denn das für ein Fehler?

3566
02:47:13,190 --> 02:47:13,990
Moment. Ping?

3567
02:47:14,550 --> 02:47:15,590
Local host?

3568
02:47:17,070 --> 02:47:17,390
Moment.

3569
02:47:20,190 --> 02:47:20,770
Was ist denn da?

3570
02:47:22,900 --> 02:47:23,620
Wait a minute.

3571
02:47:24,260 --> 02:47:32,930
Sollte da nicht mehr

3572
02:47:32,930 --> 02:47:33,790
drinne stehen?

3573
02:47:36,700 --> 02:47:37,580
Wait a minute.

3574
02:47:38,580 --> 02:47:40,740
Warum ist mein ETC-Host kaputt?

3575
02:47:42,720 --> 02:47:44,380
Haben wir da letztens irgendwas verkackt?

3576
02:47:44,560 --> 02:47:45,180
Kann das sein?

3577
02:47:45,820 --> 02:47:48,420
Äh, Arch-Local-Hosts.

3578
02:47:49,160 --> 02:47:51,380
Äh, äh, Arch-ETC-Hosts.

3579
02:47:51,420 --> 02:47:51,920
Deleted.

3580
02:47:53,720 --> 02:47:54,580
Deleted my host.

3581
02:48:06,560 --> 02:48:08,700
Domain. Und der Host-Name

3582
02:48:08,700 --> 02:48:09,620
muss da noch hin. Warum?

3583
02:48:10,020 --> 02:48:12,460
Warum? Wie? Ich habe Host-Name, die jetzt hier...

3584
02:48:12,460 --> 02:48:16,590
Äh.

3585
02:48:18,290 --> 02:48:21,690
Äh, Pac-Man-QL-Host-Name.

3586
02:48:24,140 --> 02:48:24,920
Äh, wie heißt das?

3587
02:48:25,040 --> 02:48:26,460
Minus Q-F?

3588
02:48:27,360 --> 02:48:27,920
Ach, fuck.

3589
02:48:28,240 --> 02:48:31,260
Ähm, Arch-Install-Host-Name.

3590
02:48:34,230 --> 02:48:34,850
Host-Name, ja.

3591
02:48:35,330 --> 02:48:35,510
So.

3592
02:48:36,310 --> 02:48:37,590
Host-Name, Command-Out-Found.

3593
02:48:37,810 --> 02:48:39,530
Ja, was muss ich installieren?

3594
02:48:40,610 --> 02:48:41,090
Sag's mir.

3595
02:48:42,650 --> 02:48:43,530
Inet-Utils.

3596
02:48:43,810 --> 02:48:45,850
Obviously, alles klar. Das weiß man ja.

3597
02:48:46,370 --> 02:48:47,390
Inet-Utils.

3598
02:48:49,430 --> 02:48:50,270
Rust-Beste.

3599
02:48:50,990 --> 02:48:52,510
Ey, Rust ist eine coole Sprache.

3600
02:48:52,610 --> 02:48:54,270
Allerdings wird sie oftmals

3601
02:48:54,270 --> 02:48:56,230
für Sachen verwendet, wo ich sie nicht so sinnvoll für finde.

3602
02:48:56,910 --> 02:48:57,970
Host-Name, Stream.

3603
02:48:57,970 --> 02:48:58,090
Stream.

3604
02:48:59,410 --> 02:48:59,810
Stream.

3605
02:49:00,450 --> 02:49:02,690
Mein Script ist richtig, mein Host-File ist kaputt.

3606
02:49:03,270 --> 02:49:04,770
Ping, Local-Host.

3607
02:49:07,190 --> 02:49:08,510
Äh, ist es jetzt besser?

3608
02:49:10,090 --> 02:49:11,070
Ping, Stream.

3609
02:49:12,990 --> 02:49:14,450
Ich hoffe mal, das ist besser jetzt.

3610
02:49:15,090 --> 02:49:15,410
Tunnel.

3611
02:49:21,840 --> 02:49:22,760
Komm, Brage, Leute.

3612
02:49:23,040 --> 02:49:24,520
Brage, Brage, Brage.

3613
02:49:29,020 --> 02:49:29,900
Ah, es funktioniert.

3614
02:49:30,460 --> 02:49:32,200
Das war meine Host-Datei, die kaputt ist.

3615
02:49:32,420 --> 02:49:32,660
Geil.

3616
02:49:33,180 --> 02:49:35,380
So, und jetzt kann ich einfach Cube-CTL machen.

3617
02:49:36,040 --> 02:49:37,720
Über diesen Proxy.

3618
02:49:37,720 --> 02:49:39,720
Das ist wirklich richtig...

3619
02:49:40,720 --> 02:49:42,720
Poor-Mans-VPN.

3620
02:49:49,990 --> 02:49:51,990
Was hältst du von C++?

3621
02:49:52,410 --> 02:49:54,410
Jetzt nicht, Leute. Ich muss gleich weg in drei Minuten.

3622
02:49:55,250 --> 02:49:57,590
Also, mal ganz schnell, was dieses Skript macht.

3623
02:49:58,870 --> 02:50:02,450
Das baut ein VPN auf, ohne ein VPN zu brauchen.

3624
02:50:03,850 --> 02:50:04,350
Also.

3625
02:50:05,490 --> 02:50:05,990
Folgendes.

3626
02:50:06,110 --> 02:50:08,110
Es holt sich das Default-Interface raus.

3627
02:50:08,730 --> 02:50:10,030
Von meinem, von meiner Kiste.

3628
02:50:10,530 --> 02:50:13,910
Es holt sich die Projekt-ID raus, aus meinen Terraform-Variablen.

3629
02:50:14,470 --> 02:50:17,050
Dann lädt es sich so ein Tunnel-Tool runter, hier von GitHub.

3630
02:50:17,610 --> 02:50:19,610
So ein China-Chinesen-Tunnel-Tool.

3631
02:50:25,120 --> 02:50:25,620
Das da.

3632
02:50:26,540 --> 02:50:30,840
Was eigentlich dafür gemacht ist, um an der China-Chinesen-Firewall vorbeizugehen, aber okay.

3633
02:50:31,260 --> 02:50:32,360
Geht für unsere Zwecke auch.

3634
02:50:32,780 --> 02:50:38,360
Lädt sich ein Tunnel-Tool runter, was UDP- und TCP-Traffic über SOX-Proxys tunneln kann.

3635
02:50:39,420 --> 02:50:44,420
Dann baut es einmalig eine Verbindung auf zum Google-Cloud-Jump-Host.

3636
02:50:45,740 --> 02:50:47,740
Lockt sich nur ein, lockt sich gleich wieder aus.

3637
02:50:47,960 --> 02:50:50,660
Der Sinn dahinter ist, dass SSH-Keys generiert werden.

3638
02:50:50,660 --> 02:51:01,540
Dann legt er ein Tunnel-Device an, gibt dem Tunnel-Device eine IP, startet das Tunnel-Device, setzt Routen für unsere Routen in Google-Cloud.

3639
02:51:01,680 --> 02:51:04,860
Nämlich hier das Netz, was wir benutzen und hier das für Kubernetes.

3640
02:51:05,540 --> 02:51:15,520
Und dann startet er dieses Tun-to-SOX-Tool über den SOX-Proxy, den ich hier unten aufbaue über SSH.

3641
02:51:16,380 --> 02:51:20,100
Und dann schickt er das in den Hintergrund und dann startet er den SOX-Proxy über SSH.

3642
02:51:20,100 --> 02:51:20,640
Also im Prinzip.

3643
02:51:20,660 --> 02:51:28,320
Im Prinzip ist das quasi ein SSH-Tunnel mit SOX-Proxy, über den TCP- und UDP-Traffic getunnelt wird.

3644
02:51:32,060 --> 02:51:34,520
Das ist nur was für richtige Aluhutträger, die sowas machen.

3645
02:51:34,560 --> 02:51:35,600
Nee, hat damit ja nichts zu tun.

3646
02:51:37,690 --> 02:51:40,510
Aber es funktioniert und man muss kein VPN einrichten.

3647
02:51:40,630 --> 02:51:45,690
Man kann einfach sagen .slash Tunnel und ihr seht, kubectl geht noch nicht.

3648
02:51:46,230 --> 02:51:53,090
Und sobald das VPN aufgebaut ist, das fake, billig VPN aufgebaut ist, kubectl funktioniert.

3649
02:51:55,620 --> 02:51:56,560
Ist das nicht pock?

3650
02:51:57,780 --> 02:52:04,820
Wie gesagt, nicht unbedingt für Production-Usage gedacht, aber so an sich eigentlich ganz nice.

3651
02:52:08,190 --> 02:52:14,540
So, das packen wir noch in unser Git-Ignore-Status.

3652
02:52:16,500 --> 02:52:21,740
Comet 0w, beste Push-GitHub-Master.

3653
02:52:28,520 --> 02:52:30,800
So, und jetzt habt ihr auch den ganzen Campbell auf GitHub.

3654
02:52:30,920 --> 02:52:32,140
Ich gucke jetzt gleich nochmal in Chat.

3655
02:52:34,120 --> 02:52:38,240
So, also hier habt ihr die Sachen von heute im Stream als Repo.

3656
02:52:38,240 --> 02:52:39,820
Dann machen wir das nächste Mal weiter.

3657
02:52:39,960 --> 02:52:43,440
Das heißt, wenn ihr dabei sein wollt, Leute, folgt mir einfach auf Twitch.

3658
02:52:44,960 --> 02:52:45,980
Aber das nächste Mal weiter.

3659
02:52:46,700 --> 02:52:48,200
Also, das habe ich beantwortet.

3660
02:53:04,870 --> 02:53:07,410
Dafür gibt es ja mittlerweile Bots, die Abhängigkeiten scannen.

3661
02:53:08,470 --> 02:53:12,250
Ersetzt zwar nicht jemand, der wirklich Mailing-Listen liest und sowas, aber es ist schon mal nice.

3662
02:53:36,780 --> 02:53:38,080
Ich habe montags immer frei.

3663
02:53:39,280 --> 02:53:41,220
Weil ich nur vier Tage die Woche arbeite.

3664
02:53:57,200 --> 02:53:57,560
Ruby!

3665
02:53:59,800 --> 02:54:00,680
Ruby ist nice.

3666
02:54:00,840 --> 02:54:02,800
Ruby ist meine Lieblingssprache, Nebasi Sharp.

3667
02:54:02,800 --> 02:54:05,320
Leider ist Ruby so unbedeutend geworden.

3668
02:54:05,320 --> 02:54:06,320
Die letzten Jahre über.

3669
02:54:06,880 --> 02:54:08,080
Ey, Max, hoffe alles so gut.

3670
02:54:08,080 --> 02:54:10,080
Ja, nach gestern, heute ist wieder alles gut.

3671
02:54:10,080 --> 02:54:10,580
Ja.

3672
02:54:11,220 --> 02:54:14,680
Ich wollte mal fragen, ob du bald wieder auf YouTube ein paar Worte zu Battlefield verlierst.

3673
02:54:15,560 --> 02:54:16,060
Oh.

3674
02:54:18,550 --> 02:54:19,050
Bestimmt.

3675
02:54:24,830 --> 02:54:25,330
Bestimmt.

3676
02:54:25,330 --> 02:54:25,830
Bestimmt.

3677
02:54:29,670 --> 02:54:30,550
An das Trinken erinnern.

3678
02:54:30,550 --> 02:54:31,050
Ja.

3679
02:54:31,050 --> 02:54:31,550
Mach ich.

3680
02:54:31,550 --> 02:54:32,050
Trinken.

3681
02:54:36,910 --> 02:54:37,410
Okay, Leute.

3682
02:54:38,410 --> 02:54:39,610
Ich hoffe, euch hat der Stream gefallen.

3683
02:54:39,610 --> 02:54:42,290
Das war heute zu einer Zeit, ich weiß, es ist schwierig zu gucken für euch.

3684
02:54:42,290 --> 02:54:43,530
Sieht man auch an den Zuschauerzahlen.

3685
02:54:43,930 --> 02:54:45,930
Es war im Peak anstatt 200 noch was.

3686
02:54:45,930 --> 02:54:47,930
Heute Peak 150.

3687
02:54:47,930 --> 02:54:51,930
Aber es hat sich angeboten, das einfach heute mit nachzumachen.

3688
02:54:51,930 --> 02:54:53,930
Ich meine, die Worts bleiben da.

3689
02:54:53,930 --> 02:54:55,930
Leute, die es interessiert, können sich trotzdem angucken.

3690
02:54:55,930 --> 02:54:59,930
Und die nächsten Streams in der Richtung mache ich wahrscheinlich eher wieder abends.

3691
02:54:59,930 --> 02:55:05,370
Aber zumindest könnt ihr eurem Chef ein bisschen Fortbildung verkaufen.

3692
02:55:05,370 --> 02:55:07,370
150 Homeofficer, ja.

3693
02:55:07,370 --> 02:55:09,370
Also, ich gehe jetzt weg.

3694
02:55:09,370 --> 02:55:11,370
Ich muss noch wohin.

3695
02:55:11,370 --> 02:55:12,370
Wir sehen uns, Leute.

3696
02:55:12,370 --> 02:55:13,370
Bis dann, macht's gut.

3697
02:55:13,370 --> 02:55:14,370
Ich hoffe, euch hat's gefallen.

3698
02:55:14,370 --> 02:55:15,370
See you.
