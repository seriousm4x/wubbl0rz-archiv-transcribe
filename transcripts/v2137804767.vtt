WEBVTT

00:07.920 --> 02:29.940
Der Reaktionian hat...

02:29.940 --> 02:32.100
Ich kann es ja immer richtig aussprechen.

02:32.500 --> 02:33.920
Der Reaktionian hat

02:33.920 --> 02:34.520
subscribed.

02:35.520 --> 02:41.240
Ja, ich bin gerade aufgestanden vor

02:41.240 --> 02:42.460
20 Minuten oder so.

02:43.800 --> 02:45.500
Ich mache noch keine Runde Rennen, aber ich mache es

02:45.500 --> 02:46.920
nachher. Es ist gerade nicht so geil das Wetter.

02:48.480 --> 02:49.400
Deswegen ein bisschen früher

02:49.400 --> 02:50.200
gestreamt heute.

02:51.700 --> 02:53.360
Ich habe auch...

02:53.360 --> 02:55.440
Ich meine, bei uns regnet es nicht, aber es

02:55.440 --> 02:57.340
könnte durchaus demnächst

02:57.340 --> 02:57.900
so sein.

02:58.820 --> 03:00.960
Ich habe keinen Bock. Ich gucke mal, wie es heute Mittag aussieht.

03:02.940 --> 03:07.040
Und wenn ich heute Mittag eine Runde...

03:08.000 --> 03:09.000
Mittag ist glaube ich ganz

03:09.000 --> 03:11.020
okay. Wenn ich hier mal gucke, Hanau-Wetter.

03:11.700 --> 03:11.920
Ja.

03:13.220 --> 03:14.660
Kann man vielleicht sogar Fahrrad fahren.

03:14.660 --> 03:16.120
Das sieht eigentlich ganz brauchbar aus.

03:16.600 --> 03:18.600
Sieht so aus, als zieht das meiste an Regenwolken

03:18.600 --> 03:19.040
vorbei.

03:19.880 --> 03:20.680
Wenn noch ein bisschen

03:20.680 --> 03:24.340
mehr Sonne wäre, wäre

03:24.340 --> 03:26.020
echt nice, aber das glaube ich nicht.

03:33.830 --> 03:35.430
Machen wir mal einen Monitoring-Stream.

03:35.690 --> 03:37.750
Wir haben doch schon ein paar... Prometheus haben wir schon

03:37.750 --> 03:39.950
gebaut. Oh, CheckMK muss ich auf der Arbeit

03:39.950 --> 03:41.890
benutzen. Da habe ich echt keinen Bock. Das ist mit das

03:41.890 --> 03:43.830
undurchsichtigste...

03:45.410 --> 03:46.150
Na, kann man so...

03:46.150 --> 03:46.290
Ja.

03:48.630 --> 03:49.630
Also CheckMK hat

03:49.630 --> 03:51.170
das mit Abstand

03:51.170 --> 03:53.910
wirste UI

03:53.910 --> 03:55.830
von allen Monitoring-Tools, die ich

03:55.830 --> 03:57.870
kenne. Bei Zappix ist es so,

03:57.950 --> 03:59.650
Zappix hat auch ein wirres UI,

03:59.650 --> 04:01.710
weil es sehr komplex ist, aber

04:01.710 --> 04:03.270
es hat ein, sagen wir mal,

04:03.830 --> 04:05.690
es hat ein gewisses System noch

04:05.690 --> 04:07.570
dahinter. CheckMK wirkt so,

04:07.810 --> 04:08.910
als hat man einfach

04:08.910 --> 04:11.590
irgendwas entwickelt und es irgendwo auf die Webseite

04:11.590 --> 04:13.670
geknallt und in der Hoffnung, man findet es

04:13.670 --> 04:15.710
irgendwann wieder. Also das UI von

04:15.710 --> 04:17.550
CheckMK ist wirklich grausam schlecht.

04:19.170 --> 04:19.650
Yoho,

04:19.810 --> 04:21.570
Dankeschön. Pog-Subscription.

04:22.290 --> 04:22.810
PETG

04:22.810 --> 04:25.150
machen wir nicht, weil Windows-Only.

04:25.850 --> 04:27.290
Das ist irgendein Nagios-Fog.

04:27.810 --> 04:29.470
Ganz ehrlich, ich...

04:29.470 --> 04:31.690
Ich bin nicht wirklich

04:31.690 --> 04:33.630
happy mit den ganzen Monitoring-Tools.

04:33.830 --> 04:35.510
Es gibt keins, wo ich sage,

04:35.650 --> 04:37.910
ja, finde ich umfassend

04:37.910 --> 04:39.590
nice. Prometheus ist

04:39.590 --> 04:41.510
cool, wenn man Metriken will und

04:41.510 --> 04:43.390
vor allem, wenn man viel selbst bauen will.

04:44.770 --> 04:45.730
Klassisches Monitoring

04:45.730 --> 04:47.630
mit Prometheus geht alles, ist

04:47.630 --> 04:49.590
aber eher, wir bauen unser

04:49.590 --> 04:51.670
Monitoring-System selbst. Zappix ist

04:51.670 --> 04:53.590
ganz cool, aber Zappix wirkt an manchen

04:53.590 --> 04:55.070
Stellen doch schon ein bisschen altbacken.

04:56.290 --> 04:57.550
Ja, und ja, von

04:57.550 --> 04:59.550
CheckMK und jetzt habe ich mir... Es gibt ja noch

04:59.550 --> 05:01.750
mehr, es gibt ja noch Observium und Libre

05:01.750 --> 05:03.370
NMS und was es nicht alles gibt.

05:03.370 --> 05:05.410
Es gibt auch noch den Klassiker Nagios,

05:05.850 --> 05:06.950
wobei es den ja nicht mehr

05:06.950 --> 05:09.230
irgendwie in der alten klassischen Version gibt,

05:09.350 --> 05:11.350
sondern, ja, da blicke ich nicht mehr

05:11.350 --> 05:13.190
durch, ich habe schon ewig... Wobei ich sagen muss, dass

05:13.190 --> 05:15.110
als ich meine Ausbildung gemacht habe,

05:16.410 --> 05:17.370
habe ich ja angefangen mit

05:17.370 --> 05:22.480
Nagios. Und ich finde Nagios

05:22.480 --> 05:23.280
immer noch cool.

05:24.520 --> 05:25.960
Ich würde nicht unbedingt... Also, sagen wir mal so,

05:26.100 --> 05:27.800
ich würde sogar

05:27.800 --> 05:30.180
mal ein neues Nagios installieren,

05:30.300 --> 05:32.000
aber es gibt ja anscheinend kein neues

05:32.000 --> 05:33.640
mehr. Es gibt

05:33.640 --> 05:35.780
es gibt dieses komische Nagios X

05:35.780 --> 05:36.200
oder was?

05:36.340 --> 05:38.300
Jetzt gibt und wie es

05:38.300 --> 05:40.200
mit der normalen klassischen

05:40.200 --> 05:42.220
Open Source Version, keine Ahnung, da blickst du

05:42.220 --> 05:45.520
bei Nagios nicht mehr durch. Das

05:45.520 --> 05:47.760
UI ist so grausam. Ich muss das auf der Arbeit

05:47.760 --> 05:49.400
jeden Tag verwenden, da findest du nix.

05:50.260 --> 05:51.660
Und das ist das... Wisst ihr,

05:51.900 --> 05:53.780
ich habe keine Probleme mit irgendwelchen

05:53.780 --> 05:55.680
komplexen Sachen. Ich finde es eigentlich cool, wenn

05:55.680 --> 05:57.560
was, also wenn Software komplex ist, aber die

05:57.560 --> 05:59.640
ein gewisses System hat, wenn man dann mit der

05:59.640 --> 06:01.680
Zeit merkt, okay, man blickt da immer besser durch

06:01.680 --> 06:03.700
und alles gut. Aber CheckMK ist so

06:03.700 --> 06:05.260
ausgekotztes UI.

06:05.820 --> 06:07.480
Ich will mich damit überhaupt nicht beschäftigen,

06:07.480 --> 06:15.060
großartig. Habt ihr, habt ihr,

06:15.540 --> 06:16.800
warum habt ihr Nagios auf der

06:16.800 --> 06:18.500
Arbeit? Habt ihr das einfach die letzten

06:18.500 --> 06:20.740
15 Jahre schon, 20 Jahre schon?

06:21.160 --> 06:22.660
Oder habt ihr das neu installiert

06:22.660 --> 06:23.940
und dann mit einem dieser,

06:29.400 --> 06:30.100
was ist das?

06:32.920 --> 06:34.060
Quick Look at my Homelab.

06:35.780 --> 06:36.460
Das haben wir doch,

06:37.340 --> 06:39.160
das haben wir uns doch letzte Woche angeguckt.

06:40.240 --> 06:41.400
Das haben wir uns, das hatten wir auch schon

06:41.400 --> 06:42.800
in den Vorstellungen, das haben wir uns letzte Woche angeguckt.

06:43.120 --> 06:45.320
Da hab ich mich auch gefragt, wie viel Gerät der hat.

06:45.340 --> 06:47.500
Der hat ja zwei Schränke und eins ist voll mit Netzwerk.

06:47.500 --> 06:49.400
Da hab ich mich auch gefragt, wie viel Laser,

06:49.420 --> 06:51.400
vor allem. Da hab ich mich auch gefragt, wie viele Dinge

06:51.400 --> 06:53.120
hat der Typ eigentlich bei sich im Haus?

06:54.720 --> 06:55.080
Ja.

06:57.610 --> 06:59.210
Der hat auch, glaube ich, ein neues Video

06:59.210 --> 07:00.390
gemacht, so was er,

07:01.450 --> 07:03.310
was er alles in seinem Homelab macht,

07:03.430 --> 07:05.250
aber da sieht man nicht viel, da steht er nur da und

07:05.250 --> 07:05.670
erzählt.

07:07.390 --> 07:09.190
Tipps for powering your Homelab.

07:09.610 --> 07:09.750
Ja.

07:11.090 --> 07:12.910
Kekona-Probleme müsste man haben, oder?

07:17.690 --> 07:19.250
Kekona-Probleme müsste man haben.

07:19.690 --> 07:20.750
Wobei, ich weiß gar nicht,

07:21.370 --> 07:23.170
ist das U.S., U.S.A.?

07:23.170 --> 07:32.510
So, ich mach mal kurz

07:32.510 --> 07:33.370
Package-Updates.

07:35.090 --> 07:36.850
Arch Linux, by the way.

07:38.430 --> 07:39.450
I'm using Arch.

07:44.030 --> 07:45.790
Benutzt du eigentlich deinen Bartosera noch?

07:47.470 --> 07:47.730
Nee.

07:48.950 --> 07:49.690
Der steht da.

07:50.150 --> 07:51.270
Ich hab, ich hab sogar

07:51.270 --> 07:53.230
die SSD ausgetauscht letztens.

07:54.330 --> 07:55.810
Ich, ich, ich

07:55.810 --> 07:57.790
hätte Bock, das Ding mal abzugraden auf die,

07:57.790 --> 07:59.830
auf das neueste Bartosera und zu gucken, ob da

07:59.830 --> 08:01.590
jetzt Xbox und

08:01.590 --> 08:03.490
Sachen mittlerweile default sind, die

08:03.490 --> 08:05.050
bei meiner Version noch nicht default waren.

08:06.590 --> 08:07.310
Ich hab

08:07.310 --> 08:09.630
die SSD getauscht und hab

08:09.630 --> 08:11.630
Linux Mint für meinen Vater draufgehauen.

08:14.980 --> 08:16.240
Ich, ich wollte ihm, ich wollte

08:16.240 --> 08:17.420
ihm die Kiste geben, weil

08:17.420 --> 08:20.360
mein Vater hat ja so, hat ja einen alten Desktop-Rechner

08:20.360 --> 08:22.060
von mir gekriegt, mit Windows 11

08:22.060 --> 08:24.100
drauf, die, die alte Xeon-Kiste,

08:24.920 --> 08:26.120
weil er seine, seine

08:26.120 --> 08:27.900
alte Kiste irgendwie zerstört hat.

08:27.960 --> 08:29.880
Das Problem ist jetzt, das Ding ist so

08:29.880 --> 08:32.180
vollgemüllt mit irgendeinem Scheiß,

08:32.580 --> 08:34.080
der hat da, ey, was der da drauf wieder

08:34.080 --> 08:35.940
installiert hat, Mann. Der hat

08:35.940 --> 08:37.480
irgendwie fünf Browser,

08:38.100 --> 08:39.860
irgendwie, Avast

08:39.860 --> 08:42.080
Free Antivirus Browser

08:42.080 --> 08:43.960
oder sowas, ähm,

08:44.440 --> 08:45.900
TuneUp tut, boah, ich denk,

08:46.040 --> 08:47.820
Alter, was ist denn los, ey?

08:48.120 --> 08:49.980
Der verwendet die Computer auch schon seit,

08:50.220 --> 08:51.720
weiß ich,

08:51.800 --> 08:53.700
25 Jahren oder so,

08:54.100 --> 08:55.840
oder 30 Jahren, der hat relativ

08:55.840 --> 08:57.860
früh mit dem Kram, 30 Jahre, der hat

08:57.860 --> 09:00.020
relativ früh mit dem Kram sogar schon damals im Büro

09:00.020 --> 09:02.000
angefangen. Alter, wie

09:02.000 --> 09:03.740
kann man immer so planlos sein?

09:04.080 --> 09:08.700
Ja, ich hab da aber gar keinen Bock

09:08.700 --> 09:10.660
mehr, irgendwie Support für

09:10.660 --> 09:11.140
zu machen,

09:12.100 --> 09:14.720
zumal er sich letztens verkackt hat,

09:16.200 --> 09:16.820
denn letztens hat er

09:16.820 --> 09:18.780
irgendwie seinen Monitor zerstört, ich weiß auch

09:18.780 --> 09:20.760
nicht, wie er das geschafft hat, zumindest ging der Monitor nicht

09:20.760 --> 09:22.360
mehr, wilder Egel, danke für den Sub.

09:23.100 --> 09:24.780
Hab ich ihm gesagt, hey, ich bring dir, ich bring

09:24.780 --> 09:26.680
dir einen neuen vorbei, also alten

09:26.680 --> 09:30.920
gebrauchten von mir, und

09:30.920 --> 09:35.060
hab ich das angeschlossen

09:35.060 --> 09:37.360
und dann, dann hab ich festgestellt,

09:38.020 --> 09:38.420
dass

09:38.420 --> 09:41.000
das ist,

09:41.020 --> 09:43.060
also das ist ein ganz normal

09:43.060 --> 09:44.800
Full HD

09:44.800 --> 09:47.140
60

09:47.140 --> 09:48.800
Hertz Monitor noch gewesen,

09:48.960 --> 09:50.680
den hatte ich auf dem Dachboden stehen,

09:51.480 --> 09:52.620
ich mach mal Package Updates,

09:53.460 --> 09:53.780
und

09:53.780 --> 09:57.200
dann hab ich den angeschlossen, und dann hab ich festgestellt,

09:57.260 --> 09:58.820
du kannst die Auflösung nicht mehr einstellen,

09:59.340 --> 10:01.020
der geht, weil er die Grafikkarte

10:01.020 --> 10:02.360
nicht mehr erkennt, da ist eine olle,

10:02.560 --> 10:04.540
eine olle Radeon,

10:05.260 --> 10:06.940
irgendwas, was vor 5 Jahren

10:06.940 --> 10:08.960
mal aktuell gewesen ist drin, aber es reicht halt dicke,

10:09.160 --> 10:10.200
für 1080p,

10:11.020 --> 10:13.120
also er kennt die Grafikkarte nicht mehr, der hat seine

10:13.120 --> 10:15.120
Windows-Installation so zerstört,

10:15.840 --> 10:17.540
dass du auch keinen neuen Grafikkartentreiber

10:17.540 --> 10:18.940
installieren kannst, jedes Mal, wenn du

10:18.940 --> 10:20.840
von AMD was installieren willst,

10:21.340 --> 10:23.040
ploppt irgend so ein komisches Tune-Up

10:23.040 --> 10:25.380
Driver Utilities Ding

10:25.380 --> 10:27.220
auf, und sagt, man soll

10:27.220 --> 10:28.660
über die Webseite

10:28.660 --> 10:30.960
den Treiber runterladen, also ganz

10:30.960 --> 10:33.080
merkwürdiges Zeug, ey, das ist total

10:33.080 --> 10:34.460
versaut, die Kiste vor ihm.

10:35.400 --> 10:36.220
Hab ich ihm gesagt, ey,

10:37.160 --> 10:38.400
du kannst das jetzt verwenden mit

10:38.400 --> 10:41.000
1280, und,

10:41.020 --> 10:42.400
und weniger Farben,

10:43.660 --> 10:45.180
du müsstest hier mal, also wir müssten hier mal

10:45.180 --> 10:47.020
deine Windows-Geschichte neu installieren,

10:47.080 --> 10:48.420
dass das wieder ordentlich funktioniert,

10:50.940 --> 10:52.080
aber das mach ich heute nicht,

10:52.760 --> 10:54.800
weil Datensicherung, ich hab nix

10:54.800 --> 10:56.820
dabei, für irgendwie USB-Signal, und außerdem dauert

10:56.820 --> 10:58.660
das bestimmt 1-2 Stunden, bis das funktioniert, da hab ich heute

10:58.660 --> 11:00.720
keinen Bock drauf, das war noch vor Ostern,

11:00.980 --> 11:02.680
ich hab ihm vorgeschlagen, ey, weißt du was, wir können das

11:02.680 --> 11:03.700
nächstes Wochenende machen,

11:05.180 --> 11:06.660
aber dann hat er mich angerufen,

11:06.780 --> 11:08.700
irgendwie abends, da war er auch

11:08.700 --> 11:10.840
mit einverstanden, ne, äh, was soll

11:10.840 --> 11:12.640
er auch sonst anders da machen, ich mein, ich bin ja

11:12.640 --> 11:15.020
nicht irgendwie verpflichtet, on the fly alle Computerprobleme

11:15.020 --> 11:15.820
der Welt zu beheben,

11:17.820 --> 11:18.940
vor allem, wenn man es selbst verkackt

11:18.940 --> 11:21.870
hat, äh,

11:22.010 --> 11:24.370
Pog-Subscription will der Igel, falls ich euch vorgelesen hab,

11:24.750 --> 11:26.110
exzellent, sehr.

11:27.390 --> 11:28.390
So, und

11:28.390 --> 11:30.670
dann hat er sich abends bei mir angerufen,

11:30.750 --> 11:32.370
hat sich beschwert, warum ich

11:32.370 --> 11:34.310
ihn hier mit nem kaputten Computer hab sitzen

11:34.310 --> 11:35.350
lassen, und

11:35.350 --> 11:38.430
irgendwie, er vermutet,

11:38.570 --> 11:40.650
dass ich eh ihm einen Computer vorbeigebracht

11:40.650 --> 11:42.270
hab, der kaputt ist, so,

11:42.450 --> 11:43.630
um ihn zu ärgern, oder so,

11:44.270 --> 11:45.830
und er, äh, er kauft sich jetzt, äh,

11:45.830 --> 11:47.850
der ist alt und verwirrt, ja,

11:47.930 --> 11:50.210
da kannst du nicht so viel drauf geben, wenn er so

11:50.210 --> 11:52.290
zehn Dinger erzählt, mein Opa hat auch immer so

11:52.290 --> 11:54.650
merkwürdige Dinger erzählt, als er alt war,

11:55.150 --> 11:56.710
und, zumindest meinte er dann,

11:57.170 --> 11:58.630
er kauft sich jetzt, er kauft sich jetzt

11:58.630 --> 12:00.110
einen eigenen, er kauft sich jetzt einen neuen Computer,

12:00.230 --> 12:02.170
hab ich gesagt, okay, gut, nice, muss ich nix mehr machen,

12:02.390 --> 12:04.350
see you, und jetzt

12:04.350 --> 12:06.330
hab ich ein paar Wochen nix von ihm gehört, und gestern hat er

12:06.330 --> 12:09.980
angerufen, und da wusste er

12:09.980 --> 12:11.700
nix mehr von, dass er sich einen eigenen kaufen will,

12:12.280 --> 12:13.840
hat er wieder verdrängt,

12:14.140 --> 12:15.260
und,

12:15.900 --> 12:16.160
ja,

12:16.360 --> 12:19.260
und, ja,

12:19.640 --> 12:20.280
äh, zumindest,

12:21.060 --> 12:24.020
also, die, äh, die, die Bildrate

12:24.020 --> 12:25.160
wird ja immer noch nicht stimmen,

12:26.260 --> 12:27.860
und, dann meinte er so zu mir,

12:28.340 --> 12:29.920
ja, und wie verbleiben

12:29.920 --> 12:31.860
wir denn jetzt, hab ich gesagt, hä,

12:32.000 --> 12:33.620
wie, wie sollen wir denn verbleiben,

12:34.020 --> 12:35.360
ja, wann machst du das denn richtig,

12:35.880 --> 12:37.980
hab ich gesagt, wie, willst du dir keinen

12:37.980 --> 12:39.620
eigenen Rechner mehr kaufen, die,

12:39.620 --> 12:41.540
diese, weißt du, diese Art und Weise zu

12:41.540 --> 12:43.620
fragen, allein schon, kann einen ja triggern, ja,

12:43.820 --> 12:45.760
wie verbleiben wir denn,

12:45.900 --> 12:47.540
willst du dir keinen, willst du dir keinen

12:47.540 --> 12:49.640
neuen Rechner mehr kaufen, wie, warum

12:49.640 --> 12:51.680
soll ich mir einen neuen Rechner kaufen, und, weil er das letzte Mal

12:51.680 --> 12:53.580
gesagt hat, das wisst ihr, ich hab dem sogar

12:53.580 --> 12:55.440
eine E-Mail geschrieben, wo das drinne steht, zumindest,

12:55.920 --> 12:57.680
lange Rede, kurzer Sinn, wegen der

12:57.680 --> 12:59.360
Bartos-Serra-Kiste, da bin ich ja drauf gekommen,

13:00.000 --> 13:01.300
ich hab dem, damals,

13:01.500 --> 13:03.340
vor ein paar Wochen, also kurz vor Ostern,

13:03.720 --> 13:05.600
hab ich dem Linux Mint auf der Bartos, ich hab

13:05.600 --> 13:07.840
die SSD getauscht, hab dem Linux Mint

13:07.840 --> 13:09.640
auf der Bartos-Serra-Kiste installiert,

13:09.700 --> 13:10.660
weil ich mir gedacht hab, ey,

13:12.200 --> 13:13.680
selbst, wenn wir Windows

13:13.680 --> 13:14.720
jetzt neu installieren,

13:14.980 --> 13:15.340
äh,

13:15.900 --> 13:17.180
auf der alten Kiste,

13:18.080 --> 13:20.180
das sieht in zwei, drei

13:20.180 --> 13:21.700
Monaten wieder so aus,

13:22.700 --> 13:24.240
und ich glaube, ich stell dem da jetzt

13:24.240 --> 13:26.060
einfach eine Linux Mint-Kiste hin,

13:26.880 --> 13:28.140
und dann soll er gucken, wie er damit

13:28.140 --> 13:28.740
klarkommt,

13:29.100 --> 13:32.140
weil der macht ja eh nix, außer

13:32.140 --> 13:33.540
einen Browser offen zu haben,

13:35.960 --> 13:37.920
das Ding ist nur, ich will, ich will, dass der

13:37.920 --> 13:39.720
sagt, dass der das

13:39.720 --> 13:41.480
ausprobiert, und dass der das machen will,

13:41.940 --> 13:43.780
weil sonst erzählt der mir nachher wieder, ich hätte

13:43.780 --> 13:45.920
ihm irgendein Computer, was kaputt, das hingestellt,

13:49.740 --> 13:50.620
ich will mich möglichst

13:50.620 --> 13:52.440
wenig mit dem ganzen Mist beschäftigen müssen.

13:56.600 --> 13:58.160
Ja, das gibt's aber für, für, ne,

13:58.220 --> 14:00.080
Linux Mint kann er nix installieren, da weiß er

14:00.080 --> 14:00.960
doch gar nicht, wie das geht.

14:02.740 --> 14:04.320
Der wird im Leben nicht auf die Idee kommen,

14:05.480 --> 14:06.500
Upt-Installs, also mal ganz

14:06.500 --> 14:07.700
abgesehen, dass es das gar nicht gibt,

14:08.140 --> 14:09.940
Upt-Installs zu machen, oder aber

14:09.940 --> 14:12.100
jetzt irgendwelche

14:12.100 --> 14:14.260
Software, das kriegt

14:14.260 --> 14:14.820
er nicht auf die Reihe.

14:16.080 --> 14:16.440
Theoretisch

14:16.440 --> 14:22.340
könnte ich dem einfach Hutrechte entziehen.

14:23.100 --> 14:24.040
Dann mach ich das.

14:24.880 --> 14:26.280
Jexio, danke schön, nochmal hier für

14:26.280 --> 14:27.360
fünf Gifted-Subs.

14:27.400 --> 14:28.380
Gestern auch schon hier

14:28.380 --> 14:30.600
zugeschlagen.

14:31.120 --> 14:32.480
Extremely excellent.

14:33.340 --> 14:33.920
Fünf Subs.

14:35.760 --> 14:39.120
Was heißt denn

14:39.120 --> 14:40.540
fünf auf Lateinisch?

14:41.000 --> 14:42.980
Keine Ahnung. Fünffach nice.

14:45.600 --> 14:51.340
Wir hatten Glück gehabt hier.

14:51.600 --> 14:53.480
Die Erbsenraube, hab ich auch schon öfters gesehen.

14:54.000 --> 14:55.560
SirKillerLot, Alex,

14:55.680 --> 14:57.360
Sela, Edri und

14:57.360 --> 14:58.160
Tuchti.

14:59.460 --> 15:01.320
Hattet ihr schon mal das Problem, dass der öffentliche System

15:01.320 --> 15:02.640
so viel...

15:02.640 --> 15:03.640
Äh...

15:03.640 --> 15:04.820
Nee.

15:10.230 --> 15:11.750
Also, ich denke mal,

15:11.770 --> 15:13.290
darauf wird's rauslaufen.

15:13.550 --> 15:15.210
Ich werde jetzt aber erstmal nix machen.

15:16.110 --> 15:17.530
Hab ich jetzt eigentlich schon rebooted?

15:17.750 --> 15:19.970
Nee, gell? Aber ich hab alle Package-Updates

15:19.970 --> 15:22.070
gemacht. Ich werde jetzt erstmal nix machen.

15:22.550 --> 15:24.050
Ich werde jetzt warten, bis er sich wieder rührt

15:24.050 --> 15:25.970
und irgendwas fliegen seinem Rechnermann.

15:26.410 --> 15:26.570
Weil,

15:28.370 --> 15:30.090
selbst wenn ich den Windows 11

15:30.090 --> 15:31.410
neu installiere auf der Kiste,

15:31.910 --> 15:33.250
dann fehlt ihm wieder irgendwas.

15:33.930 --> 15:35.150
Oder, ähm,

15:35.690 --> 15:36.510
nach zwei Monaten.

15:36.510 --> 15:38.470
Und es sieht halt wieder genauso kaputt aus.

15:39.610 --> 15:40.790
Ist halt richtig, richtig

15:40.790 --> 15:41.570
für'n Arsch.

15:42.310 --> 15:44.530
Äh, was hat die Chatbrains-Toolbox für Probleme?

15:44.730 --> 15:44.870
Okay.

15:46.090 --> 15:46.970
Oh, wir müssen updaten.

15:47.910 --> 15:49.650
C-Line brauchen wir doch eigentlich gar nicht.

15:49.710 --> 15:51.550
Das machen wir so selten, das können wir wieder uninstallen.

15:52.070 --> 15:54.810
Ryder gibt's keine Updates, PyCharm-Golan gibt Updates.

15:54.910 --> 15:55.570
Okay, let's go.

15:57.430 --> 15:58.590
Du kannst ihm bei Windows auch die

15:58.590 --> 15:59.550
Admin-Rechte wegnehmen.

16:00.150 --> 16:01.250
Ja, das ist richtig.

16:01.810 --> 16:04.370
Ich glaube aber nicht, dass das grundsätzlich was

16:04.370 --> 16:05.450
leh... was behebt.

16:06.510 --> 16:08.170
Es behebt sicherlich, dass er

16:08.170 --> 16:10.110
Tune-Up und Geschiss installiert.

16:10.970 --> 16:12.430
Aber es gibt ja mittlerweile auch

16:12.430 --> 16:14.490
genug Müll, den er sich installieren kann

16:14.490 --> 16:15.370
ohne Admin-Rechte.

16:15.890 --> 16:18.450
Die sind halt nur in seinem Account, aber das Ding ist halt auch wieder nicht richtig

16:18.450 --> 16:26.500
benutzbar. Ja, Windows-Admin-Rechte

16:26.500 --> 16:28.020
entziehen wäre auch sehr sinnig, ja.

16:37.390 --> 16:39.050
Am besten wäre, wenn er sich mit Linux Mint

16:39.050 --> 16:40.070
irgendwie anfreundet.

16:44.850 --> 16:45.850
Ja, das stimmt wohl.

16:47.010 --> 16:48.930
Das ist eigentlich gar keine schlechte Idee.

16:49.650 --> 16:55.110
Wenn er mit...

16:55.110 --> 16:56.950
kriegt einfach keine Admin-Rechte, ja.

16:59.520 --> 17:00.860
Wie geht... wie macht man das eigentlich?

17:01.240 --> 17:02.460
Einfach einen neuen Account erstellen, ne?

17:06.040 --> 17:07.600
Einfach einen neuen Account erstellen.

17:07.860 --> 17:10.160
Den Admin-Account mit dem Passwort behalte ich.

17:37.190 --> 17:38.610
Ne, ich lege da einen lokalen

17:38.610 --> 17:39.570
Account an und

17:39.570 --> 17:42.490
vielleicht haue ich... ich haue dem glaube ich

17:42.490 --> 17:44.410
auch wieder Teamviewer oder sowas drauf,

17:44.510 --> 17:45.970
dass ich zur Node Remote gucken kann.

17:56.300 --> 17:57.240
So, zack.

17:58.400 --> 17:59.740
So, das Ganze mal rebooten hier.

18:00.160 --> 18:01.100
Package Updates durch.

18:04.910 --> 18:06.850
Ja, ich glaube, das ist keine schlechte Idee.

18:11.320 --> 18:11.800
Wobei ich

18:11.800 --> 18:14.600
glaube, weniger Support

18:14.600 --> 18:15.560
leisten zu müssen.

18:17.900 --> 18:19.320
Unter Linux Mint unterwegs.

18:19.500 --> 18:21.900
Ich meine, ganz ehrlich, der benutzt eigentlich

18:21.900 --> 18:23.540
nur einen Webbrowser.

18:23.660 --> 18:24.860
Der benutzt nichts anderes.

18:25.840 --> 18:27.620
Der hat den ganzen anderen Schrott da drauf,

18:27.740 --> 18:28.780
aber den braucht der nicht.

18:29.040 --> 18:30.500
Tune-Up und Geschiss, ja.

18:31.220 --> 18:32.960
Weiß gar nicht, ob es hier auf der Welt irgendjemand gibt,

18:33.080 --> 18:36.360
der Tune-Up und diese hässlichen Windows-Dinger braucht.

18:48.900 --> 18:50.080
Ja, ja, so ist es da auch.

18:52.400 --> 18:55.220
Und...

18:55.220 --> 18:56.700
Ja, ich glaube...

18:56.700 --> 19:02.100
Und das Ding funktioniert halt einmal

19:02.100 --> 19:02.760
und geht dann.

19:18.100 --> 19:19.480
Das ist eigentlich ganz nice, ja.

19:24.770 --> 19:24.990
Naja.

19:26.410 --> 19:27.990
Ach ja, und was mir wieder aufgefallen ist,

19:29.090 --> 19:30.570
ich habe Linux Mint draufgehauen

19:30.570 --> 19:31.250
auf diese Kiste.

19:31.370 --> 19:32.790
Ich habe, also, die...

19:32.790 --> 19:38.660
Hallo Leute, hier ist der...

19:38.660 --> 19:40.900
Ja, auf diese Kiste, und zwar ist das hier

19:40.900 --> 19:43.520
so...

19:43.520 --> 19:46.760
Moment, guck mal,

19:46.960 --> 19:48.760
ich habe mich selbst debated mit meinem Werbelink.

19:48.780 --> 19:49.460
Hallo Leute, hier ist der...

19:49.460 --> 19:52.550
Ich habe mich selbst debated.

19:58.070 --> 19:59.730
So eine Kiste hier habe ich.

20:01.810 --> 20:03.590
Und ich habe darauf Linux Mint

20:03.590 --> 20:04.190
raufgehauen.

20:04.430 --> 20:08.270
Und jetzt ratet mal, meint ihr,

20:08.670 --> 20:09.590
es funktioniert,

20:10.390 --> 20:13.530
dass man Videos im Browser

20:13.530 --> 20:14.670
GPU decodet?

20:16.250 --> 20:17.910
Nein, natürlich funktioniert es nicht.

20:18.730 --> 20:21.150
Wo wir wieder bei einem meiner Lieblingsthemen sind,

20:21.610 --> 20:23.030
was unter Linux falsch läuft

20:23.030 --> 20:23.590
in der Richtung.

20:24.890 --> 20:27.470
Natürlich funktioniert kein GPU-Decoding

20:27.470 --> 20:28.490
von Videos im Browser.

20:29.650 --> 20:31.110
Warum? Ich habe keine Ahnung.

20:31.110 --> 20:33.110
Irgendwas...

20:34.430 --> 20:36.430
Was nicht in der richtigen Kombination ist.

20:36.430 --> 20:38.430
Mesa-Treiber, GPU-Treiber,

20:38.430 --> 20:40.430
Windows-Gedöns,

20:40.430 --> 20:42.430
Browser-Version, whatever.

20:42.430 --> 20:46.060
Keine Ahnung.

20:46.060 --> 20:48.060
Aber das Ding ist schnell genug,

20:48.060 --> 20:50.060
um Videos abzuspielen auf der CPU.

20:50.060 --> 20:53.440
Das ist nicht so wild.

20:53.440 --> 20:56.940
Ja, so ein Teil hier.

20:56.940 --> 21:12.000
Ne, hat er auch nicht.

21:12.000 --> 21:14.000
Ja,

21:14.000 --> 21:16.000
das ist echt so ein leidiges Thema.

21:16.000 --> 21:18.000
So.

21:18.000 --> 21:20.000
Rebooted.

21:20.000 --> 21:23.460
Nice.

21:23.460 --> 21:25.460
Wichtigste Sache, wichtigster Check.

21:25.460 --> 21:27.460
ASCII-Quarium geht noch, dann ist alles gut.

21:27.460 --> 21:34.230
Oh man.

21:34.230 --> 21:36.230
Ich warte jetzt erstmal, bis er sich wieder meldet.

21:36.230 --> 21:38.230
Vielleicht, äh,

21:38.230 --> 21:40.230
hofft er sich ja doch einen eigenen neuen Rechner.

21:40.230 --> 21:42.230
Gut ist.

21:42.230 --> 21:45.600
Ja, dann lasst uns mal kurz gucken,

21:45.600 --> 21:47.600
was auf, äh, ne, Trend, Trend.

21:47.600 --> 21:49.600
Ach ja,

21:49.600 --> 21:51.600
wisst ihr, was wir übrigens auch mal wieder machen müssen?

21:51.600 --> 21:53.600
Unbedingt.

21:53.600 --> 21:55.600
Wir müssen Set-Servers mal machen,

21:55.600 --> 21:57.600
weil, die haben

21:57.600 --> 21:59.600
mittlerweile ganz viele neue Sachen

21:59.600 --> 22:01.600
hinzugefügt. Guckt mal, die haben

22:01.600 --> 22:03.600
mittlerweile 45 Szenarios.

22:03.600 --> 22:05.600
Mein Problem ist, ich weiß gar nicht, was wir davon

22:05.600 --> 22:07.600
schon gemacht haben und was nicht.

22:07.600 --> 22:09.600
Wir haben höchstens 20 oder

22:09.600 --> 22:11.600
30 davon gemacht, also,

22:11.600 --> 22:13.600
wir haben bestimmt nochmal 10 oder 15 jetzt,

22:13.600 --> 22:17.110
die wir noch nicht gemacht haben.

22:17.110 --> 22:19.110
Manche, für manche neue Szenarios

22:19.110 --> 22:21.110
brauchen wir übrigens sogar einen Pro-Account,

22:21.110 --> 22:23.110
was ich sehr nice finde, ehrlich gesagt.

22:23.110 --> 22:25.110
Dass es

22:25.110 --> 22:27.110
mittlerweile die Möglichkeit

22:27.110 --> 22:29.110
gibt, hier Abos abzuschließen.

22:29.110 --> 22:31.110
Normalerweise finde ich sowas ja kacke,

22:31.110 --> 22:33.110
ja, das ist ja, ah, warum gibst du mal Abos?

22:33.110 --> 22:35.110
In dem Fall finde ich es aber gut, weil das ein

22:35.110 --> 22:37.110
richtig nicer Service ist

22:37.110 --> 22:39.110
und sich das ja irgendwie

22:39.110 --> 22:41.110
finanzieren muss.

22:41.110 --> 22:43.110
Die ganze AWS Sachen

22:43.110 --> 22:45.110
kosten ja alle Geld.

22:45.110 --> 22:47.110
Das hat der, das hat der halt früher

22:47.110 --> 22:49.110
selbst bezahlt, aber mittlerweile ist der Service

22:49.110 --> 22:51.110
relativ bekannt und ich denke mal, das kostet jetzt auch nicht

22:51.110 --> 22:53.110
wenig. Und dementsprechend

22:53.110 --> 22:55.110
irgendwie, irgendwie muss der Kram sich ja finanzieren,

22:55.110 --> 22:57.110
ja, also finde ich es ganz gut. Zumal sich, zumal sich

22:57.110 --> 23:13.920
es auch in, äh,

23:13.920 --> 23:15.920
ja, und ganz ehrlich, 5 Dollar,

23:15.920 --> 23:17.920
um das mal einmal durchzumachen, ist schon, ist, ist

23:17.920 --> 23:26.870
auch in Ordnung, ja.

23:26.870 --> 23:28.870
Direct Access to VMs, VMs with Internet

23:28.870 --> 23:30.870
Access, das ist schon mal problematisch,

23:30.870 --> 23:32.870
könnte ich mir vorstellen, weil du dann cheaten kannst.

23:32.870 --> 23:36.560
Vielleicht sind es aber auch nur spezielle

23:36.560 --> 23:38.560
Szenarios, weil viele von den

23:38.560 --> 23:40.560
Szenarios kannst du easy cheaten, wenn du Internet

23:40.560 --> 23:44.770
Zugang hast. Sachen nachinstallieren,

23:44.770 --> 23:46.770
die das Leben einfacher machen und sowas.

23:46.770 --> 23:50.720
Ich hab meinem Chef vorgeschlagen, ob er

23:50.720 --> 23:52.720
sich nicht das hier kaufen möchte.

23:52.720 --> 23:54.720
Für Vorstellungsgespräche.

23:54.720 --> 23:56.720
Also wer den Service nicht kennt, man

23:56.720 --> 23:58.720
hat hier kaputte, kaputte

23:58.720 --> 24:00.720
Server auf AWS,

24:00.720 --> 24:02.720
die man innerhalb von einer gewissen Zeit fixen

24:02.720 --> 24:04.720
muss. Das ist quasi

24:04.720 --> 24:06.720
sowas wie

24:06.720 --> 24:08.720
Capture the Flag nur für

24:08.720 --> 24:12.610
Linux Admins. Und die easy

24:12.610 --> 24:14.610
Szenarios sind auch wirklich

24:14.610 --> 24:16.610
easy. Ja, hier bei dem ersten

24:16.610 --> 24:18.610
musst du, äh, LS

24:18.610 --> 24:20.610
off machen auf einer Datei und dann kill auf

24:20.610 --> 24:22.610
einen Prozess und sowas. Also ich finde,

24:22.610 --> 24:24.610
das hier ist was, das kann man ohne Probleme mal

24:24.610 --> 24:26.610
mit einem Linux Admin als

24:26.610 --> 24:28.610
für ein Vorstellungsgespräch

24:28.610 --> 24:30.610
in die Hand drücken, ein paar davon. Und sagen,

24:30.610 --> 24:32.610
mach mal. Einfach um zu gucken, wie gut

24:32.610 --> 24:34.610
er damit klarkommt. Weil die Dinger sind so

24:34.610 --> 24:36.610
easy. Die kann wirklich jeder,

24:36.610 --> 24:38.610
der ein bisschen Linux Erfahrung hat

24:38.610 --> 24:40.610
und gerade jemand, der sich bewirbt für so eine Stelle

24:40.610 --> 24:42.610
und selbst wenn er nervös ist bei der,

24:42.610 --> 24:44.610
beim Vorstellungsgespräch. Also,

24:44.610 --> 24:46.610
ein LS off auf einer Datei und ein kill auf einen Prozess,

24:46.610 --> 24:48.610
das kann ich, das kann ich quasi machen,

24:48.610 --> 24:50.610
wenn ich von einem Haifisch

24:50.610 --> 24:52.610
verfolgt werde im Schwimmbad, so.

24:52.610 --> 24:54.610
Kann ich das nebenbei machen.

24:54.610 --> 24:56.610
Das kann, das kriegt jeder Linux Admin hin,

24:56.610 --> 24:58.610
der selbst, wenn er super

24:58.610 --> 25:00.610
nervös ist. Ja, bei den anderen Szenarien

25:00.610 --> 25:02.610
würde ich sagen, okay, das

25:02.610 --> 25:04.610
ist was, wo man halt gucken muss,

25:04.610 --> 25:09.140
ob das den jeweiligen Leuten liegt,

25:09.140 --> 25:11.140
weil beispielsweise, wenn, wenn du mich hier

25:11.140 --> 25:13.140
an sowas setzen würdest, irgendwas mit

25:13.140 --> 25:15.140
SQLite, äh, ne, mit

25:15.140 --> 25:17.140
nicht mit SQL, mit MySQL,

25:17.140 --> 25:19.140
da habe ich eh nicht so großartig Ahnung, könnte also sein, dass ich

25:19.140 --> 25:21.140
sogar Medium-Szenarien verkacke.

25:21.140 --> 25:23.140
Aber die easy Szenarien sind wirklich easy.

25:23.140 --> 25:25.140
Haben wir hier im Stream auch schon gemacht.

25:25.140 --> 25:27.140
Also wir haben damals,

25:27.140 --> 25:30.900
wir haben damals alles,

25:30.900 --> 25:32.900
ne, L ist oft zusammengeschrieben,

25:32.900 --> 25:34.900
wir haben damals

25:34.900 --> 25:36.900
alle Szenarien durchgemacht,

25:36.900 --> 25:38.900
komplett, auch inklusive den schweren,

25:38.900 --> 25:40.900
aber damals gab es noch nicht so viele.

25:40.900 --> 25:42.900
Also das haben wir, das kann ich mich

25:42.900 --> 25:44.900
daran erinnern, das haben wir auch gemacht.

25:44.900 --> 25:49.620
Ich glaube, das hier hatten wir auch

25:49.620 --> 25:53.060
gemacht. Das hier

25:53.060 --> 25:55.060
bin ich mir nicht sicher, ich glaube auch.

25:55.060 --> 26:02.600
Also uns fehlen, uns fehlen

26:02.600 --> 26:04.600
auch, ich, ich glaube die Docker, Docker

26:04.600 --> 26:06.600
Kubernetes App hatten wir auch, ich glaube, wir müssen

26:06.600 --> 26:08.600
die alle nochmal machen und

26:08.600 --> 26:10.600
ich, ich, also

26:10.600 --> 26:12.600
Gamepad, danke für den Sub. Ich glaube,

26:12.600 --> 26:14.600
ich mache mir einen Account

26:14.600 --> 26:16.600
für 5 Dollar im Monat und wir machen

26:16.600 --> 26:18.600
die nochmal im Stream alle zusammen durch.

26:18.600 --> 26:20.600
Ja,

26:20.600 --> 26:22.600
ich habe dies letzte Mal gemacht,

26:22.600 --> 26:24.600
da gab es hier noch gar keine Registrierung

26:24.600 --> 26:26.600
und dann habe ich, da haben wir nochmal 2, 3 gemacht

26:26.600 --> 26:30.800
mit Registrierung.

26:30.800 --> 26:35.400
Ja, ich glaube, ich kaufe mir einfach

26:35.400 --> 26:37.400
irgendeinen

26:37.400 --> 26:39.400
5, 5 Dollar

26:39.400 --> 26:41.400
pro Monat und dann machen wir die, machen wir die

26:41.400 --> 26:43.400
nochmal alle im Stream

26:43.400 --> 26:45.400
zusammen. Schadet ja nichts, ich meine, wann haben wir das

26:45.400 --> 26:47.400
das letzte Mal gemacht? Selbst wenn wir die doppelt machen,

26:47.400 --> 26:49.400
es ist 3 Jahre her oder 2 Jahre her oder so.

26:49.400 --> 27:13.250
Ich glaube, sogar noch vor Corona.

27:13.250 --> 27:15.250
So, also, dann lass uns mal gucken, was auf Shithub so

27:15.250 --> 27:17.250
trendet diese Woche.

27:17.250 --> 27:19.250
DOS, ja, das habe ich mitgekriegt,

27:19.250 --> 27:21.250
dass Microsoft den, den DOS

27:21.250 --> 27:24.880
Source Code veröffentlicht hat.

27:24.880 --> 27:48.840
Was auch immer. Ja,

27:48.840 --> 27:50.840
Zeit geworden, dass mal DOS 4 veröffentlicht wurde.

27:50.840 --> 28:01.000
Assemble erstellt.

28:01.000 --> 28:10.260
Sind das nicht Sachen, die schon in C

28:10.260 --> 28:15.430
sind? Ne.

28:15.430 --> 28:19.060
Scheiße. Ach du

28:19.060 --> 28:21.060
Scheiße.

28:21.060 --> 28:23.060
F ist das doch bestimmt in C, oder?

28:23.060 --> 28:39.560
Ja. Ho. Begin

28:39.560 --> 28:41.560
End. Was ist das für ein weird

28:41.560 --> 28:45.440
C-Dialekt?

28:45.440 --> 28:47.440
Was soll das sein?

28:47.440 --> 28:49.440
Begin End?

28:49.440 --> 28:51.440
Ist das basic,

28:51.440 --> 28:53.440
C-basic oder was?

28:53.440 --> 29:02.390
What the, was ist, was hat

29:02.390 --> 29:04.390
es mit diesem Begin und End auf sich?

29:04.390 --> 29:25.360
Ach, keine Ahnung. Egal.

29:25.360 --> 29:29.250
Also, DOS trendet.

29:29.250 --> 29:31.250
AI, AI.

29:31.250 --> 29:38.150
Ne. AI.

29:38.150 --> 29:47.480
Ja, das sind so Dinger.

29:47.480 --> 29:49.480
Ich kenne das ja bei uns.

29:49.480 --> 29:51.480
Wie gesagt, Frankfurt Finanzbranche,

29:51.480 --> 29:53.480
Versicherungen,

29:53.480 --> 29:55.480
die haben auch teilweise so uralte

29:55.480 --> 29:57.480
Software am Start.

29:57.480 --> 29:59.480
Die ist aber so

29:59.480 --> 30:01.480
in den ganzen Abläufen und Sachen

30:01.480 --> 30:03.480
integriert, das, das wirst du nie

30:03.480 --> 30:06.850
los. Deswegen, wundert mich nicht.

30:06.850 --> 30:08.850
Und, und, und

30:08.850 --> 30:10.850
an so einem

30:10.850 --> 30:12.850
Asset Management System oder Warehouse,

30:12.850 --> 30:14.850
der hängt ja auch, der hängt ja irgendwo alles dran, ja.

30:14.850 --> 30:16.850
Ja.

30:16.850 --> 30:18.850
Wahrscheinlich wird das auch nicht mehr supported.

30:18.850 --> 30:20.850
Die Kasse läuft

30:20.850 --> 30:22.850
auf Windows XP. Ja, wundert mich nicht.

30:22.850 --> 30:24.850
Ich mein, wie war das letztens bei

30:24.850 --> 30:26.850
der Warenstellenanzeige für Windows 3.11

30:26.850 --> 30:28.850
Admins?

30:28.850 --> 30:30.850
Gibt halt so Legacy Dinger.

30:30.850 --> 30:32.850
Und man muss aber auch sagen,

30:32.850 --> 30:34.850
es ist ja auch gar nicht schlimm.

30:34.850 --> 30:36.850
Solange das nicht Systeme sind, die irgendwie

30:36.850 --> 30:38.850
im Netzwerk hängen und Internet

30:38.850 --> 30:40.850
Access haben, beziehungsweise umgedreht

30:40.850 --> 30:42.850
noch schlimmer Access von draußen haben,

30:42.850 --> 30:44.850
ist, ist das, ist das vollkommen

30:44.850 --> 30:46.850
okay. Gestern habe ich irgendwie

30:46.850 --> 30:48.850
einen Beitrag gehört im Radio beim Mittagessen.

30:48.850 --> 30:50.850
Habe ich Radio angeschaltet.

30:50.850 --> 30:52.850
Und da haben sie sich drüber ausgelassen,

30:52.850 --> 30:54.850
über irgendwelche, ich finde das, kennen die das?

30:54.850 --> 30:56.850
Ich finde das immer so cringe,

30:56.850 --> 30:58.850
wenn die, wenn die sich im Radio und Fernsehen

30:58.850 --> 31:00.850
auslassen über irgendwelche, die

31:00.850 --> 31:06.150
Cyberattacken.

31:06.150 --> 31:08.150
Ich sage dazu, keine Ahnung,

31:08.150 --> 31:10.150
Hackerangriff oder irgendwas.

31:10.150 --> 31:12.150
Ich sage halt meistens das, was es gewesen

31:12.150 --> 31:14.150
ist, aber die sagen immer Cyberangriffe.

31:14.150 --> 31:16.150
Ich finde dieses Wort Cyberangriff

31:16.150 --> 31:18.150
immer so, ah, ich weiß nicht.

31:18.150 --> 31:20.150
Zumindest da weißt du schon gleich immer, was kommt.

31:20.150 --> 31:22.150
Und da haben sie sich drüber unterhalten,

31:22.150 --> 31:24.150
wie Deutschland aufgestellt wäre

31:24.150 --> 31:26.150
gegen russische Cyberangriffe.

31:26.150 --> 31:28.150
Und dann haben sie irgendein

31:28.150 --> 31:30.150
interviewt, der bei irgendeinem,

31:30.150 --> 31:32.150
keine Ahnung, bei irgendeinem

31:32.150 --> 31:34.150
Ministerium arbeitet, der für zuständig sind

31:34.150 --> 31:36.150
und die haben natürlich gesagt, Deutschland ist

31:36.150 --> 31:38.150
sehr gut aufgestellt dagegen, ja.

31:38.150 --> 31:40.150
Und

31:40.150 --> 31:42.150
dann haben sie sich weiter drüber ausgelassen,

31:42.150 --> 31:44.150
Angriffe auf kritische Infrastruktur

31:44.150 --> 31:46.150
sind hier an der Tagesordnung und

31:46.150 --> 31:48.150
werden permanent abgewehrt.

31:48.150 --> 31:50.150
Und an der Stelle musste ich mir mal denken, so, okay,

31:50.150 --> 31:52.150
Moment, wisst ihr, was ich den jetzt mal gerne fragen würde?

31:52.150 --> 31:54.150
Also kritische Infrastruktur, ja,

31:54.150 --> 31:56.150
das ist für mich sowas wie

31:56.150 --> 31:58.150
Flughäfen, Atomkraftwerke,

31:58.150 --> 32:00.150
Trinkwasserversorgung und

32:00.150 --> 32:02.150
ja, Verkehrsleits, so

32:02.150 --> 32:04.150
kritische Infrastruktur. An der Stelle

32:04.150 --> 32:06.150
hätte ich den Typ gerne gefragt, hätte ich gesagt, stopp,

32:06.150 --> 32:09.780
stopp, was er denn genau

32:09.780 --> 32:11.780
meint. Und ob er mir sagen möchte,

32:11.780 --> 32:13.780
dass kritische Infrastruktur etwa

32:13.780 --> 32:15.780
öffentlich aus dem Internet erreichbar wäre.

32:15.780 --> 32:17.780
Das hätte mich echt mal interessiert.

32:17.780 --> 32:21.410
Aber natürlich hat die, die den Radio

32:21.410 --> 32:23.410
Feature hat absolut keine Ahnung von der Thematik

32:23.410 --> 32:25.410
gehabt. Das hätte ich den gerne mal

32:25.410 --> 32:27.410
gefragt, was meint der denn eigentlich

32:27.410 --> 32:29.410
mit, gibt Laufen, Angriffe, wird

32:29.410 --> 32:31.410
abgewehrt. Heißt das, wir haben kritische

32:31.410 --> 32:33.410
Infrastruktur im Internet hängen, oder wie?

32:33.410 --> 32:35.410
Oder wie

32:35.410 --> 32:37.410
ist das gemeint?

32:37.410 --> 32:39.410
Ich meine, mich würde es nicht wundern,

32:39.410 --> 32:44.320
ja. Da machen die immer ein

32:44.320 --> 32:46.320
riesen Ding draus.

32:46.320 --> 32:48.320
Ganz ehrlich, wenn ich Windows

32:48.320 --> 32:50.320
Windows 95 Systeme

32:50.320 --> 32:52.320
heutzutage irgendwie öffentlich

32:52.320 --> 32:54.320
erreichbar habe,

32:54.320 --> 32:56.320
habe ich halt echt

32:56.320 --> 32:58.320
es so grundlegend verkackt, dass man es gar nicht

32:58.320 --> 33:05.480
kaum mehr verkacken kann.

33:05.480 --> 33:07.480
Ich glaube der weit, die weit

33:07.480 --> 33:09.480
überwiegende Anzahl aller

33:09.480 --> 33:11.480
Cyberangriffe dürfte

33:11.480 --> 33:13.480
weltweit irgendwelche Verschlüsselung

33:13.480 --> 33:15.480
Trojaner Geschichten sein.

33:15.480 --> 33:17.480
So nach dem Motto,

33:17.480 --> 33:19.480
E-Mail kommt beim

33:19.480 --> 33:21.480
Chef raus, bei der Sekretärin vom Chef,

33:21.480 --> 33:23.480
bei der Personalabteilung

33:23.480 --> 33:25.480
mit irgendeinem halbwegs gut

33:25.480 --> 33:27.480
gemachten Text und einem

33:27.480 --> 33:29.480
Screenslaver im Anhang. Und natürlich, was machen die Leute

33:29.480 --> 33:31.480
Ah, guck mal da, da hat uns einer seine

33:31.480 --> 33:33.480
Bewerbung geschickt.

33:33.480 --> 33:35.480
Im Screenslaver-Format, haha, doppelt anklicken,

33:35.480 --> 33:37.480
Warnung ignorieren,

33:37.480 --> 33:39.480
continue, execute, oh nein,

33:39.480 --> 33:41.480
unser File-Share ist verschlüsselt.

33:41.480 --> 33:43.480
Das dürften wahrscheinlich die weit

33:43.480 --> 33:45.480
meisten aller

33:45.480 --> 33:54.290
Angriffe sein. So, was trenne

33:54.290 --> 33:56.290
denn sonst noch?

33:56.290 --> 34:09.010
AI, noch mehr

34:09.010 --> 34:11.010
Blazingly Fast Powerful Editor,

34:11.010 --> 34:13.010
was ist denn das jetzt schon wieder? Das ist doch

34:13.010 --> 34:15.010
nicht dieses Ding, das ist nochmal ein

34:15.010 --> 34:17.010
Editor in Rust.

34:17.010 --> 34:19.010
Jetzt haben wir ja schon fünf konkurrierende

34:19.010 --> 34:21.010
Editors in Rust. Wie hieß dieses andere

34:21.010 --> 34:25.350
Ding, was es nur für Mac gibt?

34:25.350 --> 34:27.350
Ich hab's schon wieder vergessen, das war mal, was jetzt ein paar Wochen

34:27.350 --> 34:29.350
lang voll gehypt war.

34:29.350 --> 34:31.350
Mac-only written in Rust Editor,

34:31.350 --> 34:33.350
den sie jetzt ein bisschen

34:33.350 --> 34:35.350
gehypt...

34:35.350 --> 34:37.350
Ja, ja, genau, ich glaub das ist es.

34:37.350 --> 34:45.590
Was ist das?

34:45.590 --> 34:47.590
Steht grad keine Beschreibung.

34:47.590 --> 34:49.590
No description?

34:49.590 --> 34:51.590
No description.

34:51.590 --> 34:53.590
Okay, jetzt weiß ich auch warum das keine Description

34:53.590 --> 34:55.590
hat, dass Nintendo das nicht findet.

34:55.590 --> 34:57.590
Äh...

34:57.590 --> 34:59.590
AI...

34:59.590 --> 35:01.590
AI...

35:01.590 --> 35:03.590
China-Chinesen-Messenger...

35:03.590 --> 35:05.590
China-Chinesen-Messenger...

35:05.590 --> 35:08.960
A Based Rollup.

35:08.960 --> 35:10.960
Jetzt weiß man

35:10.960 --> 35:12.960
sofort Bescheid, was das

35:12.960 --> 35:14.960
für ein Projekt ist, oder?

35:14.960 --> 35:16.960
A Based Rollup. Ist Rollup

35:16.960 --> 35:20.600
nicht sowas wie Webpack?

35:20.600 --> 35:27.300
Nur nicht Webpack?

35:27.300 --> 35:29.300
A Based Rollup.

35:29.300 --> 35:33.570
Hä? Okay, ich hab keine Ahnung,

35:33.570 --> 35:50.000
was das sein soll.

35:50.000 --> 35:52.000
Hydra is a Game Launcher with its own embedded

35:52.000 --> 35:54.000
BitTorrent-Client. Ja, wofür

35:54.000 --> 35:56.000
der hier wohl benutzt wird, in nem Game

35:56.000 --> 35:58.000
Launcher? Sicherlich nur, um

35:58.000 --> 36:00.000
eigens angefertigte Sicherheitskopien

36:00.000 --> 36:02.000
neu runterzuladen, oder? Was meint

36:02.000 --> 36:04.000
ihr? Was könnte es sein?

36:04.000 --> 36:07.510
Ich kenne das gar nicht.

36:07.510 --> 36:09.510
Es ist ja nicht verboten,

36:09.510 --> 36:12.820
sowas zu programmieren.

36:12.820 --> 36:14.820
Nur für Linux-ISOs, genau.

36:14.820 --> 36:25.810
Moment, NeoFetch

36:25.810 --> 36:27.810
ist mittlerweile auch bloated, oder was?

36:27.810 --> 36:29.810
Also, nur mal so,

36:29.810 --> 36:31.810
NeoFetch ist ein Programm, was nichts

36:31.810 --> 36:33.810
anderes macht, wie Infos über eure

36:33.810 --> 36:35.810
Linux-Installation anzuzeigen.

36:35.810 --> 36:37.810
Ich weiß nicht, warum das Blazingly

36:37.810 --> 36:39.810
Fast written in Go, written in Rust...

36:39.810 --> 36:41.810
Ey, ich wette mit euch, Moment, es gibt doch

36:41.810 --> 36:43.810
garantiert schon sowas wie

36:43.810 --> 36:45.810
NeoFetch written in Rust.

36:45.810 --> 36:47.810
Natürlich.

36:47.810 --> 36:49.810
Erfreshed...

36:49.810 --> 36:51.810
Ist aber seit zwei Jahren unmaintained.

36:51.810 --> 36:53.810
Und jetzt

36:53.810 --> 36:55.810
die coolen Leute benutzen jetzt Fast

36:55.810 --> 36:57.810
fetch, oder was?

36:57.810 --> 36:59.810
Wird NeoFetch nicht mehr

36:59.810 --> 37:01.810
aktualisiert, oder?

37:01.810 --> 37:03.810
Oh, tatsächlich!

37:03.810 --> 37:05.810
Seit April!

37:05.810 --> 37:07.810
Seit 26. April ist

37:07.810 --> 37:11.830
NeoFetch outdated,

37:11.830 --> 37:13.830
overrated, jebaited.

37:13.830 --> 37:19.570
Ich hab da vollstes

37:19.570 --> 37:21.570
Verständnis für, wenn einer keinen Bock mehr hat auf

37:21.570 --> 37:23.570
Open-Source-Projekte oder unmotiviert ist.

37:23.570 --> 37:25.570
Also, wie heißt das andere? Light Fetch?

37:25.570 --> 37:27.570
Nee, wie war das? Fast Fetch?

37:27.570 --> 37:29.570
Fast Fetch, okay. Gucken.

37:29.570 --> 37:31.570
Fast Fetch.

37:31.570 --> 37:33.570
Alles klar. Yes.

37:33.570 --> 37:35.570
Wir machen's

37:35.570 --> 37:37.570
mal so. Okay, zack.

37:37.570 --> 37:39.570
Fast Fetch versus

37:39.570 --> 37:44.290
NeoFetch.

37:44.290 --> 37:49.400
Ehrlich gesagt,

37:49.400 --> 37:51.400
ich sehe überhaupt keinen Unterschied.

37:51.400 --> 37:53.400
Außer, dass Fast Fetch

37:53.400 --> 37:55.400
sogar noch ein bisschen mehr Infos hat.

37:55.400 --> 37:57.400
Lokale IP.

37:57.400 --> 37:59.400
Haben wir

37:59.400 --> 38:01.400
noch? Okay, ja, nice.

38:01.400 --> 38:03.400
Disk Space.

38:03.400 --> 38:05.400
Swap Memory.

38:05.400 --> 38:08.770
Oh nein! Fuck, Leute!

38:08.770 --> 38:10.770
IP-Leak!

38:10.770 --> 38:12.770
Ich hoffe, ihr seid nicht schon drin.

38:12.770 --> 38:26.710
Okay, das heißt,

38:26.710 --> 38:28.710
wir uninstallen NeoFetch jetzt.

38:28.710 --> 38:30.710
Weil NeoFetch outdated,

38:30.710 --> 38:32.710
overrated ist.

38:32.710 --> 38:34.710
Aber nachdem ich mir das nicht merken kann,

38:34.710 --> 38:36.710
würde ich sagen,

38:36.710 --> 38:38.710
machen wir mal ein Alias.

38:38.710 --> 38:42.280
Ein Alias

38:42.280 --> 38:44.280
NeoFetch

38:44.280 --> 38:46.280
auf Fast

38:46.280 --> 38:48.280
Fetch.

38:48.280 --> 38:50.280
So, jetzt kann ich

38:50.280 --> 38:52.280
nach wie vor NeoFetch machen.

38:52.280 --> 38:54.280
Das ist in Wirklichkeit Fast Fetch.

38:54.280 --> 38:56.280
Excellent.

38:56.280 --> 38:58.280
So, wo sind wir stehen geblieben?

38:58.280 --> 39:00.280
Ja, das haben wir uns angeschaut.

39:00.280 --> 39:02.280
Was, was auch noch?

39:02.280 --> 39:04.280
AI-Zeug, juckt nicht.

39:04.280 --> 39:08.800
So.

39:08.800 --> 39:10.800
Ja, was trendet denn im

39:10.800 --> 39:12.800
SAP ABAP Umfeld?

39:12.800 --> 39:14.800
Die haben nicht mal genug Repos, Alter.

39:16.800 --> 39:18.800
Ah, das offizielle

39:18.800 --> 39:20.800
SAP

39:20.800 --> 39:22.800
Examples trendet.

39:22.800 --> 39:24.800
Okay.

39:24.800 --> 39:26.800
Nice.

39:26.800 --> 39:28.800
ABAP.

39:28.800 --> 39:30.800
Was, Developers können auch trenden?

39:30.800 --> 39:32.800
Nee.

39:32.800 --> 39:34.800
Wusstet ihr, seit wann

39:34.800 --> 39:36.800
können Developers trenden?

39:36.800 --> 39:38.800
Bestimmt schon eine Weile und mir ist das nie aufgefallen.

39:38.800 --> 39:45.380
Mal gucken, ob irgendwann der Wubblos

39:45.380 --> 39:47.380
auch trenden kann.

39:47.380 --> 39:49.380
Da müsste der Wubblos einmal mit seinen Projekten

39:49.380 --> 39:55.960
weiterarbeiten.

39:55.960 --> 39:57.960
ABAP.

39:57.960 --> 39:59.960
ABAP trendet nix.

39:59.960 --> 40:01.960
Moment, jetzt doch?

40:01.960 --> 40:15.540
ABAP.

40:15.540 --> 40:17.540
Da haben wir ja alle Bock drauf, ne?

40:19.540 --> 40:21.540
Es ist ein bisschen, es hat ein bisschen was von Kobol.

40:21.540 --> 40:25.750
Haben wir, haben wir, haben wir

40:25.750 --> 40:27.750
ABAP Enjoyers?

40:27.750 --> 40:29.750
SAP Leute hier im Chat.

40:29.750 --> 40:31.750
Und falls ja,

40:31.750 --> 40:33.750
eine ernst gemeinte Frage, haben wir wirklich Leute,

40:33.750 --> 40:35.750
also macht ihr das nur, weil es einfach

40:35.750 --> 40:37.750
fett Kohle bringt oder gefällt euch

40:37.750 --> 40:44.770
ABAP und das SAP Umfeld?

40:44.770 --> 40:46.770
Ich hab bisher nämlich noch keinen gesehen,

40:46.770 --> 40:48.770
der sagt, oh ja, das ist richtig geil.

40:48.770 --> 40:50.770
Alle, die ich kenne, die das machen, die machen das

40:50.770 --> 40:52.770
eigentlich nur, weil sie es schon eine Weile machen

40:52.770 --> 41:09.460
und man da richtig mit Kohle verdienen kann.

41:09.460 --> 41:14.240
Ja, mich würde das auch abfucken.

41:14.240 --> 41:16.240
Aber immerhin, immerhin

41:16.240 --> 41:19.680
muss man sagen, dadurch,

41:19.680 --> 41:21.680
dass wir das gemacht haben,

41:21.680 --> 41:23.680
oh nee, fuck, doch nicht.

41:23.680 --> 41:25.680
Ich dachte, ich hab Kobol

41:25.680 --> 41:27.680
bei mir reingeschrieben, was

41:27.680 --> 41:33.560
Programmiersprachen angeht.

41:33.560 --> 41:35.560
Für meine Skill-Liste aus der Bewerbung.

41:35.560 --> 41:37.560
Das ist nicht eins zu eins das, was ich in meine Bewerbung

41:37.560 --> 41:39.560
geschrieben hab. Ich hab noch ein paar Sachen editiert,

41:39.560 --> 41:41.560
aber im Großen und Ganzen

41:41.560 --> 41:43.560
das.

41:43.560 --> 41:47.760
We got an update for you.

41:47.760 --> 41:49.760
Windows is continuous improving

41:49.760 --> 41:51.760
and updates are a normal part of

41:51.760 --> 41:53.760
keeping it running smoothly.

41:53.760 --> 41:55.760
We'll restart and install this update

41:55.760 --> 41:57.760
in 15 Minuten.

41:57.760 --> 41:59.760
Nee, nee, nee, nee, nee.

41:59.760 --> 42:01.760
Another time. Gehen wir nicht auf den Sack, Windows.

42:01.760 --> 42:03.760
Also nicht auf dem

42:03.760 --> 42:05.760
Rechner, sondern auf dem Vorschau-PC.

42:05.760 --> 42:13.520
Schrott. Da wird nix

42:13.520 --> 42:15.520
improved. Aber Microsoft sagt das doch.

42:15.520 --> 42:17.520
Da muss das doch so sein.

42:17.520 --> 42:19.520
Das ist wie unter Windows 95,

42:19.520 --> 42:21.520
wo immer stand,

42:21.520 --> 42:23.520
ist das beste

42:23.520 --> 42:25.520
Windows, das

42:25.520 --> 42:27.520
es je gab.

42:27.520 --> 42:31.600
Oder sowas stand da doch immer.

42:31.600 --> 42:33.600
Ist das beste

42:33.600 --> 42:35.600
Windows-Installer. Da gab's doch immer unter

42:35.600 --> 42:41.540
Windows. Wenn du Windows 95

42:41.540 --> 42:43.540
installierst, das stand doch immer da irgendwie.

42:43.540 --> 42:45.540
Windows 95 ist das beste Windows

42:45.540 --> 42:47.540
aller Zeiten und ist das beste Windows, das es

42:47.540 --> 42:49.540
je gab. Ich weiß, ich kenn die Formulierung grad

42:49.540 --> 42:51.540
nicht mehr.

42:51.540 --> 42:53.540
Und selbst da hab ich das bei Microsoft schon nicht

42:53.540 --> 42:55.540
geglaubt.

42:55.540 --> 42:57.540
Brauchen wir das hier noch?

42:57.540 --> 42:59.540
Das sagt, glaube ich, so gut

42:59.540 --> 43:01.540
wie jeder Hersteller jedes Jahr über sein

43:01.540 --> 43:03.540
Zeug. Selbst wenn sich so gut wie nix verbessert hat.

43:03.540 --> 43:05.540
Also eine Sache,

43:05.540 --> 43:07.540
die wirklich weit davon entfernt

43:07.540 --> 43:09.540
ist,

43:09.540 --> 43:11.540
das beste zu sein, was es je gab.

43:11.540 --> 43:19.460
Nee, sagt mir gar nix. Muss mal

43:19.460 --> 43:21.460
gleich mal gucken. Also

43:21.460 --> 43:23.460
wisst ihr was ganz

43:23.460 --> 43:25.460
schlimm ist?

43:25.460 --> 43:27.460
Ich muss damit glücklicherweise nicht allzu viel machen.

43:27.460 --> 43:29.460
Ich hab eines

43:29.460 --> 43:31.460
meiner Fire HD 10 Tablets,

43:31.460 --> 43:33.460
die im Flur hängen als

43:33.460 --> 43:35.460
Home Automation Dashboard.

43:35.460 --> 43:37.460
Eines davon hab ich ausgetauscht

43:37.460 --> 43:39.460
durch ein

43:39.460 --> 43:41.460
durch ein

43:41.460 --> 43:43.460
Samsung

43:43.460 --> 43:45.460
A8

43:45.460 --> 43:49.090
oder so Tablet.

43:49.090 --> 43:51.090
Das hat mehr oder weniger bis auf ein paar Millimeter

43:51.090 --> 43:53.090
exakt die gleichen Abmaße

43:53.090 --> 43:55.090
wie das Fire HD 10.

43:55.090 --> 43:57.090
Und es ist

43:57.090 --> 43:59.090
ein bisschen nicht ganz so

43:59.090 --> 44:02.660
outdated und lahm.

44:02.660 --> 44:04.660
Aber das UI

44:04.660 --> 44:06.660
da drauf. Ohne Scheiß, Leute.

44:06.660 --> 44:08.660
Ich hab noch nie

44:08.660 --> 44:10.660
sowas unbenutzbares gesehen.

44:10.660 --> 44:15.510
Ich...

44:15.510 --> 44:17.510
Wie heißt denn das Ding nochmal?

44:17.510 --> 44:26.200
Das hat so nen doofen Namen. One UI!

44:26.200 --> 44:28.200
Ja, hier sieht das alles ganz toll aus.

44:28.200 --> 44:30.200
Ich hab noch nie sowas

44:30.200 --> 44:32.200
unusable mäßiges gesehen aufm Tablet.

44:32.200 --> 44:34.200
Ich hab legit

44:34.200 --> 44:36.200
bis jetzt nicht gefunden,

44:36.200 --> 44:38.200
wie man den ganz normalen

44:38.200 --> 44:40.200
App Launcher startet.

44:40.200 --> 44:42.200
Also ich weiß, wie ich

44:42.200 --> 44:44.200
Apps starte, ja.

44:44.200 --> 44:46.200
Ich geh auf dieses komische Übersichtssymbol

44:46.200 --> 44:48.200
und dann oben auf

44:48.200 --> 44:50.200
das Suchenfeld und dann stehen da manche drinnen.

44:50.200 --> 44:52.200
Aber so nen ganz normalen App Launcher

44:52.200 --> 44:54.200
mit nem Button unten, wie man das von Android kennt,

44:54.200 --> 44:56.200
am besten in der Mitte.

44:56.200 --> 44:58.200
Kannste vergessen. Also One UI

44:58.200 --> 45:00.200
ist wirklich das mit

45:00.200 --> 45:02.200
Abstand ekligste

45:02.200 --> 45:04.200
UI, was ich je auf nem Smartphone

45:04.200 --> 45:15.830
beziehungsweise aufm Tablet gesehen hab.

45:15.830 --> 45:17.830
Vielleicht doch ein normales Android drauf.

45:17.830 --> 45:19.830
Ich glaube, dafür gibt's keine Custom

45:19.830 --> 45:23.330
ROMs.

45:23.330 --> 45:25.330
Ich will da nen eigenen Launcher drauf machen.

45:25.330 --> 45:27.330
Aber ganz ehrlich, ich will da dran eigentlich gar nix customizen,

45:27.330 --> 45:29.330
weil ich mach damit nichts, außer

45:29.330 --> 45:31.330
nen Browser im Fullscreen permanent laufen haben.

45:31.330 --> 45:44.760
Bin seit Mittwoch in einer neuen Firma

45:44.760 --> 45:46.760
und dort im Linux-Engineerteam. Du hattest dir die Ausschreibung

45:46.760 --> 45:48.760
im Stream angeschaut. Nice!

45:48.760 --> 45:50.760
War das ne Stellenausschreibung, die ich geflamed hab,

45:50.760 --> 45:52.760
oder war das ne Stellenausschreibung, die ich ganz gut fand?

45:52.760 --> 46:36.200
Ist das eine, die du gepostet hast,

46:36.200 --> 46:38.200
oder eine, die ich zufällig im Stream

46:38.200 --> 46:40.200
angeguckt hab und du hast dich

46:40.200 --> 46:42.200
da drauf beworben? War das was, was du

46:42.200 --> 46:44.200
vorgeschlagen hattest? Zum angucken?

46:44.200 --> 46:49.240
Magst ans Trinken, ja.

46:49.240 --> 46:53.830
Das ist gut. HyperOS.

46:53.830 --> 46:59.120
Du hast sie vorgeschlagen.

46:59.120 --> 47:01.120
Okay, ja, aber nice, wenn's geklappt hat.

47:01.120 --> 47:03.120
Und wie ist so?

47:03.120 --> 47:05.120
Also ich kann aus eigener Erfahrung sagen, ich bin jetzt ja über

47:05.120 --> 47:07.120
ein Jahr im neuen Job,

47:07.120 --> 47:09.120
also ich war ja schon, also jetzt quasi

47:09.120 --> 47:11.120
ein Jahr und ein Monat,

47:11.120 --> 47:13.120
dass man am Anfang sehr

47:13.120 --> 47:15.120
begeistert immer ist und

47:15.120 --> 47:17.120
man nach und nach aber genug Punkte

47:17.120 --> 47:19.120
findet, die einem auch auf den Sack gehen. Also in meinem

47:19.120 --> 47:21.120
neuen Job gibt's jetzt genug Punkte, die mich auch nerven.

47:23.120 --> 47:25.120
Also diese Phase mit, man findet alles toll.

47:25.120 --> 47:29.270
Ist vorbei.

47:29.270 --> 47:31.270
Gerade die Bürokrate, die riesen Bürokratie

47:31.270 --> 47:33.270
Dinger bei uns gehen mir extrem auf den Sack,

47:33.270 --> 47:35.270
aber insgesamt

47:35.270 --> 47:37.270
geht's mir deutlich weniger

47:37.270 --> 47:42.950
wie der alte Laden.

47:42.950 --> 47:44.950
Ja, nice. Siehste, und bei mir ist's umgedreht.

47:44.950 --> 47:46.950
Ich werd gezwungen, Windows auf

47:46.950 --> 47:48.950
meinem Laptop zu verwenden.

47:48.950 --> 47:50.950
Was nicht so wild ist, weil ich noch genug

47:50.950 --> 47:52.950
Linux-Kisten hab, die ich benutzen kann für

47:52.950 --> 47:54.950
die täglichen Sachen, aber

47:54.950 --> 47:56.950
dass auf meinem Laptop Windows sein muss, find ich ziemlich

47:56.950 --> 48:09.480
kacke. Naja, jetzt hab ich

48:09.480 --> 48:11.480
vergessen, irgendwas wollte ich grad noch erzählen, beziehungsweise

48:11.480 --> 48:15.240
zeigen. Keine

48:15.240 --> 48:31.800
Ahnung mehr.

48:31.800 --> 48:33.800
.NET Framework Projekt, oh ja, da gibt's

48:33.800 --> 48:39.990
halt immer noch genug.

48:39.990 --> 48:41.990
Ich glaube, wie gesagt, ich bin ja kein hauptberuflicher

48:41.990 --> 48:43.990
Entwickler und auch kein .NET Entwickler, aber ich glaube,

48:43.990 --> 48:45.990
viele der .NET

48:45.990 --> 48:47.990
Legacy, der .NET Framework

48:47.990 --> 48:49.990
Legacy Projekte, die

48:49.990 --> 48:51.990
wären sogar mit halbwegs vertretbarem

48:51.990 --> 48:53.990
Aufwand umstellbar auf

48:53.990 --> 48:55.990
das neue .NET.

48:55.990 --> 49:04.550
Aber ich glaube, da scheitert's oftmals

49:04.550 --> 49:06.550
dran, am Willen,

49:06.550 --> 49:10.950
ja. Habt ihr analysiert? Warum

49:10.950 --> 49:12.950
habt ihr sehr viel Windows-only Shit verwendet?

49:12.950 --> 49:14.950
Beziehungsweise

49:14.950 --> 49:16.950
Sachen, die es nicht mehr gibt?

49:16.950 --> 49:18.950
Wie

49:18.950 --> 49:20.950
beispielsweise dieses Windows Message Queue

49:20.950 --> 49:22.950
Gedöns, was

49:22.950 --> 49:24.950
.NET Framework konnte und

49:24.950 --> 49:26.950
.NET nicht?

49:26.950 --> 49:28.950
Es ist schon bescheuert, dass man

49:28.950 --> 49:30.950
überhaupt nicht durchblickt, wenn man über

49:30.950 --> 49:32.950
.NET Sachen spricht, was man eigentlich meint, ja.

49:32.950 --> 49:34.950
Niemand der, die Microsoft

49:34.950 --> 49:36.950
Versionierung ist so dumm, ja.

49:36.950 --> 49:38.950
Wer soll denn checken, was

49:38.950 --> 49:40.950
der Unterschied zwischen .NET Framework und .NET

49:40.950 --> 49:42.950
ist?

49:42.950 --> 49:57.460
So dämlich, ey.

49:57.460 --> 49:59.460
Naja.

49:59.460 --> 50:01.460
Okay, das stimmt, das stimmt, je nachdem, worauf das

50:01.460 --> 50:07.590
läuft, ja. Okay, hab ich meine Kiste schon

50:07.590 --> 50:09.590
rebooted? Ich glaub schon.

50:09.590 --> 50:11.590
Alles klar, dann lass uns mal auf YouTube gucken.

50:11.590 --> 50:21.940
Okay, wenn das noch altes

50:21.940 --> 50:23.940
ASP.NET ist

50:23.940 --> 50:25.940
und nicht ASP.NET Core,

50:25.940 --> 50:27.940
dann ist es tatsächlich schwierig, weil das gibt's

50:27.940 --> 50:32.720
ja nicht mehr in der Form, ja.

50:32.720 --> 50:34.720
Das muss man dann

50:34.720 --> 50:36.720
umschreiben auf

50:36.720 --> 50:38.720
die Art und Weise, wie man

50:38.720 --> 50:40.720
es jetzt mit ASP.NET Core macht, ja.

50:40.720 --> 50:42.720
Also gerade, wenn ihr Entity Framework

50:42.720 --> 50:44.720
verwendet habt, das alte Entity Framework mit

50:44.720 --> 50:46.720
ASP.NET, das Umbauen auf

50:46.720 --> 50:48.720
ASP.NET Core und Entity

50:48.720 --> 50:50.720
Framework Core ist schon ein bisschen größerer Akt, ja.

50:50.720 --> 50:54.800
Kann ich mir gut

50:54.800 --> 51:03.620
vorstellen, zumindest.

51:03.620 --> 51:05.620
Boah, ich bin so müd, gell.

51:05.620 --> 51:07.620
Ich weiß auch nicht, warum.

51:07.620 --> 51:09.620
Ich hab richtig gut

51:09.620 --> 51:13.120
und lang gepennt. Vielleicht

51:13.120 --> 51:15.120
deswegen.

51:15.120 --> 51:17.120
Ja, das kann ich mir vorstellen. Auf so alten Kram hat mir

51:17.120 --> 51:22.360
ich keinen Bock. WCF.

51:22.360 --> 51:24.360
Das hab ich selbst nie verwendet, das kenn ich nur

51:24.360 --> 51:26.360
aus

51:26.360 --> 51:28.360
Geschichten und dass

51:28.360 --> 51:30.360
das ganz eklig ist.

51:30.360 --> 51:32.360
Das ist Windows Communication

51:32.360 --> 51:34.360
Foundation oder sowas, gell.

51:34.360 --> 51:36.360
Ja, das kenn ich

51:36.360 --> 51:38.360
nur aus irgendwelchen Storys. Hab ich nie selbst

51:38.360 --> 51:43.010
verwendet. So, was haben wir denn hier

51:43.010 --> 51:45.010
auf YouTube,

51:45.010 --> 51:47.010
was wir uns mal kurz anschauen können?

51:47.010 --> 51:50.580
Am besten irgendwas, wo ich wach werde

51:50.580 --> 51:55.680
bei Uni, The Cat

51:55.680 --> 51:57.680
und Super Mario Galaxy. Okay, am besten

51:57.680 --> 52:09.030
Whatever.

52:09.030 --> 52:11.030
Hat aber sehr kurze Beine.

52:11.030 --> 53:08.640
Okay.

53:08.640 --> 53:10.640
Ja, kannst

53:10.640 --> 53:12.640
Content konsumieren.

53:12.640 --> 53:14.640
Irgendwas, wo ich wach werde bei.

53:14.640 --> 53:16.640
How a leap day

53:16.640 --> 53:18.640
took down Microsoft.

53:18.640 --> 53:20.640
The Ultimate

53:20.640 --> 53:25.620
Ambience System.

53:25.620 --> 53:27.620
Okay, dabei werd ich bestimmt wach.

53:29.620 --> 53:31.620
Dabei werd ich bestimmt

53:31.620 --> 53:33.620
wach, weil da muss ich mich bestimmt wieder jeden

53:33.620 --> 53:35.620
zweiten Satz aufregen darüber,

53:35.620 --> 53:37.620
warum C++ so scheiße ist.

53:37.620 --> 53:39.620
31

53:39.620 --> 53:41.620
Nubi C++ Habits.

53:41.620 --> 53:45.440
Ich weiß nicht,

53:45.440 --> 53:47.440
ob ich das jetzt, ob ich das geistig

53:47.440 --> 53:49.440
durchhalte.

53:49.440 --> 53:53.140
Zumindest bin ich danach wahrscheinlich wach.

53:53.140 --> 53:57.860
Was haben wir denn sonst noch?

53:57.860 --> 53:59.860
Meine katastrophale Ausbildung zum

53:59.860 --> 54:01.860
Fachinformatiker.

54:01.860 --> 54:03.860
Schädlinge bekämpfen und Bauern beraten.

54:03.860 --> 54:09.030
Feierschrift Video.

54:09.030 --> 54:11.030
Da finde ich mich.

54:11.030 --> 54:13.030
Okay, komm, scheiß drauf. Wir skippen.

54:13.030 --> 54:15.030
Sachen, die ich blöd finde, die skippen wir.

54:15.030 --> 54:17.030
Ich, komm. Ja, es ist Zeit, Leute.

54:17.030 --> 54:19.030
C++ Rage. Auf geht's.

54:19.030 --> 54:21.030
Vielleicht ist es

54:21.030 --> 54:23.030
auch gar nicht so schlimm. Vielleicht ist es ja auch wirklich

54:23.030 --> 54:25.030
ein Video, der, ja,

54:25.030 --> 54:27.030
wo ich sage, okay, aber ihr wisst,

54:27.030 --> 54:29.030
es ist C++, das heißt, es wird mich, es wird mich

54:29.030 --> 54:31.030
aufregen. Okay, let's go.

54:31.030 --> 54:33.030
To my list of Nubi C++ Habits.

54:33.030 --> 54:35.030
C++ is an incredibly complex

54:35.030 --> 54:37.030
language with a lot of history.

54:37.030 --> 54:39.030
So, whether you're an actual Nube. C++ ist

54:39.030 --> 54:41.030
nicht einfach incredibly complex. C++

54:41.030 --> 54:43.030
wird auch absichtlich

54:43.030 --> 54:45.030
incredible beschissen gemacht.

54:45.030 --> 54:47.030
Weiß immer noch nicht, warum die Gremium-Leute,

54:47.030 --> 54:50.530
na, egal.

54:50.530 --> 54:52.530
Okay.

54:56.530 --> 54:58.530
Alles klar.

54:58.530 --> 55:00.530
Ja, das ist blöd.

55:02.530 --> 55:04.530
Was zum Teufel ist denn das da unten eigentlich schon wieder?

55:04.530 --> 55:06.530
S

55:06.530 --> 55:09.970
Klammer auf, hello.

55:09.970 --> 55:11.970
Was ist denn das da schon

55:11.970 --> 55:16.630
wieder für komisches Zeug?

55:16.630 --> 55:18.630
Warum gibt es,

55:18.630 --> 55:20.630
warum gibt es fünf verschiedene Arten unter C++?

55:20.630 --> 55:22.630
Egal, oh Mann.

55:22.630 --> 55:24.630
Okay, aber das, das verstehe ich.

55:28.630 --> 55:30.630
Okay, ja, gebe ich ihm recht,

55:30.630 --> 55:32.630
es ist Blödsinn.

55:32.630 --> 55:34.630
Next.

55:34.630 --> 55:36.630
Number two,

55:36.630 --> 55:38.630
using standard endline, especially in a loop,

55:38.630 --> 55:40.630
you probably meant to just print out a

55:40.630 --> 55:42.630
new line. Ja.

55:42.630 --> 55:44.630
Jetzt mal ernsthaft,

55:44.630 --> 55:46.630
standard new line

55:46.630 --> 55:48.630
klingt ganz stark danach, als möchte man

55:48.630 --> 55:50.630
eine new line printen, aber

55:50.630 --> 55:52.630
selbstverständlich scheint das in C++

55:52.630 --> 55:54.630
nicht so zu sein, sonst hätte er den Tipp nicht gemacht.

55:54.630 --> 55:56.630
But endline does more than that.

55:56.630 --> 55:58.630
Ach ja, ach ja, endline

55:58.630 --> 56:00.630
macht mehr als endline. Logisch.

56:00.630 --> 56:02.630
Logisch, na klar.

56:02.630 --> 56:04.630
Obviously.

56:04.630 --> 56:06.630
Macht endline mehr als endline.

56:06.630 --> 56:08.630
Also flushes the buffer, which takes extra time.

56:08.630 --> 56:14.630
Ah,

56:14.630 --> 56:16.630
wer denkt sich das aus, Mann?

56:16.630 --> 56:22.760
Ich weiß gar nicht,

56:22.760 --> 56:26.260
was ich dazu sagen soll.

56:26.260 --> 56:28.260
Wer denkt...

56:28.260 --> 56:30.260
Wer denkt sich diesen Schrott aus?

56:30.260 --> 56:32.260
But endline does more than that.

56:32.260 --> 56:34.260
It also flushes the buffer, which takes extra time.

56:34.260 --> 56:36.260
Instead, just use a newline character.

56:36.260 --> 56:41.750
What the fuck?

56:41.750 --> 56:43.750
Also, ich als C++ Noob,

56:43.750 --> 56:45.750
ich hätte jetzt gedacht,

56:45.750 --> 56:47.750
könnt

56:47.750 --> 56:49.750
mir mal sagen, ob das bei euch auch so war.

56:49.750 --> 56:51.750
Ich hätte gedacht,

56:51.750 --> 56:53.750
standard endline

56:53.750 --> 56:55.750
ist einfach ein Shortcut dafür,

56:55.750 --> 56:57.750
dass man unter Windows,

56:57.750 --> 56:59.750
backslash R, backslash N macht

56:59.750 --> 57:01.750
und unter Linux nur backslash N.

57:01.750 --> 57:03.750
Sodass man eben seinen Source Code

57:03.750 --> 57:05.750
quasi OS-neutral

57:05.750 --> 57:07.750
schreiben kann

57:07.750 --> 57:09.750
und er funktioniert unter beiden

57:09.750 --> 57:11.750
Betriebssystemen ordentlich.

57:11.750 --> 57:13.750
Das hätte ich gedacht,

57:13.750 --> 57:15.750
dafür ist standard endline da.

57:15.750 --> 57:17.750
Wenn du es unter Linux kompilierst,

57:17.750 --> 57:19.750
er einen backslash N draus macht

57:19.750 --> 57:21.750
und wenn du es unter Windows kompilierst,

57:21.750 --> 57:23.750
er backslash R, backslash N draus macht.

57:23.750 --> 57:25.750
Das hätte ich gedacht.

57:25.750 --> 57:27.750
Wenn es noch irgendwelches

57:27.750 --> 57:29.750
secret hidden behavior drin hat,

57:29.750 --> 57:31.750
das hätte ich nicht gedacht.

57:31.750 --> 57:33.750
It also flushes the buffer,

57:33.750 --> 57:35.750
which takes extra time.

57:35.750 --> 57:37.750
Instead, just use a newline character.

57:37.750 --> 57:39.750
Number three, using a for loop by index

57:39.750 --> 57:41.750
when a range-based for loop

57:41.750 --> 57:43.750
expresses the intent better.

57:43.750 --> 57:45.750
In this case, I don't really care at all about the index.

57:45.750 --> 57:47.750
Instead, use a range-based for loop.

57:47.750 --> 57:49.750
Ja, das sehe ich genauso.

57:49.750 --> 57:51.750
Das finde ich auch viel angenehmer.

57:51.750 --> 57:53.750
Ich meine,

57:53.750 --> 57:55.750
ich persönlich

57:55.750 --> 57:57.750
hätte es ja durchaus nice gefunden,

57:57.750 --> 57:59.750
man hätte das Ding einfach for each

57:59.750 --> 58:01.750
genannt, so wie sie es in C Sharp

58:01.750 --> 58:03.750
beispielsweise gemacht haben.

58:03.750 --> 58:05.750
Aber so ist auch okay.

58:05.750 --> 58:07.750
In JavaScript ist es ja auch so

58:07.750 --> 58:09.750
und in, also in JavaScript

58:09.750 --> 58:11.750
machst du ja auch normale Vorschreiben

58:11.750 --> 58:13.750
und in Go ist es auch so, also

58:13.750 --> 58:15.750
warum nicht?

58:15.750 --> 58:17.750
There's no index, so one less chance

58:17.750 --> 58:19.750
for an accidental typo or off by one error.

58:19.750 --> 58:21.750
Ja, aber das sehe ich auch so.

58:21.750 --> 58:25.750
Okay.

58:41.750 --> 58:43.750
Und jetzt, okay,

58:43.750 --> 58:45.750
da gebe ich eben voll und ganz recht,

58:45.750 --> 58:47.750
es macht eigentlich keinen Sinn,

58:47.750 --> 58:49.750
Sachen, die schon im Framework drin sind,

58:49.750 --> 58:51.750
das Rad neu zu finden.

58:51.750 --> 58:53.750
Das erste Vorkommen ist,

58:53.750 --> 58:55.750
was darauf matcht und so.

58:55.750 --> 58:57.750
Aber jetzt, Leute, Imagine,

58:57.750 --> 58:59.750
das wäre ein gescheiter Syntax.

58:59.750 --> 59:03.190
Überlegt euch mal,

59:03.190 --> 59:05.190
man könnte einfach sowas schreiben

59:05.190 --> 59:07.190
wie data.findif

59:07.190 --> 59:09.190
wie data.findif

59:09.190 --> 59:11.190
wie data.findif

59:11.190 --> 59:13.190
und dann so eine Lambda hinten reinschieben

59:13.190 --> 59:15.190
und gut ist.

59:15.190 --> 59:18.950
Ich schiebe Lambdas

59:18.950 --> 59:20.950
immer gerne hinten rein,

59:20.950 --> 59:24.450
solche Funktionen.

59:24.450 --> 59:29.810
Stellt euch mal vor, man könnte das ordentlich schreiben.

59:29.810 --> 59:31.810
Stellt euch mal vor, man könnte das ordentlich schreiben.

59:31.810 --> 59:33.810
Stellt euch mal vor, man könnte das ordentlich schreiben.

59:33.810 --> 59:35.810
Man könnte, selbst wenn man das nicht ordentlich schreiben kann,

59:35.810 --> 59:37.810
einfach sagen,

59:37.810 --> 59:39.810
standard findif data ist positive

59:39.810 --> 59:41.810
und nicht cbegin, cend.

59:41.810 --> 59:45.760
Da müsste es sowas wie,

59:45.760 --> 59:47.760
ich meine, es gibt ja Iterators

59:47.760 --> 59:49.760
in C++,

59:49.760 --> 59:51.760
aber das ist auch wieder so ein undurchsichtiges Ding,

59:51.760 --> 59:53.760
wo es fünf verschiedene Varianten gibt,

59:53.760 --> 59:57.910
wo ich mich frage,

59:57.910 --> 59:59.910
warum, ich meine,

59:59.910 --> 01:00:01.910
warum kann das Ding nicht

01:00:01.910 --> 01:00:03.910
Iterator bereitstellen und die Funktion

01:00:03.910 --> 01:00:05.910
möchte dann eben

01:00:05.910 --> 01:00:07.910
eine x-beliebige Collection

01:00:07.910 --> 01:00:09.910
die Iterator implementiert haben

01:00:09.910 --> 01:00:11.910
und nicht diesen Scheiß mit cbegin und cend.

01:00:11.910 --> 01:00:16.240
Und ein weiterer

01:00:16.240 --> 01:00:18.240
großer Vorteil von,

01:00:18.240 --> 01:00:20.240
dass das Vektor

01:00:20.240 --> 01:00:22.240
sowas anbieten würde,

01:00:22.240 --> 01:00:24.240
wäre ja auch,

01:00:24.240 --> 01:00:26.240
man könnte es sich merken,

01:00:26.240 --> 01:00:28.240
weil dieses ganze Standard-Doppelpunkt-Doppelpunkt,

01:00:28.240 --> 01:00:33.540
da gibt es ja mittlerweile 1000 Sachen drin.

01:00:33.540 --> 01:00:35.540
Ja, Link wird es halt

01:00:35.540 --> 01:00:37.540
in C++ nicht geben, weil C++ keine

01:00:37.540 --> 01:00:39.540
Extension-Methods hat.

01:00:39.540 --> 01:00:41.540
Ich bin der Meinung, ohne Scheiß,

01:00:41.540 --> 01:00:43.540
Extension-Methods wären

01:00:43.540 --> 01:00:45.540
die Rettung für C++.

01:00:45.540 --> 01:00:47.540
Du könntest quasi nahezu alle Features

01:00:47.540 --> 01:00:49.540
rausschmeißen der letzten zehn Jahre

01:00:49.540 --> 01:00:53.040
und dafür Extension-Methods einbauen.

01:00:53.040 --> 01:00:55.040
Weil mit Extension-Methods

01:00:55.040 --> 01:00:57.040
würdest du zum Beispiel auch das erschlagen,

01:00:57.040 --> 01:00:59.040
dass jede Library seine eigene

01:00:59.040 --> 01:01:01.040
String-Klasse mitbringt,

01:01:01.040 --> 01:01:03.040
weil sie irgendwas eigenes machen wollen

01:01:03.040 --> 01:01:05.040
und solche Dinger. Du könntest dann einfach

01:01:05.040 --> 01:01:07.040
die Standard-String-Klasse extenden

01:01:07.040 --> 01:01:09.040
mit den Sachen, die du brauchst.

01:01:09.040 --> 01:01:11.040
Praktisch!

01:01:11.040 --> 01:01:13.040
Und du könntest auch sowas wie Link beispielsweise,

01:01:13.040 --> 01:01:15.040
wenn du das haben willst, bauen in C++.

01:01:15.040 --> 01:01:17.040
Extension-Methods, ohne Scheiß, das wäre

01:01:17.040 --> 01:01:19.040
eines der größten C++

01:01:19.040 --> 01:01:21.040
Fixed-Features überhaupt.

01:01:21.040 --> 01:01:23.040
Aber das kriegen sie ja nicht gebacken,

01:01:23.040 --> 01:01:27.830
seit Jahren schon.

01:01:27.830 --> 01:01:29.830
Find where the first positive element is.

01:01:29.830 --> 01:01:31.830
Number five, using a C-Style-Array

01:01:31.830 --> 01:01:33.830
when you could have used a standard array.

01:01:33.830 --> 01:01:35.830
C-Style-Arrays often decay into pointers

01:01:35.830 --> 01:01:37.830
and require you to pass the length of the array

01:01:37.830 --> 01:01:39.830
along with the array itself.

01:01:39.830 --> 01:01:41.830
Another opportunity to make a typo.

01:01:41.830 --> 01:01:43.830
Instead, use a standard array.

01:01:43.830 --> 01:01:45.830
Gäbe ich ihm recht, das ist okay.

01:01:45.830 --> 01:01:47.830
Number six, any use

01:01:47.830 --> 01:01:49.830
of reinterpret-cast.

01:01:49.830 --> 01:01:51.830
Ich habe bis heute nicht gecheckt,

01:01:51.830 --> 01:01:53.830
was diese Dinger in C++ machen.

01:01:53.830 --> 01:01:55.830
Du hast irgendwie reinterpret-cast,

01:01:55.830 --> 01:01:57.830
const-cast, es gibt irgendwie

01:01:57.830 --> 01:01:59.830
drei, vier verschiedene Sachen.

01:01:59.830 --> 01:02:01.830
Ich bin der größte Krankenhub, was das angeht.

01:02:01.830 --> 01:02:03.830
Ich mache den Standard-C-Cast.

01:02:03.830 --> 01:02:05.830
Bei mir sieht das dann einfach so aus.

01:02:05.830 --> 01:02:07.830
Ich caste nach keckel, pointer,

01:02:07.830 --> 01:02:09.830
hier, blub, so.

01:02:09.830 --> 01:02:11.830
So sieht das bei mir aus dann.

01:02:11.830 --> 01:02:13.830
Auch wenn das nicht modern,

01:02:13.830 --> 01:02:15.830
tolles C++ ist.

01:02:15.830 --> 01:02:17.830
Ich habe bis heute nicht gecheckt,

01:02:17.830 --> 01:02:19.830
was diese ganzen Dinger hier machen.

01:02:31.830 --> 01:02:33.830
Dann fragt man sich, wenn es bei C++

01:02:33.830 --> 01:02:35.830
so viel undefined behavior ist,

01:02:35.830 --> 01:02:37.830
warum ist, sobald was undefined behavior ist,

01:02:37.830 --> 01:02:39.830
auch Compiler-Error?

01:02:39.830 --> 01:02:43.400
Das frage ich mich an vielen Stellen von C++.

01:02:43.400 --> 01:02:45.400
Ich meine, die Compiler-Fehlermeldungen

01:02:45.400 --> 01:02:47.400
sind absolut haare raufend,

01:02:47.400 --> 01:02:49.400
ja, du verstehst sie nicht.

01:02:49.400 --> 01:02:51.400
Aber sobald was undefined behavior ist,

01:02:51.400 --> 01:02:53.400
wäre es doch eigentlich sinnvoll,

01:02:53.400 --> 01:02:55.400
das kompiliert gar nicht erst.

01:02:55.400 --> 01:02:57.400
The same goes for C-Style-Casting.

01:02:57.400 --> 01:02:59.400
So, sorry, famous Quake 3 algorithm

01:02:59.400 --> 01:03:01.400
for computing the inverse square root.

01:03:01.400 --> 01:03:03.400
Okay, das skippen wir den Rest.

01:03:03.400 --> 01:03:05.400
Casting away const.

01:03:05.400 --> 01:03:07.400
Ja, okay.

01:03:07.400 --> 01:03:09.400
Ich meine, guckt euch,

01:03:09.400 --> 01:03:11.400
guckt euch mal an,

01:03:11.400 --> 01:03:13.400
diese hässliche Syntax.

01:03:13.400 --> 01:03:15.400
const cast,

01:03:15.400 --> 01:03:17.400
standard unordered map, standard string,

01:03:17.400 --> 01:03:19.400
int, und,

01:03:19.400 --> 01:03:21.400
okay, chat, was macht das und

01:03:21.400 --> 01:03:27.330
an der Stelle?

01:03:27.330 --> 01:03:29.330
Ist das eine Referenz, oder?

01:03:29.330 --> 01:03:31.330
Für was ist das und

01:03:31.330 --> 01:03:37.200
überhaupt an der Stelle da?

01:03:37.200 --> 01:03:39.200
Keine Ahnung.

01:03:39.200 --> 01:03:41.200
This function takes in a map

01:03:41.200 --> 01:03:43.200
that maps strings to the number of times

01:03:43.200 --> 01:03:45.200
the first word.

01:03:45.200 --> 01:03:47.200
It takes two words and then returns back

01:03:47.200 --> 01:03:49.200
to whichever one has a higher count.

01:03:49.200 --> 01:03:51.200
The first way you might try to implement this

01:03:51.200 --> 01:03:53.200
is by looking up the counts of the two words

01:03:53.200 --> 01:03:55.200
and then if the first count is bigger than the second,

01:03:55.200 --> 01:03:57.200
then returning the first word.

01:03:57.200 --> 01:03:59.200
If I try to compile this,

01:03:59.200 --> 01:04:01.200
I get a weird error message telling me

01:04:01.200 --> 01:04:03.200
that the method isn't marked const.

01:04:03.200 --> 01:04:05.200
And that's how we ended up with this code.

01:04:05.200 --> 01:04:07.200
I know that I'm not modifying the map, right?

01:04:07.200 --> 01:04:09.200
The correct thing to do in this case

01:04:09.200 --> 01:04:11.200
is not to cast away const,

01:04:11.200 --> 01:04:13.200
when const, const,

01:04:13.200 --> 01:04:15.200
what? So was wird's in Rust

01:04:15.200 --> 01:04:19.350
nicht geben, Leute.

01:04:19.350 --> 01:04:21.350
Und es wäre auch blazingly fast.

01:04:21.350 --> 01:04:23.350
At is a const version of operator square bracket

01:04:23.350 --> 01:04:25.350
that throws if the word isn't in the map.

01:04:25.350 --> 01:04:27.350
But you might ask, why don't they just

01:04:27.350 --> 01:04:29.350
ask the const version so that this would compile?

01:04:29.350 --> 01:04:31.350
Okay, I'll skip that for a moment.

01:04:31.350 --> 01:04:33.350
This brings us to newbie thing number eight,

01:04:33.350 --> 01:04:35.350
not knowing that operator square brackets

01:04:35.350 --> 01:04:37.350
inserts the element into the map

01:04:37.350 --> 01:04:39.350
if it doesn't already exist.

01:04:39.350 --> 01:04:41.350
That's right, simply trying

01:04:41.350 --> 01:04:43.350
to look up this word in the map

01:04:43.350 --> 01:04:45.350
actually inserts it with a count of zero into the map.

01:04:45.350 --> 01:04:47.350
Was?

01:04:47.350 --> 01:04:49.350
Was?

01:04:49.350 --> 01:04:51.350
Nee, oder?

01:04:51.350 --> 01:04:53.350
What?

01:04:53.350 --> 01:04:55.350
Was?

01:04:55.350 --> 01:04:57.350
Ist das hier nicht ernst?

01:04:59.350 --> 01:05:01.350
This brings us to newbie thing number eight,

01:05:01.350 --> 01:05:03.350
not knowing that operator square brackets

01:05:03.350 --> 01:05:13.570
inserts the element...

01:05:13.570 --> 01:05:15.570
No, God!

01:05:15.570 --> 01:05:17.570
No, God!

01:05:17.570 --> 01:05:19.570
Please, no! No!

01:05:19.570 --> 01:05:21.570
No!

01:05:21.570 --> 01:05:23.570
No!

01:05:23.570 --> 01:05:25.570
Bist du Max von YouTube?

01:05:25.570 --> 01:05:29.140
Nein, nein, nein, ich bin Wobblos von Twitch.

01:05:29.140 --> 01:05:31.140
Das ergibt ja überhaupt keinen Sinn!

01:05:31.140 --> 01:05:33.140
Jetzt mal eine blöde Frage,

01:05:33.140 --> 01:05:35.140
ja? Stellt euch mal vor,

01:05:35.140 --> 01:05:37.140
ich hab

01:05:37.140 --> 01:05:39.140
eine Map

01:05:39.140 --> 01:05:41.140
vom Typ,

01:05:41.140 --> 01:05:43.140
ach, keine Ahnung,

01:05:43.140 --> 01:05:45.140
kekwint.

01:05:45.140 --> 01:05:47.140
So, und ich,

01:05:47.140 --> 01:05:49.140
ich mach jetzt ein...

01:05:49.140 --> 01:05:51.140
Manche Typen sind, also,

01:05:51.140 --> 01:05:53.140
insertet er dann...

01:05:53.140 --> 01:05:55.140
Was insertet er überhaupt als Default-Wert

01:05:55.140 --> 01:06:00.120
für irgendwas?

01:06:00.120 --> 01:06:03.940
Das ergibt ja überhaupt keinen Sinn!

01:06:03.940 --> 01:06:05.940
Warum ist ein Lookup ein Insert?

01:06:05.940 --> 01:06:07.940
What the fuck?

01:06:07.940 --> 01:06:14.640
Also, ich bin echt immer wieder

01:06:14.640 --> 01:06:16.640
am Zweifeln an

01:06:16.640 --> 01:06:18.640
dem ganzen

01:06:18.640 --> 01:06:20.640
Prozess und

01:06:20.640 --> 01:06:22.640
Erstellung von C++.

01:06:22.640 --> 01:06:24.640
Wie kann man so einen Schrott designen?

01:06:24.640 --> 01:06:26.640
Keine Ahnung.

01:06:26.640 --> 01:06:28.640
Element into the map

01:06:28.640 --> 01:06:30.640
if it doesn't already exist.

01:06:30.640 --> 01:06:32.640
That's right, simply trying to look up this word

01:06:32.640 --> 01:06:34.640
in there.

01:06:34.640 --> 01:06:36.640
Ja, aber ich will, vielleicht möchte ich mal gucken,

01:06:36.640 --> 01:06:38.640
ob was drinne ist.

01:06:38.640 --> 01:06:40.640
Okay, ich geb zu,

01:06:40.640 --> 01:06:42.640
an sich ist es natürlich blöd,

01:06:42.640 --> 01:06:44.640
was mit nem

01:06:44.640 --> 01:06:46.640
Index abzufragen,

01:06:46.640 --> 01:06:48.640
um zu checken, ob es drinne ist.

01:06:48.640 --> 01:06:50.640
Weil das Ding,

01:06:50.640 --> 01:06:52.640
in der anderen Sprache würd's Exceptions werfen,

01:06:52.640 --> 01:06:54.640
in C++, weiß ich nicht,

01:06:54.640 --> 01:06:56.640
Crashs wahrscheinlich, und dass es nicht crasht,

01:06:56.640 --> 01:06:58.640
macht so komische Dinger.

01:06:58.640 --> 01:07:00.640
Normalerweise brauchst du irgendeine

01:07:00.640 --> 01:07:02.640
Methode oder sowas, um sowas nachzugucken.

01:07:02.640 --> 01:07:04.640
Oder, du machst das wie in Go,

01:07:04.640 --> 01:07:06.640
was auch super hässlich ist,

01:07:06.640 --> 01:07:08.640
go check

01:07:08.640 --> 01:07:10.640
key exist, da muss ich nämlich immer nachgucken,

01:07:10.640 --> 01:07:12.640
wie das funktioniert.

01:07:12.640 --> 01:07:16.280
Ja, oder du machst sowas wie in Go,

01:07:16.280 --> 01:07:20.420
ja,

01:07:20.420 --> 01:07:27.190
was auch nicht schön ist.

01:07:27.190 --> 01:07:29.190
Aber wenigstens insertet es nix ohne Zuweisung.

01:07:29.190 --> 01:07:31.190
Ganz ehrlich,

01:07:31.190 --> 01:07:33.190
irgendwas inserten sollte das nur,

01:07:33.190 --> 01:07:35.190
wenn es entweder wordcounts.insert.add

01:07:35.190 --> 01:07:37.190
heißt, oder aber

01:07:37.190 --> 01:07:39.190
index gleich

01:07:39.190 --> 01:07:41.190
irgendwas, und nicht einfach nur

01:07:41.190 --> 01:07:43.190
index.

01:07:43.190 --> 01:07:45.190
Absolut hängengeblieben,

01:07:45.190 --> 01:07:47.190
komplett hängengeblieben.

01:07:51.190 --> 01:07:53.190
Was?

01:08:09.190 --> 01:08:11.190
Number ten, not knowing about

01:08:11.190 --> 01:08:13.190
string literal lifetimes.

01:08:13.190 --> 01:08:15.190
String literals like this one are guaranteed to live

01:08:15.190 --> 01:08:17.190
for the entire life of a program.

01:08:17.190 --> 01:08:19.190
Okay, das wusste ich nicht, aber

01:08:19.190 --> 01:08:21.190
das macht Sinn.

01:08:21.190 --> 01:08:23.190
Ja, das sind irgendwelche static strings,

01:08:23.190 --> 01:08:25.190
die stehen im binary drin, die sind,

01:08:25.190 --> 01:08:27.190
die expiren nicht, okay,

01:08:27.190 --> 01:08:29.190
ergibt noch irgendwie Sinn.

01:08:29.190 --> 01:08:31.190
So it's perfectly fine to return this,

01:08:31.190 --> 01:08:33.190
even though it looks like it's a reference to a local

01:08:33.190 --> 01:08:35.190
variable. Number eleven,

01:08:35.190 --> 01:08:37.190
not using structured bindings.

01:08:37.190 --> 01:08:39.190
Here we have a map of color names to their hex values.

01:08:39.190 --> 01:08:41.190
Then we just loop over all the pairs

01:08:41.190 --> 01:08:43.190
and print out the name and hex value.

01:08:43.190 --> 01:08:45.190
It would be a lot more readable if we could refer

01:08:45.190 --> 01:08:47.190
to these things as name and hex, rather than

01:08:47.190 --> 01:08:49.190
Das kenne ich, ja.

01:08:49.190 --> 01:08:51.190
Das ist tatsächlich relativ neu, ich glaube,

01:08:51.190 --> 01:08:53.190
das gibt es erst seit C++20 oder sowas,

01:08:53.190 --> 01:08:55.190
dass man die benennen kann.

01:08:55.190 --> 01:08:57.190
Das geht ein bisschen wie

01:08:57.190 --> 01:08:59.190
tuple deconstruction in C sharp.

01:08:59.190 --> 01:09:01.190
...pair dot first and pair dot second.

01:09:01.190 --> 01:09:03.190
Well, that's exactly what... Ja, genau.

01:09:03.190 --> 01:09:05.190
Das ist tatsächlich eines der Features,

01:09:05.190 --> 01:09:07.190
wo ich sage, ey, die sind echt gut,

01:09:07.190 --> 01:09:09.190
die kann man so lassen, ja.

01:09:09.190 --> 01:09:11.190
Die Syntax ist noch ein bisschen scheiße hier vorne,

01:09:11.190 --> 01:09:13.190
aber das finde ich durchaus in Ordnung.

01:09:13.190 --> 01:09:15.190
Das finde ich durchaus in Ordnung.

01:09:15.190 --> 01:09:17.190
Das sieht seltsam aus, ja gut.

01:09:17.190 --> 01:09:19.190
Es ist C++, das ist seltsam.

01:09:19.190 --> 01:09:21.190
Und diese ganzen uns überall.

01:09:21.190 --> 01:09:23.190
Aber das geht in Ordnung.

01:09:23.190 --> 01:09:25.190
Aber das geht in Ordnung.

01:09:25.190 --> 01:09:27.190
Aber das geht in Ordnung.

01:09:27.190 --> 01:09:29.190
Ja.

01:09:29.190 --> 01:09:31.190
Ja.

01:09:31.190 --> 01:09:33.190
Ja.

01:09:33.190 --> 01:09:35.190
Ja.

01:09:35.190 --> 01:09:37.190
Ja.

01:09:37.190 --> 01:09:39.190
Man kann auch einfach einen tuple return,

01:09:39.190 --> 01:09:41.190
da braucht man das gar nicht.

01:09:41.190 --> 01:09:43.190
Ja.

01:09:43.190 --> 01:09:45.190
Ja.

01:09:45.190 --> 01:09:47.190
Ja.

01:09:47.190 --> 01:09:49.190
OK.

01:09:49.190 --> 01:09:51.190
Ja, verstehe ich.

01:09:51.190 --> 01:09:53.190
Ja, klar.

01:09:53.190 --> 01:09:55.190
Ja.

01:09:55.190 --> 01:09:57.190
Ja.

01:09:57.190 --> 01:09:59.190
Ja.

01:09:59.190 --> 01:10:01.190
Verstehe ich.

01:10:01.190 --> 01:10:03.190
Ja.

01:10:03.190 --> 01:10:05.190
Ja.

01:10:05.190 --> 01:10:11.190
Das ist auch so ein Magic-Ding in C++, aber das ist cool.

01:10:11.190 --> 01:10:25.090
Das ist tatsächlich eines der cooleren, also eines der, also das, was du Compile-Time-Checking und Compile-Time-mäßig machen kannst in C++, unter anderem halt auch mit Templates, ist, glaube ich, mehr als in jeder anderen Sprache so geht.

01:10:25.850 --> 01:10:30.270
Das ist eines der größten Vorteile und gleichzeitig auch eines der größten Abartigkeiten, die es gibt.

01:10:35.190 --> 01:10:51.740
Ich glaube, ich habe es kapiert, aber nicht sicher.

01:11:02.740 --> 01:11:05.100
Was? Standard, Unique, Pointer, Base?

01:11:08.740 --> 01:11:11.380
This will happen automatically, since I'm using a unique pointer.

01:11:11.840 --> 01:11:16.140
But the same would be true if you just took in a normal pointer and then manually called delete.

01:11:16.460 --> 01:11:22.580
If you pass a pointer to an instance of this derived type, then the wrong destructor gets called at the end.

01:11:22.780 --> 01:11:23.000
What?

01:11:23.540 --> 01:11:27.800
Ich blick nicht durch, aber ich glaube, ich weiß, was er mir sagen will.

01:11:29.600 --> 01:11:31.480
Was war nochmal ein Virtual Destructor?

01:11:32.560 --> 01:11:38.720
Virtual Methoden sind die, die du in Klassen, die von dir...

01:11:38.920 --> 01:11:40.620
...die du von dir ableiten, überschreiben kannst.

01:11:40.820 --> 01:11:45.240
...destructor is called, even through a pointer to a base class.

01:11:45.440 --> 01:11:47.340
Wisst ihr, was ich nicht verstehe bei der ganzen Geschichte?

01:11:47.940 --> 01:11:51.500
Warum ist es überhaupt welle, C++ das so zu schreiben, wie im ersten Fall?

01:11:52.680 --> 01:11:57.420
Warum gibt es nicht einfach einen Compile-Fehler, wenn du was überschreibst, was nicht überschreibbar ist?

01:11:57.820 --> 01:12:03.260
Oder warum gibt es nicht wenigstens ein Warning, dass du was überschreibst, was nicht als überschreibbar markiert ist

01:12:03.260 --> 01:12:07.580
und dementsprechend sich vielleicht anders verhält, wie du denkst?

01:12:08.080 --> 01:12:10.000
...you need to mark the function virtual.

01:12:10.180 --> 01:12:14.720
It's also good practice to explicitly mark the derived class's destructor as override.

01:12:14.720 --> 01:12:16.720
Ich dachte übrigens auch, dass das...

01:12:16.720 --> 01:12:19.360
Siehst du, das ist so eine Sache, die ich nicht verstehe. Warum ist das nicht Pflicht, ja?

01:12:19.720 --> 01:12:24.120
Wenn du was überschreiben willst, dann musst du halt auch override hinschreiben, dass das implizit funktioniert.

01:12:24.200 --> 01:12:25.200
Das ist doch total bescheuert.

01:12:28.190 --> 01:12:29.050
Number 15.

01:12:29.230 --> 01:12:33.130
Thinking that class members are initialized in the order they appear in the initializer list.

01:12:33.570 --> 01:12:39.870
Ja, ey, wie kann man auch davon ausgehen, dass in C++ was in der Reihenfolge passiert, wie es da steht?

01:12:40.530 --> 01:12:41.350
Nee, das ist ja nicht...

01:12:41.350 --> 01:12:41.710
Nee, nee, nee.

01:12:41.810 --> 01:12:42.590
Nee, das kann nicht sein.

01:12:43.850 --> 01:12:44.650
Das geht nicht.

01:12:45.470 --> 01:12:46.490
Das muss anders sein.

01:12:47.050 --> 01:12:49.450
Nein, nicht in der Reihenfolge, wie es da steht.

01:12:49.890 --> 01:12:51.510
Reading left to right, this looks fine.

01:12:51.890 --> 01:12:55.650
The actual order that members are initialized in is the order that they are declared in.

01:12:56.410 --> 01:12:59.750
Wisst ihr, was ein sinnvolles Default-Verhalten wäre?

01:13:02.740 --> 01:13:07.200
Das, was er sagt, nur dass es einen Compile-Fehler gibt, wenn man es in der falschen Reihenfolge reinschreibt.

01:13:07.280 --> 01:13:07.480
Easy.

01:13:08.060 --> 01:13:08.980
Oder zumindest ein Warning.

01:13:10.240 --> 01:13:11.380
Warum erlaubt man das?

01:13:11.740 --> 01:13:12.480
Warum erlaubt man das?

01:13:12.840 --> 01:13:13.500
Man kann doch sagen, okay, das ist ja nicht so.

01:13:13.500 --> 01:13:18.460
Man kann doch sagen, okay, die Sachen müssen in der Reihenfolge initialisiert werden, wie sie definiert werden.

01:13:19.580 --> 01:13:25.840
Und die einzige Möglichkeit, das zu machen, ist, sie in der Reihenfolge zu initialisieren, wie sie initialisiert werden.

01:13:27.340 --> 01:13:31.820
Also wenn ich es falschrum schreibe, wenn ich start zuerst schreibe und end danach schreibe,

01:13:32.940 --> 01:13:35.760
also hier nicht, sondern end zuerst, dann gibt es einfach einen Fehler.

01:13:37.600 --> 01:13:38.840
Warum kompiliert das überhaupt?

01:13:38.840 --> 01:13:43.240
Wir initialisieren end als start plus size, aber dieses mstart ist Garbage.

01:13:43.240 --> 01:13:44.280
Es wurde noch nicht initialisiert.

01:13:44.700 --> 01:13:47.000
Wir können das natürlich mit dem Declaren von start zuerst fixieren.

01:13:48.000 --> 01:13:52.480
Oder, weil start auch ein Parameter für die Funktion ist, können wir nur die Endvariable

01:13:52.480 --> 01:13:53.920
in Bezug auf das Start-Parameter definieren.

01:13:54.000 --> 01:13:54.480
Was auch immer.

01:13:54.680 --> 01:13:55.080
16.

01:13:55.360 --> 01:13:58.920
Nicht erinnern, dass es eine Unterschiede gibt zwischen Default- und Value-Initialisierung.

01:13:59.340 --> 01:14:01.280
x und x2 sind Default-Initialisierungen.

01:14:08.640 --> 01:14:12.580
Ich bin gerade am überlegen, was das überhaupt machen soll.

01:14:13.680 --> 01:14:17.440
Also, int x verstehe ich.

01:14:17.440 --> 01:14:19.500
Man deklariert.

01:14:20.120 --> 01:14:22.800
Eine Variable x vom Typ int.

01:14:23.820 --> 01:14:26.220
Die ist uninitialisiert.

01:14:26.620 --> 01:14:28.020
Das verstehe ich noch.

01:14:33.850 --> 01:14:35.690
Bis hierhin würde ich es auch noch verstehen.

01:14:36.550 --> 01:14:39.410
Man deklariert einen Pointer zu einem int.

01:14:40.430 --> 01:14:46.470
Der ist halt aktuell uninitialisiert oder man könnte auch schreiben gleich 0 oder sowas.

01:14:47.050 --> 01:14:48.270
Verstehe ich auch noch.

01:14:48.270 --> 01:14:52.250
Aber was macht new int an der Stelle?

01:14:52.750 --> 01:14:54.530
New heißt ja im Endeffekt.

01:14:54.530 --> 01:15:00.430
Das konstruiert ein Objekt im Endeffekt.

01:15:00.530 --> 01:15:02.570
Ich wusste gar nicht, dass man new int überhaupt schreiben kann.

01:15:02.710 --> 01:15:02.970
Aber okay.

01:15:03.270 --> 01:15:05.170
Man kriegt wahrscheinlich hier einen int-Pointer zurück.

01:15:06.510 --> 01:15:11.370
Also man kriegt hier quasi einen Pointer auf einen...

01:15:11.370 --> 01:15:15.470
Okay, ich glaube, ich verstehe jetzt, was das macht.

01:15:15.970 --> 01:15:17.250
Man bekommt new int.

01:15:17.250 --> 01:15:23.930
Man bekommt einen Pointer zurück auf einen Arbeitsspeicherbereich.

01:15:24.530 --> 01:15:33.810
In den ich ein int in Zukunft mal reinschreiben kann, der aber aktuell noch nicht initialisiert ist, würde ich mal sagen.

01:15:33.810 --> 01:15:37.030
Also noch nicht auf einen Default-Wert gesetzt ist.

01:15:38.470 --> 01:15:42.830
Im Prinzip wird Speicher allokiert für mich und ich bekomme einen Pointer dahin.

01:15:43.270 --> 01:15:46.730
Aber der Speicher wurde vorher nicht genullt im Endeffekt.

01:15:48.890 --> 01:15:53.430
Also ist jetzt quasi das hier ein Pointer, ein gültiger Pointer auf dem Speicherbereich.

01:15:54.230 --> 01:15:55.430
Aber das, was in dem Speicherbereich...

01:15:56.230 --> 01:16:00.750
Drin steht, auf dem der Pointer zeigt, ist einfach das, was die ganze Zeit drinnen steht.

01:16:00.910 --> 01:16:03.570
Also potenziell random Kram von irgendwas.

01:16:04.510 --> 01:16:06.470
Okay, das leuchtet so weit ein.

01:16:09.810 --> 01:16:10.290
Okay.

01:16:20.760 --> 01:16:21.080
Chat.

01:16:22.840 --> 01:16:26.160
Warum schreibt man hier nicht einfach y gleich 0?

01:16:27.120 --> 01:16:29.460
Warum schreibt man hier y Klammer auf Klammer zu?

01:16:29.600 --> 01:16:30.860
Warum nicht y gleich 0?

01:16:30.860 --> 01:16:32.960
Wäre y gleich 0?

01:16:32.980 --> 01:16:42.600
Nicht irgendwie die für normal denkende Menschen logischere Variante davon?

01:16:44.380 --> 01:16:50.940
Also so wie ich das interpretiere, ist y Klammer auf Klammer zu das gleiche wie y gleich 0.

01:16:51.360 --> 01:16:52.180
Ja, Default-Wert.

01:16:52.260 --> 01:16:54.020
Default-Wert von einem int ist höchstwahrscheinlich.

01:16:54.900 --> 01:16:56.040
Rate ich mal 0.

01:16:56.400 --> 01:16:57.780
Bei C++ weiß man das ja nicht.

01:16:58.060 --> 01:17:00.420
Ist der Default-Wert von einem int in C++ 0?

01:17:01.760 --> 01:17:03.840
Es könnte auch Maxint oder Minint sein.

01:17:03.840 --> 01:17:05.840
Es könnte auch Minus 1...

01:17:06.020 --> 01:17:07.060
1 oder so sein.

01:17:07.120 --> 01:17:12.980
Man weiß das ja nie so genau bei den Leuten, die sich das...

01:17:12.980 --> 01:17:19.580
Also int y gleich 0 wäre halt sehr nice gewesen an der Stelle.

01:17:24.400 --> 01:17:28.420
Und warum das beides möglich ist und ob das ein Unterschied ist,

01:17:29.640 --> 01:17:33.680
ey, keine Ahnung, was mit den Leuten falsch ist, die diese Sprache designen.

01:17:38.450 --> 01:17:42.530
Hat jemand von euch einen Plan, was der Unterschied ist zwischen int Klammer auf Klammer zu

01:17:42.530 --> 01:17:44.890
und geschweifte Klammer auf Klammer zu?

01:17:45.310 --> 01:17:46.710
Also ich würde sagen,

01:17:46.710 --> 01:17:51.710
int Klammer auf Klammer zu invoked den Default-Konstruktor von int.

01:17:52.910 --> 01:17:55.810
Ich weiß nicht, was ein Default-Konstruktor von int sein soll,

01:17:55.890 --> 01:17:59.910
aber sagen wir mal sowas wie 0 reinschreiben vielleicht.

01:18:01.230 --> 01:18:03.210
Und das hier macht das gleiche?

01:18:03.370 --> 01:18:06.140
Keine Ahnung.

01:18:07.480 --> 01:18:09.380
Okay, wir fragen das jetzt mal.

01:18:10.120 --> 01:18:10.640
Difference.

01:18:11.520 --> 01:18:12.200
New int.

01:18:13.180 --> 01:18:14.820
Das kann Google aber wahrscheinlich nicht.

01:18:14.920 --> 01:18:16.300
Da müssten wir jetzt Chat-GPT fragen,

01:18:16.300 --> 01:18:17.480
oder bin ich nicht eingeloggt?

01:18:17.480 --> 01:18:19.280
Aha, hier, guck mal.

01:18:19.480 --> 01:18:19.580
Nee.

01:18:20.540 --> 01:18:20.880
Nee, nee.

01:18:23.080 --> 01:18:24.100
Difference, hier, guck mal.

01:18:25.560 --> 01:18:28.120
Difference between, ups, ah, geh fort.

01:18:28.400 --> 01:18:31.460
Difference between new int Klammer auf Klammer zu und geschweifte Klammer auf Klammer zu.

01:18:31.620 --> 01:18:32.720
Alles klar, war das die Difference?

01:18:36.720 --> 01:18:36.940
Was?

01:18:41.740 --> 01:18:44.800
Sind ints, ja, ich weiß auch nicht, was sind Default-Konstruktor von int sein?

01:18:45.760 --> 01:18:46.200
Okay.

01:18:48.000 --> 01:18:51.320
Expression list, expression initialize.

01:18:51.320 --> 01:19:09.050
Warum will ich mehrere Werte an den int übergeben?

01:19:09.630 --> 01:19:13.070
Ah, ich weiß, warum.

01:19:13.070 --> 01:19:15.070
Ich glaube, das ergibt doch Sinn.

01:19:16.170 --> 01:19:17.770
Ich könnte doch sowas machen wollen.

01:19:17.770 --> 01:19:25.250
Guckt mal, new int und jetzt will ich das als irgendwie als Bytes da reinschreiben oder so vielleicht.

01:19:26.250 --> 01:19:28.490
Ist das vielleicht der Grund, warum das geht?

01:19:28.810 --> 01:19:31.310
Ich kann die Bytes einzeln reinschreiben in den int.

01:19:31.650 --> 01:19:35.830
Ich kann entweder direkt eine Zahl reinschreiben oder ich kann die Bytes einzeln vielleicht reinschreiben.

01:19:36.890 --> 01:19:38.970
Dann würde das tatsächlich sogar Sinn ergeben.

01:19:38.970 --> 01:19:38.990
Dann würde das tatsächlich sogar Sinn ergeben.

01:19:38.990 --> 01:19:42.830
Dann würde das tatsächlich sogar Sinn ergeben.

01:19:42.830 --> 01:19:42.970
Dann würde das tatsächlich sogar Sinn ergeben.

01:19:42.970 --> 01:19:54.490
Dann, okay, wenn das der Fall ist, dann macht es vielleicht doch Sinn.

01:20:04.890 --> 01:20:06.850
Okay, wir machen das jetzt chat-gierig.

01:20:09.920 --> 01:20:13.160
Was, chat, was, Dr. Go, ernsthaft? Das kenne ich gar nicht.

01:20:13.300 --> 01:20:16.280
Dr. Go, chat, nee, wo, wo ist das?

01:20:22.720 --> 01:20:23.820
AI-Chat, das da?

01:20:35.070 --> 01:20:36.550
Okay, ja, das 356.

01:20:36.650 --> 01:20:49.270
Was ist die Unterschiede zwischen NewInt und NewInt in C++?

01:21:10.360 --> 01:21:11.000
Okay, ja.

01:21:12.380 --> 01:21:16.260
Das ist gut zu wissen, das Chat-GPT über DuckDuckGo auf uns.

01:21:17.400 --> 01:21:17.740
Okay.

01:21:19.360 --> 01:21:23.440
Nach längerer Überlegung ergibt das hier tatsächlich Sinn.

01:21:24.580 --> 01:21:26.180
Ist das wie in Go?

01:21:26.780 --> 01:21:31.040
Also, ich glaube, in Go ist es nicht ganz so abartig, was du an unterschiedlichen Sachen...

01:21:31.040 --> 01:21:34.340
Ich meine, in Go kannst du auch schreiben, war irgendwas.

01:21:35.100 --> 01:21:37.260
Also, du kannst in Go schreiben, war blub.

01:21:37.500 --> 01:21:41.150
Du kannst schreiben, blub das.

01:21:41.230 --> 01:21:45.250
Es gibt drei Varianten, irgendwie die Sachen in Go anzulegen.

01:21:45.250 --> 01:21:53.200
Aber da kommt C++ nicht mit aus.

01:21:53.280 --> 01:21:55.780
In C++ brauchst du mindestens sieben verschiedene Varianten.

01:21:58.500 --> 01:21:59.180
Okay, next.

01:21:59.860 --> 01:22:00.080
Fault.

01:22:01.000 --> 01:22:03.540
17. Overuse of magic numbers.

01:22:03.560 --> 01:22:04.600
Ja gut, da gäbe ich ihm recht.

01:22:04.620 --> 01:22:04.920
Introduce.

01:22:04.940 --> 01:22:08.280
Introducing a basic constant in your code can make it many times more readable.

01:22:08.340 --> 01:22:09.220
Da gäbe ich ihm recht, ja.

01:22:09.320 --> 01:22:11.200
The compiler is going to optimize it away anyway.

01:22:11.480 --> 01:22:12.400
Just give it a good name.

01:22:13.760 --> 01:22:17.580
18. Attempting to add or remove elements from a container while looping over it.

01:22:18.620 --> 01:22:20.100
Well, doing that is sometimes just...

01:22:20.100 --> 01:22:22.040
Das ist eh meistens eine blöde Idee.

01:22:22.800 --> 01:22:25.180
Da hast du in anderen Programmiersprachen auch Probleme,

01:22:25.780 --> 01:22:30.580
wenn du, während du eine Liste iterate-est, die Liste modifizierst.

01:22:33.160 --> 01:22:35.360
Es gibt je nach Sprache unterschiedliche Tricks,

01:22:35.360 --> 01:22:36.360
wie man das handhaben kann.

01:22:36.700 --> 01:22:40.120
Ja, irgendwie den Iterator sich vorher speichern und so.

01:22:40.420 --> 01:22:46.960
Aber, also dass das Probleme gibt, das kann ich mir denken, ja.

01:22:47.260 --> 01:22:47.840
Necessary.

01:22:47.940 --> 01:22:50.420
But what I mean is, noobs often do it incorrectly.

01:22:51.360 --> 01:22:53.860
We're trying to put a copy of the vector at the end of the vector.

01:22:54.700 --> 01:22:58.940
Adding or removing an element to the vector may invalidate the iterators to the...

01:22:58.940 --> 01:23:01.000
Nee, ich glaube, das ist was unterschiedliches.

01:23:01.560 --> 01:23:06.420
Das ist, ja, in Go ist das Struct, Struct Initializer.

01:23:06.420 --> 01:23:09.820
Der setzt quasi alle, also Playlist ist ein Struct,

01:23:10.200 --> 01:23:15.600
und hier setzt er, soweit ich weiß, alle Werte in dem Struct auf den Default-Wert.

01:23:16.900 --> 01:23:19.860
In C++ wäre das hier ein List Initializer.

01:23:20.520 --> 01:23:23.340
Das heißt, du könntest hier mehrere Elemente hinten reinschreiben.

01:23:25.340 --> 01:23:28.660
Wobei, wenn du vielleicht, nee, das könnte tatsächlich das Gleiche,

01:23:28.820 --> 01:23:31.420
aufs Gleiche rauskommen, wenn du es nicht angibst.

01:23:32.420 --> 01:23:34.640
Es ist zwar vielleicht was Unterschiedliches,

01:23:34.640 --> 01:23:36.400
aber es ist, wenn du Werte reinmachst,

01:23:36.420 --> 01:23:39.820
wenn du keine Werte reinschreibst, dürfte es sich aber ähnlich verhalten, ja.

01:23:41.100 --> 01:23:41.500
Ja, ja.

01:23:42.860 --> 01:23:44.700
Ich glaube, das kommt aufs Gleiche raus, ja.

01:24:09.600 --> 01:24:11.740
Das ist ohne Scheiß, das muss man ja mitnehmen.

01:24:11.760 --> 01:24:13.560
Ich weiß mittlerweile glücklicherweise in C++ auch nicht mehr wann.

01:24:13.980 --> 01:24:17.780
Das ist, glaube ich, legit die hässlichste Vorschleife, die es in,

01:24:19.040 --> 01:24:22.520
also mal so Sachen wie irgendwelche funktionalen Sprachen, mal außen vor,

01:24:22.620 --> 01:24:27.060
das ist, glaube ich, die hässlichste Vorschleife, die es gibt in allen Sprachen, ey.

01:24:28.180 --> 01:24:31.160
Das war früher der Standard in C++, die Dinger so zu schreiben.

01:24:37.180 --> 01:24:38.380
Ja, gut, das ist klar.

01:24:38.380 --> 01:24:40.480
Da sind wir uns einig.

01:24:41.760 --> 01:24:44.800
Nummer 19, returning a moved local variable.

01:24:45.340 --> 01:24:45.500
Ja.

01:24:46.220 --> 01:24:48.800
Also ich hätte jetzt gedacht, dass das vollkommen okay ist

01:24:48.800 --> 01:24:51.340
und genau der richtige Weg, sowas in C++ zu machen.

01:24:51.880 --> 01:24:55.220
C++ hat ja vor einer Weile diese Sachen hier mit move eingeführt,

01:24:55.620 --> 01:24:59.180
heißt im Endeffekt, man kann ein bisschen wie in Rust

01:24:59.180 --> 01:25:04.000
quasi Ownership von, sagen wir mal, Variablen abgeben.

01:25:04.700 --> 01:25:06.460
Also normalerweise ist das hier ja ein Problem.

01:25:06.460 --> 01:25:11.440
Ja, du legst das hier an, quasi im Stack,

01:25:11.440 --> 01:25:14.440
von dieser Funktion und wenn du das returnst,

01:25:14.900 --> 01:25:18.360
würdest du ja normalerweise was returnen, was aufgeräumt wird nach dem Return.

01:25:18.860 --> 01:25:22.920
Das ist natürlich in C und C++, gerade in C++ oftmals nicht so eindeutig,

01:25:23.320 --> 01:25:26.200
wann was weiterlebt und wann was aufgeräumt wird.

01:25:26.280 --> 01:25:27.900
Das finde ich auch immer sehr undurchsichtig.

01:25:28.380 --> 01:25:30.240
Das ist was, was Rust wirklich nice macht.

01:25:33.600 --> 01:25:35.960
Oder ob es gar kopiert wird, ja.

01:25:36.340 --> 01:25:38.040
Es könnte ja auch sein, dass das erlaubt ist,

01:25:38.140 --> 01:25:41.260
aber dass das eben nicht, dass es einmal kopiert wird.

01:25:41.620 --> 01:25:42.900
Da blicke ich immer nicht genau.

01:25:42.900 --> 01:25:42.920
Ja.

01:25:42.980 --> 01:25:46.280
Also da macht C++ auch zu viel Magic dabei.

01:25:46.580 --> 01:25:47.800
Also ich hätte jetzt aber erwartet,

01:25:48.300 --> 01:25:51.420
wenn ich, obwohl ich den hier lokal in der Funktion angelegt habe,

01:25:51.880 --> 01:25:53.760
ich den Vektor als Return-Type,

01:25:54.440 --> 01:25:56.960
wenn ich den Vektor returnen will,

01:25:58.640 --> 01:26:01.720
dann ist Standard Move genau der richtige Weg,

01:26:01.820 --> 01:26:05.620
um zu sagen, ey, scheiß drauf, dass das hier drinnen angelegt wurde.

01:26:08.700 --> 01:26:13.380
Quasi Rust-mäßig Transfer Ownership von hier zum Aufrufer.

01:26:13.380 --> 01:26:14.200
Ich hätte jetzt vermutet,

01:26:14.200 --> 01:26:16.480
genau das muss man machen.

01:26:17.400 --> 01:26:18.240
Aber anscheinend nicht.

01:26:22.420 --> 01:26:22.620
Ja.

01:26:23.140 --> 01:26:23.320
Ja.

01:26:25.400 --> 01:26:26.960
Genauso hätte ich mir das gedacht.

01:26:31.860 --> 01:26:34.200
Und hier hätte ich gedacht, gibt es vielleicht Probleme.

01:26:37.390 --> 01:26:39.030
Hier hätte ich gedacht, es gibt es Probleme,

01:26:39.270 --> 01:26:41.930
weil eventuell der Vektor ja aufgeräumt wird danach.

01:26:41.930 --> 01:26:46.980
In this situation, that's because of Return-Value-Optimization.

01:26:47.800 --> 01:26:50.620
But what if the compiler can't do Return-Value-Optimization?

01:26:51.340 --> 01:26:53.360
In all cases, the move is unnecessary.

01:26:53.580 --> 01:26:56.580
The compiler always knows that it can move a local variable.

01:26:57.420 --> 01:27:01.040
But in some cases, this actively prevents Return-Value-Optimization.

01:27:01.820 --> 01:27:04.060
So that's why this is one of the few ways where I can say,

01:27:04.160 --> 01:27:05.960
you should just never do this.

01:27:06.500 --> 01:27:06.980
Whatever.

01:27:07.920 --> 01:27:09.060
Oh nein, Templates.

01:27:09.280 --> 01:27:10.000
Jetzt wird es eklig.

01:27:10.440 --> 01:27:10.920
Which brings...

01:27:10.920 --> 01:27:11.680
Warte, warte, warte.

01:27:12.120 --> 01:27:13.020
Na gut, das geht ja noch.

01:27:13.020 --> 01:27:13.280
Was?

01:27:16.590 --> 01:27:17.470
Okay, es geht nicht.

01:27:17.550 --> 01:27:18.910
Ich checke schon wieder nicht, was es macht.

01:27:19.010 --> 01:27:20.910
Also, die erste Zeile kapiere ich ja noch.

01:27:21.310 --> 01:27:24.450
Const, Express, Standard, Remove, Reference, T und und.

01:27:25.570 --> 01:27:27.990
Ist das der Return-Wert hiervon oder...

01:27:27.990 --> 01:27:28.970
Alter, what?

01:27:29.170 --> 01:27:30.350
Ah, meine Güte, ey.

01:27:30.650 --> 01:27:31.530
No, except...

01:27:34.560 --> 01:27:35.980
Ich weiß nicht, was es macht.

01:27:40.300 --> 01:27:41.600
Ja, wie kann man...

01:27:41.600 --> 01:27:44.740
Wie kann man in C++ denn auch erwarten, dass Move...

01:27:44.740 --> 01:27:46.640
Was macht was?

01:27:46.740 --> 01:27:49.740
Hier ist ein Implementation of Standard Move.

01:27:50.200 --> 01:27:53.860
The full templated definition might be a bit much to take in all at once.

01:27:54.140 --> 01:27:56.240
So let's take a look just at the int case.

01:27:56.880 --> 01:27:59.380
Move takes in an int l-value reference,

01:28:00.160 --> 01:28:02.480
static casts it to an r-value reference...

01:28:02.480 --> 01:28:03.920
Obviously, natürlich.

01:28:04.360 --> 01:28:05.140
...and returns it.

01:28:05.840 --> 01:28:08.220
The exact same thing happens in the r-value overload.

01:28:08.640 --> 01:28:11.040
It just static casts to an r-value and returns it.

01:28:11.840 --> 01:28:13.600
A more accurate name for Move...

01:28:13.600 --> 01:28:15.520
Ich habe nichts verstanden davon.

01:28:16.260 --> 01:28:16.580
...is...

01:28:16.580 --> 01:28:16.720
...a more accurate name for Move.

01:28:16.740 --> 01:28:19.300
...probably something like cast to r-value.

01:28:19.740 --> 01:28:21.320
Alles klar, mach das nicht.

01:28:21.700 --> 01:28:22.160
Falsch.

01:28:23.160 --> 01:28:26.300
...thinking that evaluation order is guaranteed to be left to right.

01:28:26.480 --> 01:28:26.660
Ja.

01:28:27.300 --> 01:28:27.780
Ja.

01:28:28.480 --> 01:28:29.740
Hätte ich jetzt eigentlich auch gedacht.

01:28:30.360 --> 01:28:31.380
Here's a famous example.

01:28:32.020 --> 01:28:33.100
We have a string that says,

01:28:33.200 --> 01:28:35.540
but I've heard it works even if you don't believe in it.

01:28:36.000 --> 01:28:38.600
We replace the first four characters with the empty string.

01:28:39.180 --> 01:28:41.560
Then we find even and replace it with only.

01:28:41.560 --> 01:28:44.360
Then we find don't and delete it.

01:28:44.920 --> 01:28:46.560
With this reasoning, we should end up with...

01:28:46.740 --> 01:28:49.040
...I've heard it works only if you believe in it.

01:28:49.700 --> 01:28:55.260
But prior to C++17, the compiler is actually allowed to compute any subexpression in any order.

01:28:59.700 --> 01:29:00.420
But why?

01:29:00.780 --> 01:29:06.700
So, theoretically, it could find the location of even first,

01:29:07.160 --> 01:29:11.460
and then replace the first four characters, making that location off by four.

01:29:11.460 --> 01:29:15.420
Aber wenn ich es richtig verstanden habe, in den neueren C++-Standards ist das nicht so.

01:29:15.420 --> 01:29:19.260
When the second replace happens, it would replace these four characters with only.

01:29:19.260 --> 01:29:19.980
But why?

01:29:19.980 --> 01:29:21.040
And you can see how this goes on.

01:29:21.120 --> 01:29:22.400
You don't get the result you expected.

01:29:23.420 --> 01:29:27.560
Well, the good news is that as of C++17, this example is guaranteed.

01:29:28.060 --> 01:29:29.980
If you have a dot...

01:29:29.980 --> 01:29:34.180
Das war so geil, Sid!

01:29:35.180 --> 01:29:38.920
...b, then a is guaranteed to be evaluated before b is.

01:29:39.500 --> 01:29:45.820
However, even in C++20, the order that function arguments are evaluated is still not guaranteed left to right.

01:29:46.460 --> 01:29:49.340
This wouldn't matter much if a, b, and c were pure functions.

01:29:49.980 --> 01:29:51.480
But if a, b, and c have side effects...

01:29:51.480 --> 01:29:53.120
Okay, das ist natürlich...

01:29:53.120 --> 01:29:58.320
Das ist vielleicht gar nicht so schlimm, das E-Wir, das so anzuschreiben.

01:29:58.320 --> 01:30:00.760
...then the order that they're called in might actually make a difference.

01:30:01.320 --> 01:30:01.680
22.

01:30:02.020 --> 01:30:06.120
Using totally unnecessary heap allocations when a stack allocation would have been fine.

01:30:07.060 --> 01:30:09.220
Here we create two customer records on the heap.

01:30:09.220 --> 01:30:10.540
Das macht ja gar keinen Sinn.

01:30:10.820 --> 01:30:11.620
Warum sollte ich das...

01:30:11.620 --> 01:30:13.440
Und wenn ich es hier lösche, ist eigentlich unsinnig.

01:30:14.620 --> 01:30:18.780
Then we do some work, and then we end up deleting those variables at the end of the function.

01:30:19.100 --> 01:30:19.820
Ja, das ist unsinnig.

01:30:19.820 --> 01:30:23.400
The only question we should ask ourselves is, did this really need to be a heap allocation?

01:30:23.740 --> 01:30:23.960
Nö.

01:30:24.300 --> 01:30:26.960
There's a good chance it would have been fine if we just stack allocated them.

01:30:27.860 --> 01:30:32.680
So let's just say for the sake of argument that these objects are too big, and you really do want them on the heap.

01:30:33.460 --> 01:30:34.860
That brings us to number 23.

01:30:35.160 --> 01:30:38.380
Not using unique pointer and shared pointer to do your heap allocations.

01:30:39.020 --> 01:30:41.740
What happens if an exception gets thrown in the middle here?

01:30:42.000 --> 01:30:44.460
Then these deletes never occur, and the memory is leaked.

01:30:45.020 --> 01:30:47.960
Das gleiche Problem hast du ja in Go auch.

01:30:47.960 --> 01:30:50.260
Also, um zwei Ecken.

01:30:50.260 --> 01:30:52.260
Nicht exakt das gleiche Problem.

01:30:52.260 --> 01:30:59.480
In Go machst du sowas wie defer dann davor, so nach dem Motto, egal was passiert, am Ende der Funktion immer das ausführen.

01:31:00.500 --> 01:31:07.000
Und ja, in C-Sharp würdest du ne exception handling mit finally block drumherum machen.

01:31:07.000 --> 01:31:14.280
Oder, eines der neueren Sachen verwenden, sowas wie using var blub gleich new cackle.

01:31:14.280 --> 01:31:17.080
So, und wenn cackle quasi...

01:31:17.080 --> 01:31:21.380
...ein destructor hat, beziehungsweise eigentlich kein destructor, muss man sagen, disposable ist,

01:31:21.380 --> 01:31:26.460
dann wird das automatisch aufgerufen, auch in for, auch wenn es exceptions gibt.

01:31:26.460 --> 01:31:31.460
When you want to make sure that a resource is cleaned up, you need to put that cleanup code in a destructor.

01:31:31.460 --> 01:31:36.960
So why don't we make a class that holds a pointer, and then in its destructor it deletes that pointer?

01:31:36.960 --> 01:31:39.100
Well, that's exactly what unique pointer...

01:31:39.100 --> 01:31:43.700
Du musst alle Errors handeln, das ist richtig, aber du kannst natürlich immer noch sagen...

01:31:43.700 --> 01:31:55.300
Du kannst es natürlich auch immer ignorieren.

01:31:55.760 --> 01:32:00.760
Aber du meinst, sag mal so, du musstest ihn handeln, indem du explizit sagst, ich ignoriere ihn, das ist schon wahr, ja?

01:32:00.760 --> 01:32:01.880
...does.

01:32:01.880 --> 01:32:06.380
You can give it a heap allocated pointer, and when it goes out of scope, it deletes it.

01:32:06.380 --> 01:32:10.380
A shared pointer, on the other hand, uses a reference counting scheme, similar to what you might...

01:32:10.380 --> 01:32:13.380
Den musst du nicht zwangsläufig in allen Sprachen.

01:32:13.380 --> 01:32:17.520
Also Sprachen, die keine Error-Return-Werte haben, und da ist das...

01:32:17.520 --> 01:32:23.180
...kannst du dich dafür entscheiden, exception handling drumherum zu machen oder nicht, also...

01:32:23.180 --> 01:32:24.880
Also in Rust bist du wirklich gezwungen.

01:32:24.880 --> 01:32:31.020
In Rust musst du alles explizit handeln oder unwrappen und Panic riskieren.

01:32:31.020 --> 01:32:33.620
Aber das dann auch definiert.

01:32:33.620 --> 01:32:34.620
Okay.

01:32:34.620 --> 01:32:35.620
Ja.

01:32:35.620 --> 01:32:39.020
Das kenn ich, das macht Sinn.

01:32:39.020 --> 01:32:51.880
Man kann bei einem shared pointer, glaub ich, sogar eine anonyme Funktion hintendran schreiben, die ausgeführt werden soll, wenn das gekleant wird.

01:32:51.880 --> 01:32:53.000
Also das ist tatsächlich mal ein ganz sinnvolles Feature.

01:32:53.000 --> 01:32:54.000
...as the last shared pointer goes out of scope.

01:32:54.000 --> 01:32:54.680
Okay.

01:32:54.880 --> 01:33:00.560
of scope that shared pointer is in charge of the deletion this scheme is much more expensive because

01:33:00.560 --> 01:33:05.600
reference incrementing and decrementing have to be done atomically that brings us to number 24

01:33:05.600 --> 01:33:10.160
constructing a unique or shared pointer directly instead of using make unique or make shared

01:33:10.960 --> 01:33:15.040
make unique and make shared will pass your arguments directly to the constructor of your

01:33:15.040 --> 01:33:23.680
object okay whatever act 25 any use of new or delete there's no reason to rewrite functionality

01:33:23.680 --> 01:33:27.280
that already exists here i'm trying to manage the memory

01:33:37.160 --> 01:33:42.280
you have some resource and then delete it when it's done that's already what a unique pointer

01:33:42.280 --> 01:33:48.040
does don't try to couple the purpose of your class to the idea of ownership of an object

01:33:48.040 --> 01:33:53.240
that's a completely separate issue unique pointer and shared pointer together cover

01:33:53.240 --> 01:33:54.760
pretty much every valid use of new or share pointer together

01:33:55.240 --> 01:34:06.600
Aber manchmal geht es nicht anders.

01:34:08.600 --> 01:34:10.580
Ja, manchmal geht es nicht anders.

01:34:11.420 --> 01:34:12.620
Manchmal gibt es schlicht und ergreifend nichts.

01:34:12.620 --> 01:34:14.880
Ich hatte letztens genau sowas.

01:34:17.300 --> 01:34:19.400
Ich bin gerade am überlegen, was das war.

01:34:21.540 --> 01:34:24.680
Das war irgendwas einlesen, aber nichts.

01:34:24.680 --> 01:34:27.680
Aber nicht Dateien einlesen.

01:34:28.620 --> 01:34:50.730
Ich kriege es nicht mehr zusammen.

01:34:52.850 --> 01:34:54.290
Aber das ging mit C++ nicht.

01:34:54.690 --> 01:34:59.130
Du musstest die standard, die olen C-Funktionen dafür verwenden.

01:35:03.580 --> 01:35:17.520
Ich glaube, ich wollte irgendwas stand-out.

01:35:18.800 --> 01:35:20.060
Irgendwas mit stand-out.

01:35:20.540 --> 01:35:22.220
Ich wollte nicht von einer Datei lesen.

01:35:25.420 --> 01:35:28.620
Ich wollte von irgendeinem Memory-Stream lesen.

01:35:33.260 --> 01:35:34.340
Und da musste ich die...

01:35:34.340 --> 01:35:35.840
Die Oldschool-C-Dinger verwenden.

01:35:35.940 --> 01:35:36.680
Da gab es in C++ nichts.

01:35:36.680 --> 01:35:38.100
...any kind of resource.

01:35:38.420 --> 01:35:39.820
Then look to see if there's a...

01:35:39.820 --> 01:35:41.720
...are released upon destruction.

01:35:42.560 --> 01:35:43.360
Number 27.

01:35:43.580 --> 01:35:46.000
Thinking that raw pointers are somehow bad.

01:35:46.280 --> 01:35:47.740
Raw pointers sind das Beste.

01:35:48.120 --> 01:35:49.520
Here's a basic max function.

01:35:50.400 --> 01:35:52.060
This function is just reading...

01:35:52.060 --> 01:35:53.220
Raw pointers sind beste.

01:35:54.200 --> 01:35:55.240
Number 28.

01:35:55.540 --> 01:35:56.840
Returning a shared pointer

01:35:56.840 --> 01:35:59.460
when you aren't sure the object is going to be shared.

01:35:59.780 --> 01:36:00.560
Ah, ist mir auch egal.

01:36:01.000 --> 01:36:01.320
...pointer.

01:36:02.020 --> 01:36:02.920
Number 29.

01:36:02.920 --> 01:36:03.920
Thinking that shared pointer...

01:36:04.340 --> 01:36:04.900
...beallwuscht.

01:36:05.600 --> 01:36:05.820
...case.

01:36:06.500 --> 01:36:07.300
And 30.

01:36:07.440 --> 01:36:10.200
Confusing a const pointer with a pointer to const.

01:36:15.010 --> 01:36:16.770
Wenn ich das schon wieder sehe.

01:36:17.730 --> 01:36:24.010
Wenn ich das schon wieder sehe.

01:36:24.670 --> 01:36:25.430
Ah, Mann.

01:36:26.410 --> 01:36:28.110
Okay, bevor er das jetzt erklärt.

01:36:28.710 --> 01:36:29.470
Lass mal überlegen.

01:36:29.650 --> 01:36:32.010
Was könnte da der Fall sein, ja?

01:36:33.350 --> 01:36:33.990
Okay.

01:36:34.670 --> 01:36:36.910
Const int pointer.

01:36:37.550 --> 01:36:37.830
Okay.

01:36:38.590 --> 01:36:41.730
Das hier ist ein int pointer,

01:36:42.310 --> 01:36:46.410
der nach dem Zuweisen nicht mehr geändert werden kann.

01:36:51.110 --> 01:36:52.590
Rate ich jetzt einfach mal, ja?

01:36:53.450 --> 01:36:55.510
Also was hier dran konstant ist,

01:36:55.870 --> 01:36:57.790
ist der pointer.

01:36:59.370 --> 01:37:00.790
Nicht das int.

01:37:01.510 --> 01:37:03.270
Der pointer ist konstant.

01:37:04.990 --> 01:37:08.070
Also sprich, ich kann jederzeit den Wert,

01:37:08.070 --> 01:37:10.350
der quasi in dem Speicher steht,

01:37:10.470 --> 01:37:12.030
auf dem der pointer zeigt, ändern.

01:37:12.590 --> 01:37:16.130
Aber ich kann nicht den Pointer auf einen anderen Speicher...

01:37:16.130 --> 01:37:19.270
Also ich kann nicht einen neuen Speicherbereich,

01:37:19.310 --> 01:37:20.230
auf den er zeigt, zuweisen.

01:37:20.310 --> 01:37:21.530
Ich darf nicht den Pointer ändern,

01:37:21.610 --> 01:37:23.790
aber ich kann den Wert ändern im Speicher,

01:37:23.930 --> 01:37:24.990
auf den der Pointer zeigt.

01:37:24.990 --> 01:37:26.650
So, das sehe ich.

01:37:26.810 --> 01:37:27.410
Das ist ein const.

01:37:27.810 --> 01:37:29.530
Also der Pointer ist konstant.

01:37:30.110 --> 01:37:33.030
Nicht der Wert, auf den der Pointer zeigt.

01:37:33.910 --> 01:37:35.510
int const pointer.

01:37:42.070 --> 01:37:42.970
Ich habe keine Ahnung,

01:37:43.110 --> 01:37:44.910
warum das überhaupt valid syntax ist.

01:37:50.260 --> 01:37:51.360
Und int Sternchen...

01:37:54.400 --> 01:37:55.400
Hä?

01:37:57.920 --> 01:37:58.880
Ich check's nicht.

01:37:58.880 --> 01:37:59.880
Keine Ahnung.

01:37:59.880 --> 01:38:03.760
Das Konzept von const pointer vs. pointer-to-const ist ziemlich einfach.

01:38:03.760 --> 01:38:05.300
Sehr einfach, offensichtlich einfach.

01:38:05.300 --> 01:38:07.140
Aber viele Neubi versuchen,

01:38:07.140 --> 01:38:09.780
die Unterschiede zwischen ihnen syntaktisch zu erzählen.

01:38:10.180 --> 01:38:10.680
Ja.

01:38:11.780 --> 01:38:12.980
Es ist so offensichtlich,

01:38:12.980 --> 01:38:14.840
das kann man eigentlich gar keinen Fehler machen.

01:38:14.840 --> 01:38:16.800
Die Regel ist, dass const auf das,

01:38:16.800 --> 01:38:18.800
was sofort auf der linken Seite ist, angepasst wird.

01:38:25.340 --> 01:38:27.140
Außer es ist das linkste Ding,

01:38:27.140 --> 01:38:29.340
in dem es auf das Ding auf der rechten Seite angepasst wird.

01:38:29.340 --> 01:38:35.730
Äh, okay.

01:38:40.610 --> 01:38:41.330
Warum?

01:38:41.330 --> 01:39:04.540
Also was ja Sinn gemacht hätte,

01:39:04.540 --> 01:39:06.540
ist sowas hier.

01:39:06.540 --> 01:39:10.540
const pointer int

01:39:10.540 --> 01:39:12.540
vs.

01:39:12.540 --> 01:39:14.540
const int pointer.

01:39:14.540 --> 01:39:15.540
So.

01:39:15.540 --> 01:39:16.540
Das hätte ich ja noch verstanden,

01:39:16.540 --> 01:39:17.540
so nach dem Motto,

01:39:17.540 --> 01:39:19.540
das hier ist ein konstanter Pointer,

01:39:19.540 --> 01:39:20.540
auf ne, also ein Pointer,

01:39:20.540 --> 01:39:22.540
und das hier wäre quasi ein,

01:39:22.540 --> 01:39:24.540
äh,

01:39:24.540 --> 01:39:26.540
const int

01:39:26.540 --> 01:39:28.540
auf der f...

01:39:28.540 --> 01:39:30.540
Aber, okay, keine Ahnung.

01:39:30.540 --> 01:39:32.540
Das muss man einfach so hinnehmen.

01:39:32.540 --> 01:39:34.540
Ich glaube, selbst meins macht auch nicht mehr Sinn.

01:39:34.540 --> 01:39:36.540
Ich glaube, selbst meins macht auch nicht mehr Sinn.

01:39:36.540 --> 01:39:38.540
Hier, the const applies to the int,

01:39:38.540 --> 01:39:40.540
not to the pointer.

01:39:40.540 --> 01:39:42.540
And here, const applies to the pointer,

01:39:42.540 --> 01:39:44.540
not to the int.

01:39:44.540 --> 01:39:46.540
Number 31. Alles klar, oder?

01:39:46.540 --> 01:39:48.540
Ignoring compiler warnings.

01:39:48.540 --> 01:39:50.540
Ignoring them, or turning them off,

01:39:50.540 --> 01:39:52.540
very frequently leads to undefined behavior.

01:39:52.540 --> 01:39:54.540
Ja. Gut, das ist klar.

01:39:54.540 --> 01:39:56.540
Meine Güte, Alter.

01:39:56.540 --> 01:39:58.540
Meine Güte, das hat mich

01:39:58.540 --> 01:40:04.220
super verwirrt jetzt.

01:40:04.220 --> 01:40:06.220
Gucken, ob es neue Package-Updates gibt.

01:40:06.220 --> 01:40:08.220
Ist schon ne halbe Stunde her, wo ich Package-Updates...

01:40:08.220 --> 01:40:10.220
Nein, nicht.

01:40:10.220 --> 01:40:12.220
Dann noch lieber Go oder Rust.

01:40:12.220 --> 01:40:15.600
Ja, ich würde es tatsächlich auch bevorzugen.

01:40:15.600 --> 01:40:17.600
Also, ich bin kein super

01:40:17.600 --> 01:40:19.600
großer Go-Fan,

01:40:19.600 --> 01:40:21.600
aber wenn ich die Auswahl hätte,

01:40:21.600 --> 01:40:23.600
würde ich das machen. Ich bin jetzt auch nicht

01:40:23.600 --> 01:40:25.600
irgendwie bei der Rust

01:40:25.600 --> 01:40:27.600
Task Force, die überall Rust

01:40:27.600 --> 01:40:29.600
anpreisen müssen, aber ich würde es auch

01:40:29.600 --> 01:40:33.040
bei solchen Sachen bevorzugen.

01:40:33.040 --> 01:40:35.040
Manchmal kommt es halt nicht drum herum.

01:40:35.040 --> 01:40:37.040
Am letzten sind ESP32 wieder

01:40:37.040 --> 01:40:39.040
dran rumgebastelt.

01:40:39.040 --> 01:40:41.040
Die neue Variante mit ZigBee.

01:40:41.040 --> 01:40:43.040
Und die offiziellen Sachen

01:40:43.040 --> 01:40:45.040
kannst du halt am besten

01:40:45.040 --> 01:40:47.040
nachvollziehen in

01:40:47.040 --> 01:40:49.040
C++, so mit dem offiziellen Framework

01:40:49.040 --> 01:40:52.860
von denen. Wann kommt KI-Stream?

01:40:52.860 --> 01:40:54.860
Wann du KI-Tools ausprobierst? Wir haben immer mal

01:40:54.860 --> 01:40:56.860
wieder KI-Tools ausprobiert.

01:40:56.860 --> 01:40:58.860
Ich wüsste jetzt nicht, was ich da für

01:40:58.860 --> 01:41:00.860
einen extra Stream machen sollte.

01:41:00.860 --> 01:41:02.860
Meine Lieblingssprache bleiben

01:41:02.860 --> 01:41:04.860
nach wie vor C-Sharp und

01:41:04.860 --> 01:41:06.860
Ruby. Allerdings Ruby kann ich in letzter

01:41:06.860 --> 01:41:08.860
Zeit sehr wenig, weil

01:41:08.860 --> 01:41:10.860
es ist total outdated und

01:41:10.860 --> 01:41:12.860
overrated, gbated.

01:41:12.860 --> 01:41:14.860
Also outdated ist es nicht, aber niemand

01:41:14.860 --> 01:41:16.860
verwendet es mehr. Ich mag Ruby

01:41:16.860 --> 01:41:23.760
aber als Sprache.

01:41:23.760 --> 01:41:25.760
Ich habe auf der Arbeit auch schon einige Sachen

01:41:25.760 --> 01:41:27.760
in Go gebastelt mittlerweile.

01:41:27.760 --> 01:41:29.760
Gerade für im Kubernetes Umfeld

01:41:29.760 --> 01:41:31.760
beispielsweise letztens einen Prometheus

01:41:31.760 --> 01:41:33.760
Exporter, den

01:41:33.760 --> 01:41:35.760
wir als Sidecar injecten können

01:41:35.760 --> 01:41:37.760
für unsere

01:41:37.760 --> 01:41:39.760
Blockchain. Wir haben ein paar

01:41:39.760 --> 01:41:41.760
Blockchain Pots laufen

01:41:41.760 --> 01:41:43.760
und

01:41:43.760 --> 01:41:45.760
die selbst bieten nicht alle Metriken an,

01:41:45.760 --> 01:41:47.760
die wir haben wollen. Da habe ich

01:41:47.760 --> 01:41:49.760
einen Prometheus Sidecar gebastelt,

01:41:49.760 --> 01:41:51.760
der die API abfragt und daraus

01:41:51.760 --> 01:41:53.760
Metriken in Prometheus Format

01:41:53.760 --> 01:41:55.760
bereitstellt. Für sowas ist Go nice. Da kommt

01:41:55.760 --> 01:41:57.760
im Endeffekt dann ein 3,5 MB Binary

01:41:57.760 --> 01:41:59.760
oder sowas raus. Das packst du

01:41:59.760 --> 01:42:01.760
in Minimal Image rein und da ist es am Ende

01:42:01.760 --> 01:42:03.760
15 MB und let's go.

01:42:03.760 --> 01:42:05.760
Ein Schocker!

01:42:05.760 --> 01:42:07.760
Am Start. Dankeschön für den Sub.

01:42:07.760 --> 01:42:18.530
So.

01:42:18.530 --> 01:42:20.530
Irgendjemand hat sich doch gerade KI

01:42:20.530 --> 01:42:22.530
gewünscht. Gucken wir mal KI.

01:42:22.530 --> 01:42:24.530
13

01:42:24.530 --> 01:42:26.530
Lead, Lead, Elite

01:42:26.530 --> 01:42:28.530
Time. Das ist bestimmt

01:42:28.530 --> 01:42:46.430
Absicht.

01:42:46.430 --> 01:42:50.580
Oh ne, ne, ne, ne, ne.

01:42:50.580 --> 01:42:52.580
Das ist mir zu viel over-engineert

01:42:52.580 --> 01:43:07.020
für heute morgen wieder.

01:43:07.020 --> 01:43:09.020
Wieso? Ich habe da noch mehr Tabs. Guck mal hier.

01:43:09.020 --> 01:43:11.020
Da noch Tabs und

01:43:11.020 --> 01:43:13.020
hier habe ich gerade neu gestartet. Hier habe ich auch

01:43:13.020 --> 01:43:16.400
noch ein paar. Multisite

01:43:16.400 --> 01:43:18.400
Homelab. Ist das überhaupt noch

01:43:18.400 --> 01:43:20.400
ein

01:43:20.400 --> 01:43:22.400
Homelab?

01:43:22.400 --> 01:43:24.400
Wenn man sowas hat.

01:43:24.400 --> 01:43:26.400
Wo hat er denn das hier?

01:43:26.400 --> 01:43:28.400
Wir gucken uns das Intro

01:43:28.400 --> 01:43:30.400
an. Das rumgemale

01:43:30.400 --> 01:43:32.400
hier, das müssen wir uns dann nicht mehr angucken. Wir gucken uns

01:43:32.400 --> 01:43:34.400
mal das Intro an. Weil das ist,

01:43:34.400 --> 01:43:36.400
das hier ist der Meister des

01:43:36.400 --> 01:43:38.400
Over-Engineerings für sein Homelab.

01:43:44.400 --> 01:43:46.400
Das hat er auch bestimmt gesponsert bekommen, oder?

01:43:48.400 --> 01:43:50.400
Ansonsten ist halt so, also

01:43:50.400 --> 01:43:52.400
bisher war es schon Overkill,

01:43:52.400 --> 01:43:54.400
aber was folgt nach

01:43:54.400 --> 01:43:56.400
Overkill? Hyperkill

01:43:56.400 --> 01:44:03.870
oder so?

01:44:03.870 --> 01:44:05.870
In that video you saw most of my hardware choices,

01:44:05.870 --> 01:44:07.870
which was giving my

01:44:07.870 --> 01:44:09.870
Homelab servers a new life, in a

01:44:09.870 --> 01:44:11.870
new rack, on a new network,

01:44:11.870 --> 01:44:13.870
in a new location.

01:44:13.870 --> 01:44:15.870
Warte mal, was ist das?

01:44:15.870 --> 01:44:17.870
Überfordert durch Tabs.

01:44:17.870 --> 01:44:19.870
Lust auf die Musik?

01:44:19.870 --> 01:44:21.870
Ich bin verwirrt.

01:44:21.870 --> 01:44:23.870
Ja?

01:44:23.870 --> 01:44:25.870
Okay.

01:44:25.870 --> 01:44:29.630
Achtung.

01:44:29.630 --> 01:44:31.630
Ah, ich hab zu viel Zeug auf.

01:44:31.630 --> 01:44:33.630
Ich blicke in meinen Tabs

01:44:33.630 --> 01:44:35.630
nicht mehr durch, hier.

01:44:35.630 --> 01:44:37.630
Ja, kann schon mal vorkommen,

01:44:37.630 --> 01:44:39.630
aber es kommt relativ selten vor, müsst ihr auch

01:44:39.630 --> 01:44:47.620
zugeben.

01:44:53.620 --> 01:44:57.120
Ah, und am Ende,

01:44:57.120 --> 01:44:59.120
wir wissen ja alle, was er laufen hat.

01:44:59.120 --> 01:45:01.120
Irgendwie nen

01:45:01.120 --> 01:45:03.120
Dashboard und

01:45:03.120 --> 01:45:05.120
Uptime-Kuma, so.

01:45:05.120 --> 01:45:07.120
Da hat er im Prinzip

01:45:07.120 --> 01:45:09.120
nichts darauf laufen, was

01:45:09.120 --> 01:45:11.120
wirklich jetzt

01:45:11.120 --> 01:45:13.120
nutzbar Mehrwert

01:45:13.120 --> 01:45:15.120
bringt. Er hat ganz viel Management

01:45:15.120 --> 01:45:17.120
für das Management für

01:45:17.120 --> 01:45:19.120
sein Hardware-Kram.

01:45:29.440 --> 01:45:31.440
Das Ding ist so, also ich sag euch mal, wie es ist.

01:45:31.440 --> 01:45:33.440
Das Setup von

01:45:33.440 --> 01:45:35.440
ihm, ohne Co-Location,

01:45:35.440 --> 01:45:37.440
zweiten Standort und so,

01:45:37.440 --> 01:45:39.440
das Setup ist so komplex,

01:45:39.440 --> 01:45:41.440
dass er definitiv,

01:45:41.440 --> 01:45:43.440
ich meine, er ist auch nur ein Mann, der das

01:45:43.440 --> 01:45:45.440
betreibt, ja, dass er definitiv

01:45:45.440 --> 01:45:47.440
mehr Downtime bisher hatte

01:45:47.440 --> 01:45:49.440
durch die Hochverfügbarkeit

01:45:49.440 --> 01:45:51.440
als

01:45:51.440 --> 01:45:53.440
durch eigentliche Hardware-Ausfälle.

01:45:53.440 --> 01:46:00.020
Also durch Fehler

01:46:00.020 --> 01:46:02.020
durch die Hochverfügbarkeit hat er

01:46:02.020 --> 01:46:04.020
mehr Downtime gehabt als ohne Hochverfügbarkeit.

01:46:04.020 --> 01:46:06.020
Wette ich mit euch.

01:46:12.020 --> 01:46:14.020
Wir können starten.

01:46:26.020 --> 01:46:28.020
Wir können starten.

01:46:36.020 --> 01:46:38.020
Ich will mir nur den Anfang angucken, worum er

01:46:38.020 --> 01:46:40.020
umzieht. Ähm, der Rest

01:46:40.020 --> 01:46:43.440
interessiert mich eigentlich nicht so sehr.

01:46:43.460 --> 01:46:45.400
Wo fängt der denn an?

01:46:47.280 --> 01:46:49.740
Ich skippe das gleich.

01:47:02.900 --> 01:47:06.220
Und ich dachte, bei mir ist schon übertrieben mit...

01:47:06.220 --> 01:47:09.140
Ich habe...

01:47:09.140 --> 01:47:13.000
Also streng genommen habe ich drei VLANs.

01:47:13.000 --> 01:47:16.540
Eins für China-Chinesen-IoT-Geräte.

01:47:16.980 --> 01:47:24.490
Dann das normale WLAN, VLAN und halt das Default-VLAN.

01:47:24.610 --> 01:47:26.210
Ich weiß nicht, ob man das mitrechnen kann.

01:47:28.300 --> 01:47:32.000
Der ist natürlich dann schon wieder absolut next level unterwegs.

01:47:48.860 --> 01:47:50.780
Ich habe eine Site-to-Site-VPN-Setup.

01:47:50.900 --> 01:47:52.800
Ich dachte, das wird wirklich hart sein.

01:47:53.120 --> 01:47:55.880
Es wird viel einfacher sein, weil ich...

01:47:55.880 --> 01:48:02.610
Ich habe die Möglichkeit, Unify-Site-Magic zu nutzen.

01:48:02.890 --> 01:48:05.490
Das ist Teil der Grund, warum ich Unify-Devices auswählen wollte.

01:48:05.970 --> 01:48:08.670
Weil es literally so einfach ist, als Checking...

01:48:08.670 --> 01:48:10.070
Ich mag Unify nicht.

01:48:11.730 --> 01:48:14.590
Und ihr wollt dann immer genau wissen, warum.

01:48:14.730 --> 01:48:17.150
Und ich kann es euch gar nicht so hundertprozentig genau sagen.

01:48:17.230 --> 01:48:18.170
Ich habe einfach kein...

01:48:18.170 --> 01:48:19.410
Ich habe einfach kein...

01:48:20.170 --> 01:48:23.350
Ich fühle es nicht, wie man so schön sagt heutzutage, Unify.

01:48:24.910 --> 01:48:26.710
Unify ist auf der einen Seite easy,

01:48:26.870 --> 01:48:32.390
auf der anderen Seite dann schon wieder für den Easy-Grad zu kompliziert.

01:48:32.830 --> 01:48:37.590
Und wenn Sachen kompliziert sind, aber nicht ordnungsgemäß kompliziert,

01:48:37.590 --> 01:48:41.210
so dass jemand, der sich damit auskennt, versteht, was damit gemeint ist,

01:48:41.270 --> 01:48:45.290
sondern dass alles irgendwie dann wieder anders heißt an anderen Stellen ist.

01:48:45.730 --> 01:48:48.590
Also ich bevorzuge entweder dumm

01:48:49.790 --> 01:48:50.090
oder...

01:48:50.170 --> 01:48:59.990
Kompliziert, aber wenn kompliziert, dann so, dass es eben gemacht ist für Leute,

01:49:00.310 --> 01:49:01.690
die sich mit dem Thema auskennen.

01:49:01.950 --> 01:49:04.270
Zum Beispiel, ja, mal ein Beispiel, ja.

01:49:04.910 --> 01:49:09.910
Fritzbox ist für mich ein super Beispiel für easy für Leute, die sich nicht damit auskennen.

01:49:11.690 --> 01:49:14.510
Du kannst in der Fritzbox viele Sachen gar nicht machen,

01:49:14.590 --> 01:49:17.570
die man vielleicht mit einem ordentlichen Netzwerkgerät machen können sollte.

01:49:17.570 --> 01:49:19.570
Zum Beispiel, glaube ich, kannst du bis heute...

01:49:20.170 --> 01:49:22.170
also ich kann mich korrigieren, wenn ich falsch liege,

01:49:22.170 --> 01:49:27.590
wir haben ja letztens in einem Video gelernt, dass das angeblich passiv-aggressiv ist, wenn man das so sagt.

01:49:27.950 --> 01:49:29.950
Ihr erinnert euch noch, ja.

01:49:30.510 --> 01:49:33.230
Aber ihr könnt mich wirklich gerne korrigieren, wenn ich falsch liege.

01:49:33.230 --> 01:49:38.010
Ich glaube, man kann bei einer Fritzbox heute immer noch keine ausgehenden Firewall-Regeln machen.

01:49:39.170 --> 01:49:41.170
Und wie gut die...

01:49:41.670 --> 01:49:46.850
Sachen, die Firewall-Regeln zwischen Netzen sind, man kann ja auch gar nicht wirklich gescheit verschiedene Netze anlegen,

01:49:47.750 --> 01:49:49.210
das geht nicht, ja.

01:49:49.210 --> 01:49:50.110
Und das ist aber okay,

01:49:50.170 --> 01:50:10.910
Weil die Fritzbox ist ein Gerät, das ist rundum, finde ich, gelungen, designt für Leute, die ein bisschen advancedere Sachen daheim machen wollen, ja auch mal ein Thermostat steuern, ein Gäste-WLAN haben, was auch immer, aber sich damit nicht wirklich tiefgreifend beschäftigen wollen.

01:50:10.910 --> 01:50:25.600
So, das ist ein gutes Gerät. Früher hat man immer gesagt, die rote Pest aus Berlin, also AVM, aber mittlerweile muss ich sagen, ich mag Fritzboxen für das, was sie sind.

01:50:25.600 --> 01:50:44.600
So, das Gegenstück dazu wäre beispielsweise ein Cisco Switch über CLI. Damit könnte kein Noob irgendwas anfangen, aber, und das muss man denen echt zugute halten, das Cisco CLI, ja ich hab mal vor Uhrzeiten ein CCNA gesehen,

01:50:44.620 --> 01:51:11.090
also minimalste Ahnung, hatte ich zumindest zum damaligen Zeitpunkt davon, ist in sich schlüssig. Das ergibt Sinn, wenn du dich damit beschäftigst. Sicherlich hast du da schon ein paar angeflanschte Sachen und so ein paar Sonderdinger, die vielleicht nicht ganz dem entsprechen, aber zu 95% ergibt die CLI-Bedienung von einem Cisco Switch, ergibt das Sinn.

01:51:11.290 --> 01:51:18.090
Auch wenn man sich erstmal dran gewöhnt hat, für einen Noob nicht. Der hat sich nie damit auseinandergesetzt, will sich damit nicht auseinandersetzen.

01:51:18.110 --> 01:51:29.370
Wenn man sich erstmal dran gewöhnt, dass ein Port starten nicht Start ist, sondern nicht Shutdown und sowas in der Richtung, dann ergibt das Sinn bei Cisco.

01:51:29.910 --> 01:51:37.350
Ja, auch dass man in die Untermenüs, dass man um einen Port einzurichten erstmal in die Port-Config gehen muss und dann dort die Sachen, ergibt Sinn.

01:51:39.490 --> 01:51:43.650
Ein Negativ-Beispiel wäre C++, es ist kompliziert und ergibt keinen Sinn.

01:51:43.650 --> 01:51:47.650
Also das eine ist ein Gerät, das richtet sich an Profis.

01:51:48.830 --> 01:51:56.650
Macht aber auch keine Verwässerung drumherum und sorgt deswegen dafür, dass es konsistent bedienbar ist, wenn man sich damit auskennt.

01:51:57.550 --> 01:52:00.690
Im Prinzip wie eine Fritzbox, die auch gut bedienbar ist, für jemanden, der sich nicht auskennt.

01:52:01.510 --> 01:52:03.410
Oder für jemanden, der sich nicht im Detail...

01:52:03.410 --> 01:52:09.350
Aber Unify ist in so einem komischen Spot dazwischen und das ist glaube ich das, warum es mir nie gefallen hat.

01:52:09.350 --> 01:52:17.450
Die versuchen ein bisschen sich an die Noobs zu richten und dadurch verwässern sie die...

01:52:17.450 --> 01:52:23.850
Eigentliche Komplexität, die aber dann doch da ist in den Settings.

01:52:25.370 --> 01:52:27.970
Und ich habe mich da nie richtig drinnen zurecht gefunden.

01:52:29.630 --> 01:52:35.680
MikroTik macht es auch nur so semi-besser, muss man sagen.

01:52:36.420 --> 01:52:40.240
Also, wenn man sich mal hier RouterOS Demo anguckt.

01:52:43.010 --> 01:52:48.630
Das ist ja das, die Dinger, die ich gerne empfehle für den Heimbereich, für alle, die ein bisschen mehr machen wollen.

01:52:48.730 --> 01:52:49.570
MikroTik-Geräte.

01:52:51.660 --> 01:52:52.180
MikroTik-Geräte.

01:52:52.180 --> 01:52:52.600
MikroTik-Geräte.

01:52:52.600 --> 01:52:52.840
MikroTik-Geräte.

01:52:52.840 --> 01:52:54.160
Das ist nur so semi-viel besser.

01:52:55.480 --> 01:52:58.600
Es ist schon eine gewisse Logik in diesem Webinterface drin.

01:52:58.800 --> 01:53:00.060
Ja, hier findest du die Sachen.

01:53:00.160 --> 01:53:00.460
Wie findest du?

01:53:00.600 --> 01:53:01.340
Firewall-Settings.

01:53:01.600 --> 01:53:03.080
Da ist schon eine gewisse Logik drin.

01:53:03.240 --> 01:53:05.260
Vieles ist aber auch komplett unlogisch.

01:53:05.580 --> 01:53:08.300
Wie zum Beispiel, wie man jetzt genau VLANs anlegt.

01:53:08.460 --> 01:53:12.960
VLANs auf RouterOS gibt es drei, vier verschiedene Varianten.

01:53:13.360 --> 01:53:14.800
Es gibt die Variante über Bridges.

01:53:14.900 --> 01:53:16.860
Es gibt die Variante über Interfaces.

01:53:17.040 --> 01:53:18.040
Es gibt noch...

01:53:18.040 --> 01:53:18.500
Whatever.

01:53:18.900 --> 01:53:20.480
Da blickst du nicht durch.

01:53:20.660 --> 01:53:22.740
Du brauchst einen Guide dafür, wie du VLANs anlegst.

01:53:22.740 --> 01:53:26.200
Jetzt eigentlich sollte Faulan anlegen, was super simples sein ist es aber nicht.

01:53:27.480 --> 01:53:29.120
Ja, das ist auch was, wo sie es ein bisschen verkacken.

01:53:29.500 --> 01:53:31.500
Mit den normalen Settings ist es aber echt okay.

01:53:34.800 --> 01:53:40.570
Und die haben aber halt auch eine CLI-Bedienung.

01:53:41.570 --> 01:53:42.730
Die ist ganz brauchbar.

01:53:43.890 --> 01:53:47.210
Wenn auch nicht so hundertprozentig konsistent wie beispielsweise bei Cisco.

01:53:49.070 --> 01:53:51.170
Aber mir ist es immer noch lieber als Unify.

01:53:51.910 --> 01:53:57.990
Weil die hier wenigstens nicht so tun beim MikroTik, als wäre es eine super easy, unkomplexe Sache.

01:53:58.050 --> 01:54:02.630
Eine Netzwerkkonfiguration mit advanceden Themen.

01:54:05.500 --> 01:54:07.540
Und die nennen die Sachen halt auch so, was es ist.

01:54:08.260 --> 01:54:10.380
Und das ist halt ein bisschen das Problem, was ich bei Unify hatte.

01:54:13.470 --> 01:54:16.530
Ja, Unify ist Faulan-Config super easy, das stimmt.

01:54:17.950 --> 01:54:19.430
Das ist eine Sache, die ist ja tatsächlich easy.

01:54:19.530 --> 01:54:21.350
Die ist übrigens so easy, wie es eigentlich sein sollte.

01:54:22.290 --> 01:54:25.310
Du überlegst dir, was es sein soll.

01:54:26.350 --> 01:54:31.750
Ob das quasi ein, wie nennt das Cisco, ein Trunkport oder ein Accessport ist.

01:54:31.750 --> 01:54:33.750
Richtig? Habe ich das noch richtig im Kopf?

01:54:35.990 --> 01:54:40.830
Und dann trägst du halt ein, was getaggt werden soll, beziehungsweise was drüber gehen darf.

01:54:40.950 --> 01:54:42.410
Und gut, das stimmt, das ist in Unify einfach.

01:54:42.870 --> 01:54:47.010
Aber viele Sachen drumherum sind undurchsichtig gewesen für mich bei Unify.

01:54:47.770 --> 01:54:52.450
Und aus dem Grund, weil sie eben auf der einen Seite noob-accessible irgendwie sein wollen,

01:54:52.530 --> 01:54:57.850
aber auf der anderen Seite aber auch advancedere Konfigurationen bieten,

01:54:58.010 --> 01:54:59.670
aber dann die Sachen oftmals nicht so nennen.

01:54:59.670 --> 01:55:04.670
Und wo Unify bei mir komplett unten durch ist, zumindest was WLAN angeht,

01:55:04.890 --> 01:55:11.010
also nicht VLAN, WLAN angeht, ist, dass sie für sehr sinnvolle Features,

01:55:11.570 --> 01:55:15.750
die andere Hersteller schon lange haben, ewig gebraucht haben

01:55:15.750 --> 01:55:20.410
und zu meiner Zeit, wo ich Unify hatte, sie nicht hinbekommen haben.

01:55:20.530 --> 01:55:23.190
Mein Lieblingsbeispiel ist da DPSK für.

01:55:23.930 --> 01:55:26.710
Damit kannst du, und Shared Key,

01:55:28.310 --> 01:55:32.290
also jeder Hersteller nennt das ein bisschen anders, Unify hat das mittlerweile auch.

01:55:33.010 --> 01:55:34.370
Das ist aber so für mich.

01:55:34.370 --> 01:55:37.890
Das Feature schlechthin gewesen, was mich immer richtig geärgert hat,

01:55:38.550 --> 01:55:39.890
dass Unify das nicht konnte.

01:55:41.090 --> 01:55:52.290
Es kann, Rugus kann es, OpenWRT kann es, Mikrotik kann es, auch ein bisschen Umwege,

01:55:53.510 --> 01:56:00.570
Cisco kann es, es konnte im Prinzip jeder etwas bessere Hersteller von WLAN-Equipment außer Unify.

01:56:00.570 --> 01:56:03.690
Und Unify hat sich, keine Ahnung, sieben, acht Jahre,

01:56:04.370 --> 01:56:08.530
gegen gewehrt, dieses Feature einzubauen, obwohl das eines der sinnvollsten Features ist

01:56:08.530 --> 01:56:15.060
für WLAN-Geräte, die ein bisschen advancer sind, als

01:56:15.060 --> 01:56:16.960
wir schalten ein WLAN in der Fritzbox ein.

01:56:20.740 --> 01:56:22.480
Nein, AVM kann das ziemlich sicher nicht.

01:56:23.940 --> 01:56:27.160
Ich sag mal so, für alles, was ein bisschen advancer ist als eine Fritzbox, die können das.

01:56:27.660 --> 01:56:29.200
Und zur Erklärung, was das ist,

01:56:30.540 --> 01:56:34.660
wenn ihr ein WLAN aufmacht, also im Prinzip heißt der WLAN auf,

01:56:34.660 --> 01:56:38.760
heißt der, euer Access Point broadcastet eine SSID.

01:56:38.980 --> 01:56:45.740
Ja, ich bin WLAN Max daheim oder WLAN Twitch, also der Name von eurem WLAN wird da geprodcastet.

01:56:46.160 --> 01:56:51.540
So, und in der Standard-Config ist das so, jedes WLAN hat ein WLAN-Passwort.

01:56:51.980 --> 01:56:53.720
Das müsst ihr bei den Geräten einstellen.

01:56:54.020 --> 01:56:58.340
Da wählt ihr das WLAN aus, gebt das Passwort ein und das Gerät bekommt Zugriff auf das WLAN.

01:56:58.800 --> 01:56:59.740
Soweit, so gut.

01:57:00.500 --> 01:57:08.160
Wenn ihr jetzt allerdings wollt, dass Geräte im, das gleiche WLAN kommen,

01:57:08.980 --> 01:57:12.660
aber unterschiedliche WLAN-Passwörter haben, dann wird es kompliziert.

01:57:12.980 --> 01:57:16.220
Das einzige, was es da traditionell gibt, ist WPA Enterprise,

01:57:16.220 --> 01:57:21.340
aber WPA Enterprise wird von so gut wie keinem normalen WLAN-Gerät unterstützt.

01:57:21.820 --> 01:57:29.220
Ja, also eure IoT-Klühbirne, euren Receiver am Fernseher, whatever,

01:57:29.220 --> 01:57:31.220
die unterstützen alle kein WPA Enterprise.

01:57:32.360 --> 01:57:35.300
Das heißt, wenn ihr jetzt die Geräte in das WLAN packen wollt,

01:57:35.780 --> 01:57:38.740
aber den Geräten unterschiedliche Passwörter geben wollt,

01:57:38.980 --> 01:57:41.200
dann geht das einfach standardmäßig nicht.

01:57:42.300 --> 01:57:49.120
Es sei denn, der Access Point, beziehungsweise das System, was ihr verwendet für WLAN daheim,

01:57:49.540 --> 01:57:51.320
unterstützt sowas wie DPSK.

01:57:51.940 --> 01:57:54.220
Das heißt, bei manchen Herstellern ein bisschen unterschiedlich,

01:57:54.220 --> 01:57:57.220
bei manchen heißt es DPSK, bei manchen heißt es MPSK,

01:57:58.380 --> 01:58:00.040
ich weiß gar nicht, wie es bei Unify heißt.

01:58:01.080 --> 01:58:02.340
Mittlerweile können die das ja auch.

01:58:02.860 --> 01:58:05.980
Aber wie gesagt, die konnten das sieben, acht Jahre lang nicht.

01:58:07.260 --> 01:58:08.600
Hier, guck mal, hier gibt es Leute,

01:58:08.980 --> 01:58:14.020
das versucht selbst einzubauen in die Access Points vor vier plus Jahren

01:58:14.020 --> 01:58:16.120
und haben es nur semi-gut hingekriegt.

01:58:17.800 --> 01:58:20.120
Und das ist kacke, dass das nicht funktioniert hat.

01:58:20.620 --> 01:58:21.820
Und wofür ist das praktisch?

01:58:21.960 --> 01:58:24.140
Jetzt fragen sich ja sicherlich einige so nach dem Motto,

01:58:24.140 --> 01:58:28.820
warum will man mehrere Passwörter für das gleiche WLAN haben?

01:58:29.340 --> 01:58:31.440
Also ich glaube, das beste Beispiel dafür ist,

01:58:31.640 --> 01:58:35.060
wenn man viele IoT-WLAN-Geräte hat.

01:58:35.540 --> 01:58:37.180
Ihr habt zum Beispiel eine Klühbirne,

01:58:37.180 --> 01:58:41.260
ihr habt im Keller irgendwie was, was den Strom misst.

01:58:41.340 --> 01:58:42.920
Ihr habt relativ viele IoT-Geräte.

01:58:43.800 --> 01:58:45.920
Und jetzt stellt euch mal vor,

01:58:49.780 --> 01:58:52.240
die Klühbirne an der Decke, die ihr im WLAN hängen habt

01:58:52.240 --> 01:58:56.900
und darüber RGB-Steuerung macht, die geht kaputt.

01:58:57.900 --> 01:59:01.180
So, jetzt nehmt ihr die Klühbirne und schmeißt die in den Müll.

01:59:02.360 --> 01:59:04.080
Die Klühbirne ist kaputt.

01:59:04.920 --> 01:59:09.280
Das heißt aber nicht, dass der Microcontroller in der Klühbirne

01:59:09.280 --> 01:59:16.940
bzw. der Speicher in der Klühbirne nicht mehr euer WLAN-Passwort enthält.

01:59:18.000 --> 01:59:21.480
Also jemand, der es drauf anlegt, könnte jetzt an euren Mülleimer gehen,

01:59:22.180 --> 01:59:25.560
die Klühbirne rausholen, den Microcontroller rauslöten

01:59:25.560 --> 01:59:27.820
und das WLAN-Passwort auslesen.

01:59:29.180 --> 01:59:31.240
Das ist jetzt vielleicht ein bisschen konstruiert,

01:59:32.240 --> 01:59:33.900
aber ich glaube, ihr wisst, worauf ich raus will.

01:59:35.300 --> 01:59:38.820
Und sobald du mehrere WLAN-Passwörter vergeben kannst,

01:59:39.280 --> 01:59:42.580
für unterschiedliche Geräte, hast du das Problem nicht mehr.

01:59:43.220 --> 01:59:45.180
Sobald du die Klühbirne wegschmeißt,

01:59:45.840 --> 01:59:49.320
löschst du einfach dieses Gerät aus deiner WLAN-Config

01:59:49.320 --> 01:59:55.140
und selbst wenn jemand dann das WLAN-Passwort aus eurer Klühbirne im Mülleimer auslässt,

01:59:55.440 --> 01:59:57.360
kann er sich damit nicht mehr einloggen bei euch im WLAN.

01:59:58.420 --> 02:00:01.080
Das ist, finde ich, eines der sinnigsten Features,

02:00:01.280 --> 02:00:04.740
die sie sich in den letzten Jahren für WLAN-Geräte ausgedacht haben.

02:00:04.820 --> 02:00:06.620
Und UniFi hat ewig gebraucht.

02:00:06.620 --> 02:00:09.260
Also bis zum Schluss, wo ich mein UniFi-Zeug rauskriegte,

02:00:09.280 --> 02:00:11.220
hatten die das nicht.

02:00:11.560 --> 02:00:14.980
Mittlerweile können sie es wohl seit einem Jahr oder seit einem halben Jahr oder sowas.

02:00:15.700 --> 02:00:17.980
Und das hat mich übelst abgefuckt bei UniFi,

02:00:18.760 --> 02:00:19.540
dass sie das nicht haben.

02:00:19.640 --> 02:00:23.560
Was eines der Gründe mit war, warum ich UniFi rausgeschmissen habe.

02:00:25.580 --> 02:00:25.740
So.

02:00:26.740 --> 02:00:28.200
Ich skippe mal ein bisschen drüber.

02:00:28.300 --> 02:00:30.760
Wo zieht er denn jetzt eigentlich in seine Co-Location endlich um?

02:00:30.760 --> 02:00:33.540
Und das ist, was zwischen den beiden Seiten passiert.

02:00:33.820 --> 02:00:36.760
Zuhause, natürlich, bin ich, und weg, bin die Co-Location.

02:00:50.210 --> 02:00:52.350
Also wenn ich mir die Logos davon so ankomme,

02:00:52.350 --> 02:00:57.750
gucke, fällt mir genau jetzt, fallen mir jetzt genau drei Sachen auf,

02:00:58.250 --> 02:01:02.350
die man benutzen könnte, die nicht einfach nur für Infrastrukturzwecke da sind.

02:01:02.470 --> 02:01:06.970
Und zwar GitLab, Hugo für irgendwelche Webseiten,

02:01:07.070 --> 02:01:09.410
und das ist auch ein Static Site Generator, glaube ich.

02:01:10.650 --> 02:01:11.110
So, fertig.

02:01:11.810 --> 02:01:12.710
Das hier kenne ich nicht.

02:01:13.670 --> 02:01:16.250
Der Rest ist Management fürs Management.

02:01:25.660 --> 02:01:28.940
Pyhole, ja, das ist, okay, vielleicht noch das, ja.

02:01:30.750 --> 02:01:32.270
Der Böse muss doch erstmal wissen,

02:01:32.330 --> 02:01:34.270
wo dein WLAN ist, der hat ja nur die SSID,

02:01:34.450 --> 02:01:35.290
und das ist richtig.

02:01:35.690 --> 02:01:38.130
Aber in der Regel dürfte das WLAN auch dort sein,

02:01:38.210 --> 02:01:39.730
wo die Glühbirne in der Mülltonne liegt.

02:01:40.130 --> 02:01:41.770
Es sei denn, er geht auf die Müllkippe, ja.

02:01:42.130 --> 02:01:43.630
Das stimmt schon, wie gesagt, ich habe ja gesagt,

02:01:43.890 --> 02:01:45.910
das ist vielleicht, das ist ein bisschen konstruiert, das Beispiel,

02:01:46.010 --> 02:01:47.990
aber man sieht, worauf es rausläuft.

02:01:49.770 --> 02:01:51.550
Und ich möchte, ehrlich gesagt, nicht,

02:01:51.550 --> 02:01:56.530
dass mein WLAN-Passwort quasi im Klartext im Mülleimer liegt.

02:02:12.750 --> 02:02:14.450
Das ist einer von den Neuen, ja.

02:02:17.930 --> 02:02:20.810
Ist das ein CRS oder ein CS?

02:02:20.830 --> 02:02:22.830
CRSS-Switch.

02:02:26.240 --> 02:02:28.240
CRSS oder CSS?

02:02:31.150 --> 02:02:33.990
CRS, ja, dann hast du vollwertiges Router-OS drauf

02:02:34.070 --> 02:02:36.070
und wahrscheinlich auch gar keine so schlechte CPU.

02:02:36.550 --> 02:02:38.550
Dann kannst du da drauf auch, ähm,

02:02:38.670 --> 02:02:40.670
also dann ist das quasi eher ein Router als ein Switch.

02:02:44.990 --> 02:02:46.550
Ich habe es ja schon ein paar Mal gesagt

02:02:46.630 --> 02:02:48.630
und mich dabei unbeliebt gemacht,

02:02:48.710 --> 02:02:50.710
es gibt keine Layer-3-Switches.

02:02:57.260 --> 02:02:59.260
Kannst du ja machen.

02:02:59.620 --> 02:03:02.760
Moin.

02:03:02.840 --> 02:03:04.840
So, gucken wir das Video weiter.

02:03:14.820 --> 02:03:16.420
Ich dachte, man sieht hier ein bisschen was

02:03:16.420 --> 02:03:18.420
vom Umzug, aber sieht man gar nicht, oder?

02:03:18.500 --> 02:03:22.500
Dann gucken wir uns das jetzt auch nicht weiter an.

02:03:22.580 --> 02:03:30.440
Ich dachte, man sieht ein bisschen was von...

02:03:30.520 --> 02:03:34.020
Ja, ne, dann ist ja langweilig.

02:03:34.100 --> 02:03:36.100
Wow, wow, ja, ich nicht.

02:03:36.180 --> 02:03:50.690
Ja, das habe ich auch gefragt,

02:03:50.770 --> 02:03:52.770
warum man so viele Reverse-Boxes hat.

02:03:52.850 --> 02:03:59.040
Zeigt mal her.

02:03:59.120 --> 02:04:03.120
Okay, und übrigens wisst ihr, was ich auch an MikroTik mag?

02:04:03.200 --> 02:04:08.200
Die haben eine halbwegs konsistente Benahmung von ihren Produkten.

02:04:08.280 --> 02:04:10.280
CRS bedeutet,

02:04:10.280 --> 02:04:15.080
Cloud-Router-Switch, im Prinzip das Wichtige davon, ist das R.

02:04:15.160 --> 02:04:17.160
Das bedeutet, das ist ein Router.

02:04:17.240 --> 02:04:20.240
Es ist ein Router mit vielen Ports, okay?

02:04:22.440 --> 02:04:28.920
Der allerdings von der Hardware eher darauf ausgelegt ist,

02:04:29.000 --> 02:04:35.240
dass der beispielsweise hohe Bandbreite switchen kann

02:04:35.320 --> 02:04:37.320
zwischen den Ports in Hardware.

02:04:37.400 --> 02:04:40.200
Aber es ist ein Router, also das R ist das Wichtige.

02:04:40.240 --> 02:04:42.240
Da ist auch Router-OS drauf.

02:04:42.320 --> 02:04:44.320
So, 8G bedeutet...

02:04:44.400 --> 02:04:50.420
Normalerweise früher bedeutet das 8 Gigabit-Ports.

02:04:50.500 --> 02:04:52.500
Warum die Cloud... Verstehe ich auch nicht.

02:04:52.580 --> 02:04:54.580
Gibt keinen Sinn.

02:04:54.660 --> 02:04:56.660
Du hast 8 Gigabit-Ports.

02:04:56.740 --> 02:05:00.740
Mittlerweile lese ich hier raus, es sind 2,5 Gigabit-Ports.

02:05:00.820 --> 02:05:07.320
Und es hat 2 SFP-Plus-Ports, also 10 Gig.

02:05:07.400 --> 02:05:09.400
Gucken wir mal, ob ich recht habe.

02:05:09.480 --> 02:05:12.720
Das ist auch eine Sache, die finde ich bei MikroTik ganz sinnig,

02:05:12.720 --> 02:05:20.470
dass die Teile sinnvoll benannt sind, ja?

02:05:20.550 --> 02:05:29.950
Ich habe hier auch noch einen stehen, und zwar einen CRS-600...

02:05:30.030 --> 02:05:33.270
Nee, ich habe hier einen CSS-610 stehen.

02:05:33.350 --> 02:05:43.080
Das ist noch 8 Gig und 2 SFP-Plus-Ports.

02:05:43.160 --> 02:05:44.160
Ja.

02:05:44.240 --> 02:05:53.890
Und man sieht, wir haben 2,5 Gig-Ports und 2 SFP-Plus-Ports.

02:05:54.050 --> 02:05:59.840
Und vermutlich ist das Ding preis- leistungsmäßig auch ganz gut, ne?

02:05:59.920 --> 02:06:01.920
Ja.

02:06:02.000 --> 02:06:04.000
Kannst du dich nicht dafür beschweren.

02:06:04.080 --> 02:06:07.460
Das geht sicherlich noch günstiger,

02:06:07.540 --> 02:06:10.540
wenn es die Teile dann auch mal ordentlich lieferbar gibt.

02:06:10.620 --> 02:06:12.620
Das ist aber okay.

02:06:12.700 --> 02:06:16.700
Unter 200 Euro ein 8-Port 2,5 und ein 2-Port 10 Gig.

02:06:16.780 --> 02:06:18.780
Was ist denn das? USB?

02:06:18.860 --> 02:06:23.070
Ich meine, man kann da drüber...

02:06:23.150 --> 02:06:25.150
Das Ding hat einen Samba-Server.

02:06:25.230 --> 02:06:27.990
Ich weiß, man kann auf den USB-Stick Dateien übertragen,

02:06:27.990 --> 02:06:29.990
aber dafür ist es ja nicht wirklich gedacht.

02:06:30.070 --> 02:06:32.070
Was macht man damit?

02:06:32.150 --> 02:06:34.150
Firmware-Update?

02:06:34.230 --> 02:06:49.250
Weil man das hochladen kann normalerweise.

02:06:49.330 --> 02:06:53.330
Die MikroTik-Dinger sind preis- leistungsmäßig immer super.

02:06:53.410 --> 02:06:59.220
Kannst du dich nicht beschweren.

02:06:59.300 --> 02:07:01.300
Daumen-MikroTik-Access-Points.

02:07:01.380 --> 02:07:05.400
Ja...

02:07:05.480 --> 02:07:07.480
Ich mag die...

02:07:07.560 --> 02:07:09.560
Ich mag die nicht so.

02:07:09.640 --> 02:07:12.640
Ich mag MikroTik-Switches, aber die Access-Points...

02:07:12.720 --> 02:07:15.320
Ich hatte lange keinen in den Händen mehr, muss ich sagen.

02:07:15.320 --> 02:07:19.270
Vielleicht sind die mittlerweile besser.

02:07:19.350 --> 02:07:21.350
Ich bin da kein großer Fan von.

02:07:21.430 --> 02:07:23.430
Aber sie sind günstig, auf jeden Fall.

02:07:23.510 --> 02:07:26.950
Wir können ja mal kurz gucken...

02:07:27.030 --> 02:07:31.030
Wo finde ich hier überhaupt die Access-Points, Leute?

02:07:31.110 --> 02:07:33.110
Die reinen Access-Points.

02:07:33.190 --> 02:07:35.190
IoT-Products? Nee, oder?

02:07:35.270 --> 02:07:40.050
Also, hier... LTE? Nee.

02:07:40.130 --> 02:07:42.130
Wo sind denn hier überhaupt die Access-Points?

02:07:42.210 --> 02:07:44.210
Seht ihr das?

02:07:44.290 --> 02:07:46.290
Hier, Wireless-Systems.

02:07:46.370 --> 02:07:48.370
Hier, Wireless for Home and Office.

02:07:48.450 --> 02:07:50.450
Das sind die ganz alten Dinger.

02:07:50.450 --> 02:07:51.450
Ja.

02:07:51.530 --> 02:07:53.530
Das sind auch die ganz alten Dinger.

02:07:53.610 --> 02:07:55.610
Die willst du eigentlich nicht mehr haben.

02:07:55.690 --> 02:07:57.690
Hier habe ich welche von.

02:07:57.770 --> 02:07:59.770
Schmoll Access-Point, ihr erinnert euch vielleicht noch.

02:07:59.850 --> 02:08:06.940
Da habe ich hier welche von liegen.

02:08:07.020 --> 02:08:09.020
Der hier ist übrigens mega-nice.

02:08:09.100 --> 02:08:18.100
Wenn man beispielsweise nicht WLAN-fähige Geräte WLAN-fähig machen möchte.

02:08:18.180 --> 02:08:27.170
Also, zum Beispiel, ihr wollt bei euch am Hoftor irgendwas betreiben.

02:08:27.250 --> 02:08:29.050
Irgendwas betreiben.

02:08:29.130 --> 02:08:32.130
Was man per PoE versorgen kann.

02:08:32.210 --> 02:08:35.970
Aber ihr habt keine Möglichkeit, dort Netzwerk hinzulegen.

02:08:36.050 --> 02:08:40.210
Also, ich mache mal ein konkretes Beispiel von meinem Hoftor.

02:08:40.290 --> 02:08:42.290
Machen wir jetzt einfach mal.

02:08:42.370 --> 02:08:46.850
Mein Hoftor hat eine Tür-Gegensprechanlage dort installiert.

02:08:46.930 --> 02:08:50.210
Und hat ein paar Kabel durch die Wand liegen.

02:08:50.290 --> 02:08:52.290
Nur für die Tür-Gegensprechanlage.

02:08:52.370 --> 02:08:56.090
Davon sind zwei Adern unbenutzt.

02:08:56.170 --> 02:09:00.750
Und ich wollte da eine Kamera hinbauen.

02:09:00.830 --> 02:09:04.830
Die geht allerdings nur über PoE zu versorgen.

02:09:07.240 --> 02:09:11.240
Und selbst möchte ich halt per WLAN auf die Kamera zugreifen.

02:09:11.320 --> 02:09:13.320
Weil ich kriege da kein Netzwerkkabel durch.

02:09:13.400 --> 02:09:15.400
Also, was habe ich gemacht?

02:09:15.480 --> 02:09:19.480
Ich habe die zwei Adernpaare, die zwei Adern, die durch die Wand noch gingen.

02:09:19.560 --> 02:09:26.080
Habe ich auf der anderen Seite ein 12-Volt-Netzteil drangehängt.

02:09:26.160 --> 02:09:31.240
Habe das an den Access-Point angeschlossen.

02:09:31.320 --> 02:09:32.280
Ich hoffe, das ist der nicht.

02:09:32.320 --> 02:09:38.530
Nicht, dass ich euch jetzt Mist erzähle.

02:09:38.610 --> 02:09:43.100
Ja, habe das an den Access-Point angeschlossen.

02:09:43.180 --> 02:09:45.180
Es könnten übrigens auch 48 Volt gewesen sein.

02:09:45.260 --> 02:09:46.260
Ich weiß es nicht mehr genau.

02:09:46.340 --> 02:09:50.620
Das, was die, das, was die, ich glaube, 12, 24, nein, 24.

02:09:50.700 --> 02:09:52.940
24, glaube ich, das normale PoE.

02:09:53.020 --> 02:09:56.170
Oder 48.

02:09:56.250 --> 02:09:58.490
Ich glaube, die Kamera lief mit 24, whatever.

02:09:58.570 --> 02:10:00.090
Hast du das Netzteil drangehängt?

02:10:00.170 --> 02:10:02.410
So, und jetzt konnte man folgendes machen.

02:10:02.490 --> 02:10:04.250
Konnte ein Access-Point powern, hier drüber.

02:10:04.330 --> 02:10:07.130
Also, hier kommen zwei Adern aus der Wand.

02:10:07.210 --> 02:10:09.890
Auf der anderen Seite vom Keller hängt das Netzteil dran.

02:10:09.970 --> 02:10:11.410
Gehen hier dran.

02:10:11.490 --> 02:10:14.450
Die Kamera selbst wird per PoE versorgt.

02:10:14.530 --> 02:10:17.490
Ihr Netzwerkkabel an die Kamera.

02:10:17.570 --> 02:10:19.530
Die Kamera wird per PoE versorgt.

02:10:19.610 --> 02:10:23.370
Und der Access-Point bringt sie dann quasi ins Netz.

02:10:23.450 --> 02:10:27.650
Das ist ein echt nice Gerät für solche Nischenanwendungen.

02:10:27.730 --> 02:10:31.330
Wo du zum Beispiel an irgendwelchen bisschen entfernteren Stellen

02:10:31.410 --> 02:10:34.930
Kameras anbringen willst, die selbst kein WLAN haben.

02:10:35.010 --> 02:10:39.050
Was ja durchaus sinnvoll sein kann, wenn es besonders klein sein muss.

02:10:39.090 --> 02:10:42.810
Beispielsweise an der Wand, an der Tür-Gegensprechanlage.

02:10:42.890 --> 02:10:44.890
Da wollte ich jetzt nicht so eine fette WLAN-Kamera hinlegen.

02:10:44.970 --> 02:10:48.570
Aber was ganz Kleines, Dezentes an der Tür-Gegensprechanlage.

02:10:48.650 --> 02:10:52.010
Die restlichen Kabel verschwinden auch dahinter.

02:10:52.090 --> 02:10:55.930
Da ist so eine Front, ein bisschen Platz dahinter.

02:10:56.010 --> 02:10:57.770
Dafür sind diese Geräte echt praktisch.

02:10:57.850 --> 02:10:59.170
Ansonsten würde ich die für nichts verwenden.

02:10:59.250 --> 02:11:03.970
Aber für solche Nischenanwendungen ist der richtig, richtig gut.

02:11:04.050 --> 02:11:07.800
Der hängt bei mir übrigens da immer noch rum.

02:11:07.880 --> 02:11:09.560
Hinter der Tür-Gegensprechanlage.

02:11:09.640 --> 02:11:10.520
Und...

02:11:10.680 --> 02:11:12.280
...macht er sein Ding.

02:11:12.360 --> 02:11:29.420
So, und das ist auch alt, das Ding. Das taugt nix.

02:11:29.500 --> 02:11:31.940
Auch alles alt und taugt nix.

02:11:33.780 --> 02:11:34.740
Das sind...

02:11:34.820 --> 02:11:37.860
Das ist vielleicht ein bisschen neuer.

02:11:37.940 --> 02:11:41.570
Haben die keine AX?

02:11:41.650 --> 02:11:43.250
Okay, hier. AX.

02:11:43.330 --> 02:11:50.590
Die neuen kenne ich nicht.

02:11:50.670 --> 02:12:03.710
Da weiß ich nicht, wie gut die Mikrotik-Dinger sind.

02:12:03.790 --> 02:12:06.710
Da weiß ich nicht, wie gut die neuen Dinger sind.

02:12:06.790 --> 02:12:18.350
Is the blazing fast wire...

02:12:18.430 --> 02:12:19.230
Blazing...

02:12:19.230 --> 02:12:22.190
Is that written in rust?

02:12:22.270 --> 02:12:27.110
Was unterstützt denn der?

02:12:27.190 --> 02:12:28.230
Ja.

02:12:28.310 --> 02:12:32.190
Vielleicht mal Zeit, just for fun, so ein Ding wieder auszuprobieren.

02:12:32.270 --> 02:12:33.630
Aber eigentlich unsinnig.

02:12:33.710 --> 02:12:35.150
Weil ich habe ja meine zwei Access Points.

02:12:35.230 --> 02:12:36.470
Und mit denen bin ich sehr zufrieden jetzt.

02:12:36.550 --> 02:12:40.590
Aber meine sind noch AC, nicht AX-Geräte.

02:12:40.670 --> 02:12:46.810
Reicht aber auch dicke.

02:12:46.890 --> 02:12:47.370
What's that?

02:12:47.450 --> 02:12:49.770
Most popular pro-climbing languages.

02:12:49.850 --> 02:12:51.490
Okay, das müssen wir uns jetzt mal kurz anschauen.

02:12:51.570 --> 02:12:53.770
Ich mag diese Statistik-Dinger.

02:12:53.850 --> 02:12:55.450
Okay, ich predikte mal...

02:12:55.450 --> 02:12:58.010
Den Ausgang des Ganzen.

02:12:58.090 --> 02:13:01.290
JavaScript, ihr könnt ja mal mitraten.

02:13:01.370 --> 02:13:03.290
Ich sage JavaScript auf der...

02:13:03.370 --> 02:13:06.090
Die Frage ist, was most popular ist.

02:13:06.170 --> 02:13:14.570
Meist benutzt, meist Interesse-Projekte auf GitHub.

02:13:14.650 --> 02:13:19.370
Am meisten verkaufte Programmierbücher, weiß man ja nicht genau.

02:13:19.450 --> 02:13:25.210
Also von der Verbreitung und dem aktuellen Impact.

02:13:25.210 --> 02:13:28.650
So, wie das benutzt wird, würde ich sagen JavaScript erstes.

02:13:28.730 --> 02:13:32.250
JavaScript auf dem ersten Platz, eindeutig.

02:13:32.330 --> 02:13:33.530
JavaScript ist überall.

02:13:33.610 --> 02:13:36.890
Darf nicht vergessen, SpaceX fliegt mit JavaScript ins Weltall.

02:13:36.970 --> 02:13:39.690
Und Elektron, MonkaS.

02:13:39.770 --> 02:13:46.170
JavaScript gefolgt von Python, gefolgt von Java.

02:13:46.250 --> 02:13:51.690
Also ich predikte...

02:13:51.770 --> 02:13:55.610
Warte mal hier.

02:13:55.690 --> 02:13:57.690
Ich predikte JavaScript, Python, JavaScript.

02:13:57.690 --> 02:14:02.280
Python, Java.

02:14:02.360 --> 02:14:04.840
Go.

02:14:04.920 --> 02:14:07.720
Da bin ich mir nicht so sicher.

02:14:07.800 --> 02:14:10.520
PHP.

02:14:10.600 --> 02:14:13.880
Der Scheiß ist immer noch verbreitet as fuck.

02:14:13.960 --> 02:14:22.880
Vielleicht .NET.

02:14:22.960 --> 02:14:31.260
Ganz ehrlich, C ist da bestimmt auch noch irgendwie dazwischen.

02:14:31.340 --> 02:14:35.660
Quelle.

02:14:35.740 --> 02:14:37.900
Rust ist eventuell auch dabei.

02:14:37.980 --> 02:14:40.860
Aber Rust kommt relativ weit unten.

02:14:40.860 --> 02:14:45.500
Irgendwo wird hier C auch noch rumspuken.

02:14:45.580 --> 02:14:51.100
Vielleicht, ich hoffe, C++ ist irgendwo hier dann.

02:14:51.180 --> 02:14:53.180
Gucken wir mal.

02:14:53.260 --> 02:14:57.500
Also das ist so meine Prediction für die Top 1, 2, 3.

02:14:57.580 --> 02:15:00.220
Top 8. Gucken wir mal.

02:15:00.300 --> 02:15:08.060
Ich mein, 1965, da ist klar, dass dann sowas wie Fortran, Kobol, Ada kommt dann später.

02:15:08.140 --> 02:15:10.140
Das ist so Zeug da vorne mit dabei.

02:15:10.140 --> 02:15:12.140
Das ist logisch, ja.

02:15:12.220 --> 02:15:14.220
Ja, C, Pascal.

02:15:14.300 --> 02:15:16.300
Das ist noch pre-C.

02:15:16.380 --> 02:15:23.790
Algol, ja.

02:15:23.870 --> 02:15:32.730
Ich mein, das ist ja schon wie Antike hier.

02:15:32.810 --> 02:15:39.000
C dauert noch kurz, aber dauert nicht mehr allzu lange.

02:15:39.080 --> 02:15:41.080
Ich glaub, C kommt 1900...

02:15:41.160 --> 02:15:43.160
Boah, frag mich nicht.

02:15:43.240 --> 02:15:47.240
75 oder irgendwie gab's die erste C-Version.

02:15:47.320 --> 02:15:49.320
Das dauert noch kurz.

02:15:49.400 --> 02:15:54.840
Ja.

02:15:54.840 --> 02:16:00.970
Ich wusste übrigens auch gar nicht, dass Pascal vor C war.

02:16:01.050 --> 02:16:13.040
Die Basics werden hier gemacht gerade.

02:16:13.120 --> 02:16:15.120
Dass Lisp so beliebt ist?

02:16:16.560 --> 02:16:19.360
Bestimmt... Gab's damals schon Emacs?

02:16:19.440 --> 02:16:20.880
Nee, 73 noch nicht.

02:16:20.960 --> 02:16:22.000
Warte, Moment.

02:16:22.080 --> 02:16:23.760
Emacs Release.

02:16:23.840 --> 02:16:27.900
Wann gab's das allererste Emacs?

02:16:27.980 --> 02:16:31.200
85, okay.

02:16:31.280 --> 02:16:33.680
So, jetzt könnte langsam C.

02:16:33.760 --> 02:16:35.760
So 75 oder so ist, glaub ich...

02:16:37.760 --> 02:16:38.640
Irgendwie so in dem Dreh.

02:16:38.720 --> 02:16:39.840
75, glaub ich.

02:16:39.840 --> 02:16:41.840
Irgendwie ging's los mit C.

02:16:41.920 --> 02:16:43.840
Ja, ey, Tschätke!

02:16:43.920 --> 02:16:45.920
Hä?

02:16:46.000 --> 02:16:58.400
Nicht schlecht, oder?

02:16:58.480 --> 02:17:00.480
So, C wird jetzt erst mal den ganzen anderen Schrott überholen.

02:17:00.560 --> 02:17:02.560
Pascal geht auch noch gut ab.

02:17:02.640 --> 02:17:04.640
Pascal war eine ganze Zeit lang super beliebt.

02:17:04.720 --> 02:17:08.720
Ganz viele Leute, die früher mal Mathelehrer waren

02:17:08.800 --> 02:17:12.800
und dann in der Schule umgesattelt haben auf...

02:17:12.880 --> 02:17:15.280
Ja, wir brauchen ja auch langsam mal einen Informatikkurs,

02:17:15.360 --> 02:17:17.360
waren ja alte Mathelehrer.

02:17:17.440 --> 02:17:19.280
Und das Einzige, was die konnten, war Pascal programmieren.

02:17:19.280 --> 02:17:23.040
Das war bei Mathematikern super beliebt damals, Pascal.

02:17:23.120 --> 02:17:26.640
Ich bin mir nicht ganz sicher.

02:17:26.720 --> 02:17:28.720
Ich bring's manchmal ein bisschen durcheinander.

02:17:28.800 --> 02:17:32.480
War es nicht sogar so, dass der C-Sharp-Erfinder bei Pascal...

02:17:32.560 --> 02:17:34.560
Nee, der war bei Delphi mit dabei, oder?

02:17:34.640 --> 02:17:41.470
Genau, bei einem dieser Sachen war er mit am Start.

02:17:41.550 --> 02:17:49.630
Ich weiß es nicht, mal kurz hier anders...

02:17:49.710 --> 02:17:52.350
Wie schreibt man den Typ?

02:17:52.430 --> 02:17:54.430
Jelsberg oder irgendwie so, ja?

02:17:54.510 --> 02:17:55.550
Der hat...

02:17:55.550 --> 02:17:57.550
War das Pascal, oder war das...

02:17:57.630 --> 02:18:02.430
Ja, Turbo Pascal, genau.

02:18:02.510 --> 02:18:05.470
Ja, das ist der C-Sharp-Erfinder.

02:18:05.550 --> 02:18:07.550
Der war da auch mit am Start, ja.

02:18:07.630 --> 02:18:10.110
Der ist ja auch schon ein alter Sack mittlerweile.

02:18:10.190 --> 02:18:17.320
Ich auch, aber glücklicherweise nicht ganz so alt.

02:18:17.400 --> 02:18:22.700
So, C wird jetzt erst mal diesen ganzen Schrott da oben überholen

02:18:22.780 --> 02:18:24.780
von Fortran und Gedöns, ja.

02:18:24.860 --> 02:18:26.860
Ada!

02:18:26.940 --> 02:18:28.940
Oh, nee! Fucking C...

02:18:29.020 --> 02:18:34.060
Leute!

02:18:34.140 --> 02:18:36.060
So, in dem Dreh ist die Welt ein Stückchen...

02:18:36.060 --> 02:18:56.840
ein Stückchen schlechter geworden.

02:18:56.920 --> 02:19:03.000
Wenn mal Zeitreisen erfunden werden und man der Welt einen Gefallen tun will,

02:19:03.080 --> 02:19:07.640
dann sollte man zurückreisen zu 1980 und mit...

02:19:07.720 --> 02:19:10.680
Ich weiß nicht, wie der heißt, Bjarne oder so,

02:19:10.760 --> 02:19:14.440
mal jemand reden, wie man die Sprache ordentlich aufbauen könnte.

02:19:14.520 --> 02:19:17.320
Und dann haben wir vielleicht jetzt ein gutes C++.

02:19:28.890 --> 02:19:36.300
C geht steil.

02:19:36.380 --> 02:19:39.820
Ada, mir war nie klar, dass das so beliebt war.

02:19:39.900 --> 02:19:41.580
Als ich angefangen habe,

02:19:41.580 --> 02:19:43.580
mich dafür zu interessieren...

02:19:43.660 --> 02:19:45.660
Das dauert noch eine ganze Weile, ja.

02:19:45.740 --> 02:19:47.740
Ich bin hier ein Jahr alt, gerade.

02:19:47.820 --> 02:19:53.820
Ja, ein bisschen über ein Jahr bin ich gerade alt.

02:19:53.900 --> 02:19:58.220
Da war Ada null Bedeutung, hatte das, wo ich angefangen habe.

02:19:58.300 --> 02:20:12.810
Guck dir mal...

02:20:12.890 --> 02:20:15.370
Wisst ihr, was mir auffällt, was sehr merkwürdig ist?

02:20:15.450 --> 02:20:17.450
Wir sind über 100%.

02:20:17.530 --> 02:20:20.730
Gut, ich meine, das kann ja durchaus sein.

02:20:20.810 --> 02:20:25.950
Man kann ja parallel mehrere Sprachen verwenden.

02:20:25.950 --> 02:20:34.140
Vielleicht sind das auch keine Prozent, sondern...

02:20:34.220 --> 02:20:36.220
Was auch immer.

02:20:36.300 --> 02:20:38.300
Das ist irgendein Score, ja.

02:20:38.380 --> 02:20:40.380
Wie war das so?

02:20:40.460 --> 02:20:48.090
Haben wir nicht schon in der Schule erklärt bekommen,

02:20:48.170 --> 02:20:52.170
dass so Graphen ohne Einheiten nicht gewertet werden und so?

02:20:52.250 --> 02:20:55.690
Dass das nix taugt, wenn da keine Einheiten dranstehen?

02:20:55.770 --> 02:20:57.770
C, ja. Beste.

02:20:57.850 --> 02:21:14.730
Ah.

02:21:14.810 --> 02:21:16.810
Muss das sein?

02:21:16.890 --> 02:21:18.890
Muss ich C++ verwenden?

02:21:18.970 --> 02:21:20.570
Ja.

02:21:20.570 --> 02:21:24.250
C++, der Ernst, haben wir auf dem zweiten Platz jetzt gesehen, ja.

02:21:24.330 --> 02:21:26.330
Das schmerzt ja...

02:21:26.410 --> 02:21:28.410
Dann ja doch lieber Ada.

02:21:28.490 --> 02:21:37.310
So langsam aber sicher könnte Java auch mal an den Start kommen, oder?

02:21:37.390 --> 02:21:39.390
Das dauert nicht mehr lang.

02:21:39.470 --> 02:21:52.830
Oh, Perl.

02:21:52.910 --> 02:21:54.910
Perl war mal eine Zeit lang super beliebt.

02:21:54.990 --> 02:21:58.750
Ich habe es nie so ganz verstanden.

02:21:58.830 --> 02:22:00.830
Oh, jawoll.

02:22:00.910 --> 02:22:02.910
Wir sind verloren.

02:22:02.990 --> 02:22:04.990
JavaScript ist am Start.

02:22:05.070 --> 02:22:07.070
Java ist auch am Start.

02:22:07.150 --> 02:22:08.190
Java.

02:22:08.190 --> 02:22:28.780
Ja, das kann man ja auch so viele Leute nennen.

02:22:28.860 --> 02:22:30.860
Java und JavaScript, das wundert mich nicht.

02:22:30.940 --> 02:22:36.940
JavaScript geht durch die Decke ab dann, wo es mit Internet und Browsern anfängt.

02:22:37.020 --> 02:22:39.020
Das ist jetzt so in dem Dreh.

02:22:39.100 --> 02:22:41.100
Also 1998 war ich schon online.

02:22:41.180 --> 02:22:43.180
Da war ich einer der Ersten bei uns im Ort.

02:22:43.260 --> 02:22:53.660
Und dementsprechend PHP, JavaScript und halt im Enterprise Business Sektor Java.

02:22:53.740 --> 02:22:55.740
PHP wird noch viel weiter abgehen jetzt.

02:22:55.820 --> 02:23:02.650
Ja, Java, JavaScript, zack.

02:23:02.730 --> 02:23:03.770
Ja.

02:23:04.010 --> 02:23:08.730
Warum guckt da jetzt so eine Eule um die Ecke?

02:23:08.810 --> 02:23:16.960
Also es wird uns, JavaScript wird uns auf jeden Fall hier in den Top 3 Sprachen bis zum Schluss erhalten bleiben.

02:23:17.040 --> 02:23:21.040
Java geht wieder ein Stückchen runter vermutlich.

02:23:21.120 --> 02:23:23.120
Oh, guck mal hier ist die Sharp, ploppt auch langsam auf.

02:23:23.200 --> 02:23:28.400
2002, das dürfte .NET 1 gewesen sein, 1.1 oder so in dem Dreh.

02:23:28.480 --> 02:23:41.420
Zwischenzeitlich müsste so 2000, ich predikte mal, 2006, 2007 rum und 2005, 6, 7, 8 wird Ruby auch mal kurz aufhören.

02:23:41.420 --> 02:23:45.420
Und dann wieder verschwinden.

02:23:45.500 --> 02:23:49.500
Mit Ruby, also Ruby on Rails war ja damals das Ding schlechthin.

02:23:49.580 --> 02:23:51.580
So 2007 rum, 2006 rum.

02:23:51.660 --> 02:23:58.540
Mal gucken, ob das stimmt, dass da mal kurz Ruby, Ruby hier so rein lurkt und wieder verschwindet.

02:23:58.620 --> 02:24:09.240
Ruby, da sind wir.

02:24:09.320 --> 02:24:26.970
Ja, das war die Ruby on Rails Zeit, wo ganz viele Leute sich als Rockstar Programmer bezeichneten.

02:24:27.050 --> 02:24:28.650
Ja.

02:24:28.650 --> 02:24:32.650
Wo ich bis heute nicht weiß, was das eigentlich sein soll.

02:24:32.730 --> 02:24:44.830
Aber Ruby hatte ganz viele Rockstar Programmer.

02:24:44.910 --> 02:24:48.910
Ja, also langsam aber sicher ist die Zeit von Ruby on Rails auch wieder vorbei.

02:24:48.990 --> 02:24:54.280
Das verschwindet jetzt gleich wieder.

02:24:54.360 --> 02:24:56.360
Ja, und tschüss.

02:24:56.440 --> 02:25:04.440
Ah, Mac und äh, ja, jetzt auf jeden Fall auch schon iOS 2010 kommt glaube ich das erste iPhone.

02:25:04.520 --> 02:25:08.160
Irgendwie so, gell.

02:25:08.240 --> 02:25:12.000
Vielleicht schon ein bisschen früher.

02:25:12.080 --> 02:25:13.360
Aber irgendwie so in dem Dreh.

02:25:13.520 --> 02:25:15.520
Ah, 2007, ja.

02:25:15.600 --> 02:25:18.880
Gut, das hat ein bisschen gebraucht mit App, App Store und allem.

02:25:18.960 --> 02:25:22.480
Jetzt ist auf jeden Fall Mac und iOS Verbreitung nimmt zu.

02:25:22.560 --> 02:25:25.600
Deswegen ist da jetzt auch Objective C mit dabei.

02:25:25.680 --> 02:25:29.920
Visual Basic verschwindet glücklicherweise wieder in der Versenkung, da wo es hingehört.

02:25:30.000 --> 02:25:42.800
Ist R und Matlab nicht das gleiche?

02:25:42.880 --> 02:25:48.040
Zwift, okay.

02:25:48.120 --> 02:25:53.260
Ruby ist wieder weg vom Fenster, klar.

02:25:53.340 --> 02:26:01.530
Ja, JavaScript, das ist klar.

02:26:01.530 --> 02:26:14.110
Ab hier ist das Internet Mainstream und die Leute haben auch festgestellt, dass man damit Geld machen kann und man Apps in JavaScript programmieren kann und allem.

02:26:14.190 --> 02:26:24.960
Ich mein, seriously, das Internet war vorher schon Mainstream, aber jetzt so richtig, wo dann auch die Oma online ist und so.

02:26:25.040 --> 02:26:33.720
Aber seriously, meine Prediction sieht gar nicht mal so falsch aus jetzt, oder?

02:26:33.800 --> 02:26:35.800
Wir haben noch zwei, drei Jahre Zeit.

02:26:35.880 --> 02:26:37.880
Das sieht schon, sieht schon nicht verkehrt aus.

02:26:37.960 --> 02:26:44.280
Kotlin, okay.

02:26:44.360 --> 02:26:51.900
Ja.

02:26:52.060 --> 02:26:56.910
Go.

02:26:56.990 --> 02:26:58.990
Oh, Go muss ich aber beeilen, wenn das soweit wird.

02:26:59.070 --> 02:27:03.850
Rust, na klar.

02:27:03.930 --> 02:27:05.930
Ach, TypeScript habe ich vergessen.

02:27:06.010 --> 02:27:08.010
Da habe ich ja gar nicht dran gedacht.

02:27:08.090 --> 02:27:12.410
Okay, jetzt gucken wir mal, wie akkurat meine Sache war.

02:27:12.490 --> 02:27:14.490
Okay, das ist Schwachsinn.

02:27:14.570 --> 02:27:16.570
JavaScript muss vor Python sein, egal.

02:27:16.650 --> 02:27:18.650
JavaScript, Python, Java.

02:27:18.730 --> 02:27:21.370
Also mit den Top 3 war ich schon mal ziemlich gut dabei.

02:27:21.450 --> 02:27:23.450
Go ist weiter unten.

02:27:23.530 --> 02:27:26.410
Aber ich gehe auch vom aktuellen Zeitpunkt aus, das ist Ende 2022.

02:27:26.490 --> 02:27:28.490
Soviel war mit dabei.

02:27:28.570 --> 02:27:30.570
PHP ist auch mit dabei.

02:27:30.650 --> 02:27:32.650
C ist auch mit dabei.

02:27:32.730 --> 02:27:34.730
C Sharp ist auch mit dabei.

02:27:34.810 --> 02:27:36.810
Und sogar Rust ist dabei.

02:27:36.890 --> 02:27:40.720
C++ ist leider höher, als ich gedacht habe.

02:27:40.800 --> 02:27:49.420
War ich doch gar nicht so verkehrt.

02:27:49.500 --> 02:27:51.500
Ja.

02:27:51.580 --> 02:27:53.580
Nice.

02:27:53.660 --> 02:27:55.660
Was haben wir denn hier noch zu bieten?

02:27:55.740 --> 02:27:57.740
How a leap day took down Microsoft.

02:27:57.820 --> 02:28:02.490
Das sind wieder irgendwelche uralten Sachen, wo darüber berichtet.

02:28:02.570 --> 02:28:04.570
It has been over 10 years.

02:28:04.650 --> 02:28:06.650
Ja.

02:28:07.450 --> 02:28:09.450
Aber das ist 11 Minuten, das können wir uns mal angucken.

02:28:09.530 --> 02:28:11.530
Die Videos sind immer ganz gut.

02:28:11.610 --> 02:28:13.610
On leap day, February 29th, 2012.

02:28:13.690 --> 02:28:15.690
By the way, leap day, ah ja, okay.

02:28:15.770 --> 02:28:17.770
Das ist quasi Februar.

02:28:17.850 --> 02:28:19.850
Also das, was bei uns...

02:28:19.930 --> 02:28:21.930
Nee, wie heißt das bei uns?

02:28:22.010 --> 02:28:24.010
Schalt... Schalttag?

02:28:24.090 --> 02:28:26.090
Nee, wie nennt man das eigentlich?

02:28:26.170 --> 02:28:31.020
Schaltjahr.

02:28:31.100 --> 02:28:37.800
Und wie heißt der Tag bei uns?

02:28:37.880 --> 02:28:41.640
Hat das irgendeinen speziellen Namen?

02:28:41.720 --> 02:28:43.720
On leap day, February 29th, 2012.

02:28:43.800 --> 02:28:45.800
Windows Azure.

02:28:45.800 --> 02:28:51.230
Ich weiß, dass es 29...

02:28:51.310 --> 02:28:53.310
Aber wir haben ja da einen extra Namen für.

02:28:53.390 --> 02:28:57.310
Übrigens, wusstet ihr, dass Schweden mal einen 30. Februar hatte?

02:28:57.390 --> 02:28:59.390
Die Story habe ich schon öfters erzählt,

02:28:59.470 --> 02:29:01.470
aber das habe ich mal in irgendeinem Konferenztalk gehört.

02:29:01.550 --> 02:29:03.550
Und zwar...

02:29:03.630 --> 02:29:07.630
Schweden hatte mal einen 30. Februar,

02:29:07.710 --> 02:29:11.710
weil Schweden vergessen hat, ihren Kalender umzustellen.

02:29:11.790 --> 02:29:15.790
Die Schweden wollten den Kalender umstellen.

02:29:15.870 --> 02:29:17.310
Und die wollten das nicht machen.

02:29:17.390 --> 02:29:20.570
Und die wollten das nicht machen.

02:29:20.570 --> 02:29:24.140
Und die wollten das nicht machen.

02:29:24.220 --> 02:29:26.220
Wie alle anderen Staaten drumherum.

02:29:26.300 --> 02:29:28.300
Quasi am Stichtag wird umgestellt.

02:29:28.380 --> 02:29:30.380
Sondern die haben das über einen Zeitraum von...

02:29:30.460 --> 02:29:32.460
Boah, keine Ahnung.

02:29:32.540 --> 02:29:34.540
Zehn Jahren oder so wollten die das umstellen.

02:29:34.620 --> 02:29:36.620
Von einem auf den anderen Kalender.

02:29:36.700 --> 02:29:38.700
Sodass quasi der neue Kalender vom alten...

02:29:38.780 --> 02:29:40.780
Dass der alte Kalender vom neuen quasi eingeholt wird.

02:29:40.860 --> 02:29:42.860
Und es dann so smooth übergeht in den neuen Kalender.

02:29:42.940 --> 02:29:44.940
Und es dann so smooth übergeht in den neuen Kalender.

02:29:45.020 --> 02:29:47.020
Und es dann so smooth übergeht in den neuen Kalender.

02:29:47.100 --> 02:29:49.100
Das Problem war nur,

02:29:49.180 --> 02:29:51.260
dass sie es vergessen haben umzustellen, weil sie Krieg geführt haben.

02:29:51.260 --> 02:29:53.260
dass sie es vergessen haben umzustellen, weil sie Krieg geführt haben.

02:29:53.340 --> 02:29:55.340
In dem Jahr.

02:29:55.420 --> 02:29:57.420
Und dann mussten sie den 30. Februar einführen,

02:29:57.500 --> 02:29:59.500
um das Ganze wieder...

02:29:59.580 --> 02:30:01.580
Dass es wieder funktioniert hat.

02:30:01.660 --> 02:30:03.660
Und dann haben sie umgestellt auf den neuen Kalender.

02:30:03.740 --> 02:30:05.740
Irgendwann, keine Ahnung, frag mich nicht, wann das war,

02:30:05.820 --> 02:30:07.820
1650 oder so,

02:30:07.900 --> 02:30:09.900
hatte Schweden mal den 30. Februar.

02:30:09.980 --> 02:30:11.980
Azir, also known as Azir, Azor, Azor, Azuray and Asus,

02:30:12.060 --> 02:30:14.060
Azir, also known as Azir, Azor, Azor, Azuray and Asus,

02:30:14.140 --> 02:30:16.140
faced a major outage when its VMs, GAs,

02:30:16.220 --> 02:30:18.220
faced a major outage when its VMs, GAs,

02:30:18.300 --> 02:30:20.540
failed to generate transfer certificates.

02:30:21.260 --> 02:30:23.260
Was?

02:30:23.340 --> 02:30:25.340
Das war zu viel für mich.

02:30:25.420 --> 02:30:27.420
... to report the servers as faulty to the FCs,

02:30:27.500 --> 02:30:29.500
... to report the servers as faulty to the FCs,

02:30:29.580 --> 02:30:31.580
which would trigger automatic service healing,

02:30:31.660 --> 02:30:33.660
which would inadvertently...

02:30:33.740 --> 02:30:35.740
Wenn du Smart Home richtig machen willst,

02:30:35.820 --> 02:30:37.820
dafür musst du nicht wirklich eine Programmiersprache lernen.

02:30:41.580 --> 02:30:43.580
Blockly geht auch, klar.

02:30:43.660 --> 02:30:45.660
Also ich persönlich mag Home Assistant am liebsten.

02:30:45.740 --> 02:30:47.740
Blockly klingt mir ein bisschen danach,

02:30:47.820 --> 02:30:49.820
als benutzt du I.O. Broker.

02:30:49.900 --> 02:30:54.040
Kann das sein?

02:30:54.120 --> 02:30:58.520
Oder was benutzt du dafür?

02:30:58.520 --> 02:31:00.520
Das ist nicht AI-generated.

02:31:00.600 --> 02:31:02.600
Der hört sich schon immer so an.

02:31:02.680 --> 02:31:04.680
Selbst vor AI-generated.

02:31:04.760 --> 02:31:06.760
... able to rewatch this section and think,

02:31:06.840 --> 02:31:08.840
huh, it all makes sense now.

02:31:08.920 --> 02:31:10.920
Perhaps I learned something on YouTube today,

02:31:11.000 --> 02:31:13.000
even if it was just a bunch of domain-specific terms

02:31:13.080 --> 02:31:15.080
I'll never see again for the rest of my life.

02:31:15.160 --> 02:31:17.160
So let's start with Azir,

02:31:17.240 --> 02:31:19.240
which is just Microsoft's cloud computing platform.

02:31:19.320 --> 02:31:21.320
So let's start with Azir,

02:31:21.400 --> 02:31:23.400
which is just Microsoft's cloud computing platform.

02:31:23.480 --> 02:31:25.480
So let's start with Azir,

02:31:25.560 --> 02:31:27.560
which is just Microsoft's cloud computing platform.

02:31:27.560 --> 02:31:29.560
Though you may be more familiar with its competitors,

02:31:29.640 --> 02:31:31.640
like Alibaba Cloud,

02:31:31.720 --> 02:31:33.720
Oracle Cloud, IBM Cloud,

02:31:33.800 --> 02:31:35.800
maybe even Google Cloud,

02:31:35.880 --> 02:31:37.880
the fundamental offering of these companies

02:31:37.960 --> 02:31:39.960
is the ability to rent virtual machines.

02:31:40.040 --> 02:31:42.040
These virtual machines

02:31:42.120 --> 02:31:44.120
are servers simulated by software,

02:31:44.200 --> 02:31:46.200
so a bunch of virtual machines

02:31:46.280 --> 02:31:48.280
can run on the same hardware.

02:31:48.360 --> 02:31:50.360
Just like how multiple virtual reality headsets

02:31:50.440 --> 02:31:52.440
can run in the same reality.

02:31:52.520 --> 02:31:54.520
Warum haben wir eigentlich Subtitel?

02:31:54.600 --> 02:31:56.600
Egal, lassen wir mal an.

02:31:56.600 --> 02:32:07.980
Subtitel an oder aus?

02:32:08.060 --> 02:32:10.060
So companies and people like you

02:32:10.140 --> 02:32:12.620
can rent and access them through the internet.

02:32:12.700 --> 02:32:17.020
Ich muss ja sagen, mir persönlich gefällt das Azure Web Interface.

02:32:17.100 --> 02:32:25.600
Die haben ja dieses zweigesplittete Web,

02:32:25.680 --> 02:32:27.680
also wenn du das hier anklickst, klappt das noch mal aus

02:32:27.760 --> 02:32:29.760
und hier sind die eigentlichen Daten dann erst.

02:32:29.840 --> 02:32:31.840
Aber mir gefällt das Azure Web Interface.

02:32:31.920 --> 02:32:36.970
Ich mag das mehr als Google Cloud.

02:32:37.050 --> 02:32:49.610
Aber noch mehr Azure Web Interface enjoyers.

02:32:49.690 --> 02:32:53.930
You see, rather than buying a bunch of hardware,

02:32:54.010 --> 02:32:55.530
fitting it all together,

02:32:55.530 --> 02:32:57.050
and maintaining it forever,

02:32:57.130 --> 02:32:59.130
you can simply rent all of this in the cloud.

02:32:59.210 --> 02:33:01.210
While they're not actually in the clouds,

02:33:01.290 --> 02:33:02.650
it'll be a few more decades

02:33:02.730 --> 02:33:04.730
before they figure out how to do that.

02:33:04.810 --> 02:33:07.210
Ja, wir wissen, dass die Cloud auch nur Computer sind,

02:33:07.290 --> 02:33:09.290
die woanders stehen.

02:33:09.370 --> 02:33:11.050
Deswegen wissen wir auch,

02:33:11.130 --> 02:33:14.970
dass das nächste Jahr wird das Jahr von Serverless-less-ness.

02:33:15.050 --> 02:33:17.050
Oder wie war das?

02:33:17.130 --> 02:33:19.770
Serverless-less-ness.

02:33:19.850 --> 02:33:23.530
Also sprich, man betreibt die Dinger wieder selbst.

02:33:23.610 --> 02:33:25.450
... a single VM in a server

02:33:25.530 --> 02:33:28.010
in a cluster in a data center on the ground.

02:33:28.090 --> 02:33:29.290
For the rest of this video,

02:33:29.370 --> 02:33:31.370
I will be referring to these cloud-computed instances...

02:33:31.450 --> 02:33:36.010
Ja, hier in Hanau um die Ecke hat Google jetzt auch ein Rechenzentrum.

02:33:36.090 --> 02:33:39.530
Also, bin ich mir gar nicht sicher, ob sie wollen oder schon haben,

02:33:39.610 --> 02:33:42.570
aber sie werden auf jeden Fall eins haben.

02:33:42.650 --> 02:33:49.470
Gibt es hier in Hanau, gibt es Maps, Hanau, Wolfgang, Kaserne?

02:33:49.550 --> 02:33:51.070
Irgendwo hier hinten.

02:33:51.150 --> 02:33:53.310
Oh, das ist auch so ein Ding.

02:33:53.390 --> 02:33:54.910
Wisst ihr, wie sehr mich das nervt,

02:33:54.990 --> 02:33:56.590
dass man nicht mal auf Google Maps jetzt kommt,

02:33:56.590 --> 02:33:59.150
beim Anklicken hier?

02:33:59.230 --> 02:34:02.430
Das regt mich so auf.

02:34:02.510 --> 02:34:05.390
Ich weiß, da sind irgendwelche EU-Regularien oder so was,

02:34:05.470 --> 02:34:11.310
dass man das nicht mehr darf, aber es ist nervig.

02:34:11.390 --> 02:34:17.630
Ja, irgend so ein altes Kasernen-Areal hat sich, genau,

02:34:17.710 --> 02:34:20.990
hat sich Google jetzt gekauft

02:34:21.070 --> 02:34:25.210
und will ein Rechenzentrum hier um die Ecke bauen.

02:34:25.290 --> 02:34:29.050
... as VMs, but these terms are totally interchangeable.

02:34:29.050 --> 02:34:31.050
AWS calls them Instances.

02:34:31.130 --> 02:34:34.250
Microsoft wants to be different and uses VM instead.

02:34:34.330 --> 02:34:36.490
I wonder what Google calls them.

02:34:36.570 --> 02:34:38.490
Äh, Instances.

02:34:38.570 --> 02:34:40.330
Ja, steht aber auch da, Instances.

02:34:40.410 --> 02:34:43.530
A piece of software called the hypervisor runs on each server

02:34:43.610 --> 02:34:45.370
to launch customer VMs.

02:34:45.450 --> 02:34:48.730
This was likely Hyper-V or some internal implementation of it,

02:34:48.810 --> 02:34:52.330
which is a Type-1 hypervisor that runs directly on hardware.

02:34:52.410 --> 02:34:53.850
Compare that to Type-2 hyper...

02:34:53.930 --> 02:34:56.570
Ich bin mir nicht sicher, was Google verwendet.

02:34:56.650 --> 02:34:58.810
Wahrscheinlich irgendeine KVM-Geschichte für Linux.

02:34:58.810 --> 02:35:00.810
Vielleicht auch ESX.

02:35:00.890 --> 02:35:03.530
Ist da nicht gestern ein Lagerhaus abgebrannt?

02:35:03.610 --> 02:35:05.610
Keine Ahnung.

02:35:05.690 --> 02:35:08.090
... which you can install on your computer right now

02:35:08.170 --> 02:35:10.170
to run Tempo OS.

02:35:10.250 --> 02:35:12.810
This guest OS will be slower than your host OS,

02:35:12.890 --> 02:35:14.890
as the VM needs to go through the host...

02:35:14.970 --> 02:35:18.170
Wann geht's denn jetzt eigentlich los mit Ausfall bei Microsoft?

02:35:18.250 --> 02:35:20.250
... to talk to the hardware.

02:35:20.330 --> 02:35:22.890
This is fine for educational or hobbyist purposes,

02:35:22.970 --> 02:35:25.050
but for enterprise-level performance,

02:35:25.130 --> 02:35:28.570
Type-1 hypervisors are used to skip the host OS layer.

02:35:28.570 --> 02:35:32.010
So we know Azure uses a Type-1 hypervisor, yet in this...

02:35:32.090 --> 02:35:35.370
Wie will der mir sagen, dass meine VM kein Enterprise-Setup ist hier?

02:35:35.450 --> 02:35:40.410
Das ist Arch-Linux. Mehr Enterprise-Hi-IQ geht nicht, by the way.

02:35:40.490 --> 02:35:42.170
... as you see a host OS.

02:35:42.250 --> 02:35:43.930
Furthermore, when you read the docs,

02:35:44.010 --> 02:35:46.890
you see that there is a so-called root or parent partition,

02:35:46.970 --> 02:35:50.010
which runs Windows and creates guest VMs.

02:35:50.090 --> 02:35:51.690
So what's going on here?

02:35:51.770 --> 02:35:53.210
Well, when you run Hyper-V,

02:35:53.290 --> 02:35:58.490
it transparently converts the original OS into a special VM in the parent partition.

02:35:58.650 --> 02:36:00.170
This host OS...

02:36:00.250 --> 02:36:03.370
Also, mich wundert nicht, dass Hyper-V abgekackt ist.

02:36:03.450 --> 02:36:07.530
Hyper-V ist ja eh so'n Ding.

02:36:07.610 --> 02:36:13.290
Irgendjemand bei euch in der misslichen Lage, sich um Hyper-V kümmern zu müssen?

02:36:13.370 --> 02:36:15.370
... behaves identically as before.

02:36:15.450 --> 02:36:20.090
It can talk directly to hardware as if the hypervisor didn't exist and run Fortnite.

02:36:20.170 --> 02:36:23.690
But you can now easily manage your guest machines from the host OS.

02:36:23.770 --> 02:36:28.170
Although the interface makes it look like you're creating VMs on top of the host OS,

02:36:28.250 --> 02:36:30.170
it is actually making hypercalls to Hyper-V.

02:36:30.650 --> 02:36:35.770
Which spins up VMs in the child partition, which then talk directly to Hyper-V.

02:36:35.850 --> 02:36:38.730
So there are a bunch of servers running these hypervisors,

02:36:38.810 --> 02:36:43.930
and clusters of about 1,000 servers are managed by a fabric controller or FC,

02:36:44.010 --> 02:36:47.530
which provisions and monitors VMs in its assigned cluster.

02:36:47.610 --> 02:36:50.170
Dividing a data center into clusters is very...

02:36:50.250 --> 02:36:57.920
Wann geht's denn los? Hier, der Incident. Wir gucken uns, wir skippen mal kurz.

02:36:58.000 --> 02:37:03.680
A host agent receives a request to start a new VM and sends a hypercall to do so.

02:37:03.760 --> 02:37:06.800
It patiently waits for the initialization to complete,

02:37:06.880 --> 02:37:11.440
but little did it know that the VM was doomed to an unseemly fate.

02:37:11.520 --> 02:37:15.520
The guest agent starts up and tries to generate the transfer certificate.

02:37:15.600 --> 02:37:19.520
It nonchalantly passes in the expiration date it's been instructed to use.

02:37:19.600 --> 02:37:22.320
Ich glaube mittlerweile doch, dass es AI ist.

02:37:22.400 --> 02:37:25.840
Der Kerl hörte sich früher genauso an.

02:37:25.920 --> 02:37:29.360
Hatte seine Stimme AI-isiert.

02:37:29.440 --> 02:37:34.090
Wobei, vor einem Jahr gab's das auch schon.

02:37:34.090 --> 02:37:38.320
Äh, vor einem Jahr? Wie gibt's das, seit einem Jahr?

02:37:38.400 --> 02:37:40.800
Wir haben schon früher Videos von dem geguckt.

02:37:40.880 --> 02:37:42.800
...but that would be the last thing that it ever...

02:37:42.880 --> 02:37:44.560
Das ist AI-Stimme, oder?

02:37:44.640 --> 02:37:48.000
So langsam aber sicher glaub ich auch, dass es AI-Stimme ist.

02:37:48.080 --> 02:37:55.040
...does. The GA airs out and terminates, leaving the VM initialization in limbo.

02:37:55.120 --> 02:37:56.720
The HA is still waiting.

02:37:56.800 --> 02:38:00.240
Seconds pass, then minutes, then dozens of minutes.

02:38:00.320 --> 02:38:01.680
Something wasn't right.

02:38:01.760 --> 02:38:03.600
The HA checks its clock.

02:38:03.680 --> 02:38:05.040
It's been 25 minutes.

02:38:05.040 --> 02:38:10.160
This was the longest that the HA was instructed to wait for an unresponsive VM.

02:38:10.240 --> 02:38:12.880
Let's try turning it off and back on, thought the HA.

02:38:12.960 --> 02:38:14.720
Was meistens ja eine gute Sache ist.

02:38:14.800 --> 02:38:18.880
It reinitializes the VM, which attempts the startup sequence a second time.

02:38:18.960 --> 02:38:20.720
The same thing happens.

02:38:20.800 --> 02:38:24.320
The VM never reports a success to the HA.

02:38:24.400 --> 02:38:28.480
One last time, thought the HA, as it rebooted the VM once more.

02:38:28.560 --> 02:38:33.520
It had been instructed to try three times, because two isn't enough and four is too many.

02:38:33.520 --> 02:38:36.000
But inevitably the same result occurs.

02:38:36.080 --> 02:38:40.480
Now the HA concludes it must be a hardware problem and that something was wrong.

02:38:40.560 --> 02:38:43.440
Aber wisst ihr, was ich gut und schlecht zugleich finde?

02:38:43.520 --> 02:38:48.080
Dass die so genaue Vorgaben haben, was sie machen sollen.

02:38:48.160 --> 02:38:53.280
Das heißt, es gibt dann wenig so mit, ah, ich weiß jetzt nicht, was ich machen soll und so.

02:38:53.360 --> 02:38:58.320
Und im Zweifelsfall kann der Support-Typ sich auch rausreden mit, wieso, ich hab doch genau das befolgt, was ich machen soll.

02:38:58.400 --> 02:39:03.280
Auf der anderen Seite ist es auch wieder blöd, weil wenn da jemand gesessen hätte, der vielleicht ein bisschen Ahnung davon gehabt hätte,

02:39:03.280 --> 02:39:09.120
man kennt jetzt das eigentliche Problem nicht, vielleicht wäre das gar nicht zu dem Unfall gekommen.

02:39:09.200 --> 02:39:10.960
...was wrong with the server.

02:39:11.040 --> 02:39:18.720
So it reports itself as faulty to the Fabric Controller and moves the server to a state called Human Investigate or HI.

02:39:18.800 --> 02:39:29.200
Since the server is now considered unhealthy, the FC begins transferring VMs off the faulty server to different servers in a mechanism dubbed Automatic Service Healing.

02:39:29.280 --> 02:39:33.040
This is the mechanism which would lead to the eventual downfall of the entire client.

02:39:33.040 --> 02:39:43.760
The VMs running on the server since prior to Leap Day are doing just fine, but under the FC's orders, they are forcibly shut down and moved to a new server.

02:39:43.840 --> 02:39:48.000
They all begin reinitializing, but as expected, they all fail to do so.

02:39:48.080 --> 02:39:58.720
The FC is oblivious to the fact that it is basically infecting all of the servers under its control with the same issue and continues to move VMs from...

02:39:58.800 --> 02:40:02.800
Okay, das Ding switcht zu Investigate.

02:40:02.800 --> 02:40:08.640
...versucht die VMs zu migrieren und dabei kacken die wieder ab beim nach dem Migrieren gestartet werden.

02:40:08.720 --> 02:40:11.520
Also okay, das ist so quasi Chain Reaction.

02:40:11.600 --> 02:40:13.600
Es geht immer mehr kaputt.

02:40:13.680 --> 02:40:19.840
Was man daran auch wieder schön sieht ist, DateTime ist einfach nur der pure Abfuck.

02:40:19.920 --> 02:40:26.080
Egal in welcher Programmiersprache, in welchem Kontext, DateTime Handling ist einfach der größte Shit ever.

02:40:26.160 --> 02:40:29.040
...from HI-Servers to healthy servers.

02:40:29.120 --> 02:40:32.560
Two hours later, the cluster has seen better days.

02:40:32.560 --> 02:40:35.840
There are so many servers in HI that the FC gives up.

02:40:35.920 --> 02:40:41.840
It marks the entire cluster as HI and disables all further automatic actions.

02:40:41.920 --> 02:40:49.920
Right, so all of this meant it was currently impossible to launch a VM and your VM would be toast if it was caused in automatic service healing.

02:40:50.000 --> 02:40:51.680
But it actually gets slightly worse.

02:40:51.760 --> 02:40:58.800
The GA also restarts when it receives updates and there was an ongoing deployment going out to update the GA and HA.

02:40:58.880 --> 02:41:02.400
So any clusters which received this deployment would also blow up.

02:41:02.560 --> 02:41:11.840
By 6.38pm the devs discovered and had a good laugh at the trivial Leap Day logic and the fact that they weren't going to sleep for the next 24 hours.

02:41:11.920 --> 02:41:25.440
By 6.55pm the engineers disabled customer management of VMs which prevented them from fruitlessly deploying, updating or scaling their applications as all these would trigger automatic service healing and make the issue worse.

02:41:25.520 --> 02:41:27.360
By 10pm they had a plan.

02:41:27.440 --> 02:41:30.560
By 11.20pm they had the GA fix ready.

02:41:30.640 --> 02:41:31.680
Only the...

02:41:31.680 --> 02:41:36.240
So if you really want to leave them alone, this is already pretty fast.

02:41:36.320 --> 02:41:39.680
By 11.20pm they had the GA fix ready.

02:41:39.760 --> 02:41:44.800
They are already pretty good at this, but they also have a lot of money on them.

02:41:46.240 --> 02:41:54.320
So if the VM management in Azure has problems, I mean 2012, maybe not as much as today, but they have a lot of money on them.

02:41:54.400 --> 02:41:59.760
And in case of doubt, not only what they lose, because you can't use the service,

02:41:59.840 --> 02:42:01.600
but if they run their SLAs,

02:42:01.760 --> 02:42:04.480
in case of doubt they also lose some decisions and stuff like that.

02:42:04.560 --> 02:42:11.440
This is really really fast, in really high amounts, if they don't do that.

02:42:11.520 --> 02:42:12.880
GA fix ready.

02:42:12.960 --> 02:42:16.560
Everything is being drummed together that can be drummed together.

02:42:16.640 --> 02:42:22.800
Only those involved would know why preparing the fix to properly increment the dates by a year took 5 hours.

02:42:22.880 --> 02:42:26.080
By 1.50am the next day they finished testing.

02:42:26.160 --> 02:42:30.640
By 2.11am they had rolled out the new GA to one production cluster.

02:42:30.720 --> 02:42:31.520
Finally,

02:42:31.520 --> 02:42:34.720
by 5.23am the majority of the clusters had been fixed.

02:42:34.800 --> 02:42:37.440
Cluster finally by 5.23am

02:42:37.520 --> 02:42:40.480
This is really pretty fast, if you look at this.

02:42:41.760 --> 02:42:44.640
I don't know, what is this, 16 hours or something?

02:42:44.720 --> 02:42:47.120
20 hours or something?

02:42:47.200 --> 02:42:48.880
By 3am the majority of the clusters

02:42:48.960 --> 02:42:51.870
No, wait a minute.

02:42:51.950 --> 02:42:54.750
No, that's only 8 hours, isn't it?

02:42:54.830 --> 02:42:56.110
8 hours, look at this.

02:42:56.190 --> 02:42:58.110
8 hours to one production cluster.

02:42:58.190 --> 02:42:59.390
Finally by 5.23am

02:42:59.470 --> 02:43:00.590
Here?

02:43:00.670 --> 02:43:01.550
20?

02:43:01.630 --> 02:43:02.270
To 4?

02:43:02.270 --> 02:43:04.270
That's 8 hours, isn't it?

02:43:06.110 --> 02:43:07.470
24?

02:43:07.550 --> 02:43:08.670
To 4?

02:43:08.750 --> 02:43:10.750
That's 8 hours.

02:43:10.830 --> 02:43:14.600
23am

02:43:14.680 --> 02:43:15.160
What?

02:43:15.240 --> 02:43:24.220
12 hours?

02:43:24.300 --> 02:43:27.260
Oh, I have this now.

02:43:27.340 --> 02:43:29.980
I calculated from bug identified.

02:43:30.060 --> 02:43:33.180
Bug identified to fixed?

02:43:33.260 --> 02:43:35.260
That's not bad, right?

02:43:35.340 --> 02:43:38.060
The majority of the clusters had been fixed.

02:43:38.140 --> 02:43:39.420
Why not all of them?

02:43:39.500 --> 02:43:42.620
Well, going back to 2am after they finished testing the fix,

02:43:42.700 --> 02:43:47.580
there were 7 clusters in which the unrelated GA and HA deployment was in progress.

02:43:47.660 --> 02:43:51.340
So some servers had the new software, while others did not.

02:43:51.420 --> 02:43:55.980
In the other clusters they simply took the existing version and added the fixed GA,

02:43:56.060 --> 02:43:57.900
but here there were two versions.

02:43:57.980 --> 02:44:02.460
They could add the fixed GA to either, but in the end they decided to choose the old one,

02:44:02.540 --> 02:44:05.020
since it was time-tested and likely safer.

02:44:05.100 --> 02:44:09.100
But when they were creating this package with the fixed GA and old HA,

02:44:09.180 --> 02:44:12.220
they somehow misclicked and included a networking plugin

02:44:12.220 --> 02:44:15.340
from the new version, which if deployed would be a disaster

02:44:15.420 --> 02:44:18.380
since it was incompatible with the old HA.

02:44:18.460 --> 02:44:21.580
They had a second lifeline though, as according to standard practice,

02:44:21.660 --> 02:44:26.460
they must first test the rollback package on a single server to see if it even works.

02:44:26.540 --> 02:44:30.300
They did that and saw that VM started successfully and appeared healthy,

02:44:30.380 --> 02:44:32.860
so they were eager to go ahead with the deployment.

02:44:32.940 --> 02:44:35.660
So at 2.47am they started blasting,

02:44:35.740 --> 02:44:40.300
which deployed to every server in all 7 clusters at the same time.

02:44:40.380 --> 02:44:42.140
This incompatibility soon became

02:44:42.220 --> 02:44:46.140
evident, as it would turn off network access for the VMs on the server,

02:44:46.220 --> 02:44:48.300
rendering them essentially unusable.

02:44:48.380 --> 02:44:51.180
To make matters worse, some major Azure services,

02:44:51.260 --> 02:44:55.820
such as their access control service, happened to be hosted in these 7 clusters.

02:44:55.900 --> 02:44:58.940
So at 3.40am they prepared a new deployment,

02:44:59.020 --> 02:45:03.340
which had the compatible version of the network plugin and tested it more thoroughly,

02:45:03.420 --> 02:45:07.100
before blasting out the fix once more at 5.40am.

02:45:07.180 --> 02:45:09.900
Wisst ihr, was ich daran immer cool finde?

02:45:09.980 --> 02:45:10.940
Man sieht daran,

02:45:10.940 --> 02:45:13.100
dass die auch alle nur mit Wasser kochen.

02:45:13.180 --> 02:45:15.740
Das wirkt von außen halt so Blackbox-mäßig und du denkst dir,

02:45:15.820 --> 02:45:18.220
okay, das wird halt einfach, das geht halt einfach.

02:45:18.300 --> 02:45:23.580
Das ist innen drinne genau der gleiche Mist wie überall anders auch.

02:45:23.660 --> 02:45:25.900
Vielleicht ein bisschen besser getestet,

02:45:25.980 --> 02:45:30.140
vielleicht auch ein bisschen besser durchdacht,

02:45:30.220 --> 02:45:33.020
zentralisiert und auch wirklich gute Leute dran,

02:45:33.100 --> 02:45:37.740
aber im Prinzip unterm Strich ist es der gleiche Mist wie überall anders auch

02:45:37.820 --> 02:45:39.340
und es kochen alle nur mit Wasser.

02:45:40.940 --> 02:45:42.940
Es ist nicht nur operativ,

02:45:43.020 --> 02:45:46.940
aber ein paar bestimmte Server waren in korrupten Staaten von zu viel geblastet.

02:45:47.020 --> 02:45:50.860
Die Entwickler und die Operationen-Staff arbeiteten furchtbar den Rest des Tages

02:45:50.940 --> 02:45:56.540
und alles wurde 18 Stunden später vollständig nach 2.15 Uhr am folgenden Tag restauriert.

02:45:56.620 --> 02:45:58.700
Das war ein ziemlich außergewöhnliches Event.

02:45:58.780 --> 02:46:01.820
Wenn etwas wie das zu AWS oder Azure heute passiert,

02:46:01.900 --> 02:46:05.180
würde das ganze Internet nicht mehr Klickbait sein.

02:46:05.260 --> 02:46:07.580
Glücklicherweise ist das über eine Dekade hergekommen,

02:46:07.660 --> 02:46:10.220
als der Cloud-Markt nichts war, als es heute ist.

02:46:10.220 --> 02:46:14.780
Die späte Rückkehr könnte an den Fakt, dass der Cloud damals etwas neu war, bezeichnet werden.

02:46:14.860 --> 02:46:18.140
Sie bemerken, dass sie eine Stunde oder so auf Detektion haben können,

02:46:18.220 --> 02:46:21.500
da es keine Alarmen auf GA-Initialisierungsverluste gab,

02:46:21.580 --> 02:46:23.900
sondern nur auf Servern, die mit HI bezeichnet werden.

02:46:23.980 --> 02:46:25.980
Aber ein Leap-Day-Bug wie dieser ist schwer.

02:46:26.060 --> 02:46:29.580
Ausfallschritte werden meist durch Deployment oder Kundenaktion getriggert,

02:46:29.660 --> 02:46:33.180
beide von denen können zu einer Art und Weise kontrolliert werden durch Staggering und Sharding.

02:46:33.260 --> 02:46:38.620
Aber nach meinen Kalkulationen wird es gleichzeitig 0 UTC auf der ganzen Zeit überall auf der Erde.

02:46:38.700 --> 02:46:40.060
Also würde dieser Latent-Bug

02:46:40.060 --> 02:46:43.900
auf jeden Azure-VM weltweit manifestieren.

02:46:43.980 --> 02:46:45.500
Um für die Ausfallschritte zu kompensieren,

02:46:45.580 --> 02:46:50.140
hat Azure einen 33%-Discount für alle Anwender dieser effektiven Geräte

02:46:50.220 --> 02:46:53.820
für den ganzen Monat gegeben, egal ob sie beeinflusst wurden.

02:46:53.900 --> 02:46:55.740
Das scheint eigentlich ein ziemlich guter Deal zu sein

02:46:55.820 --> 02:46:58.460
und wahrscheinlich eine großartige Ausgabe für Azure,

02:46:58.540 --> 02:47:01.420
aber es ist alles wert, um diese Kundenvertrauen zu restaurieren.

02:47:10.060 --> 02:47:36.760
Ich habe vor 3 Stunden meinen Art-Schnitt geupdatet und es gibt keine neuen Packages.

02:47:36.840 --> 02:47:39.960
Das ist aber nicht, was ich hier von Pleading Edge Rolling Release erwarte.

02:47:40.040 --> 02:47:41.480
Ich brauche neue Packages.

02:47:41.560 --> 02:47:43.560
Ja, stimmt, du hast recht.

02:47:43.640 --> 02:47:45.640
Ja, das ist vorher passiert.

02:47:45.720 --> 02:47:59.690
Ab Bug Identified waren es 8 Stunden.

02:47:59.770 --> 02:48:02.730
Wobei man halt nicht weiß, ob Bug Identified mit dem Art-Schnitt

02:48:02.810 --> 02:48:04.810
in der Art-Schnitt-Release stattfindet.

02:48:04.890 --> 02:48:07.500
Ich weiß nicht, ob das so ist.

02:48:07.580 --> 02:48:09.500
Ich weiß nicht.

02:48:09.500 --> 02:48:11.340
Ich weiß nicht, was Art Identified bedeutet mit wir wissen, wo es ist

02:48:11.420 --> 02:48:13.180
und was man fixen muss, sondern halt nur wir wissen,

02:48:13.260 --> 02:48:16.620
es ist irgendwas auf unserer Seite und ungefähr, wo es sein muss

02:48:16.700 --> 02:48:18.140
und das eigentliche Suchen.

02:48:18.220 --> 02:48:21.100
Also ich habe das so interpretiert, dass die wussten, okay,

02:48:21.180 --> 02:48:23.980
bei uns ist irgendwas verbuggt mit Date-Time-Handling

02:48:24.060 --> 02:48:26.700
und dann mussten sie erst mal suchen, wo denn jetzt genau und was

02:48:26.780 --> 02:48:28.300
und was machen wir dagegen.

02:48:28.380 --> 02:48:30.460
Also ich finde das in 8 Stunden echt nicht schlecht.

02:48:30.540 --> 02:48:34.460
Das ist ja nicht jetzt irgendwie da in einem Rack, was irgendwo rumsteht,

02:48:34.540 --> 02:48:36.380
wo man mit einem USB-Stick hinrennst oder so.

02:48:36.460 --> 02:48:46.270
Also in so einer großen Umgebung sind 8 Stunden nicht schlecht.

02:48:46.350 --> 02:48:46.750
Ja.

02:48:46.910 --> 02:48:52.510
Bei uns früher, sowohl damals noch beim Provider als auch bei der Bank,

02:48:52.590 --> 02:48:56.510
wo ich gearbeitet habe, da wäre natürlich 8 Stunden Ausfall echt fatal gewesen,

02:48:56.590 --> 02:49:04.430
aber das waren halt auch deutlich weniger komplexere Systeme als Azure.

02:49:04.510 --> 02:49:06.270
Und bei 8 Stunden Ausfall haben wir auch hingekriegt.

02:49:06.350 --> 02:49:08.910
Aber die meisten Sachen waren immer, immer sehr schnell gefixt.

02:49:08.990 --> 02:49:13.230
Das war dann mal eine Stunde weg, zwei Stunden weg, eine halbe Stunde weg.

02:49:13.310 --> 02:49:17.870
Wenn mal was war, da waren wir meistens deutlich schneller.

02:49:17.950 --> 02:49:18.830
Aber das war dann auch oftmals

02:49:18.830 --> 02:49:24.110
nur Probleme eben nicht auf, also nicht auf Infrastrukturebene, sondern Anwendungslogik.

02:49:24.190 --> 02:49:35.680
Chatke, ich geh jetzt was essen, ich hab Hunger.

02:49:35.760 --> 02:49:38.480
Hunger AF.

02:49:38.560 --> 02:49:41.680
Ich habe euch ja versprochen, wir streamen mehr.

02:49:41.760 --> 02:49:46.920
Und ich habe es mir zu Herzen genommen.

02:49:47.000 --> 02:49:50.040
Wir haben ja gestern gestreamt, heute gestreamt, vielleicht streamen wir heute Mittag nochmal.

02:49:50.120 --> 02:49:53.880
Und nächste Woche ist Feiertag, da bin ich auch am Start.

02:49:53.960 --> 02:49:55.480
Eventuell bin ich Montag nochmal am Start.

02:49:55.560 --> 02:49:57.240
Es gibt jetzt wieder ein bisschen mehr Streams.

02:49:57.240 --> 02:50:06.670
Zumal es auch einiges gibt, was erledigt werden muss.

02:50:06.750 --> 02:50:10.830
Aber jetzt erst mal PepoFatTime.

02:50:10.910 --> 02:50:13.070
Ach ja, es ist Sonntag.

02:50:13.150 --> 02:50:26.970
Ratet mal, was es heute gibt.

02:50:27.050 --> 02:50:27.770
Lachsnudeln.

02:50:27.850 --> 02:50:35.470
Nein, falsch.

02:50:35.550 --> 02:50:38.250
Wrong.

02:50:38.330 --> 02:50:41.790
Keine Nudeln mit Lachs.

02:50:41.870 --> 02:50:42.590
Spaghetti Bolle.

02:50:42.670 --> 02:50:44.270
Korrekt.

02:50:44.350 --> 02:50:48.190
Es gibt ja eigentlich nur zwei Varianten sonntags.

02:50:48.270 --> 02:50:48.990
Spargel.

02:50:49.070 --> 02:50:51.310
Ey, ich habe letztens was gegessen.

02:50:51.390 --> 02:50:52.910
Das war richtig nice.

02:50:53.070 --> 02:50:54.910
Weil du sagst Spargel.

02:50:54.990 --> 02:51:14.570
Das war, tja, grüner Spargel, dabei mit Kartoffel, Tomaten und Parmesan, Käse.

02:51:14.650 --> 02:51:19.290
Sowas hier in der Richtung war das, ja.

02:51:19.370 --> 02:51:24.250
Und das hat sehr, sehr nice geschmeckt.

02:51:24.330 --> 02:51:28.010
Wenn es auch auf den ersten Blick mega öko gesund aussieht,

02:51:28.010 --> 02:51:31.130
hat das wirklich nice geschmeckt in Kombination.

02:51:31.210 --> 02:51:34.430
Ne, so sah das nicht aus.

02:51:34.510 --> 02:51:37.870
Das sah besser aus.

02:51:37.950 --> 02:51:40.750
Ja, eher so in der Richtung.

02:51:40.830 --> 02:51:42.430
Das hat wirklich gut geschmeckt.

02:51:42.510 --> 02:51:45.580
Hätte ich gar nicht gedacht.

02:51:45.660 --> 02:51:50.540
Wie gesagt, das sah so öko gesund aus.

02:51:50.620 --> 02:51:51.820
Aber ne, war echt nice.

02:51:51.900 --> 02:51:54.540
Bis echt ist das so.

02:51:54.620 --> 02:51:56.940
Aber das ist ja nicht schlimm, weil ich bin ja auch Boomer.

02:51:57.020 --> 02:51:58.860
Ich werde dieses Jahr 40.

02:51:58.940 --> 02:52:00.060
Könnt ihr euch das vorstellen?

02:52:00.060 --> 02:52:02.300
Da ist man Boomer.

02:52:02.380 --> 02:52:03.740
Aber sowas von.

02:52:03.820 --> 02:52:07.340
Boomer ist ja ein weitreichender Begriff.

02:52:07.420 --> 02:52:16.890
Und nachdem in der heutigen Zeit eh jeder alles sein kann,

02:52:16.970 --> 02:52:19.610
gibt es bestimmt auch schon 20-jährige Boomer.

02:52:19.690 --> 02:52:23.770
Boomer ist ja mehr eine Denkweise als ein Alter.

02:52:23.850 --> 02:52:32.430
Aber wenn es das angeht, bin ich wahrscheinlich der jüngste Boomer.

02:52:32.510 --> 02:52:40.860
In meiner Generation ist das halt, das zieht sich durch,

02:52:40.940 --> 02:52:45.900
durch meine Generation zieht sich eben dieses Geboomere durch, ja.

02:52:45.900 --> 02:52:50.060
Du hast welche, die sind mit Technik, Computer und Sachen aufgewachsen.

02:52:50.140 --> 02:52:53.020
Die sind keine Boomer und werden es wahrscheinlich auch nicht.

02:52:53.100 --> 02:52:55.340
Und du hast welche, die sind noch so oldschool.

02:52:55.420 --> 02:52:58.060
Und das sind jetzt in meinem Alter schon die Ultra-Boomer.

02:52:58.140 --> 02:53:05.580
Das sind die, die auf Facebook gehen und an Ostern anzügliche Witze

02:53:05.660 --> 02:53:10.380
mit Teufel-Emoji posten und sich super lustig finden.

02:53:10.460 --> 02:53:15.770
Eierwitze an Ostern in Facebook-Gruppen posten mit Teufel-Emoji.

02:53:15.770 --> 02:53:17.770
Das sind die Ultra-Boomer.

02:53:17.850 --> 02:53:20.890
Da gibt es auch irgendwie so ein Subreddit.

02:53:20.970 --> 02:53:23.290
Ich bin 40 und lustig oder irgendwie sowas.

02:53:23.370 --> 02:53:25.450
Wie geht das? Ich bin über 40 und lustig.

02:53:25.530 --> 02:53:27.930
Irgendwie so in der Richtung.

02:53:28.010 --> 02:53:30.730
Ich weiß nicht. Ja doch, ich glaube, so heißt das.

02:53:30.810 --> 02:53:35.310
Egal, ich gehe jetzt was essen.

02:53:35.390 --> 02:53:38.190
Vielleicht bin ich nachher noch mal da.

02:53:38.270 --> 02:53:42.990
Kann aber auch sein, dass ich nicht da bin, weil MMO-Kreiselgrind ist strong.

02:53:43.070 --> 02:53:53.070
Es hat doch vorhin irgendjemand einen Heiser-Artikel geschickt,

02:53:53.150 --> 02:53:53.950
wo ich noch reingucken wollte.

02:53:54.110 --> 02:53:55.950
Was war denn das eigentlich?

02:53:56.030 --> 02:53:59.310
Keine automatische Lösung für 0x-Update-Fehler mehr geplant.

02:53:59.390 --> 02:54:01.390
Ein Update für die Windows-Recovery-Umgebung

02:54:01.470 --> 02:54:04.510
schlägt seit Längerem auf, mit dem ihr...

02:54:04.590 --> 02:54:09.640
Was?

02:54:09.720 --> 02:54:24.170
Jetzt sagt er, dass er sich nicht mehr an eine automatisierte...

02:54:24.250 --> 02:54:26.890
Und? Was macht das jetzt?

02:54:26.970 --> 02:54:31.640
Ich verwende keinen BitLocker, also juckt mich nicht.

02:54:31.720 --> 02:54:59.440
Weiterer Grund, warum kein BitLocker-Schrott eingesetzt wird hier.

02:54:59.520 --> 02:55:01.280
Okay, dann gehe ich...

02:55:01.280 --> 02:55:03.120
Äh, nicht pennen, Essen.

02:55:03.200 --> 02:55:05.120
Fressen gehe ich jetzt.

02:55:05.200 --> 02:55:06.560
Bis dann, see you.
