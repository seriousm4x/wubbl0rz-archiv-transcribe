Ich muss noch mal kurz aufs Klo, Leute.
Gleich da.
Wenn ich es noch schaffe, mein Headset zu entwirren.
Das ist natürlich der Pro-Move.
Moment, hä?
Wie rumkommt... Ah, so.
Also ich habe zu viel Zeug hier.
Eindeutig liegen jetzt noch das Ladekabel vom Handy im Weg, man.
So.
Gut.
Jetzt passt's.
Rollo runter machen.
Excellent.
So.
Also.
Inspektor Poops am Start.
An's Trinken erinnern.
Ja, habe ich schon.
Mr. Amec hat subscribed.
Dankeschön.
Pog-Subscription.
Das ist sehr...
So.
Wo fange ich denn am besten...
Achso, ja.
Ich weiß, wo ich am besten anfange.
Ich mache jetzt erstmal...
Arsch, by the way.
Betriebssystem-Updates.
Übrigens.
Soll ich euch mal was von China-Chinesen-Kameras erzählen?
Und dass das einfach sagt?
Also ich habe ja bei mir...
Warte mal.
Was ist denn da richtig?
Die richtige VM?
Das hier.
Ja.
Ich habe hier ein paar Reolink-Kameras hier daheim.
Warum habe ich mir die ursprünglich gekauft?
Also es sind solche Dinger hier.
Guckt mal.
Reolink.
Das sind so billige China-Chinesen-Teile.
Ja.
Outdoor.
Sowas hier zum Beispiel.
Ja.
So.
So Klein-Scheiß oder so.
Das habe ich mir gekauft, weil die waren mal relativ billig.
Ich meine, jetzt sind wir quasi 240 Euro.
Wir sind ja nicht mehr ganz dicht.
Die waren mal recht billig und hatten eigentlich alles, was man so braucht.
PoE, WiFi, ein Web-Interface und RTSP, um darauf zuzugreifen, ohne China-Chinesen-App.
Was steht an?
Sage ich gleich was zu.
Und jetzt.
Ich habe eine davon, hängt bei mir im Hof.
Und die hat seit einer Weile irgendwie immer wieder mal Verbindungsabbrüche beim RTSP.
Zum Glück habe ich die vor allem ausgemacht.
Hat immer wieder Abrüche.
Ich dachte mir so, ey, weißt du was, Max?
Mach mal ein paar Firmware-Updates.
Firmware-Updates schaden bestimmt nicht, können das Ganze nur besser machen.
Also habe ich gestern mal ein Firmware-Update gemacht.
Und wisst ihr was?
Die Kamera ging erst mal nicht mehr.
Bis ich da drauf gekommen bin, dass warten nicht hilft.
Also ich habe Update gestartet.
Ich habe Update gestartet.
Und die Kamera ging halt.
Die ging an.
Hat sich pingen lassen.
Hat aber außer Port 9000 nichts offen gehabt.
So.
Da habe ich mir gedacht, hä?
Was soll Port 9000 sein?
Und was ist überhaupt?
Und, ne?
So.
Zumindest.
Ja, Port 9000, beste.
Genau.
Zumindest habe ich dann mal ein bisschen gegoogelt.
Die China-Chinesen-Cloud Port 9000.
Da habe ich ein bisschen gegoogelt hier.
Reolink Port 9000.
Da bin ich dann drauf gekommen.
Hier, das ist der Media-Port.
Der Media-Port ist für ihre komische Videorecorder-Lösung, die die anbieten.
Und dann habe ich rausgefunden, von irgendeinem Reddit-Post,
dass jetzt nach dem Firmware-Update,
guck mal hier, ich glaube, vielleicht steht es hier auch.
Wo ist er?
Also plötzlich, ich habe dann irgendwann einen Reddit-Post gefunden.
Und da habe ich dann gemerkt, dass das Firmware-Update einfach alle Funktionen ausgeschaltet hat, weshalb ich die Kamera gekauft habe.
Aber glücklicherweise wurden die Funktionen nur ausgeschaltet.
Nicht ausgebaut.
Aber, und jetzt kommt es, damit man die Funktionen einschalten kann, also RTSP-Stream und Web-Interface,
muss man die erstmal wieder aktivieren.
Mit einer Software, die mit der Kamera über den Media-Port,
9000 reden kann also app installiert auf dem handy mich mit der kamera verbunden gegen
glücklicherweise auch keine einstellungen zu sehen bis ich dann rausgefunden habe man braucht
allen ernstes damit man das umstellen kann windows only desktop app mit der kann man sich dann wieder
auf die kamera verbinden und das web interface und rtsp einschalten direkt reverse engineering
open source tool dafür man ich habe schon gestern beim suchen ein news eintrag gefunden von jemand
der das gemacht hat aber da ging es darum cloud only kameras es gibt einen tv moji update jetzt
habt wie moji gleich gucken ich suche aber den tweet wie moji fork guck mal es gab neues update
15.1 des release at support
von ihr motors containing mode 15.1 aha im blut warum braucht eine modi von type
script definitions versteht was soll das überhaupt sein für ein emotional bei den
meisten die mortis habe ich ja noch irgendwie halbwegs verständnis beim erst mal dreht dass
ich gerade im greif ist oder kommt dass esd kopf schütteln und das ist nicken oder was
und dann gibt's leute mit einem stock und
im rollator okay package updates gemacht das kann man an dem moment noch nicht alles noch
nicht alles durch ja aber schlimm oder dass die einfach beim firmware update alle funktionen das
halte ich mir die kamera gekauft habe ausschalten nicht ausbauen aber ausschalten richtig hängen
geblieben das habe ich nicht ausprobiert ich wollte es erst ausprobieren aber nachdem die
so komischen installer verwenden und so was ist die chance wahrscheinlich nicht sonderlich hoch
dass es mit wein einfach so geht aber vielleicht vielleicht hätte das funktioniert mit wein ich
weiß es nicht aber das ging mir schon wieder enorm auf den sack dankeschön für den sap hier
ich habe irgendwas habe ich gerade übersehen oder auch nicht habe ich nicht irgendjemand
übersehen kann oder war das mein eigener teams sound den ich angemacht hat hat einer von euch
kubernetes zu hause laufen nein warum soll ich ein kubernetes daheim laufen lassen da muss der
tech-prozess nicht funktionieren ich habe es nicht funktioniert aber es ist ein kubernetes
team auf youtube angucken der hat fünf cluster daheim und muss ich immer fragen was geht mit
dem typ ab auf youtube ja auf die frage warum nicht rast was keine gescheite möglichkeit gibt
den sp 32 10 meter zu programmieren ach hier der der moritz hatte hat subscribe ist noch da ich
habe dich gar nicht ich habe das gar nicht gesehen da war ich glaube ich gerade auf dem
klo oder so wenn ich wenn du schon wieder weg bist dann
ich habe ich habe es gar nicht gesehen echt jetzt aber nicht offiziell android oder proxmox kommt
drauf an wo dein fokus drauf liegt ist ein fokus hauptsächlich virtualisierung und vor
ms oder eher allround und auch netzwerk storage dann ist klar ob das eine oder das andere pauschal
kann man das nicht sagen ohne zu wissen was du machen willst also leute falls irgendwas übersehen
red at once of backdoor in xz tools echt sache ich habe das schon mal gesehen ich habe das schon mal gesehen
Echt? Ernsthaft?
Ist das ein April-Scherz?
XZ-Tools ist doch so ein Extrahierungs-Ding.
Das ist ein April-Scherz.
Das ist schon ein verfrühter April-Scherz, oder?
Wobei, Moment.
In the latest XZ-Utils, Data Compression Tools and Libraries.
Wow. Aha.
Okay, dann müssen wir gleich mal gucken.
Was geht hier ab?
Habe ich das installiert? Gleich mal checken.
XZ-Tools.
Oh, fuck.
MonkaS.
Komm mal her. 561. Gleich aninstallen.
Fuck, das wird von FFM-Pack required.
Ich muss downgraden, ja.
Mal löschen, kannst du knicken.
Das brauche ich alles.
Was ist denn das?
Was ist das Problem?
Äh, nicht minus R. Downgrade, Mann.
Downgrade.
XZ.
Wie heißt das Ding?
Einfach.
Was haben wir denn hier?
546. Okay.
Aha.
Zeig mal her, das ist jetzt interessant.
Kritische Sicherheitsregeln.
Ja, ist das jetzt nur Fedora, oder ist das allgemein, das Package?
Hat das nur einer in Red Hat eingeschleust, oder ist das allgemein ein Problem davon?
Nee, Moment. Debian ist ja auch schon.
Jetzt bin ich aber...
XZ-Tools. GitHub.
Ist das das hier?
Ich checke es noch nicht so ganz, ehrlich gesagt.
Was ist da? Was ist da los?
Also, mich würde jetzt erstmal die Auswirkung interessieren.
So, haben wir irgendwo...
Hier, CVE.
Base Score C. Na dann.
Wenn sonst nichts ist.
Ich will kein Red Hat Ding.
Malicious Code was discovered in the upstream torbols of XZ.
Starting with version 5.6.
Through a series of complex obfuscation, lib.lzma.build.
Process extracts a pre-built object file from...
which is then used to modify specific functions.
Okay.
This results in a modified library by any...
Okay, also alles, was lib.lz benutzt hat, hat gelitten.
Das haben wir jetzt erstmal wieder downgraded.
Finally, it has ended up...
Ja, Red Hat. Alter, wie mir Red Hat immer auf den Sack geht mit ihrem Gelaber da.
Was juckt mich das, was in Red Hat ist?
Okay.
Also, sprich, der Typ, dem auch das geht...
...in der GitHub-Repo gehört, hä?
The Git distribution lacks the M4-Makro that triggers the buildup.
It was found that it interfered open SSH-Demon,
while it is not directly linked.
Okay.
Ja, aber so richtig klar, was da Sache ist,
habe ich immer noch nicht verstanden.
Ja, gut, ich habe jetzt downgraded.
Okay, alles klar.
Haben wir downgraded.
Was es für Auswirkungen sind, habe ich es noch...
...noch nicht ganz...
Aha.
Also, wenn man einen Server mit Public...
Ja, Moment, das ist eine der möglichen Ausnutzungen.
Ich weiß jetzt ja nicht, ob...
Man weiß ja nicht, ob das alles...
Wo eine Sache ist, ist vielleicht auch noch eine andere Sache.
Gaming on Linux, was auch immer das für eine Seite ist, Mann.
Lass mal bei Hacker News reingucken, was da drin steht.
Okay, das ist der Typ, der es ursprünglich gefunden hat.
Hier ist das Script.
Ja.
Okay, da gebe ich jetzt auf, rauszufinden, was das genau...
Inject.
Inject.
Was steht da?
TXT.
Okay.
Ich bin etwas verwirrt.
Was jetzt eigentlich Sache ist?
Ah, obviously, alles klar.
Gucken wir mal auf GitHub.
Was ist da?
Das ist ja hier wohl das offizielle Repo.
Simplify Security MD.
Was wurde da...
Was wurde da Simplified?
Ja, gut, das weiß man nicht, ob das der Contributor ist.
Das ist ja ein anderer...
Gut, man weiß es nicht, wer es jetzt wirklich gewesen ist.
Oh, das...
Er hat es schon als Bug getaggt.
So, so.
Ja, man weiß noch nicht so richtig viel, oder?
Aha.
Okay, hier gibt es noch ein bisschen mehr drüber.
Ich habe glücklicherweise kein Debian und sowas, was so neu ist.
Ich habe das nur auf...
Ähm, ArchVMs.
Na, jetzt, da ist viel...
Also, es geht anscheinend wirklich zum größten Teil um SSH-Verbindungen,
wo man sich dann...
Das ist natürlich für alles, was public im Internet ist, schon mal richtig mies.
Ich bin aber Desktop-mäßig auf einer Rolling Release, ja.
Also, wie gesagt, OpenSSH auf meinem Desktop hier juckt mich jetzt nicht so.
Aber, wie gesagt, wo eine Sache ist, können auch noch mehr Sachen sein,
die bloß noch keiner entdeckt hat.
Fragt mich, was da jetzt noch rauskommt, ja.
Na gut.
Gibt es mal wieder Highscore.
10 von 10, das gibt es jetzt ja auch nicht immer alle Tage.
Gut, das hatten wir gerade schon.
Arch, by the way.
Jetzt mal wieder hier.
Einmal ein Problem durch Rolling Release gehabt bis jetzt.
Interesting.
Na gut.
So, jetzt haben wir erst mal...
Jetzt haben wir erst mal einen Down gecradet.
Auf 5, 4, 6, 1.
Ich überlege gerade.
Da habe ich noch irgendwo 4Ms, wo das Neue drauf ist.
Eigentlich nicht.
Auf meinen Kisten, auf meinen Serverkisten, habe ich nur Deviant Bookworm.
Das ist nicht betroffen.
Und der Arbeit ist witzigerweise halt auch nichts,
weil Red Hat und uraltes Red Hat und noch älteres Red Hat.
Bin ich mal gespannt, was da jetzt noch rauskommt.
Gut.
Hätten wir das auch, beziehungsweise wir wissen, dass wir nicht allzu viel wissen.
Ich bin mal gespannt, ob da noch ein bisschen mehr rauskommt die nächsten Tage über.
Das ist auch ein bisschen...
Das ist ein bisschen...
Das ist ein bisschen...
Das ist ein bisschen...
Ja, so hätte ich das jetzt auch interpretiert.
So hätte ich es auch interpretiert, aber das sollte sich glücklicherweise in Grenzen halten.
Serversysteme mit SSH nach außen, die Rolling Release Arch verwenden.
Wobei Alpine...
Alpine kann durchaus sein.
Redis ist nicht mehr Open Source.
Ja, dann...
Ich benutze selten sowas.
Also ich habe Redis bisher nur als Dependency benutzt.
Weil es irgendwelche Projekte gibt, die ich nicht mehr benutzen kann.
Weil ich nicht mehr so viel Geld gebraucht habe.
Aber ich habe selbst noch nie was gegen Redis gebaut.
Durch welchen Comet ist es entstanden?
Ich glaube gar nicht durch einen Comet.
So wie ich das verstanden habe, ist in dem Tar ein zusätzliches Makro, was beim Build komische Dinger macht.
Ich glaube nicht, dass es im Git-Repo selbst drin ist.
Ach ja.
Arch, by the way.
Upgrade your systems and container images now.
As many of you have already read the upstream releases...
Ich habe vor 5 Minuten upgradet.
Also war ich safe, oder wie?
War ich safe?
Moment, da müssen wir selbst nochmal nachgucken.
Muss ich nochmal im Stream nachgucken, weil meine...
Muss ich nochmal im Stream nachgucken, weil meine...
Max, Max, Max.
Nicht doppelt und dreifach.
Weil...
Ich habe doch...
Ihr habt mal noch gerade im Stream gesehen, welche Version ich vorher installiert hatte.
Zeigt mal.
Aber hier habe ich schon Down gecreated.
So, was hatte ich installiert?
Ja, Leute, ich war nie betroffen.
5, 6, 1, minus 2 hatte ich.
Easy.
Easy.
Easy.
Dodged.
Easy.
Wir waren so Bleeding Edge, dass wir schon moderner als die super Bleeding Edge Sicherheitslücke waren, ja?
Arch, by the way.
Okay.
Guck hier, nur das Tar included extra.
Macro-Files.
Ja, wäre das mal in Rust programmiert, ne?
Na gut, ein Vorteil hätte das.
In Rust hättest du nicht so einfach ein M4-Makro einschleusen können und keiner hätte sich was bei gedacht.
Da hätten sie ja gerade, hä?
Vor allem, das würde ja während keinem Bild, ist es dort normal, dass irgendwelche M4-Makros ausgeführt werden.
Okay, also das heißt, ich kann jetzt wieder ganz normal upgraden, weil ich schon das gefixte habe.
Alles klar.
Gut.
Und nochmal Reboot.
Ich glaube, ich glaube, dann bin ich safe auf meinem System.
Ich wüsste nicht, wo ich diese zwei Versionen haben könnte.
Ich habe für alle Images, die ich baue, meistens auch Debian Bookworm.
Auf den Servern Debian Bookworm noch bestimmt irgendwo 20.04er Ubuntus oder sowas.
Aber nix.
Nichts, was das irgendwie hat.
Okay, wir sind safe.
Alles klar.
Gut.
So.
Jetzt, äh, Chat.
Jetzt kann ich euch erzählen, was wir heute machen.
Ich mache hier erstmal alles.
Alles starten.
Also, ich habe mir was gekauft.
Und da will ich heute mal ein bisschen mit rumbasteln.
Beziehungsweise gucken, wie man da, wie man da was gescheit basteln kann.
Ich möchte mir nämlich ein eigenes Zigbee-Gerät bauen.
Benutzt ihr auch Raw-Height?
Das, äh, das Dings, ähm, das Testing, Fedora?
Der benutzt, der benutzt wirklich Fedora?
Alter.
Früher hat er immer auf alles geschimpft.
Gut, der hat aber auch spezielle Anforderungen.
Ich, ich mag Fedora gar nicht, äh.
Ich habe da vielleicht so eine Abneigung wegen Red Hat dagegen.
Okay.
Also, ich habe mir was gekauft.
Ich zeige euch das mal kurz.
Und zwar, ich habe mir gekauft ein ESP32 C6.
So ein Board.
Äh, nicht, nicht Battle.
Beetle.
Das Teil habe ich mir gekauft.
Drei Stück.
Ihr wisst, ich kaufe mir nie eins.
Ich kaufe mir sonst immer drei, weil dann machen wir aber schnell immer irgendwelche Boards kaputt.
Und das ist ein ESP32 C6 Board.
Das hat integriertes WiFi 6.
Integriertes Bluetooth, Bluetooth BLE.
Man kann, äh, hat, äh, Ladeelektronik für, äh, Solar.
Und das Geilste ist, es hat Zigbee.
Onboard.
Und was mir schon eine Weile vorschwebt, ich will ein eigenes Zigbee-Gerät bauen.
Jetzt nicht irgendwie was, was ich vertreiben will oder so.
Also nicht falsch verstehen.
Ich möchte von meinem Fischteich im Garten die Temperatur übertragen.
Dass ich weiß, wann ich den im Winter zudecken muss.
Ich habe da bisher verschiedene Lösungen im Einsatz gehabt.
Aber so richtig gut hat nichts davon funktioniert.
Gerade weil das halt auch Batterie laufen muss.
Und hinten eben...
Ja, im Garten, im Gras quasi liegt.
Und deswegen habe ich mir gedacht, wir bauen einfach ein eigenes Zigbee-Device.
Da kommt ein, äh, da kommt ein Temperatursensor dann dran.
Ein DS28, oh, wie heißt die hier mit Temperature?
DS18B20 kommt da dran.
In der wasserdichten Version habe ich hier noch genug rumliegen.
So welche hier, das ist ein Temperatursensor.
Und hängst den da einfach oben ins Wasser.
Zigbee-Regensensor, da gibt es bestimmt auch schon fertig.
So, das hängt man dann.
Dann kommt man ins Wasser, hier kommt der ESP dran.
Und dann kommt das Ganze in eine wasserdichte Box.
Eine 800 mAh Batterie dran.
Denn, das nice an diesem Board ist, nicht nur, dass der alles das hier kann.
Der ist auch so gebaut, dass der im Deep Sleep nur...
Sollen wir mal die offizielle Herstellerseite angucken.
Dass der im Deep Sleep, und selbst wenn die Hersteller nur ein bisschen Mist erzählen,
16 Mikroampere braucht.
Das heißt, du willst nichts sagen, aber...
Oh, das ist bestimmt abfuck, oder?
Gibt es da irgendwie ein Getting Started?
Ja, da kannst du die Hälfte wahrscheinlich nicht mitmachen.
Da ist doch bestimmt die Hälfte wieder nicht implementiert.
Kein Zigbee und nix.
Das ist das letzte Mal, als ich mir das Projekt angeguckt habe, war schon auch das.
Dass die Hälfte an Sachen gefehlt hat.
Ja, nur weil das Ding den ESP32C6 unterstützt, heißt das nicht,
dass es automatisch, beispielsweise, Zigbee damit kann.
Ich sehe ja auch nix von Zigbee, weil man das ja nicht weiß, ja.
Da müsste man das...
Die Docks sind halt ein bisschen...
Vielleicht...
Ne, kannst du damit wahrscheinlich nicht machen.
Das ist immer das Problem dabei.
Du hast keine Beispiele dafür, weil du weißt eh schon, wie es richtig funktioniert,
bei den ganzen Controller-Geschichten, wenn du da nicht jahrelang mit arbeitest.
Die Hälfte davon ist nicht da.
Die Hälfte davon ist nicht unterstützt und du findest keine Hilfe zu.
Also, so sehr ich auch C++ hasse, in dem Fall,
oder eigentlich ja sogar nur RAW-C, das offizielle Framework davon,
da müssen wir durch.
So.
Aber, wo ich gerade dabei war.
Das Ding braucht im Deep Sleep plus 16 Microampere.
Das heißt, IoT Battery Calculator aufmachen.
Gehen wir jetzt mal hier was Realistisches ein.
Wir machen eine...
Machen wir mal die größere Batterie.
Okay, komm, ne.
Wir machen die...
Wobei, ich glaube, ich habe nur eine 1200mAh-Batterie.
Akku, muss man ja sagen.
Akku.
Battery ist ja nur so.
Also, 1200mAh-Akku, mal 20% ist okay.
So.
Jetzt tragen wir da mal was Realistisches ein.
Consumption during code execution 100mA.
Wohlgemerkt, man achte hier auf den Unterschied.
Milliampere versus Microampere.
Ja.
Das ist so ein kleiner Unterschied.
So.
Duration of code execution 2 Sekunden ist relativ realistisch.
2 Sekunden reichen dem Ding dicke dicke aus, um zu starten.
Ich wollte gerade sagen zu booten, aber wirklich kann man das ja nicht so nennen.
Wobei, offiziell immer noch einen Bootloader hatten, ESP32.
Also, 2 Sekunden reichen dem Ding dicke, um zu starten, um die Temperatur auszulesen
und per ZigBee zu sticken.
Das ist ja nicht...
Bei WiFi ist es immer ein bisschen schwierig.
Bei WiFi musst du ja erstmal deine ganzen Credentials austauschen, IP-Adresse bekommen
und so.
WiFi dauert immer ein bisschen länger.
Das kriegst du selten unter einer Sekunde hin.
Aber hier so 2.
Easy.
Easy.
So.
Sleep-Time lassen wir weg.
Consumption im Sleep-Mode.
Tragen wir mal ein.
16mA, was der Hersteller sagt.
Und jetzt...
Und jetzt passt mal auf.
Wenn man das Ding alle 2 Minuten aufwachen lässt, dann hält die Batterie nur 2 Tage
7 Stunden.
Das ist natürlich Mist.
So.
Aber es reicht ja, wenn das Ding alle 4 Stunden aufwacht.
Ja, sagen wir mal 4 to seconds sind alle 14.440 Sekunden.
Äh, ups.
Äh, 24 Tage.
24 Tage.
24 Tage ist aber auch Kacke.
24 Tage ist aber auch Kacke.
Das ist halt auch richtig, richtiger Schrott.
Ja.
Aber, jetzt passt mal auf.
Wenn man das nur alle 4 Stunden einmal aufwachen lässt, da hält es...
Das ist nicht realistisch.
Ja, das Ding entlädt sich auch beim Rumstehen.
Alle...
Aber das hält einfach mal locker über ein Jahr oder wahrscheinlich 2, wenn das im Garten
steht, ordentlich, ordentlich wasserdicht.
Und selbst wenn du das hier alles ein bisschen großzügiger hier auslegst.
Ja, dass man mal 20 braucht und so.
Du kommst da schon drauf...
Ne, also sagen wir mal die 800mAh Batterie.
Du kommst halt schon so auf 2 Jahre, wo das Ding an der Batterie läuft.
Das ist wirklich sehr großzügig jetzt alles.
Ja.
Das ist nice.
Und sowas will ich mir zusammenbasteln.
Alle 4 Stunden aufwachen.
Äh, oder alle.
Ja, alle 4 Stunden aufwachen.
Temperatur messen.
Zigbee verschicken.
Und tschüss.
Dazu müssen wir allerdings das Ding erstmal zum Laufen bekommen.
Ich hole jetzt mal die Kiste.
Wobei, ich hole nicht die Kiste.
Die Kiste hole ich später.
Äh.
Wir installieren jetzt erstmal die ganze Entwicklungsumgebung und sowas.
Also.
Das letzte Mal, als ich ESP32 Sachen programmiert hab.
Könnt ihr euch noch an den Stream erinnern, wo wir ESP32 und das Display hatten?
Ja.
Weißt du was das Gute ist?
Weißt du was das Gute ist?
Naja, nee.
Ähm.
Weißt du was das Gute ist?
Das Board hat sogar Ladeelektronik für Solarzellen verbaut.
Du kannst den einfach anschließen an die Batterie.
Lötest, ich weiß nicht an welche Pins.
Die hier.
Man sieht es hier irgendwie.
Die Solarzellen dran.
Und dann kann das Ding sogar über die eingebaute Ladeelektronik die Batterie chargen mit einem
Solarpanel.
Was sagt denn das Datenblatt der Batterie zu Temperaturen unter 20 Grad?
Keine Ahnung.
Wahrscheinlich findet ihr es nicht so geil.
Aber mal gucken wie lange es hält.
Ich bin gespannt.
Und.
Was immer eine Option ist.
Einfach das Kabel vom Sensor verlängern und das Ding in den Stall legen.
Da ist dann auch noch trocken zusätzlich.
Theoretisch könnte ich dort einfach auch einen USB Anschluss reinstecken und dann ist
alles gut.
Dann kann es sich per USB Strom versorgen.
Dann brauche ich den Rest nicht.
Hast du einen Akku bestellt?
Ich habe schon seit Jahren hier ein paar Akkus rumliegen, die ich selten brauche.
Das sind so diese kleinen viereckigen Dinger.
Diese.
Die.
Die.
Ne.
Wie heißen diese Teile denn?
Diese.
Ja diese Dinger hier.
Genau.
Solche Dinger.
Habe ich hier in unterschiedlichster Ausführung.
Bestimmt 6-7 Stück rumliegen.
Und.
Die brauche ich selten.
Das passt wunderbar auch rein.
Die Dinger sind klein.
Die kommen in so eine Box mit dem Controller rein.
Ich meine das Ding ist doppelt so groß wie der Controller.
Aber.
Aber.
Aber.
Aber.
Aber.
Aber.
Aber.
Aber.
Aber.
Aber.
Aber.
Aber.
Aber.
Aber.
Aber.
Aber.
Aber.
Aber.
Aber.
Fahrenheit ist die bisschen kostet wie der Controller.
Aber.
Chaos.
Ja.
Zumindest jetzt müssen wir erstmal die Entwicklungsumgebung in die ganzen Krempel zum Laufen kriegen.
Also.
das Letzte Mal, wo ich ESP Sachen programmiert habe.
Vielleicht erinnert sich noch einer an den Stream.
Wo wir das.
Wichtigste Projekt.
Überhaupt.
Programmiert haben.
Nämlich.
Man siehts hier in der Vorschau oder.
Ihr auch jetzt schon, glaube ich.
Das wichtigste Projektusst irm.
Das wichtigste Projekt überhaupt.
Und wie?
Wie war es eigentlich?
Ihr habt ja noch das ganze Programm.
Er ist für 2 in 3
im Display drauf.
Ich weiß gar nicht mehr, wofür ich das
verwenden wollte, das Board.
Ah, für
für
für meine Lora
Experimente
wollte ich das Board verwenden.
Korrekt, ich erinnere mich wieder.
Aber das habe ich aufgegeben.
Also es hat funktioniert, aber
irgendwie hatte ich nie Bock, das fertig
zu machen.
Ich sehe da C++, shit.
Da muss ich schon wieder gleich...
Aber gut, da müssen wir doch wahrscheinlich auch
durch.
Ja, und das letzte Mal, als ich ESP32
programmiert habe, habe ich das mit Platform.io
gemacht.
Das Ding ist nur, ich habe gelesen,
Platform.io
unterstützt den
ESP32 C6
noch nicht
komplett.
Die unterstützen den nur
mit ESP
IDF
und dann gibt es auch einige
Probleme, wie man auf GitHub lesen kann.
Ich habe da heute Mittag schon ein bisschen rumgeguckt.
Das heißt, wir werden es diesmal sein lassen
mit Platform.io, sondern
direkt ESP IDF verwenden.
ESP IDF ist das offizielle
Entwicklungsumgebung,
kann man das nicht nennen, das offizielle
SDK
von Espressif,
um
für das Teil
Software zu entwickeln.
Ich habe ESP IDF schon mal verwendet,
vor einer ganzen Weile.
Da war das
gar nicht so übel.
Die IDE-Unterstützung war aber Schrott.
Wir haben ein eigenes
SIGBI-SDK.
Ach, das ist eine Komponente, ne?
Das ist eine
ESP IDF-Komponente. Ja, dann ist gut,
das können wir gleich integrieren.
Hä?
Nee, ob ESP Home das schon kann,
weiß ich nicht. Nee, nee, wir programmieren
die Firmware komplett selbst.
So, und
deswegen machen wir
ESP IDF
jetzt manuell, so wie
der Hersteller sich das gedacht hat,
ohne Platform.io
und meine Lieblingskombination ist
eigentlich
ESP IDF
plus die Arduino-Komponente.
Weil dann kannst du den ganzen
Krempel von Arduino verwenden,
was in manchen Fällen
doch schon sehr viel angenehmer ist,
als das Raw
C-Only
ESP32-SDK.
Das muss man aber auch
erstmal zum Laufen bekommen.
Und das ist in Platform.io auch immer so
richtiger Krampf.
Und ich habe im Vorfeld schon geguckt,
wir müssen eine Alpha-Version verwenden,
weil
der Arduino-Core,
also der, nee, muss sagen,
quasi
die Arduino-Implementierung für den
ESP32 unterstützt
erst seit
der Alpha-Version
3.0,
äh, seit der Alpha 3 von Version 3.0
den
ESP32-C6.
Das ist also
höchst bleeding edge, was wir hier
verwenden. Bin ich mal gespannt,
deswegen ist es auch gut, dass wir es ohne Platform.io
machen, da ist weniger Krempel dazwischen, der schief
gehen kann. Da bin ich mal
gespannt, wie das funktioniert. Und ich habe
im Vorfeld gesehen, da bin ich mal gespannt, ob das
taugt. Es gibt jetzt
es gibt jetzt
ein offizielles
Espressif, also Espressif
ist der Hersteller von den ESP32
Boards. Es gibt jetzt ein offizielles
Visual Studio Code
Plugin. Ich bin mir
gar nicht sicher, wo ESP
Getting Started?
Ja. Weiß gar nicht, wo ich es
gelesen habe. Hier irgendwo.
Build your first project. Genau,
hier. Also Eclipse
Plugin werden wir schon mal nicht machen.
Nice.
Nicht, falsches, falsches, falsches
Emoji, Leute.
Also Eclipse,
das Eclipse Plugin werden wir auf jeden Fall
auf, also auf gar keinen Fall
verwenden, ja.
Wir könnten das, wir könnten
die, die VS Code Extension
verwenden. Oder, was
ich ja persönlich bevorzugen
würde, ist, wir gucken uns die
Leute, was haltet ihr davon? Wir gucken uns die
VS Code Extension mal an und gucken, ob
die taugt. Allerdings muss ich sagen,
C und C++ in Visual Studio Code
geht, aber schön ist es nicht.
Und außerdem muss ich ja mal
mein
JetBrains IDE
All IDE Package
ordentlich ausnutzen
und C-Line installieren.
Oh, fuck!
Der Bug ist wieder da!
Nein, shit!
Der Forever Bug ist
wieder da, shit!
Och, der ist schon wieder.
Okay.
Warum, warum
passiert das manchmal? Was ist das für
ein Schrott, ey?
Und es geht wirklich, der Witz ist,
das dreht nur auf,
wenn ich in der Linux VM
die JetBrains Toolbox aufmache.
Ich hab echt absolut
keinen blassen Schimmer, woran das
liegt, was das Problem ist.
Toolchain in Emacs, ja, natürlich,
ist klar.
Ja, Stalmon
approved.
Stalmon approved.
Leute, klärt mich auf, was ist
SE80?
Aber wenn ihr da so eine Ableitung
dagegen habt, ist es bestimmt Oracle
oder irgendwie sowas.
Hat Oracle eine eigene Idee?
Was ist SEA?
Oh, SAP!
MonkaS!
Da müsst ihr mal, ehrlich, Leute,
da lag ich gar nicht so
falsch mit Oracle, oder?
Zwar knapp dran vorbei,
aber es ging in die richtige Richtung.
Hast du dir mal
OTA-Flashlights?
Mit ESP32 angesehen?
Wir haben sogar im Stream schon einen eigenen
OTA-Flasher
programmiert, der über
HTTPS flashen konnte.
Encrypted.
Muss man im Streamer schief gucken.
Da haben wir einen eigenen
Mini-HTTP-Server gebastelt,
der nicht viel mehr konnte,
als 200 OK
und Text zurückzuliefern,
aber er konnte
TLS-Verbindung aufbauen.
Sea Lion Nova ist echt schick.
Probieren wir mal auszukleiden.
Okay, jetzt PRAGUE, Leute, PRAGUE.
Toolbox starten.
Ich bewege nichts.
Ich lasse die Finger von meiner Maus weg.
Ich hoffe, meine VM kackt jetzt nicht ab.
Okay.
Wir machen mal einen Update.
Schadet nichts.
Okay, Sea Lion.
Was ist denn der Unterschied zwischen Sea Lion Nova und Sea Lion?
Warum haben die zwei?
Ist das quasi Sea Lion NG?
Wurde der Flash auch signiert?
Haben wir Checksum-Überprüfung gemacht?
Das weiß ich nicht mehr.
Doch, ja, haben wir.
Klar haben wir das gemacht.
Ich bilde mir ein, die Update-Funktion
macht automatisch eine Checksum-Überprüfung.
Ich bilde mir ein,
wir haben Checksum-Überprüfung gemacht.
Wir haben Checksum-Überprüfung gemacht.
Sea Lion Nova is a preview of Sea Lion,
which uses the ReSharper C++
Ryder C++ language engine instead of the...
Hä?
Warum hat Ryder C++...
Moment, Ryder hat C++?
Was, was?
Ach so!
So mit signiert meinst du?
Nee, das glaube ich nicht, dass wir das gemacht haben.
Man kann mit Ryder C++ Projekte machen?
Nee, oder?
Das, das...
Ich trau mich nicht, das Fenster...
Das Fenster...
Nee, kann man nicht.
Okay, wir installieren Sea Lion Nova.
Also meine Toolbox ist in der VM echt ziemlich am abcutten.
Aber erstmal testen wir trotzdem das Visual Studio Code Plugin.
Weil, wenn out of the box funktioniert,
ist ja erst schon mal nicht verkehrt.
Aber ich kann mich noch das letzte Mal an ESP-EDF erinnern.
Das war auf der Command Line echt angenehmer,
als in der IDE zu bedienen.
Ich glaube, das liegt an der OpenGL Implementierung
oder an dem Durchschleifen von VMware.
Ich hab schon, ich hab schon manchmal
einen älteren OpenGL Standard geforst
per Environment Variable.
Dann ging's besser.
Okay, machen wir Firefox auf.
Restoren wir das Ganze wieder.
Machen wir mal hier einen Ordner.
Moment, Temp haben wir doch sicherlich schon als Ordner.
Ja, mkdir ESP32.
Ist alles sehr Temp hier drinne.
Wie man sieht, sind Sachen von vor drei Jahren.
Das ist halt Temp, ne?
So, also, getting started.
Visual Studio Code Extension.
Also, if you are on Linux und Mac.
Alter.
MonkaS.
If you are on Linux and install ESP-EDF prerequisites.
Machen wir doch.
Abhängigkeiten.
Alter, was ist mit denen los?
Die China-Chinesen, man.
Die wissen, was geht.
Die haben einfach eine Anleitung für Ubuntu,
Debian, CentOS und Arch Linux.
Richtig Gigachats am Start.
Ich könnte wetten, ich hab den meisten
Krempel eh schon installiert davon.
Wenn man jetzt noch sein Passwort richtig hat.
Wenn man jetzt noch sein Passwort richtig eingeben könnte.
Was ist HiRedis?
HiRedis.
Minimalist C-Client for Redis.
Okay, das brauch ich unbedingt für den ESP32.
Ganz wichtig.
So.
Was kommt als nächstes?
Download and install Visual Studio Code.
Okay.
Das haben wir auch schon gemacht.
Was meint ihr, taugt das Plugin?
Ich persönlich hab da meine Zweifel, ehrlich gesagt.
Weil die letzten Versuche, die ich damit unternommen hab,
waren suboptimal, um's mal schön zu sagen.
So, open.
Open Extensions.
Und dann sollen wir was suchen?
Ja, ja, bla, bla, bla.
Search für die ESP-EDF-Extension.
Ich werd erstmal die ganzen...
Okay, das updatet jetzt erstmal.
Reload.
Ja, danach, wenn's wirklich totaler Schrott ist,
machen wir's mit JetBrains.
Okay.
Wir können, glaub ich, mal ein paar Plugins...
MonkeySee.
Brauchen wir doch nie wieder.
Und SICK.
Können wir mal uninstallen.
Das YAML lassen wir drauf, Tailman und das...
Aber Monkey...
Ob ich jemals nochmal für meinen Garmin was bauen will,
das war doch eher nur just for fun.
Ich wollte das doch nie wirklich ernsthaft benutzen.
Meinung zu SICK in einem Satz?
Die haben ne komische Pointer-Syntax.
Da musste man irgendwie so komische Dinger machen.
So was musste man da machen.
War ganz furchtbar weird.
Da musste man Sternchen Punkt Sternchen machen in SICK für Pointer.
Das hat mich enorm...
enorm verwirrt.
Warum eigentlich C++?
Ja, so ne Mischung aus C und C++.
Äh, C++, weil Arduino C++ ist.
Und ich ganz gerne auf Arduino-Sachen zurückgreife.
Okay, also ESP-IDF-Extension installieren.
Terraform können wir auch mal wieder runterschmeißen, oder?
Terraform...
Ach komm, vorbei.
Schadet, schadet auch nix.
ESP-IDF...
Gibt es eigentlich ein JetBrains-Plugin?
Nee, aber man braucht dafür gar kein Plugin.
Man kann ja den ganzen Krempel auch per CLI bedienen und JetBrains dann nur für C verwenden.
Das ist das...
Das ist das, was ich...
Eigentlich auch...
Professional Super IDE.
Alles klar.
Okay, ESP-IDF install.
Wie geht's weiter?
Configure ESP-IDF-Extension.
Configure ESP-IDF-Extension.
Das ist quasi eher so ein Install Wizard, oder?
Was sollen wir dann choosen?
Express.
Express Advanced.
Ja, Express.
Komm her.
Select Download Server.
Shithub.
Äh, okay.
5.1.3 müssen wir verwenden.
Nicht 5.2.1.
Wir müssen 5.1.3 verwenden.
Weil die Arduino-Komponente, glaube ich, maximal auf 5.1.3 funktioniert.
Das Ganze soll nach Hause kommen.
Das Ganze soll nach HomeMax-ESP installiert werden und nach HomeMax.expressive.
Python-Version.
Ja, gut.
Install.
Bam.
Haben sie sich ja richtig Mühe gegeben mit ihrem Visual Studio Code Plugin.
Wäre es nicht sinnvoller gewesen, anstatt so ein Visual Studio Code Plugin zu bauen,
irgendein Shell-Skript zum Installieren oder so?
Das ist weniger fancy, aber simpler.
Okay, ich mein, dann geht's nicht für Windows.
Welchen Sensor willst du verwenden?
BME 2080?
Nee.
Ich brauch doch kein BME 2080.
Nee.
Ich brauch einen wasserdichten Temperatursensor.
Ich benutze den hier.
Leute, ich hab heute was in Go gesehen.
Oder in den letzten Tagen.
Nee, gar nicht heute.
In den letzten Tagen was in Go gesehen.
Da hab ich mir auch wieder gedacht, also ein bisschen abfuck ist die Sprache schon.
Zu 80% finde ich es ja noch irgendwie nachvollziehbar.
Und bei Go kann man immer sagen, okay, dann schreibt man es halt explizit hin als mit Magic.
Aber heute hab ich wieder was gesehen.
Da hab ich mir auch gedacht, was ist das für ein Schwachsinn?
Ähm, während das installiert, mal so halb Pseudocode-mäßig zeige ich euch das mal.
Wenn man in Go...
Wir tun mal so, als wäre es ein Go-File, okay?
Wenn man in Go sowas hier schreibt...
Ah, nix, okay.
Ja, es ist auch, ist es wurscht.
Wir tun einfach, dann sind wir in der Funktion drinnen.
Wenn man hier sowas schreibt, ähm, wenn man eine Vorschleife macht...
Ich weiß die neue Syntax nicht, Leute.
Ist, ist, ist das richtig?
Und dann sagt man...
Irgendwie Max, Max...
Max in 64 oder so?
Zumindest...
Zumindest iterate, also so ungefähr.
Ja, so ungefähr sieht das aus.
Ich bin mir nicht ganz sicher, aber ist egal.
Also sprich, wir counten vor...
Vielleicht, vielleicht muss man auch...
Ich glaub, man muss doch 0 Punkt Punkt oder irgendwie...
Oder, ja, wie geht denn das?
Ich schreib's jetzt einfach mal so hin, weil ich zu pepega bin, Go aus dem Kopf richtig zu können, ja?
Go Range Loop.
Okay, also anscheinend nur so, ja.
Also, was Go, was Go hier macht, ist...
Das zählt von 0 bis...
Ja...
In... Maximum von...
Was in N64 reinpasst.
Und jetzt kommt der Hit, Leute, ratet mal.
Welchen Typ hat I?
Das find ich auch, das find ich gut so.
Jetzt kommt der Hit.
Ratet mal, welchen Typ hat I?
Man wird sich denken, ja, N64, weil wie soll das sonst funktionieren bis N64?
Nein!
Es ist N32.
Es ist N32.
Ja, glaubt ihr mir nicht?
Moment.
Ich kann's euch demonstrieren.
Hier haben wir noch, hier haben wir noch Krempel.
Was ist das denn hier, was wir da am Start haben?
Okay.
Also.
Range.
Four.
Four Range?
Okay, nice.
Nicht Collection.
Ähm, ja.
N64 oder...
Boah, wie heißt denn das in Go, Mann?
Max, N?
Max N64?
Okay, I ist vom Typ...
N.
Untyped N?
Was?
Was auch immer ein Untyped N sein soll.
Whatever.
Zumindest es ist definiert, dass die Count-Variable in einer Range-Loop, das sagt der Go-Standard, immer ein Int sein muss und nie ein N64.
Das Ding ist...
War's so?
Ne, das geht nicht.
Da ist ja, das ist ja nur...
Moment, weil?
Hä?
Ne.
Was ich mich frage ist...
Was passiert...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
Also entweder habe ich was ganz grundsätzlich falsch verstanden,
aber damit hatte ich letztens Probleme,
weil ich ein N64 als Index verwenden wollte und er das nicht wollte.
Also wir können es ja mal ausprobieren, ja?
Überleg mal, Map.
Ach, Go, Alter.
Dieses Go-Syntax ist teilweise so abartig.
Ich kann mir den Scheiß einfach nicht merken hier.
In N64, String oder so, hier, war, blub, gleich, make.
So ging das doch, gell?
So, blub ist quasi jetzt ein Dictionary mit KeyInt und einem ValueString.
Und jetzt passt mal auf, wenn ich jetzt versuche, das hier als Index zu verwenden,
sagen wir hier fnt-brindeln, dann funktioniert.
Sicher?
Weil ich hatte ein ähnliches Problem und da ging es nicht, weil Int, kein N64.
Ach, Moment, ja doch, so rum funktioniert es ja logischerweise,
weil ein Int32 logischerweise immer in N64 passt.
Äh, was habe ich denn dann letztens?
Aber es macht trotzdem noch keinen Sinn.
Egal, wir halten uns jetzt nicht mit, zumindest macht es an der Stelle keinen Sinn, dass es ein Int ist.
Wenn man I nicht benutzt, dann ist es ein Int.
Wenn man I nicht benutzt, dann ist es ein Int.
Wenn man I nicht benutzt, dann ist es ein Int.
Wenn man I nicht benutzt, dann ist es ein Int.
Wenn man I nicht benutzt, dann ist es ein Int.
Man braucht schon, aber wenn man I braucht...
Ach ja, und wenn ich jetzt eine Range mache über meine Map, die ich eben hatte, dann ist es ein Int64.
Okay, so.
Wo sind wir stehen geblieben?
Eigentlich wollten wir uns mit dem ESP32 auseinandersetzen.
Ja, aber das ist nicht nur in Go so.
Das ist nicht nur in Go so.
Das ist...
Wie heißt das Ding?
Ähm...
I triple E...
Floating Point...
Gedulds...
Ich weiß nicht, wie der Standard heißt.
Ja, genau!
754, das klingt gut.
Das stimmt wahrscheinlich sogar.
Ja, äh...
Nee.
Ja, doch.
Dort, wo es sowas wie...
Negativ unendlich und positiv unendlich gibt und solche Dinger.
Also, wie geht's denn jetzt weiter?
ESP32.
Bam.
Express haben wir gemacht.
If you choose Express Mode.
Haben wir, haben wir, haben wir, haben wir alles gemacht.
Haben wir auch.
Download ist fertig.
Manual Configuration.
All settings have been configured.
Ja, okay.
Basic Usage.
Show Example Projects.
Ich meine, das ist ja cool, dass sie das hier alles eingebaut haben, aber...
Okay.
Hello World Example, das schadet nie.
Äh...
Was?
Hä?
Warum muss sowas unbedingt über Visual Studio Code laufen, Mann?
Was?
Show?
Blink?
Nee, nee, wir wollen nix blinken lassen.
Hello World reicht mir.
Alter, das ist ja mal...
Das ist ja mal hardcore kompliziert über Visual Studio Code zu...
Zu setuppen.
Weißt du was?
Scheiß auf Visual Studio Code.
Wir machen's jetzt über die Command...
Outline.
Gucken, ob ich das noch auf die Reihe kriege.
Das war irgendwie EDF.
Ach so, in welchem Ordner hatten wir den Krempel jetzt überhaupt installiert?
Ähm...
ESP.
Da stand doch New Project.
Ja, aber dann eben...
Das ganze Geklicke hier, da drehst du ja durch bei.
Aus irgendwelchen Gründen hat er die Extension nicht mehr, oder?
New Project.
Enter Project Name.
Open OCD Configuration.
Open OCD Configuration.
Open OCD Configuration.
Open OCD Configuration.
Open OCD Configuration.
Open OCD Configuration.
Open OCD Configuration.
Open OCD Configuration.
Open OCD Configuration.
Was ist denn Open OCD?
Ach, das ist Debugging Krempel, oder?
Äh, komm.
Das mit zu...
Nee, das ist mit zu Weirdchamp.
Ich mach das über Commandline.
Da, da drehst du, da drehst du doch durch hierbei.
Die haben doch irgendwo Example Projekte.
ESP EDF Getting Started.
Ich hab das schon mal gemacht.
Das ist halt...
Ist lange her.
Hier.
Start Project.
Start a Project on Linux und Windows.
Hier.
Hier.
Hier.
Da steht es doch.
Also, wir müssen in das Example-Projekt.
EDF Path.
So, wo ist das Ganze installiert?
Hier.
Also, cp, esp, esp-edf.
Und gibt es da jetzt ein Projects, Example oder sonst was?
Seht ihr irgendwas mit Example?
Ah, hier, Example.
Getting started.
Was soll man kopieren?
Getting started, hello world.
Ja, perfekt.
Pappen wir das doch hier rein.
Dann sind wir am Start.
Hello world.
So, und das öffnen wir jetzt.
Scheiß auf Wüschle, so wie es kommt.
Und das öffnen wir jetzt in CLion.
CLion, esp, edf.
Ah, guck mal, die haben da auch was.
Was, install?
Ach so, nee, das ist wie man den Kram installiert.
Ja, das haben wir ja schon gemacht.
Menü-Config.
Das können wir dann machen.
Oder?
Ah, man muss doch Environment-Variablen exportieren.
Okay, wo ist das?
Export, es...
Boah, Alter, mein Kopf platzt.
Was?
Oh, Moment, jetzt, jetzt blinke ich nicht mehr durch.
Das ist wahrscheinlich auch der Grund, warum es kein EDF-Command gibt.
Also, was muss ich exportieren?
esp-edf-export.sh gibt es.
Gibt es da sowas?
export-but?
Ah, das Script should be sourced, okay.
Ah, jetzt hat er auch die Dinger gesetzt und jetzt funktioniert das auch, oder?
edf, Python-Build.
Ja.
Einfach mal 902 Source-Files bauen, alles klar, let's go.
Why not?
Aber immerhin.
Also, das ging deutlich, DEUTLICH extrem viel einfacher als meine letzten Versuche mit ESP.
EDFF.
Command-Line-Beste hier.
So.
Und jetzt?
Wo kann man jetzt einstellen, was man für ein...
Set-Target?
Ah, hier.
Set-Target, ESP32, ESP32, C3, C6.
Nee.
C6.
Ups.
900 Plus Files for Hello World.
Ja, das ist fast wie JavaScript, ja.
Ja.
Aber gut.
Der muss halt sein ganzes SDK einmal kompilieren.
Halt viel, auch ob das brauchst du oder nicht.
Okay.
Set-Target, ESP32, C.
Darf man das nachträglich noch ändern, wenn man schon mal gebildet hat?
Anscheinend.
Okay.
Nice.
Ich hab nix gesagt.
Compile Magic.
Hat funktioniert.
Menüconfig.
Ja, das machen wir dann.
Da kann man dann zig, zig Sachen einstellen.
Okay.
Okay, Configure ESP CMakeProject in C-Line.
Also, wir sollen das einfach öffnen, wenn ich das richtig, richtig sehe.
C-Line.
Wobei, wir öffnen das mal lieber so.
Was haben wir denn hier noch offen?
Ach, das war, wo wir Advent of Code mal in C++ probiert haben und ich so gekotzt habe, dass ich aufgehört habe, ja.
Open.
Moment, wie hieß das?
Wo wollte ich das?
Temp, ESP32, Hello World.
Open.
Trust.
Kannst du überschreiben.
Okay, Projekt ist auf.
Ähm.
Ne, Bild mach ich über Command Line.
Ich brauch hier kein Bild.
Okay, was soll ich, was soll ich machen?
Source the Environment.
Go to Settings, Toolchain.
Toolchain.
Toolchain.
Settings.
Hä?
Was wollen die von mir?
Add Environment soll ich anklicken.
Ach, hier.
Add Environment from File.
Und da soll jetzt das Export rein.
Also, quasi, äh, nicht wirklich.
Ähm.
Hab ich das hier oben irgendwie?
Ach, hier doch.
Es ist doch, und das funstern einfach so?
Ey, das ist um Längen einfacher geworden, wie das letzte Mal.
Letztes Mal ist schon vier, fünf Jahre her, oder vier, vier Jahre her bestimmt.
Und das war richtig abfakt, das zum Laufen zu bekommen.
Okay, das war's jetzt, oder was?
Und jetzt?
Main?
HelloWorld.c?
Und der erkennt jetzt alles, oder was?
Ne, der erkennt nix.
Es wär ja auch zu einfach gewesen.
Der hat nix, der hat nichts an AutoComplete und sonst was.
Ich, ich, ich mach das nochmal zu und wieder auf.
Ups, nochmal Visual Studio Code.
Reloaden das nochmal, vielleicht geht's dann.
Ich will kein Profil.
Ne?
Das ist, das ist broken.
Das macht einfach gar nix an der Stelle.
Hab ich irgendwas vergessen?
Toolchain.
Ne.
Vielleicht, vielleicht ist es hier, ne?
Ich hab das hier, ja.
Ich hab das hier, ja.
Ich hab das hier, ja.
Ich hab das hier, ja.
Ich hab das hier, ja.
Ich hab das hier, ja.
Ich hab das hier, ja.
Ich hab das hier, ja.
Ich hab das hier, ja.
Ich hab das hier, ja.
Toolchain.
Ne?
Vielleicht, vielleicht ist Nova noch ein bisschen verbuggt und deswegen funktioniert das nicht?
Reset Cache, ja.
Okay.
Reset Cache.
Hat er schon gemacht.
Ne.
Gibt kein AutoComplete und nix.
Das ist natürlich ein bisschen doof.
Dann...
Muss ich einmal ein Bild machen vielleicht, ja?
Bild.
Aber hab ich ja schon.
Hm.
Äh.
Ich glaub nicht, dass es...
Äh.
Ich glaub...
Ich glaube das liegt hier an...
An Nova, oder?
Unten steht Context Loading.
Wo?
Hier.
Hier.
Der, der loaded nix.
Resolve Context.
Ja, ich glaube da ist...
Ich glaube da ist irgendwie noch kaputt.
Was heißt hier oben off?
Ja, ich glaube...
Ich glaube das ist noch ein bisschen kaputt.
Kann das sein?
Wir installieren einfach mal ein normales C-Line und gucken wie es funktioniert.
Okay.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
Okay.
So.
Okay.
Okay Und was wir jetzt machen, wir machen nochmal das C-Line und gucken wie es da ist...
Ne das Endscript hat ja funktioniert.
Ich trau mich nicht, es anzuklicken.
Kommen wir machen das normale C-Line.
Weil ich mein zumindest ein bisschen autocomplete und sowas ist schon nett...
Ist schon nett verkehrt.
Setup Emex.
Alter!
Hört mir mal auf, man!
Emex hab ich jahre nicht mehr verwendet, ich hab auch nicht wieder vor damit jemals
was zu machen.
E- Exit.
Daddy in German能 auf stereotyp sein.
Normales C-Line starten.
Do not import Settings.
Okay.
open max temp esp2 wenn man das richtig schreiben kann esp32 hello world
wir trusten ach hier ploppt es jetzt gleich auf environment from file zack next aber er hat es
er hat ja den kram bekommen wenn ich da mist reinschreibe ja da geht's auch kaputt next
profile debug ich lasse es hier auch mal weg und gucke ob es dann funktioniert ok main c
ja das sieht schon besser aus okay das scheint mir irgendein problem mit nova noch zu sein und
erst mal das allerwichtigste ja jetbrains mono soll mir recht ein bisschen größer wenn es geht
18 aber erkennt wenigstens was
also das hat schon mal funktioniert jetzt kommen wir hier c++ steil verwenden welche
c++ standard ist da eigentlich jetzt angesagt gibt es irgendwie die möglichkeit in c++ selber
auszulesen was für ein c++ c++ ein c++ version standard standards ein musik okay ja das ist zwar
Das ist zwar 14 Jahre her, aber das ist C++.
Da gibt es das immer noch.
Underscore, Underscore, C++.
Obviously.
Weiß doch jeder.
Und das steht bei mir auf, auf gar nichts.
Nice.
Ach, Moment, das ist ja auch kein C++-File.
Das ist ja ein C-File.
Moment.
Wie stelle ich das jetzt um auf C++?
Kann ich hier sagen, Main, C-U, C-U-H?
Was ist denn das?
C-U, was ist das für ein File?
Ach, CUDA-Kram.
Okay.
Main, Add to Targets.
Ey, mach lieber nicht an meiner CMake-Config rum.
Das mag...
Okay.
Just C++-Things.
Ich habe keine Ahnung, was das hier sein soll.
Warum das da?
Ja, und weshalb?
Klar, so ein Kack da.
Gehen wir fort.
Ich will einfach nur wissen...
Ach so, nee, wie heißt der Kram hier jetzt?
Void App Main.
Okay.
C plus...
Moment, Main.h?
Was zum...
Alter, geh weg.
Delete.
Main.c++.
Genau.
Perfekt.
So.
C...
Hier, C++.
Steht auf welcher Version?
Was?
Okay, muss ich den Kram jetzt da noch rüber kopieren?
Was?
Cannot...
Warum nicht?
Warum kann er das nicht auflösen?
Ich will wissen, welche C++-Version ich verwende.
Okay, wir machen mal...
Wir machen mal das...
Die Anleitung.
Die Anleitung weiter, ja?
Also, das haben wir hier schon.
Build a Project.
Flash, aber das brauchen wir nicht.
Das mache ich über CNI.
Doch, das ist bestimmt...
So, das hier weg.
So, getting started.
So, das ist das.
So, das ist das.
Das haben wir kopiert.
Connect your device.
Das brauchen wir...
Das mache ich dann, wenn wir den Kram eingeben.
So, set target.
Das habe ich schon gemacht.
Set target.
Set target.
Moment hier.
Target.
ESP32C.
Haben wir schon gemacht.
Ah, vielleicht muss man erst mal Menü-Config machen.
Das kann natürlich sein.
Da muss man dann so Dinge einstellen wie...
Ja, was...
Was muss man...
Standardmäßig einstellen, ehrlich gesagt.
Fällt mir gar nicht so viel ein.
Die...
Die Flash-Size.
Die könnten wir standardmäßig einstellen.
ESP32C6.
Was hat denn das Ding für eine Flash-Size?
Ja, die Konsolen.
Das lasse ich default.
Flash.
Flash-Size.
4 MB.
Okay.
Oh, nice.
End-Curses-Interface.
Okay, was gibt es hier alles?
Gibt es das Ding eigentlich auch im...
Moment.
Da gucken wir jetzt mal, ob es den Kram jetzt auch in Visual Studio Code gibt.
Eventuell ist das hier in Visual Studio Code ganz nice zu benutzen als Plugin.
Menü-Config?
Ah, gibt es natürlich auch.
Nice.
Äh...
Aber errohrt irgendwie.
Gut, dass ich das über Command-Line mache, Leute.
Gut, dass ich das über Command-Line mache.
Du hast kein Projekt angelegt?
Na klar, hier.
Ich habe sogar den Ordner offen mit dem Projekt drin.
Ähm...
Moment.
Der guckt im falschen Ordner.
Der guckt im falschen Ordner.
Ähm...
Kann man das nicht sagen?
Kann man das nicht sagen?
Open diesen Ordner.
Open Folder.
ESP32.
Hello, World.
Menü-Config.
Ah.
Oh, guck mal da.
Okay, das ist vielleicht schon ein bisschen besser.
Jetzt habe ich diesen doofen VS Code.
Ordner, Mann.
Äh, das ist dann schon ein bisschen besser, glaube ich, hier.
Wobei, Leute, was meint ihr, was mich weniger nerven wird?
Das Encurses-Interface oder Visual Studio Code?
Bin ich unschlüssig?
Beides wird mich nerven.
Okay.
Ja.
Ich wollte Flash-Size einstellen.
Okay, hier kann man oben suchen.
Flash-Size 2 MB.
Wir haben 4 MB.
Was?
Okay.
Ich meine, von der Idee her.
Was gibt es hier alles zur Auswahl?
Bootloader-Config juckt mich so überhaupt nicht.
Kann man hier drinnen auch suchen?
Ah, vielleicht.
Guck mal hier.
Prozent.
Flash-Size.
Naja, das ist eklig.
Das ist...
Da finde ich schon gar nicht...
Ach doch, das erste.
Flash-Size.
Hier.
Ah, Serial-Flasher-Config.
Ja, da hätte ich selbst drauf kommen können, dass das da drunter steht, oder?
Easy.
Okay, und jetzt, dann machen wir das...
Komm, wir machen Visual Studio Code jetzt komplett zu.
Und jetzt sagen wir Save.
Alter, wie lange?
Save denn das?
Ach nee, das...
Man muss einfach Enter drücken.
Das ist fertig.
Quit.
Alles klar.
So.
Kann ich jetzt nochmal bilden?
Ja.
Okay.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
Gut.
Okay, erst mal 925 C++-Dinger übersetzen und jedes mal neu.
Easy.
So.
Weil´s geht.
Okay.
Gut.
So, okay.
Dann hole ich doch jetzt mal...
Dann hole ich doch jetzt mal eine Box mit dem Controller.
Und pack den mal aus.
A nice Sung Packaging für so ein kleines Scheiß-Ding, muss man sagen.
Also, drinnen in der Box, ich habe halt keine Kamera und ich habe keinen Bock hier die GoPro
aufzuhängen und das Ringlicht anzumachen.
Also man sieht eh nix. Man sieht eigentlich
nur, dass ich dieses Ding hier auspacke.
Ja, genau so sieht's auch aus
in echt. So,
es wird geliefert,
eigentlich in einer
nahezu leeren
Karton,
so kleinen Schachtel
aus Pappe. Das einzige, was
dabei ist, ist zwei Pinheader
für da und da.
Das war's. Mehr ist nicht dabei.
Bei dem anderen ist eine Plastiktüte
ASMR-Video.
Nee, noch
nicht. Und eine Plastiktüte.
Warum das nochmal in einer Plastiktüte drin ist, weiß ich auch nicht.
Plastiktüte mit dem Board drin.
Oh,
die geht kaum auf.
Okay, aber USB-C
Anschluss, schon mal nice.
Jetzt brauche ich
einen USB-C-Stecker.
Und jetzt machen wir mal
blum, blum, blum, blum, den
Computer dran.
Und dann grillst du meinen USB-
Controller.
Oh, da ist eine LED drauf, die blinkt, Leute.
Schauen wir doch mal gerade,
ob sich das Ganze auch USB-mäßig
angemeldet hat.
Ja,
wir haben erkannt einen
Espressif USB
Serial Debug Unit
auf TTYACM0.
TTYACM0.
Obviously, was auch sonst.
Okay,
ESP, Pi,
gibt es sowas wie Monitoring
oder Monitor oder Serial
oder sowas?
Ähm, Clean
Flash
brauchen wir dann.
Was ich damit vorhabe, einen Temperatursensor
für meinen Fischteich zu bauen,
der über ZigBee die Temperatur schickt.
Debug UI
im Browser. Leute, debuggen.
Ich glaube, es geht los. Da wird
Print F debugged, sonst nichts.
Monitor.
Okay, also
ESPF Monitor.
Da muss man jetzt bestimmt noch
Wie hieß das Ding? ACM
Irgendwas. Ah, ich hab's mir
hier doch, ich hab's mal kopiert.
No ports found.
Yeah.
Minus, minus, help.
Oh, Gott.
Port
DEV
TTYACM0.
Äh,
was?
Stimmt, es kann sein, dass ich nicht in der richtigen Gruppe bin.
Ich bin nicht in der richtigen Gruppe.
Ich bin nicht in der richtigen Gruppe.
Ich muss in
UUCP rein, da bin ich garantiert
nicht drinne.
Punkt. Permission denied. Ja.
Ich mein, die Fehlermeldung ist natürlich
ein bisschen doof, aber
das möchte er mir
bestimmt sagen.
Und jetzt die große Frage, Leute.
Add User oder
User Add?
User Add.
Äh,
User Add, UUID, Max, war das doch Add User?
Ich weiß, dass es mit User Mod geht, aber es ging mit User Add oder Add User
ging das auch.
Ist ja doof.
Und wisst ihr was noch?
Wisst ihr, was die richtig coolen Leute machen?
Die machen das gar nicht mit irgendwelchen Tools.
Die gehen in ETC Group und suchen sich das raus und schreiben dann den User hinten dran.
Bam. So machen das.
So machen das die richtigen...
Alles andere ist bloat.
Wer benutzt
schon, ne, Leute,
Command Line Tools?
Wenn man das auch mit Vim machen kann.
Ich fürchte aber, ich muss
jetzt re-loggen.
Oder kann ich ich selbst werden?
Dann funzt das nämlich,
glaube ich.
Ja.
Was ist das?
Ich kann das Ding ketten?
Und da kommt der Output raus?
Ich brauche dieses komische IDF-Monitor Zeug gar nicht.
Das ist definitiv neu.
Das ist neu.
Das ging früher nicht.
Ja, das ist ja mega.
Da brauchen wir den ganzen Kram gar nicht.
Lassen wir einfach hier oben immer ein Monitor laufen.
Fertig.
Ja, easy.
Das war jetzt Zufall, dass das funktioniert, also dass ich das rausgekriegt habe.
So, Bild.
Äh, warte mal.
Oh, kurz zu.
TMP, ESP32,
Hello World,
Bild,
Export,
Bild und jetzt Flash.
Wahrscheinlich einfach nur.
Okay, Flash.
Bam. Okay, B.
B, Dev.
Äh, das ist ja nicht B, sondern
P meine ich,
nicht B. Ah, B gibt's auch.
P.
Wollte ich eigentlich auch schreiben.
Ach so, ja, weil ich ja noch nicht meine Berechtigung geflasht.
Ich müsste mal re-loggen für meine Berechtigung.
Export.
Okay, jetzt geht es bestimmt mit dem Flaschen auch so.
Aha, Port is in use.
Guck mal, hier oben hat er auch schon, kann man?
Okay, wir brauchen noch mal kurz Menu-Config.
Brauchen noch mal Menu-Config.
Weil, ich glaube man kann den Port setzen,
den er verwenden soll.
Serial Flasher-Config.
Wo setzt man den Port?
Seht ihr irgendwo was?
Port.
Port?
Serial? Könnte man das setzen?
Da, da, da.
Man kann das doch garantiert irgendwo
hardcoded reinschreiben,
dass der immer das nimmt,
ohne dass man das angeben muss, oder?
Ja, IDF, Menu-Config, Set, Serial-Port.
Ja gut, dann geben wir es halt an.
Was haben wir hier?
Ja, baut.
Monitor baut, Raid, ja.
Mal nach Monitor suchen.
Alter, das ist ja mal abartig, ey.
Da findet man ja nix hier drin, ey.
Wo könnte, wo könnten das sein?
Hier, da nicht, da Bootloader auch bestimmt nicht.
Security-Features auch nicht.
Bootrom, Serial Flasher-Config, wo sonst, oder?
Wo sonst, oder?
Compiler-Options, vielleicht Component?
Why in German?
Ja, because I'm German.
Oder was könnte man da suchen?
Doch, wie das Code verwenden?
Schreiber-Configuration?
Boah, ey, da raste ich, nee, nee, nee, da raste ich aus.
Ich geb das jetzt, ich geb das jetzt weiterhin an.
DevTutorial, so.
Flasht der jetzt?
Ah!
Nee.
Also es ist auf jeden Fall interessant, dass ich das einfach ketten kann.
Jetzt, jetzt nicht, weil er grad flasht.
Muss ich vielleicht, muss ich vielleicht resetten?
Muss ich, muss ich Reset drücken oder sowas, dass der flasht?
Mal hier.
Ah!
Okay.
Er flasht!
Flash-Champ!
Man muss da einmal Reset drücken.
Vielleicht, vielleicht, dass der Initial mal in den Flash-Modus kommt.
Und warum bricht es jetzt ab?
Okay, ich glaube, ich muss doch...
Steht da was von Restarting in?
Ja, das kommt da.
Okay.
Muss ich da vielleicht ein Tail oder so drauf machen?
Ja.
Tatsächlich.
Guck mal, das Funst.
Jetzt flashen wir nochmal.
Was passiert dann mit dem Tail?
Das kann man einfach offen lassen.
Ey, das ist ja Premium.
Guck mal.
Das Tail connectet sich einfach neu, nachdem man geflasht hat.
Ist ja viel einfacher.
Guck mal hier.
Hello World, this is ESP Chip 1 CPU Core.
Wifi, Bluetooth.
Zigbee.
Sehe ich das richtig?
Hat das Ding mehr Speicher als der alte ESP32?
Ich meine, ich vermute mal, dass der 512K hatte.
ESP32 Memory Size.
Was hat denn der gehabt?
Okay, der hat sogar ein bisschen...
Der hat sogar ein bisschen...
C6.
Das ist der Flash-Speicher.
Seht ihr hier irgendwas?
Memory Size?
Ja, 500...
Okay, minimal weniger, glaube ich, als der alte ESP32.
Wobei, der alte ESP32 ist von der Hardware immer noch schneller.
Aber nicht, dass es das irgendwie bräuchte.
Okay, als nächstes müssen wir irgendwie gucken, wie wir da Arduino reinkriegen.
Also, es läuft.
Wie?
Okay.
Machen wir das hier mal weg.
Ganze Blub-Blub kommt mal hier weg.
Und wir stellen das jetzt mal um auf meine Main-C++-Geschichte.
Wie kriege ich den jetzt dazu gebracht, dass er nicht hello world main.c ausführt, sondern main.c++?
Muss man da in die CMake-Configs rein, oder?
Ich habe da überhaupt keinen Plan von.
What?
At main to C++?
Main to CMake-Project?
What?
Kann ich hier einfach reinschreiben?
Main.cpp?
Also, dieses Build-System ist ja schon wirklich wie aus dem letzten Jahrhundert, ey.
Und ich habe mir sagen lassen, CMake ist der angesagte Scheiß in C++.
Aber das...
Ja, in meinem C++ ist halt das meiste Schrott.
So, Build.
Puddeln ja auch noch mit Header-Files rum den ganzen Tag.
Funktiert das jetzt?
Oh fuck, das ging nicht, weil...
Undefined Reference to App Main.
Hä?
Da ist es doch.
Undefined Reference to App Main.
Lasst uns doch mal das Getting Started angucken.
Konfiguriert.
Das haben wir gemacht.
Build a Project.
Flash onto Device.
Muss das...
Muss das vielleicht...
Ich habe eine Idee.
Der findet App Main nicht.
Könnte das daran liegen, dass C++ die Funktion randomized beim Kompilieren den Namen...
Und man das dem irgendwie abgewöhnen muss?
Stop C++ from randomizing function names.
Oh nee, wie heißt denn das?
C++ macht doch so komischen Shit beim Kompilieren, dass die Funktionen nicht abgewöhnt werden.
Oh nee, wie heißt denn das?
C++ macht doch so komischen Shit beim Kompilieren, dass die Funktionen nicht abgewöhnt werden.
Der findet bestimmt seinen Einstiegspunkt nicht, wenn es ein C++-File ist.
Der findet bestimmt seinen Einstiegspunkt nicht, wenn es ein C++-File ist.
Wie nennt sich der Kram denn?
Compile Function Names.
Compile Function Names.
ESP, EDF, C++.
ESP, EDF, C++.
Support C++.
Support C++.
EDF...
Stimmt, in welchem Standard wird das eigentlich kompiliert?
Stimmt, in welchem Standard wird das eigentlich kompiliert?
Ja genau, Friedrich Merz. Das ist das.
Ja genau, Friedrich Merz. Das ist das.
Ach hier, guckt mal!
Combining C und C++-Code in order for C++ functions to be callable from C++.
Combining C und C++-Code in order for C++-Codes to be callable from C++.
Combining C und C++-Codes in order for C++ functions to be callable from C++.
Extern-C!
Ah, ja.
Das macht bestimmt das, was ich mir gedacht habe.
Das macht bestimmt das, was ich mir gedacht habe.
Gerade, dass die Namen gleich bleiben.
Gerade, dass die Namen gleich bleiben.
Easy.
Built complete.
Nice.
Hat funktioniert.
Dann flashen wir es doch gleich mal.
Kann man eigentlich auch Flash einfach so machen?
Ich gebe trotzdem den Port an.
Guck mal.
Hat gefunzt.
Ja.
Returning von App.
Ja gut, da ist ja auch nichts drin.
Klar, dass du da returnst.
Können wir Print F oder sowas machen?
Ne, da muss man...
Was muss man inkluden?
Include.
Moment, das ist...
Print F?
Das funzt bestimmt so nett hier.
Kackel.
Das wäre zu einfach.
Wenn man da einfach Print F machen könnte, oder?
Das geht.
Das geht einfach.
Man kann einfach Print F schreiben.
Und da machen wir Ausgabe.
Easy.
So, jetzt die große Preisfrage.
Wie kriege ich die aktuelle Arduino-Komponente da rein?
Arduino.
Ich suche einen C++-Shop.
Ich würde im Leben nicht arbeiten wollen.
Und täglich was...
C++ machen wollen.
Da kriege ich ja Anfälle.
Also, Download haben wir gemacht.
Haben wir gemacht.
Create a new folder called Components.
Okay, mkdir.com-po-nents.
Da macht er ja hier schon.
Gucken wir mal, ob ich es richtig geschrieben habe.
Ja.
Lieber Windows oder C++?
Ha!
Das ist eine schwierige Frage.
Die kann ich nicht beantworten.
Es ist beides unglaublich scheiße,
wenn man das den ganzen Tag benutzen muss.
Also, ich meine, ich benutze Windows den ganzen Tag über.
Aber halt nur für Sachen, wo Windows ganz brauchbar ist.
Puh.
Ich sag mal Windows.
Weil bei C++ drehe ich auf jeden Fall durch.
Ja.
Haben wir am Anfang des Streams uns angeguckt.
Und festgestellt, dass Arch Linux so aktuell ist,
dass sie es schon wieder gepatcht haben.
Okay, also jetzt klonen wir das Arduino da rein.
Dann geht man in Arduino, sagt SubmoduleInit.
SubmoduleInit.
Alter, was für ein riesen Repo ist denn das bitteschön?
C++ ist auf Windows sogar einfacher.
Es mag vielleicht manche Sachen einfacher sein.
Aber allein schon, dass du permanent unter Windows entwickeln musst,
ist garantiert nicht einfacher.
Allein schon, allein schon das hier.
Terminal aufgesplittet, oben was gucken, unten.
Mach das mal unter Windows.
Mit einer angenehmen Shell.
No chance.
Da fängt es schon an.
Alter, was für ein riesen Repo ist das denn?
Was ist denn da alles drin?
Der hat schon ein halbes Gigabyte runtergeladen gerade.
Und ist erst mal 30%.
Was lädt der da runter?
Passt wie bei JavaScript.
Erst mal 40 Gigabyte Node Modules.
Ah, Shit ist ordentlich am rödeln.
Ja, der meint im Hintergrund irgendwas.
Vielleicht, vielleicht ist das ja die XZ-Tools Remote Code Execution.
Wobei ist es ja gar nicht.
Mit SSH in Kombination, ja.
Vielleicht benutzt es ja XZ-Tools.
Und ich werde gerade Hackermanned.
Chat, wer von euch ist es?
Stimmt, ich sollte das vielleicht klonen ohne die komplette History.
Das wäre deutlich sinnvoller.
Anstatt das komplette Repo zu klonen.
Aber was machen die da rein, Mann?
1,2 Gig?
Und ich meine, der lädt gerade mit, mit, ja, 10 MB die Sekunde.
Das ist ja nicht mal, dass der langsam laden würde.
Das ist schneller als USB.
Das ist ja nicht mal, dass die Sticks früher billige transfert haben.
USB 2 waren so ungefähr 25 MB die Sekunde maximal.
Und die China-Chinesen-Sticks sind eingebrochen nach, nach 10 Sekunden.
Also ich bin echt schockiert, was da alles drin ist, ey.
Ich will jetzt auch nicht abbrechen und nochmal neu klonen.
Okay, Leute, wir gehen auf die Zielgerade zu 90%.
92, 93, jetzt gibt er Gas, 97, jetzt, jetzt, jetzt ist er aber kaum noch zu halten.
Okay, Leute, wir gehen auf die Zielgerade zu 90%. 92, 93, jetzt gibt er Gas, 97, jetzt, jetzt, jetzt ist er aber kaum noch zu halten.
Okay, Leute, wir gehen auf die Zielgerade zu 90%. 92, 93, jetzt gibt er Gas, 97, jetzt, jetzt, jetzt ist er aber kaum noch zu halten.
Please don't commit any binaries.
Ja, da haben die keinen Bock sich dran zu halten.
Da hat einer sein Webcam-Archive wahrscheinlich committed ausversehen.
Okay, wir haben es runter.
Ja, jetzt CD, dann Submodules init.
CD, eins wieder zwei nach oben, okay.
Und jetzt Menu-Config, nochmal.
Okay.
Und jetzt?
Und jetzt?
Ach, jetzt kann man das, jetzt kann man hier Component-Config Arduino machen.
Arduino, äh, äh, kann man nicht.
Muss ich vielleicht noch Build machen vorher?
Build?
Ich meine, vorher waren es 925 Files.
Und jetzt sind es?
Torchchamp?
Äh.
Hat der jetzt, hat der jetzt Arduino?
What the f...
What?
Ah, ESP Arduino requires was?
Free, FreeTOS?
Ah, nee, FreeRTOS, okay.
MonkaRTOS.
Hallo, nein, nein, nein, nein, ich will Menu-Config machen, nicht Build.
Äh.
Wait a minute.
Warum kann ich Menu-Config?
Moment, Moment, Moment, Moment.
Ich bin jetzt, ich bin deadlocked, quasi.
Ich muss Menu-Config öffnen, um das zu fixen, aber ich kann Menu-Config nicht öffnen, weil das das Problem hat.
Ups, falscher Knopf.
Jetzt, okay, jetzt hat es mich kaputt gemacht hier.
Mein Projekt, vielleicht, vielleicht kann, okay.
Wir löschen das einfach nochmal.
Wir löschen, nee, nee, nee, wir löschen das jetzt einfach nochmal.
Oh, nee, ich lösche das nicht.
Moment, ich benenne den Components-Ordner um.
Ich benenne den Components-Ordner um.
Okay, okay.
Ha, close, close.
Weil sonst hätte ich es fast gelöscht.
Und nochmal, und dann hätte ich nochmal neue.
Dann runterladen müsste.
Okay, Menu-Config.
So, und was?
Pri-Ertos-Clock?
Nee.
Was, mit Herz oder so?
Ah, hier.
Nee, was musste, jetzt habe ich es vergessen, ey.
Was?
Was musste hier?
Doch.
Pri-Ertos-Herz.
Pri-Ertos.
Okay.
Whatever.
Whatever das auch immer macht jetzt, aber alles klar.
Okay, und jetzt kann ich das wieder umbenennen in Components.
Und jetzt darf ich ein Bild machen, oder?
Pregge.
Pregge.
Ah, jetzt sind es auch 1307 Dateien, die kompiliert werden müssen, logischerweise.
Weil es ist ja, es ist ja mehr.
Oh, was haben wir hier?
What?
Warnings.
Please keine Errors.
Warnings sind mir egal.
Complete.
Easy.
So, was will der hier?
Warning.
Please call.
Menu.
Config.
Then.
TLS.
Enable.
Pre-Shared-Key.
Cipher Suits.
Äh, wahrscheinlich für, für Wifi und sowas, hä?
Das lassen wir erstmal aus, das brauchen wir jetzt nicht.
Okay.
Da können wir doch mal checken, ob Arduino jetzt funktioniert.
Ja.
Main.
Setup.
Loop.
Oder Using App Main.
Wir usen App Main.
Okay.
Include Arduino jetzt.
Ja.
Main.
Setup.
Loop.
Oder Using App Main.
Include Arduino.
Also finden tut das schon mal nicht.
Mal gucken, ich bin mal gespannt.
Aber das, mal gucken, ob er das checkt.
Äh, mein Auto Complete ist wieder kaputt, oder?
Der erkennt das nicht.
Okay, geht das jetzt?
Build Complete.
Also sag mal so, C-Line checkt es nicht?
Kann das sein, dass C-Line irgendwie nicht meine, dass er die, die, die Fahne und so
nicht findet?
3H Setup.
Ja, das ist normal.
Also read.
Also readme und den Scheiß brauchen wir schon mal nicht.
Manage Compose.
What?
Was zum?
Leute, ich will einfach zwei Dateien löschen.
C-Line.
Geh mal nicht auf den Keks, ey.
Wo ist denn?
Ey.
Wo hat der denn?
Delete.
Eigentlich Save, Delete.
Einfach löschen.
Kann das sein, dass man das nochmal öffnen muss?
Warum?
Weil Plattform I.O. das noch nicht unterstützt.
Da ist der C6 eh schon neu.
Ist das sinnvoll?
Ach, jetzt erkennt das.
Okay.
Alles klar.
Dann muss das einfach nochmal neu laden.
Weil Plattform I.O. das Ding nicht richtig unterstützt.
Die C6 Unterstützung ist noch sehr neu und die Arduino Komponente kann das noch gar nicht.
Da mussten wir auch extra eine Alpha Version installieren von.
Ansonsten mache ich auch ganz gern Plattform I.O.
Wobei mir C++ in Visual Studio auf den Keks geht.
So finde ich das gar nicht so schlecht.
Okay.
Init Arduino.
Da können wir doch gleich schon mal was sagen.
Serial.
Begin.
Was hat denn der standardmäßig eingestellt?
Machen wir einfach.
Keine Ahnung.
While.
True.
Inspect Endless Loop.
Ne.
Serial.
Brindeln.
Keckweh.
Ja.
Perfekt.
Bild.
Ah ne.
Wir können auch gleich sagen Flash.
Ähm.
Wait a minute.
Jetzt mal.
Jetzt.
Also.
Jetzt.
Jetzt.
Jetzt.
Also.
Jetzt bin ich.
Jetzt bin ich.
Jetzt fällt mir grad was auf.
Warum kann ich überhaupt mit Tail das Ding hier aufmachen?
Also früher war das immer eine serielle Verbindung, wo Baudrate und das ganze Zeug eingestellt werden
muss.
Ist das jetzt keine klassische Serial Verbindung mehr?
Ist das jetzt irgendwas anderes?
Weil warum geht das?
Das ging bei den alten nie.
Dass man irgendwie einen Tail drauf macht und das auslesen kann.
Aber Tail hat keine Default Werte.
Tail öffnet eine Datei.
Das heißt es muss schon richtig rauskommen aus der Datei und das ganz ohne Einstellung.
Vielleicht ist das kein Serial Interface mehr jetzt, sondern echtes USB vielleicht?
Wobei was soll echtes USB sein überhaupt?
USB ist es.
Ich weiß nicht ob es ein native USB ist.
Ein native USB Textübertragungs Ding gibt.
Ich finde es auf jeden Fall sehr spannend, dass man einfach Tail draufmacht.
Zumindest mein Print.
Mein Print.
Printlein funktioniert nicht.
Aber okay, wir machen mal kurz Delay.
Keine Ahnung.
Delay von hundert hundert Millisekunden und dann machen wir nochmal Print.
Print F.
Lulwe.
Beste.
New Line.
Und jetzt schauen wir mal ob das.
Ob.
Ob das funktioniert.
Äh.
Oh.
Der gibt nur Lulwe aus.
Und auch immer nur in so komischen.
Etappen.
Wahrscheinlich wenn er das Serial Interface.
Fluscht.
Also.
Serial.
Serial.
Geht nicht.
Das Arduino Serial.
Das macht aber auch.
Aber guck mal.
Da muss man ja auch irgendeine Baudrate einstellen.
Das macht ja gar keinen Sinn.
Wenn man auch einfach die Datei öffnet.
Das geht garantiert irgendwie anders.
Mittlerweile.
Mit.
Mit der Hardware.
Gibt es irgendwie so.
Hardware.
Hardware Serial haben wir.
Ist das ein Unterschied?
Ne ne.
Das Ding.
Das haben wir auch.
Serial 0.
Haben wir Serial 1.
Oder nicht.
Gibt es.
Moment.
Serial 0 haben wir.
Und das ist Hardware Serial.
Aber.
Hä.
Ich mein.
Ich mein.
Ich mein.
Ich mein.
Ich mein.
Ich mein.
Wir können das mal ausprobieren.
Also irgendwie ein anderes Serial Interface.
Gibt es nicht so was wie.
Wie Write oder so.
Oder.
Clear.
Clear Buffer oder.
Buffer.
Gibt es auch bestimmt sowas wie.
Hier.
Hier.
End.
Macht das.
Es gibt halt auch keine Hilfe.
Ne.
Dabei.
Weiß man nicht.
Was das.
Was das macht.
Aber da gab es so was wie Flush.
Habe ich gerade gesehen.
Flush.
Flush ist nicht in Ordnung.
Hätten wir.
Flush ist da immer gut.
So, mal kurz gucken.
Ah, Alter.
Heute bin ich aber echt nice im Vergessen von Semikolons.
So viel Go die letzten Tage.
Ne?
Das gibt einfach das Serial-Zeug nicht aus.
Hä?
Was ist das denn?
Warum nicht?
Ich meine, witzigerweise wird Printf...
Printf...
Okay, wenn Printf geht, dann gucken wir mal, ob die ESP-Funktionen vergehen.
Die haben doch auch sowas wie hier...
Äh, Log...
Oder ESP-Log?
ESP-Log?
Äh...
Ne, wie hieß dieser Kram? Log?
ESP-Log.
Ich hab vergessen, wie das heißt.
Es kann auch einfach sein, hier...
Hier, genau. ESP-Log-W für Warning.
Aber der Fit...
Was muss ich da inkluden, für dass es funktioniert?
Muss ich dafür irgendwas...
Irgendwas...
Irgendwas inkluden?
ESP.
Ach, guck mal, ich bin ja auch blöd.
Ich hab ja die ganzen Sachen da gelöscht.
Ähm...
Tja...
Äh, ich guck noch mal kurz in das...
In das Default.
ESP-Log.h?
Okay.
Ich gucke mal hier rein.
Die hatten doch hier so ein Example-Beispiel.
Getting started.
Was hatte ich hier?
Examples getting...
Hä?
Getting started.
Hello, world.
Und da hier Main...
Was hat denn der hier alles drinne?
Hier.
ESP-Flash.
Aber die machen ja alles mit Print...
Print F.
Ach, guck mal mal. Gibt das...
Aber warum bietet mir das denn...
Seal eigentlich von sich aus an?
ESP...
Hä?
Ey, das ist ja...
Das ist ja richtig mies.
Der findet ja gar nix.
Muss ich...
Muss ich ernsthaft jedes Mal die fucking IDE neu starten,
dass der da was erkennt?
Oder was?
Das kann's doch nicht sein.
Wenn du CMake nicht...
Was soll ich denn da groß einrichten?
Ich hab...
Ich hab das Environment hinzugefügt
bei meinen Toolchains.
Das reicht laut den...
Ja.
Include?
Ah ja, jetzt erkennt er Zeug.
ESP...
Gucken wir mal, ob das jetzt funzt mit Build.
Build.
Okay, aber den Header hat er gefunden anscheinend.
Nee.
Moment, ESP Log Requires.
Der hat's doch gefunden.
Hä?
Warum?
Was ist das für ein Schrott?
Es kann doch nicht sein,
dass ich das jetzt jedes Mal neu starten muss.
Doch, es gibt CMake-Files.
Will der, dass ich hier irgendwas mache?
Okay.
Ah, okay.
Der checkt das einfach nicht.
Was ist das denn?
Ey, das ist ja grausam.
Warum detectet er denn den...
Was ist denn jetzt?
Ich hab's dir ja zugemacht.
Hä?
Hat er jetzt die Abhängigkeiten gerade erkannt, oder was?
Ach, guck mal.
Jetzt.
Jetzt hat er's erkannt.
Jetzt hat er's gecheckt.
Jetzt highlightet er das auch alles ordentlich und sowas.
Ja.
Ja, okay.
Jetzt hat er's gecheckt.
Alter, okay.
Das ist ja Painschamp.
Jetzt erkennt er den Kram auch.
Okay.
So, und da müssen wir jetzt was...
Tag.
Das ist ja eine sehr nice Hilfe-Funktion.
Omega.
Tag.
Beste.
So, und das werden wir jetzt auch printen in der Schleife.
Okay.
Flash.
Ich will eigentlich mit C-Line nicht an den CMake-Sachen rumwurschten, wenn das...
...das ESP-Zeug machen.
Oh, guck mal.
Jetzt...
Jetzt sind so viele Files, dass er irgendwie nicht mehr in der Lage ist, ...
...das so schön darzustellen wie früher, sondern die...
...also...
Na, könnt ihr euch dran erinnern?
Am Anfang hat er beim Compilen ja alles das schön nebeneinander gemacht, ...
...aber jetzt nicht.
Jetzt kommt hier untereinander alles.
Guck mal, das funzt auch.
Aber aus irgendwelchen Gründen geht das Arduino-Print nicht.
Was ist denn das?
Warum du das überhaupt willst?
Weiß ich nicht, weil ich eigentlich gesagt...
Also, warum ich das will?
Weil, ähm...
Die meisten...
...Arduino-Libraries so funktionieren, dass die irgendwie printable implementieren und dann kannst du die so ausgeben, falls sie was, falls sie was haben.
Äh, und ich find das ehrlich gesagt so...
...hier mit den ganzen Overloads, die man sich irgendwie sicherlich auch anzeigen lassen kann.
Warum kann...
Wie kann man sich denn die...
...die Overloads davon anzeigen lassen, man?
Das ist ja nicht nur Char, da gibt's ja noch mehr.
Da gibt's auch Int und, und alles mögliche, ja?
Wie lässt man sich denn hier anzeigen, was es für...
Gibt's nicht.
Braucht man nicht.
Ja, da kannst du dann auch hier einfach zahlen.
Was, Ctrl-Q?
Ich will eigentlich einfach nur, dass der mir anzeigt...
Guck mal, das hier will ich, dass der mir anzeigt, ja?
Du hast Strings, du hast Charts, du hast, ähm...
So, es ist überladen...
Ich find, das ist eigentlich ganz angenehm, damit zu printen, also Sachen auszugeben.
Und früher oder später braucht man das, wenn man Arduino-Sachen benutzt.
Also, frage ich mich jetzt, warum geht das Arduino-Print-Line nicht?
Hä?
Aber, das ergibt doch gar keinen Sinn.
Das geht?
Und sogar Print-F geht.
Aber...
Das geht nicht?
Vielleicht ein Bug, ja, ja, das könnte sein, weil das Alpha...
Oder, oder ich mach das...
Ich mach das falsch, weil es ist ja offensichtlich kein Serial mehr.
Sonst könnte ich nicht ein Tail auf einer Datei machen und dann kommt der Output raus.
Geht das Arduino-Zeug mit dem Monitor...
Das ist eine gute Frage.
idf.py
idf.py
Moment, idf.monitor.py
Okay.
Äh, nö.
Äh.
Ah, wie komme ich da wieder raus?
Steuerung C ist es nicht.
Äh.
IDF-Py-Monitor-Exit.
Wie kommt man da wieder raus?
Was?
Exit.
Control-Eckige...
Alter, ist das euer Ernst?
Ja, das funktioniert.
Control-Eckige-Klammer-Zu.
Ist ja wie bei Telnet.
Telnet musst du auch so...
Bei Telnet musst du auch eckige Klammer machen, dass du in den Command-Modus kommst.
Aber, warum?
Warum nicht einfach Control-C?
Wie jeder normale Mensch.
Da sind ja keine Amis.
Das sind Chinesen.
China-Chinesen bei Espressiv.
Okay, man kann da mehrere Command senden.
Also, ich bin jetzt...
Ich bin jetzt sehr, sehr verwirrt.
Warum?
Du kannst nix auswählen?
Auch nicht mit Pfeiltasten?
Du kannst...
Du kannst die...
Diese Sachen Interactive abfragen kannst du ausschalten.
Dann nimmst du immer die Standard-Antwort.
Das ist vielleicht aber nicht das, was du willst.
Aber über SSH sollte das normale Auswahlzeug auch funktionieren.
Dann würde ich vielleicht ein anderes Terminal mal testen, wenn das nicht tut.
So, warum geht die Ausgabe mit Arduino nicht?
Dann suchen wir mal danach.
ESP32-C6
Arduino
Serial
Output
Established Serial Output
Established Serial Output
Established Serial Output
Established Serial Output
Established Serial Output
Established Serial Output
Established Serial Output
Established Serial Output
Established Serial Output
Seamake-List anpassen.
Für was?
Warum?
Weshalb?
Was?
Wie jetzt?
Hat das was mit meinem Output zu tun?
Was?
Clone the nested...
Tiny USB?
What?
Ich verstehe nicht, was du mir sagen willst.
What?
Was soll ich wo anpassen?
Set in the...
Set in the...
Keine Ahnung.
Wo muss ich was einfügen?
Hier?
Seamake-List.
Aber der erkennt ja...
Der erkennt ja den Arduino-Krempel.
Ich lasse da jetzt die Finger von.
Das funktioniert ja gerade alles.
Okay, was?
USB?
On Development Board?
Flashing?
Connect to...
Ja, das haben wir gemacht.
Seamake erkennt den Kram auch.
Sonst würde es ja nicht kompilieren,
wenn ich...
Arduino-Zeug verwende.
Verify Serial Connection.
Ich bin enorm verwirrt.
ESP...
Serial...
No Output.
Serial Monitor not working.
Es muss auf jeden Fall ein ESP32C6 sein.
Aha.
Was?
Moment.
Was?
Oh, meine Augen.
Ah, yes.
Jetzt...
Leute, jetzt ist alles klar.
Jetzt weiß ich Bescheid.
Obviously.
Obviously.
Jetzt ist klar.
Natürlich.
Natürlich.
Also, wir haben einmal ein USB-Type-C-Port
und ein USB-Type-C-to-U-Art-Port.
Das ist wirklich das Problem, Leute.
Ich glaube, das ist echt das Problem.
Arduino denkt, der Output soll an Serial gehen.
In Wirklichkeit muss das...
an...
USB gehen.
Und das muss man dem jetzt irgendwie beibringen,
dass der das...
quasi mit Serial Print
nicht an Serial Ports oder irgendwas...
Pins oder so schickt,
sondern an den USB-Output.
Da stand doch eben irgendwas.
Ich habe doch eben irgendwas aufgehabt,
wo irgendeiner was...
Hier.
I had the same on a C3.
C3.
USB-JTAG-Thing.
Enabling CDC.
Was zum Teufel ist CDC?
USB-Communications-API.
USB-Konsole.
What?
Das ist der S3.
Das ist was anderes.
Ich brauche den C6.
Aha, guck mal da.
ESP32-C6-Support.
Serial.
Compilation is upload is okay.
Serial port no output.
What is your...
Serial port.
Ich setze mal diese Option da jetzt gleich.
The USB-Serial-JTAG-Controller
can be used as the Serial Port
by selecting...
USB...
Okay, Menu-Config.
Michael, 5 Spilianen, moin.
Serial-JTAG.
Serial-JTAG.
Ah.
Aber da stand doch was von Secondary gerade.
Hier.
USB-Serial-JTAG-Controller.
USB-Serial-JTAG-Port.
Wo stand hier was von Secondary?
Ach, hier ist Secondary.
USB-Serial-JTAG-Port.
Okay.
Ach, jetzt verstehe ich es.
Okay.
Der sendet das standardmäßig
an den Serial-Port.
Also an die Serial-Pins wahrscheinlich.
Und...
Aber auch zusätzlich noch per USB
an diesen Port.
Deswegen funktioniert das mit TAIL.
Jetzt ergibt das Sinn.
Ja.
TAIL liest nicht per Serial.
TAIL liest das gerade aus der Datei,
die über diesen
anderen USB-Krempel läuft.
Fragt mich nicht genau,
was da passiert.
Das heißt, wir stellen das jetzt mal um,
dass der defaultmäßig direkt auf diesen
JTAG-Things geht.
Okay, Flash.
Frage ist jetzt nur, wenn das nicht funktioniert...
Äh...
Muss ich nochmal Reset drücken?
Oder was ist hier los?
Blum, blum, blum.
Äh...
Warum bildet das jetzt erstmal eine halbe Stunde?
Und warum kann ich gerade nicht mehr flashen?
Port macht gleich Bettke.
Ja, sieht so aus, aber ich habe noch gar nicht geflasht.
Das ist das Ding ja...
Ah, okay, jetzt flasht er.
Jetzt geht's auch wieder.
Okay.
Aber die Ausgabe geht immer noch nicht.
Das wird's nicht sein.
Was haben die hier geschrieben mit...
Irgendeiner hat doch was mit komischen Environment-Variablen geschrieben.
Wo ist es denn hier gerade?
Hier.
Arduino-USB-CDC-on-Boot?
Arduino-USB-Mode brauchen wir.
Alles klar.
Logisch.
Was sonst?
Wir können das mal ausprobieren.
Die große Preisfrage ist, wo setze ich das denn?
Wie setze ich Buildflex in diesem Shit hier?
Ne, ne, ne.
Der Benutzplattform-IO.
Aber das sind ganz normale...
äh...
Buildflex, die man...
die man für das Arduino...
für die Arduino-Komponente verwendet.
Das Ding ist nur...
Ich...
Hä?
Wie setzt man denn hier überhaupt irgendwas?
Hier?
CMake?
Main?
Hier?
Hier drinnen?
CMake?
Aber wie?
Okay.
CMake.
Add.
Deprocessing.
Define.
Define.
Das sind JVM-Parameter, die mit D anfangen.
Ne, ne.
Das sind keine JVM-Parameter.
Das sind GCC-Parameter.
Sieht vielleicht aus, als wäre das ein GCC-Parameter.
Sieht vielleicht so ähnlich aus, sind's aber nicht.
Okay.
Add Definitions.
Use Add Compile Definitions to Add Pre-Processor Def...
Okay.
Okay.
Alles klar.
Add Compile Definitions.
Und jetzt?
Wie fandst du das jetzt?
What?
Alter, wer hat sich diesen Fleiß ausgedacht?
Da kommst du dir ja vor wie 1985.
Jede normale Programmiersprache hat mittlerweile einen gescheiten...
Package Manager und ein halbwegs gescheites Bildsystem.
Am besten schon eingeba...
Was ist das denn?
Wer hat sich diesen Schrott denn wieder ausgedacht, Mann?
Da krieg ich wieder Anfälle, wenn ich mir den Scheiß angucken muss, ey.
Wie funktioniert das?
Aha.
Okay.
Einfach...
Okay.
Einfach reinschreiben.
Ohne Klammern.
Ohne irgendwas.
Okay.
Also, was müssen wir da jetzt reinschreiben?
On Boot?
Okay.
Wahrscheinlich...
Machen wir mal.
Tja.
Tja.
Einfach die Feinen oder nicht?
Was hat...
Haben die was...
Haben die was geschrieben?
Gleich eins haben die geschrieben, oder?
Gleich eins.
Wobei, wir machen das nicht in die globale CMake rein.
Das macht ja keinen Sinn.
Das machen wir in meine CMake hier rein.
So.
Und jetzt?
Und was war das andere?
Arduino USB Mode.
Logisch.
Was sonst?
Klar.
Klar.
Okay.
Bild.
Jetzt erstmal wieder 1400 Dateien kompilieren gleich.
Okay.
1256 sind es diesmal nur.
Du könntest die Pre-Prozessor auch vor dem Include der...
Geht das?
Funst das wirklich?
Ja?
Dann mache ich das.
Oh, so viele Warnings.
Äh.
Failed.
Warum?
Ah, guck mal.
HWDC.
Der macht prinzipiell schon mal das Richtige.
Aber dann doch nicht.
Also, er will irgendwas mit Serial machen.
Okay.
Wo meinst du, kann ich das definieren?
Okay.
Wenn es nicht im CMake ist.
Du meinst quasi hier davor?
Also quasi define?
Dann so?
Warum geht gleich eins nicht?
Whitespace.
Okay.
Whitespace.
Ja, welchen C++-Standard haben wir eigentlich?
So?
Das soll funktionieren?
Näh, im Leben nicht.
Das Problem ist, der Included hier nur den Header.
Der kompiliert ja das Arduino-Projekt davor.
Und davor hat er die Sachen im Arduino-Projekt noch gar nicht gesetzt.
Der kompiliert das Arduino-Projekt mit den Standard-Settings.
Und bei mir, erst wenn mein Programm läuft, dann macht er das.
Das kann ja eigentlich nicht funktionieren, oder?
Mal gucken.
Nee.
Funktioniert.
Okay, also müssen wir das doch in CMake reinschreiben.
Aber nicht in mein...
Okay, ich habe es mir doch gerade selbst beantwortet.
Das muss nicht in mein CMake rein.
Das muss einfach in die globale CMake rein.
Und dann am besten, bevor der hier unten irgendwas macht.
Und passt mal auf.
Jetzt geht's.
Easy.
Easy.
First try.
Guck mal.
Guck mal.
Es sind jetzt auf einmal 1318.
Es sind mehr.
Daraus schlussfolgere ich jetzt einfach, es funktioniert.
Weil es mehr Dateien sind.
Ohhhh.
Brake.
Brake.
Brake.
Brake.
Ah.
Nee.
Ha!
Es hat funktioniert.
Pogge.
Habe ich jetzt irgendwie auch Zugrefier drin da drauf?
Arduino.
Nee.
Doch.
USB.
Warum kann ich nicht springen?
Warum kann ich nicht springen?
Warum kann ich nicht springen?
Und kann ich nicht springen?
Warum kann ich hier nicht?
Warum kann ich hier nicht sagen.
Warum kann ich nicht sagen.
Warum geht das nicht?
O.k.
Das funnst.
Moment.
Moment.
Es gibt...
Warum kann man hier nicht zu den Definitions springen?
Was ist das für ein Schrott?
Es ist überhaupt nicht undeclared und warum kann ich hier nicht drauf?
Was ist denn das?
Muss ich irgendwie mal ein CMake-File
ändern, dass er denkt, er muss
neu einlesen oder so?
Ich wette mit euch, wenn ich jetzt neu starte,
dann...
Das ist ja absolut grausamst, man.
Kann ich eigentlich jetzt
C++
auslesen?
Kann ich nicht irgendwas includen, was
einfach nur...
Okay, das ergänze ich.
Was ist C++23?
Was gibt's da Neues?
Und dann gucken wir, ob das da ist.
Ich beheise, man.
Da gab's ein Setting.
Ja, das hab ich aber gesetzt gehabt.
Das hatte ich gesetzt,
dass der was...
Oh.
Jetzt hab ich irgendwas
gebildet.
Was wollte ich eigentlich nicht?
Dezimal?
Dezimal?
Na gut, das kann das Ding bestimmt nicht.
Gibt's hier nicht irgendwas?
Ja, Keyword.
Das ist eine gute Idee.
Features.
Wir suchen Features.
Ja, Beste.
New Libraries.
Was haben wir denn hier?
New Headers.
Expected.
Mal gucken, ob der da ist.
Include.
Expected.
Okay.
Heißt das jetzt, wir sind auf C++23,
wenn er da ist?
Und warum braucht das so lang?
Und warum kompiliert er grad nochmal alles?
Ja, haben wir schon.
Haben wir uns auch angeguckt am Anfang vom Stream.
Was ist Cmake Auto Reload?
Äh, das hatten wir.
Das haben wir schon gesetzt.
Ah, es hat funktioniert. Nice.
Cmake Auto.
Ja, hatten wir.
Ich kann aus irgendwelchen Gründen
nicht zu diesen Makros springen, obwohl es die gibt.
Egal.
Dann machen wir jetzt doch einfach mal
eine Ausgabe hier.
Und zwar
Printf.
Oder hier, mach mal so.
Kann ich jetzt, darf ich jetzt hier drin
eine Zahl angeben?
Also quasi.
Oh man, Alter, das ist ja.
Geht das?
Ne.
Okay.
Wie geht das?
Prozent D?
Und dann?
Prozent I?
Was will er?
Long, L.
Tag Format.
Ja, ist doch richtig.
What?
Was?
Das ist ja zeitlich.
Okay.
Printf, Long.
Wie geht das?
L, I?
What?
Das weiß doch keiner aus dem Kopf, Mann.
L, I.
Okay, obviously L, I.
Alles klar.
Flash.
So, welche C++ Version habe ich denn jetzt?
Warum muss der für jeden Scheiß eigentlich neu kompilieren immer?
Alles komplett?
Ich habe doch gar nichts groß geändert gerade.
Das Board hat sich gerade disconnected.
Was ist jetzt?
Okay.
Okay, vielleicht doch IDF-Monitor.
Der Output geht.
Der Output geht.
Das war dieses komische.
Dieses Arduino-Boot.
Irgendwas.
Okay.
Was ist das für eine bescheuerte Gesche...
Okay.
Was ist das?
C++ Standard.
Hä?
Alter.
Warum ist...
Ich raste aus.
Warum ist es...
In C++?
Bitteschön.
Das Anzeigen, welche Version ich verwende.
Schon eine Wissenschaft für sich.
Wollen die mich verarschen?
Was soll das überhaupt bedeuten?
Februar 2021.
So.
C++ 2B.
Okay, was zum Teufel ist C++ 2B?
Moment.
C++ 2B ist C++ 2B.
C++ 2B ist C++ 2B.
C++ 2B ist C++ 2B.
Und die Version?
Die Version ist 2021.00.
What the fuck?
Jetzt mal ernsthaft.
Sind die alle...
Hat dir irgendjemand ins Hirn geschissen, oder was?
Was zum Teufel?
Wer denkt sich...
Das kannst du dir nicht ausdenken.
Das kannst du dir nicht aus...
Was ist mit den Leuten los?
Boah.
Das ist doch nicht normal.
Wie um alles in der Welt soll man drauf kommen,
dass 2021.00
C++ 2B ist C++ 2B?
C++ 2B ist C++ 2B.
C++ 2B ist C++ 2B.
C++ 2B ist C++ 2B.
C++ 2B ist C++ 2B.
Für C++ 2B steht,
was dann wiederum für C++ 23 steht?
Oh.
Das ist doch wirklich nicht...
Das ist...
Wer macht sowas denn?
Wie kann man das einfach
über Jahre
so verscheißen?
Ich meine, JavaScript war auch mal
echt nervig.
Aber mit den neuen Standards
haben die das eigentlich ganz gut hinbekommen.
Ich meine, da ist immer noch viel Stuss dabei.
Ja?
So nach dem Motto
leeres Array ist nicht gleich leeres Array
und sowas. Okay.
Aber da hat es viel Gutes drinne getan
in JavaScript. Und C++
das wird immer weiter verschlimmbessert
ohne irgendwie
was
zu...
logisch zu machen.
Rust, ja.
Ich glaube, da hätten wir andere Probleme gehabt.
Gut. Aber
das eigentliche, was wir
machen wollten...
Also, mich regt es immer noch ein bisschen auf, dass ich...
Guck mal, er erkennt,
dass es das Makro gibt.
Aber er kann
das nicht auflösen.
Auch das hier nicht.
Das ist schon sehr weird, Champ.
Gut.
Zumindest das eigentliche,
dass ich was ausgeben will.
Das hat ja funktioniert.
Flaschen.
Aber drüber flashen.
Moment, komm...
Kann mir mir irgendjemand schon was sagen?
Kann mir jemand schlüssig erklären,
warum der jedes Mal das gesamte
Drecksprojekt
kompiliert, anstatt
einfach nur die Datei, die sich
geändert hat?
Was ist denn da los?
Am Anfang hat er das doch noch gemacht.
Was geht denn eigentlich gerade im Hintergrund
im Hintergrund ab?
Okay, JetBrains macht komische Dinger.
Hä?
Ah, das geht mit Tail...
Äh...
Was hat der denn jetzt für Schmerzen, Mensch?
Okay...
Ach, kann das sein, das Monitor,
das resettet das Ding?
Hä? Und jetzt ist es wieder da?
Ich bin super verwirrt.
Guck mal, der kompiliert
jedes Mal das gesamte Projekt
neu.
Erstmal...
Das ist doch einfach hängengeblieben.
Hier kackt der immer nice ab.
Okay, der
reconnectet sich neu.
Machen wir doch mal sowas wie
Flash...
Ich glaub, man kann das hintereinander
schreiben. Okay, dann ist das mit dem
Monitor-Funktion doch ein bisschen besser.
Als mit meinem...
Aber dann ist die
Frage, warum es vorher
überhaupt die ganze Zeit funktioniert
hat, trotz Flashen.
Ja, weil...
Vorher...
Vorhin konnte ich tailen auf das Ding.
Konnte auch...
Konnte auch flashen, das war überhaupt kein Problem.
Aber...
Nachdem ich jetzt das Arduino-Zeug umgestellt hab...
Guck,
jetzt mag er nicht mehr.
Vorher war es USB und nicht
seriell. Ich hab ja an dem Gerät selber
nix umgestellt.
Ich hab ne Arduino-Option gesetzt,
dass er die benutzen soll.
Guck, da kommt jetzt nix raus.
Hä?
Wollt ihr mich verarschen?
Warum geht cat und tail geht nicht?
Okay,
da bricht ab.
Okay, ich glaub, mit dem Monitor-Command ist es doch besser.
Ja, da sagt man
Flash, Flash
und Monitor.
Und dann flasht er und dann
connectet er sich direkt.
Ja, das ist okay.
Aber guck mal...
Der macht irgendwas USB-mäßiges.
Blublum, blublum.
Ja, der reconnectet
sich. Ihr hört's ja im Hintergrund.
War das nicht gesetzt?
Doch, hab ich doch gemacht.
Haben wir doch schon gemacht.
Seit ich... Seit ich
diese komische Arduino-Option gesetzt hab...
Oh, oh.
Jetzt hab ich's, jetzt hab ich's gebraked.
Okay, jetzt, jetzt war...
Okay, passt mal. Guck mal, ich ändere jetzt
ein Buchstaben und mal gucken,
ob der jetzt alles neu kompilieren will.
Ja, will er.
Nee, will er nicht.
Doch, warum?
Wollt ihr mich verarschen?
Warum kompiliert der alles
neu?
Das hab ich doch am Anfang auch nicht gemacht.
Mr. Krabs, danke
für den Sub.
Ich kann doch nicht jedes Mal
zwei Minuten warten, bis der, bis der, bis der
alles wieder umk...
Vor allem wozu?
Also, ich sehe schon, die Development
Experience ist wieder einfach
absolut geil.
Natürlich
geht das bestimmt alles irgendwie,
wenn man weiß wie.
Aber die machen's einem echt nicht einfach.
Wir gucken jetzt noch mal.
Ich schmeiß noch mal
hier aus dem CMake, ich schmeiß
jetzt noch mal
diese Variable raus.
Dann geht der Output wieder nicht.
Aber okay.
Aufgeben.
Weil, dass er's jetzt kompilieren muss, verstehe ich ja,
wenn ich das main CMake-File
ende. Das ist halt, das ist halt
so weird. Ich wette, mit euch jetzt geht auch
Tail wieder. Diese, diese
Arduino-Option macht irgendwelche komischen
Reconnect-Dinger.
Guck hier, alles, alles gut.
So, und wenn ich jetzt
eine Sache ändere,
kompiliert das dann auch wieder alles neu?
Ja. Nee.
Oder?
Ey, ganz ehrlich, das ist doch unusable,
der Scheiß, oder?
Das ist doch nicht, das kann doch nicht euer Ernst sein.
Machen wir jetzt mal hier nur so eine Sache rein.
Gucken, ob das weiterhin da dran liegt.
Oh. Und Arduino kommt weg.
Okay, so. Mehr, mehr
Basic geht ja wohl kaum.
Oh.
Ich hab irgendwas kaputt gemacht.
Am Anfang hat er nicht jedes Mal neu kompiliert.
Ich weiß nicht, wo das Problem ist, ehrlich gesagt.
Ich könnte mir vorstellen, dass Ryder da gerade
irgendwas
irgendwo rumsaut bei.
So, eine Datei geändert.
Weil Ryder jetzt irgendwie die
Time-Stamps refreshed
oder sowas?
Hä? Nee.
Guck mal. Hä?
Manchmal, manchmal muss man
alles kompilieren
und manchmal nicht. Obwohl ich immer
nur den Output ändere?
Hä? So, und jetzt
machen wir mal das rein.
Und jetzt? Kompiliert der jetzt wieder alles?
Das kompiliert er auch wieder alles.
Ich check den Scheiß wirklich nicht.
Ich mach mal den Bildordner weg.
Also, das ist echt abartig.
Ähm.
Ich mach mal das
Make-Auto-Refresh aus.
Äh, wie?
Moment, wie ging das jetzt nochmal?
Profiles oder irgendwie?
Nee, hier, ne? Edit.
So.
Das kommt auch wieder weg.
Da hat er wenigstens nicht immer wieder alles neu
kompiliert.
Jetzt hab ich vielleicht kein
Auto-Complete mehr.
So, einmal darfst du neu kompilieren, weil ich hab den
Bildordner gelöscht, aber danach nicht mehr.
Also, ich hab da, ich hab jetzt schon, ehrlich gesagt,
relativ wenig Bock,
mein eigenes Zigbee-Gerät zu bauen, wenn das
schon so nice ist, da drin
zu entwickeln. Bin ich mal sicher, ob
das, das ist bestimmt,
also, warum
auch immer?
Refresht er irgendwelche Dateien?
Warum, Moment, Moment, Moment.
Warum wird SDK-Config?
Warum wird
SDK-Config hier nochmal
angepasst?
Soll das
so? Weil, der hat sich ja
eigentlich nix geändert.
Hat sich nix, hat sich nix, ah, okay,
ein Main. Vielleicht,
vielleicht liegt das an dem IDE-Ordner.
Dass
der denkt, es kam ein neuer Ordner
dazu. Das ist ne gute
Idee, ja, ja. Jetzt hat er nicht
alles neu kompiliert, habt ihr's gesehen?
Jetzt nicht!
Das hat irgendwas mit
meiner IDE und, und
CMake zu tun.
Ich hab jetzt vergessen, was ich
machen muss, um das wieder
hinzugefügt
hinzugefügt zu bekommen. Was muss ich edit?
Ne, oh fuck, Alter,
keine Ahnung.
CMake, wie
ging das jetzt nochmal?
Ah, Mann, Alter, wo ist das denn?
CMake
reload. Wo war ich denn eben
drinne?
Configuration, new.
Ne, das war doch nicht das, was ich eben hatte.
War doch was ganz anderes.
Alter,
wo war ich denn eben drinne in den
Options, Mann?
Ich hab doch eben irgendwas gelöscht.
Ne, hier.
Da war ich eben drinne.
So, das liegt
bestimmt da dran, weil der hier irgendwelchen Shit
jetzt einliest.
Ha?
Jetzt hab ich, jetzt hab ich Autocomplete und so Zeug
hier. Wollen wir das demnächst
irgendwann, ja, jetzt hab ich Autocomplete.
Und jetzt nervt er bestimmt
auch wiederum mit kompilieren, ja.
Das liegt,
das liegt da,
das liegt irgendwann dran, was
CLion macht. Guck mal,
SDK-Config, hat die sich vorher auch geändert?
Ne, vorher hat sich die
SDK-Config nicht geändert.
Jetzt hat die sich auch wieder, das ist sehr,
sehr weird. Ich mein,
weil, das hältst du ja im Kopf nicht aus,
wenn hier bei jeder Änderung,
jetzt hat sich SDK-Config
echt geändert, okay. Guck mal, bei
jeder fucking Änderung
kompiliert der neu.
Also, ich mein, es muss an,
wir können das jetzt mal ausprobieren.
Ich ändere das jetzt mal tatsächlich
nicht in CLion, sondern direkt hier,
weil das, ich,
da bist du ja verrückt bei.
CMakeBuildDebug,
wo kommt denn das überhaupt her?
Das, das kommt
von,
wo steht das denn?
Woher weiß der überhaupt,
dass er das anlegen soll?
Alter, C++
macht mich fertig, äh.
Also, guck mal, wenn ich das jetzt hier drinnen
ändere,
dann, so,
einfach direkt einfach in Wim alles machen,
dann, nix,
guck, überhaupt kein Problem.
Hier drinnen geändert,
dann wird nur, nur
das Main-File neu compiled.
So, und wenn ich das in CLion
mach, dann wird aus irgendwelchen
Gründen alles neu kompiliert.
So.
Das liegt an diesem Debug-Projekt.
Wahrscheinlich.
So, Problem ist,
jetzt liest er die Sachen nicht mal ein, oder?
Ey, ich bin komplett verwirrt,
äh. Guck mal, ich hab jetzt
nix geändert, Leute. Ich hab nix geändert.
Ich hab, guck, ich hab, ähm,
und reicht das jetzt schon
zum, ja,
jetzt baut er neu.
Und an diesem Build, ja, ja, ja.
Also, wisst ihr, was ich mich
frage? Ich
kompiliere das nicht über CLion.
Warum legt er einen
Fake-Build-Debug an?
Jetzt, jetzt nicht mehr.
Aber wenn ich hier wieder was eintrage, so.
Ach, Moment, das hat er einfach nur eben angelegt.
Ne, jetzt geht's.
Jetzt geht's. Das lag an diesem komischen
Ordner. Guckt, jetzt kann ich hier drinnen
ändern, was ich will.
Und jetzt juckt's hier nicht mehr. Jetzt, jetzt geht's.
Ey, das ist doch, das ist doch wirklich
immer voll von Arsch.
Ey, aber jetzt findet er meine,
ey, ich raste aus hier.
Dafür ist jetzt die Code-Completion
kaputt, ja.
Muss das irgen-, ich mein,
wir sind im Jahr
2024, man.
Was macht denn das
C++-Gremium die letzten
150 Jahre?
Es ist doch vollkommen egal,
in was meine IDE läuft.
Die kann,
die kann auf Erlang-Basis laufen.
Wie? Das ist nicht egal.
Was juckt's
denn? Ich kann das auch in E-Mail
X machen.
Aber was, was juckt, was juckt
das CLion überhaupt?
Was fummelt er, was fummelt er an meinem
fucking Projekt hier rum?
Wie sieht denn die CMake-List, an dem macht
er ja gar nix. Guck, da macht er nix dran.
Das juckt, das juckt den nicht.
Warum geht denn, warum geht denn die Completion
nur,
wenn ich
da ne Configuration
drin hab? Ich mein, das liegt bestimmt
auch mit daran, dass ich nicht weiß, was ich mach.
...
Ach du Scheiß, auch gar nicht finde hier in den
Options.
Alter!
Compile in der CLion-Shell und
alle Probleme sind gelöst? Meinst
du? Da bin ich jetzt mal
gespannt. Okay.
Ja, da mach ich das wieder an.
So...
Okay.
So und jetzt geht die
Autocompletion wieder.
Nee die Autocompletion ist immer noch kaputt. Ach,
der der Moment Moment Moment. Der updated
noch... Warum brauch ich überhaupt ein Profil,
richtig funktioniert updating symbols ok hat er jetzt drin ok jetzt macht er gar nichts mehr ok
in glut aber jetzt hat er die code completion gecheckt ok so was hast du jetzt wenn ich das
eben im terminal von sie das kann ich mir nicht vorstellen dass das irgendwas damit zu tun hat
ach so existier mal jetzt muss das hier wieder exportieren das auch genau das gleiche da findet
er nicht mal wisst ihr was leute man weiß ja nicht dass 23 muss gleich ins bett mit rust wird
das hätten wir andere probleme wahrscheinlich wird das gar nicht gescheit funktionieren damit
in lisp genau und dann in emacs die terminal auf wo müssen wir hin tmp
weg
export das was hier mal weg also ich sag das hat nichts mit dem terminal zu tun in in in see
line kann ich jetzt zu nein kann ich auch nicht so export bild edf flash und er kompiliert wieder
alles und ich wette mir dir wenn ich das jetzt hier weil das ist meine ganz normale schelter
und da merkt doch das ist doch egal ob das jetzt aus ziel einkommen
oder nicht sagt und jetzt noch mal hier was eintragen das liegt an diesem komischen ordner
hier und jetzt wieder alles kompiliert es liegt an diesem komischen ordner das macht das verwirrt
spdf wo kommt er ja weil da genau weil da noch und weil da auch sie mag falls und sowas drin drin
was macht das überhaupt da warum brauche ich den müll
was
Hello world
lässt sie make profiles
und wenn ich das rausschmeiße
was
does
there
dann ist
das Auto komplett kaputt
ey was ist das für ein Schrott das kann es doch echt nicht tapping gut
oder
Good
das ist doch mal einfach nur komplett für im Arsch
wer hat sich das ausgedacht
ich mache jetzt nicht weiter ich gehe jetzt
23u 11
Ja aber das ist doch scheiße
Abgrund政府 scheiße
Nicht..
living in gold
Scheiße. Ich meine, das ist unbenutzbar.
Das ist doch nicht
möglich, sowas.
Kannst du den Ordner ändern? Ja, vielleicht.
Das wäre natürlich gut.
Wie auch immer.
VS Code würde tatsächlich funktionieren, ja.
Ich kann den Output nicht
ändern, oder?
Das ist nicht angenehm. Es ist auf jeden Fall
für den Arsch, wenn das eine
das andere beeinflusst.
Ich meine...
Jetzt mal ernsthaft.
Warum muss überhaupt
ein Projekt,
ein Profil angelegt sein,
damit Autocomplete
funktioniert? Das geht über
die Toolchains hier.
Das ergibt überhaupt gar keinen
Sinn, dass da
ein Projekt angelegt sein muss.
Die Toolchain ist richtig
konfiguriert. So.
Und fertig. Das muss reichen.
Sonst nix.
Das muss reichen.
Aber jetzt, aber dann,
ist die Autocompletion kaputt.
Gleich.
Guck, jetzt ist die Autocompletion kaputt.
Das ist ja absolut dämlich, ey.
Naja.
Gut. Ich geh jetzt pennen, Leute.
Bis morgen. See you.
