Untertitelung des ZDF, 2020
Untertitelung des ZDF, 2020
Untertitelung des ZDF, 2020
Untertitelung des ZDF, 2020
Untertitelung des ZDF, 2020
Untertitelung des ZDF, 2020
Untertitelung des ZDF, 2020
Untertitelung des ZDF, 2020
Untertitelung des ZDF, 2020
Untertitelung des ZDF, 2020
Untertitelung des ZDF, 2020
Untertitelung des ZDF, 2020
Untertitelung des ZDF, 2020
Untertitelung des ZDF, 2020
Untertitelung des ZDF, 2020
Untertitelung des ZDF, 2020
Untertitelung des ZDF, 2020
Untertitelung des ZDF, 2020
Untertitelung des ZDF, 2020
Untertitelung des ZDF, 2020
Untertitelung des ZDF, 2020
Untertitelung des ZDF, 2020
Untertitelung des ZDF, 2020
Untertitelung des ZDF, 2020
Untertitelung des ZDF, 2020
Untertitelung des ZDF, 2020
Untertitelung des ZDF, 2020
Untertitelung des ZDF, 2020
Untertitelung des ZDF, 2020
Untertitelung des ZDF, 2020
Untertitelung des ZDF, 2020
Untertitelung des ZDF, 2020
Untertitelung des ZDF, 2020
Untertitelung des ZDF, 2020
Untertitelung des ZDF, 2020
Untertitelung des ZDF, 2020
Untertitelung des ZDF, 2020
Untertitelung des ZDF, 2020
Untertitelung des ZDF, 2020
Untertitelung des ZDF, 2020
Untertitelung des ZDF, 2020
Untertitelung des ZDF, 2020
Untertitelung des ZDF, 2020
Untertitelung des ZDF, 2020
Das Wort Terminal offendet mich unglaublich. Bitte entfernt das Terminal aus Visual Studio Code.
Das wird ja gut.
So, und dann, da sieht man ja auch schon, in was für einer Lage man sich manövriert bei sowas.
Weil wie möchte man es jetzt wirklich schlüssig begründen, dass man hier das sofort macht,
und bei dem anderen, unabhängig davon, ob er Troll oder nicht, der quasi Todesängste durchstehen muss,
jedes Mal, wenn er das Wort Terminal liest, wie will man das rechtfertigen,
dass der wichtig ist und der andere nicht, oder der hier nicht und der andere wichtig.
Kann man eigentlich nicht.
Deswegen sollte man bei solchen Projekten einfach den Ball ein bisschen flacher halten, sowas.
Der E-Axis ist am Start.
Pock? Ja, aber nicht lang.
Nicht lang.
Ja, Michael, 50 Billiarden.
Ich bin aber nicht lange da.
Ich bin nur da, bis Essen da ist.
Über die Android-App.
Über die Android-App kann ich jetzt nicht bauen, weil mein Tablet drüben ist.
Also meine 14 Tablets.
Es ist so krass, wie sich mittlerweile Tablets hier angesammelt haben, ohne Ende, ne?
Zwei Shield-Tablets, ein Asus-Tablet,
zwei Fire HD 10, Fire HD 8,
ein Tegra Note,
ein iPad,
drei iPhones,
Alter, so viel, so viel Geschiss.
Wer braucht das eigentlich alles?
Da sind wir heute wieder beim Thema Weihnachten, ja.
Wer braucht das eigentlich alles, was man da so kriegt?
Weiß nicht.
Brauchen tut man es eigentlich nicht.
In der Android-App geht eine 720p.
Das liegt bestimmt an meinem Codec.
Könnte ich mir vorstellen, weil die Probleme, oder beziehungsweise, das lief ja nach den 40 FPS liegen.
Oh, guck mal.
Oh Gott, ich bin offended, weil Google eine Schneekugel hat.
Endlich.
Android ist das Problem.
Android hat ziemliche Probleme mit Hardware, H.264-Decoder.
Liegt nicht so sehr an der Android-Version, sondern liegt an der Hardware.
Zum Beispiel funktionierte, das muss man sich mal vorstellen, dass es echt noch ein Ding ist,
bis vor einigen Jahren auf ganz vielen Android-Tablets,
funktionierte im Chrome, auf YouTube, der H.264-Decoder.
Nur die Software.
Also nur Software-Decoding, keine Hardware-Decoding.
Da muss man tatsächlich mal sagen, das ist eine Sache, die kriegt Apple seit 10 Jahren hin.
Ich meine, H.264 ist uralt.
Hat das 15 Jahre alter Codec oder so.
Ja.
Von wann ist denn der?
2003.
Das ist uralt.
Das ist Steinzeit.
H.264-Codec.
Und Android hat es bis vor ein paar Jahren auf vielen Geräten nicht geschafft.
Hardware-Videos, Hardware-Zutikoren im Browser.
Mittlerweile kriegen sie es ganz gut gebacken, weil die Hersteller auch darauf achten.
Da hat es Apple halt leichter.
Apple muss halt im Endeffekt nur seinen eigenen Crap supporten.
Dass die Zukunft, was Massenspeicher angeht,
also im Business-Umfeld,
dass das schon immer mehr in Richtung Cluster-Files,
also nicht Cluster-File-System,
sondern so Distributed-Storage.
Sowas wie Ceph oder ähm...
Wie heißt das andere?
Wie heißt das zweite, was noch bekannt ist?
Ceph und...
Cluster ist nicht das, was ich meine.
Was ist jetzt voll angesagt?
Cluster kennt...
Ne, das meinte ich nicht.
Irgendwas, es gibt doch irgendwas Neues, was jetzt voll angesagt ist.
Letztens erst gesehen.
Cinta?
War das Cinder?
Ne, ne.
Ach, keine Ahnung.
ADFS, kann sein.
Ist ja auch egal.
Muss mal kurz in meine Mails gucken.
Nicht, dass die Liefertypen der Meinung sind,
ich war nicht da oder sowas und mein Essen nicht anrückt.
Die haben das nämlich diesmal anders gemacht.
Heute Mittag haben wir normal gefuttert.
Und für heute Abend haben wir gesagt, wir bestellen was.
Und wir haben jetzt wirklich Burger bestellt für heute Abend, ey.
Aber nicht McDonalds oder so, sondern richtig nice Burger.
Hier, vielen Dank für deine Bestellung.
Okay, ne, ne, die müssen noch...
Die müssen noch gleich kommen.
Letzte Warnung.
Please read now.
Letzte Warn...ja, ist klar.
Ne, nicht McDonalds.
Wir haben bei uns einen ziemlich guten Burgerladen.
Und direkt ja auch liefert.
Excellent.
Das ist Big Brain hier, den weißen Rahmen auf weißem Untergrund zu machen.
Da sieht man nix.
Was hast du für ein Setup?
Wat?
Ich weiß nicht, was du dich beziehst gerade.
Äh, FusselTV.
Also ich hab ja hier im Stream mal vor einer Weile ein bisschen rumexperimentiert.
Ich hab jetzt hier meine Kiste zusammengebaut mit, ähm...
2 TB System-SSR-System.
14 TB HDD.
Für Backup-Geschichten.
Und 10 GB PC-Express-Karte.
Für wenig Geld.
Aber das ist kein Build, wo ich großartig empfehlen würde, nachzubauen, ehrlich gesagt.
Das ist zu...zu experimentell.
Ach, PC-Rig. Ähm...
Aktuell hab ich ein 8700K.
Mit ner 1080P.
Mit ner 1080Ti.
Und...
16 GB RAM?
16 GB RAM, ja.
Wobei ich kurz davor war, vor einer Woche,
mir nen, äh, Ryzen 3950X zu bestellen.
Und dann letzte Woche nochmal kurz davor,
mich doch vielleicht nen Threadripper 3960X zu bestellen.
ZogNation fragt...
Ich habe eine Frage an dich.
Ich studiere Informatik und bin bei C und C++ bei den Pointern hängengeblieben.
Oh, sehr schönes Thema.
Ah, excellent.
Ähm...
Hm.
Was ist der Nutzen? Wofür nutzt man es?
Anwendungsbeispiele für den dümmsten Informatikstudenten wie mich.
Ahem.
Wofür man Pointer benutzt.
Wenn ich dir jetzt sage...
Um sich, äh, Speicheradressen zu merken...
Bringt dir das dann irgendwas?
Ein Pointer ist ne Variable, wo ne Adresse von deinem Speicher drinsteckt.
Was ist ein schönes Beispiel, wofür man nen Pointer braucht?
Zum Beispiel...
Wenn du...
Wenn du von einer Funktion...
Genau.
Der Tommy sagt es eigentlich ganz gut.
Mal angenommen, du, ähm...
Hast irgendwo...
Irgendwo im RAM...
Ja?
Hast du, ähm...
Sachen stehen, die deine Anwendung brauchen.
Es ist vollkommen egal was.
Ja?
Hast du, ähm...
Egal was.
Ja?
Sachen.
Ist auch egal um welche Anwendung.
Keine Ahnung.
Audiodaten.
Hast du vollkommen wurscht.
Ja?
Irgendwas.
Du hast es so.
Und, ähm...
Irgendwo legst du das Ding an.
Allerdings die Stelle...
Wo du das anlegst und befüllst...
Ist ja nicht unbedingt die Stelle...
Wo du es benutzt.
So.
Und wie...
Bekommst du denn jetzt die Information...
An welcher Stelle im Arbeitsspeicher...
Deine Daten sind...
Transportiert an die Stelle...
Wo du sie benutzen willst?
Das geht ja nur mit einem Pointer.
Im Prinzip ist jede Variable ein Pointer.
Stimmt nicht so ganz.
Ja, also das kann auch im Cache von der CPU...
Und generell im...
Aber...
So mal theoretisch.
Also von der Idee her ist jede Variable ein Pointer.
Irgend...
Weil eine Variable...
Die machen das natürlich schöner.
Ähm...
Die musst du nicht von Hand dereferenzieren und sonst was.
Ähm...
Wenn du jetzt eine Variable hast...
Wo eine Zahl drinnen steht...
Dann steht die Variable ja nicht...
Da steht die Zahl ja nicht...
In dieser Variable.
Sondern...
Die Zahl steht irgendwo...
In irgendeinem Speicher.
Und die Variable weiß...
Wo die Adresse ist.
Wo die Zahl steht.
Naja, die Sache...
Da fehlt dir die Vorstellung für...
Ähm...
Ähm...
Naja Tommy, das ist jetzt zu viel.
Ähm...
Außerdem ist es im Prinzip alles RAM.
Egal ob Stack oder Heap.
Ist alles RAM.
Der einzige Unterschied ist...
Ähm...
Dass die Sachen...
Ähm...
Automatisch quasi weggeschmissen werden.
Nachdem die Funktion zu Ende ist.
Und das eine...
Ich glaub in C das eine unten anfängt und das andere oben.
Aber im Prinzip ist beides RAM.
Ich überleg grad...
Wie könnte man das...
Wir machen jetzt mal...
Wir machen jetzt mal was.
Äh...
Es kann aber jederzeit sein, dass mein Essen kommt.
Da sag ich euch gleich.
Also...
Wir machen jetzt mal...
Wir machen jetzt mal...
Die VM an.
Wir bauen mal ein C++ Projekt auf.
Bestes Thema für Weihnachten.
Ne, müssen wir gar nicht.
Ich hab nur noch viel bessere Ideen.
Wir können das...
Ich kann das in meinem letzten...
In meinem letzten .NET Projekt sogar zeigen.
Das kann ja unsave Pointer.
Wir...
Aber danach können wir uns auch nochmal C++...
Ich hab...
Ich hab ein gutes Beispiel für...
Ich hab ein gutes Beispiel wofür man Pointer braucht.
Ähm...
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
So.
Also.
Muss also grad mal die Stelle finden.
Genau.
Das hier!
Also.
Das hier ist ne...
Das hier ist ein Programm was im Prinzip Videos von...
Videostream von der Webcam liest.
Ist erst mal egal was das macht.
An dieser Stelle...
Warum habe ich eigentlich kein...
Kein Highlight, kann mir das denn mal jemand erklären?
Warum hab ich kein Highlight?
Ich...
ein bisschen Highlighting und Autocomplete
jetzt. Wäre nicht verkehrt.
What?
Mal kompilieren vielleicht?
What?
Ich habe überhaupt keine .NET-Version installiert.
What?
Na gut.
Fucker. Habe ich das
vielleicht im falschen Visual Studio aufgemacht?
Was habe ich denn aufgemacht? Ich habe 17
aufgemacht, ich Kacknoob, oder?
Ich hätte 19 aufmachen müssen.
Oh, Essen ist da, Leute. Ich muss mich beeilen.
Also, ich versuche das jetzt mal kurz zu erklären.
Da da muss ich auf.
Also. Ah, hier
funktioniert es. Okay. Also.
Also.
So. Wie gesagt, das ist ein Projekt,
was Videostreams von der Kamera liest.
Und du siehst, hier sind ganz viele, schon mal ganz
viele Pointer am Start. Das ist jetzt was C-Sharp, aber
es ist unsafety sharp. Das ist im Prinzip
syntaktisch so gut wie kein Unterschied,
was Pointer angeht zu C++.
Zu allem anderen ist es ganz schön.
So. Guck mal. An der Stelle...
An der Stelle hier.
An der Stelle
reserviere ich Speicher für ein Packet.
Ein Packet ist bei FFmpeg
das encodedes
Video.
Daten. Ist auch egal. Das hier ist ein Pointer.
Und zwar ein Pointer zu einem
AV-Packet.
So. Hier legt er den Speicher an.
Und hier merkt er sich
die Adresse zu dem
Speicherbereich. So. Du siehst,
in dieser Funktion hier
verwende ich
nirgendwo oder mache ich nichts
mit diesem Packet.
In der ganzen Funktion passiert direkt
mit diesem Packet nichts.
Das Einzige, was ich mache, ich gucke, ob das
in den Videostream ist, ob ich das weiterlesen will.
Aber ansonsten, ich lese hier
einmal den Input rein.
So.
Ich wurde gerade noch mal darauf hingewiesen, dass das Essen da ist.
So.
Das Einzige, wo ich
was in der Funktion mache, ist das hier.
Und
die eigentliche Arbeit,
passiert zum Beispiel in
in dieser Funktion hier.
Da wird ein Thumbnail genommen.
Meine Mutter hat die Tür aufgemacht.
Hier wird ein Thumbnail aus dem
Videostream extrahiert. Die Sache ist
jetzt bloß die, wie kriege ich denn die
Information, hier sind die
Videodaten, also hier stehen quasi
meine, meine, ähm,
meine verschlüsselte, nicht verschlüsselte, meine
encodete Videodaten drin. Da.
Hier in diesem Packet.
Wie kriege ich denn die Information,
dass dort in diesem Speicherbereich,
das hier ist ja nicht wirklich,
hier, hier stehen ja nicht wirklich die Daten drin,
sondern hier ist ja quasi bloß
die Speicheradresse drin gespeichert,
ähm, wo
der Speicherbereich anfängt,
wo die Videodaten drin stehen.
So. Und wie kriege ich denn diese Informationen
jetzt in diese Funktion hier unten,
um dort raus einen Thumbnail zu extrahieren?
Wie sollte ich das großartig ohne Pointer machen?
Und noch viel, noch viel interessanter ist,
ich speichere mir sogar die letzten, für die letzten
zehn Sekunden Videostream speichere ich mir alle Packets.
So. Wie sollte ich das machen, ohne Pointer?
Geht ja gar nicht.
Ich muss ja die Daten irgendwo hinschreiben und
hinschreiben bedeutet irgendwo im Speicher, ne?
Und ich muss mir natürlich merken,
wo im Speicher die Sachen sind, weil,
Ich kann ja schlecht jedes Mal 16 GB Speicher durchsuchen, wo meine Daten anfangen.
Mal davon abgesehen, ich weiß ja gar nicht, wie meine Daten aussehen, dass ich sie in 16 GB Arbeitsspeicher wiederfinden würde.
Und hier steht einfach nur der Zeiger drin, hier an dieser Adresse.
Man muss ja auch sagen, Pointer beschreiben nicht wirklich, die Dinger nennen sich zwar, das ist ein Int-Pointer, das ist ein AV-Packet-Pointer.
Aber mal genau genommen sind sie das alle gar nicht.
Eigentlich sind das alles einfach nur Zeiger auf eine Startspeicher-Adresse.
Und was da drin steht, das kann prinzipiell alles sein.
Das muss ich aber wissen, weil ich muss ja wissen, wann ich aufhören muss zu lesen.
Also sprich, wenn ich nicht wüsste, dass das ein Int-Pointer ist, ein AV-Packet-Pointer,
oder sonst was in der Richtung, oder noch interessanter wird es ja bei irgendwelchen Arrays.
Ein Array in C ist im Prinzip, oder generell ein Array ist eigentlich nichts anderes wie die Information,
wo geht das Array los und aus welchem Typ besteht das Array.
Wenn du diese zwei Informationen hast, weißt du, in welchem Abstand deine Elemente im Speicher liegen.
Gibt noch theoretisch andere Varianten, aber das musst du wissen.
Du brauchst den Typ, dass du weißt.
Wie lang ist ein Element?
Und du musst wissen, wo es losgeht.
Und wenn du die zwei Informationen hast, kannst du die Sache lesen.
Und wenn du das nicht hast, ist es halt schwierig.
So, und an der Stelle ist es halt so, ich brauche an der Stelle, wo ich das Packet anlege,
beziehungsweise den Speicher reserviere für das Packet, mache ich damit gar nichts.
So wirklich was machen, tue ich erst hier unten.
Und dementsprechend übergebe ich hier den Zeiger auf den Speicherbereich.
Wo das Packet zu finden ist, an diese Funktion und die extrahiert dann ein Thumbnail draus.
Anderweitig könnte ich das überhaupt nicht machen.
Wie sollte ich das sonst, wie sollte ich die Daten sonst von da nach da bekommen?
Die einzige Variante, die es sonst noch gäbe, wäre bei jedem Funktionsaufruf quasi den kompletten Speicher, den ich brauche,
immer zu kopieren.
Was natürlich performancemäßig nicht so Sinn und Zweck der Sache ist.
Den Ansatz gibt es ja auch, dass man quasi alle Argumente quasi immer kopiert, anstatt es in den Pointer zu übergeben.
Aber unter der Haube ist so ziemlich alles, was irgendwie nach Variable aussieht, in den Pointer.
Ich weiß nicht, ob dir das jetzt großartig geholfen hat.
Aber eigentlich ist...
Ich wollte sagen, Pointer sind was Abstraktes, aber eigentlich stimmt das gar nicht.
Ähm, Pointer sind eigentlich so das Grundlegendste, was es in einem Programmablauf,
neben so Basiskontrollstrukturen, ja, was es gibt.
Wenn du dir jetzt mal vorstellst, du hast so eine ganz billige Schleife, so in Assembler oder so.
Du musst ja...
Du musst ja irgendwo der CPU sagen, wo was ist.
Ja?
Also selbst wenn du...
Oder selbst wenn du ein If hast in Assembler, so nach dem Motto, gucke, ob das gleich ist.
Wenn nicht, dann springe dahin.
Ja, wohin soll er denn springen?
An eine Speicheradresse.
An was sonst?
Ich küsse deine Augen.
Mach es lieber, wie der Tommy gesagt hat.
Geh die Pointer küssen.
Oder küsse dein Informatikbuch.
Oder noch besser.
Ich muss jetzt off.
Heute ist Weihnachten.
Küsst weder Pointer, küsst noch euer Informatikbuch, sondern küsst vielleicht Leute, die es wollen.
Heute ist ja immerhin Weihnachten.
Und noch eine Sache.
Ich könnte jetzt noch ewig, ich könnte jetzt noch ewig, ewig weitermachen über Pointer.
Aber eine Sache.
Es ist egal, ob ihr jetzt gläubig seid oder nicht.
Ihr wisst, dass ich es persönlich jetzt mit religiösen Sachen nicht so habe.
Aber es ist egal, ob ihr gläubig seid oder nicht.
Erstens, erfreut euch, dass ihr da sein könnt.
Ja, das ist auch nicht selbstverständlich.
Ich habe letztens ein Video geguckt.
Da ging es darum, wie unwahrscheinlich es ist, dass auf irgendeinem Planet im Universum überhaupt kleinste Lebensformen entstehen.
Und das ist sowas von unwahrscheinlich.
Dass sich eigentlich jeder glücklich schätzen sollte.
Dass er nicht nur eine simple Lebensform ist, die da so irgendwie in irgendeiner Brühe rumschwimmt.
So Einzeller.
Wobei man wahrscheinlich davon ausgehen muss, wenn ich mir manche Leute angucke, dass da nicht viel mehr als Einzeller zu holen sind.
Sondern, dass ihr derjenige seid, der ihr seid.
Freut euch, dass ihr da seid.
Freut euch, dass es euch ganz gut geht.
Und dass es vor allem euren Angehörigen auch gut geht.
Hoffe ich mal zumindest.
Verbessert mal ein paar Tage nicht die Welt.
Denkt nicht an die Arbeit.
Weil, ganz ehrlich.
Keiner, der auf sein Leben irgendwie zurückblickt, wird sagen, oh scheiße, ich habe nicht mal mehr gearbeitet.
Das habe ich schon oft gesagt.
Macht einfach mal ein paar Tage das, was ihr gerne macht.
Und vor allem mit den Leuten, mit denen ihr vielleicht noch nicht so viel macht.
Oder irgendwie keine Zeit habt wegen irgendwelchen Gründen.
Und macht einfach das.
Wovon ihr denkt, dass ihr selber gerne darauf zurückblicken möchtet, dass ihr es gemacht habt.
Big brain.
Big brain wins.
So, Leute. Wir sehen uns. Macht's gut.
Bis denn. See you.
