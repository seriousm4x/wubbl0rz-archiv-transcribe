Exzellent, so, auf geht's, ach, fällt gerade was ein, ich habe gerade gelesen, dass Amazon, oder ich weiß nicht, ob das nur Amazon ist, wieder diese ganze Fake-Angebote, naja, was heißt Fake-Angebote, das ist ja keine wirklichen Fake-Angebote, aber diese extrem überhypte Black Friday Week wieder gestartet ist bei Amazon,
und das Ding ist massive überhypte, da gibt es zum größten Teil nur Müll, das war an, wie gucken wir schnell, wie gucken wir schnell, bevor wir weiter basteln, wie gucken wir schnell, also, was haben wir denn hier, Lightning Deals, All Deals, Amazon Devices ist immer nicht schlecht, tatsächlich, Amazon Devices kann man sich immer geben, wo sind denn Amazon, hier, Amazon Devices kann man sich immer geben, die sind immer relativ billig,
ist das eine,
Trillerpfeife, oder so, was ist das denn, ach, das ist ein Sessel, what the fuck, was, das sieht nicht bequem aus, was ist das, ist das, wenn man irgendwie benommen ist, dass man Blut in den Kopf kriegt, oder, what the fuck, okay, normalerweise geht das, das sieht nicht bequem aus, oder, meint ihr, das ist bequem, ich glaube nicht, dass es bequem ist,
und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und, und
Razer für Gamer ist, ist das
für, ich möchte irgendwas
äh, stylisches
haben, was wahrscheinlich nicht bequem ist
keine Ahnung, braucht man nicht
aber bei, ich darf ja nicht sagen, was
Stühle angeht, ich darf ja echt nicht sagen, was Stühle
angeht, mein Bürostuhl hat mehr
gekostet als das Ding
aber gut
ich darf, ich darf ja
wirklich nichts sagen, ähm
Extreme 9 Monate
Dankeschön für den Sub, huge
Weeps out
oder in, man weiß
es nicht, schwankt von Tag zu Tag
so, wo sind
dann Amazon Devices
Amazon Devices sind wirklich immer
günstig, ich glaub die Anzeige ist kaputt
also ich guck immer, was ist, was gibt's
ok, was gibt's
für Amazon Devices, das ist
immer interessant
und als nächstes guck ich immer, was es für
Smart Home Devices gibt
oder Netzwerksachen, manchmal gibt's was
günstiges, aber der Rest ist ziemlich sinnlos
was hast du für einen Bürostuhl, den hier
den hier
äh, mit dieser
der Lehne hier, äh mit der
mit der Kopfstütze hier
ja, das Teil
sieht nicht so aus, als wäre es teuer
ist aber teuer, aber ist
legit der geilste Bürostuhl, den es gibt
ja, jetzt kommen die Leute wieder an und
sagen, nein, nein, nein, Hermann Miller
Hermann Miller, sag ich euch, das Ding
beste, beste
das heißt nicht, dass es nicht auch noch andere gute Bürostühle
gibt, aber
äh, bis jetzt ist der der, der der beste
übrigens wisst ihr, was ich witzig finde
ich hab, ähm, gerade unten
bisschen, äh
Radio angemacht, als ich Abendessen war
und ich hab ja vor einer Weile was getwittert, ne
muss ich, muss ich grad nochmal, grad nochmal sagen
was?
der Frasier hat ein Video hochgeladen
das glaub ich jetzt nicht
dann muss der, dann muss der mit mir auch ein Video aufnehmen
an Weihnachten
lehnst du dich viel an die Kopfstütze an?
ehrlich gesagt
nicht so
mittlerweile mehr, weil ich noch so ein Kopfkissen dran hab
der, der Frisör hat ein Video hochgeladen?
ernsthaft?
ich reagiere auf erstes Video, 0,10 Jahre her
oh, ich muss, ich kann
der Frasier
excellent
was macht der denn hier auf einmal?
ich hab jetzt, glaube ich, schon 20 Mal angefangen, weil ich überhaupt nicht mehr weiß, wie das überhaupt geht
hahaha
mit dem Videos aufnehmen, ich weiß nicht immer, hab ich noch einen Schnittpunkt
was ist das überhaupt für eine Kack-Auflösung, alter?
hahaha
...Kram hab
ja, kenn ich nicht, mach gleich weiter
ich weiß nicht, wie man überhaupt ein Video schneidet, aber ich denke, mein Cut am Ende und am Anfang setzen wird wohl ganz easy sein
also eins muss man ja mittlerweile sagen
früher haben ja die Leute immer gesagt, der Fabian sieht aus wie 17 oder 18 oder so
mittlerweile sieht er aus wie 23, ja
aber er ist 36, der ist so alt wie ich
ähm, ja, was soll ich sagen?
kommt wahrscheinlich nur durch die Netto-Videos, ne?
nur Vieron
ansonsten würde er wahrscheinlich weiter aussehen wie 18
ich mach ein Video
und das ist jetzt, glaube ich, fünf Jahre her
nein, ich...
...dass das letzte Video auf mein Video reingekommen ist
so war das nicht gemeint
und jetzt...
ist mir eigentlich egal
ich fand's ja immer witzig, weil die Leute das geschrieben haben
ich will irgendwie...
oder was dachte ich mir eigentlich?
ich bin heute Morgen aufgewacht
also kurzes Storytelling
ich bin heute Morgen...
und ich kann mir... ich guck mir... also
ich will mir jetzt nicht im Stream 30 Minuten Video angucken
ähm...
das muss ich... das muss ich mir selbst mal in Ruhe angucken
und dann irgendein blödes Kommentar drunter schreiben
was macht der denn überhaupt?
ich reagiere auf erst das Video
das...
das ist wo wir zusammen mit der Silvana gespielt haben, oder?
whatever
äh, war so das Standard-Ding
haha
folgendes
...wenigsten jedes Jahr mal zwei, drei Videos gemacht hab
ich meine...
ja, Fabian, du... ey...
okay, ich bin der Letzte, der sagen darf
ich hab's schon immer gesagt, ja
ähm...
der Fabian...
der hatte, falls ihr das nicht kennt
der hat nen...
nen Fitness-Channel mal gemacht
so, Leute, erst mal...
hier, der Fabian hat mal nen Fitness-Channel gemacht
weil der hat übelst krasse hier Muskel-Stells gemacht
und der hat teilweise auch mit dem Longboard
und den Pflegeprodukten für...
der hat übelst viele Views teilweise bekommen
und... und dann hat er einfach aufgehört
der hätte weitermachen müssen
ich sag euch, so wie es ist
der Fabian...
der hätte...
der größte Männer-Beauty-Channel in Deutschland werden können
der Kerl, der sieht wie...
wie geschaffen dafür aus, sowas zu machen
der hat Ahnung davon
ich meine, der hat das nicht umsonst gelernt
und arbeitet auch seit Jahren quasi in dieser Branche
ja
und es gibt viel zu wenige...
männliche...
Beauty-Channels auf YouTube
der Fabian könnte der größte deutsche Beauty-Männer-Channel sein
keine Frage
hätte er das mal weiter gemacht
aber ich weiß, ich weiß
ich könnte sicherlich auch einer
der zumindest...
nein, die größten nicht, aber...
ganz gut laufenden Channel haben, wenn ich was machen würde, ja?
nein, das ist Männern nicht egal
das ist überhaupt nicht so
man denkt vielleicht, dass es...
vielleicht mag das...
vielleicht mag das...
anteilmäßig Männern egal...
mir egal sein, aber es gibt immer noch genug
und es gibt auf YouTube kaum...
Beauty...
Männer-Beauty-Channels, die man sich geben kann
glaube ich zumindest
ich habe keine Ahnung
ja, ja
wir labern immer mal ab und zu im Discord
so alle zwei Jahre oder so
oder alle paar Wochen mal
oder alle paar Monate mal
sinnlos Zeug
aber es ist...
ich sage euch wie es ist
das war ja schon immer so, dass wir...
jetzt teilweise mal irgendwie
ein Jahr lang kaum Kontakt hatten oder so
und dann mal ein bisschen telefoniert haben und so
aber es ist...
ich sage euch wie es ist
wenn mich der Fabian jetzt anrufen würde und sagen
hier...
keine Ahnung
er braucht Hilfe bei irgendwas
ich würde dem sofort helfen
ja
also es ist...
es ist jetzt nicht so, dass wir uns nicht leiden können oder so
wir haben nur gerade wenig, was wir zusammen machen können
wir sind ja schon die ganze Zeit auf der Suche
dass wir irgendein Spiel wieder finden, was wir zusammen spielen können
aber irgendwie gibt es da nichts, ja
ähm...
It's Waffle
im Dezember gibt es wieder ein paar Videos
wenn ich es dann endlich schaffe
so, ich wollte jetzt mal kurz Amazon durchgucken
bevor wir...
bevor wir weitermachen
ja, Kengi, das ist hier Big Brain
jetzt auf den Geschmack...
mal wieder mit dem Kabum gesprochen
ja...
ähm...
vor...
frag ich nicht...
zwei Monaten oder so...
waren wir essen in Frankfurt
hier, wir waren hier essen und ich zeige es euch mal
ähm...
Sushi Frankfurt
oh, wie hieß das Ding?
äh...
der Willi Brandplatz schreibt man übrigens anders
ähm...
hier, Carmon Nudel Sushi...
Carmon...
das habe ich euch sogar schon mal gesagt hier
Carmon Nudel Sushi Bar
äh...
was der Kabum macht
ich... also...
ich erzähle euch das jetzt nicht im Detail
weil ich weiß nicht, ob er das will
und außerdem geht das...
ja, soll er euch das selbst erzählen, wenn überhaupt
äh...
der ist bei einem...
ich umschreibe das mal so...
der ist bei einem recht großen deutschen Autohersteller
und macht da...
irgendwelche...
frag mich nicht...
Stonks...
Sachen
einfach wieder in der Ecke
exzellent, exzellent
ja, genau, hier waren wir letztens futtern
und das ist wirklich Poggers
das war aber noch, wo es wärmer war und wo noch nicht Corona am Start war
und übrigens...
was witzig ist
ich habe ja vor einer Weile...
das ist das, was ich eigentlich sagen wollte
ich habe ja vor einer Weile getwittert
und zwar...
was ich witzig fand
wo sie am 10. die Corona-Maßnahmen...
äh...
irgendwann hier...
beschlossen haben
und...
was ich gehe...
genau
also...
ich habe ja geschrieben
ah ja, Lockdown November
die haben ja...
die haben ja quasi groß angekündigt
Corona Slowdown Lockdown
nur im November
und dann setzen wir uns wieder zusammen
und ich habe damals schon gesagt
Leute...
diese Aussage mit 4 Wochen...
das ist doch einfach nur um die Leute zu beruhigen
und...
was kam vorher für eine News im Radio
ich weiß Radio und 2020
und jetzt haben sie gesagt
ja, also wir könnten das auch bis 2012 machen
hohohoho
ja
ja
und da habe ich mir gedacht
Max...
du hast mal wieder recht
aber man muss...
man muss ja eh mal ehrlich sagen
wenn es nach mir geht
äh...
2020
nicht 2020
2012
keg
keg W
ähm...
was ist denn
also Leute
jetzt...
jetzt...
jetzt...
jetzt habe ich...
jetzt habe ich...
also...
also...
warte mal
also...
das hier ist
keg W
das hier ist
keg Triple U
und was ist das hier?
nee
nee, nee
nee
nee, Moment
das ist W
das ist...
das ist das schon
Quad U
Quad U
das ist Six W
das hört sich aber scheiße an
keg Triple U ist viel besser
aber keg Triple U wäre das hier
keg W
keg Triple U
keg W W
nee
das klingt aber doof
ich bleibe bei keg Triple U
so, schauen wir mal kurz drüber
also, was...
was haben wir denn hier bei Amazon zu bieten?
Amazon
wir sind ja bei den coolen Leuten
Amazon
das ist ja...
nicht die Amazon
Zeug da
das ist ja auch nicht Ubuntu
sondern
es ist
Chat
äh
Herz 93
ach ja
guck da mal an
das ist aber nicht die...
das ist vom gleichen Hersteller
witzigerweise
das ist vom gleichen Hersteller
aber
ähm
irgendwas anderes
wir können aber mal gucken
ob man es flashen kann
ihr wisst ja
ich bin immer
für Steckdosenleisten
die man flashen...
ich habe mittlerweile
so viele Steckdosenleisten
die kann ich überhaupt
nicht mehr loswerden
ich habe mittlerweile
so viele Steckdosenleisten
die kann ich überhaupt
nicht loswerden
und
ähm
so zeigen wir mal hier
GoSund
Smart
Power
Strip
Tasmota
gucken wir mal
ob das geht
GoSund
schauen wir mal
Tasmota
ne
GoSund
Go...
GoSund
P1 Power Strip
P2 Power Strip
Strip
Trip
RGB LED
Strip
Power Strip
sag mal
wie viele Power Strips
haben die
haben die denn
das ist er oder
das ist
das ist
das ist die Freedom Variante
hell yeah
wo habe ich mein
wo habe ich mein
mein äh
Kokona
warte wo ist mein
wo ist meine
wo ist er
wo ist er
ich finde ihn nicht
wo ist er
Chat
den da habe ich
den da habe ich
den habe ich
ähm
wo ist er
ok
systematisch
da ist er nicht
da ist er auch nicht
da ist er auch nicht
da ist er auch nicht
da
wo ist er denn
da ist er
excellent
da ist er
der hat ja auch ein bisschen äh
Dachschaden
der Wendler
ja
so
also
schauen wir mal
kann man das flashen
GoSund P1
das ist der ne
das ist der hier
100 pro
äh
GoSund
steht da irgendwas von P1 dabei
ach guck mal
läuft prima mit Tasmota
die Leute schreiben
lul
äh
darfst du
das ist ne
das ist ne gute Frage
darfst du das egal noch spielen
ohne dass du in seiner Telegram Gruppe bist
allerdings
woher willst du wissen
dass ich nicht in seiner Telegram Gruppe bin
das weißt du ja gar nicht
vielleicht bin ich in der Wendler Telegram Gruppe
so
also
das ist interessant
das funktioniert schon mal
excellent
excellent
oh da muss man
guck mal
das ist der gleiche Scheiß
kennt ihr das doch irgendwie
KU
KUKOZ0
kommt euch das doch irgendwo bekannt vor
haben wir das
haben wir das vielleicht schon mal irgendwo gesehen
kommt euch das nicht irgendwie bekannt vor diese Aufschrift
mir kommt es fast so als wäre es gestern gewesen
was meint er
äh
Killphil du warst gestern nicht da
deswegen
kannst du es
kannst du es nicht wissen
guck mal was ich gestern gemacht habe
ähm
wo sind meine Videos
da
ach du warst da
als du mich gebanet hast
guck mal
da
wie habe ich das dann überhaupt gemacht
und das ist halt exakt
exakt
der gleiche
der gleiche Chip drinnen hier
da
Kuko
KukoZ0VL1
was auch immer
tujaconvert might not be possible
egal
wahrscheinlich bestell ich mal einen
wobei nein
nein Max
nein
ich bestell nichts
ich bestell Chat
ich bestell ihn nicht
ich bestell ihn nicht
ich bestell ihn nicht
nein
Sabaro
ich bestell ihn nicht
ich hab's
ich hab schon
ich hab noch mindestens
mindestens
mindestens
mindestens
noch
mindestens drei Power-Strips hier liegen, die ich nicht verwende, mindestens drei WLAN-Steckdosen,
die ich vorher gebaut habe und noch zwei Goso, die ich absolut nicht brauche. Dann habe ich
irgendwie noch keine Ahnung, zwölf Shelleys übrig und alle möglichen Dinger. Ich kaufe mir das jetzt
nicht. Das ist total rausgeschmissenes Geld. Nein, nein, nein, nein. Nein, wir bestellen den nicht,
Chat. Es sei denn, ihr giftet mir jetzt vier Subs, dann bestelle ich den. Vier Subs giften,
20 Euro und dann bestelle ich ihn. Aber ansonsten bestelle ich ihn nicht. Wobei,
nee, warte mal, warte mal. Vier bringen gar nichts. Acht? Acht? Weil ich kriege ja nur die Hälfte. Ich
kriege ja nur die Hälfte. Eli Giftos, genau. Nein, nein, nein. Das macht jetzt wirklich einer,
oder was? Bevor ich mal ein Prime-Sub... Nice, nice. Depp1899, danke schön für den Sub. Huge
Subscription. Ups, falsches Sound. Nice, danke schön.
So, ich wollte jetzt aber schon die ganze Zeit mal, ähm, Amazon-Devices schnell durchgucken. Da
ist aber nichts Spannendes dabei. Das lohnt, also diese Feier-, Feiersachen lohnen sich immer,
wenn Amazon was im Angebot hat, wenn man das braucht. Gibt's, gibt's wieder HD10 günstiger?
Ja, das geht. Killfield Stufe 1, danke schön für den Sub. Excellent Subscription.
Nice! Für Amazon. SlaydaTeddy, sieben Monate... Oh, jetzt kommt, jetzt kommt der Scam-Train auch noch.
Jetzt, jetzt Chat, Chat, jetzt willst' der Chat wissen...
SlaydaTeddy sieben Monate, danke schön. Huge Sub. Wen haben wir denn jetzt noch?
GAMHQ drei Monate, auch ein richtig nicer Sub. Jetzt kommt noch der Killfieldexe2311, eins gifted! Der Chat ist noch nicht fertig.
Jetzt kommt noch der Killfieldexe2311, eins gifted. Der Chat ist noch nicht fertig.
Jetzt kommt noch der Killfieldexe2311, eins gifted. Der Chat ist noch nicht fertig.
Chat will jetzt wirklich wissen, dass ich den Kack bestelle.
Ich glaub's nicht. Aber
Chat, ich hab nicht gesagt,
dass das gilt, wenn das alle einzeln machen.
Okay, drei Monate.
Drei Monate. Hajo2,
Dankeschön für den Sub.
Okay, haben wir jetzt...
Kussi, Snickers3,
Dankeschön für den Sub.
Exzellent.
Okay, Leute, ich glaube,
wir haben acht Subs. Ich muss den Kram
jetzt bestellen. Also, wo haben wir das denn jetzt?
Wo
ist es hier? Gosund.
Gosund. Exzellent, Sund.
Oh, wo ist mein Handy für
Two-Factor-Authentifizierung?
Nicht da.
Macht aber nix. Ich kann
einfach vom Handy aus bestellen. Ich bestelle
einfach vom Handy aus. Besser.
Emerson.
Ja, Emerson. Also,
wie heißt das Ding?
Gosund
Powerstrip.
Okay,
da ist er. Black Friday Deal.
20% off.
Alles klar.
Add to Basket.
Jawoll.
Warum genau soll man eigentlich
den Non-Deal-Preis
anklicken bei Amazon? Das ergibt doch überhaupt keinen Sinn.
Okay,
Chat.
Proceed to checkout.
Bam. Place order.
Buy now.
Bam.
Tja, Chat, ich...
Das seid ihr jetzt selbst dran schuld.
Ihr habt jetzt quasi
Geld zum Fenster rausgeschmissen.
Ja.
Ihr habt Zapps gegiftet
und ich hab mir was gekauft, was ich überhaupt nicht brauche.
Excellent. So muss das sein.
Aber trotzdem,
Dankeschön an die ganzen Zapps.
Kannst du dir dann im Stream verschenken, nachdem du was
geflasht hast?
Ja, könnte ich machen.
Allerdings weiß ich nicht, wie das rechtlich ist.
Mal angenommen, ich flashe das und es fackelt einem
das Haus ab. Das wird wahrscheinlich nicht
wegen dem Geflashten abfackeln, aber vielleicht sagt er das.
Dann bin ich da noch dran schuld.
Ne, ne, das mach ich nicht.
Da muss ich an alles denken.
Okay, ich muss nur mal schnell noch die
Smart Home Deals
gucken.
Konnte man das nicht filtern?
Hatten die nicht einen Filter für Smart Home?
Smart Home.
Also.
Alles wahrscheinlich Müll, aber
gucken wir mal kurz.
Die Gosu...
Wie viele Lumen haben die?
Lumen. Die haben gar keine Lumen.
Die haben was? Was haben die?
Also meistens haben die 800.
Oder...
Wo steht da was? Was haben die?
So viel Text.
Mich interessiert, wie hell die sind.
Hier.
800, ja.
Aber wahrscheinlich sacken die.
Die meisten RGB-Lichter sacken richtig.
Deswegen kaufe ich mir ja auch die teuren
von Liflex, weil die sind ziemlich gut.
Die sind unnötig teuer.
Was ist das denn? Classic Design?
Moment.
Ist das eine LED?
Eine Lampe, die versucht, auf Glühbirne zu machen.
Sehe ich das richtig?
Ist das für die Rentner,
die quasi sagen,
mit Glühbirne war früher alles besser.
Und dann sagst du, Opa, guck mal, ich habe eine Glühbirne für dich.
Und dann ist es LED.
Excellent.
So muss das sein.
Ja, aber wozu?
Kann die überhaupt irgendwas? Kann man die dimmen oder so?
Kann die...
500 Lumens? Das ist ja nix.
Filaments hier.
Ja, aber 500 Lumens, da brauchst du ja...
Da musst du ja schon mal vier Stück in den Flur hängen,
dass es da überhaupt ordentlich warm wird.
Wie viele Subscriptions für die Lampe?
Die gibt es doch nicht.
Was ist denn der Vorteil?
Jetzt mal ernsthaft, Chad.
Was ist der Vorteil
gegenüber
einer LED-Lampe, die quasi
ein Fake
Glühbirnenlicht macht
versus eine RGB-Lampe,
die ich von der Farbe her auf Fake
Glühbirnenlicht einstelle?
Ich kann ja mein RGB ja auch komplett einstellen,
sowohl wie weiß-weiß, also die Temperatur
von weiß und
die Farbe und alles. Da kriege ich mit Sicherheit
eine ziemlich ähnliche Farbe hin.
Äh, Moment.
Was ist, Ibaro?
Ist Wirt.io...
Das kommt drauf an,
was du damit machst.
Standardmäßig nicht.
Also da sind übrigens zwei komplett unterschiedliche Paar Schuhe,
Ibaro. Wirt.io
ist
ein paravirtualisierter Treiber
für VMs, also zum Beispiel
für I.O.
und Netzwerk und sowas.
QEMO ist
quasi
der Teil von KVM,
der die
ähm
ganze, ganzen Tools
zur Verfügung stellt, die man verwendet.
Vom Wirt-Manager
bis zu irgendwelchen
äh, Display-Ausgaben,
Treibern, sonst was.
Das sind zwei komplett unterschiedliche Paar Schuhe.
Und ja, wenn du, wenn du
ähm, KVM in KVM betreibst, dann ist es
Nested-Virtualisierung. Aber das eine hat mit dem anderen
erstmal nichts zu tun. Wenn ich es für
eine Windows-Installation als Treiber brauche,
also die
ähm, die normalen
Hetzner-Server, die sind wahrscheinlich
also die Server-Auktionen,
die sind ja Hardware und
die Hetzner-Cloud-Server habe ich ehrlich gesagt
keine Ahnung. Gebt mal Wirt-Wort ein
in dein, in deiner
VM hier. Gebt das hier mal ein.
Wirt-Wort.
Dann siehst du, was da drunter läuft.
Und äh, ist das ein, ist das ein
ESX oder ein KVM, dann ist es
Nested-Virtualisierung, ja. Und die
Chancen sind dann sogar relativ groß, dass es nicht
funktioniert, weil damit Nested-Virtualisierung
funktioniert, müsstest du
äh, auf Server-Seite, also sprich, sprich
Hetzner müsste das einschalten.
Und ich könnte mir vorstellen, das hat Hetzner
gar nicht. So, mal schnell die Smart-Home
Dinger durchscrollen, was wir hier haben.
Oh, nee, gefällt mir nicht.
Moment, habe ich jetzt schon das richtige Smart-Home?
Ja, Smart-Home. Also, schauen wir mal.
Was haben die denn hier?
Eats-Witz, brauchen wir nicht.
Save on Smartwares.
Feuerlöscher.
Feuerlöscher ist neuerdings Smartware.
Wirt-Wort sagt KVM. Ja, dann ist es auf jeden Fall
Nested-Virtualisierung, wenn du da nochmal ein KVM
drin startest. Und es
ist fraglich, ob es überhaupt geht.
Smartwares. Extingu...
Was genau ist smart an dem
Feuerlöscher? Warum ist das
smart? Brauchen WLAN-Leuchtmittel
eigentlich viel mehr Strom als
ZigBee-Leuchtmittel? Ähm, nein.
Nachdem die beide
im Strom stecken, macht es keinen
Unterschied. Der Unterschied zwischen
WLAN- und ZigBee-Geräten ist,
wenn überhaupt, entscheidend, wenn sie
an der Batterie hängen. Aber der
Stromverbrauch zwischen einer WLAN-Birne
und einer ZigBee-Birne ist
vernachlässigbar gering.
Smart. Smarter Feuerlöscher. Sehr schön.
Das ist ein WiFi-Feuerlöscher.
Genau.
Ich meine, es reicht ja schon, dass er Feuer löschen
kann. Das ist schon ziemlich hart.
Gigaset. So was gibt es noch?
Das waren so die...
Das waren die Sachen, die man
früher sich immer... Das sieht aber auch...
Das sieht aber echt aus wie
1995. Guckt euch das mal an.
Also, wenn das nicht Boomer-Hardware
ist, dann weiß ich auch nicht.
Ich könnte wetten, die Dinger gibt es seit 20 Jahren
schon und sehen schon immer gleich aus.
So, ähm...
Okay, das scheint wirklich
angesagt zu sein, diese Dinger hier.
Genau. Also.
Der Name ist ja mal absolut
beschissen. Ich hab...
Also...
Warum?
Erstens erinnert mich das an den
Telekom-Messenger. Kann sich noch einer
an die Telekom-WhatsApp-Konkurrenz
erinnern? Immer
hieß das Ding. Immer.
So, und dieses Ding wurde eingestellt
schon vor Ewigkeit. Also, das...
Es war von Anfang an
klar, dass das Ding sacken wird.
Aber...
Ja, kurz. Also, so, und das ist jetzt nicht immer,
das ist inner. Und
ich dachte eigentlich, das ist out.
Das ist spätestens seit Flicker... Flick,
nicht mehr angesagt ist, dachte ich,
ist R hintendran überhaupt nicht mehr
angesagt, ja. Inner.
Kann man das mal aussprechen.
Außer, dass es ein trendiges Logo und trendische Name hat.
Ja, aber wie der Chat
gesagt hat, Filament ist angesagt, ja.
Okay, was haben wir denn sonst noch
zu bieten? Also, gehen wir das Ganze hier mal schnell
durch. NetViewOutbraumer...
Oh, crap.
Sieht ein bisschen aus wie meine Kamera, nur
von einem anderen China-Hersteller.
Haben die RTSP.
RTSP.
Ohne RTSP wird das nicht gekauft.
RTSP.
RTSP.
Not usable.
Manufacturer does not provide any information about RTSP.
Tja, useless shit.
Useless China shit.
3D-Drucker-Filament.
Nein, eher nicht.
Äh, Moment.
War ich nicht stehen geblieben.
Äh, JBL, Tekken...
Die Dinger sind auch ganz gut.
Aber ich kauf mir jetzt nicht noch ne WLAN-Steckdose, ja, ne.
Ich sag's noch.
Die sind auch ganz okay.
Ähm, dann gibt's hier irgendwelche...
Strips?
5-Volt- oder 12-Volt-Strips?
5-Volt- oder 12-Volt-Strips?
Seht ihr das irgendwo?
Das ist so un...
Das ist sowas von egal.
12-Volt.
12-Volt.
Okay.
Was haben wir hier sonst noch?
Sennheiser-Dings, Kopfhörer...
Ich hab grad keinen Bedarf.
Tekken-Outdoor-Socket.
Hmm.
Das kauf ich mir.
Moment, der ist aber nicht...
Das, okay.
Die haben ein Photoshop-Bild mit Wasser drauf gemacht.
Das Ding hält nix aus.
Was hat das für ein IP-Rating?
IP?
IP 44 ist ja nix.
IP 44 ist nicht waterproof.
IP 44 ist mal gar nix.
Äh, IP...
IP...
IP...
IP-Wikipedia.
Äh.
IP-Schutz-Klassen-Wikipedia.
IP-Schutzart, hier.
Also, genau.
Das ist ja so eingeteilt.
Genau, das ist staubgeschützt.
Also, guck mal.
Das Ding ist staubgeschützt.
Und...
Schutz gegen allseitiges Spritzwasser.
Also...
Mit Achtung, Krach.
Ein bisschen...
Vielleicht ein bisschen Regen, ja.
Also, das ist nicht sonderlich wasserdicht, das Ding.
Also, ich hab ein paar IP 65 Technik-Dosen.
Doch staubgeschützt ist es halt.
Auch jetzt nicht sonderlich viel, ja.
Also, IP 44 ist nicht so der Wahnsinn.
Ich hab ein paar Dosen, ich glaub IP...
Nee, 56.
65, ich kann's mir aber nicht merken, wie rum.
Die sind wirklich richtig, richtig gut.
Die haben auch noch mal so ein Gummi-Isolier...
Also, ein Gummi drin, wenn du zumachst und so.
Ähm...
Ja.
Okay, also sonderlich.
Allerdings, ich...
Ich bin trotzdem am überlegen, das zu kaufen, weil...
Ich bräuchte für die Pumpe im Fischteich sowas.
Aktuell muss man dahinter laufen und das an- und ausschalten.
Das nächste Problem ist, ich bin mir nicht ganz sicher, ob das WLAN bis dahin reicht.
Ich...
Ich werd's mir mal...
Ich werd's mir mal bookmarken.
Ich bookmarke mir das mal und dann guck ich mir das mal später an.
Okay.
So, äh...
Dann schauen wir noch mal schnell durch.
Noch mal die erste Seite hier.
Save on was?
Maxico.
Äh...
Wow!
Ein paar Schalter gäbe ich da nicht so viel Geld aus.
So, äh...
Übelster Crap.
Auch mehr Crap.
Ja, so ein Staubsauger und ein Hackfleisch-Dreh-Ding.
Das passt ja schon mal gut zusammen.
Gut zusammen.
Der Bosch, was?
Was für ein Ding?
So, so...
Pro-Animal.
Na, ob meine Katz das so Pro-Animal sieht, hab ich da meine Zweifel.
Meine Katz hat's nicht so mit dem Staubsauger.
Guck mal hier.
Was meint ihr?
Was meint ihr, wer gewonnen hat?
Wer hat gewonnen?
Die Katz.
Nee.
Der Staubsauger hat gewonnen, weil die Katze hat's überhaupt nicht gecheckt.
Die hat den Staubsauger sich angeguckt, hat ihn erst mal so anvisiert.
Und dann hat sie sich gedacht, ach, die ist, da ist ja gar nicht gefährlich.
Und hat sich hier hingelegt.
Und dann ist ihr der Staubsauger von hinten auf den Arsch draufgefahren.
Und sie hat zwei Meter Sprung nach vorne gemacht und ist abgehauen.
So.
Also, alles Müll.
Nix Gescheites bei bei.
Nix Gescheites bei bei.
Restrictions apply.
What?
Okay.
Da sind wir schon wieder mal durch.
Es gab nix.
Es gibt nix.
Nix Gescheites.
Lightning Deals, nochmal schnell schauen.
Ah, yes, Unterhose.
Unterhose können tatsächlich mal wieder ein paar geben.
Aber die nicht.
MacTem.
Die sind ganz schön teuer.
Wie viel sind denn das?
MacTem.
Alles klar.
MacTem.
Genau.
Äh.
Ist das, wenn man seine Füße irgendwie kaputt machen will?
Oder irgendwie anderen Crap?
Das braucht doch alles keiner.
Weil ergonomisch sind die Dinger nett.
Wenn man das braucht, dann sollte man sich die selbst anfertigen lassen.
Was sagst du zu Apples Arm-CPUs?
Ehrlich gesagt, relativ wenig, weil ich mich damit nicht großartig beschäftigt hab.
Also, ich weiß nicht.
Bei mir geht gerade bei Audio-Equipment Sound und Funktion eindeutig über die Optik.
Und ich muss euch ehrlich sagen, ich finde die meisten guten Audio-Geräte auch so ganz hübsch, auch wenn sie halt nicht super fancy aussehen.
Was sind das hier? Einbrecher-Handschuhe?
Erstmal zum Fensterscheiben einschlagen.
Oder was macht man damit?
Für die Corona-Demos.
Keine Ahnung, wofür man das braucht.
Wenn man nachts durch die Hauptwache muss.
Ja, dafür ist, da würde ich noch andere Sachen mitnehmen.
Allerdings nachts in der Hauptwache, äh, könnte es wahrscheinlich mittlerweile ganz okay wieder sein.
Weil die machen ja, wenn es kalt wird, immer nachts die Hauptwache auf für Obdachlose.
Und da ist halt auch Polizei und alles am Start.
Ne, ne, ne, ne.
Nix dabei.
Ist das ein SD-Karten-Sammel-Ding, oder?
SD-Karten-Sammelstelle.
Ehrlich gesagt braucht es kein Mensch.
Ich hab hier ein Kästchen und da kommt das rein.
So, Leute, also.
Was ist das, Leco, von 2011?
Was?
Das nimmt echt langsam Ausmaße an.
Forschend ist es gelungen, die Sensoren...
Ach, das kenn ich, das kenn ich.
Das haben wir doch sogar auf YouTube schon gesehen.
Mit dem, ähm...
Mit dem Mikrofon abhören.
Oder ist das was anderes?
Also, einem Forschenden ist es gelungen, die Sensoren eines smarten Staubsaugers von Xiaomi in ein Lasermikrofon umzuwandeln mit dem Audio-Aufwärts-Anti.
Aha.
Und mit welchem Modell?
Unter Nationalen Universitätssinger...
Oh, S5, das ist ein...
Den hab ich.
Das ist den, den ich...
Das ist mein...
Den Staubsauger hab ich.
S5, S50 ist es, glaube ich.
Ja, ist das gleiche.
Aber das macht nix.
Ich hab ja mal mit Custom-Firmware geflasht.
Da kann keiner von außen drauf zugreifen.
Oh, das ist mal Big Brain.
Das ist mal Big Brain.
Guck mal hier.
Mit solchen Vorrichtungen lassen sich beispielsweise Gespräche über eine größere Entfernung mittels der Schwingungen der Fenster aufnehmen.
Richtig, Big Brain.
Aber wisst ihr was?
Unabhängig davon, was man daran sieht, wie genau diese Messgeräte mittlerweile sind.
Ach so, die...
Musste die Firmware, der Staubsauger...
Das konnte bei einem Angriff...
Wisst ihr, was ich viel geiler finden würde?
Wenn es Custom-Firmware gäbe, die das eingebaut hat.
Wenn es Custom-Firmware gibt, die das mitbringt, dass ich das auch ausprobieren könnte.
Ach so.
Mit der Technik konnte das Forscherteam per Lautsprecher abgespielte Zahlen von über die Schwingungen eines Papierkorbs aufnehmen.
Gut, wenn die das über den Lautsprecher abgespielt haben, weiß man nicht, wie laut das Ganze war.
Auch konnten Melodien oder das...
Das Geschlecht.
Woher wollen die wissen, ob das eine Frau ist oder ein Mann ist, der da spricht?
2020 darf der nicht mein Gender assumen, der Staubsauger einfach.
Das geht nicht.
Dann ist die Anzeige direkt raus.
Das ist triggert.
Genau.
Übrigens, mir ist heute was aufgefallen, mal wieder.
Wo ich mir gedacht habe, ey...
Wenn ich das jetzt auf Twitter posten würde, ne?
Dann wären wieder alle wahrscheinlich ultra, ultra triggert.
Und zwar...
Ich...
Warte mal, ich mach mal die VM kurz nebenbei an.
Die brauchen wir jetzt eh.
Gleich nochmal Progress Action.
Ähm, also...
Also, einer meiner Nachbarn ist eine türkische Familie.
Und die bauen gerade ihr Haus um.
Und die haben dafür türkische...
Und zum größten Teil türkische Handwerker am Start.
Denkt sich ja eigentlich keiner was bei.
Heute war ich beim Italiener, hab mir einen Schnitzel geholt.
Und, was war da?
Der wurde renoviert.
Und die hatten...
Was hatten die da?
Italienische Handwerker.
So.
Und da hab ich mir so überlegt, okay.
Würde ich jetzt auf Twitter gehen und schreiben...
Ich will mein Haus umbauen, aber bitte nur deutsche Handwerker.
Dann würden sich alle wieder aufregen.
Wohnort liegt...
Beim Italiener Schnitzel...
Ja, weil die haben Schnitzel...
Schnitzeltag einmal die Woche.
Warum soll ich beim Italiener...
Kein Schnitzel kaufen?
Warum sollten die das schlechter können?
Als andere?
Hat gerade einer gesappt?
Hab ich das nur gehört?
Oder nicht gesehen?
Hast du dich schon mal mit...
Ist die Musik zu laut?
Kann das sein?
Die macht übelst Krach.
Was ist denn hier los?
Mach mal kurz ein bisschen leiser.
Oder ich überspringe das einfach mal.
Das macht zu viel Krach.
Ja, schon besser.
Hast du dich schon mal mit...
Ah, hier, X.
Mein wahnsinnig tolles Logo, was ich gebastelt habe.
Hast du dich schon mal mit 3D-Druckern auseinandergesetzt?
Ja, als ich mir einen gekauft habe.
Ich habe den hier.
I3-S Mega Anycubic.
I3 Mega S.
Den habe ich.
1, 2, 3, 7.
So ein Ding hat kein Mikro.
Die haben das mit dem Lasersensor gemessen.
Den man...
Also, guck mal.
Das hier ist der Staubsauger.
So, das ist nämlich der gleiche Staubsauger, den ich habe.
Und der hat so einen Laser, mit dem er die Räume erfasst.
So, und mit diesem Laser haben die Vibrationen im Fenster mitgeschnitten.
Und diese Vibrationen am Fenster haben sie zurück umgewandelt in Sprache.
100 Bits habe ich gar nicht gesehen.
Dankeschön für ungefähr 1 Euro.
Nice.
Nice.
Ich scrolle mal kurz durch, ob ich irgendwelche Sachen...
Was hältst du von Shit-Audio?
Die sind ganz gut.
Ich weiß aber nicht, wie man die ausspricht.
Ob Shit oder Sheet oder Scheit.
Keine Ahnung.
Äh, Captain Seeker hat gefragt, gibt es für den ESP2...
Ich zeige euch mal die Frage, weil ansonsten...
Ist ja doof, muss ich mir selber vorlesen.
Gibt es für den ESP2 in reichender Firmware, die direkt eine API mitbringt für die Steuerung von RGB...
Ja.
Ja.
Ja.
Wie wäre es damit?
Ach, Moment.
Der ist ja nur für den ESP2...
Geht das Motor auch für den ESP32?
Anscheinend.
Habe ich noch nie ausprobiert.
Ähm, kannst du mal ausprobieren.
Ansonsten würde ich den ESP286 nehmen.
Da geht das Motor auf jeden Fall.
Und das Motor hat eingebaut.
So, und dann gibt es noch...
Dann gibt es noch...
Wie heißt das?
W-L-E-D?
Glaube ich.
Das ist auch schon fix und fertig.
Das ist auch schon fix und fertig.
Das ist auch schon fix und fertig.
Das ist auch schon fix und fertig.
Das ist auch schon fix und fertig.
Das ist auch schon fix und fertig.
Das ist auch schon fix und fertig.
Also, Captain Seeker, da gibt es ein paar Dinger.
Musst du gucken, was zu deiner Hardware passt und was zu deinem...
Guck, da hast du nämlich hier direkt ein Webinterface und so.
Alles schon fertig.
Musst du gucken, was zu deiner Hardware passt und zu deinen Lightstrips.
Really good shit.
Ah, alles klar.
Okay, habe ich noch was übersehen?
Äh, wo bloß?
Was ist denn das eigentlich für ein komisches...
Wieso benutzt du dein Chatboard gar nicht mehr?
Das ist eine gute Frage.
Frag mich nicht.
Keine Ahnung.
Ich bin gerade gekommen, hast du bereits deine Heizungsauslese-Software gezeigt?
Nein, habe ich noch nicht gemacht.
Aber mache ich später.
Wie viel hast du für deinen VMA Workstation Pro bezahlt?
Ich glaube 49 Euro, weil das zu Weihnachten günstiger gab.
Aber du kannst mal bei irgendwelchen Keyshops gucken.
Da kriegst du VMA Workstation 16.
Das ist glaube ich das aktuelle für 4,90 oder so.
Ich wusste gar nicht, dass du noch aktiv bist.
Aber das heißt noch.
Auf Twitch bin ich seit drei Jahren ununterbrochen am Start.
Aber auf YouTube nicht.
Was ist denn hier los?
Warum ist mein...
Warum ist...
Warum ist mein T-Max kaputt?
Mein T-Max ist kaputt.
Guck mal, was ist hier los?
Die haben bestimmt wieder irgendwelche Settings deprecated.
Sodass hier unten wieder alles fort ist.
Das sehen wir ein paar Witzbolde.
Ja gut, ich meine, das funktioniert noch.
Aber was soll das?
Das sieht mega beschissen aus.
Okay, Repos, Monarch S.
Ne, wo hab ich's denn liegen?
Rider Projects, Monarch.
Monarch S, genau.
So, pull.
Bam.
Eck.
Ah ja, gut.
Wir machen jetzt...
Ich hab irgendwas Lokales gemacht, was wahrscheinlich ziemlich unsinnig ist.
Git, Reset, Minus, Minus, Hard, Origin, Master.
Bam.
So, alles gut.
Ich hab nämlich vorher gerade noch was gepusht, dass wir heute weitermachen können bei der ganzen Geschichte.
Heute hast du gesehen, dass du streamst.
Was ist das für ein komischer Username?
Ja, wie gesagt, ich bin schon ewig, ewig am Streamsorn.
Wenn du mal guckst, wenn du dir die letzten Videos mal anguckst.
Warte mal.
Das ist ja so ungefähr zwei Monate ist, glaube ich, die History auf Twitch.
Ich war schon relativ oft on in letzter Zeit.
Aber ich mach halt anderes Zeug als auf YouTube.
So.
Und?
Dann, was man auch nicht oft genug zeigen kann.
Es gibt sogar ein Archiv.
Wo man sich alte Sachen angucken kann.
Wo das Ibaro sich immer viel Mühe gibt, das alles zu machen.
Und dann sieht man, das ist seit 2007.
Äh, 2017.
Guck mal.
Was ist denn das?
September 2017.
Was hab ich denn da gestreamt?
Overwatch.
Oh, ähm.
Warum hab ich Overwatch gestreamt?
Was ist das?
Battlefield?
Ah, das ist World War...
Call of Duty World War 2 war das.
Und da hab ich Overwatch gestreamt, Alter.
Overwatch.
MonkaS.
Das war nicht der erste Stream.
Ach nee.
Das hier war auch nicht der erste Stream.
Ibaro, ich glaube, du warst vielleicht nicht seit Anfang an am Start.
Das kann sein, oder?
Ich glaube, ein paar Streams sind lost in Dings.
Ich weiß gar nicht...
Ehrlich gesagt...
Genau, Archiv ging...
Ich weiß gar nicht mehr genau, was mein erster Livestream war.
Mein erster Livestream war wahrscheinlich irgendeine BDO-Geschichte mit einem Friseur oder so.
Vermute ich mal.
Ich hätte ein Video für den Aufwach-Stream.
Oh, das musst du morgen posten.
So funktioniert Hacking wirklich.
Aha.
Die Mädels erklären uns das.
So, so.
Oh, eine Fachinformatikerin erklärt uns das.
Exzellent.
Ja, das können wir uns tatsächlich mal morgen angucken.
Genau, ich hab...
Ich weiß, ich hab auch mal Battlefield 3 gestreamt.
Also...
Ich hab auch mal Battlefield 3 gestreamt als einer der ersten Streams, ja?
Da weiß ich noch, wo irgend so ein Typ in Chat gekommen ist und hat gemeint...
Your streams suck, man.
I don't know why so many viewers.
Oder irgendwie sowas.
Dabei war die Runde...
Das war Metro, das weiß ich noch.
Das war eine Runde auf Metro.
Und ich bin übelst abgegangen in der Runde.
Wo ich mir dann gedacht hab, was zum Teufel...
Was will der Typ jetzt eigentlich von mir?
Aber mittlerweile mach ich mir über dummes Zeug ja gar keine Gedanken mehr.
Damals hab ich mir gedacht, okay...
Da muss ja noch was dran sein.
Aber mittlerweile weiß ich...
Wenn der Chat auf Twitch was schreibt, ist das vollkommen irrelevant.
Au...
Außer...
Außer natürlich...
Außer es ist der...
Dann ist es was anderes.
Ja.
Aufwachen-Stream.
Der ist immer sonntags.
Der ist immer sonntags morgens.
Keine Ahnung, so zwischen...
Zwischen...
Also entweder geht's 9.30 Uhr los oder 10.30 Uhr.
Und dann meistens so bis 14.30 Uhr oder so.
Vielleicht hab ich den Ingame gekillt.
Ja, das kann wirklich sein.
Dass ich den Ingame gebasht hab.
Und der deswegen...
Äh...
Auf...
Oh.
Sauer war.
Ah, in 5 Tagen.
Okay, wir können heute noch weitermachen.
Continue.
Ich würde eh nie meine Trial resetten.
Sowas...
Sowas gehört sich nicht.
Äh, BR.
Ja.
Excellent.
So.
Soll ich so machen?
Soll ich so machen oder so machen?
Also ich glaube, ein bisschen kleiner ist nicht schlecht.
Guck mal, man kann das doch bestimmt gut lesen, oder?
Das kann man gut lesen, weil...
Das macht's auch nicht fett.
Aber dafür finde ich die Schriftart...
Ähm...
Ryder ist richtig nice.
Ja, das sieht scharf.
Genau.
Also machen wir das ein bisschen kleiner.
So.
Also.
Es hat sich im Vergleich zum letzten Mal rein optisch nicht allzu viel getan.
Ich zeig euch nochmal, was zuletzt hier am Start war.
Äh...
Sag mal...
Was ist das denn?
Sag mal, ist mein Farbschema kaputt?
Ist mein Farbschema irgendwie kaputt?
What the fuck?
Was ist hier los?
Warum ist mein Farbschema kaputt?
So sollte es eigentlich aussehen.
Und so sieht es jetzt aus.
Warum das denn?
Profile?
Moment.
Was ist...
Warum ist das so im Arsch?
Das war irgendein Update, was das kaputt gemacht hat.
Ähm...
Ich weiß nicht.
Ich weiß nicht.
Ich weiß nicht.
Ich weiß nicht.
Ich weiß nicht.
Ich weiß nicht.
Ich weiß nicht.
Ich weiß nicht.
Ich weiß nicht.
Ich weiß nicht.
Ich weiß nicht.
Ähm...
Wo hab ich denn hier mein... mein... mein... hier da... da...
Warum führt das denn nicht aus?
Warum hab ich Permission denied auf meine eigenen Repos?
Achso, Moment.
Ich hab's auch falsch gemacht.
Ne, mein Terminal hat keinen Bock auf meinen Colourstream.
Das ist einfach weg.
Mein Colourstream...
Mein Colourstream ist einfach fort.
Hab ich gedacht.
Nee.
Brauchen wir nicht mehr.
Ja, aber das ist ja mal richtig hängen geblieben.
Hatte man...
Ich weiß, woran das also...
Ich weiß, woran das liegt.
Der Profil-Button ist weg.
Wo ist denn der Profile-Button?
Alter, Gnome.
Die Gnome-Leute gehen mir so auf den Sack.
Wo ist denn der Profil-Umschalten-Button hin?
Haben die den Profil-Umschalten-Button weggemacht?
Normalerweise konnte man immer Profile switchen.
Das ist weg.
Und ich habe jetzt nur noch ein Unnamed-Profile.
Das ist falsch.
Das ist verkehrt.
Das ist kaputt jetzt.
Super.
Bestimmt removed.
Ja, das würde mich nicht wundern.
Okay, Base 16 Gnome Terminator.
Installieren wir es halt bitte.
Installieren wir es halt wieder.
Oder ist es deprecated?
Ich weiß es gar nicht mehr.
Please use.
Funktioniert.
Natürlich direkt ausführen.
Was meinst du?
Meinst du, ich gucke mir das vorher an?
Hä, was wollen die jetzt von mir überhaupt?
Base 16.
Base 16.
Äh, Base 16.
Night.
Nee, 80s.
80s.
80s will ich haben.
Okay, sieht okay aus.
So.
Habe ich jetzt den...
Ah, okay.
Jetzt ist es da.
Ah.
Okay, das war mal besser.
Allerdings will ich nicht Base 16 80s.
Was habe ich denn hier?
Was habe ich denn nochmal hier in meinem Profil drin gehabt?
Base 16.
Tomorrow Night hatte ich.
Nicht 80s.
Base 16.
Tomorrow.
Ups.
Äh, Repos.
Gnome Terminal.
Ja.
Das war das Falsche.
Base 16.
Tomorrow.
Night.
Ice.
Hä?
What the fuck?
Das ist doch jetzt genau das Gleiche, oder?
Ach so, jetzt hat er ein zweites hinzugefügt.
Jetzt hat er ein zweites hinzugefügt.
Okay, wie aktiviert man das jetzt?
Set as default, okay.
Ah, yes.
Okay.
So, aus welchen Gründen auch immer, die mein Profil überschrieben haben.
Ich weiß es nicht.
Aber mein Profil ist back.
Jetzt können wir loslegen.
Die haben mein Profil gelöscht.
Deswegen ist das Rechtsklick...
Warum löschen die einfach irgendwelche...
Das ist doch voll für den Arsch, ey.
So.
Das Wichtigste.
Color.
Color.
Was wird heute, ähm...
Was wird heute gebastelt?
Kamera, Bilderkennung.
Also.
Ähm...
Die Bilderkennung...
Ich zei...
Äh...
Bilderkennung...
Äh...
Funktioniert ja schon halbwegs.
X-Fatal.
Dankeschön für den Sub.
17 Monate.
Das ist ja schon richtig.
Heute kümmern wir uns erstmal drum, dass der aufnehmen kann, wenn man Motion Detection hatte.
Also.
So.
Jetzt gehen wir mal hier.
Repos.
Monarch S.
Ne, wo hatte ich es?
Rider.
Monarch S.
Da ist Zimmer.
So.
Ich hab gepullt.
Pull.
Alles klar.
Passt.
Äh...
Watch.
Run.
So.
Jetzt zeig ich euch erstmal, wie es aktuell aussieht.
Ähm...
Dazu muss ich aber erstmal FFM-Pack anschmeißen.
CD.
Download.
Slash.
Simple Server.
Stream.
Also.
Ich...
Ich...
Ich fake jetzt einen Kamerastream, ne?
Weil ich keinen Bock hab, immer wieder auf meine Webcams zu connecten hier im Haus.
Außerdem will ich nichts leaken.
Ähm...
Ich muss nochmal kurz gucken, was die Testaufnahme von meiner Webcam war.
War das Plup 2?
Nein.
Plup 2.
Plup 2 war der Fitness-Typ, den wir von YouTube runtergeladen haben zum Testen.
Äh...
Flur 2 hieß das, glaube ich.
Weiß ich genau.
Flur 2.
Stream.
Flur 2.
Was übrigens mit Flur überhaupt nichts zu tun hat.
Ich weiß nicht, warum ich es Flur genannt hab.
So.
Weiße.
Flur ist was anderes.
Ja.
Tatsächlich.
So.
Machen wir mal ein Chrome auf.
Und dann gucken wir uns das an.
1, 2, 2.
Zack.
So.
Und...
Gut.
Ähm...
Ach so, ja.
Motion Detection.
Funktioniert erst, wenn ich den Motion Detection Server einschalte.
Ich mach nochmal hier aus.
Ich weiß nicht, ob der von Anfang an laufen muss, ehrlich gesagt.
So.
Und wenn jetzt Motion...
Wenn jetzt einer ins Bild kommt, dann gibt es ein rotes Dreieck.
Dreieck, äh, Viereck drumherum.
Und es steht dran, was er erkannt hat.
Aktuell ist der Hardcoded Match da nur auf Personen, die erkannt wurden.
Und das ist auch trainiert auf Personen werden erkannt.
Also sprich, der erkennt manchmal...
Sonst andere Sachen als Baseballschläger und sowas.
Äh...
Warum funktioniert die Motion Erkennung nicht?
Hab ich was vergessen?
Warum funktioniert die Motion Erkennung nicht?
Okay.
Ähm...
Ich hab irgendwas kaputt gemacht.
Ich hab irgendwas kaputt gemacht.
Ähm...
Object Detection.
Wartet mal.
Ich muss mal kurz Font eins kleiner machen.
Heck.
18 wollen wir haben.
18.
18.
Hat sich das jetzt geändert?
Was denn?
What the...
Ah, das ändert sich nur, wenn man es neu aufmacht, oder wie?
Ist aber auch ein bisschen doof.
Ja, ja, Steuerung plus Mausrad macht aber nicht...
Guck mal, wenn ich hier Steuerung plus Mausrad mache, mache ich eine neue Datei auf.
Dann, äh, hat er sich das aber nicht gemerkt, oder?
Oder doch?
Hä?
Okay, er hat sich's gemerkt.
Scheiß drauf.
Ähm...
Also.
Warum geht die Objekterkennung nicht?
Object Detection Service.
Da ist er.
Object Detection Service.
Der müsste eigentlich funktionieren.
Warum geht die Objekterkennung nicht?
Ah.
Weil ich ein Kack-Nub bin, weil ich das Wichtigste vergessen hab.
Guck mal.
Die Object Detection, die funktioniert.
Detected.
Die funktioniert.
Ich hab bloß noch nicht eingestellt, dass er das an den Client zurückschickt.
Und...
Und...
Und...
Und...
Und...
Und...
Und...
Und...
Und...
Und...
Und...
Und...
Und...
Und...
Und...
Und...
Und...
Und...
Und...
Und...
Und...
Und...
Und...
Und...
Das ist natürlich Fail.
So.
Passt mal auf.
Die Object Detection geht.
Jetzt steht hier nämlich gleich Detected da.
So.
Kurz warten.
Dass er durchs Bild läuft.
Detected.
Ich schick's doch nicht an Client zurück.
Oh, bin ich doof.
Ja.
Ja.
Ich hab das...
Ich hab das hier umge...
Ich hab das hier ein bisschen...
Ein bisschen umgebaut.
Die ganze Geschichte.
Und zwar.
Ich hab das...
Ich hab das so gemacht, dass das alles ein bisschen...
Essing miteinander kommuniziert.
Also sprich.
Wenn der Motion...
Detektor Motion Detected hat,
dann publisht er nur ein Event,
das er Motion erkannt hat und dann
braucht man irgendeinen, der auf das Event lauscht
und der dann was an den Client schickt.
Habe ich hier nicht eingestellt?
Forward to Clients.
Okay, also muss ich jetzt nicht auf
Detection, sondern auf Detection
Result oder irgendwie sowas lauschen.
Bin mir nicht
ganz sicher mehr, was ich da gebaut
habe, wenn ich ehrlich bin.
Detection Result muss ich glaube ich
drauf lauschen. Wer weiß, was ich da
gestrickt habe? Undefined.
Was habe ich denn da gemacht?
Moment.
Wir Console
Debuggen mal kurz.
Welches Framework? Das ist ASP.NET
Core.
Die Motion Detection muss schon funktionieren,
dass wir jetzt mal Motion Detection aufnehmen können.
Console Debugging best.
Ja, so sieht es aus.
Detection
Result Message.
Muss ich drauf listen.
Undefined.
Das funktioniert schon,
aber da ist irgendwas undefined.
Was mache ich denn da?
Undefined.
Ah, ich sehe, was ich
verkehrt gemacht habe. Ich habe das
Client-seitig noch überhaupt nicht angepasst.
Guck mal.
So.
Passt mal auf. So, und jetzt funktioniert es nämlich.
Unit Test. Wer will denn
Unit Test schreiben? Tests
in 2020.
So, jetzt schauen wir mal, was ich da für eine Message
zurückkriege. Undefined.
Hier, da. Also, ich kriege zurück
Cam Summary.
Okay, das könnte ich da auch
einzeln rausholen, ehrlich gesagt. Aber egal.
Egal. Forward to Clients
muss fort.
Das machen wir. Ich mache eine andere Mal.
Das brauchen wir jetzt. Also,
die Stream-URL steht drin. Das will ich vielleicht auch nicht
an Client weiterschicken.
Mal gucken. Summary. Summary brauche ich.
Also, Cam und Summary.
Das haben wir hier.
Let Cam
gleich
Tja, das hier ist Message.
Wie ich es nennen soll.
Message.
Dann funktioniert das auch wieder mit Motion Detection.
Message Cam und
Summary gleich.
So, und jetzt sollte das wieder funktionieren.
Haha! Person.
Bam. Funktioniert.
Okay, alles klar.
Motion Detection funktioniert. Ich habe bloß den
äh, das
das äh, das äh, signalisierend nicht angepasst.
Ist das OpenCV? Nein, das ist nicht OpenCV.
Das ist TensorFlow Lite, was da unten drunter ist.
Aber ich, wie gesagt, ich will mich da jetzt nicht mit fremden, äh, fremden Federn schmücken.
Das ist mehr oder weniger fertig und ich benutze das einfach nur.
Also, das sind weder meine Trainingsdaten, noch habe ich das irgendwie programmiert oder so.
Ich benutze das einfach nur.
Ah ja, jetzt funktioniert es. Okay.
Ja, excellent, excellent. Okay.
Wisst ihr, was wir noch machen können? Ich habe ne, ich habe ne richtig gute Idee.
Ich habe ne richtig gute Idee.
Wir können gucken, ob, das ist nämlich relativ easy zu berechnen.
Wir können gucken, wir, wir nennen das Primary Image Color oder so.
Wir können gucken, ob das Bild dunkel ist.
Wenn das Bild dunkel ist, dann machen wir den Rahmen weiß.
Und wenn das Bild hell ist, machen wir den Rahmen schwarz.
Oder wir machen den Rahmen einfach immer grün.
Wenn wir den Rahmen nämlich immer grün machen, sieht man es wahrscheinlich immer.
Ja, aber das ist ne gute Idee. Das machen wir hier.
Das schreibe ich mal auf to do.
Wenn, äh, Bild dunkel, dann Rahmen weiß und, weiß mit S oder mit SS oder mit SZ oder mit?
Das ist nicht YOLO, das ist TensorFlow Lite mit irgendeinem Standard-Training-Set.
Äh, SZ oder, ja, nee, SS, weiß.
Farbe weiß mit SZ. Excellent.
Wisst ihr?
Äh, wenn Bild dunkel, dann Rahmen weiß.
Und wenn Bild hell, dann Rahmen schwarz.
Sehr gut.
Google größer du, ne, natürlich.
Wo ist das? Das ist mein Hoftor.
Das ist die Webcam, die ich aufgenommen hab.
Hier, die, das ist der, der Ausschnitt von meiner Webcam, den ich zum Testen aufgenommen hab.
Komplementärfarbe.
Ja, sowas in der Richtung meine ich nämlich, weil, wisst ihr, wie, warum ich, wie ich drauf komme?
Es gibt nämlich einen neuen Image-Sensor für Home Assistant.
Home Assistant.
1.1.8, das kam gestern raus.
Image.
Und da gibt's nämlich einen neuen Sensor.
Und der ist genau für sowas da.
Und das hat mich auf die Idee gebracht.
Wie heißt denn das hier?
Äh, mach den Color-Code über Person of Interest.
Das sagt mir jetzt nix.
Color, Color Extractor, genau, das meine ich.
Äh, Predominant Color.
Wie macht man, wie findet man sowas denn raus?
Das müsste ich ja dann, das machen wir jetzt nicht.
Das, das, das, das, das, das, das, das, das, das, das, das, das, das.
Das führt ein bisschen zu fern ab da.
Ähm, da müsste ich ja nämlich hier, im eigentlichen Object Detector, da müsste ich hier gucken, weil, hier habe ich das Bild decoded am Start.
Und hier müsste ich gucken, was ist die Predominant Color?
Oder im Browser, das kann man doch bestimmt auch, das kann man doch bestimmt auch im Browser machen, oder?
Color.
Color.
Ah, war doch klar.
Das, ein Vorteil hat diese ganze JavaScript-Geschichte.
Eine Sache, ein Vorteil hat diese ganze JavaScript-Geschichte.
Es gibt einfach für alles irgendwas, ja.
Also, da kann man sich jetzt, das ist halt das Nice da dran.
Okay, ich weiß nicht, wie man das verwendet.
Demo-Page.
Klick.
Color Palette.
Ah, das ist cool, das ist cool.
Jetzt ist nur die Frage, geht das auch mit Videos, mit Video-Elementen?
Jetzt war ein bisschen sidetracked.
Oh, anscheinend geht das noch nicht.
Hier gibt es aber einen Fork, wo das geht.
Du musst das letzte Semester Durchschnittsfarben von Bildblöcken berechnen.
Ja, zum Glück müssen wir das nicht selbst machen.
Canvas-Image.
Ich brauche kein Canvas-Image, ich brauche ein Video.
Das, da muss ich mich mal, da muss ich mich mal mit beschäftigen.
Das kriegen wir relativ easy hin.
Und es ist auf jeden Fall besser, wenn wir das im Browser machen, als wenn wir das Server-seitig
machen.
Weil, Server-seitig läuft auf dem Raspberry Pi und ist eigentlich unheimlich einfach.
Und es ist auf jeden Fall besser, wenn wir das im Browser machen, als wenn wir das Server-seitig machen.
Weil, Server-seitig läuft auf dem Raspberry Pi und ist eigentlich unheimlich einfach.
Und es ist auf jeden Fall besser, wenn wir das im Browser machen, als wenn wir das Server-seitig
machen.
Weil, Server-seitig läuft auf dem Raspberry Pi und ist eigentlich unheimlich einfach.
Und es ist auf jeden Fall besser, wenn wir das im Browser machen, als wenn wir das Server-seitig
machen.
Weil, Server-seitig läuft auf dem Raspberry Pi und ist eigentlich unheimlich einfach.
Und es ist auf jeden Fall besser, wenn wir das im Browser machen, als wenn wir das Server-seitig
machen.
Weil, Server-seitig läuft auf dem Raspberry Pi und ist eigentlich unheimlich einfach.
Und es ist auf jeden Fall besser, wenn wir das im Browser machen, als wenn wir das Server-seitig
machen.
das im Browser machen, als wenn wir das
serverseitig machen. Weil serverseitig läuft
auf dem Raspberry Pi und es ist eigentlich unnötig kompliziert,
das da noch zu machen. Das sollen die ruhig im Browser
machen. Kannst du nicht den Keyframe
benutzen, den du auch in der Object Detect...
Ja, meine ich ja. Das müsste ich dann hier machen.
Hier habe ich nämlich den...
Warte mal.
Hier habe ich die Sache nämlich decoded
am Start.
Allerdings ist mein Frame
hier nicht RGB, sondern
JUF. JUF 420p.
Und ich glaube, da wird das noch schwieriger.
Weil am besten machst du
sowas in RGB, weil die meisten Libraries
RGB können.
Ja, ich mache das
kleinseitig im Browser. Das ist
auf jeden Fall sinnvoller.
Aber das muss ich mir mal
speichern.
Und das können wir dann ausprobieren.
Jupp.
Ich speichere mir es mal.
Ich muss gerade mal die ganzen ollen Tabs zumachen,
die ich hier noch offen habe.
So.
So, also wir machen jetzt erstmal
und kümmern uns um die Videoaufnahme,
dass wir ein bisschen weiterkommen.
Aber das ist an sich eine coole Idee.
Wir können uns die Library nehmen und dann machen wir den Block schwarz,
wenn es schwarz ist und weiß, wenn es
schwarz, schwarzer Block, wenn es
im Hintergrund hell ist und
ansonsten machen wir das umgedreht. Das ist eigentlich cool.
Wir invertieren das dann einfach immer.
Ja, das ist nice. Das probieren wir
dann irgendwann mal aus demnächst.
So, also was wir heute machen ist folgendes.
Die Sache ist jetzt ja die, wenn der Bewegung erkennt,
so hier jetzt, ne.
Er erkennt jetzt Bewegung.
Dass hier irgendeine Person durchs Bild läuft.
Und ähm
äh
Prophecy, ehrlich gesagt
weiß ich das nicht.
Kann durchaus sein. Also
in, in Yuff hast du ja, mit dem letzten Channel
hast du ja quasi ein graues RGB Bild.
Und das bringt dir aber
glaub nix.
Ganz ehrlich, keine Ahnung. Keine Ahnung.
Aber ich, ich mach's eh lieber kleinseitig.
Ich mach's eh lieber kleinseitig.
Da muss ich mich damit auf dem Server gar nicht auseinandersetzen.
Und es ist ja auch
letztendlich eine rein kleinseitige Geschichte,
wie ich hier diese Rectangle
rendere.
Das darf ruhig kleinseitig passieren.
Darf mein iPhone ein bisschen was arbeiten.
So, also.
Gehen wir mal hier zu. Das müssen wir uns nicht angucken.
Also, was wir heute machen ist folgendes.
Der erkennt jetzt ja,
wenn Bewegung im Bild ist.
Und jetzt will ich aufnehmen,
wenn Bewegung im Bild ist.
30 Sekunden oder so.
Ja, ähm.
Ich hab mir schon so ungefähr überlegt,
wie wir das ganze machen könnten.
Mal ein bisschen Zeugs hier zumachen, weil ich auf dem anderen Browser aufhab.
Ähm.
Also,
sagen wir mal so. Wir machen das jetzt mal hier
ganz primitiv erstmal
inline.
Hier in diesem
Detected Event. Weil ich einfach mal gucken will,
wie macht man das mit FFmpeg
eigentlich gescheit.
Dass das, also ich weiß, wie das geht.
Ich hab auch was, wo ich rauscopypasten kann.
Ich hab auch was, wo ich rauscopypasten kann. Ich hab auch was, wo ich rauscopypasten kann. Ich hab auch was, wo ich rauscopypasten kann. Ich hab auch was, wo ich rauscopypasten kann. Ich hab auch was, wo ich rauscopypasten kann.
Ich hab auch was, wo ich rauscopypasten kann. Ich hab auch was, wo ich rauscopypasten kann.
Aber, ja.
Wobei, komm, wir machen hier, wir machen hier eine neue, neue
Datei. FFmpeg.
Da haben wir schon Kamerastream drin.
Das Helper-Zeug drin. Da brauchen wir jetzt noch
ein, äh, Videofile
machen wir da jetzt noch rein.
So, Videofile. Und dann
sagen wir hier
View Videofile. Und dann nehmen wir auf.
Und dann mal gucken,
dann mal gucken, äh, Outputfile.
Mal gucken, wie wir das machen.
Also, wie gesagt, ich hab noch ein altes Projekt hier nebenbei.
Wo ich ein bisschen abgucken kann,
wie man das FFmpeg-mäßig macht, weil
FFmpeg ist immer ein bisschen
Wissenschaft für sich.
Deswegen kann ich hier einfach
schön
abgucken. Ich muss es nur grad finden.
Wo ist es denn?
Äh,
Svagetti-Jolunese. Kannst du machen, ja.
Mach mal.
Leg los.
I will try to answer it.
So, Capture.
Capture Service.
Capture Service.
Ich hab nämlich sowas schon mal aufgenommen.
Äh, sowas in der Richtung schon mal
gemacht.
We love when he speaks
English. Yes.
Exquisite German
English accent.
So.
Wo hab ich's denn? Hier, ne?
Das passt. Genau, da kann ich nämlich
ein bisschen abgucken.
Also, auf geht's.
Äh, Videofile.
So, was braucht man da? Nur mal so von der Idee her.
Also, ich will jetzt ja die...
Ne, wir machen das anders.
Wir machen das mal richtig Noob-Style.
Äh, ich nehm einfach mal was auf.
Hier krieg ich ja
die ganzen Pakete von der Kamera.
Just ask.
I will try
my best.
So, wir nehmen jetzt einfach mal was
auf hier. Also, Subscribe,
Async, ähm...
So, wir machen jetzt mal nen
Delay.
Task, Delay, mir fällt jetzt eigentlich nichts besseres ein.
Nach zwei Sekunden,
nach zwei Sekunden starten wir mal ne Aufnahme.
Wobei, ne, ne, ne, Moment,
was mach ich denn da? Ne, das ergibt keinen Sinn.
Ähm...
Ne, ich muss anfangen aufzunehmen.
Ne, das ist aber ganz schöner Crap. Das funktioniert so nicht.
Das kann ich jetzt gar nicht einfach ausprobieren.
Ähm...
Naja, doch.
Ich nehm einfach gleich
auf, sobald er hier startet.
Ich will einfach nur gucken, ob ich das mit dem...
Ob ich das,
ob ich das hinbekomme in FFmpeg.
Zusammen kopiert. Weil, das ist das Schwierigste,
dass ich das, äh, dass ich das Video in FFmpeg
in ne Datei geschrieben bekomme, die ich dann
später mit nem Player aufmachen kann.
Okay, also, was wollen wir denn haben?
Hoppla.
So, und jetzt sagen wir einfach hier
Output File.
Irgendwie Write Packet.
Oder so.
Ich will einfach nur gucken, dass ich irgendwas
da...
So, public class
void
write, und zwar ein
Packet.
So, und das schreiben wir jetzt in ne Datei und gucken, ob es sich mit nem Player
abspielen lässt. Das ist so der erste Test, um zu
schauen, ob das überhaupt funktioniert, was ich da vorhab.
Ähm...
Also, das Ding muss auf jeden Fall schon mal disposable
sein.
Kann ich schreiben.
Weil, wenn das nicht disposable ist,
Memory Leak werden wir garantiert.
Und Memory Leaks, wissen wir ja, ist
auf Dauer nicht grad so schön.
So, also,
wie bauen wir das Ding
denn jetzt auf? Also, wir brauchen auf jeden Fall
ne Dateiname, wo wir hinschreiben
wollen.
Filename.
Filename.
Was findet ihr besser? Filename?
Name?
Name?
Filename?
Eigentlich ist es nicht... Das sind so Dinger, über die
mache ich mir viel zu lange Gedanken, einfach irgendwas
hinzuschreiben. Es ist komplett
irrelevant, wie es eigentlich wirklich heißt.
Jedes richtig
gute Programm hat Memory
Leaks. Excellent, ja.
So, naja.
Es ist gar nicht mal so weit her geholt.
Ich hab nämlich echt den Eindruck, dass
viele, gerade kommerzielle
Software, absichtlich Kacke einbauen, dass sie
das in der nächsten Version ausbessern können.
FN soll ich's nennen.
Wir können's doch einfach N nennen.
Ne, kommt.
Big File.
Ne, das mag ich nicht, Captain Peng.
Irgendwie bin ich damit noch nie
warm geworden, mit
dieser Bezeichnung für Private
und sonstige Sachen.
Ich hab da eh so nen
merkwürdige Vorliebe,
wo ganz gut ist, dass ich das nicht
im Team programmieren muss, weil
zum Beispiel Private Sachen
mache ich jetzt mittlerweile
mit einem Underscore davor.
Allerdings, wenn ich jetzt, sagen wir
Write hier aufrufe, mache ich immer
das hier davor.
Ich weiß nicht, ob's da irgendwie
einen Namen für den Style gibt, aber
ich mach's einfach so, wie's mir am besten gefällt.
So, also, wir brauchen auf jeden Fall
einen Dateinamen, dass das funktioniert.
So, dann kann ich mir hier was kopieren.
Dann brauchen wir FFmpeggedöns.
Ohne FFmpeggedöns können wir
nix schreiben in die Datei.
Einfach für jeden Stringname.
Wir könnten tatsächlich...
Du, Aidensoft, die Idee ist gar nicht so schlecht.
Man könnte wirklich, anstatt
ne Random-ID generieren,
dann hat man nämlich auch
gar keine Mühe, dass man was
Konfliktetes kriegt.
Weil ansonsten hast du ja das Problem...
Wie nenn ich die Datei?
Nenn ich die Datei wie den Kameraname,
dann funktioniert's nicht.
Timestamp alleine ist auch vielleicht
nicht ganz so schön, vor allem nicht,
wenn man nur minutengenau macht.
Ähm...
Also, da müsst ihr auf jeden Fall schon mal rein.
Äh, Kameraname...
Der Grund,
was diese Aufnahme getriggert hat,
das kann sein,
ähm, Object, also Motion, also
Bewegungserkennung, manuell
auf den Aufnahmeknopf gedrückt,
oder irgendeine
Scheduler-Sache. Okay, das brauchen,
das brauchen wir auch noch, also.
Public Enum, wie nennt man das?
Enum Capture Trigger.
So, da haben wir
Manual, das ist, wenn einer von Hand auf den
Aufnahmeknopf drückt, jetzt die Musik wieder so laut.
Ne, geht eigentlich.
Also, wenn einer von Hand auf den Aufnahmeknopf drückt,
äh, dann haben wir,
haben wir, ähm,
was wie Motion-Erkennung und wir
haben Timer,
sowas in der Richtung.
Ja, also das sind ja so die drei Sachen, warum
eine Aufnahme gestartet werden kann. Entweder
es drückt einer von Hand im Webinterface
auf Aufnehmen, dann ist es Manual.
Es ist der Bewegungserkennung,
die macht das an,
dann Motion, nehmen wir es mal so.
Oder halt irgendeine zeitgesteuerte Sache, dann
ist es ein Timer. Okay, das ist schon mal,
schon mal entwerkert. Ja, und man könnte
das echt mit einer Random-ID machen.
Das finde ich von der Idee her gar nicht so schlecht.
Das baue ich vielleicht gleich noch ein.
So, ähm, also.
Dann brauchen wir irgendwie sowas wie, wie
Init oder so. Komm, wir machen es mal wie diese
.NET-File-Sachen.
Public void open, nennen wir das mal.
So, und da müssen wir jetzt FFmpeg-Zeug
initialisieren
drinne. Da kann ich, da kann ich
schon mal was copy-pasten.
Ha! Lustig, heißt auch
name, excellent.
Was ist da?
Ups, unsave.
Mal gespannt, ob das funktioniert.
So, äh, Format.
Also,
okay, das heißt, der Dateiname
muss auf jeden Fall sowas wie mp4
oder ts oder sowas drinne haben,
weil ansonsten schlägt das hier fehl.
Hier versucht er nämlich das beste
Format für diesen, für diese Datei
zu erkennen. Das heißt,
ich muss auf jeden Fall eine Endung vergeben,
wo man irgendwas Schlüssiges sich
draus ableiten kann.
So, dann brauchen wir nen neuen,
so, dann brauchen wir nen neuen
was auch immer Format-Kontext.
Das brauchen wir in FFmpeg, um Sachen in der Datei zu
FFmpeg braucht für alles irgendwelche Kontexte.
Das ist so absolut nichtssagend immer.
Ähm, so.
Den brauchen wir,
da können wir mal
erst mal testen, ob das funktioniert.
Das heißt, wenn das nämlich fehlschlägt
aus irgendwelchen Gründen,
dann returnen wir false
äh, cool.
Aber wir sollten ja schon checken, ob das überhaupt funktioniert.
Vielleicht crasht ja das FFmpeg irgendwie
oder es kann das Format nicht oder sowas.
Und hier unten ist true.
So, wir öffnen die Datei.
Ähm,
dann
machen wir noch,
schreiben das da oben rein, dass ich das so später
wieder auflö- also gut, genau.
Weil die Sache ist die, hier lege ich das an für FFmpeg.
FFmpeg ist unmanaged.
Das heißt,
ich muss die Sachen spätestens bei dispose wieder
wieder auf-
wieder freeen.
Das heißt, dann gucken wir mal,
dass ich sage hier
FFmpeg
AV Format
dann close.
Close, genau.
Ach nee.
Hä? Ach nee, das geht ja nicht.
Äh, wie war das?
FixedCMP
Wieso?
Ja.
Ach so, public.
Unsafe.
Yes.
Okay, so. Der räumt jetzt automatisch für mich auf.
Zumindest wenn ich ein
using davor haue.
So, ähm.
Jetzt müssen wir
den Kram in die Datei reinschreiben.
Habe ich mein Object Erkennung
funktioniert immer noch?
Ähm, es ist so spät, Leute.
Ich kann nicht mehr richtig gut denken.
Wir machen jetzt diese, wir machen diese eine Sache jetzt hier noch.
Es ist aber zu spät heute.
Ich kann, bin ich ja immer so fit.
Also.
Jetzt brauchen wir
einen neuen Stream.
Also was wir jetzt hier machen ist,
wir sagen FFmpeg, wir möchten
eine Datei öffnen.
Und äh, wir möchten eine Datei öffnen
und in diese Datei schreiben wir dann Sachen
aus diesem, aus diesem Webcam
Zeug rein. Sobald, also
sobald die
Bewegungserkennung eine Person erkennt,
starten wir, sage ich mal, eine 30 Sekunden
Aufnahme. Und was ich vorhabe ist,
dass der 10 Sekunden rückwärts aufnimmt.
Das wird auch nochmal Big Brain, bis das
funktioniert. Ich will, dass der immer buffert
permanent. Dass der immer 10 Sekunden
buffert und sobald er dann
äh, Bewegungserkennung macht,
schreibt er die 10 Sekunden vom Buffer
in eine Datei und
ab dann nimmt er weiter auf. Das hat nämlich
den Vorteil, dass wenn die Bewegungserkennung greift
und es ist gerade einer durchs Bild gerannt,
dann ist die Aufnahme trotzdem drauf.
Und es kostet keine zusätzliche Leistung
großartig, das zu buffern.
Okay, wir brauchen einen neuen Stream.
Okay, jetzt brauche ich die Parameter für den Stream.
Okay, das wird
das wird, das wird
sackig. Wo kriege ich denn die her?
Äh, also ich brauche auf jeden Fall
hier oben dann ein
ähm
einen Wrapper, den ich gebaut habe. Genau.
Handle und ich brauche
eine
Timebase. Timebase ist im Prinzip sowas
wie die FPS von dem Video.
Da musst du eine Ringliste nutzen, habe ich
jetzt gelernt. Äh, ja.
Man kann aber auch einfach
eine stinknormale Queue
verwenden und
immer ein Element hinten
reinmachen und eins vorne dequeuen, oder?
Funktioniert doch genauso.
Warum soll ich mich um irgendwelche Index-Elemente
und Buffer-Gedöns
kümmern? Natürlich ist die
reine Lehre wahrscheinlich irgendein Ring-Buffer
oder so, ja. Okay, ähm.
Also ich bekomme das jetzt
übergeben, das heißt ich kann das
jetzt da rein kopieren.
Irgendwie Parameter
Copy oder sowas, genau.
Das ist
was ist denn Source? Hier, das ist
Destination. Also in Parameters
steht bei FFmpeg zum Beispiel
hier sowas drin, ich zeige es euch mal.
Da steht drin, was das Ding
für eine Bitrate hat, was es für einen Codec verwendet
und das muss ich vom Output-Gerät,
also von der Kamera kopieren,
weil ansonsten müsste ich irgendwas raten.
Und
am besten ist, ich kopiere das von der Kamera mit.
Ist das kompatibel mit einem
Output-File-Format,
dann funktioniert alles, wenn nicht
schmeißt es einen Fehler. Aber nachdem wir
eh nur H.264 encoded
Streams unterstützen,
sollte das eigentlich passen.
Ups, kacke.
Enverso, viel besser.
So, äh,
get, zack.
So, copy. Dann kann ich
mir jetzt noch was kopieren.
Excellent. Oh, da kann ich mir
Leute, das hier.
Das muss man setzen, sonst funktioniert es nicht.
Das ist richtig fail.
Da habe ich mal einen Tag dran rumgewurstet,
bis das funktioniert hat.
Aus irgendwelchen Gründen kann
FFmpeg die Datei sonst nicht schreiben.
Man muss Codec-Tag 0 setzen.
Wenn man nicht Codec-Tag 0 setzt,
schmeißt er random irgendwelche sinnlosen Fehler.
Ich weiß bis heute nicht, warum,
was das bedeutet, warum man das
braucht, aber man braucht es.
Sonst geht es nicht.
So, ähm.
Jetzt müssen wir die Datei öffnen.
Äh, so. Das schreibe ich ab.
Das weiß ich nicht aus dem Kopf, ne?
Das schreibe ich ab. Open2.
So, das öffnet jetzt die Datei
und legt die Datei an. Das heißt, wenn wir das jetzt gemacht haben,
dann müsste er schon mal hier auf dem Filesystem
eine Datei erstellen, die so heißt,
wie ich ihm übergeben habe.
Habt, was? Habt mir dank Problem
den neuen Smart-Router
der Telekom kaufen dürfen.
Moment, what?
Jetzt funktioniert
die TP-Link-Verbindung zum Media-Receiver
nicht. Oh, das ist ja schwierig.
Das kann man jetzt wirklich schwierig beantworten. Man weiß ja
überhaupt nicht, äh, was du verwendest,
in welcher Kombination, welche Technik
dahinter ist und alles.
Das ist jetzt echt schwierig zu sagen, ne?
So, also, jetzt müssen wir
die Datei öffnen. Also,
File Name. Und jetzt
das nächste kopiere ich jetzt einfach, weil
Excellent FFmpeg Magic.
Keine Ahnung, was es bedeutet.
So.
Genau. Äh,
13 sagt auch im Chat gerade, hab auch mal
eine Stunde,
hab auch mal eine Stunde dran gehängt,
weil ich einem D-Bus aufrufe,
D-Bus ist auch so ein Ding, äh,
hart eine 0 mitgegeben habe, anstatt einem
int64 mit dem Wert 0.
Ja, so Dinger
sind teilweise echt lustig.
Suchst du dir ewig,
suchst du dir ewig einen ab. Und in Wirklichkeit
hast du alles richtig gemacht, außer an einer Stelle
verkackt, ja.
Oder die Doku von denen stimmt nicht oder was auch immer.
So, jetzt gucken wir, ob die Datei
geöffnet werden konnte. Wir machen
jetzt noch hier mal ein If drumherum.
So, also wenn das nicht funktioniert,
wenn das nicht geht mit dem Öffnen,
äh,
vielleicht soll ich hier mal irgendwie
eine Newline oder so reinmachen.
Wenn das nicht geht mit dem
Öffnen, dann
sagen wir
return false.
Weil wir können das einfach so machen.
Das sieht jetzt schon ganz schön hässlich aus, oder?
Wir lassen das mal so. So.
Also, wenn er die Datei nicht
öffnen konnte, dann geben wir false
zurück. Jetzt müssen
Oh, jetzt, jetzt. Oh, ach du Scheiße.
Jetzt kommt Big Brain. Da weiß ich beim
besten Willen nicht, was das bedeutet. Das habe ich bestimmt
mal irgendwo her copy pasted.
Passt mal auf. Big Brain Code
das auf Doom hier.
Ich hab keine Ahnung.
Ah, yes.
Alles klar, alles klar.
Ich kann mich, ich
krieg so ungefähr zusammen, was das macht.
Äh, Killphil, was ist
CTXBP und CTXBP?
Das ist Big Brain Benamung von mir.
Das ist der FFmpeg
Kontext. FFmpeg nennt alles
irgendwie Kontext.
Also CTX ist dieses Ding, was ich hier am Anfang
anlege, wenn man die da, wenn man
äh, um Output zu schreiben.
Das heißt halt so. Das hier
ist
ähm, eigentlich sollte ich es vielleicht so
schreiben. Weiß nicht, ob das besser ist.
Ähm, dann erkennt man sich.
Also, das hier ist
Kontext. Das ist ein Pointer.
Das ist ein Pointer
auf, ähm,
hier, BP.
Für was auch immer das
steht. Es ist, es ist FFmpeg
logisch, Logik.
Also sprich, äh, CTX
ist, ist ein Struct, irgendein FFmpeg
Struct mit einem Member BP
drinnen. Und das ist ein Zeiger. Zeiger
auf BP in Kontext. Und
davon dann die Adresse genommen.
Also sprich, Zeiger auf BP
und dann hier die Adresse von BP. Deswegen habe ich
jetzt die Klammern drum rum gemacht, dann erkennt man
es besser. Also das ist unsafe
C-Sharp. Sieht man auch hier. Das funktioniert nur
wenn du unsafe setzt. Ansonsten ist hier mit Pointer
und Gedöns nix.
Hast du eigentlich auch Kontakt zum Kaboom
ab und zu, ja? Wir, wir
können ja mal nachgucken, was das
ist. Man muss nämlich sagen, die FFmpeg
Doku ist gar nicht so schlecht.
Was macht unsafe? Unsafe
sorgt dafür, dass du Pointer und Adress
Operator verwenden darfst. Das ist das einzige.
Du darfst Pointer nehmen, also
Raw Pointer und du kannst Adresse
und du darfst Adressen
auslesen. Das ist zum größten Teil
alles, was unsafe macht.
Allerdings sagen die halt auch dabei, wenn du
unsafe Code verwendest, dann kannst du dir halt
selbst ins Knie schießen, ja?
Was ich auch schon oft genug da
aus Versehen gemacht habe.
So, gucken wir uns mal an, was das ist. BP.
Also BP sagt,
Alter, FFmpeg.
Alles klar.
Ja, alles klar. Super.
Exquisito.
Äh, kurzer Sinn.
Kennst du System Back für Ubuntu?
Nö. Also, BP ist
ein IO-Kontext.
Warum es BP heißt, erschließt sich mir
nicht. Demaxing.
Maxing.
Okay.
Es ist irgendein Kontext, den man braucht,
um, äh,
das Video in den
Output-Container von der Datei
zu schreiben. Was auch immer. Man muss es so machen, sonst
funktioniert es nicht. Ich kann dir gar nicht genau erklären,
warum. Ich kopiere das auch nur aus einer Sache, von der ich weiß,
dass es geht. Ja, und diese Dinge hier
sind hier absolut schwarze Magie.
Ich kann euch nur ungefähr, ungefähr, ungefähr versuchen
zu erklären, was das macht. Also,
wir nehmen eine MP4-Datei.
MP4 ist ja ein Container.
Und MP4 hat die Eigenschaft,
dass sie
am Ende der Datei erst schreiben,
wie lang das Video in der Datei
ist. Das bedeutet,
wenn die Aufnahme
abbricht
und die Datei nicht richtig
beendet wird, ist eine MP4-Datei, also
ist, äh, eine Datei, die
MP4 als Container verwendet, nicht mehr lesbar,
so ohne weiteres. So, und
wenn man hier diese, diese Flags angibt,
die was auch immer machen,
sorgt dafür, dass die
MP4-Datei diese Sachen am Anfang schreibt
oder nach jedem Frame oder sowas
und auch eine korrupte MP4-Datei
äh, lesbar
ist. Man könnte
übrigens einfach, anstatt MP4
einfach TS verwenden und hätte die Probleme alle
nicht. Also, eigentlich bescheuert. Warum
nehme ich eigentlich MP4? Warum
nehme ich nochmal MP4?
Ich weiß es nicht. Wir können einfach TS nehmen, da hat man
die Probleme nicht. Ja, und das ist
irgendein Magic-Dings, das
habe ich mal irgendwo auf Stack-Overflow gefunden.
Das habe ich garantiert, garantiert auf Stack-Overflow
gefunden. Ja, ja,
bestimmt, bestimmt Stack-Overflow habe ich das
garantiert. Ähm, so.
Dann
schreibt er den MP4-Header in die Datei.
Ist TS nicht TypeScript?
Nein, das könnte auch Transport-Stream sein.
Aber es könnte auch TypeScript sein.
So, dann schreibt
er den MP4-Header in die Datei.
Und freet dieses Dictionary,
weil sonst Memory liegt.
Und dann merken wir uns nochmal,
ob die Datei offen ist.
Nennen wir mal irgendwie type bool
is open oder sowas.
Da ist die...
Übrigens, das ist auch eine Sache, die braucht man nicht.
Bool ist standardmäßig false.
Aber ich finde es schöner, wenn die
Sachen standardmäßig belegt sind, sodass man
nochmal klar ist, ah, standardmäßig ist false.
Braucht man nicht. Okay,
jetzt haben wir das. Open gleich
gleich
true. True, 0w.
Meine Kamera
gibt kein MP4 zurück. Meine Kamera
gibt ein H.264-Stream aus.
Über RTSP.
Das hat mit MP4 gar nichts zu tun.
MP4 ist bloß das
Container-Format in der Datei
später.
Also in so einem Container steht zum Beispiel drin,
ob es Untertitel gibt, welche Audiospuren, welche
Videospuren, welche Soundspuren,
äh, wie lang das
Video ist, wann Keyframes kommen und solche
Dinger. Steht im Container drin. Wobei, ne,
Keyframes stehen glaube ich nicht drin.
Ähm, ja.
Das braucht man zum Beispiel, dass man ein Video spulen kann
und sowas. Das ist ja bei einem Stream egal.
So.
Und jetzt schreiben wir hier die
Packets
rein. Ähm,
so.
Das machen wir folgendermaßen. So, wir gucken erst mal.
Wir machen sogar mal ein bisschen Fehlerbehandlung.
Big brain Fehlerbehandlung
ist, oh.
Also wenn es nicht geöffnet ist,
die Datei. Also mal angenommen,
das hier schlägt fehl.
Open schlägt fehl. Und ich schreib
dann trotzdem was in die Datei. Da kann das natürlich
nicht funktionieren. Deswegen sagen wir, wenn
die Datei nicht geöffnet ist, machen wir eine
New IO Exception.
Gibt
es was besseres als eine IO Exception?
File Exception oder sowas?
File Load Exception? Ah, IO Exception
ist schon okay. IO Exception
und sagen da irgendwie sowas
Write Before
Open
Open
Sowas.
Und da schreiben wir jetzt rein.
File Name
Excellent.
So, äh, ist
open.
So, und jetzt müssen wir die, jetzt müssen wir die
Pakete schreiben.
Also.
Var Packet
Var Packet
gleich. Achso, Moment. Packet habe
ich jetzt zweimal. Äh, keine. Write
Packet. Äh, Packet
What the
Fuck?
Ah! Was mache ich denn da?
Ich bin ja gar nicht hier drinne. Lol.
Ähm, Packet gleich
Raw FFm
Pack Pointer gedönst.
Und es muss unsaved sein, sonst funktioniert
das Ganze nicht. So, und das
schreiben wir jetzt in die Datei, würde ich sagen.
Also sagen wir FFm Pack
Write
Ne.
AV Write
AV Write Frame. Und zwar mit
diesem Kontext
dieses, dieses
Packet will ich schreiben. So, und jetzt
auch ne Sache, die ich in der Vergangenheit
öfters schon verkackt habe.
Ähm, jedes Paket
von so nem Livestream hat nen Timestamp.
Eigentlich immer genau, sie haben die zwei
Timestamps. Also, die Pakete
haben zwei Timestamps. Die haben DTS
und die haben
PTS.
Das ist der Decoding
Timestamp. Das ist, das ist wirklich
absolut hier Next Level Shit, was sich
Audio Video Leute ausgedacht haben. Das kann man
auch nur zur Kenntnis nehmen und nicht
und nicht hundertprozentig verstehen.
Also es gibt nen Decoding Timestamp und es gibt
nen Presentation Timestamp. Das heißt,
das hier sagt dem
Decoder, in welcher
Reihenfolge die Pakete
decoded werden müssen. Und der
PTS sagt irgendwas,
was die Videoframes rendern will,
in welcher Reihenfolge
die Frames gerendert werden sollen.
Dementsprechend heißt es auch,
PTS kann nie kleiner als
DTS sein, weil ich kann ja
schlecht was anzeigen, bevor es decoded wurde.
So.
Und nachdem ich viel zu low brain
bin, Timestamps
richtig ordentlich
zu berechnen,
ähm, mach ich das
so, dass
ich DTS und PTS immer auf den gleichen
Wert setze, der hochgezählt wird.
Ähm,
man kann es nicht einfach in die Datei schreiben,
man kann es nicht, ähm,
man kann es nicht, ähm,
das gibt's bei Kommunikationstechnik, ja gut, das gibt's, weil
da Audio-Video übertragen wird.
Ähm,
so, was wollte ich jetzt sagen?
Ja, also man kann es nicht einfach
nehmen, wie es ist, weil da stehen ja die
Timestamps vom Stream der Kamera
aktuell drinne. Und
Kamerastream-Timestamps funktionieren ja nicht
in meiner Datei. Meine Datei müssen
die Timestamps von null anfangen
und die Kamerastreams fangen irgendwie bei 50
Billiarden an oder so, was auch immer gerade der aktuelle
Kameratimestamp ist. Deswegen brauchen
wir noch ein Timestamp,
ich kopier mir das mal hier,
deswegen brauchen wir noch sowas hier,
Current Timestamp,
und das machen wir
jetzt ganz, ganz simpel,
so, dass es zu 99%
funktioniert. Manche
Videos haben damit vielleicht Probleme, aber
ganz ehrlich, erstmal drauf geschissen.
Ähm, weiß gar nicht, ob
das so eine gute Idee ist, das hier drin anzupassen.
Ne,
wisst ihr, was wir machen? Wir machen das anders, wir machen das anders.
Ich will das nicht ändern, das Package, weil
das kann sein, dass das noch andere verwenden.
Äh, wir machen FFM
Pack, AV Clone
Package,
Clone Packet, und da übergeben
wir das. Jetzt, jetzt,
äh, Behälter, der kopiert
nicht das Paket, auch wenn sich das hier so liest,
der kopiert nur,
ähm, die Metadaten und
referenziert den gleichen Buffer, also da wird nichts
Großartiges kopiert, das ist relativ
performant, das Ganze. So,
DTS ist
this
this timestamp
this timestamp, so.
Und jetzt zählen wir das Ganze
hoch, und jetzt
sagen wir eben hier, nachdem man jetzt
geschrieben hat, current timestamp ist plus
gleich, ähm,
äh,
duration.
So.
Fertig.
Gucken wir mal, ob das funktioniert, oder wir können, wir können sogar
Package, Packet Duration ist eigentlich
egal.
Oder auch nicht.
Ah, nee, es ist Duration.
Duration.
Also so ein Timestamp,
äh, folgt irgendwie
einer internen Logik, die sich
zusammensetzt aus FPS des Videos,
äh,
irgendeiner
Timebase,
Encoding Rate, keine Ahnung,
ganz ehrlich, das rechnet FFM
Pack für mich aus, das muss ich nicht selbst machen.
So, jetzt schreiben wir den,
das in die Datei,
und dann ist eigentlich
gut, da können wir gucken, ob es funktioniert.
Ich muss jetzt nur noch schauen, dass der alles richtig
schließt.
Also, wenn die Datei disposed wird,
und wenn sie, wenn sie
gestartet, also wenn, wenn da Sachen
reingeschrieben wurden, dann müssen
wir nämlich noch sagen,
dass er noch
den Container fertig schreibt.
Write Trailer.
So, Chat, und wenn ich jetzt alles richtig gemacht habe,
sollte ich jetzt Zeug in der Datei
schreiben können?
Schauen wir mal.
Videofile, wir brauchen Dateiname.
Plup.mp4
Plup.mp4,
so, wir schreiben einfach blind
irgendwas rein. Output File Write,
nein, Output File Write können wir nicht machen.
Wir müssen machen, Output File
Open.
Ah, Mist, da brauche ich jetzt die Parameter.
Äh,
Monarch S, wo kriege
ich denn die Parameter her? Äh,
aus so einem Paket.
Okay, wir machen das jetzt richtig eklig,
aber ich will einfach nur gucken, ob es funktioniert.
Also, if
Output
File Open,
wenn es nicht Open ist, dann machen wir
Output File Open.
Exzellent. Und da geben wir jetzt rein,
Packet, Codec Parameters
und Packet
Timebase.
So.
Und dann schreiben wir was in die
Datei rein.
Using.
Äh, Moment.
Using.
Was hat der für Schmerzen?
Captured Variable is disposed in Outer Scope.
Oh. Ah!
Ne, das kann halt funktionieren.
Äh,
wait a minute.
Das muss ich
anders machen. Das darf ich nicht hier disposen.
Ich muss sagen, wenn der Stream
vorbei ist,
dann sage ich Output
File Close.
Das Problem
ist, das ist ja nie vorbei.
Okay, wir gucken einfach mal, ob es funktioniert.
Einfach mal schauen, ob es klappt, ob das jetzt aufnimmt.
Gehen wir erstmal in das
Repo und gucken, ob es da ist. Da müsste es jetzt
eine Datei geben, die Plup.mp4
heißt.
Gibt es nicht.
Oh, oh, oh!
Äh, what?
Write before open. Ah!
Alter, ich bin ja auch doof.
If not open, dann open
wir. Was macht Using?
Using sorgt dafür, dass am Ende
dieses Blockes
automatisch die, äh,
aufräumen,
dass am Ende des Blockes, wenn es aus dem Scope
geht, automatisch die
Aufräummethode aufgerufen wird.
Macht Memory Management
ein bisschen einfacher.
Wohlgemerkt, das braucht man normalerweise gar
nicht. Normalerweise, wenn man
alles managed macht und nichts unsafe,
dann macht der Garbage Collector das für dich.
Das ist kein Problem. Aber nachdem
ich hier unmanaged Sachen drin habe, die ich selbst
freigeben will, brauche ich sowas. Man kann
auch einen Destructor machen, der das für einen aufruft
und so. Aber ich find's mit Dispose
schöner zu sehen.
Ähm...
Okay, gibt's jetzt
eine Datei?
Oh, oh! Plup.mp4
Leute, gibt's da. Die Datei hat übrigens
die falsche Farbe. Plup.mp4
So,
Plup. Und guck mal, die nimmt auch immer
weiter auf. Das Problem ist nur,
ich kann das nicht stoppen. Ich hab
nicht...
Ich hab nichts zum stoppen.
Weil eigentlich will ich das gar nicht hier drinnen
machen. Einfach nur
zum ausprobieren. Aber wisst ihr was?
Wenn ich's richtig gemacht hab, kann ich die Datei
abspielen,
obwohl, obwohl
es noch läuft. Weil ich
hab ja hier oben diese
Parameter geset...
Wo sind wir hier?
Ich hab hier die Parameter gesetzt,
dass selbst wenn die Datei abbricht, das könnte
wir jetzt gleich mal probieren, ob das funktioniert.
Selbst wenn die Aufnahme nicht
richtig beendet wird, ist die Datei
nicht korrupt. Das probieren wir jetzt aus.
Einfach abbrechen. Bäm.
Und jetzt gucken wir, ob wir's abspielen können.
Also, wir haben 14, 14 MB.
Jetzt gucken wir erst mal, was
ffprobe sagt. ffprobe sagt,
es ist ein
h.264-Stream
in MP4
und das Ganze ist
1 Minute 39. Das sieht
schon mal gut aus. Das sieht schon mal gut aus.
Also, ffplay, blub.
Bäm.
Was ist da unten?
Easy, funktioniert.
Pogurs.
Aufnahme geht.
Easy, easy, easy as
fuck. So.
Das ist doch gut.
Datei, also Aufnahme
von dem Videostream aus dem
Browser funktioniert schon mal.
Okay, das war einfach.
Wie zuverlässig das funktioniert, muss ich noch zeigen.
Okay, jetzt ist der Bier bei 33 Sekunden.
34 Sekunden.
Funktioniert. Läuft auch flüssig.
Sind auch keine getroppten Frames drin
oder sonst was. Ich mein, was natürlich in der
Aufnahme nicht drin ist, ist hier die
Object Detection, dass da eine Person
ist und so, weil die Person ist ja ein Overlay.
Das ist ja ein Overlay
über
nen Browser und ist natürlich in der Aufnahme nicht drin.
Da war ein Geist, ja.
Fast. Ist ja gar nicht geflogen.
Okay, das funktioniert.
Excellent.
Okay, also
die Basics funktionieren. Schau mal, jetzt kann ich das
alles wieder löschen, weil hier
drinnen soll das ja gar nicht verwendet werden.
Das war ja so zum testen, ob das Aufnehmen
prinzipiell funktioniert. Gut.
Und jetzt
hab ich noch ne Stunde Zeit
das ordentlich einzubauen.
Was hat der für Schmerzen? Wo lag
der Awaits?
Lag der hier Awaits?
Hier lag der Awaits.
Also, wie machen wir das denn
jetzt mal schön?
Ich würd sagen,
wir machen da jetzt, also wir haben ja
schon mal nen Object Detection
Service. Wir machen jetzt
nen Capture
Capture Detect, ne Capture
Capture Background
Service oder irgendwie sowas.
Capture
Service. So.
Der wird jetzt nen Background Service.
Background Service.
Background Service.
Das heißt im Endeffekt nix anderes
wie, dass die Runtime sich drum
kümmert, wann das Ding gestartet und gestoppt wird.
Das heißt, muss ich nicht selbst machen.
Aber was heißt die Runtime?
Die benachrichtigt, die Runtime oder
ASP.de benachrichtigt mich, wenn's
beendet wird. So, da müssen wir das
hier noch irgendwo registrieren, dass es funktioniert.
Also hier
Services, Add,
Hosted, Service
und zwar jetzt einen
Background, ne, ne, ne, ein
Capture, Capture.
Schöner Capture oder Recording Service.
Ich nenn's Capture, ich mag
das Wort Recording und
Rekord und so. Das ist so
doppel- und dreifachdeutig.
Capture Service ist schöner.
CTF Service.
Ja, das passt ja
nicht so ganz.
So, ähm.
Also, also, also.
Lass mal kurz abgucken,
ob ich irgendwas hab, was ich da noch verwerten kann.
Capture Service.
Also, wir machen erst
mal auf jeden Fall den
Constructor und injecten mal ein paar Sachen.
Nämlich, wir
brauchen auf jeden
Fall, ähm,
den Message Bus, dass ich
mitbekomme, wenn
ich Sachen
aufnehmen soll. So,
dann brauchen wir auf jeden Fall irgendeinen
Logger, dass ich ein bisschen Output
machen kann. So.
Ähm.
Capture the Frame. Ey,
das ist sogar eigentlich richtig gut.
Das muss man wahrscheinlich wirklich,
das muss man echt so nennen. So,
dann brauchen wir, was brauchen wir denn sonst noch? Ein Logger
und das war's erstmal.
Lassen wir das erstmal dabei gut sein.
Zack. Read Only
Field, Read Only Field.
Äh.
Hallo? Hä?
Was hat der denn eben gemacht?
Ah, ich hab da ein Dings davor gemacht. Ich bin ja auch doof.
Ähm, okay.
So, Impostor System.
So, das heißt, jetzt müssen
wir gucken. Wir machen den Constructor mal oben
drüber, dann findet man den besser.
So, jetzt müssen wir erstmal schauen,
wenn das gestartet
wird. Wir müssen uns dieses Token
merken.
Irgendwie, ähm.
Shutdown
Token. Also es ist
so, wenn ich das
Programm beende, dann krieg ich hier
nen Signal geschickt
mit, so nach dem Motto, ey
beende mal alle Aufnahmen. Das
muss ich mir merken, weil wenn ich mir das nicht merke,
dann schießt
mich die Runtime
irgendwann ab. Und das muss
ja nicht sein. Ich will ja alle, ich
will ja alle Aufnahmen ordnungsgemäß beenden.
Das heißt, ich muss mir das merken. Und wenn,
wenn das auf Stopped oder auf
Cancel geht, muss ich alle Aufnahmen beenden
und mich beenden. Und ich glaub,
ich glaub, ich hab fünf, fünf Sekunden Zeit
dafür. Danach
wird glaub ich mein Thread abgeschossen,
wenn ich das nicht mache. Wenn ich
mich recht entsinne. Ich bin mir da bei den Timings
nicht ganz sicher. Okay,
also, was muss ich jetzt mitbekommen? Ich muss mitbekommen,
wenn jemand sagt, ich
möchte aufnehmen. Also,
äh,
subscribe.
Und zwar, achso, da brauchen wir jetzt erstmal eine Message,
die ich mitbekomme.
Äh,
Moment, wo hab ich denn das, wo hab ich das gemacht?
Das ist was, was, ups,
was, was Selbstgestricktes.
Also, ich hab nämlich
diese Reactive Extensions für mich entdeckt.
Hab mir gedacht,
ich muss mal ein bisschen rumbasteln mit Reactive Extensions.
Also,
wir brauchen erstmal eine Message. Also, was
haben wir denn? Wir haben,
also, wir haben eine Message für Detection
Result. Das ist, wenn der,
wenn der Motion Det, äh, wenn das Object Detection
was detektet hat. Also hier, eine Person
oder so. Dann haben wir, dass eine Kamera
Stream gestartet wurde, ein Event.
So, das heißt, wir brauchen im Endeffekt
noch sowas wie einen,
wir kopieren das jetzt einfach mal.
Wir brauchen noch sowas
wie einen, genau,
Capture,
Capture
Start Request Message oder sowas.
Ja.
So, Capture Start Request Message.
Weiß ich noch nicht, was ich da brauche. Die Kamera.
Kamera. Kamera
und genau
den, was, was ich auch mit,
also, was es für nen
Aufnahmetyp ist. Also, sprich,
ob das eine manuelle Aufnahme ist, eine Timer
Aufnahme oder sonst was. Das brauch ich auf jeden Fall.
So, und dann brauchen wir das
Ganze noch. Capture,
Capture Stop Request
oder sowas.
Okay. So, jetzt müssen wir uns nur noch
überlegen, wie wir das Ganze triggern können. Ich würde sagen,
über irgendeinen Curl-Aufruf zum Testen. Also,
stellvertretend für den Web-Client
machen wir das mal über irgendeinen Curl-Aufruf.
Ähm.
Haben wir schon einen für Cancel
zum Testen. Dann machen wir noch irgendeinen Record.
Record-Aufruf.
Äh.
Das ist auch nur temporär,
bis ich das mal alles in die Datenbank
schreibe.
So, und jetzt sagen wir,
äh, Public.
Und zwar
publishen wir jetzt eine,
wie hab ich das genannt? Capture,
Capture Start Request
Das ist, das könnte fast in Java,
das könnte fast in Java ein Name sein,
oder? Capture Start Request
Wobei, in Java bräuchte
man dann noch eine Capture Start
Request Message Factory
Service, der das für einen anlegt.
Das geht ja nicht einfach so.
So,
Kamera ist das und
Träger ist, ja, gut.
Kommt halt drauf an. Wir sagen mal,
wir tun mal so, wir tun mal so, als
wäre es was von der,
von der, äh, Object Detection.
Also wir tun jetzt mal so, als wäre hier
was erkannt worden und er sagt jetzt, bitte aufnehmen.
Noch eine Factory, ja.
Mindestens eine. Ich würde sagen, wir brauchen noch einen
Factory Service,
Factory Service
Generator
brauchen wir noch.
Ist noch zu wenig.
Engine.
Manager.
Manager brauchen wir auch noch.
Factory Capture
Start Request
Message Factory
Service Engine Manager.
Das ist Fassade, genau.
Observable.
Observable
Observable Factory
Manager.
So, ähm, gut.
Jetzt
Das wird ja immer besser, Chat.
Implementation.
Implement. Imple.
Imple ist so schön C++. Kacke noch.
Imple Concrete Frame Capture
Factory Service Manager
Engine.
So, so machen wir das.
Oder alternativ lassen wir es einfach so
und lassen es lesbar.
So, also wir starten jetzt hier
dann, also wir schicken jetzt hier eine Message.
Bitte
Aufnahme starten.
Das heißt, hier subscriben wir
auf diese Message, wenn die reinkommt.
Ups.
Hier subscriben wir auf die Message,
wenn die reinkommt.
Also wir haben jetzt die Wahl,
entweder machen wir das inline.
Wir machen das nicht inline,
das wird sonst zu lang.
Ich weiß jetzt schon, dass das viel zu
viel zu lang und eklig wird.
Also, deswegen sagen wir hier private
avoid handle
äh, start
request.
So, und der kriegt eine Message übergeben.
Warte mal, was ist nämlich hier drinnen?
Exquisite. So sollten wir es dann machen.
Ja.
So und nicht anders.
Also, handle start request.
Das kann man ja alles noch bisher richtig lesen.
Das ist schon mal nicht
Java-Style auf jeden Fall.
So, capture start message listen ich drauf
und dann listen ich auf capture
stop
message.
Warte.
So.
Und das kommt mit dem Auswahl, da habe ich noch keine Methode für.
So, das heißt, wenn ich eine Anfrage bekomme,
das machen wir dann irgendwie über curl.
Den curl-Aufruf für.
curl
localhost
5000
camera
record
Okay, okay, okay, also es gibt schon mal keinen Fehler.
Das heißt, ich sollte jetzt zumindest
hier mal ein Output bekommen.
Wenn ich das abschicke,
das curl, wenn das alles funktioniert.
Aha!
Yes, excellent.
Ah, ne, Moment.
Wollt man nicht auch Programme mit ausführen?
Repeat.
Hey, ich will mal gucken,
wie viel, wie viel ich das
nicht repeat 5?
Ah, ich bin, ich bin da zu low brain
für.
Ah doch, jetzt hier repeat, ohne Quotes.
Okay, repeat.
Repeat 1000.
Gut, also.
Das verursacht noch nicht mal großartig CPU-Last.
Das Terminal verursacht CPU-Last.
Also,
wir kriegen auf jeden Fall die Message, dass wir starten wollen.
Gut, ähm.
Das heißt,
wir kopieren uns mal die Kamera
raus hier, die brauchen wir auf jeden Fall öfters.
Die Kamera,
von der wir aufnehmen.
Und den Trigger,
den brauchen wir auch garantiert, nämlich das,
was das ausgelöst hat, die Aufnahme.
So.
Und jetzt haben wir schon
ein Problem.
Ich hab doch gesagt, ich will rückwirkend aufnehmen.
Das heißt, ich muss hier
irgendwie buffern,
sobald das Stream zu einer Kamera
gestartet wird.
Ähm, ähm,
äh, ja.
Warte mal, ich hab doch hier
ne
Camera started Event.
Das können wir doch da einfach subscriben.
Dass ich das jetzt richtig sehe.
Camera started Message.
Ja, dann machen wir das doch einfach mal.
Also.
Sagen wir das hier.
Capture Camera
started Message.
Und dann brauchen wir irgendwie ein
Handle
Handle Start
oder so.
Handle
Camera Start.
Und der kriegt die Message hier.
Und da müssen wir ihm jetzt irgendwie
sagen, dass der unendlich
lang, quasi bis man die Kamera mal
stoppt,
immer nen 10 Sekunden Buffer
mitlaufen
lässt.
Also.
Also, wenn die Kamera startet, dann müsste ich
jetzt hier, warte mal, so. Da müsste ich jetzt hier
direkt am Start nen Output kriegen.
Ah, hier, guck da. Kamera ist gestartet.
Ich krieg's mit. Okay, alles klar.
Kann man bei den Triggern
nicht Buffer sein und nach Motion das hinzuf-
Äh, what?
Das hab ich net kapiert.
So, Output.
So, hier krieg ich
Hier krieg ich die Kamera-
Hier krieg ich die einzelnen Bilder von der Kamera
raus.
Das kommt hier her.
Guckt, ähm.
Hier kommt das her.
Ich mach das mal kurz weg.
Das brauchen wir nämlich alles nicht mehr hier.
Das ist relativ übersichtlich.
So, also die Kamera wirft
nen Event, wenn's nen neuen Frame gibt.
Was der macht
gut, Captain Peng. Wenn's nen neuen Frame gibt, wirft
die Kamera nen Event. Und hier,
ähm.
fängt er das Event ab
und macht so nen Reactive
Observable drauf. Das hab ich erst
gestern noch so eingebaut, weil
äh, ich grad, wie gesagt,
diese Reactive Extension eigentlich ganz cool find.
So, das heißt, ich
bekomm jetzt
hier meine ganzen Frames.
Hm.
Ich glaube, es ist Big Brain Time.
Ich muss grad mal was nachgucken.
Weil ich hab sowas
vorhin schon mal ausprobiert.
Also,
ne, wie gesagt, ich mach das, ich, das ist jetzt grad nicht komplett
blind oder so. Ich hab vorhin schon ein bisschen
rumprobiert. Also, wo hab ich's denn?
Ich hab mir nämlich vorhin
schon was überlegt. Jetzt kommt, ihr passt mal auf, Leute,
jetzt kommt Exploding,
Exploding Brain Time, ähm.
Was das wird, ähm.
Das wird einmal was,
wo du deine Kamera in den,
oder deine Überwachungskamera, oder was auch immer,
irgendwas, was H.264 Input
hat, kannst du in deinen Browser streamen.
Und dann kannst
du erkennen, ob es dort
Personen im Bild gibt.
Und wenn es Personen im Bild gibt, dann
kannst du aufnehmen.
Allerdings 10 Sekunden rückwirkend,
damit du nichts verpasst.
Das mit dem Aufnehmen bastel ich grade.
So, also,
Output.
Passt mal auf, Leute, jetzt kommt
wirklich Big Brain Time.
Also, so.
Ich bin mir noch nicht ganz sicher,
ob das so ne
gute Idee ist, ob das
nicht irgendwelche, äh, Nebenwirkungen
hat, von denen ich noch nichts mitgekriegt
hab.
Das müssen wir jetzt gleich mal ausprobieren.
Äh. Haha, jetzt hab ich's
komplett falsch geschrieben.
So. Einfach nen
Array als Ringbuffer. Ich hab mir schon
überlegt, ob ich nicht sowas hier nehme.
Ob ich nicht sowas hier nehme.
Das wär die, das wär
die, äh, easy Variante. So.
Ich nehm
Concurrent Queue, und dann sag ich immer,
dann sag ich immer
einmal, äh, DQ,
und einmal NQ mit was Neuem. Und dann hab ich
immer so nen, so nen Buffer von,
frag mich nicht, 10 Sekunden oder so.
Da muss ich nur mal ausrechnen aus der
Package Duration, wie lang's sein muss.
Greifst du für die Objekterkennung
auf Library zu? Ja. Da ist unter der
Haube, also ich mach's über nen Web-Request an was,
was schon fertig ist, was ich einfach nur starten muss.
Unter der Haube ist das TensorFlow
mit, äh, TensorFlow Lite mit
irgendeiner, keine Ahnung,
Trainings-Datenbank mit ganz vielen Leuten
drinne. Also, KylieLex,
das ist merkwürdig. Wenn du uns erklärst,
was ist, was du genau einsetzt, können wir dir vielleicht
helfen, aber so war das, äh, hab ich vorhin
nicht, nicht kapiert. So, wir machen jetzt
Big-Brain-Time. Also ich hab's hier
fünfmal angekündigt, Code. Pass mal auf, da hab ich
nämlich vorhin bei den Reactive Extensions gefunden.
Man kann jetzt sagen, also hier,
aus diesem Output,
ihr seht's, kommt ganz
viele AV-Packages raus.
AV-Packages ist das,
was meine Kamera,
generiert.
Meine Kamera
generiert AV-Packages, ganz viele.
Unendlich lange, so lange, bis die Kamera
verreckt, irgendwann mal.
Generiert es AV-Packages. So.
Und, ähm, ne.
Ich bin falsch. Wo muss ich hin?
Da.
Äh, und ich hab
vorhin bei den Reactive Extensions was gefunden,
wo man, wo wir
jetzt wirklich echt massive
Big-Brain-Time machen können.
Replay, Output, wie gesagt, hab ich mir
nicht jetzt on the fly ausgedacht, das hab ich vorhin schon,
vorhin schon gesehen.
Replay, Output, Replay.
So. Und Replay
ist ne Funktion in den Reactive Extensions.
Also wer sich fragt,
was das ist.
Das ist ne C-Sharp-Library. Gibt's übrigens für viele
Sprachen. Das ist ne Library
von Microsoft, relativ beliebt auf GitHub.
Die, die erlaubt mit
Streams einfacher zu arbeiten.
Und mit Streams
halt alles, ist halt alles
mind, was irgendeinen Anfang hat und
dann Daten kontinuierlich streamst.
Äh, what are you doing?
Äh, I can try to explain.
Ähm,
ähm,
need to start a program.
I try to capture
the streams from my cameras.
This is a example,
example camera footage, it's not live.
It's captured from one of my cameras.
Ähm, and
it will analyze if some
person walks through.
Pause jump, pause jump, pause jump.
It sends every,
every keyframe to an
object detection service.
Not in the cloud, only
offline. And
ähm, sends to the
browser client where it has
detected some persons and
draws this rectangle.
And if it has detected
motion or
some objects, it will
try to record the footage
to a file
with
10 seconds, äh,
time shift buffer
backwards in time.
So, so, so, if it triggers,
if a person walks through, if it triggers,
it will record 10 seconds
back and
from now for
30 seconds.
Das ist das, was ich probiere.
Excellent.
Code documents itself. Yes, wir wissen alle,
guter, guter Code dokumentiert sich selbst.
So, also es wird Zeit für Big Brain Code.
Also man kann mit den Reactive
Extensions, kann man sagen, Replay.
So, und Replay macht jetzt folgendes.
Ähm,
ich mal gucken, ob man da halt eine Hilfe zu anzeigen
lassen kann. Also, return,
das ist ja mal wieder hier, Big Brain.
Also wer das versteht, was die hier
schreiben, das ist, äh, dann weiß ich
auch nicht, äh.
Return to connect, was so, äh,
observable sequence,
also was es macht, ist im Prinzip,
man kann eine Zeitspanne angeben,
dann wird es wahrscheinlich auch, äh,
deutlicher, man kann eine Zeitspanne
angeben, und der
buffert für mich jetzt, genau
10 Sekunden lang diesen Output.
Und ich muss das nicht selbst
machen, ich muss einfach nur sagen,
Output Replay. So, und was jetzt
passiert, der macht quasi so einen Ring Buffer
intern, für 11 Sekunden,
überschreibt dann immer wieder,
und irgendwann kann ich mich dran attachen,
und sobald ich mich attache,
oder connecte, bekomme ich die letzten
11 Sekunden,
aus diesem Buffer, instant
zugeschickt, und ab
dann immer in Echtzeit, sobald die Pakete
reinkommen. Also eigentlich ist das
richtig geil, dieses Zeug.
Aber wie gesagt, da bin ich jetzt nicht on the fly draufgekommen,
das habe ich mir vorhin angeguckt.
So, und jetzt kann man nämlich sagen, Replay connect,
und ab jetzt
fängt er an zu buffern. Also sprich,
der buffert jetzt kontinuierlich 11
Sekunden lang, und wenn er bei 11 Sekunden
angelangt ist, dann überschreibt er
den Anfang wieder. Das heißt, er hat immer,
das heißt auf Windows immer so ein Zeitfenster,
von 11 Sekunden,
wo er den Output
von der Kamera aufzeichnet. Das heißt, wenn ich jetzt
eine Aufnahme starte,
dann kann ich 11 Sekunden rückwärts
reinschreiben, und bekomme
ab dann Echtzeit
die Sachen. Das heißt, ich muss mich
überhaupt gar nicht selbst irgendwie um
Buffermanagement kümmern, was echt
nice ist. Ich bin mir halt noch nicht sicher,
ob das nicht irgendwelche
Nebenwirkungen hat, ja. Also zum
Beispiel, dass es sich nicht richtig close, und ich
Memory Leaks habe oder so. Keine Ahnung. Ich habe
mit Reactive Extensions vorher noch so gut wie gar nichts
gemacht, aber hierfür, für Kamera
Streams und Streams allgemein,
ist das wirklich
ähm
echt nice. Das ist aber auch
wie gemacht dafür. Fulltime
Streamer Max ist zu pfeifert. Zu viel
Zeit für Vorbereitung. Ey, wenigstens
ging mir jetzt was gebacken. Okay,
ähm, jetzt
muss ich mal überlegen.
Jetzt, jetzt habe ich einen Buffer
von bis zu 11 Sekunden.
Von meiner Kamera.
Jetzt muss ich irgendwie
mitbekommen, wenn jemand
sagt, bitte aufnehmen.
Das heißt, ich muss hier
nen Bufferliste
oder irgendwas anlegen mit diesen Buffern
drinne, dass
ich da später drauf zugreifen kann.
Also machen wir mal sowas hier.
Private Read Only
Concurrent
Dictionary
Bestehend aus der ID von der
Kamera.
Und diesen Buffer.
Diesen Buffer da.
So.
Äh,
äh, Buffers.
Ich will jetzt da gerade
nichts anderes. Und wir können das, wir können das so
wie es im Fernseher ist, Timeshift
Buffers nennen.
Oh, ja. So.
It's einfach Programm Oma, ja
komplett neu. Easy. Alles in F-Sharp
am besten gleich noch.
So, und jetzt schreiben wir das hier rein. Also
Timeshift Buffers.
Push.
Ne, dass wir sehen, dass es ja was gibt. Add.
Add. Ähm.
Die Kamera
ID.
Weil ich will ja nur ein Buffer
pro Kamera starten.
Ich will ja nicht 50 Dinger starten oder so.
Äh, Try Add.
ID.
Und jetzt hier das Replay rein.
Replay ist ja eigentlich mein Buffer, ne.
Also, warum ich das Replay genannt habe, vielleicht soll ich es besser Buffer nennen.
So, Buffer.
Gut.
So, und jetzt schreibe ich
unendlich lang, immer 11 Sekunden
lang in diesen Buffer rein.
Und dann immer wieder von vorne und immer im Kreis.
Gut. Und jetzt kann ich sagen,
wenn ein Request kommt,
dass ich etwas aufnehmen
soll. Bin ich zu
low brain gerade?
Wenn ein Request kommt, dass
ich was aufnehmen soll, dann hole ich mir
den Buffer raus und schreib 10 Sekunden einfach
eine Datei. So.
Timeshift Buffers.
Äh, was machen wir jetzt?
Try. Try Get
oder so.
Ja, irgendwie so.
Try, Try, nicht Try Add.
Try Get. Gibt es da sowas hier?
Get. Try Get.
Also, wenn es für diese...
Also, wenn ich eine Anfrage bekomme,
zum Beispiel, ich soll Kamera 0
aufnehmen, dann muss ich
gucken, okay, gib mir mal den Buffer, wo
die letzten 11 Sekunden
Footage von der Kamera
ähm
und dann schreibe ich die in den Dateien ab. Da nehme ich
einfach kontinuierlich auf. Okay.
Das klingt doch eigentlich erstmal
sinnvoll. Also, Kamera ID
äh
out war
excellent.
Okay. Übrigens, wenn das
nicht funktioniert, dann
äh, bäh.
Was hat der für Schmerzen?
Warum ist das redundant?
Ah, wahrscheinlich, weil ich noch nichts danach gemacht
habe. Okay.
So, ähm, äh,
jetzt muss ich mal kurz in mich
gehen.
Was muss ich denn jetzt machen? Ich muss jetzt erstmal...
Okay, wir schreiben, wir schreiben jetzt einfach mal
was in die Datei. Wir probieren jetzt mal aus, ob das funktioniert.
Mit dem Rückwärts, mit dem Rückwärts
aufnehmen. Also.
New Video File.
Das funktioniert jetzt nur genau
einmal, ne? Danach geht's kaputt.
Aber erstmal, so, Datei
plupp.mp4.
File.
Wie es einfach 10 Minuten in der Liste stand. Was meinst du?
So, File.
So, jetzt brauchen wir, ähm,
Open.
Oh, ich hab ne Idee,
was wir jetzt machen. Also, warte mal.
Achso,
Try Get Value. Ja, manchmal übersehe ich die Dinger.
Ähm, so.
Und jetzt sagen wir
mal, wir warten auf den
Buffer. Burst.
Okay. Also,
wir warten jetzt, bis das erste Paket
in diesem Buffer reinkommt. Was
der schon drin sein sollte.
So, dann sagen wir, wir wollen
aus diesem Paket die
Codec-Parameter auslesen.
Und
die FPS
auslesen.
Dann initialisieren wir die Datei damit.
Und
dann
schreiben wir kontinuierlich
in die Datei.
So, das heißt, wir gucken jetzt, auch wenn die Datei sich
nicht öffnen lässt,
dann, dann,
schicken wir mal ne Log-Message aus und sagen,
Warning,
Omega-Lul. Irgendwas.
So.
Können wir nachher noch ordentliche, ordentliche
Fehlermeldungen einschreiben. Okay.
Und ab
jetzt
schreibe ich einfach alles,
was in diesem Buffer drin ist,
in die Datei. Das müsste
doch jetzt eigentlich
ohne Probleme
funktionieren.
Ihr wisst immer, wenn ich das sag, geht's wahrscheinlich.
Also, sagen wir jetzt mal hier Buffer.
Wie machen wir das jetzt am besten?
Wir machen ne, wir machen ne Schleife.
Und vielleicht,
vielleicht sollte ich das auch besser
in nem eigenen Task starten
hier. Egal.
Wir gucken erst mal, ob es funktioniert. Also,
wartet mal.
Also, Buffer.
Genau. Einfach
alles, was in diesem Buffer
drinne steht, in die Datei schreiben.
Also, Buffer steht drinne. Die letzten 11 Sekunden
und bis Ende.
So.
Also.
Packets.
Ah, sorry. Packet doppelt.
Ja.
Oh, ich hab
noch ne Idee. Wir könnten das im
Sekundentakt schreiben, dass es nicht so
viel IO
produziert.
Was ist das für ne gute Idee?
Also, es ist immer besser,
wenn man
Sachen in die Datei schreibt, wenn man das
am Stück macht. Und nicht irgendwie
ein Byte, ein Byte, ein Byte,
ein Byte, sondern einfach
gesammelt. Bam, 20 MB.
Sekunde warten. Bam, 20 MB.
Ist immer besser. So. Deswegen, wir Buffern
das jetzt mal. Für
ähm
für ne Sekunde.
Geht das so, was ich da mache?
So. Und jetzt ist es nämlich ne Liste
mit Paketen.
Packets.
Haha.
Excellent. Excellent. Excellent.
So. Write. Ne. Nicht Buffer.
Ähm. Ähm. File.
Write. Packets.
Achte, das geht ja net. Das muss ich
weil, weil da ist ja nix.
Was Packets akzeptiert.
Ok. Also. Public. Void.
Write.
Mehrere Packets.
Zum Schreiben.
Handle.
Packets.
Packet.
Warum Async? Warum nicht?
Achso. Ne. Ähm.
Äh. Ne, ne. Das ist nicht,
das ist nicht, dass der irgendwie Buffert oder so großartig
auf der Festplatte. Äh. Das ist
nen Mechanismus in C-Sharp eingebaut,
dass du Code
so ungefähr
so schreiben kannst, wie synchroner
Code, aber unter der Haube
händelt der dann das für dich,
dass der zum Beispiel, wenn du sagst, ich warte
jetzt hier auf das Ergebnis, dass der
dann nicht blockt, sondern
quasi an den Thread, der es aufgerufen hat,
zurückgibt. Also das ist quasi
ein eingebauter Mechanismus, dass das ganze
nicht blockt,
obwohl man es so ähnlich schreibt, wie
synchron.
Das hat nix mit, nix mit Asynchron auf
äh, irgendeinen Cache von der Festplatte
zu tun oder so.
So. Und dann schreiben wir das hier rein.
Nicht wie bei Go. Ich weiß
ehrlich gesagt nicht, wie es bei Go ist.
So.
Jetzt schreiben wir die Dinger hier rein. Write.
Man könnte, man könnte hier noch nen
Stop, no, no, no. Cancellation Token angeben.
So, jetzt bin ich aber wirklich
äußerst gespannt, ob das
klappt, was ich hier gebaut hab.
Ich bin wirklich total matt im Kopf.
Ich find schon gar nicht mehr, wo ich denn hin darf.
Ähm, so.
Packets, write packets. Okay.
Nice. Also, von der Idee her,
sollte
der jetzt ne Datei, also, wenn ich ihm jetzt
ne Nachricht schicke, er soll aufnehmen.
Und
aber nicht tausendmal, please. Nicht tausendmal.
Nicht tausendmal. Ähm.
...
Dann sollte der jetzt
sagen, ich hab ne Nachricht bekommen
zum Aufnehmen.
Ähm.
Er legt ne Datei an.
Plubmp4.
Er wartet auf das erste Packet
aus, von der Kamera.
Was jetzt schon längst da sein sollte, aber nur
falls es noch nicht da ist.
Dann öffnet er die Datei mit diesen Parameter,
sprich mit diesem Codec, mit dieser Auflösung,
mit diesen FPS. Wenn nicht, sagt er
keck w. Und an der Stelle
sollte er dann übrigens auch returnen
und nicht irgendwas anderes machen.
Und dann schreibt er einfach
unendlich lang in die Datei.
Canceln können wir noch nicht.
Wobei, wir können
canceln. Ich hab ne Idee.
Wir können canceln. Wir können sogar relativ easy canceln.
Was? Pass cancellation token?
Hab ich nen cancellation token?
Ah, ne, Moment. Das ist das falsche.
Ich mach das hier übrigens
mal kurz raus. Äh.
Nehmen wir das mal hier. Output.
Ähm.
Und dann zeigen wir jetzt mal hier.
Warum ist to est in green
markiert? Weil Rider mitdenkt
und
sagt, ich möchte hier vielleicht was zum
abbrechen, äh, rein.
Reinschieben.
Ja, zum Beispiel
könnte ich hier sowas dann übergeben.
Das machen wir jetzt auch.
Das ist einfach ne Rider Logik,
der sagt mir, hey, ich hab
gesehen, du hast was zum abbrechen.
Warum übergibst du das hier nicht einfach?
So, das machen wir jetzt nämlich auch.
Cancel, cancellation
token. Ne, token.
Ne, das geht gar nicht. With, was?
With cancellation.
Manchmal ist die Syntax echt nicht so ganz, äh,
obvious.
Ja. So, weil jetzt
kann ich nämlich sagen, cancel after
ähm,
keine Ahnung, 5 Sekunden.
Das heißt, der macht jetzt automatisch
die Aufnahme aus. Das heißt, ich brauch keine
cancel Funktion.
So, Output.
Tja, das...
Schauen wir mal, ob das jetzt funktioniert.
Ich mach hier mal ein Output rein, ob der, ups,
ob der jetzt auch schreibt.
Write.
Also sprich, der sollte jetzt einmal in der Sekunde
einmal in der Sekunde
sollte der dort jetzt was
reinschreiben. Schauen wir mal,
ob das klappt. Also mal...
Und er sollte dann abbrechen. Und er sollte dann
abbrechen. Okay.
Record. Bam.
Write. Write.
5 Sekunden um. 5 Sekunden um.
Oh. Okay.
Äh. Ja, aber fast.
Aber fast. Ja.
Also, was hat er für Schmerzen?
A task was... Ach so!
Es ist gar nichts kaputt gegangen.
Es ist gar nichts kaputt gegangen. Äh, das ist die
Standard-Exception, die man kriegt, wenn man
cancelt.
Oh, jetzt kann ich euch mal ein neues C-Sharp-Feature
zeigen. Richtig Big Brain
Feature, was die von Microsoft wieder eingebaut haben.
Also. Also, warum diese Fehlermeldung
jetzt kommt, ist folgendes.
Wenn man... Das macht
das .NET Framework intern
bei allen Async-Sachen, die man
canceln kann.
Wenn man einen Async
Vorgang cancelt, mit so einem
Cancellation-Token.
In dem Fall hier mache ich das ja nach 5
Sekunden. Wenn man das nach 5 Sekunden abbricht,
dann wirft das Ding eine Exception.
Nämlich eine Task
Cancel Exception oder
eine Operation Cancel Exception.
Das ist sinnvoll, weil
es kann ja sein, dass ich
irgendwie drauf reagieren will, wenn abgebrochen
wird. Ja? Weil es ist ja ein Unterschied,
ob beispielsweise
ein Vorgang fehlerfrei
bis zum Ende gelaufen ist,
oder ob ich einen Vorgang in der Mitte abgebrochen
habe. Also,
kann ja sein, dass ich da unterschiedlich drauf
reagieren will.
So. Das heißt, ich muss da jetzt
einen Try-Catch drum herum machen.
Und jetzt kann ich euch mal exzellent
ein neues C-Sharp-Feature zeigen.
Und ich bin mal gespannt, wer von
euch das, wie die öfter C-Sharp werden,
kennt. Ich kannte es bis vor
ein paar Tagen nämlich nicht.
So. Das hier ist jetzt die
unschöne Variante. Ja?
Also, wir catchen einfach alles.
Alle Exceptions. Egal was auftritt.
Was man machen kann, seit
C-Sharp
weiß ich nicht
7 oder so, keine Ahnung,
kann man nämlich sagen,
catchException, da kann man sagen,
when
exception
is
task
cancelException
oder is
operation
cancelException.
Das ist neu.
7, sagt der Chat, ja.
Das ist neu.
Das geht noch nicht so lang.
Also sprich, früher musste man
das so machen.
Also nur mal so zu erklären.
Das hier ist doof, weil
hier catcht jegliche Fehlermeldungen,
die auftreten. Also ich erwarte
ja, ich erwarte, dass hier jetzt
eine taskCancellationException kommt
oder eine operationCancellationException.
So die zwei Sachen erwarte ich.
Sollte da jetzt eine andere
Exception kommen, zum Beispiel irgendwie
IOException oder sowas,
dann will ich die eigentlich gar nicht capturen,
sondern will die
vielleicht sogar, dass
mein Programm abkackt, ja? Weil es ist nicht erwartet
an der Stelle. Und ganz ehrlich, ein Programm, was
abkackt bei nicht erwarteten Sachen,
ist meistens sogar besser als ein Programm, was
weiterläuft bei nicht erwarteten Sachen.
So, und
das heißt, wenn ich einfach nur Exception catche,
dann gilt das für alle
Exceptions, außer Native-Code-Geschichten,
die nicht.
Was ich früher machen konnte, ist folgendes.
Früher hätte ich das so schreiben können.
Ich catche
eine taskCancellationException
und ich catche
eine operationCancellException.
So hätte ich das früher
machen können. Macht es aber unnötig,
zumal ich ja witzigerweise
bei beiden
nichts machen will.
Außer vielleicht was loggen. Deswegen kann man
jetzt so machen und es in einem
schreiben. Ich gebe zu,
bei zwei Exceptions ist es noch
fast egal, aber wenn es
mal 3, 4, 5 sind, ist das hier schon nice.
Ja, okay.
So, äh, gut.
Soll ich irgendwas loggen? Eigentlich muss ich da nichts loggen,
weil wozu? Es wurde gecancelt
und alles ist gut.
So, schauen wir mal, ob es funktioniert.
Also, erst mal Datei löschen.
Depots,
Rider,
Monarch S,
Flup.
Übrigens,
es stimmt auch die Farbe in meinem Terminal
nicht und so ganz, ganz merkwürdig, was das
seit dem Update gemacht hat, ist die
cancellationException nicht in eine
aggregateException gerappt.
Das kann sein, aber nicht, wenn man
awaitet. Wenn man awaitet, sollte das
gescheitert werden.
Soweit die Theorie.
Okay, also, die Datei ist weg.
Jetzt schauen wir mal, ob das funktioniert.
Wir machen noch ein paar Logs.
Wir machen noch ein paar Logs. Also, wir schreiben jetzt mal hier.
Ähm, log
info
äh, keine Ahnung.
Capture started
und hier unten schreiben
Was mache ich denn da für Dinge? Und hier unten schreiben wir noch
irgendwie Capture end oder sowas.
Capture finished.
Und das machen wir raus.
So.
Das heißt, der sollte jetzt
5 Sekunden aufnehmen.
Also, ne. Der sollte
rückwirkend aufnehmen. Der sollte
rückwirkend aufnehmen. Deswegen lasse ich jetzt mal kurz
laufen. Also, ich lasse mal kurz laufen.
Ich lasse mal 10 Sekunden laufen. So, und wenn
jetzt alles funktioniert, dann nimmt
der jetzt 11 Sekunden
rückwirkend auf.
Moment. Dann nimmt
der 11 Sekunden rückwirkend auf
und nochmal 5
Sekunden zusätzlich. Also, das heißt,
ich müsste dann
16 Sekunden Video
haben, wenn das alles funktioniert, so wie
ich mir das gedacht habe.
Was natürlich extrem nice ist,
weil, wenn hier jemand
durchs Bild rennt,
wenn hier jemand durchs Bild läuft
und
ich erkenne, dass eine Person durchs Bild gelaufen ist,
dann will ich ja nicht aufnehmen
ab dem Zeitpunkt, wo ich sie erkannt habe,
sondern 10 Sekunden zurück.
Deswegen buffer ich 10 Sekunden.
Okay, ich habe jetzt lange genug aufgenommen.
Jetzt gucken wir mal. Record.
Okay, Capture started.
1, 2, 3, 4, 5.
Capture finished.
Das sieht schon mal echt gut aus.
So, Datei ist da.
2,3 MB FF Probe
ist
15 Sekunden.
Okay, fast.
Es ist fast richtig.
Ein bisschen
Plus und Minus gibt es immer.
Weil, man muss ja
auch dazu sagen,
das hier ist kein exaktes Timing.
Captain Seekai,
ja, ist richtig exquisite.
Also, das hier ist
nur, eigentlich ist das hier
gar nicht so geil, weil
das hier nimmt nicht 11 Sekunden
Video auf, das nimmt
11 Sekunden lang auf, wie Pakete reinkommen.
Also sprich, da können
durchaus mal ein paar Pakete fehlen,
die vielleicht selbst aber schon eine halbe Sekunde
lang gewesen wären.
Also, es wäre fast besser,
ich buffere das
von Hand, indem ich hier
beispielsweise die
Package Duration zähle
oder so. Aber mal ganz ehrlich,
eigentlich ist das okay.
Ich mein, scheiß drauf.
Ob das jetzt eine Sekunde
länger oder kürzer ist, ist doch jetzt eigentlich
dafür spare ich mir hier massig Code,
ist doch okay. So, jetzt kommt natürlich die Frage,
geht die Aufnahme überhaupt? Aber die müsste
eigentlich gehen. Ja, nice.
Guckt mal, der Capture sogar weiter, wenn die
Kamera neu startet.
Excellent. Sehr nice.
Okay, jetzt ist fertig. Es ging ja nur 15 Sekunden.
Jetzt ist fertig.
So, wir können jetzt mal gucken, ob das auch...
Ne, mehrfach aufnehmen kann ich da noch nicht.
Wenn ich mehrfach aufnehme, dann crasht das.
Ich hab das hier alles in diesem
Inline
Starthändler drin. Das funktioniert nicht.
Aber das Aufnehmen geht prinzipiell
schon mal. Das ist sehr nice.
Das gefällt mir. Das gefällt mir wirklich gut.
Ich mach da jetzt mal was extra.
So eine extra Methode. Sonst wird es mir nämlich ein bisschen voll.
Private void
startCapture
So, und in startCapture kommt dieser ganze
Schmodder von hier unten.
Capture finished.
Capture started.
File.
Oh, bam.
Was brauche ich denn hier drin jetzt?
Ich brauche den Buffer.
Buffer und Dateiname brauche ich. Also
String, Filename und
den Buffer.
Und das ganze muss async sein.
Und dass der Chat sich nicht wieder beschwert.
Async task kann man auch machen.
Man darf, man soll ja eigentlich kein async void machen.
Aber jetzt machen wir gerade async void.
So, und jetzt
kann man das aufrufen.
StartCapture
Filename
ist blub.mp4
Filename generieren wir gleich noch.
Und der Buffer.
So.
Und jetzt ist das ein bisschen schöner.
Jetzt blickt man vor allem ein bisschen mehr.
Besser wieder durch.
Funktionieren sollte der ganze Spaß immer noch.
Connected.
Ah, Moment. Ich habe die Aufnahme gestartet
bevor die Kamera an war.
Capture started.
1, 2, 3, 4, 5.
Capture finished.
Wie lange machst du heute?
Ja, 20 Minuten noch oder so.
So.
Dann haben wir wieder 15 Sekunden.
Excellent.
Warum haben wir 15 Sekunden?
Warum haben wir 15 Sekunden?
Ich dachte, ich habe viel schneller aufgenommen.
Das muss ich jetzt nochmal ausprobieren.
So, weil wenn ich jetzt schneller,
wenn ich jetzt hier schneller drücke mit dem Curl,
dann müsste ich ja eigentlich, dürfte ich nicht so viel Buffer,
nicht so viel Scrollback Buffer haben.
11 Sekunden. Okay, siehste?
Er nimmt nur so viel auf. Er nimmt immer auf,
wie viel in meinem Buffer
drin ist plus 5 Sekunden.
Und jetzt habe ich das zu, jetzt habe ich das schon
gestartet, die Aufnahme.
Bevor da 11 Sekunden
gebuffert waren. Deswegen ist es jetzt, keine Ahnung,
6 Sekunden plus 5 Sekunden.
Und jetzt ist es bei 11 Sekunden.
Okay, gut. Also das, das scheint alles
auf Anhieb relativ,
relativ
gut zu funktionieren.
Da ist aber irgendwo noch ein Haken. An irgendwas habe ich nicht gedacht.
Bestimmt. Irgendwas.
Sonst müssen wir noch einen gescheiten Namen generieren. Das machen wir jetzt noch.
Wir müssen noch einen gescheiten Namen generieren,
weil ich kann ja schlecht alle Aufnahmen
plupp.mp4 nennen.
Weil ich meine, plupp.mp4 mag ja
vielleicht
für eine Aufnahme gut
funktionieren, aber für alle garantiert
nicht. Das heißt,
wir machen uns mal irgendwas, was wir
auch später in die Datenbank schreiben können.
Nehmen wir erstmal irgendwie
public class capture
capture
info oder sowas.
Man könnte auch einfach hochzählen.
Man könnte sie auch einfach hochzählen.
Capture 1, 2, 3. Ne, aber wenn
das jemand im Filesystem mal sortieren will,
ist besser. Wir nennen das wie den Namen
der Kamera, die ID von der Kamera
und
Zeit, Zeit, Zeit,
Timestamp. Stampchamp.
Ok, also. Nachdem wir
das später mal in die Datenbank schreiben wollen,
braucht das Ding eine ID, sonst funktioniert das
mit EF Core nicht. Einfach
eine Random Grid. Hier, da habe ich auch schon dran
gedacht, weil wir mappen ja eh in der Datenbank
später, welche Aufnahme zu welcher
Zeit das Ganze ist. Also man könnte
wirklich eine Random Grid nehmen.
Auf dem Filesystem. Aber ich finde, es ist
nicht sonderlich benutzerfreundlich, wenn der mal echt
ins Filesystem geht und danach
sucht. Dann ist es glaube ich schon besser,
wenn die Aufnahme heißt wie
die Kamera und
Motion Detection
war Kamera und Uhrzeit.
Ist wahrscheinlich besser zu finden als Random
Grid. Ja. Ok, dann
also, was müssen wir uns merken bei so einer
Aufnahme? Die interne ID
in der Datenbank. Ok, wir müssen uns merken, von welcher
Kamera das Ganze kommt.
Wir müssen uns
merken,
keine Ahnung hier,
wann das gestartet wurde.
File Extension.monks.
Das würde ich sofort machen.
Das Problem ist, warum das nicht geht,
ist folgendes.
Ich sag hier
av-gas-format
und wenn
die File Extension.monks ist
oder monaks,
dann sagt er wahrscheinlich, dass er das Format
nicht kennt. Was ich machen könnte
ist monaks.mp4
Das könnte ich machen.
Das machen wir.
Das machen wir. Aber mp4 muss es
heißen oder aber ich muss hardcoded
oder aber ich muss hardcoded
sagen, nehm mp4. Das kann ich auch machen.
Ok, aber Capture Service,
das mit der Datei, mit der Kamera machen wir nochmal kurz.
Also, ok, uns interessiert
der Start von der Aufnahme.
Uns interessiert das Ende
von der Aufnahme.
Uns interessiert, was das
ausgelöst hat.
Nupi84,
Twitch Prime, Dankeschön für den Sub.
Exzellent Subscription.
Big Brain Sub.
Dankeschön. Prime Subscription sogar.
Die Länge der Aufnahme.
Ja,
finde ich auch gut.
Flix, Twitch Prime.
Massive IQ Sub.
Dankeschön.
Die Länge können wir einfach ausrechnen
mit Start durch Ende.
Äh, nicht Start durch Ende.
Ende minus Start.
Alter, ich bin 36.
Ich glaube, wir haben kein Ausrufezeichen, Alter.
Aber ich bin viel zu alt
mittlerweile schon, ey. Können wir
sagen, Timespan
Duration
oder
Scam Train ist schon wieder am Start.
So, und da sagen wir jetzt
Duration ist was? New
Timespan
Ne, Moment, das muss man gar nicht sagen. Man kann einfach
sagen, End minus
Start. Da kommt ein Timespan raus,
oder? Genau, ok.
Also,
Duration können wir machen.
Dann, mit was das ausgelöst
wurde.
13, 14 Monate.
Excellent Subscription.
Das ist ja schon, 14 Monate ist ja
nice.
Moment, das will ich jetzt nochmal schnell fertig machen.
Also, wir brauchen den Trigger.
Was es ausgelöst hat.
Äh,
machen wir sowas wie
Has Error. Vielleicht ist es irgendwie abgekackt.
Das will ich vielleicht im Frontend mal zeigen.
Machen wir sowas wie eine Error Message, falls es
eine Error hat.
Und wir merken uns, ob
das
ist
Captch ist, ist, ist
active, komm.
Ist das ein dynamisch berechnetes Property? Ja, genau.
Das ist die Kurzschreibweise.
Das ist die Kurzschreibweise von
Mal gucken, ob das Writer umformatieren
kann. Ja, das ist die
Kurzschreibweise zu dem hier.
Was natürlich irgendwie
schicker ist, ja.
Okay.
So.
Und jetzt brauchen wir noch den Name.
Den Name von der Datei.
So.
Oh, jetzt, jetzt ist
mein, warte mal hier, File,
File Name nennen wir es mal.
File Name.
So. Ähm.
Da versagt jetzt mein Brain.
Weil ich will sowas hier machen.
Ähm.
Also, der Name ist,
wird automatisch zusammengesetzt
aus, äh,
Ach, Moment.
Was mach ich denn hier?
Wird automatisch zusammengesetzt
aus Kamera, Name,
ähm,
Underscore,
dann, was
es für
ein Aufnahmetyp
ist, äh,
was denn sonst noch? Und die Uhrzeit,
hä? Ich weiß nicht.
Oh, da hab ich jetzt keinen Bock drauf.
Zeitformat, Alter.
Was ist denn ein gutes Zeitformat?
Was ist ein gutes Zeitformat für Video, für Videostart?
Also, sagen wir sowas, keine Ahnung,
sowas in der Richtung wie 2020,
äh, 2020,
elfter,
zwanzigster,
zwanzigster,
Wir machen das Ami-Format,
das ist in dem Fall praktischer, weil das dann sortierter
ist.
Ich mach's mal mit Underscore.
So, und dann, dann
Minute, also sagen wir, und der
21 Uhr,
45 und 40 Sekunden, sowas?
In Millisekunden, ey.
Sowas hier, hä?
So, jetzt ist bloß die Preisfrage,
wie formatier ich meine
Startduration, sodass das funktioniert?
Da steh ich immer
Hardcore auf dem Schlauch.
C-Sharp,
Date, Time,
Format,
Dano, stimmt das?
Ernsthaft?
Also, Dano, wenn das stimmt, das ist ja aber echt
big, massive brain,
der. Ich muss da immer nachgucken,
ich kann mir das nicht merken.
Ist es toString oder ist es Format?
Und dann sowas hier.
Okay.
Was hat Ryder denn für Schmerzen
hier? Replace with
Format, mit was für nem Ding?
Was ist das?
Das geht? Das ist neu.
Das ist neu.
Kenn ich noch nicht. Seit wann gibt's das?
Wie hieß das?
Ich hab vergessen, wie das...
Wie wurde das genannt?
Format
Specifier.
ToString ist alt,
aber das hier ist neu.
Dass du nicht mal toString schreiben musst.
Pro Nutzer definiertes Format...
Okay, ich hab keine Ahnung, von wann das ist.
Ich nehm das einfach zur Kenntnis, dass es
funktioniert.
Das Scam-Train ist durch. Excellent.
Vielleicht...
Stimmt, das kann sein, dass es hier mit
String-Interpolation kommt.
Das wird's wahrscheinlich sein.
So, wo wir grad dabei sind.
Ist das überhaupt die richtige...
Also...
Aha, ist...
Die Stunde von 1
bis 12...
Nee, nee, nee, nee, groß.
Groß, groß, groß.
Nicht...
Nicht NA-Zeit.
NA-Datum okay, aber
keine NA-Zeit.
Okay.
Mal schauen.
Okay, das ist so die letzte
Amtshandlung heute. Mal schauen, ob das klappt.
File name.
Also, das heißt, wir sagen jetzt mal hier
for info, new, capture, info,
kapture, info.
So,
also, was braucht man da?
Wir machen jetzt erst mal die Kamera ist die.
Start kann ich
schon setzen. Start is date time
now.
End kann ich noch nicht setzen, ID auch noch nicht.
Trigger kann ich setzen und
den Rest kann ich auch nicht
setzen.
So, und jetzt sagen wir hier mal
file name.
So, mal schauen, ob das klappt
jetzt.
Ob die jetzt so heißt,
wie wir uns das vorgestellt haben.
So, record.
Bam.
Ah, ich hab mp4 vergessen.
mp4 fehlt. Guck, übrigens hier
unable to find
suitable output
for 0.
Okay, das Ding muss tatsächlich
.mp4 heißen, sonst geht's nicht.
Okay,
monaqs tatsächlich, also okay.
monaqs.mp4
Aber mp4 muss sein, sonst erkennt er's nicht.
Hoffentlich geht das.
Capture started.
Capture
finished.
Bam.
Wohnzimmer
motion 2020
11
20 21 59
10. Perfekt.
Ich würde ja die Ordner ändern.
Come name, dann timestamp, dann trigger.
Du meinst den timestamp
zuerst? Warum?
Der Chat wieder.
Achso, du meinst der
Kameraname als Ordner.
Der Kameraname
ist nicht unique.
Eigentlich müsste ich Kamera ID
und Kameraname zusammen nehmen
als Ordner.
Weil der Kameraname ist nicht unique.
Es kann ja sein, dass Leute zwei Kameras im Wohnzimmer
haben. Die ID ist unique.
Das würde hier natürlich
auch gleiche Probleme machen, ja.
Aber zeigt mal her.
Aber das überlege ich mir morgen.
Funktioniert. Bam.
Wie ist der Stand? Aufnahme funktioniert.
Aufnahme funktioniert.
Was passiert eigentlich, wenn ich zweimal aufnehme, dann crasht's, oder?
Capture started.
Wie, das geht?
Das geht einfach?
Ich kann einfach so zweimal aufnehmen?
Hab ich irgendwas verpasst?
Ja gut, warum nicht?
Ja gut.
Kann einfach mehr verpassen.
Was passiert, wenn ich zu schnell hintereinander starte?
Dann kackt er ab. Wenn ich zu schnell hintereinander starte,
kackt er ab.
Nee. Hm.
Heh, lustig.
Damit hätte ich ehrlich gesagt nicht
gerechnet, dass das funktioniert.
Aber es ist gar nicht so schön,
wenn ich mehrere Sachen gleichzeitig starten kann.
Ich sollte das abfangen,
dass ich nicht mehrere Sachen gleichzeitig starten kann,
weil
es ergibt ja keinen Sinn.
Warum sollte ich für eine Kamera
mehr als ein Capture-Typ
gleichzeitig
weil da könnte ja einer
im Webinterface
den hier machen
und er hätte 50 Aufnahmen.
Nee, das ist doof.
Wir können's auch im Webinterface locken.
Dass das nicht geht.
Aber ich hab noch eine andere Idee.
Wisst ihr, was richtig cool wäre?
Jetzt ist es ja so,
wenn der erkennt, dass jemand durchs Bild
gelaufen ist hier.
Dann löst er eine 5-Sekunden-Aufnahme aus.
Wir machen's mal auf eine 30-Sekunden-Aufnahme.
Und rückwirkend 11 Sekunden.
Also sprich, der nimmt
41 Sekunden auf.
Ab dem Zeitpunkt, wo er eine Person
erkannt hat, 10-11 Sekunden zurück
und 30 Sekunden vorwärts.
Wisst ihr, was richtig geil wäre?
Wenn wir es hinbekommen,
dass wenn der
mehrere
Detections hat
innerhalb einer Aufnahmezeitspanne
dass er es dann
immer erweitert.
Also sprich, wenn er jetzt eine Person
erkennt und er wirft die Aufnahme an
und er
erkennt 5 Sekunden später wieder was
dass er dann keine zweite Aufnahme
anmacht, sondern
dass er die
genau so was wie Captain Seeker schreibt
sondern dass er quasi diese 30 Sekunden
erweitert.
Irgendwie sowas.
Ich schreib mir das mal auf,
dass ich nicht vergessen habe.
Kann man den Cancelation Token
anpassen an der Stelle?
Äh, für was?
Äh, nee, naja das klappt
nicht, weil beim nächsten Durchlauf
macht er das hier ja neu.
Das heißt, ich müsste mir da speichern.
Das machen wir aber nicht heute mehr.
Das heißt, ich müsste mir da speichern.
Ich kann jetzt nicht einfach hier blind von oben
nach unten durchlaufen.
Also sprich, ich müsste mir diese Capture
Moment.
Äh.
Moment, also an der Stelle ist
das Cancelation Token eh schon
Kacke.
Warte mal, an der will ich das
Moment, hier will ich das Token überhaupt nicht drin haben.
Das Token will ich
dort wo ich das aufrufe
generieren. Also quasi da.
So.
Aber ich müsste mir das
speichern. Also ich müsste mir das hier merken
und sagen
okay, wenn die Kamera schon
läuft, dann hol dir das
alte. Das heißt, ich müsste das
Cancelation Token hier drinnen speichern.
Und wenn, oder in irgendeinem
Dictionary oder so. Und wenn er
das nächste Mal reingeht und er schon eine laufende
Aufnahme hat,
dann nimmt er das alte, extendet das
und returnt einfach. Irgendwie sowas in der Richtung.
Also ich mache jetzt mal
schnell irgendwas. Wie gesagt, wir machen gleich Schluss.
Nur, dass ich es morgen nicht vergesse. Also sagen wir mal
Dictionary. Nee, Moment.
Concurrent Dictionary.
Immer. Im Zweifelsfall sind wir lieber
ein bisschen langsamer. Dafür Threadsave.
Also, wir müssen uns speichern
für die ID. Nee, Moment.
Moment, Moment. Nicht für die ID von der
Kamera.
Kamera.
Nee, nicht Kamera Info.
Capture Info.
Sondern, wir wollen ja
pro Aufnahmetyp
einmal erlauben. Also Aufnahmetyp
sprich, ist es manuell,
Timer oder Motion Detection.
Also sprich, da können wir jetzt mal
neue C-Sharp Feature verwenden, was es noch nicht so
lang gibt. Können wir hier sagen.
Wir wollen als Key
nicht ein Wert verwenden,
sondern zwei Werte verwenden.
ID. Capture Trigger.
Was nennt das da?
So, nennen wir es mal irgendwie
Active Captures.
Gleich.
So, und dann müsste ich das speichern.
Dann müsste ich quasi, wenn ich starte
und das hier müsste ich auf jeden Fall
erwarten.
So, das ist nix mit Assault.
Das müsste ich auf jeden Fall erwarten, dass ich
danach was anderes machen kann,
wenn die Aufnahme fertig ist.
Ob das so klappt?
So.
Okay, es heißt, wenn ich die Aufnahme
starte, dann sagen
wir hier Active
Captures.
What the fuck.
Add. Try Add.
Und zwar die Kamera ID
und den Trigger
und diese Capture Info.
So, und wenn das
fertig ist, dann entferne ich es einfach wieder.
So.
Und dadurch, dass ich hier erwarte,
macht er das auch erst, wenn die Aufnahme fertig ist.
So.
Und dann kann ich hier oben,
ach du Scheiße, ob das klappt?
Dann kann ich hier oben gucken,
if
Active Captures,
also sprich,
gibt's das schon?
Gibt's das schon?
Wobei, wirklich Threadsafe ist das auch nicht.
Das ist zwar beim Zugriff Threadsafe, aber
zwischendrin kann immer noch...
Okay, probieren wir mal. Also.
Gibt's das schon?
Wenn's das
gibt...
Lull, ich weiß gerade keinen besseren Namen
für.
Wenn's das gibt
und der Trigger
gleich gleich
Motion Detection
ist, dann...
Ach, fuck!
Ich hab ja, ich hab ja das Cancellation
Token gar nicht. Also brauch
ich hier nicht die, haha, oh fuck.
Also brauch ich hier nicht nur die Capture Info,
sondern ich brauch,
vielleicht soll ich da irgendwie einen eigenen Typ für machen,
sondern ich brauch noch die, das Cancellation
Token.
Oh, exquisite!
Oh, jetzt wird's schön lesbar.
Hmm, fein, fein, fein.
Ah,
yes! Kann er das
auto-formatieren?
Also, wer wollte
nicht schon immer mal so ein Dictionary in seiner Klasse
drin haben? Sieht das net toll aus.
Keiner kann's, ey, also wer das
entziffern kann, der ist echt nicht schlecht.
So, das heißt, ich schreib jetzt hier nicht
nur die Info rein, sondern...
Ich schreib da jetzt auch noch...
Moment...
Ich hab schon wieder vergessen, wie's heißt.
Wo hab ich?
Wo hab ich mein Dictionary?
Wo ist es hin?
Wo ist, wo ist es hin?
Ah, ich hab's nicht oben, ich hab's hier unten drunter gemacht, okay.
Also, ähm...
Da mach ich nicht das Ding, sondern ich mach noch
die, die, die Cancellation Token Source auch noch
rein.
Uff, eieiei.
Ähm, okay.
Okay.
Und jetzt sag ich, lull,
Source, cancel
after 30 Sekunden. Okay, testen
wir, ob's funktioniert. Testen wir, ob's funktioniert.
Wir machen hier mal, äh, keine Ahnung, Extent.
Schreiben wir jetzt da hin.
Okay, also, zum testen,
5 Sekunden Aufnahme ist normal.
5 Sekunden Aufnahme ist normal.
Das heißt, nach 5 Sekunden
cancel der das.
Normalerweise. Hier hab ich ja startet.
1, 2, 3, 4,
5.
Stop. So, und wenn ich jetzt
das nochmal starte,
und nochmal...
Oh, Extended, guck mal.
Ah, aber, Moment, Moment.
Ah, Moment. Nein, nein, nein.
Ich muss returnen, ich darf nicht weitermachen. Okay, das war
fast, fast, fast.
Nochmal, nochmal. Okay.
Ähm.
Okay.
5 Sekunden.
Extended. Extended.
Extended. Extended. Extended.
Okay, und jetzt sollte es 30 Sekunden gehen, also
B ist 50. Das scheint zu
funktionieren.
Weil sonst wäre er ja schon fertig. Okay, es gibt 2
Wirklichkeiten. Entweder er bricht
komplett ab.
Kackt ab, oder
er, er hört gar nicht mehr auf
aufzunehmen, oder es klappt. So.
3, 2,
1. Bam.
Habt ihr es gesehen?
Easy.
Und jetzt haben wir
FVLC.
Wie lang ist der Spaß?
Oh, ich muss gucken, dass ich mit dem Keyframe
starte noch. Äh.
Das muss ich mir gleich nochmal aufschreiben, irgendwo hier.
Start with
Keyframe.
Weil ansonsten
fängt die Aufnahme so an.
Guck mal, jetzt haben wir 40 Sekunden
aufgenommen.
Wir haben 11 Sekunden zurückgescrollt.
Ja, das kommt so ungefähr hin. Okay, okay.
Nice, nice. Also das heißt, wir
starten jetzt eine Motion
Aufnahme und solange
weiter Motion ist im Bild,
nimmt er die weiter auf. Das ist doch cool.
Und hat
also quasi immer 30 Sekunden, also immer 11 Sekunden
vorne dran und dann immer 30 Sekunden
hinten dran.
Bis zu Unlimited. Also wenn's
immer, wenn quasi den ganzen Tag Leute
durchlaufen, dann hat er den ganzen Tag
einen Video-File.
Okay.
Ich mach jetzt nochmal eine Änderung,
die mir gerade einf... dass ich nicht vergesse.
Wo hab ich denn hingeschrieben? To do Keyframe.
Start with Keyframe. Ich glaube,
das ist relativ einfach, dass wir mit
einem Keyframe starten. Ich sag ihm einfach
output
buffer
wir überspringen einfach
wir überspringen einfach
alles bis zum
Keyframe. Also wir sagen quasi
sowas wie hier ähm
skip
skip
element from the observance until
specified start
time. Kann ich
nicht sagen. Skip until
packet
packet
packet 2
nein, ähm
okay, ich weiß es nicht.
Gib mal ein Shoutout für IamLuci.
Excellent.
Ähm
Ja, ich shoutoute.
Wir machen morgen weiter.
Ist schon so spät, ich kann eh nicht mehr richtig denken.
Okay, wenn ich mir dann
Profilbild angucke,
dann gefällt euch bestimmt das hier.
Was für eine Sprache ist das?
Ähm C-Sharp war das.
Ja, nice. Ähm
schön, dass ihr dabei gewesen seid wieder heute.
Ich hab jetzt hier Urlaub bis Januar.
Was hat das mit der 1 mit sich auf sich?
Mach mal Ausrufezeichen 1, da gibt es schon eine Erklärung für.
Das wäre ich ja im Stream mehrfach gefragt.
Ah, ah, ah,
ah, Moment. Delete.
Admin sein für alle. Ich glaub es geht los.
Ich darf es nicht lösen.
Okay, Leute.
Also, wir sehen uns. Bis denn. Macht's gut.
See you.
