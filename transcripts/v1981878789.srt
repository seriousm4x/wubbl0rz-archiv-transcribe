1
00:01:09,420 --> 00:03:22,860
ist ja eigentlich dass ich die letzten die letzte woche ja doch die letzte woche habe

2
00:03:22,860 --> 00:03:30,550
ich 600 euro tierarzt rechnung ausgegeben aber ich will ja dass es gut geht aber das

3
00:03:30,550 --> 00:03:38,230
ist schon echt ordentlich wenn man hier ist nicht so wild ja die kohle muss irgendwo hin

4
00:03:38,230 --> 00:03:42,550
aber schon ganz schön heftig wenn man sich überlegt wie macht man das wenn man jetzt

5
00:03:42,550 --> 00:03:50,230
nicht so viel geld zum fenster rausschmeißen kann wenn es war nicht so fenster raus geschmeißt war

6
00:03:50,230 --> 00:03:57,820
für die katze zu sagen aber 600 euro tierarzt kostet schon krass ich war ich habe einmal

7
00:03:57,820 --> 00:04:09,160
einmal habe ich das will keine neue katze einmal waren die hier haben sich chico angeguckt dann

8
00:04:09,160 --> 00:04:12,460
war ich beim augenarzt mit chico moment die musik ist zu laut

9
00:04:12,640 --> 00:04:33,050
dann war ich dann war ich beim augenarzt mit chico also also das ding war ich habe letzte

10
00:04:33,050 --> 00:04:37,670
woche hat chico hier auf dem schrank war nicht vor allem an letzte woche hat chico letztes letzte

11
00:04:37,670 --> 00:04:41,030
wochenende hat chico hier auf dem schrank gehockt dann hat so ein bisschen habe ich gesehen jetzt

12
00:04:41,030 --> 00:04:46,190
ein bisschen blut im auge gehabt denkt man sich ja erst mal nichts großartiges dabei man kann

13
00:04:46,190 --> 00:04:51,470
sich gekratzt haben oder irgendwie sonst was also und rechts bisschen blut im auge aber nachdem

14
00:04:51,470 --> 00:04:56,130
chico ja bekanntermaßen bisschen nierenprobleme hatten auch nur diätfutter und alles

15
00:04:56,150 --> 00:05:03,350
kriegt chico ist ja 13 mittlerweile schon ist jetzt zwar kein alter wirklich für katzen aber

16
00:05:03,350 --> 00:05:08,390
schon alt also sind alte können durchaus älter werden aber auf jeden fall schon schon oma ja

17
00:05:08,390 --> 00:05:17,630
und zumindest dann habe ich im internet geguckt dass gerade katzen mit nierenerkrankungen oftmals

18
00:05:17,630 --> 00:05:26,030
auch unser bluthochdruck leiden und bluthochdruck bei katzen sehr oft auf das auge geht und dass das

19
00:05:26,150 --> 00:05:32,570
auge blutet und manchmal löst sich auch tatsächlich die netzhaut aus richtig krass zumindest habe ich

20
00:05:32,570 --> 00:05:41,300
dann war ich beim tierarzt wo wir sonst hingehen und habe gesagt hier katzen blut im auge und

21
00:05:41,300 --> 00:05:45,240
blutdruck messen haben die irgendwie gesagt doch nur wir können gar keinen blutdruck messen fand

22
00:05:45,240 --> 00:05:49,460
ich schon sehr pepega dass sie das so alles überhaupt nicht interessiert hat habe ich mir

23
00:05:49,460 --> 00:05:55,160
gesagt so gut dann neuen tierarzt suchen habe ich mir neuen tierarzt gesucht und die sind tatsächlich

24
00:05:58,040 --> 00:06:04,840
alle schon da und das ist ja schon bei mir so an erster anstelle das blutdruck messen ist am besten

25
00:06:04,840 --> 00:06:12,740
wenn die katz halt entspannt ist leider war chico sehr unkooperativ was blutdruck messen angeht da

26
00:06:12,740 --> 00:06:17,040
mussten sie die erst mal in ihr auto hocken und dann haben sie da gemessen und chico hat halt

27
00:06:17,040 --> 00:06:22,460
richtig krass hohen blutdruck schickte hat er schickte hat über 250 blutdruck normalerweise

28
00:06:22,460 --> 00:06:27,060
ist 150 gerade so noch okay schickte super krass hohen blutdruck jetzt kriegt chico zusätzlich zu ihren schilddrüsen und Nierenmedikamenten

29
00:06:28,960 --> 00:06:31,020
noch Blutdrucksenkende Mittel.

30
00:06:33,650 --> 00:06:37,790
Und für das Blut im Auge war ich mit der Katze beim Augenarzt.

31
00:06:37,890 --> 00:06:40,670
Ja, es gibt Augenärzte für Katzen.

32
00:06:41,690 --> 00:06:43,370
Die hat das Auge untersucht und hat gemeint,

33
00:06:43,430 --> 00:06:45,230
oh ja, also da ist schon ein bisschen blutig

34
00:06:45,230 --> 00:06:47,690
und hat auch nochmal Blutdruck gemessen, war auch wieder viel zu hoch.

35
00:06:49,130 --> 00:06:51,650
Und jetzt muss sie noch ein paar Kortison-Tabletten schlucken,

36
00:06:51,650 --> 00:06:53,690
dass das alles wieder schön abschwillt im Auge

37
00:06:53,690 --> 00:06:56,070
und die Netzhaut auf jeden Fall dran bleibt und sie nicht blind wird.

38
00:06:57,870 --> 00:06:59,690
Und jetzt kriegt die halt Blutdrucksenkende Mittel.

39
00:07:00,270 --> 00:07:02,650
Und morgen gehe ich schon wieder zum Tierarzt.

40
00:07:05,210 --> 00:07:07,650
Und Mittwoch wieder zum Augenarzt.

41
00:07:10,910 --> 00:07:13,070
Also ich habe wahrscheinlich innerhalb von 14 Tagen

42
00:07:13,070 --> 00:07:15,190
bin ich 1000 Euro los, was Tierarzt angeht.

43
00:07:17,540 --> 00:07:18,080
Keck-Weight.

44
00:07:22,880 --> 00:07:23,860
Wie alt ist die? Die ist 13.

45
00:07:23,860 --> 00:07:25,620
Die ist schon älter.

46
00:07:26,080 --> 00:07:28,180
Da haben die ja öfters mal die ein oder anderen Probleme.

47
00:07:28,220 --> 00:07:29,440
Oh nee, C++, geh mal weg.

48
00:07:29,560 --> 00:07:31,760
Ich mach, ich mach, don't save, ich mach weg.

49
00:07:35,490 --> 00:07:36,790
Gibt es eine Krankenversicherung?

50
00:07:37,290 --> 00:07:37,870
Ey, keine.

51
00:07:37,890 --> 00:07:42,450
Keine Ahnung, ob es das gibt, aber wenn, ist es wahrscheinlich so unsinnig teuer.

52
00:07:48,590 --> 00:07:50,250
Ich bezahle das selbst.

53
00:07:51,270 --> 00:07:52,370
Irgendwo muss die Kohle ja hin.

54
00:07:53,030 --> 00:07:57,090
Also ich hoffe, dass am, also das ist morgen, wenn Blutdruck gemessen wird,

55
00:07:57,210 --> 00:08:00,310
dass, also wir waren ja da nochmal letzte Woche Blutdruck messen, Blutdruck messen

56
00:08:00,310 --> 00:08:10,400
und zwar am, am Freitag, da war er schon runter, ein bisschen, aber noch nicht genug.

57
00:08:11,540 --> 00:08:14,820
Aber das dauert immer ein bisschen, bis das Blutdruckmedikament bei der Katze im Blut ist.

58
00:08:14,820 --> 00:08:15,900
Bei Menschen übrigens nicht anders.

59
00:08:16,240 --> 00:08:17,500
Bis das alles ordentlich wirkt.

60
00:08:19,080 --> 00:08:20,820
Chico bewegt sich auch viel zu wenig, ja.

61
00:08:21,540 --> 00:08:22,620
Chico hängt immer nur rum.

62
00:08:23,980 --> 00:08:26,340
Und ich hoffe, der Blutdruck ist da noch ein bisschen runtergegangen

63
00:08:26,340 --> 00:08:30,260
und beim Augenrat stellen sie fest, dass alles wieder, alles wieder soweit okay ist.

64
00:08:30,540 --> 00:08:33,320
Und, weil, ganz ehrlich, die Katze kriegt halt sehr viele Medikamente

65
00:08:33,320 --> 00:08:35,220
und die Katze hat keinen Bock da drauf, die zu nehmen.

66
00:08:43,310 --> 00:08:45,970
Ja, du hast aber sicherlich nicht einmal 80 Euro bezahlt, oder?

67
00:08:46,810 --> 00:08:47,670
Ist er Freigänger?

68
00:08:47,870 --> 00:08:49,890
Nee, es ist eine Sie, auch wenn sie Chico heißt.

69
00:08:49,890 --> 00:08:52,750
Das ergibt keinen Sinn, aber was weiß ich, was die Vorbesitzer sich dabei geben.

70
00:08:52,770 --> 00:08:56,080
Ich weiß nicht, ob sie das gedacht haben.

71
00:08:56,080 --> 00:08:58,080
Kann man aber wahrscheinlich auch nur für die junge, für eine junge Katze abschließen,

72
00:08:58,080 --> 00:09:00,080
wenn du das für eine 13-jährige Katze abschließt.

73
00:09:00,080 --> 00:09:04,080
Da wollen die fast Versicht dafür haben, Alter.

74
00:09:04,080 --> 00:09:08,080
Das ist so, wie wenn du mit 70 sagst, ich möchte eine Krankenversicherung abschließen.

75
00:09:08,080 --> 00:09:10,080
Nee, ist sie nicht.

76
00:09:10,080 --> 00:09:15,080
Das einzige, was Chico kann, ist, die kann hier auf die Terrasse, aber die Terrasse hat so ein Netz drumherum.

77
00:09:15,080 --> 00:09:22,300
Ich bin ganz schön kaputt heute.

78
00:09:22,300 --> 00:09:31,150
Gestern Abend, ähm, ja, wie gesagt, ich bin ganz schön kaputt, gestern Abend Fahrrad gefahren.

79
00:09:31,150 --> 00:09:31,770
Ich bin ganz schön kaputt, gestern Abend Fahrrad gefahren.

80
00:09:31,770 --> 00:09:33,030
45 Minuten volle Pulle.

81
00:09:33,030 --> 00:09:37,850
Heute Morgen, zehn Kilometer gerannt, ich merke es echt in den Beinen.

82
00:09:37,850 --> 00:09:39,770
Es reicht erst, morgen mache ich nix.

83
00:09:39,770 --> 00:09:42,830
Morgen mache ich gar nix.

84
00:09:42,830 --> 00:09:47,270
Reicht echt ...

85
00:09:47,270 --> 00:09:48,770
Ich merke es auch voll im Schienbein.

86
00:09:48,770 --> 00:09:54,090
Du warst heute Morgen nicht da, gell.

87
00:09:54,090 --> 00:09:57,090
Heute Morgen hat mich die Waage übelst jebaitet.

88
00:09:57,090 --> 00:10:02,230
Ich bin, ich bin rüber gegangen, hab mich auf die Waage gestellt, hatte noch Socken und Unterhose an.

89
00:10:02,230 --> 00:10:04,230
Da hat die Waage 90 Kilo angeosaurs.

90
00:10:04,230 --> 00:10:06,170
gezeigt. Dann bin ich

91
00:10:06,170 --> 00:10:07,930
weg, hab das Handy geholt, zum

92
00:10:07,930 --> 00:10:10,450
Fotografieren, hab Socken und Unterhose ausgezogen

93
00:10:10,450 --> 00:10:11,410
und hab 90,2.

94
00:10:11,810 --> 00:10:12,710
90,3.

95
00:10:13,610 --> 00:10:15,930
Das heißt, ich hatte weniger an, hab mehr gewogen. Null.

96
00:10:16,950 --> 00:10:18,010
War nix. Es war

97
00:10:18,010 --> 00:10:20,130
ganz knapp. Es war ganz knapp über

98
00:10:20,130 --> 00:10:29,760
90. Das heißt, noch ein paar

99
00:10:29,760 --> 00:10:31,840
Wochen, also bis Ende des Jahres

100
00:10:31,840 --> 00:10:33,760
sollte ich dieses Mal unter 90

101
00:10:33,760 --> 00:10:35,540
auf jeden Fall schaffen, wenn das so weiter geht.

102
00:10:44,020 --> 00:10:44,740
Ja, wird's ja auch.

103
00:10:45,460 --> 00:10:47,260
Zwar nicht so krass wie zu

104
00:10:47,260 --> 00:10:49,160
Corona-Zeiten, wo ich

105
00:10:49,160 --> 00:10:50,200
angefangen hab mit allem.

106
00:10:51,920 --> 00:10:52,080
Ja.

107
00:10:52,880 --> 00:10:55,140
Man darf nicht vergessen, dass wenn man

108
00:10:55,140 --> 00:10:56,480
sich ordentlich bewegt,

109
00:10:57,100 --> 00:10:58,480
man kriegt ja auch Muskel.

110
00:10:58,980 --> 00:11:01,100
Man tradet ja, sag mal, man tradet

111
00:11:01,100 --> 00:11:03,120
ja auch ein bisschen Speck gegen Muskel.

112
00:11:03,980 --> 00:11:05,220
Ja, kenn ich. Hab ich aber noch

113
00:11:05,220 --> 00:11:06,480
nie großartig was mitgemacht.

114
00:11:13,850 --> 00:11:14,990
Excellent. So.

115
00:11:14,990 --> 00:11:18,480
Dann. Erstmal

116
00:11:18,480 --> 00:11:20,600
Finger aufwärmen. Für krasse

117
00:11:20,600 --> 00:11:21,420
Progress-Action.

118
00:11:26,410 --> 00:11:27,950
So. Finger aufgewärmt.

119
00:11:28,510 --> 00:11:29,090
Auf geht's.

120
00:11:30,970 --> 00:11:32,970
Ich zeige euch mal, für alle, die nicht

121
00:11:32,970 --> 00:11:34,910
dabei waren, war jemand beim letzten Rust-Stream

122
00:11:34,910 --> 00:11:36,910
dabei und hat mir

123
00:11:36,910 --> 00:11:38,490
zugeguckt, wie ich nix gecheckt hab.

124
00:11:40,690 --> 00:11:41,170
Ähm.

125
00:11:42,590 --> 00:11:43,130
Ich zeige euch

126
00:11:43,130 --> 00:11:45,090
kurz, was Sache ist und

127
00:11:45,090 --> 00:11:47,090
heute wird's nicht so super

128
00:11:47,090 --> 00:11:49,150
kompliziert, weil erstens bin ich ziemlich kaputt

129
00:11:49,150 --> 00:11:51,190
und hab wahrscheinlich auch jetzt 19 Uhr

130
00:11:51,190 --> 00:11:52,990
nicht mehr die größten

131
00:11:52,990 --> 00:11:54,650
Brain-Resources übrig.

132
00:11:58,630 --> 00:11:59,950
Heute versuchen wir das mal ein bisschen

133
00:11:59,950 --> 00:12:02,090
aufzuräumen. Dazu

134
00:12:02,090 --> 00:12:03,530
braucht man aber auch Rust.

135
00:12:04,010 --> 00:12:06,490
Spezialitäten.

136
00:12:08,490 --> 00:12:09,970
Und dementsprechend

137
00:12:09,970 --> 00:12:14,110
schauen wir mal.

138
00:12:14,890 --> 00:12:16,750
So. Also. Hab ich denn jetzt, hab ich jetzt

139
00:12:16,750 --> 00:12:18,730
Package-Updates gemacht. Arch-Linux

140
00:12:18,730 --> 00:12:20,290
by the way, falls jemand Fragen hat.

141
00:12:20,570 --> 00:12:22,410
Schon wieder Package-Updates. Meine Güte.

142
00:12:23,230 --> 00:12:24,930
Hast du mal zwei Minuten keine Package-Updates

143
00:12:24,930 --> 00:12:26,090
gemacht? Ja.

144
00:12:26,970 --> 00:12:29,070
Arch use ich, by the way.

145
00:12:29,750 --> 00:12:30,990
Packages. 171.

146
00:12:31,190 --> 00:12:33,190
Ich weiß wahrscheinlich von gerade mal

147
00:12:33,190 --> 00:12:34,950
20 oder so, dass ich die

148
00:12:34,950 --> 00:12:36,370
wirklich wissentlich jetzt zerlegt hab.

149
00:12:36,730 --> 00:12:41,050
Übrigens, Leute. Jetzt wo ich

150
00:12:41,050 --> 00:12:42,470
TTF-Trimojis sehe.

151
00:12:43,130 --> 00:12:45,010
Pock. Pass mal auf. Wisst ihr, was ich gesehen hab?

152
00:12:45,350 --> 00:12:47,330
Es gibt bald eine neue Trimoji-Version

153
00:12:47,330 --> 00:12:49,190
auf Github. Endlich

154
00:12:49,190 --> 00:12:50,390
neue, endlich neue

155
00:12:50,390 --> 00:12:52,770
Unicode 15 Emojis.

156
00:12:53,810 --> 00:12:55,010
Trimoji Github.

157
00:12:55,630 --> 00:12:56,610
Und zwar Discord

158
00:12:56,610 --> 00:12:58,790
macht Giga-Chat-Move.

159
00:13:03,580 --> 00:13:03,860
Ja.

160
00:13:05,720 --> 00:13:07,460
Discord macht Giga-Chat-Move

161
00:13:07,460 --> 00:13:11,460
und addet

162
00:13:11,460 --> 00:13:13,300
den Großteil der fehlenden Unicode

163
00:13:13,300 --> 00:13:14,380
15 Emojis.

164
00:13:15,280 --> 00:13:17,180
Steven from Discord

165
00:13:17,180 --> 00:13:18,620
ist am Start.

166
00:13:19,620 --> 00:13:20,980
Steven from Discord

167
00:13:20,980 --> 00:13:23,940
und sagt, ihr Inhouse-Artist

168
00:13:23,940 --> 00:13:25,000
der Kevin

169
00:13:25,000 --> 00:13:26,200
VKudam

170
00:13:26,200 --> 00:13:28,820
geiler Name

171
00:13:28,820 --> 00:13:30,880
VKudam

172
00:13:30,880 --> 00:13:33,720
hat Emojis

173
00:13:33,720 --> 00:13:35,660
open sourced für Trimoji.

174
00:13:36,380 --> 00:13:37,480
Also, wer sich fragt,

175
00:13:37,520 --> 00:13:38,840
was das Problem ist eigentlich.

176
00:13:39,260 --> 00:13:41,720
Das Ding ist, Trimoji ist eigentlich

177
00:13:41,720 --> 00:13:43,180
der Twitter-Emoji-Fond.

178
00:13:43,180 --> 00:13:45,180
Das Dumme ist nur, seit Elon Musk

179
00:13:45,280 --> 00:13:46,840
von Twitter übernommen hat,

180
00:13:48,180 --> 00:13:50,320
wurde jegliches

181
00:13:50,320 --> 00:13:52,900
Open Sourcing

182
00:13:52,900 --> 00:13:55,400
von ihrem Emoji-Fond eingestellt.

183
00:13:56,080 --> 00:13:57,380
Und dementsprechend können

184
00:13:57,380 --> 00:13:59,440
die neuesten Emojis nicht einfach kopiert

185
00:13:59,440 --> 00:14:01,320
werden von Twitter, weil die halt copyrighted

186
00:14:01,320 --> 00:14:02,820
sind bei Twitter oder bei X.

187
00:14:03,820 --> 00:14:05,340
Dementsprechend haben das Leute

188
00:14:05,340 --> 00:14:07,300
das gewonnen. Witzigerweise, der Fork

189
00:14:07,300 --> 00:14:08,340
auf Github

190
00:14:08,340 --> 00:14:11,460
ist von alten Github, äh nicht Github,

191
00:14:11,460 --> 00:14:13,600
der Fork auf Github

192
00:14:13,600 --> 00:14:15,080
von Trimoji ist von

193
00:14:15,280 --> 00:14:17,280
alten Twitter-Mitarbeitern,

194
00:14:17,280 --> 00:14:19,280
die rausgeschmissen wurden von Twitter

195
00:14:19,280 --> 00:14:21,280
und sich damals um den

196
00:14:21,280 --> 00:14:23,280
Emoji-Fond gekümmert haben.

197
00:14:23,280 --> 00:14:25,280
So, und die Discord-Leute

198
00:14:25,280 --> 00:14:27,280
haben neue Emojis beigesteuert.

199
00:14:27,280 --> 00:14:29,280
Das sind nahezu, ich glaube, das sind jetzt nahezu alle

200
00:14:29,280 --> 00:14:31,280
Unicode 15 Emojis.

201
00:14:31,280 --> 00:14:33,280
Das heißt, sie müssen jetzt nur noch einen neuen Fond bauen.

202
00:14:33,280 --> 00:14:37,550
Das Merchen und neuen Fond bauen.

203
00:14:37,550 --> 00:14:39,550
Und dann gibt es endlich

204
00:14:39,550 --> 00:14:41,550
eine neue Version von Trimoji,

205
00:14:41,550 --> 00:14:43,550
die Unicode

206
00:14:43,550 --> 00:14:45,550
15 kompatibel ist. Wie sieht's eigentlich

207
00:14:45,550 --> 00:14:47,490
mit Unicode 16 aus? Nur mal so.

208
00:14:47,490 --> 00:14:49,490
...

209
00:14:49,490 --> 00:14:54,780
...

210
00:14:54,780 --> 00:14:56,780
Okay, kommt September 2024 raus?

211
00:14:56,780 --> 00:15:00,930
Aha, es gibt neue,

212
00:15:00,930 --> 00:15:02,930
guck mal, Unicode 2024 gibt's

213
00:15:02,930 --> 00:15:04,930
neue, gibt's neue Emojis,

214
00:15:04,930 --> 00:15:06,930
gucken wir mal, ob's da schon welche gibt, zum angucken.

215
00:15:06,930 --> 00:15:08,930
Fingerprint Emoji

216
00:15:08,930 --> 00:15:10,930
gibt's noch kein Beispiel für.

217
00:15:10,930 --> 00:15:12,930
Emoji 16, gibt's noch nicht.

218
00:15:12,930 --> 00:15:14,930
Face with Bags

219
00:15:14,930 --> 00:15:16,930
under Eyes gibt's dann.

220
00:15:16,930 --> 00:15:18,930
Aha, alles klar, gibt's auch noch keine Implementierung.

221
00:15:18,930 --> 00:15:20,930
Splatter. Okay.

222
00:15:20,930 --> 00:15:22,930
Leafless Tree.

223
00:15:22,930 --> 00:15:23,710
Harp,

224
00:15:25,330 --> 00:15:26,150
eine Schaufel

225
00:15:26,150 --> 00:15:30,330
und irgendwelche

226
00:15:30,330 --> 00:15:31,350
Veganer-Sachen.

227
00:15:32,530 --> 00:15:34,470
Das hat unbedingt Unicode 16

228
00:15:34,470 --> 00:15:37,780
braucht das. Alles klar.

229
00:15:38,400 --> 00:15:39,960
Da bin ich wirklich froh, dass hier

230
00:15:39,960 --> 00:15:42,120
Discord-Leute den

231
00:15:42,120 --> 00:15:43,520
Giga-Chat-Modus gezündet haben

232
00:15:43,520 --> 00:15:45,800
und neue Emojis

233
00:15:45,800 --> 00:15:47,820
beisteuern. Ich meine, dann heißt das Ding zwar

234
00:15:47,820 --> 00:15:49,820
Twimoji, hat aber nicht die

235
00:15:49,820 --> 00:15:51,880
Emojis von Twitter, wobei Twitter auch nicht mehr

236
00:15:51,880 --> 00:15:53,920
Twitter, sondern X heißt, deswegen ist es eigentlich okay so.

237
00:15:54,460 --> 00:15:56,100
Naja, wie dem auch

238
00:15:56,100 --> 00:15:58,020
sei. Also Chat, weiter geht's.

239
00:15:58,600 --> 00:15:59,920
Hier sind wir stehen geblieben. Ich zeige euch,

240
00:15:59,980 --> 00:16:01,740
wie wir stehen geblieben sind und zwar das Ziel ist,

241
00:16:01,960 --> 00:16:03,640
weil das immer die Frage ist, was machen wir heute.

242
00:16:04,080 --> 00:16:06,120
Das Ziel ist, eine WebRTC-Anwendung

243
00:16:06,120 --> 00:16:07,800
zu bauen mit Low-Level

244
00:16:07,800 --> 00:16:09,180
WebRTC in Rust.

245
00:16:10,500 --> 00:16:11,360
Frontend ist ein bisschen

246
00:16:11,360 --> 00:16:12,520
HTML-JavaScript.

247
00:16:13,080 --> 00:16:15,060
Backend, weil ein bisschen mehr Backend

248
00:16:15,060 --> 00:16:17,020
erforderlich ist, als nur Seite ausliefern,

249
00:16:17,100 --> 00:16:19,520
ist eine .NET-Anwendung und die .NET-Anwendung

250
00:16:19,520 --> 00:16:21,220
macht Interop mit

251
00:16:21,220 --> 00:16:22,120
Rust.

252
00:16:23,280 --> 00:16:25,420
So, und ich zeige euch

253
00:16:25,420 --> 00:16:27,440
das Ganze mal. Wir machen

254
00:16:27,440 --> 00:16:29,700
hier mal Rust auf.

255
00:16:30,820 --> 00:16:31,320
Mal kurz

256
00:16:31,320 --> 00:16:33,540
in die JetBrains-Toolbox

257
00:16:33,540 --> 00:16:35,620
looken, ob

258
00:16:35,620 --> 00:16:37,520
es neue

259
00:16:37,520 --> 00:16:39,500
Versionen von den IDEs

260
00:16:39,500 --> 00:16:42,670
gibt. Massive.

261
00:16:43,130 --> 00:16:45,050
Es gibt neue Versionen von PyCharm und

262
00:16:45,050 --> 00:16:46,470
Golan. Ja.

263
00:16:48,050 --> 00:16:49,090
Brauche ich jetzt ehrlich

264
00:16:49,090 --> 00:16:50,750
gesagt. Ja, komm, wir machen Update.

265
00:16:51,750 --> 00:16:53,230
So, dann müssen

266
00:16:53,230 --> 00:16:54,150
wir Rider starten.

267
00:16:55,530 --> 00:16:56,950
Frontend mit dem Framework.

268
00:16:57,050 --> 00:16:59,330
Oder Plain. In dem Fall Plain,

269
00:16:59,470 --> 00:17:01,050
weil das Frontend irgendwie gerade 30

270
00:17:01,050 --> 00:17:03,190
Zeichen ist. Äh, 30 Zeilen

271
00:17:03,190 --> 00:17:04,770
oder so ist. Da ist nicht viel zu sehen.

272
00:17:05,250 --> 00:17:06,890
Ich zeige dir gleich, wie das aussieht.

273
00:17:07,430 --> 00:17:08,310
Äh, Backend.

274
00:17:09,610 --> 00:17:11,330
Also das ist, das hier ist aktuell

275
00:17:11,330 --> 00:17:13,210
alles, was das Frontend beinhaltet.

276
00:17:13,590 --> 00:17:14,970
Das macht zur Zeit nichts anderes wie

277
00:17:14,970 --> 00:17:17,010
WebRTC-Verbindungsaufbau. Und dann

278
00:17:17,010 --> 00:17:18,170
auf die Webseite schreiben.

279
00:17:19,490 --> 00:17:20,290
Oh, laggy.

280
00:17:20,710 --> 00:17:22,510
Alter, wie das...

281
00:17:22,510 --> 00:17:24,150
What the f...

282
00:17:24,150 --> 00:17:25,810
Das Update...

283
00:17:25,810 --> 00:17:26,330
Alter!

284
00:17:27,050 --> 00:17:28,750
Jetbrains.

285
00:17:29,210 --> 00:17:30,730
Java. Keg-Java.

286
00:17:33,120 --> 00:17:33,960
Was ist da los?

287
00:17:36,580 --> 00:17:38,480
Die brauchen beim Updaten der IDEs einfach mal

288
00:17:38,480 --> 00:17:39,820
alle 8 CPU-Cores.

289
00:17:49,500 --> 00:17:50,360
So gehört sich das.

290
00:17:54,120 --> 00:17:55,700
Ich hab das All-Products-Pack, ja.

291
00:18:07,720 --> 00:18:09,420
Was genau macht das da jetzt? 3 Stunden

292
00:18:09,420 --> 00:18:11,440
beim Updaten der... Oh, es gibt eine neue

293
00:18:11,440 --> 00:18:15,440
C-Line. Interesting.

294
00:18:29,470 --> 00:18:29,650
So.

295
00:18:31,030 --> 00:18:32,050
Update ist gelaufen.

296
00:18:32,770 --> 00:18:34,450
Gut. Also, ich zeige

297
00:18:34,450 --> 00:18:36,250
euch mal, wie das aktuelle aussieht. Das Frontend

298
00:18:36,250 --> 00:18:37,630
ist äußerst unspektakulär.

299
00:18:37,850 --> 00:18:40,110
Da sieht man nicht viel, aber ich zeige es euch

300
00:18:40,110 --> 00:18:40,590
mal trotzdem.

301
00:18:41,590 --> 00:18:42,650
.NET run.

302
00:18:44,910 --> 00:18:46,030
Aktuell sieht das...

303
00:18:46,030 --> 00:18:47,850
Äh, Moment. Moment.

304
00:18:48,070 --> 00:18:49,230
Moment. Es geht ja gerade gar nicht.

305
00:18:51,410 --> 00:18:53,130
Geht ja gerade gar nicht, weil ich gestern

306
00:18:53,130 --> 00:18:55,130
in weiser Voraussicht die Hälfte

307
00:18:55,130 --> 00:18:56,110
auskommentiert habe.

308
00:18:57,850 --> 00:18:59,530
Kegwait. Die wir jetzt wieder einkommentieren

309
00:18:59,530 --> 00:19:09,640
müssen. Wait a minute. Ich glaube,

310
00:19:09,700 --> 00:19:11,520
es ist gerade kaputt. Wir haben doch gestern

311
00:19:11,520 --> 00:19:13,300
noch mit UIDs rumgewurschtelt, oder?

312
00:19:18,080 --> 00:19:18,940
Ja, es ist gar kein

313
00:19:18,940 --> 00:19:21,040
UIN64 mehr. Moment. Das wird jetzt gar nicht...

314
00:19:21,040 --> 00:19:22,240
gar nicht funktionieren. Lull.

315
00:19:22,680 --> 00:19:23,820
Pass mal auf, das crasht jetzt.

316
00:19:31,640 --> 00:19:32,760
Okay. Wir haben das

317
00:19:32,760 --> 00:19:34,780
etwas unfertig hinterlassen gestern.

318
00:19:35,260 --> 00:19:35,860
Das Ganze.

319
00:19:38,660 --> 00:19:40,760
Wir haben so halb... Wir haben so halb aufgehört.

320
00:19:41,600 --> 00:19:42,000
Zwischendrin.

321
00:19:43,180 --> 00:19:44,800
Zumindest, dass das Frontend...

322
00:19:45,880 --> 00:19:46,680
Oh, das müssen wir...

323
00:19:46,680 --> 00:19:48,700
Wir müssen gerade mal kurz eine Sache im Frontend

324
00:19:48,700 --> 00:19:49,820
machen. Das ist mir viel zu hell.

325
00:19:50,980 --> 00:19:52,020
Ähm, Style.

326
00:19:53,040 --> 00:19:54,420
Wie macht man das? Background,

327
00:19:54,420 --> 00:19:54,940
Color.

328
00:19:55,920 --> 00:19:56,420
Und jetzt...

329
00:19:56,800 --> 00:19:58,240
Keine Ahnung.

330
00:19:58,960 --> 00:20:00,080
Cray oder sowas.

331
00:20:03,170 --> 00:20:03,770
Okay, schon besser.

332
00:20:08,320 --> 00:20:10,180
Okay, ja, ja, okay. Ein bisschen...

333
00:20:10,180 --> 00:20:12,400
Nicht ganz so anstrengend.

334
00:20:12,660 --> 00:20:12,780
Okay.

335
00:20:14,440 --> 00:20:16,260
Also das Frontend ist äußerst simpel.

336
00:20:17,240 --> 00:20:18,760
Das ist alles an JavaScript.

337
00:20:19,320 --> 00:20:21,180
Der baut eine WebRTC-Verbindung

338
00:20:21,180 --> 00:20:22,840
auf. Im Detail werdet ihr es

339
00:20:22,840 --> 00:20:24,840
wahrscheinlich gleich sehen. Dann ist das

340
00:20:24,840 --> 00:20:26,100
hier das .NET-Backend.

341
00:20:26,520 --> 00:20:28,980
Moment, das hier ist das .NET-Backend. Da passiert auch nicht viel.

342
00:20:29,460 --> 00:20:30,620
Und das hier ist die Rasteranwendung.

343
00:20:30,620 --> 00:20:32,260
Das ist da, wo wir heutzutage rumbauen werden.

344
00:20:32,680 --> 00:20:39,920
Und ich glaube, ich glaube, Chat, wir müssen das erst mal wieder funktional machen, bevor wir jetzt weitermachen.

345
00:20:40,360 --> 00:20:50,030
Deswegen ich schmeiß diesen Krempel hier mit mit der UID schmeiß ich wieder raus.

346
00:20:52,740 --> 00:20:59,480
Wir machen da wieder ein U64 draus, sodass, sodass er erst mal erst mal kurz machen, dass es wieder funktioniert.

347
00:20:59,480 --> 00:21:05,090
Okay, ja, wozu brauchst du das denn?

348
00:21:05,350 --> 00:21:06,970
Erstens, um bisschen Rust zu lernen.

349
00:21:06,970 --> 00:21:08,890
Und zweitens, weil ich vorhabe, alle meine...

350
00:21:08,890 --> 00:21:12,790
meine Webcams Realtime zu streamen auf der Webseite.

351
00:21:20,360 --> 00:21:22,360
ID, ID kommt hierher.

352
00:21:22,360 --> 00:21:24,940
ID ist einfach 1, jetzt hardcoded, kekwait.

353
00:21:25,560 --> 00:21:30,040
Gucken, ob's, ob's noch, ob's compiled.

354
00:21:30,900 --> 00:21:31,540
Cargo.

355
00:21:33,660 --> 00:21:34,160
Nope.

356
00:21:39,080 --> 00:21:41,540
UID mal wieder rausschmeißen.

357
00:21:45,080 --> 00:21:45,580
1.

358
00:21:49,510 --> 00:21:51,130
Und wo hat er jetzt noch Schmerzen?

359
00:21:54,720 --> 00:21:55,920
Client ID.

360
00:21:56,080 --> 00:21:56,580
Äh?

361
00:21:59,270 --> 00:21:59,770
Pound.

362
00:22:00,330 --> 00:22:00,830
Die.

363
00:22:03,350 --> 00:22:06,330
Wie kommt er da drauf, dass es ein U128 sein soll?

364
00:22:07,230 --> 00:22:08,170
Will er mich jibäden?

365
00:22:11,660 --> 00:22:15,780
Ach so, weil hier oben die Collections noch U128 sind, gell?

366
00:22:16,360 --> 00:22:17,560
Ja, okay, alles klar.

367
00:22:18,620 --> 00:22:19,120
Nice.

368
00:22:19,120 --> 00:22:21,620
Und jetzt, okay, was ist jetzt für ein Problem?

369
00:22:21,920 --> 00:22:22,420
Und?

370
00:22:25,660 --> 00:22:26,740
71.

371
00:22:30,880 --> 00:22:31,580
Pound.

372
00:22:32,000 --> 00:22:34,540
128, ah, U64.

373
00:22:35,740 --> 00:22:37,080
U64.

374
00:22:39,660 --> 00:22:40,080
So.

375
00:22:40,080 --> 00:22:42,520
Ich glaube, wir sollten nirgendswo mal U128 benutzen.

376
00:22:42,980 --> 00:22:48,480
So, und wenn das jetzt funktioniert, dann sollte auch alles wieder klappen und das sollte laufen.

377
00:22:49,660 --> 00:22:53,060
Zwar nicht perfekt, aber laufe ich sein?

378
00:22:56,190 --> 00:22:56,630
Oh Mann!

379
00:22:57,050 --> 00:22:58,650
Alter, ich hab's kaputt gemacht gestern.

380
00:22:59,050 --> 00:23:00,410
Jetzt müssen wir das, jetzt müssen wir...

381
00:23:00,410 --> 00:23:03,850
Jetzt müssen wir das erst mal fixen wieder.

382
00:23:13,250 --> 00:23:14,370
Okay, also.

383
00:23:15,010 --> 00:23:16,210
Na geil, na geil.

384
00:23:16,390 --> 00:23:18,030
Jetzt haben wir es, jetzt haben wir es irgendwie zerstört.

385
00:23:18,870 --> 00:23:19,270
Warum?

386
00:23:19,710 --> 00:23:20,810
Was haben wir hier zerstört?

387
00:23:20,950 --> 00:23:22,310
Was will er eigentlich von mir, Mann?

388
00:23:24,010 --> 00:23:27,230
Ach so, ah, ich weiß warum, weil ich das falsche, falsche returne.

389
00:23:28,350 --> 00:23:32,550
Wir returnen jetzt kein U128 mehr, sondern ein 46.

390
00:23:33,450 --> 00:23:34,570
U in 46.

391
00:23:34,770 --> 00:23:35,410
So, jetzt geht's wieder.

392
00:23:39,350 --> 00:23:39,630
Nice.

393
00:23:40,370 --> 00:23:41,250
Guck, passt wieder.

394
00:23:41,710 --> 00:23:41,930
Also.

395
00:23:44,700 --> 00:23:45,140
Folgendermaßen.

396
00:23:46,340 --> 00:23:46,780
Frontend.

397
00:23:47,240 --> 00:23:48,140
Das, das...

398
00:23:48,140 --> 00:23:48,580
Cray.

399
00:23:48,940 --> 00:23:51,660
Gibt das, gibt das nicht irgendwie Light Cray oder sowas?

400
00:23:54,560 --> 00:23:54,880
Azure.

401
00:23:54,880 --> 00:23:54,960
Azure.

402
00:23:56,240 --> 00:23:56,640
Näh.

403
00:23:56,640 --> 00:24:03,880
Okay, wir können einfach, wir können einfach, äh, wie geht das, RGB?

404
00:24:08,390 --> 00:24:11,770
Hatte, hatte, ich wollte gerade sagen, Visual Studio hat doch da so einen, so einen Selektor irgendwie.

405
00:24:12,590 --> 00:24:13,230
Oh, perfekt.

406
00:24:15,670 --> 00:24:16,310
Nee, schön ist es.

407
00:24:16,590 --> 00:24:16,770
Hä?

408
00:24:17,070 --> 00:24:19,850
Das ist doch, das ist doch im Leben ja die gleiche Farbe, oder?

409
00:24:27,180 --> 00:24:27,360
Hä?

410
00:24:28,400 --> 00:24:28,780
Wo ist das?

411
00:24:28,980 --> 00:24:30,120
Was, Moment, was?

412
00:24:33,900 --> 00:24:34,440
Was zum...

413
00:24:35,180 --> 00:24:37,320
Hat da Visual Studio Code gerade draus gemacht?

414
00:24:49,430 --> 00:24:51,510
Okay, ja, so ist es okay, so lasse ich mir das gefallen.

415
00:24:51,910 --> 00:24:54,710
Also, das Frontend, da werden wir heute übrigens nichts dran machen.

416
00:24:54,710 --> 00:24:58,310
Das ist ganz, äh, es ist wirklich easy, es macht nicht viel.

417
00:24:59,010 --> 00:25:01,450
Es versucht eine WebRTC-Verbindung aufzubauen.

418
00:25:02,570 --> 00:25:08,150
Dazu holt es sich vom Backend die Informationen, was der Server für Codex und alle möglichen Sachen unterstützt.

419
00:25:08,970 --> 00:25:19,150
Dann, ähm, subscribt es zu dem Connection State Event und ändert hier ein bisschen die Farbe und den Text auf der Webseite, wenn sich da was ändert.

420
00:25:19,710 --> 00:25:24,150
Dann schickt es eine Antwort an den Server zurück, was der Browser selbst für Codex unterstützt.

421
00:25:24,710 --> 00:25:27,410
Und, ja, das war's.

422
00:25:27,830 --> 00:25:28,870
Mehr macht das Frontend nicht.

423
00:25:29,310 --> 00:25:33,630
Das Ganze wird quasi mehr oder weniger durch, durch die .NET-Anwendung durchgeschleift.

424
00:25:34,670 --> 00:25:35,590
Das ist alles.

425
00:25:35,970 --> 00:25:37,970
Das ist, das ist alles, was einen hier großartig interessieren muss.

426
00:25:38,390 --> 00:25:43,570
Und das landet dann in der jeweiligen Rust, in der jeweiligen Rust, ähm, Endpunkt.

427
00:25:43,890 --> 00:25:43,970
So.

428
00:25:44,870 --> 00:25:48,430
Rust ist deutlich komplizierter gewesen gestern, als ich mir das vorgestellt hab.

429
00:25:48,510 --> 00:25:51,530
Und zwar, äh, die Main-Funktion brauchen wir nicht.

430
00:25:51,870 --> 00:25:54,130
Und zwar ist das asynchrones Rust.

431
00:25:54,130 --> 00:25:56,330
Das heißt, das läuft mit Tokio.

432
00:25:57,150 --> 00:26:02,070
Und damit Tokio funktioniert, muss man, braucht man eine Tokio Runtime.

433
00:26:02,170 --> 00:26:05,610
Leute, ich hab bis heute nicht gecheckt, was es genau macht und wofür das Ganze gut ist.

434
00:26:05,730 --> 00:26:12,250
Aber, es hat funktioniert, nachdem, nachdem wir gestern sehr viel Try and Error rumgefuddelt haben.

435
00:26:15,300 --> 00:26:17,320
Ja, und jetzt, jetzt funktioniert's.

436
00:26:20,970 --> 00:26:24,810
So, und man sieht hier die, die entsprechenden Sachen, die in C Sharp aufgerufen werden.

437
00:26:24,810 --> 00:26:26,930
Hier wird beispielsweise aufgerufen, Get Offer.

438
00:26:27,730 --> 00:26:28,930
Hier wird aufgerufen.

439
00:26:29,310 --> 00:26:32,730
Äh, ich, wird Create, hier wird, äh, Create Connection aufgerufen.

440
00:26:32,870 --> 00:26:34,010
Hier wird Set Answer aufgerufen.

441
00:26:34,470 --> 00:26:36,570
Wenn man sich das hier in Rust anguckt, sieht man das auch.

442
00:26:37,110 --> 00:26:40,850
Das, das ist, das ist eigentlich das Einzige, hier passiert eigentlich das meiste, ja.

443
00:26:41,790 --> 00:26:44,530
Der erstellt eine neue WebRTC Connection.

444
00:26:50,770 --> 00:26:52,950
Hier, der erstellt eine neue WebRTC Connection.

445
00:26:53,030 --> 00:26:54,050
Warum hab ich hier Tracks?

446
00:26:54,230 --> 00:26:55,210
Das ergibt doch überhaupt keinen Sinn.

447
00:27:01,070 --> 00:27:03,530
Ah, Tracks, weil ich die, ja, okay, ergibt, ergibt doch Sinn.

448
00:27:04,890 --> 00:27:07,490
Also, WebRTC, hier erstelle ich eine WebRTC Connection.

449
00:27:08,050 --> 00:27:10,110
Und, hol mir dann raus.

450
00:27:10,210 --> 00:27:12,050
Was, was der Server für Codecs unterstützt.

451
00:27:12,310 --> 00:27:14,330
Was für Codecs unterstützt werden, stelle ich hier ein.

452
00:27:14,370 --> 00:27:15,990
Es wird genau ein Codec unterstützt.

453
00:27:16,090 --> 00:27:18,930
Und zwar, ähm, H264.

454
00:27:20,250 --> 00:27:22,690
Mit 90.000 Clockrate, das ist alles.

455
00:27:25,520 --> 00:27:27,560
Hier wird die WebRTC Verbindung aufgebaut.

456
00:27:27,840 --> 00:27:31,200
Und hier wird die Sache, die der Browser antwortet, gesetzt.

457
00:27:31,460 --> 00:27:34,960
Ist aber alles nicht so wild, weil heute geht's um syntaktische Rust-Geschichte.

458
00:27:35,520 --> 00:27:37,640
Weniger um die WebRTC Sache an sich.

459
00:27:38,600 --> 00:27:42,060
Denn, was ich mir überlegt hab, ist, das hier ist ja kein schönes Rust.

460
00:27:42,180 --> 00:27:42,560
Hier oben.

461
00:27:42,920 --> 00:27:45,200
Also, schön, schön ist hier vieles nicht dran.

462
00:27:45,780 --> 00:27:49,520
Beispielsweise diese ganzen Calls mit GetUnwrap, ReadUnwrap.

463
00:27:49,860 --> 00:27:51,420
Das sieht schon abartig aus.

464
00:27:57,600 --> 00:27:58,640
Was willst du da absichern?

465
00:27:59,060 --> 00:28:06,800
Es macht keinen Sinn, die abzusichern, weil es, es darf durchaus crashen, wenn, also, wenn das hier nicht funktioniert, was soll er machen?

466
00:28:06,900 --> 00:28:09,040
Dann darf er, dann muss er ja crashen, im Endeffekt.

467
00:28:10,620 --> 00:28:11,220
Ach so, gut.

468
00:28:11,460 --> 00:28:12,740
Ja, doch, du hast insofern recht.

469
00:28:13,640 --> 00:28:14,220
Stimmt schon.

470
00:28:14,640 --> 00:28:17,340
Man könnte gucken, wenn es aus irgendwelchen Gründen nicht klappt, dass das Main-Programm,

471
00:28:17,340 --> 00:28:18,100
nicht crasht.

472
00:28:19,520 --> 00:28:23,580
Aber ganz ehrlich, das sind solche Dinger, die sollten eigentlich nicht crashen.

473
00:28:24,000 --> 00:28:25,180
Also, die sollten eigentlich nicht fehlschlagen.

474
00:28:25,260 --> 00:28:28,620
Wenn sie doch fehlschlagen, ist irgendwas kaputt, dann soll's halt, dann soll's halt crashen, ja.

475
00:28:29,320 --> 00:28:30,480
Schon, ist schon okay.

476
00:28:30,800 --> 00:28:34,940
Dass hier eine hardcoded ID drin ist, ist übrigens auch nicht, übrigens auch nicht so sinnvoll.

477
00:28:38,710 --> 00:28:40,650
Java ist gigalangsam, das stimmt überhaupt nicht.

478
00:28:40,750 --> 00:28:41,910
Java ist gar nicht so lahm.

479
00:28:42,650 --> 00:28:48,650
Java ist, sagen wir mal so, aus, historisch, ja, wurde gerne über Java geflamed und,

480
00:28:49,590 --> 00:28:50,030
gerade,

481
00:28:50,190 --> 00:28:51,390
Memory-Consumption.

482
00:28:52,190 --> 00:28:56,550
Aber die reine CPU-Performance ist Java gar nicht so schlecht, genauso wie C-Sharp und .NET.

483
00:28:56,630 --> 00:29:00,990
.NET ist sogar ziemlich schnell, sogar einen Ticken schneller als Java, je nachdem, was man sich für Benchmarks anguckt.

484
00:29:01,830 --> 00:29:05,510
So, und zwar, wir haben hier ganz viele globale Variablen.

485
00:29:05,970 --> 00:29:09,330
Das ist nicht, das ist nicht gerne gesehen in Rust, mal ganz davon abgesehen,

486
00:29:09,970 --> 00:29:15,310
dass mich das nicht wirklich interessiert, ob das irgendwelche Rust-Experten als schön oder nicht schön empfinden.

487
00:29:15,710 --> 00:29:19,310
Das Ding ist, es geht nicht anders als globale Variablen, denn,

488
00:29:19,310 --> 00:29:29,310
es ist ja nicht, es liegt ja hier nicht in der Hand, von Rust das alles zu machen, sondern ich call ja in den Rust-Code von außen rein.

489
00:29:29,910 --> 00:29:35,810
Das heißt, ich brauche irgendwie den State vom letzten Call und den kann Rust nicht tracken für mich.

490
00:29:37,010 --> 00:29:37,790
Wie soll es das machen?

491
00:29:38,190 --> 00:29:45,510
Das wird aufgerufen von C aus und geht dann zurück mit ein paar Sachen zu dem C-Interface zurück.

492
00:29:46,110 --> 00:29:48,510
Das heißt, wir brauchen ein paar statische Variablen.

493
00:29:49,310 --> 00:29:53,630
Was ich mir jetzt überlegt habe, und da bin ich mal gespannt, ob ich, ob ich das hinkriege,

494
00:29:54,030 --> 00:29:59,550
was ich, also was mir hier persönlich am allerwenigsten gefällt, sind diese, sind diese ganzen Unwrap-Orgien.

495
00:30:01,190 --> 00:30:04,190
Das sieht einfach total unreadable und eklig aus.

496
00:30:04,610 --> 00:30:09,190
Und was mir auch nicht gefällt, sind diese ultra deep-nested Typen.

497
00:30:09,290 --> 00:30:11,310
Ich meine, guckt euch das mal an, da rast es da aus.

498
00:30:11,730 --> 00:30:19,030
Once-Log, FW-Log, Hashmap, Arc, Track, also im Prinzip will ich einfach nicht,

499
00:30:19,030 --> 00:30:19,110
ich will einfach nicht, ich will einfach nicht, ich will einfach nicht, ich will einfach nicht, ich will einfach nicht,

500
00:30:19,110 --> 00:30:29,490
ich will einfach nur einen Dictionary haben mit N64 als Key und dieser Klasse hier oder diesem Struct hier als Value.

501
00:30:30,070 --> 00:30:34,310
Und damit das funktioniert, musst du das in diesen ganzen Krempel reinwrappen.

502
00:30:34,430 --> 00:30:35,710
Das ist echt nicht normal.

503
00:30:42,020 --> 00:30:45,080
Deswegen habe ich mir überlegt, wir machen folgendes.

504
00:30:46,380 --> 00:30:53,940
Wir haben nämlich aktuell da so einen kleinen Bug drin, der daraus resultiert, dass ich gestern nicht besser darüber wusste, was ich machen soll.

505
00:30:53,940 --> 00:30:54,160
Heute.

506
00:30:54,160 --> 00:30:55,020
Heute immer noch nicht.

507
00:30:55,520 --> 00:31:00,720
Und zwar jede Connection und jeder Track, der angelegt wird.

508
00:31:00,780 --> 00:31:02,300
Also mit Track ist in Video gemeint.

509
00:31:02,920 --> 00:31:11,260
Also das Ziel ist ja im Endeffekt mit FFmpeg Webcams auslesen, Webcams dann auf Serverseite, RTSP Webcams auslesen

510
00:31:11,260 --> 00:31:15,920
und dann auf Serverseite das Ganze in einen Stream schreiben, rüber streamen an Browser

511
00:31:15,920 --> 00:31:20,180
und der Browser rendert die Videos dann in einem Canvas oder einem Video-Element.

512
00:31:22,300 --> 00:31:25,000
Das Ding damit das funktioniert ist, es braucht jeder Track.

513
00:31:25,480 --> 00:31:28,980
Und jede Connection eine eindeutige ID.

514
00:31:31,290 --> 00:31:39,810
Und aktuell ist es halt kaputt, weil jeder Track hardcoded die ID 2 bekommt.

515
00:31:40,170 --> 00:31:41,930
Das kann ja schon mal gar nicht funktionieren.

516
00:31:42,610 --> 00:31:47,330
Und jede neue Connection hardcoded die ID 1 bekommt.

517
00:31:47,710 --> 00:31:50,150
Das kann auch schon mal nicht richtig funktionieren.

518
00:31:50,910 --> 00:31:54,380
Also insofern.

519
00:31:54,380 --> 00:31:58,600
Und diese Unwraps und Read und Get und Unwrap.

520
00:31:58,600 --> 00:31:59,460
Das ist auch eklig.

521
00:31:59,760 --> 00:32:01,880
Deswegen habe ich mir überlegt, wir machen folgendes.

522
00:32:01,920 --> 00:32:03,040
Wir probieren das mal zumindest.

523
00:32:03,600 --> 00:32:06,520
Wir legen heute in Rust zwei neue Typen an.

524
00:32:06,640 --> 00:32:11,360
Und zwar einmal so eine Art AppState.

525
00:32:11,500 --> 00:32:13,660
Hier sowas wie AppState.

526
00:32:14,320 --> 00:32:17,580
Und da fassen wir diese ganzen Dinger hier drinnen zusammen.

527
00:32:18,700 --> 00:32:19,880
Gucken wie das funktioniert.

528
00:32:20,520 --> 00:32:28,040
Und dann würde ich gerne noch ein Struct, sowas wie zum Beispiel Registry bauen.

529
00:32:28,600 --> 00:32:30,320
Und das Generic machen.

530
00:32:30,440 --> 00:32:33,600
Ich habe keine Ahnung, wie das in Rust funktioniert.

531
00:32:33,800 --> 00:32:34,700
Geht das vielleicht sogar so?

532
00:32:35,540 --> 00:32:35,720
Moment.

533
00:32:36,960 --> 00:32:38,460
Geht das etwa so?

534
00:32:39,160 --> 00:32:43,100
Das ist die gleiche, das ist die Sharp Syntax für Generics.

535
00:32:45,400 --> 00:32:51,440
Und dann will ich eine Generic Collection machen, die ich jetzt mal Registry nenne.

536
00:32:51,540 --> 00:32:53,380
Wir können sie auch einfach List nennen oder so.

537
00:32:53,460 --> 00:32:55,100
Letztendlich ist es egal, wie das Ding heißt.

538
00:32:55,780 --> 00:32:56,840
Die folgendes macht.

539
00:32:56,840 --> 00:32:57,740
Die folgendes macht.

540
00:32:58,600 --> 00:32:59,540
Ich nenne es lieber Registry.

541
00:32:59,740 --> 00:33:01,780
Das ist deutlich sinniger in dem Fall.

542
00:33:02,260 --> 00:33:05,300
Die Tracks und Connections sammelt.

543
00:33:05,420 --> 00:33:07,700
Also dass man quasi eine Collection machen kann.

544
00:33:07,780 --> 00:33:11,100
Entweder auf Tracks oder auf Pair Connections.

545
00:33:11,620 --> 00:33:15,000
Und die automatisch eine ID sucht, die frei ist.

546
00:33:15,200 --> 00:33:19,560
Und eine freie ID für die jeweilige Connection und für den jeweiligen Track vergibt.

547
00:33:20,220 --> 00:33:21,900
Gestern habe ich mir kurzzeitig überlegt.

548
00:33:22,720 --> 00:33:25,380
Man könnte einfach eine UUID generieren.

549
00:33:25,860 --> 00:33:26,340
Für alles.

550
00:33:26,340 --> 00:33:28,180
Das Problem ist, dass eine UUID.

551
00:33:28,600 --> 00:33:30,900
Ein 128-Bit-Int ist.

552
00:33:31,460 --> 00:33:35,840
Und man das interop-technisch nicht gescheit hinbekommt.

553
00:33:36,380 --> 00:33:39,580
Man muss das ja über ein C-Interface quasi mit C-Sharp dann scheren.

554
00:33:40,340 --> 00:33:40,980
Und es geht.

555
00:33:41,060 --> 00:33:41,900
Haben wir gestern gebaut.

556
00:33:42,060 --> 00:33:43,100
Aber schön ist was anderes.

557
00:33:46,500 --> 00:33:46,820
Oh ne.

558
00:33:48,220 --> 00:33:48,640
Da habe ich.

559
00:33:48,800 --> 00:33:49,280
Also.

560
00:33:50,020 --> 00:33:52,120
Ich setze mich jetzt erstmal mit Rust auseinander.

561
00:33:52,360 --> 00:33:55,040
Und wenn mich Rust irgendwann so abfuckt.

562
00:33:56,460 --> 00:33:57,820
Dass ich Erholung brauche.

563
00:33:57,880 --> 00:33:58,780
Dann gehe ich nicht zu Java.

564
00:34:02,330 --> 00:34:03,190
Dann baue ich.

565
00:34:03,270 --> 00:34:05,290
Irgendwas in irgendeiner Sprache, auf die ich Bock drauf habe.

566
00:34:05,370 --> 00:34:06,930
Oder wir bauen mal wieder Microcontroller.

567
00:34:07,330 --> 00:34:08,590
Löten irgendwelche Sachen.

568
00:34:09,070 --> 00:34:10,790
Spielen mal wieder Battlefield oder sonst was.

569
00:34:13,940 --> 00:34:16,200
Gibt es irgendwo ein FAQ mit Setup und so weiter?

570
00:34:17,860 --> 00:34:18,100
Ne.

571
00:34:18,660 --> 00:34:21,660
Aber es gibt ein Archiv, falls du alte Streams angucken willst.

572
00:34:21,760 --> 00:34:25,640
Und das Archiv ist absolut gigachat-nice gebaut hier.

573
00:34:29,180 --> 00:34:31,660
Mit AI-generated Thumbnails für die Streams.

574
00:34:36,460 --> 00:34:38,880
Ja, ihr habt Whisper ein bisschen gefailt, oder?

575
00:34:41,560 --> 00:34:43,760
Whisper hat es ja prinzipiell nicht so gut gemacht.

576
00:34:43,760 --> 00:34:44,260
Und mit Text.

577
00:34:47,570 --> 00:34:48,770
Rrrrrrriiii.

578
00:35:02,490 --> 00:35:03,150
Ne, ne, ne.

579
00:35:03,410 --> 00:35:03,990
Kein Java.

580
00:35:05,050 --> 00:35:07,050
Ja, da wurde wahrscheinlich keins für generated.

581
00:35:10,280 --> 00:35:10,480
Ja.

582
00:35:11,160 --> 00:35:11,340
Ja.

583
00:35:12,180 --> 00:35:13,200
Steht auch noch aus.

584
00:35:13,380 --> 00:35:15,140
Neo-Wim-Stream steht hier auch noch drin.

585
00:35:15,240 --> 00:35:15,500
Guck.

586
00:35:16,220 --> 00:35:17,340
Irgendwo, glaube ich.

587
00:35:20,200 --> 00:35:21,200
Neo-Wim mit Plugins.

588
00:35:21,380 --> 00:35:22,300
Pimp mein Neo-Wim.

589
00:35:22,500 --> 00:35:22,640
Ja.

590
00:35:29,760 --> 00:35:30,740
Das ist auf GitHub.

591
00:35:31,960 --> 00:35:33,580
Du kannst ja das klonen, wenn du willst.

592
00:35:34,220 --> 00:35:34,460
Okay.

593
00:35:34,740 --> 00:35:34,900
So.

594
00:35:35,120 --> 00:35:36,420
Das ist der Plan heute.

595
00:35:38,140 --> 00:35:38,840
Ich auch.

596
00:35:38,840 --> 00:35:39,460
Es ist nicht so.

597
00:35:39,460 --> 00:35:40,960
Als hätte ich super Ahnung von Neo-Wim.

598
00:35:41,300 --> 00:35:44,300
Ich habe früher halt meinen Wim auch mega aufgebohrt mit Plugins.

599
00:35:44,380 --> 00:35:45,440
Aber das war alles Wim-Skript.

600
00:35:46,020 --> 00:35:48,460
Und Neo-Wim ist ja zum größten Teil Lua.

601
00:35:50,220 --> 00:35:50,620
Okay.

602
00:35:50,980 --> 00:35:52,300
Also, das ist der Plan.

603
00:35:52,460 --> 00:35:53,840
So stelle ich mir das vor.

604
00:35:54,080 --> 00:35:54,140
Ja.

605
00:35:54,800 --> 00:35:56,780
Das heißt, wir fangen jetzt mal an.

606
00:35:57,920 --> 00:35:59,200
Mit was fangen wir jetzt an?

607
00:35:59,480 --> 00:36:00,860
Kompiliert das jetzt eigentlich gerade?

608
00:36:01,180 --> 00:36:02,740
Wenn ich das auskommentiere?

609
00:36:02,980 --> 00:36:03,540
Compile das?

610
00:36:03,920 --> 00:36:04,080
Ja.

611
00:36:04,240 --> 00:36:04,660
Okay, nice.

612
00:36:05,260 --> 00:36:07,500
Also, ich würde sagen, wir machen erstmal einen Struct.

613
00:36:07,500 --> 00:36:08,500
Struct Upstate.

614
00:36:09,460 --> 00:36:09,960
Okay.

615
00:36:10,500 --> 00:36:21,300
Und wir hauen jetzt mal diesen ganzen Krempel, der hier aktuell so in global Sachen hängt.

616
00:36:21,300 --> 00:36:23,940
Wobei, wir machen es mal testweise.

617
00:36:23,940 --> 00:36:25,220
Nehmen wir einfach mal die API.

618
00:36:25,700 --> 00:36:26,660
Die hauen wir hier rein.

619
00:36:26,660 --> 00:36:27,980
So, Static brauchen wir nicht.

620
00:36:28,620 --> 00:36:29,660
Nehmen wir mal API.

621
00:36:30,020 --> 00:36:39,820
Wir brauchen auch kein Once-Log mehr, sondern einfach nur API, oder?

622
00:36:39,820 --> 00:36:40,580
Sonst nichts?

623
00:36:41,140 --> 00:36:41,540
Glaube ich.

624
00:36:41,540 --> 00:36:43,020
Das Ding müsste Thread-Safe sein.

625
00:36:43,020 --> 00:36:44,020
Das könnte Thread-Safe sein.

626
00:36:44,020 --> 00:36:50,020
So, heißt im Endeffekt, wir brauchen jetzt einmal noch das hier für den App-State.

627
00:36:50,020 --> 00:36:51,020
App-State.

628
00:36:51,020 --> 00:36:52,020
So.

629
00:36:52,020 --> 00:36:59,720
Machen wir mal hier die API weg, um zu checken, ob noch alles funktioniert.

630
00:36:59,720 --> 00:37:01,120
Da sollte es ein paar rote Sachen geben.

631
00:37:01,120 --> 00:37:04,800
So, jetzt müssen wir das Ganze noch initialisieren.

632
00:37:04,800 --> 00:37:09,880
Let App-State set App-State.

633
00:37:09,880 --> 00:37:14,700
Okay, gut.

634
00:37:14,700 --> 00:37:18,870
So.

635
00:37:18,870 --> 00:37:19,870
Okay, gut.

636
00:37:19,870 --> 00:37:21,870
Was hat er hier?

637
00:37:21,870 --> 00:37:22,870
Use Shorthand.

638
00:37:22,870 --> 00:37:23,870
Alles klar.

639
00:37:23,870 --> 00:37:24,870
So, hoffen wir mal, ob das jetzt funzt.

640
00:37:24,870 --> 00:37:27,870
Nein, funktioniert nicht, weil Zeile 95.

641
00:37:27,870 --> 00:37:29,870
Obviously, Zeile 95.

642
00:37:29,870 --> 00:37:30,870
Ach so, ja.

643
00:37:30,870 --> 00:37:32,870
Das brauchen wir jetzt gar nicht mehr, oder?

644
00:37:32,870 --> 00:37:34,870
Wir brauchen jetzt App-State.

645
00:37:34,870 --> 00:37:36,870
Get.

646
00:37:36,870 --> 00:37:39,870
Unwrap-API.

647
00:37:39,870 --> 00:37:46,870
Ne, das wäre jetzt, das wäre jetzt auch zu einfach, wenn das einfach funktionieren würde,

648
00:37:46,870 --> 00:37:47,870
oder?

649
00:37:47,870 --> 00:37:48,870
Keck-Wait.

650
00:37:48,870 --> 00:37:55,870
Das wäre deutlich way too easy, wenn das in Rust, wenn das irgendwie auf first try irgendwie

651
00:37:55,870 --> 00:37:56,870
klappen würde.

652
00:37:56,870 --> 00:38:01,080
Was ist denn das Problem, was er jetzt schon wieder hat?

653
00:38:01,080 --> 00:38:12,820
Das ist doch, da fehlt der Borrow-Operator.

654
00:38:12,820 --> 00:38:15,820
Das heißt, ich muss da, muss da nennen.

655
00:38:15,820 --> 00:38:16,820
Ach wie.

656
00:38:16,820 --> 00:38:17,820
Okay.

657
00:38:17,820 --> 00:38:22,730
Der Chat weiß Bescheid.

658
00:38:22,730 --> 00:38:31,800
Der Chat ist wirklich schlau.

659
00:38:31,800 --> 00:38:38,030
Ne, die sind teilweise nicht wirklich useful.

660
00:38:38,030 --> 00:38:40,030
Aber es funktioniert.

661
00:38:40,030 --> 00:38:43,030
Ich meine, findest du das useful?

662
00:38:43,030 --> 00:38:48,030
Move occurs because value has type api, which does not implement a copy trade.

663
00:38:48,030 --> 00:39:01,910
Eindeutiger Hinweis, dass man ein und nehmen soll.

664
00:39:01,910 --> 00:39:03,910
Oh, okay.

665
00:39:03,910 --> 00:39:04,910
Ach ja.

666
00:39:04,910 --> 00:39:06,910
Okay, ich habe nichts gesagt.

667
00:39:06,910 --> 00:39:07,910
Ihr habt recht.

668
00:39:07,910 --> 00:39:09,910
Steht ja wirklich da.

669
00:39:09,910 --> 00:39:15,270
Es steht wirklich drunter.

670
00:39:15,270 --> 00:39:18,270
Okay, ich gebe zu, die Rust-Fehlermeldung in dem Fall war hilfreich.

671
00:39:18,270 --> 00:39:19,270
Alles klar.

672
00:39:19,270 --> 00:39:20,270
Gut.

673
00:39:20,270 --> 00:39:21,270
Gut.

674
00:39:21,270 --> 00:39:22,270
Keck-G.

675
00:39:22,270 --> 00:39:23,270
Mann.

676
00:39:23,270 --> 00:39:24,270
Ja, ist okay.

677
00:39:24,270 --> 00:39:25,270
Ich gebe zu, die war wirklich hilfreich.

678
00:39:25,270 --> 00:39:26,270
Also, das hat schon mal funktioniert.

679
00:39:26,270 --> 00:39:27,270
Das in App-State zu moven.

680
00:39:27,270 --> 00:39:28,270
Jetzt brauchen wir noch eins.

681
00:39:28,270 --> 00:39:29,270
So, jetzt packen wir die Runtime.

682
00:39:29,270 --> 00:39:33,180
Kannst du nochmal das Back-Inserter-Meme machen?

683
00:39:33,180 --> 00:39:39,340
Wie?

684
00:39:39,340 --> 00:39:40,340
Das Back-Inserter-Meme?

685
00:39:40,340 --> 00:39:41,340
Du meinst das auf Stack-Overflow, das C++ Zeug?

686
00:39:41,340 --> 00:39:42,340
Ja, hab ich jetzt keinen Bock.

687
00:39:42,340 --> 00:39:43,340
Das kann ich jeden Stream zeigen.

688
00:39:43,340 --> 00:39:44,340
Welche Idee hast du?

689
00:39:44,340 --> 00:39:45,340
Ich habe noch eine Idee.

690
00:39:45,340 --> 00:39:46,340
Ich habe noch eine Idee.

691
00:39:46,340 --> 00:39:47,340
Ich habe noch eine Idee.

692
00:39:47,340 --> 00:39:48,340
Ich habe noch eine Idee.

693
00:39:48,340 --> 00:39:49,340
Ich habe noch eine Idee.

694
00:39:49,340 --> 00:39:50,340
Ich habe noch eine Idee.

695
00:39:50,340 --> 00:39:51,340
Ich habe noch eine Idee.

696
00:39:51,340 --> 00:39:52,340
Ich habe noch eine Idee.

697
00:39:52,340 --> 00:39:53,340
Ich habe noch eine Idee.

698
00:39:53,340 --> 00:39:54,340
Ich habe noch eine Idee.

699
00:39:54,340 --> 00:39:59,340
Das ist Rust-Rover.

700
00:39:59,340 --> 00:40:11,490
Das ist die Idee von Jetbrains für Rust.

701
00:40:11,490 --> 00:40:22,170
Die hat aber noch so ein paar etwas, naja, vielleicht etwas unrunde, ist doch etwas unrund

702
00:40:22,170 --> 00:40:23,170
an manchen Stellen.

703
00:40:23,170 --> 00:40:34,030
So, die API haben wir jetzt da rein gepackt.

704
00:40:34,030 --> 00:40:35,030
Jetzt packen wir noch die Runtime.

705
00:40:35,030 --> 00:40:36,610
noch die Runtime da rein.

706
00:40:37,710 --> 00:40:38,890
Wobei, Leute, ich hab

707
00:40:38,890 --> 00:40:41,110
ne Idee. Passt mal auf. Sixheadtime.

708
00:40:41,530 --> 00:40:42,990
Wenn das klappt in Rusts,

709
00:40:43,250 --> 00:40:44,650
dann hab ich Rusts verstanden.

710
00:40:45,170 --> 00:40:46,710
Ja, da dauert's noch ein bisschen hin.

711
00:40:47,310 --> 00:40:48,830
Gucke mal, guckte mal, guckte mal.

712
00:40:49,310 --> 00:40:50,750
Ich sag doch jedes Mal

713
00:40:50,750 --> 00:40:52,610
hier, wenn ich

714
00:40:52,610 --> 00:40:54,890
diese A-Sync-Runtime starte,

715
00:40:54,890 --> 00:40:56,610
ich sag jedes Mal, Runtime

716
00:40:56,610 --> 00:40:58,450
get unwrapped, block on.

717
00:40:59,090 --> 00:40:59,970
Ich hab ne Idee.

718
00:41:00,570 --> 00:41:01,930
Ich hab ne Idee. Und zwar,

719
00:41:02,570 --> 00:41:03,730
und zwar, passt mal auf.

720
00:41:03,730 --> 00:41:05,750
Wir gucken uns

721
00:41:05,750 --> 00:41:07,810
die Funktionsdefinition von

722
00:41:07,810 --> 00:41:08,650
block on an.

723
00:41:09,470 --> 00:41:10,570
Kopieren die uns.

724
00:41:11,530 --> 00:41:15,860
Und jetzt, und jetzt

725
00:41:15,860 --> 00:41:17,200
geben wir unserer,

726
00:41:17,880 --> 00:41:20,000
unserem API-State eine Funktion,

727
00:41:20,120 --> 00:41:21,140
die block on heißt.

728
00:41:24,030 --> 00:41:25,790
Das funktioniert, ach Moment, das ist ja Rust.

729
00:41:25,970 --> 00:41:27,990
Moment, das ist ja Rust. Das ging doch irgendwie so,

730
00:41:28,110 --> 00:41:32,060
oder? App-State?

731
00:41:34,020 --> 00:41:35,520
Ich will kein Makro, ne.

732
00:41:37,680 --> 00:41:39,620
So, das kriegt jetzt ne Funktion,

733
00:41:39,620 --> 00:41:40,960
blocks on.

734
00:41:42,280 --> 00:41:43,840
Dann braucht das

735
00:41:43,840 --> 00:41:45,560
hier, API-State,

736
00:41:46,300 --> 00:41:47,460
dann braucht das hier noch

737
00:41:47,460 --> 00:41:48,940
Runtime als,

738
00:41:49,380 --> 00:41:51,460
ja, für Klassenvariable, wie auch immer

739
00:41:51,460 --> 00:41:52,200
das heißt in Rust.

740
00:41:54,240 --> 00:41:55,760
Als Instanzvariable,

741
00:41:55,900 --> 00:41:57,720
kein Schimmer, wie man das korrekt in Rust nennt.

742
00:41:57,960 --> 00:41:59,800
Trade-Variable, Struct-Variable,

743
00:42:00,280 --> 00:42:01,100
Struct-Feld,

744
00:42:01,540 --> 00:42:02,060
weiß nicht.

745
00:42:03,620 --> 00:42:03,840
So.

746
00:42:06,000 --> 00:42:06,520
Und

747
00:42:06,520 --> 00:42:09,120
jetzt sagen wir, Moment,

748
00:42:09,120 --> 00:42:09,580
selbst,

749
00:42:09,620 --> 00:42:11,220
passt doch, ja, und jetzt sagen wir

750
00:42:11,220 --> 00:42:13,620
self-runtime

751
00:42:14,140 --> 00:42:15,700
und jetzt kopieren wir das, was ich

752
00:42:15,700 --> 00:42:16,380
hier immer mache.

753
00:42:17,720 --> 00:42:19,620
Block on, wobei, ne, muss ich auch

754
00:42:19,620 --> 00:42:23,530
gar nichts machen. Block

755
00:42:23,530 --> 00:42:27,080
on und

756
00:42:27,080 --> 00:42:28,920
da schieben wir das jetzt rein.

757
00:42:29,660 --> 00:42:30,940
Und hoffen, dass es noch kompiliert.

758
00:42:31,500 --> 00:42:31,940
Ne, shit.

759
00:42:33,180 --> 00:42:34,840
Ah, ne, Moment, missing, missing runtime.

760
00:42:35,760 --> 00:42:37,340
Hier, missing, missing runtime.

761
00:42:38,240 --> 00:42:38,680
Runtime.

762
00:42:41,110 --> 00:42:41,290
So.

763
00:42:41,290 --> 00:42:41,370
Äh.

764
00:42:54,930 --> 00:42:55,430
Achso.

765
00:42:55,750 --> 00:42:56,550
Ich muss, hä?

766
00:42:58,170 --> 00:42:59,210
Wait, wait a minute.

767
00:43:00,890 --> 00:43:01,190
Ah.

768
00:43:02,210 --> 00:43:02,770
Moment.

769
00:43:06,060 --> 00:43:07,880
Das beißt sich jetzt ein bisschen

770
00:43:07,880 --> 00:43:09,580
in den Schwanz, Gatschi.

771
00:43:10,460 --> 00:43:11,020
Was?

772
00:43:13,610 --> 00:43:14,210
Äh.

773
00:43:15,810 --> 00:43:17,510
Die Runtime setze ich hier oben.

774
00:43:21,440 --> 00:43:22,040
Und

775
00:43:22,040 --> 00:43:24,740
hier unten lege ich

776
00:43:24,740 --> 00:43:27,020
erst den App-State

777
00:43:27,020 --> 00:43:27,620
an.

778
00:43:36,770 --> 00:43:40,890
Ich mein, das muss

779
00:43:40,890 --> 00:43:42,190
aber nicht so sein.

780
00:43:44,180 --> 00:43:46,780
Kann ich nicht einfach den ganzen Krempel

781
00:43:46,780 --> 00:43:48,060
hier rauskopieren?

782
00:43:52,110 --> 00:43:53,350
Und da rein?

783
00:43:57,050 --> 00:44:03,660
Und dann... Ja?

784
00:44:04,180 --> 00:44:08,380
Okay. Äh, und dann brauche ich

785
00:44:08,380 --> 00:44:10,100
das hier, dann brauche ich das doch eigentlich

786
00:44:10,100 --> 00:44:11,820
gar nicht. Ach, doch!

787
00:44:12,140 --> 00:44:13,940
Ach, Moment, Moment, Moment, Moment.

788
00:44:14,240 --> 00:44:16,380
Doch, doch, das muss in der Runtime gecallt werden.

789
00:44:16,500 --> 00:44:18,200
Sonst wird, ne, sonst hab ich wieder so diesen

790
00:44:18,200 --> 00:44:19,760
komischen Bug. Ne, ne, ne, ne, ne, ne.

791
00:44:23,260 --> 00:44:23,700
Nopos.

792
00:44:31,230 --> 00:44:33,430
Das Rust-Buch. Ja, soll ich jetzt das Rust-Buch

793
00:44:33,430 --> 00:44:34,650
im Stream lesen, oder wie?

794
00:44:40,750 --> 00:44:41,990
Aber was wir machen können,

795
00:44:42,050 --> 00:44:45,670
ist... Kann man?

796
00:44:49,100 --> 00:44:50,340
Okay, jetzt bin ich mal gespannt.

797
00:44:50,860 --> 00:44:52,600
Kann ich das hier einfach die Runtime

798
00:44:52,600 --> 00:44:54,820
als Parameter übergeben?

799
00:44:56,800 --> 00:44:57,200
Runtime?

800
00:44:57,200 --> 00:44:57,240
Runtime?

801
00:44:58,980 --> 00:45:01,200
Alter, ich bin zu pepega,

802
00:45:01,260 --> 00:45:03,120
das zu schreiben. Und jetzt

803
00:45:03,120 --> 00:45:04,200
Runtime?

804
00:45:04,560 --> 00:45:07,300
Da reinschreiben? Ne, weil?

805
00:45:10,230 --> 00:45:10,930
Achso, äh,

806
00:45:11,230 --> 00:45:11,850
ist missing.

807
00:45:14,860 --> 00:45:15,420
Runtime?

808
00:45:18,320 --> 00:45:19,660
Used after move.

809
00:45:20,600 --> 00:45:21,060
Okay, dann muss das hier...

810
00:45:22,520 --> 00:45:26,670
MonkaS, Alter.

811
00:45:26,970 --> 00:45:29,410
Ich hab mir das so einfach vorgestellt, ist es aber nicht.

812
00:45:33,380 --> 00:45:37,400
Ich...

813
00:45:37,400 --> 00:45:39,960
Okay, wir lassen das. Wir lassen das sein, ja?

814
00:45:40,300 --> 00:45:42,080
Wir lassen, wir lassen das sein.

815
00:45:48,660 --> 00:45:50,060
Wir lassen das, wir lassen das sein.

816
00:45:51,640 --> 00:45:52,000
Weil...

817
00:45:52,000 --> 00:45:53,460
Ich will ja Runtime get...

818
00:45:53,460 --> 00:45:54,800
Ich will das ja wegschmeißen.

819
00:45:54,880 --> 00:45:56,620
Ich will das ja gar nicht mehr haben.

820
00:46:01,660 --> 00:46:03,460
Okay, wir lassen das mal kurz hier

821
00:46:03,460 --> 00:46:05,000
weg. Das ist eigentlich gar nicht das...

822
00:46:05,000 --> 00:46:06,660
Vielleicht fällt mir später noch was zu ein.

823
00:46:11,920 --> 00:46:13,160
Das darf jetzt so bleiben.

824
00:46:13,360 --> 00:46:14,820
Und das hier,

825
00:46:14,920 --> 00:46:16,220
fliegt jetzt erstmal wieder weg, okay?

826
00:46:18,220 --> 00:46:19,220
Und das, das hier auch.

827
00:46:19,360 --> 00:46:20,940
Da bin ich grad noch nicht

828
00:46:20,940 --> 00:46:22,520
High-IQ-Rust-mäßig genug für.

829
00:46:30,830 --> 00:46:32,130
Das muss ich mal schauen, wie man das

830
00:46:32,130 --> 00:46:33,350
wie man das später macht.

831
00:46:34,610 --> 00:46:36,090
Weil das beißt sich. Ich kann nicht

832
00:46:36,090 --> 00:46:37,290
die Runtime hier anlegen.

833
00:46:42,350 --> 00:46:43,610
Das ist, das ist halt echt blöd.

834
00:46:43,830 --> 00:46:44,990
Egal, das machen wir jetzt nicht.

835
00:46:45,310 --> 00:46:47,730
Vielleicht fällt mir da später was zu ein.

836
00:46:48,710 --> 00:46:50,010
Wir, wir... Also was mich

837
00:46:50,010 --> 00:46:51,810
viel mehr interessiert ist, wie man ein Custom

838
00:46:51,810 --> 00:46:54,090
Custom Type implementiert in Rust.

839
00:46:55,090 --> 00:46:55,830
Eine Custom

840
00:46:56,050 --> 00:46:58,450
Collection, wohlgemerkt, in Rust implementiert.

841
00:46:58,550 --> 00:47:00,390
Eine Generic Custom Collection

842
00:47:00,390 --> 00:47:02,410
in Rust. Ich würde mal

843
00:47:02,410 --> 00:47:04,270
vorschlagen, wir

844
00:47:04,270 --> 00:47:06,170
kopieren das Ganze in

845
00:47:06,170 --> 00:47:07,610
ein eigenes

846
00:47:07,610 --> 00:47:09,730
in ein eigenes File.

847
00:47:12,210 --> 00:47:13,570
Kann man das nicht kopieren?

848
00:47:14,390 --> 00:47:15,990
Refactor move

849
00:47:15,990 --> 00:47:18,190
to

850
00:47:18,190 --> 00:47:18,830
ähm

851
00:47:18,830 --> 00:47:24,000
registry.rs

852
00:47:24,000 --> 00:47:28,540
So, ja ja, add.

853
00:47:29,340 --> 00:47:30,860
Jetzt bin ich mal gespannt.

854
00:47:31,360 --> 00:47:32,400
Jetzt, jetzt bin ich mal gespannt.

855
00:47:32,400 --> 00:47:34,580
Also, warte nicht, Runtime.

856
00:47:34,840 --> 00:47:35,120
Moment.

857
00:47:36,700 --> 00:47:38,620
Äh, registry.rs

858
00:47:38,620 --> 00:47:40,640
Also, was ich haben will.

859
00:47:41,240 --> 00:47:42,280
Ich will ein Generic

860
00:47:42,280 --> 00:47:43,780
Ich will ein Generic Type

861
00:47:43,780 --> 00:47:46,620
in Rust. Ich hab keine Ahnung, wie man Generic

862
00:47:46,620 --> 00:47:48,300
Rust, Rust

863
00:47:48,300 --> 00:47:50,300
Generic Type. Wie geht das?

864
00:47:51,340 --> 00:47:52,820
Generic Data Types

865
00:47:52,820 --> 00:47:55,770
Strukt

866
00:47:55,770 --> 00:47:59,900
äh

867
00:47:59,900 --> 00:48:01,440
Ja, T

868
00:48:01,440 --> 00:48:04,920
Also im Prinzip ein bisschen wie in .NET

869
00:48:04,920 --> 00:48:06,540
Registry

870
00:48:06,560 --> 00:48:08,480
T. Okay? So.

871
00:48:09,620 --> 00:48:10,760
Dann nennen wir, machen wir hier mal

872
00:48:10,760 --> 00:48:12,760
eine Variable drin. Die nennen wir einfach Storage

873
00:48:12,760 --> 00:48:13,760
oder Store.

874
00:48:14,860 --> 00:48:16,680
Storage. Keine Ahnung.

875
00:48:16,940 --> 00:48:17,860
Store. Wir nennen es Store.

876
00:48:19,200 --> 00:48:19,580
Und

877
00:48:19,580 --> 00:48:22,780
das wird eine Hash Map.

878
00:48:23,880 --> 00:48:24,700
Das wird

879
00:48:24,700 --> 00:48:26,520
eine Hash Map vom

880
00:48:26,520 --> 00:48:28,640
Typ, ähm, tja. Wie viele

881
00:48:28,640 --> 00:48:29,780
IDs brauche ich?

882
00:48:30,480 --> 00:48:32,600
Wahrscheinlich reicht ein U32 Log

883
00:48:32,600 --> 00:48:34,600
da aus. U32 Max.

884
00:48:35,600 --> 00:48:36,540
Nicht Z32.

885
00:48:36,560 --> 00:48:38,600
Was auch immer ich da gerade gegoogelt hab.

886
00:48:39,080 --> 00:48:40,380
U32 Max

887
00:48:40,380 --> 00:48:42,660
ist, ja, ja, so

888
00:48:42,660 --> 00:48:44,360
ich glaube, das reicht.

889
00:48:45,180 --> 00:48:46,220
Ich glaube, ich werde nie

890
00:48:46,220 --> 00:48:48,700
so viele Connections gleichzeitig haben,

891
00:48:48,800 --> 00:48:50,220
dass das irgendwie Probleme macht.

892
00:48:51,400 --> 00:48:51,940
So, also

893
00:48:51,940 --> 00:48:54,620
wir brauchen eine extra ID pro

894
00:48:54,620 --> 00:48:57,620
Connection. Wenn das

895
00:48:57,620 --> 00:48:59,800
Compile, das wird auf jeden Fall nicht Compilen

896
00:48:59,800 --> 00:49:01,700
auf First Trial. So.

897
00:49:02,340 --> 00:49:03,300
Ähm, und dann

898
00:49:03,300 --> 00:49:05,900
ein Value auf Type T.

899
00:49:05,900 --> 00:49:07,960
Okay? So weit, so weit, so weit.

900
00:49:08,000 --> 00:49:09,740
Sollte es noch kompilieren. Da haben wir noch nichts

901
00:49:09,740 --> 00:49:10,140
gemacht.

902
00:49:11,740 --> 00:49:13,760
So, aber, aber generic das Ganze.

903
00:49:14,040 --> 00:49:14,520
So, und jetzt?

904
00:49:17,020 --> 00:49:17,460
Im,

905
00:49:17,740 --> 00:49:19,620
kann das mal machen, was ich will.

906
00:49:20,520 --> 00:49:21,820
Registry of

907
00:49:21,820 --> 00:49:22,620
Type T.

908
00:49:24,180 --> 00:49:25,540
Moment, jetzt geht das nicht.

909
00:49:25,760 --> 00:49:25,980
Warum?

910
00:49:27,700 --> 00:49:28,720
Unresolved Reference.

911
00:49:35,020 --> 00:49:36,740
Ach, hier muss T vorne noch hin.

912
00:49:38,240 --> 00:49:38,960
Imple, okay.

913
00:49:39,660 --> 00:49:40,580
Implement T.

914
00:49:41,520 --> 00:49:42,500
Implement Type T.

915
00:49:42,600 --> 00:49:43,520
Registry of Type T.

916
00:49:43,540 --> 00:49:45,620
So, also, was wir

917
00:49:45,620 --> 00:49:47,200
jetzt brauchen, ist folgendes. Function.

918
00:49:48,060 --> 00:49:49,620
Muss man da Public eigentlich

919
00:49:49,620 --> 00:49:51,600
davor schreiben? Ja, ne? Ich muss,

920
00:49:51,600 --> 00:49:53,480
ich muss da Pub davor schreiben,

921
00:49:54,040 --> 00:49:55,660
damit das exportiert

922
00:49:55,660 --> 00:49:57,420
wird nachher, dass ich das benutzen kann.

923
00:49:58,060 --> 00:49:58,780
Glaube ich.

924
00:50:00,680 --> 00:50:01,740
Oder muss ich,

925
00:50:01,820 --> 00:50:03,680
muss ich nur hier Pub davor

926
00:50:03,680 --> 00:50:04,120
schreiben?

927
00:50:05,440 --> 00:50:07,320
Also nicht genau. So, Fn.

928
00:50:08,520 --> 00:50:09,480
Also, was brauchen wir

929
00:50:09,480 --> 00:50:11,720
in so einer Collection? Wir brauchen

930
00:50:11,720 --> 00:50:13,040
einmal New.

931
00:50:13,540 --> 00:50:16,080
Wenn man das macht, wie Go.

932
00:50:24,800 --> 00:50:26,300
So, wir machen, wir machen das mal so ein bisschen

933
00:50:26,300 --> 00:50:28,160
wie in Go. Also,

934
00:50:28,620 --> 00:50:30,120
es, boah, ich hab keine Ahnung, wie das geht.

935
00:50:30,400 --> 00:50:32,640
Rust New Constructor.

936
00:50:36,580 --> 00:50:37,360
Ja, jawoll.

937
00:50:37,520 --> 00:50:38,380
Genau das will ich haben.

938
00:50:39,120 --> 00:50:40,340
Excellent Copy Paste.

939
00:50:41,100 --> 00:50:43,120
So, wir wollen kein Value. Wir returnen

940
00:50:43,120 --> 00:50:44,280
Self, okay.

941
00:50:45,000 --> 00:50:46,400
Und Self ist im, okay,

942
00:50:46,660 --> 00:50:48,860
Store ist eine

943
00:50:48,860 --> 00:50:51,080
Hash Map, eine neue,

944
00:50:51,080 --> 00:50:52,700
ein neues Dictionary im Endeffekt.

945
00:50:53,720 --> 00:50:53,940
Okay,

946
00:50:54,100 --> 00:50:56,100
Funst, nice. Was hat der für Schmerzen?

947
00:50:57,140 --> 00:50:58,560
New Function is never used.

948
00:50:59,140 --> 00:51:00,360
Kompiliert, alles gut.

949
00:51:01,760 --> 00:51:02,860
Das heißt, wir können jetzt

950
00:51:02,860 --> 00:51:05,320
das Ganze neu anlegen.

951
00:51:05,820 --> 00:51:07,280
Übrigens, um das zu testen,

952
00:51:07,860 --> 00:51:09,420
machen wir hier einfach mal eine Funktion

953
00:51:09,420 --> 00:51:11,640
und rufen das, und rufen das auf.

954
00:51:11,740 --> 00:51:12,600
Wir tun einfach mal so.

955
00:51:13,440 --> 00:51:14,280
Registry new.

956
00:51:17,190 --> 00:51:18,970
Achso, Registry of Type.

957
00:51:20,230 --> 00:51:20,710
Ah,

958
00:51:20,950 --> 00:51:22,090
Int oder so.

959
00:51:28,360 --> 00:51:28,720
Ähm,

960
00:51:30,160 --> 00:51:31,180
wie schreibt man das jetzt?

961
00:51:31,200 --> 00:51:33,200
Int?

962
00:51:34,860 --> 00:51:35,140
Int?

963
00:51:35,780 --> 00:51:52,910
Muss man das hier vorne irgendwie

964
00:51:52,910 --> 00:51:53,290
schreiben?

965
00:51:55,820 --> 00:51:57,580
Type Annotation Needed.

966
00:51:59,280 --> 00:51:59,760
Ah, ja.

967
00:52:00,800 --> 00:52:02,600
Okay, das muss man hier machen. Das ist auch ein bisschen

968
00:52:02,600 --> 00:52:03,680
gewöhnungsbedürftig.

969
00:52:05,660 --> 00:52:06,700
Auf, ja, hier

970
00:52:06,700 --> 00:52:07,620
U32.

971
00:52:08,800 --> 00:52:10,560
Oder machen wir Local Static

972
00:52:10,560 --> 00:52:11,040
Track

973
00:52:11,040 --> 00:52:13,700
Sample. So, perfekt.

974
00:52:14,160 --> 00:52:15,280
Kompiliert noch? Kompiliert noch.

975
00:52:15,280 --> 00:52:15,820
So.

976
00:52:17,420 --> 00:52:18,060
Also,

977
00:52:18,540 --> 00:52:21,040
was braucht man für eine Collection?

978
00:52:21,220 --> 00:52:23,020
Wir brauchen im Prinzip

979
00:52:23,020 --> 00:52:29,470
ähm, wir brauchen im Prinzip

980
00:52:29,470 --> 00:52:31,370
drei Methoden, vier, vier Methoden.

981
00:52:31,690 --> 00:52:33,390
Wir brauchen Add-Elemente,

982
00:52:33,850 --> 00:52:34,950
Get-Elemente,

983
00:52:36,130 --> 00:52:37,710
Delete-Elemente und

984
00:52:37,710 --> 00:52:39,610
Loop

985
00:52:39,610 --> 00:52:41,090
oder sowas, ja.

986
00:52:42,430 --> 00:52:43,390
Alles klar.

987
00:52:43,390 --> 00:52:43,750
Also,

988
00:52:43,750 --> 00:52:46,850
Pup, fangen wir mal an.

989
00:52:47,150 --> 00:52:49,270
Pup, Fn, machen wir mal Add.

990
00:52:49,510 --> 00:52:51,370
Add dürfte ja noch relativ easy sein.

991
00:52:51,490 --> 00:52:51,790
Add,

992
00:52:55,580 --> 00:52:57,320
und jetzt, ne, Moment.

993
00:52:57,720 --> 00:52:59,300
Wo kommt jetzt hier der

994
00:52:59,300 --> 00:53:01,200
der Type hin?

995
00:53:03,760 --> 00:53:05,700
Also, bei .NET kommt er da hin, glaube ich.

996
00:53:05,820 --> 00:53:07,300
Ja, okay, kommt den Rust auch da hin.

997
00:53:12,000 --> 00:53:12,560
So, Add.

998
00:53:13,360 --> 00:53:15,320
So, und dann kriegen wir als Parameter

999
00:53:15,320 --> 00:53:16,860
ein

1000
00:53:16,860 --> 00:53:18,720
ein Element.

1001
00:53:22,550 --> 00:53:23,870
Oh, fuck, wie war man das jetzt?

1002
00:53:32,700 --> 00:53:33,980
Also, wir kriegen ein Element

1003
00:53:33,980 --> 00:53:35,800
auf T im Endeffekt. So.

1004
00:53:35,800 --> 00:53:38,200
Was hat er hier für Schmerzen?

1005
00:53:39,000 --> 00:53:40,600
Name T is already used.

1006
00:53:42,920 --> 00:53:43,020
Hä?

1007
00:53:43,280 --> 00:53:45,360
Ach, brauche ich das hier gar nicht mehr?

1008
00:53:46,500 --> 00:53:47,780
Ah, ich brauche das gar nicht mehr.

1009
00:53:48,400 --> 00:53:50,800
Ähm, so, und dann brauchen wir aber noch

1010
00:53:50,800 --> 00:53:52,660
irgendwie unself.

1011
00:53:53,100 --> 00:53:54,600
Das ist das, übrigens das gleiche wie

1012
00:53:54,600 --> 00:53:56,720
this in C-Sharp oder self in Python

1013
00:53:56,720 --> 00:53:58,700
oder me, glaube ich,

1014
00:53:58,720 --> 00:54:00,080
in Lua oder sowas.

1015
00:54:01,460 --> 00:54:01,860
So.

1016
00:54:01,860 --> 00:54:03,940
Das heißt, jetzt sagen wir

1017
00:54:03,940 --> 00:54:04,600
self

1018
00:54:04,600 --> 00:54:06,480
store

1019
00:54:06,480 --> 00:54:09,920
insert. Das fand's doch

1020
00:54:09,920 --> 00:54:11,860
so im Leben nicht. Jetzt brauchen wir, ach, so, Moment,

1021
00:54:11,920 --> 00:54:13,240
eine ID brauchen wir noch.

1022
00:54:13,280 --> 00:54:15,540
Eine ID, die muss ich generieren.

1023
00:54:16,200 --> 00:54:17,640
Let ID gleich 1,

1024
00:54:17,740 --> 00:54:19,140
die generiere ich. ID

1025
00:54:19,140 --> 00:54:21,380
und dann fügen wir das Element

1026
00:54:21,380 --> 00:54:21,760
ein.

1027
00:54:23,380 --> 00:54:25,300
Das geht natürlich nicht, weil das nicht

1028
00:54:25,300 --> 00:54:26,040
Mutt ist.

1029
00:54:28,220 --> 00:54:30,140
Ich glaube, in Lua heißt es me.

1030
00:54:40,920 --> 00:54:42,860
Leute, das kann so nicht funktionieren.

1031
00:54:44,220 --> 00:54:44,780
Das ist

1032
00:54:44,780 --> 00:54:45,820
verkehrt, was ich mache.

1033
00:54:46,600 --> 00:54:48,500
Also, okay, das würde funktionieren, Chat.

1034
00:54:49,100 --> 00:54:50,520
Das würde funktionieren, aber

1035
00:54:50,520 --> 00:54:52,320
spätestens, spätestens

1036
00:54:58,480 --> 00:55:00,000
wie will Rust das handeln,

1037
00:55:00,400 --> 00:55:01,480
wenn ich das von verschiedenen Threads

1038
00:55:01,480 --> 00:55:07,200
aufrufe? Moment, Moment, Moment.

1039
00:55:07,260 --> 00:55:08,860
Das testen wir jetzt mal, ja.

1040
00:55:12,220 --> 00:55:13,320
Weil ich glaube schon,

1041
00:55:13,420 --> 00:55:14,620
dass man das hier locken muss.

1042
00:55:15,360 --> 00:55:16,980
HashMap ist ja sicherlich nicht Threadsafe.

1043
00:55:17,080 --> 00:55:17,960
Probieren wir das mal. Add.

1044
00:55:19,060 --> 00:55:21,140
Jetzt irgendwie 1 oder so.

1045
00:55:22,820 --> 00:55:23,040
Moment.

1046
00:55:23,500 --> 00:55:25,400
Let Mutt, R, Mutt.

1047
00:55:31,960 --> 00:55:32,340
Ja, gut.

1048
00:55:33,600 --> 00:55:34,920
Hier weiß er ja, dass es nicht

1049
00:55:34,920 --> 00:55:37,220
Multithreaded ist, weil das in der gleichen Funktion ist.

1050
00:55:42,460 --> 00:55:44,300
Der wird mich das schlichten,

1051
00:55:44,300 --> 00:55:45,820
vergreifend nicht anlegen lassen,

1052
00:55:45,940 --> 00:55:47,000
vermute ich einfach mal.

1053
00:55:48,940 --> 00:55:50,080
Ne, ne, ich glaube, wir brauchen da

1054
00:55:50,080 --> 00:55:51,920
einen Lock drum. Ich glaube,

1055
00:55:51,980 --> 00:55:53,800
damit ersparen wir uns schon einige,

1056
00:55:54,080 --> 00:55:55,320
einige Probleme.

1057
00:55:56,900 --> 00:55:58,440
Wir brauchen da einen Lock drum.

1058
00:55:59,160 --> 00:56:00,140
Lassen wir das mal so.

1059
00:56:00,780 --> 00:56:02,260
Also Ziel muss sein, dass die Registry

1060
00:56:02,260 --> 00:56:04,000
selbst nicht mutable ist, aber

1061
00:56:04,000 --> 00:56:05,300
Add trotzdem funktioniert.

1062
00:56:06,160 --> 00:56:08,060
So, heißt im Endeffekt,

1063
00:56:08,120 --> 00:56:10,260
wir brauchen hier wahrscheinlich einen RwLock.

1064
00:56:10,260 --> 00:56:12,420
Ne, oder wie ist das Ding, was wir hier hatten?

1065
00:56:13,200 --> 00:56:13,980
Doch, RwLock.

1066
00:56:14,300 --> 00:56:16,020
RwLock

1067
00:56:16,020 --> 00:56:17,300
HashMap

1068
00:56:17,300 --> 00:56:25,230
und jetzt ist es RwLock

1069
00:56:25,230 --> 00:56:33,220
New. Du könntest auch

1070
00:56:33,220 --> 00:56:35,340
nur Self machen und dann versuchen mit GetMutt

1071
00:56:35,340 --> 00:56:37,280
die Referenz zu

1072
00:56:37,280 --> 00:56:38,360
holen. Was?

1073
00:56:39,040 --> 00:56:39,460
Wie jetzt?

1074
00:56:40,280 --> 00:56:43,320
Das kann aber doch auch Multithreaded nicht funktionieren.

1075
00:56:47,800 --> 00:56:48,580
Was soll ich machen?

1076
00:56:49,240 --> 00:56:50,300
Add, also quasi

1077
00:56:50,300 --> 00:56:52,700
das muss übrigens

1078
00:56:52,700 --> 00:56:54,660
weg hier. Self.

1079
00:56:56,100 --> 00:56:57,180
GetMutt.

1080
00:56:58,860 --> 00:57:00,500
Okay, was ist das für

1081
00:57:00,500 --> 00:57:01,420
schwarze Magie?

1082
00:57:03,300 --> 00:57:04,600
Returns a mutable reference

1083
00:57:04,600 --> 00:57:06,500
to the value. The key may be

1084
00:57:06,500 --> 00:57:08,620
any borrowed form of the map

1085
00:57:08,620 --> 00:57:09,380
key to partition.

1086
00:57:09,380 --> 00:57:11,580
Wie soll

1087
00:57:11,580 --> 00:57:12,620
das funktionieren?

1088
00:57:14,980 --> 00:57:15,580
GetMutt?

1089
00:57:20,720 --> 00:57:21,660
Geht auch nicht, ne?

1090
00:57:23,360 --> 00:57:23,900
Ach, Moment!

1091
00:57:25,940 --> 00:57:26,540
Das ist,

1092
00:57:26,660 --> 00:57:31,440
das ist, ähm,

1093
00:57:31,800 --> 00:57:33,500
jetzt aus der HashMap

1094
00:57:33,500 --> 00:57:37,500
raus. Das ist was anderes.

1095
00:57:37,500 --> 00:57:39,320
Das, ne, ne, das, das,

1096
00:57:40,440 --> 00:57:41,660
ich check's auch nicht, was?

1097
00:57:44,870 --> 00:57:46,050
Ne, ne, das, das gibt's

1098
00:57:46,050 --> 00:57:46,650
überhaupt nicht.

1099
00:57:49,000 --> 00:57:51,600
Try? Ne, das muss in den

1100
00:57:51,600 --> 00:57:53,360
Lock, das muss in den Lock rein, sonst

1101
00:57:53,360 --> 00:57:54,060
funzt das nicht.

1102
00:57:55,160 --> 00:57:56,560
Wir hatten's doch eben grad hier schon.

1103
00:57:58,200 --> 00:57:58,500
Lock.

1104
00:58:00,640 --> 00:58:01,120
RwLock.

1105
00:58:01,760 --> 00:58:03,220
Also, Self,

1106
00:58:03,840 --> 00:58:05,500
Store, so.

1107
00:58:05,900 --> 00:58:07,200
Store ist jetzt allerdings

1108
00:58:07,200 --> 00:58:09,300
nicht mehr direkt eine HashMap, sondern

1109
00:58:09,300 --> 00:58:09,760
ein

1110
00:58:09,760 --> 00:58:11,260
Thread,

1111
00:58:11,280 --> 00:58:12,040
Thread, Save, Lock.

1112
00:58:13,180 --> 00:58:15,140
Das holen wir jetzt. Write, die Reference

1113
00:58:15,140 --> 00:58:16,800
raus, Unwrap.

1114
00:58:22,060 --> 00:58:23,380
Okay, und jetzt sagen wir

1115
00:58:23,380 --> 00:58:24,500
Map, Insert,

1116
00:58:26,180 --> 00:58:27,620
ID und Element E.

1117
00:58:27,880 --> 00:58:29,240
So, und das funzt jetzt wahrscheinlich.

1118
00:58:29,560 --> 00:58:30,540
Ja, ach, shit, was ist das?

1119
00:58:31,160 --> 00:58:33,680
Cannot borrow mutable, make mutable. Ja, sehr schön.

1120
00:58:34,740 --> 00:58:34,980
Fuck!

1121
00:58:36,840 --> 00:58:37,680
Cannot borrow

1122
00:58:37,680 --> 00:58:38,800
as mutable.

1123
00:58:39,960 --> 00:58:41,620
Ach so, weil dann, weil dann noch, das brauchen wir

1124
00:58:41,620 --> 00:58:42,520
doch jetzt gar nicht mehr, oder?

1125
00:58:42,520 --> 00:58:44,620
Ah, nice, funzt.

1126
00:58:45,140 --> 00:58:45,580
Sehr schön.

1127
00:58:45,720 --> 00:58:47,720
Also, jetzt müssen wir die Registry

1128
00:58:47,720 --> 00:58:49,380
selbst nicht mutable machen,

1129
00:58:49,780 --> 00:58:51,920
können aber trotzdem Sachen einfügen.

1130
00:58:55,060 --> 00:58:56,020
Boah, meine Güte.

1131
00:58:56,900 --> 00:59:00,780
Der fliegt

1132
00:59:00,780 --> 00:59:02,920
jetzt auf die Schnauze, wenn es von einem anderen gelockt

1133
00:59:02,920 --> 00:59:04,840
ist. Ich hab ehrlich gesagt keine Ahnung,

1134
00:59:04,980 --> 00:59:06,900
wie sich, wie sich das verhält.

1135
00:59:10,120 --> 00:59:10,900
Ob das, ob das

1136
00:59:10,900 --> 00:59:12,940
einfach nur hängt an der Stelle?

1137
00:59:14,680 --> 00:59:16,800
Oder ob das...

1138
00:59:16,800 --> 00:59:17,000
Oh.

1139
00:59:18,740 --> 00:59:18,980
Nee.

1140
00:59:18,980 --> 00:59:19,040
Okay.

1141
00:59:21,200 --> 00:59:22,760
Locks das RwLock with

1142
00:59:22,760 --> 00:59:27,000
exclusive write access blocking the current thread until it can be acquired.

1143
00:59:27,000 --> 00:59:28,180
Nee, nee, nee, nee, nee, hier.

1144
00:59:28,640 --> 00:59:31,900
Blocking the current thread until it can be acquired.

1145
00:59:36,320 --> 00:59:41,300
This function will not return while other writers or other readers currently have access to the lock.

1146
00:59:42,640 --> 00:59:44,880
Okay, das, das hängt einfach an der Stelle.

1147
00:59:45,380 --> 00:59:46,820
Das ist aber auch okay, dass das hängt.

1148
00:59:47,080 --> 00:59:47,800
Weil wir wollen ja,

1149
00:59:48,660 --> 00:59:50,860
die einzige mutable reference haben,

1150
00:59:50,860 --> 00:59:52,060
dass wir was einfügen können.

1151
00:59:54,180 --> 00:59:55,340
Rust 5 hat, ja.

1152
00:59:55,340 --> 00:59:57,200
So, also jetzt haben wir unsere

1153
00:59:57,200 --> 00:59:59,620
Add-Methode. Das war erstaunlich einfach.

1154
01:00:00,160 --> 01:00:01,180
Das war erstaunlich,

1155
01:00:01,240 --> 01:00:02,840
erstaunlich einfach bis jetzt.

1156
01:00:03,440 --> 01:00:03,560
So.

1157
01:00:05,420 --> 01:00:07,220
Als nächstes brauchen wir

1158
01:00:07,220 --> 01:00:09,020
einen Get. Muss ich hier überhaupt

1159
01:00:09,020 --> 01:00:10,360
public davor schreiben?

1160
01:00:11,700 --> 01:00:13,220
Pub fn

1161
01:00:13,220 --> 01:00:14,060
get

1162
01:00:14,060 --> 01:00:16,720
und self.

1163
01:00:19,250 --> 01:00:20,270
Jetzt brauche ich eine ID.

1164
01:00:25,720 --> 01:00:26,940
Jetzt brauche ich eine ID.

1165
01:00:30,870 --> 01:00:32,050
Moment, wait a minute.

1166
01:00:32,050 --> 01:00:34,030
Wait a minute. Ich hab doch die ID gar nicht.

1167
01:00:34,210 --> 01:00:35,590
Moment, hier muss die

1168
01:00:35,590 --> 01:00:36,470
to do

1169
01:00:36,470 --> 01:00:38,650
generate ID.

1170
01:00:40,070 --> 01:00:42,270
Das funktioniert nicht so wie gedacht gerade.

1171
01:00:45,440 --> 01:00:47,720
Wobei, muss ich jemals

1172
01:00:47,720 --> 01:00:49,320
überhaupt einzelne Elemente

1173
01:00:49,320 --> 01:00:51,080
daraus getten? Ja klar,

1174
01:00:51,260 --> 01:00:52,100
für die Connections.

1175
01:00:53,360 --> 01:00:55,040
Das heißt, mein Add muss

1176
01:00:55,040 --> 01:00:57,320
eigentlich die ID returnen,

1177
01:00:57,360 --> 01:00:58,220
dass das funktioniert.

1178
01:01:00,200 --> 01:01:01,340
Return ID.

1179
01:01:05,370 --> 01:01:06,390
Jetzt weiß ich

1180
01:01:06,390 --> 01:01:06,830
die ID.

1181
01:01:06,830 --> 01:01:08,350
So, jetzt habe ich,

1182
01:01:08,350 --> 01:01:10,430
jetzt habe ich die ID und jetzt kann ich

1183
01:01:10,430 --> 01:01:11,590
wahrscheinlich sagen

1184
01:01:11,590 --> 01:01:13,010
self

1185
01:01:13,010 --> 01:01:16,070
store read

1186
01:01:16,070 --> 01:01:18,270
reicht jetzt. Unwrap

1187
01:01:18,270 --> 01:01:20,490
get Element

1188
01:01:20,490 --> 01:01:22,630
oder sowas. Get Key Value.

1189
01:01:24,210 --> 01:01:24,570
Was?

1190
01:01:24,970 --> 01:01:25,090
Get?

1191
01:01:28,930 --> 01:01:29,150
What?

1192
01:01:30,670 --> 01:01:31,010
Get.

1193
01:01:32,770 --> 01:01:34,630
Und jetzt ID.

1194
01:01:35,410 --> 01:01:37,250
Und das Ganze dann returnen.

1195
01:01:39,090 --> 01:01:39,930
Return Funst.

1196
01:01:39,930 --> 01:01:40,870
Okay, was?

1197
01:01:41,130 --> 01:01:43,130
Unwrap. Unwrap. Nochmal hinten

1198
01:01:43,130 --> 01:01:43,650
drauf. Bam.

1199
01:01:46,660 --> 01:01:47,780
Was? Founds?

1200
01:01:48,560 --> 01:01:53,580
Was willst du, Rust?

1201
01:01:56,790 --> 01:01:57,690
Expected und

1202
01:01:57,690 --> 01:01:58,750
found und T.

1203
01:02:00,550 --> 01:02:01,950
Ach so, der Return Type

1204
01:02:01,950 --> 01:02:06,060
fehlt. Der Return

1205
01:02:06,060 --> 01:02:07,900
Type. Was hat er hier unten für Schmerzen?

1206
01:02:09,540 --> 01:02:09,900
Ah!

1207
01:02:10,780 --> 01:02:11,880
Moment, Moment.

1208
01:02:12,020 --> 01:02:13,940
Get muss eine Referenz sein dahin.

1209
01:02:14,660 --> 01:02:15,620
Okay, okay.

1210
01:02:15,620 --> 01:02:18,080
Und jetzt

1211
01:02:18,080 --> 01:02:19,580
kann ich auch eine Reference

1212
01:02:19,580 --> 01:02:19,620
returnen.

1213
01:02:20,160 --> 01:02:20,800
Dazu.

1214
01:02:20,800 --> 01:02:22,420
Geht aber immer noch nicht.

1215
01:02:22,420 --> 01:02:25,120
Cannot return value reference

1216
01:02:25,120 --> 01:02:26,360
und Tab. Oh je, oh je.

1217
01:02:26,580 --> 01:02:27,920
Was? Was will er von mir?

1218
01:02:34,860 --> 01:02:36,160
Ne, was soll ich denn sonst machen außer

1219
01:02:36,160 --> 01:02:41,590
unwrap? Moment, Moment.

1220
01:02:41,710 --> 01:02:43,330
Das kann ja nicht funktionieren.

1221
01:02:45,710 --> 01:02:47,210
Wobei, warum eigentlich nicht?

1222
01:02:49,090 --> 01:02:49,770
Das ist

1223
01:02:49,770 --> 01:02:51,470
eine Referenz. Ach so,

1224
01:02:51,570 --> 01:02:53,210
ich weiß, warum das nicht funktionieren

1225
01:02:53,210 --> 01:02:55,690
kann. Das ist eine Referenz

1226
01:02:55,690 --> 01:02:57,830
und ich könnte ja jederzeit

1227
01:02:57,830 --> 01:02:59,610
den Inhalt löschen

1228
01:02:59,610 --> 01:03:00,690
hier drin zum Beispiel.

1229
01:03:03,080 --> 01:03:05,520
Heißt im Endeffekt, dann würde, wäre die Referenz

1230
01:03:05,520 --> 01:03:07,600
ungültig und das mag Rust ja nicht.

1231
01:03:08,560 --> 01:03:09,820
Also, was muss ich jetzt machen?

1232
01:03:10,300 --> 01:03:11,900
Cannot return. Was schlägt

1233
01:03:11,900 --> 01:03:13,060
mir denn der Compiler vor?

1234
01:03:15,180 --> 01:03:16,140
Returns the value

1235
01:03:16,140 --> 01:03:17,980
referencing data owned by

1236
01:03:17,980 --> 01:03:19,140
the current function.

1237
01:03:26,650 --> 01:03:28,510
Okay, ich habe was gelernt. Ich glaube, ich weiß,

1238
01:03:28,610 --> 01:03:29,530
wie wir das fixen können.

1239
01:03:30,550 --> 01:03:32,330
Ich glaube, ich weiß, wie wir das fixen können.

1240
01:03:32,770 --> 01:03:34,550
Genauso wie wir es hier gefixt haben.

1241
01:03:35,450 --> 01:03:36,430
Ein ARK

1242
01:03:36,430 --> 01:03:37,250
drumherum rappen.

1243
01:03:42,300 --> 01:03:43,100
Also es ist jetzt nicht...

1244
01:03:43,100 --> 01:03:59,190
es ist jetzt nicht type t sondern es ist type arc of t und dann hier ist es arc new ergibt das so

1245
01:03:59,190 --> 01:04:10,470
sinn und jetzt und jetzt krieg ich nen arc zurück und den können wir klonen was den referenz counter

1246
01:04:10,470 --> 01:04:28,300
erhöht und dann sollte es funktionieren hey es kommt bald five head time es funktioniert ob es

1247
01:04:28,300 --> 01:04:32,680
genau das macht was ich haben will chat hat irgendjemanden plan was der unterschied ist

1248
01:04:32,680 --> 01:04:40,360
zwischen box und arc also arc ist ein referenz counter das weiß ich genauso wie rc warum es

1249
01:04:40,360 --> 01:04:42,500
unterschiedliche sachen gibt habe ich auch noch nicht gecheckt

1250
01:04:42,500 --> 01:04:58,630
aber ich vermute mal dass box keine ahnung ich wollte gerade sagen ich vermute würde das auch

1251
01:04:58,630 --> 01:05:05,510
so funktioniert mit box box of t ja arc ist atomic aber was ist das in dem fall bedeuten soll keine

1252
01:05:05,510 --> 01:05:28,360
ahnung okay das funktioniert expected box found und box und box das ist das gleiche problem wir

1253
01:05:28,360 --> 01:05:30,080
müssen das mit arc machen weil es reds

1254
01:05:30,080 --> 01:05:36,500
threat safety genau so wunderbar also wenn ich das richtig verstehe passiert jetzt folgendes

1255
01:05:36,500 --> 01:05:43,100
der speichert jetzt also der

1256
01:05:43,100 --> 01:05:51,080
arc also das ist ein atomic referenz counter der arc übernimmt ownership of t das ist so rust logik

1257
01:05:51,080 --> 01:05:59,640
für gibt es eigentlich in anderen sprachen oftmals nichts direkt vergleichbares also t gehört dem arc und arc selbst ist ein referenct counter oder auch einfach statisch

1258
01:05:59,640 --> 01:06:01,540
gehört dem Arc. Und Arc

1259
01:06:01,540 --> 01:06:03,660
selbst ist ein Reference-Counter. Und jedes Mal,

1260
01:06:04,300 --> 01:06:05,780
wenn ich den klone,

1261
01:06:06,020 --> 01:06:07,420
wird der Reference-Counter um 1

1262
01:06:07,420 --> 01:06:09,740
hochgezählt. Und erst, wenn der Reference-Counter

1263
01:06:09,740 --> 01:06:11,140
bei 0 ist, wird

1264
01:06:11,140 --> 01:06:13,480
das freigegeben. Das heißt, jetzt

1265
01:06:13,480 --> 01:06:14,560
kann ich safe

1266
01:06:14,560 --> 01:06:17,520
das returnen, weil dadurch, dass

1267
01:06:17,520 --> 01:06:19,760
es in einem Arc ist, immer sichergestellt

1268
01:06:19,760 --> 01:06:21,440
ist, solange ich noch irgendwo

1269
01:06:21,440 --> 01:06:23,360
eine gültige Referenz habe, ein bisschen wie der

1270
01:06:23,360 --> 01:06:25,020
Garbage-Collector in C-Sharp,

1271
01:06:25,340 --> 01:06:27,160
naja, ganz, ganz

1272
01:06:27,160 --> 01:06:28,240
light, ja.

1273
01:06:28,240 --> 01:06:28,880
Ähm,

1274
01:06:30,480 --> 01:06:32,240
sobald ich quasi noch irgendwie

1275
01:06:32,240 --> 01:06:34,400
den Reference-Counter habe, dann

1276
01:06:34,400 --> 01:06:36,420
ist das

1277
01:06:36,420 --> 01:06:38,380
quasi sicher und kann nie out of

1278
01:06:38,380 --> 01:06:42,680
scope gehen. Oh man, die Musik

1279
01:06:42,680 --> 01:06:44,160
ist vorbei. Sack.

1280
01:06:47,870 --> 01:06:49,010
Tüm, tüm, tüm.

1281
01:06:54,320 --> 01:06:56,400
Gut. So, jetzt haben wir,

1282
01:06:56,520 --> 01:06:58,360
jetzt können wir das Element getten. Auch

1283
01:06:58,360 --> 01:07:03,030
schon mal nice. RC

1284
01:07:03,030 --> 01:07:05,290
cannot be shared between threads.

1285
01:07:05,870 --> 01:07:07,010
Ja, deswegen braucht man wahrscheinlich

1286
01:07:07,010 --> 01:07:09,410
Arc, dass der Reference-Counter

1287
01:07:10,410 --> 01:07:10,970
irgendwie

1288
01:07:10,970 --> 01:07:12,670
atomic-mäßig erhöht wird und damit

1289
01:07:12,670 --> 01:07:14,770
thread-safe ist. Rate ich jetzt

1290
01:07:14,770 --> 01:07:18,700
einfach mal. So, so weit,

1291
01:07:18,700 --> 01:07:20,640
so gut. Was hat er hier? Registry is never

1292
01:07:20,640 --> 01:07:22,900
constructed. Die IDE

1293
01:07:22,900 --> 01:07:24,180
ist auch schon ein bisschen pepeger, oder?

1294
01:07:24,820 --> 01:07:26,680
Ja gut, die Funktion wird nicht aufgerufen.

1295
01:07:26,840 --> 01:07:28,740
Ja, okay. Okay, okay. Lass ich mir gefallen.

1296
01:07:29,860 --> 01:07:31,000
So, das brauchen wir als nächstes

1297
01:07:31,000 --> 01:07:32,700
delete. Delete

1298
01:07:32,700 --> 01:07:33,760
brauchen wir als nächstes.

1299
01:07:35,060 --> 01:07:36,520
Fn, nennen wir einfach

1300
01:07:36,520 --> 01:07:36,880
del

1301
01:07:36,880 --> 01:07:40,300
U32, die ID und jetzt,

1302
01:07:40,580 --> 01:07:42,400
das dürfte relativ easy sein.

1303
01:07:42,540 --> 01:07:45,680
Das dürfte relativ easy sein.

1304
01:07:45,800 --> 01:07:47,820
Self, Moment, das kann ich doch eigentlich so lassen.

1305
01:07:48,320 --> 01:07:49,760
Self-Store, jetzt wahrscheinlich

1306
01:07:49,760 --> 01:07:51,620
write, jetzt wahrscheinlich write.

1307
01:07:52,520 --> 01:07:53,000
Ähm,

1308
01:07:54,380 --> 01:07:56,080
wie löscht man, wie löscht man da was?

1309
01:07:56,640 --> 01:07:57,720
Get, insert,

1310
01:07:57,920 --> 01:07:59,000
ether, clear, ne.

1311
01:07:59,860 --> 01:08:02,140
Ich will sowas wie erase, delete oder sowas.

1312
01:08:02,260 --> 01:08:02,620
Remove.

1313
01:08:03,920 --> 01:08:04,420
Remove.

1314
01:08:05,820 --> 01:08:06,780
Remove entry.

1315
01:08:15,520 --> 01:08:17,760
Oh. Was ist der

1316
01:08:17,760 --> 01:08:18,120
Unterschied?

1317
01:08:18,120 --> 01:08:18,280
What?

1318
01:08:21,820 --> 01:08:24,840
Remove the key from the map returning the stored key and the

1319
01:08:24,860 --> 01:08:26,680
value of the key was previously in the map.

1320
01:08:28,840 --> 01:08:29,100
Okay.

1321
01:08:29,980 --> 01:08:31,140
Und, und.

1322
01:08:32,440 --> 01:08:33,300
Remove is?

1323
01:08:33,720 --> 01:08:35,960
Remove the key from the map returning the value

1324
01:08:35,960 --> 01:08:38,040
at the key. Achso, das eine

1325
01:08:38,040 --> 01:08:40,240
returned key value und das andere returned

1326
01:08:40,240 --> 01:08:42,040
nur den value. Ich will überhaupt nichts

1327
01:08:42,040 --> 01:08:42,480
return.

1328
01:08:43,700 --> 01:08:45,860
Gibt sowas wie drop oder so? Hey!

1329
01:08:46,600 --> 01:08:47,620
Moment, ist wieder was anderes.

1330
01:08:48,480 --> 01:08:49,640
Was zum Teufel macht drop?

1331
01:08:51,240 --> 01:08:52,140
Drop ist

1332
01:08:52,140 --> 01:08:53,820
so Nische, das hat auch nicht mal

1333
01:08:53,820 --> 01:08:55,160
irgendeinen Hilfetext.

1334
01:08:55,160 --> 01:09:00,960
Also, remove.

1335
01:09:00,960 --> 01:09:02,960
Einfach nur remove.

1336
01:09:02,960 --> 01:09:04,960
ID.

1337
01:09:04,960 --> 01:09:06,960
Ha? Und da muss auch gar nichts

1338
01:09:06,960 --> 01:09:08,960
returned werden. Einfach so.

1339
01:09:08,960 --> 01:09:10,960
Easy. Eats. Eats.

1340
01:09:10,960 --> 01:09:14,600
Easy as fuck.

1341
01:09:14,600 --> 01:09:16,600
Easy as fuck.

1342
01:09:16,600 --> 01:09:19,970
Moment, es funzt wieder nicht. Warum?

1343
01:09:19,970 --> 01:09:21,970
Achso, und.

1344
01:09:21,970 --> 01:09:25,920
Mit was? Mit Steuerung Q

1345
01:09:25,920 --> 01:09:30,580
kannst du. Meinst

1346
01:09:30,580 --> 01:09:36,260
du hier? Ne.

1347
01:09:36,260 --> 01:09:40,280
Ich hab Visual Studio Key Mappings.

1348
01:09:40,280 --> 01:09:42,120
Keine Ahnung. Ich glaube, das war keine gute Idee.

1349
01:09:42,120 --> 01:09:44,120
Okay.

1350
01:09:44,120 --> 01:09:46,120
Ja, das war's

1351
01:09:46,120 --> 01:09:48,120
doch im Großen und Ganzen schon.

1352
01:09:48,120 --> 01:09:50,120
Und jetzt, jetzt eigentlich nur noch sowas

1353
01:09:50,120 --> 01:09:52,120
wie

1354
01:09:52,120 --> 01:09:54,120
public function

1355
01:09:54,120 --> 01:09:56,120
Ja.

1356
01:09:56,120 --> 01:09:58,120
Nenn ich mal, weiß ich, all

1357
01:09:58,120 --> 01:10:00,120
oder so. All.

1358
01:10:00,120 --> 01:10:02,120
Irgendwas, irgendwas

1359
01:10:02,120 --> 01:10:04,120
in der Richtung.

1360
01:10:04,120 --> 01:10:09,730
All.

1361
01:10:09,730 --> 01:10:11,730
Und jetzt quasi return

1362
01:10:11,730 --> 01:10:13,730
self. Ach, Moment.

1363
01:10:13,730 --> 01:10:17,560
Self.

1364
01:10:17,560 --> 01:10:19,560
Store.

1365
01:10:19,560 --> 01:10:21,560
Ähm.

1366
01:10:23,560 --> 01:10:25,560
Read. Vermutlich.

1367
01:10:25,560 --> 01:10:29,380
Vermutlich read.

1368
01:10:29,380 --> 01:10:32,820
Unwrap.

1369
01:10:32,820 --> 01:10:37,800
Ether. Klingt gut.

1370
01:10:37,800 --> 01:10:39,800
Und das jetzt einfach zurückgeben, oder?

1371
01:10:39,800 --> 01:10:41,800
Das müsste doch sein.

1372
01:10:41,800 --> 01:10:43,800
Ne, ist es nicht.

1373
01:10:43,800 --> 01:10:45,800
Warum nicht?

1374
01:10:45,800 --> 01:10:47,800
Oh Gott, Rust. Warum ist das

1375
01:10:47,800 --> 01:10:49,800
wieder kompliziert?

1376
01:10:49,800 --> 01:10:51,800
Returns a value referencing

1377
01:10:51,800 --> 01:10:53,800
data owned by the current function.

1378
01:10:53,800 --> 01:10:55,800
Was ist

1379
01:10:55,800 --> 01:10:57,800
das eigentlich für ein ultrahässlicher

1380
01:10:57,800 --> 01:10:59,800
return-Wert?

1381
01:10:59,800 --> 01:11:01,800
Ether?

1382
01:11:01,800 --> 01:11:03,800
Single quotes?

1383
01:11:03,800 --> 01:11:05,800
Underscore?

1384
01:11:05,800 --> 01:11:09,300
What?

1385
01:11:09,300 --> 01:11:11,300
Kann man das nicht einfach löschen?

1386
01:11:11,300 --> 01:11:13,300
Naja, bringt nichts.

1387
01:11:13,300 --> 01:11:15,300
Okay, Rust. Ich habe

1388
01:11:15,300 --> 01:11:17,300
legit keine Ahnung, wie das

1389
01:11:17,300 --> 01:11:19,300
funktioniert. Ich hätte, Leute,

1390
01:11:19,300 --> 01:11:21,300
ich hab, ich hab absolute

1391
01:11:21,300 --> 01:11:23,300
pepega Idee, was wir machen könnten.

1392
01:11:23,300 --> 01:11:25,300
Wir können sagen,

1393
01:11:25,300 --> 01:11:27,300
unwrap, clone,

1394
01:11:27,300 --> 01:11:33,170
und wir returnen eine neue

1395
01:11:33,170 --> 01:11:35,170
Hashmap jedes Mal, wenn wir all.

1396
01:11:35,170 --> 01:11:37,170
Aber das kann es ja nicht sein, oder?

1397
01:11:42,530 --> 01:11:44,530
Ich will, ich will einfach nur

1398
01:11:44,530 --> 01:11:46,530
außerhalb eine Schleife machen

1399
01:11:46,530 --> 01:11:48,530
können über alle Elemente in der

1400
01:11:48,530 --> 01:11:50,530
Registry. Wie funktioniert das?

1401
01:11:50,530 --> 01:11:54,480
Ich will sagen können,

1402
01:11:54,480 --> 01:11:56,480
for,

1403
01:11:56,480 --> 01:11:59,800
äh, Moment,

1404
01:11:59,800 --> 01:12:01,800
äh, for,

1405
01:12:01,800 --> 01:12:05,940
er,

1406
01:12:05,940 --> 01:12:07,940
all,

1407
01:12:07,940 --> 01:12:09,940
äh, ja,

1408
01:12:09,940 --> 01:12:11,940
blub, oh.

1409
01:12:11,940 --> 01:12:13,940
Das, das will ich sagen können.

1410
01:12:13,940 --> 01:12:15,940
Das funzt jetzt an der Stelle, klar,

1411
01:12:15,940 --> 01:12:17,940
weil ich eine neue Map mache,

1412
01:12:17,940 --> 01:12:19,940
aber ich will ja, ich will ja nicht

1413
01:12:19,940 --> 01:12:21,940
wirklich die Map einmal komplett

1414
01:12:21,940 --> 01:12:23,940
klonen, bei,

1415
01:12:23,940 --> 01:12:25,940
bei jedem Aufruf. Das ist ja nicht Sinn

1416
01:12:25,940 --> 01:12:29,760
und Zweck der Sache.

1417
01:12:29,760 --> 01:12:31,760
Okay, Stackoverflow, Rust,

1418
01:12:31,760 --> 01:12:33,760
return Iterator,

1419
01:12:33,760 --> 01:12:43,760
oh.

1420
01:12:43,760 --> 01:12:45,760
Returning Iter, oh, was?

1421
01:12:45,760 --> 01:12:47,760
Returning Rust Iterators.

1422
01:12:47,760 --> 01:12:49,760
Depth first.

1423
01:12:49,760 --> 01:12:53,520
Returning an Iterator.

1424
01:12:53,520 --> 01:12:55,520
Ja, genau, das, genau das will ich

1425
01:12:55,520 --> 01:12:57,520
machen und das habe ich auch gerade gemacht, aber

1426
01:12:57,520 --> 01:13:02,180
das funzt nicht.

1427
01:13:02,180 --> 01:13:04,180
The compiler produces an error.

1428
01:13:04,180 --> 01:13:06,180
The type is

1429
01:13:06,180 --> 01:13:08,180
contained within the error messages. Ja, genau

1430
01:13:08,180 --> 01:13:10,180
das, genau das habe ich

1431
01:13:10,180 --> 01:13:12,180
gerade gemacht.

1432
01:13:12,180 --> 01:13:14,180
Genau das habe ich gerade gemacht.

1433
01:13:14,180 --> 01:13:16,180
Beifettige

1434
01:13:16,180 --> 01:13:18,180
Webseite,

1435
01:13:18,180 --> 01:13:20,180
aber,

1436
01:13:20,180 --> 01:13:22,180
Moment,

1437
01:13:22,180 --> 01:13:24,180
Moment, das funzt.

1438
01:13:24,180 --> 01:13:26,180
Ne, das funzt nicht.

1439
01:13:26,180 --> 01:13:28,180
Das ist nicht das, was ich haben will.

1440
01:13:28,180 --> 01:13:30,180
Oh, Mann.

1441
01:13:30,180 --> 01:13:32,180
IDE, please.

1442
01:13:32,180 --> 01:13:34,180
So.

1443
01:13:34,180 --> 01:13:36,180
Genau das habe ich gemacht, aber das funzt nicht.

1444
01:13:38,180 --> 01:13:40,180
Gibt es da nicht Intuita?

1445
01:13:40,180 --> 01:13:42,180
Ja, aber ich will ja nicht Ownership zurückgeben.

1446
01:13:42,180 --> 01:13:47,480
Ich will ja nicht Ownership

1447
01:13:47,480 --> 01:13:50,920
zurückgeben, sondern

1448
01:13:50,920 --> 01:13:52,920
einfach nur eine,

1449
01:13:52,920 --> 01:13:54,920
ja,

1450
01:13:54,920 --> 01:13:56,920
jede Menge,

1451
01:13:56,920 --> 01:13:58,920
die Referenzen auf die Elemente

1452
01:13:58,920 --> 01:14:00,920
in diesem,

1453
01:14:00,920 --> 01:14:07,750
in dieser Hashmap.

1454
01:14:07,750 --> 01:14:09,750
So, also, das, was die Seite vorschlägt,

1455
01:14:09,750 --> 01:14:11,750
funzt nicht, weil dann

1456
01:14:11,750 --> 01:14:13,750
returns a value

1457
01:14:13,750 --> 01:14:15,750
referencing data owned by the

1458
01:14:15,750 --> 01:14:20,530
current function.

1459
01:14:20,530 --> 01:14:22,530
Und da bin ich mir nicht sicher, was es mir sagen möchte,

1460
01:14:22,530 --> 01:14:24,530
ehrlich gesagt. Muss ich vielleicht

1461
01:14:24,530 --> 01:14:26,530
das hier erst nochmal, Moment, muss ich sagen

1462
01:14:26,530 --> 01:14:28,530
let m irgendwie so

1463
01:14:28,530 --> 01:14:34,080
und dann, ne, das funktioniert natürlich

1464
01:14:34,080 --> 01:14:36,080
auch nicht. Okay.

1465
01:14:36,080 --> 01:14:38,080
Geht das, also, das habe ich probiert.

1466
01:14:38,080 --> 01:14:42,040
Laut der Seite geht das

1467
01:14:42,040 --> 01:14:44,040
so. Ist das irgendwie,

1468
01:14:44,040 --> 01:14:46,040
ist das irgendwie so eine AI

1469
01:14:46,040 --> 01:14:48,040
generierte Webseite, aber von 2020

1470
01:14:48,040 --> 01:14:50,040
eher nicht. Irgendeine AI

1471
01:14:50,040 --> 01:14:57,000
generierte Webseite.

1472
01:14:57,000 --> 01:14:59,000
Das ist gut. How to implement

1473
01:14:59,000 --> 01:15:01,000
iterator

1474
01:15:01,000 --> 01:15:03,000
over wrapped vector

1475
01:15:03,000 --> 01:15:05,000
in Rust. Genau.

1476
01:15:05,000 --> 01:15:07,000
Hier, wrapped.

1477
01:15:07,000 --> 01:15:09,000
Und jetzt will der, dass man das

1478
01:15:09,000 --> 01:15:11,000
iteraten kann. Genau das will ich.

1479
01:15:11,000 --> 01:15:24,040
Genau so was will ich haben.

1480
01:15:24,040 --> 01:15:26,040
Actual to call it as you described,

1481
01:15:26,040 --> 01:15:28,040
you don't need to implement iterator.

1482
01:15:28,040 --> 01:15:30,040
For it, you just

1483
01:15:30,040 --> 01:15:32,040
need to return the iterator

1484
01:15:32,040 --> 01:15:37,910
of the inner vec.

1485
01:15:37,910 --> 01:15:44,290
Ja, ich habe das schon gesehen, den Link.

1486
01:15:44,290 --> 01:15:49,200
Okay, six hat time.

1487
01:15:49,200 --> 01:15:51,200
Okay, probieren wir das doch mal so aus.

1488
01:15:51,200 --> 01:15:53,200
Das, das sollte doch nicht

1489
01:15:53,200 --> 01:15:58,560
allzu kompliziert sein.

1490
01:15:58,560 --> 01:16:00,560
So, self, jetzt brauchen wir erstmal

1491
01:16:00,560 --> 01:16:06,120
hier den, den, mal probieren,

1492
01:16:06,120 --> 01:16:08,120
blenden wir das mal aus hier, so, zack.

1493
01:16:08,120 --> 01:16:10,120
M.

1494
01:16:10,120 --> 01:16:13,810
M. Iter.

1495
01:16:13,810 --> 01:16:15,810
Funzt nicht, weil

1496
01:16:15,810 --> 01:16:17,810
unelide

1497
01:16:17,810 --> 01:16:19,810
lifetimes.

1498
01:16:19,810 --> 01:16:21,810
What?

1499
01:16:21,810 --> 01:16:30,370
Weiß nicht mehr, was es will von mir.

1500
01:16:30,370 --> 01:16:34,000
Ich lass mal hier den.

1501
01:16:34,000 --> 01:16:37,320
Okay, und jetzt, jetzt geht das?

1502
01:16:37,320 --> 01:16:39,320
Method

1503
01:16:39,320 --> 01:16:41,320
not found. Achso.

1504
01:16:41,320 --> 01:16:46,420
Moment. Ne.

1505
01:16:46,420 --> 01:16:48,420
Returns the value referencing data

1506
01:16:48,420 --> 01:16:50,420
owned by the current function. Okay.

1507
01:16:50,420 --> 01:16:52,420
Das funzt schon mal nicht.

1508
01:16:52,420 --> 01:16:54,420
So, das geht nicht.

1509
01:16:54,420 --> 01:16:56,420
Also, stackoverflow fail.

1510
01:16:56,420 --> 01:16:58,420
Ne, da fehlt

1511
01:16:58,420 --> 01:17:00,420
kein return. Wenn man

1512
01:17:00,420 --> 01:17:02,420
das Semikolon weglässt,

1513
01:17:02,420 --> 01:17:04,420
wird die letzte Zeile

1514
01:17:04,420 --> 01:17:06,420
automatisch als return verwendet.

1515
01:17:06,420 --> 01:17:08,420
Ist auch ein bisschen,

1516
01:17:08,420 --> 01:17:10,420
weiß nicht, bisschen pepeger irgendwie, dass es

1517
01:17:10,420 --> 01:17:14,950
dafür was extra gibt. Aber

1518
01:17:14,950 --> 01:17:25,240
das funktioniert nicht.

1519
01:17:25,240 --> 01:17:27,240
Also, stackoverflow Antwort

1520
01:17:27,240 --> 01:17:29,240
three hat.

1521
01:17:29,240 --> 01:17:31,240
Okay, nächste Antwort.

1522
01:17:31,240 --> 01:17:33,240
Accepted Antwort. Accepted Antwort.

1523
01:17:33,240 --> 01:17:35,240
Weck it self,

1524
01:17:35,240 --> 01:17:37,240
does not implement iterator. However, it

1525
01:17:37,240 --> 01:17:39,240
implements into iterator in three ways.

1526
01:17:39,240 --> 01:17:44,210
You probably wanted

1527
01:17:44,210 --> 01:17:46,210
to implement these for your wrapper as

1528
01:17:46,210 --> 01:17:49,650
well. Ne, into iterator

1529
01:17:49,650 --> 01:17:51,650
will ich schon mal net.

1530
01:17:51,650 --> 01:17:55,480
Deref.

1531
01:17:55,480 --> 01:17:57,480
We deref to slice

1532
01:17:57,480 --> 01:18:01,430
so that we can. Ich,

1533
01:18:01,430 --> 01:18:04,800
was, was bin

1534
01:18:04,800 --> 01:18:09,270
ich überhaupt sehend hier grade?

1535
01:18:09,270 --> 01:18:11,270
Implementier doch den iterator für

1536
01:18:11,270 --> 01:18:13,270
arg iterator, oder bin ich grad dumm?

1537
01:18:13,270 --> 01:18:15,270
Ja, wie denn?

1538
01:18:15,270 --> 01:18:25,140
Alter, was?

1539
01:18:25,140 --> 01:18:27,140
Okay, implement iterator.

1540
01:18:27,140 --> 01:18:29,140
So, so,

1541
01:18:29,140 --> 01:18:31,140
okay. Also so einfach wie stackoverflow

1542
01:18:31,140 --> 01:18:33,140
das macht, geht das schon mal net.

1543
01:18:33,140 --> 01:18:35,140
Also implement iterator

1544
01:18:35,140 --> 01:18:37,140
for registry

1545
01:18:37,140 --> 01:18:39,140
of, äh, t.

1546
01:18:39,140 --> 01:18:50,480
So. Ähm,

1547
01:18:50,480 --> 01:18:52,480
was? Okay,

1548
01:18:52,480 --> 01:18:54,480
item type, type

1549
01:18:54,480 --> 01:18:56,480
item gleich u32.

1550
01:18:56,480 --> 01:19:03,120
Äh,

1551
01:19:03,120 --> 01:19:05,120
ne, mein item type

1552
01:19:05,120 --> 01:19:09,270
ist t. Und dementsprechend

1553
01:19:09,270 --> 01:19:11,270
ist es auch einfach option of t.

1554
01:19:11,270 --> 01:19:13,270
Und das da oben lass ich

1555
01:19:13,270 --> 01:19:26,980
weg. Und was?

1556
01:19:26,980 --> 01:19:28,980
Ich check's nicht, was der hier macht.

1557
01:19:28,980 --> 01:19:30,980
Was soll das, was soll das,

1558
01:19:30,980 --> 01:19:32,980
was soll das, was soll das heißen?

1559
01:19:32,980 --> 01:19:34,980
Oh, ach, man muss

1560
01:19:34,980 --> 01:19:36,980
das? Moment, man braucht das hier?

1561
01:19:36,980 --> 01:19:38,980
Okay, das ist, das ist

1562
01:19:38,980 --> 01:19:40,980
erforderlich. Das geht nicht.

1563
01:19:40,980 --> 01:19:42,980
Hast du Tipps, wie man am besten

1564
01:19:42,980 --> 01:19:44,980
anfangen kann zu programmieren? Ja,

1565
01:19:44,980 --> 01:19:46,980
der beste Tipp ist, du hast irgendwie

1566
01:19:46,980 --> 01:19:48,980
ne coole Idee, was du schon immer mal

1567
01:19:48,980 --> 01:19:50,980
machen wolltest, und suchst dir die beste

1568
01:19:50,980 --> 01:19:52,980
Technologie dafür raus und fängst damit an.

1569
01:19:52,980 --> 01:19:54,980
Weil dann hast du auch immer Motivation, was, äh,

1570
01:19:54,980 --> 01:19:56,980
was zu machen, weil das ja was ist, was du

1571
01:19:56,980 --> 01:19:58,980
letztendlich schon immer mal machen wolltest.

1572
01:19:58,980 --> 01:20:00,980
Also wenn du sagst, ich würd gerne

1573
01:20:00,980 --> 01:20:02,980
Microcontroller programmieren, ne eigene Webseite

1574
01:20:02,980 --> 01:20:04,980
machen, meinen Rollladen hoch

1575
01:20:04,980 --> 01:20:06,980
und runter fahren automatisch,

1576
01:20:06,980 --> 01:20:08,980
das ist natürlich am besten, wenn du so ein Ziel schon im Kopf

1577
01:20:08,980 --> 01:20:10,980
hast. Das ist motivierend.

1578
01:20:10,980 --> 01:20:12,980
Wenn du gar keine Ahnung hast, wie du anfangen

1579
01:20:12,980 --> 01:20:14,980
sollst und einfach nur gucken willst,

1580
01:20:14,980 --> 01:20:16,980
ob das was für dich ist, kann ich dir

1581
01:20:16,980 --> 01:20:18,980
nur empfehlen, lad dir Visual

1582
01:20:18,980 --> 01:20:20,980
Studio Code runter und fang mit JavaScript an.

1583
01:20:20,980 --> 01:20:24,480
JavaScript,

1584
01:20:24,480 --> 01:20:26,480
ein bisschen HTML, CSS, hat

1585
01:20:26,480 --> 01:20:28,480
die mit Abstand niedrigste Einstiegshürde.

1586
01:20:28,480 --> 01:20:30,480
Du brauchst einen ordentlichen Texteditor,

1587
01:20:30,480 --> 01:20:32,480
wie gesagt, nimm Visual Studio Code, ist

1588
01:20:32,480 --> 01:20:34,480
alles out of the box für JavaScript dabei,

1589
01:20:34,480 --> 01:20:36,480
und du brauchst nen Browser.

1590
01:20:36,480 --> 01:20:38,480
Und nen Browser hast du, sonst wärst du ja nicht im Twitch-Chat.

1591
01:20:38,480 --> 01:20:40,480
Und dann legst du los.

1592
01:20:40,480 --> 01:20:50,520
Ich check nicht, was ich

1593
01:20:50,520 --> 01:20:52,520
machen muss, Chat. Was will, was will das hier

1594
01:20:52,520 --> 01:20:59,090
von mir?

1595
01:20:59,090 --> 01:21:01,090
Here we define a sequence using current und next.

1596
01:21:01,090 --> 01:21:06,520
fn next.

1597
01:21:06,520 --> 01:21:08,520
Okay, Option will ich doch gar nicht.

1598
01:21:08,520 --> 01:21:10,520
Oder?

1599
01:21:10,520 --> 01:21:12,520
Ich will einfach t return.

1600
01:21:12,520 --> 01:21:16,980
Ne, das geht nicht.

1601
01:21:16,980 --> 01:21:18,980
Es muss ne Option, es muss ne Option sein.

1602
01:21:18,980 --> 01:21:24,080
So, also, Moment.

1603
01:21:24,080 --> 01:21:32,770
Kann ich nicht...

1604
01:21:32,770 --> 01:21:38,200
Current, next?

1605
01:21:38,200 --> 01:21:41,700
Self, current?

1606
01:21:41,700 --> 01:21:45,200
What? Kann ich nicht das

1607
01:21:45,200 --> 01:21:47,200
einfach re-usen?

1608
01:21:47,200 --> 01:21:49,200
Store?

1609
01:21:49,200 --> 01:21:51,200
Kann ich das nicht einfach re-usen?

1610
01:21:51,200 --> 01:22:04,050
Von...

1611
01:22:04,050 --> 01:22:06,050
Read. Kann ich das nicht einfach re-usen?

1612
01:22:06,050 --> 01:22:08,050
Von dem anderen?

1613
01:22:08,050 --> 01:22:19,300
Und so.

1614
01:22:19,300 --> 01:22:21,300
Die, die

1615
01:22:21,300 --> 01:22:23,300
Referenzen, wobei, brauchen wir

1616
01:22:23,300 --> 01:22:26,870
eigentlich nicht. Dass ich jetzt sagen kann,

1617
01:22:26,870 --> 01:22:34,150
irgendwie, return m

1618
01:22:34,150 --> 01:22:38,680
next.

1619
01:22:38,680 --> 01:22:40,680
Ja, das kann man doch einfach rappen, oder?

1620
01:22:40,680 --> 01:22:50,580
Return n.

1621
01:22:50,580 --> 01:22:52,580
Wobei, ne, ne,

1622
01:22:52,580 --> 01:23:03,320
Moment, Moment.

1623
01:23:03,320 --> 01:23:07,200
Was muss man returnen?

1624
01:23:07,200 --> 01:23:09,200
Hier return, was? Option?

1625
01:23:09,200 --> 01:23:11,200
Option of

1626
01:23:11,200 --> 01:23:13,200
u32t.

1627
01:23:13,200 --> 01:23:15,200
Oh man, was ist denn jetzt?

1628
01:23:15,200 --> 01:23:17,200
Was? Method next?

1629
01:23:17,200 --> 01:23:19,200
Compar...

1630
01:23:19,200 --> 01:23:21,200
Expected...

1631
01:23:21,200 --> 01:23:25,920
Achso, ah, ah, Moment,

1632
01:23:25,920 --> 01:23:29,940
Moment, Moment.

1633
01:23:29,940 --> 01:23:31,940
Was muss ich sagen?

1634
01:23:31,940 --> 01:23:33,940
Wie haben die gesagt? Self?

1635
01:23:33,940 --> 01:23:37,570
Item? Item?

1636
01:23:37,570 --> 01:23:39,570
Ne, wie haben die das hier gemacht?

1637
01:23:39,570 --> 01:23:43,080
Oh man, shit, das ist,

1638
01:23:43,080 --> 01:23:45,080
das ist ja super komplizierter Shit wieder.

1639
01:23:45,080 --> 01:23:57,670
Self, self,

1640
01:23:57,670 --> 01:23:59,670
cross, okay.

1641
01:23:59,670 --> 01:24:01,670
Item.

1642
01:24:01,670 --> 01:24:03,670
Und Item ist quasi

1643
01:24:03,670 --> 01:24:05,670
u32t.

1644
01:24:05,670 --> 01:24:07,670
Okay,

1645
01:24:07,670 --> 01:24:09,670
ist nicht, weil...

1646
01:24:09,670 --> 01:24:11,670
Achso, weil es und,

1647
01:24:11,670 --> 01:24:13,670
es ist und u32

1648
01:24:13,670 --> 01:24:15,670
aus irgendwelchen Gründen

1649
01:24:15,670 --> 01:24:17,670
und ak...

1650
01:24:17,670 --> 01:24:19,670
Alter, what the fuck,

1651
01:24:19,670 --> 01:24:21,670
man.

1652
01:24:21,670 --> 01:24:23,670
Pounds, was? Okay,

1653
01:24:23,670 --> 01:24:28,580
u32. What the hell?

1654
01:24:28,580 --> 01:24:30,580
Alter, Rust,

1655
01:24:30,580 --> 01:24:32,580
man, ich will einfach ne Schleife

1656
01:24:32,580 --> 01:24:34,580
drüber machen. Was will das denn

1657
01:24:34,580 --> 01:24:36,580
von mir?

1658
01:24:36,580 --> 01:24:40,920
Was will das

1659
01:24:40,920 --> 01:24:47,880
von mir, man?

1660
01:24:47,880 --> 01:25:10,390
Oh, fucking shit.

1661
01:25:10,390 --> 01:25:12,390
Ich mein, okay, würde das dann

1662
01:25:12,390 --> 01:25:17,300
prinzipiell überhaupt funktionieren?

1663
01:25:17,300 --> 01:25:22,280
Würde das...

1664
01:25:22,280 --> 01:25:27,960
Ne, all ist auskommentiert.

1665
01:25:27,960 --> 01:25:29,960
Meine Güte. Okay, also,

1666
01:25:29,960 --> 01:25:31,960
was, was, was will das von mir?

1667
01:25:31,960 --> 01:25:37,990
Und.

1668
01:25:37,990 --> 01:25:39,990
Okay, und und ist nicht erlaubt.

1669
01:25:39,990 --> 01:25:41,990
Warum ist und nicht erlaubt? Weil...

1670
01:25:41,990 --> 01:25:43,990
Missing lifetime

1671
01:25:43,990 --> 01:25:47,430
specifier. Okay, Rust,

1672
01:25:47,430 --> 01:25:49,430
hilf mir, Rust, please.

1673
01:25:49,430 --> 01:25:51,430
Was?

1674
01:25:51,430 --> 01:25:53,430
Und not a.

1675
01:25:53,430 --> 01:25:55,430
Monka W.

1676
01:25:55,430 --> 01:26:13,810
Oh.

1677
01:26:13,810 --> 01:26:17,830
So. Okay.

1678
01:26:17,830 --> 01:26:19,830
Okay. Ich habe absolut

1679
01:26:19,830 --> 01:26:21,830
keine Ahnung, was ich da gerade mache.

1680
01:26:21,830 --> 01:26:23,830
Okay, okay. Moment.

1681
01:26:23,830 --> 01:26:25,830
Moment, Leute. Ne, was ist jetzt?

1682
01:26:34,390 --> 01:26:37,890
Leute, man,

1683
01:26:37,890 --> 01:26:39,890
es kann doch nicht so schwer sein.

1684
01:26:39,890 --> 01:26:46,720
Ich habe absolut keine Ahnung, was

1685
01:26:46,720 --> 01:26:55,160
Rust von mir will, man.

1686
01:26:55,160 --> 01:26:57,160
Nehmen wir mal oben das a raus. Hab ich.

1687
01:26:57,160 --> 01:26:59,160
Aber das, das

1688
01:26:59,160 --> 01:27:01,160
geht nicht.

1689
01:27:01,160 --> 01:27:03,160
Dann will er, dann will er nicht, weil

1690
01:27:03,160 --> 01:27:05,160
lifetime specifier

1691
01:27:05,160 --> 01:27:07,160
missing.

1692
01:27:07,160 --> 01:27:09,160
So, und jetzt sagt er mir hier,

1693
01:27:09,160 --> 01:27:11,160
Lifetime a is not constrained by

1694
01:27:11,160 --> 01:27:13,160
the infiltrate self type

1695
01:27:13,160 --> 01:27:15,160
or predicates.

1696
01:27:15,160 --> 01:27:17,160
Alles klar, jetzt

1697
01:27:17,160 --> 01:27:19,160
sofort. Muss man vielleicht so machen?

1698
01:27:19,160 --> 01:27:21,160
Hier so?

1699
01:27:21,160 --> 01:27:25,110
Ne. Ich habe keine

1700
01:27:25,110 --> 01:27:27,110
Ahnung, man. Alter, Rust.

1701
01:27:27,110 --> 01:27:29,110
Ich mache Fuck teilweise ja so krass ab, ey.

1702
01:27:29,110 --> 01:27:33,830
Also, ich habe, ich habe wirklich,

1703
01:27:33,830 --> 01:27:35,830
ich habe absolut keine Ahnung, was das Ding von mir

1704
01:27:35,830 --> 01:27:48,420
will, man. Du musst es auch

1705
01:27:48,420 --> 01:27:50,420
embracen, naja.

1706
01:27:50,420 --> 01:27:52,420
Massive Embracing am Start.

1707
01:27:52,420 --> 01:28:03,030
Okay, keine Ahnung.

1708
01:28:03,030 --> 01:28:05,030
Wir gucken mal, wir gucken mal weiter.

1709
01:28:05,030 --> 01:28:07,030
Also, das funzt ja schon mal nett.

1710
01:28:07,030 --> 01:28:11,490
Wie das hier.

1711
01:28:11,490 --> 01:28:13,490
Was haben wir denn sonst noch so zur Auswahl?

1712
01:28:13,490 --> 01:28:15,490
Impel deref

1713
01:28:15,490 --> 01:28:17,490
for binary. Okay, dann probier, okay.

1714
01:28:17,490 --> 01:28:19,490
Wenn das mit dem iterator nicht funktioniert, dann probieren wir

1715
01:28:19,490 --> 01:28:21,490
einfach was anderes.

1716
01:28:21,490 --> 01:28:23,490
For registry

1717
01:28:23,490 --> 01:28:31,600
T. Probier mal, Moment,

1718
01:28:31,600 --> 01:28:33,600
was? Moment, wo soll ich

1719
01:28:33,600 --> 01:28:35,600
das, wo soll ich das probieren?

1720
01:28:35,600 --> 01:28:37,600
Wir kommentieren das mal aus, weil, vielleicht brauchen wir

1721
01:28:37,600 --> 01:28:39,600
das gleich nochmal. Probier mal

1722
01:28:39,600 --> 01:28:41,600
self next

1723
01:28:41,600 --> 01:28:43,600
map. What?

1724
01:28:43,600 --> 01:28:49,730
Was, Zeile 26?

1725
01:28:49,730 --> 01:29:04,720
Fifetime.

1726
01:29:04,720 --> 01:29:26,600
Ist ja nicht self, ist ja nur M.

1727
01:29:26,600 --> 01:29:28,600
C++ Level Types würde ich

1728
01:29:28,600 --> 01:29:30,600
sagen, ey.

1729
01:29:30,600 --> 01:29:32,600
So, so, das wird jetzt auskommentiert.

1730
01:29:32,600 --> 01:29:34,600
Okay, next.

1731
01:29:34,600 --> 01:29:36,600
Also, probier mal das mit dem deref.

1732
01:29:36,600 --> 01:29:38,600
Implement deref

1733
01:29:38,600 --> 01:29:40,600
for, okay, T

1734
01:29:40,600 --> 01:29:42,600
registry

1735
01:29:42,600 --> 01:29:44,600
T

1736
01:29:44,600 --> 01:29:48,420
output.

1737
01:29:48,420 --> 01:30:19,640
Moment.

1738
01:30:19,640 --> 01:30:23,330
Das sind die Elemente.

1739
01:30:23,330 --> 01:30:28,180
Das sind, das sind die Elemente.

1740
01:30:28,180 --> 01:30:30,180
Also, mein Element ist

1741
01:30:30,180 --> 01:30:32,180
Output ist

1742
01:30:32,180 --> 01:30:34,180
dann ein

1743
01:30:34,180 --> 01:30:36,180
U32

1744
01:30:36,180 --> 01:30:51,780
Vector of T.

1745
01:30:51,780 --> 01:30:56,370
Self?

1746
01:30:56,370 --> 01:30:58,370
Warum hat er hier noch ein

1747
01:30:58,370 --> 01:31:00,370
und davor? Warum ist hier, warum ist hier

1748
01:31:00,370 --> 01:31:02,370
nochmal ein und davor?

1749
01:31:02,370 --> 01:31:04,370
Ich check's nicht.

1750
01:31:04,370 --> 01:31:08,070
Okay, self

1751
01:31:08,070 --> 01:31:14,260
store?

1752
01:31:14,260 --> 01:31:16,260
Achso, ja, Moment, Moment,

1753
01:31:16,260 --> 01:31:20,080
Hä? Moment,

1754
01:31:20,080 --> 01:31:22,080
deref ist gar nicht importiert.

1755
01:31:22,080 --> 01:31:30,130
Okay, nice. Das gibt's

1756
01:31:30,130 --> 01:31:32,130
überhaupt nicht.

1757
01:31:32,130 --> 01:31:34,130
Output is not member.

1758
01:31:34,130 --> 01:31:36,130
Implement members. Ja, ganz

1759
01:31:36,130 --> 01:31:38,130
toll. Target.

1760
01:31:38,130 --> 01:31:40,130
Heißt das jetzt Target? Wurde das, wurde das

1761
01:31:40,130 --> 01:31:45,880
unbenannt, oder wie? Moment,

1762
01:31:45,880 --> 01:31:47,880
was, was macht deref eigentlich?

1763
01:31:47,880 --> 01:31:49,880
Deref. Rust.

1764
01:31:49,880 --> 01:31:55,170
Was zum?

1765
01:31:55,170 --> 01:31:57,170
Alter.

1766
01:31:57,170 --> 01:31:59,170
Ich will einfach nur ne Schleife

1767
01:31:59,170 --> 01:32:01,170
da drüber machen können, Mann.

1768
01:32:01,170 --> 01:32:07,240
Ist das so kompliziert

1769
01:32:07,240 --> 01:32:09,240
in fucking Rust ne Schleife zu machen?

1770
01:32:09,240 --> 01:32:15,300
Type targets.

1771
01:32:15,300 --> 01:32:17,300
Sized.

1772
01:32:17,300 --> 01:32:24,520
Target self.

1773
01:32:24,520 --> 01:32:26,520
Okay, okay.

1774
01:32:26,520 --> 01:32:28,520
Type T. Type T.

1775
01:32:28,520 --> 01:32:30,520
Okay. Type T. Sehr gut.

1776
01:32:30,520 --> 01:32:32,520
Excellent.

1777
01:32:32,520 --> 01:32:34,520
Deref

1778
01:32:34,520 --> 01:32:36,520
self target.

1779
01:32:36,520 --> 01:32:38,520
Aus welchen Gründen auch

1780
01:32:38,520 --> 01:32:40,520
immer, ähm,

1781
01:32:40,520 --> 01:32:44,020
reference. Und jetzt

1782
01:32:44,020 --> 01:32:54,760
self store.

1783
01:32:54,760 --> 01:32:56,760
Was ich programmiere? Eine Schleife

1784
01:32:56,760 --> 01:32:58,760
in Rust für nen eigenen

1785
01:32:58,760 --> 01:33:00,760
Typ, aber aus irgendwelchen

1786
01:33:00,760 --> 01:33:02,760
Gründen mag Rust das,

1787
01:33:02,760 --> 01:33:04,760
das nicht wirklich.

1788
01:33:04,760 --> 01:33:06,760
Also.

1789
01:33:06,760 --> 01:33:08,760
Und, und jetzt

1790
01:33:08,760 --> 01:33:10,760
Ether oder so? Ne, ne, ne, Moment. Store.

1791
01:33:10,760 --> 01:33:12,760
Unwrap. Ah, ne, Moment, Moment. Self

1792
01:33:12,760 --> 01:33:14,760
store get. Hä?

1793
01:33:14,760 --> 01:33:16,760
Sekunde. Bin verwirrt.

1794
01:33:16,760 --> 01:33:18,760
Self store.

1795
01:33:18,760 --> 01:33:22,390
Read. Ach, read. Read.

1796
01:33:22,390 --> 01:33:24,390
Read. Unwrap.

1797
01:33:24,390 --> 01:33:32,240
Oh, das wird so nicht funktionieren.

1798
01:33:32,240 --> 01:33:39,140
Expected but

1799
01:33:39,140 --> 01:33:41,140
found it.

1800
01:33:41,140 --> 01:33:50,340
Mann! Wie,

1801
01:33:50,340 --> 01:33:52,340
wofür machst du das überhaupt? Lass die Wrapper-Funktion

1802
01:33:52,340 --> 01:33:54,340
weg. Ich will ne Schleife

1803
01:33:54,340 --> 01:33:58,610
machen da drüber, Mann.

1804
01:33:58,610 --> 01:34:00,610
Oh, das geht ja nicht. Irgendwo hier, irgendwie

1805
01:34:00,610 --> 01:34:02,610
hier, muss der Kram

1806
01:34:02,610 --> 01:34:06,440
mehr da dran kommen. Am liebsten,

1807
01:34:06,440 --> 01:34:08,440
am liebsten hätte ich

1808
01:34:08,440 --> 01:34:10,440
ne Funktion, die, die irgendwie

1809
01:34:10,440 --> 01:34:16,180
all oder so heißt.

1810
01:34:16,180 --> 01:34:18,180
DREF hat nix mit ner Schleife zu tun. Laut

1811
01:34:18,180 --> 01:34:20,180
StackOverflow schon. Hier will auch

1812
01:34:20,180 --> 01:34:22,180
ein Typ ne Schleife machen.

1813
01:34:22,180 --> 01:34:24,180
Und er schlägt vor, dass man das

1814
01:34:24,180 --> 01:34:26,180
entweder so macht, so macht oder so

1815
01:34:26,180 --> 01:34:28,180
macht. Moment.

1816
01:34:30,180 --> 01:34:32,180
Der Typ transferiert.

1817
01:34:32,180 --> 01:34:34,180
Ne, der Typ, der Typ, ähm.

1818
01:34:34,180 --> 01:34:41,430
Wartet mal. Was hatten

1819
01:34:41,430 --> 01:34:47,170
wir da vor? Moment, wie

1820
01:34:47,170 --> 01:34:49,170
lang war das gerade nochmal hier unten?

1821
01:34:49,170 --> 01:34:54,980
Iterator next?

1822
01:34:54,980 --> 01:34:59,510
Ne! Hab ich doch!

1823
01:34:59,510 --> 01:35:01,510
Das ist doch das allererste, was ich gemacht hab hier unten.

1824
01:35:01,510 --> 01:35:03,510
Das funktioniert nicht.

1825
01:35:03,510 --> 01:35:05,510
Das funktioniert nicht.

1826
01:35:05,510 --> 01:35:09,140
Das ist das allererste, was ich probiert hab.

1827
01:35:09,140 --> 01:35:15,080
Das, das klappt nicht.

1828
01:35:15,080 --> 01:35:17,080
Ich mein, kann ich nicht, kann ich nicht einfach sowas

1829
01:35:17,080 --> 01:35:23,080
hier machen? Oh.

1830
01:35:23,080 --> 01:35:25,080
Wir klauen das jetzt einfach von hier.

1831
01:35:25,080 --> 01:35:29,350
Der sagt ja bestimmt, dass es nicht

1832
01:35:29,350 --> 01:35:33,040
matcht, oder? Er ist ein

1833
01:35:33,040 --> 01:35:38,720
incompatible Type.

1834
01:35:38,720 --> 01:35:40,720
Was ist das da vorne überhaupt? Kann das mal weg?

1835
01:35:40,720 --> 01:35:44,160
Äh, er ist incompatible.

1836
01:35:44,160 --> 01:35:47,480
Okay. Moment. T?

1837
01:35:47,480 --> 01:35:49,480
Moment, Moment, Moment, Moment.

1838
01:35:49,480 --> 01:35:51,480
Target T ergibt ja auch überhaupt keinen Sinn.

1839
01:35:51,480 --> 01:35:53,480
Target

1840
01:35:53,480 --> 01:35:55,480
ist was? Target?

1841
01:35:55,480 --> 01:35:57,480
Ne, Output. Was?

1842
01:35:57,480 --> 01:36:05,270
Das stimmt doch nicht einmal überhaupt hier.

1843
01:36:05,270 --> 01:36:24,960
Target ist was?

1844
01:36:24,960 --> 01:36:26,960
Target ist das, was man zurückgibt, oder?

1845
01:36:26,960 --> 01:36:30,340
Also, im Prinzip

1846
01:36:30,340 --> 01:36:32,340
ein

1847
01:36:32,340 --> 01:36:37,250
Okay, was haben wir denn hier bei?

1848
01:36:37,250 --> 01:36:51,480
Bei Keys?

1849
01:36:51,480 --> 01:36:53,480
Ja, fuck man.

1850
01:36:53,480 --> 01:36:55,480
Was ist beim ersten Ansatz mit der Hashmap?

1851
01:36:55,480 --> 01:36:57,480
Du meinst das da unten?

1852
01:36:57,480 --> 01:36:59,480
Was, den Iterator muss ich klonen?

1853
01:36:59,480 --> 01:37:01,480
Man kann den klonen? Okay.

1854
01:37:01,480 --> 01:37:06,770
Nice.

1855
01:37:06,770 --> 01:37:10,600
Ne, ne, ne, ne.

1856
01:37:10,600 --> 01:37:12,600
Cannot return values

1857
01:37:12,600 --> 01:37:14,600
referencing local variable m returns

1858
01:37:14,600 --> 01:37:18,680
value. Nope.

1859
01:37:18,680 --> 01:37:26,340
Du musst die Referenz zur

1860
01:37:26,340 --> 01:37:28,340
Hashmap klonen. Die was

1861
01:37:28,340 --> 01:37:32,100
bitte? Die Referenz?

1862
01:37:32,100 --> 01:37:40,080
Was soll ich klonen?

1863
01:37:40,080 --> 01:37:42,080
m.clone

1864
01:37:42,080 --> 01:37:44,080
Ja, Moment. Dann klone ich

1865
01:37:44,080 --> 01:37:46,080
die Hashmap. Das will ich doch nicht.

1866
01:37:46,080 --> 01:37:48,080
Ich will doch nicht die

1867
01:37:48,080 --> 01:37:50,080
Das ist doch das allererste, was ich gemacht

1868
01:37:50,080 --> 01:37:52,080
hab. Das ist doch das

1869
01:37:52,080 --> 01:37:54,080
allererste, was ich gemacht hab.

1870
01:37:54,080 --> 01:37:56,080
Dass das geht ist klar, aber dann erstellt er doch

1871
01:37:56,080 --> 01:37:58,080
ne neue Hashmap. Das ist doch komplett für'n Arsch.

1872
01:37:58,080 --> 01:38:00,080
Der soll keine neue Hashmap erstellen?

1873
01:38:00,080 --> 01:38:02,080
Das ist doch das allererste, was

1874
01:38:02,080 --> 01:38:04,080
ich gemacht hab. Das hat auch funktioniert.

1875
01:38:04,080 --> 01:38:06,080
Aber

1876
01:38:06,080 --> 01:38:08,080
das ist doch bescheuert. Ich will doch nicht ne komplett

1877
01:38:08,080 --> 01:38:10,080
neue Hashmap anlegen, wenn ich einfach nur die

1878
01:38:10,080 --> 01:38:12,080
Elemente durchlaufen will von der schon bestehenden

1879
01:38:12,080 --> 01:38:14,080
Hashmap. Warum soll ich das machen?

1880
01:38:14,080 --> 01:38:16,080
Das funktioniert.

1881
01:38:16,080 --> 01:38:18,080
Das hab ich schon ausprobiert. Das funktioniert.

1882
01:38:18,080 --> 01:38:21,650
Das ist überhaupt kein Problem. Guck, das

1883
01:38:21,650 --> 01:38:23,650
geht. Das ist das allererste, was

1884
01:38:23,650 --> 01:38:25,650
ich gemacht hab.

1885
01:38:25,650 --> 01:38:27,650
Ich will ne Schleife machen, Mann.

1886
01:38:27,650 --> 01:38:29,650
Ne Schleife. Eine

1887
01:38:29,650 --> 01:38:31,650
stinknormale Schleife über nen Custom

1888
01:38:31,650 --> 01:38:33,650
Typ. Und ich hab keine Ahnung, wie man das

1889
01:38:33,650 --> 01:38:41,510
in Rust gescheit macht.

1890
01:38:41,510 --> 01:38:47,060
Also das ist schon mal nix.

1891
01:38:47,060 --> 01:38:49,060
Ja, genau. Ich will ne Schleife machen. Guck,

1892
01:38:49,060 --> 01:38:51,060
ich will vor...

1893
01:38:51,060 --> 01:38:53,060
Ja, keine Ahnung. Vor Blub

1894
01:38:53,060 --> 01:38:55,060
in... Alter.

1895
01:38:55,060 --> 01:38:57,060
Oh, das will ich machen können.

1896
01:38:57,060 --> 01:38:59,060
Okay?

1897
01:38:59,060 --> 01:39:01,060
So, und das geht nicht, weil

1898
01:39:01,060 --> 01:39:03,060
it's not a Iterator.

1899
01:39:03,060 --> 01:39:05,060
Okay, alles klar. Iterator

1900
01:39:05,060 --> 01:39:07,060
implementieren. Hab ich absolut

1901
01:39:07,060 --> 01:39:09,060
keine Ahnung gehabt, was der von mir will.

1902
01:39:09,060 --> 01:39:14,360
Und was sie

1903
01:39:14,360 --> 01:39:16,360
hier auch immer mit DREF wollen, ich hab auch

1904
01:39:16,360 --> 01:39:18,360
keine Ahnung. Okay, wir machen jetzt einfach

1905
01:39:18,360 --> 01:39:20,360
mal... Wir suchen jetzt

1906
01:39:20,360 --> 01:39:22,360
Rust DREF Vector

1907
01:39:22,360 --> 01:39:24,360
Wrapped.

1908
01:39:24,360 --> 01:39:26,360
Was

1909
01:39:26,360 --> 01:39:28,360
hast du lieber? C++ oder Rust?

1910
01:39:28,360 --> 01:39:30,360
Ey, auf keinen Fall

1911
01:39:30,360 --> 01:39:32,360
C++, aber Rust in dem Fall jetzt gerade

1912
01:39:32,360 --> 01:39:34,360
auch nicht. How to create a

1913
01:39:34,360 --> 01:39:36,360
new instance of Wrapped Vector

1914
01:39:36,360 --> 01:39:42,740
in Rust. Oh, was

1915
01:39:42,740 --> 01:39:52,260
ist das? Pfeifertime.

1916
01:39:52,260 --> 01:39:54,260
After the creation of such an object

1917
01:39:54,260 --> 01:39:56,260
you can use the object somewhat

1918
01:39:56,260 --> 01:39:58,260
transparently by implementing

1919
01:39:58,260 --> 01:40:00,260
DREF.

1920
01:40:00,260 --> 01:40:02,260
Moment, hier ist Target?

1921
01:40:02,260 --> 01:40:04,260
Wait a minute.

1922
01:40:04,260 --> 01:40:06,260
Hier ist Target nicht T,

1923
01:40:06,260 --> 01:40:14,050
sondern... Moment.

1924
01:40:14,050 --> 01:40:19,090
Return self

1925
01:40:19,090 --> 01:40:21,090
store. Ne, und.

1926
01:40:21,090 --> 01:40:25,240
Und self store.

1927
01:40:25,240 --> 01:40:27,240
Moin, Kirolo.

1928
01:40:27,240 --> 01:40:31,440
Was für ein Typ ist das jetzt?

1929
01:40:31,440 --> 01:40:34,760
Alter, kann der nicht mal den Typ davon

1930
01:40:34,760 --> 01:40:36,760
ordentlich ableiten, oder was?

1931
01:40:36,760 --> 01:40:38,760
Das ist ein hier

1932
01:40:38,760 --> 01:40:40,760
LWLog, Hashmap, irgendwas.

1933
01:40:40,760 --> 01:40:42,760
Aber und? Und?

1934
01:40:42,760 --> 01:40:48,120
Okay. Ja, ja.

1935
01:40:48,120 --> 01:40:50,120
So.

1936
01:40:50,120 --> 01:40:53,880
So. Shit. Fast.

1937
01:40:53,880 --> 01:40:55,880
Fast.

1938
01:40:55,880 --> 01:41:04,600
LWLog

1939
01:41:04,600 --> 01:41:08,870
Hashmap?

1940
01:41:08,870 --> 01:41:10,870
Ah, ne. Und self.

1941
01:41:10,870 --> 01:41:15,840
Kann ich nicht einfach

1942
01:41:15,840 --> 01:41:17,840
so das ganze Ding returnen?

1943
01:41:17,840 --> 01:41:19,840
Ne, das geht

1944
01:41:19,840 --> 01:41:23,990
nicht. Über den internen,

1945
01:41:23,990 --> 01:41:25,990
über meine interne Hashmap.

1946
01:41:25,990 --> 01:41:27,990
Ich habe eine interne Hashmap

1947
01:41:27,990 --> 01:41:29,990
gerapped quasi

1948
01:41:29,990 --> 01:41:31,990
in einem eigenen Struct und ich will

1949
01:41:31,990 --> 01:41:33,990
über meinen Struct iteraten.

1950
01:41:33,990 --> 01:41:35,990
Angeblich stimmt das so.

1951
01:41:35,990 --> 01:41:55,490
Ne, natürlich. Was?

1952
01:41:55,490 --> 01:41:57,490
Man.

1953
01:41:57,490 --> 01:41:59,490
Ey, super, jetzt kompiliert er so eine Fehler, aber

1954
01:41:59,490 --> 01:42:01,490
gehen, gehen

1955
01:42:01,490 --> 01:42:03,490
tut es trotzdem nicht.

1956
01:42:03,490 --> 01:42:25,110
Und die Funktion gibt es hier nicht.

1957
01:42:25,110 --> 01:42:34,950
Okay, und was war jetzt der Sinn

1958
01:42:34,950 --> 01:42:36,950
davon? Gibt es wenigstens DREF?

1959
01:42:36,950 --> 01:42:48,580
Ah, DREF gibt es, okay.

1960
01:42:48,580 --> 01:42:55,670
Wait a minute. Was?

1961
01:42:55,670 --> 01:42:57,670
Ich weiß nicht, ob ich DREF brauche.

1962
01:42:57,670 --> 01:43:19,350
Das hat irgendjemand aus der Gamerflow vorgeschlagen.

1963
01:43:19,350 --> 01:43:23,560
Und jetzt?

1964
01:43:23,560 --> 01:43:25,560
Ey, Leute, ich habe keine Ahnung, was ist das für ein Scheiß.

1965
01:43:25,560 --> 01:43:31,620
Übrigens die Rotzsprache, Alter.

1966
01:43:31,620 --> 01:43:33,620
A read? Was?

1967
01:43:33,620 --> 01:43:35,620
Read?

1968
01:43:35,620 --> 01:43:37,620
Und was will der hier von mir? Read?

1969
01:43:37,620 --> 01:43:39,620
Log result?

1970
01:43:39,620 --> 01:43:41,620
Ach so.

1971
01:43:43,620 --> 01:43:45,620
Moment, Moment, weil ich

1972
01:43:45,620 --> 01:43:49,320
Wait a minute.

1973
01:43:49,320 --> 01:43:53,140
Weil ich ja das

1974
01:43:53,140 --> 01:43:55,140
returne mit dem Log.

1975
01:43:55,140 --> 01:43:58,770
Sag bloß, wenn das hier

1976
01:43:58,770 --> 01:44:00,770
Wait a minute. Ich wollte mir jetzt erzählen,

1977
01:44:00,770 --> 01:44:02,770
das funktioniert, oder was?

1978
01:44:02,770 --> 01:44:04,770
What the fuck, Alter?

1979
01:44:16,470 --> 01:44:18,470
Ich habe, Alter.

1980
01:44:18,470 --> 01:44:20,470
Was bin ich

1981
01:44:20,470 --> 01:44:23,910
sehend überhaupt, Mann?

1982
01:44:23,910 --> 01:44:25,910
Das geht auf jeden Fall besser.

1983
01:44:25,910 --> 01:44:27,910
Ich habe keine Ahnung, was es überhaupt,

1984
01:44:27,910 --> 01:44:33,080
was mir das überhaupt sagen soll, Mann.

1985
01:44:33,080 --> 01:44:35,080
What the fuck?

1986
01:44:35,080 --> 01:44:46,200
What?

1987
01:44:46,200 --> 01:44:48,200
Was ist der Hashmap Iter?

1988
01:44:48,200 --> 01:44:50,200
Naja, ein Iterator über den Typ in der Hashmap.

1989
01:44:50,200 --> 01:44:55,110
Also der Typ ist das hier, guck.

1990
01:44:55,110 --> 01:44:59,000
Das da.

1991
01:44:59,000 --> 01:45:01,000
Ich habe keine Ahnung, was ich hier gemacht habe,

1992
01:45:01,000 --> 01:45:03,000
warum es kompiliert und was ich jetzt,

1993
01:45:03,000 --> 01:45:05,000
was das überhaupt tut unter der Haube.

1994
01:45:05,000 --> 01:45:10,870
Okay.

1995
01:45:10,870 --> 01:45:16,230
What the fuck, Alter?

1996
01:45:16,230 --> 01:45:18,230
Ich verstehe es auch nicht.

1997
01:45:18,230 --> 01:45:20,230
Mach dir nichts draus.

1998
01:45:20,230 --> 01:45:22,230
Okay, Chatgear ist pfeifert.

1999
01:45:22,230 --> 01:45:24,230
Ich glaube im Next von dem Iterator implementiert

2000
01:45:24,230 --> 01:45:26,230
musst du nur argsref

2001
01:45:26,230 --> 01:45:28,230
Okay, dann.

2002
01:45:28,230 --> 01:45:30,230
Wenn ich das nur, nur das machen muss.

2003
01:45:30,230 --> 01:45:32,230
Easy.

2004
01:45:32,230 --> 01:45:35,990
Es holt den RW-Log

2005
01:45:35,990 --> 01:45:37,990
umwrapt den Read Access Iterator.

2006
01:45:37,990 --> 01:45:39,990
Ja, ja, ja. Im Prinzip habe ich damit

2007
01:45:39,990 --> 01:45:41,990
die Hashtag...

2008
01:45:41,990 --> 01:45:43,990
Im Prinzip könnte ich auch so...

2009
01:45:43,990 --> 01:45:45,990
Das ist nichts anderes, Mann.

2010
01:45:45,990 --> 01:45:47,990
Wie direkt auf die

2011
01:45:47,990 --> 01:45:49,990
auf die Struct-Variable zugreifen

2012
01:45:49,990 --> 01:45:51,990
im Endeffekt. Also

2013
01:45:51,990 --> 01:45:59,010
eigentlich komplett unsinnig.

2014
01:45:59,010 --> 01:46:01,010
Okay. Implement Iterator for Registry.

2015
01:46:01,010 --> 01:46:06,880
So, was muss ich?

2016
01:46:06,880 --> 01:46:08,880
Was? Moment, was muss ich machen?

2017
01:46:08,880 --> 01:46:10,880
argsref

2018
01:46:10,880 --> 01:46:12,880
Was? Wo? Wie?

2019
01:46:12,880 --> 01:46:16,770
Wo muss ich hier was machen?

2020
01:46:16,770 --> 01:46:18,770
Musst du nur argsref

2021
01:46:18,770 --> 01:46:20,770
Hashmap fällt vom Struct.

2022
01:46:20,770 --> 01:46:22,770
Okay, args... Alles klar, alles klar. Easy, easy.

2023
01:46:22,770 --> 01:46:24,770
argsref

2024
01:46:24,770 --> 01:46:26,770
sref

2025
01:46:26,770 --> 01:46:28,770
self

2026
01:46:28,770 --> 01:46:34,070
store

2027
01:46:34,070 --> 01:46:36,070
ähm

2028
01:46:36,070 --> 01:46:38,070
read

2029
01:46:38,070 --> 01:46:42,600
unwrap

2030
01:46:42,600 --> 01:46:44,600
Das ist der...

2031
01:46:44,600 --> 01:46:46,600
Das funktioniert nicht.

2032
01:46:46,600 --> 01:46:48,600
Chat, ich bin froh, dass ihr auch nicht schlauer seid

2033
01:46:48,600 --> 01:46:50,600
wie ich, was das angeht.

2034
01:46:50,600 --> 01:46:52,600
Also hier weiß er noch nicht mal

2035
01:46:52,600 --> 01:46:54,600
was die Referenz überhaupt ist.

2036
01:46:54,600 --> 01:46:56,600
Es ist B auf

2037
01:46:56,600 --> 01:46:58,600
unknown. Alles klar.

2038
01:46:58,600 --> 01:47:02,290
Ich mein,

2039
01:47:02,290 --> 01:47:04,290
es kann doch nicht so schwer

2040
01:47:04,290 --> 01:47:11,890
sein.

2041
01:47:11,890 --> 01:47:13,890
Das hier ist die Hashmap, doch.

2042
01:47:13,890 --> 01:47:15,890
Ah ne, das ist das

2043
01:47:15,890 --> 01:47:17,890
Varmalett-Map gleich.

2044
01:47:17,890 --> 01:47:19,890
Ah ne, es ist die

2045
01:47:19,890 --> 01:47:21,890
LW-Lockguard.

2046
01:47:21,890 --> 01:47:23,890
ähm

2047
01:47:23,890 --> 01:47:25,890
Das da ist die Hashmap. Zumindest

2048
01:47:25,890 --> 01:47:27,890
eine Referenz auf die Hashmap.

2049
01:47:27,890 --> 01:47:31,650
Aber das checkt er trotzdem nicht.

2050
01:47:31,650 --> 01:47:33,650
mismatch

2051
01:47:33,650 --> 01:47:35,650
expected

2052
01:47:35,650 --> 01:47:38,960
arg

2053
01:47:38,960 --> 01:47:40,960
Was, was, was, was expectet er?

2054
01:47:40,960 --> 01:47:42,960
Expected und...

2055
01:47:42,960 --> 01:47:44,960
Ne, ne, ne. Okay, so funktioniert das schon mal nicht.

2056
01:47:44,960 --> 01:47:48,790
Chat, ne, ne, ne.

2057
01:47:48,790 --> 01:47:50,790
Klappt das nicht. So klappt das nicht.

2058
01:47:52,790 --> 01:47:54,790
Ich hab wirklich keine Ahnung, wie es funktioniert.

2059
01:47:54,790 --> 01:47:56,790
Echt nicht. Kein, kein

2060
01:47:56,790 --> 01:48:02,470
Schimmer. Okay, wir suchen

2061
01:48:02,470 --> 01:48:04,470
wieso noch mal stack... rust

2062
01:48:04,470 --> 01:48:06,470
iterator

2063
01:48:06,470 --> 01:48:08,470
implement iterator

2064
01:48:08,470 --> 01:48:10,470
rust

2065
01:48:10,470 --> 01:48:12,470
iterators. Rust by example.

2066
01:48:12,470 --> 01:48:14,470
Ja, das, Moment. Das, das

2067
01:48:14,470 --> 01:48:16,470
example habe ich ja schon

2068
01:48:16,470 --> 01:48:18,470
wrapped Hashmap.

2069
01:48:18,470 --> 01:48:26,070
Okay, genau das. Hier.

2070
01:48:26,070 --> 01:48:28,070
Der hat ne Hashmap

2071
01:48:28,070 --> 01:48:30,070
in nem struct.

2072
01:48:30,070 --> 01:48:37,090
Und jetzt will er für sein struct

2073
01:48:37,090 --> 01:48:39,090
Jetzt will er für sein struct

2074
01:48:39,090 --> 01:48:47,080
äh

2075
01:48:47,080 --> 01:48:50,520
response

2076
01:48:50,520 --> 01:48:54,080
ah, response headers

2077
01:48:54,080 --> 01:48:56,080
will er, will er das... Okay, genau das.

2078
01:48:56,080 --> 01:48:58,080
Im Prinzip, im Prinzip genau das

2079
01:48:58,080 --> 01:49:00,080
was ähm

2080
01:49:00,080 --> 01:49:02,080
was ich auch machen will.

2081
01:49:02,080 --> 01:49:04,080
You are doing right, was

2082
01:49:04,080 --> 01:49:06,080
was you are doing right now is

2083
01:49:06,080 --> 01:49:08,080
delegating to the into iterator

2084
01:49:08,080 --> 01:49:10,080
implement, but you need to delegate

2085
01:49:10,080 --> 01:49:12,080
to the into iterator

2086
01:49:12,080 --> 01:49:14,080
implementation of

2087
01:49:14,080 --> 01:49:16,080
und Hashmap string.

2088
01:49:16,080 --> 01:49:18,080
Because you can't get

2089
01:49:18,080 --> 01:49:20,080
an own version

2090
01:49:20,080 --> 01:49:22,080
Ja, ja, ja. This is easy

2091
01:49:22,080 --> 01:49:24,080
to fix. Thankfully.

2092
01:49:24,080 --> 01:49:26,080
Leute. Easy.

2093
01:49:26,080 --> 01:49:28,080
Es ist easy to fix.

2094
01:49:28,080 --> 01:49:33,760
Alles klar.

2095
01:49:33,760 --> 01:49:35,760
Easy to fix.

2096
01:49:35,760 --> 01:49:41,960
Dann machen wir das doch mal.

2097
01:49:41,960 --> 01:49:43,960
Easy to fix. Let's go.

2098
01:49:43,960 --> 01:49:45,960
Easy.

2099
01:49:45,960 --> 01:49:47,960
For

2100
01:49:47,960 --> 01:49:49,960
ähm

2101
01:49:49,960 --> 01:49:51,960
Wait a minute. For

2102
01:49:51,960 --> 01:49:55,970
registry of

2103
01:49:55,970 --> 01:49:59,600
T

2104
01:49:59,600 --> 01:50:01,600
Okay.

2105
01:50:01,600 --> 01:50:03,600
Was ist das eigentlich für hässliche Sachen wieder?

2106
01:50:03,600 --> 01:50:07,240
Irgendwelche Lifetime

2107
01:50:07,240 --> 01:50:09,240
Sachen. Okay.

2108
01:50:09,240 --> 01:50:15,940
Item type. Ach, hier oben.

2109
01:50:15,940 --> 01:50:17,940
Header map.

2110
01:50:17,940 --> 01:50:19,940
Item type ist

2111
01:50:19,940 --> 01:50:21,940
Hash. Okay.

2112
01:50:21,940 --> 01:50:23,940
Ich kopiere das mal.

2113
01:50:23,940 --> 01:50:25,940
U32 of T. Ja gut. Das ähm

2114
01:50:25,940 --> 01:50:27,940
Das funktioniert so nicht.

2115
01:50:27,940 --> 01:50:34,070
Not member of

2116
01:50:34,070 --> 01:50:36,070
Okay.

2117
01:50:36,070 --> 01:50:38,070
Kann man das vielleicht hier irgendwie reinpappen?

2118
01:50:38,070 --> 01:50:40,070
Nein.

2119
01:50:40,070 --> 01:50:42,070
Kann man das irgendwie

2120
01:50:42,070 --> 01:50:44,070
hier reinpappen? Nein.

2121
01:50:44,070 --> 01:50:46,070
Okay.

2122
01:50:46,070 --> 01:50:48,070
Es ist ja auch wurscht. Wir können das copy-pasten.

2123
01:50:48,070 --> 01:50:50,070
Was ich da mache, das frage ich mich auch.

2124
01:50:50,070 --> 01:50:56,000
Header map.

2125
01:50:56,000 --> 01:50:58,000
Okay. Okay. Das ist das. Okay.

2126
01:50:58,000 --> 01:51:00,000
Alles klar.

2127
01:51:00,000 --> 01:51:02,000
Okay. Ja.

2128
01:51:02,000 --> 01:51:04,000
Nice. Nice. Nice. Okay. Ja.

2129
01:51:04,000 --> 01:51:06,000
Mhm. Mhm.

2130
01:51:06,000 --> 01:51:08,000
Und self

2131
01:51:08,000 --> 01:51:10,000
Okay. Self. Store.

2132
01:51:10,000 --> 01:51:12,000
Read.

2133
01:51:12,000 --> 01:51:16,400
Unwrap.

2134
01:51:16,400 --> 01:51:18,400
Ey, das wäre jetzt zu einfach, wenn es funktioniert.

2135
01:51:18,400 --> 01:51:25,040
Moment. Ist das hier überhaupt

2136
01:51:25,040 --> 01:51:27,040
die Map?

2137
01:51:27,040 --> 01:51:29,040
Let map gleich.

2138
01:51:29,040 --> 01:51:31,040
Ey, wir brauchen wieder hier.

2139
01:51:31,040 --> 01:51:41,520
Und jetzt. Moment.

2140
01:51:41,520 --> 01:51:47,520
Was brauche ich da eigentlich?

2141
01:51:47,520 --> 01:51:49,520
Das wäre jetzt viel zu einfach, wenn das funktioniert.

2142
01:51:49,520 --> 01:51:51,520
Item

2143
01:51:51,520 --> 01:51:55,800
mismatch.

2144
01:51:55,800 --> 01:51:57,800
Ne, ne. Der Store ist nicht die

2145
01:51:57,800 --> 01:51:59,800
Hashmap. Der Store ist ein Rw-Log.

2146
01:51:59,800 --> 01:52:03,430
Was?

2147
01:52:03,430 --> 01:52:05,430
Expected Type Parameter T. Found Arc T.

2148
01:52:05,430 --> 01:52:07,430
Ah.

2149
01:52:07,430 --> 01:52:09,430
Siehste?

2150
01:52:09,430 --> 01:52:11,430
Habe es ja auch verkehrt

2151
01:52:11,430 --> 01:52:27,800
gemacht.

2152
01:52:27,800 --> 01:52:29,800
Aber.

2153
01:52:29,800 --> 01:52:31,800
Aber warum geht das jetzt nicht?

2154
01:52:31,800 --> 01:52:54,920
Wieder

2155
01:52:54,920 --> 01:52:56,920
genau der gleiche Scheiß

2156
01:52:56,920 --> 01:53:00,550
wie vorher, Mann.

2157
01:53:00,550 --> 01:53:05,650
Was will er hier jetzt?

2158
01:53:05,650 --> 01:53:07,650
Temporary value created here.

2159
01:53:07,650 --> 01:53:35,700
Ja und?

2160
01:53:35,700 --> 01:53:37,700
Das kann doch nicht

2161
01:53:37,700 --> 01:53:39,700
so schwer sein.

2162
01:53:39,700 --> 01:53:41,700
Meine Fresse,

2163
01:53:41,700 --> 01:53:43,700
Alter.

2164
01:53:43,700 --> 01:53:49,570
Ich will eine Schleife machen.

2165
01:53:49,570 --> 01:53:51,570
Ich bin ja froh,

2166
01:53:51,570 --> 01:53:59,300
dass es easy to fix ist.

2167
01:53:59,300 --> 01:54:01,300
Glücklicherweise ist es easy to fix.

2168
01:54:01,300 --> 01:54:41,480
Ich weiß,

2169
01:54:41,480 --> 01:54:54,900
was das von mir will, Mann.

2170
01:54:54,900 --> 01:54:56,900
Es ist ja noch nicht mal async.

2171
01:54:56,900 --> 01:55:04,980
Rust.

2172
01:55:04,980 --> 01:55:06,980
Echt.

2173
01:55:06,980 --> 01:55:08,980
Ich habe kein blassen Schimmer.

2174
01:55:08,980 --> 01:55:12,360
Cursor of Hashmap.

2175
01:55:12,360 --> 01:55:17,080
I'm trying a simple

2176
01:55:17,080 --> 01:55:19,080
thread-safe memory key values

2177
01:55:19,080 --> 01:55:21,080
My code looks like this.

2178
01:55:21,080 --> 01:55:27,590
Ja, der macht.

2179
01:55:27,590 --> 01:55:29,590
Obviously. Simple.

2180
01:55:29,590 --> 01:55:34,240
Implement. Cursor.

2181
01:55:34,240 --> 01:55:36,240
Okay, jetzt vielleicht.

2182
01:55:36,240 --> 01:55:38,240
Ich will die Werte nicht klonen, Mann.

2183
01:55:38,240 --> 01:55:47,830
Ich check die Antwort.

2184
01:55:47,830 --> 01:55:51,720
Noch nicht mal.

2185
01:55:51,720 --> 01:55:53,720
Die Antwort ist mir schon zu sick.

2186
01:55:53,720 --> 01:55:55,720
Oh, jetzt habe ich meinen Browser gekillt.

2187
01:55:55,720 --> 01:55:57,720
Leute, mein Browser ist kaputt.

2188
01:55:57,720 --> 01:56:01,730
Ah, da geht er wieder.

2189
01:56:01,730 --> 01:56:03,730
Er lebt wieder.

2190
01:56:03,730 --> 01:56:05,730
Das ist wirklich

2191
01:56:05,730 --> 01:56:17,750
Pains champ, Mann.

2192
01:56:17,750 --> 01:56:19,750
D-Ref.

2193
01:56:19,750 --> 01:56:43,670
Also ich habe keine Ahnung,

2194
01:56:43,670 --> 01:56:45,670
warum das bei denen funktioniert.

2195
01:56:45,670 --> 01:56:58,070
Aber mir funktioniert das nicht.

2196
01:56:58,070 --> 01:57:03,430
Kein LW-Lock.

2197
01:57:03,430 --> 01:57:05,430
Vielleicht ist das das Problem.

2198
01:57:05,430 --> 01:57:14,150
Keine Ahnung.

2199
01:57:14,150 --> 01:57:16,150
Ich meine, das ist doch ein Witz, oder?

2200
01:57:16,150 --> 01:57:18,150
Ich meine, wie scheiße kann eine Sprache sein,

2201
01:57:18,150 --> 01:57:20,150
dass man eine probliche

2202
01:57:20,150 --> 01:57:22,150
Schleife über seinen eigenen Typ

2203
01:57:22,150 --> 01:57:24,150
nicht hinbekommt.

2204
01:57:24,150 --> 01:57:26,150
Wofür brauchst du das LW-Lock,

2205
01:57:26,150 --> 01:57:38,680
dass es thread-safe ist?

2206
01:57:38,680 --> 01:57:40,680
Ich habe keine Ahnung.

2207
01:57:40,680 --> 01:57:44,560
Wir klonen das jetzt einfach,

2208
01:57:44,560 --> 01:57:48,640
weil mir nichts anderes einfällt.

2209
01:57:48,640 --> 01:57:50,640
Wir machen das erste,

2210
01:57:50,640 --> 01:57:52,640
das erstbeste, was mir eingefallen ist.

2211
01:57:52,640 --> 01:57:54,640
Return, self,

2212
01:57:54,640 --> 01:57:56,640
store,

2213
01:57:56,640 --> 01:57:58,640
read, unwrap,

2214
01:57:58,640 --> 01:58:00,640
clone.

2215
01:58:00,640 --> 01:58:05,360
Das ist halt echt nicht schön.

2216
01:58:05,360 --> 01:58:07,360
Der

2217
01:58:07,360 --> 01:58:09,360
kopiert jetzt alles.

2218
01:58:09,360 --> 01:58:11,360
Ich meine, es ist nicht viel, es ist trotzdem schnell.

2219
01:58:11,360 --> 01:58:29,840
Aber es ist scheiße.

2220
01:58:29,840 --> 01:58:31,840
Okay, Chat, ich habe jetzt mal eine ernste Frage.

2221
01:58:31,840 --> 01:58:33,840
Wie genau?

2222
01:58:33,840 --> 01:58:35,840
Was soll mir

2223
01:58:35,840 --> 01:58:37,840
sowas sagen?

2224
01:58:37,840 --> 01:58:39,840
Ich meine, du hast mich gefragt,

2225
01:58:39,840 --> 01:58:41,840
wofür ich LW-Lock brauche.

2226
01:58:41,840 --> 01:58:43,840
Ich habe dir gesagt, damit es thread-safe ist.

2227
01:58:43,840 --> 01:58:45,840
Es gibt eine Menge thread-safe Datentypen.

2228
01:58:45,840 --> 01:58:47,840
Max, es gibt übrigens viele Autos.

2229
01:58:47,840 --> 01:58:49,840
Welcher

2230
01:58:49,840 --> 01:58:51,840
Datentyp wäre deiner Meinung nach besser geeignet

2231
01:58:51,840 --> 01:58:53,840
an der Stelle als LW-Lock?

2232
01:58:53,840 --> 01:58:55,840
Von den vielen thread-safe Datentypen.

2233
01:58:55,840 --> 01:59:01,590
So, jetzt können wir hier sagen,

2234
01:59:01,590 --> 01:59:03,590
oh,

2235
01:59:03,590 --> 01:59:05,590
jetzt findest du es. Ja, das ist klar.

2236
01:59:05,590 --> 01:59:07,590
Aber jetzt kopiert er das auch.

2237
01:59:07,590 --> 01:59:09,590
Das fuckt mich ultra ab, Mann.

2238
01:59:09,590 --> 01:59:11,590
Ich will wissen, wie das funktioniert.

2239
01:59:11,590 --> 01:59:13,590
Wir machen jetzt aber damit nicht weiter.

2240
01:59:13,590 --> 01:59:15,590
Sonst drehe ich echt am Rad.

2241
01:59:15,590 --> 01:59:26,070
Hier, returning wrapped,

2242
01:59:26,070 --> 01:59:28,070
okay, Moment mal.

2243
01:59:28,070 --> 01:59:30,070
Chat, das ist genau das, was ich machen will.

2244
01:59:32,070 --> 01:59:34,070
A, B, D...

2245
01:59:34,070 --> 01:59:37,700
What?

2246
01:59:37,700 --> 01:59:39,700
What the f...

2247
01:59:39,700 --> 01:59:41,700
Ich verstehe noch nicht mal, was er fragte.

2248
01:59:41,700 --> 01:59:43,700
You can't solve

2249
01:59:43,700 --> 01:59:45,700
this with naming your

2250
01:59:45,700 --> 01:59:47,700
lifetimes, as this isn't

2251
01:59:47,700 --> 01:59:49,700
really a lifetime problem, but a problem with

2252
01:59:49,700 --> 01:59:56,720
ownership. You can provide

2253
01:59:56,720 --> 01:59:58,720
access to the HashMap and make the call

2254
01:59:58,720 --> 02:00:06,520
values.

2255
02:00:06,520 --> 02:00:08,520
So was in der Richtung habe ich ja auch schon gebaut.

2256
02:00:08,520 --> 02:00:16,120
Ich meine, das soll mir auch recht sein.

2257
02:00:16,120 --> 02:00:19,430
Trivial.

2258
02:00:19,430 --> 02:00:21,430
Trivial.

2259
02:00:21,430 --> 02:00:23,430
Because

2260
02:00:23,430 --> 02:00:25,430
gut-like FN-Trades don't exist.

2261
02:00:25,430 --> 02:00:27,430
Ah, obviously. Jetzt weiß ich,

2262
02:00:27,430 --> 02:00:29,430
Leute, jetzt weiß ich, warum es nicht funktioniert,

2263
02:00:29,430 --> 02:00:31,430
Mann. Weil gut-like FN-Trades

2264
02:00:31,430 --> 02:00:33,430
not existen.

2265
02:00:33,430 --> 02:00:35,430
Hätte es mal gleich einer gesagt, Mensch.

2266
02:00:37,430 --> 02:00:39,430
Ich hoffe, euch ist jetzt auch alles klar.

2267
02:00:39,430 --> 02:00:41,430
Jetzt

2268
02:00:41,430 --> 02:00:43,430
obviously, jetzt ist alles logisch.

2269
02:00:43,430 --> 02:00:49,490
Yep, easy.

2270
02:00:49,490 --> 02:00:51,490
So, ich mach mal hier.

2271
02:00:51,490 --> 02:00:53,490
Mapped, log, guard, HashMap,

2272
02:00:53,490 --> 02:00:55,490
string, size, user.

2273
02:00:55,490 --> 02:00:59,510
Map, self, item,

2274
02:00:59,510 --> 02:01:01,510
read, what?

2275
02:01:06,100 --> 02:01:08,100
Leuchtet ein, ne? Es leuchtet

2276
02:01:08,100 --> 02:01:15,190
komplett ein.

2277
02:01:15,190 --> 02:01:17,190
Achso, Moment. Item ist

2278
02:01:17,190 --> 02:01:19,190
die HashMap.

2279
02:01:19,190 --> 02:01:21,190
Self, store,

2280
02:01:21,190 --> 02:01:23,190
read,

2281
02:01:23,190 --> 02:01:27,910
äh,

2282
02:01:27,910 --> 02:01:33,080
Alter.

2283
02:01:33,080 --> 02:01:35,080
Use parking lot? What?

2284
02:01:35,080 --> 02:01:54,130
Guck mal, die, hier,

2285
02:01:54,130 --> 02:01:56,130
Rust weiß noch nicht, was will ich hier? Map, Map.

2286
02:01:56,130 --> 02:01:59,700
It's not an iterator. Ja, ach,

2287
02:01:59,700 --> 02:02:01,700
okay. Nice.

2288
02:02:01,700 --> 02:02:03,700
Sehr gut, sehr gut. Excellent.

2289
02:02:03,700 --> 02:02:18,980
Jetzt weiß ich Bescheid, ja, Mann.

2290
02:02:18,980 --> 02:02:20,980
Cannot find. Moment, das gibt es überhaupt nicht?

2291
02:02:22,980 --> 02:02:24,980
Das gibt es einfach überhaupt nicht, was die hier vorschlagen.

2292
02:02:24,980 --> 02:02:26,980
Alter, was ist das für ein pepega post, Mann?

2293
02:02:26,980 --> 02:02:31,640
Lw, log, guard,

2294
02:02:31,640 --> 02:02:33,640
gibt es überhaupt? Ach, Moment, das ist von parking lot.

2295
02:02:33,640 --> 02:02:35,640
Was auch immer parking lot ist.

2296
02:02:35,640 --> 02:02:37,640
Was ist die parking lot?

2297
02:02:37,640 --> 02:02:39,640
Lw, guard, Mensch. Ja, dann,

2298
02:02:39,640 --> 02:02:49,090
ja, dann ist klar.

2299
02:02:49,090 --> 02:02:51,090
Ich glaube, ich weiß, wo...

2300
02:02:51,090 --> 02:03:00,100
Weißt du was? Scheiß drauf.

2301
02:03:00,100 --> 02:03:02,100
Jetzt nicht, jetzt nicht, Leute.

2302
02:03:02,100 --> 02:03:04,100
Jetzt, jetzt nicht. Wir lassen,

2303
02:03:04,100 --> 02:03:06,100
wir lassen es jetzt nicht. Da dreh ich, da dreh ich ab,

2304
02:03:06,100 --> 02:03:17,670
weil... Also, ich bin,

2305
02:03:17,670 --> 02:03:21,810
ich bin erstaunt,

2306
02:03:21,810 --> 02:03:23,810
dass das so krass

2307
02:03:23,810 --> 02:03:36,660
kompliziert ist.

2308
02:03:36,660 --> 02:03:38,660
Okay, was? Playground?

2309
02:03:38,660 --> 02:03:50,420
Ich, ich mach jetzt nicht weiter.

2310
02:03:50,420 --> 02:03:52,420
Das, das, da dreh ich.

2311
02:03:52,420 --> 02:03:54,420
Reicht dir das? Ja, Moment, Moment, mal gucken.

2312
02:03:54,420 --> 02:03:56,420
Moment. Excellent, excellent. Chatgear macht

2313
02:03:56,420 --> 02:03:58,420
mit. Ich bin froh. Chat ist, Chat ist schlau.

2314
02:03:58,420 --> 02:04:07,040
Äh...

2315
02:04:07,040 --> 02:04:10,610
Wo, wo ist der Unterschied

2316
02:04:10,610 --> 02:04:12,610
zu mir? Ah, hier!

2317
02:04:12,610 --> 02:04:14,610
Okay, was, was, was, was macht das jetzt?

2318
02:04:14,610 --> 02:04:16,610
Anders als, als

2319
02:04:16,610 --> 02:04:18,610
meins?

2320
02:04:18,610 --> 02:04:20,610
Zwei, okay.

2321
02:04:20,610 --> 02:04:22,610
Store, read,

2322
02:04:22,610 --> 02:04:27,970
unwrap. Ah, okay, wirklich

2323
02:04:27,970 --> 02:04:29,970
schön ist... Aber dann, da muss

2324
02:04:29,970 --> 02:04:31,970
ich zumindest nicht klonen.

2325
02:04:31,970 --> 02:04:33,970
Das finde ich eigentlich ganz, ganz gut.

2326
02:04:33,970 --> 02:04:35,970
Da muss ich, da muss ich zumindest

2327
02:04:35,970 --> 02:04:37,970
nicht...

2328
02:04:37,970 --> 02:04:41,350
Da muss ich nicht klonen.

2329
02:04:41,350 --> 02:04:43,350
Und es funktioniert, oder?

2330
02:04:43,350 --> 02:04:47,300
Das ist gut.

2331
02:04:47,300 --> 02:04:54,200
Das ist, das reicht mir.

2332
02:04:54,200 --> 02:04:56,200
Also, ich würde sagen, das reicht mir.

2333
02:04:56,200 --> 02:05:02,840
Das ist, das ist im Prinzip

2334
02:05:02,840 --> 02:05:04,840
das einfach nochmal gerappt.

2335
02:05:04,840 --> 02:05:06,840
Das ist die bisschen schönere Variante

2336
02:05:06,840 --> 02:05:08,840
wie von meinem geklonten.

2337
02:05:08,840 --> 02:05:10,840
Wo, wofür ist denn

2338
02:05:10,840 --> 02:05:12,840
hier vorne das Ding? Kann man das wegmachen?

2339
02:05:12,840 --> 02:05:16,340
Äh, anscheinend, okay.

2340
02:05:16,340 --> 02:05:18,340
Ich weiß nicht, wofür das da ist.

2341
02:05:18,340 --> 02:05:20,340
Wofür, es ist irgendwie Lifetime. Aber Lifetime

2342
02:05:20,340 --> 02:05:25,060
für was? Lifetime, die ich

2343
02:05:25,060 --> 02:05:29,080
sonst nirgendswo benutze, oder?

2344
02:05:29,080 --> 02:05:33,090
Lassen wir einfach mal weg.

2345
02:05:33,090 --> 02:05:35,090
Ja, das finde ich, das finde ich gut.

2346
02:05:35,090 --> 02:05:37,090
Alter, was ein

2347
02:05:37,090 --> 02:05:39,090
Akt, man! Ich raste aus, ey.

2348
02:05:39,090 --> 02:05:42,790
Eieiei.

2349
02:05:42,790 --> 02:05:46,870
Boah.

2350
02:05:46,870 --> 02:05:48,870
MonkaS.

2351
02:05:50,870 --> 02:05:52,870
MonkaS, man.

2352
02:05:52,870 --> 02:05:59,380
Okay, können wir jetzt

2353
02:05:59,380 --> 02:06:01,380
eigentlich, Moment, Moment, ja,

2354
02:06:01,380 --> 02:06:03,380
okay, ja, wir machen weiter, aber jetzt

2355
02:06:03,380 --> 02:06:05,380
kommt ja noch was anderes, was das Ding können soll.

2356
02:06:05,380 --> 02:06:17,400
Und zwar, ja, und zwar

2357
02:06:17,400 --> 02:06:22,370
es soll

2358
02:06:22,370 --> 02:06:24,370
ja noch IDs berechnen können.

2359
02:06:24,370 --> 02:06:26,370
Wie, wie könnte man das mit der ID-Berechnung machen,

2360
02:06:26,370 --> 02:06:31,480
Chat? Wie könnte man

2361
02:06:31,480 --> 02:06:33,480
das, habt ihr irgendeine klare Idee? Also,

2362
02:06:33,480 --> 02:06:35,480
wir könnten, wir könnten einfach random was

2363
02:06:35,480 --> 02:06:37,480
generieren. Das ist aber nicht schön.

2364
02:06:37,480 --> 02:06:39,480
Ich meine, die Chance, dass was doppelt generiert wird

2365
02:06:39,480 --> 02:06:41,480
bei meiner kleinen Anzahl, also,

2366
02:06:41,480 --> 02:06:43,480
UID ist raus,

2367
02:06:43,480 --> 02:06:45,480
weil, ja, weil ich UID

2368
02:06:45,480 --> 02:06:47,480
nur etwas komplizierter

2369
02:06:47,480 --> 02:06:49,480
hin- und herschieben kann über ein C-Interface.

2370
02:06:51,480 --> 02:06:53,480
Aber, wir könnten,

2371
02:06:53,480 --> 02:06:58,070
ich habe

2372
02:06:58,070 --> 02:07:00,070
eine Idee, Leute. Ich habe

2373
02:07:00,070 --> 02:07:02,070
eine Idee, was wir machen können.

2374
02:07:02,070 --> 02:07:05,640
Force Champ.

2375
02:07:05,640 --> 02:07:07,640
Was ist mit random oder einem Hash?

2376
02:07:07,640 --> 02:07:09,640
Ich hätte gerne lieber was, irgendeinen simplen Counter.

2377
02:07:09,640 --> 02:07:13,330
Okay, ich habe,

2378
02:07:13,330 --> 02:07:15,330
ich habe nämlich eine Idee, wie wir das ganz

2379
02:07:15,330 --> 02:07:17,330
einfach machen können. Ich meine, unsere Keys

2380
02:07:17,330 --> 02:07:19,330
sind U32, also, wir haben

2381
02:07:19,330 --> 02:07:21,330
4 Trillionen, was auch immer,

2382
02:07:21,330 --> 02:07:23,330
Milliarden, sonst was,

2383
02:07:23,330 --> 02:07:25,330
möglicher,

2384
02:07:25,330 --> 02:07:27,330
ich weiß nicht, was U32-Max ist. Irgendwas mit

2385
02:07:27,330 --> 02:07:29,330
einer 4 vorne.

2386
02:07:29,330 --> 02:07:31,330
Ah, das läuft.

2387
02:07:31,330 --> 02:07:33,330
Mögliche, mögliche

2388
02:07:33,330 --> 02:07:35,330
IDs. So, also, was wir jetzt machen

2389
02:07:35,330 --> 02:07:37,330
können, ist,

2390
02:07:37,330 --> 02:07:39,330
wir machen mal, wir machen mal so eine Function,

2391
02:07:39,330 --> 02:07:45,590
wobei, brauchen wir nicht mal für,

2392
02:07:45,590 --> 02:07:47,590
also, den Store.

2393
02:07:49,590 --> 02:07:51,590
Er ist hier, so.

2394
02:07:51,590 --> 02:07:53,590
Also,

2395
02:07:53,590 --> 02:07:55,590
die ID, wir generieren die ID

2396
02:07:55,590 --> 02:07:59,480
folgendermaßen,

2397
02:07:59,480 --> 02:08:03,680
und zwar,

2398
02:08:03,680 --> 02:08:05,680
wir checken einfach,

2399
02:08:05,680 --> 02:08:07,680
ich habe eine Idee, ich habe eine Idee,

2400
02:08:07,680 --> 02:08:09,680
ich muss mir kurz, nur kurz Gedanken drüber machen.

2401
02:08:09,680 --> 02:08:11,680
Wir machen eine Schleife,

2402
02:08:11,680 --> 02:08:13,680
wir machen eine Schleife,

2403
02:08:13,680 --> 02:08:15,680
und

2404
02:08:15,680 --> 02:08:17,680
wir lassen eine Schleife laufen,

2405
02:08:17,680 --> 02:08:19,680
von 0

2406
02:08:19,680 --> 02:08:21,680
bis U32-Max.

2407
02:08:21,680 --> 02:08:23,680
Und die erste freie ID,

2408
02:08:23,680 --> 02:08:25,680
die noch nicht vergeben ist, nehmen wir.

2409
02:08:25,680 --> 02:08:33,800
Das müsste doch eigentlich gut funktionieren.

2410
02:08:35,800 --> 02:08:37,800
Nee? Warum nicht?

2411
02:08:37,800 --> 02:08:39,800
Warum ist das kacke?

2412
02:08:39,800 --> 02:08:44,960
Dann kannst du auch random

2413
02:08:44,960 --> 02:08:48,720
nehmen. Nee.

2414
02:08:48,720 --> 02:08:50,720
Die erste freie bedeutet immer, dass ich

2415
02:08:50,720 --> 02:08:52,720
eine unique ID finde. Bei random

2416
02:08:52,720 --> 02:08:54,720
habe ich im Zweifelsfall, bei einem

2417
02:08:54,720 --> 02:08:56,720
32-Bit-Random habe ich im Zweifelsfall

2418
02:08:56,720 --> 02:08:58,720
doppelte Werte. Die Chancen sind gering,

2419
02:08:58,720 --> 02:09:00,720
ja? Die Chancen sind

2420
02:09:00,720 --> 02:09:09,160
gering, aber

2421
02:09:09,160 --> 02:09:11,160
sie sind da.

2422
02:09:11,160 --> 02:09:13,160
Und mit einem Counter nicht.

2423
02:09:13,160 --> 02:09:19,800
Also,

2424
02:09:19,800 --> 02:09:21,800
bei einem 32-Bit,

2425
02:09:21,800 --> 02:09:23,800
das ist nicht impossible.

2426
02:09:23,800 --> 02:09:25,800
Bei einem 32-Bit-Int

2427
02:09:27,800 --> 02:09:29,800
hast du, Moment,

2428
02:09:29,800 --> 02:09:31,800
U32-Max.

2429
02:09:31,800 --> 02:09:38,690
Also,

2430
02:09:38,690 --> 02:09:40,690
guck mal, wir haben, was ist denn das?

2431
02:09:40,690 --> 02:09:42,690
Das ist gar nicht mal

2432
02:09:42,690 --> 02:09:44,690
so viel, das sind 4 Milliarden nur.

2433
02:09:44,690 --> 02:09:46,690
Guck mal.

2434
02:09:46,690 --> 02:09:48,690
4 Milliarden. Wir haben nur

2435
02:09:48,690 --> 02:09:50,690
4 Milliarden

2436
02:09:50,690 --> 02:09:52,690
mögliche

2437
02:09:52,690 --> 02:09:54,690
IDs.

2438
02:09:56,690 --> 02:09:58,690
Ich meine, 4 Milliarden bei,

2439
02:09:58,690 --> 02:10:00,690
was weiß ich, 5 gleichzeitigen Connections

2440
02:10:00,690 --> 02:10:02,690
ist die Chance auch sehr gering, okay?

2441
02:10:02,690 --> 02:10:04,690
Gebe ich zu. Aber, nur mal von der Idee

2442
02:10:04,690 --> 02:10:06,690
her, die Chancen sind gar nicht

2443
02:10:06,690 --> 02:10:08,690
so klein. Wir haben 5 Milliarden

2444
02:10:08,690 --> 02:10:12,130
zufällige IDs und

2445
02:10:12,130 --> 02:10:14,130
ab der

2446
02:10:14,130 --> 02:10:16,130
Hälfte, ab 2 Milliarden

2447
02:10:16,130 --> 02:10:18,130
ab 2 Milliarden IDs

2448
02:10:18,130 --> 02:10:20,130
ist die Chance über

2449
02:10:20,130 --> 02:10:22,130
50 Prozent,

2450
02:10:22,130 --> 02:10:24,130
dass die nächste generierte Random-ID

2451
02:10:24,130 --> 02:10:26,130
schon mal vorhanden ist.

2452
02:10:26,130 --> 02:10:28,130
Es sind einfach,

2453
02:10:28,130 --> 02:10:30,130
es sind einfach in einem U32 zu wenig,

2454
02:10:30,130 --> 02:10:36,450
zu wenig Platz.

2455
02:10:36,450 --> 02:10:38,450
UNIX-Timestamp ist, äh, selbst

2456
02:10:38,450 --> 02:10:40,450
in Millisekunden nicht unbedingt so, so sinnvoll

2457
02:10:40,450 --> 02:10:42,450
an der Stelle.

2458
02:10:42,450 --> 02:10:44,450
Komm, wir machen mal das, wir machen mal das, was ich,

2459
02:10:44,450 --> 02:10:46,450
was ich gesagt hab.

2460
02:10:46,450 --> 02:10:48,450
Also, wir machen eine Schleife.

2461
02:10:48,450 --> 02:10:50,450
Wir machen

2462
02:10:50,450 --> 02:10:57,480
eine Schleife von,

2463
02:10:57,480 --> 02:10:59,480
oh, kann man nicht einfach zählen hier irgendwie mit einer

2464
02:10:59,480 --> 02:11:01,480
Schleife, 4i?

2465
02:11:01,480 --> 02:11:03,480
4i in, okay.

2466
02:11:03,480 --> 02:11:05,480
4i in, äh,

2467
02:11:05,480 --> 02:11:07,480
U32

2468
02:11:07,480 --> 02:11:10,980
max. So, und jetzt

2469
02:11:10,980 --> 02:11:17,880
if, ähm,

2470
02:11:17,880 --> 02:11:19,880
wir müssen das hier mal kurz an,

2471
02:11:19,880 --> 02:11:21,880
anwrappen, hier oben schon.

2472
02:11:21,880 --> 02:11:23,880
If

2473
02:11:23,880 --> 02:11:25,880
map, da gibt's noch irgendwie so contains,

2474
02:11:25,880 --> 02:11:27,880
contains key

2475
02:11:27,880 --> 02:11:29,880
i,

2476
02:11:29,880 --> 02:11:31,880
if not contains

2477
02:11:31,880 --> 02:11:33,880
key i,

2478
02:11:33,880 --> 02:11:38,020
dann, Moment, das muss bestimmt,

2479
02:11:38,020 --> 02:11:40,020
dann, return i.

2480
02:11:40,020 --> 02:11:42,020
Das ist alles, was wir machen müssen.

2481
02:11:42,020 --> 02:11:46,230
Schon kriegen wir die erste freie ID.

2482
02:11:46,230 --> 02:11:48,230
Nee, das ist doch eigentlich gar nicht schlecht.

2483
02:11:48,230 --> 02:11:50,230
Weil, das Schöne ist,

2484
02:11:50,230 --> 02:11:52,230
die Verbindung, wir,

2485
02:11:52,230 --> 02:11:54,230
das ist ja nicht nur, das ist ja nicht nur add,

2486
02:11:54,230 --> 02:11:56,230
add, append only.

2487
02:11:56,230 --> 02:11:58,230
Es können ja auch Sachen gelöscht werden.

2488
02:11:58,230 --> 02:12:00,230
Mal angenommen, der erzeugt 5 Verbindungen.

2489
02:12:00,230 --> 02:12:02,230
So, irgendwann schließt,

2490
02:12:02,230 --> 02:12:04,230
irgendwann macht einer den Browser zu,

2491
02:12:04,230 --> 02:12:06,230
und die ersten 5

2492
02:12:06,230 --> 02:12:08,230
Verbindungen werden gelöscht.

2493
02:12:08,230 --> 02:12:10,230
Dann sind die IDs 0 bis 5 wieder frei.

2494
02:12:12,230 --> 02:12:14,230
Und wenn das nächste Mal die Schleife läuft,

2495
02:12:14,230 --> 02:12:16,230
dann gibt er IDs 0 bis 5 neu.

2496
02:12:16,230 --> 02:12:18,230
Das dürfte immer ziemlich

2497
02:12:18,230 --> 02:12:20,230
schnell laufen.

2498
02:12:20,230 --> 02:12:22,230
Übrigens, return i ist an der Stelle

2499
02:12:22,230 --> 02:12:26,560
für Pegatime.

2500
02:12:26,560 --> 02:12:28,560
Leute, wie würde man das, wie würde man das

2501
02:12:28,560 --> 02:12:30,560
jetzt rust, ich hab ne Idee, pass auf, wir machen jetzt,

2502
02:12:30,560 --> 02:12:32,560
wir machen jetzt, wir machen jetzt

2503
02:12:32,560 --> 02:12:34,560
rust idiomatic way,

2504
02:12:34,560 --> 02:12:40,500
das Ganze, match.

2505
02:12:40,500 --> 02:12:42,500
Nee, ich weiß nicht, wie das funktioniert.

2506
02:12:42,500 --> 02:12:45,880
Hahaha.

2507
02:12:45,880 --> 02:12:47,880
Ich hab keine Ahnung.

2508
02:12:47,880 --> 02:12:49,880
Okay.

2509
02:12:49,880 --> 02:12:51,880
Ähm.

2510
02:12:51,880 --> 02:12:53,880
Dann wissen wir.

2511
02:12:53,880 --> 02:13:05,440
Connectest du vielleicht dann so mit dem selben

2512
02:13:05,440 --> 02:13:07,440
Ähm.

2513
02:13:07,440 --> 02:13:11,840
Nee.

2514
02:13:11,840 --> 02:13:13,840
Weil einmal geschlossene

2515
02:13:13,840 --> 02:13:15,840
Connections können glaube ich nicht mal neu aufgebaut werden.

2516
02:13:15,840 --> 02:13:21,720
So.

2517
02:13:21,720 --> 02:13:23,720
Moin für die nicht Programmierer unter uns sind.

2518
02:13:23,720 --> 02:13:25,720
Was wird programmiert?

2519
02:13:25,720 --> 02:13:27,720
Wir programmieren eine,

2520
02:13:27,720 --> 02:13:29,720
ein rust WebRTC

2521
02:13:29,720 --> 02:13:31,720
Backend, mit dem du alle deine

2522
02:13:31,720 --> 02:13:33,720
Webcams im Browser in Echtzeit

2523
02:13:33,720 --> 02:13:35,720
rein streamen kannst.

2524
02:13:35,720 --> 02:13:39,920
Also, wenn's denn dann funktioniert.

2525
02:13:39,920 --> 02:13:41,920
So, also.

2526
02:13:41,920 --> 02:13:43,920
Und wir lernen rust dabei.

2527
02:13:43,920 --> 02:13:45,920
Also, guck mal.

2528
02:13:45,920 --> 02:13:47,920
Kann man hier so ne Art range draus machen?

2529
02:13:47,920 --> 02:13:49,920
Ist, Moment. Range rust.

2530
02:13:51,920 --> 02:13:53,920
Ranges.

2531
02:13:53,920 --> 02:13:55,920
Aha, einfach klammern.

2532
02:13:55,920 --> 02:13:57,920
Also, sowas hier.

2533
02:13:57,920 --> 02:14:04,210
Klammern.

2534
02:14:04,210 --> 02:14:06,210
Und jetzt sagen wir eater.

2535
02:14:06,210 --> 02:14:08,210
Moment, das gibt's nicht.

2536
02:14:08,210 --> 02:14:10,210
Into eater. Ja, soll mir auch recht sein.

2537
02:14:10,210 --> 02:14:12,210
Select. Nee.

2538
02:14:12,210 --> 02:14:14,210
Where. Filter.

2539
02:14:14,210 --> 02:14:16,210
Filter?

2540
02:14:16,210 --> 02:14:18,210
Nee, Filter will ich nicht.

2541
02:14:18,210 --> 02:14:21,590
Moment, Moment.

2542
02:14:21,590 --> 02:14:25,600
Rust. Ähm.

2543
02:14:25,600 --> 02:14:27,600
Find first

2544
02:14:27,600 --> 02:14:29,600
Currents in Vector.

2545
02:14:29,600 --> 02:14:31,600
In Array.

2546
02:14:31,600 --> 02:14:40,770
Position.

2547
02:14:40,770 --> 02:14:42,770
Der Chat sagt find.

2548
02:14:42,770 --> 02:14:44,770
Gibt es find?

2549
02:14:44,770 --> 02:14:46,770
Find.

2550
02:14:46,770 --> 02:14:51,360
Find.

2551
02:14:51,360 --> 02:14:53,360
Filter next. Okay.

2552
02:14:53,360 --> 02:14:55,360
Find takes the

2553
02:14:55,360 --> 02:15:00,850
Closure.

2554
02:15:00,850 --> 02:15:02,850
Okay.

2555
02:15:02,850 --> 02:15:04,850
Ah, yeah. Find is short circuiting.

2556
02:15:04,850 --> 02:15:06,850
In other words, it will stop processing

2557
02:15:06,850 --> 02:15:08,850
as soon as the closure returns true.

2558
02:15:08,850 --> 02:15:10,850
Ja, das ist das, was ich haben will. Okay.

2559
02:15:10,850 --> 02:15:12,850
Find. Ähm.

2560
02:15:12,850 --> 02:15:14,850
Closure in rust. Das ist so,

2561
02:15:14,850 --> 02:15:16,850
glaub ich. Wie in Ruby ist das.

2562
02:15:16,850 --> 02:15:21,190
So. Ja.

2563
02:15:21,190 --> 02:15:23,190
Oder sagen wir mal

2564
02:15:23,190 --> 02:15:26,500
ID. Und jetzt so.

2565
02:15:26,500 --> 02:15:28,500
Nee. Und jetzt?

2566
02:15:28,500 --> 02:15:30,500
Okay, jetzt weiß ich nicht weiter.

2567
02:15:30,500 --> 02:15:34,070
Doch wahrscheinlich

2568
02:15:34,070 --> 02:15:36,070
einfach. Einfach

2569
02:15:36,070 --> 02:15:38,070
Klammer auf, Klammer zu.

2570
02:15:38,070 --> 02:15:40,070
Oder kann man. Moment.

2571
02:15:40,070 --> 02:15:42,070
Oder kann man vielleicht

2572
02:15:42,070 --> 02:15:44,070
sogar

2573
02:15:44,070 --> 02:15:48,280
sagen map

2574
02:15:48,280 --> 02:15:50,280
contains key

2575
02:15:50,280 --> 02:15:52,280
ID

2576
02:15:52,280 --> 02:15:54,280
und dann not.

2577
02:15:54,280 --> 02:16:01,430
Ah.

2578
02:16:01,430 --> 02:16:03,430
Und da jetzt. Moment. Das jetzt.

2579
02:16:03,430 --> 02:16:05,430
Da jetzt ein Match drauf. Da jetzt

2580
02:16:05,430 --> 02:16:07,430
ein Match drauf. Dass wir eine Fehlermeldung

2581
02:16:07,430 --> 02:16:09,430
schmeißen, wenn er keine freien IDs

2582
02:16:09,430 --> 02:16:11,430
findet. Wie funsten das jetzt?

2583
02:16:11,430 --> 02:16:16,280
Match. Jawoll.

2584
02:16:16,280 --> 02:16:18,280
Die Idee hat mal was gebracht. None.

2585
02:16:18,280 --> 02:16:20,280
Okay, wenn er keine freien gefunden

2586
02:16:20,280 --> 02:16:22,280
hat, dann

2587
02:16:22,280 --> 02:16:24,280
würde ich sagen, paniken wir.

2588
02:16:24,280 --> 02:16:26,280
Panic. Äh.

2589
02:16:26,280 --> 02:16:28,280
No free ID found.

2590
02:16:28,280 --> 02:16:35,170
So. Bam.

2591
02:16:35,170 --> 02:16:37,170
Und wenn er was gefunden hat,

2592
02:16:37,170 --> 02:16:39,170
dann soll er

2593
02:16:39,170 --> 02:16:42,610
die ID returnen. Macht das

2594
02:16:42,610 --> 02:16:44,610
so Sinn? Du kannst auch expect machen.

2595
02:16:44,610 --> 02:16:46,610
Mit panic

2596
02:16:46,610 --> 02:16:48,610
killst du den Prozess. Ja, das ist gut so.

2597
02:16:48,610 --> 02:16:50,610
Soll er. Soll er ruhig.

2598
02:16:50,610 --> 02:16:52,610
Also wenn ich es schaffe 4 Milliarden IDs voll zu bekommen,

2599
02:16:52,610 --> 02:16:58,680
ist irgendwas verkehrt.

2600
02:16:58,680 --> 02:17:00,680
Auf der anderen Seite. Ihr habt recht.

2601
02:17:00,680 --> 02:17:02,680
Das macht überhaupt keinen Sinn mit match.

2602
02:17:02,680 --> 02:17:04,680
Sondern wir sagen einfach let ID

2603
02:17:04,680 --> 02:17:06,680
expect

2604
02:17:06,680 --> 02:17:08,680
und dann machen wir eine custom Fehlermeldung.

2605
02:17:08,680 --> 02:17:10,680
No free

2606
02:17:10,680 --> 02:17:12,680
ID found.

2607
02:17:12,680 --> 02:17:16,500
Zack. Easy.

2608
02:17:16,500 --> 02:17:19,940
Das gefällt mir.

2609
02:17:19,940 --> 02:17:21,940
Das finde ich schick.

2610
02:17:21,940 --> 02:17:23,940
Kompiliert. Kompiliert auch noch. Okay.

2611
02:17:23,940 --> 02:17:25,940
So und jetzt haben wir.

2612
02:17:25,940 --> 02:17:27,940
Und jetzt haben wir jedes Mal eine frische ID.

2613
02:17:27,940 --> 02:17:29,940
Sehr gut. Nice.

2614
02:17:29,940 --> 02:17:31,940
Jetzt können wir doch gleich mal testen ob das funktioniert

2615
02:17:31,940 --> 02:17:35,320
was wir gebaut haben.

2616
02:17:35,320 --> 02:17:37,320
Ich glaube mehr brauchen wir in dieser custom

2617
02:17:37,320 --> 02:17:44,470
custom Klasse nicht.

2618
02:17:44,470 --> 02:17:46,470
So dann lasst uns doch mal gucken ob sich

2619
02:17:46,470 --> 02:17:48,470
die Aufregung heute gelohnt hat.

2620
02:17:48,470 --> 02:17:50,470
Gehen wir mal

2621
02:17:50,470 --> 02:17:52,470
in unsere Lipp. So.

2622
02:17:52,470 --> 02:17:54,470
Api State.

2623
02:17:54,470 --> 02:17:56,470
Da gibt es jetzt ein Feld für

2624
02:17:56,470 --> 02:17:58,470
Connections. Das reicht erstmal.

2625
02:17:58,470 --> 02:18:00,470
Connections.

2626
02:18:00,470 --> 02:18:02,470
Ich habe jetzt schon öfters gesehen

2627
02:18:02,470 --> 02:18:04,470
dass die Leute gerne in Rust die Sachen

2628
02:18:04,470 --> 02:18:06,470
abkürzen. Rust

2629
02:18:06,470 --> 02:18:08,470
Fifads. Wie würdet ihr das schreiben an der

2630
02:18:08,470 --> 02:18:10,470
Stelle? Würdet ihr die Variable

2631
02:18:10,470 --> 02:18:12,470
Connections nennen?

2632
02:18:12,470 --> 02:18:14,470
Mojojojo. Danke schön für den

2633
02:18:14,470 --> 02:18:16,470
Sub. Würdet ihr die Variable

2634
02:18:16,470 --> 02:18:18,470
an der Stelle Connections nennen?

2635
02:18:18,470 --> 02:18:20,470
Con?

2636
02:18:20,470 --> 02:18:22,470
Cons?

2637
02:18:22,470 --> 02:18:24,470
C?

2638
02:18:24,470 --> 02:18:26,470
Oder wie ich?

2639
02:18:26,470 --> 02:18:36,880
Connections.

2640
02:18:36,880 --> 02:18:38,880
Der Sensitive Aal hat auch Subscribed.

2641
02:18:38,880 --> 02:18:40,880
Gar nicht gesehen. Danke für den Sub.

2642
02:18:40,880 --> 02:18:45,160
Verbindungen. Ja genau.

2643
02:18:47,160 --> 02:18:58,660
Prime Sub für die Krustentiere.

2644
02:18:58,660 --> 02:19:00,660
Sehr schön. Pogu.

2645
02:19:00,660 --> 02:19:02,660
Von Aqua.

2646
02:19:02,660 --> 02:19:04,660
Dankeschön für den Sub.

2647
02:19:04,660 --> 02:19:06,660
Und für die Fifad Unterstützung

2648
02:19:06,660 --> 02:19:08,660
vorhin.

2649
02:19:08,660 --> 02:19:10,660
Okay. Connections. Also.

2650
02:19:10,660 --> 02:19:12,660
Registry of Tea.

2651
02:19:12,660 --> 02:19:16,290
Kann das sein dass ich schon mal Registry

2652
02:19:16,290 --> 02:19:18,290
irgendwie habe hier?

2653
02:19:18,290 --> 02:19:20,290
Registry.

2654
02:19:22,290 --> 02:19:24,290
Das habe ich schon mal importiert. Was ist das?

2655
02:19:24,290 --> 02:19:26,290
Oh.

2656
02:19:26,290 --> 02:19:28,290
Shit.

2657
02:19:28,290 --> 02:19:30,290
Ne. AppState.

2658
02:19:30,290 --> 02:19:32,290
Registry of

2659
02:19:32,290 --> 02:19:34,290
So. Was brauchen wir jetzt? Testweise

2660
02:19:34,290 --> 02:19:36,290
Connections haben wir gesagt.

2661
02:19:36,290 --> 02:19:38,290
Track local static sample.

2662
02:19:38,290 --> 02:19:48,100
Ne.

2663
02:19:48,100 --> 02:20:00,630
Alter. Wo ist das Problem

2664
02:20:00,630 --> 02:20:02,630
jetzt? Ach ist das nicht public

2665
02:20:02,630 --> 02:20:04,630
vielleicht? Ach ist private.

2666
02:20:04,630 --> 02:20:06,630
Ah.

2667
02:20:06,630 --> 02:20:08,630
Excellent.

2668
02:20:08,630 --> 02:20:23,490
Wie will ich importieren?

2669
02:20:23,490 --> 02:20:25,490
Card Collector. Moin.

2670
02:20:25,490 --> 02:20:27,490
Pluska. Ja auch wieder am Start.

2671
02:20:27,490 --> 02:20:31,700
Pogu.

2672
02:20:31,700 --> 02:20:33,700
Der Name kommt mir zumindest bekannt vor.

2673
02:20:33,700 --> 02:20:37,520
Ich weiß nicht genau woher.

2674
02:20:37,520 --> 02:20:41,540
Aber der Name kommt mir bekannt vor.

2675
02:20:41,540 --> 02:20:43,540
Also hier aus dem Chat auf jeden Fall.

2676
02:20:43,540 --> 02:20:49,220
Aber ich weiß nicht

2677
02:20:49,220 --> 02:20:51,220
mehr mit was ich

2678
02:20:51,220 --> 02:20:53,220
in Verbindung. Zumindest warst du schon öfters hier.

2679
02:20:53,220 --> 02:20:57,560
So.

2680
02:20:57,560 --> 02:20:59,560
Connections. Registry. Track local static sample.

2681
02:20:59,560 --> 02:21:01,560
So. Das müsste doch immer noch

2682
02:21:01,560 --> 02:21:03,560
kompilieren oder? Nein. Natürlich nicht.

2683
02:21:03,560 --> 02:21:05,560
Ach so. Weil ich es da unten vergessen habe.

2684
02:21:05,560 --> 02:21:11,110
Ist okay.

2685
02:21:11,110 --> 02:21:13,110
Registry. New.

2686
02:21:13,110 --> 02:21:15,110
Alles klar.

2687
02:21:15,110 --> 02:21:17,110
Es kompiliert. Yeah.

2688
02:21:17,110 --> 02:21:20,420
Top. Dann können wir das ja auch jetzt

2689
02:21:20,420 --> 02:21:22,420
mal ausprobieren. Connections.

2690
02:21:22,420 --> 02:21:24,420
Dann schmeißen wir das hier mal weg.

2691
02:21:24,420 --> 02:21:26,420
Also das Ziel ist, dass dieses ganze Zeug hier

2692
02:21:26,420 --> 02:21:28,420
reinwandert in AppState.

2693
02:21:28,420 --> 02:21:30,420
Check mal ob die Funktionen

2694
02:21:30,420 --> 02:21:37,830
alle public sind. Aber

2695
02:21:37,830 --> 02:21:41,460
sonst alle. So.

2696
02:21:41,460 --> 02:21:43,460
Und jetzt.

2697
02:21:43,460 --> 02:21:49,200
Wo verwenden wir denn jetzt

2698
02:21:49,200 --> 02:21:51,200
Connections? Ich lösche das hier einfach mal.

2699
02:21:51,200 --> 02:21:53,200
Genau. Da wo es rot geworden ist.

2700
02:21:53,200 --> 02:21:55,200
Connections gleich.

2701
02:21:55,200 --> 02:21:57,200
Also im Prinzip brauchen wir bloß noch self.

2702
02:21:57,200 --> 02:21:59,200
AppState. Nicht self.

2703
02:21:59,200 --> 02:22:01,200
AppState. Get.

2704
02:22:01,200 --> 02:22:03,200
Unwrap Connections.

2705
02:22:03,200 --> 02:22:08,050
Also aus irgendwelchen Gründen

2706
02:22:08,050 --> 02:22:10,050
nicht funktioniert.

2707
02:22:10,050 --> 02:22:12,050
Cannot move.

2708
02:22:12,050 --> 02:22:14,050
Ach so. Muss ich wieder

2709
02:22:14,050 --> 02:22:17,620
und davor machen. Ja.

2710
02:22:17,620 --> 02:22:22,210
Ok. Registry.

2711
02:22:22,210 --> 02:22:24,210
Pair Connections. Connections.

2712
02:22:24,210 --> 02:22:26,210
Get.

2713
02:22:26,210 --> 02:22:30,230
Ne. Moment. Erst mal

2714
02:22:30,230 --> 02:22:34,120
da unten das ganze fixen.

2715
02:22:34,120 --> 02:22:39,730
AppState. Get.

2716
02:22:39,730 --> 02:22:41,730
Unwrap.

2717
02:22:41,730 --> 02:22:47,090
Connections. Und wieder und.

2718
02:22:47,090 --> 02:22:49,090
Soll ich nicht? Ja komm.

2719
02:22:49,090 --> 02:22:51,090
Wir lassen es jetzt mal so.

2720
02:22:51,090 --> 02:22:53,090
So. Insert.

2721
02:22:53,090 --> 02:22:55,090
Insert gibt es nicht. Es gibt

2722
02:22:55,090 --> 02:23:00,840
Add.

2723
02:23:00,840 --> 02:23:02,840
Und es wird einfach nur

2724
02:23:02,840 --> 02:23:04,840
die Pair Connection hinzugefügt.

2725
02:23:04,840 --> 02:23:21,840
Ach so.

2726
02:23:21,840 --> 02:23:23,840
Ja. Wenn man es mal richtig macht, dann wird es auch

2727
02:23:23,840 --> 02:23:28,440
funktionieren. Das hier unten

2728
02:23:28,440 --> 02:23:30,440
brauche ich gar nicht mehr.

2729
02:23:30,440 --> 02:23:32,440
Weil es schon

2730
02:23:32,440 --> 02:23:36,070
initialisiert ist.

2731
02:23:36,070 --> 02:23:44,240
Ja.

2732
02:23:44,240 --> 02:23:46,240
Bleibt im Endeffekt nur noch

2733
02:23:46,240 --> 02:23:48,240
das hier. Pair Connections.

2734
02:23:48,240 --> 02:23:50,240
Get ID.

2735
02:23:50,240 --> 02:23:52,240
Das hier bleibt jetzt noch zu fixen.

2736
02:23:52,240 --> 02:23:54,240
So. Und

2737
02:23:54,240 --> 02:23:56,240
wir getten jetzt.

2738
02:23:56,240 --> 02:23:58,240
Ok. Das sind U32.

2739
02:23:58,240 --> 02:24:00,240
Muss es nur noch sein.

2740
02:24:00,240 --> 02:24:02,240
Wir sind mal hart drauf

2741
02:24:02,240 --> 02:24:04,240
und casten mal schnell das U64

2742
02:24:04,240 --> 02:24:06,240
runter zu einem U32.

2743
02:24:06,240 --> 02:24:12,500
Und get ist bei mir

2744
02:24:12,500 --> 02:24:14,500
ein U32. Ja.

2745
02:24:14,500 --> 02:24:16,500
Moment. Kann man in Rust

2746
02:24:16,500 --> 02:24:18,500
das irgendwie casten?

2747
02:24:18,500 --> 02:24:20,500
Dass ich sage U32 ID?

2748
02:24:20,500 --> 02:24:22,500
Ne.

2749
02:24:22,500 --> 02:24:24,500
Ok. Ich meine das ist unsafe.

2750
02:24:24,500 --> 02:24:26,500
Das wird wahrscheinlich. S. Geht das? Ok.

2751
02:24:26,500 --> 02:24:31,220
S.

2752
02:24:31,220 --> 02:24:33,220
Ach ne. S U32.

2753
02:24:33,220 --> 02:24:35,220
Ah.

2754
02:24:35,220 --> 02:24:39,490
Unwrap.

2755
02:24:39,490 --> 02:24:48,560
Jetzt brauchen wir gar nichts unwrappen.

2756
02:24:48,560 --> 02:24:50,560
Ja doch. Ist doch gut. Passt doch alles.

2757
02:24:50,560 --> 02:24:52,560
Ok.

2758
02:24:52,560 --> 02:24:54,560
Ich glaube das war es schon.

2759
02:24:54,560 --> 02:24:56,560
Das ist übrigens blöd.

2760
02:24:56,560 --> 02:24:58,560
Das müssen wir. Wir machen das mal richtig.

2761
02:24:58,560 --> 02:25:00,560
Ja. Das ist ein U32 hier.

2762
02:25:02,560 --> 02:25:04,560
Und das ist ein U32 hier.

2763
02:25:04,560 --> 02:25:09,160
Und das ist ein

2764
02:25:09,160 --> 02:25:11,160
U32 hier.

2765
02:25:11,160 --> 02:25:13,160
U64.

2766
02:25:13,160 --> 02:25:15,160
Das ist ein U32 hier. Wir machen das mal richtig.

2767
02:25:15,160 --> 02:25:17,160
Sonst habe ich nachher irgendwelche

2768
02:25:17,160 --> 02:25:19,160
merkwürdigen random Bugs.

2769
02:25:19,160 --> 02:25:21,160
Und in .net

2770
02:25:21,160 --> 02:25:23,160
ist das auch ein Uint

2771
02:25:23,160 --> 02:25:25,160
32. Ok.

2772
02:25:25,160 --> 02:25:27,160
So.

2773
02:25:27,160 --> 02:25:29,160
So. Und jetzt können wir mal sehen ob der Bug

2774
02:25:29,160 --> 02:25:31,160
gefixt ist. Das nur einmal

2775
02:25:31,160 --> 02:25:33,160
nur einmalig funktioniert.

2776
02:25:33,160 --> 02:25:35,160
Das sollte jetzt mehrmalig mit reloaden funktionieren.

2777
02:25:35,160 --> 02:25:41,380
Starten.

2778
02:25:41,380 --> 02:25:43,380
Ok.

2779
02:25:43,380 --> 02:25:49,380
Shit. Irgendwo habe ich

2780
02:25:49,380 --> 02:25:51,380
was verkehrt gemacht.

2781
02:25:51,380 --> 02:25:53,380
Ok. 44.

2782
02:25:53,380 --> 02:25:55,380
Zeile 44. Ok.

2783
02:25:55,380 --> 02:25:59,400
Let's go. Zeile 44.

2784
02:25:59,400 --> 02:26:08,150
Hast du die

2785
02:26:08,150 --> 02:26:10,150
lip kopiert? Ja.

2786
02:26:10,150 --> 02:26:14,040
Zeile 44.

2787
02:26:14,040 --> 02:26:16,040
Die ID gibt

2788
02:26:16,040 --> 02:26:39,640
es nicht. Ok. Die ID

2789
02:26:39,640 --> 02:26:41,640
gibt es nicht. Warum gibt es die ID nicht?

2790
02:26:41,640 --> 02:26:43,640
Weil ich irgendwo, irgendwo

2791
02:26:43,640 --> 02:26:45,640
Mist mache hier.

2792
02:26:45,640 --> 02:26:47,640
ID gleich.

2793
02:26:47,640 --> 02:26:49,640
Ok. ID.

2794
02:26:49,640 --> 02:26:51,640
Ach hier. ID gleich 1.

2795
02:26:51,640 --> 02:26:59,360
0. Ja. Hier.

2796
02:26:59,360 --> 02:27:01,360
ID gleich.

2797
02:27:01,360 --> 02:27:15,880
Und jetzt gibt es die ID auch.

2798
02:27:15,880 --> 02:27:17,880
Wenn da immer 1

2799
02:27:17,880 --> 02:27:19,880
drin steht.

2800
02:27:19,880 --> 02:27:21,880
Ne Option return. Das ist gut, dass

2801
02:27:21,880 --> 02:27:23,880
das gecrashed ist. Der konnte

2802
02:27:23,880 --> 02:27:30,320
schlicht und ergreifend nicht weitermachen.

2803
02:27:30,320 --> 02:27:32,320
Ich finde das gut.

2804
02:27:32,320 --> 02:27:39,160
Da weißt du allerdings, dass es kaputt ist.

2805
02:27:39,160 --> 02:27:45,030
So. Nochmal.

2806
02:27:45,030 --> 02:27:49,490
Fuck. Ne.

2807
02:27:49,490 --> 02:27:53,190
Es geht. Der Browser

2808
02:27:53,190 --> 02:27:55,190
war einfach nur pepega gerade.

2809
02:27:55,190 --> 02:27:57,190
Kann das sein,

2810
02:27:57,190 --> 02:27:59,190
dass mein JavaScript

2811
02:27:59,190 --> 02:28:11,720
ein bisschen weirdchamp ist?

2812
02:28:11,720 --> 02:28:13,720
Ich glaube mein JavaScript war ein bisschen weirdchamp.

2813
02:28:13,720 --> 02:28:15,720
gerade.

2814
02:28:15,720 --> 02:28:17,720
Aber es funktioniert. Der Bug ist behoben.

2815
02:28:17,720 --> 02:28:19,720
WebRTC funktioniert.

2816
02:28:19,720 --> 02:28:21,720
Und er funktioniert

2817
02:28:21,720 --> 02:28:23,720
mehrfach.

2818
02:28:23,720 --> 02:28:25,720
Auch wenn man refresht.

2819
02:28:25,720 --> 02:28:27,720
Aber wenn man

2820
02:28:27,720 --> 02:28:29,720
zu schnell refresht, dann

2821
02:28:29,720 --> 02:28:34,950
Moment. Wenn er irgendwas reused,

2822
02:28:34,950 --> 02:28:36,950
dann funktioniert es nicht. Ok. Das müssen wir

2823
02:28:36,950 --> 02:28:38,950
nochmal überprüfen. Ja.

2824
02:28:38,950 --> 02:28:42,320
Der baut aber gar nicht die

2825
02:28:42,320 --> 02:28:44,320
Verbindung auf.

2826
02:28:44,320 --> 02:28:55,190
Nun ja. Der versucht

2827
02:28:55,190 --> 02:28:57,190
irgendwas zu re-usen, was er nicht

2828
02:28:57,190 --> 02:29:08,820
re-usen soll.

2829
02:29:08,820 --> 02:29:10,820
Da stimmt irgendwas doch nicht ganz in der Logik,

2830
02:29:10,820 --> 02:29:12,820
würde ich sagen.

2831
02:29:12,820 --> 02:29:14,820
Wir geben nochmal kurz aus

2832
02:29:14,820 --> 02:29:16,820
die Connection ID.

2833
02:29:18,820 --> 02:29:20,820
Weil das sollte immer eine neue ID sein.

2834
02:29:20,820 --> 02:29:24,580
Es sollte immer

2835
02:29:24,580 --> 02:29:26,580
log

2836
02:29:26,580 --> 02:29:28,580
jasonclientid.

2837
02:29:28,580 --> 02:29:30,580
Es sollte immer eine neue ID sein.

2838
02:29:30,580 --> 02:29:32,580
35, 36,

2839
02:29:32,580 --> 02:29:34,580
37. Es ist auch immer eine neue.

2840
02:29:34,580 --> 02:29:36,580
38,

2841
02:29:36,580 --> 02:29:38,580
39. Ja.

2842
02:29:38,580 --> 02:29:40,580
Der Browser denkt nur,

2843
02:29:40,580 --> 02:29:42,580
er kann die Sache cachen aus irgendwelchen Gründen.

2844
02:29:42,580 --> 02:29:44,580
Und das funktioniert nicht.

2845
02:29:44,580 --> 02:29:46,580
Guck. Manchmal

2846
02:29:46,580 --> 02:29:48,580
cache das und manchmal nicht.

2847
02:29:48,580 --> 02:29:50,580
Keine Ahnung, was mein Browser da für

2848
02:29:50,580 --> 02:29:52,580
pepegasachen macht.

2849
02:29:52,580 --> 02:29:54,580
Aber ich bin mir relativ sicher,

2850
02:29:54,580 --> 02:29:56,580
hier, weil es auch immer neu ist,

2851
02:29:56,580 --> 02:29:58,580
dass das nicht an meinem Backend liegt.

2852
02:29:58,580 --> 02:30:04,640
Weil, weil,

2853
02:30:04,640 --> 02:30:06,640
wenn ich ohne cache refreshe,

2854
02:30:06,640 --> 02:30:08,640
guckt,

2855
02:30:08,640 --> 02:30:10,640
wenn ich ohne cache refreshe,

2856
02:30:10,640 --> 02:30:12,640
dann funzt es immer.

2857
02:30:12,640 --> 02:30:17,880
Bis es nicht funktioniert.

2858
02:30:17,880 --> 02:30:26,820
Kommt das nicht irgendwie in die

2859
02:30:26,820 --> 02:30:34,360
Quere? Das sieht ein bisschen

2860
02:30:34,360 --> 02:30:36,360
so nach Thread-Problemen aus, oder?

2861
02:30:38,360 --> 02:30:40,360
Aber ihr seht, es ist immer eine neue

2862
02:30:40,360 --> 02:30:42,360
Connection. Also daran kann es ja eigentlich

2863
02:30:42,360 --> 02:30:45,920
nicht liegen. Und nachdem ich immer

2864
02:30:45,920 --> 02:30:47,920
alles schön unwrappe und hier nichts abkackt,

2865
02:30:47,920 --> 02:30:52,960
ich schieb das wirklich

2866
02:30:52,960 --> 02:30:54,960
aktuell auf meinen Browser.

2867
02:30:54,960 --> 02:30:58,280
Dass der da nicht so genau

2868
02:30:58,280 --> 02:31:00,280
weiß,

2869
02:31:00,280 --> 02:31:07,240
was er macht.

2870
02:31:07,240 --> 02:31:09,240
Ich schieb's auch auf JavaScript.

2871
02:31:09,240 --> 02:31:13,700
Versuch mal Firefox.

2872
02:31:13,700 --> 02:31:15,700
About WebRTC.

2873
02:31:15,700 --> 02:31:23,300
Ja. True.

2874
02:31:23,300 --> 02:31:31,670
Nö.

2875
02:31:31,670 --> 02:31:36,900
Firefox hat das gleiche.

2876
02:31:36,900 --> 02:31:50,520
Failed. Aber ihr

2877
02:31:50,520 --> 02:31:53,960
seht, er hat die.

2878
02:31:53,960 --> 02:31:57,330
Er bekommt die Offer hier.

2879
02:31:57,330 --> 02:31:59,330
Hat der Probleme mit den Multiplexen

2880
02:31:59,330 --> 02:32:04,760
beim Port oder so?

2881
02:32:04,760 --> 02:32:06,760
Wir machen noch mal ganz kurz den Debug

2882
02:32:06,760 --> 02:32:14,480
rein.

2883
02:32:14,480 --> 02:32:16,480
Das ändert daran doch

2884
02:32:16,480 --> 02:32:22,480
jetzt auch nichts.

2885
02:32:22,480 --> 02:32:24,480
An Rust nirgendwo Error-Handling.

2886
02:32:24,480 --> 02:32:26,480
Also an Rust wird's in dem Fall echt nicht liegen.

2887
02:32:26,480 --> 02:32:28,480
An der Rust-Seite.

2888
02:32:28,480 --> 02:32:30,480
Irgendwie liegt's glaube ich an

2889
02:32:30,480 --> 02:32:32,480
PPGA JavaScript. Ist meine Vermutung.

2890
02:32:32,480 --> 02:32:43,990
Irgendwie.

2891
02:32:43,990 --> 02:32:45,990
Das ist übrigens auch

2892
02:32:45,990 --> 02:32:47,990
da waren sie lustig bei Firefox.

2893
02:32:47,990 --> 02:32:49,990
Das steht in jeder dieser

2894
02:32:49,990 --> 02:32:51,990
Meldungen drinne.

2895
02:32:51,990 --> 02:32:53,990
Das ist SDP.

2896
02:32:53,990 --> 02:32:55,990
Weil das halt das Session Description

2897
02:32:55,990 --> 02:32:57,990
Protokoll ist, weil einer lustig hat geschrieben.

2898
02:32:57,990 --> 02:33:02,580
Das ist Superachter.

2899
02:33:02,580 --> 02:33:04,580
Wenn man das mal sieht, da war Mozilla Mitarbeiter.

2900
02:33:04,580 --> 02:33:06,580
Wollten witzig sein.

2901
02:33:06,580 --> 02:33:08,580
Lull.

2902
02:33:08,580 --> 02:33:10,580
Also das hat funktioniert offensichtlich.

2903
02:33:10,580 --> 02:33:12,580
Sonst hätte er hier ja

2904
02:33:12,580 --> 02:33:30,040
nix geantwortet.

2905
02:33:30,040 --> 02:33:32,040
Wir machen noch mal hier

2906
02:33:32,040 --> 02:33:34,040
Keckel.

2907
02:33:34,040 --> 02:33:36,040
Wintel.

2908
02:33:36,040 --> 02:33:38,040
So.

2909
02:33:38,040 --> 02:33:40,040
Jetzt können wir mal gucken.

2910
02:33:40,040 --> 02:33:47,380
Was? Also das sieht nicht so aus

2911
02:33:47,380 --> 02:33:49,380
als liegt das

2912
02:33:49,380 --> 02:33:51,380
Hä?

2913
02:33:51,380 --> 02:33:53,380
Ich glaube eher das liegt am JavaScript Zeug.

2914
02:33:53,380 --> 02:34:05,970
Ok.

2915
02:34:05,970 --> 02:34:12,680
Zweites ist kaputt gegangen.

2916
02:34:12,680 --> 02:34:14,680
Keckel.

2917
02:34:14,680 --> 02:34:16,680
Bei mir ist alles durchgegangen.

2918
02:34:16,680 --> 02:34:20,690
Also ich vermute das liegt.

2919
02:34:20,690 --> 02:34:22,690
Es ist auch immer ne neue ID

2920
02:34:22,690 --> 02:34:24,690
am Start.

2921
02:34:24,690 --> 02:34:28,900
ID 2.

2922
02:34:28,900 --> 02:34:30,900
Wir können mal gucken ob es in neuen Tabs

2923
02:34:30,900 --> 02:34:34,660
irgendwann auftritt.

2924
02:34:34,660 --> 02:34:36,660
Wenn es nämlich nicht in neuen Tabs auftritt.

2925
02:34:36,660 --> 02:34:38,660
Dann liegt das.

2926
02:34:38,660 --> 02:34:43,000
Ok es tritt auch in neuen Tabs auf.

2927
02:34:43,000 --> 02:34:45,000
Dann ist tatsächlich irgendwas

2928
02:34:45,000 --> 02:34:47,000
kaputt.

2929
02:34:47,000 --> 02:35:09,830
Aber das werden wir nicht jetzt fixen.

2930
02:35:09,830 --> 02:35:11,830
Warte der Browser nicht lang genug?

2931
02:35:11,830 --> 02:35:13,830
Ne das glaube ich nicht so schnell wie das immer geht.

2932
02:35:13,830 --> 02:35:17,720
Aber auf jeden Fall wenn es jeden

2933
02:35:17,720 --> 02:35:19,720
zehntes mal loaden oder so nicht funktioniert

2934
02:35:19,720 --> 02:35:27,760
dann ist schon PP egal.

2935
02:35:27,760 --> 02:35:29,760
Ah hier. Failed.

2936
02:35:29,760 --> 02:35:31,760
Clear History.

2937
02:35:31,760 --> 02:35:33,760
Clear History.

2938
02:35:33,760 --> 02:35:35,760
Clear History juckt dies nicht.

2939
02:35:35,760 --> 02:35:39,460
Clear History.

2940
02:35:39,460 --> 02:35:41,460
Ja das geht.

2941
02:35:41,460 --> 02:35:43,460
Doch in nicht unerheblichen Teil

2942
02:35:43,460 --> 02:35:45,460
der Fälle.

2943
02:35:45,460 --> 02:35:50,180
Geht es kaputt.

2944
02:35:50,180 --> 02:35:52,180
Er bekommt aber den Handshake.

2945
02:35:52,180 --> 02:35:58,370
Ja er bekommt auch Candidates.

2946
02:35:58,370 --> 02:36:06,160
Also ich tippe

2947
02:36:06,160 --> 02:36:08,160
drauf dass das ein Problem der

2948
02:36:08,160 --> 02:36:10,160
Rust Library vielleicht ist.

2949
02:36:10,160 --> 02:36:12,160
Weil ich mache

2950
02:36:12,160 --> 02:36:16,820
hier so Port Multiplexing.

2951
02:36:16,820 --> 02:36:18,820
Ich mache hier so Port Multiplexing

2952
02:36:18,820 --> 02:36:20,820
und das ist

2953
02:36:20,820 --> 02:36:22,820
meine letzte Amtshandlung heute.

2954
02:36:22,820 --> 02:36:24,820
Ich lass das mal weg.

2955
02:36:24,820 --> 02:36:26,820
Das Port Multiplexing und guck mal ob es

2956
02:36:26,820 --> 02:36:31,990
dann weg ist.

2957
02:36:31,990 --> 02:36:33,990
Ohne Port Multiplexing will ich das nicht betreiben.

2958
02:36:33,990 --> 02:36:41,650
Was bedeuten die

2959
02:36:41,650 --> 02:36:43,650
Abkürzungen in Rust?

2960
02:36:43,650 --> 02:36:45,650
Welche Abkürzungen?

2961
02:36:45,650 --> 02:36:47,650
Also unspezifischer Fragen

2962
02:36:47,650 --> 02:36:51,090
hättest du auch nicht mehr können oder?

2963
02:36:51,090 --> 02:36:53,090
Oh du meinst für was Rust steht.

2964
02:36:53,090 --> 02:36:55,090
Rust ist gar keine Abkürzung.

2965
02:36:55,090 --> 02:37:00,520
Rust ist ne Programmiersprache.

2966
02:37:00,520 --> 02:37:02,520
Was ist Port Multiplexing?

2967
02:37:02,520 --> 02:37:04,520
Der macht mehrere Connections über den gleichen Port

2968
02:37:04,520 --> 02:37:09,750
anstatt für jeden Port was eigenes auf.

2969
02:37:09,750 --> 02:37:11,750
Ah.

2970
02:37:11,750 --> 02:37:13,750
Chatge.

2971
02:37:13,750 --> 02:37:15,750
Ich glaube das liegt am Port Multiplexing.

2972
02:37:15,750 --> 02:37:17,750
Guckt mal.

2973
02:37:17,750 --> 02:37:23,490
Seht ihr das?

2974
02:37:23,490 --> 02:37:36,920
Jetzt kackt nix ab.

2975
02:37:36,920 --> 02:37:43,240
Das liegt am Port Multiplexing von der Library.

2976
02:37:43,240 --> 02:37:45,240
Aber ohne Port Multiplexing werde ich das nicht

2977
02:37:45,240 --> 02:37:49,440
betreiben.

2978
02:37:49,440 --> 02:37:51,440
Guckt das wäre schon längst abgekackt.

2979
02:37:51,440 --> 02:37:55,650
Normalerweise.

2980
02:37:55,650 --> 02:37:59,920
Ich kann noch ein paar mal refreshen.

2981
02:37:59,920 --> 02:38:05,800
Passt mal auf.

2982
02:38:05,800 --> 02:38:10,320
Ich hab halt ein paar Ports offen jetzt.

2983
02:38:10,320 --> 02:38:12,320
Was kann man da jetzt machen?

2984
02:38:12,320 --> 02:38:14,320
Ehrlich gesagt vermutlich

2985
02:38:14,320 --> 02:38:16,320
nicht viel.

2986
02:38:16,320 --> 02:38:18,320
Was ich jetzt machen würde

2987
02:38:18,320 --> 02:38:20,320
ist.

2988
02:38:20,320 --> 02:38:22,320
Ich würde nen Retry im Javascript einbauen.

2989
02:38:22,320 --> 02:38:24,320
Also guck mal.

2990
02:38:24,320 --> 02:38:26,320
Zum Beispiel.

2991
02:38:26,320 --> 02:38:28,320
Also sagen wir mal das hier.

2992
02:38:28,320 --> 02:38:30,320
Das ist ja relativ offensichtlich der Bug.

2993
02:38:30,320 --> 02:38:32,320
Der irgendwie im Port Multiplexing liegt.

2994
02:38:32,320 --> 02:38:34,320
Und nachdem ich hier nix großartig einstellen kann.

2995
02:38:34,320 --> 02:38:41,160
Ja wird.

2996
02:38:41,160 --> 02:38:43,160
Man kann ja auch keine großartigen Settings

2997
02:38:43,160 --> 02:38:45,160
sonst einstellen.

2998
02:38:45,160 --> 02:38:47,160
Unip Multiplexing Default.

2999
02:38:47,160 --> 02:38:51,160
Man kann da nicht wirklich viel einstellen.

3000
02:38:51,160 --> 02:38:55,240
Closed.

3001
02:38:55,240 --> 02:39:00,210
Gibt keine großartigen Settings.

3002
02:39:00,210 --> 02:39:02,210
Ich würde nen Retry einbauen.

3003
02:39:02,210 --> 02:39:04,210
Im Javascript.

3004
02:39:04,210 --> 02:39:13,540
Ne da kann man nicht viel.

3005
02:39:13,540 --> 02:39:19,160
Option.

3006
02:39:19,160 --> 02:39:21,160
Warum nicht TCP?

3007
02:39:21,160 --> 02:39:23,160
Würde ich gerne machen.

3008
02:39:23,160 --> 02:39:25,160
Unterstützt die Library nicht.

3009
02:39:25,160 --> 02:39:27,160
Und ist für Echtzeit Video jetzt auch nicht so wichtig.

3010
02:39:27,160 --> 02:39:29,160
Also ich würde nen Retry einbauen.

3011
02:39:29,160 --> 02:39:31,160
Ehrlich gesagt.

3012
02:39:31,160 --> 02:39:33,160
Und zwar.

3013
02:39:33,160 --> 02:39:36,980
Mal.

3014
02:39:36,980 --> 02:39:38,980
Kompilieren das nochmal.

3015
02:39:38,980 --> 02:39:40,980
Dann gehen wir in C Sharp.

3016
02:39:40,980 --> 02:39:42,980
Führen das nochmal aus.

3017
02:39:42,980 --> 02:39:44,980
Machen wir sogar Minus C Release.

3018
02:39:44,980 --> 02:39:46,980
Hier auch mal.

3019
02:39:46,980 --> 02:39:48,980
Gucken ob das Problem noch auftritt.

3020
02:39:48,980 --> 02:39:50,980
Ja Problem tritt immer noch auf.

3021
02:39:50,980 --> 02:39:52,980
Also es liegt echt.

3022
02:39:52,980 --> 02:39:54,980
Es liegt echt am Port Multiplexing.

3023
02:39:54,980 --> 02:39:56,980
Guckt das das manchmal nicht geht.

3024
02:39:56,980 --> 02:39:58,980
Kaum ist das eingeschaltet.

3025
02:39:58,980 --> 02:40:04,020
Bugts wieder rum.

3026
02:40:04,020 --> 02:40:06,020
So was ich jetzt machen würde ist. Ganz ehrlich.

3027
02:40:06,020 --> 02:40:08,020
Retry hier im Javascript einbauen.

3028
02:40:08,020 --> 02:40:10,020
So nach dem Motto.

3029
02:40:10,020 --> 02:40:12,020
Ey.

3030
02:40:12,020 --> 02:40:14,020
Wenn das.

3031
02:40:14,020 --> 02:40:16,020
Innerhalb von.

3032
02:40:16,020 --> 02:40:18,020
Nicht connected hat.

3033
02:40:18,020 --> 02:40:20,020
Dann Retry.

3034
02:40:20,020 --> 02:40:22,020
Das kann ich mir jetzt.

3035
02:40:22,020 --> 02:40:24,020
Das kann ich mir jetzt nicht aus dem Ärmel schütteln.

3036
02:40:24,020 --> 02:40:26,020
Aber ich schreib mir das mal als To Do rein.

3037
02:40:26,020 --> 02:40:29,720
To Do Retry.

3038
02:40:29,720 --> 02:40:31,720
Oder vielleicht kann man das.

3039
02:40:31,720 --> 02:40:33,720
Ich mein 5 Minuten haben wir noch Zeit.

3040
02:40:33,720 --> 02:40:35,720
Vielleicht kann man das sogar relativ einfach machen.

3041
02:40:35,720 --> 02:40:37,720
Der legt hier die Verbindung an.

3042
02:40:37,720 --> 02:40:42,370
So und.

3043
02:40:42,370 --> 02:40:44,370
Okay ich weiß was wir machen. Easy. Easy.

3044
02:40:44,370 --> 02:40:46,370
Ich weiß was wir machen. Guck mal.

3045
02:40:46,370 --> 02:40:48,370
Z Intervall. Es ist Javascript.

3046
02:40:48,370 --> 02:40:50,370
Da können wir auch eklige Sachen machen.

3047
02:40:50,370 --> 02:40:52,370
Z Intervall. Nach einer Sekunde.

3048
02:40:52,370 --> 02:40:54,370
Ja.

3049
02:40:54,370 --> 02:40:56,370
Das wird jetzt.

3050
02:40:56,370 --> 02:40:58,370
Richtig eklig.

3051
02:40:58,370 --> 02:41:00,370
Das wird so eklig.

3052
02:41:00,370 --> 02:41:02,370
Da werdet ihr den Stream ausschalten wollen.

3053
02:41:02,370 --> 02:41:04,370
Also wenn nach einer Sekunde.

3054
02:41:04,370 --> 02:41:08,520
Der Connection State.

3055
02:41:08,520 --> 02:41:10,520
Ähm.

3056
02:41:10,520 --> 02:41:12,520
Der Connection State ungleich.

3057
02:41:12,520 --> 02:41:14,520
Ungleich.

3058
02:41:14,520 --> 02:41:16,520
Connected ist.

3059
02:41:16,520 --> 02:41:18,520
Dann.

3060
02:41:18,520 --> 02:41:22,210
Passt auf.

3061
02:41:22,210 --> 02:41:24,210
Dann.

3062
02:41:24,210 --> 02:41:26,210
Window. Location.

3063
02:41:26,210 --> 02:41:30,740
Reload.

3064
02:41:30,740 --> 02:41:44,740
Oh.

3065
02:41:44,740 --> 02:41:46,740
Das ist ein bisschen schnell.

3066
02:41:46,740 --> 02:41:48,740
Das ist ein bisschen. Okay.

3067
02:41:48,740 --> 02:41:50,740
Vielleicht 2 Sekunden.

3068
02:41:50,740 --> 02:41:52,740
Vielleicht 2 Sekunden.

3069
02:41:52,740 --> 02:41:57,330
Okay 2 Sekunden.

3070
02:41:57,330 --> 02:41:59,330
Jetzt hab ich es gebrokent.

3071
02:41:59,330 --> 02:42:01,330
Jetzt ist es kaputt Leute.

3072
02:42:01,330 --> 02:42:04,710
Ah. Geht doch. Geht doch. Easy.

3073
02:42:04,710 --> 02:42:08,980
Vielleicht sollte man.

3074
02:42:08,980 --> 02:42:10,980
Okay. Vielleicht machen wir auch 3 Sekunden.

3075
02:42:10,980 --> 02:42:18,360
Easy.

3076
02:42:18,360 --> 02:42:20,360
Eventuell noch Clear Intervall im Else Case.

3077
02:42:20,360 --> 02:42:22,360
Äh.

3078
02:42:22,360 --> 02:42:27,520
Moment. Ich will ja auch nicht

3079
02:42:27,520 --> 02:42:29,520
Z Intervall. Ich will Z Timeout.

3080
02:42:29,520 --> 02:42:33,090
Ich will ja Z Timeout. Ich will ja gar nicht

3081
02:42:33,090 --> 02:42:35,090
Z Intervall.

3082
02:42:35,090 --> 02:42:47,490
Ich will ja, dass es nur einmal ausgeführt wird.

3083
02:42:47,490 --> 02:42:49,490
Guck. Und es funzt.

3084
02:42:49,490 --> 02:42:51,490
Ha. Connection Probleme.

3085
02:42:51,490 --> 02:42:53,490
3 Sekunden später. Bam. Seite.

3086
02:42:53,490 --> 02:42:57,570
Reloaded. Connection. Funzt.

3087
02:42:57,570 --> 02:42:59,570
Kannst du nicht das Event Connected abfangen

3088
02:42:59,570 --> 02:43:03,330
für den Reload?

3089
02:43:03,330 --> 02:43:05,330
Doch.

3090
02:43:05,330 --> 02:43:07,330
Aber ich will ja hart nach 3 Sekunden

3091
02:43:07,330 --> 02:43:09,330
gucken ob es Connected ist.

3092
02:43:09,330 --> 02:43:11,330
Das Event Connected fange ich

3093
02:43:11,330 --> 02:43:13,330
hier ab. Ja.

3094
02:43:13,330 --> 02:43:15,330
Ich könnte warten.

3095
02:43:15,330 --> 02:43:17,330
Ich könnte warten bis das auf Failed steht.

3096
02:43:17,330 --> 02:43:19,330
Zum Beispiel.

3097
02:43:19,330 --> 02:43:21,330
Gucken wir mal wie lange es dauert bis es auf Failed sich stellt.

3098
02:43:21,330 --> 02:43:27,940
So.

3099
02:43:27,940 --> 02:43:33,490
Dauert ewig.

3100
02:43:33,490 --> 02:43:40,390
Es dauert ewig bis es auf Failed geht.

3101
02:43:40,390 --> 02:43:42,390
Das geht einfach gar nicht auf Failed.

3102
02:43:42,390 --> 02:43:47,300
Das fängt

3103
02:43:47,300 --> 02:43:52,600
auch gar nicht an erst.

3104
02:43:52,600 --> 02:43:54,600
Z Intervall.

3105
02:43:54,600 --> 02:43:56,600
Wir gucken jetzt mal kurz.

3106
02:43:56,600 --> 02:43:58,600
Alle Sekunde.

3107
02:43:58,600 --> 02:44:00,600
Log PC

3108
02:44:00,600 --> 02:44:02,600
Connection State

3109
02:44:02,600 --> 02:44:04,600
und Log

3110
02:44:04,600 --> 02:44:06,600
PC Ice

3111
02:44:06,600 --> 02:44:14,320
Connection State.

3112
02:44:14,320 --> 02:44:16,320
Ok. New. New. New.

3113
02:44:16,320 --> 02:44:18,320
New. New.

3114
02:44:18,320 --> 02:44:20,320
Das geht nie auf Failed.

3115
02:44:20,320 --> 02:44:22,320
Das macht einfach gar nichts.

3116
02:44:22,320 --> 02:44:24,320
Ihr seht die Logs nicht.

3117
02:44:24,320 --> 02:44:26,320
Ja jetzt habt ihr es gerade gesehen.

3118
02:44:26,320 --> 02:44:40,070
Jetzt gerade hat man es gesehen. Ok.

3119
02:44:40,070 --> 02:44:44,210
Ich mach das da für euch in die Mitte. Ok.

3120
02:44:44,210 --> 02:44:46,210
Das erkennt gar nicht dass es Failed ist.

3121
02:44:46,210 --> 02:44:48,210
Das heißt

3122
02:44:48,210 --> 02:44:50,210
mein Ansatz

3123
02:44:50,210 --> 02:44:52,210
ist einfach bester JavaScript Fix ever.

3124
02:44:54,210 --> 02:44:56,210
3 Sekunden warten. Wenn nicht Connected

3125
02:44:56,210 --> 02:44:58,210
Restart. Easy.

3126
02:44:58,210 --> 02:45:00,210
Guck. Nicht Connected.

3127
02:45:00,210 --> 02:45:02,210
3 Sekunden später Restart

3128
02:45:02,210 --> 02:45:04,210
und Connected. Connected.

3129
02:45:04,210 --> 02:45:06,210
Also ich glaube

3130
02:45:06,210 --> 02:45:08,210
das liegt irgendwie in diesem Port Multiplexing.

3131
02:45:08,210 --> 02:45:10,210
Was man auch gesehen hat.

3132
02:45:10,210 --> 02:45:12,210
Weil sobald ich das Port Multiplexing

3133
02:45:14,210 --> 02:45:16,210
Port Multiplexing raus mache.

3134
02:45:16,210 --> 02:45:18,210
Ach guck mal.

3135
02:45:18,210 --> 02:45:20,210
Irgendwann geht das auf Failed mal.

3136
02:45:20,210 --> 02:45:22,210
Github

3137
02:45:22,210 --> 02:45:24,210
Github

3138
02:45:24,210 --> 02:45:26,210
WebRTCS.

3139
02:45:26,210 --> 02:45:28,210
Wir können noch einmal kurz hier rein gucken

3140
02:45:28,210 --> 02:45:30,210
in die Examples.

3141
02:45:30,210 --> 02:45:33,840
UDP

3142
02:45:33,840 --> 02:45:35,840
Single Port.

3143
02:45:35,840 --> 02:45:37,840
Ne die hatten gar kein Beispiel

3144
02:45:37,840 --> 02:45:39,840
dafür.

3145
02:45:39,840 --> 02:45:41,840
Ne die hatten kein Beispiel dafür.

3146
02:45:41,840 --> 02:45:53,920
Nice.

3147
02:45:53,920 --> 02:45:59,220
Ok die High IQ Leute

3148
02:45:59,220 --> 02:46:03,620
setzen das so.

3149
02:46:03,620 --> 02:46:05,620
Was ist UDP?

3150
02:46:05,620 --> 02:46:07,620
Die verbindungslose Variante von TCP.

3151
02:46:07,620 --> 02:46:09,620
Von TCP.

3152
02:46:09,620 --> 02:46:11,620
Settings

3153
02:46:11,620 --> 02:46:13,620
Engine.

3154
02:46:15,620 --> 02:46:17,620
Ok das hat dir jetzt wahrscheinlich nicht so viel gebracht.

3155
02:46:17,620 --> 02:46:23,880
Aber.

3156
02:46:23,880 --> 02:46:25,880
Settings Engine.

3157
02:46:25,880 --> 02:46:27,880
Z UDP Network.

3158
02:46:27,880 --> 02:46:29,880
Ok die coolen Leute machen so.

3159
02:46:29,880 --> 02:46:31,880
Vielleicht bin ich einfach nicht

3160
02:46:31,880 --> 02:46:33,880
Rust Pro genug.

3161
02:46:33,880 --> 02:46:35,880
Ich meine mal seriously.

3162
02:46:35,880 --> 02:46:37,880
Das hier ist wahrscheinlich nicht viel anders

3163
02:46:37,880 --> 02:46:39,880
zu dem was ich gebaut habe.

3164
02:46:39,880 --> 02:46:45,750
Äh.

3165
02:46:45,750 --> 02:46:51,560
Achso ja. Settings Engine sollte ich vielleicht mal anlegen.

3166
02:46:51,560 --> 02:46:53,560
Ob das jetzt.

3167
02:46:53,560 --> 02:46:55,560
Das müsste die gleichen Probleme haben.

3168
02:46:55,560 --> 02:46:59,760
Es ist kein Unterschied zu dem

3169
02:46:59,760 --> 02:47:01,760
was ich gemacht habe.

3170
02:47:01,760 --> 02:47:05,520
Warum RUST?

3171
02:47:05,520 --> 02:47:07,520
Weil blazingly fast

3172
02:47:07,520 --> 02:47:09,520
und coole Leute verwenden Rust.

3173
02:47:09,520 --> 02:47:11,520
Ich will auch zu den

3174
02:47:11,520 --> 02:47:13,520
coolen Leuten gehören.

3175
02:47:13,520 --> 02:47:15,520
Ne ok Problem gibt es immer noch.

3176
02:47:15,520 --> 02:47:17,520
Jetzt geht es gar nicht mehr.

3177
02:47:17,520 --> 02:47:19,520
Jetzt geht es gar nicht mehr.

3178
02:47:19,520 --> 02:47:24,370
Jetzt ist komplett kaputt.

3179
02:47:24,370 --> 02:47:33,120
Jetzt komplett broken.

3180
02:47:33,120 --> 02:47:35,120
Ne jetzt geht es.

3181
02:47:35,120 --> 02:47:37,120
Hat ein bisschen gebraucht.

3182
02:47:37,120 --> 02:47:39,120
Ne aber es ist immer noch kaputt.

3183
02:47:39,120 --> 02:47:45,000
Ist immer noch kaputt.

3184
02:47:45,000 --> 02:47:47,000
Aber leakst du jetzt nicht eine Connection

3185
02:47:47,000 --> 02:47:49,000
beziehungsweise eine ID?

3186
02:47:49,000 --> 02:47:51,000
Aktuell schon.

3187
02:47:51,000 --> 02:47:53,000
Aktuell schon.

3188
02:47:53,000 --> 02:47:55,000
Wir probieren WebRTC zu streamen.

3189
02:47:55,000 --> 02:47:57,000
Vom Server in den Browser.

3190
02:47:57,000 --> 02:47:59,000
Aber wir sind

3191
02:47:59,000 --> 02:48:01,000
immer mal gleich los.

3192
02:48:01,000 --> 02:48:03,000
Doch aktuell leake ich.

3193
02:48:03,000 --> 02:48:05,000
Ich brauche jetzt noch sowas wie.

3194
02:48:05,000 --> 02:48:07,000
Das muss auch noch ins to do rein.

3195
02:48:07,000 --> 02:48:09,000
To do.

3196
02:48:09,000 --> 02:48:11,000
Clean up old connections.

3197
02:48:13,000 --> 02:48:15,000
Dazu kann man.

3198
02:48:15,000 --> 02:48:17,000
Heute nicht.

3199
02:48:17,000 --> 02:48:19,000
Dazu kann man beispielsweise.

3200
02:48:19,000 --> 02:48:21,000
Ein Event subscriben.

3201
02:48:21,000 --> 02:48:23,000
Da gibt es.

3202
02:48:23,000 --> 02:48:26,310
Per Connection.

3203
02:48:26,310 --> 02:48:30,200
State.

3204
02:48:30,200 --> 02:48:32,200
On.

3205
02:48:32,200 --> 02:48:34,200
On State.

3206
02:48:34,200 --> 02:48:36,200
On Per Connection

3207
02:48:36,200 --> 02:48:38,200
State Changed.

3208
02:48:38,200 --> 02:48:40,200
Wie auch immer man das aufruft.

3209
02:48:40,200 --> 02:48:42,200
Da steckt man

3210
02:48:42,200 --> 02:48:47,300
ein Callback rein.

3211
02:48:47,300 --> 02:48:49,300
Ich lasse hier einfach einen Syntax Fehler drin.

3212
02:48:49,300 --> 02:48:51,300
Da muss ich nix weiter machen.

3213
02:48:51,300 --> 02:48:53,300
Und dann kann ich warten bis der Code quasi.

3214
02:48:53,300 --> 02:48:55,300
Closed ist.

3215
02:48:55,300 --> 02:48:57,300
Und dann lösche ich den aus der.

3216
02:48:57,300 --> 02:48:59,300
Aus der Hashmap.

3217
02:48:59,300 --> 02:49:01,300
Und dann wird nix mehr geleakt.

3218
02:49:01,300 --> 02:49:04,680
Okay.

3219
02:49:04,680 --> 02:49:06,680
Der Rest ist selbsterklärend.

3220
02:49:06,680 --> 02:49:08,680
Deswegen hat das auch keine Tests oder Docs.

3221
02:49:08,680 --> 02:49:10,680
Brauch man nicht.

3222
02:49:10,680 --> 02:49:14,690
Ist alles selbsterklärend.

3223
02:49:14,690 --> 02:49:16,690
git add-a git diff.

3224
02:49:16,690 --> 02:49:18,690
Ah Quatsch.

3225
02:49:18,690 --> 02:49:20,690
git diff--staged.

3226
02:49:20,690 --> 02:49:26,500
Oder so.

3227
02:49:26,500 --> 02:49:28,500
Okay.

3228
02:49:28,500 --> 02:49:32,130
Keine Windows.

3229
02:49:32,130 --> 02:49:34,130
Ich wollte gucken ob Windows Line Endings wieder drin sind.

3230
02:49:34,130 --> 02:49:36,130
Okay.

3231
02:49:36,130 --> 02:49:38,130
git status git commit a-m.

3232
02:49:38,130 --> 02:49:41,510
Qt Chat.

3233
02:49:41,510 --> 02:49:43,510
Okay.

3234
02:49:43,510 --> 02:49:45,510
MVP.

3235
02:49:45,510 --> 02:49:47,510
Leute.

3236
02:49:47,510 --> 02:49:49,510
Wir küren jetzt am Abschluss jedes Streams.

3237
02:49:49,510 --> 02:49:51,510
Chatge-MVPs.

3238
02:49:51,510 --> 02:49:53,510
So.

3239
02:49:53,510 --> 02:49:55,510
MVP.

3240
02:49:55,510 --> 02:49:57,510
Wer ist der heute.

3241
02:49:57,510 --> 02:49:59,510
Was ist euch heute besonders positiv aufgefallen.

3242
02:49:59,510 --> 02:50:01,510
Wir machen Chatge.

3243
02:50:01,510 --> 02:50:03,510
Chatge darf Chatge bewerten.

3244
02:50:03,510 --> 02:50:05,510
Communityge.

3245
02:50:05,510 --> 02:50:20,470
Gut. Keiner.

3246
02:50:20,470 --> 02:50:25,510
Auch gut.

3247
02:50:25,510 --> 02:50:27,510
Von Aqua.

3248
02:50:27,510 --> 02:50:33,060
Ja. Den können wir tatsächlich reinschreiben.

3249
02:50:33,060 --> 02:50:38,480
Von Aqua.

3250
02:50:38,480 --> 02:50:40,480
Ähm.

3251
02:50:40,480 --> 02:50:45,460
Odolmet war auch voll am Start.

3252
02:50:45,460 --> 02:50:47,460
Wen haben wir denn hier sonst noch.

3253
02:50:47,460 --> 02:50:49,460
Wer ist mir denn sonst noch positiv aufgefallen.

3254
02:50:49,460 --> 02:50:51,460
Heute.

3255
02:50:51,460 --> 02:51:09,300
Was Rust Knowledge angeht.

3256
02:51:09,300 --> 02:51:11,300
Zwei MVP's reichen.

3257
02:51:11,300 --> 02:51:13,300
Ja.

3258
02:51:13,300 --> 02:51:31,270
Und uns Deck Overflow.

3259
02:51:31,270 --> 02:51:35,540
Git Status.

3260
02:51:35,540 --> 02:51:37,540
Gut.

3261
02:51:37,540 --> 02:51:39,540
Git Log. Alles da.

3262
02:51:39,540 --> 02:51:41,540
Git Push Origin Master.

3263
02:51:41,540 --> 02:51:43,540
Bestimmt die ersten getriggert wieder auf Twitch direkt.

3264
02:51:43,540 --> 02:51:45,540
Der Brand schreist.

3265
02:51:45,540 --> 02:51:52,690
Master und nicht Main.

3266
02:51:52,690 --> 02:51:57,800
Anzeige ist raus.

3267
02:51:57,800 --> 02:51:59,800
So. Mal gucken ob alles auf

3268
02:51:59,800 --> 02:52:01,800
Shithub ordentlich drin ist.

3269
02:52:01,800 --> 02:52:03,800
Ja. Sieht gut aus.

3270
02:52:03,800 --> 02:52:08,770
Okay Chatge.

3271
02:52:08,770 --> 02:52:10,770
Nice. Schön dass ihr am Start gewesen seid.

3272
02:52:10,770 --> 02:52:14,660
Ich geh jetzt pennen.

3273
02:52:14,660 --> 02:52:16,660
Wir sehen uns. Bis denn. Macht's gut.

3274
02:52:16,660 --> 02:52:18,660
See you.
