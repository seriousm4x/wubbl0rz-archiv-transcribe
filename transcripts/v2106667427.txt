So, exzellent, so, heute war ich schnell, Leute, massive, ist mir gar nicht so aufgefallen, dass ich so schnell war, mein Garmin meint New Personal Record über eine Meile, wie viel ist eigentlich eine Meile, Sekunde, Kekone Einheiten, aha, 1,6 Kilometer, na, obviously, warte mal, eine Meile, zwei Kilometer,
1,609344 Kilometer, Alter, wer denkt sich denn sowas aus, Mann, okay, ich meine, mir ist klar, wie man sich das ausdenkt, unabhängig voneinander, die Amis, Alter, aber die geben ja auch das Gewicht von einer Maus, die man bei Amazon bestellt, also Computer-Maus, ja, geben die auch in Ounces an und so einen Blödsinn,
naja, zumindest ist Garmin da, meine, heute war ein Rekord,
über eine Meile, und zwar in 8 Minuten 37, und ich hätte fast aus Versehen meinen 5 Kilometer Rekord geknackt, wenn ich den ersten Kilometer ein bisschen schneller gerannt wäre, und das, obwohl ich es eigentlich gar nicht drauf angelegt habe, also das zahlt sich doch aus, das regelmäßig, also,
ich renne jetzt ja mehr als früher,
früher,
früher bin ich, früher habe ich mir vorgenommen, ich gehe jeden zweiten Tag rennen, das ist dann, das hat dann oftmals nicht hingehauen, weil ich morgens nach Frankfurt musste, den Tag auf die Arbeit, weil ich irgendwie früh im Monitoring was gucken musste, irgendwas fixen musste, und dann erst mittags rennen konnte, und so, das hat nicht hingehauen, sodass es oftmals so jeden zweiten bis dritten Tag, manchmal auch, ja, manchmal drei Tage Pause und so war,
und jetzt,
und jetzt mache ich das so,
ich habe so einen Trainingsplan,
auf meiner Garmin Uhr, den kann man sich da generieren lassen, kann man so ein Ziel angeben,
und dann errechne das anhand, wie gut man geschlafen hat, wobei, ganz ehrlich, ich habe die Uhr so gut wie nicht an beim Pennen,
errechne das dann,
was jetzt sinnvoll ist,
und ich mache das eine Weile jetzt schon,
das ist super angenehm, weil,
da sind viele,
da sind viele,
da sind viele,
da sind viele,
da sind viele,
da sind viele,
da sind viele,
da sind viele,
da sind viele,
da sind viele,
da sind viele,
da sind viele,
da sind viele,
da sind viele,
anstrengende Sachen dabei,
ja, also zum Beispiel,
47 Minuten Rennen mit,
äh,
37 und so was,
das ist easy,
da komme ich,
da komme ich zwar ein bisschen ins Schwitzen,
aber das ist nicht irgendwie,
das ist null anstrengend,
ja,
und das kann man tatsächlich jeden Tag machen,
früher habe ich den Fehler gemacht,
ich bin dann wirklich so alle zwei, drei Tage,
so, oder manchmal hat es auch nicht hingehauen,
und dann habe ich immer so volle Pulle gerannt,
das ist viel besser,
und dadurch kann ich jetzt,
insgesamt mehr rennen,
ja,
und das ist,
also ich kann quasi,
fünf Tage oder so,
am Stück,
immer was machen,
und dann mal einen Tag Pause,
und das lohnt sich,
wirklich,
ich bin heute fast,
fast,
äh,
fünf Kilometer Rekord gerannt,
sagt mir meine Uhr,
und ich hätte,
also,
und das war nicht bis zum Umfallen,
das letzte Mal,
wo ich das gelaufen bin,
war das wirklich kurz vor Dertke,
heute war das so,
ich renne einfach mal nicht nach Plan,
so,
so schnell,
wie ich Bock habe,
und das ging erstaunlich gut,
und das ging erstaunlich gut,
die ersten,
die ersten drei Kilometer,
danach wurde es ein bisschen anstrengender,
aber,
nicht so,
dass ich gesagt hätte,
oh,
ich kann jetzt gar nicht mehr,
als ich daheim angekommen bin,
und es war nur ganz knapp langsamer,
als der Rekord,
also,
das lohnt sich echt,
die Masse macht's,
man glaubt es gar nicht,
selbst,
selbst,
wenn man zu,
keine Ahnung,
70 Prozent sich nicht groß anstrengt,
Hauptsache,
man macht's,
hätte ich auch nicht gedacht,
na gut,
mein Ziel,
mein Ziel für nächstes,
ich mach mal kurz,
Package Updates,
oh,
C++ Shit,
Alter,
geh mal weg,
ich will's nicht sehen,
Mann,
hau ab,
zisch,
zisch ab,
weg,
weg,
warum geht's nicht zu,
weg,
mein Ziel für die,
ups,
nächsten Monate ist,
so,
Package Updates,
Mann,
mein Ziel für die nächsten Monate ist,
einmal von Hanau nach Seligenstadt rennen,
das ist ein schöner Weg,
und,
ist hin und zurück,
circa,
21,
22 Kilometer,
das,
das,
geht natürlich nicht sonderlich schnell,
oder so,
aber mal gucken,
so,
so lang bin ich doch nie,
so lang,
so weit bin ich noch nie gerannt,
so lang auch nicht,
also,
ich schätze,
ich brauch da so zweieinhalb,
zweieinhalb Stunden,
ja,
doch,
aber ich geh davon aus,
dass ich das schaffe,
das längste,
was ich bisher gerannt bin,
waren 14 Kilometer,
und danach sind mir noch nicht die Beine abgefallen,
also,
werde ich einmal,
wahrscheinlich acht mehr aufpacken,
hoffe ich,
gucken wir mal,
ansonsten muss ich heimfahren zwischendurch,
irgendwie,
oder mich abholen lassen,
oder so,
keine Ahnung,
ich hab sogar überlegt,
ob ich nicht mir irgendwie eine GoPro umhänge,
und das mal just for fun aufnehme,
einfach nur,
damit ich es mir selbst,
angucken kann,
oder vielleicht irgendwie,
ein Video drauf schneiden lassen kann,
das skaliert nicht,
ja, ja,
mal gucken,
mal gucken,
ja,
aber ich denke doch,
dass es geht,
und ich glaube nicht,
dass es zu übertrieben ist,
weil,
die 14 Kilometer bin ich deutlich schneller gerannt,
als das,
was ich vorhabe,
die 22 Kilometer zu rennen,
also,
die 22 Kilometer renne ich so mit,
keine Ahnung,
sieben Minuten oder so,
pro Kilometer,
und danach muss ich wahrscheinlich eine Woche Pause machen,
weil mir die Beine weh tut,
mal gucken,
übrigens Leute,
ich habe den Hardcore-Progress-Stelz gemacht,
die letzten Tage,
ohne euch,
das konnte ich nicht im Stream machen,
erstens,
weil ich mich wirklich konzentrieren muss,
und zweitens,
weil ich Sachen für meine Kameras programmiert habe,
hier für meine Surveillance-Kameras,
und da sieht man die Kameras die ganze Zeit im Browser,
und ich will nicht,
dass ihr bei mir,
ähm,
das Katzenklo angucken könnt,
und den Hof angucken könnt,
und die Eingangstür angucken könnt,
und den Flur angucken könnt,
und die Terrasse angucken könnt,
und,
Zeug,
ich habe hier dran,
ich habe hier dran weiterprogrammiert,
ich habe es aber,
ich habe nichts gepusht,
ja,
ich habe hier dran weitergebaut,
und das funktioniert,
übrigens Leute,
wir haben doch,
erinnert ihr euch noch daran,
wir haben doch WebRTC in Rust gemacht hier,
ne,
und das ging,
und das ging,
eigentlich auch ganz,
ganz brauchbar,
wo ist meine Main,
wo ist meine Main-Datei,
ach,
hier,
LibRS,
wir haben noch WebRTC in Rust programmiert,
hier,
man sieht es nach,
und,
ohne Mist,
das funktioniert nicht richtig,
es funzt nicht,
also,
es,
es,
es funktioniert schon,
aber es hat massive Probleme auf iOS,
und,
die,
die Paketierung,
oder wie auch immer man das,
man das nennt,
ist irgendwie,
kaputt,
für,
WebRTC,
wenn man das hier mitmacht,
das ruckelt einfach nur wie Sau rum,
deswegen habe ich das jetzt einfach weggeschmissen mit Rust,
und mache es wieder in Go,
und schon funktioniert es wunderbar,
funktioniert besser,
wie jedes andere Projekt,
was ich bisher in der Richtung gesehen habe,
auf GitHub,
es gibt ja zig Projekte,
die Webcam-Streams nehmen,
und in WebRTC verpacken,
aber die funktionieren alle,
richtig,
schrottig,
mit meinen Webcams,
ich habe,
ich,
ich habe drei,
vier ausprobiert,
alles Müll,
die können,
die können entweder,
die,
äh,
Connections nicht multiplexen,
so dass du,
äh,
alle UDP-Ports irgendwo hin freigeben musst,
was echt,
pain,
pain in Bobbo ist,
für Firewall-Hools,
und auch irgendwie,
doof,
ja,
und,
und sie können irgendwas nicht,
und jetzt mache ich das wieder mit Go,
und,
und,
äh,
.net für das Webfront,
.net,
easy,
ja,
we,
weiß ich bis heute nicht,
warum,
beim Laufen,
ja,
war ich,
äh,
vielleicht,
vielleicht gehe ich heute sogar noch eine Runde Fahrrad fahren,
das Wetter sieht eigentlich ganz brauchbar aus,
muss ich gerade mal kurz checken,
das Wetter in Hanau,
Sonnenschein,
exzellent,
exzellent,
und es bleibt auch noch ganz brauchbar,
die nächsten,
in nächster Zeit,
na,
heute Nachmittag kommt ein bisschen Wolken und so,
vielleicht mache ich auch einfach,
Roggers,
Roggers,
Stelz,
und dann,
und dann Triathlon fertig,
ja,
klar,
easy,
war 100 Kilometer,
gar kein Ding,
ich glaube,
das,
ähm,
ich glaube,
das weiteste,
was ich bisher Fahrrad gefahren bin,
waren irgendwie um die 60,
60,
ne,
doch,
5,
55 oder so,
55 Kilometer,
da wäre einfach jetzt mal das Doppelte davon,
äh,
ähm,
ähm,
wir haben uns das letztens im Stream angeguckt,
aber,
ich,
ich sehe da kein Problem,
weil man alte Red Hat-Versionen und alte Debian-Versionen,
benutzt,
und meine ganzen Desktop-Sachen habe ich auch schon upgradet,
wir können mal kurz gucken,
was auf GitHub mit den X,
XC-Tools,
X,
ah,
das Repository has been disabled mittlerweile,
äh, war letz,
war letzter Stream schon Thema,
wir haben das sonst ganz frisch,
gestern,
ne,
wann war ich on?
Nicht gestern,
vorgestern,
gell,
Freitag,
Freitag haben wir das ganz frisch gesehen,
als es rausgekommen ist,
da war das,
äh,
da,
da war der Post irgendwie,
keine Ahnung,
erst 30 Minuten alt oder so,
ja,
und damals war es so,
also,
Freitag war,
war die Kenntnislage so,
es betrifft wohl,
äh,
nur SSH,
wenn man die Server public hat,
weil ansonsten kann man da,
nix,
nix ausnutzen,
wobei ich,
weiß man halt nicht,
ob das,
ob das stimmt,
ne,
also weiß ich nicht,
ob sich hier irgendwas getan hat,
mittlerweile,
vor zwei Tagen haben wir geguckt,
mehr,
mehr steht da nicht,
mal gucken,
ob mittlerweile,
Heise auch was dazu geschrieben hat,
ah ja,
ok,
auch Heise,
sogar,
die haben es mittlerweile auch gecheckt,
ja,
es geht echt nur um SSH,
also ganz ehrlich,
ich muss da am Dienstag keine,
ich muss da am Dienstag keine Server untersuchen,
wir haben alle Red Hat,
irgendein olles,
irgendein olles Red Hat,
und,
äh,
Debian,
olles,
Ubuntu,
die sind davon nicht betroffen,
ja, das,
das,
das hab ich auch gesehen,
das war in,
in,
in einem,
Forum,
wie hieß das,
Mono,
oder so,
Mono,
ne,
ähm,
ich hab den original Forums Post gesehen,
den haben wir uns am Freitag angeguckt,
moin,
das haben wir uns angeguckt,
ja,
hab ich mir auch gedacht,
wie merkt man sowas,
einmal fünf Millisekunden,
ist schon ganz schön bloated,
oder?
Container Images können auch betroffen sein,
also ganz ehrlich,
ich habe keine Container Images,
die,
übrigens,
ein weiterer Grund,
keinen Alpine zu verwenden,
haha,
ja,
ich lästere ja immer ganz gerne über Alpine Container Images,
ja,
ein weiterer Grund,
keine Alpine Container Images zu benutzen,
nachdem ich keine Alpine Container Images baue,
bin ich nicht davon betroffen,
meine Container Images basieren in der Regel zu 99% auf Debian Bookwork,
und dann Multistage Build,
und am Ende fällt halt ein Image raus,
was,
keine Ahnung,
5 MB größer ist,
als Alpine,
aber mir nicht so sehr auf den Sack geht,
wie Alpine,
also insofern,
meine Container Images sind nicht betroffen,
und mal ganz davon abgesehen,
sind Container Images wahrscheinlich,
ja auch nicht direkt betroffen,
weil selten irgendwelche Container offene SSH Ports und so haben,
wobei ich glaube,
noch keiner so richtig hundertprozentig sagen kann,
ob das rein SSH ist,
was die Lücke,
letztendlich,
problematisch macht,
ja,
aber ich hab sogar noch ein Video dazu aufgemacht,
in der History,
hier,
ja,
kann man sich mal angucken,
das Video ist gestern,
ja,
ja,
das kann potenziell,
also,
alles was X,
XZ,
oder Lip,
Lip,
ZX,
oder wie auch immer das Ding heißt,
LZ,
oder so,
ja,
hier steht's doch,
benutzt,
kann potenziell Probleme haben,
ja,
so richtig,
so richtig hundertprozentig analysiert,
ist der Kram ja,
glaube ich,
noch nicht,
bei Heise kann man ja auch nicht wirklich was drauf geben,
die,
die fassen die Sachen zwar immer meistens ganz gut zusammen,
aber,
wenn's im Original verwirrend ist,
ist es bei Heise meistens nicht klarer,
aber das ist natürlich interessant hier,
der Angriff war von langer Hand geplant,
der Angreifer,
hier,
hier,
dann,
ist das,
sind das die China-Chinesen hier,
wieder,
gut,
bei dem Namen,
ich mein,
Namen,
sagen ja eh,
bei sowas nie was aus,
aber,
kommen wir jetzt am Start,
sein GitHub-Konto im,
ok,
er stellte sein GitHub-Konto im Jahr 2021,
und konzentrierte sich ab 2022 auf das XZ-Projekt,
er hat mit Hilfe mehrerer Komplizen oder Fake-Accounts,
den,
die psychologischen,
den,
was,
die psychologischen Druck auf die Hauptentwickler aufgebaut,
haben,
nicht nur Kontrolle über das Projekt erlangt,
sondern auch Linux-Distributionen dazu gedrängt,
die von ihm präparierten Versionen der Pakete schnellstmöglich in ihre Systeme zu übernehmen,
so sei er bei einem Fedora-Autor,
vorstellig geworden habe,
diesen aufgrund toller Features überzeugen wollen,
XZ56 in die RPM,
das ist ja witzig,
guck mal,
der ist,
der ist zum Fedora-Maintainer von diesem Package gegangen,
und hat gesagt,
boah,
gibt ganz viele tolle neuen Features,
nehmt das mal auf,
und dann ist dem Typ halt aufgefallen,
es gibt irgendwelche,
irgendwelche Memory-Probleme,
und die wollten dem helfen,
das Memory-Problem zu fixen,
was die nicht wussten,
ist,
dass das Memory-Problem durch den Back,
durch das,
durch dieses Backdoor,
Backdoor,
ähm,
Algorithmus,
äh,
oder Back,
Backdoor,
äh,
Mechanics ausgelöst wurde,
I,
I would be suspicious of even older version of XZ,
ja,
lustig,
ein Komplize mit dem Pseudonym Jan,
Jansen,
ne,
nicht Jan,
Hans,
Hans Jansen,
der ging,
der ist zu Debian gegangen,
und,
aber eins muss man ja mal sagen,
die,
äh,
Maintainer sind da wirklich schon auf Zack,
ne,
die,
die,
die konnten sie alle nicht verarschen,
die Hintertür wird jedoch nur bei Debian- und RPM-basierten Distributionen als Teil des Paketerstellungsprozesses scharf gehalten,
Moment,
also,
also,
war ich mit Archlinux sogar nie betroffen,
das ist,
das ist schon wirklich Next Level,
ne,
soll ich mal in meine ETC-Environment reingucken,
Less,
ETC,
was steht denn da überhaupt so drinne?
Nix,
okay,
nice,
das ist glaube ich gut,
wenn da nichts drinne steht,
okay,
der hat quasi,
ach,
GitHub war gar nicht das Original-Repo,
der Typ hat einfach nur ein GitHub-Repo mit dem Namen angelegt,
und hat so getan,
als ist das quasi das eigentliche,
what the fuck,
man muss aber mal echt sagen,
das Ganze ist noch alles halbwegs glimpflich abgelaufen,
oder?
So wie es jetzt aussieht,
check mal welche Version du installiert hast,
äh,
nicht die Betroffene,
ich hab ne neuere als die Betroffene installiert,
ich hab am Freitag schon geupdatet,
30 Minuten,
oder 2 Stunden,
oder so,
nachdem der Original-Post rausgekommen ist,
gab's für Archlinux schon nen Patch,
nämlich,
äh,
5,
5,
5,
.6,
.6,
.6,
.1,
.1,
.2,
oder sowas,
ja,
5,
6,
1,
2,
dies,
das ist nicht betroffen,
5,
5,
6,
1,
1,
ist betroffen,
5,
6,
1,
2,
nicht,
das haben die Archlinux-Leute schon gepatcht,
ja,
aber,
das ist,
wenn man zwar sich,
wenn man zwar genau nimmt,
das ist doch noch relativ glimpflich abgelaufen,
oder?
Die Maintainer,
von,
äh,
Debian,
und,
äh,
Fedora,
haben,
man kann nicht sagen,
doch,
die haben schon aufgepasst,
die haben,
äh,
vielleicht nicht an der richtigen Stelle,
das alles realisiert,
aber,
äh,
anderweitig haben sie aufgepasst,
weil irgendwas nicht gestimmt hat mit dem Package,
wenn das,
also,
wenn das wirklich in Stable-Builds gekommen wäre,
dann wären wir gefickt gewesen,
dann wären so gut wie alle öffentlichen Server im Internet offen gewesen,
also,
hättest das beispielsweise,
in die nächste Debian-Version gepackt,
oder,
hättest das,
irgendwie,
in,
in so kleine Red-Hat-Release gepackt,
oder so,
dann wär echt die Kacke am Dampfen gewesen,
weil dann wären einfach,
alle,
Server im Internet gefühlt,
verwundbar gewesen,
ja,
was doch schon ein paar sind,
was so ungefähr wahrscheinlich so 80% des Internets sind,
also,
an,
an,
Linux-Kisten,
nicht jede Domain und IP gleich Server,
ja,
das wär natürlich kacke gewesen,
es,
es,
es ist aber noch relativ glimpflich ausgegangen,
würde ich sagen,
wenn,
wenn das alles ist,
wenn das alles ist,
vielleicht,
äh,
äh,
bestätigt sich das ja,
was der Fedora-Guy da meint,
das,
äh,
da hat er geschrieben,
das war so,
sophisticated und advanced,
was der Typ da gebaut hat,
er wär sich nicht mal sicher,
ob ältere,
XZ-Versionen nicht auch irgendwas beinhalten.
Übrigens,
benutzt ZFS nicht auch das hier,
für,
Comp-,
Compression?
äh,
äh,
äh,
äh,
äh,
äh,
äh,
äh,
äh,
äh,
äh,
äh,
äh,
äh,
äh,
äh,
äh,
äh,
äh,
äh,
äh,
äh,
äh,
äh,
äh,
äh,
äh,
äh,
äh,
äh,
äh,
äh,
äh,
äh,
äh,
äh,
äh,
äh,
äh,
äh,
äh,
äh,
äh,
äh,
äh,
äh,
äh,
äh,
äh,
äh,
äh,
äh,
äh,
hat bestimmt das saarland ja genau das saarland habe ich auch im verdacht was
sonst wir gucken uns gleich das video dazu noch an mal gucken ob der noch ein
bisschen mehr infos dazu hatte als das was wir am freitag auf die schnelle
rausgefunden haben und jetzt zumindest glücklicherweise von meinen kisten nichts
betroffen meine images sind nahezu alle debian
meine public sachen sind debian und ubuntu der arbeit ist alles mehr oder
weniger red hat aber wir also wenn das das in stable release geschafft hätte
werden wir echt echt am arsch gewesen na gut
exzellent oder auch nicht je nachdem wie man wie man sieht
schau dir den link aus so einem blog aus meiner vorletzten nachricht an
nach er hier da macht doch auch da macht auch youtube videos
ok das ist mir vielleicht jetzt ein bisschen zu advanced mich da nicht da
durchzukämpfen ich meine guck mal das ist auch bis sie das wäre dir mit einem
rust mit einem tool ritten den rast nicht nicht passiert oder leute was
meint ihr ich war ein potenzieller
schritt machen das wäre dir mit einem rust mit einem tool ritten den rast nicht nicht passiert oder leute was meint ihr ich war ein potenzieller
potenziell kann einem das überall passieren dass sachen eingeschleust sind
potenziell kann einem das überall passieren dass sachen eingeschleust sind
allerdings würde man sich hardcore wundern warum in einem rast bild prozess
allerdings würde man sich hardcore wundern warum in einem rast bild prozess
irgendwelche m4 makros drin sind hier check ich gar nicht was da überhaupt
irgendwelche m4 makros drin sind hier check ich gar nicht was da überhaupt
abgeht er replays irgendwelche new lines oder so das ist halt das problem du
abgeht er replays irgendwelche new lines oder so das ist halt das problem du
machst dir wahrscheinlich bei einem c und c tool bild prozess keine gedanken über
machst dir wahrscheinlich bei einem c und c tool bild prozess keine gedanken über
so ein scheiß weil da jeder irgendwie rumfrickelt so ein scheiß weil da jeder irgendwie rumfrickelt
Okay, das Tool extrahiert was
Sieht aber sehr unbedarft aus
Sieht jetzt nicht aus, als passiert irgendwas Schlimmes
Okay
Es ist nicht random, Leute
Das rechte ist random, das linke ist nicht random
Whatever
Alter
Alles klar
Was passiert, ich hab selbst keine Ahnung, was hier passiert
Das ist so
Das sieht mir, also ganz ehrlich
Warum sollte das ein Solo-Typ machen, nur weil es ihm danach ist
Da steckt irgendwas
Da steckt mehr dahinter
Kek-Alu
Es hört ja gar nicht mehr
Oje, AWK-Stells
Interessant
Ne, wir haben schon rausgekriegt
Das Saarland steckt dahinter
Der Chat hat es vorhin
Bestätigt, guck
Wenn der Twitch-Chat bei mir das bestätigt
Dann muss das so sein
Okay
Dann würde ich sagen, gucken wir uns doch mal an
Was diese Woche auf
Shithub so trendet
GitHub trending weekly
Aha
AI wird geskippt
AI, AI, AI, AI, AI
Ne, ist es AI
Ah
Das ist
Das ist das Microsoft Redis
Was die
Zufälligerweise
Jetzt gerade pushen
Wo Redis selbst nicht mehr
Open Source ist
Beziehungsweise Reddit
Äh, nicht
Habe ich gesagt Redis?
Redis?
Redis
Redis, nicht Reddit
Meine Güte
Ähm
Wobei Redis nicht mehr Open Source
Das stimmt ja auch nur zur Hälfte
Es ist nicht mehr Open Source
Im Sinne von
Dass es eine anerkannte Open Source Lizenz ist
Dieser, dieser
Linux
Ne, nicht der Linux Foundation
Der irgendeiner anderen
Keine Ahnung
Aber selbst kannst du auf den Content auch zugreifen
Mir gefällt das auch nicht
Du meinst gar nicht?
Gefällt dir?
Nicht?
Sondern das Reddit
Achso, es gefällt dir gar nicht
Ich bin zu dumm, Leute
Ich habe es nicht gecheckt
Zu braindadged heute Morgen
Das ging an mir vorbei
Ja
Ich weiß noch nicht, ob es mir gar nicht gefällt
Ausprobiert
AI, AI
Kryptowährung stills
AI, AI
AI
AI
Diese Woche ist ja schrecklich, ey
Guck mal, Redis selber trennt es nicht mehr
Frequenz,ridens, Hackereisen
Re-N exporting
Re-Revolution
Ordnung
Die
Ja, ich kann das heute auch noch
Change License from BSD3 zu Dual RSAL V2 und SSPLV1
Kommt noch ein Video zu XZ und eventuell Auswirkungen auf, auf Windows
Also Auswirkungen auf Windows habe ich bis jetzt noch überhaupt nicht erkennen können
Ich weiß nicht, ob ich dazu ein Video machen soll
über die Köpfe drüber der meisten Leute auf YouTube, zumindest auf meinem Channel.
Und alle, die es wissen wollen, haben es wahrscheinlich schon mitbekommen in der Zwischenzeit.
Angeblich ist die Lib auch im Update enthalten.
Also wenn das, was man bisher weiß, stimmt, dann ist nichts davon aktiv auf Windows.
Ja, zumindest nicht per SSH irgendwie.
Man weiß halt nicht, was da noch so drin ist und wie das alles sich auswirkt und wechselwirkt mit anderen Sachen.
Müssen wir erstmal ein bisschen warten, bis das noch tiefgreifend analysiert wurde alles.
Bisher sieht es halt aus, als betrifft es nur RPM- und Debian-basierte Distributionen.
Und dort dann auch nur SSH, wenn quasi alles...
...richtig drumherum konfiguriert ist, dass es greift.
Also es ist noch relativ glimpflich abgelaufen.
Wir wären aber wirklich ziemlich gefickt gewesen, hätte es das in irgendeinen Red Hat oder Debian-Stable-Release gepackt.
Dann wäre einfach 80% des Internets angreifbar gewesen.
Ich habe einen Debian-V-Server bei Headstand, darauf Cloud-Panel für Web-Hostings.
Cloud-Panel? Warum braucht man sowas?
Hast du einen Tipp, wie ich das Resonant oder als Replika aufbauen kann, um Ausfallsicherheit zu haben?
Keine Ahnung.
Wann benutzt man Cloud-Panels?
Was ist das?
Ist das sowas wie...
...Plesk?
Oder wie das früher hieß, das Zeug?
Wo ich mich auch damals schon gefragt habe, warum braucht man sowas?
Wenn ich irgendwie eine Seite hosten will,
dann starte ich einen Web-Server über SSH
und schiebe die Sachen ins richtige Verzeichnis.
Und gut ist,
da brauche ich kein Web-Interface für.
Ja, ich kenne diese Dinger, ich weiß nur nicht, wozu man das braucht.
Ist das, wenn man seinen Server weitervermi...
Ach, du vermietest den...
Bist du dir...
Jetzt mal...
Jetzt mal, ernst gemeine Frage.
Bist du dir sicher, dass du wirklich als Dienstleister fungieren willst hier?
Weil du bist auch immer der Gearschte, wenn irgendwas ist.
Also, wenn man einfach so einen random Server mietet bei Headstand und das dann verkauft, ich weiß nicht.
Achso, aber ich meine, du musst das wissen.
Also, wie kann man sowas hochverfügbar aufbauen?
Das ist, glaube ich, weniger das Problem des Panels, sondern was dahinter läuft, oder?
Weil ich gehe mal davon aus, dass, wenn da Web-Hosting-Sachen drauflaufen,
da hängen ja wahrscheinlich auch die ein oder anderen professionierten Datenbanken und sowas dran.
Oder ist es reines static Webspace mit, keine Ahnung, PHP oder sowas?
Dann würde ich mir eher da Gedanken machen, wie man das redundant aufbaut.
Ansonsten...
Prinzipiell, wie man Linux-Server-redundant aufbaut, das Einfachste ist immer zwei Systeme mit Lautbalancer davor.
Das geht so pauschal eigentlich für fast alles.
Das ist, wenn man nichts Spezifisches weiß, zwei Systeme mit Lautbalancer davor geht eigentlich immer.
Problematisch wird es, wenn die Systeme irgendwie untereinander sich austauschen müssen.
Zum Beispiel, weil du eine User-Datenbank hast, die du irgendwie noch syncen musst.
Oder du brauchst halt dann eine dritte Datenbankkiste.
Dann kannst du beide darauf zugreifen, als wäre das Problem, wie machst du die Redundant?
Das artet relativ schnell aus.
Also, wenn du mit etwas Downtime leben kannst, ist Cold Standby gar nicht so doof, wie es sich anhört.
Quasi ein zweiter geklonter Server nebendran stehen haben, den man, oder ein Backup, sagen wir mal, ein Backup und ein Snapshot haben,
aus dem man relativ schnell ein System restauren kann.
Dann hast du keinerlei Probleme, was Lautbalancing angeht, Konfiguration angeht, Shared State oder sonst was angeht.
Dann hast du keinerlei Probleme, was Lautbalancing angeht, Konfiguration angeht, Shared State oder sonst was angeht.
Du musst einfach nur gucken, dass du regelmäßig Backups machst und aus den Backups ein neues System restauren kannst, innerhalb von 2-3 Minuten.
Dann hast du 2-3 Minuten Ausfall, aber du umgehst sehr viel Konfigurationen und Kopfschmerzen.
Und wenn das reicht, ist das aus meiner Sicht die bessere Lösung.
Ja, darfst du, klar. Warum nicht?
Also, ich weiß es nicht, aber mich würde es sehr wundern, wenn du das nicht darfst.
Du darfst darauf alles betreiben, was du willst.
Außer Krypto-Sachen.
Stimmt gar nicht, was ich gesagt habe.
Krypto-Sachen mag Hetzner nicht.
Obwohl, witzigerweise, gerade viel Polygon-Sachen auf Hetzner läuft.
Obwohl man eigentlich Krypto-Sachen nicht machen darf.
Ja, das reicht.
Also, wenn du mit ein paar Minuten Ausfall, wenn wirklich was kaputt geht, leben kannst,
dann ist das wahrscheinlich das Beste.
Eines würde ich aber an deiner Stelle trotzdem noch machen.
Dadurch, dass da nicht nur deine Sachen dranhängen, sondern im Zweifelsfall auch Geld,
und du im Zweifelsfall verklagt wirst, wenn irgendwas ist, was du nicht einhältst,
ich würde noch ein paar Offsite-Backups machen.
Dass du im Zweifelsfall das bei einem anderen Cloud-Anbieter easy restoren kannst, die Kiste.
Also, ich würde mich nicht rein...
Ich würde mich auf die Snapshots verlassen, aber sollte Hetzner mal komplett down sein,
und dann geht das auch mit den Snapshots nicht,
deswegen, ich würde mir ab und zu mal offline irgendwie ein paar Backups ziehen noch,
dass ich zur Not, wenn es wirklich hart auf hart kommt,
zu irgendeinem anderen Cloud-Anbieter gehen kann und dort die Kiste starten,
sei es nur für ein paar Tage.
Boah.
Ich verdiene indirekt mit Krypto-Sachen ja sogar mein Geld mittlerweile.
Wie gesagt, ich arbeite bei einer Versicherung in Frankfurt,
und ich bin da eigentlich zu 80% in Blockchain- und Krypto-Projekten.
Ich selbst besitze aber keinerlei Cryptocurrency oder sonst was.
Ich kümmere mich um die Infrastruktur, wo beispielsweise unsere Polygon-Nodes drauflaufen,
und, ich weiß nicht, überlege ich es nicht, da ich jetzt zu viel Gramm erzähle.
Dann haben wir noch ein paar private Blockchain-Sachen mit Partnern am Start.
Ja, mehr erzähle ich nicht.
Was machen die damit?
Tja, das kann ich so nicht erzählen, ohne dass man googeln kann danach.
Ne, ich habe gerade danach gegoogelt, wenn ich das so sage, dann findet man es.
Ja, wir haben auch ein paar Banken als Partner am Start.
Generell, also, es gibt ja viele Finanzdienstleister, die sich dafür interessieren.
Und dementsprechend ist da in Frankfurt auch viel los.
Warum ist das die perfekte Antwort?
Das ist, okay, jetzt weiß ich woher das kommt, okay.
Habe ich nie geguckt, die Serie.
Ich muss auch sagen, ich habe mal versucht, das Original, wobei, das ist nicht das Original.
Das gibt, also, Stromberg ist ja quasi die deutsche Version von The Office.
Und The Office gibt es ja auch als britische und US-Serie.
Ich habe mal versucht, die US-Serie zu gucken.
Ich fand das so cringe und anstrengend.
Ich konnte mir das nicht geben.
Das ist echt so eine Serie, wo ich nicht verstehe, warum die so gehypt war.
Keine Ahnung.
Ich habe keine davon geguckt.
Ich habe es mal probiert, quasi die US-Variante zu gucken und das fand ich irgendwie einfach nur cringe und anstrengend.
Da hatte ich keinen Bock drauf.
Naja, so.
Habe ich jetzt eigentlich schon rebooted.
Aber Reboot schadet nichts.
Übrigens, ich habe die letzten Tage, habe ich ja schon gesagt, richtig Hardcore-Progress-Progress-Stells gemacht.
Offstream für meine Webcams.
Und mir ist aufgefallen, was mich am Programmieren und Softwareentwickeln eigentlich so interessiert, während ich das gemacht habe.
Homeoffice-Leute können da nicht relaten.
Die Serie ist so alt, da war Homeoffice noch kein Thema.
Und zu der Zeit habe ich auch noch kein Homeoffice gemacht.
Ja, aber mir ist aufgefallen, was mich daran so begeistert oder so fasziniert, die letzten Tage über wieder.
Und zwar das ist, vor allem, wenn man halt kein Mainstream-Zeug macht, ja.
Wenn man jetzt die 0815 nächste To-Do-App im neuen JavaScript-Framework nachbaut, dann ist das nicht so spannend.
Aber wenn man sich mit wirklich komplizierten Sachen beschäftigt.
Also, was ich gemacht habe, ich habe mein Webcam-zu-Web-RTC-Programm verbessert, sodass es jetzt wirklich ganz gut funktioniert.
Besser als alles andere, was ich bisher so auf GitHub gefunden habe in der Richtung.
Mittlerweile nicht mehr in Rust das WebRTC-Zeug, sondern wieder in Go, weil die Rust-Library nicht richtig funktioniert hat.
Zumindest, was mich daran echt fasziniert hat, ist, wenn man sich tiefgreifend mit was macht.
Tiefgreifend mit was beschäftigt, ja.
Da brauche ich ja schon ein bisschen Gehirnschmalz und alles.
Aber es gibt zwei Sachen, was mich echt so am Programmieren in der Richtung begeistert ist.
Das erste ist, dass man irgendwie bestätigt wird, ja, dass man fast alles hinbekommen kann, wenn man sich nur tiefgreifend genug damit beschäftigt.
Auch wenn man sich am Anfang denkt, scheiße, warum funktioniert das nicht?
Oder wie soll ich denn das jemals hinkriegen?
Nach zwei, drei Tagen...
24-7 und sich um nichts anderes Gedanken mache, kriegt man die Sachen doch meistens hin.
Also das bestätigt einen immer wieder, egal wie kompliziert das ist, wenn man sich nur tiefgreifend genug damit beschäftigt, man bekommt das meiste hin.
Oder man bekommt fast alles hin.
Das Allermeiste.
Und das zweite ist, nachdem man das hinbekommen hat, realisiert man, dass man vielleicht jetzt zu eventuell, was weiß ich, 100 Leuten auf der Welt gehört oder so.
Die wissen, um was es in diesem Themenbereich geht.
Wir programmieren vielleicht vom Mittag ein bisschen weiter dran, weil noch nicht alles so hundertprozentig perfekt ist.
Ich habe zum Beispiel an irgendeiner Stelle, glaube ich, noch einen Memory-Leak in der FFmpeg-RTSP-Auslesegeschichte.
Und ich weiß nicht genau wo.
Aber das ist nicht so schlimm.
Ich hatte das jetzt über Nacht laufen.
Und das hat vielleicht 40 MB Memory geleakt.
Das kann nichts Großes sein.
Ja.
Vielleicht irgendwo, dass irgendwelche Metadaten für Packages nicht richtig freed werden oder so.
Was auch immer.
Ja.
Und das zweite ist, man realisiert, nachdem man sich mit so komplizierten Sachen beschäftigt hat, dass man danach vielleicht zu, keine Ahnung, zu vielleicht 100 Leuten auf der Welt gehört, die wissen, um was es konkret in diesem einen Thema geht.
Weil sich sonst niemand damit beschäftigt hat.
Genauso wie zum Beispiel eine Sache, die wir hier auch mal im Stream gemacht haben, die in die ähnliche Kerbe geschlagen hat, die ich auch mega big brain fand, ist.
Der FFmpeg-Video-Player über WebAssembly.
Erinnert sich da noch einer dran?
Das war, glaube ich, eines der five-headigsten Sachen, die wir je gebaut haben im Stream.
Und wir haben nicht einfach nur WebAssembly FFmpeg programmiert, so wie das in 100.000 Tutorials drinsteht.
Nein, nein.
Wir haben das versucht mit WebWorkers Multithreader zu machen und streamen vom Server.
Nicht irgendeine Datei hochladen in der Webseite.
Das war super kompliziert.
Danach hatte ich auch das Gefühl, okay Chat, wir gehören jetzt zu 100 Leuten auf der Welt, die sowas schon mal gemacht haben.
Wenn es hochkommt.
Und man merkt das unter anderem daran, dass wenn man danach sucht bei Google, quasi keine Ergebnisse findet.
Und auch wenn man Codeschnipsel sucht oder Funktionsnamen sucht.
Und man mit Zusatz StackOverflow, Reddit, was auch immer.
Oder auch mal ChatGPT, wobei ChatGPT so einen Schwachsinn teilweise erzählt.
Aber von was sollst du das auch lernen, wenn es nicht mal Google Ergebnisse gibt.
Daran merkt man, dass man wirklich jetzt sehr auserwähltes Knowledge hat, wo es nämlich nicht viel auf der Welt gibt, die da Ahnung von haben.
Also ich habe mich im Detail beschäftigt die letzten Tage über mit, einmal mit was nicht so super kompliziert ist, wenn man weiß wie es geht.
Aber was auch super pfeifert ist, Custom Logging Output für FFmpeg.
Ihr kennt das vielleicht, wenn man FFmpeg benutzt.
Also wenn ihr jetzt, wobei, kann ich überhaupt irgendwas mit FFmpeg hier abspielen?
Ich weiß nicht, gibt es da irgendwas?
Irgendwas im Hinter...
Ich habe jede Menge FFmpeg Builds.
FFmpeg hat doch manchmal so doofe Ausgaben so.
Mist Package, Timestamp Number, Dropping Package und sowas.
FFmpeg spammt immer ganz gerne.
Und Custom Log Output für FFmpeg zu definieren.
Wo man auslesen kann.
Also beispielsweise, wenn man FFmpeg...
Gibt es eine Demo RTSP?
Gibt es irgendwie...
Stream Test.
Okay, ich habe keine Ahnung was das ist.
Äh...
Kann man das abspielen?
Ich traue mich nicht das abzuspielen, Leute.
Kann ich das...
Kann ich das abspielen?
Wo komme ich dann raus?
Hoffentlich läuft da jetzt kein...
Okay, ne darf ich nicht, ja.
Äh...
Gibt es irgendein...
RTSP?
Irgendein freies...
Irgendein freies...
RTSP-Stream den ich mal abspielen kann zum zeigen.
Keine Ahnung.
Ja, ich weiß nicht.
Hört mir...
Keine Ahnung.
Ich will meine Webcam jetzt nicht abspielen, ne.
Und einen RTSP-Server starten will ich auch nicht.
Zumindest...
Hier, hier.
Guck mal.
Das ist die Ausgabe.
Das meine ich.
Also.
Das hier ist eine Log...
Das hier gehört übrigens nicht mehr dazu, ja.
Das hier ist eine Log-Ausgabe von FFmpeg.
Die habt ihr wahrscheinlich alle schon mal gesehen, die FFmpeg benutzt haben.
FFmpeg spammt...
Spammt gerne Logs, die so aussehen hier im Endeffekt, ja.
So.
So in der Richtung sehen die Logs immer aus.
Sniper, willst du mich veräppeln?
Das ist doch genau das, was ich gerade versucht habe zu starten.
Aber letztendlich, wir haben ja...
Wir haben ja hier die...
Die Ausgabe.
So.
Und jetzt ist das Ding.
Versucht mal, wenn ihr multi-threaded FFmpeg benutzt.
Also nicht das gleiche, sondern ihr startet FFmpeg aus mehreren Threads.
Das heißt, ihr bekommt jetzt...
Mal angenommen, ihr startet parallel...
Drei...
Bis vier...
RTSP-Streams über FFmpeg.
Und ich meine jetzt nicht über die Command-Line, sondern mit der FFmpeg...
Mit der...
Mit dem eigentlichen FFmpeg, mit der C-Library.
So.
Und...
Dann habt ihr ganz viele...
Sachen, die so aussehen hier.
In der Ausgabe.
So.
Spammt die ganze Zeit FFmpeg.
Und ihr wisst jetzt nicht...
Ja, von welchem Stream kommt denn das jetzt eigentlich?
Es ist ja schön und gut, dass irgendwas fällt.
Aber...
Von welchem der vier Kamerastreams ist es jetzt eigentlich?
Und ich habe gestern versucht...
Die FFmpeg-Log-Ausgabe...
Anzureichern mit der Information...
Woher kommt denn die Fehlermeldung eigentlich?
Und Leute, es soll euch gesagt sein...
Das ist bei weitem nicht so straightforward, wie man denkt.
Da muss man dann sowas machen wie...
AVZLogCallback.
Und da braucht man eine Funktion, die die richtigen Parameter hat.
Und dann muss man schauen...
Wie der Kontext heißt.
Den Kontext casten zum eigentlichen Kontext.
Und dann kann man reingucken.
Super weird.
Ja.
Da gibt es wahrscheinlich auch wieder 100 Leute auf der Welt...
Die checken, wie das funktioniert, man.
So.
Das war das eine.
Dann habe ich mich damit beschäftigt...
Wie Package-Reordering funktioniert.
Bei RTSP-Streams über FFmpeg.
Weil meine Kameras sind so...
China-Chinesen-Billig-Kram...
Dass die RTSP-Timestamps oftmals nicht richtig stimmen.
Der Witz ist...
Die Packages werden in der richtigen Reihenfolge geschickt.
Die Timestamps sind oftmals nicht richtig.
Die Timestamps sind oftmals falsch.
Weil die Software auf den Kameras wahrscheinlich einfach Schrott ist.
Meine Raspberry Pi Kamera zum Beispiel...
Hat überhaupt gar keine Probleme.
Die funzt einfach.
Aber die Billig-China-Chinesen-Kameras...
Die sind Kacke, was das angeht.
Deswegen habe ich bei denen das Reordering ausgeschaltet.
Musste man auch erstmal rauskriegen, wie das Ganze geht.
Ja, und solche Sachen.
Also, das war echt nicht easy.
Ich push das vielleicht nachher mal, das Projekt.
Und eventuell basteln wir heute im Stream auch ein bisschen weiter dran.
Weil es gibt noch ein paar Sachen...
Die nice wären einzubauen.
Ja.
Aber das ist das, was mir echt so am Programmieren immer gefällt.
Dass wenn man so komplizierte Sachen macht...
Beziehungsweise sich...
Generell muss man sagen...
Ja, wahrscheinlich schon.
Generell muss man sagen...
WebRTC bauen ist allein eh schon...
Wenn man nicht einfach von Browser zu Browser macht.
Sondern von irgendeiner Serverseite zu Browser...
Ist schon ein bisschen kompliziert.
Und dann noch mit dem ganzen FFmpeg-Shit...
Ist schon sehr advanced, aus meiner Sicht.
Und ich finde das immer wieder nice, dass man darin bestätigt wird...
Wenn man sich da zwei, drei Tage reingebissen hat...
Und mich beschäftigt hat.
Man bekommt echt fast alles hin, wenn man sich einfach nur mit beschäftigt.
Ich habe keine Ahnung, über welchen Stream ich rauskomme, wenn ich das aufmache.
Das mache ich jetzt nicht auf.
Hat mich beruflich mal viel mit Köln PowerShell besp...
Ja.
Ja.
Gibt viele coole Sachen.
Moin.
Hab jetzt seit gestern VMware.
Hast du Tipps?
Wie jetzt?
Welches?
Du meinst VMware Workstation?
Oder was?
Für VMware.
Mein VMware hat vieles.
Außerdem ist es ja gar nicht mehr VMware.
Sondern Broadcom.
Ja.
Ähm.
VMware Workstation.
Hast du irgendwelche Tipps?
Ja.
Benutz regelmäßig Snapshots.
Bevor du was ausprobierst.
Und wenn es Schrott ist...
Restorest du die Snapshots.
Ansonsten...
Einfach VMware benutzen und freuen, dass du die beste Desktop-Virtualisierungslösung
hast, die es gibt.
Ah ja.
Das stimmt.
Wobei...
Wenn ich mir einbilde, die...
Ab, ab, ab.
VORWAR-Version...
VORなんか, workstation Version 17, ist das kein Problem mehr.
Ich musste da auch nix einstellen mit E-KORs.
Oder?
Oder vielleicht benutze ich E-KORs, aber die sind schnell genug, dass es mich nicht
interessieren muss...?
Weil ich hab VMware-Technik überhaupt keine Probleme.
Bei VMware packst du einfach mehr CPUs rein oder mehr KORs rein und dann geht das.
Guck mal.
Kann sie...
Kann sie dir doch angucken.
Schau mal hier.
Task Manager, sortier nach CPU.
Achtung, machen wir mal was, was, äh, Stress, hab ich das jetzt nicht gesehen, Stress, guck mal, Stress, wie ging das nochmal, ich benutze das zu selten, oh, Stress, auf einer CPU, du siehst, vor allem am Workstation, benutzt 10% CPU insgesamt, achso, ich hab, ich hab 8, 8, ähm, äh, Card, Proc, CPU Info,
ich hab 8 Kerne, aktuell drin, das ist aber nur mit Hyper, glaub ich zumindest, oh, ne, ich hab tatsächlich 8 Kerne in meiner VM drin hängen, ja, aber Stress 2, 2 Kerne, wenn man nutzt 11% und so weiter, siehst du ja auch hier, guck mal, also, meine VM denkt, ich hab 8 Kerne, jetzt machen wir mal 8, jetzt ist meine VM komplett ausgelastet, wie du hier siehst, aber insgesamt ist das Ganze nur zu 40% ausgelastet,
ja, wie viel hab ich eigentlich, CPU Kerne, ich hab, ähm, seht ihr sie irgendwo, hier, 24, aber davon sind, glaub ich, nur 8 High Performance Cores und 16 E-Cores, gell, irgendwie so ist das, glaub ich, wenn ich das richtig im Kopf hab, ja, und die 8 haben auch Hyper Threading, deswegen 32 Logical,
was dann dazu führt, dass meine CPU,
nur zu 44% ausgelastet ist, obwohl es eigentlich, äh, 8, äh, whatever, also, man sieht, das kannst du wunderbar, kannst du in VM, VM-Ware mehrere Kerne hinzufügen, aber das geht mit Virtual Box genauso, das ist jetzt nix VM-Ware spezifisches, trotzdem find ich VM-Ware Workstation viel angenehmer als Virtual Box, ist deine gekaufte VM-Ware Lizenz noch aktuell, ja, aber ich hab noch nicht upgradet, ich bin immer noch auf 17, ich, ich seh auch grad nicht ein, dass ich upgraden sollte, es funktioniert alles nahezu perfekt, das Einzige, was nicht funktioniert,
und immer dann auftritt, wenn ich die JetBrains Toolbox aufmache, meine VM hat manchmal Grafik-Ausgaben-mäßig Probleme, jetzt, jetzt nicht, jetzt nicht, jetzt funktioniert das witzigerweise, oh, ne, shit, das ist wieder aufgedreht, guck mal, immer, jedes Mal, wenn ich die JetBrains, nur wenn ich die JetBrains Toolbox aufmache, kackt meine VM ab, aber ich sag euch, das ist kein Problem, von der JetBrains Toolbox, weil das kannst du ja gar nicht in der, im Programm in der VM,
ich wette mit euch, das liegt daran, das ist eine Kombination aus VM-Ware und ich, meine persönliche Vermutung ist, Grafik, also Grafik-Implementierungssachen von VM-Ware, weil das Ding rendert überhaupt ein GL und irgendwie buggt das die VM-Ware Instanz,
wenn es das verwendet.
Soweit, dass man vor allem eine Workstation tatsächlich beenden muss, und dann kann man es wieder neu starten, sehr merkwürdig, keine Ahnung, woran das liegt, wir könnten, ja, ich will jetzt auch nicht weiter basteln, also, ich hab das ausgeschaltet, das geht, aber das hat bei mir Probleme gemacht, ich hab, ich hab die Windows-Virtualisierungsgeschichten ausgeschaltet bei mir, weil das immer wieder Probleme, also, es geht, aber es gab, es gibt, es gibt, es gibt, es gibt, es gibt, es gibt, es gibt, es gibt, es gibt, es gibt, es gibt, es gibt, es gibt, es gibt, es gibt, es gibt, es gibt, es gibt, es gibt, es gibt, es gibt, es gibt, es gibt, es gibt, es gibt, es gibt, es gibt, es gibt, es gibt, es gibt, es gibt, es gibt, es gibt, es gibt, es gibt, es gibt, es gibt
war problematisch witzigerweise mit windows 10 ging alles noch mit windows 11 macht's probleme
ich verwende den windows krempel nicht also sofern also ich hab das aus ich bin der einzige
der seine grafische oberfläche manuell über die shell mit start x startet alle anderen auch videos
die ich selber sehe haben irgendwelche coolen session manager oder sowas brauche ich nicht
die drei wird gestartet pepo background wird geladen was prinzipiell war das allerwichtigste
ist überhaupt wüsste gar nicht wie das ohne die die backgrounds gehen sollte ist der rackmann am
start habe ich irgendwelche habe ich irgendwelche backgrounds übersehen nur frage habe ich irgendwas
übersehen weil du hast das schon mal ein paar geschickt und ich habe jetzt den letzter ja habe
ich ja habe ich mittlerweile alle drinnen die du gebaut hast hoffe ich du nutzt du kein wayland
benutzt kein wayland
ich benutze kein wayland weil das also hauptsächlich problem weil es in vm nicht
richtig funktioniert ich weiß nicht welche settings zum beispiel federer oder ubuntu und
mint und so benutzen wobei mint hat keinen hat kein wayland dort läuft das in der vm ja aber
hier so selbst installiert funktions funktioniert das nicht das ist ziemlich im arsch doch ich
glaube sogar ein paar also ubuntu hat mittlerweile wayland by default und federer hat mittlerweile
glaube ich auch gar nicht mehr so wenige übrigens wer die backgrounds nice findet die sind auf github
daher sind jede jede menge drin für alle täglichen lebenslagen so der pepo der hamburger futtert kekse
futtert der an seinem vierten computer arbeitet der lördchamp energydrinkt
selbstverständlich ach leute wisst ihr was es heute gibt ihr kommt nie drauf nudeln mit
lachs futtert bügelt gewichte hebt einfach nur template für nächstes der daily scrum macht und
dann gibt es das auch noch in unterschiedlichen ausführungen für ins bett gehen oder aufstehen
und schlafen und träumen und zähne putzen und max fps gucken
also da lasst uns mal ein paar sachen gucken auf youtube ich wollte mir doch das video zu ssh
ja das wollte ich mir angucken wahrscheinlich wird da auch nicht mehr drinne vorkommen als
das was wir am freitag schon raus bekommen haben aber gucken wir mal
A backdoor has been found within lib-lzma, a package within the xz-library that does a lot of the compression on the internet.
Now the reason why this is such a big deal is that the xz-library in this version of lib-lzma
tut das wirklich a lot of the compression on the internet?
Ich dachte, die meiste Compression im Internet ist immer noch zlib und gzip.
Wobei, gzip ist zlib, oder?
Aber glücklicherweise hat keiner so einen neuen Server im Internet stehen, dass er die betroffenen Packages hat.
Ja, weil seine SSH-Verbindung 5 Millisekunden langsamer war.
Ach, Open Wall hieß das.
Genau, den Post haben wir uns am Freitag schon angeguckt.
Alter, was ist denn das für eine Zeitzone? Minus 7.
Ich gette, Freund auszusprechen ist tatsächlich schwierig.
Genauso, wisst ihr, was der komplizierteste Name ist, für Amis auszusprechen?
Schon ein paar Mal gesagt, das ist Uwe.
Uwe, können die einfach nicht aussprechen.
U-W-E, U-V, die kriegen es einfach nicht hin, Uwe auszusprechen.
Was nutzt du eigentlich von Jetbrains?
Alles.
Also, naja, alles ist übertrieben.
Was ich von Jetbrains...
Ich würde es dir gerne zeigen, wenn die Jetbrains-Toolbox nicht wieder meine 4M crasht.
Okay?
Hände weg, Hände weg vom Rechner.
Brage.
Okay, also aktuell habe ich installiert, Rider, Pycharm, Goland und Sea Lion.
Darf ich klicken? Darf ich klicken?
Oh, ich darf klicken, nice.
Ich glaube, diesmal ist es nicht kaputt gegangen.
Fuck!
Warum geht das immer?
Warum geht das immer kaputt, wenn ich die Jetbrains-Toolbox aufmache, Mann?
Was ist das für ein Scheiß?
Das ist nur, wenn ich die Jetbrains nur, sonst nirgendswo, nur wenn ich die Jetbrains-Toolbox aufmache.
Ich verstehe das Problem nicht, Mann.
Also, wie gesagt, ich tippe drauf, dass das an der OpenGL-Implementierung von 4M liegt.
Vielleicht wäre es sogar mit dem Update gefixt, aber ich traue mich nicht zu updaten.
Also, ich habe das Jetbrains-All-Desktop-Pack.
Und jeder, der auch nur entfernt sein Geld oder auch nur seinen Spaß an Softwareentwicklung hat
und Technologien benutzt, die hier unterstützt werden, denen kann ich das nur empfehlen.
Weil die Dinger taugen einfach.
Ja, ja, Toolbox-Backdoor 100 Pro.
Also, das All-Products-Pack kostet euch...
Also, ich bin jetzt mittlerweile schon hier im dritten Jahr.
Das kostet euch 289 Euro im Jahr.
Deswegen denke ich mal, für einen, der einfach nur Hobby-mäßig einmal im Monat ein bisschen was in Go bastelt oder in Python skriptet,
ist das vielleicht etwas Overkill.
Doch, VS Code benutze ich auch.
Ich benutze VS Code für Frontend-Sachen.
Ich mag WebStorm nicht.
Das benutze ich, deswegen habe ich es auch nicht installiert.
Also, ich benutze für die ganzen Backend-Sachen und...
Also, hier.
Visual-Controller-Zeug, C-Line, wobei ich dafür manchmal auch Visual Studio Code verwende.
C-Line, GoLand für Go, PyCharm, wobei PyCharm gibt es auch in der Community-Version kostenlos,
die im Prinzip kein großer Unterschied ist zur kostenpflichtigen Version.
Und Rider.
Rider benutze ich mit Abstand am meisten, weil ich sehr viel in .NET mache.
Früher habe ich noch RubyMine regelmäßig verwendet, aber ich habe ewig nichts bei Ruby gemacht.
WebStorm ist nicht so meins.
Deswegen.
Ich benutze eigentlich viele Sachen relativ regelmäßig daraus.
Also, C-Line, PyCharm, GoLand und Rider.
Und für mich allein schon für GoLand und Rider lohnt sich das.
Weil .NET in Visual Studio Code suckt.
Und ich finde, zumindest früher, hat Go in Visual Studio auch...
Ach, übrigens, Rust Rover haben wir auch benutzt.
Das ist noch nicht offiziell dabei, weil das noch Preview ist.
Das werde ich dann aber auch benutzen, sobald es rauskommt.
Also, ich benutze jetzt schon die Preview-Version.
Und fünf Sachen sind es, ja.
Also, C-Line, GoLand, Rider, PyCharm und Rust Rover.
.NET in Visual Studio Code ist pain in the ass.
Kannst du knicken.
Go in Visual Studio Code war früher auch ganz abartig.
Mittlerweile ist es wohl deutlich besser geworden, sodass man vielleicht sagen kann, dafür bräuchte man es eigentlich nicht.
Also, eines der größten Probleme, die ich früher hatte mit Go in Visual Studio Code ist,
dass der Go-Language-Server öfters gerne mal gecremiert wurde.
Und dann crash das und dann kein Autocomplete mehr ging.
So nach, regelmäßig, so nach 20 Minuten, 20, 30 Minuten.
Nee, den AI-Assistent habe ich nicht aktiv.
Nach 20, 30 Minuten ist dann der Language-Server von Go gecrashed und ging Visual Studio Code.
Außerdem war das eh ultra-laggy, die Code-Completion für Go in Visual Studio Code.
Früher, sage ich, früher.
Ich habe es jetzt schon eine ganze Weile nicht mehr probiert in Visual Studio Code.
Und das Zweite war, sobald du Interop-Sachen mit Go gemacht hast,
also wenn du beispielsweise Go-Funktionen als C-Kompatibilität,
kompatible Funktionen exportiert hast,
dann musst du ja in Go, weil das ist halt Go und Go ist teilweise etwas weird-champ,
wenn man das benutzt, kann man nämlich, wenn man hier,
ja, wenn man hier mal beispielsweise reinguckt, hier, Go,
dann kann man solche Sachen hier machen.
Man kann quasi Go-Funktionen exportieren als C-Funktionen.
Das funktioniert so.
Ich fände das sehr unintuitiv zu benutzen, ehrlich gesagt.
Aber das haben sie halt wie einiges in Go.
Da haben sich die Go-Leute halt gedacht, das ist eine gute Idee.
So, und dann muss man hier teilweise auch so C-Definitionen reinschreiben in sein Go-File.
Und dadurch, dass das hier oben steht und am Anfang Import C steht,
erkennt Go, dass das irgendwie so ein Interop-Projekt ist und er C sagt.
Whatever.
Allein schon, wenn das in der Datei drinne gestanden hat,
hat er dafür gesorgt, dass der Visual Studio Go-Language-Server instant gecrashed ist.
Nach 30 Sekunden.
Dementsprechend, ich konnte gar kein Language-Server benutzen,
also kein Go-Plugin für Visual Studio Code benutzen.
Das war Schrott.
Und dann habe ich angefangen, Go-Lang zu verwenden.
Und seitdem bin ich gestickt mit Go-Lang, einfach weil es gut funktioniert.
Ja, also wenn man da Spaß dran hat oder auch nur entfernt damit irgendwie ein bisschen sein Geld verdient.
Ich meine, ich bin nicht hauptberuflicher Software-Entwickler, aber ich arbeite, sagen wir mal,
in dem Bereich, wo es sehr sinnvoll ist, auch ein bisschen Software-Entwicklung-Skills zu haben,
dann lohnt sich das für mich.
Ich habe versucht, auf der alten Arbeit mal die Firma dazu zu bekommen, das Package zu kaufen.
Die haben es aber bis heute nicht hinbekommen.
Also bis ich dort weg bin, haben sie es nicht hinbekommen, mal ein paar Jahreslizenzen zu kaufen.
War ein Ding der Unmöglichkeit für die.
Ja, die haben Fleet rausgebracht.
Aber da sehe ich noch nicht, dass das in irgendeiner Art und Weise Visual Studio Code Killer wird.
Es gibt ja auch noch mehr.
Es gibt doch jetzt diesen, wie heißt das andere Ding, wo die ganzen Mac-Entwickler jetzt so drauf schwören?
Ich habe es schon wieder vergessen.
Blazingly Fast, Written in Rust, Edit Z.
Ja, gibt es das eigentlich mittlerweile für Linux?
Linux-Bild-Crash.
Ist das schon ein offizielles Linux-Bild? Ich glaube es ja nicht.
Nö, gibt es nicht.
Das wird alles, das wird alles kein...
Wischel Studio Code Killer.
Wischel Studio Code hat einen riesen Vorteil und Nachteil in einem.
Kann man ja auch meinetwegen so sehen.
Und zwar JavaScript.
Beziehungsweise halt browserbasiert und ein bisschen Node.js-Krempel.
Früher war es Electron-based.
Mittlerweile ist es Microsoft Electron-based.
Weiß nicht, wie das heißt, aber es ist quasi ein bisschen leichtgewichtigeres Elektron.
Also.
Der große Vorteil von Wischel Studio Code Killer ist,
Du kannst das Ding easy erweitern und Plugins erstellen in JavaScript.
Und JavaScript ist einfach die mit Abstand weit verbreitetste Sprache, um sowas zu machen.
Und es bietet sich auch extrem an, weil der Editor selbst in JavaScript programmiert ist.
Das heißt, du kannst deine Plugins und alles in der gleichen Sprache wie der Editor...
Das ist einfach wirklich wie gemacht füreinander.
Also die Extensibility ist einfach das Killer-Ding schlechthin bei Wischel Studio Code.
Der Rest von Wischel Studio Code sorgt eigentlich einfach nur dafür, dass es nicht zu abschreckend ist.
Das Ding ist nicht das schnellste Editor, aber schnell genug.
Die Features out of the box reichen für das meiste.
Gerade was Frontend-Entwicklung angeht, ist das richtig gut out of the box.
Und das gepaart mit den ganzen Plugins, die es für alles mögliche gibt, macht das Wischel...
Und der Einfachheit halber, das zu entwickeln, macht das Wischel Studio Code einfach zu einem richtig guten Default-Editor.
Und das ist das, was wir hier machen.
Und das ist das, was wir hier machen.
Und das ist das, was wir hier machen.
Und das ist das, was wir hier machen.
Und das ist die Default-Wahl für sowas.
Dementsprechend wird es aus meiner Sicht in der nächsten Zeit keinen Wischel Studio Code Killer geben.
Weil das ganze Ökosystem einfach zu ausgereift ist.
Und das Ding an sich auch einfach ganz gut funktioniert.
Auch ohne die ganzen Plugins.
Es ist nice, dass es immer wieder neue Versuche und Ansätze und alles gibt.
Aber Geschwindigkeit alleine bei einem Code-Editor, auch wenn einem das manchmal die NeoWim-Leute oder irgendwie alle erzählen wollen,
ist halt nicht alles.
Wenn Geschwindigkeit...
Wenn Geschwindigkeit bei einem Text-Editor das einzige wäre, was zählen würde,
oder das, was mit Abstand am wichtigsten ist,
dann würden alle Sublime-Texts verwenden
und keiner...
Oder hätten...
Wären alle bei Sublime-Texts hängen geblieben
und keiner würde Jetbrain-IDEs verwenden.
Ist es aber nicht.
Weil...
Programmieren...
Und selbst wenn es nur HTML-Erstellen ist,
wo ich überhaupt keine Probleme habe, das dabei zu zählen,
gibt es ja Leute, die tun dann immer so wichtig.
Haha!
HTML-Programmieren, das ist kein Programmieren.
Ey, streng genommen mag das so sein,
aber das ist mittlerweile so komplex und kompliziert,
dass es in...
Ja, Hirn, was man braucht,
der Sache richtigen Programmieren auch nicht nachsteht.
Also...
Das meiste...
Die meiste Zeit verbringt man nicht mit Tippen, sondern mit Denken.
Und...
Für das, was man dann tippt,
ist es im Prinzip ziemlich egal,
ob das jetzt...
Moment, da haben die doch witzigerweise
so einen...
So einen Benchmark bei sich auf der Seite, ja?
Es ist vollkommen egal,
ob der Buchstabe, den du tippst,
in 97 Millisekunden angezeigt wird
oder in 58 Millisekunden.
Das macht legit keinerlei Unterschied.
Das ist, um es nicht zu sagen, scheißegal.
Wisst ihr, wenn ich hier irgendwo davor sitze, ja?
Hups.
Und mache mir jetzt...
Mache mir jetzt...
20 Sek...
20, 30 Sekunden Gedanken.
Äh, Moment, wie muss ich das jetzt schreiben?
Ah, okay, FNT so.
Und ob jetzt FNT Printline oder was auch immer ich da tippen will,
ob das jetzt 40 Millisekunden früher oder später erscheint,
ist vollkommen egal, ja?
Ja, Startup Time ist halt Paintschamp in Visual Studio Code,
das stimmt schon.
Aber Startup Time ist auch nicht das einzig Entscheidende.
Das ist halt das Ding.
Die Kombination macht's bei einem Texteditor.
Wow.
Seht ihr das?
Hat grad rumgebackt hier oben.
Ist auch für Chrome-Auslastung.
Bäm.
Das ist halt auch nicht das Ding.
Die Kombination macht's.
Und ganz ehrlich, die Kombination finde...
Ja, gut.
Memory-Auslastung...
Gut.
Das...
Okay, das ist was, das lasse ich mir gefallen.
Ja, die Memory-Auslastung ist übertrieben.
Visual Studio Code ist die Memory-Auslastung echt krasser Shit.
Und das war zu Elektron-Zeiten noch mehr.
Sea Lion wundert mich nicht,
das Ding startet zig Prozesse und ist selbst in Java programmiert
und hat zig Java-Threads und Runtimes laufen,
dass es funktioniert.
Das ist tatsächlich, finde ich,
der einzige Nachteil von diesen Jetbrains-Sachen.
Wenn du dort drei Sachen laufen hast,
dann hast du schon ganz schön viel RAM-Verbrauch.
Also, was ich teilweise ganz gerne in Kombination verwende,
sagen wir mal, wir machen hier Rider auf,
so,
wir machen...
OKS.
Ja, wir machen Rider auf,
dann machen wir auf dem zweiten Desktop,
haben wir hier mal noch Goland auf,
weil wir in irgendwelchen Dingern auch noch Go brauchen, so.
Und dann machen wir noch Visual Studio Code auf
und dann hast du halt auf einen Schlag
jetzt erstmal vier Gigabyte RAM voll.
Einfach vom puren Offen haben,
der ist...
Das stimmt schon.
Das ist schon ein bisschen...
Bisschen Paints-champig.
Wobei, so richtig sehen tut man es jetzt ja nicht, ja.
Man weiß ja nicht, wie viel es vorher waren.
Gucken wir mal.
Jetzt, so viel habe ich jetzt used.
Jetzt machen wir den Kram mal wieder zu.
Wir könnten auch, wir könnten auch mit Hardtop gucken.
Und jetzt...
Guck mal.
Ja, vier Gigabyte.
Seht ihr es?
4,5 sogar, ungefähr.
4,5 Gigabyte RAM-Usage.
Nur für meine IDEs.
Auf der anderen Seite ist es aber auch wurscht,
weil sogar meine fucking VM hat 24 Gig RAM.
Und mein eigentliches System hat 64 Gig RAM.
Ich könnte der VM sogar noch viel mehr geben.
Also, ja, das ist doof,
aber das ist auch nicht schlimm,
dass es so viel RAM benutzt,
weil Systeme heute haben viel RAM.
Also, deswegen muss ich halt sagen,
rein mit Performance-Sachen
musst du halt...
Kannst du halt...
Kannst du halt alleine auch nicht punkten.
Weil die anderen sind schnell genug,
sodass es nicht so sehr nervt,
als dass man sagt, ey,
das ist so viel angenehmer,
dass es jetzt 40 Millisekunden schneller erscheint.
Ja?
Wäre Visual Studio Code jetzt, keine Ahnung,
250 Millisekunden und das...
58, das würdest du richtig spüren.
250 Millisekunden Delay beim Tippen
und das spürst du richtig, ja?
Aber so...
Juckt nicht.
Welche Funktionen fehlen da in deinem eigenen Nachbar
Visual Studio Code?
Fällt mir jetzt nichts ein.
Da müsste ich jetzt längere Zeit
was am Stück gerade heute mit gemacht haben,
dass ich...
Weiß nicht.
Ja, eine Sache, die ich witzig finde,
dass es die nicht gibt.
Warum gibt es keinen Browser in Visual Studio Code?
Nicht, dass man es braucht.
Mir persönlich ist es egal,
weil ich kann einfach
Visual Studio Code aufmachen
und...
und...
daneben einen Chromium-Browser
und wenn ich Frontend entwickle,
geht das so genauso.
Das macht kein Unterschied.
Ich brauche den nicht eingebaut.
Aber es gibt keinen Browser in Visual Studio Code.
Und da verstehe ich nicht, warum,
weil Visual Studio Code selber ist ein Browser.
Deswegen verstehe ich nicht,
warum es keine Browser-Funktionalität gibt.
Ja, gibt es.
Das Ding ist von Microsoft, ja?
Das hatte, glaube ich, tatsächlich die erste Integration überhaupt.
Ja, im Gaming würdest du das spüren,
aber da ist es ja auch nicht so,
dass du 80%...
denkst und 20% tippst.
Da machst du eher Sachen parallel, ja?
Denken und input... inputten.
Und beim Programmieren denkst du zu 80% und dann schreibst du was.
Was ist da 70-30?
Die 50 Millisekunden könnten ein Backdoor sein.
Ja, mittlerweile weiß man nie, ja?
Okay.
Ich habe mich jetzt etwas sidetrackt...
sidetracken lassen.
Programming eSport.
Du wirst lachen, sowas gibt es.
Hier.
Nennt sich...
Competitive Programming.
Und die coolen Leute...
Die coolen Leute hier,
das ist eh ein ganz krasser Dude hier.
Die coolen Leute.
Wisst ihr was sie benutzen?
Chad, ratet mal!
Ratet mal!
Jetzt mal für die Leute, die es nicht wissen.
Ratet mal!
Welche Programmiersprache und welchen Editor...
sehr beliebt ist,
welche Kombination sehr beliebt ist
im Competitive Programming?
editor und programmiersprache zwei sachen eine sache verstehe ich sofort andere weniger
also das blicks hat recht es ist t++ und wim es ist nicht go es ist nicht was anderes und
das liegt daran wim ist so beliebt weil wim reines editieren wenn man quasi so programmiert
wie es competitive programm machen nämlich gehirn zu text also die machen das ja wirklich parallel
denken und tippen weil wim mit abstand die geringste latency hat von hirn zu text wenn
man das verinnerlicht hat und c++ liegt daran das hat mehrere gründe zum ersten weil das relativ
schnelles weil das wenig speicher braucht was gut ist für die ganzen validierung
s
geschichten die es gibt also wenn er in irgendeiner competitive programming competition teilnimmst
dann bekommst du eine aufgabe und am ende da steht dann so was drin wie keine ahnung in ihrer garage
stehen fünf weihnachtsbäume und 30 elfen warten vor der tür und wie geben sie also gibt es also
komische beschreibung von dem problem und am ende dann musst du was dann musst du was programmieren
und wenn es ausgeführt wird
und cells hat kein bericht aber oder vielleicht ist das durchaus eine löresseulung mein sommes
software ist dann tighten die ablage vollblasen und du kannst mir hier super
importis OPEN
Warum machen das die Leute nicht in Rust und warum machen das die Leute nicht in C? Das ist einfach die Kombination aus Geschwindigkeit, Memory-Verbrauch und halbwegs brauchbare Standard-Library ohne externe Abhängigkeiten von C++.
Streng genommen für sich ist die C++-Standard-Library verglichen mit der .NET-Standard-Library einfach nur abgrundtief schrottig, aber für so die Standard-Dinger, für die Standard-Probleme, die in solchen Competitive-Programming-Aufgaben drankommen, ist die ganz nice und die Kombination macht's.
Deswegen ist C++ enorm beliebt und WIM, weil Gehirn zu Text einfach am schnellsten geht. Und das sieht dann ungefähr so aus.
Der Typ liest jetzt das Problem und dann geht's los. Gleich macht der WIM auf und startet.
Übrigens, so schnell wie der scrollt, liest er das und versteht er das. Die Typen sind absolut Next-Level-Fivehead.
Let's go! Jetzt wird das gebaut.
Ach ja, und übrigens, was bei denen auch sehr beliebt ist, Abkürzungen verwenden.
Also da wird nix irgendwie ordentlich benannt.
Da wird nix irgendwie ordentlich benannt.
Da wird alles abgekürzt.
T-I-V-D
Und die sind so abgedreht, dass die mittlerweile sogar Makros haben für E-Schleifen und so, weil die eingebauten C++...
Also, das ist wirklich ganz, ganz abgedreht.
Also, der Typ hier besonders, die sind super krass drauf.
Guckt euch das mal an!
What?
Es geht hier nicht um Lesbarkeit, ja?
Es geht um Schnelligkeit.
Schnell fertig werden mit der Ausgabe.
Äh, mit dem Programm.
Wusstet ihr überhaupt, was Tilde I überhaupt macht?
In C++?
Ich hab keine Ahnung, was Tilde I macht.
Was macht Tilde I?
Ist das irgendwie Negate oder sowas?
Oder was ist das überhaupt?
Warum ist das gültige Syntax an der Stelle?
Geht das auch gegen KI?
Ich glaube, in der heutigen Zeit hast du bei Competitive Programming sicherlich Probleme,
dass Leute versuchen, die Aufgaben von KI lösen zu lassen.
Aber ich glaube, das ist nicht so.
Die sind einfach noch nicht gut genug dafür.
Ich hab keine Ahnung, was Tilde I macht in C++.
Also, das richte ich ab.
Also, man versteht das Programm nicht.
Er versteht's.
Reicht ja auch.
Five-Hat-Time.
Ja, und das ist übrigens ein weiteres Argument dafür,
dass das stimmt, was ich immer über Rust sage.
Dass Rust eine coole Programmiersprache ist,
aber dass Rust keine Programmiersprache ist,
in der du schnell entwickelst.
Würde das nicht stimmen,
würden die Leute auch garantiert,
Competitive Programming mit Rust als Main-Sprache betreiben.
Aber die Rust-Standard-Library ist einfach nicht umfangreich genug
und die Entwicklungsgeschwindigkeit ist einfach nicht umfangreich genug.
Der ist auch unter Windows, glaube ich, unterwegs.
Da verstehe ich die Welt nicht, aber der Erfolg gibt ihm Recht, ja.
Werde ich nichts gegen sagen.
Okay, wo sind wir eigentlich stehen geblieben?
Wir wollten uns das Video angucken zur SSH-Sicherheitslücke.
Ja, da sind wir stehen geblieben.
Ja, das haben wir ja auch schon gesehen.
Ah, Memory-Analyse.
Kommt da noch...
Okay, ganz ehrlich, der guckt sich einfach nur den Blogpost an.
Das haben wir am Freitag schon gemacht, 30 Minuten, nachdem der Kram veröffentlicht war.
Also, okay, mal gucken, ob das stimmt, was ich erzähle.
30 Minuten, nachdem der Kram veröffentlicht war.
Die E-Mail ist von...
8.51 Uhr, minus 7.
Minus 7.
To...
Was haben wir denn jetzt?
Wir haben jetzt Sommerzeit, oder?
Seit heute.
Also, CET?
CEST, wie heißt denn das dann?
Ja, tja, wie macht man ordentlich?
World Time Buddy, naja.
What the fuck?
Was ist denn minus 7 an?
Ach, komm, scheiß drauf.
Wurscht.
Vielleicht waren wir auch zwei Stunden später.
Aber wir waren am Freitag genauso weit wie das Video.
Das Video können wir uns...
Da ist er ja schon wieder.
Das können wir uns schenken, das Video.
Wollen wir nicht.
Was haben wir denn sonst noch hier?
Was ist das denn?
World Fastest Lego Technik Autoklicker.
Hat mir YouTube empfohlen vorher.
Dachte, ich sehe ganz interessant an...
Hahaha.
Hahaha.
Leute.
Das ist ja...
Ah, die Leute, man.
Ich weiß auch nicht, warum ich das so lustig finde.
Vielleicht ist es das Geräusch oder so.
Keine Ahnung.
Hör ich das Ding?
Moment.
Ist das...
Ist das quasi so das Garz-Pedal?
Ja, oder?
Geil, ne?
Okay.
Ich hoffe, er macht das mit einer alten Maus, weil wahrscheinlich ist die danach im Arsch.
Oh Mann, Alter.
Was ist das für eine Maus, Leute?
Von der Form her hätte ich gesagt, eine olle Logitech.
Habt ihr erkannt, was es für eine ist?
Könnte aber auch genauso Zoe oder...
Wobei...
Okay, eine billige Dell-Maus.
Moment, die Lego Technik Motoren haben mittlerweile LEDs?
Okay, Moment, Moment.
Das...
Das muss ich mal auswählen.
CBS-Test.
Okay.
Das machen wir mal in Chrome, weil kleinster Input-Lag.
Okay.
Okay.
Achtung, ich probiere mal.
Let's go.
Alter, das ist anstrengend.
Okay, 10 cps.
Auf geht's.
Meine Finger, Mann.
Okay, komm.
Wir machen mal...
Mal gucken, ob ich alt geworden bin, Leute.
Mal gucken, ob ich alt geworden bin, okay?
Mal gucken, wie schnell ich heute bin.
Aha.
Ups.
Ich war schon mal schneller.
Ah.
Oh.
Nicht schlecht, oder?
Für fast 40 Jahre.
Schnelle Reaktionsteile hat manche mit 20.
Statistics.
Guck mal.
The average reaction time ist 273 Millisekunden.
Ja, guck mal.
250...
Also, ich bin deutlich schneller.
Als die...
Als der Durchschnitt.
Und das mit 40.
So.
Reaktionszeit noch on point hier.
Okay, weiter.
Ah, das ist nicht schnell genug.
Ach so, was hatte ich eigentlich für einen Rank?
Wisst ihr noch?
Was kam noch mal raus jetzt?
Cheater hatte ich auch.
Okay.
Äh.
Ja.
Oh, nee, das funzt nicht, oder?
Ah.
Das ist so wackelig.
Das bricht gleich ab.
Also, noch kann ich schneller klicken als der Lego-Technik-Motor.
Aber das ist bald vorbei, vermute ich.
Jetzt kommt die noch eine größere Übersetzung.
Jawoll.
Wisst ihr?
Wisst ihr, ich glaube, die Maushersteller, die haben auch sowas.
Nämlich zur Belastungstest von Mäusen.
Sowas in der Richtung haben die bestimmt.
Um zu testen, wie viel die Mäuse im Durchschnitt aushalten, bis sie kaputt gehen.
Sogar mit Zeitlupe.
Ja, schon besser.
Schon besser.
Das ist auch irgendwann quasi durch die Feder im Button beschränkt, wie schnell die denn wieder hochdrückt.
Warum?
Warum braucht er das mit Control?
Macht das Bild?
Ist fancier, oder wie?
Gab es nicht, oder ist es nicht sogar noch in MW3 so, oder in MW2 so gewesen,
dass man mit manchen Singleschusswaffen unendlich schnell triggern konnte?
Weil die wieder pepeger waren mit dem Programmieren?
Dass es quasi keine Geschwindigkeits-, keine Schussgeschwindigkeitsbegrenzung gab bei manchen Singletriggerwaffen?
Für sowas ist das doch quasi ein undetectable, undetectable Cheat.
Wo es halt nur die Maus noch gescheit bewegen können mit.
Wisst ihr, was ich mich schon immer gefragt habe bei diesen RPM-Testern?
Wie funktionieren die?
Ich habe keine Vorstellung davon, wie so ein RPM-Tester funktioniert.
Die Dinger gehen ja auch ohne, dass da ein weißer Strich drauf ist.
Ach, du brauchst Refinierung.
Du brauchst eine Reflektorfolie.
Ja, weil ansonsten wüsste ich auch nicht, wie das gehen soll.
Ja, und vor allem geht das bei der Geschwindigkeit, fliegt es direkt auseinander.
Wisst ihr, was eigentlich fast noch einfacher wäre an der Stelle?
Einen Microcontroller nehmen, der USB kann,
den sich als USB-Maus registrieren lassen,
und dann einfach über die Firmware dort das Klicksignal schicken.
Du musst ja nicht wirklich klicken, dass es als Klick registriert wird.
So schnell klicken kann keiner mit einem physischen Gerät.
Das kann man dann aber nicht mit Lego bauen, das stimmt.
Okay, deutlich advancedere Konstruktion.
Oh, sogar mit Federung, hä?
Boah, five-hat-time.
Ja, gleich bricht die Maustaste ab.
Oh, 50.
Guck, Leute, die Seite macht schon gar nicht mehr mit.
Die Seite kackt schon ab.
Ja.
Die Webseite kommt schon immer mit.
70.
Ja, soll er nicht langlebig, ist das Ding natürlich nicht.
Ja, aber es ist rein kleinseitig, da passiert ja nichts.
Interesting.
Moment, ich will kein Autoplay.
Michael, 50 Billionen, danke schön für den Sub.
Ich habe übrigens heute noch gar nicht reingeguckt in meinen Subscriber-Manager.
Aber ich glaube, ich habe nichts übersehen.
Mr. Krabs!
Nee, das war heute gar nicht.
Das war letztens.
Das war ein großer Stream noch.
Ja, Leute, VIP-Watcher, äh, Viewer am Start.
Neue Badge.
Es wird echt mal Zeit, ne?
Ich glaube, meine Emote-Erstellerin kann aber gerade nicht.
Die kommt soweit ich weiß aus der Ukraine.
Die haben mal andere Probleme gerade.
Als Twitch-Emotes erstellen.
Das wäre geil, ne?
Wenn dann über 20 das Ganze zu Cheater werden würde.
Workout-Champ.
So, was haben wir denn sonst noch hier?
The Downfall of Redis.
Da hatten wir es doch gerade von.
Redis ist nicht mehr Open Source.
Da gucken wir uns das jetzt noch an.
Was ist das?
Why this works?
I was talking with a co-worker at work.
Hä?
Warum sollte das nicht, warum sollte das nicht wirken?
Außer, außer, dass ich immer nicht merken kann, ob es %D oder %I oder was auch immer ist.
Kommt da noch irgendeine...
What the f...
What?
Das geht?
Egal.
The Downfall of Redis.
Redis ist nicht mehr Open Source.
Beziehungsweise, so ganz stimmt das ja auch nicht.
Wenn man Open Source so definiert, wie diese Open Source Foundation oder wie die heißen, dann nicht.
Wenn man das so definiert ist, man hat die Möglichkeit, sich den Source-Code anzugucken.
Dann schon.
Aber gucken wir uns das mal wirklich in Ruhe an.
Denn ich muss ehrlich sagen, ich habe von dem ganzen Drama gar nichts großartig mitbekommen.
Wie sieht es denn da aktuell auf Shithub aus?
Die haben bestimmte Threads geschlossen, hä?
Ja.
Hier, da gab es doch garantiert mehr Diskussionen.
Das haben die 100 pro geclosed.
Switch to Apache License.
Das haben die abgelehnt, hä?
Hier gibt es bestimmte Diskussionen drunter.
Ja.
Ja.
Ja.
Ja.
Hier gab es.
Jetzt wird er richtig hart runtergetrollt, oder?
Was ist mit Redis?
Redis ist zu einer streng genommen nicht mehr Open Source Lizenz geswitcht.
Gucken wir uns mal das Video an.
Da kriegen wir es hoffentlich etwas genauer erklärt.
Weil ich habe das Drama auch nur so am Rande mitbekommen.
Das weiß ich.
Das weiß ich.
Redis heute ist die Firma Redis.
Und Redis selbst wurde halt von irgendeinem Typ erstellt, der, keine Ahnung, wahrscheinlich
dann irgendwann die Redis Firma gegründet hat.
Right.
A right that ended in the very recent events of Redis changing their license to actually
not be Open Source anymore and scamming their community, contributors and even the founder
of Redis himself.
Okay.
It all started in 2007.
Okay.
In 2007, when Salvador Sanfilippo, better known as Anti-Waz on the Internet, was building
a tool called LLOOGG.
It was a very early...
LOG...
Gg.
LOG...
LOG...
...competitor to Google Analytics.
The main selling point of LLOOGG was their real-time visitor tracking feature, which
Google Analytics did not support until years later.
Because of the massive amounts of data written to the database, they ran into performance
issues using MySQL.
Ach, daher kommt das.
...believed that using memory instead of the hardware to store the data, like MySQL...
Ist ja nicht das erste Projekt, was so aus dem, wie soll man sagen, so dem Bedarf geboren
wurde, weil es noch nichts gab.
Also, also sprich, Redis wurde erfunden als Caching für ein Google-Analytik-Konkurrent,
der Echtzeit-Tracking quasi ermöglicht.
Ergibt schon irgendwie Sinn, ja?
Wenn's...
Das war ja...
Sonst war...
Weiß ich...
Hat er ein Ja gesagt?
Muss schon ein bisschen her gewesen sein.
...would solve the problem and program the first prototype of what we will later know
as Redis.
In 2009, Anti-Waz published the Redis.
Redis.
R gigabit.
Bin im oriented recovery.
Bu blocks.
Legal.
So it was published the RediScore on github.
To say it with his own words...
つまり...
Zu diesem Zeitpunkt, the server may not have been perfectly stable, but soon it will
be an essential part of many web applications and massively impact how we design modern
software arhitecture to this day.
slaveindustries.com eineั้lich dank donne eaten.
But soon it will be an essential part of manuhep applications and massively berries
del live launching of redise did not get much attention at all.
Guck, 2009, das waren auch die Zeiten, wo Leute Ruby programmiert haben.
Heute interessiert sich niemand mehr für Ruby.
Was zum größten Teil daran liegt, dass niemand mehr neue Sachen in Ruby on Rails macht.
Es gibt noch ein paar Legacy-Projekte.
Und man findet eventuell, wenn man Glück hat, auch noch einen Job, wenn man Bock hat auf Ruby.
Aber leider ist es ziemlich dead.
Was ich sehr schade finde.
Ich persönlich mochte Ruby on Rails und Ruby als Programmiersprache vor allem.
Rails, könnte ich damit leben, dass es den Bach runter geht.
Aber Ruby selbst, finde ich, ist eine mega nice Programmiersprache.
Wird sogar fast so weit gehen, dass es neben C Sharp meine Lieblingsprogrammiersprache überhaupt ist.
Leider kann ich die letzten Jahre über nichts mehr in Ruby machen, weil halt Ruby null Angel sagt es.
Aber Anti-Rays hat weiter auf Redis gearbeitet.
Und bald hat Redis in der Ruby-Community gespürt.
Und infiziert Startups, die später sein werden.
Und Unicorns.
Instagram was entirely built on Redis in its early years.
Aha, wusste ich nicht.
GitHub used it to build a job-queuing system.
And Twitter improved their timeline-page-performance using Redis.
After gaining...
War GitHub nicht...
Äh, nicht GitHub.
War GitHub nicht...
Ruby on Rails am Anfang und Twitter auch?
Ich glaube, beide waren am Anfang Ruby on Rails.
Ich glaube, GitHub ist heute teilweise immer noch ein bisschen Ruby.
Und Twitter gar nicht mehr.
Twitter ist zwischenzeitlich, glaube ich, auf Java-Geschichten umgeschwenkt.
Dann versuch doch, einen Trend zu starten.
Du meinst den Ruby-Trend?
Nee.
Dafür müsste ich mich mehr mit Ruby wieder beschäftigen.
Und Sachen in Ruby machen, wo meine Zeit wahrscheinlich bei anderen Sachen besser aufgehoben wäre.
Nee.
Der Zug ist abgefahren.
Ruby war beliebt.
Wurde...
Immer beliebter durch Rails.
Aber dadurch, dass Rails jetzt weg ist, ist halt das große Problem,
dass es kein so richtig großen herausstechendes Merkmal von Ruby gibt.
Warum man das verwenden sollte.
Ja, bei Python kannst du immer noch sagen, ja, das ist halt im wissenschaftlichen Bereich sehr beliebt.
Das ist bei Machine Learning sehr beliebt.
Ultrafiele Frameworks dafür.
Ja, bei Go kannst du sagen, Command-Line-Tools für Server, Cloud-Sachen und so.
Das hat alles so ein bisschen so seine...
Ja, für seine beliebte Anwendungs...
Aber Ruby fällt mir halt nix davor ein.
Aber ich mag Ruby als Sprache.
Wisst ihr, was in Ruby auch schön ist?
Ruby-Range-Counter.
Ähm...
Da gibt's ja kein Beispiel.
Als Function.
Ja.
Das finde ich sehr schick.
Sehr schick in Ruby.
Die Syntax ist ein bisschen gewöhnungsbedürftig.
Äh, GitLab war...
War mal Ruby on Rails.
Ich glaube, es ist auch tatsächlich einiges immer noch.
Oje.
Ja, dann wundert mich nix mehr.
Wenn das für Ember ist, dann für Ember ist das Broadcom.
Und wahrscheinlich haben die es irgendwie verkackt.
Die Database.
In 2013, er wurde von der VMware-Spin-Off Pivotal Software gesponsert.
In der gleichen Zeitperiode, um 2011,
begannen die Unternehmen,
über Consulting-Services für Redis.
One of them was Guarantia Data,
which will play an essential role in this entire story.
In 2014,
Guarantia Data tried to rebrand to RedisDB.
But after the pushback of NGOS,
they reverted the...
Moment, die wollten ihre Firma RedisDB nennen,
obwohl sie nichts mit Redis zu tun haben
und einfach nur Redis Dienstleistungen verkaufen.
Oh, five fat move, oder?
...rebranding and rebranded to Redis Labs instead,
which...
Das ist ja noch schlimmer.
...is still very confusing.
Around this time, Redis...
Das heißt auch Redis Labs war nicht quasi der Erfinder, also nicht der Hersteller...
Boah, das ist ja super weird, dass das einfach nur ein Dienstleister ist.
...Labs also transitioned away from offering consulting services
and focused on providing hosted Redis services on top of AWS instead.
In 2015, a common investor of Pivotal Software and Redis Labs
suggested moving Antires to Redis Labs.
Which employed him shortly after that
and sponsored Redis from this point on.
Investors play a crucial role in Redis Labs
because that company is stacked.
Stacked up with VC money.
They raised over 347 million US dollars in seven rounds
from Goldman Sachs, the Silicon Valley Bank and more.
To set this into perspective,
if we wanted to just fund the open source project with,
let's say, five developers,
each a salary of...
Ami-Gehälter?
This would come to 26 million dollars over the span of 13 years.
Less than a tenth of the funding of Redis Labs.
Ach so, meinte der fünf zusammen oder 400k für jeden Einzel?
This would come to 26...
Let's say five developers, each a salary of 400k...
Ja, each, each!
...dollars a year.
This would come to...
...26 million dollars over the span of 13 years.
Geht ja sogar noch.
...less than a tenth of the funding of Redis Labs.
After Antiraz transferred over the Redis IP and Trademarks to Redis Labs,
he left the project in 2020.
In a blog post he explained the reasons for stepping back.
He never wanted to be...
Moment!
...IP and Trademarks to...
Okay, an der Stelle wusste er eigentlich,
das Projekt ist done, oder?
Das werden die dem hoffentlich ordentlich bezahlt haben.
Die Namensrechte an Redis.
Und die...
Ja.
Ja, eigentlich nur die Namensrechte und so.
Und gleich noch ein bisschen mehr.
An der Stelle wusste er wahrscheinlich, ab hier geht's den Bach runter.
Vielleicht hat er sich auch gedacht,
ich hab eh nicht mehr so Bock da drauf.
Und ich hab jetzt hier die einmalige Chance, so im Endeffekt,
aus der Sache rauszukommen, auf die ich eh keinen Bock mehr habe.
Und ich kann auch mal Stonks machen für mich selbst.
Weil das werden die dem schon ganz gut bezahlt haben.
...to Redis Labs, he left the project in 2020.
Ja.
In a blog post.
Okay, der hat wahrscheinlich 2018 geistig damit abgeschlossen schon.
Dann haben die noch zwei Jahre über, wie soll man sagen,
die haben wahrscheinlich 2018, er hatte wahrscheinlich keinen Bock mehr,
die haben 2018 den Transfer der Namensrechte und alles gemacht,
der hat Kohle bekommen und wahrscheinlich war irgendwie in diesem Vertrag mit geregelt,
dass er noch zwei Jahre dort weiter...
...irgendwie übergangsmäßig beschäftigt wird und danach...
...der hatte wahrscheinlich 2018, war für ihn wahrscheinlich die Sache schon durch.
...post, he explained the reasons for stepping back.
He never wanted to be a software maintainer and used code to express himself.
But one quote inside of his goodbye blog post hits quite a lot harder today.
I believe I'm not just leaving Redis in the hands of a community of expert programmers,
but also in the hands of people who care about it.
...but also in the hands of people who care about it.
...about the legacy of the community spirit of Redis.
In their goodbye blog...
Bin ich ja mal gespannt, ne?
...post, Redis Lab stated that the core of the Redis project
will remain under the 3-Klaus-BSD-License, as it has always been.
But this will only hold true for a few more years.
Redis was now led by a team of five people.
Three of them are from Redis Labs.
One of them from Alibaba and one from...
Die China-Chinesen wieder.
...AWS.
One year later, Redis Labs officially re-rendered to just Redis.
Ja gut, jetzt haben sie auch die Namensrechte, jetzt können sie ja auch.
Which clearly is what they wanted all along.
Redis, the company, was still developing hosted Redis services on top of popular cloud providers,
essentially competing with AWS Elastic Cache.
And we'll find out soon that they were probably not very successful in doing so.
Or at least not successful enough.
While the Redis core team remains small, Redis, the company, has grown to over 700 employees
today.
Moment, die haben vier Leute, nee, drei Leute, drei Leute, die an Redis arbeiten.
Einer ist von Amazon, einer von Alibaba.
Was machen denn die anderen 697, wenn ihr Kerngeschäft eigentlich Redis ist?
Meetings?
Ja, wahrscheinlich.
Ja.
Das ganze Dach wird gemietet, ey.
Today, I could not even make up roles for all of those people if I wanted to, but browsing
through the Wayback Machine snapshots of the Redis website makes me think, quite a few
of them were busy updating their best design a concerning amount of time.
And on March the 20th, 2024, the day arrived where VC money defeated open source in the
company.
Redis announced in a blog post that they will move away from the three-way network, but
they will move away from the three-way network.
Redis announced in a blog post that they will move away from the three-way network.
Ahh!
The
Blue arise!
ம
𝒽𝒶𝒶𝒶𝒽𝒶𝒶 appointment maker time!
Look at the time.
I will scroll here.
Troll-troll thoroughly.
Subscription-Modell haben. Na gut, lese ich jetzt nicht.
Dual-Licensing-Model, which basically means that they offer it under two different licenses.
Moment, es gibt eine SSPL, eine Server-Side-Public-License und eine
RSA-LV2-Ready-Source-Available-License. Die Dinger haben immer Namen, Mann.
...and choose which is the lesser evil. While the 3-Clause-BSD-License is one of
the approved ones by the Open Source Initiative, the new licenses are not,
which they acknowledged in the announcement. Therefore, Redis will no longer be called...
Die ursprüngliche BSD-License ist eh die beste, ich weiß nicht, ob das die ist,
für zum benutzen. Da steht, sinngemäß kannst du damit machen, was du willst.
Du kannst es in Open-Source-Projekten verwenden, in Closed-Source-Projekten,
du bist nicht dazu gezwungen, den Source-Code freizugeben, du kannst alles mitmachen.
Okay.
Okay.
Okay.
Hörst du eigentlich die Musik, die du im Stream spielst, auch als Hintergrund?
Ja, ja. Ich höre gerne Gaming-Musik im Hintergrund, wenn es halt ist, wenn ich mich
auf was irgendwie Programmieren konzentrieren muss oder irgendwas am Basteln bin, ja, ja.
Das ist sehr entspannend im Hintergrund. Ja. Sag mal so, wenn ich jetzt sage,
oh ja, ich will mal ein bisschen nice Musik hören, dann nicht unbedingt.
Ach so, während dem Stream, ja, die höre ich auch.
Hold Open Source. Before I continue, I have to say, I am not a...
Ja, ich auch nicht.
Moment, das ist die MongoDB-License? Gab's da nicht auch mal ein bisschen Stress um die Lizenz vor ein paar Jahren?
2.0
Ja, Moment, weißt du was?
Es paart auf das Service.
Also, heißt im Endeffekt, das ist ein bisschen so, also um die Probleme auszuschließen, die es bei Elasticsearch gab, oder?
Das ist jetzt zwar MongoDB, aber erinnert sich noch einer an den Stress mit Elasticsearch,
dass Amazon quasi gesagt hat, sie bieten Elasticsearch an?
Ne, wie war das bei Amazon nochmal?
Sie bieten Elasticsearch?
Sie bieten Elasticsearch an und nennen es Elasticsearch, obwohl es mit Elasticsearch nichts zu tun hat.
Irgendwie, es gab Stress zwischen Amazon und Elasticsearch, das weiß ich noch.
Und daraufhin haben die auch gesagt, es kann doch nicht sein, dass sie mit unserer Arbeit Kohle machen.
Vielleicht war das ähnliche Sache hier.
Okay, du musst quasi alles releasen.
Was keiner machen wird.
Du kannst eine Instanz des Services runtern, mit dem Service-Source-Code, den du zur Verfügung gestellt hast.
Nun, das klingt wie ein Schmerz, vor allem wenn du eine Art proprietäres Lizenz-Software in deinem Stack hast,
das du einfach nicht open source kannst, wegen legalen Gründen.
Nachdem die SSPL an die open source Initiative eingeladen wurde,
weil sie sich für eine geliebte open source Lizenz anbieten wollten,
hat die open source Initiative ein Hitsch-Signal gemacht, das sie als FoxPen-Lizenz bezeichnet hat,
weil es restriktiert, wer sie benutzen kann.
Die andere Lizenz in Frage ist die Redis-Source-Available-Lizenz 2.0.
Diese Lizenz braucht du nicht...
Warum 2.0? Es gab doch 1.0 nie.
...publish the source code, but it restricts, who can use it directly.
In the license terms it says,
you may not make the functionality of the software or a modified version available to third parties as a service,
or distribute the version or a modified version...
Ja, das ist im Prinzip so.
Ja, das ist im Prinzip so.
Ja, das ist im Prinzip so.
Ja, das ist im Prinzip so.
...so was ähnliches, was elastirsearch auch gemacht hat, dass Amazon jetzt nicht Kohle damit machen kann.
Das finde ich auch erstmal gar nicht so schlimm...
Frage ist, ob du es weiterverwenden kannst als Part eines Services...
Also, wenn dein Service quasi ist,
... ich biete einen Terminplaner-S-Service an,
der unter anderem Redis verwendet,
dann ist das okay,
Aber wenn ich einen Service anbiete, der quasi ein Redis-Konkurrent ist,
der unter der Haube aber selbst Redis verwendet, dann darf ich das nicht.
Das würde ich verstehen, aber so generell ist es natürlich doof.
Reaktion, Jan, danke für den Prime-Sub.
You may not make the functionality of the software a modified version of it.
Ja, sowas meinen die damit, oder?
Das ist das, was Elasticsearch auch gemacht hat gegen Amazon.
In a manner that makes the functionality of the software available to third parties.
Now, again, I am not a lawyer and this is not legal advice,
but this sounds like a very vague definition to me.
And when we look at the FAQs for Redis-Modules,
which were already re-licensed to the same licenses before,
they state multiple times that the change should not affect you.
But if not even Redis themselves can tell me with certainty,
then I should not be able to participate in such a new project.
Und wie ist das eigentlich?
Chat, überlegt euch mal.
Stellt euch mal vor, ihr habt vor einem Jahr oder so bei Redis mitgewirkt.
Ihr habt einen Pull-Request gemacht auf GitHub, weil ihr einen Fehler gefunden habt.
Ihr habt ihn gefixt, Pull-Requests eingereicht.
Oder sei es auch nur, ihr habt an der Dokumentation mitgewirkt, was auch immer.
Ihr habt contributed to Redis.
Das heißt, ihr habt den Lizenzbedingungen von Redis zu dem damaligen Zeitpunkt zugestimmt.
Was ist denn, wenn ihr nicht RSA-LV2 zustimmt, aber eure Sache ist ja immer noch drinnen?
Wie geht denn das überhaupt?
Ich meine, klar, bis zu dem Zeitpunkt der Umstellung ist das kein Problem gewesen.
Und bis zu diesem Zeitpunkt könnte auch jeder Redis nehmen und Redis forken, sozusagen.
Aber eure Sache ist ja nach wie vor drinnen.
Also darf das einfach re-licensed werden, obwohl es eure Sache ist und an einer anderen Lizenz, der ihr nicht zugestimmt wird?
Ey, das ist, glaube ich, ziemlich kompliziert rechtlich, oder?
You can. No matter where exactly the limits are, it is very clear that under none of the new licenses,
cloud providers like AWS will be able to provide hosted Redis services without paying a fee,
which was obviously the goal.
But it is also important to note,
something else.
If Redis would have had this license from the very beginning,
Guaranty Your Data would have never been able to offer the services in the first place
Moin, Feierabend, Spezi.
to open sourcing their entire infrastructure.
They destroyed the very thing that made their company exist in the first place.
Ja gut, aber die wollen halt Geld machen.
Wahrscheinlich wird es so sein, die Cloud-Services von Redis Labs kauft keiner.
Die Leute kaufen...
AWS-Cash, Google-Cash, Microsoft-Cash, was auch immer.
Und denen ist egal, ob da unten drunter Redis läuft.
Und letztendlich wollen die so halt Stonks abgreifen.
Die wollen Kohle machen.
Das ist wahrscheinlich die einzige Möglichkeit für die, gescheit Kohle zu machen,
wenn ihre Services selbst nicht so gut ankommen.
Exchange, die AWS-Employee Madeleine Olsen,
who worked on the project for four years,
announced that she will no longer be able to work.
on the project and that
there was a real price to pay
with losing such a beloved open source project.
But not only some of the main contributors
are unhappy with the change.
The pull request with the license change
is blooded with unhappy contributors
and users of Redis.
Again, this is not legal advice,
but Redis did just re-license code
that was contributed under a completely different license.
And they removed all BSD...
Redis ist ein...
Key-Value-Store, quasi.
In-Memory Key-Value-Store.
Kann man das so sagen?
Oder Chat, wie würdet ihr das definieren?
...Notices, which are required by the three-clause BSD license.
I cannot imagine that is what Antiraz meant
when he was talking about
caring about the legacy of the community spirit of Redis.
Dem Typ wird's egal sein.
Der hat seine Kohle bekommen bei der Übergabe der Namensrechte.
Legal uncertainty.
People will look for alternatives.
And it is safe to say that they will find them.
There is already KeyDB, which is a profit.
Moment, wie viele Forks von Redis gibt es eigentlich mittlerweile?
Ich habe mindestens drei gesehen auf GitHub.
20?
Ah, KeyDB, Reddict, Reddict.
Ja, die habe ich, genau, genau.
...in replacement for Redis.
And just a few days before Redis announced the license change,
Microsoft released Garnet.
Was ist aus dem Fork eigentlich geworden?
Von Terraform, Open Tofu hieß das doch, gell?
Und was ist aus dem Fork von, von, äh, das, was habe ich da gefunden zufällig, äh, von Rust?
Interessiert niemand, oder?
Wurde halt einfach mal geforkt, interessiert aber niemand.
Weil, vor zwei Monaten.
Hätte man sich auch sparen können, oder?
Ja, der Terraform Fork geht,
aber wohl ganz gut.
A cash store that can be used with existing Redis clients.
Both of them are open.
Ah, hier, Garnet.
Source.
And it would really...
Ich meine, es kann natürlich auch sein,
dass die sich schon ein bisschen so die, die eigene Bedeutungs, äh,
Bedeutung ab, absegen,
durch den Move.
Ich kann's aber aus der, aus der Sicht von der Firma schon verstehen.
Die finden's halt kacke, dass AWS mit Redis Geld,
macht und ihre Redis-Services nicht so beliebt sind und dementsprechend
voll, hätten sie gerne Lizenzgebühren dafür.
Come as a surprise if AWS won't jump in as well and develop their own Redis Fork as well.
Das kann durchaus sein, dass Amazon das forkt, ja, ja.
...with OpenSearch when Elasticsearch changed their license.
It is really a no-brainer for anyone starting a new project to use any of the alternatives.
And for the most part, you can probably replace them in your existing project as well without a new one.
...without a new one.
...without a new one.
...without a new one.
...without a new one.
Ja gut, jetzt wissen wir Bescheid.
So in the life.
Also, so sieht's, so sieht's bei Redis aus.
Wie das langfristig für die Bedeutung des Projekts sein wird, kann ich echt schwer, schwer einschätzen.
Auf der anderen Seite, ich denke mir, Redis ist halt so bekannt und default für viele Leute.
Ich kann mir vorstellen, dass es auch weiterhin an Bedeutung behalten wird.
Wobei ich's mir jetzt wirklich überlegen würde,
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
Es gibt ja jetzt auch schon einige Redis-Alternativen, also sprich, warum muss es da noch Redis sein?
Es gibt aber viele Projekte, die haben Redis als Dependency.
GitLab, glaube ich zumindest.
Also wenn man es ein bisschen größer...
Aber GitLab ist eh absolut Pain in Pobbo in the ass zu installieren.
Guck mal hier, was haben wir denn?
AAA Gaming on your Smartphone.
Warum ist das eigentlich auf englischer Titel?
...
Ich glaube, mein Browser macht nur wieder ganz komische Geschichten damit.
AAA Gaming on your Smartphone.
Warum?
But why?
Man könnte...
Ja gut, Emulationstechnik.
Klar, ich meine...
Man könnte AAA Gaming einfach auf der Plattform betreiben, die AAA Gaming gebührt, nämlich PC.
Einzig und allein PC Master Race.
Brauchen wir nicht.
Haben wir nicht sonst was?
Ein Fireship-Video haben wir.
7 Tech-Leaders, who ended up in prison.
Okay, Fireship-Videos sind immer nice.
Ich wette mit dir, ich weiß mindestens eine, die dort dabei ist.
Nämlich von dieser...
Ich habe vergessen, wie diese Firma heißt.
Diese eine Blonde...
War das eine Entwicklerin?
Oder CEOlerin?
Von dieser Firma, die diese Blutuntersuchungsgeräte herstellen wollte.
Ja, genau, das meine ich, genau.
Ja.
Dann fällt mir noch...
Also einer, der auch im Knast gelandet ist, der kommt aber wahrscheinlich nicht da drin vor, weil das zu unbedeutend war.
Der Typ, der Reiser FS entwickelt hat.
Das war mal ein Filesystem unter Linux.
Ich kenne, da gab man ein Filesystem unter Linux, nannte sich Reiser FS.
Das Ganze wurde von Hans Reiser entwickelt.
Das Problem ist nur, Hans Reiser hat seine Filesysteme nicht entwickelt.
Er hat seine Frau umgebracht und ist im Knast gelandet.
Und danach hat niemand mehr das Filesystem weiterentwickelt.
Okay, zeig mal.
Ach ja, und die Typen von dieser...
Von dieser einen Cryptocurrency-Plattform, die den Bach runtergegangen ist.
Die landen oder landeten wahrscheinlich auch schon im Knast.
Wobei, da gab es ja zwei.
Da gab es ja zwei, die den Bach runtergegangen sind.
Das ist Trevor Milton.
Er ist ein Tech-Bro, der jedem erzählt hat, dass er einen vollständigen elektrischen Semi-Truck gebaut hat,
der die Welt verändern würde.
Er hat seine Firma Nikola publik mit einem SPAC und wurde über Nacht super reich.
Das einzige Problem ist, dass dieser vollständige elektrische Truck
besser als ein unerhörliches Pile von Garbage beschrieben wird.
Und jetzt spart er vier Jahre in einem föderalen Gefängnis, um Investoren zu lügen.
Es ist ein primäres Beispiel, wann Fake-it-till-you-make-it-goes-wrong ist.
Wisst ihr, was ich bei diesen ganzen Scamsachen immer so geil finde?
Ich meine jetzt nicht explizit dem.
Weil es gibt auch viele Sachen, die einfach, wie soll man sagen, so out of hand geraten sind.
Die gar nicht wirklich mit dem Gedanken, Leute zu scammen, angefangen haben.
Aber wisst ihr eine Sache, die mich immer wieder fasziniert ist?
Wie einfach die Leute ihr Geld an Scammer geben.
Das verstehe ich einfach nicht.
Ich sage nur...
Ich meine, hat ernsthaft irgendjemand...
Irgendjemand...
Diese Präsentation gesehen...
Und hat sich gedacht...
Leute, jetzt mal ernsthaft.
Lasst mal diese 44 Sekunden auf euch wirken.
Und danach stelle ich euch eine Frage.
Okay, das reicht.
Jetzt die Frage.
Hättet ihr denen all eures...
Hättet ihr denen all eures...
Ich kann den Satz nicht.
Ich wollte nicht mal formulieren.
Hättet ihr dieser Firma nach dieser Präsentation all euer Erspartes gegeben?
So wie das manche Leute gemacht haben.
Ja, und dazu noch Kredit aufgenommen.
Ich bin immer wieder begeistert, wie schnell man die Leute davon begeistern kann.
Earth 2.
Ja, das ist auch so ein Ding, Alter.
Ich bin immer wieder begeistert davon, wie schnell man die Leute dazu bringen kann, dass...
Ich bin immer wieder begeistert davon, wie schnell man die Leute dazu bringen kann, dass...
auf irgendwelche Scams reinzufallen.
Okay, guck mal weiter.
Ist das eigentlich AI generiert?
Oder gibt es ernsthaft...
Stock-Footage?
Man in prison reading book?
Stock-Footage?
Ja, gibt es...
Ja, gibt es...
Ja, gibt es...
Ja, gibt es...
Ja, gibt es offensichtlich.
Das wird noch nicht AI-generated sein.
Ah ja, das ist der Krypto-Typ, oder?
Von dieser einen Krypto-Börse, die...
Was war das nochmal?
Was war das nochmal?
Ähm...
Ich hab's wieder vergessen.
Ich hab da mal ein Video zugeguckt.
Die haben im Prinzip wieder mehr Kohle in Umlauf gebracht, als sie eigentlich haben.
So unterm Strich war es das.
Das war alles nicht gedeckt und am Ende mussten sie dicht machen.
Da wurde auch beschissen.
Fuck, FTX, ja.
Max, was ist deine shady-Investment-Idee?
So was hab ich nicht.
Aber ich kann mal meinen Vater fragen.
Der kennt sich mit sowas bestimmt aus.
Mein Vater ist der Professional-Scammer, bevor das Wort Scam gab.
Mein Vater hat schon die Leute gescamt, da gab's das Wort nicht.
Dann nannte man das noch Betrug.
Aber er muss dazu sagen, er hat nie jemand offiziell betrogen.
Der ist ja vor Gericht gelandet, mein Vater.
Wurde freigesprochen.
Die Verträge waren einfach zu wasserdicht.
So went down in 2022, those trades didn't do too well, and the entire house of cards collapsed.
The money in your account, it didn't do too well, it's gone.
FTX got so big, in part because of its aggressive marketing, that had promoters like Tom Brady, Steph Curry, and a whole bunch of YouTubers.
But the bigger the scam, the harder it falls.
Despite making major political donations, also in violation of the law, the totally honest and not corrupt politicians decided it was best to let Bankman fry.
While most tech bros tend to be men, it's also true that most prisoners are men as well.
But there are courageous women in tech, breaking the glass ceiling.
Jetzt kommt Theranos, oder wie das Ding heißt, 100 pro.
And also breaking bad.
Nein.
Elizabeth Holmes.
Doch! Das ist sie! Das ist sie! Ja, das ist sie, genau.
Die sah auf den Bildern schon immer so leicht, weiß ich nicht, sie hatte so ein bisschen so leicht wahnsinnigen Blick.
Once called the next Steve Jobs, and her company Theranos put her in the Forbes 400.
They produced a revolutionary blood...
Das Ding, Alter, das war so...
Das ist auch was, Leute, wo ich mir denke...
Ich hab da mal ein Video drüber geguckt, dass das nicht von Anfang an als Scam geplant war.
Das ist einfach aus dem Ruder gelaufen mit der Zeit, und die konnten nicht mehr zurück.
Zumindest war das meine Auffassung der Sache, nachdem ich das Video damals geguckt hab.
Das Ding war, die haben ein Gerät hergestellt, wo du quasi eine Blutprobe reingestellt hast,
oder einen Finger gestochen hast, so, und Blut analysiert hast,
und das konnte angeblich...
Also es war einfach eine Blutuntersuchung, konnte das quasi ganz viele tolle Sachen machen,
so, ob du Krankheiten hast, ob du anfällig bist für Krankheiten, alles mögliche.
Also super krasse Versprechungen, die ja geradezu revolutionär geklungen haben.
Das Problem bei der Sache war nur am Ende, es wurde...
Haben dann Leute versucht, es gab irgendeine, glaube ich, da bin ich mir aber nicht ganz sicher,
ob ich das aus dem Kopf noch richtig...
Richtig zusammen bekomme, es gab so eine Hotelkette, die hat das Probe-Weis im Einsatz gehabt,
da konntest du quasi so einen Wellness-Wochenende buchen und konntest dann auch so einen Test machen oder so.
Das Problem war nur, dass das Ding festgestellt hat bei...
Du warst top gesund, ja, und das Ding hat dir gesagt, ach nee, du hast ein Gehirntumor.
Oder Brustkrebs oder sowas.
Und da waren die Leute natürlich nicht mehr so wellness danach.
Und die Leute hatten nix.
Also die Wahrscheinlichkeit war, das Ding hat gefühlt random Ergebnisse geliefert.
OpenWRT, nee, steht bei mir noch auf dem To-Do für meine alten Ubiquity Access Points, die wollte ich mal OpenWRT flashen.
... Testing Product that could run medical diagnostics with just a few drops of blood without the need to take a full blood sample.
Investors poured tons of money into this amazing product, but the only problem is the product didn't actually work.
Wisst ihr, was bei sowas ein bisschen das Problem ist, was ich da sehe, ist, dass wenn bei den Leuten die Dollarzeichen in den Augen leuchten,
dass der Realitätscheck oftmals ein bisschen, ich wollte gar nicht sagen, der findet einfach nicht statt.
Der findet einfach nicht statt.
Das ist zum Beispiel, gab doch auch diese, wie hieß das Ding, Hyperloop von Elon Musk, wo er jetzt ja nix mehr mit dazu zu tun hat,
die da irgendwelche Vakuum-Tunnels und so bauen wollen.
Wo man sich das...
Wenn man sich das von Anfang an angeguckt hat, mal realistisch, ja.
Ich will nicht sagen, dass es noch nie Projekte gab, wo man dachte, ey, das wird nix und die wurden dann was.
Aber Projekte, wo du von Anfang an sagst, okay, das ist unter aktuell gegebenem, ja, Weltbild gar nicht möglich, sowas gescheit zu bauen, das ist immer schwierig.
Ja, also zum Beispiel habe ich mir das von Anfang...
Ich habe mir das von Anfang an enorm schwierig vorgestellt, kilometerlange Tunnels zu bauen, mit Vakuum drinne, also Vakuum drinne ist jetzt das falsche Wort, also ohne was drinne, mit Vakuum, die dicht sind.
Die nicht nur dicht sind, die auch dem Druck der Atmosphäre von außen standhalten.
Weil du brauchst ein richtig gutes Vakuum da drinne, dass das funzt.
Und vor allem, was passiert, wenn da mal einer Not aussteigen muss in diesem...
Also, das waren so viele Fragen und keines dieser Fragen wurde zufriedenstellend beantwortet.
Und das ist bei mir immer so ein Alarmsignal, wenn du so Projekte siehst, wo du dir denkst, ey, die klingen fast zu gut, um wahr zu sein, dann sind die zu 95% auch einfach zu gut, um wahr zu sein.
Oder sind die auch einfach nicht wahr.
Aber wenn die dann auf legitime Fragen nur...
...Bingo-Antworten haben, so nach dem Motto, wir haben die besten Entwickler der Welt und glaubt an unsere Vision und sowas, das ist für mich keine überzeugende Antwort.
Also, wenn es wirklich grundlegende Fragen gibt, ja zum Beispiel, es gab auch mal so ein Projekt, die haben angekündigt, sie bauen einen Katapult, damit man demnächst günstiger Satelliten in die Erdumlaufbahn bekommt.
Und da gab es sofort ein paar Dinge, wo ich mich gefragt habe, wie zum Teufel soll das funktionieren?
Wie soll das funktionieren?
Also, erstens, was für ein riesen, krass heftiger Katapult muss das sein? Wie soll das funktionieren?
Und, so wie ist das mit Luftwiderstand und Erdorbit, das ist ganz schön hoch.
Da gab es so viele Dinge, wo ich mir gedacht habe, wie soll das funktionieren?
Und außer cool.
Außer schöne Render-Trailer hatten die halt keine Erklärung dafür.
Ja, ja, dieser Zentrifugen, genau, dieser Zentrifugen...
Ja, und dazu kam ja auch noch die Beschleunigung und alles.
Und die Kräfte, die da drauf wirken, beim Beschleunigen im Kreis, bis...
Also, da habe ich mir gleich gedacht, so, ey, das kann eigentlich nicht funktionieren.
Und außer schöne Render-Trailer hast du nie was davon gehört, wie sie es eigentlich umsetzen wollen.
Du hast es doch schon quasi selbst beantwortet.
Dass die technische Umsetzung sehr wohl ein Problem ist, wenn die Baukosten quasi nicht managebar hoch sind.
Also, natürlich, du kannst sehr vieles machen, wenn du unendlich Geld hast, aber keiner hat unendlich Geld.
Und irgendwann, ne, du kannst doch sagen, ja, ich kann alles bauen, wenn ich unendlich Geld, unendlich Zeit und unendlich Ressourcen habe.
Ja, gut, dann ist nichts ein Problem, ja.
Aber wenn etwas nicht möglich ist mit den unter gegebenen Bedingungen und Materialien, die man kennt,
wenn quasi erst nochmal ganz neue Sachen erfunden werden müssen, dafür, dass etwas gebaut werden kann,
dann bin ich da immer skeptisch, ja.
Das sind genauso wie die ganzen Startups, und ihr lacht jetzt, aber die gibt es wirklich,
Startups, die einen Weltraumfahrstuhl bauen wollen.
Da kam auch noch nichts Gescheites bei raus.
Und das Ding ist halt, in der Theorie, das ist so ein typischer Fall von in der Theorie,
ist das gar kein Problem, sowas zu bauen.
Praktisch gesehen ist das ja wohl ein Problem, einen Weltraumfahrstuhl zu bauen.
Wie sie gesagt hat,
als die Leute herausgefunden haben, hat die Firma gelöscht, und am Ende wurde sie zu 11 Jahren in der Gefängnis verurteilt,
was später zu neun Jahren reduziert wurde.
Entfraudieren Investoren ist eine Art, in die Gefängnis zu gehen, aber es ist nicht die einzige Art.
Anthony Lewandowski ist ein brillanter Ingenieur, der Googles selbstführendes Fahrzeugprogramm Waymo co-foundiert hat,
welches ihm Zugang zu einigen...
By the way, ich hab mal ne blöde Frage, ja.
Das mag jetzt vielleicht nicht politisch korrekt sein,
in der aktuellen Zeit, aber da hat er doch am Anfang gesagt,
es sind ganz wenige Frauen im Gefängnis und sowas.
Kann ich nicht einfach sagen, wenn ich was angestellt habe,
und ins Gefängnis muss, dass ich mich jetzt als Frau fühle, und dann kann ich ins Frauengefängnis?
Wäre das nicht in der aktuellen Zeit möglich?
Ich mein, wir sind doch dabei, dass man das einfach so random ändern kann.
Wäre das nicht was? Geht das?
Mich würde nicht wundern, wenn das sogar geht mittlerweile.
Oder?
Oder zählt das Geschlecht zum Tatzeitpunkt?
Das könnte natürlich auch sein.
Weiß nicht, ob's dafür schon sinnvolle Regelungen gibt.
Ja, weiter.
Defrauding investors is one way to go to prison, but it's not the only way.
Anthony Lewandowski is a brilliant engineer, who co-founded Googles self-driving car program Waymo...
Das ist, Chatge, das ist genau das, was ich meine.
Ja, das ist theoretisch möglich, das Problem ist aber unter anderem, dass du...
Du musst für den Weltraum fahren.
Du musst für den Fahrstuhl, du müsstest das nach außen hin breiter bauen, also es ist jetzt nicht so, dass man, also wenn das hier so, sagen wir mal so, das da ist hier so, hier ist Weltraum, okay, hier ist Weltraum, so, und hier ist, hier ist noch so, nicht Weltraum, okay, so ganz simpel gemalt, so, man möchte jetzt, man möchte jetzt einen Fahrstuhl bauen, ins Weltall, sowas.
Dann kann man den nicht einfach, kann man den nicht einfach so, ups.
Dann kann man den nicht einfach so bauen, und dann irgendwie so eine Fahrstuhlkabine da dran hängen.
Ja, ja, ich weiß, ich weiß, ja.
Flat Earths hassen diesen Trick.
Ähm, also das erste ist, wie bekommst du überhaupt Strom an diese Kabine, dass die fahren kann?
Weil mit normalen Kupferkabeln und sowas kannst du das nicht machen.
Man, man hat sich da überlegt, ob man das nicht mit Lasern macht, dass man quasi einen starken Laser hat, der von dann da unten von, von der Erde dran strahlt.
Mit, mit Strom versorgt.
Das eigentliche Problem ist auch, dass das so, schlicht und ergreifend, nicht stabil genug ist.
Ja, deswegen müsste man das, theoretisch, ähm, macht man das jetzt gescheit?
Deswegen, Alter, ich will, kann man nicht einfach einen fucking Dreieck in die richtige Richtung malen?
Also, ja, gut, was auch immer.
Deswegen müsste man das ungefähr so bauen.
Äh, Schwachsinn, das ist falschrum.
Ich will das, äh, warum kann man das denn drehen?
Kann man das, kann man, ey, Paint!
Wie drehe ich denn was in Paint?
Hat irgendjemand eine Ahnung, wie ich das, wie ich das drehe in Paint?
Drehen.
Wie dreht man was in Paint?
Wie ist das?
Man muss doch in Paint was drehen können, Mann.
Rotate.
Ha.
Man müsste das so bauen.
Man, man müsste das so bauen, im Endeffekt.
Was meinst du, oben ist ein Punkt?
Ey, hier kann man nicht.
Hier kann man nicht drehen.
Ja.
Man müsste das so bauen.
Und das müsste, also ich, äh, ich kann euch das jetzt aus dem Kopf nicht sagen, wie, wie das, ich hab das nie ausgerechnet, geschweige denn, dass ich das ausrechnen könnte.
Man müsste, man müsste das im Endeffekt, ich, ich mach das immer noch falsch, Mann.
Rotate.
So.
Man müsste das so bauen, im Endeffekt.
Ja.
Das muss immer stabiler werden, mit der Höhe.
Und.
Ähm.
Es braucht quasi noch.
Es muss noch eine ganze Ecke weiter gehen.
Als das, wo man eigentlich hinfahren will.
So.
Und das ist einfach materialtechnisch.
Und.
Ja, bautechnisch ist das aktuell einfach nicht möglich, sowas zu bauen.
Und das ist halt so, so ein Ding, theoretisch möglich, praktisch hat man halt keine Antworten drauf gefunden, sowas wirklich bauen zu können.
Ja, aber gucken wir weiter.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Deutsche Autolahne.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Der hat das Scam halt durchgespielt, ne?
Also da muss man sagen, da sind die Amis ja richtig krass drauf.
Wenn du bei den Amis zum zweiten Mal für solche Sachen verurteilt wirst, dann geht's immer ab.
So nach dem Motto, ja, erstes Mal kommst du nur zwei Jahre in den Knast, das nächste Mal kommst du 50 Jahre in den Knast.
Ach!
Sieh, das habe ich schon wieder ausvergessen.
Ah, verkackt.
Verkackt.
Boah!
Da, die Amis sind da hart drauf.
Also eins muss man eben sagen, Fireship schneidet die Videos immer gut zusammen.
Oder packt auch immer recht viel Content in kurze Videos.
Ich guck's mal.
Ich guck das immer gerne.
Naja, es war die erste große Darknet-Plattform für illegale Sachen.
Ich finde schon, dass es ein Tech-Leader ist.
Vielleicht jetzt nicht sonderlich, ja, kein, sonderlich glänzendes Beispiel, ja?
Strahlendes Beispiel in guter Sache, aber schon.
Kann man schon so sagen, denke ich.
Top-Gehalt als Fluglotse.
Boah, das ist Stress, glaube ich.
USB-Kill.
Was ist USB-Kill?
Auf Shithub.
Ist das?
Vor 8 Jahren.
Okay.
USB-Kill ist ein Anti-Forensik-Kill-Switch, that waits for a change on your USB-Ports
and then immediately shuts down your computer.
Okay.
Also sobald, sobald einer den Stick rauszieht.
Aber wieso?
Hä?
Ach nee!
Moment!
Sobald, sobald irgendwas sich ändert an USB, wird das ausgelöst.
Eigentlich gar keine schlechte Idee, oder?
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Oh, nee.
Kann ich hier stehen lassen?
Ich finde das Ding nicht gut.
Also, wenn man Angst haben muss, dass demnächst ein die Polizei ins Gefängnis steckt, dann
ich kannż vielleicht, was, was man benutzen sollte.
So.
Ich hab Hunger.
Wie viel Uhr war's gestern, Leute?
War's gestern erst 12h oder schon 14 Uhr?
Gestern war's erst 12h.
Ne?
Da sollte ich eigentlich noch gar nicht so viel Hunger haben.
Auf der anderen Seite, ich bin heute zur normalen Zeit aufgestanden?
was heißt gleiche zeit wach also auch gleiche zeit hunger ich habe geplant dass wir mit da
noch ein bisschen weiter progress stets machen deswegen gehe ich jetzt glaube ich oft was essen
und kommen nachher wieder an kann sich hundertprozentig versprechen ihr wisst manchmal
verlässt mich so die motivation nachmittags noch mal zu streamen was wir schalten das jetzt mal
aus warum sollen wir die vm immer im standby lassen wenn die eigentlich gar nicht an sein
muss und windows m können wir auch mal ausschalten wobei das brauche ich viel ram aber progress
können wir ausschalten progress progress brauchen wir nicht mehr auf ok warum überzeugt mich change
my mind chat in den null versus power of okay ein argument dafür wäre es von
funktioniert auch unter legacy system wie solaris aber auf denen bin ich nicht unterwegs change
my mind chat in den null versus power of die coolen leute die verwenden eh weder in den null
noch power of ich zeige euch mal was die coolen leute verwenden die coolen leute nein nein nein
nicht shutdown die coolen leute machen das anders die richtig nicen hackermans fahren ihr linux so
runter passt mal auf ich zeige euch jetzt mal was nur richtig krasse linux command line
bros machen das so auf vm ohne pepo hintergrund kann ich nicht arbeiten exzellent okay passt
mal auf die richtig die richtig krassen bros die machen echo nach rock sus rq trigger ok so machen
es die richtig krassen hackermans bämm rechner aus hand hoch im chat wer das kannte und daumen hoch
im chat wer es kannte daumen runter im chat wer es nicht kannte oder ihr könnt doch einfach
schreiben kannte ich kannte ich nicht wer kennt das und wer kann das nicht 2 kann er das nicht
was ich zeige euch erst mal den den hintergrund rock sus rq trigger ja also man kann da folgende
sachen rein peipen man kann da folgende sachen rein peipen man kann da folgende sachen rein peipen
kann man da folgende sachen rein peipen wasser und o is will shut your system off that is quasi power
AWESS 3 Housekick
aus am netzteil wenn man so will dass es nicht power auf drücken und runter fahren dass es
hektisch power auf sige mailboard schalte netzteil aus system ist das das sorgt auch dafür dass
signale ist das das sorgt auch dafür dass nichts was irgendwie im cash ist noch auf die guck jetzt
ells nur seltenzing die jetzt unsere die inmatch banton
zum Beispiel meine Bash-History kaputt.
Dadurch.
Meine
ZSH-History ist dadurch kaputt.
Doch, doch.
Das ist unsicher. Das sollte man nicht verwenden
normalerweise.
Das kann man aber verwenden,
wenn man beispielsweise Remote
einen Server hat.
Wobei ich das dann eher mit B verwenden würde.
B ist glaube ich
Reboot.
B ist Reboot.
Ja.
Will immediately reboot the system
without syncing or unplugging
your disk. Das ist zum Beispiel gut,
wenn das File-System-Read-Only ist
oder irgendwas so kaputt ist,
dass du nur noch per SSH draufkommst,
aber das System an sich
in einem Zustand ist, dass es nicht mehr funktioniert.
Du kannst nicht normal rebooten,
du kannst nicht Power-Off machen, du kannst nichts machen.
Du kommst vielleicht auch Remote gerade nicht an eine
Management-Konsole dran, dann sagst du
Echo B, Proxys
ist ein Q-Träger und das Ding rebootet.
Ja, guck.
Ich hab jetzt
nichts Wichtiges offen, meine Bash-History
findet das nicht so geil.
Wobei die Meldung schlimmer aussieht, als es ist.
Du musst natürlich logischerweise root dafür
sein.
Echo B nach
Proxys
Q-Träger
und jetzt
Vmware hat auch erkannt, dass da was nicht stimmt.
Reboot.
Das sollte man normalerweise
nicht machen, wenn es andere Möglichkeiten gibt.
Das sage ich euch gleich.
Aber es ist gut zu wissen, dass es das gibt.
Falls man wirklich mal ein System hat,
was komplett im Arsch ist und hängt.
Es gibt hier noch
viel mehr, ja.
Aber B und O sind die...
EO ist übrigens glaube ich für
Off. Link zur Seite.
Such nach Sus-AQ-Träger.
Aber komm, weil ihr es seid.
Schätke.
Ja, so sieht's aus. Wieder was gelernt.
Aber wie gesagt, ich würde es euch nicht...
Ich würde es euch nicht empfehlen.
Aber...
Ich würde es euch nicht empfehlen.
Ich würde es euch nicht empfehlen.
Ich würde es euch nicht empfehlen.
Ich würde es euch nicht empfehlen.
Ich würde es euch nicht empfehlen.
Ich würde es euch nicht empfehlen.
Ich würde es euch nicht empfehlen.
Es sei denn, es geht nicht anders.
Aber wenn ihr beispielsweise irgendeinen Cloud-Server habt,
der komplett im Arsch ist und hängt,
aber nur noch per SSH draufkommt,
dann ist das ganz gut zum Abschießen.
Das ist...
Die nächste Stufe wäre wirklich bloß noch
Netzteil ausschalten oder Reset-Knopf drücken.
Es passiert auch in der Regel nichts.
Wenn du allerdings viele Sachen laufen hast,
unter anderem auch, ähm...
die viel Disk-IO machen
und noch, äh...
im...
im...
im...
im...
im...
im...
im...
im...
im...
im...
im...
im...
im...
im...
dann kannst du dazu führen,
dass im Zweifelsfall deine Datenbank kaputt ist danach.
Oder zumindest, ja, kaputt.
Richtig kaputt wird die nicht sein,
aber die wird ein bisschen meckern,
dass sie irgendwelche, äh...
not finished Sachen oder so hat.
Ja.
Wenn das System einfach nur rumeidelt
oder kaputt ist,
dann kann man das in der Regel safe machen, richtig.
Das ist aber echt nur was für Notfälle.
So, Chatgear.
Ich würde sagen,
ich gehe jetzt was essen
und dann sehen wir uns
vielleicht in der nächsten Folge.
Und vielleicht, wenn das nach Plan läuft, heute Abend bzw. Nachmittag wieder.
Bis dann, macht's gut, CU.
