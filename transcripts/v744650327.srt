1
00:05:59,730 --> 00:06:15,670
Jetzt stell dir vor, du hast, was, Moment, das muss ich mal, was, und jetzt stell dir vor, du hast den BWL-Unterricht nicht, weil keine Lehrer da sind, musst es im November zur Abschlussprüfung, aber wer, ja, das ist, was in der Abschlussprüfung an BWL drankommt, ist easy, easy as fuck hier, so ist das.

2
00:06:15,670 --> 00:06:45,650
Easy as fuck, easy, easy as fuck.

3
00:06:45,670 --> 00:06:56,650
Das ist irgendein Erotik-Unternehmen in Frankfurt, die haben, ähm, so Webcam-Porn-Seiten und, und, äh, ähm, Hotelverm, äh, Zimmervermietung und, äh, frag mich nicht, was die alles haben.

4
00:06:57,750 --> 00:07:06,470
Übelster Kackladen, also, also, geil, also, der echte Proxy, geil mag das sein, allerdings nicht dort zu arbeiten.

5
00:07:06,930 --> 00:07:10,430
Also, was die erzählt hat in der Berufsschule, muss das wirklich der allergrößte Mistladen sein.

6
00:07:12,130 --> 00:07:12,490
Ja.

7
00:07:15,270 --> 00:07:16,930
Ne, ne, das muss übelst ausbrechen.

8
00:07:17,170 --> 00:07:19,710
Das muss ein Ausbeutungsladen sein, wo keiner gerne arbeitet.

9
00:07:21,210 --> 00:07:36,410
Also, das, äh, geht da auf gar keinen Fall hin, ich hab da nur Schlechtes gehört, also, ich kenn einen, der hat da eine Praktikierung gemacht, der fand's grausam, ich kenn einen aus der Berufsschule, der fand's grausam, und mein jetziger Azubi, oder unser jetziger Azubi, der hat auch zwei Leute in der Berufsschule, die dort arbeiten, die finden's auch übelst kacke.

10
00:07:36,770 --> 00:07:38,230
Also, kann einfach nur Müll sein, ja.

11
00:07:39,750 --> 00:07:40,770
Ist das nicht voll spannend?

12
00:07:40,870 --> 00:07:46,230
Ich glaube nicht, dass du für solche Sachen dort zuständig bist, was du dir so vorstellst, sondern für ganz normales IT-Zeug nur...

13
00:07:47,170 --> 00:07:49,550
Dass dir halt die Arbeit, dass sich die Arbeit abfuckt.

14
00:07:50,130 --> 00:07:51,910
Und die Leute, und dein Chef, und alles.

15
00:07:52,450 --> 00:07:54,390
Also, was man da so hört, ist grausam.

16
00:07:54,470 --> 00:07:56,130
Also, hier würde ich auf gar keinen Fall hingehen.

17
00:07:57,090 --> 00:07:57,790
Wir können ja mal suchen.

18
00:07:58,050 --> 00:07:58,730
Wir können ja mal gucken.

19
00:07:59,030 --> 00:08:00,370
Wir können ja mal gucken, was die sagen.

20
00:08:01,350 --> 00:08:02,590
Wir können ja mal gucken, was die sagen.

21
00:08:02,690 --> 00:08:03,750
Also, was schreiben die denn?

22
00:08:04,070 --> 00:08:05,350
Wie gesagt, geht da nicht hin.

23
00:08:06,090 --> 00:08:09,150
Ähm, ich hab nur Schlechtes gehört über den Laden bisher.

24
00:08:09,730 --> 00:08:10,710
Ausnahmslos nur Schlechtes.

25
00:08:11,010 --> 00:08:12,370
Nichts, nirgends wo war's Gutes.

26
00:08:13,250 --> 00:08:16,900
Äh, wie steht da nicht der Name?

27
00:08:17,260 --> 00:08:18,460
Der Name von denen dabei?

28
00:08:18,480 --> 00:08:20,640
Was schreiben die denn hier?

29
00:08:20,800 --> 00:08:23,220
Für unseren Standort suchen wir für 2020 Auszubildende.

30
00:08:23,660 --> 00:08:23,920
Naja.

31
00:08:24,620 --> 00:08:25,720
Als Full-Surface.

32
00:08:25,920 --> 00:08:26,800
Full-Surface.

33
00:08:27,080 --> 00:08:30,440
Okay, das ist bei einem Erotik-Laden jetzt die Frage, was die darunter verstehen, ja?

34
00:08:30,820 --> 00:08:32,360
Au, der Tainzer geht wieder ab hier.

35
00:08:32,580 --> 00:08:35,340
Fünf Stufe-1-Abos hat er verschenkt.

36
00:08:35,860 --> 00:08:38,140
Der Chat, der Kopf explodiert, Leute, im Chat.

37
00:08:38,800 --> 00:08:40,860
Ähm, wer hat denn, wer hat denn was gekriegt?

38
00:08:40,960 --> 00:08:45,460
Prali99, Gpat1HD, Solea von Astora.

39
00:08:45,460 --> 00:08:46,720
Das hört sich irgendwie so...

40
00:08:46,720 --> 00:08:47,900
Der Name, ich weiß nicht...

41
00:08:47,900 --> 00:08:48,400
So...

42
00:08:48,400 --> 00:08:53,940
Solea von Astora, das hört sich irgendwie so griechisch, griechisch-philosophisch-Big-Brain-mäßig an.

43
00:08:54,200 --> 00:08:56,080
Ja, also, exzellent hört sich das an.

44
00:08:56,520 --> 00:08:57,340
Aber da bist du ja hier, richtig.

45
00:08:57,720 --> 00:09:00,540
Der Crazy, Emoikal und Foxditzen.

46
00:09:03,740 --> 00:09:04,040
Nice.

47
00:09:04,840 --> 00:09:05,500
Dankeschön für die Subs.

48
00:09:06,720 --> 00:09:07,740
Also, was verstehen die da drunter?

49
00:09:08,260 --> 00:09:11,520
Als Full-Surface-Werbe- und Medienagentur mit Stahl...

50
00:09:11,520 --> 00:09:12,920
Full-Surface, okay, das...

51
00:09:12,920 --> 00:09:15,080
Wenn man weiß, was der Laden macht, dann...

52
00:09:15,080 --> 00:09:18,440
Stellst du irgendwie Full-Surface irgendwie ein bisschen anders dar.

53
00:09:18,440 --> 00:09:18,800
Ja.

54
00:09:19,900 --> 00:09:20,380
Ähm.

55
00:09:21,000 --> 00:09:21,860
Ich muss halt kurz schnell schauen.

56
00:09:21,920 --> 00:09:23,240
Oh, der Scam-Trend ist am Start.

57
00:09:33,860 --> 00:09:34,580
Oh, Moment mal.

58
00:09:34,780 --> 00:09:36,580
Leute, ich hab den Chat aus Versehen zugemacht.

59
00:09:36,680 --> 00:09:37,280
Das geht ja nett.

60
00:09:43,440 --> 00:09:44,460
Irgendwas übersehen?

61
00:09:44,760 --> 00:09:46,960
Nee, der Michael50Billioner hat abonniert, das hab ich schon gesehen.

62
00:09:47,400 --> 00:09:49,280
Vollkorn-Mischbrot hat auch sieben Monate abonniert.

63
00:09:49,360 --> 00:09:50,000
Hab ich jetzt nicht...

64
00:09:50,000 --> 00:09:50,980
Hab ich, weiß ich nicht, ob ich schon gesagt hab.

65
00:09:51,020 --> 00:09:52,000
Dankeschön für das, für den Sub.

66
00:09:54,180 --> 00:09:54,760
So, also.

67
00:09:55,380 --> 00:09:56,460
Ähm, da bla bla bla.

68
00:09:56,540 --> 00:09:57,680
Im Bereich Print- und Online-Medien.

69
00:09:57,740 --> 00:09:59,320
Wie gesagt, das ist irgendwie so ein Erotik-Laden.

70
00:09:59,820 --> 00:10:02,280
Wir entwickeln individuell bla bla bla bla bla bla bla bla.

71
00:10:05,720 --> 00:10:07,360
Okay, da steht jetzt nichts Großartiges.

72
00:10:07,480 --> 00:10:12,360
Ich weiß halt, dass der Laden, dass ich von keinem was Gutes bisher gehört habe.

73
00:10:12,880 --> 00:10:15,700
Und dass das irgendein komischer Frankfurter Erotik-Laden ist.

74
00:10:16,240 --> 00:10:17,520
Äh, alles, alles Müll.

75
00:10:17,760 --> 00:10:19,280
So, Moment, jetzt hab ich ja aus Versehen zugemacht.

76
00:10:19,280 --> 00:10:21,380
Was haben, gibt's denn ein paar gescheite Läden, die was haben?

77
00:10:21,680 --> 00:10:22,620
Hab ich noch nie gehört.

78
00:10:22,720 --> 00:10:23,440
Hab ich noch nie gehört.

79
00:10:23,540 --> 00:10:24,340
Hab ich auch noch nicht gehört.

80
00:10:25,060 --> 00:10:26,880
Äh, die ist irgendwo bei uns um die Ecke.

81
00:10:29,670 --> 00:10:31,290
Ähm, keine Ahnung, ob das was taugt.

82
00:10:32,810 --> 00:10:34,890
Wie wär's, wie wär's mal nach Entfernung zu sortieren?

83
00:10:35,250 --> 00:10:35,530
Null.

84
00:10:37,310 --> 00:10:37,630
Provadis.

85
00:10:37,690 --> 00:10:38,670
Von denen hab ich schon mal was gehört.

86
00:10:38,770 --> 00:10:38,830
Keine Ahnung.

87
00:10:38,830 --> 00:10:38,850
Keine Ahnung.

88
00:10:38,850 --> 00:10:39,710
Keine Ahnung, ob die was taugen.

89
00:10:40,150 --> 00:10:40,850
Oh, bei der VFG.

90
00:10:41,770 --> 00:10:42,210
Bei der VFG.

91
00:10:42,210 --> 00:10:43,010
Oh, exzellent.

92
00:10:43,550 --> 00:10:47,070
Das sind die, die, die, äh, U-Bahn und Straßenbahn in Frankfurt macht.

93
00:10:49,950 --> 00:10:52,850
Gibt's da nicht so, äh, ja, ja, wie heißt das?

94
00:10:53,470 --> 00:10:54,670
Kununu oder so, ne?

95
00:10:56,410 --> 00:10:56,810
RTO.

96
00:11:00,980 --> 00:11:02,260
Okay, da gibt's, da gibt's ein paar.

97
00:11:16,080 --> 00:11:17,900
Die scheinen da richtig gut zu sein.

98
00:11:22,790 --> 00:11:24,350
Weiterempfehlung, 28%.

99
00:11:24,350 --> 00:11:28,090
Oh, äh, okay, okay, bla bla bla.

100
00:11:28,090 --> 00:11:29,090
Ah, das...

101
00:11:29,090 --> 00:11:31,910
Ah, die sind ja gar nicht so...

102
00:11:31,910 --> 00:11:32,390
Ah, hier.

103
00:11:34,550 --> 00:11:36,530
Der hat, der war hier wenigstens wirklich am Start.

104
00:11:37,330 --> 00:11:37,690
Flexibel.

105
00:11:37,990 --> 00:11:39,150
Schlecht, Respekt, weniger, schlechter.

106
00:11:39,410 --> 00:11:43,350
Also, das deckt sich exakt mit dem, was ich von den Leuten gehört hab, die dort, die dort, die dort arbeiten.

107
00:11:45,810 --> 00:11:47,350
Äh, mach bitte Position aus, super.

108
00:11:47,430 --> 00:11:48,050
Wo geht denn das?

109
00:11:49,270 --> 00:11:49,450
Hier?

110
00:11:49,650 --> 00:11:49,910
Okay.

111
00:11:52,170 --> 00:11:54,230
Ja, die meisten, der findet's übel schlecht.

112
00:11:56,690 --> 00:11:57,610
Aber, ich sag mal, es wäre schlecht.

113
00:11:57,610 --> 00:12:00,410
Also, wie gesagt, ich hab nichts Gutes bisher davon gehört, ja?

114
00:12:00,890 --> 00:12:04,510
Alle, allen, mit denen ich Kontakt hatte, die da gearbeitet haben, fanden's richtig mies.

115
00:12:05,350 --> 00:12:09,670
Also, wenn das schon das einzige Gute ist, Gehalt kommt pünktlich an.

116
00:12:13,500 --> 00:12:15,500
Das ist halt wirklich das Mindeste, ne?

117
00:12:17,520 --> 00:12:19,620
Schlecht finde ich, kann ich gar nicht alles aufzählen.

118
00:12:19,720 --> 00:12:21,340
Am besten alles ändern, was geht, okay.

119
00:12:22,160 --> 00:12:23,080
Die Arbeitsatmosphäre ist...

120
00:12:23,080 --> 00:12:26,480
Ja, das haben auch alle gesagt, die ich, äh, kenne, die dort gearbeitet haben.

121
00:12:30,120 --> 00:12:30,840
Inoffiziell zu spielen.

122
00:12:30,840 --> 00:12:32,220
Ja, das ist, das geht...

123
00:12:32,220 --> 00:12:34,180
Das ist auch teilweise schlimm in manchen Läden.

124
00:12:34,560 --> 00:12:41,480
So dieses, offiziell ist es so und so, weil wir uns nicht angesetzliche Vorgaben halten, aber in dir, inoffiziell wird erwartet, dass bla bla bla.

125
00:12:42,520 --> 00:12:42,700
Äh.

126
00:12:43,620 --> 00:12:46,240
Wir sind ja nicht in Japan, wo du nicht vom Chef aus dem Büro gehen darfst.

127
00:12:46,360 --> 00:12:48,260
Wobei ich keine Ahnung hab, ob das wirklich so ist, ne?

128
00:12:48,620 --> 00:12:50,200
Ich sag, ich, das...

129
00:12:50,200 --> 00:12:52,040
Wird immer so gesagt, keine Ahnung, ob das stimmt.

130
00:12:53,380 --> 00:12:55,740
Nicht alles ist schlecht, dafür aber sehr vieles.

131
00:13:03,300 --> 00:13:08,620
Was ein Punkt wäre, zum Beispiel, dass man sich einmal im Mund über ein Ticket an unseren Vorgesetzten wenden kann und...

132
00:13:09,100 --> 00:13:10,960
Diesem dann die aktuellen Probleme melden kann.

133
00:13:11,260 --> 00:13:11,860
Moment, Moment.

134
00:13:12,060 --> 00:13:17,980
Du kannst, du musst ein Ticket bei deinem Chef aufmachen, dass du mit ihm über aktuelle Probleme reden darfst?

135
00:13:18,360 --> 00:13:19,180
Das ist gut?

136
00:13:19,180 --> 00:13:19,260
Was?

137
00:13:20,140 --> 00:13:22,300
Ich weiß es nicht.

138
00:13:22,800 --> 00:13:22,820
Ich weiß es nicht.

139
00:13:22,980 --> 00:13:30,380
Eigentlich sollte man bei seinen, bei Problemen, äh, wenn der jetzt grad im Haus ist oder nicht grad irgendwie jederzeit zu seinem Chef gehen können.

140
00:13:30,460 --> 00:13:31,920
Was ist das für ein Pluspunkt, Alter?

141
00:13:36,380 --> 00:13:38,200
Hier sind fast alle, mach keine Lust, bla bla.

142
00:13:38,380 --> 00:13:38,640
Okay.

143
00:13:39,480 --> 00:13:40,280
Bla bla bla bla.

144
00:13:40,640 --> 00:13:40,980
Bla bla bla.

145
00:13:40,980 --> 00:13:41,040
Bla bla bla.

146
00:13:41,040 --> 00:13:41,060
Bla bla bla.

147
00:13:41,060 --> 00:13:41,080
Bla bla bla.

148
00:13:41,080 --> 00:13:41,100
Bla bla bla.

149
00:13:41,100 --> 00:13:41,120
Bla bla bla.

150
00:13:41,120 --> 00:13:41,140
Bla bla bla.

151
00:13:41,140 --> 00:13:41,180
Bla bla bla.

152
00:13:41,180 --> 00:13:41,240
Bla bla bla.

153
00:13:41,240 --> 00:13:41,300
Bla bla bla.

154
00:13:41,300 --> 00:13:41,320
Bla bla bla.

155
00:13:41,320 --> 00:13:41,340
Bla bla bla.

156
00:13:41,340 --> 00:13:41,380
Bla bla bla.

157
00:13:43,200 --> 00:13:43,260
Bla bla bla.

158
00:13:43,260 --> 00:13:43,320
Bla bla bla.

159
00:13:43,320 --> 00:13:43,340
Bla bla bla.

160
00:13:43,340 --> 00:13:43,360
Bla bla bla.

161
00:13:43,360 --> 00:13:43,380
Bla bla bla.

162
00:13:43,380 --> 00:13:43,400
Bla bla bla.

163
00:13:44,600 --> 00:13:47,800
Github-Issue aufmachen, genau, erstklassig Arbeitgeber zu sein.

164
00:13:48,080 --> 00:13:49,580
Also, wie gesagt, geht da nicht hin.

165
00:13:50,000 --> 00:13:53,480
Äh, VFG ist wahrscheinlich gar nicht, äh, VGF ist wahrscheinlich gar nicht so übel.

166
00:13:54,040 --> 00:13:57,480
Die haben, die machen hier aber auch gar keine, die fackeln aber auch nicht lange hier, ne?

167
00:13:58,300 --> 00:13:59,660
Die fackeln auch nicht lange.

168
00:14:00,320 --> 00:14:02,400
Gewünschte Vorqualifikation, Office.

169
00:14:03,440 --> 00:14:05,020
Okay, erweiterte Fremdsprachenkenntnisse.

170
00:14:05,780 --> 00:14:06,180
Kein Problem.

171
00:14:06,560 --> 00:14:08,540
Ich hab mir die Rede vom Oettinger angehört.

172
00:14:08,660 --> 00:14:11,020
Ich kann jetzt sagen, we are all sitting in one boat.

173
00:14:11,580 --> 00:14:12,080
Das reicht.

174
00:14:12,720 --> 00:14:13,180
Genug Folgen.

175
00:14:13,280 --> 00:14:14,400
Genug Fremdsprachenkenntnisse.

176
00:14:15,220 --> 00:14:16,000
Oh, die Bahn.

177
00:14:16,480 --> 00:14:17,820
Die Bahn sucht auch Leute.

178
00:14:19,000 --> 00:14:20,300
Die haben mich sogar mal eingeladen.

179
00:14:21,360 --> 00:14:23,160
Aber ich hab mich nie wieder gemeldet.

180
00:14:27,670 --> 00:14:31,370
Also, nicht, äh, nicht, nicht, nicht, nicht zur Ausbildung eingeladen, ne?

181
00:14:31,470 --> 00:14:32,670
Also, so eingeladen.

182
00:14:33,230 --> 00:14:34,250
Und ich bin da nie hin.

183
00:14:34,790 --> 00:14:35,630
Hab mich nie gemeldet.

184
00:14:36,050 --> 00:14:37,250
Okay, Stadt Frankfurt am Main.

185
00:14:37,490 --> 00:14:37,650
Nope.

186
00:14:40,630 --> 00:14:40,930
Okay.

187
00:14:42,650 --> 00:14:43,910
Die Messe sucht auch Leute.

188
00:14:44,130 --> 00:14:45,690
Zumindest anscheinend gibt's da wirklich genug.

189
00:14:45,690 --> 00:14:48,950
Ich wollte mir jetzt gar nicht die Fachinformatikerausbildung angucken, so wirklich.

190
00:14:49,370 --> 00:14:52,970
Ich weiß nicht, wie ich da, wie ich, wie ich da, ah, ah, ah, C++, ah, ah, C, Moment.

191
00:14:53,370 --> 00:14:57,170
Ich guck mir lieber die Fachinformatikerausbildung an, bevor ich mir irgendwas angucke, was mit C++ zu tun hat.

192
00:14:57,410 --> 00:14:58,870
Das müssen wir uns jetzt gleich schon oft genug angucken.

193
00:14:59,650 --> 00:15:01,770
Ähm, ihr seht's ja oben rechts wieder, ne?

194
00:15:02,810 --> 00:15:03,970
Ihr seht's ja hier, da.

195
00:15:06,330 --> 00:15:07,930
Ah, ja, ja, Display ist am Start.

196
00:15:09,810 --> 00:15:11,510
Wegen dem, wegen dem DB-Video.

197
00:15:11,930 --> 00:15:15,770
Äh, wahrscheinlich wegen dem Video und wahrscheinlich, weil ich immer so übelst rumflame auf Twitter.

198
00:15:17,070 --> 00:15:24,590
Ähm, da hat mich einer eingeladen, ob ich nicht mal meine Kritikpunkte da irgendwie, da irgendwie, ob ich da mal irgendwie dran bitte.

199
00:15:24,650 --> 00:15:25,730
Ach, keine Ahnung, frag mich nicht.

200
00:15:26,590 --> 00:15:32,270
Die haben so einen Turm, so ein Innovationsgebäude irgendwie in Frankfurt und so.

201
00:15:32,390 --> 00:15:32,510
Nee.

202
00:15:33,570 --> 00:15:35,010
C++ hat einen Options-Type.

203
00:15:35,110 --> 00:15:40,510
Ja, ich hab mich notgedrungen die letzten Tage ein bisschen, ein bisschen mehr noch mit C++ beschäftigt.

204
00:15:40,510 --> 00:15:44,830
Und C++ hat tatsächlich relativ vieles, wo man gar nicht denkt, dass es das hat.

205
00:15:45,210 --> 00:15:46,970
Aber es ist übelst, also es ist nicht.

206
00:15:47,070 --> 00:15:49,510
Übelst, es ist mega beschissen integriert zum größten Teil.

207
00:15:50,850 --> 00:15:53,270
Und, also richtig beschissen zum größten Teil.

208
00:15:54,210 --> 00:15:55,030
Ich krieg's Anfälle.

209
00:15:55,570 --> 00:16:03,130
Was ich auch, das ist auch so ein Ding, was ich C++ nicht verstehe, ist, die haben, für vieles haben die, äh, äh, Typensträhne.

210
00:16:03,290 --> 00:16:07,850
Ja, zum Beispiel, dass man nicht mehr mit irgendwelchen RAW-Pointern rumhantieren muss, haben die sowas hier drin.

211
00:16:07,850 --> 00:16:15,270
Wär ja wunderbar, aber dann haben die, anstatt ordentlicher Constructor für diese Klassen, haben die dann sowas drin.

212
00:16:16,010 --> 00:16:16,390
Hä?

213
00:16:17,070 --> 00:16:29,050
Warum machen wir, und, und, allein schon, wer, wer, der noch irgendwie bei Verstand ist, ja, erkennt denn jetzt auf den ersten Blick, aus dieser Typdefinition, was man da für Argumente reinstecken darf, oder?

214
00:16:31,960 --> 00:16:33,060
Was, was ist das hier?

215
00:16:33,100 --> 00:16:34,560
Ich mein, ich erkenn's mittlerweile, ja.

216
00:16:35,000 --> 00:16:40,200
Das hier ist, das ist Template-Parameter 1, das ist Template-Parameter 2, und davon kannst du so viel, wie du willst, angeben.

217
00:16:40,560 --> 00:16:42,580
Aber kann man den Scheiß nicht mal ordentlich benennen?

218
00:16:43,120 --> 00:16:45,440
Ich mein, so schwer kann das doch nicht sein.

219
00:16:46,560 --> 00:16:49,260
Den Kram mal irgendwie den Namen zu geben, wo man was mit anfangen kann.

220
00:16:49,260 --> 00:16:53,000
Aber es ist halt, es ist halt echt, echt grausam.

221
00:16:54,000 --> 00:16:56,640
Also, ich werd euch mal kurz sagen, was wir heute vorhaben.

222
00:16:56,900 --> 00:17:00,160
Ich weiß nicht genau, wie weit wir kommen, und ich weiß auch gar nicht, ob's genau, ob's klappt.

223
00:17:00,560 --> 00:17:09,260
Ich hab im Vorfeld, also, auch wenn ich jetzt ein bisschen ahnungslos tu, äh, dem Entertainment-Faktor, äh, zuliebe, ja, ich hab mir das im Vorfeld schon ein bisschen angeguckt.

224
00:17:10,080 --> 00:17:11,220
Wieso ist es erst 13.30 Uhr?

225
00:17:13,340 --> 00:17:15,940
Du meinst auf, ist es da echt nur 13.30 Uhr erst?

226
00:17:16,300 --> 00:17:18,240
Ah, weil die Zeitzone nicht stimmt.

227
00:17:18,240 --> 00:17:20,340
Die Zeitzone stimmt nicht.

228
00:17:21,620 --> 00:17:23,720
Wahrscheinlich hab ich die falsche Zeitzone angegeben.

229
00:17:24,820 --> 00:17:28,240
In meinem, ajaja, NTP-Gedöns.

230
00:17:29,820 --> 00:17:31,240
Wahrscheinlich ist es die falsche Zeitzone.

231
00:17:31,800 --> 00:17:34,260
Kann man gleich mal gucken. Ich denk, ich denk mal, es ist die falsche Zeitzone.

232
00:17:34,920 --> 00:17:35,020
Ja.

233
00:17:36,040 --> 00:17:39,390
Äh, NTP.

234
00:17:42,780 --> 00:17:44,820
Ist das die, das ist nicht die richtige Zeitzone, oder?

235
00:17:46,180 --> 00:17:48,580
CET-1, CST-2?

236
00:17:48,580 --> 00:17:48,680
CET-2?

237
00:17:50,200 --> 00:17:51,780
Das ist, das ist nicht die richtige, oder?

238
00:17:51,780 --> 00:17:52,800
Was haben wir denn jetzt gerade?

239
00:17:53,460 --> 00:18:04,260
Wir haben Plus, wir sind, äh, wir sind, ähm, CET-Plus-1 und im Sommer Plus-2, oder wie, ne, wie sind wir?

240
00:18:05,480 --> 00:18:09,180
Sommer, Summertime ist Plus-2 und Winterzeit ist Plus-1, oder?

241
00:18:11,040 --> 00:18:12,620
Gut. Upload.

242
00:18:13,160 --> 00:18:14,100
Gucken wir mal, ob es jetzt stimmt.

243
00:18:14,680 --> 00:18:15,540
Machen wir das gleich mal richtig.

244
00:18:15,980 --> 00:18:19,000
Nicht, dass uns, nicht, dass die Uhrzeit jetzt irgendwie uns was bringen wird, ne.

245
00:18:23,490 --> 00:18:24,870
Schauen wir mal, ob das jetzt richtig ist.

246
00:18:24,870 --> 00:18:25,270
Oh.

247
00:18:25,530 --> 00:18:27,570
Ja, huge, massive Upload-Speed.

248
00:18:27,890 --> 00:18:33,750
Zum Glück müssen wir für die meisten Sachen gar nicht direkt uploaden, sondern können vieles runterprogrammieren, ohne dass wir das, äh, uploaden müssen.

249
00:18:33,830 --> 00:18:35,650
Wir müssen bloß ab und zu mal uploaden, zwischendurch, um zu gucken.

250
00:18:37,510 --> 00:18:37,830
Excellent.

251
00:18:38,190 --> 00:18:39,270
Eine IP haben wir gekriegt.

252
00:18:39,390 --> 00:18:39,930
Und, stimmt's?

253
00:18:40,030 --> 00:18:41,150
Ich seh's in der Vorschau nicht.

254
00:18:42,290 --> 00:18:44,450
Äh, okay, NTP hat sich noch nix geholt.

255
00:18:50,010 --> 00:18:52,410
Also, der, der muss erst mal zum NTP sich ne Zeit holen.

256
00:18:56,280 --> 00:18:56,820
Ja, 70.

257
00:18:57,660 --> 00:19:01,420
Wer, BigBrainChat, warum ist das erst der erste, 1970?

258
00:19:01,420 --> 00:19:01,620
70?

259
00:19:04,500 --> 00:19:05,380
Ich weiß, der Chat ist...

260
00:19:05,380 --> 00:19:06,320
BigBrain, der weiß das.

261
00:19:07,340 --> 00:19:08,600
Oder warum war das?

262
00:19:08,840 --> 00:19:09,720
Unix-Time, richtig.

263
00:19:10,460 --> 00:19:14,280
Erst der erste, 1970, ist, äh, geht die Unix-Zeitrechnung los.

264
00:19:14,820 --> 00:19:23,880
Und nachdem sehr viele Netzwerksachen irgendwelche Unix-Forks sind, also auch, auch, ähm, Dings, Windows hat auch sau viel von BSD übernommen.

265
00:19:26,340 --> 00:19:28,380
Deswegen ist das, äh, unter vielen Betriebssystemen so.

266
00:19:28,460 --> 00:19:30,180
Aber jetzt hat er sich per NTP Zeit geholt.

267
00:19:30,580 --> 00:19:33,720
Und jetzt haben wir auch, äh, 13.33.

268
00:19:37,310 --> 00:19:37,670
Ja!

269
00:19:38,230 --> 00:19:38,570
Gut!

270
00:19:38,570 --> 00:19:38,650
Gut!

271
00:19:39,610 --> 00:19:45,240
Hat nicht so ganz funktioniert, würd ich sagen.

272
00:19:46,100 --> 00:19:50,480
Hat nicht so ganz funktioniert.

273
00:19:51,180 --> 00:19:54,280
Ähm, okay, wir ignorieren das mal.

274
00:19:54,840 --> 00:19:55,840
Ich lass das mal hier stehen.

275
00:19:55,980 --> 00:19:56,720
Wir ignorieren das.

276
00:19:57,620 --> 00:19:58,000
Keine Ahnung.

277
00:19:58,680 --> 00:20:02,440
Ich geb mal die Build-Time aus, ob der jetzt auch wirklich alles, alles abgeloadet und gepusht hat.

278
00:20:02,500 --> 00:20:03,840
Nicht, dass der jetzt vielleicht kaputt ist oder so.

279
00:20:04,260 --> 00:20:06,260
Ich, ich mag...

280
00:20:06,260 --> 00:20:07,720
Man weiß ja nicht, ne.

281
00:20:08,940 --> 00:20:10,940
Aber das ist eigentlich falsch, ne.

282
00:20:11,060 --> 00:20:11,580
Minus 1.

283
00:20:13,380 --> 00:20:14,060
Was auch immer.

284
00:20:14,300 --> 00:20:14,660
So.

285
00:20:15,300 --> 00:20:17,300
Das ist eigentlich nicht, was wir heute machen wollen.

286
00:20:17,300 --> 00:20:21,300
Also, die Uhrzeit von diesem Display ist eigentlich erst mal vollkommen egal.

287
00:20:21,300 --> 00:20:24,300
Heute machen wir was, äh, relativ kompliziertes.

288
00:20:24,300 --> 00:20:25,300
Was haben wir für eine Build-Time?

289
00:20:25,300 --> 00:20:26,300
15.84.

290
00:20:26,300 --> 00:20:32,260
Das ist eigentlich recht korrekt.

291
00:20:32,260 --> 00:20:34,260
Aber auf dem Display stimmt's nicht.

292
00:20:34,260 --> 00:20:36,260
Ja gut, das ist ja auch statisch.

293
00:20:36,260 --> 00:20:40,260
Also, ihr werdet vielleicht feststellen, im Vergleich zum letzten Projekt.

294
00:20:40,260 --> 00:20:42,260
Das letzte Projekt war ja, was wir hatten.

295
00:20:42,260 --> 00:20:46,260
Dass, ähm, das Display funktioniert und dass man ein Firmware-Update übers WLAN machen kann.

296
00:20:46,260 --> 00:20:50,300
Das Gerät oben.

297
00:20:50,300 --> 00:20:53,300
15.84, äh, 15.34 hab ich 84 gesagt.

298
00:20:53,300 --> 00:20:58,060
Aber man darf da nicht so genau hinhören, was ich immer erzähle.

299
00:20:58,060 --> 00:21:02,060
So, ähm, im Vergleich zum letzten Projekt, seht ihr, sieht das ein bissl anders aus heute.

300
00:21:02,060 --> 00:21:06,060
Äh, ich hab die, ich hab ein paar Sachen hier oben nach, nach Lips geschoben.

301
00:21:06,060 --> 00:21:09,060
Und es ist kein Arduino-Projekt mehr.

302
00:21:09,060 --> 00:21:13,060
Es ist, äh, ich kauf's in der Playstation 5 wahrscheinlich erst mal nicht, ne.

303
00:21:13,060 --> 00:21:15,060
Hat das Display Touch?

304
00:21:15,060 --> 00:21:16,060
Ne.

305
00:21:16,060 --> 00:21:17,060
Aber es hat zwei Knöpfe.

306
00:21:17,060 --> 00:21:19,060
Es hat links und rechts zwei Knöpfe.

307
00:21:19,060 --> 00:21:23,220
Die kann man verwenden.

308
00:21:23,220 --> 00:21:26,220
Ich kann, ich will jetzt nicht aufstehen und das reinschieben.

309
00:21:26,220 --> 00:21:28,220
Ich zeige euch mal ein Bild davon.

310
00:21:28,220 --> 00:21:32,220
Das hat zwei Knöpfe, die man, äh, programmieren kann, was die machen sollen.

311
00:21:32,220 --> 00:21:33,220
Aber es ist kein Touch.

312
00:21:33,220 --> 00:21:35,220
Das hast du ja auch gemacht, das ist klein.

313
00:21:35,220 --> 00:21:38,220
Das ist ein 1, frag mich, 1,6 Zoll oder irgendwas.

314
00:21:38,220 --> 00:21:40,220
Ne, 1,14 Zoll Display.

315
00:21:40,220 --> 00:21:41,220
Was willst du denn da touchen?

316
00:21:41,220 --> 00:21:49,220
Brauchst du, brauchst du, äh, erst mal, musst du erst mal deinen Finger irgendwie in die Presse stecken, dass er so klein wird, dass du ihn da touchen kannst drauf.

317
00:21:49,220 --> 00:21:51,660
Link?

318
00:21:51,660 --> 00:21:52,660
Äh, hier, hier.

319
00:21:52,660 --> 00:21:53,660
TT Go T-Display heißt das Ding.

320
00:21:54,660 --> 00:22:00,660
Das, was für ein Display da drauf ist, da ist ein IPS ST7789V drauf.

321
00:22:01,660 --> 00:22:02,660
Oder irgendein Stylus benutzen.

322
00:22:02,660 --> 00:22:04,660
Aber Touch ist da drauf nicht so sinnvoll.

323
00:22:04,660 --> 00:22:07,980
Kriegst du da auf Doom zum Laufen?

324
00:22:07,980 --> 00:22:14,350
Ganz ehrlich, keine Ahnung, ob irgendjemand schon versucht hat, Doom auf dem ESP32 zu portieren.

325
00:22:14,350 --> 00:22:15,350
Anscheinend.

326
00:22:16,350 --> 00:22:17,350
Anscheinend.

327
00:22:19,350 --> 00:22:23,350
Geht euch YouTube auch so auf den Sack in letzter Zeit mit diesem Popup?

328
00:22:23,350 --> 00:22:24,350
Das kam nie.

329
00:22:24,350 --> 00:22:25,350
Das kam nie.

330
00:22:25,350 --> 00:22:26,350
Das kommt, seit einer Woche kommt das.

331
00:22:27,350 --> 00:22:29,350
Das ist so nervig.

332
00:22:29,350 --> 00:22:32,350
Ich frag mich, wann die ganzen Popup-Blocker das endlich hinkriegen.

333
00:22:32,350 --> 00:22:33,350
Das muss weg.

334
00:22:33,350 --> 00:22:34,350
Das nervt.

335
00:22:34,350 --> 00:22:37,350
Das ist wirklich extrem, massiv nervig.

336
00:22:37,350 --> 00:22:41,350
YouTube Wide Seam, oh je, nee, das geht ja nicht.

337
00:22:41,350 --> 00:22:43,350
Äh, warte mal, wo stellt man das überhaupt um?

338
00:22:43,350 --> 00:22:44,350
Hier, da.

339
00:22:44,350 --> 00:22:45,350
Dark Seam.

340
00:22:45,350 --> 00:22:46,350
Excellent.

341
00:22:46,350 --> 00:22:54,350
Ähm, ich hab, äh, Lenszeros schreibt, ich hab keine Ahnung vom Programmieren, geschweige denn von dem, was abgeht.

342
00:22:54,350 --> 00:22:56,350
Aber ich höre trotzdem zu, nur wegen Max.

343
00:22:56,350 --> 00:22:58,350
Das ist schön, vielleicht ist ja trotzdem was für dich bei.

344
00:22:58,350 --> 00:23:02,790
Heute, heute ist ein bisschen komplizierter.

345
00:23:02,790 --> 00:23:10,790
Ähm, genau, also anscheinend sind schon Leute auf die Idee gekommen und haben Doom laufen lassen auf nem ESP32.

346
00:23:10,790 --> 00:23:14,790
Also ja, das scheint zu gehen.

347
00:23:14,790 --> 00:23:20,810
Sieht, sieht ein bisschen abenteuerlich aus, aber ja, es scheint zu funktionieren.

348
00:23:20,810 --> 00:23:23,810
Mein Doom läuft ja nun mittlerweile echt überall drauf.

349
00:23:23,810 --> 00:23:24,810
Auf, auf Druckern.

350
00:23:24,810 --> 00:23:28,810
Wahrscheinlich läuft das sogar, wenn ich ein Display anschließen könnte auf meinem Klo.

351
00:23:28,810 --> 00:23:35,400
Ähm, hsjohi, neun Monate.

352
00:23:35,400 --> 00:23:37,400
Dankeschön für den Sub.

353
00:23:37,400 --> 00:23:50,400
Soosmyname sagt, so ein Russe, also du meinst so ein Kekomrit, ähm, hat auch mal alte RAM-DIMMs an nem Arduino angeschlossener Linux mit Bash über ein paar Stunden geboot.

354
00:23:50,400 --> 00:23:57,400
Tja, also, es gibt ja, es gibt ja nen x86-Arduino, wo man Linux drauflaufen lassen kann.

355
00:23:57,400 --> 00:23:58,400
Hast du noch Kontakt mit dem Friseur?

356
00:23:58,400 --> 00:23:59,400
Ja, klar, ab und zu.

357
00:23:59,400 --> 00:24:00,400
Und wenn du jetzt fragst, mit dem Kambum?

358
00:24:00,400 --> 00:24:01,400
Ja, mit dem Kambum auch.

359
00:24:01,400 --> 00:24:04,400
Mit dem war ich vor drei Wochen oder so Sushi futtern in Frankfurt.

360
00:24:04,400 --> 00:24:09,400
So, also, was wir heute machen ist, als erstes muss ich mal sagen, das Projekt sieht ein bisschen anders aus.

361
00:24:09,400 --> 00:24:15,400
Äh, Doom auf dem Schwangerschaftsset, das hab ich noch nicht gesehen, aber ich hab gelesen, dass es das gibt.

362
00:24:15,400 --> 00:24:21,400
Ähm, das Projekt sieht ein bisschen anders aus und zwar, ich hab, ich hab geupdatet.

363
00:24:21,400 --> 00:24:25,400
Erstens ist das Platform IO5.0 jetzt, also das allerneueste, was es gibt.

364
00:24:25,400 --> 00:24:28,400
Und das ist kein normales Arduino-Projekt mehr.

365
00:24:28,400 --> 00:24:29,400
Ja.

366
00:24:29,400 --> 00:24:34,400
Das ist ein, ähm, ich kanns mal zeigen.

367
00:24:34,400 --> 00:24:39,400
Das ist ein, äh, ESP-IDF-Projekt mit Arduino als Modul.

368
00:24:39,400 --> 00:24:43,400
Das hat ein paar Vorteile, zum Beispiel, dass die Tools neuer sind.

369
00:24:43,400 --> 00:24:48,400
Dass man C++17 verwenden kann, ohne dass man sich ein Bein ausreißen muss.

370
00:24:48,400 --> 00:24:50,400
Und auch die eingebauten Libraries sind ein bisschen neuer.

371
00:24:50,400 --> 00:24:53,400
Das ist ganz, das ist ganz praktisch.

372
00:24:53,400 --> 00:24:58,400
Das Schöne an Platform IO ist ja, man kann den ganzen Kram so, so konfigurieren über den, über dieses INI-File.

373
00:24:58,400 --> 00:25:02,400
Warum auch immer es jetzt nicht unbedingt ein INI-File sein musste, weiß ich auch nicht.

374
00:25:02,400 --> 00:25:05,400
Ähm, und dann läuft das auch.

375
00:25:05,400 --> 00:25:06,400
So.

376
00:25:06,400 --> 00:25:07,400
Und ich hab noch was.

377
00:25:07,400 --> 00:25:10,400
Ich hab ein Custom-Bild-Script, was läuft, wenn man, wenn man ein Bild macht.

378
00:25:10,400 --> 00:25:14,400
Und zwar, was das Custom-Bild-Script macht, ist, ich zeig's euch mal.

379
00:25:14,400 --> 00:25:15,400
Moment, wo ist es?

380
00:25:15,400 --> 00:25:16,400
Hier.

381
00:25:16,400 --> 00:25:19,400
Äh, ob man sowas wie imGUI zum Laufen bekommt.

382
00:25:19,400 --> 00:25:21,400
Da weiß ich nicht, was es unten drunter macht.

383
00:25:21,400 --> 00:25:23,400
Kann, kann ich mir durchaus vorstellen.

384
00:25:23,400 --> 00:25:26,400
Es gibt ja ein paar Grafik-Libraries für den ESP32.

385
00:25:26,400 --> 00:25:27,400
Weiß ich.

386
00:25:27,400 --> 00:25:29,400
Also, das ist wahrscheinlich gar nicht so weit weg von.

387
00:25:29,400 --> 00:25:30,400
So.

388
00:25:30,400 --> 00:25:32,400
Das Version-File schreibt nämlich einfach Bild-Number.

389
00:25:32,400 --> 00:25:35,400
Wir sind grad bei, ich hab das aus einem anderen Projekt kopiert, ja.

390
00:25:35,400 --> 00:25:41,400
Wir sind grad bei Compile, äh, Bild-Vorgang 1898.

391
00:25:41,400 --> 00:25:43,400
Und da schreibt ihr auch die Zeit rein.

392
00:25:43,400 --> 00:25:44,400
Das ist ganz nützlich.

393
00:25:44,400 --> 00:25:49,400
Da kann ich mir unten nämlich ausgeben lassen, sprich, welche Version das ist und wann ich das Ganze gebaut hab.

394
00:25:49,400 --> 00:25:52,400
Da weiß ich, wie aktuell die Kisten ungefähr sind.

395
00:25:52,400 --> 00:25:55,400
Und das ist so ein Mini, ein Mini-Python-Script, was das macht.

396
00:25:55,400 --> 00:26:03,400
Das zählt einfach den ganzen Kram hoch pro, geh fort, dafür brauch ich keine Extension, äh, pro Compile-Folge.

397
00:26:03,400 --> 00:26:10,400
Also sprich, wenn ich jetzt Bild mache, dann, dann werdet ihr gleich sehen, dann ist es dann eine Versionsnummer höher.

398
00:26:10,400 --> 00:26:14,400
Das ist zum Debuggen wirklich nützlich.

399
00:26:14,400 --> 00:26:16,400
So, guckt jetzt, es ist 1899.

400
00:26:16,400 --> 00:26:21,400
Wir sind, wenn wir noch ein bisschen machen, sind wir bei der aktuellen Windows-Version angekommen heute irgendwann noch.

401
00:26:21,400 --> 00:26:24,400
So, ich hab jetzt übrigens, ich hab jetzt übrigens geupdatet.

402
00:26:24,400 --> 00:26:26,400
So, ähm, genau.

403
00:26:26,400 --> 00:26:29,400
Und das ist jetzt ein ESP-EDF-Projekt mit Arduino als Modul.

404
00:26:29,400 --> 00:26:36,400
Das heißt, man kann da, ähm, ein paar Sachen mehr konfigurieren und hat neuere Tools und einen neueren C++-Standard.

405
00:26:36,400 --> 00:26:38,400
Das ist ganz praktisch, ja.

406
00:26:38,400 --> 00:26:40,400
So, soweit, so gut.

407
00:26:40,400 --> 00:26:43,400
So, und was ich hier sonst noch drinnen liegen hab, ist eigentlich mehr oder weniger das.

408
00:26:43,400 --> 00:26:52,400
Auch, ähm, das ist die, das ist das, die Display-Klasse, die wir das letzte Mal gebastelt haben, die oben, oben rechts jetzt hier, was ihr hier seht.

409
00:26:52,400 --> 00:26:54,400
Auf dem Display das ganze Zeug anzeigt.

410
00:26:54,400 --> 00:26:58,400
Dann hab ich paar, paar Helper-Sachen am Start zum Pfeileinlesen und sowas.

411
00:26:58,400 --> 00:27:00,400
Ist mittlerweile, ist mittlerweile übelst lang.

412
00:27:00,400 --> 00:27:02,400
Ich zeig's euch mal.

413
00:27:02,400 --> 00:27:03,400
Guck mal hier.

414
00:27:03,400 --> 00:27:07,400
Weil C++ halt nun mal so sackt, muss man halt viel Zeug selbst machen.

415
00:27:07,400 --> 00:27:09,400
500 Zeilen Helper-Gedöns.

416
00:27:09,400 --> 00:27:18,400
Guck mal, ein paar Dinger sind sogar so, sind sogar so, ähm, so ordentlich gemacht, dass ich sogar einen Kommentartext oben dran gemacht hab.

417
00:27:18,400 --> 00:27:24,570
Ja, warum die Uhrzeit nicht stimmt, ist wirklich fraglich.

418
00:27:24,570 --> 00:27:26,570
Weiß ich nicht, weiß ich nicht, warum die Uhrzeit nicht stimmt.

419
00:27:26,570 --> 00:27:30,570
Ich würd eigentlich sagen, die Uhrzeit ist, ist, ist richtig eingestellt hier.

420
00:27:30,570 --> 00:27:32,570
Also, das, das stimmt nicht, aber, hm.

421
00:27:32,570 --> 00:27:50,730
Ja, und ich hab mich hier teilweise übelst ausgelassen, ne, mit, ähm, ach ja, übrigens, ich hab's, ich hab sogar was eingebaut, dass man, dass man pingen kann und sowas.

422
00:27:50,730 --> 00:27:52,730
Das eigentlich, das ist wirklich ganz nützlich.

423
00:27:52,730 --> 00:28:00,490
Also, wie gesagt, ich hab da ein paar Sachen selbst gebastelt, weil die mir halt einfach in C++ gefehlt haben, ja.

424
00:28:00,490 --> 00:28:03,490
Zum Beispiel, dass man den internen Temperatursensor vom ESP verwenden kann.

425
00:28:03,490 --> 00:28:05,490
Dass man einfach mal filtern kann.

426
00:28:05,490 --> 00:28:11,490
Wieso CST-2, ich weiß, das ist verkehrt, aber auch wenn ich's ändere, ändert sich nix.

427
00:28:11,490 --> 00:28:18,490
Ich bräuchte, warte mal, gibt's das nicht ne Seite, wo man CZ-Infos-Generator machen kann?

428
00:28:18,490 --> 00:28:37,300
So, falls da irgendwie einer, Time Zone Generator, Time Zone String Generator, ich weiß nicht, wie der Kram richtig heißt.

429
00:28:37,300 --> 00:28:44,340
Ne, ja, sowas hier brauch ich, ups.

430
00:28:45,340 --> 00:28:47,340
Sowas hier brauch ich.

431
00:28:47,340 --> 00:28:52,340
Da gibt es irgendwo Generator für und ich hab vergessen, wo.

432
00:28:52,340 --> 00:28:56,340
Aus irgendeinem Generator hab ich mir mal diesen Date-Time-String hier auch rausgeholt.

433
00:28:56,340 --> 00:29:00,340
Aber ich weiß beim besten Willen nicht, warum das jetzt hier nicht stimmt.

434
00:29:00,340 --> 00:29:06,870
Also, ich mein, das ist falsch, aber wenn ich das update, stimmt's auch nicht, ne.

435
00:29:06,870 --> 00:29:12,870
Wir hatten immer eben gemacht, plus 1 und plus 2 und dann hab ich wieder abgeloadet, aber da ging's auch nicht.

436
00:29:12,870 --> 00:29:15,870
Ja, ähm, weil ich sagen wollte, ich hab mir da so ein paar Sachen eingebaut.

437
00:29:15,870 --> 00:29:21,870
Zum Beispiel, dass man nen Container filtern kann, ob's Elemente hat, ob's Elemente hat, die auf was matchen.

438
00:29:21,870 --> 00:29:26,870
Ich hab mir im Prinzip, wenn man ehrlich ist, C++ ein bisschen mehr VC-Sharp gemacht.

439
00:29:26,870 --> 00:29:29,870
Mit so ein paar Sachen, die hier drin sind.

440
00:29:29,870 --> 00:29:34,870
Ja, dass du Arduino-String zu C++-String und C++-String zu Arduino-String machen kannst.

441
00:29:34,870 --> 00:29:38,870
Ein paar kleine Sachen, nix großartiges, also man wird auch so alles verstehen.

442
00:29:38,870 --> 00:29:40,870
So, was macht die Uhrzeit jetzt?

443
00:29:40,870 --> 00:29:44,950
Ne, stimmt immer noch nicht.

444
00:29:44,950 --> 00:29:46,950
Ich brauch so einen komischen Generator, TZ-Info.

445
00:29:46,950 --> 00:29:48,950
Wie, wie, wie erstellt man sowas?

446
00:29:48,950 --> 00:29:53,860
Kannst du auch to upper und to lower?

447
00:29:53,860 --> 00:29:55,860
Ja, kann ich, kann ich.

448
00:29:55,860 --> 00:29:57,860
Kann ich, pass mal auf, kann ich.

449
00:29:57,860 --> 00:30:01,860
Hab ich extra eingebaut, weil mir das immer übelst auf den Sack geht, dass T++ sowas nicht hat.

450
00:30:01,860 --> 00:30:02,860
Kann ich.

451
00:30:02,860 --> 00:30:09,530
Hallo?

452
00:30:09,530 --> 00:30:13,530
Äh, Autocompletion, please, come on, bra.

453
00:30:13,530 --> 00:30:17,290
Also ja, hab ich.

454
00:30:17,290 --> 00:30:19,290
Kann ich dir zeigen, da.

455
00:30:19,290 --> 00:30:22,300
Da.

456
00:30:22,300 --> 00:30:25,300
Kann ich, aber ich, warum mag denn der nicht?

457
00:30:25,300 --> 00:30:28,300
Warum geht mein Autocomplete grad nicht?

458
00:30:28,300 --> 00:30:30,300
Oh, plus plus.

459
00:30:30,300 --> 00:30:34,300
Ah, jetzt geht's, jetzt geht's aus Gründen, die sich mir nicht erschließen, guck.

460
00:30:34,300 --> 00:30:37,300
String to lower, String to, hab ich eingebaut, ja.

461
00:30:37,300 --> 00:30:44,300
Kriegt übrigens C++ in 20, äh, in C++20 kriegt's das angeblich.

462
00:30:44,300 --> 00:30:50,020
Äh, moin Max, wie ist deine Meinung zu den neuen Konsolen?

463
00:30:50,020 --> 00:30:52,020
Konnte leider bei dem Chaos keine PS5 vorbestellen.

464
00:30:52,020 --> 00:30:54,020
Würdest du die günstige Variante kaufen?

465
00:30:54,020 --> 00:30:58,020
Ähm, ich lad mir den Kram eh nur noch runter, ich würd mir die ohne Laufwerk kaufen.

466
00:30:58,020 --> 00:31:00,020
Aber ich hab's nicht, nicht verfolgt.

467
00:31:00,020 --> 00:31:04,020
Und auch, ich hab mir auch den, die letzte, letzte Vorstellung nicht angeguckt.

468
00:31:04,020 --> 00:31:06,020
Weiß ich gar nicht, keine Ahnung.

469
00:31:06,020 --> 00:31:14,020
Tja, also falls irgendwie einer so nen Time Zone Generator, kann das sein, dass ich das gar nicht richtig setze?

470
00:31:14,020 --> 00:31:18,300
Doch, tzinfo.

471
00:31:18,300 --> 00:31:20,300
Für was ist die 1 da hinten dran?

472
00:31:20,300 --> 00:31:21,300
Override.

473
00:31:21,300 --> 00:31:29,830
Wie, wie generiert man sowas?

474
00:31:29,830 --> 00:31:43,130
Da ist doch sowas hier.

475
00:31:43,130 --> 00:31:45,130
Europe, Berlin.

476
00:31:45,130 --> 00:31:47,130
Okay, ich hab's richtige, guck mal, ich hab's richtige.

477
00:31:47,130 --> 00:31:49,130
CET-1, was auch immer.

478
00:31:49,130 --> 00:31:52,130
Aber, äh, es funktioniert nicht.

479
00:31:52,130 --> 00:31:54,130
Hab ich den richtigen NTP-Server?

480
00:31:54,130 --> 00:31:57,130
Vielleicht, vielleicht hab ich den falschen NTP-Server gesetzt.

481
00:31:57,130 --> 00:32:01,130
Also anscheinend muss man hier tatsächlich ein Minus dazwischen machen?

482
00:32:01,130 --> 00:32:03,130
Ne, der NTP-Server stimmt.

483
00:32:03,130 --> 00:32:05,130
Ne, der NTP-Server ist falsch!

484
00:32:05,130 --> 00:32:07,130
Guck mal, was für ne IP hab ich?

485
00:32:07,130 --> 00:32:11,130
Was, was, was für ne IP hab ich?

486
00:32:11,130 --> 00:32:14,130
Aha, das ist der falsche NTP-Server.

487
00:32:14,130 --> 00:32:16,130
Deswegen geht das nicht.

488
00:32:16,130 --> 00:32:18,130
Der kommt nicht zum NTP-Server hin.

489
00:32:18,130 --> 00:32:20,130
Würde ich mal vermuten.

490
00:32:20,130 --> 00:32:22,130
Wobei, doch, der muss zum NTP-Server kommen.

491
00:32:22,130 --> 00:32:27,040
Sonst hätte er die Zeit ja nicht abrufen können.

492
00:32:27,040 --> 00:32:29,040
Naja, gut.

493
00:32:29,040 --> 00:32:31,040
Ich kann ihn mal.

494
00:32:31,040 --> 00:32:33,040
Ich weiß es gar nicht. Ist es 1.1?

495
00:32:33,040 --> 00:32:35,040
Ich weiß gar nicht, was mein Gateway ist.

496
00:32:35,040 --> 00:32:37,040
Probieren wir es mal so aus. Vielleicht geht die Zeit jetzt.

497
00:32:37,040 --> 00:32:39,040
Aber, wir halten uns da nicht, nicht so...

498
00:32:39,040 --> 00:32:41,040
Doch, wir sind GMT plus 2.

499
00:32:41,040 --> 00:32:45,040
Aber, anscheinend gibt's hier keine Plusse, sondern nur Minusse.

500
00:32:45,040 --> 00:32:47,350
Frag mich nicht.

501
00:32:47,350 --> 00:32:50,350
Es ist aber auch wurscht. Das, das krieg ich easy gefixt.

502
00:32:50,350 --> 00:32:52,350
Wir wollen heute nämlich was ganz anderes zu machen.

503
00:32:52,350 --> 00:32:53,350
Schon so früh zuhause?

504
00:32:53,350 --> 00:32:54,350
Nee, ich hab heute frei.

505
00:32:54,350 --> 00:32:56,350
Morgen auch, übermorgen auch und am Montag auch.

506
00:32:56,350 --> 00:32:58,350
Legion 14982 Monate.

507
00:32:58,350 --> 00:32:59,350
Dankeschön.

508
00:32:59,350 --> 00:33:00,350
Excellent Subscription.

509
00:33:00,350 --> 00:33:01,350
Big Brain.

510
00:33:01,350 --> 00:33:05,110
So, wie sieht's jetzt aus?

511
00:33:05,110 --> 00:33:06,110
Nein.

512
00:33:06,110 --> 00:33:07,110
1357.

513
00:33:07,110 --> 00:33:08,110
Scheiß drauf.

514
00:33:08,110 --> 00:33:09,110
Kein Bock.

515
00:33:09,110 --> 00:33:13,830
Das machen wir jetzt nicht.

516
00:33:13,830 --> 00:33:14,830
Wir lassen das jetzt so.

517
00:33:14,830 --> 00:33:17,830
Ich mach da jetzt nichts, sonst brauch ich ewig, bis NTP geht.

518
00:33:17,830 --> 00:33:23,190
Und in Wirklichkeit...

519
00:33:23,190 --> 00:33:25,190
So, und in Wirklichkeit ist es sinnlos.

520
00:33:25,190 --> 00:33:26,190
Wollen wir gar nicht machen.

521
00:33:26,190 --> 00:33:27,190
Also.

522
00:33:27,190 --> 00:33:29,190
Was wir heute machen ist folgendes.

523
00:33:29,190 --> 00:33:30,190
Ähm.

524
00:33:30,190 --> 00:33:34,360
So.

525
00:33:34,360 --> 00:33:35,360
Ey.

526
00:33:35,360 --> 00:33:36,360
Irgendwie Nase gelaufen grad.

527
00:33:36,360 --> 00:33:37,360
Also.

528
00:33:37,360 --> 00:33:38,360
Was wir heute machen ist folgendes.

529
00:33:38,360 --> 00:33:39,360
Ähm.

530
00:33:39,360 --> 00:33:42,360
Wir haben das letzte Mal programmiert, dass das Display funktioniert.

531
00:33:42,360 --> 00:33:45,360
Und, dass man Firmware-Update hochladen kann hier dran.

532
00:33:45,360 --> 00:33:46,360
Äh.

533
00:33:46,360 --> 00:33:47,360
Ich weiß, dass das funktioniert.

534
00:33:47,360 --> 00:33:48,360
Dass man, ähm.

535
00:33:48,360 --> 00:33:50,360
Standard-Transformen und Gedöns machen kann.

536
00:33:50,360 --> 00:33:51,360
Aber.

537
00:33:51,360 --> 00:33:52,360
Ähm.

538
00:33:52,360 --> 00:33:54,360
Mich nervt, dass das so kompliziert ist.

539
00:33:54,360 --> 00:33:57,800
Deswegen hab ich wieder was eigenes gebastelt.

540
00:33:57,800 --> 00:33:58,800
Ne.

541
00:33:58,800 --> 00:33:59,800
Ich mein.

542
00:33:59,800 --> 00:34:00,800
Man könnt.

543
00:34:00,800 --> 00:34:02,800
In die Standard-String-Klasse sowas einbauen.

544
00:34:02,800 --> 00:34:03,800
So ein paar Basic-Sachen.

545
00:34:03,800 --> 00:34:04,800
Ja.

546
00:34:04,800 --> 00:34:05,800
So.

547
00:34:05,800 --> 00:34:06,800
To-Upper.

548
00:34:06,800 --> 00:34:07,800
To-Lower.

549
00:34:07,800 --> 00:34:08,800
Trim-Left.

550
00:34:08,800 --> 00:34:09,800
Trim-Right.

551
00:34:09,800 --> 00:34:10,800
Äh.

552
00:34:10,800 --> 00:34:11,800
Replace.

553
00:34:11,800 --> 00:34:12,800
Äh.

554
00:34:12,800 --> 00:34:13,800
Und sonst was.

555
00:34:13,800 --> 00:34:14,800
Teilweise haben sie es drin.

556
00:34:14,800 --> 00:34:15,800
Ich hol mir ne 3090.

557
00:34:15,800 --> 00:34:16,800
Ja.

558
00:34:16,800 --> 00:34:17,800
Sobald es das gibt.

559
00:34:17,800 --> 00:34:18,800
Also.

560
00:34:18,800 --> 00:34:19,800
Das hier haben wir gebastelt, dass das hier funktioniert.

561
00:34:19,800 --> 00:34:20,800
Das letzte Mal im Stream.

562
00:34:20,800 --> 00:34:21,800
Äh.

563
00:34:21,800 --> 00:34:22,800
So.

564
00:34:22,800 --> 00:34:23,800
From scratch.

565
00:34:23,800 --> 00:34:24,800
Ich hab jetzt das Projekt konvertiert von einem reinen Arduino-Projekt zu einem ESP-EDF

566
00:34:24,800 --> 00:34:25,800
mit Arduino-Projekt.

567
00:34:25,800 --> 00:34:27,800
Dass wir ein bisschen neuere Tools haben.

568
00:34:27,800 --> 00:34:28,800
Und.

569
00:34:28,800 --> 00:34:29,800
Ähm.

570
00:34:29,800 --> 00:34:36,800
Eine Sache, die ja übelst nervig war, für mich auch, die letzten Streams, wo wir gebastelt

571
00:34:36,800 --> 00:34:39,800
haben, ist, dass die ganzen Web-Server alle irgendwie sacken.

572
00:34:39,800 --> 00:34:40,800
Also.

573
00:34:40,800 --> 00:34:43,800
Ich möchte ja nen Web-Server haben, der HTTPS kann.

574
00:34:43,800 --> 00:34:44,800
Für Firmware-Upload.

575
00:34:44,800 --> 00:34:45,800
Ja.

576
00:34:45,800 --> 00:34:46,800
Und.

577
00:34:46,800 --> 00:34:47,800
Ähm.

578
00:34:47,800 --> 00:34:48,800
Also.

579
00:34:48,800 --> 00:34:49,800
Hauptsächlich weil's geht.

580
00:34:49,800 --> 00:34:50,800
Ja.

581
00:34:50,800 --> 00:34:52,800
Nicht weil ich denke, dass irgendwie einer meine Firmware mitschneidet oder so.

582
00:34:52,800 --> 00:34:53,800
Was auch nicht schlimm wär.

583
00:34:53,800 --> 00:34:56,800
Da gibt's ja eh nix kompliziertes, äh, nix tolles drin.

584
00:34:56,800 --> 00:34:57,800
Ähm.

585
00:34:57,800 --> 00:34:58,800
Aber ich.

586
00:34:58,800 --> 00:35:00,800
Ich zeige euch einfach, wenn Firmware-Update über HTTPS ist.

587
00:35:00,800 --> 00:35:02,800
Und außerdem lernt man da ein bisschen was bei.

588
00:35:02,800 --> 00:35:07,280
Und eine Sache, die ich auch, äh, schon ne ganze Weile machen will, ist, dass man sich

589
00:35:07,280 --> 00:35:11,040
Logs, die Logs hier unten, auch über ne HTTP-Verbindung schicken lassen kann.

590
00:35:11,040 --> 00:35:12,040
So.

591
00:35:12,040 --> 00:35:16,980
Und die ganzen Web-Server, die's so gibt, finde ich, äh, ziemlich, ziemlicher Mist.

592
00:35:16,980 --> 00:35:20,840
Der eingebaute Web-Server von ESP ist, äh, ganz merkwürdig.

593
00:35:20,840 --> 00:35:23,500
Der ist rein Single-Core und bleibt laufend hängen.

594
00:35:23,500 --> 00:35:26,800
Dann gibt's nen anderen, der auch noch HTTPS kann.

595
00:35:26,800 --> 00:35:27,800
Der bleibt.

596
00:35:27,800 --> 00:35:29,840
Wenn man die Verbindung abbricht, hängen.

597
00:35:29,840 --> 00:35:34,920
Deswegen hab ich gedacht, wir probieren mal nen Mini, wirklich nen Mini-Web-Server, was

598
00:35:34,920 --> 00:35:35,920
ganz kleines.

599
00:35:35,920 --> 00:35:42,040
Also einer, der quasi nur Get und Post kann und sonst nix.

600
00:35:42,040 --> 00:35:49,040
Get, Post und, ähm, dann auch nur quasi Index-HTML ausliefern oder sowas und n Post-Firmware-Update

601
00:35:49,040 --> 00:35:50,040
machen.

602
00:35:50,040 --> 00:35:53,240
Weil unter slash Logs halt die, die Logs hier rausbekommen.

603
00:35:53,240 --> 00:35:56,040
Äh, nen eigenen Web-Server zu basteln.

604
00:35:56,040 --> 00:35:57,040
Allerdings soll der.

605
00:35:57,040 --> 00:35:58,280
Ähm.

606
00:35:58,280 --> 00:35:59,280
HTTPS können.

607
00:35:59,280 --> 00:36:04,520
Ich hab mir im Vorfeld schon mal angeguckt, wie das funktioniert.

608
00:36:04,520 --> 00:36:14,720
Es gibt da, es gibt hier nen Beispiel-Projekt und zwar, ähm, äh, warte mal, Github, das

609
00:36:14,720 --> 00:36:15,880
müssen wir uns heute angucken.

610
00:36:15,880 --> 00:36:21,440
Examples haben die hier irgendwo oder Programs.

611
00:36:21,440 --> 00:36:26,980
Irgendwo haben die hier nen Server-Example.

612
00:36:26,980 --> 00:36:27,980
Genau.

613
00:36:27,980 --> 00:36:28,980
So.

614
00:36:28,980 --> 00:36:33,220
Es sieht mega kryptisch aus, fand ich auch am Anfang, aber es ist, es ist gar nicht so

615
00:36:33,220 --> 00:36:34,220
kompliziert.

616
00:36:34,220 --> 00:36:35,220
Ähm.

617
00:36:35,220 --> 00:36:40,220
Der ESP32 benutzt das hier als Libraries für TLS oder für SSL.

618
00:36:40,220 --> 00:36:47,580
So, und was wir machen müssen, ist eigentlich nur dieses Beispiel hier in ein bisschen,

619
00:36:47,580 --> 00:36:49,060
ein bisschen schöner übersetzen.

620
00:36:49,060 --> 00:36:53,060
So, dass es auf dem ESP32 auch ordentlich funktioniert.

621
00:36:53,060 --> 00:36:54,220
Und dann sollten wir ne verschlüsselte Verbindung vom Browser zum, zur, zu dieser Kiste machen.

622
00:36:54,220 --> 00:36:55,220
So.

623
00:36:55,220 --> 00:36:56,220
So.

624
00:36:56,220 --> 00:36:57,220
So.

625
00:36:57,220 --> 00:37:00,420
Dass wir, dass wir jetzt so eine Liste aufbauen können, also ne, ne wir müssen die Liste

626
00:37:00,420 --> 00:37:02,460
hier aufbauen, also ne was haben wir hier, äh, was sind hier die Bösen oder die Bösen,

627
00:37:02,460 --> 00:37:03,460
die wir bei der Liste hier haben?

628
00:37:03,460 --> 00:37:04,460
Ne, wir müssen, wir müssen das hier öffnen.

629
00:37:04,460 --> 00:37:05,460
Also hier gehts in der normalen Weise so, also, jetzt sind wir gerade in der normalen

630
00:37:05,460 --> 00:37:06,460
Weise, äh, wie gesagt, in der normalen Weise, aber wir können dein��unde, die wir machen,

631
00:37:06,460 --> 00:37:07,460
nicht mehr aufbauen.

632
00:37:07,460 --> 00:37:08,460
Wir können die Liste, äh, die Liste öffnen, und schon haben wir, wir haben das hier, die

633
00:37:08,460 --> 00:37:09,460
Liste öffnen und dann können wir mit dem aufbauen.

634
00:37:09,460 --> 00:37:10,460
Wir können also die Liste, äh, diese Liste öffnen, wie gesagt, in der normalen Weise,

635
00:37:10,460 --> 00:37:11,460
Webseite ausliefern.

636
00:37:13,830 --> 00:37:16,010
Aber das probieren wir jetzt mal. Wie gesagt, ich habe im Vorfall schon ein bisschen

637
00:37:16,010 --> 00:37:18,090
geguckt, wie das Ganze funktioniert.

638
00:37:18,610 --> 00:37:19,950
Mich stört es ehrlich gesagt, dass

639
00:37:19,950 --> 00:37:22,650
die Zeit falsch ist.

640
00:37:23,110 --> 00:37:24,230
Aber da können wir jetzt nichts machen.

641
00:37:24,810 --> 00:37:25,950
Ja, der habe ich jetzt auch

642
00:37:25,950 --> 00:37:26,330
keinen Bock.

643
00:37:28,570 --> 00:37:30,010
Großartig dran rum zu

644
00:37:30,010 --> 00:37:31,650
wursten, bis das funktioniert.

645
00:37:32,910 --> 00:37:34,250
Vielleicht sollten wir mal

646
00:37:34,250 --> 00:37:36,330
den NTP-Server

647
00:37:36,330 --> 00:37:36,690
setzen.

648
00:37:38,770 --> 00:37:39,730
Ich habe eine Idee.

649
00:37:39,730 --> 00:37:42,130
Wir setzen mal den NTP-Server

650
00:37:42,130 --> 00:37:43,470
Oh ne, ich muss

651
00:37:43,470 --> 00:37:45,350
EGIT

652
00:37:45,350 --> 00:37:47,470
Settings

653
00:37:47,470 --> 00:37:49,150
Ich muss on save einschalten.

654
00:37:51,090 --> 00:37:51,650
Save

655
00:37:51,650 --> 00:37:54,010
Formatting

656
00:37:54,010 --> 00:37:55,790
Format File on save.

657
00:37:55,890 --> 00:37:57,030
Ohne kriege ich Zustände.

658
00:37:58,350 --> 00:37:59,510
Ah, jetzt. So ist es viel besser.

659
00:37:59,890 --> 00:38:01,430
Wir setzen mal den NTP-Server

660
00:38:01,430 --> 00:38:03,050
nachdem

661
00:38:03,050 --> 00:38:05,030
das WLAN ab ist.

662
00:38:11,800 --> 00:38:16,620
Okay. C++

663
00:38:16,620 --> 00:38:17,060
Hallo?

664
00:38:18,880 --> 00:38:19,780
What the fuck?

665
00:38:20,840 --> 00:38:22,560
Ich habe zwei Zeilen verschoben.

666
00:38:23,800 --> 00:38:24,720
Was ist dein Problem?

667
00:38:34,980 --> 00:38:35,400
The fuck?

668
00:38:48,490 --> 00:38:49,030
Was ist denn jetzt?

669
00:38:52,210 --> 00:38:53,170
What the fuck?

670
00:38:54,310 --> 00:38:55,510
Das hat sich überhaupt nichts geändert.

671
00:38:56,210 --> 00:38:58,090
Also, will mich diese...

672
00:38:58,090 --> 00:38:58,590
Was?

673
00:38:59,130 --> 00:39:03,760
Was zum Teufel geht ab?

674
00:39:07,010 --> 00:39:08,450
Was ist denn jetzt los?

675
00:39:09,450 --> 00:39:10,530
Habe ich irgendwas kaputt gemacht?

676
00:39:18,850 --> 00:39:19,370
What?

677
00:39:32,870 --> 00:39:33,430
Äh.

678
00:39:37,400 --> 00:39:37,700
Hä?

679
00:39:38,200 --> 00:39:40,880
Okay, ich bin absolut planlos.

680
00:39:40,960 --> 00:39:42,020
Was hat der denn jetzt für Schmerzen?

681
00:39:44,020 --> 00:39:45,460
What the fuck?

682
00:39:48,890 --> 00:39:50,330
Das ist so typisch

683
00:39:50,330 --> 00:39:51,150
C++-Kram.

684
00:39:51,410 --> 00:39:53,730
Du hast nichts geändert. Du kompilierst einfach nochmal.

685
00:39:53,850 --> 00:39:54,650
Bam. Geht nicht mehr.

686
00:39:55,330 --> 00:39:57,730
So, also. Was hat der denn für Probleme

687
00:39:57,730 --> 00:39:59,610
jetzt auf einmal? Guck mal hier, der meckert

688
00:39:59,610 --> 00:40:01,070
über die...

689
00:40:01,070 --> 00:40:03,490
Das ist irgendwie Option... Option... Ach, Moment.

690
00:40:05,490 --> 00:40:05,850
Ah.

691
00:40:06,030 --> 00:40:06,350
Yes.

692
00:40:07,350 --> 00:40:09,190
Ich habe nichts gesagt. Ich bin im falschen Fenster.

693
00:40:10,090 --> 00:40:10,750
Ich... Ne, bin ich nicht.

694
00:40:10,750 --> 00:40:12,690
Ich bin im richtigen... Äh, Moment.

695
00:40:14,570 --> 00:40:14,910
Ey, Moment.

696
00:40:15,010 --> 00:40:16,050
Ich war im falschen Fenster.

697
00:40:16,850 --> 00:40:17,930
Was ist das Richtige davon?

698
00:40:19,090 --> 00:40:20,030
Das ist das Falsche.

699
00:40:20,450 --> 00:40:21,530
Das ist das Richtige.

700
00:40:38,640 --> 00:40:40,080
Ha? Ah ja, gut.

701
00:40:40,380 --> 00:40:42,640
Ich war nur im falschen Projekt. Ich war im falschen Editor.

702
00:40:44,760 --> 00:40:46,860
Also, wir programmieren. Wir probieren heute einen Webserver zu bauen.

703
00:40:46,900 --> 00:40:48,620
Einen Mini. Einen wirklichen Mini. Mini. Klein.

704
00:40:49,360 --> 00:40:50,840
Der nur ein bisschen statisches

705
00:40:50,840 --> 00:40:52,780
HTML ausliefern kann. Allerdings...

706
00:40:53,320 --> 00:40:54,800
Also, ein Webserver,

707
00:40:54,800 --> 00:40:56,300
der statisches HTML ausliefern kann,

708
00:40:56,780 --> 00:40:59,360
ESP32. Allerdings, der... der... der auch

709
00:40:59,360 --> 00:41:00,540
SSL können soll.

710
00:41:02,800 --> 00:41:03,960
Stimmt jetzt die Uhrzeit wenigstens?

711
00:41:03,960 --> 00:41:04,860
Ne, immer noch verkehrt.

712
00:41:06,240 --> 00:41:08,360
Ok, wunderbar. Ne, RTX nicht schon vorbestellt.

713
00:41:08,360 --> 00:41:10,420
Ich bestelle mir wenn überhaupt eine 3090.

714
00:41:11,240 --> 00:41:12,440
So, wo bin ich jetzt stehen geblieben?

715
00:41:12,440 --> 00:41:14,140
Genau. Also, das ist das Beispiel hierfür.

716
00:41:14,220 --> 00:41:16,880
Für die eingebauten SSL-Dinger vom ESP32.

717
00:41:18,340 --> 00:41:22,020
Und wir bauen einfach mal das, ähm, nach.

718
00:41:22,320 --> 00:41:24,440
Das Example und gucken, gucken, wie weit wir kommen.

719
00:41:24,440 --> 00:41:24,660
Ja.

720
00:41:25,900 --> 00:41:26,300
Also.

721
00:41:26,300 --> 00:41:28,300
Müssen wir mal gucken, ob wir irgendwas aufräumen müssen.

722
00:41:28,300 --> 00:41:30,300
Aber ich glaube, das passt.

723
00:41:30,300 --> 00:41:31,300
So.

724
00:41:31,300 --> 00:41:33,300
Also, wie fangen wir das am besten an?

725
00:41:33,300 --> 00:41:34,300
Wir machen hier ein neues File.

726
00:41:34,300 --> 00:41:36,300
Das nennen wir...

727
00:41:36,300 --> 00:41:42,490
Ähm...

728
00:41:42,490 --> 00:41:43,490
Wie nennen wir das?

729
00:41:43,490 --> 00:41:44,490
Ich hab doch gerade gesagt, das wird ein Mini...

730
00:41:44,490 --> 00:41:46,490
Das wird ein Mini-Webserver.

731
00:41:46,490 --> 00:41:48,490
Dann nennen wir das Ding...

732
00:41:48,490 --> 00:41:50,490
Miniserve.

733
00:41:50,490 --> 00:41:52,490
Top.

734
00:41:52,490 --> 00:41:53,490
Ähm, so.

735
00:41:53,490 --> 00:41:55,490
Und da brauchen wir eine Klasse drin.

736
00:41:55,490 --> 00:41:57,490
Wir machen das mal der... der... der C++-Way.

737
00:41:57,490 --> 00:41:58,490
Ja.

738
00:41:58,490 --> 00:42:00,490
Äh, da brauchen wir eine Klasse drin.

739
00:42:00,490 --> 00:42:01,490
Vielleicht...

740
00:42:01,490 --> 00:42:02,490
Vielleicht soll ich...

741
00:42:02,490 --> 00:42:03,490
Vielleicht soll ich es nicht...

742
00:42:03,490 --> 00:42:04,490
Vielleicht...

743
00:42:04,490 --> 00:42:07,490
Vielleicht soll ich einfach erst mal ganz billig das Example nachbauen.

744
00:42:07,490 --> 00:42:11,490
Und gucken, ob es funktioniert, bevor ich da irgendeine Klasse draus baue.

745
00:42:11,490 --> 00:42:16,490
Wollen wir gleich hier uns die volle C++-Objektorientierungsladung geben?

746
00:42:16,490 --> 00:42:20,490
Oder wollen wir erst mal das... das Example nachbauen, so wie es hier drin steht?

747
00:42:21,490 --> 00:42:22,490
Nee, komm.

748
00:42:22,490 --> 00:42:23,490
Wir geben...

749
00:42:23,490 --> 00:42:24,490
Wir machen das gleich richtig.

750
00:42:24,490 --> 00:42:25,490
Easy.

751
00:42:25,490 --> 00:42:26,490
Ist gar kein Problem.

752
00:42:26,490 --> 00:42:27,490
Alles klar.

753
00:42:27,490 --> 00:42:28,490
Also...

754
00:42:28,490 --> 00:42:32,490
Wie gesagt, ich habe es mir im Vorfeld schon ein bisschen angeguckt.

755
00:42:32,490 --> 00:42:35,490
Also, ich weiß, dass dieses Example funktioniert.

756
00:42:35,490 --> 00:42:36,490
Das habe ich schon ausprobiert.

757
00:42:36,490 --> 00:42:37,490
Das geht.

758
00:42:37,490 --> 00:42:39,490
Also, prinzipiell geht das.

759
00:42:39,490 --> 00:42:41,490
Muss ich das jetzt nicht nochmal machen.

760
00:42:41,490 --> 00:42:43,490
So, also, wenn wir uns...

761
00:42:43,490 --> 00:42:46,490
Das ist übrigens auch so ein komisches C++-Feature.

762
00:42:46,490 --> 00:42:48,490
Was ich sehr merkwürdig finde.

763
00:42:48,490 --> 00:42:49,490
Warum...

764
00:42:49,490 --> 00:42:51,490
Vielleicht hat da einer von euch irgendeine Erklärung dazu.

765
00:42:51,490 --> 00:42:53,490
Warum kann ich sowas hier machen?

766
00:42:53,490 --> 00:42:54,490
Also, das ist...

767
00:42:54,490 --> 00:42:56,490
Das ist ja eine Vermischung von allem möglichen.

768
00:42:56,490 --> 00:43:00,490
Also, das hier legt die Klasse Minisurf an.

769
00:43:00,490 --> 00:43:06,490
Und das hier legt im gleichen Zuge eine globale Variable vom Typ Minisurf an, die Minisurf

770
00:43:06,490 --> 00:43:07,490
heißt.

771
00:43:07,490 --> 00:43:11,490
Was heißt, ich habe hier eine Instanz von der Minisurf-Klasse unter Minis...

772
00:43:11,490 --> 00:43:13,490
Also, das muss ich erst mal importieren.

773
00:43:13,490 --> 00:43:14,490
Warum geht sowas überhaupt?

774
00:43:14,490 --> 00:43:15,490
Wo ist der Sinn davon?

775
00:43:15,490 --> 00:43:19,490
Das leuchtet mir nämlich überhaupt nicht ein.

776
00:43:19,490 --> 00:43:28,080
Wo machen wir denn hier mal den Include?

777
00:43:28,080 --> 00:43:30,080
Also, ich meine, wozu ist das gut?

778
00:43:30,080 --> 00:43:31,080
Das checke ich null.

779
00:43:31,080 --> 00:43:40,240
Ja.

780
00:43:40,240 --> 00:43:42,240
Eigentlich sollte ich jetzt was haben, was so...

781
00:43:42,240 --> 00:43:43,240
Achso.

782
00:43:43,240 --> 00:43:44,240
Dann sollte ich vielleicht mal...

783
00:43:44,240 --> 00:43:46,240
Vielleicht muss ich es anders schreiben.

784
00:43:46,240 --> 00:43:50,640
Ah, da ist er.

785
00:43:50,640 --> 00:43:51,640
Ja.

786
00:43:51,640 --> 00:43:53,640
Also, den Sinn verstehe ich nicht davon.

787
00:43:53,640 --> 00:43:55,640
Weil ich könnte auch einfach...

788
00:43:55,640 --> 00:43:57,640
Geht mit Structo und Union NC auch?

789
00:43:57,640 --> 00:43:58,640
Ja.

790
00:43:58,640 --> 00:44:01,640
Aber ich verstehe gerade hier den Sinn von nicht.

791
00:44:01,640 --> 00:44:03,640
Ehrlich gesagt.

792
00:44:03,640 --> 00:44:07,600
Aber da bin ich wahrscheinlich zu low brain.

793
00:44:07,600 --> 00:44:10,600
Weil ich könnte genauso gut danach hingehen und sagen...

794
00:44:10,600 --> 00:44:13,100
So.

795
00:44:13,100 --> 00:44:14,100
Ist genau das Gleiche.

796
00:44:14,100 --> 00:44:15,100
Aber...

797
00:44:15,100 --> 00:44:17,100
Viel klarer getrennt, was was ist.

798
00:44:17,100 --> 00:44:19,100
Also, wo ist da jetzt der Unterschied?

799
00:44:19,100 --> 00:44:21,100
Also, warum brauche ich das überhaupt?

800
00:44:21,100 --> 00:44:23,100
Aber wahrscheinlich checke ich es nicht.

801
00:44:23,100 --> 00:44:24,100
So.

802
00:44:24,100 --> 00:44:28,100
Und falls es für den Fall sein sollte, dass ich keine Klasse mehr von diesem Typ anlegen

803
00:44:28,100 --> 00:44:29,100
können darf.

804
00:44:29,100 --> 00:44:30,100
Ja.

805
00:44:30,100 --> 00:44:31,100
Dann kann ich das aber auch anders machen.

806
00:44:31,100 --> 00:44:34,100
Dann kann ich hier den Constructor private machen und mache mir eine public create Methode

807
00:44:34,100 --> 00:44:35,100
oder sowas.

808
00:44:35,100 --> 00:44:40,100
Was ich viel sauberer finde, als irgendwie Klassendeklaration und das Initialisieren irgendwie

809
00:44:40,100 --> 00:44:46,840
so komisch zu vermischen.

810
00:44:46,840 --> 00:44:47,840
Aber war es nicht.

811
00:44:47,840 --> 00:44:50,220
Ne?

812
00:44:50,220 --> 00:44:51,220
Da war es nicht genau.

813
00:44:51,220 --> 00:44:58,110
Übrigens eine Sache müssen wir machen, weil das uns mega rumspackt.

814
00:44:58,110 --> 00:45:04,320
Muss das inline machen.

815
00:45:04,320 --> 00:45:09,320
Weil ich habe eine Sache gelernt in meiner letzten Zeit, wo ich mich mit C++ beschäftigt

816
00:45:09,320 --> 00:45:11,320
habe, ist.

817
00:45:11,320 --> 00:45:19,320
Entweder man ist ultra pingelig zwischen der Trennung zwischen Header und C++-File.

818
00:45:19,320 --> 00:45:20,320
Oder.

819
00:45:20,320 --> 00:45:21,320
Wenn einem das auf den Keks geht.

820
00:45:21,320 --> 00:45:27,320
Dass man im Jahr 2020 noch sowas wie Header und C++-Files überhaupt trennen muss.

821
00:45:27,320 --> 00:45:29,320
Kann man einfach alles in Header schreiben.

822
00:45:29,320 --> 00:45:32,320
Dann muss man aber davor schreiben inline.

823
00:45:32,320 --> 00:45:38,320
Weil er ansonsten Fehler schmeißt, dass das Duplicate Definition und alles geht kaputt.

824
00:45:38,320 --> 00:45:39,320
Sonst.

825
00:45:39,320 --> 00:45:42,650
Ja.

826
00:45:42,650 --> 00:45:43,650
Na gut.

827
00:45:43,650 --> 00:45:44,650
Das kann ich jetzt nicht so nennen.

828
00:45:44,650 --> 00:45:48,560
Weil das gibt es ja schon.

829
00:45:48,560 --> 00:45:49,560
Ne?

830
00:45:49,560 --> 00:45:50,560
Ist ja auch egal.

831
00:45:50,560 --> 00:45:51,560
So.

832
00:45:51,560 --> 00:45:52,560
Also.

833
00:45:52,560 --> 00:45:55,070
Wunderbar.

834
00:45:55,070 --> 00:45:56,070
Haben wir den jetzt.

835
00:45:56,070 --> 00:45:57,070
Gut.

836
00:45:57,070 --> 00:45:58,070
Also.

837
00:45:58,070 --> 00:45:59,070
Was braucht.

838
00:45:59,070 --> 00:46:02,070
Was braucht so einen Webserver als Public Methode?

839
00:46:02,070 --> 00:46:04,070
Verwende einfach einen Header Guard.

840
00:46:04,070 --> 00:46:05,070
Funktioniert nicht.

841
00:46:05,070 --> 00:46:06,070
Funktioniert nicht.

842
00:46:06,070 --> 00:46:07,070
Musste ich auch lernen.

843
00:46:07,070 --> 00:46:09,700
Also.

844
00:46:09,700 --> 00:46:10,700
Man kann sowas hier machen.

845
00:46:10,700 --> 00:46:11,700
Funktioniert nicht.

846
00:46:11,700 --> 00:46:12,700
Funktioniert nur.

847
00:46:12,700 --> 00:46:16,700
Solange die Dateien zusammenkompiliert werden.

848
00:46:16,700 --> 00:46:17,700
Also.

849
00:46:17,700 --> 00:46:18,700
Zum Beispiel.

850
00:46:18,700 --> 00:46:19,700
Wenn ich jetzt hier eine Lib habe.

851
00:46:19,700 --> 00:46:20,700
Da eine Lib.

852
00:46:20,700 --> 00:46:21,700
Und da mein Mainprogramm.

853
00:46:21,700 --> 00:46:25,700
Und ich include jetzt quasi das hier und das hier.

854
00:46:25,700 --> 00:46:27,700
Dann sagt er Duplicate Definition.

855
00:46:27,700 --> 00:46:30,700
Egal ob man sagt Header nur einmal oder nicht.

856
00:46:30,700 --> 00:46:34,040
Ja.

857
00:46:34,040 --> 00:46:35,040
Genau.

858
00:46:35,040 --> 00:46:37,040
Die ganzen Libraries die komplett im Header File sind.

859
00:46:37,040 --> 00:46:39,040
Die verwenden alle Inline.

860
00:46:39,040 --> 00:46:44,040
Der einzige Fall den ich jetzt gefunden habe.

861
00:46:44,040 --> 00:46:47,040
Wo man das nicht machen kann ist.

862
00:46:47,040 --> 00:46:51,040
Wenn man Sachen verstecken will.

863
00:46:51,040 --> 00:46:55,040
Also wenn man beispielsweise hier was includen will.

864
00:46:55,040 --> 00:46:57,040
Was man nicht in Main includen will.

865
00:46:57,040 --> 00:46:58,040
Weil ansonsten ist ja.

866
00:46:58,040 --> 00:46:59,040
Ist ja das quasi.

867
00:46:59,040 --> 00:47:02,040
Geht include komplett durch.

868
00:47:02,040 --> 00:47:03,040
Also wenn ich hier was include.

869
00:47:03,040 --> 00:47:05,040
Und dieses dann hier include.

870
00:47:05,040 --> 00:47:06,040
Include dann das was ich hier include.

871
00:47:06,040 --> 00:47:07,040
Auch noch da rein.

872
00:47:07,040 --> 00:47:09,410
So.

873
00:47:09,410 --> 00:47:11,410
Warum schreibst Du eigentlich C++?

874
00:47:11,410 --> 00:47:12,410
Tja.

875
00:47:12,410 --> 00:47:13,410
Weil es nicht anders geht.

876
00:47:13,410 --> 00:47:14,410
Du musst.

877
00:47:14,410 --> 00:47:17,410
Für ein ESP32 gibt es nur C++ als Variante.

878
00:47:17,410 --> 00:47:20,410
Du hast noch die theoretische Möglichkeit.

879
00:47:20,410 --> 00:47:23,410
Also es gibt noch weitere Varianten.

880
00:47:23,410 --> 00:47:24,410
Wenn man es unbedingt will.

881
00:47:24,410 --> 00:47:27,410
Du kannst ein ESP32 in Micro Python programmieren.

882
00:47:27,410 --> 00:47:29,410
Da hat das halt aber ganz andere Probleme.

883
00:47:29,410 --> 00:47:30,410
In Lua.

884
00:47:30,410 --> 00:47:31,410
Dafür gibt es kaum was.

885
00:47:31,410 --> 00:47:32,410
Es gibt eine Rust.

886
00:47:32,410 --> 00:47:33,410
Eine Rust Preview Build.

887
00:47:33,410 --> 00:47:34,410
Was auch nicht richtig funktioniert.

888
00:47:34,410 --> 00:47:37,430
Und es gibt sogar eine .NET Implementierung.

889
00:47:37,430 --> 00:47:38,430
Die auf dem ESP32 funktioniert.

890
00:47:38,430 --> 00:47:39,430
Dafür gibt es aber auch kaum Libraries.

891
00:47:39,430 --> 00:47:40,430
Ja.

892
00:47:40,430 --> 00:47:41,430
Also die einzig sinnvolle Variante ist halt leider.

893
00:47:41,430 --> 00:47:42,430
Dass man das in C++ programmiert.

894
00:47:42,430 --> 00:47:43,430
Ja.

895
00:47:43,430 --> 00:47:44,430
Ja.

896
00:47:44,430 --> 00:47:45,430
C++.

897
00:47:45,430 --> 00:47:46,430
Ja.

898
00:47:46,430 --> 00:47:47,430
Ja.

899
00:47:47,430 --> 00:47:48,430
Ja.

900
00:47:48,430 --> 00:47:49,430
Ja.

901
00:47:49,430 --> 00:47:50,430
Ja.

902
00:47:50,430 --> 00:47:51,430
Ja.

903
00:47:51,430 --> 00:47:52,430
Ja.

904
00:47:52,430 --> 00:47:53,430
Ja.

905
00:47:53,430 --> 00:47:54,430
Ja.

906
00:47:54,430 --> 00:47:55,430
Ja.

907
00:47:55,430 --> 00:47:56,430
Ja.

908
00:47:56,430 --> 00:47:57,430
Ja.

909
00:47:57,430 --> 00:47:58,430
Ja.

910
00:47:58,430 --> 00:47:59,430
Ja.

911
00:47:59,430 --> 00:48:00,430
Ja.

912
00:48:00,430 --> 00:48:01,430
Ja.

913
00:48:01,430 --> 00:48:02,430
Ja.

914
00:48:02,430 --> 00:48:03,430
C++20 mit Modules.

915
00:48:03,430 --> 00:48:05,430
Könnte die erste Version werden die haeltstens benutzbar wird.

916
00:48:05,430 --> 00:48:06,430
Wobei.

917
00:48:06,430 --> 00:48:09,430
Ich letzten schon wieder gesehen habe.

918
00:48:09,430 --> 00:48:10,430
Dass sie Sachen.

919
00:48:10,430 --> 00:48:12,430
Die andere Sprachen seit 15 Jahren haben.

920
00:48:12,430 --> 00:48:13,870
Und die sehr sinnvoll wouldn.

921
00:48:13,870 --> 00:48:14,870
Für C++.

922
00:48:14,870 --> 00:48:16,670
Schon wieder nicht machen werden.

923
00:48:16,670 --> 00:48:18,510
Oder vielleicht nicht machen werden oder sowas.

924
00:48:18,510 --> 00:48:20,030
Es gibt zum Beispiel für C++.

925
00:48:20,030 --> 00:48:22,350
Also ich muss das erst sagen.

926
00:48:22,350 --> 00:48:23,390
Es gibt in C Sharp.

927
00:48:23,390 --> 00:48:25,770
Da war eine der ersten Sprachen würde ich glauben sowas hatte.

928
00:48:25,770 --> 00:48:29,630
Also der eine der groesseren objektorientierten Sprachen die sowas hatte oder war hatte die

929
00:48:29,630 --> 00:48:36,810
möglichkeit dass man klassen erweitert ohne dass man sie vererbt also zum

930
00:48:36,810 --> 00:48:41,330
beispiel wenn ich jetzt hier den arduino string anlege so und das ding

931
00:48:41,330 --> 00:48:44,810
hat halt nur eine gewisse anzahl an methoden was man damit machen kann so

932
00:48:44,810 --> 00:48:51,170
und sagen wir mal ich möchte jetzt neben diesen to chart to double to into

933
00:48:51,170 --> 00:48:57,810
float noch ein to q chat haben so und ich kann die klasse nicht erweitern das

934
00:48:57,810 --> 00:49:02,630
funktioniert nicht das einzige was ich machen kann ist ich kann die klasse

935
00:49:02,630 --> 00:49:09,210
erben und eine neue klasse bauen wo ich dann to to q chat was bastele so in

936
00:49:09,210 --> 00:49:14,570
c sharp gibt es sowas wie extension methods das heißt ich kann statisch was

937
00:49:14,570 --> 00:49:18,210
programmieren was dann hier als erweiterung angezeigt wird ohne dass ich

938
00:49:18,210 --> 00:49:21,930
eine subklasse ableiten muss das ist für kleine sachen wie beispielsweise string

939
00:49:21,930 --> 00:49:26,070
externe ist das unglaublich praktisch und sorgt dafür dass man viel weniger

940
00:49:26,070 --> 00:49:27,630
klassen braucht und viel weniger

941
00:49:27,630 --> 00:49:27,790
klassen braucht und viel weniger

942
00:49:27,790 --> 00:49:35,200
akkur mover war wo was ist und das wollten sie in c++

943
00:49:35,200 --> 00:49:58,180
die tür w earrings zu betten 17

944
00:49:58,180 --> 00:49:59,060
hier secret

945
00:49:59,060 --> 00:49:59,420
hier drin G drm

946
00:49:59,420 --> 00:49:59,700
als abendISS

947
00:49:59,700 --> 00:50:03,100
mal wollen sie es so, mal wollen sie es so

948
00:50:03,100 --> 00:50:07,020
also ja, C++ halt

949
00:50:07,020 --> 00:50:09,400
so, also was wir brauchen ist

950
00:50:09,400 --> 00:50:11,240
für den Webserver, erstmal brauchen wir sowas wie

951
00:50:11,240 --> 00:50:11,660
Start

952
00:50:11,660 --> 00:50:14,860
ne

953
00:50:14,860 --> 00:50:17,500
wir machen das in eigenes C++

954
00:50:17,500 --> 00:50:19,580
wir sind mal so nett

955
00:50:19,580 --> 00:50:21,500
äh, Void, Start

956
00:50:21,500 --> 00:50:22,320
so

957
00:50:22,320 --> 00:50:26,020
wenn man das auch noch richtig schreiben könnte

958
00:50:26,020 --> 00:50:28,480
so, ähm

959
00:50:28,480 --> 00:50:30,240
da braucht man sowas wie einen Port

960
00:50:30,240 --> 00:50:39,530
ne, 8

961
00:50:39,530 --> 00:50:41,710
ne, äh, Moment, wie heißt das Ding nochmal

962
00:50:41,710 --> 00:50:43,690
äh, int 8

963
00:50:43,690 --> 00:50:50,630
uint 8, ähm

964
00:50:50,630 --> 00:50:52,530
uint, ne 16 brauchen wir

965
00:50:52,530 --> 00:50:52,970
uint

966
00:50:52,970 --> 00:50:56,570
warum ist das nicht drinne, was muss ich

967
00:50:56,570 --> 00:50:58,690
da importen für, was muss man

968
00:50:58,690 --> 00:51:00,230
da importen, dass das, erstmal

969
00:51:00,230 --> 00:51:02,470
erstmal Arduino inkluden

970
00:51:02,470 --> 00:51:04,290
das brauchen wir eh, kommen wir eh nicht drum rum

971
00:51:04,290 --> 00:51:06,670
uint 16

972
00:51:06,670 --> 00:51:07,790
haben wir es doch, oder

973
00:51:07,790 --> 00:51:09,870
uint

974
00:51:09,870 --> 00:51:11,790
8 haben wir

975
00:51:11,790 --> 00:51:13,790
haben wir auch 16

976
00:51:13,790 --> 00:51:14,790
16

977
00:51:14,790 --> 00:51:15,790
Port

978
00:51:15,790 --> 00:51:25,380
ja, ich hab meine Zweifel, dass Modules und so richtig funktionieren werden in C++

979
00:51:25,380 --> 00:51:27,580
weil eigentlich fast nichts in C++ so funktioniert

980
00:51:27,580 --> 00:51:29,580
wie man das erwartet

981
00:51:29,580 --> 00:51:30,580
das ist ja grad der Witz

982
00:51:30,580 --> 00:51:32,580
die haben relativ viel eingebaut auch die letzten Jahre

983
00:51:32,580 --> 00:51:34,580
aber es ist einfach so

984
00:51:34,580 --> 00:51:36,580
wir und an jeder Stelle anders

985
00:51:36,580 --> 00:51:42,390
dass man nicht, dass man nicht durchblickt

986
00:51:42,390 --> 00:51:44,390
ähm, to happen

987
00:51:44,390 --> 00:51:46,390
äh, to happen

988
00:51:46,390 --> 00:51:47,390
äh, to happen

989
00:51:47,390 --> 00:51:49,390
wobei Happen, kennt ihr Happen?

990
00:51:49,390 --> 00:51:51,390
Happen, das war früher so ein Eis

991
00:51:51,390 --> 00:51:53,390
Riesen Happen

992
00:51:53,390 --> 00:51:54,390
pff

993
00:51:54,390 --> 00:51:56,390
heißt heute Big Sandwich

994
00:51:56,390 --> 00:51:58,390
weiß nicht, wie ich da gerade drauf komme

995
00:51:58,390 --> 00:52:00,390
so, also

996
00:52:00,390 --> 00:52:02,390
ähm, to happen fragt

997
00:52:02,390 --> 00:52:07,390
hey, wenn ich nach circa 200 Stunden Java-Programmieren irgendwie Lust, Motivation verloren habe

998
00:52:07,390 --> 00:52:09,390
würdest du sagen, dass nichts für mich

999
00:52:09,390 --> 00:52:11,390
das ist kein Wunder, das ist ja auch Java

1000
00:52:11,390 --> 00:52:13,390
ähm

1001
00:52:13,390 --> 00:52:15,390
es kommt, es kommt drauf an

1002
00:52:15,390 --> 00:52:17,390
was sich da dran nervt

1003
00:52:17,390 --> 00:52:20,390
wenn es Java ist, probier mal eine andere Programmiersprache

1004
00:52:20,390 --> 00:52:23,390
probier mal was ordentliches

1005
00:52:23,390 --> 00:52:25,390
hehehe

1006
00:52:25,390 --> 00:52:27,390
wenn du was ähnliches wie Java willst

1007
00:52:27,390 --> 00:52:29,390
probier mal .NET Core

1008
00:52:29,390 --> 00:52:31,390
ich find .NET Core viel angenehmer an den meisten Stellen

1009
00:52:31,390 --> 00:52:33,390
ähm, oder aber

1010
00:52:33,390 --> 00:52:35,390
wenn es dir gar nichts ist und dir was dynamisches angucken willst

1011
00:52:35,390 --> 00:52:37,390
guck dir mal

1012
00:52:37,390 --> 00:52:40,390
äh, vielleicht sogar Frontend-Sachen mit JavaScript

1013
00:52:40,390 --> 00:52:42,390
HTML, CSS, JavaScript an

1014
00:52:42,390 --> 00:52:44,390
wenn das eher was ist, wenn du so visuell

1015
00:52:44,390 --> 00:52:46,390
was sehen möchtest, was passiert

1016
00:52:46,390 --> 00:52:48,390
generell finde ich zum Einstieg

1017
00:52:48,390 --> 00:52:51,390
die Kombination JavaScript, HTML, CSS

1018
00:52:51,390 --> 00:52:53,390
mittlerweile fast das Beste

1019
00:52:53,390 --> 00:52:55,390
es kommt ja, die Frage kommt ja fast jedes Mal

1020
00:52:55,390 --> 00:52:57,390
ähm

1021
00:52:57,390 --> 00:52:59,390
was ich empfehlen würde zum Einstieg

1022
00:52:59,390 --> 00:53:00,390
und ich sag dann immer

1023
00:53:00,390 --> 00:53:02,390
ja, wenn du das machen willst, nimm das

1024
00:53:02,390 --> 00:53:04,390
wenn du Windows Desktop machen willst, nimm das

1025
00:53:04,390 --> 00:53:06,390
ich, mittlerweile muss ich fast sagen

1026
00:53:06,390 --> 00:53:08,390
ich hab da meine, ich hab da meine Meinung ein bisschen geändert

1027
00:53:08,390 --> 00:53:11,390
ich denke, dass das Beste zum Einstieg

1028
00:53:11,390 --> 00:53:14,390
tatsächlich mittlerweile CSS, HTML, JavaScript ist

1029
00:53:14,390 --> 00:53:16,390
weil, man kommt eh nicht dran vorbei

1030
00:53:16,390 --> 00:53:17,390
egal ob du später Frontend-Sachen machst

1031
00:53:17,390 --> 00:53:20,390
ob du Backend-Sachen machst oder sonst was

1032
00:53:20,390 --> 00:53:23,390
bisschen HTML, JavaScript, CSS

1033
00:53:23,390 --> 00:53:26,390
was anderes kannst, du kommst nie dran vorbei

1034
00:53:26,390 --> 00:53:28,390
bisschen was musst du damit immer machen

1035
00:53:28,390 --> 00:53:30,390
bisschen dich damit auskennen

1036
00:53:30,390 --> 00:53:32,390
und zum Einstieg ist das halt ganz cool

1037
00:53:32,390 --> 00:53:34,390
weil du siehst, was passiert

1038
00:53:34,390 --> 00:53:36,390
wenn man mit irgendwelchen Kommandozeilen-Tool

1039
00:53:36,390 --> 00:53:37,390
oder sonst was anfängt

1040
00:53:37,390 --> 00:53:39,390
dann ist das so unspektakulär

1041
00:53:39,390 --> 00:53:41,390
ja, aber wenn man ne Webseite macht

1042
00:53:41,390 --> 00:53:43,390
wo dann auch dynamisch was passiert

1043
00:53:43,390 --> 00:53:45,390
wo sich dann vielleicht, äh, auch, äh

1044
00:53:45,390 --> 00:53:47,390
irgendwie was reagiert, wenn ich was anschaue

1045
00:53:47,390 --> 00:53:48,390
anklick und so

1046
00:53:48,390 --> 00:53:51,390
dann ist das, glaube ich, motivierender

1047
00:53:51,390 --> 00:53:53,390
für den Einsteiger, als wenn er sich irgendwelche

1048
00:53:53,390 --> 00:54:00,380
Kommandozeilen-Dinger anguckt

1049
00:54:00,380 --> 00:54:03,380
ja, ok, also, wir brauchen einen Port

1050
00:54:03,380 --> 00:54:05,380
und ich hab gedacht, wir sind mal, wir sind mal

1051
00:54:05,380 --> 00:54:07,380
ganz, ganz mutig

1052
00:54:07,380 --> 00:54:09,380
wir sind ganz mutig und implementieren auch noch

1053
00:54:09,380 --> 00:54:10,380
Basic Auth

1054
00:54:10,380 --> 00:54:12,380
ich hab Basic Auth noch nie implementiert

1055
00:54:12,380 --> 00:54:13,380
ich weiß nicht, wie das funktioniert

1056
00:54:13,380 --> 00:54:15,380
ich weiß es theoretisch

1057
00:54:15,380 --> 00:54:18,380
ähm, ich weiß, dass Basic-Authentifizierung

1058
00:54:18,380 --> 00:54:20,380
im Browser, das ist quasi

1059
00:54:20,380 --> 00:54:22,380
Username, Passwort, Base64 encoded

1060
00:54:23,380 --> 00:54:25,380
das ist Big-Brain-Kryptographie

1061
00:54:25,380 --> 00:54:27,380
wobei es soll ja gar nicht, gar nicht, äh

1062
00:54:27,380 --> 00:54:29,380
verschlüsselt sein

1063
00:54:29,380 --> 00:54:31,380
also Basic-Auth müssten wir eigentlich

1064
00:54:31,380 --> 00:54:33,380
müssten, müssten wir eigentlich hinkriegen

1065
00:54:33,380 --> 00:54:34,380
wenn der Rest funktioniert

1066
00:54:34,380 --> 00:54:36,380
Basic-Auth machst du

1067
00:54:36,380 --> 00:54:38,380
steht, steht nen, steht nen Header drinnen

1068
00:54:38,380 --> 00:54:40,380
im Request und der ist Base64 encoded

1069
00:54:40,380 --> 00:54:44,260
Username, Passwort, also

1070
00:54:44,260 --> 00:54:45,260
ja

1071
00:54:45,260 --> 00:54:48,260
deswegen auch übrigens wichtig, dass man das über HTTPS macht

1072
00:54:48,260 --> 00:54:49,260
so

1073
00:54:49,260 --> 00:54:51,260
dann brauchen wir noch ein paar Variablen

1074
00:54:51,260 --> 00:54:53,260
nämlich halt mein Passwort

1075
00:54:53,260 --> 00:54:54,260
und mein

1076
00:54:54,260 --> 00:54:56,260
User

1077
00:54:56,260 --> 00:54:57,260
und mein

1078
00:54:57,260 --> 00:54:58,260
Port

1079
00:54:58,260 --> 00:54:59,260
ne, Port brauchen wir nicht

1080
00:54:59,260 --> 00:55:01,260
gut, und jetzt schauen wir mal

1081
00:55:01,260 --> 00:55:03,260
das ist ne Sache, die mach ich fast nie

1082
00:55:03,260 --> 00:55:06,260
ähm, jetzt machen wir nämlich ein C++-File

1083
00:55:06,260 --> 00:55:09,260
weil ich hab im Vorfeld schon rausbekommen

1084
00:55:10,260 --> 00:55:12,260
ja, du hast recht, Herving

1085
00:55:12,260 --> 00:55:13,260
ich hab's ja auch schon gesagt

1086
00:55:13,260 --> 00:55:15,260
das hat ja mit Verschlüsselung eigentlich gar nichts zu tun

1087
00:55:15,260 --> 00:55:16,260
ähm

1088
00:55:16,260 --> 00:55:19,260
ich hab nämlich im Vorfeld schon rausbekommen

1089
00:55:19,260 --> 00:55:22,260
wir kommen rein mit Header-Only nicht hin

1090
00:55:22,260 --> 00:55:23,260
denn

1091
00:55:23,260 --> 00:55:25,260
wir müssen hier dieses ganze

1092
00:55:25,260 --> 00:55:27,260
TLS-Zeug includen

1093
00:55:27,260 --> 00:55:29,260
und wenn man das TLS-Zeug includet

1094
00:55:29,260 --> 00:55:32,260
geht das WLAN in Main kaputt

1095
00:55:32,260 --> 00:55:35,260
weil das irgendwelche Sachen umdefiniert

1096
00:55:35,260 --> 00:55:37,260
was halt, was halt Fail ist

1097
00:55:37,260 --> 00:55:38,260
so

1098
00:55:38,260 --> 00:55:39,260
das heißt

1099
00:55:39,260 --> 00:55:41,260
dadurch, dass ich hier das include

1100
00:55:41,260 --> 00:55:44,260
und ich hier TLS-Zeug include

1101
00:55:44,260 --> 00:55:46,260
includet er ja das hier

1102
00:55:46,260 --> 00:55:48,260
und hier an der Stelle dann auch das TLS-Zeug

1103
00:55:48,260 --> 00:55:50,260
und dadurch, dass das TLS-Zeug includet wird

1104
00:55:50,260 --> 00:55:52,260
bevor ich mein WiFi anlege

1105
00:55:52,260 --> 00:55:54,260
geht das WLAN kaputt

1106
00:55:55,260 --> 00:56:00,110
hat man das jetzt verstanden?

1107
00:56:00,110 --> 00:56:03,110
also wenn ich irgendwelche Header importiere

1108
00:56:03,110 --> 00:56:06,110
die was mit Netzwerksachen zu tun haben

1109
00:56:06,110 --> 00:56:08,110
bevor ich WLAN starte

1110
00:56:08,110 --> 00:56:09,110
geht das WLAN kaputt

1111
00:56:09,110 --> 00:56:11,110
deswegen muss ich dafür sorgen

1112
00:56:11,110 --> 00:56:13,110
dass das hier nicht included wird

1113
00:56:14,110 --> 00:56:15,110
das ist halt Fail, ja

1114
00:56:15,110 --> 00:56:16,110
so

1115
00:56:16,110 --> 00:56:18,110
und die einzige Variante wie man das machen kann

1116
00:56:18,110 --> 00:56:20,110
soweit ich rausbekommen hab ist

1117
00:56:21,110 --> 00:56:23,110
ähm, man muss ein C++-File anlegen

1118
00:56:23,110 --> 00:56:24,110
was genauso heißt wie das hier

1119
00:56:24,110 --> 00:56:26,110
und dann versteckt er alles

1120
00:56:26,110 --> 00:56:28,110
was man mit einem C++-File macht

1121
00:56:28,110 --> 00:56:30,110
vor dem Rest

1122
00:56:30,110 --> 00:56:32,110
ist halt ein bisschen doof

1123
00:56:32,110 --> 00:56:34,110
wenn man halt eine Sprache hat

1124
00:56:34,110 --> 00:56:36,110
die keine ordentlichen Exports-Module

1125
00:56:36,110 --> 00:56:37,110
oder irgendwas hat

1126
00:56:37,110 --> 00:56:38,110
wo sowas standardmäßig schon geht

1127
00:56:38,110 --> 00:56:39,110
und wo man sich auch mit Header

1128
00:56:39,110 --> 00:56:41,110
und irgendwelchen C++-Files rumärgern muss

1129
00:56:41,110 --> 00:56:43,110
also machen wir mal sowas hier

1130
00:56:43,110 --> 00:56:44,110
das hab ich noch nie gemacht

1131
00:56:44,110 --> 00:56:47,110
ich muss mal gucken ob das funktioniert

1132
00:56:47,110 --> 00:56:49,110
so, ähm

1133
00:56:49,110 --> 00:56:50,110
und wie

1134
00:56:50,110 --> 00:56:51,110
und wie geht das jetzt?

1135
00:56:51,110 --> 00:56:53,110
sag ich jetzt hier include

1136
00:56:54,110 --> 00:56:55,110
header

1137
00:56:55,110 --> 00:56:56,110
so

1138
00:56:56,110 --> 00:56:57,110
und dann

1139
00:56:57,110 --> 00:56:58,110
legt man

1140
00:56:59,110 --> 00:57:01,110
Moment, wie ging das?

1141
00:57:01,110 --> 00:57:04,830
so, ne

1142
00:57:04,830 --> 00:57:07,830
jetzt muss man nämlich den ganzen Kram nochmal schreiben

1143
00:57:07,830 --> 00:57:10,830
allerdings dann nicht mit einer Cluster dazwischen

1144
00:57:10,830 --> 00:57:12,830
weil, weil, weil

1145
00:57:12,830 --> 00:57:13,830
so ging das, ne

1146
00:57:13,830 --> 00:57:15,830
so, und jetzt bilden wir das Ganze mal

1147
00:57:15,830 --> 00:57:16,830
und gucken ob es funktioniert

1148
00:57:16,830 --> 00:57:23,260
ok, er muss erstmal wieder das ganze Ding neu bilden

1149
00:57:23,260 --> 00:57:24,260
mach mal

1150
00:57:24,260 --> 00:57:26,260
du programmierst ein Linux-File

1151
00:57:26,260 --> 00:57:27,260
korrekt

1152
00:57:27,260 --> 00:57:29,260
äh, wenn dich die Config interessiert

1153
00:57:30,260 --> 00:57:32,260
leider nicht auf dem ganz aktuellen Stand

1154
00:57:32,260 --> 00:57:33,260
ich muss mal wieder pushen

1155
00:57:33,260 --> 00:57:35,260
ich hab so ne Mini-Config

1156
00:57:35,260 --> 00:57:37,260
hab ich mal hier auf GitHub hochgeladen

1157
00:57:37,260 --> 00:57:44,180
kannst du dir die Config angucken

1158
00:57:44,180 --> 00:57:45,180
und da muss ich

1159
00:57:45,180 --> 00:57:48,180
ich hab ja äh, mein Notebook auf der Arbeit neu installiert

1160
00:57:48,180 --> 00:57:49,180
vor ein paar Tagen

1161
00:57:49,180 --> 00:57:52,180
und da hab ich genau die gleiche Config hier verwendet

1162
00:57:52,180 --> 00:57:54,180
und ich war begeistert wie gut das funktioniert

1163
00:57:54,180 --> 00:57:55,180
einfach Config

1164
00:57:55,180 --> 00:57:57,180
also

1165
00:57:57,180 --> 00:57:59,180
ich verwende das hierfür

1166
00:57:59,180 --> 00:58:01,180
also das ist ein Config Manager

1167
00:58:01,180 --> 00:58:03,180
Config File Manager

1168
00:58:03,180 --> 00:58:05,180
ähm, das kann ich vielleicht mal im Stream zeigen

1169
00:58:05,180 --> 00:58:06,180
aber nicht jetzt

1170
00:58:06,180 --> 00:58:09,180
ähm, da sagt man einfach nur mit diesem Config Manager

1171
00:58:09,180 --> 00:58:12,180
clone dieses Repo und verlinkt mir die ganzen Dateien

1172
00:58:12,180 --> 00:58:16,180
und ähm, dann legt er dir, dann clont er das Repo

1173
00:58:16,180 --> 00:58:18,180
verlinkt alle Dateien an die richtigen Stelle wo sie sein müssen

1174
00:58:18,180 --> 00:58:20,180
und ich hab mein Notebook neu gemacht

1175
00:58:20,180 --> 00:58:25,180
äh, mein, mein, mein, äh, Config File Repo geklont

1176
00:58:25,180 --> 00:58:27,180
und ein paar Pakete nachinstalliert

1177
00:58:27,180 --> 00:58:30,180
und instant war mein Notebook auf der Arbeit exakt so eingerichtet wie die VM daheim

1178
00:58:30,180 --> 00:58:31,180
richtig gut

1179
00:58:31,180 --> 00:58:36,790
äh, to happen, das ist kein Problem

1180
00:58:36,790 --> 00:58:37,790
du musst das nicht studiert haben

1181
00:58:37,790 --> 00:58:41,360
also ich hab den Kram auch nicht studiert

1182
00:58:41,360 --> 00:58:43,360
ich hab den Kram mal, ich hab mal ne Ausbildung gemacht

1183
00:58:43,360 --> 00:58:45,360
vor Urzeiten

1184
00:58:45,360 --> 00:58:47,360
aber das wichtigste ehrlich gesagt ist

1185
00:58:47,360 --> 00:58:49,360
dass man sich dafür interessiert

1186
00:58:49,360 --> 00:58:51,360
und wenn man sich für nen Bereich interessiert

1187
00:58:51,360 --> 00:58:53,360
wird man auch immer besser in diesem Bereich

1188
00:58:53,360 --> 00:58:55,360
und umso besser man in einem Bereich ist

1189
00:58:55,360 --> 00:58:57,360
umso größer sind die Chancen

1190
00:58:57,360 --> 00:58:59,360
dass man in diesem Bereich auch arbeiten kann

1191
00:58:59,360 --> 00:59:01,360
und umso besser wird man wieder

1192
00:59:01,360 --> 00:59:04,360
also es hat schon seine Vorteile

1193
00:59:04,360 --> 00:59:06,360
äh, wenn man

1194
00:59:06,360 --> 00:59:08,360
da hartnäckig halt

1195
00:59:08,360 --> 00:59:11,360
ist bei ner Sache die einen interessiert

1196
00:59:11,360 --> 00:59:15,700
es können die unterschiedlichsten Dinger sein

1197
00:59:15,700 --> 00:59:16,700
also ich mein

1198
00:59:16,700 --> 00:59:20,700
es muss nicht jeder JavaScript CSS HTML mögen

1199
00:59:20,700 --> 00:59:22,700
es muss auch nicht jeder

1200
00:59:22,700 --> 00:59:23,700
äh, Java Zeug mögen

1201
00:59:23,700 --> 00:59:26,700
nicht jeder Python AI Gedöns mögen

1202
00:59:26,700 --> 00:59:29,700
äh, oder irgendwelche .NET Geschichten oder sonst was

1203
00:59:29,700 --> 00:59:31,700
es hat jeder, es hat jeder ganz unterschiedliche Sachen

1204
00:59:31,700 --> 00:59:35,700
ähm, manch einer mag vielleicht irgendwelche Datenbank Design Geschichten

1205
00:59:35,700 --> 00:59:36,700
ja

1206
00:59:36,700 --> 00:59:40,700
manch einer mag halt vielleicht bisschen mehr die Design Ecke

1207
00:59:40,700 --> 00:59:42,700
also es gibt ja da tausend, tausend

1208
00:59:42,700 --> 00:59:44,700
äh, Richtungen was man machen kann

1209
00:59:44,700 --> 00:59:46,700
und wenn man das kann

1210
00:59:46,700 --> 00:59:48,700
wird man gebraucht

1211
00:59:48,700 --> 00:59:50,700
ja es gibt Leute die mögen, die mögen FORTRAN

1212
00:59:50,700 --> 00:59:52,700
ja es gibt auch Leute die mögen COBOL

1213
00:59:52,700 --> 00:59:55,700
mit mir hat einer ne Ausbildung gemacht

1214
00:59:55,700 --> 00:59:57,700
die äh, hat

1215
00:59:57,700 --> 00:59:59,700
ist jetzt im Bereich IBM Großrechner

1216
00:59:59,700 --> 01:00:01,700
und macht COBOL

1217
01:00:01,700 --> 01:00:03,700
im Jahr 2020, muss man sich mal vorstellen

1218
01:00:03,700 --> 01:00:05,700
aber die fand das toll

1219
01:00:05,700 --> 01:00:07,700
also wir müssen mal anfangen, sonst wird das ganze nix, ne

1220
01:00:07,700 --> 01:00:08,700
also

1221
01:00:08,700 --> 01:00:09,700
wo haben wir denn jetzt das Beispiel?

1222
01:00:09,700 --> 01:00:12,700
was, was für, was für Headers brauchen wir denn?

1223
01:00:12,700 --> 01:00:13,700
das hier alles, zack

1224
01:00:13,700 --> 01:00:15,700
alles mal includen, alles mal includen

1225
01:00:15,700 --> 01:00:16,700
so und das Problem ist jetzt

1226
01:00:16,700 --> 01:00:18,700
wenn ich das hier, hier include

1227
01:00:18,700 --> 01:00:20,700
ich zeig's euch einfach mal

1228
01:00:20,700 --> 01:00:22,700
dass ihr mir das auch glaubt

1229
01:00:22,700 --> 01:00:24,700
wenn ich das hier, hier include an der Stelle

1230
01:00:24,700 --> 01:00:26,700
und hochlade

1231
01:00:26,700 --> 01:00:28,700
auf den ESP

1232
01:00:28,700 --> 01:00:29,700
dann geht mein WLAN nicht mehr

1233
01:00:29,700 --> 01:00:31,700
werdet ihr gleich, werdet ihr gleich sehen

1234
01:00:31,700 --> 01:00:33,700
und selbst wenn's geht

1235
01:00:33,700 --> 01:00:36,700
ich weiß, dass es später nicht geht, weil ich hab's schon ausprobiert

1236
01:00:36,700 --> 01:00:38,700
oh, huge Upload, massive

1237
01:00:39,700 --> 01:00:46,140
zum Glück müssen wir das nicht so oft machen

1238
01:00:46,140 --> 01:00:48,140
äh, wie wechselst du die, äh

1239
01:00:48,140 --> 01:00:50,140
oh, äh, okay

1240
01:00:50,140 --> 01:00:56,880
ja

1241
01:00:56,880 --> 01:00:58,880
das hat funktioniert, das WLAN geht

1242
01:00:58,880 --> 01:01:03,510
aber das liegt bestimmt auch daran, weil ich hier nicht drauf zugreife

1243
01:01:03,510 --> 01:01:05,510
ich hab's, ich hab's ausprobiert im Vorfeld

1244
01:01:05,510 --> 01:01:07,510
und es ging nicht, es ging, es ging nicht

1245
01:01:07,510 --> 01:01:09,510
deswegen mach ich das jetzt mal

1246
01:01:09,510 --> 01:01:11,510
mach ich das jetzt hier mal wirklich mal weiter

1247
01:01:11,510 --> 01:01:13,510
weil ich weiß, dass früher oder später

1248
01:01:13,510 --> 01:01:15,510
wir machen einfach mal weiter, wir machen hier einfach mal so weiter

1249
01:01:15,510 --> 01:01:17,510
wenn's kaputt geht, kann ich's ja immer noch

1250
01:01:17,510 --> 01:01:21,210
kann ich's ja immer noch ändern

1251
01:01:21,210 --> 01:01:23,210
ähm, hier übrigens, das ist eine gute Frage

1252
01:01:23,210 --> 01:01:30,100
vom, wo ist es denn?

1253
01:01:30,100 --> 01:01:35,850
hä?

1254
01:01:35,850 --> 01:01:37,850
genau, das hier, was der Plopsbrusher geschrieben hat

1255
01:01:37,850 --> 01:01:41,850
also, es gibt wirklich so viele Bereiche, wo man was machen kann

1256
01:01:41,850 --> 01:01:43,850
also mal grundsätzlich gesagt

1257
01:01:43,850 --> 01:01:45,850
ähm, alles das, was ich jetzt aufgezählt hab

1258
01:01:45,850 --> 01:01:47,850
waren ja eigentlich nur, ähm

1259
01:01:47,850 --> 01:01:49,850
unter, unter, ähm

1260
01:01:49,850 --> 01:01:52,850
Punkte, es gibt ja noch komplett andere Bereiche

1261
01:01:52,850 --> 01:01:54,850
zum Beispiel das, was ich, was wir jetzt hier machen

1262
01:01:54,850 --> 01:01:56,850
fällt ja schon so ein bisschen in den Embedded-Bereich

1263
01:01:56,850 --> 01:01:57,850
also irgendwelche Microcontroller und, und so weiter

1264
01:01:57,850 --> 01:01:59,850
also irgendwelche Microcontroller und, und so weiter

1265
01:01:59,850 --> 01:02:01,850
und Kleinst...

1266
01:02:01,850 --> 01:02:02,850
Dinger, ja?

1267
01:02:02,850 --> 01:02:04,850
ähm, das ist nochmal ein ganz anderer Bereich für sich

1268
01:02:04,850 --> 01:02:07,850
dann gibt es irgendwelche Industriesteuerungssachen

1269
01:02:07,850 --> 01:02:09,850
und es gibt so viele Bereiche

1270
01:02:09,850 --> 01:02:12,850
und so viele unterschiedliche Gebiete

1271
01:02:12,850 --> 01:02:14,850
also man findet da was, was einem gefällt

1272
01:02:14,850 --> 01:02:16,850
sofern man sich dafür interessiert

1273
01:02:16,850 --> 01:02:18,850
und bei mir ist es so, ähm

1274
01:02:18,850 --> 01:02:21,850
ich hab gemerkt, ich mag das halt nicht so, wenn ich

1275
01:02:21,850 --> 01:02:24,850
am Stück immer die gleichen Sachen mach

1276
01:02:24,850 --> 01:02:27,850
zum Beispiel, wenn ich in einem Monat an einem Programm rumbastel

1277
01:02:27,850 --> 01:02:28,850
zum Beispiel, wenn ich in einem Monat an einem Programm rumbastel

1278
01:02:28,850 --> 01:02:30,850
dann hab ich dann irgendwann keinen Bock mehr drauf

1279
01:02:30,850 --> 01:02:32,850
und wenn ich dann nochmal einen Monat weiter dran rumbastel

1280
01:02:32,850 --> 01:02:34,850
dann fass ich es nie wieder an

1281
01:02:34,850 --> 01:02:35,850
das ist halt doof

1282
01:02:35,850 --> 01:02:38,850
deswegen hab ich immer so zwei, drei Sachen, wo ich dran rumbasteln kann

1283
01:02:38,850 --> 01:02:41,850
also sprich, wenn mir jetzt hier dieses Microcontroller

1284
01:02:41,850 --> 01:02:45,850
ähm, ESP32 C++ gebastelt auf den Keks geht

1285
01:02:45,850 --> 01:02:50,850
dann bastel ich weiter an meiner, ähm, Webcam

1286
01:02:50,850 --> 01:02:52,850
äh, nicht Webcam

1287
01:02:52,850 --> 01:02:54,850
nicht, nicht Webcam, äh

1288
01:02:54,850 --> 01:02:56,850
SecurityCam

1289
01:02:56,850 --> 01:02:58,850
äh, Sicherheits- also Überwachungscam

1290
01:02:58,850 --> 01:02:59,850
äh, Sicherheits- also Überwachungscam

1291
01:02:59,850 --> 01:03:00,850
Browser

1292
01:03:00,850 --> 01:03:01,850
ähm

1293
01:03:01,850 --> 01:03:02,850
Übersicht

1294
01:03:02,850 --> 01:03:04,850
ähm

1295
01:03:04,850 --> 01:03:07,850
Also meine Sicherheitskamera-Streaming-Sache

1296
01:03:07,850 --> 01:03:08,850
Also meine Sicherheitskamera-Streaming-Sache

1297
01:03:08,850 --> 01:03:09,850
mit Go

1298
01:03:09,850 --> 01:03:11,850
und das sind dann zwei komplett unterschiedliche Sachen

1299
01:03:11,850 --> 01:03:13,850
das hier ist jetzt reines, ekliges, abartiges C++

1300
01:03:13,850 --> 01:03:15,850
das hier ist jetzt reines, ekliges, abartiges C++

1301
01:03:15,850 --> 01:03:18,850
und das andere ist eine Mischung aus Go und C-Sharp

1302
01:03:18,850 --> 01:03:20,850
hast du dir eigentlich eine neue CAM bestellt, ja, genau die gleiche wie das letzte Mal

1303
01:03:20,850 --> 01:03:25,850
und ich hoffe die geht jetzt nicht kaputt weil ich hab sie bei Amazon umgetauscht

1304
01:03:25,850 --> 01:03:26,850
äh, wie wechselst du den Desktop ohne die VRM erst detachen zu mischen

1305
01:03:26,850 --> 01:03:27,850
äh, wie wechselst du den Desktop ohne die VRM erst detachen zu mischen

1306
01:03:27,850 --> 01:03:34,610
die tätschen zum ich die tätsche ich die tätsche nur schnell ich klicke ich sag

1307
01:03:34,610 --> 01:03:41,530
control alt und direkt danach control mit windows links und dann wieder rechts

1308
01:03:41,530 --> 01:03:48,240
und reinklicken ich die tätsche ich die tätsche nur schnell ich habe mir ein

1309
01:03:48,240 --> 01:03:51,980
makro gebaut für die für die für die maus hier kann man kannst du dir gut mit

1310
01:03:51,980 --> 01:03:57,220
mit der logitech software irgendwas anderen bauen dass du mit den seiten

1311
01:03:57,220 --> 01:04:03,320
tasten der maus das machen kannst ja angela ist ja auch zum kotzen

1312
01:04:03,320 --> 01:04:08,100
angela ist so ein over engineer das enterprise ding damit bin ich nie ich

1313
01:04:08,100 --> 01:04:10,420
will nicht sagen dass schlecht ist aber damit bin ich nie warm geworden

1314
01:04:10,420 --> 01:04:14,680
dann bin ich eigentlich schon am start eine stunde wir haben noch erst noch

1315
01:04:14,680 --> 01:04:21,520
keine zeile richtig programmiert exzellent so wie immer also so wir

1316
01:04:21,520 --> 01:04:25,000
legen jetzt jetzt hier mal an dass das nicht nicht kaputt geht wo ist man set

1317
01:04:25,000 --> 01:04:27,220
up muss man sehr ab jetzt man selber

1318
01:04:27,220 --> 01:04:38,560
start start port 4 4 3 3 user exzellent admin passwort 1 2 3 4 5 6 so heilig

1319
01:04:38,560 --> 01:04:45,820
secure und nur hier gesehen das passwort wenn sonst keiner sondern implementiert

1320
01:04:45,820 --> 01:04:49,120
fangen wir mal an also gucken wir uns mal das beispiel an den kram haben wir

1321
01:04:49,120 --> 01:04:54,460
inkludiert http response das ist so wäre es noch nicht gesehen hat so sieht eine

1322
01:04:54,460 --> 01:04:55,920
webseite aus wenn man die abruft

1323
01:04:57,220 --> 01:05:03,460
im klartext logitech lua ja das ist leider nur aber man kann das auch mit

1324
01:05:03,460 --> 01:05:10,540
diesem makro editor machen man muss das nicht direkt in lua machen so sieht eine

1325
01:05:10,540 --> 01:05:14,860
webseite eine billige webseite aus wenn man sie per http geschickt kriegt das

1326
01:05:14,860 --> 01:05:21,340
ist die antwort http status code 1 0 ok und dann gibt es content type text html

1327
01:05:21,340 --> 01:05:27,540
und jeder http requests nicht ja request auch und response auch die einzelnen

1328
01:05:27,540 --> 01:05:28,540
sachen enden immer mit http response die einzelnen sachen enden immer mit

1329
01:05:28,540 --> 01:05:28,640
http response die einzelnen sachen enden immer mit

1330
01:05:28,660 --> 01:05:30,800
http response die einzelnen sachen enden immer mit einem carriage return newThank you

1331
01:05:30,800 --> 01:05:49,180
decks Desde

1332
01:05:49,180 --> 01:05:53,980
neland

1333
01:05:53,980 --> 01:05:55,460
trailar

1334
01:05:55,460 --> 01:05:58,540
so was meinst du was was ist denn so die

1335
01:05:58,540 --> 01:06:00,340
Richtung, was dir gefällt und dann habe ich den Leuten was

1336
01:06:00,340 --> 01:06:02,400
empfohlen. Mittlerweile bin

1337
01:06:02,400 --> 01:06:04,580
ich anderer Ansicht. Das Beste

1338
01:06:04,580 --> 01:06:06,480
zum Einsteigen ist, wenn

1339
01:06:06,480 --> 01:06:08,580
man nicht schon ganz konkrete

1340
01:06:08,580 --> 01:06:10,400
Vorstellungen hat, was man machen will. Also wenn du

1341
01:06:10,400 --> 01:06:12,320
jetzt sagst, hey, ich würde

1342
01:06:12,320 --> 01:06:14,320
gerne irgendwelche Microcontroller programmieren

1343
01:06:14,320 --> 01:06:16,460
oder ich würde gerne Windows Desktop Software

1344
01:06:16,460 --> 01:06:17,580
machen oder was auch immer.

1345
01:06:18,300 --> 01:06:20,200
Also wenn du noch keine genauen Vorstellungen hast,

1346
01:06:20,600 --> 01:06:22,440
dann ist das Beste meiner Meinung

1347
01:06:22,440 --> 01:06:24,220
nach aktuell, man fängt mit

1348
01:06:24,220 --> 01:06:26,700
dem Standardgespann

1349
01:06:26,700 --> 01:06:28,580
aus JavaScript, HTML und CSS

1350
01:06:28,580 --> 01:06:30,500
an. Einfach, weil

1351
01:06:30,500 --> 01:06:31,600
man sieht, was passiert.

1352
01:06:33,300 --> 01:06:34,420
Und weil man an

1353
01:06:34,420 --> 01:06:36,860
Frontend-Geschiss

1354
01:06:36,860 --> 01:06:38,300
eh nicht vorbeikommt.

1355
01:06:38,760 --> 01:06:40,420
Also ein bisschen HTML, JavaScript,

1356
01:06:40,660 --> 01:06:42,460
CSS muss man immer machen. Immer.

1357
01:06:42,840 --> 01:06:44,500
Guck dir mal, ich bastel, ich versuche

1358
01:06:44,500 --> 01:06:46,260
hier einen Web-Server zu basteln, der

1359
01:06:46,260 --> 01:06:47,800
statisches HTML ausliefert.

1360
01:06:48,760 --> 01:06:50,400
So, das HTML

1361
01:06:50,400 --> 01:06:51,680
muss doch aber irgendwas machen.

1362
01:06:52,040 --> 01:06:54,060
Du hast im Endeffekt ein bisschen HTML und ein bisschen

1363
01:06:54,060 --> 01:06:56,300
JavaScript da drin, dass die Seite dann funktioniert,

1364
01:06:56,300 --> 01:06:58,260
die ich übrigens nicht inline hier in mein

1365
01:06:58,260 --> 01:06:59,720
C++-Dokument schreiben würde.

1366
01:07:00,700 --> 01:07:02,280
Brauchst du dann wieder. Also du kommst

1367
01:07:02,280 --> 01:07:03,640
im Prinzip nicht drum herum.

1368
01:07:05,400 --> 01:07:06,240
Deswegen bin ich der Meinung,

1369
01:07:06,280 --> 01:07:08,220
das Beste, was man machen kann, erstmal zum Einstieg ist

1370
01:07:08,220 --> 01:07:10,460
JavaScript, HTML, CSS.

1371
01:07:11,360 --> 01:07:12,720
So, also, fangen wir mal an.

1372
01:07:13,700 --> 01:07:14,700
Dieses Beispiel

1373
01:07:14,700 --> 01:07:16,200
das habe ich ausprobiert,

1374
01:07:16,260 --> 01:07:18,040
das funktioniert. So, Start.

1375
01:07:18,800 --> 01:07:19,620
Also, bleib mal.

1376
01:07:19,980 --> 01:07:22,220
Ich kopiere mir das gerade mal und wir schmeißen mal raus, was wir

1377
01:07:22,220 --> 01:07:25,200
nicht brauchen. So,

1378
01:07:25,200 --> 01:07:27,280
also, komischer

1379
01:07:27,280 --> 01:07:29,200
Name für ein SSL-Server brauchen wir

1380
01:07:29,200 --> 01:07:33,560
schon mal nicht. Moment.

1381
01:07:36,160 --> 01:07:37,740
Ich mach mal kurz auf der anderen Seite was auf,

1382
01:07:37,800 --> 01:07:39,400
dass ich das im zweiten Monitor abgucken kann.

1383
01:07:39,900 --> 01:07:41,540
Da muss ich nicht ganz so viel

1384
01:07:41,540 --> 01:07:43,860
hin und her switchen.

1385
01:07:51,340 --> 01:07:52,340
Oh, wo ist es?

1386
01:07:56,620 --> 01:07:57,020
Okay.

1387
01:07:58,740 --> 01:07:59,940
So, genau. Also, wir müssen

1388
01:07:59,940 --> 01:08:01,920
das Ganze starten. Als erstes

1389
01:08:01,920 --> 01:08:03,900
müssen wir noch sagen, dass

1390
01:08:03,900 --> 01:08:05,960
ups. So, das

1391
01:08:05,960 --> 01:08:07,900
Passwort, was hier übergeben wird, speichern

1392
01:08:07,900 --> 01:08:09,000
wir hier oben im Passwort drin.

1393
01:08:09,740 --> 01:08:11,900
Und der User, der hier übergeben wird, speichern wir

1394
01:08:11,900 --> 01:08:13,800
den User, dass wir da später Basic-Auth mitmachen

1395
01:08:13,800 --> 01:08:15,740
können. Und dann legen wir mal

1396
01:08:15,740 --> 01:08:17,900
unseren Server an. Also,

1397
01:08:18,420 --> 01:08:19,020
äh,

1398
01:08:19,620 --> 01:08:20,820
NetContext, Listen,

1399
01:08:20,900 --> 01:08:23,940
das werden wir

1400
01:08:23,940 --> 01:08:25,080
wahrscheinlich brauchen.

1401
01:08:26,460 --> 01:08:27,860
Wobei, ich tue jetzt mal nicht so, als hätte

1402
01:08:27,860 --> 01:08:29,860
ich keine Ahnung. Wie gesagt, ich habe das schon ein bisschen ausprobiert.

1403
01:08:30,280 --> 01:08:31,820
Die Client-Geschichte brauchen wir

1404
01:08:31,820 --> 01:08:33,400
nicht und den Kram können wir auch wegschmeißen.

1405
01:08:34,140 --> 01:08:35,860
Ähm, so. Also, was das

1406
01:08:35,860 --> 01:08:37,720
hier macht, äh, nur mal

1407
01:08:37,720 --> 01:08:39,780
kurz zur Erklärung.

1408
01:08:40,380 --> 01:08:41,560
Äh, EmberTLS,

1409
01:08:41,560 --> 01:08:43,960
ist eine, äh, TLS

1410
01:08:43,960 --> 01:08:45,520
oder SSL,

1411
01:08:45,640 --> 01:08:47,540
HTTPS, wie auch immer man das nennen mag,

1412
01:08:48,100 --> 01:08:49,520
äh, Implementierung für

1413
01:08:49,520 --> 01:08:51,700
Microcontroller, also für so, so Krams.

1414
01:08:52,360 --> 01:08:52,780
Ähm,

1415
01:08:54,720 --> 01:08:55,600
ihr kennt wahrscheinlich

1416
01:08:55,600 --> 01:08:56,720
eher OpenSSL.

1417
01:08:57,660 --> 01:08:59,220
OpenSSL ist die fette Variante,

1418
01:08:59,600 --> 01:09:01,240
die so ziemlich 90% allen

1419
01:09:01,240 --> 01:09:03,200
verschlüsselten Traffic im Internet, äh,

1420
01:09:03,280 --> 01:09:05,460
abhandelt. Das ist so

1421
01:09:05,460 --> 01:09:07,520
der Standard schlechthin. Gibt's ein paar Forks

1422
01:09:07,520 --> 01:09:09,880
von, was gibt's in der OpenSSL, LibreSSL

1423
01:09:09,880 --> 01:09:11,540
und, und FreeSSL,

1424
01:09:11,560 --> 01:09:13,220
und, und, ach, alle möglichen Dinger.

1425
01:09:13,520 --> 01:09:15,260
Die haben sich ja wieder geforkt bis zum Gegner, äh,

1426
01:09:15,880 --> 01:09:17,780
gegabelt bis, bis zum Gegner nicht mehr.

1427
01:09:18,560 --> 01:09:19,900
Ähm, zumindest OpenSSL

1428
01:09:19,900 --> 01:09:21,580
ist eigentlich so mit, mit das bekannteste.

1429
01:09:21,820 --> 01:09:23,560
Ja, also sprich, wenn ihr, äh,

1430
01:09:24,760 --> 01:09:25,760
irgendwelche Software

1431
01:09:25,760 --> 01:09:27,040
verwendet, die

1432
01:09:27,040 --> 01:09:29,460
HTTPS verwendet, da ist

1433
01:09:29,460 --> 01:09:31,860
garantiert das meiste OpenSSL

1434
01:09:31,860 --> 01:09:32,080
von.

1435
01:09:33,400 --> 01:09:35,440
Ich bin mir gar nicht sicher, was Microsoft macht.

1436
01:09:35,540 --> 01:09:37,760
Microsoft hat unter Windows wahrscheinlich was eigenes.

1437
01:09:38,520 --> 01:09:39,640
Allerdings, äh, auf

1438
01:09:39,640 --> 01:09:41,400
der Webserver-Seite, also sprich, wenn ihr was

1439
01:09:41,560 --> 01:09:42,960
abruft, ist das zu

1440
01:09:42,960 --> 01:09:45,720
90 Prozent, wenn, wenn nicht, wenn nicht

1441
01:09:45,720 --> 01:09:48,080
sogar zu 95 Prozent OpenSSL.

1442
01:09:49,700 --> 01:09:51,520
Und EmberTLS ist quasi

1443
01:09:51,520 --> 01:09:53,400
sowas ähnliches wie OpenSSL,

1444
01:09:53,740 --> 01:09:55,600
bloß ein bisschen ressourcensparender

1445
01:09:55,600 --> 01:09:57,920
für hier kleine, kleine Microcontroller.

1446
01:09:58,980 --> 01:09:59,680
So, deswegen müssen wir das

1447
01:09:59,680 --> 01:10:01,040
ganze EmberTLS-Zeug

1448
01:10:01,040 --> 01:10:03,060
importieren, dass das funktioniert.

1449
01:10:03,880 --> 01:10:05,140
So, ähm,

1450
01:10:05,620 --> 01:10:07,840
was man jetzt machen muss, ist, die Initialisierung

1451
01:10:07,840 --> 01:10:08,880
ist ein bisschen eklig.

1452
01:10:09,920 --> 01:10:11,360
Ähm, deswegen copy-paste ich jetzt auch zum

1453
01:10:11,360 --> 01:10:12,980
größten Teil das Beispiel und gut ist.

1454
01:10:13,720 --> 01:10:15,340
Ja, man muss hier irgendwelche Kontexte

1455
01:10:15,340 --> 01:10:16,980
anlegen, man muss hier irgendwie, braucht,

1456
01:10:17,780 --> 01:10:19,320
muss, muss jetzt eigentlich nicht

1457
01:10:19,320 --> 01:10:21,440
sonderlich großartig interessieren, weil ich hab's im Vorfeld

1458
01:10:21,440 --> 01:10:23,360
schon ausprobiert, das ist alles richtig so und das

1459
01:10:23,360 --> 01:10:25,660
klappt. Ich hab nämlich, äh,

1460
01:10:25,700 --> 01:10:27,420
im Vorfeld schon ein bisschen gebastelt und

1461
01:10:27,420 --> 01:10:29,240
hab mir grad auf dem zweiten Bildschirm das

1462
01:10:29,240 --> 01:10:31,320
Beispiel aufgemacht, was ich schon ein bisschen gebastelt

1463
01:10:31,320 --> 01:10:33,300
hab. Da muss ich jetzt nicht komplett planlos hier rum

1464
01:10:33,300 --> 01:10:35,060
tippen. Übrigens, eine Sache,

1465
01:10:35,400 --> 01:10:36,280
die mir gerade auffällt,

1466
01:10:37,540 --> 01:10:39,100
ähm, das will ich gar nicht so,

1467
01:10:39,860 --> 01:10:41,320
nämlich, config,

1468
01:10:41,360 --> 01:10:41,840
config-setting,

1469
01:10:43,360 --> 01:10:44,860
ich will, ähm,

1470
01:10:45,380 --> 01:10:47,440
Tabs, ich will zwei Tabs, nicht vier,

1471
01:10:47,600 --> 01:10:49,040
Editor-Tabs, zwei.

1472
01:10:50,000 --> 01:10:50,240
Ja.

1473
01:10:51,860 --> 01:10:52,380
Äh,

1474
01:10:53,480 --> 01:10:58,620
Spaces, äh,

1475
01:11:00,420 --> 01:11:02,360
wie sag ich dem denn jetzt, dass er reformattet,

1476
01:11:03,100 --> 01:11:04,440
dass er die Spaces neu einrückt,

1477
01:11:04,520 --> 01:11:08,490
wie sag ich ihm das denn jetzt? Ähm,

1478
01:11:12,870 --> 01:11:14,130
äh, einfach mal

1479
01:11:14,130 --> 01:11:20,640
zumachen, vier Spaces,

1480
01:11:21,740 --> 01:11:24,600
äh,

1481
01:11:24,600 --> 01:11:25,380
äh, ja,

1482
01:11:30,040 --> 01:11:31,680
wie sag ich dem jetzt, dass ich zwei Spaces haben will?

1483
01:11:32,540 --> 01:11:33,700
Wer kann denn vier Spaces?

1484
01:11:34,340 --> 01:11:35,500
Das ist wie das Code, ja.

1485
01:11:36,960 --> 01:11:38,220
Ich will zwei Spaces.

1486
01:11:39,420 --> 01:11:40,200
Ich hab's doch hier jetzt auch schon

1487
01:11:40,200 --> 01:11:41,940
eingestellt. Ah, Moment,

1488
01:11:42,060 --> 01:11:43,960
Tab-Size, lul, ich hab das falsche

1489
01:11:43,960 --> 01:11:46,380
in dem Moment. Ne, doch, ist doch richtig.

1490
01:11:48,900 --> 01:11:49,260
Indent,

1491
01:11:52,140 --> 01:11:53,080
was rechts unten,

1492
01:11:54,080 --> 01:11:55,260
hab ich doch grad schon.

1493
01:11:56,480 --> 01:11:57,800
Ja, ja, aber wie stell ich das um?

1494
01:11:58,660 --> 01:11:59,400
Aber wie stell ich das um?

1495
01:12:11,260 --> 01:12:12,980
Okay, wie, wie, wie reformate

1496
01:12:12,980 --> 01:12:16,280
ich das? Format?

1497
01:12:16,300 --> 01:12:23,710
Was, was klickt dort auf

1498
01:12:23,710 --> 01:12:24,770
Using Spaces?

1499
01:12:26,630 --> 01:12:27,110
Ah,

1500
01:12:27,510 --> 01:12:29,570
ah, ah, ja,

1501
01:12:30,050 --> 01:12:31,910
okay, easy. Das hätte ich jetzt ewig

1502
01:12:31,910 --> 01:12:33,350
gesucht, bis ich das gefunden hätte, ey.

1503
01:12:34,690 --> 01:12:35,850
Okay, ähm,

1504
01:12:35,950 --> 01:12:37,790
wie gesagt, ich tipp das jetzt aus meinem

1505
01:12:37,790 --> 01:12:39,670
eingebastelten Beispiel ein bisschen ab.

1506
01:12:39,990 --> 01:12:41,750
Übrigens, wir können an der Stelle hier ein neues

1507
01:12:41,750 --> 01:12:43,750
C++-Feature verwenden, was

1508
01:12:43,750 --> 01:12:45,010
wieder auf die absolut

1509
01:12:45,010 --> 01:12:47,810
un-, also abwegigste Art und Weise

1510
01:12:47,810 --> 01:12:49,290
überhaupt implementiert wurde,

1511
01:12:49,530 --> 01:12:49,970
nämlich,

1512
01:12:49,970 --> 01:12:52,130
man kann jetzt

1513
01:12:52,130 --> 01:12:53,470
das hier machen, das ist neu,

1514
01:12:53,850 --> 01:12:56,110
das war, ich glaub, C++14

1515
01:12:56,110 --> 01:12:57,810
oder so, ähm,

1516
01:12:58,570 --> 01:12:59,690
wenn man, also,

1517
01:13:01,110 --> 01:13:02,030
okay, ich flame

1518
01:13:02,030 --> 01:13:04,010
jetzt nicht C++, warum sie das so gemacht haben, ja,

1519
01:13:04,490 --> 01:13:06,310
aber was das macht, ist folgendes,

1520
01:13:06,650 --> 01:13:08,370
wenn man hier einen Parameter

1521
01:13:08,370 --> 01:13:08,930
übergibt

1522
01:13:08,930 --> 01:13:12,090
und man den Parameter nirgendswo

1523
01:13:12,090 --> 01:13:13,730
anders mehr verwendet, dann,

1524
01:13:13,930 --> 01:13:16,170
Moment, das sind

1525
01:13:16,170 --> 01:13:19,880
Tabs, lul,

1526
01:13:19,880 --> 01:13:22,040
äh, und wenn man den Parameter nirgendswo

1527
01:13:22,040 --> 01:13:23,040
anders verwendet,

1528
01:13:23,800 --> 01:13:26,220
dann kann man dem-, kann man hiermit quasi dem-,

1529
01:13:26,220 --> 01:13:27,920
ich sag mal, keine Ahnung, wie es unter der Haube funktioniert,

1530
01:13:27,980 --> 01:13:29,600
ich sag jetzt mal dem Compiler sagen, dass

1531
01:13:29,600 --> 01:13:31,900
er quasi den-, diesen-, diese

1532
01:13:31,900 --> 01:13:34,000
Variable hier nicht kopieren

1533
01:13:34,000 --> 01:13:36,020
muss, von da nach da, sondern

1534
01:13:36,020 --> 01:13:38,020
quasi einfach umlinken kann

1535
01:13:38,020 --> 01:13:39,600
intern, quasi verschieben kann.

1536
01:13:40,060 --> 01:13:41,940
Also sprich, weil ich

1537
01:13:41,940 --> 01:13:44,080
weiß, dass das hier unten nicht mehr verwendet wird,

1538
01:13:44,420 --> 01:13:45,960
kann ich einfach sagen, anstatt, dass du

1539
01:13:45,960 --> 01:13:47,940
jetzt User von hier

1540
01:13:47,940 --> 01:13:50,040
nach User hier oben kopierst,

1541
01:13:50,400 --> 01:13:52,020
kannst du einfach quasi das, den Speicher,

1542
01:13:52,040 --> 01:13:53,920
Bereich umlinken. Du kannst einfach

1543
01:13:53,920 --> 01:13:55,660
das User da drauf zeigen lassen.

1544
01:13:57,100 --> 01:13:57,280
Ja,

1545
01:13:57,420 --> 01:13:58,880
ne, ja,

1546
01:14:01,800 --> 01:14:02,660
exakt.

1547
01:14:04,140 --> 01:14:05,120
Aber vor allem,

1548
01:14:05,480 --> 01:14:06,440
warum denn so,

1549
01:14:07,080 --> 01:14:09,240
Standard Move, ich mein, äh, Rust

1550
01:14:09,240 --> 01:14:10,540
macht das übrigens auch so,

1551
01:14:11,740 --> 01:14:13,120
allerdings nicht mit Standard Move,

1552
01:14:13,680 --> 01:14:14,820
Rust hat quasi

1553
01:14:14,820 --> 01:14:16,360
das, ähm,

1554
01:14:17,820 --> 01:14:19,480
eingebaut, dass man solche Sachen

1555
01:14:19,480 --> 01:14:21,020
hier machen kann, und

1556
01:14:21,020 --> 01:14:23,340
dann ist das relativ offensichtlich,

1557
01:14:23,420 --> 01:14:25,420
wie man es benutzen muss, also das benutzt man

1558
01:14:25,420 --> 01:14:27,420
dann immer gleich, und hier haben sie sich

1559
01:14:27,420 --> 01:14:29,420
gedacht, ach nee, wir bauen irgendwie im Standard-Namespray

1560
01:14:29,420 --> 01:14:31,420
so eine Magic-Methode ein, die

1561
01:14:31,420 --> 01:14:33,420
das macht. Typisch T...

1562
01:14:33,420 --> 01:14:35,420
Moment, Leute.

1563
01:14:35,420 --> 01:14:37,420
Muss mal kurz

1564
01:14:37,420 --> 01:14:39,420
Timon, so, weiter geht's. Also,

1565
01:14:39,420 --> 01:14:41,420
ähm, das ist jetzt, äh,

1566
01:14:41,420 --> 01:14:43,420
ergeblich viel mehr und krassere

1567
01:14:43,420 --> 01:14:45,420
Performance und so, nicht, dass wir das bräuchten,

1568
01:14:45,420 --> 01:14:47,420
aber das ist jetzt ein neues T++-Feature, also können wir's mal

1569
01:14:47,420 --> 01:14:49,420
verwenden. Gut, weiter geht's. Ähm,

1570
01:14:49,420 --> 01:14:51,420
was wir jetzt brauchen,

1571
01:14:51,420 --> 01:14:53,380
ist, einmal eine, ähm,

1572
01:14:53,380 --> 01:14:55,380
einen EmbedTLS-Net-Kontext.

1573
01:14:55,380 --> 01:14:57,380
Das ist quasi

1574
01:14:57,380 --> 01:14:59,380
der Port,

1575
01:14:59,380 --> 01:15:01,380
an dem der Server

1576
01:15:01,380 --> 01:15:03,380
später lauscht, wenn man's so will.

1577
01:15:03,380 --> 01:15:05,380
Was wird hier gebastelt? Ein Webserver,

1578
01:15:05,380 --> 01:15:07,380
also ein, äh,

1579
01:15:07,380 --> 01:15:09,380
SSL-fähiger Webserver,

1580
01:15:09,380 --> 01:15:11,380
der auf einem ESP32

1581
01:15:11,380 --> 01:15:13,380
läuft, und alle ESP32-

1582
01:15:13,380 --> 01:15:15,380
Kerne verwendet, also quasi

1583
01:15:15,380 --> 01:15:17,380
maximal vier Threads, weil dann der RAM all ist

1584
01:15:17,380 --> 01:15:19,380
mit SSL, oder vier, fünf,

1585
01:15:19,380 --> 01:15:21,380
fünf. Maximal fünf Verbindungen

1586
01:15:21,380 --> 01:15:23,380
gleichzeitig hab ich ausprobiert, vorhin

1587
01:15:23,380 --> 01:15:25,380
schafft er, weil dann ist der RAM

1588
01:15:25,380 --> 01:15:27,380
all. SSL braucht halt

1589
01:15:27,380 --> 01:15:29,380
ein bisschen mehr Speicher als normales HTTP.

1590
01:15:29,380 --> 01:15:31,380
Ja, 14, die, die

1591
01:15:31,380 --> 01:15:33,380
Uhrzeit ist falsch, der NTP-Server

1592
01:15:33,380 --> 01:15:35,380
macht komische Dinger und meine Zeitzonen-Settings

1593
01:15:35,380 --> 01:15:37,380
sind fail. Vielleicht ist

1594
01:15:37,380 --> 01:15:39,380
das aber einfach nur ein Reprodcast.

1595
01:15:39,380 --> 01:15:41,380
Oh Mann.

1596
01:15:41,380 --> 01:15:43,380
Ich hab einfach nur

1597
01:15:43,380 --> 01:15:46,880
Chat overlaid. Man weiß es nicht.

1598
01:15:46,880 --> 01:15:48,880
Man weiß es nicht.

1599
01:15:48,880 --> 01:15:50,880
Also das hier ist quasi

1600
01:15:50,880 --> 01:15:52,880
der Port, an dem der Server

1601
01:15:52,880 --> 01:15:54,880
lauscht, also quasi bei uns

1602
01:15:54,880 --> 01:15:56,880
443.

1603
01:15:56,880 --> 01:15:58,880
So. Ähm,

1604
01:15:58,880 --> 01:16:00,880
so. Das, äh, legen wir jetzt

1605
01:16:00,880 --> 01:16:02,880
an. Dann muss man

1606
01:16:02,880 --> 01:16:07,980
sagen, äh,

1607
01:16:07,980 --> 01:16:09,980
embed tls

1608
01:16:09,980 --> 01:16:11,980
net init,

1609
01:16:11,980 --> 01:16:15,550
und dann muss man den Kram hier

1610
01:16:15,550 --> 01:16:17,550
übergeben, weil,

1611
01:16:17,550 --> 01:16:19,550
weil c und c++,

1612
01:16:19,550 --> 01:16:21,550
so, und, ähm,

1613
01:16:21,550 --> 01:16:23,550
nachdem wir den

1614
01:16:23,550 --> 01:16:25,550
Kram nicht,

1615
01:16:25,550 --> 01:16:27,550
also diese Variable hier nicht

1616
01:16:27,550 --> 01:16:29,550
nur einmal brauchen, sondern

1617
01:16:29,550 --> 01:16:31,550
die komplette Zeit, während wir

1618
01:16:31,550 --> 01:16:33,550
den Server laufen haben,

1619
01:16:33,550 --> 01:16:35,550
kopieren wir die mal hier weg

1620
01:16:35,550 --> 01:16:37,550
und kopieren die in die Klasse

1621
01:16:37,550 --> 01:16:40,930
rein, nämlich da oben hin.

1622
01:16:40,930 --> 01:16:42,930
Da.

1623
01:16:42,930 --> 01:16:46,430
Da kopieren wir das jetzt hin.

1624
01:16:46,430 --> 01:16:51,790
Dann funktioniert das nämlich auch. Ähm,

1625
01:16:51,790 --> 01:16:53,790
und jetzt können wir gucken, dass

1626
01:16:53,790 --> 01:16:55,790
das Ding an dem Port lauscht. Da brauchen wir jetzt

1627
01:16:55,790 --> 01:16:57,790
embed tls

1628
01:16:57,790 --> 01:16:59,790
ssl config

1629
01:16:59,790 --> 01:17:03,680
init,

1630
01:17:03,680 --> 01:17:05,680
und damit das funktioniert, müssen wir die jetzt erstmal

1631
01:17:05,680 --> 01:17:07,680
ne standard config, also erstmal ne config

1632
01:17:07,680 --> 01:17:09,680
anlesen, wie er die, also,

1633
01:17:09,680 --> 01:17:11,680
was er alles einstellen soll an dem System.

1634
01:17:11,680 --> 01:17:13,680
Und das muss ich jetzt mal kurz

1635
01:17:13,680 --> 01:17:21,860
abgucken. Copy-paste

1636
01:17:21,860 --> 01:17:23,860
mir das jetzt nämlich einfach.

1637
01:17:23,860 --> 01:17:25,860
Lul.

1638
01:17:25,860 --> 01:17:27,860
Copy-paste mir das jetzt einfach, dann muss ich den Kram nämlich

1639
01:17:27,860 --> 01:17:29,860
nicht nochmal tippen. So. Den ganzen

1640
01:17:29,860 --> 01:17:31,860
Mist brauchen wir jetzt gleich. So, also

1641
01:17:31,860 --> 01:17:33,860
wir müssen ne ssl config anlegen.

1642
01:17:33,860 --> 01:17:37,420
Ups, wenn ich das jetzt richtig machen würde.

1643
01:17:37,420 --> 01:17:41,440
Ähm,

1644
01:17:41,440 --> 01:17:43,440
da können wir dann später so Sachen konfigurieren,

1645
01:17:43,440 --> 01:17:45,440
wie welcher timeout

1646
01:17:45,440 --> 01:17:47,440
bei connections und sowas in der Richtung. Also

1647
01:17:47,440 --> 01:17:49,440
sprich, ab wann bricht der connections

1648
01:17:49,440 --> 01:17:51,440
ab, wenn keine Daten mehr kommen und sowas.

1649
01:17:51,440 --> 01:17:53,440
Ist ganz nützlich, weil ich glaub da standard,

1650
01:17:53,440 --> 01:17:55,440
also nagelt mich jetzt nicht drauf fest.

1651
01:17:55,440 --> 01:17:57,440
Ich bin mir da jetzt nicht ganz

1652
01:17:57,440 --> 01:17:59,440
sicher. Also wie gesagt,

1653
01:17:59,440 --> 01:18:01,440
nagelt mich nicht drauf fest. Ich glaub

1654
01:18:01,440 --> 01:18:03,440
standard http

1655
01:18:03,440 --> 01:18:05,440
timeout sind glaub ich 5 Minuten.

1656
01:18:05,440 --> 01:18:07,440
Oder 15 Minuten.

1657
01:18:07,440 --> 01:18:09,440
Ehrlich gesagt weiß ich aus dem Kopf

1658
01:18:09,440 --> 01:18:17,230
was. Ok, request hat 30 Minuten.

1659
01:18:17,230 --> 01:18:19,230
Äh, was ist, was ist default?

1660
01:18:19,230 --> 01:18:21,230
5 Minuten?

1661
01:18:21,230 --> 01:18:28,450
Keine Ahnung. Zumindest zu lang.

1662
01:18:28,450 --> 01:18:30,450
Zumindest zu lang, weil

1663
01:18:30,450 --> 01:18:32,450
wie gesagt, das Ding hat nicht

1664
01:18:32,450 --> 01:18:34,450
viel RAM. Ich glaub, ich glaub man hat

1665
01:18:34,450 --> 01:18:36,450
ungefähr

1666
01:18:36,450 --> 01:18:38,450
80 GB oder so

1667
01:18:38,450 --> 01:18:40,450
zur Verfügung.

1668
01:18:40,450 --> 01:18:42,450
Ähm, und

1669
01:18:42,450 --> 01:18:46,210
ach Moment, ich verwechsel

1670
01:18:46,210 --> 01:18:48,210
das gerade. Der PC, der TCP

1671
01:18:48,210 --> 01:18:50,210
timeout ist 5 Minuten, ne?

1672
01:18:52,210 --> 01:18:54,210
Bei http, keine Ahnung ehrlich gesagt. Ist ja auch

1673
01:18:54,210 --> 01:18:56,210
wurscht. Ähm,

1674
01:18:56,210 --> 01:18:58,210
bei, man hat hier nicht so viel RAM.

1675
01:18:58,210 --> 01:19:00,210
Das heißt, jede Connection,

1676
01:19:00,210 --> 01:19:02,210
die offen ist, ist eine Connection zu viel.

1677
01:19:02,210 --> 01:19:04,210
Also jede Connection, die offen ist,

1678
01:19:04,210 --> 01:19:06,210
und, äh, 80, äh, 80

1679
01:19:06,210 --> 01:19:08,210
KB, nicht 80 GB.

1680
01:19:08,210 --> 01:19:10,210
80 GB wär ja Pockers.

1681
01:19:10,210 --> 01:19:12,210
Da hätten sie neue RAM Chips hier.

1682
01:19:12,210 --> 01:19:14,210
Der 80 GB RAM Chip ist hier.

1683
01:19:14,210 --> 01:19:16,210
Seht ihr? Eindeutig.

1684
01:19:16,210 --> 01:19:18,210
Ähm,

1685
01:19:18,210 --> 01:19:20,210
80 KB, 80 KB RAM

1686
01:19:20,210 --> 01:19:22,210
meistens zur Verfügung. Das heißt, jede

1687
01:19:22,210 --> 01:19:24,210
Connection, die offen ist und nichts macht, ist

1688
01:19:24,210 --> 01:19:28,740
eine Connection zu viel.

1689
01:19:28,740 --> 01:19:30,740
Also, ähm, jetzt müssen wir dem erstmal

1690
01:19:30,740 --> 01:19:32,740
sagen, an welchem Port erlauschen soll.

1691
01:19:32,740 --> 01:19:34,740
Ich copy-paste

1692
01:19:34,740 --> 01:19:36,740
übrigens mal den anderen Kram hier auch.

1693
01:19:36,740 --> 01:19:38,740
Das ist einfacher. Da müssen wir uns

1694
01:19:38,740 --> 01:19:40,740
das nicht angucken. Das ist Initialisierungskram.

1695
01:19:40,740 --> 01:19:42,740
Der legt hier Speicherplatz

1696
01:19:42,740 --> 01:19:44,740
an, wo man ein Zertifikat drin speichern kann.

1697
01:19:44,740 --> 01:19:46,740
Dann, wo man ein Private Key

1698
01:19:46,740 --> 01:19:48,740
drin speichern kann. Dann irgendwelche Random

1699
01:19:48,740 --> 01:19:50,740
Generator und sowas.

1700
01:19:50,740 --> 01:19:52,740
Ich hab keine Ahnung, was es genau macht.

1701
01:19:52,740 --> 01:19:54,740
Ich weiß nur, dass es funktioniert und man muss es machen, weil

1702
01:19:54,740 --> 01:19:56,740
wenn man es nicht macht, dann funktioniert's nicht.

1703
01:19:56,740 --> 01:19:58,740
So, ähm,

1704
01:19:58,740 --> 01:20:00,740
und was wir auch noch brauchen ist, wir müssen

1705
01:20:00,740 --> 01:20:02,740
den Key einlesen. Und wie ihr hier seht, ich hab

1706
01:20:02,740 --> 01:20:04,740
hier ein Zertifikat und

1707
01:20:04,740 --> 01:20:06,740
einen, äh, Private Key.

1708
01:20:06,740 --> 01:20:08,740
Den müssen wir einlesen,

1709
01:20:08,740 --> 01:20:10,740
weil den brauchen wir jetzt.

1710
01:20:10,740 --> 01:20:12,740
Denn irgendwie muss der

1711
01:20:12,740 --> 01:20:14,740
Server ja HTTPS

1712
01:20:14,740 --> 01:20:16,740
SSL Verschlüsselung machen. Dazu brauchst du ein Zertifikat

1713
01:20:16,740 --> 01:20:18,740
und dazu brauchst du ein Private Key, dass

1714
01:20:18,740 --> 01:20:20,740
das Ganze funktioniert.

1715
01:20:20,740 --> 01:20:24,300
Ähm, jo.

1716
01:20:24,300 --> 01:20:26,300
Deswegen sagen wir,

1717
01:20:26,300 --> 01:20:28,300
wir brauchen noch ein paar Variablen,

1718
01:20:28,300 --> 01:20:31,620
für unsere Keys.

1719
01:20:31,620 --> 01:20:33,620
Und, äh, da machen wir hier sowas wie

1720
01:20:33,620 --> 01:20:35,620
ein

1721
01:20:35,620 --> 01:20:37,620
Standard Vektor. Wir sind ja hier

1722
01:20:37,620 --> 01:20:39,620
in C++.

1723
01:20:39,620 --> 01:20:41,620
Äh, Uint.

1724
01:20:41,620 --> 01:20:43,620
Alter, komm, Visual Studio

1725
01:20:43,620 --> 01:20:45,620
Code. Gib alles.

1726
01:20:45,620 --> 01:20:47,620
Wir brauchen das so lang. Übrigens, ich, äh,

1727
01:20:47,620 --> 01:20:49,620
wollte mal in nächster Zeit

1728
01:20:49,620 --> 01:20:53,180
CLion ausprobieren.

1729
01:20:53,180 --> 01:20:55,180
Können wir eigentlich auch mal im Stream angucken.

1730
01:20:55,180 --> 01:20:57,180
Weil das Chatbrains Zeug ist

1731
01:20:57,180 --> 01:20:59,180
ziemlich gut. Also alles,

1732
01:20:59,180 --> 01:21:01,180
was ich bisher verwendet hab.

1733
01:21:01,180 --> 01:21:03,180
.NET ist top. Rider für .NET

1734
01:21:03,180 --> 01:21:05,180
ist top. Ähm,

1735
01:21:05,180 --> 01:21:07,180
ich muss sagen,

1736
01:21:07,180 --> 01:21:09,180
PHP, nee, äh, WebStorm

1737
01:21:09,180 --> 01:21:11,180
hab ich nicht so viel mitgemacht.

1738
01:21:11,180 --> 01:21:13,180
Hat mir jetzt nicht so extrem gut

1739
01:21:13,180 --> 01:21:15,180
gefallen. Aber, ähm,

1740
01:21:15,180 --> 01:21:21,440
PyCharm ist ziemlich

1741
01:21:21,440 --> 01:21:23,440
gut. Und RubyMine

1742
01:21:23,440 --> 01:21:25,440
war früher auch ziemlich gut. Also, die machen,

1743
01:21:25,440 --> 01:21:27,440
die machen wirklich gutes Zeug. Und

1744
01:21:27,440 --> 01:21:29,440
die haben jetzt seit einer Weile, das ist schon ein bisschen her,

1745
01:21:29,440 --> 01:21:31,440
auch eine C++

1746
01:21:31,440 --> 01:21:33,440
C IDE.

1747
01:21:33,440 --> 01:21:35,440
Ähm, ich find die C++

1748
01:21:35,440 --> 01:21:37,440
Unterstützung in Visual Studio Code

1749
01:21:37,440 --> 01:21:39,440
sehr hakelig. Das funktioniert,

1750
01:21:39,440 --> 01:21:41,440
aber ihr seht's, das ist teilweise richtig langsam.

1751
01:21:41,440 --> 01:21:43,440
Guck mal hier, ich hab hier grad Uint.

1752
01:21:43,440 --> 01:21:45,440
Seht ihr? Also, das ist, das ist

1753
01:21:45,440 --> 01:21:48,820
nicht so,

1754
01:21:48,820 --> 01:21:50,820
nicht so snappy oder so, wie man das auch immer

1755
01:21:50,820 --> 01:21:52,820
nennen mag, ja. So, also

1756
01:21:52,820 --> 01:21:54,820
wir brauchen, wir brauchen Speicher für unseren Key

1757
01:21:54,820 --> 01:21:56,820
und wir brauchen Speicher

1758
01:21:56,820 --> 01:21:58,820
für unser, für unser Zertifikat.

1759
01:21:58,820 --> 01:22:07,920
Ähm,

1760
01:22:07,920 --> 01:22:09,920
weil ohne funktioniert das ganze TLS

1761
01:22:09,920 --> 01:22:11,920
SSL Zeug nicht. Das müssen wir jetzt

1762
01:22:11,920 --> 01:22:13,920
einlesen. Da können wir einen von meinen Big Brain

1763
01:22:13,920 --> 01:22:15,920
Helper Methoden verwenden, nämlich

1764
01:22:15,920 --> 01:22:17,920
ReadFileFromSpiffs.

1765
01:22:17,920 --> 01:22:19,920
Normalerweise macht man das so.

1766
01:22:19,920 --> 01:22:21,920
Äh,

1767
01:22:21,920 --> 01:22:23,920
Open, aber ich kann, ich kann euch einfach

1768
01:22:23,920 --> 01:22:25,920
die Methode zeigen, dass man sieht, was er unter der Haube macht.

1769
01:22:25,920 --> 01:22:27,920
Ignoriert mal, dass das irgendwelche Templates sind.

1770
01:22:27,920 --> 01:22:29,920
Ignoriert mal dieses eklige Zeug hier unten drunter.

1771
01:22:29,920 --> 01:22:31,920
Das hab ich nur gemacht, weil C++

1772
01:22:31,920 --> 01:22:33,920
wieder nicht das macht, was ich gerne hätte.

1773
01:22:33,920 --> 01:22:35,920
Ähm, normalerweise

1774
01:22:35,920 --> 01:22:37,920
ist, äh, so. Öffnet man Dateien.

1775
01:22:37,920 --> 01:22:39,920
Vom Flash,

1776
01:22:39,920 --> 01:22:41,920
vom Flash-Speicher, vom ESP32.

1777
01:22:41,920 --> 01:22:43,920
Äh, Flash-Speicher. Ich weiß, dass das

1778
01:22:43,920 --> 01:22:45,920
seit gestern, äh,

1779
01:22:45,920 --> 01:22:47,920
oder vorgestern C++

1780
01:22:47,920 --> 01:22:49,920
1.0 ist im Visual Studio Code.

1781
01:22:49,920 --> 01:22:51,920
Allerdings die, also die C++-Extension

1782
01:22:51,920 --> 01:22:53,920
besser geworden ist sie dadurch auch nicht.

1783
01:22:53,920 --> 01:22:55,920
So macht man das normalerweise. Also sprich,

1784
01:22:55,920 --> 01:22:57,920
man sagt Spiffs Open,

1785
01:22:57,920 --> 01:22:59,920
dann gibt man einen Fad an, also zum Beispiel

1786
01:22:59,920 --> 01:23:01,920
sowas hier, ne?

1787
01:23:01,920 --> 01:23:03,920
Slash, Index, HTML.

1788
01:23:03,920 --> 01:23:05,920
Haben wir hier auch? Ne, haben wir gar nicht drin.

1789
01:23:05,920 --> 01:23:07,920
Äh, sowas hier zum Beispiel.

1790
01:23:07,920 --> 01:23:09,920
Cert.

1791
01:23:09,920 --> 01:23:11,920
Spiffs Fade fangen immer mit einem Slash an.

1792
01:23:11,920 --> 01:23:13,920
Linux, Unix-Style. Ähm,

1793
01:23:13,920 --> 01:23:15,920
dann kriegt man die File Size, dann braucht man einen Buffer,

1794
01:23:15,920 --> 01:23:17,920
liest das ein und schließt das File wieder.

1795
01:23:17,920 --> 01:23:19,920
So, äh,

1796
01:23:19,920 --> 01:23:21,920
ist das gedacht zu verwenden.

1797
01:23:21,920 --> 01:23:23,920
Ähm, oh.

1798
01:23:23,920 --> 01:23:25,920
Der rückt Dinger komisch ein für mich.

1799
01:23:25,920 --> 01:23:27,920
Meinetwegen, solange er nicht wieder kaputt geht.

1800
01:23:27,920 --> 01:23:29,920
Und ich hab versucht, ich muss mal, das ist das erste Mal,

1801
01:23:29,920 --> 01:23:31,920
dass ich jetzt gucken kann, ob das funktioniert.

1802
01:23:31,920 --> 01:23:33,920
Weil ich hab da vorher noch ein bisschen dran rumgebastelt.

1803
01:23:33,920 --> 01:23:35,920
Ich hab gedacht, ich bin jetzt mal ganz besonders,

1804
01:23:35,920 --> 01:23:37,920
äh, Massive Brained.

1805
01:23:37,920 --> 01:23:39,920
Und zwar, ich hab mir versucht,

1806
01:23:39,920 --> 01:23:41,920
ein Template zu bauen, was folgendes macht.

1807
01:23:41,920 --> 01:23:43,920
Das ist wieder typische C++-Eigenheit.

1808
01:23:43,920 --> 01:23:45,920
Das geht sonst in keiner anderen Sprache,

1809
01:23:45,920 --> 01:23:47,920
aber in keiner anderen Sprache braucht man das auch.

1810
01:23:47,920 --> 01:23:49,920
Ähm,

1811
01:23:49,920 --> 01:23:51,920
ne, der Fade ist immer Slash

1812
01:23:51,920 --> 01:23:53,920
und dann Dateiname. Also Slash,

1813
01:23:53,920 --> 01:23:55,920
Cert, der. Man kann, wenn man einen Ordner hat,

1814
01:23:55,920 --> 01:23:57,920
wenn man einen Ordner hat, ist es Slash, Ordnername,

1815
01:23:57,920 --> 01:23:59,920
Slash, sonst was.

1816
01:23:59,920 --> 01:24:01,920
Ähm, ich hab hier folgendes

1817
01:24:01,920 --> 01:24:03,920
probiert, deswegen sieht das auch so eklig mit

1818
01:24:03,920 --> 01:24:05,920
Template aus. Ähm,

1819
01:24:05,920 --> 01:24:07,920
ich wollte,

1820
01:24:07,920 --> 01:24:09,920
wenn man, übrigens das können wir wegschmeißen

1821
01:24:09,920 --> 01:24:11,920
da hinten, das war, hab ich ausprobiert,

1822
01:24:11,920 --> 01:24:13,920
wenn man, das ist jetzt wieder

1823
01:24:13,920 --> 01:24:15,920
C++ Deluxe, ja.

1824
01:24:15,920 --> 01:24:17,920
Also, wenn man sagt,

1825
01:24:17,920 --> 01:24:19,920
man möchte die Dateien

1826
01:24:19,920 --> 01:24:21,920
als Bytes haben,

1827
01:24:21,920 --> 01:24:23,920
dann macht er einen Vektor

1828
01:24:23,920 --> 01:24:25,920
mit Bytes. Wenn man sagt,

1829
01:24:25,920 --> 01:24:27,920
man möchte die Datei einlesen

1830
01:24:27,920 --> 01:24:29,920
als Arduino-String,

1831
01:24:29,920 --> 01:24:31,920
dann gibt er den Arduino-String zurück

1832
01:24:31,920 --> 01:24:33,920
und wenn man sagt, man möchte ihn als C++-String

1833
01:24:33,920 --> 01:24:35,920
haben, dann gibt er den C++-String zurück.

1834
01:24:35,920 --> 01:24:37,920
Dass das als Template überhaupt

1835
01:24:37,920 --> 01:24:39,920
funktioniert, ist an sich

1836
01:24:39,920 --> 01:24:41,920
schon mal wir.

1837
01:24:41,920 --> 01:24:43,920
Komplett unverständlich, warum das funktioniert.

1838
01:24:43,920 --> 01:24:45,920
Also ich weiß, dass es,

1839
01:24:45,920 --> 01:24:47,920
wie man es machen muss in C++, es ergibt für mich

1840
01:24:47,920 --> 01:24:49,920
nur keinen Sinn, warum das geht.

1841
01:24:49,920 --> 01:24:51,920
Weil hier geb ich einen Vektor-Typ zurück

1842
01:24:51,920 --> 01:24:53,920
und hier geb ich ein einfacher, also hier geb ich

1843
01:24:53,920 --> 01:24:55,920
ein Objekt, also hier geb ich ein Container zurück

1844
01:24:55,920 --> 01:24:57,920
mit Elementen drinne und

1845
01:24:57,920 --> 01:24:59,920
hier geb ich quasi ein Objekt zurück.

1846
01:24:59,920 --> 01:25:01,920
Warum ich quasi,

1847
01:25:01,920 --> 01:25:03,920
warum das Syntakt, also keine Ahnung

1848
01:25:03,920 --> 01:25:07,680
warum das geht, aber es funktioniert.

1849
01:25:07,680 --> 01:25:09,680
Jetzt kann ich hier nämlich sowas einlesen

1850
01:25:09,680 --> 01:25:13,440
und jetzt kommt der Moment der Wahrheit,

1851
01:25:13,440 --> 01:25:15,440
ob das funktioniert, was ich da programmiert habe.

1852
01:25:15,440 --> 01:25:17,440
Also wir lesen jetzt mal meinen,

1853
01:25:17,440 --> 01:25:19,440
den da ein,

1854
01:25:19,440 --> 01:25:21,440
cert.der

1855
01:25:21,440 --> 01:25:23,440
lesen wir ein

1856
01:25:23,440 --> 01:25:25,440
und key.der

1857
01:25:25,440 --> 01:25:27,440
und was der jetzt einliest ist

1858
01:25:27,440 --> 01:25:29,440
ein

1859
01:25:29,440 --> 01:25:31,440
ich krieg einen Vektor, also quasi

1860
01:25:31,440 --> 01:25:33,440
einen Array zurück mit den einzelnen

1861
01:25:33,440 --> 01:25:35,440
Bytes, also

1862
01:25:35,440 --> 01:25:37,440
quasi einen Array mit den

1863
01:25:37,440 --> 01:25:39,440
Vektor mit den Bytes von dieser

1864
01:25:39,440 --> 01:25:42,820
Datei. Der Zertifikat

1865
01:25:42,820 --> 01:25:44,820
ist nie müde. Der Key

1866
01:25:44,820 --> 01:25:46,820
ist auch immer von dem Chef im Büro.

1867
01:25:46,820 --> 01:25:48,820
So und jetzt können wir uns das ganze hier oben

1868
01:25:48,820 --> 01:25:50,820
reinschreiben, also KeyBuffer

1869
01:25:50,820 --> 01:25:52,820
äh, ups, falsch rum. KeyBuffer

1870
01:25:52,820 --> 01:25:54,820
gleich das und

1871
01:25:54,820 --> 01:25:56,820
ThirdBuffer ist das.

1872
01:25:56,820 --> 01:25:58,820
Also alles was wir jetzt gemacht haben

1873
01:25:58,820 --> 01:26:00,820
ist das Zertifikat

1874
01:26:00,820 --> 01:26:02,820
vom Flash lesen und

1875
01:26:02,820 --> 01:26:04,820
in ThirdBuffer schreiben und

1876
01:26:04,820 --> 01:26:06,820
den Key einlesen vom Flash

1877
01:26:06,820 --> 01:26:08,820
und in KeyBuffer schreiben.

1878
01:26:08,820 --> 01:26:10,820
Der Key

1879
01:26:10,820 --> 01:26:17,520
encryptet immer schweißfrei.

1880
01:26:17,520 --> 01:26:19,520
Der ist gut.

1881
01:26:19,520 --> 01:26:21,520
So, weiter

1882
01:26:21,520 --> 01:26:23,520
weiter im Text.

1883
01:26:23,520 --> 01:26:25,520
Jetzt können wir nämlich gucken

1884
01:26:25,520 --> 01:26:27,520
ob der Server an sich tut.

1885
01:26:27,520 --> 01:26:29,520
Also die wichtigsten Sachen haben wir

1886
01:26:29,520 --> 01:26:31,520
jetzt. Wir haben komisches

1887
01:26:31,520 --> 01:26:33,520
SSL Zeug initialisiert.

1888
01:26:33,520 --> 01:26:35,520
Wir haben Private Key und Zertifikat

1889
01:26:35,520 --> 01:26:37,520
eingelesen. Als nächstes

1890
01:26:37,520 --> 01:26:39,520
können wir folgendes machen.

1891
01:26:39,520 --> 01:26:41,520
Kann ich mir auch copy-pasten aus meinem

1892
01:26:41,520 --> 01:26:43,520
Test. So.

1893
01:26:43,520 --> 01:26:45,520
Als nächstes können wir folgendes machen.

1894
01:26:45,520 --> 01:26:47,520
Wir müssen jetzt nämlich gucken ob das Zertifikat

1895
01:26:47,520 --> 01:26:49,520
gültig ist. Heute Cold War.

1896
01:26:49,520 --> 01:26:51,520
Ich hab kein Beta Key.

1897
01:26:51,520 --> 01:26:53,520
Ich hab mich auch null drum gekümmert um Beta Key.

1898
01:26:53,520 --> 01:26:55,520
Ich hab das auch überhaupt nicht verfolgt die letzten Tage.

1899
01:26:55,520 --> 01:26:57,520
Ich hab 10 Tage am Stück jetzt gearbeitet.

1900
01:26:57,520 --> 01:26:59,520
Ich hab nichts mitgekriegt was das angeht.

1901
01:26:59,520 --> 01:27:01,520
Echt?

1902
01:27:01,520 --> 01:27:04,960
Ist Open Alpha?

1903
01:27:04,960 --> 01:27:06,960
Echt jetzt? Excellent.

1904
01:27:06,960 --> 01:27:08,960
Geht das auf dem PC?

1905
01:27:08,960 --> 01:27:13,170
PC?

1906
01:27:13,170 --> 01:27:15,170
Ach PS4 only.

1907
01:27:15,170 --> 01:27:17,170
Was ist denn hier Sony?

1908
01:27:17,170 --> 01:27:23,360
Was ist denn hier los?

1909
01:27:23,360 --> 01:27:25,360
Ne PS4 spiele ich nicht. Ganz ehrlich

1910
01:27:25,360 --> 01:27:27,360
ich kann mit dem PS4 Controller nicht umgehen.

1911
01:27:27,360 --> 01:27:29,360
Ich krieg es nicht gebacken.

1912
01:27:29,360 --> 01:27:31,360
Ich bin schon mit dem Xbox Controller komplett außer Übung.

1913
01:27:31,360 --> 01:27:33,360
Aber wenn ich am PS4 oder wisst ihr was ich machen kann?

1914
01:27:33,360 --> 01:27:35,360
Ich kann meinen Cheat auspacken.

1915
01:27:35,360 --> 01:27:37,360
Ich hab ja so ein

1916
01:27:37,360 --> 01:27:39,360
so ein Maus zu

1917
01:27:39,360 --> 01:27:41,360
den verwende ich normalerweise nicht weil es

1918
01:27:41,360 --> 01:27:43,360
im Prinzip einfach Cheaten ist.

1919
01:27:43,360 --> 01:27:45,360
Aber ich hab so einen Converter

1920
01:27:45,360 --> 01:27:47,360
so ein Maus zu Tastatur

1921
01:27:47,360 --> 01:27:53,810
Converter den könnte ich verwenden.

1922
01:27:53,810 --> 01:27:55,810
Ob man mit Visual Studio Code auch Remote

1923
01:27:55,810 --> 01:27:57,810
mit SSR beim Kunden arbeiten kann? Ja klar.

1924
01:27:57,810 --> 01:27:59,810
Du kannst

1925
01:27:59,810 --> 01:28:01,810
Ramedes ich zeig dir mal was.

1926
01:28:01,810 --> 01:28:03,810
Falls du das nicht schon kennst.

1927
01:28:03,810 --> 01:28:05,810
Was für dich

1928
01:28:05,810 --> 01:28:07,810
sehr praktisch sein könnte und zwar

1929
01:28:07,810 --> 01:28:09,810
Ich muss mal einen SSH Server starten

1930
01:28:09,810 --> 01:28:11,810
dass ich dir das zeigen kann.

1931
01:28:11,810 --> 01:28:13,810
So

1932
01:28:13,810 --> 01:28:15,810
Ich starte mal kurz den SSH Server.

1933
01:28:15,810 --> 01:28:17,810
Systemctl

1934
01:28:17,810 --> 01:28:19,810
Start sshd

1935
01:28:19,810 --> 01:28:21,810
Ich weiß gar nicht ob ich das jetzt sehe. Hab ich.

1936
01:28:21,810 --> 01:28:23,810
Also ssh localhost

1937
01:28:23,810 --> 01:28:25,810
Yes alles klar.

1938
01:28:25,810 --> 01:28:27,810
Also ich verbinde mich jetzt mal

1939
01:28:27,810 --> 01:28:29,810
per SSH auf meinen

1940
01:28:29,810 --> 01:28:31,810
auf meinen lokalen Rechner.

1941
01:28:31,810 --> 01:28:33,810
Aber das ist egal.

1942
01:28:33,810 --> 01:28:35,810
Das könnte auch ein Remote Rechner sein.

1943
01:28:35,810 --> 01:28:37,810
Das ist vollkommen egal.

1944
01:28:37,810 --> 01:28:39,810
Also was man machen kann ist

1945
01:28:39,810 --> 01:28:41,810
man kann mit jedem

1946
01:28:41,810 --> 01:28:43,810
man kann mit jedem Editor mit allem

1947
01:28:43,810 --> 01:28:45,810
Remote per SSH arbeiten.

1948
01:28:45,810 --> 01:28:47,810
Weil es gibt so was schönes.

1949
01:28:47,810 --> 01:28:49,810
Das nennt sich SSHFS.

1950
01:28:49,810 --> 01:28:51,810
Und SSHFS funktioniert folgendermaßen.

1951
01:28:51,810 --> 01:28:53,810
Also wir gehen jetzt mal von aus.

1952
01:28:53,810 --> 01:28:55,810
Ich hab irgendwo Remote einen Server stehen

1953
01:28:55,810 --> 01:28:57,810
auf dem ich was editieren möchte.

1954
01:28:57,810 --> 01:28:59,810
Da kann ich nämlich einfach sagen

1955
01:28:59,810 --> 01:29:01,810
SSHFS. Ich hoffe ich habe es überhaupt installiert.

1956
01:29:01,810 --> 01:29:05,820
Ne ich muss mal kurz installieren.

1957
01:29:05,820 --> 01:29:09,520
Oh was ist denn hier los?

1958
01:29:09,520 --> 01:29:11,520
Oh ich muss glaube ich mal wieder updaten.

1959
01:29:11,520 --> 01:29:13,520
So aber SSHFS

1960
01:29:13,520 --> 01:29:15,520
ist es installiert.

1961
01:29:15,520 --> 01:29:17,520
Ist übrigens

1962
01:29:17,520 --> 01:29:19,520
Hat nicht installiert oder?

1963
01:29:19,520 --> 01:29:23,410
Na toll ok.

1964
01:29:23,410 --> 01:29:25,410
Ich muss mal schnell updaten.

1965
01:29:25,410 --> 01:29:29,040
Ja aber wie gesagt ich zeig dir

1966
01:29:29,040 --> 01:29:31,040
das gleich das ist äußerst praktisch.

1967
01:29:31,040 --> 01:29:33,040
Da kannst du nämlich einfach

1968
01:29:33,040 --> 01:29:35,040
nen Ordner auf nem Remote Server

1969
01:29:35,040 --> 01:29:37,040
benutzen wie als wäre er bei dir lokal.

1970
01:29:37,040 --> 01:29:39,040
Das heißt du musst gar nicht

1971
01:29:39,040 --> 01:29:41,040
Visual Studio SSH beibringen

1972
01:29:41,040 --> 01:29:43,040
und du musst auch deinem Vim oder deinem Emacs

1973
01:29:43,040 --> 01:29:45,040
oder deinem Atom oder deinem Visual Studio

1974
01:29:45,040 --> 01:29:47,040
kein ähm

1975
01:29:47,040 --> 01:29:49,040
ach du große Scheiße was will der denn

1976
01:29:49,040 --> 01:29:51,040
ach du will der denn alles updaten?

1977
01:29:51,040 --> 01:29:53,040
ähm

1978
01:29:53,040 --> 01:29:55,040
musst du nicht beibringen du machst einfach SSHFS

1979
01:29:55,040 --> 01:29:57,040
und dann hast du den Remote Ordner

1980
01:29:57,040 --> 01:29:59,040
lokal bei dir.

1981
01:29:59,040 --> 01:30:03,890
Solange der jetzt Update macht

1982
01:30:03,890 --> 01:30:05,890
zeig ich dir jetzt irgendwie ein Beispiel.

1983
01:30:05,890 --> 01:30:11,570
Genau

1984
01:30:11,570 --> 01:30:13,570
das ist viel zu übertrieben was die hier machen.

1985
01:30:13,570 --> 01:30:22,770
So ein bisschen sowas wie NFS

1986
01:30:22,770 --> 01:30:24,770
ja das ist total

1987
01:30:24,770 --> 01:30:26,770
einfach genau hier ist ein schönes Beispiel.

1988
01:30:26,770 --> 01:30:28,770
Du sagst einfach

1989
01:30:28,770 --> 01:30:30,770
SSH

1990
01:30:30,770 --> 01:30:32,770
SSHFS Username

1991
01:30:32,770 --> 01:30:34,770
AdServer Doppelpunkt und dann

1992
01:30:34,770 --> 01:30:36,770
in dem Fall ist das Heimatverzeichnis

1993
01:30:36,770 --> 01:30:38,770
ähm und dann den Ordner

1994
01:30:38,770 --> 01:30:40,770
wo du es rein mounten willst.

1995
01:30:40,770 --> 01:30:42,770
So und das heißt am Ende hast du dann nen Ordner

1996
01:30:42,770 --> 01:30:44,770
von Remote lokal gemountet

1997
01:30:44,770 --> 01:30:46,770
und in diesem lokalen Ordner kannst du dann mit jedem

1998
01:30:46,770 --> 01:30:48,770
Editor drin rumwursten wie du willst

1999
01:30:48,770 --> 01:30:50,770
und der synkt das dann

2000
01:30:50,770 --> 01:30:52,770
auf den Remote Server.

2001
01:30:52,770 --> 01:30:54,770
Ich zeig es dir auch gleich wenn er irgendwann mal geupdatet hat.

2002
01:30:54,770 --> 01:30:56,770
Übrigens wisst ihr

2003
01:30:56,770 --> 01:30:58,770
wie kacke Betriebssystem

2004
01:30:58,770 --> 01:31:00,770
Updates über LTE sind?

2005
01:31:00,770 --> 01:31:02,770
Ich musste auf der Arbeit

2006
01:31:02,770 --> 01:31:04,770
als ich auf der Arbeit war und wie gesagt wir hatten da ziemlich viele Ausfälle

2007
01:31:04,770 --> 01:31:06,770
und der Netzwerk war auch im Arsch teilweise

2008
01:31:06,770 --> 01:31:08,770
ich musste nen

2009
01:31:08,770 --> 01:31:10,770
Update machen so ungefähr

2010
01:31:10,770 --> 01:31:12,770
so ungefähr so ein Update wie hier über LTE

2011
01:31:12,770 --> 01:31:14,770
LTE mitten in Frankfurt

2012
01:31:14,770 --> 01:31:16,770
über nen WLAN Hotspot den ich mit meinem Handy

2013
01:31:16,770 --> 01:31:18,770
aufgemacht hab

2014
01:31:18,770 --> 01:31:20,770
das hat keine Ahnung 3 Stunden gedauert

2015
01:31:20,770 --> 01:31:22,770
oder so

2016
01:31:22,770 --> 01:31:27,420
Ewig

2017
01:31:27,420 --> 01:31:31,500
das hat gar nicht mehr aufgehört

2018
01:31:31,500 --> 01:31:33,500
also wenn das hier fertig ist dann zeige ich es dir

2019
01:31:33,500 --> 01:31:35,500
so und jetzt können wir

2020
01:31:35,500 --> 01:31:37,500
wir starten jetzt zumindest mal nebenbei

2021
01:31:37,500 --> 01:31:39,500
den äh http Server

2022
01:31:39,500 --> 01:31:43,260
so ähm

2023
01:31:43,260 --> 01:31:45,260
also wo sind wir stehen geblieben ich warte hier noch bis das Update durch ist

2024
01:31:45,260 --> 01:31:47,260
dann zeige ich dir das mit SSHFS weil das ist

2025
01:31:47,260 --> 01:31:49,260
eines der praktischsten und einfachsten

2026
01:31:49,260 --> 01:31:51,260
Tools die es gibt und

2027
01:31:51,260 --> 01:31:53,260
die lösen so viele Probleme

2028
01:31:53,260 --> 01:31:55,260
also an SSHFS sollte man immer so

2029
01:31:55,260 --> 01:31:57,260
als erstes denken wenn man Remote Sachen

2030
01:31:57,260 --> 01:31:59,260
bearbeiten muss größere Sachen

2031
01:31:59,260 --> 01:32:01,260
Remote bearbeiten muss

2032
01:32:01,260 --> 01:32:03,260
und gerne die Sachen verwenden möchten die man lokal

2033
01:32:03,260 --> 01:32:06,830
hat äh stell dir vor du musst

2034
01:32:06,830 --> 01:32:08,830
eine Router Config über 2G

2035
01:32:08,830 --> 01:32:10,830
das ist kein Problem Router Config ist ja

2036
01:32:10,830 --> 01:32:12,830
nur Text und nicht groß ja

2037
01:32:12,830 --> 01:32:14,830
selbst so ne riesen Cisco was auch immer

2038
01:32:14,830 --> 01:32:16,830
Config ist vielleicht was weiß ich

2039
01:32:16,830 --> 01:32:18,830
50 KB

2040
01:32:18,830 --> 01:32:23,170
doch kein Ding

2041
01:32:23,170 --> 01:32:25,170
dauert trotzdem ne halbe Stunde pff was ist denn da

2042
01:32:25,170 --> 01:32:27,170
drin Router Config mit Binares

2043
01:32:27,170 --> 01:32:31,180
oder

2044
01:32:31,180 --> 01:32:33,180
der updatet ja wirklich 3 Stunden

2045
01:32:33,180 --> 01:32:35,180
so also was kommen wir mal zurück

2046
01:32:35,180 --> 01:32:37,180
zum Web Server

2047
01:32:37,180 --> 01:32:39,180
ähm was wir jetzt als nächstes

2048
01:32:39,180 --> 01:32:41,180
checken müssen ist ob das Zertifikat

2049
01:32:41,180 --> 01:32:43,180
funktioniert

2050
01:32:43,180 --> 01:32:45,180
also sprich ob man das Zertifikat parsen kann

2051
01:32:45,180 --> 01:32:47,180
also ich hab jetzt hier

2052
01:32:47,180 --> 01:32:49,180
das Zertifikat und den Key eingelesen

2053
01:32:49,180 --> 01:32:51,180
und es könnte ja sein das sie im falschen Format sind

2054
01:32:51,180 --> 01:32:53,180
deswegen muss ich jetzt erstmal sagen ok

2055
01:32:53,180 --> 01:32:55,180
parse mal das Zertifikat

2056
01:32:55,180 --> 01:32:57,180
und schreib dann

2057
01:32:57,180 --> 01:32:59,180
deine interne Geschichte

2058
01:32:59,180 --> 01:33:01,180
was auch immer du mit dem Zertifikat machst

2059
01:33:01,180 --> 01:33:03,180
hier in diese Variable weil wir müssen ja davon

2060
01:33:03,180 --> 01:33:05,180
also wir müssen ja aufpassen

2061
01:33:05,180 --> 01:33:07,180
dass die Variablen nicht aus dem Scope

2062
01:33:07,180 --> 01:33:09,180
rausgehen C und C++

2063
01:33:09,180 --> 01:33:11,180
machen das so wenn man Variablen

2064
01:33:11,180 --> 01:33:13,180
anlegt und die Funktion wird verlassen

2065
01:33:13,180 --> 01:33:15,180
dann werden die wieder gelöscht

2066
01:33:15,180 --> 01:33:17,180
es sei denn man hat vorher gesagt man will das nicht

2067
01:33:17,180 --> 01:33:19,180
ähm

2068
01:33:19,180 --> 01:33:21,180
das ist übrigens auch das wo die meisten

2069
01:33:21,180 --> 01:33:23,180
Memory Leaks herkommen

2070
01:33:23,180 --> 01:33:25,180
also wenn man sagt ok

2071
01:33:25,180 --> 01:33:27,180
so gibt es keine Memory Leaks

2072
01:33:27,180 --> 01:33:29,180
also wenn ich Variablen nur so anlege

2073
01:33:29,180 --> 01:33:31,180
dass sie automatisch wieder

2074
01:33:31,180 --> 01:33:33,180
aufgeräumt werden

2075
01:33:33,180 --> 01:33:35,180
sobald die Funktion beendet wird

2076
01:33:35,180 --> 01:33:37,180
kann es logischerweise keine Memory Leaks geben

2077
01:33:37,180 --> 01:33:39,180
ja aber ähm

2078
01:33:39,180 --> 01:33:41,180
nachdem man ja auch Variablen

2079
01:33:41,180 --> 01:33:43,180
braucht die es länger gibt als

2080
01:33:43,180 --> 01:33:45,180
die Funktion

2081
01:33:45,180 --> 01:33:47,180
ähm muss man

2082
01:33:47,180 --> 01:33:49,180
dem halt auch dann sagen hey

2083
01:33:49,180 --> 01:33:51,180
ich brauch das länger und da kommen halt auch die meisten

2084
01:33:51,180 --> 01:33:53,180
Memory Leaks her

2085
01:33:53,180 --> 01:33:55,180
genau also der Parse jetzt ist jetzt

2086
01:33:55,180 --> 01:33:57,180
ein Zertifikat der passt in Private Key

2087
01:33:57,180 --> 01:33:59,180
und schreibt es hier einmal nach Key

2088
01:33:59,180 --> 01:34:01,180
und einmal nach Cert

2089
01:34:01,180 --> 01:34:03,180
jetzt muss man irgendwelche Magic Sachen machen

2090
01:34:03,180 --> 01:34:05,180
die kopiere ich mir auch aus dem Example hier jetzt

2091
01:34:05,180 --> 01:34:07,180
das ist 1 zu 1 aus dem

2092
01:34:07,180 --> 01:34:09,180
Example von dem

2093
01:34:09,180 --> 01:34:11,180
äh ich habe keine Ahnung was es macht

2094
01:34:11,180 --> 01:34:13,180
Magic braucht man sonst geht es nicht

2095
01:34:13,180 --> 01:34:15,180
und ähm

2096
01:34:15,180 --> 01:34:17,180
jetzt kann man gucken dass man Verbindungen annehmen kann

2097
01:34:19,180 --> 01:34:21,180
wenn ich jetzt nicht nur irgendwas vergessen habe

2098
01:34:21,180 --> 01:34:23,180
doch aha ich habe das

2099
01:34:23,180 --> 01:34:25,180
Leute ich habe das wichtigste vergessen ich habe mich

2100
01:34:25,180 --> 01:34:27,180
da sind jetzt auch 2 Sachen die aus dem Beispiel

2101
01:34:27,180 --> 01:34:29,180
kommen und zwar

2102
01:34:29,180 --> 01:34:31,180
man muss ihm ja sagen an welchem Port

2103
01:34:31,180 --> 01:34:33,180
an welchem Port man den Server betreiben

2104
01:34:33,180 --> 01:34:35,180
will den Port übergeben wir hier Port 443

2105
01:34:35,180 --> 01:34:37,180
ist das bei uns so und nachdem wir

2106
01:34:37,180 --> 01:34:39,180
das gemacht haben können wir auch gleich mal gucken ob es funktioniert

2107
01:34:39,180 --> 01:34:41,180
ähm man sagt jetzt ähm

2108
01:34:41,180 --> 01:34:43,180
embed TLS

2109
01:34:43,180 --> 01:34:45,180
es fängt übrigens alles

2110
01:34:45,180 --> 01:34:47,180
alles so an

2111
01:34:47,180 --> 01:34:49,180
net bind und da muss man

2112
01:34:49,180 --> 01:34:51,180
ihm jetzt sagen welchen Port

2113
01:34:51,180 --> 01:34:53,180
da muss man erstmal den Kontext übergeben

2114
01:34:53,180 --> 01:34:55,180
das ist das da

2115
01:34:55,180 --> 01:34:57,180
das ist das was wir hier oben angelegt haben

2116
01:34:57,180 --> 01:34:59,180
das nennen sie

2117
01:34:59,180 --> 01:35:01,180
das nennen sie irgendwie intern immer

2118
01:35:01,180 --> 01:35:03,180
Kontext Kontext ist so eines der

2119
01:35:03,180 --> 01:35:05,180
aussagelosesten

2120
01:35:05,180 --> 01:35:07,180
äh Worte überhaupt

2121
01:35:07,180 --> 01:35:09,180
äh

2122
01:35:09,180 --> 01:35:11,180
ist das ein Self Science

2123
01:35:11,180 --> 01:35:13,180
ja das ist komplett selbst generiert

2124
01:35:13,180 --> 01:35:15,180
ja ja äh es ist

2125
01:35:15,180 --> 01:35:17,180
glaube ich von der CA

2126
01:35:17,180 --> 01:35:19,180
KEKW für den äh Benutzer

2127
01:35:19,180 --> 01:35:21,180
LULW ausgestellt das Zertifikat

2128
01:35:23,180 --> 01:35:25,180
können wir gleich mal im Browser gucken was das Zertifikat macht

2129
01:35:25,180 --> 01:35:27,180
meint oh Update fertig

2130
01:35:27,180 --> 01:35:29,180
ok SSH

2131
01:35:29,180 --> 01:35:31,180
SSHFS also

2132
01:35:31,180 --> 01:35:33,180
zeig ich das mal

2133
01:35:33,180 --> 01:35:35,180
falls ich jetzt installieren darf

2134
01:35:35,180 --> 01:35:37,180
jo Kekl

2135
01:35:37,180 --> 01:35:39,180
hoffentlich geht das jetzt

2136
01:35:39,180 --> 01:35:41,180
weil ich hab ein Kernel Update hier drinnen gehabt

2137
01:35:41,180 --> 01:35:43,180
und ich vielleicht muss ich neu starten vorher

2138
01:35:43,180 --> 01:35:45,180
müssen wir mal schauen also SSHFS

2139
01:35:45,180 --> 01:35:47,180
wir machen mal einen Mount Punkt

2140
01:35:47,180 --> 01:35:49,180
ähm nennen wir mal Remote

2141
01:35:49,180 --> 01:35:51,180
so und jetzt verbinden wir uns

2142
01:35:51,180 --> 01:35:53,180
ich nehme jetzt mal nicht

2143
01:35:53,180 --> 01:35:55,180
Localhost weil das viele Leute immer verwirrt

2144
01:35:55,180 --> 01:35:57,180
wenn man in einem Beispiel Localhost verwendet

2145
01:35:57,180 --> 01:35:59,180
es ist zwar vollkommen egal

2146
01:35:59,180 --> 01:36:01,180
ob der Endpunkt Localhost ist oder ein

2147
01:36:01,180 --> 01:36:03,180
Remote Server aber viele Leute sind immer verwirrt

2148
01:36:03,180 --> 01:36:05,180
wenn man Localhost verwendet deswegen verwenden

2149
01:36:05,180 --> 01:36:07,180
wir jetzt mal eine eine IP

2150
01:36:07,180 --> 01:36:09,180
so jetzt sage ich SSHFS

2151
01:36:09,180 --> 01:36:11,180
und zwar möchte ich

2152
01:36:11,180 --> 01:36:13,180
den Ordner dort

2153
01:36:13,180 --> 01:36:15,180
nehmen wir mal den Ordner warte ich habe Comments in der

2154
01:36:15,180 --> 01:36:17,180
Schelle ausgeschaltet fuck

2155
01:36:17,180 --> 01:36:19,180
äh wir nehmen jetzt mal den Ordner in dem wir

2156
01:36:19,180 --> 01:36:21,180
gerade hier äh am Programmieren sind

2157
01:36:21,180 --> 01:36:23,180
so Plattformen oh Project

2158
01:36:23,180 --> 01:36:25,180
Web Server

2159
01:36:25,180 --> 01:36:27,180
so also

2160
01:36:27,180 --> 01:36:29,180
das ist der Ordner Remote auf dem

2161
01:36:29,180 --> 01:36:31,180
auf dem Remote Server

2162
01:36:31,180 --> 01:36:33,180
jetzt sage ich SSHFS

2163
01:36:33,180 --> 01:36:35,180
äh auf diesem Server

2164
01:36:35,180 --> 01:36:38,560
dieses Verzeichnis möchte

2165
01:36:38,560 --> 01:36:40,560
ich Mounten lokal bei mir

2166
01:36:40,560 --> 01:36:42,560
auf Remote

2167
01:36:42,560 --> 01:36:47,760
ok ich muss Rebooten

2168
01:36:47,760 --> 01:36:49,760
Kernel Update gemacht dann gehts nicht

2169
01:36:49,760 --> 01:36:53,710
äh dann ist die Webseite aber im Browser

2170
01:36:53,710 --> 01:36:55,710
untrusted wenn du selbst sein Zertifikat

2171
01:36:55,710 --> 01:36:57,710
verwendest korrekt aber das ist ja nicht wild

2172
01:36:57,710 --> 01:36:59,710
ich meine das ist ein Dashboard für mein

2173
01:36:59,710 --> 01:37:01,710
ESP32 der bei mir rumhängt

2174
01:37:01,710 --> 01:37:03,710
für Firmware Update zu machen klar ist das

2175
01:37:03,710 --> 01:37:05,710
untrusted ich könnte mir in der letzten ein Crypt

2176
01:37:05,710 --> 01:37:07,710
Zertifikat ausstellen lassen

2177
01:37:07,710 --> 01:37:09,710
aber wozu dann muss ich

2178
01:37:09,710 --> 01:37:11,710
das alle 3 Monate erneuern

2179
01:37:11,710 --> 01:37:13,710
was haben wir heute für Hintergrund

2180
01:37:13,710 --> 01:37:15,710
ah jede Menge Schafe

2181
01:37:15,710 --> 01:37:17,710
alles klar

2182
01:37:17,710 --> 01:37:19,710
äh Firefox

2183
01:37:19,710 --> 01:37:21,710
so äh wer manchmal

2184
01:37:21,710 --> 01:37:23,710
übrigens Probleme hat wenn so Sachen wie SSHFS

2185
01:37:23,710 --> 01:37:25,710
nicht gehen äh wenn ihr vorher ein

2186
01:37:25,710 --> 01:37:27,710
Kernel Update gemacht habt dann muss das

2187
01:37:27,710 --> 01:37:29,710
äh müsst ihr neu starten

2188
01:37:29,710 --> 01:37:31,710
äh ja Moment und jetzt muss ich

2189
01:37:31,710 --> 01:37:33,710
muss ich SSH neu starten

2190
01:37:33,710 --> 01:37:35,710
so wunderbar

2191
01:37:35,710 --> 01:37:37,710
so also

2192
01:37:37,710 --> 01:37:39,710
SSHFS Remote Server Verzeichnis

2193
01:37:39,710 --> 01:37:41,710
wird gemountet auf

2194
01:37:41,710 --> 01:37:43,710
lokales

2195
01:37:43,710 --> 01:37:45,710
Verzeichnis

2196
01:37:45,710 --> 01:37:49,150
zack und ihr seht

2197
01:37:49,150 --> 01:37:51,150
jetzt gehe ich in mein lokales Verzeichnis

2198
01:37:51,150 --> 01:37:53,150
und ich hab dort alle Dateien vom

2199
01:37:53,150 --> 01:37:55,150
Remote Server drin das heißt ich kann

2200
01:37:55,150 --> 01:37:57,150
hier drinnen jetzt

2201
01:37:57,150 --> 01:37:59,150
Dateien editieren

2202
01:37:59,150 --> 01:38:01,150
wie lokal

2203
01:38:01,150 --> 01:38:03,150
hier speichern

2204
01:38:03,150 --> 01:38:05,150
und das synkt mir das quasi rüber auf

2205
01:38:05,150 --> 01:38:10,060
den Remote Server das heißt

2206
01:38:10,060 --> 01:38:12,060
ich kann alle Tools verwenden ich muss das

2207
01:38:12,060 --> 01:38:14,060
Ding übrigens anmounten danach wieder wenn ich fertig bin

2208
01:38:14,060 --> 01:38:16,060
ähm das heißt ich kann

2209
01:38:16,060 --> 01:38:18,060
alle Sachen und ihr seht jetzt ist das Verzeichnis wieder leer

2210
01:38:18,060 --> 01:38:20,060
das heißt ich kann alle Tools verwenden

2211
01:38:20,060 --> 01:38:22,060
die ich lokal habe

2212
01:38:22,060 --> 01:38:24,060
zum editieren obwohl die Dateien

2213
01:38:24,060 --> 01:38:26,060
auf dem Remote Server liegen

2214
01:38:26,060 --> 01:38:28,060
und wie gesagt lasst euch

2215
01:38:28,060 --> 01:38:30,060
jetzt nicht dafür verwirren dass ich das hier

2216
01:38:30,060 --> 01:38:32,060
alles quasi von meiner VM mich

2217
01:38:32,060 --> 01:38:34,060
über meine VM in meine VM PSSH

2218
01:38:34,060 --> 01:38:36,060
ähm

2219
01:38:36,060 --> 01:38:39,700
also

2220
01:38:39,700 --> 01:38:41,700
verbunden hab

2221
01:38:41,700 --> 01:38:46,160
ähm es funktioniert aber im Remote Server

2222
01:38:46,160 --> 01:38:53,440
ja du kannst die eigene

2223
01:38:53,440 --> 01:38:55,440
CA du kannst die eigene CA im

2224
01:38:55,440 --> 01:38:57,440
Browser hinterlegen ja das geht

2225
01:38:57,440 --> 01:38:59,440
kannst du machen

2226
01:38:59,440 --> 01:39:01,440
kannst du LL statt LS

2227
01:39:01,440 --> 01:39:03,440
LA äh ich glaube das habe ich gar nicht

2228
01:39:03,440 --> 01:39:05,440
angelegt doch habe ich angelegt

2229
01:39:05,440 --> 01:39:07,440
äh LL gibt es ja nicht LL ist nur ein Alias

2230
01:39:07,440 --> 01:39:09,440
der bei manchen Sachen

2231
01:39:09,440 --> 01:39:11,440
mitgeliefert wird ich habe mir aber

2232
01:39:11,440 --> 01:39:13,440
mittlerweile den hier angewöhnt

2233
01:39:13,440 --> 01:39:15,440
ähm übrigens das ist kein LS aber

2234
01:39:15,440 --> 01:39:17,440
funktioniert bei LS genauso

2235
01:39:17,440 --> 01:39:19,440
weil ähm also

2236
01:39:19,440 --> 01:39:21,440
LS das macht folgendes

2237
01:39:21,440 --> 01:39:23,440
also list all

2238
01:39:23,440 --> 01:39:25,440
reverse time

2239
01:39:25,440 --> 01:39:27,440
und mit

2240
01:39:27,440 --> 01:39:29,440
ne warte mal ist das human readable

2241
01:39:29,440 --> 01:39:31,440
ich glaube das ist human readable size genau

2242
01:39:31,440 --> 01:39:33,440
also sprich der listet

2243
01:39:33,440 --> 01:39:35,440
alle Dateien auf in umgedrehter Reihenfolge

2244
01:39:35,440 --> 01:39:37,440
nach dem Änderungsdatum

2245
01:39:37,440 --> 01:39:42,220
nach dem Änderungsdatum

2246
01:39:42,220 --> 01:39:44,220
und das hier ist dass er

2247
01:39:44,220 --> 01:39:46,220
die Dateigröße in ordentlichen

2248
01:39:46,220 --> 01:39:48,220
ähm

2249
01:39:48,220 --> 01:39:50,220
Einheiten anzeigt

2250
01:39:50,220 --> 01:39:57,440
und nicht alles in Bytes

2251
01:39:57,440 --> 01:40:09,900
ja was für ne Statusbar benutzt

2252
01:40:09,900 --> 01:40:11,900
du das ist ähm

2253
01:40:11,900 --> 01:40:19,630
I3

2254
01:40:19,630 --> 01:40:21,630
I3 Status Rust ist das

2255
01:40:21,630 --> 01:40:23,630
warum auch immer es nicht installiert ist

2256
01:40:23,630 --> 01:40:27,140
ah weil ich ein outdated

2257
01:40:27,140 --> 01:40:29,140
Paket verwende ok

2258
01:40:29,140 --> 01:40:31,140
ähm die Config

2259
01:40:31,140 --> 01:40:33,140
dafür gibt es übrigens hier

2260
01:40:33,140 --> 01:40:39,580
wenn du es genau wissen willst hier da

2261
01:40:39,580 --> 01:40:41,580
äh

2262
01:40:41,580 --> 01:40:43,580
irgendwo hier

2263
01:40:43,580 --> 01:40:45,580
die Config drin da

2264
01:40:45,580 --> 01:40:47,580
ist nicht sonderlich viel

2265
01:40:47,580 --> 01:40:49,580
aber wichtig das man Emojis verwendet

2266
01:40:49,580 --> 01:40:52,900
exzellent

2267
01:40:52,900 --> 01:40:54,900
so sieht es mit SSHFS aus das ist eines der

2268
01:40:54,900 --> 01:41:09,920
praktischsten Tools überhaupt

2269
01:41:09,920 --> 01:41:11,920
ähm mal kurz schauen ob ich irgendwas

2270
01:41:11,920 --> 01:41:13,920
ich kann ja mein Chat noch immer nicht scrollen

2271
01:41:13,920 --> 01:41:15,920
auf einem anderen Bildschirm

2272
01:41:15,920 --> 01:41:17,920
oh hier

2273
01:41:17,920 --> 01:41:22,770
ja gut

2274
01:41:22,770 --> 01:41:24,770
aber das ist doch egal

2275
01:41:24,770 --> 01:41:26,770
äh

2276
01:41:26,770 --> 01:41:28,770
also bei einem normalen

2277
01:41:28,770 --> 01:41:35,130
nicht aber bei einem esp 32 daheim im netzwerk ist das egal und übrigens die

2278
01:41:35,130 --> 01:41:38,670
meisten iot geräte haben ungültige zertifikate

2279
01:41:38,670 --> 01:41:43,710
du musst es nicht anbauten aber ich anbaut es immer der flascht und sind

2280
01:41:43,710 --> 01:41:46,770
normalerweise auch so also muss es nicht unbedingt anbauten habe ich anbaut das

2281
01:41:46,770 --> 01:41:50,430
immer allein schon dass ich nicht aus versehen was drin ender remote auf dem

2282
01:41:50,430 --> 01:41:56,430
server also ich habe mal in meiner ausbildung den fehler gemacht ich habe

2283
01:41:56,430 --> 01:42:00,770
meinen ssh remote gemountet und habe dann dateien gelöscht in meinem

2284
01:42:00,770 --> 01:42:07,350
heimatverzeichnis recursive in meinem heimatverzeichnis dateien gelöscht und

2285
01:42:07,350 --> 01:42:10,590
der ssh mount war halt da auch unten drunter

2286
01:42:10,590 --> 01:42:19,210
aber ich hatte glück das ding ist schlau genug und löscht nicht auf ssh mounds

2287
01:42:19,210 --> 01:42:23,390
aber das kann man relativ einfach passieren also sprich wenn unser ver

2288
01:42:23,390 --> 01:42:28,730
gemountet hast über ssh fs und du löscht dann was aus versehen dann geht es halt

2289
01:42:28,730 --> 01:42:29,130
mit pech

2290
01:42:29,130 --> 01:42:35,730
auch direkt über ssh fs drüber also ich würde es immer anbauten wenn ich fertig

2291
01:42:35,730 --> 01:42:39,450
bin gerade wenn es ein produktiver server ist ist immer doof wenn man das

2292
01:42:39,450 --> 01:42:46,530
aus wenn man dann aus versehen irgendwas irgendwas kaputt macht also mal wieder

2293
01:42:46,530 --> 01:42:50,190
hier den editor auf machen wir weiter aber wie gesagt man muss es nicht

2294
01:42:50,190 --> 01:42:52,830
anbauten also wenn du es vergisst zu anbauten ist es nicht schlecht ist es

2295
01:42:52,830 --> 01:42:55,170
nicht schlimm

2296
01:42:56,330 --> 01:43:03,160
please don't klau alles klar ich glaube sie nicht ich war ab

2297
01:43:03,160 --> 01:43:04,320
reload

2298
01:43:05,140 --> 01:43:17,260
ja leider c++ monk monka s darf ich jetzt monitor aufmachen von meinem

2299
01:43:17,260 --> 01:43:20,540
controller sehr gut also wo sind wir stehen geblieben

2300
01:43:20,540 --> 01:43:28,960
wir wollten jetzt test ob der server funktioniert wir wollen jetzt gucken ob

2301
01:43:28,960 --> 01:43:32,140
der ob der ob das aber prinzipiell funktioniert und zwar muss man jetzt

2302
01:43:32,140 --> 01:43:37,040
sagen ein welchem port er lauschen soll also sprich mit net bunt und einem port

2303
01:43:37,040 --> 01:43:37,560
kann man ihm sagen woran er lauschen soll also sagen jetzt mal hier port ip ip ist ist egal es gibt im parkart

2304
01:43:37,560 --> 01:43:42,000
kann man ihm sagen woran er lauschen soll also wir sagen jetzt mal hier port ip ip

2305
01:43:42,160 --> 01:43:43,480
Nee, IP ist egal.

2306
01:43:44,040 --> 01:43:44,880
Wir haben nur ein Interface.

2307
01:43:45,260 --> 01:43:46,160
Port 4433.

2308
01:43:46,580 --> 01:43:48,160
Da sieht man auch schon wieder mal eine komische Sache.

2309
01:43:48,280 --> 01:43:49,700
Die wollen den Port unbedingt als String.

2310
01:43:50,360 --> 01:43:51,320
Okay, meinetwegen.

2311
01:43:51,440 --> 01:43:51,860
Können wir machen.

2312
01:43:52,360 --> 01:43:53,100
Port 443.

2313
01:43:53,600 --> 01:43:54,600
Und Protokoll.

2314
01:43:55,020 --> 01:43:57,220
Das ist tatsächlich relativ wichtig, dass man das angibt.

2315
01:43:57,220 --> 01:44:01,060
Weil, ja sonst, sonst funktioniert es halt einfach nicht.

2316
01:44:01,180 --> 01:44:02,280
Wenn man das nicht angibt.

2317
01:44:02,620 --> 01:44:03,520
So, da muss man eben sagen.

2318
01:44:03,660 --> 01:44:07,820
Embed, TLS, Underscore, Net, Proto, TCP.

2319
01:44:08,400 --> 01:44:08,500
So.

2320
01:44:09,680 --> 01:44:11,980
Und jetzt lauscht der Server an Port 443.

2321
01:44:12,980 --> 01:44:14,680
Und das können wir auch gleich ausprobieren, ob das funktioniert.

2322
01:44:15,460 --> 01:44:20,160
Wir verbinden uns dann nämlich einfach mal per OpenSSL hin.

2323
01:44:20,800 --> 01:44:24,620
Und gucken, ob wir da irgendwie eine Art Antwort bekommen.

2324
01:44:25,320 --> 01:44:27,500
So, und jetzt muss man noch ein bisschen Magic hintendran machen.

2325
01:44:27,560 --> 01:44:29,300
Das copy-paste ich aus dem Example wieder.

2326
01:44:29,640 --> 01:44:31,340
Weil man das einfach machen muss, dass es funktioniert.

2327
01:44:32,040 --> 01:44:38,780
Man muss die, ähm, den Random Generator muss man seeden und anwerfen und so.

2328
01:44:39,080 --> 01:44:41,260
Und draufgeschissen, ob das funktioniert.

2329
01:44:42,000 --> 01:44:47,820
So, und jetzt können wir das Ganze mal speichern und hochladen.

2330
01:44:47,920 --> 01:44:48,780
Und gucken, ob es jetzt funktioniert.

2331
01:44:49,300 --> 01:44:49,620
Upload.

2332
01:44:52,360 --> 01:44:52,560
Oh.

2333
01:44:53,780 --> 01:44:54,640
Has not been declared.

2334
01:44:56,340 --> 01:44:57,800
Äh, achso, ja, logisch.

2335
01:45:06,640 --> 01:45:07,040
Wow.

2336
01:45:14,460 --> 01:45:15,860
Okay, alles klar.

2337
01:45:20,320 --> 01:45:20,880
What the fuck?

2338
01:45:21,980 --> 01:45:23,940
Was zum Geier ist jetzt schon wieder los, C++?

2339
01:45:37,710 --> 01:45:39,410
Alter, wo ist denn jetzt dein Problem schon wieder?

2340
01:45:45,090 --> 01:45:45,710
Oh man.

2341
01:45:49,040 --> 01:45:49,680
Download, update.

2342
01:45:49,900 --> 01:45:51,060
Was hat er denn jetzt für Schmerzen?

2343
01:45:58,940 --> 01:45:59,300
Hm.

2344
01:45:59,420 --> 01:46:03,420
Äh, äh, äh, äh, äh, äh.

2345
01:46:03,420 --> 01:46:03,500
Warum kann, äh, äh, äh, äh, äh, äh.

2346
01:46:03,500 --> 01:46:03,600
Warum kann, äh, äh, äh, äh, äh.

2347
01:46:03,600 --> 01:46:03,660
Warum kann, äh, äh, äh, äh.

2348
01:46:03,660 --> 01:46:04,180
Warum kann, äh, äh, äh, äh.

2349
01:46:04,180 --> 01:46:06,640
Warum schaffen die es eigentlich nicht, ordentliche Fehlermeldungen zu geben?

2350
01:46:09,930 --> 01:46:10,370
What?

2351
01:46:10,970 --> 01:46:16,650
Was hast du für Schmerzen?

2352
01:46:19,900 --> 01:46:21,200
Wrong number of arguments?

2353
01:46:27,390 --> 01:46:28,170
Ja, wo ist das Problem?

2354
01:46:29,910 --> 01:46:32,150
Also, ich kann mir vorstellen, wo das Problem ist.

2355
01:46:33,490 --> 01:46:35,590
Ich glaube, weil ich hier nicht aufgepasst hab.

2356
01:46:37,610 --> 01:46:38,250
Wartet mal.

2357
01:46:38,710 --> 01:46:40,390
Weil ich nicht aufgepasst hab.

2358
01:46:41,410 --> 01:46:43,390
Als ich hier mein Template angelegt hab.

2359
01:46:45,010 --> 01:46:45,630
Das war.

2360
01:46:45,650 --> 01:46:49,720
Wo ist mein komisches Template?

2361
01:46:49,880 --> 01:46:50,960
Ne, passt. Inline.

2362
01:46:51,160 --> 01:46:51,960
Eigentlich alles richtig.

2363
01:46:52,700 --> 01:46:54,380
Tja, ich weiß nicht, was er für Schmerzen hat.

2364
01:46:55,500 --> 01:46:56,080
Ach Gott.

2365
01:46:59,190 --> 01:47:00,670
Okay, also, der mag nicht.

2366
01:47:00,850 --> 01:47:02,570
Der mag nicht, weil ich den Kram hier include.

2367
01:47:02,850 --> 01:47:03,410
So, gut.

2368
01:47:04,430 --> 01:47:04,790
Ähm.

2369
01:47:05,630 --> 01:47:07,070
Aus irgendwelchen Gründen darf ich das hier nicht include.

2370
01:47:07,410 --> 01:47:07,850
Alles klar.

2371
01:47:08,330 --> 01:47:09,770
Wenn ich das hier nicht include, dann geht's.

2372
01:47:09,870 --> 01:47:11,330
Allerdings kann ich dann die Sache nicht verwenden.

2373
01:47:12,370 --> 01:47:14,150
Was auch ziemlich toll ist, ja.

2374
01:47:15,190 --> 01:47:15,570
Exzellent.

2375
01:47:19,960 --> 01:47:20,320
Redefinition.

2376
01:47:20,980 --> 01:47:21,340
Okay.

2377
01:47:21,340 --> 01:47:21,420
Okay.

2378
01:47:21,700 --> 01:47:21,720
Okay.

2379
01:47:21,720 --> 01:47:21,800
Okay.

2380
01:47:21,800 --> 01:47:21,820
Okay.

2381
01:47:21,820 --> 01:47:25,720
Das ist, das ist der Kram, den ich meine, wenn du das nicht im C++-File machst,

2382
01:47:25,820 --> 01:47:27,420
spackt er irgendwie, spackt er irgendwie rum.

2383
01:47:29,220 --> 01:47:32,380
Ich weiß nicht genau, was er jetzt für Schmerzen hat, ehrlich gesagt.

2384
01:47:33,940 --> 01:47:35,820
Also, warum er da jetzt rummeckert.

2385
01:47:37,240 --> 01:47:38,980
Aber wir machen das jetzt einfach in C++-File.

2386
01:47:39,060 --> 01:47:39,400
Ist gut.

2387
01:47:40,060 --> 01:47:40,240
Was?

2388
01:47:40,340 --> 01:47:41,000
Before Numero?

2389
01:47:41,300 --> 01:47:41,720
What?

2390
01:47:43,040 --> 01:47:43,940
What is happening?

2391
01:47:47,850 --> 01:47:48,010
Hä?

2392
01:47:50,450 --> 01:47:50,890
Okay.

2393
01:47:51,530 --> 01:47:51,890
Ähm.

2394
01:47:52,590 --> 01:47:53,990
Redefinition of Template Bool.

2395
01:47:54,890 --> 01:48:07,610
Ist ja was.

2396
01:48:07,610 --> 01:48:14,390
Wir ignorieren das jetzt, machen das jetzt so, Copy-Paste das jetzt da rüber und alles ist gut.

2397
01:48:15,170 --> 01:48:15,850
Da geht's nämlich.

2398
01:48:16,830 --> 01:48:17,290
Ähm.

2399
01:48:17,850 --> 01:48:18,070
Zack.

2400
01:48:18,870 --> 01:48:19,070
Naja.

2401
01:48:19,870 --> 01:48:20,310
Start.

2402
01:48:22,750 --> 01:48:28,310
Weil, keine Ahnung, was der, was der da im Detail für, für Probleme wieder hat.

2403
01:48:29,190 --> 01:48:30,770
Aber wir machen jetzt einfach so.

2404
01:48:31,470 --> 01:48:31,970
Und dann machen wir so.

2405
01:48:32,270 --> 01:48:33,070
Und jetzt funktioniert's.

2406
01:48:34,270 --> 01:48:34,550
Zack.

2407
01:48:35,810 --> 01:48:36,250
Äh.

2408
01:48:36,310 --> 01:48:36,910
Das passt.

2409
01:48:36,910 --> 01:48:36,970
Das passt.

2410
01:48:37,050 --> 01:48:37,590
Und das da.

2411
01:48:37,690 --> 01:48:38,590
Machen wir auch hier raus.

2412
01:48:38,830 --> 01:48:39,970
Und kopieren das da rüber rein.

2413
01:48:40,610 --> 01:48:41,590
Und dann funktioniert's.

2414
01:48:42,430 --> 01:48:44,130
Und ich weiß nicht genau warum, aber es funktioniert.

2415
01:48:45,310 --> 01:48:45,670
Äh.

2416
01:48:45,710 --> 01:48:46,150
Oder auch nicht.

2417
01:48:47,110 --> 01:48:47,350
What?

2418
01:48:49,650 --> 01:48:50,090
Äh.

2419
01:48:53,030 --> 01:48:53,890
Ach, ist das geil.

2420
01:48:56,530 --> 01:48:56,930
Excellent.

2421
01:48:59,810 --> 01:49:00,490
Aber wahrlich.

2422
01:49:01,110 --> 01:49:01,970
Excellent ist das.

2423
01:49:02,790 --> 01:49:03,190
Excellent.

2424
01:49:10,980 --> 01:49:11,340
Huh?

2425
01:49:11,600 --> 01:49:11,860
Huh?

2426
01:49:13,340 --> 01:49:13,700
Guck mal da.

2427
01:49:13,700 --> 01:49:13,840
What?

2428
01:49:15,760 --> 01:49:16,120
What?

2429
01:49:19,500 --> 01:49:20,060
Achso.

2430
01:49:20,060 --> 01:49:20,360
What?

2431
01:49:22,160 --> 01:49:23,100
Muss ich auch includen?

2432
01:49:23,100 --> 01:49:23,520
Mach ich.

2433
01:49:23,520 --> 01:49:23,920
Mach ich.

2434
01:49:24,600 --> 01:49:26,100
Ich, ich, ich, ich, ich include.

2435
01:49:26,160 --> 01:49:26,980
Ich include alles.

2436
01:49:27,540 --> 01:49:28,700
Ich include alles, was du willst.

2437
01:49:28,760 --> 01:49:29,200
Mir egal.

2438
01:49:29,260 --> 01:49:29,700
Include.

2439
01:49:30,900 --> 01:49:31,400
Elpo.

2440
01:49:32,380 --> 01:49:32,620
Ah.

2441
01:49:32,720 --> 01:49:33,300
Und jetzt?

2442
01:49:33,840 --> 01:49:34,020
Ha.

2443
01:49:34,700 --> 01:49:35,240
Come on Bruh.

2444
01:49:36,880 --> 01:49:37,420
Gib's mir.

2445
01:49:38,300 --> 01:49:38,800
Mach.

2446
01:49:39,800 --> 01:49:40,380
Aaaaah!

2447
01:49:40,780 --> 01:49:42,420
Wo ist das Problem Alter?

2448
01:49:44,120 --> 01:49:46,640
Der Scheiß funktioniert doch im anderen Projekt eins zu eins.

2449
01:49:46,720 --> 01:49:47,840
Was hab ich denn jetzt vergessen?

2450
01:49:47,840 --> 01:49:48,360
Irgendwie.

2451
01:49:48,360 --> 01:49:48,560
Ach媽.

2452
01:49:48,560 --> 01:49:51,800
Ich bin immer wieder begeistert, wie schön das Ganze funktioniert.

2453
01:49:53,960 --> 01:49:55,760
Titan Toaster, mein Beileid.

2454
01:50:00,090 --> 01:50:02,610
Was ist dein Problem?

2455
01:50:06,480 --> 01:50:08,640
Was ist dein Problem, C++, jetzt?

2456
01:50:10,100 --> 01:50:11,580
Was magst du nicht?

2457
01:50:13,580 --> 01:50:23,480
Ich kopiere mir jetzt einfach mal den Kram rüber aus meinem Testprojekt, wo das alles funktioniert hat, wohlgemerkt noch.

2458
01:50:26,370 --> 01:50:27,430
Das können wir drin lassen.

2459
01:50:28,890 --> 01:50:29,090
Gut.

2460
01:50:37,880 --> 01:50:41,500
Alter, ich habe das 1 zu 1 aus meinem Testprojekt kopiert.

2461
01:50:53,190 --> 01:50:54,830
Ah, Moment, was hat der hier für Schmerzen?

2462
01:50:56,670 --> 01:50:58,470
Was hat er da jetzt für Probleme?

2463
01:51:04,740 --> 01:51:09,590
Standard, okay, okay, okay.

2464
01:51:09,850 --> 01:51:10,210
Okay.

2465
01:51:12,370 --> 01:51:14,210
Ich kopiere es mir nochmal.

2466
01:51:15,430 --> 01:51:17,950
Das ist das, was ich in meinem Testprojekt habe.

2467
01:51:19,190 --> 01:51:19,450
Äh.

2468
01:51:19,730 --> 01:51:27,990
Äh, geht das jetzt?

2469
01:51:28,870 --> 01:51:29,790
Warum geht das jetzt?

2470
01:51:31,950 --> 01:51:32,190
Hä?

2471
01:51:33,450 --> 01:51:33,850
Moment.

2472
01:51:43,720 --> 01:51:46,160
Ich habe meinen Logger eingebunden, oder ansonsten geht es nicht?

2473
01:51:47,920 --> 01:51:48,320
Ah.

2474
01:51:48,860 --> 01:51:50,120
Ja, natürlich geht das nicht.

2475
01:51:50,720 --> 01:51:51,440
Logger war nicht da.

2476
01:51:51,640 --> 01:51:53,400
Ja, natürlich, dann kann das ja auch nicht funktionieren.

2477
01:51:53,480 --> 01:51:54,160
Alter, bin ich blöd.

2478
01:51:54,480 --> 01:51:56,280
Okay, dann probieren wir das doch mal ohne Header.

2479
01:51:56,460 --> 01:51:58,500
Dann probieren wir das doch mal alles im Header-File zu machen.

2480
01:51:58,960 --> 01:52:02,800
Weil ich bin wirklich gespannt, ob das alles, ob das funktioniert, wenn ich das alles im Header-File mache.

2481
01:52:03,040 --> 01:52:04,800
Ich habe nämlich in meinem Test das Problem,

2482
01:52:04,900 --> 01:52:06,900
dass dann WLAN nicht ging.

2483
01:52:12,930 --> 01:52:13,430
Werd?

2484
01:52:14,650 --> 01:52:16,650
Ah, jetzt ist Helper nicht drin, okay.

2485
01:52:18,550 --> 01:52:21,550
Ja, so ein ordentliches Modulsystem hätte doch was, oder?

2486
01:52:22,690 --> 01:52:23,190
So.

2487
01:52:24,190 --> 01:52:26,190
Uint8, ja, das geht gleich weg.

2488
01:52:29,020 --> 01:52:33,020
Was halt auch legendär ist an C++, sind die hilfreichen Fehlermeldungen.

2489
01:52:33,960 --> 01:52:37,960
Erstmal irgendwo ein Komma vergessen und hier 30.000 Zeilen.

2490
01:52:37,960 --> 01:52:41,200
Übrigens wisst ihr, was meine Lieblings, meine Lieblings, ähm,

2491
01:52:41,200 --> 01:52:44,200
C++, Moment, ich muss mal kurz raussuchen,

2492
01:52:44,200 --> 01:52:46,200
weil ich weiß gar nicht mehr genau aus dem Kopf, wie es funktioniert,

2493
01:52:46,200 --> 01:52:53,700
was meine Lieblings-C++-Fehlermeldungs-, äh, Generierungstaktik ist.

2494
01:52:53,700 --> 01:52:55,700
Moment, ich zeig's euch.

2495
01:52:57,700 --> 01:52:58,700
Ja, passt mal auf.

2496
01:52:59,200 --> 01:53:04,200
Also, wenn ihr mal unendlich viele C++-Fehler sehen wollt, dann müsst ihr das hier machen.

2497
01:53:08,940 --> 01:53:10,940
Sieht nicht so böse aus, oder?

2498
01:53:13,440 --> 01:53:15,440
Also, sieht nicht so, sieht nicht so böse aus.

2499
01:53:15,440 --> 01:53:17,440
Oh, mittlerweile erkennt er das sogar.

2500
01:53:17,940 --> 01:53:18,940
Oh!

2501
01:53:19,940 --> 01:53:22,440
Er erkennt das, okay, gut, gut, ich hab nix gesagt.

2502
01:53:28,790 --> 01:53:29,790
Achso, Moment.

2503
01:53:32,110 --> 01:53:33,110
Ah, ne, ne.

2504
01:53:34,110 --> 01:53:34,610
Wart.

2505
01:53:34,610 --> 01:53:35,110
Ne.

2506
01:53:38,140 --> 01:53:39,140
Moment, wie ging das aber?

2507
01:53:39,640 --> 01:53:40,140
Wie ging...

2508
01:53:41,140 --> 01:53:41,640
Wart.

2509
01:53:44,800 --> 01:53:45,300
Moment.

2510
01:53:46,800 --> 01:53:47,800
Wie, wie, wie war...

2511
01:53:48,800 --> 01:53:49,800
Ist ein Schlüsselwort?

2512
01:53:49,800 --> 01:53:50,800
Okay, okay, okay.

2513
01:53:50,800 --> 01:53:52,300
Ähm, dann geht das gar nicht mehr.

2514
01:53:52,800 --> 01:53:53,800
Dann geht das gar nicht mehr.

2515
01:53:54,800 --> 01:53:55,300
Ähm...

2516
01:53:56,300 --> 01:53:56,800
Das ist ja cool.

2517
01:53:56,800 --> 01:53:57,300
Das haben...

2518
01:53:57,300 --> 01:54:01,300
Okay, das haben sie mittlerweile auch mitgekriegt, dass das, äh, dass das ein Fehler ist.

2519
01:54:04,300 --> 01:54:05,300
Guckt's euch mal an.

2520
01:54:17,720 --> 01:54:18,220
Ja.

2521
01:54:21,930 --> 01:54:23,430
Weil ein Vergleich verkehrt ist.

2522
01:54:29,900 --> 01:54:31,400
Aber ich bin begeistert.

2523
01:54:31,900 --> 01:54:37,900
Die letzte Version von den, äh, C++-Tools in Visual Studio hat das noch nicht als Fehler angezeigt.

2524
01:54:38,900 --> 01:54:40,900
Da wusstest du gar nicht, was Sache ist, warum es kaputt geht.

2525
01:54:42,400 --> 01:54:44,900
Aber es ist, es ist schon ein bisschen merkwürdig, ne?

2526
01:54:44,900 --> 01:54:46,900
Warum darf man...

2527
01:54:46,900 --> 01:54:49,900
Das ist auch so eine inkonsistente Geschichte von C++.

2528
01:54:49,900 --> 01:54:51,900
Warum darf ich...

2529
01:54:51,900 --> 01:54:52,900
Also, ich...

2530
01:54:52,900 --> 01:54:53,900
Das ist rhetorisch gefragt.

2531
01:54:53,900 --> 01:54:57,900
Ich weiß, warum ich darf, weil die, äh, weil die hier Equals überladen haben.

2532
01:54:57,900 --> 01:54:59,900
Aber, äh, warum ist das, warum ist das überhaupt so?

2533
01:54:59,900 --> 01:55:02,900
Und warum ist das im Standard so, im Standard-Library?

2534
01:55:02,900 --> 01:55:13,900
Warum darf ich einen Null-Pointer einem Standard-String zuweisen, aber warum darf ich dann wiederum diese, diesen Standard-String nicht checken, ob er Null ist?

2535
01:55:13,900 --> 01:55:15,900
Ergibt erstmal keinen Sinn, ne?

2536
01:55:16,900 --> 01:55:18,900
Äh, wie so vieles in C++ ergibt das keinen Sinn.

2537
01:55:19,900 --> 01:55:30,900
Ähm, das liegt daran, weil der gar kein, weil das gar kein Null-Pointer ist, weil der, wenn er einen Null-Pointer kriegt, einfach einen leeren String draus macht.

2538
01:55:33,470 --> 01:55:35,470
Also, die haben, die haben das hier überladen.

2539
01:55:36,470 --> 01:55:39,470
Also, es kann sein, dass es nicht hundertprozentig stimmt.

2540
01:55:39,470 --> 01:55:41,470
Ich hab mir die Implementierung jetzt nicht genau angeguckt.

2541
01:55:41,470 --> 01:55:44,470
Aber, soweit ich das verstanden habe, die haben diesen Assign-Operator überladen.

2542
01:55:45,470 --> 01:55:50,470
Und wenn sie einen Null-Pointer bekommen, machen sie einfach daraus das hier.

2543
01:55:50,470 --> 01:55:52,470
Magic.

2544
01:55:52,470 --> 01:55:54,470
Machen sie daraus.

2545
01:55:54,470 --> 01:55:57,910
Ah, das funktioniert jetzt ja.

2546
01:55:57,910 --> 01:55:59,910
Äh, Moment, warum funktioniert das nicht?

2547
01:55:59,910 --> 01:56:00,910
Das ist Mist.

2548
01:56:00,910 --> 01:56:01,910
Das muss funktionieren.

2549
01:56:01,910 --> 01:56:02,910
Der Vergleich.

2550
01:56:02,910 --> 01:56:07,910
Aber, also, das hier ist das gleiche wie das hier.

2551
01:56:07,910 --> 01:56:10,910
Es ist halt einfach wir.

2552
01:56:10,910 --> 01:56:12,910
Warum macht es Magic da unten drunter?

2553
01:56:12,910 --> 01:56:13,910
Warum? Weshalb?

2554
01:56:13,910 --> 01:56:15,910
Es ergibt für mich keinerlei Sinn.

2555
01:56:15,910 --> 01:56:21,910
Wenn man, wenn man das nicht gegen Null-Pointer checken kann.

2556
01:56:21,910 --> 01:56:22,910
Okay.

2557
01:56:22,910 --> 01:56:27,910
Dann ist es halt ein Typ, der nie Null sein darf.

2558
01:56:27,910 --> 01:56:29,910
Ist in Ordnung.

2559
01:56:29,910 --> 01:56:33,910
Aber dann sollte man auch nicht equals Null-Pointer sagen können.

2560
01:56:33,910 --> 01:56:36,910
Sondern einfach, dann gibt es Error, wenn man Null-Pointer zuweist.

2561
01:56:36,910 --> 01:56:38,910
Oder am besten Compiler-Error.

2562
01:56:38,910 --> 01:56:40,910
Type cannot be null.

2563
01:56:40,910 --> 01:56:43,910
Irgendwas halbwegs, wie sie immer sagen.

2564
01:56:43,910 --> 01:56:44,910
Irgendwie sowas, was halt sane ist.

2565
01:56:44,910 --> 01:56:48,910
Was halt irgendwie noch, das heißt insane auf Deutsch, noch, noch bei Verstand ist.

2566
01:56:48,910 --> 01:56:51,910
Irgendwie.

2567
01:56:51,910 --> 01:56:52,910
Gesund.

2568
01:56:52,910 --> 01:56:53,910
Gesund.

2569
01:56:53,910 --> 01:56:54,910
Ja, was halt noch gesund ist.

2570
01:56:54,910 --> 01:56:56,910
Und nicht so Magic-Dinger.

2571
01:56:56,910 --> 01:56:58,910
So, wir waren hier aber gerade bei unserem Web-Server.

2572
01:56:58,910 --> 01:56:59,910
Und jetzt gucken wir mal, ob das funktioniert.

2573
01:56:59,910 --> 01:57:01,910
Ich uploade, ich uploade, nee, habe ich gerade abgeloadet?

2574
01:57:01,910 --> 01:57:04,910
Ich uploade mal.

2575
01:57:04,910 --> 01:57:07,910
Auf unseren ESP.

2576
01:57:07,910 --> 01:57:12,910
Und dann checken wir mal, ob das funktioniert.

2577
01:57:12,910 --> 01:57:13,910
Oh, huge upload speed.

2578
01:57:13,910 --> 01:57:17,730
Huge upload speed.

2579
01:57:17,730 --> 01:57:20,730
Ich reg mich nicht auf wegen Visual Studio Code.

2580
01:57:20,730 --> 01:57:21,730
Das ist tatsächlich ganz gut.

2581
01:57:21,730 --> 01:57:23,730
Ich reg mich auf wegen C++.

2582
01:57:23,730 --> 01:57:25,730
Weil vieles davon, keine Visual Studio Code, nix.

2583
01:57:25,730 --> 01:57:27,730
Da ist C++ dran schuld.

2584
01:57:27,730 --> 01:57:33,000
Äh, Johnson, in dem Fall ist es ganz einfach.

2585
01:57:33,000 --> 01:57:36,000
Wenn du das für so einen Microcontroller machen willst.

2586
01:57:36,000 --> 01:57:41,000
Installier dir Platform.io und es macht alles für dich.

2587
01:57:41,000 --> 01:57:44,000
Komplett vorkonfiguriert.

2588
01:57:44,000 --> 01:57:46,000
Okay, also Telnet.

2589
01:57:46,000 --> 01:57:47,000
Oh, wir haben was vergessen.

2590
01:57:47,000 --> 01:57:49,000
Das geht noch gar nicht.

2591
01:57:49,000 --> 01:57:51,000
Telnet, was haben wir für eine IP gekriegt?

2592
01:57:51,000 --> 01:57:55,850
Ja.

2593
01:57:55,850 --> 01:57:57,850
IP 443.

2594
01:57:57,850 --> 01:57:58,850
Äh, geht übrigens nicht.

2595
01:57:58,850 --> 01:57:59,850
Oh, guck mal da.

2596
01:57:59,850 --> 01:58:01,850
Wir haben eine Verbindung zum Server.

2597
01:58:01,850 --> 01:58:03,850
Ha, hat funktioniert.

2598
01:58:03,850 --> 01:58:05,850
Gut, mehr funktioniert nichts, weil ich rufe ja nirgends ab.

2599
01:58:05,850 --> 01:58:07,850
Also, ihr seht, der Server läuft.

2600
01:58:07,850 --> 01:58:08,850
Port 443.

2601
01:58:08,850 --> 01:58:09,850
Da.

2602
01:58:09,850 --> 01:58:13,550
Connected to.

2603
01:58:13,550 --> 01:58:15,550
Was wir jetzt auch machen können, ist ein Curl.

2604
01:58:15,550 --> 01:58:17,550
Aber das wird jetzt schon mal nicht.

2605
01:58:17,550 --> 01:58:19,550
Also, da passiert jetzt nix.

2606
01:58:19,550 --> 01:58:20,550
Kann ich euch gleich sagen.

2607
01:58:20,550 --> 01:58:21,550
Das mag nix.

2608
01:58:21,550 --> 01:58:24,550
Weil das macht ja noch auf der Ebene nix.

2609
01:58:24,550 --> 01:58:27,550
Der kann sich connecten und kann was hinschicken.

2610
01:58:27,550 --> 01:58:28,550
Das ist aber alles.

2611
01:58:28,550 --> 01:58:29,550
Mehr kann er nicht.

2612
01:58:29,550 --> 01:58:30,550
Weil es kommt ja nix zurück.

2613
01:58:30,550 --> 01:58:32,550
Also, was wir jetzt gemacht haben ist,

2614
01:58:32,550 --> 01:58:36,550
einen Server gestartet, der auf Port 443 läuft.

2615
01:58:36,550 --> 01:58:40,550
Kein HTTPS, kein sonst was, nix gerade.

2616
01:58:40,550 --> 01:58:46,760
Wenn ich versuche, mich auf HTTPS zu connecten,

2617
01:58:46,760 --> 01:58:51,760
dann sagt er hier, okay, Verbindung ist connected.

2618
01:58:51,760 --> 01:58:53,760
Und jetzt versucht er, einen SSL-Handshake zu machen,

2619
01:58:53,760 --> 01:58:55,760
der noch nicht funktionieren kann,

2620
01:58:55,760 --> 01:58:56,760
weil wir haben ja noch nix gemacht,

2621
01:58:56,760 --> 01:58:59,760
außer eben den Server zu starten auf Port 443.

2622
01:58:59,760 --> 01:59:01,760
Also, der macht keinen SSL-Handshake,

2623
01:59:01,760 --> 01:59:03,760
kein Zertifikat-Austausch oder irgendwas.

2624
01:59:03,760 --> 01:59:08,640
Also, Johnson, wenn du keinen Microcontroller programmierst,

2625
01:59:08,640 --> 01:59:10,640
habe ich das noch nie gemacht.

2626
01:59:10,640 --> 01:59:12,640
Die einfachste Variante ist vielleicht dann wirklich

2627
01:59:12,640 --> 01:59:14,640
sowas wie das hier mal in der Trial-Version auszuprobieren,

2628
01:59:14,640 --> 01:59:17,640
ob das nicht einfach alles schon gut einrichtet.

2629
01:59:17,640 --> 01:59:18,640
Keine Ahnung.

2630
01:59:18,640 --> 01:59:22,640
Das Problem an C++ und diesem ganzen Uralt liegt daran,

2631
01:59:22,640 --> 01:59:25,640
dass halt viele Tools teilweise richtig uralt sind

2632
01:59:25,640 --> 01:59:27,640
und das Setup eklig ist.

2633
01:59:27,640 --> 01:59:30,640
Dazu kommt, dass C++ keine eingebauten Module

2634
01:59:30,640 --> 01:59:31,640
und Package-Manager hat.

2635
01:59:31,640 --> 01:59:33,640
Also, das heißt, du musst dir auch irgendwelche

2636
01:59:33,640 --> 01:59:37,640
Header-Files rumkopieren oder was nicht Offizielles verwenden.

2637
01:59:37,640 --> 01:59:40,640
Das macht es alles in der Handhabung nicht schön.

2638
01:59:40,640 --> 01:59:43,640
Also, wenn du einfach nur anfangen willst zu programmieren,

2639
01:59:43,640 --> 01:59:45,640
ohne dass es jetzt C++ sein muss,

2640
01:59:45,640 --> 01:59:48,640
würde ich was anderes nehmen als C++.

2641
01:59:48,640 --> 01:59:51,640
C++ ist an vielen Stellen einfach nur blanke Zumutung.

2642
01:59:51,640 --> 01:59:55,960
Wenn man da ein bisschen was Neues gewöhnt ist.

2643
01:59:55,960 --> 01:59:57,960
Oder muss es C++ sein?

2644
01:59:57,960 --> 01:59:59,960
Also, wenn es C++ sein muss,

2645
01:59:59,960 --> 02:00:02,960
ja, dann kommst du nicht drum herum dann.

2646
02:00:02,960 --> 02:00:05,960
Gut, aber was man jetzt sieht, ist, Server läuft

2647
02:00:05,960 --> 02:00:09,960
und wir können uns zum Server verbinden.

2648
02:00:09,960 --> 02:00:11,960
SSL funktioniert noch nicht.

2649
02:00:11,960 --> 02:00:13,960
So, das ist das Nächste, was wir jetzt machen.

2650
02:00:13,960 --> 02:00:15,960
Jetzt gucken wir, dass irgendwie SSL funktioniert.

2651
02:00:15,960 --> 02:00:18,960
By the way, das hat übrigens in meinem Test nicht funktioniert.

2652
02:00:18,960 --> 02:00:21,960
Da ging mein WLAN nicht mehr, wenn ich den Kram hier so eingestellt habe.

2653
02:00:21,960 --> 02:00:23,960
Also, so ist mir das ja sogar noch viel lieber,

2654
02:00:23,960 --> 02:00:25,960
wenn ich das alles im Header-File schreiben kann.

2655
02:00:25,960 --> 02:00:29,960
So, das Nächste ist, was wir jetzt machen müssen.

2656
02:00:29,960 --> 02:00:31,960
Also, Verbindung zu diesem Server geht.

2657
02:00:31,960 --> 02:00:33,960
Hallo, Kengin.

2658
02:00:33,960 --> 02:00:37,960
So, übrigens, ich zeige euch nochmal was.

2659
02:00:37,960 --> 02:00:39,960
Ich habe mir nämlich was gebastelt.

2660
02:00:39,960 --> 02:00:42,960
Die wollen ja hier aus irgendwelchen unerfindlichen Gründen

2661
02:00:42,960 --> 02:00:45,960
den Port als String haben.

2662
02:00:45,960 --> 02:00:47,960
Und wir übergeben den Port aber,

2663
02:00:47,960 --> 02:00:50,960
wie ich es persönlich für sinnvoll erhalte,

2664
02:00:50,960 --> 02:00:52,960
als int.

2665
02:00:52,960 --> 02:00:54,960
Weil ein Port ist halt einfach eine Zahl.

2666
02:00:54,960 --> 02:00:56,960
Und wir übergeben es auch nur als int 16,

2667
02:00:56,960 --> 02:01:02,960
weil, wie viel passt in den unsigned int 16 rein, Leute?

2668
02:01:02,960 --> 02:01:04,960
Big Brain Chat.

2669
02:01:04,960 --> 02:01:09,610
Wie viel passt da rein?

2670
02:01:09,610 --> 02:01:11,610
Unsigned, unsigned.

2671
02:01:11,610 --> 02:01:15,780
Wohlgemerkt.

2672
02:01:15,780 --> 02:01:17,780
64k, ja, genau.

2673
02:01:17,780 --> 02:01:19,780
Ja.

2674
02:01:19,780 --> 02:01:24,370
So in Dezimal.

2675
02:01:24,370 --> 02:01:26,370
Ich will da auf was bestimmtes rauf.

2676
02:01:26,370 --> 02:01:28,370
Deswegen muss jetzt einer die richtige Sache sagen.

2677
02:01:29,370 --> 02:01:31,370
Ja, okay, der Hörwing sagt schon, genau.

2678
02:01:31,370 --> 02:01:35,370
Flintstone sagt 65.536, exakt.

2679
02:01:35,370 --> 02:01:38,370
Und wer in Netzwerktechnik aufgepasst hat, weiß,

2680
02:01:38,370 --> 02:01:44,370
dass es auch 65.535 Ports gibt.

2681
02:01:44,370 --> 02:01:47,370
Das heißt, in dem Fall bietet sich das einfach an,

2682
02:01:47,370 --> 02:01:49,370
ein unsigned int 16 zu nehmen.

2683
02:01:49,370 --> 02:01:51,370
Weil hier passen exakt so viele Zahlen rein,

2684
02:01:51,370 --> 02:01:53,370
wie es Ports gibt.

2685
02:01:53,370 --> 02:01:55,370
Und 0.

2686
02:01:55,370 --> 02:01:57,370
Mal draufgeschissen auf 0.

2687
02:01:57,370 --> 02:01:58,370
Ist jetzt erstmal egal.

2688
02:01:58,370 --> 02:02:00,370
Ihr findet immer irgendwas, was ihr nehmt.

2689
02:02:00,370 --> 02:02:02,370
Doch, Port 0 gibt es tatsächlich.

2690
02:02:02,370 --> 02:02:08,670
Es gibt tatsächlich Port 0.

2691
02:02:08,670 --> 02:02:13,520
Port 0 ist reserviert.

2692
02:02:13,520 --> 02:02:14,520
Haben sie sich gedacht,

2693
02:02:14,520 --> 02:02:16,520
ne, mit so einem Plötzchen fangen wir erst gar nicht an.

2694
02:02:16,520 --> 02:02:18,520
Aber den gibt es theoretisch natürlich, ja.

2695
02:02:18,520 --> 02:02:20,520
Weil es auch ein unsigned int 16 Nummer ist.

2696
02:02:20,520 --> 02:02:25,850
Man könnte wahrscheinlich wirklich was auf Port 0 laufen lassen.

2697
02:02:25,850 --> 02:02:27,850
Habe ich noch nie probiert, ob das funktioniert.

2698
02:02:27,850 --> 02:02:28,850
Probieren wir mal aus.

2699
02:02:28,850 --> 02:02:29,850
Wir haben mal root.

2700
02:02:29,850 --> 02:02:31,850
Guck mal, was auf Port 0.

2701
02:02:31,850 --> 02:02:33,850
netcat minus listen.

2702
02:02:33,850 --> 02:02:34,850
Ähm.

2703
02:02:34,850 --> 02:02:37,160
Äh, äh.

2704
02:02:37,160 --> 02:02:38,160
Moment, äh.

2705
02:02:38,160 --> 02:02:40,160
Wie ist meine IP?

2706
02:02:40,160 --> 02:02:43,160
Wobei, für listen braucht man gar keine IP, ne?

2707
02:02:43,160 --> 02:02:45,160
Port 0.

2708
02:02:45,160 --> 02:02:47,480
Okay.

2709
02:02:47,480 --> 02:02:49,480
Hört der jetzt wirklich auf Port 0?

2710
02:02:49,480 --> 02:03:01,450
Äh, Moment.

2711
02:03:01,450 --> 02:03:02,450
Ich mach das, ich mach das glaube ich falsch.

2712
02:03:02,450 --> 02:03:03,450
Ich glaube, man musste,

2713
02:03:03,450 --> 02:03:05,450
das kam mit netcat-Geschichten nie aus dem Kopf.

2714
02:03:05,450 --> 02:03:17,600
Ach, minus p, genau.

2715
02:03:17,600 --> 02:03:24,450
Ja, ja, ja.

2716
02:03:24,450 --> 02:03:25,450
Nee, war das minus?

2717
02:03:25,450 --> 02:03:30,770
Bin ich jetzt blöd?

2718
02:03:30,770 --> 02:03:36,200
Wie, das ging doch so.

2719
02:03:36,200 --> 02:03:39,200
Und jetzt ist das die IP weglassen, ne?

2720
02:03:39,200 --> 02:03:40,200
Okay.

2721
02:03:40,200 --> 02:03:42,200
Gucken wir mal, ob man auf Port 0 lauschen kann.

2722
02:03:42,200 --> 02:03:46,210
Nee, das mag er nicht.

2723
02:03:46,210 --> 02:03:48,210
Dann wählt er random einen Port aus.

2724
02:03:48,210 --> 02:03:51,210
Also, man kann auf Port 666 lauschen.

2725
02:03:51,210 --> 02:03:53,210
Dann lauscht er auf Port 6666.

2726
02:03:53,210 --> 02:03:56,210
Aber, ähm, auf Port 0 darf man nicht lauschen.

2727
02:03:56,210 --> 02:03:58,210
Dann sucht er sich random einen aus, wie es aussieht.

2728
02:03:58,210 --> 02:03:59,210
Na gut.

2729
02:03:59,210 --> 02:04:01,210
Darf man auf Port 1 lauschen?

2730
02:04:01,210 --> 02:04:02,210
Auf Port 1 darf man lauschen.

2731
02:04:02,210 --> 02:04:07,610
Auf Port 0 darf man nicht lauschen.

2732
02:04:07,610 --> 02:04:08,610
Ja, wahrscheinlich ist es besser.

2733
02:04:08,610 --> 02:04:09,610
Hätte das sein können.

2734
02:04:09,610 --> 02:04:10,610
Habe ich noch nie ausprobiert.

2735
02:04:10,610 --> 02:04:13,610
Der Chat, der Chat bringt mich immer auf so Ideen.

2736
02:04:13,610 --> 02:04:14,610
Guck mal hier.

2737
02:04:14,610 --> 02:04:15,610
Chat.

2738
02:04:15,610 --> 02:04:17,610
Chat.

2739
02:04:17,610 --> 02:04:20,180
Chat.

2740
02:04:20,180 --> 02:04:21,180
Chat.

2741
02:04:21,180 --> 02:04:22,180
Chat.

2742
02:04:22,180 --> 02:04:23,180
Chat.

2743
02:04:23,180 --> 02:04:24,180
Chat.

2744
02:04:24,180 --> 02:04:25,180
Chat.

2745
02:04:25,180 --> 02:04:26,180
Chat.

2746
02:04:26,180 --> 02:04:27,180
Das ist gut, wenn du einen random Port brauchst.

2747
02:04:27,180 --> 02:04:28,180
Ja, ganz ehrlich habe ich mir noch nie Gedanken darüber gemacht.

2748
02:04:28,180 --> 02:04:29,180
Aber, ähm, ist gut zu wissen.

2749
02:04:29,180 --> 02:04:30,180
Man lernt ja nie aus, was das angeht.

2750
02:04:30,180 --> 02:04:33,180
Also, wir haben jetzt einen Server gestartet auf Port 443.

2751
02:04:33,180 --> 02:04:35,180
Die wollen das hier ja irgendwie als String haben.

2752
02:04:35,180 --> 02:04:36,180
So.

2753
02:04:36,180 --> 02:04:41,180
Als character, farklı, C-String-character-Array mit 0 hintendran.

2754
02:04:41,180 --> 02:04:48,900
Und zwar, ihr seht ja, ich habe hier diese Format-L어� оперiert, dass ich eine objective

2755
02:04:48,900 --> 02:04:58,780
diese Format-Library drin, die ist übrigens die einzige C++-Library, die ich wirklich gerne verwende,

2756
02:04:59,720 --> 02:05:03,940
weil damit kann man seine Strings so formatieren, wie man das beispielsweise aus Python kennt

2757
02:05:03,940 --> 02:05:09,060
oder ein bisschen teilweise, wie man es jetzt aus dem neuen Format-String aus C-Sharp kennt.

2758
02:05:09,480 --> 02:05:12,620
Also man muss sich nicht mehr mit Printf rumärgern, man kann sowas machen.

2759
02:05:13,140 --> 02:05:16,280
fmt format answer und dann kannst du hier den Kram reinschreiben.

2760
02:05:16,280 --> 02:05:22,280
Also ein bisschen wie Printf, allerdings deutlich besser als Printf, kann mehr Typen, hat mehr Format-Optionen,

2761
02:05:22,340 --> 02:05:23,940
kann eigene Typen formatieren.

2762
02:05:24,980 --> 02:05:27,800
Nicht nur wie Printf, was irgendwie nur eine Handvoll Sachen kann.

2763
02:05:29,140 --> 02:05:31,400
Named Arguments, das was C++ schon lange fehlt.

2764
02:05:31,680 --> 02:05:34,700
Übrigens auch so ein Thema in C++, was ich übelst beschissen finde.

2765
02:05:36,340 --> 02:05:37,280
C++ hat...

2766
02:05:39,080 --> 02:05:41,040
Kannst dich auch formatieren, muss man ausprobieren.

2767
02:05:41,240 --> 02:05:44,440
Es kann so viele Sachen machen, dass es auch dein Hirn formatiert wahrscheinlich.

2768
02:05:45,400 --> 02:05:45,440
C++ hat...

2769
02:05:46,280 --> 02:05:49,200
C++ hat ja sowas wie Default Arguments.

2770
02:05:49,460 --> 02:05:53,000
Also ich kann jetzt sagen, keine Ahnung, mein Standard-Passwort ist blub.

2771
02:05:53,560 --> 02:06:01,020
Das heißt, wenn ich diese Funktion aufrufe und nicht pw übergebe, dann setzt er pw auf blub.

2772
02:06:01,700 --> 02:06:03,320
Also es hat Default Arguments.

2773
02:06:04,060 --> 02:06:11,820
Allerdings, irgendwie hat sich einer im C++-Gremium gedacht, wir machen Default Arguments ohne Named Arguments.

2774
02:06:12,480 --> 02:06:13,280
Was heißt...

2775
02:06:14,680 --> 02:06:15,120
So.

2776
02:06:15,120 --> 02:06:21,360
Was zum Beispiel heißt, wenn ich jetzt sowas hier habe, dann muss ich immer alles angeben.

2777
02:06:21,700 --> 02:06:23,660
In einer normalen Sprache könnte man...

2778
02:06:23,660 --> 02:06:26,660
Ich mach da mal eine Funktion draus, da kann ich euch das besser zeigen.

2779
02:06:27,260 --> 02:06:27,500
Also.

2780
02:06:27,940 --> 02:06:28,040
So.

2781
02:06:28,520 --> 02:06:29,900
Wir haben jetzt hier die Funktion Start.

2782
02:06:30,740 --> 02:06:33,180
So, die Funktion Start kann ich folgendermaßen aufrufen.

2783
02:06:34,000 --> 02:06:34,180
So.

2784
02:06:35,140 --> 02:06:35,420
So.

2785
02:06:37,520 --> 02:06:38,200
Das war's.

2786
02:06:38,300 --> 02:06:39,400
Was hat er für Schmerzen?

2787
02:06:40,440 --> 02:06:40,700
Stimmt.

2788
02:06:40,700 --> 02:06:41,160
So.

2789
02:06:41,560 --> 02:06:45,700
Was da jetzt passiert ist, der ruft die Funktion auf mit diesem Port und nimmt für User...

2790
02:06:46,560 --> 02:06:50,940
Und für Passwort das Default Argument, was ich hinten angegeben habe.

2791
02:06:51,160 --> 02:06:53,380
Das ist ja schon mal gut, dass die sowas eingebaut haben in C++.

2792
02:06:54,020 --> 02:06:58,240
Aber was es jetzt Fail macht ist, dass C++ keine Named Arguments hat.

2793
02:06:58,240 --> 02:07:06,120
Das bedeutet, mal angenommen, ich möchte jetzt nicht User setzen, sondern nur Passwort setzen, dann geht das nicht.

2794
02:07:07,060 --> 02:07:09,680
Also wenn ich sowas hier machen möchte wie...

2795
02:07:09,680 --> 02:07:12,100
Gleich 0, das geht nicht.

2796
02:07:12,260 --> 02:07:12,700
Das gibt's nicht.

2797
02:07:12,940 --> 02:07:13,940
Das kann das nicht.

2798
02:07:17,480 --> 02:07:18,960
Also ich muss immer sagen...

2799
02:07:19,280 --> 02:07:21,280
Ich muss immer sagen...

2800
02:07:21,280 --> 02:07:27,020
Neuer User, neues Passwort.

2801
02:07:27,520 --> 02:07:29,060
Ich kann da keine Named Arguments...

2802
02:07:29,060 --> 02:07:36,600
Also ich weiß nicht, wie man auf die Idee kommt, Default Arguments einzuführen, allerdings nicht zeitgleich Named Arguments.

2803
02:07:36,680 --> 02:07:37,380
Verstehe ich nicht.

2804
02:07:37,820 --> 02:07:39,900
Das eine braucht das andere irgendwie.

2805
02:07:40,680 --> 02:07:45,460
Und in dem Fall ist es ja noch relativ sinnvoll, wenn man das Passwort ändert, dass man auch den Username ändert.

2806
02:07:45,540 --> 02:07:50,160
Aber überlegt euch mal, ihr habt jetzt irgendeine Funktion, die was vom Dateisystem liest.

2807
02:07:50,660 --> 02:08:05,040
Sowas hier nach dem Motto File Name, keine Ahnung, Size, Mode, keine Ahnung, Blocking, irgendwas.

2808
02:08:05,040 --> 02:08:12,300
So, ihr habt irgendwas langes.

2809
02:08:12,680 --> 02:08:20,300
So und es wurde im Prinzip für alles Default Sachen definiert.

2810
02:08:20,920 --> 02:08:22,640
Und die Default Sachen sind gut.

2811
02:08:22,800 --> 02:08:26,740
Und ihr wollt bloß sagen, okay, ich will es nicht Blocking, sondern ich will es asynchron haben.

2812
02:08:27,040 --> 02:08:36,380
Dann könnt ihr nicht einfach sagen, okay, wir machen jetzt hier Datei, Datei Index, HTML und sagen jetzt Blocking gleich False.

2813
02:08:36,720 --> 02:08:39,280
So wäre das in jeder sinnvollen Programmiersprache gelöst worden.

2814
02:08:39,440 --> 02:08:43,140
Also gelöst wäre das in jeder sinnvollen Programmiersprache gelöst.

2815
02:08:43,480 --> 02:08:45,000
Oder so oder so, irgendwie so.

2816
02:08:45,140 --> 02:08:46,120
Ihr wisst, was ich meine.

2817
02:08:46,420 --> 02:08:50,540
Aber das geht nicht, weil C++, ich gedacht habe, nein, Named Arguments brauchen wir nicht.

2818
02:08:50,540 --> 02:08:58,980
Und das heißt, wenn ich diese Funktion hier aufrufen will und möchte nur das hier hinten ändern, alles andere ist okay, muss ich das jedes Mal so machen.

2819
02:09:02,420 --> 02:09:07,020
Und gucken, dass ich auch ja nicht das Falsche vergesse, dass das Falsche mache.

2820
02:09:08,160 --> 02:09:09,080
Total hängen geblieben.

2821
02:09:10,200 --> 02:09:20,720
Dazu kommt noch das Problem, bei langen Funktionsaufrufen ist es so, dass man sieht hier an dieser Funktion nicht, was was ist.

2822
02:09:21,840 --> 02:09:23,220
Also man hat keine Ahnung.

2823
02:09:23,520 --> 02:09:28,120
Dass hier File Name ist, dass das hier Size ist, dass das hier Mode ist und das hier Blocking oder nicht, hat man nicht.

2824
02:09:29,460 --> 02:09:32,080
Mit Named Arguments hättest du das.

2825
02:09:32,380 --> 02:09:37,480
Weil dann würde es jetzt beispielsweise reinschreiben, okay, ich will den Mode ändern, ich will sagen Mode gleich Read.

2826
02:09:39,060 --> 02:09:43,040
Das wird dann funktionieren, aber nein, in C++ ist das Ganze nicht.

2827
02:09:43,720 --> 02:09:52,670
Es gibt so einen Antrag dafür, glaube ich, im C++ Standard, aber sowas kommt nie.

2828
02:09:52,670 --> 02:09:54,670
Man muss sagen, ordentliche Programmiersprache.

2829
02:09:55,150 --> 02:09:57,150
Wie sagen wir, mach sie Sharp oder sowas.

2830
02:09:57,150 --> 02:10:09,520
Javascript kann das übrigens, glaub mittlerweile auch, also wenn Javascript was schon kann, ordentliche Programmiersprache, sowas wie C Sharp heißt und sonst was, die können das seit, puff, zehn Jahren oder so.

2831
02:10:09,520 --> 02:10:17,350
Wenn man Null übergibt, nein, wenn man Null übergibt, ist das, du hast ein Parameter gesetzt.

2832
02:10:17,350 --> 02:10:19,350
Du musst es höchstens weglassen.

2833
02:10:19,350 --> 02:10:28,290
Oder aber, wenn du das Default behalten willst, musst du explizit, mal angenommen, du willst das Default behalten, ja, und du willst nur Blocking ändern.

2834
02:10:28,290 --> 02:10:35,290
Du musst explizit das angeben, was du oben schon mal geschrieben hast, nur um hier dann Faults reinzustecken.

2835
02:10:35,290 --> 02:10:38,600
Ups, richtig peng geblieben.

2836
02:10:38,600 --> 02:10:46,600
Äh, äh, Dings, äh, C Sharp kann das, Ruby kann, also das können die meisten Programmiersprachen, C++ hat es bis heute nicht geschafft.

2837
02:10:46,600 --> 02:10:48,600
Ist halt C++, ne.

2838
02:10:48,600 --> 02:10:53,600
So, also wir haben den Server gestartet, Server läuft auf Port 443.

2839
02:10:53,600 --> 02:10:55,600
Wunderbar.

2840
02:10:55,600 --> 02:10:57,600
Ah, also.

2841
02:10:57,600 --> 02:10:59,440
Normalerweise läuft er da. Jetzt ist er gerade abgeschaltet.

2842
02:10:59,440 --> 02:11:00,440
Oder abgekackt, irgendwie.

2843
02:11:00,440 --> 02:11:02,440
Aber, der läuft auf Port 443.

2844
02:11:02,440 --> 02:11:07,440
Und, ähm, ich habe euch ja gerade diese Formatlib gezeigt.

2845
02:11:07,440 --> 02:11:11,440
Du kannst es mit Function Overloading, ja, das ist ein gutes Beispiel, das kann ich auch nochmal zeigen.

2846
02:11:11,440 --> 02:11:19,440
Du kannst es mit Function Overloading, äh, teilweise machen, aber, ich meine, ganz ehrlich, es wird, es wird noch eklig, ja.

2847
02:11:19,440 --> 02:11:20,440
Äh, es wird noch eklig.

2848
02:11:20,440 --> 02:11:22,440
Du kannst das natürlich mit Overloading machen.

2849
02:11:22,440 --> 02:11:24,440
Also du kannst sowas hier machen.

2850
02:11:24,440 --> 02:11:27,440
Aber da sieht man auch schon gleich, dass das irgendwie eine merkwürdige Idee ist, ne.

2851
02:11:27,440 --> 02:11:30,820
Also du kannst natürlich sowas hier machen.

2852
02:11:30,820 --> 02:11:35,820
Aber das, das, das ändert auch nichts daran, dass du nicht einfach mal das letzte Argument ändern kannst, ne.

2853
02:11:35,820 --> 02:11:37,820
Du kannst natürlich sowas hier machen.

2854
02:11:37,820 --> 02:11:40,820
Das wird funktionieren, aber da kannst du auch nicht das letzte Argument ändern.

2855
02:11:40,820 --> 02:11:46,820
Was du machen kannst ist, äh, jede nur erdenkliche Kombination einen Overload erstellen.

2856
02:11:46,820 --> 02:11:56,820
Aber das heißt, du brauchst dann schon für ne, für ne, äh, sagen wir mal, für ne Funktion wie Read mit, mit ein paar Parametern, die fünf, die fünf Parameter bekommt.

2857
02:11:56,820 --> 02:11:58,820
Da bräuchtest du ja schon allein schon.

2858
02:11:58,820 --> 02:11:59,820
Hab ich nicht.

2859
02:12:00,820 --> 02:12:01,820
Was ich?

2860
02:12:01,820 --> 02:12:04,190
Keine Ahnung.

2861
02:12:04,190 --> 02:12:06,190
40 Overloads oder so.

2862
02:12:06,190 --> 02:12:16,630
Und dann kommen die Big Brain Leute wieder an den Start und basteln dann für C++ irgendwie nen, äh, Pre-Prozessor-Ding, was das für dich macht im Zweifelsfall noch.

2863
02:12:16,630 --> 02:12:21,630
Am besten sowas einfach in die Sprache einbauen, dann ist es auch, äh, benutzbar.

2864
02:12:21,630 --> 02:12:22,630
So.

2865
02:12:22,630 --> 02:12:23,630
Also, so.

2866
02:12:23,630 --> 02:12:24,630
Der Server läuft auf Port 443.

2867
02:12:24,630 --> 02:12:30,630
Ich kann euch jetzt mal die, die, äh, was zeigen von dieser Formatlib, was wirklich praktisch ist.

2868
02:12:30,630 --> 02:12:32,630
Ähm, okay.

2869
02:12:32,630 --> 02:12:39,970
In, in dem Fall ist es jetzt, ehrlich gesagt, ziemlich, ziemlich, äh, ziemlich low brain.

2870
02:12:39,970 --> 02:12:44,970
Aber unterm Strich, was wir jetzt machen müssen, ist, nen U16 in zu nem String zu konvertieren.

2871
02:12:44,970 --> 02:12:50,970
Da gibt's bestimmt eingebaute Methoden, aber, ähm, wir können das mit der Formatlibrary machen.

2872
02:12:50,970 --> 02:12:56,970
Ich hab mir da so ne kleine, so ne kleine Wrapper-Funktion drum gebastelt, die nen C++-String draus macht.

2873
02:12:56,970 --> 02:12:59,970
Äh, die nen Arduino, äh, String da draus macht.

2874
02:12:59,970 --> 02:13:03,970
Ist im Prinzip unter der Haube immer noch jedes gleiche wie die Formatlibrary.

2875
02:13:03,970 --> 02:13:06,970
Äh, und das sagen wir jetzt hier, äh, nicht da.

2876
02:13:06,970 --> 02:13:13,970
Format, ähm, Zahl, zack, Port.

2877
02:13:13,970 --> 02:13:14,970
So.

2878
02:13:14,970 --> 02:13:16,970
Und weil's all this is, müssen wir so sagen.

2879
02:13:16,970 --> 02:13:17,970
So.

2880
02:13:17,970 --> 02:13:25,970
Und jetzt wandelt er den, wenn ich's richtig gemacht hab, jetzt wandelt er die Zahl in ein String um.

2881
02:13:25,970 --> 02:13:31,970
Ich weiß ehrlich gesagt nicht, was die empfohlene Variante ist in C++.

2882
02:13:31,970 --> 02:13:37,970
Also die, eine robuste Variante, wie man ein Int in einen String umwandelt.

2883
02:13:37,970 --> 02:13:39,970
Keine Ahnung, was es da eingebautes gibt.

2884
02:13:39,970 --> 02:13:45,050
In .NET würde ich's übrigens genauso machen, ne?

2885
02:13:45,050 --> 02:13:54,130
Also in .NET würde ich auch, würde ich auch sagen, äh, var, blub gleich, ähm, äh, Moment.

2886
02:13:54,130 --> 02:13:56,130
Jetzt steh ich aufm Schlauch. Wie sieht's in C Sharp nochmal aus?

2887
02:13:56,130 --> 02:14:01,660
Moment, wie sagt das jetzt in C Sharp nochmal aus?

2888
02:14:01,660 --> 02:14:08,360
Ach hier, ja, Port. So.

2889
02:14:08,360 --> 02:14:11,360
So wird man, so, so wird's in C Sharp aussehen.

2890
02:14:11,360 --> 02:14:15,360
Hier setzt er den Port ein, ist noch ein bisschen kürzer als das hier.

2891
02:14:15,360 --> 02:14:18,360
Hier setzt er den Port ein, schon hast du die Zahl als String. Easy.

2892
02:14:18,360 --> 02:14:22,250
Hast du irgendwelche aktiven Haskell-Projekte?

2893
02:14:22,250 --> 02:14:23,250
Nein.

2894
02:14:23,250 --> 02:14:31,010
Genau. Und du könntest natürlich in C Sharp, da hab ich gar nicht dran gedacht, du könntest machen Port to String.

2895
02:14:31,010 --> 02:14:33,010
Ja, das wär die einfachste Variante, richtig.

2896
02:14:33,010 --> 02:14:37,010
Aber sowas gibt's in C++ selbstverständlich nicht. Wo kommen wir denn da hin?

2897
02:14:37,010 --> 02:14:39,010
Äh, Jungfels, Moin.

2898
02:14:39,010 --> 02:14:41,010
Schön, dass du am Start bist.

2899
02:14:41,010 --> 02:14:42,010
Excellent.

2900
02:14:42,010 --> 02:14:45,010
Chat-IQ steigt wieder ins Unermessliche hier.

2901
02:14:45,010 --> 02:14:46,010
Ich seh's schon.

2902
02:14:46,010 --> 02:14:49,010
Gut, jetzt haben wir einen Serverlaufen auf Port 443.

2903
02:14:49,010 --> 02:14:53,010
Und jetzt kommt die eigentliche Big-Brain-Variante, was ich vorhab.

2904
02:14:53,010 --> 02:14:55,010
Nämlich, dass das ganze Multithreaded funktioniert.

2905
02:14:55,010 --> 02:15:02,010
Weil, man darf nicht vergessen, wir machen das hier auf einem, auf einem, äh, ESP32-Board.

2906
02:15:02,010 --> 02:15:04,010
Und zwar auf dem hier.

2907
02:15:04,010 --> 02:15:08,010
Und der ESP32 hat zwei Kerne.

2908
02:15:08,010 --> 02:15:10,010
Um genau zu sein, hat er drei.

2909
02:15:10,010 --> 02:15:13,010
Aber der dritte ist jetzt erstmal egal, den kann man dafür nicht verwenden.

2910
02:15:13,010 --> 02:15:14,010
Ähm.

2911
02:15:15,010 --> 02:15:19,010
Der ESP32 hat zwei Kerne mit jeweils 240 MHz.

2912
02:15:19,010 --> 02:15:29,010
Also das ist für so ein kleines Scheißding, was in der billigsten Ausführung 2,50 Euro kostet, doch ziemlich ordentlich.

2913
02:15:29,010 --> 02:15:34,010
Und dementsprechend kann man auch den, äh, Webserver multithreaded machen.

2914
02:15:34,010 --> 02:15:41,010
Das heißt, pro Connection machen wir den eigenen Thread auf und lassen den unabhängig voneinander laufen.

2915
02:15:41,010 --> 02:15:44,010
Das hat den Vorteil, dass man zum Beispiel...

2916
02:15:45,010 --> 02:15:47,010
Ähm.

2917
02:15:47,010 --> 02:15:51,010
Logs dumpen kann über HTTP.

2918
02:15:51,010 --> 02:15:55,010
Gleichzeitig, äh, aber auch noch den Webserver verwenden kann.

2919
02:15:55,010 --> 02:15:58,010
Für zum Beispiel ein Dashboard.

2920
02:15:58,010 --> 02:16:02,010
Das geht normalerweise nicht gescheit, ansonsten muss eins immer warten.

2921
02:16:02,010 --> 02:16:05,010
Und gerade für Logs ist das doof.

2922
02:16:05,010 --> 02:16:08,010
Weil Logs will man möglichst zeitnah sehen.

2923
02:16:08,010 --> 02:16:11,010
Und spätestens wenn die Kiste rebooted hat, sind die Logs eh weg.

2924
02:16:11,010 --> 02:16:14,010
Und zum Beispiel, wenn man ein Update hochlädt.

2925
02:16:14,010 --> 02:16:19,010
Möchte man gerne schon auf einer zweiten Verbindung sehen können.

2926
02:16:19,010 --> 02:16:24,010
Okay, wenn man irgendwas debuggen will, okay, was für Logs kommen da eigentlich, ja?

2927
02:16:24,010 --> 02:16:28,010
Und das ist ja das, was ich schon seit einer Weile probiere, einen Server zu basteln.

2928
02:16:28,010 --> 02:16:33,010
Oder einen Webserver zu basteln oder zu verwenden, falls es fertige Sachen gibt.

2929
02:16:33,010 --> 02:16:35,010
Über den ich ordentlich Updates machen kann.

2930
02:16:35,010 --> 02:16:38,010
Über WLAN, der HTTPS kann.

2931
02:16:38,010 --> 02:16:40,010
Über den ich Updates machen kann, über das WLAN.

2932
02:16:40,010 --> 02:16:42,010
Firmware-Updates über das WLAN machen kann halt.

2933
02:16:42,010 --> 02:16:43,010
Auf dem Controller.

2934
02:16:43,010 --> 02:16:47,010
Und nebenbei mir auch noch die Logs über HTTP anzeigen lassen kann.

2935
02:16:47,010 --> 02:16:49,010
Also sprich hier die serielle Ausgabe.

2936
02:16:49,010 --> 02:16:55,010
An sich eigentlich kein Problem, aber die ganzen Server, die ich gefunden habe, taugen irgendwie nix.

2937
02:16:55,010 --> 02:16:58,010
Meiner wird nicht wirklich besser werden, kann ich euch gleich sagen.

2938
02:16:58,010 --> 02:17:01,010
Aber meiner wird wahrscheinlich das machen, was ich will und sonst nix.

2939
02:17:01,010 --> 02:17:05,010
Wo hast du es gekauft? Bei Banggood habe ich es gekauft.

2940
02:17:05,010 --> 02:17:09,220
Banggood.

2941
02:17:09,220 --> 02:17:12,220
Ist keine Porn-Seite, ist eine China-Shop-Seite.

2942
02:17:12,220 --> 02:17:14,220
Banggood.

2943
02:17:15,220 --> 02:17:18,220
Gibt es glaube ich sogar gerade im Angebot.

2944
02:17:18,220 --> 02:17:23,220
Dieser Shop hat eigentlich exzellente Bewertung.

2945
02:17:23,220 --> 02:17:25,220
Banggood. 1,9 Sterne.

2946
02:17:25,220 --> 02:17:28,220
Itigo T-Display.

2947
02:17:28,220 --> 02:17:31,220
Der ist aber nicht schlecht, hab das schon oft bestellt.

2948
02:17:31,220 --> 02:17:40,490
Der D1 Mini ist gut, aber das ist kein ESP32, das ist ein ESP8266.

2949
02:17:40,490 --> 02:17:43,930
Das ist 80 MHz Single-Core.

2950
02:17:43,930 --> 02:17:46,930
Ist ne Nummer schwächer.

2951
02:17:46,930 --> 02:17:51,930
So, also aktuell gibt es die im Angebot hier auf Banggood.

2952
02:17:51,930 --> 02:17:54,930
Und sogar aus UK, glaube ich.

2953
02:17:54,930 --> 02:17:58,370
Aber dann ein bisschen zu teuer.

2954
02:17:58,370 --> 02:17:59,370
Gut.

2955
02:17:59,370 --> 02:18:01,370
China-Shop.

2956
02:18:01,370 --> 02:18:06,370
6,99 Dollar.

2957
02:18:06,370 --> 02:18:08,370
Das ist halt ein komplett fertiges Kit.

2958
02:18:08,370 --> 02:18:12,370
Also sprich das Board mit den Pins und halt dem Display.

2959
02:18:12,370 --> 02:18:14,370
Corona kommt gleich mit.

2960
02:18:14,370 --> 02:18:16,370
Ja, das ist ein bisschen und das ist, guck mal, das ist 14 Tage unterwegs.

2961
02:18:16,370 --> 02:18:19,370
Da musst du dir keine Gedanken machen.

2962
02:18:19,370 --> 02:18:21,370
Da bestellt man sich gleich mal 10 Stück.

2963
02:18:21,370 --> 02:18:23,370
Wenn man damit öfters was machen will.

2964
02:18:23,370 --> 02:18:25,370
Oder 5, sag mal 5 Stück.

2965
02:18:25,370 --> 02:18:27,370
5 Stück kann man bestellen.

2966
02:18:27,370 --> 02:18:39,370
Und dann bezahlst du im Endeffekt aus China gerade mal 34,95 Euro inklusive Versand für ein komplettes Board mit Display.

2967
02:18:39,370 --> 02:18:41,370
Da kannst du dich nicht beschweren.

2968
02:18:41,370 --> 02:18:45,370
Wenn du was einfacheres brauchst, wenn du nicht unbedingt ein Board mit Display haben willst oder sowas.

2969
02:18:45,370 --> 02:18:51,370
ESP32 gibt es dort für unter 3 Dollar.

2970
02:18:51,370 --> 02:18:52,370
Das Stück.

2971
02:18:52,370 --> 02:18:54,370
Kleine andere Module.

2972
02:18:54,370 --> 02:18:56,370
Aber ich finde das hier gerade gut.

2973
02:18:56,370 --> 02:18:59,370
Stromverbrauch mit Display.

2974
02:18:59,370 --> 02:19:04,150
Machst mich hier was.

2975
02:19:04,150 --> 02:19:06,150
Keine Ahnung.

2976
02:19:06,150 --> 02:19:07,150
0,1 Watt.

2977
02:19:07,150 --> 02:19:09,150
Weiß ich nicht.

2978
02:19:09,150 --> 02:19:10,150
Wenig.

2979
02:19:10,150 --> 02:19:24,790
Sehr wenig.

2980
02:19:24,790 --> 02:19:25,790
0,1 Watt.

2981
02:19:25,790 --> 02:19:26,790
0, was?

2982
02:19:26,790 --> 02:19:27,790
Keine Ahnung.

2983
02:19:27,790 --> 02:19:28,790
Nicht viel auf jeden Fall.

2984
02:19:28,790 --> 02:19:31,550
Das Ding.

2985
02:19:31,550 --> 02:19:38,550
Man hat so im Durchschnitt irgendwie bei 5 Volt zieht das irgendwie so 150 Milliampere oder so.

2986
02:19:38,550 --> 02:19:40,550
Kannst du dir ausrechnen.

2987
02:19:40,550 --> 02:19:46,530
5 mal 0,15.

2988
02:19:46,530 --> 02:19:47,530
So.

2989
02:19:47,530 --> 02:19:48,530
Also.

2990
02:19:48,530 --> 02:19:50,530
Brauch volle Pulle.

2991
02:19:50,530 --> 02:19:54,530
Beim WLAN senden mit Display an ungefähr 0,75 Watt.

2992
02:19:54,530 --> 02:19:57,530
In Wirklichkeit ist es wahrscheinlich ein dicke mehr.

2993
02:19:57,530 --> 02:19:58,530
Aber.

2994
02:19:58,530 --> 02:19:59,530
Also.

2995
02:19:59,530 --> 02:20:00,530
Die brauchen nicht wirklich viel.

2996
02:20:00,530 --> 02:20:02,530
Gibt es die Dinger auch mit Relays?

2997
02:20:02,530 --> 02:20:03,530
Klar.

2998
02:20:03,530 --> 02:20:13,530
Das Schöne daran ist ja, dass du massig viele, zumindest beim ESP32, GPIO Pins hast.

2999
02:20:13,530 --> 02:20:15,530
Da kannst du anschließen was du willst.

3000
02:20:15,530 --> 02:20:18,530
Da kaufst du dir noch einen 50 Cent Relay dabei und alles ist gut.

3001
02:20:18,530 --> 02:20:21,530
Bei dem hier hast du einen Ticken weniger GPIO Pins.

3002
02:20:21,530 --> 02:20:23,530
Aber immer noch genug wie du siehst.

3003
02:20:23,530 --> 02:20:25,530
Weil das Display braucht ja auch ein paar GPIO Pins.

3004
02:20:25,530 --> 02:20:28,530
Insane.

3005
02:20:28,530 --> 02:20:29,530
Stufe 1.

3006
02:20:29,530 --> 02:20:31,840
Dankeschön.

3007
02:20:31,840 --> 02:20:33,840
Big Brain Subscription.

3008
02:20:33,840 --> 02:20:37,840
Aber wenn du dir mal so einen anderen ESP32 anschaust.

3009
02:20:37,840 --> 02:20:38,840
Zum Beispiel den hier.

3010
02:20:38,840 --> 02:20:39,840
So ein NodeMCU.

3011
02:20:39,840 --> 02:20:40,840
Da siehst du.

3012
02:20:40,840 --> 02:20:41,840
Du hast.

3013
02:20:41,840 --> 02:20:42,840
Hier.

3014
02:20:42,840 --> 02:20:43,840
Du hast massig GPIOs.

3015
02:20:43,840 --> 02:20:47,840
Und da kannst du ohne Probleme so viele Relays anschließen.

3016
02:20:47,840 --> 02:20:49,840
So viele Relays brauchst du nicht.

3017
02:20:49,840 --> 02:20:59,320
Ja.

3018
02:20:59,320 --> 02:21:00,320
Also.

3019
02:21:00,320 --> 02:21:01,320
Damit kann man eigentlich nicht viel falsch machen.

3020
02:21:01,320 --> 02:21:02,320
Und am besten.

3021
02:21:02,320 --> 02:21:04,320
Das ist so mein Universal Tipp.

3022
02:21:04,320 --> 02:21:05,320
Wenn es um so.

3023
02:21:05,320 --> 02:21:07,320
Wenn es um so Controller bestellen geht.

3024
02:21:07,320 --> 02:21:08,320
Am besten.

3025
02:21:08,320 --> 02:21:10,320
Wenn ihr irgendwie mal so auf Banggood seid.

3026
02:21:10,320 --> 02:21:11,320
Und euch irgendwas raushaut.

3027
02:21:11,320 --> 02:21:12,320
Oder auf AliExpress geht.

3028
02:21:12,320 --> 02:21:13,320
Geht übrigens genauso.

3029
02:21:13,320 --> 02:21:14,320
Ähm.

3030
02:21:14,320 --> 02:21:15,320
Wenn ihr da gerade seid.

3031
02:21:15,320 --> 02:21:16,320
Und euch irgendwas raussucht.

3032
02:21:16,320 --> 02:21:17,320
Also sagen wir jetzt mal.

3033
02:21:17,320 --> 02:21:18,320
Ihr nehmt hier irgendwie den.

3034
02:21:18,320 --> 02:21:19,320
Irgendwie.

3035
02:21:19,320 --> 02:21:20,320
NodeMCU oder so.

3036
02:21:20,320 --> 02:21:21,320
Das sind eigentlich auch relativ beliebte.

3037
02:21:21,320 --> 02:21:23,890
Beliebte Boards.

3038
02:21:23,890 --> 02:21:24,890
Sagen wir mal.

3039
02:21:24,890 --> 02:21:25,890
Ihr wollt jetzt das da haben.

3040
02:21:25,890 --> 02:21:26,890
So.

3041
02:21:26,890 --> 02:21:27,890
Ähm.

3042
02:21:27,890 --> 02:21:30,390
Und das Ganze irgendwie fünfmal.

3043
02:21:30,390 --> 02:21:31,390
Nehmt das mehr als einmal.

3044
02:21:31,390 --> 02:21:32,390
Nehmt.

3045
02:21:32,390 --> 02:21:33,390
Nehmt das.

3046
02:21:33,390 --> 02:21:34,390
Die haben WiFi.

3047
02:21:34,390 --> 02:21:35,390
Die haben Bluetooth.

3048
02:21:35,390 --> 02:21:36,390
Die.

3049
02:21:36,390 --> 02:21:37,390
Also die Dinger haben wirklich.

3050
02:21:37,390 --> 02:21:38,390
Die haben alles drauf gepostet.

3051
02:21:38,390 --> 02:21:41,150
Die haben alles drauf gepostet.

3052
02:21:41,150 --> 02:21:42,150
Die haben alles drauf gepostet.

3053
02:21:42,150 --> 02:21:43,150
Die haben alles drauf gepostet.

3054
02:21:43,150 --> 02:21:44,150
Die haben alles drauf gepostet.

3055
02:21:46,150 --> 02:21:47,150
Die haben alles drauf gepostet.

3056
02:21:47,150 --> 02:21:48,150
Wrapackt.

3057
02:21:48,150 --> 02:21:49,150
Was irgendwie geht.

3058
02:21:49,150 --> 02:21:50,150
Du hast.

3059
02:21:50,150 --> 02:21:51,150
Ähhh.

3060
02:21:51,150 --> 02:21:52,150
WLAN.

3061
02:21:52,150 --> 02:21:53,150
Allerdings 2.4.

3062
02:21:53,150 --> 02:21:54,150
gears.

3063
02:21:54,150 --> 02:21:56,980
WLAN Ich glaube die.

3064
02:21:56,980 --> 02:21:57,980
Neuenen.

3065
02:21:57,980 --> 02:21:59,260
P22 könnten S2.

3066
02:21:59,260 --> 02:22:00,760
Die accused.

3067
02:22:00,760 --> 02:22:06,780
clinical Smartphone Sakura vadid werd honorsicherer cine-sc стороны übrig.

3068
02:22:06,780 --> 02:22:08,220
Ja die neuen haben glaub fünf.

3069
02:22:08,220 --> 02:22:09,720
Die sind nicht wirklich neu.

3070
02:22:09,720 --> 02:22:11,460
Das ist eine andere Produkte.

3071
02:22:11,460 --> 02:22:12,480
Also Ost dazu teilen.

3072
02:22:12,480 --> 02:22:14,300
32 Es 2.

3073
02:22:14,300 --> 02:22:15,700
Das ist nicht wirklich neue.

3074
02:22:15,700 --> 02:22:18,940
Es ist damit soll eine Produkte wie beispielsweise auch eine CPU und so was.

3075
02:22:18,940 --> 02:22:20,560
Also Leincome von der Leistungsfähigkeit spending.

3076
02:22:20,560 --> 02:22:21,560
Es længste espera.

3077
02:22:21,560 --> 02:22:26,540
sp 32 immer noch am besten von denen die haben alles mögliche darauf was du hast

3078
02:22:26,540 --> 02:22:34,520
wlan du hast bluetooth low energy bluetooth 2 cpu kerne mit jeweils 240

3079
02:22:34,520 --> 02:22:41,540
megahertz im dritten low power cpu kern mit 8 megahertz also features dass das

3080
02:22:41,540 --> 02:22:45,920
gedöns hat wirklich also die haben da die haben echt alle register gezogen was

3081
02:22:45,920 --> 02:22:53,780
da drauf ist genau also zwei dual core dual core cpu 240 megahertz was echt

3082
02:22:53,780 --> 02:22:58,680
vieles die haben sie nicht drauf sie kann es aber vielleicht mit irgendeinem

3083
02:22:58,680 --> 02:23:04,040
schild nach nach russ das habe ich mir noch da habe ich noch nie geguckt ob es

3084
02:23:04,040 --> 02:23:11,470
da nicht irgendwelche zusätzlichen sachen gibt keine ahnung ob es da

3085
02:23:11,470 --> 02:23:17,570
irgendwelche sikbi sachen gibt keine ahnung weiß nicht wie p3 habe ich noch

3086
02:23:17,570 --> 02:23:20,570
nicht daheim sorgen du hast wie gesagt zwei

3087
02:23:20,570 --> 02:23:26,750
20 32 cpu 240 megahertz was ziemlich ziemlich schnell ist so die arduino sind

3088
02:23:26,750 --> 02:23:30,770
kacken da richtig dagegen ab du hast ein low power prozessor und der dritte was

3089
02:23:30,770 --> 02:23:36,410
quasi drei cpus der low power prozessor der hat zwar nur 8 megahertz aber das

3090
02:23:36,410 --> 02:23:39,170
trickreiche daran ist haben übrigens auch programmiert in einem stream von

3091
02:23:39,170 --> 02:23:44,510
vor zwei jahren oder so schon ewig her du kannst wenn du den sensor dran hast

3092
02:23:44,510 --> 02:23:49,550
an diesem teil da kannst du mit dem low power prozessor diesen sensor abfragen

3093
02:23:49,550 --> 02:23:50,410
und erst dann kannst du mit dem low power prozessor diesen sensor abfragen und

3094
02:23:50,410 --> 02:23:50,430
erst dann kannst du mit dem low power prozessor diesen sensor abfragen und

3095
02:23:50,430 --> 02:23:55,150
erst wenn der sensor wird sich ändert und du darauf reagieren möchtest kannst du

3096
02:23:55,150 --> 02:23:55,170
erst wenn der sensor wird sich ändert und du darauf reagieren möchtest kannst du

3097
02:23:55,170 --> 02:23:59,370
quasi mit dem low power prozessor dann eigentlich die eigentliche cpu starten

3098
02:23:59,370 --> 02:23:59,390
quasi mit dem low power prozessor dann eigentlich die eigentliche cpu starten

3099
02:23:59,390 --> 02:24:04,870
das spart halt ungemein strom also du fragst deinen sensor quasi low power ab

3100
02:24:04,870 --> 02:24:04,890
das spart halt ungemein strom also du fragst deinen sensor quasi low power ab

3101
02:24:04,890 --> 02:24:09,910
und sagen wir mal sagen wir mal du hast irgendwie einen temperatursensor in

3102
02:24:09,910 --> 02:24:09,930
und sagen wir mal sagen wir mal du hast irgendwie einen temperatursensor in

3103
02:24:09,930 --> 02:24:13,670
deinem fischteich oder soja und du möchtest eine warnung bekommen wenn der

3104
02:24:13,670 --> 02:24:13,690
deinem fischteich oder soja und du möchtest eine warnung bekommen wenn der

3105
02:24:13,690 --> 02:24:17,970
fischteich unter zehn grad wird weil du weißt okay vielleicht unter fünf

3106
02:24:17,970 --> 02:24:22,710
grad da ist gefriert du möchtest abdecken sondern fragst du deinen sensor ab mit dem

3107
02:24:22,710 --> 02:24:29,310
low power prozessor die cpu kerne sleep wlan sleep bluetooth lieb alles alles lieb und sobald

3108
02:24:29,310 --> 02:24:33,970
der low power prozessor und ein alter fragt keine ahnung der fragt dann alle zwei minuten fragt er

3109
02:24:33,970 --> 02:24:39,750
nein oder alle halbe stunde reicht ja alle halbe stunde fragt er deinen sensor ab und sobald der

3110
02:24:39,750 --> 02:24:45,330
sensor sagt a 5 grad dann wächst du mit diesem ultra low power prozessor eben dein seiner haupt

3111
02:24:45,330 --> 02:24:51,150
cpu und dort verbinden sich dann im wlan und senden die nachricht fischteig temperatur unter

3112
02:24:51,150 --> 02:25:01,230
5 grad oder was auch immer der spart spart strom wenn man wenn man mit esp 32 was machen möchte

3113
02:25:01,230 --> 02:25:05,910
weil hier gerade jemand fragt wie schließt man die am besten an strom an usb einfach usb kabel

3114
02:25:05,910 --> 02:25:10,710
dran und gut ist es gibt die möglichkeit über batterie allerdings muss man das richtige bord

3115
02:25:10,710 --> 02:25:15,330
dafür nehmen die meisten developer boards also sprich boards wo alles schon online

3116
02:25:15,330 --> 02:25:21,150
drauf ist und usb anschluss und alles hat sind nicht so stromsparend dass man sie gut

3117
02:25:21,150 --> 02:25:26,490
an den akku anschließen könnte die sind zwar stromsparend aber um einer batterie oder einem

3118
02:25:26,490 --> 02:25:30,590
akku zu laufen musst du halt schon ziemlich stromsparend sein dass das über den sinnvollen

3119
02:25:30,590 --> 02:25:38,190
zeitraum läuft und es gibt es gibt dafür ein paar ganz gute boards zum beispiel das ist der

3120
02:25:38,190 --> 02:25:45,330
erste der mir einfällt der ist ein bisschen teurer 22 ist deutlich zu teuer

3121
02:25:46,710 --> 02:25:53,010
gibt es das board das hat halt eine richtig richtig geringen idle idle verbrauch und das

3122
02:25:53,010 --> 02:25:59,030
eignet sich auch das kannst du dann auch mit einem 1200 milliampere milliamperestunden akku

3123
02:25:59,030 --> 02:26:03,210
kannst du noch zwei jahre laufen lassen du brauchst aber halten low power board dass

3124
02:26:03,210 --> 02:26:11,330
das gut funktioniert ansonsten einfach usb usb und gut ist so du hast nicht so viel und nicht

3125
02:26:11,330 --> 02:26:16,570
so viele waren wo man wirklich für viel am stück verwenden kann von trick board trick

3126
02:26:16,710 --> 02:26:23,730
board ist aber fail in dem sinn weil es trickst das trick board ist nicht wirklich low power das

3127
02:26:23,730 --> 02:26:30,090
trick board hat einen timer was quasi alles abschaltet und den timer ab und zu aufweckt

3128
02:26:30,090 --> 02:26:39,030
den kern und irgendwie glaubt einen timer eine uhrzeit checkt oder so und das trick board ist

3129
02:26:39,030 --> 02:26:47,490
esp 266 kein sp 32 du kannst den strom auch über pins anschließen das geht auch also wenn du eine

3130
02:26:48,530 --> 02:26:53,870
dann kannst du die also besser gesagt akku dann kannst du die auch an die pins anschließen manche

3131
02:26:53,870 --> 02:26:59,630
boards haben dafür schon einen passenden akku anschluss da guckt der hier zum beispiel der

3132
02:26:59,630 --> 02:27:07,730
hat so einen passenden akku anschluss für so eine für so einen sind diese normalen akku form faktor

3133
02:27:07,730 --> 02:27:12,470
da es gibt viele boards muss man einfach gucken was man machen will welche man braucht nur mal

3134
02:27:12,470 --> 02:27:17,590
kurz hier drüber zu gehen was das ding noch für features hat wie gesagt im vergleich zu den

3135
02:27:19,970 --> 02:27:28,950
ich meine wir reden hier von 520 kilobyte ram oder um genau zu ein kimi bei dh und für alle die

3136
02:27:28,950 --> 02:27:33,950
das jetzt ganz genau wissen wollte es nicht viel als man als damit kann es keine allzu großen

3137
02:27:33,950 --> 02:27:42,150
sprüge machen du bekommst dafür wlan bluetooth beides relativ neu ist gerade wieder nicht super

3138
02:27:42,150 --> 02:27:49,370
neu aber relativ neu du hast analog digital convertor digitaler konverter

3139
02:27:49,970 --> 02:28:14,390
Touch-Sensor, SPI, was ist denn, I2C, das kenne ich gar nicht, du hast I2C, zwei Busanschlüsse, du kannst an einen I2C, ich glaube bis zu 86 Geräte oder so anschließen, wenn die Uhr einsteht, du hast drei serielle Verbindungen, du hast Anschlüsse für SD-Karten und sonstige Geschichten,

3140
02:28:14,390 --> 02:28:32,750
du kannst theoretische Netzwerkkarten anschließen, du kannst für Autos eh eine CAN-Bus-Sache machen, du kannst das Ding Remote steuern über Infrarot-Fernbedienung, du kannst PWM machen für einen Motor, für einen Lüfter, für sonst was, du kannst LED-PWM machen, also sprich auch LEDs steuern, die über PWM gesteuert werden,

3141
02:28:32,750 --> 02:28:44,370
das hat einen eingebauten Magnetsensor, der übrigens sackt, das hat einen eingebauten Temperatursensor, der übrigens auch sackt, also Features hat das Ding wirklich ordentlich.

3142
02:28:44,390 --> 02:29:01,650
Also im Vergleich zu so einem Arduino 5000% mehr, dafür würde ich sagen, sind die Arduinos ein Tick robuster, wobei die, ganz ehrlich, die ESP32 geht auch nicht wirklich kaputt,

3143
02:29:02,990 --> 02:29:14,350
aber so ein Arduino ist halt so ein Ding, das kannst du quasi drei Jahre, jetzt mal übertrieben gesagt, drei Jahre im Schlamm verbuddeln und das geht danach immer noch, das ist bei so einem ESP32 eher nicht so.

3144
02:29:14,390 --> 02:29:18,330
So, jetzt habe ich mich dazu mal ausgelassen.

3145
02:29:18,730 --> 02:29:26,830
Okay, wo sind wir stehen geblieben? Genau, wir wollen jetzt mit dem Big Brain Part anfangen, und zwar, dass wir die Verbindung multithreaded annehmen.

3146
02:29:27,290 --> 02:29:34,510
Also wir haben ja gesehen, wir haben hier einen Server offen, ja, ich muss mal kurz den ESP resetten, dann kann ich euch auch mal zeigen, dass der Server läuft,

3147
02:29:35,010 --> 02:29:44,230
weil das WLAN geht nach 10 Minuten aus, das muss ich nach 10 Minuten immer neu verbinden, 10 Minuten sind jetzt um, ich habe 10 Minuten lang geschwätzt,

3148
02:29:44,390 --> 02:30:07,000
so, schauen wir ihm mal zu, sehen wir ja gleich, wenn er gebootet ist, oh, ah ja ja, ah ja ja, wunderbar, 1544, ja, so, Server läuft, Port 443 ist auf, also sprich, das funktioniert,

3149
02:30:07,820 --> 02:30:17,720
und wir sehen es ja auch, wenn man es mit Curl auf HTTPS probiert, er sagt halt, okay, ich kann mich verbinden auf den Port, aber wenn ich jetzt meinen TLS Handshake, SSL Handshake machen will, das geht nicht.

3150
02:30:17,920 --> 02:30:18,820
Ist ja auch klar.

3151
02:30:19,260 --> 02:30:21,860
Wir lesen ja noch überhaupt nichts ein und machen ja nichts.

3152
02:30:23,020 --> 02:30:31,360
So, und jetzt müssen wir dafür sorgen, dass der die Verbindung annimmt, also erstmal muss er die Verbindung richtig, richtig, also die, die, die Verbindung annehmen,

3153
02:30:31,600 --> 02:30:36,320
und dann muss er einen SSL Handshake machen, dass ich eine Verbindung über HTTPS herstellen kann.

3154
02:30:37,340 --> 02:30:51,480
So, ähm, und wie man das jetzt machen, ist folgendes, ich habe ja gesagt, wir machen das Ganze multithreaded, also sprich, pro Verbindung, äh, ja, genau, pro Verbindung machen wir ein Thread auf.

3155
02:30:51,940 --> 02:30:52,580
So, und das machen wir.

3156
02:30:52,620 --> 02:31:20,960
So, folgendermaßen, die, ich, ich zeige mal ganz kurz zwei Varianten, die man eingebaut verwenden kann, wenn man mehrere, also, ne, wie gesagt, der ESP32 hat hier zwei Kerne und hat ein, hat ein Mini-Betriebssystem drunter mit einem Scheduler, der quasi, ähm, mehr, also, man hat hier zwei Kerne, aber man kann bis zu, standardmäßig, glaube ich, bis zu, bis zu 34, bis zu 32 oder 64, glaube ich, ist standardmäßig eingestellt.

3157
02:31:20,960 --> 02:31:21,960
Ähm, positiv.

3158
02:31:22,620 --> 02:31:30,600
Prozesse oder, oder Tasks laufen lassen, weil die haben einen Scheduler drunter, der quasi CPU-Zeit halbwegs gleichmäßig verteilt.

3159
02:31:30,900 --> 02:31:34,120
Also, so ein bisschen wie das Windows auf eurem Desktop auch macht.

3160
02:31:34,520 --> 02:31:47,480
Also, sprich, ich habe zwar nur zwei CPU-Kerne, aber ich kann bis zu 32 Tasks starten, die sich je nach Priorität die CPU-Kerne teilen und, äh, halt mal Zeit bekommen, mal Zeit, keine Zeit bekommen, dann mal wieder Zeit bekommen und sowas.

3161
02:31:47,480 --> 02:31:52,380
Ähm, so, zwei eingebaute Wege, um diese Tasks zu verwenden.

3162
02:31:52,620 --> 02:31:53,240
Ich zeige hier euch mal schnell.

3163
02:31:53,660 --> 02:31:56,680
Es gibt die Native-Variante, das ist wie Task Create.

3164
02:31:57,440 --> 02:32:02,820
Oh, Task Create.

3165
02:32:02,980 --> 02:32:04,960
Ah, X-Task ist X-Task Create.

3166
02:32:05,780 --> 02:32:13,580
Ähm, das ist die eingebaute, ähm, Funktion, um solche, also, die, die low-leveligste Funktion, um Tasks anzulegen, die es gibt.

3167
02:32:14,540 --> 02:32:19,020
Man kann entweder sagen X-Task Create oder X-Task Create Pin-to-Core.

3168
02:32:19,020 --> 02:32:25,200
Da kann man eben sagen, okay, mir ist egal, auf welchem CPU-Kern das Ganze läuft, kann es auch abwechselnd machen, juckt mich nicht.

3169
02:32:25,400 --> 02:32:28,760
Oder du kannst sagen, ich möchte, dass er nur auf Core 1 läuft.

3170
02:32:29,700 --> 02:32:40,500
Das ist ganz sinnvoll, weil, was man wissen muss, dass, äh, wenn man Arduino benutzt, Arduino, die Main-Arduino-Loop, läuft immer auf Core 1.

3171
02:32:40,840 --> 02:32:49,840
Das ist vorkonfiguriert, die haben das standardmäßig so eingestellt, dass Arduino komplett auf Core 1 läuft und I.O. und WLAN und so läuft auf Core 0.

3172
02:32:50,040 --> 02:32:59,120
Das hat natürlich, das hat seinen Charme, ähm, das hat seinen Charme, weil du kommst hier nicht in die Kirche.

3173
02:32:59,120 --> 02:33:04,740
Also sprich, selbst wenn ich Arduino komplett blocke und, und dicht mache, WLAN geht immer noch.

3174
02:33:07,350 --> 02:33:11,530
Das muss aber in dem Fall halt einfach, einfach klar sein, wenn man da seine, seine, äh, Kerne verteilt, ja.

3175
02:33:12,390 --> 02:33:20,070
Äh, FIPS, was du verpasst hast, ja, das kann ich dir, wir passen grad an einen, einen SSL, einen Mini-Web-Server, der SSL kann.

3176
02:33:21,130 --> 02:33:22,590
So, X-Task Create.

3177
02:33:23,770 --> 02:33:26,030
So, und hier kann man eben sagen, auf welchem Core er laufen soll.

3178
02:33:26,030 --> 02:33:28,010
Die Argumente sind folgendermaßen.

3179
02:33:28,010 --> 02:33:31,490
Als erstes muss man angeben, was man ausführen möchte.

3180
02:33:32,590 --> 02:33:37,010
Also zum Beispiel, äh, geben wir hier mal, äh, den Lambda an oder so.

3181
02:33:38,390 --> 02:33:40,110
Also irgendeine Funktion, die ausgeführt wird.

3182
02:33:41,250 --> 02:33:46,730
Ähm, dann muss man ihm sagen, den Namen für den Task, keine Ahnung, Qt Chat Task.

3183
02:33:47,370 --> 02:33:49,810
Dann muss ihm sagen, ähm, Stack Size.

3184
02:33:50,130 --> 02:33:56,790
Stack Size, mal ganz einfach gesagt, ist, wie viel Arbeitsspeicher der Thread der Task verwenden darf.

3185
02:33:58,820 --> 02:33:59,360
Gibt es den Thread?

3186
02:33:59,380 --> 02:34:04,560
Es sind keine vorgefertigten Sachen für, doch, es gibt, es gibt, es gibt noch eine andere Sache, aber das ist die Low-Level-Variante.

3187
02:34:04,680 --> 02:34:12,700
Da sagt man dann zum Beispiel, ey, du darfst, du darfst 4096, äh, Byte an, also 4K, 4 Kilobyte an RAM verwenden.

3188
02:34:12,880 --> 02:34:14,920
Das reicht normalerweise dicker aus, ja.

3189
02:34:15,820 --> 02:34:18,940
Ähm, so, da kann ich Parameter übergeben, das wollen wir nicht.

3190
02:34:20,000 --> 02:34:21,780
Priorität, sagen wir mal Priorität 1.

3191
02:34:22,220 --> 02:34:24,380
Immer der Task mit der höchsten Priorität wird ausgeführt.

3192
02:34:25,580 --> 02:34:26,980
Und ein Task Handle, das brauche ich nicht.

3193
02:34:27,080 --> 02:34:28,940
So, so ist die Native Art.

3194
02:34:28,940 --> 02:34:30,080
Und einen Tag zu starten.

3195
02:34:30,160 --> 02:34:32,480
Hier sage ich beispielsweise, was der Task machen soll.

3196
02:34:33,020 --> 02:34:36,580
Endlos Schleife, äh, Sensor abfragen zum Beispiel.

3197
02:34:37,760 --> 02:34:40,800
So würde so ein Standard, iiih, wie formatiert denn der das?

3198
02:34:40,860 --> 02:34:41,720
Das ist ja abartig.

3199
02:34:42,060 --> 02:34:42,340
Äh.

3200
02:34:43,400 --> 02:34:44,020
Onker, S.

3201
02:34:45,320 --> 02:34:45,480
So.

3202
02:34:45,600 --> 02:34:48,080
So würde das standardmäßig, übrigens hier noch die Parameter.

3203
02:34:48,540 --> 02:34:52,840
So würde das standardmäßig aussehen, wenn man einen, äh, einen Low-Level-Task machen will.

3204
02:34:53,740 --> 02:34:55,920
Was ist das für eine Notierung für Lambda C++?

3205
02:34:56,400 --> 02:34:57,460
Mehr muss ich dazu nicht sagen.

3206
02:34:57,460 --> 02:34:58,280
Hä, hä, hä.

3207
02:34:58,280 --> 02:35:00,520
Mehr, mehr gibt's nicht zu sagen.

3208
02:35:03,880 --> 02:35:04,920
Sieht halt nun mal so aus.

3209
02:35:05,420 --> 02:35:05,520
So.

3210
02:35:05,900 --> 02:35:09,160
Um die Sache noch komplett zu machen, man darf übrigens den Kram hier teilweise weglassen.

3211
02:35:09,260 --> 02:35:10,700
Dann sieht's so aus, was es nicht schöner macht.

3212
02:35:11,460 --> 02:35:11,600
So.

3213
02:35:11,940 --> 02:35:17,180
Das ist jetzt quasi, hier würde ich einen Task starten, der immer in der Endlos Schleife den Sensor abfragt.

3214
02:35:20,380 --> 02:35:20,780
Äh.

3215
02:35:23,190 --> 02:35:24,390
Ne, da gibt's keine Library für.

3216
02:35:24,410 --> 02:35:25,330
Es gibt eine Library für.

3217
02:35:25,550 --> 02:35:29,350
Es gibt eine eingebaute HTTPS-Library mit einer neuen ESP-EDF-Version.

3218
02:35:29,910 --> 02:35:32,510
Die ist aber rein Single-Threaded und blockt alle Forts lang.

3219
02:35:32,690 --> 02:35:34,510
Und es gibt, äh, Github-Projekte.

3220
02:35:34,650 --> 02:35:38,750
Der, äh, in Endlos-Schleifen hängen bleibt, wenn man die Verbindung abbricht.

3221
02:35:39,890 --> 02:35:40,250
Also.

3222
02:35:42,360 --> 02:35:44,520
Und auch nicht so genau das macht, wie, was ich will.

3223
02:35:44,840 --> 02:35:47,460
Dazu kommt, dass ich sowas schon immer mal selbst ausprobieren wollte, wie es funktioniert.

3224
02:35:47,820 --> 02:35:47,960
So.

3225
02:35:48,120 --> 02:35:49,540
Also das ist die Low-Level-Variante.

3226
02:35:50,660 --> 02:35:51,840
Ein Task anzulegen.

3227
02:35:52,960 --> 02:35:55,300
Und die ist so, die, die würde ich bevorzugen, wenn man das macht.

3228
02:35:55,600 --> 02:35:57,180
Dann gibt's noch die C++-Variante.

3229
02:35:57,540 --> 02:35:58,500
Standard Thread.

3230
02:35:59,340 --> 02:36:01,300
Ist im Prinzip genau das gleiche.

3231
02:36:01,440 --> 02:36:02,940
Bloß, dass ich weniger Optionen hab.

3232
02:36:06,700 --> 02:36:06,840
So.

3233
02:36:06,900 --> 02:36:08,780
Das ist die, das ist die C++-Variante.

3234
02:36:09,200 --> 02:36:13,300
Das Problem dabei ist, das funktioniert übrigens genauso, wie das andere.

3235
02:36:13,800 --> 02:36:21,600
Na, dann würd ich auch hier in den Lambda reinmachen und sagen, hier Endlos-Schleife True Sensor-Abfragen.

3236
02:36:24,120 --> 02:36:25,320
Das wär die C++-Variante.

3237
02:36:25,420 --> 02:36:27,020
Ihr seht, die ist ein bisschen kleiner und ein bisschen hübscher.

3238
02:36:27,920 --> 02:36:31,820
Aber das Problem dabei ist, wir müssen das übrigens mal so formatieren, sonst sieht's kacke aus.

3239
02:36:32,220 --> 02:36:39,220
Das Problem dabei ist, dass man keinerlei Config-Optionen hat für den Task, der unter der Haube angelegt wird.

3240
02:36:39,320 --> 02:36:39,620
Also.

3241
02:36:39,920 --> 02:36:40,920
Der, der C++-Variante.

3242
02:36:41,120 --> 02:36:44,320
Das hier macht genau das gleiche, was ich euch vorher gezeigt hab, unter der Haube.

3243
02:36:44,620 --> 02:36:46,220
Nur, dass es ein paar Default-Parameter setzt.

3244
02:36:46,320 --> 02:36:51,520
Das Problem ist, dass die wirklich, dass die eine viel zu hohe Priorität vergeben für den Task.

3245
02:36:51,820 --> 02:36:53,320
Die vergeben Priorität 5.

3246
02:36:53,820 --> 02:36:57,720
Priorität 5 ist höher als alles andere, was standardmäßig läuft.

3247
02:36:58,120 --> 02:37:00,220
Und dementsprechend kackt das Ding ab.

3248
02:37:01,020 --> 02:37:01,820
Wenn es hängt.

3249
02:37:02,220 --> 02:37:07,520
Also sprich, wenn ich hier sowas laufen lasse mit Priorität 5 und das ist, äh, und ich sleep'e da drin nicht.

3250
02:37:08,720 --> 02:37:10,620
Oder, oder ich hänge zu lange in dem Task fest.

3251
02:37:10,620 --> 02:37:13,820
Dann kackt mir der, da kackt mir das, das, äh, der Controller ab.

3252
02:37:15,990 --> 02:37:20,290
Und das nächste Problem ist, dass die Stack-Size viel zu klein ist.

3253
02:37:21,090 --> 02:37:28,690
Ich glaub, die, ich weiß nicht, was die Standard für ne Stack-Size haben, aber man kann einfach nicht genug RAM verwenden in so nem C++-Ding.

3254
02:37:28,790 --> 02:37:29,090
So.

3255
02:37:29,390 --> 02:37:34,590
Und deswegen, ihr wisst ja, dass ich ein C-Sharp-Fan bin, deswegen hab ich mir was eigenes gebaut.

3256
02:37:34,890 --> 02:37:37,190
Ich hab mir nen Wrapper gebaut, um das hier.

3257
02:37:37,790 --> 02:37:41,590
Und ich hab mir sehr viele Wrapper schon gebaut, weil ich, wie gesagt, C++ nicht lange ertrage.

3258
02:37:42,190 --> 02:37:42,690
So.

3259
02:37:42,690 --> 02:37:44,290
Ich hab mir nen Wrapper für das hier gebaut.

3260
02:37:44,990 --> 02:37:45,490
So.

3261
02:37:45,890 --> 02:37:51,090
Und zwar kann man das Ganze folgen, da verfolgen wir den Master-Fan, Helper, Task, Run.

3262
02:37:52,090 --> 02:37:58,590
Vielleicht erfüllt sich der ein oder andere jetzt an die Standard-Task-API für, äh, von .NET erinnert.

3263
02:37:59,690 --> 02:38:03,190
Ist ein bisschen ähnlich, weil ich, das erste ist, woran ich gedacht hab, ja.

3264
02:38:05,960 --> 02:38:06,760
Task, Run.

3265
02:38:07,260 --> 02:38:11,960
Und hier kann ich jetzt angeben, was ich, was ich, äh, was ich laufen lassen will.

3266
02:38:12,660 --> 02:38:14,360
Nur, dass ich bei meinem eigenen Wrapper.

3267
02:38:14,560 --> 02:38:23,060
Die Möglichkeit habe, wie man hier sieht, noch Stack-Size, Priorität und auf welchem Kern ich laufen will, anzugeben.

3268
02:38:25,550 --> 02:38:28,750
Also, ich, ich finde eigentlich eine recht sinnvolle Abstraktion, das Ganze, ne.

3269
02:38:29,550 --> 02:38:31,550
Wir lassen jetzt mal komplett Default alles.

3270
02:38:32,350 --> 02:38:33,550
Und sagen hier Task, Run.

3271
02:38:35,050 --> 02:38:36,650
Und was wir jetzt machen wollen, ist folgendes.

3272
02:38:36,950 --> 02:38:39,550
Wie gesagt, Verbindung annehmen funktioniert ja.

3273
02:38:39,750 --> 02:38:41,950
Jetzt müssen wir bloß sagen, Verbindung accept.

3274
02:38:42,250 --> 02:38:46,150
Und danach neuen Thread, also hier neuen Thread starten und SSL-Handshake machen.

3275
02:38:46,450 --> 02:38:48,250
So, ich hoffe, das kriegen wir heute noch hin.

3276
02:38:48,450 --> 02:38:49,850
Wir sind ja schon ein bisschen, wir sind noch ein bisschen am Starten.

3277
02:38:50,050 --> 02:38:51,250
Ich merke es auch schon, dass ich ein bisschen heiser wäre.

3278
02:38:51,450 --> 02:38:55,250
Zweieinhalb Stunden, zweieinhalb Stunden Big, Big Brain Programm.

3279
02:38:55,450 --> 02:39:00,250
So, also, wir haben jetzt einen neuen Task gestartet und da drin machen wir jetzt eine Endlosschleife.

3280
02:39:01,820 --> 02:39:04,620
Endlosschleife, immer beste.

3281
02:39:04,820 --> 02:39:08,620
So, wir haben eine Endlosschleife drinne, die Connections annimmt.

3282
02:39:08,820 --> 02:39:10,620
Und zwar funktioniert das folgendermaßen.

3283
02:39:10,820 --> 02:39:16,620
Ähm, ich habe hier gesagt, er soll auf Port 443, hier, Port 443 lauschen.

3284
02:39:16,620 --> 02:39:19,520
Port 443.

3285
02:39:19,720 --> 02:39:30,520
So, und damit das Ganze funktioniert, der, also der nimmt jetzt Connections auf Port 443, äh, nein, der hat, der lauscht auf Port 443, der nimmt noch keine Connections an.

3286
02:39:30,720 --> 02:39:33,020
Damit er Connections annimmt, muss ich folgendes machen.

3287
02:39:33,220 --> 02:39:35,420
Stripes 007, excellent.

3288
02:39:35,620 --> 02:39:40,620
Ähm, damit er Connections annimmt, muss ich folgendes machen.

3289
02:39:40,820 --> 02:39:42,820
Ich muss ihm sagen, accept Connection.

3290
02:39:43,020 --> 02:39:44,520
Also, wer hätte, wer hätte das gedacht?

3291
02:39:44,720 --> 02:39:47,120
Und zwar muss ich ihm hier sagen, embed TLS.

3292
02:39:47,320 --> 02:39:49,120
Net accept.

3293
02:39:49,320 --> 02:39:55,330
Und dann muss ich ihm sagen, okay, hier, ne, ne, Moment, wie habe ich das Ding genannt?

3294
02:39:55,530 --> 02:40:02,330
Äh, ähm, hier, listen, listen, fd, habe ich es genannt?

3295
02:40:02,530 --> 02:40:04,330
Hä?

3296
02:40:06,100 --> 02:40:08,600
Ah, ich muss noch sagen, dass ich hier drauf zugreifen darf.

3297
02:40:08,800 --> 02:40:10,800
Ignoriert das, das ist irgendein C++-Geschiss.

3298
02:40:11,000 --> 02:40:25,140
Ähm, äh, ach, listen, listen, f, ne, Moment, wie, wie habe ich es genannt?

3299
02:40:25,340 --> 02:40:28,040
Listen, fd, alles gut.

3300
02:40:28,240 --> 02:40:46,470
Äh, ich glaube, die Auto, das Autocomplete mag nicht.

3301
02:40:46,670 --> 02:40:48,470
Weil, das gibt es offensichtlich.

3302
02:40:48,670 --> 02:40:51,170
Ich glaube, das Autocomplete mag nicht.

3303
02:40:51,370 --> 02:40:55,470
Ähm, was auch immer.

3304
02:40:55,670 --> 02:40:57,270
So, ähm, genau.

3305
02:40:57,470 --> 02:41:00,670
Jetzt muss ich ihm sagen, Connection annehmen.

3306
02:41:00,870 --> 02:41:04,270
Der Und-Operator wird, nee, nee, ich will ja das ganze Ding übergeben als Referent.

3307
02:41:04,470 --> 02:41:06,470
Das passt schon. Ich habe es ja auf dem Vorfeld schon mal ausprobiert.

3308
02:41:06,670 --> 02:41:09,470
So, ähm, und jetzt kommt ein bisschen Magic.

3309
02:41:09,570 --> 02:41:12,570
Ich kopiere das gerade mal, dass ich mich nicht verschreibe.

3310
02:41:12,770 --> 02:41:16,720
Äh, ich kopiere das mal schnell, dass ich mich nicht verschreibe.

3311
02:41:16,920 --> 02:41:21,520
Und zwar, ähm, das hier, what the fuck?

3312
02:41:21,720 --> 02:41:33,140
Ähm, ich, ich ignoriere das mal, weil ich weiß, dass es funktioniert.

3313
02:41:33,340 --> 02:41:34,340
Ich habe das vorher ausprobiert.

3314
02:41:34,540 --> 02:41:42,140
Also, man legt jetzt erstmal noch eine Variable an, wo man die Infos, wer sich verbindet, ähm, hinterlegt.

3315
02:41:42,340 --> 02:41:46,140
Zum Beispiel kann ich hier dann abfragen, welche IP hat der Client, der sich verbunden hat.

3316
02:41:46,140 --> 02:41:48,140
Also, ich muss hier irgendwo die Informationen speichern.

3317
02:41:48,340 --> 02:41:54,140
Sprich, äh, aktueller Status der Verbindung, äh, welche IP hat der Client und solche Geschichten.

3318
02:41:54,340 --> 02:41:56,340
So, und das muss ich auch noch übergeben.

3319
02:41:56,540 --> 02:42:03,390
Client, FD, guck mal, wie lahm die Autos, Autocomplete ist.

3320
02:42:03,590 --> 02:42:10,970
Äh, und dann, der Rest kann, den Rest kann man, hier kann man übrigens die IP abfragen vom Client.

3321
02:42:11,170 --> 02:42:13,170
Das könnte, das könnte man eigentlich mal machen.

3322
02:42:13,370 --> 02:42:17,270
Das machen wir gleich mal, wenn wir gucken, wenn wir gucken, dass das hier funktioniert.

3323
02:42:17,470 --> 02:42:20,270
Ähm, da kann man sich nämlich die IP ausgeben lassen, die der Client verwendet.

3324
02:42:20,470 --> 02:42:22,470
So, was hat er jetzt für Schmerzen?

3325
02:42:22,670 --> 02:42:29,690
Was mag er denn hier dran nicht?

3326
02:42:29,890 --> 02:42:31,890
Ah, es funktioniert!

3327
02:42:32,090 --> 02:42:34,090
Alles klar!

3328
02:42:34,290 --> 02:42:36,290
Erstmal Fehler anzeigen, wo keiner ist.

3329
02:42:36,490 --> 02:42:48,460
Genau, also sprich, das hier ist quasi ein Zeiger da, da, da drauf hier.

3330
02:42:48,660 --> 02:42:51,660
Auf die Klasse, auf die Member-Variable, so.

3331
02:42:51,860 --> 02:42:55,860
Klassenvariable, oder wie soll man das genau nennen? Marking C++.

3332
02:42:56,060 --> 02:43:03,260
So, ähm, nee, this wird nicht übergeben, aber ich muss hier oben reinschreiben, was ich übergeben habe.

3333
02:43:03,460 --> 02:43:09,460
Ich könnte auch sowas hier machen, dann, dann nimmt er alles, auf was ich referenziere, aber ich kann auch sowas reinschreiben.

3334
02:43:09,660 --> 02:43:11,660
Finde ich ein bisschen überflüssig, ehrlich gesagt.

3335
02:43:11,860 --> 02:43:18,860
Man könnte einfach sagen, okay, nimm standardmäßig alles per Copy, ähm, was ich hier drinnen nehme, referenziere das automatisch für mich.

3336
02:43:19,060 --> 02:43:24,060
Oder, wenn ich es halt per Reference haben will, muss ich es angeben, oder wenn ich was exkluden will, muss ich es angeben.

3337
02:43:24,260 --> 02:43:26,260
Unnötig viel Geschreibe eigentlich.

3338
02:43:26,460 --> 02:43:29,460
So, und jetzt, jetzt nimmt er die Verbindung an.

3339
02:43:29,660 --> 02:43:31,460
Der macht jetzt einen neuen Thread auf.

3340
02:43:31,560 --> 02:43:37,560
Und dieser Thread macht nichts anderes, wie immer in der Endlosschleife gucken, gibt es neue Verbindungen, gibt es neue Verbindungen, gibt es neue Verbindungen.

3341
02:43:37,760 --> 02:43:40,760
Wenn es eine neue Verbindung gibt, dann annehmen.

3342
02:43:40,960 --> 02:43:50,960
So, dementsprechend muss ich jetzt auch gucken, ob das funktioniert hat, also sprich, äh, ob er, ob er die Verbindung angenommen hat, also ob das funktioniert hat.

3343
02:43:51,160 --> 02:43:53,160
Ich meine, es könnte ja, könnte ja irgendwelche Fehler geben, ja.

3344
02:43:53,360 --> 02:44:00,360
Es könnte ja sein, dass der Client, äh, die Verbindung abgebrochen hat, dass ich nicht genug RAM habe, um die Verbindung anzunehmen, oder sowas.

3345
02:44:00,560 --> 02:44:01,360
Kann ja alles Mögliche sein.

3346
02:44:01,560 --> 02:44:10,560
So, also sagen wir jetzt, okay, wenn, wenn ich die Verbindung angenommen habe, dann, äh, machen wir mal Handle Connection, das machen wir mal als nächstes.

3347
02:44:10,760 --> 02:44:17,760
Und wenn ich, äh, viel interessanter in dem Fall ist, wenn ich die Connection nicht annehmen konnte, vielleicht, weil der Client die Verbindung schon geschlossen hat,

3348
02:44:17,960 --> 02:44:23,960
dann muss ich noch ein bisschen aufräumen, weil wir sind ja hier in, äh, im Low-Level C++-Land.

3349
02:44:24,160 --> 02:44:32,470
Das heißt, was ich jetzt machen muss, ist mbtls net free, oh, free.

3350
02:44:32,570 --> 02:44:33,570
Und zwar den da.

3351
02:44:35,570 --> 02:44:36,570
Kleinen FD.

3352
02:44:36,770 --> 02:44:42,040
Den muss ich freen, und danach muss ich ihn löschen.

3353
02:44:42,240 --> 02:44:43,040
So.

3354
02:44:43,240 --> 02:44:53,240
Also in dem Fall, ich leg das hier ja an, ich reserviere hier Speicher für, manuell, ne, den räumt er nicht automatisch auf, weil ich will ja sonst die Verbindung nicht wegschmeißen.

3355
02:44:53,440 --> 02:44:59,440
Äh, und wenn das Annehmen der Verbindung nicht funktioniert, dann muss ich das wieder aufräumen, ansonsten habe ich einen Memory-Leak.

3356
02:44:59,640 --> 02:45:05,840
Und dann ist der ESP, startet sich random neu, und ich frag mich warum.

3357
02:45:05,840 --> 02:45:06,940
Memory-Leak suckt.

3358
02:45:07,140 --> 02:45:08,140
Wollen wir nicht.

3359
02:45:08,340 --> 02:45:13,340
So, und jetzt haben wir die Verbindung angenommen, da können wir jetzt mal gucken, was jetzt, ob das jetzt anders aussieht als vorher.

3360
02:45:13,540 --> 02:45:15,540
Aber ich denke mal noch nicht allzu sehr.

3361
02:45:15,740 --> 02:45:25,870
Die Musik, äh, Eintöntje, könnte es nicht sein, aber dafür, äh, lenkt sie nicht ab.

3362
02:45:26,070 --> 02:45:33,980
So, mein Ziel ist jetzt, dass wir gleich noch einen SSL-Handshake machen, und da muss ich unbedingt was essen, ich habe übelst Hunger.

3363
02:45:34,180 --> 02:45:35,980
Vielleicht gucken wir mal eine Runde Barbecue Pit Boys.

3364
02:45:36,180 --> 02:45:37,980
So, curl, zack.

3365
02:45:38,180 --> 02:45:41,980
Guckt, ihr seht, wir kommen schon ein bisschen weiter.

3366
02:45:42,180 --> 02:45:42,980
Er nimmt die Verbindung.

3367
02:45:43,080 --> 02:45:49,080
Er nimmt die Verbindung an, er möchte einen SSL-Handshake machen, aber das funktioniert nicht.

3368
02:45:49,280 --> 02:45:51,080
Warum?

3369
02:45:51,280 --> 02:45:54,280
Naja, ganz klar, weil ich nichts weiter mache mit der Verbindung, außer sie annehmen.

3370
02:45:54,480 --> 02:45:58,480
Ich nehme die Verbindung an, und danach mache ich nichts mehr.

3371
02:45:58,680 --> 02:46:05,200
Willst du dann gleich für jede Verbindung einen neuen Thread aufmachen?

3372
02:46:05,400 --> 02:46:07,400
So ist der Plan, ja.

3373
02:46:07,600 --> 02:46:08,600
So ist der Plan.

3374
02:46:08,800 --> 02:46:11,800
Dementsprechend muss man auch sagen, also wie gesagt, das Ding hat nicht sonderlich viel RAM.

3375
02:46:12,000 --> 02:46:14,600
Ich zeige es euch mal, wie viel RAM das hat, das hält sich echt in Grenzen.

3376
02:46:14,700 --> 02:46:20,700
Ähm, ESP Get Free Heap.

3377
02:46:20,900 --> 02:46:27,700
Geben wir mal den Speicher aus, dass ihr gleich seht, wie der Speicher runterpurzelt, wenn ich da Verbindungen aufbaue.

3378
02:46:27,900 --> 02:46:29,900
Gucken wir uns mal an.

3379
02:46:30,100 --> 02:46:42,700
Also das hat, also wie gesagt, die Sachen zwar hier, dass sie 520 KB RAM haben, allerdings ist der RAM ein bisschen anders aufgeteilt, wie das so bei einem normalen Rechner ist.

3380
02:46:42,700 --> 02:46:46,700
Auf eurem Desktop, keine Ahnung, 2 GB RAM habt ihr, habt ihr auch 2 GB RAM.

3381
02:46:46,900 --> 02:47:01,470
Hier ist es ein bisschen anders, ähm, ihr seht hier habt ihr standardmäßig nur, oh, guck mal, Bytes zu Kilobytes, habt ihr nur 170 KB RAM zur Verfügung von diesen 520, ja.

3382
02:47:01,670 --> 02:47:15,260
Das ist alles ein bisschen, wird alles ein bisschen anders gehandhabt, zum Beispiel gehen für statische Variablen und solche Sachen geht schon mal RAM weg für, ähm, für den WLAN, für den WiFi-Stack geht RAM weg.

3383
02:47:15,260 --> 02:47:16,060
Ähm, solche Sachen.

3384
02:47:16,160 --> 02:47:40,160
Also, wir haben, äh, die, die schreiben zwar, man hat 520 KB, KB RAM, aber benutzbar sind im Endeffekt nur so 170, wobei es auch, hier unser Display, unser Display frisst ja auch noch ein bisschen RAM, keine Ahnung, 40, 40 KB RAM oder so wird wahrscheinlich auch die ganze Display-Geschichte fressen.

3385
02:47:40,360 --> 02:47:44,360
Ähm, normalerweise hat man so...

3386
02:47:46,060 --> 02:47:50,660
...zirka 220 KB zur Verfügung RAM, ja.

3387
02:47:50,860 --> 02:47:52,360
Das reicht aber auch dicke.

3388
02:47:52,560 --> 02:48:08,660
Ich weiß, im Vergleich zu einem Desktop mit, äh, lass mal kurz gucken, mit 32 GB RAM kommen einem jetzt 220 KB RAM vielleicht nicht allzu viel vor, aber auf so einer Plattform ist das doch ganz ordentlich.

3389
02:48:08,860 --> 02:48:16,610
Was meint ihr, wie viel RAM so ein Arduino hat, ist doch viel weniger.

3390
02:48:16,810 --> 02:48:19,610
Also, ich hatte von euch einer mal Arduino programmiert.

3391
02:48:19,610 --> 02:48:24,110
Das ging bisher an mir vorbei, aber die haben teilweise noch deutlich weniger RAM.

3392
02:48:32,890 --> 02:48:35,170
Sag ich das, Sebaro, bist du eigentlich am Start?

3393
02:48:36,270 --> 02:48:37,470
Ist, ist der Cute-Mod da?

3394
02:48:41,580 --> 02:48:42,600
Ich glaube, ich glaube nicht.

3395
02:48:44,260 --> 02:48:45,240
So, das machen wir jetzt noch schnell.

3396
02:48:45,440 --> 02:48:47,600
Also, äh, wo sind wir stehen geblieben?

3397
02:48:48,000 --> 02:48:48,760
Handle Connection.

3398
02:48:49,340 --> 02:48:49,920
So weit, so gut.

3399
02:48:50,080 --> 02:48:56,100
Wir machen jetzt, für jeden, ihr müsst mir mal sagen, kann man, kann man der Sache halbwegs folgen, was ich hier treibe?

3400
02:48:57,080 --> 02:48:58,100
Jetzt mal für die, also...

3401
02:48:58,820 --> 02:49:07,780
Ich weiß, dass wir ein paar Leute am Start haben, die sich damit gut auskennen und ich weiß auch, dass wir ein paar Leute am Start haben, die einfach nur gucken, weil sie es, äh, entspannend finden und eigentlich sich nicht so sehr damit beschäftigen.

3402
02:49:07,840 --> 02:49:12,820
Aber so mal an die Frage für die Leute, die das interessiert, ähm, so kann man der Sache halbwegs folgen, was ich hier treibe.

3403
02:49:12,900 --> 02:49:23,640
Ich meine, ich bin mir selbst nicht hundertprozentig sicher, was ich mache und, ähm, das, ich erhebe da jetzt auch keinen Anspruch darauf, dass das alles so hundertprozentig stimmt, was ich sage, ne?

3404
02:49:23,640 --> 02:49:28,800
Also, äh, also es kann durchaus sein, dass ich mal ein bisschen Mist erzähle, aber unwissentlich zwischendurch.

3405
02:49:28,820 --> 02:49:42,320
Ja, zum Beispiel ist es ja zum, es ist ja auch nicht ganz korrekt, wenn ich sage, dass die Stack Size von einem Task gleich der Sache ist, die das am Speicher verwenden kann, aber im Großen und Ganzen stimmt es halt.

3406
02:49:42,940 --> 02:49:56,660
So, so, also, wir, wir haben jetzt hier ein extra Task, ich nenne es mal Task, weil das halt so der, die, die, wie sagt man so schön, die Terminologie ist, also halt so einfach das Wort, was man dafür verwendet auf der Plattform.

3407
02:49:57,460 --> 02:49:58,660
Unter Windows wären das...

3408
02:49:58,820 --> 02:49:59,280
Threads.

3409
02:50:02,490 --> 02:50:10,550
So, ich habe hier ein extra Thread gestartet, wir nennen es mal Task, ich finde Thread spricht sich irgendwie für nicht-Native-Speaker so kompliziert aus.

3410
02:50:11,450 --> 02:50:16,130
Das ist, also wir haben ein extra Task gestartet mit einer Endflow-Schleife, die macht quasi die ganze Zeit das da.

3411
02:50:17,790 --> 02:50:18,650
Bloß ein bisschen schneller.

3412
02:50:20,150 --> 02:50:29,450
Und, ähm, dort gucken wir einfach, gibt es eine neue Verbindung, wenn ja, nehmen wir die Verbindung an, wenn nein, beziehungsweise wenn die Verbindung...

3413
02:50:29,450 --> 02:50:30,450
Ähm...

3414
02:50:31,290 --> 02:50:34,850
Irgendwie geschlossen wurde, dann machen wir den Speicher wieder frei.

3415
02:50:35,170 --> 02:50:37,610
So, jetzt kommt das eigentlich Interessante, jetzt müssen wir die Connection handeln.

3416
02:50:37,610 --> 02:50:54,710
Also sprich, jetzt müssen wir, müssen wir einen SSL-Handshake machen, also einen SSL-Handshake, dass man, weil aktuell ist es ja so, wenn ich im Browser da draufgehe, 1, 2, 2, 1, 6, 8, 1, 1, 2, oh fuck, was war es, 5, 4, 4, 3, 3, dann geht nix.

3417
02:50:55,050 --> 02:50:56,590
Und auch mit HTTPS geht da nix.

3418
02:50:57,490 --> 02:51:01,090
Ah, Secure Connection failed, bam, End of File Error.

3419
02:51:01,610 --> 02:51:02,030
Geht nicht.

3420
02:51:03,050 --> 02:51:04,810
Aber er merkt schon mal, dass da irgendwas ist.

3421
02:51:05,750 --> 02:51:07,430
Und jetzt muss ich einen SSL-Handshake machen.

3422
02:51:09,410 --> 02:51:12,330
Threat klingt nach Bedrohung, ja, das stimmt.

3423
02:51:12,630 --> 02:51:14,270
Shred, das ist ein neuer Shred, ist das.

3424
02:51:15,030 --> 02:51:15,950
Neuer Task, so.

3425
02:51:15,950 --> 02:51:23,870
Ähm, jetzt muss ich die Verbindung annehmen und einen SSL-Handshake machen, also sprich, einen Verbindungsaufbau für eine verschlüsselte Verbindung muss ich jetzt machen.

3426
02:51:25,110 --> 02:51:27,190
Und wir starten jetzt einen weiteren Task.

3427
02:51:28,610 --> 02:51:29,950
Pro Connection.

3428
02:51:31,290 --> 02:51:35,590
Ich nehme die Connection an und jetzt starte ich einen weiteren Task pro Connection.

3429
02:51:35,670 --> 02:51:41,010
Das heißt, jede Verbindung, die kommt, ist unabhängig von der anderen.

3430
02:51:41,010 --> 02:51:51,290
Das bedeutet, ich kann zum Beispiel einen Firmware-Update machen und mir dabei über eine andere Verbindung die Logs angucken, die das Firmware-Update verursacht.

3431
02:51:51,430 --> 02:51:56,510
Also zum Beispiel, ich könnte das hier unten mir anschauen, in einem Browser oder per Curl oder sonst wie.

3432
02:51:58,310 --> 02:52:00,530
Und gleichzeitig einen Firmware-Update machen und gucken, okay.

3433
02:52:00,530 --> 02:52:02,970
Okay, gibt es da einen Fehler beim Firmware-Update und sowas?

3434
02:52:03,390 --> 02:52:04,530
Bisschen mehr Low-Level gucken.

3435
02:52:05,030 --> 02:52:07,350
Weil die Verbindungen komplett unabhängig voneinander sind.

3436
02:52:08,110 --> 02:52:10,790
Ansonsten müsste die eine Verbindung auf die andere warten.

3437
02:52:11,690 --> 02:52:16,530
Was zum Beispiel bei einem Update gar nicht funktionieren würde, weil bei einem Update blockt den kompletten Vorgang.

3438
02:52:17,330 --> 02:52:24,310
Ein Update ist ja ein Upload im Endeffekt, ein Upload von, keine Ahnung, 600 Kilobyte großer Firmware.

3439
02:52:25,130 --> 02:52:30,150
Und solange ich 600 Kilobyte Firmware uploade, kann ich nichts anderes machen, wenn es Single-Threaded wäre.

3440
02:52:30,530 --> 02:52:31,510
Upload, Upload, Upload.

3441
02:52:31,870 --> 02:52:35,930
Und nach dem Ende des Firmware-Updates wird er einfach den ESP neu starten.

3442
02:52:35,990 --> 02:52:41,590
Und ich hätte nichts mitbekommen, hier meine Logs im Browser, was denn während dem Firmware-Update passiert ist.

3443
02:52:41,990 --> 02:52:45,590
Deswegen ist das, denke ich mal, ganz praktisch, wenn man das Ganze Multi-Threaded macht.

3444
02:52:46,430 --> 02:52:50,870
Natürlich braucht es ein bisschen mehr RAM als alles in einem Task, logisch.

3445
02:52:51,710 --> 02:52:55,090
Und wir haben ja auch nur hier noch 170 Kilobyte RAM frei.

3446
02:52:56,130 --> 02:52:58,970
Das heißt im Endeffekt, ich kann auch nicht so viele Verbindungen aufbauen.

3447
02:52:59,410 --> 02:53:00,090
Also eine TLS.

3448
02:53:00,530 --> 02:53:06,930
Eine TLS, SSL, HTTPS-Verbindung, wie auch immer man es jetzt genau nennen mag, braucht ungefähr 30 bis 40 Kilobyte RAM.

3449
02:53:07,470 --> 02:53:10,190
Da könnt ihr ja mal ausrechnen, wie viele Verbindungen ich da reinkriege.

3450
02:53:11,790 --> 02:53:19,250
Realistisch betrachtet sind es wahrscheinlich 3, 4 oder 5 insgesamt.

3451
02:53:19,850 --> 02:53:27,810
Das liegt aber auch daran, weil ich kontinuierlichen Speicherplatz brauche und ich muss erstmal 30 Kilobyte am Stück Speicherplatz frei haben.

3452
02:53:28,790 --> 02:53:31,810
Also wir machen jetzt für diese neue Verbindung noch einen neuen Task auf.

3453
02:53:31,810 --> 02:53:33,810
Und zwar, was der macht ist...

3454
02:53:33,950 --> 02:53:39,890
Der gibt das einfach zu einer Methode weiter, die wir gleich oben anlegen.

3455
02:53:41,890 --> 02:53:43,890
Also erstmal neuen Lambda anschmeißen.

3456
02:53:45,210 --> 02:53:51,210
Das da übrigens, wer sich das hier fragt, dieses Konstrukt hier, ist eine Funktion, die keinen Namen hat.

3457
02:53:51,210 --> 02:53:54,210
Also sprich, ich könnte hier oben auch sowas hinschreiben wie...

3458
02:53:54,210 --> 02:54:01,210
Also anstatt dem hier, könnte ich dann auch sowas machen wie, keine Ahnung, void bla bla blub, sonst was, hier irgendwas.

3459
02:54:01,210 --> 02:54:03,210
Und dann anstatt dem...

3460
02:54:03,950 --> 02:54:05,950
Das da machen.

3461
02:54:05,950 --> 02:54:07,950
Das würde auch funktionieren.

3462
02:54:07,950 --> 02:54:15,950
Aber ich finde es insofern schöner, dass man die Funktion an der Stelle hat, wo was passiert, dann kann man halt direkt sehen, was ist.

3463
02:54:15,950 --> 02:54:22,950
Sobald das ein bisschen länger wird, würde ich das nicht mehr in einem Lambda-Inline schreiben, sondern würde halt wirklich eine eigene Funktion machen.

3464
02:54:22,950 --> 02:54:23,950
Das machen wir jetzt auch gleich.

3465
02:54:23,950 --> 02:54:25,950
Also wir haben jetzt die Verbindung angenommen.

3466
02:54:25,950 --> 02:54:27,950
Das heißt, ähm...

3467
02:54:27,950 --> 02:54:29,950
FeelSmartManExcel.

3468
02:54:29,950 --> 02:54:31,950
Das ist das Gegenteil von dem hier quasi.

3469
02:54:31,950 --> 02:54:33,790
Das ist das Gegenteil von dem hier quasi.

3470
02:54:33,790 --> 02:54:35,790
Das ist das Gegenteil von dem hier quasi.

3471
02:54:35,790 --> 02:54:37,790
ExquisiteSmartMan.

3472
02:54:37,790 --> 02:54:47,360
Da musst du aber in den Stream oft gucken, weil das ist ja bekanntlichermaßen IQ-Steigerung bis mehr geht nicht mehr.

3473
02:54:47,360 --> 02:54:50,740
Vor allem, wenn man subbt.

3474
02:54:50,740 --> 02:54:56,740
Wenn man subbt, habe ich gehört, ist das nochmal eine Steigerung, was das angeht.

3475
02:54:56,740 --> 02:55:02,500
Jeder Sub plus 40 IQ-Punkte für den gesamten Chat.

3476
02:55:02,500 --> 02:55:04,500
Wissenschaftlich belegt.

3477
02:55:04,500 --> 02:55:10,050
So, also.

3478
02:55:10,050 --> 02:55:12,050
Neue Task aufmachen.

3479
02:55:12,050 --> 02:55:14,050
Und da drin sagen wir jetzt, okay, nehmen die Verbindung.

3480
02:55:14,050 --> 02:55:16,050
Nehmen die Verbindung und ähm...

3481
02:55:16,050 --> 02:55:18,050
Nehmen die Verbindung und ähm...

3482
02:55:18,050 --> 02:55:20,050
Machen wir mal sowas hier.

3483
02:55:20,050 --> 02:55:22,050
Die Methode gibt's noch nicht.

3484
02:55:22,050 --> 02:55:24,050
Die Methode gibt's noch nicht.

3485
02:55:24,050 --> 02:55:26,050
Also, das gibt's, ich schreib das nur mal rein.

3486
02:55:26,050 --> 02:55:28,050
Das gibt's noch nicht.

3487
02:55:28,050 --> 02:55:30,050
So.

3488
02:55:30,050 --> 02:55:32,050
Wir machen mit der Verbindung gleich irgendwas.

3489
02:55:32,050 --> 02:55:34,050
Wir machen mit der Verbindung gleich irgendwas.

3490
02:55:34,050 --> 02:55:36,050
Aber zumindest eine Sache brauchen wir hier unten auch noch.

3491
02:55:36,050 --> 02:55:38,050
Aber zumindest eine Sache brauchen wir hier unten auch noch.

3492
02:55:38,050 --> 02:55:40,050
Wenn wir die Verbindung abkacken,

3493
02:55:40,050 --> 02:55:42,050
dann muss ich auf jeden Fall auch wieder aufräumen,

3494
02:55:42,050 --> 02:55:44,050
weil sonst habe ich einen Memory-Leak.

3495
02:55:44,050 --> 02:55:46,050
Ich zelebriere das hier jetzt so,

3496
02:55:46,050 --> 02:55:48,050
weil

3497
02:55:48,050 --> 02:55:50,050
das schießt einem total oft ins Knie,

3498
02:55:50,050 --> 02:55:52,050
dass man das Aufräumen vergisst.

3499
02:55:52,050 --> 02:55:54,050
Und wir sind hier, wir sind halt ja keiner Sprache,

3500
02:55:54,050 --> 02:55:56,050
die irgendeinen Garbage-Collector oder sonst was hat.

3501
02:55:56,050 --> 02:55:58,050
Hat halt alle seine Vor- und Nachteile.

3502
02:55:58,050 --> 02:56:00,050
Hier musst du es halt selbst machen.

3503
02:56:00,050 --> 02:56:02,050
Das heißt, man dürfte hier auf keinen Fall vergessen,

3504
02:56:02,050 --> 02:56:04,050
den Kram, den wir oben angelegt haben, wieder freizugeben.

3505
02:56:04,050 --> 02:56:06,050
Sollte man es hier einfach so anlegen,

3506
02:56:06,050 --> 02:56:08,050
ist kein Problem. Legt er automatisch wieder an. Legt man es allerdings so an,

3507
02:56:08,050 --> 02:56:10,050
dann muss man

3508
02:56:10,050 --> 02:56:12,050
das selbst wieder frei.

3509
02:56:12,050 --> 02:56:14,050
Also alles, was man mit new anlegt oder

3510
02:56:14,050 --> 02:56:16,050
malloc in C, muss man wieder freigeben.

3511
02:56:16,050 --> 02:56:18,050
In dem Fall mit delete oder mit free in C.

3512
02:56:18,050 --> 02:56:20,050
Sonst Memory-Leak und

3513
02:56:20,050 --> 02:56:22,050
F in Chat.

3514
02:56:22,050 --> 02:56:37,010
So.

3515
02:56:37,010 --> 02:56:39,010
Jetzt werden wir mal die Methode anlegen,

3516
02:56:39,010 --> 02:56:43,020
wo wir einen SSL-Handshake machen.

3517
02:56:43,020 --> 02:56:45,020
Mit einem Shared-Pointer

3518
02:56:45,020 --> 02:56:47,020
funktioniert glaube ich nicht.

3519
02:56:47,020 --> 02:56:51,940
Mit einem Shared-Pointer

3520
02:56:51,940 --> 02:56:53,940
funktioniert nicht. Warte mal, das habe ich

3521
02:56:53,940 --> 02:56:55,940
nämlich ausprobiert.

3522
02:56:55,940 --> 02:56:59,310
Ähm, sonst beschwerst

3523
02:56:59,310 --> 02:57:01,310
du dich die ganze Zeit über C++.

3524
02:57:01,310 --> 02:57:03,310
Also es gibt genug über C++, wo man sich beschweren kann,

3525
02:57:03,310 --> 02:57:05,310
unabhängig von C-APIs.

3526
02:57:05,310 --> 02:57:07,310
Und gerade Interop mit C-APIs

3527
02:57:07,310 --> 02:57:09,310
müsste ja nur wirklich eines der

3528
02:57:09,310 --> 02:57:11,310
Steckenpferden von C++ schlechthin sein.

3529
02:57:11,310 --> 02:57:13,310
Und

3530
02:57:13,310 --> 02:57:15,310
dafür ist es an einigen Stellen ordentlich hakelig.

3531
02:57:15,310 --> 02:57:17,310
Ähm,

3532
02:57:17,310 --> 02:57:25,230
ich überlege gerade, was war das?

3533
02:57:25,230 --> 02:57:30,780
Doch, an der Stelle

3534
02:57:30,780 --> 02:57:32,780
könnte man wirklich einen Shared-Pointer machen.

3535
02:57:32,780 --> 02:57:37,310
Also anstatt dem da,

3536
02:57:37,310 --> 02:57:39,310
könnte man...

3537
02:57:39,310 --> 02:57:41,310
Ne, man könnte keinen Shared-Pointer machen.

3538
02:57:41,310 --> 02:57:43,310
Könnte man nicht machen.

3539
02:57:43,310 --> 02:57:45,310
Einen Shared-Pointer, also man könnte...

3540
02:57:45,310 --> 02:57:47,310
Nein, könnte man nicht machen, weil...

3541
02:57:47,310 --> 02:57:49,310
Wenn ich den hier oben anlege,

3542
02:57:49,310 --> 02:57:51,310
dann geht der

3543
02:57:51,310 --> 02:57:53,310
hier...

3544
02:57:53,310 --> 02:57:55,310
Dann geht der hier aus dem Scope.

3545
02:57:55,310 --> 02:58:01,950
Und wenn der hier aus dem Scope geht,

3546
02:58:01,950 --> 02:58:03,950
funktioniert das glaube ich nicht.

3547
02:58:03,950 --> 02:58:05,950
Wenn ich den Shared-Pointer hier anlegen würde,

3548
02:58:05,950 --> 02:58:15,790
ist der Scope hier fertig.

3549
02:58:15,790 --> 02:58:17,790
Ich könnte den zwar hier übergeben, aber ich glaube,

3550
02:58:17,790 --> 02:58:23,540
das bringt nichts.

3551
02:58:23,540 --> 02:58:25,540
Vielleicht geht es auch.

3552
02:58:25,540 --> 02:58:31,470
Aber ich glaube, es geht nicht.

3553
02:58:31,470 --> 02:58:33,470
Ich könnte das höchstens moven irgendwie,

3554
02:58:33,470 --> 02:58:35,470
wobei ich da nicht weiß, ob das mit diesem

3555
02:58:35,470 --> 02:58:37,470
C-Zeug funktioniert.

3556
02:58:37,470 --> 02:58:39,470
Ne, ich probiere das

3557
02:58:39,470 --> 02:58:41,470
nicht. Ich lasse das einfach so, weil da weiß ich,

3558
02:58:41,470 --> 02:58:43,470
dass es funktioniert. So, also wir brauchen jetzt

3559
02:58:43,470 --> 02:58:45,470
eine neue Methode für HandleConnection.

3560
02:58:45,470 --> 02:58:47,470
Der kriegt die Information über den Client

3561
02:58:47,470 --> 02:58:49,470
übergeben.

3562
02:58:49,470 --> 02:58:51,470
Also sprich, IP vom

3563
02:58:51,470 --> 02:58:53,470
Client, Status vom Client und sonst was.

3564
02:58:53,470 --> 02:58:55,470
So, und das Ding heißt HandleConnection.

3565
02:58:55,470 --> 02:58:57,470
Kann Visual Studio sowas wie, ähm,

3566
02:58:57,470 --> 02:58:59,470
CreateMethod

3567
02:58:59,470 --> 02:59:01,470
oder sowas? Geht das hier?

3568
02:59:01,470 --> 02:59:03,470
Kann das

3569
02:59:03,470 --> 02:59:05,470
sowas?

3570
02:59:05,470 --> 02:59:07,470
Create...

3571
02:59:07,470 --> 02:59:09,470
Reflektor...

3572
02:59:09,470 --> 02:59:11,470
Na, anscheinend nicht.

3573
02:59:11,470 --> 02:59:13,470
Gut, da müssen wir das ganze von Hand anlegen.

3574
02:59:13,470 --> 02:59:15,470
HandleConnection.

3575
02:59:15,470 --> 02:59:17,470
So.

3576
02:59:17,470 --> 02:59:19,470
Also gehen wir mal hier drauf

3577
02:59:19,470 --> 02:59:21,470
und sagen Private

3578
02:59:21,470 --> 02:59:23,470
Void

3579
02:59:23,470 --> 02:59:25,470
HandleConnection

3580
02:59:25,470 --> 02:59:27,470
So, und das braucht als

3581
02:59:27,470 --> 02:59:29,470
Parameter ein

3582
02:59:29,470 --> 02:59:31,470
m.tls

3583
02:59:31,470 --> 02:59:33,470
äh, net Context

3584
02:59:33,470 --> 02:59:35,470
den wir

3585
02:59:35,470 --> 02:59:37,470
einfach mal so nennen.

3586
02:59:37,470 --> 02:59:39,470
Pointer ist das,

3587
02:59:39,470 --> 02:59:43,740
ne?

3588
02:59:43,740 --> 02:59:45,740
VS Code kann es auch, muss ein Plugin installieren.

3589
02:59:45,740 --> 02:59:49,120
Okay, welches?

3590
02:59:49,120 --> 02:59:51,120
Gibt ja bestimmt tausende.

3591
02:59:51,120 --> 02:59:53,120
Okay, ich glaube wir machen jetzt mal eine andere Playlist, die habe ich jetzt

3592
02:59:53,120 --> 02:59:55,120
zum dritten Mal

3593
02:59:55,120 --> 02:59:57,120
durch

3594
02:59:57,120 --> 02:59:59,120
ge...

3595
02:59:59,120 --> 03:00:01,120
Doodled.

3596
03:00:01,120 --> 03:00:04,500
Okay. Was denn?

3597
03:00:04,500 --> 03:00:08,130
Ah, okay, scheint

3598
03:00:08,130 --> 03:00:10,130
halbwegs brauchbar zu sein.

3599
03:00:10,130 --> 03:00:12,130
Und es geht mir nicht so sehr auf den Keks.

3600
03:00:12,130 --> 03:00:14,130
So, also, jetzt machen wir

3601
03:00:14,130 --> 03:00:16,130
einen SSL Handshake. Also sprich,

3602
03:00:16,130 --> 03:00:18,130
aktuell kann sich der Browser ja nicht hier hin

3603
03:00:18,130 --> 03:00:20,130
verbinden und jetzt nehmen wir die Verbindung

3604
03:00:20,130 --> 03:00:22,130
von dem Browser an.

3605
03:00:22,130 --> 03:00:24,130
So, dann gehen wir hier hoch in HandleConnection

3606
03:00:24,130 --> 03:00:26,130
ähm, und müssen als erstes

3607
03:00:26,130 --> 03:00:28,130
mal einen SSL Context anlegen.

3608
03:00:28,130 --> 03:00:33,300
Das ist das, wo

3609
03:00:33,300 --> 03:00:35,300
die ganzen Informationen, was, äh,

3610
03:00:35,300 --> 03:00:37,300
Verschlüsselungssachen und irgendwelche

3611
03:00:37,300 --> 03:00:39,300
aktuellen

3612
03:00:39,300 --> 03:00:41,300
Dings, wie heißt's? Sessionnummern

3613
03:00:41,300 --> 03:00:43,300
und so Gedöns drinne gespeichert werden.

3614
03:00:43,300 --> 03:00:45,300
Also sprich, alles was man braucht, dass die Verbindung

3615
03:00:45,300 --> 03:00:47,300
mit dem Client weiter verschlüsselt

3616
03:00:47,300 --> 03:00:49,300
funktionieren kann. Kommt alles hier in diesen

3617
03:00:49,300 --> 03:00:51,300
SSL Context rein.

3618
03:00:51,300 --> 03:00:53,300
So, den muss man erstmal

3619
03:00:53,300 --> 03:00:58,400
anlegen.

3620
03:01:00,400 --> 03:01:02,400
Das ist jetzt nix, was man immer

3621
03:01:02,400 --> 03:01:04,400
so macht. Das ist halt so eine EmberTLS

3622
03:01:04,400 --> 03:01:06,400
spezifische Geschichte. Das habe ich auch nur aus dem

3623
03:01:06,400 --> 03:01:08,400
Tutorial.

3624
03:01:08,400 --> 03:01:10,400
Dass das halt

3625
03:01:10,400 --> 03:01:12,400
nun mal so gemacht werden muss, weil es sonst nicht funktioniert.

3626
03:01:12,400 --> 03:01:14,400
So, und jetzt können wir gucken,

3627
03:01:14,400 --> 03:01:16,400
ob das Ganze funktioniert hat.

3628
03:01:16,400 --> 03:01:18,400
Also sprich, wir machen jetzt mal sowas

3629
03:01:18,400 --> 03:01:20,400
hier, äh,

3630
03:01:20,400 --> 03:01:22,400
ja, Result oder so,

3631
03:01:22,400 --> 03:01:26,350
ähm,

3632
03:01:26,350 --> 03:01:28,350
Setup.

3633
03:01:28,350 --> 03:01:30,350
Und da muss man ihm jetzt das hier

3634
03:01:30,350 --> 03:01:32,350
übergeben, sprich, hier stehen die Informationen

3635
03:01:32,350 --> 03:01:34,350
vom Client drinne,

3636
03:01:34,350 --> 03:01:36,350
aktuell, also sprich, äh,

3637
03:01:36,350 --> 03:01:38,350
irgendwelche TCP-Geschichten, Connection,

3638
03:01:38,350 --> 03:01:40,350
ähm,

3639
03:01:40,350 --> 03:01:42,350
was zu der Verbindung gehört. Und hier stehen dann

3640
03:01:42,350 --> 03:01:44,350
die ganzen SSL-Informationen für den Client

3641
03:01:44,350 --> 03:01:46,350
drin, also was man zum Verschlüsseln braucht.

3642
03:01:46,350 --> 03:01:48,350
So, und das

3643
03:01:48,350 --> 03:01:50,350
muss man jetzt sagen, okay, nehm mal die Client, die, die,

3644
03:01:50,350 --> 03:01:52,350
die Client-Verbindung und

3645
03:01:52,350 --> 03:01:54,350
dein SSL-Context,

3646
03:01:54,350 --> 03:01:56,350
wurstel das zusammen und mach halt

3647
03:01:56,350 --> 03:01:58,350
SSL-Setup. Also sprich, äh,

3648
03:01:58,350 --> 03:02:00,350
richte das mal so ein, dass ich jetzt

3649
03:02:00,350 --> 03:02:02,350
eine SSL-Verbindung handshake machen kann, aufbauen kann.

3650
03:02:02,350 --> 03:02:04,350
So.

3651
03:02:04,350 --> 03:02:06,350
Äh, übrigens, ich erzähl euch

3652
03:02:06,350 --> 03:02:08,350
Mist, das ist nämlich verkehrt.

3653
03:02:08,350 --> 03:02:10,350
Ich muss den SSL-Context übergeben

3654
03:02:10,350 --> 03:02:12,350
und die, es stimmt übrigens auch nicht, was ich

3655
03:02:12,350 --> 03:02:14,350
gesagt hab, und die Config, die ich

3656
03:02:14,350 --> 03:02:16,350
vorhin angelegt hab. Also, siehste, vergiss es,

3657
03:02:16,350 --> 03:02:18,350
was ich gesagt hab, das kommt jetzt gleich.

3658
03:02:18,350 --> 03:02:20,350
Ähm, genau.

3659
03:02:20,350 --> 03:02:22,350
Result. So, und jetzt müssen wir checken,

3660
03:02:22,350 --> 03:02:24,350
ob das funktioniert hat.

3661
03:02:24,350 --> 03:02:26,350
Also sprich, wenn das Result

3662
03:02:26,350 --> 03:02:28,350
nicht 0 ist, 0 ist immer

3663
03:02:28,350 --> 03:02:30,350
okay. Das ist, das, das ist aber bei

3664
03:02:30,350 --> 03:02:32,350
vielen Libraries so. Und das ist auch nicht

3665
03:02:32,350 --> 03:02:34,350
ne reine CC++-Geschichte.

3666
03:02:34,350 --> 03:02:36,350
Also viele Programmiersprachen,

3667
03:02:36,350 --> 03:02:38,350
die, ähm, oder Libraries, die

3668
03:02:38,350 --> 03:02:40,350
INS

3669
03:02:40,350 --> 03:02:42,350
als, als, ähm, Fehlercode

3670
03:02:42,350 --> 03:02:44,350
verwenden, da

3671
03:02:44,350 --> 03:02:46,350
bedeutet es meistens 0

3672
03:02:46,350 --> 03:02:48,350
ist meistens okay.

3673
03:02:48,350 --> 03:02:50,350
Und alles, was nicht 0 ist,

3674
03:02:50,350 --> 03:02:52,350
ist meistens nicht gut.

3675
03:02:52,350 --> 03:02:58,160
Also sprich, wenn ich jetzt

3676
03:02:58,160 --> 03:03:00,160
keinen SSL-Context anlegen konnte,

3677
03:03:00,160 --> 03:03:02,160
dann geb ich ne Fehlermeldung aus.

3678
03:03:02,160 --> 03:03:04,160
Und die copy-paste, das copy-paste ich mir mal.

3679
03:03:06,160 --> 03:03:08,160
Weil ich das, äh, nicht nochmal brauchen, machen muss.

3680
03:03:08,160 --> 03:03:10,160
Error-Message. Oh, Error-Message brauch ich noch.

3681
03:03:12,160 --> 03:03:14,160
Copy-paste ich mir auch mal.

3682
03:03:14,160 --> 03:03:16,160
Das hab ich nämlich im Vorfeld schon mal gebastelt.

3683
03:03:16,160 --> 03:03:18,160
Und zwar,

3684
03:03:18,160 --> 03:03:20,160
ähm, EmberTLS

3685
03:03:20,160 --> 03:03:22,160
gibt ganz ultrakryptische Fehlermeldungen

3686
03:03:22,160 --> 03:03:24,160
aus. Also sowas

3687
03:03:24,160 --> 03:03:26,160
wie, ähm,

3688
03:03:26,160 --> 03:03:28,160
SSL-Setup failed

3689
03:03:28,160 --> 03:03:30,160
minus 582179.

3690
03:03:30,160 --> 03:03:32,160
So, und dann soll dann irgendeiner was dran

3691
03:03:32,160 --> 03:03:34,160
erkennen, ne. Glücklicherweise

3692
03:03:34,160 --> 03:03:36,160
haben die ne Möglichkeit eingebaut,

3693
03:03:36,160 --> 03:03:38,160
nämlich

3694
03:03:38,160 --> 03:03:40,160
mit, äh, dieser Geschichte EmberTLS

3695
03:03:40,160 --> 03:03:42,160
äh, strrr, Error.

3696
03:03:42,160 --> 03:03:44,160
Dem übergibt man nen Error-Code,

3697
03:03:44,160 --> 03:03:46,160
nen Buffer und ne Länge.

3698
03:03:46,160 --> 03:03:48,160
Und dann wandelt er diese kryptische,

3699
03:03:48,160 --> 03:03:50,160
kryptische Error-Fehlermeldung

3700
03:03:50,160 --> 03:03:52,160
um in

3701
03:03:52,160 --> 03:03:54,160
eine lesbare Fehlermeldung.

3702
03:03:54,160 --> 03:03:56,160
Was wir dazu noch machen müssen, ist allerdings, ähm,

3703
03:03:56,160 --> 03:03:58,160
EmberTLS Error

3704
03:03:58,160 --> 03:04:00,160
einbinden.

3705
03:04:00,160 --> 03:04:02,160
Und dann sollte es eigentlich funktionieren. Ja.

3706
03:04:02,160 --> 03:04:04,160
Sehr gut. Exzellent!

3707
03:04:04,160 --> 03:04:06,160
So.

3708
03:04:06,160 --> 03:04:08,160
Und jetzt haben wir ne schöne Fehlermeldung.

3709
03:04:08,160 --> 03:04:10,160
Und er, der, er schreit hier aus

3710
03:04:10,160 --> 03:04:12,160
auch fett in rot,

3711
03:04:12,160 --> 03:04:14,160
wenn das

3712
03:04:14,160 --> 03:04:16,160
nicht funktioniert. Ja, und deswegen

3713
03:04:16,160 --> 03:04:18,160
müssen wir danach auch sagen, ey,

3714
03:04:18,160 --> 03:04:20,160
wenn wir keinen SSL-Setup machen konnten,

3715
03:04:20,160 --> 03:04:22,160
dann, äh, hier raus aus der Funktion.

3716
03:04:22,160 --> 03:04:24,160
Weil da können wir nicht weitermachen, ne.

3717
03:04:24,160 --> 03:04:26,160
Ist klar, wir können ja keine SSL-Verbindung aufbauen,

3718
03:04:26,160 --> 03:04:28,160
wenn es am Anfang schon gescheitert ist.

3719
03:04:28,160 --> 03:04:30,160
Und danach kommt er dann wieder hier raus

3720
03:04:30,160 --> 03:04:32,160
und macht nen Free. Das ist wichtig, sonst, sonst

3721
03:04:32,160 --> 03:04:34,160
in your face memory leak.

3722
03:04:34,160 --> 03:04:36,160
Ich glaube, ich probiere das nachher mal mit dem Shared Pointer.

3723
03:04:36,160 --> 03:04:38,160
Äh, ob das wirklich funktioniert.

3724
03:04:38,160 --> 03:04:40,160
Wie gesagt, ich glaube, das funktioniert nicht.

3725
03:04:40,160 --> 03:04:42,160
Ich bin, naja, Flo96,

3726
03:04:42,160 --> 03:04:44,160
wenn du heute den Stream mitgekriegt hast,

3727
03:04:44,160 --> 03:04:46,160
ich bin definitiv kein C++-Fanboy.

3728
03:04:46,160 --> 03:04:51,390
Also ich bin das letzte, äh,

3729
03:04:51,390 --> 03:04:53,390
wirklich das allerletzte, was ich wäre,

3730
03:04:53,390 --> 03:04:55,390
ist C++-Fanboy.

3731
03:04:55,390 --> 03:04:57,390
Es gibt halt keine andere Möglichkeit.

3732
03:04:57,390 --> 03:04:59,390
Wie willst du denn den Kram sonst programmieren,

3733
03:04:59,390 --> 03:05:01,390
wenn nicht mit C++?

3734
03:05:01,390 --> 03:05:03,390
So, also jetzt haben wir hier den, äh,

3735
03:05:03,390 --> 03:05:05,390
SSL-Setup gemacht.

3736
03:05:05,390 --> 03:05:07,390
Wir müssen erst grad von der Arbeit kommen.

3737
03:05:07,390 --> 03:05:09,390
Ich hab heute wieder übelst geflamed über C++.

3738
03:05:09,390 --> 03:05:11,390
So.

3739
03:05:11,390 --> 03:05:13,390
Jetzt kommt das eigentlich Interessante.

3740
03:05:13,390 --> 03:05:15,390
So, jetzt machen wir nämlich den

3741
03:05:15,390 --> 03:05:17,390
SSL-Handshake.

3742
03:05:17,390 --> 03:05:19,390
Also sprich, äh, jetzt machen wir

3743
03:05:19,390 --> 03:05:21,390
Verbindungsaufbau mit dem Client hier.

3744
03:05:21,390 --> 03:05:23,390
Also dass da nicht mehr dieser Fehler kommt, sondern es war wirklich

3745
03:05:23,390 --> 03:05:25,390
SSL-Verbindungsaufbau.

3746
03:05:25,390 --> 03:05:27,390
Äh, der

3747
03:05:27,390 --> 03:05:29,390
ESP32 kann Lua,

3748
03:05:29,390 --> 03:05:31,390
ähm,

3749
03:05:31,390 --> 03:05:35,280
allerdings gibt's dafür so wenig.

3750
03:05:35,280 --> 03:05:37,280
ESP32 kannst du MicroPython

3751
03:05:37,280 --> 03:05:39,280
machen, Lua, aber

3752
03:05:39,280 --> 03:05:41,280
hauptsächlich C++.

3753
03:05:41,280 --> 03:05:43,280
Auch die ganzen offiziellen Libraries und Sachen sind C++.

3754
03:05:43,280 --> 03:05:45,280
Und auch, äh, die ganzen,

3755
03:05:45,280 --> 03:05:47,280
die, die, die Arduino-Geschichten sind meistens auch alles C++.

3756
03:05:47,280 --> 03:05:49,280
Es gibt ne

3757
03:05:49,280 --> 03:05:51,280
experimentelle Rust-Implementierung und

3758
03:05:51,280 --> 03:05:53,280
es gibt so ne

3759
03:05:53,280 --> 03:05:55,280
low

3760
03:05:55,280 --> 03:05:59,230
level dot net

3761
03:05:59,230 --> 03:06:01,230
Geschichte,

3762
03:06:01,230 --> 03:06:03,230
wo's aber halt auch keine Libraries für gibt. Also es lohnt sich

3763
03:06:03,230 --> 03:06:05,230
eigentlich nicht. Nee, Lua macht

3764
03:06:05,230 --> 03:06:07,230
auch keinen Spaß. Außerdem, wie gesagt, äh,

3765
03:06:07,230 --> 03:06:09,230
ich glaube, mit Lua hast du das Problem, dass

3766
03:06:09,230 --> 03:06:14,140
du auch viele Sachen nicht verwenden kannst.

3767
03:06:14,140 --> 03:06:16,140
Also, ähm, jetzt machen wir den SSL-Handshake.

3768
03:06:16,140 --> 03:06:18,140
Dazu müssen wir vorher noch ein paar

3769
03:06:18,140 --> 03:06:20,140
Sachen machen. Und zwar, ich copy-paste

3770
03:06:20,140 --> 03:06:22,140
mir das, dann erklär ich, was es macht, weil

3771
03:06:22,140 --> 03:06:24,140
sonst verschreib ich mich da garantiert bei.

3772
03:06:24,140 --> 03:06:26,140
Also, man muss einmal das hier setzen.

3773
03:06:26,140 --> 03:06:29,460
Und zwar,

3774
03:06:29,460 --> 03:06:31,460
wenn die Verbindung, wieso C++? Ja,

3775
03:06:31,460 --> 03:06:33,460
weil das die einzige Sprache ist, wo man das gescheit

3776
03:06:33,460 --> 03:06:35,460
machen kann hier für den Controller.

3777
03:06:35,460 --> 03:06:37,460
Also ESP32 musst du quasi

3778
03:06:37,460 --> 03:06:39,460
fast schon

3779
03:06:39,460 --> 03:06:41,460
in C, C++ programmieren.

3780
03:06:41,460 --> 03:06:43,460
Die Alternativen haben auch ihre Probleme, aber

3781
03:06:43,460 --> 03:06:45,460
das, also ich mach's nicht umsonst

3782
03:06:45,460 --> 03:06:47,460
freiwillig in C++, da kannst du

3783
03:06:47,460 --> 03:06:49,460
von ausgehen. Ich mach nicht

3784
03:06:49,460 --> 03:06:51,460
freiwillig in C++.

3785
03:06:51,460 --> 03:06:53,460
So, ähm,

3786
03:06:53,460 --> 03:06:55,460
so, was das hier jetzt macht, ist

3787
03:06:55,460 --> 03:06:57,460
folgendes. Wir setzen einen Timeout.

3788
03:06:57,460 --> 03:06:59,460
Also sprich, nach 10 Sekunden,

3789
03:06:59,460 --> 03:07:01,460
wo die Verbindung

3790
03:07:01,460 --> 03:07:03,460
nichts übertragen hat,

3791
03:07:03,460 --> 03:07:05,460
ah, WLAN ist abgekackt, okay.

3792
03:07:05,460 --> 03:07:07,460
Nach 10 Sekunden, wo die Verbindung nichts

3793
03:07:07,460 --> 03:07:09,460
übertragen hat, bricht er ab. Das ist insofern

3794
03:07:09,460 --> 03:07:11,460
ganz wichtig, weil wir haben eh nicht viel RAM.

3795
03:07:11,460 --> 03:07:13,460
Und wenn ich irgendwann nach 5

3796
03:07:13,460 --> 03:07:15,460
Verbindungen hängen hab, kann ich keine 6.

3797
03:07:15,460 --> 03:07:17,460
Verbindung aufbauen, weil ich keinen RAM mehr hab.

3798
03:07:17,460 --> 03:07:19,460
Und die Verbindungen machen gar nichts. Also, wir sagen 10 Sekunden,

3799
03:07:19,460 --> 03:07:21,460
nach 10 Sekunden ist Schluss.

3800
03:07:21,460 --> 03:07:23,460
Nach spätesten

3801
03:07:23,460 --> 03:07:25,460
10 Sekunden ist Schluss. Und damit das Ganze

3802
03:07:25,460 --> 03:07:27,460
funktioniert, müssen wir eben sagen, okay,

3803
03:07:27,460 --> 03:07:29,460
wir wollen nicht einfach nur

3804
03:07:29,460 --> 03:07:31,460
senden, empfangen, wir wollen mit Timeout.

3805
03:07:31,460 --> 03:07:33,460
Das ist alles, was das hier macht.

3806
03:07:33,460 --> 03:07:35,460
Also sprich, das setzt einen Timeout.

3807
03:07:35,460 --> 03:07:37,460
Gut, ähm, und jetzt kommt, jetzt kommt

3808
03:07:37,460 --> 03:07:39,460
der eigentliche Knackpunkt, jetzt machen wir einen SSL

3809
03:07:39,460 --> 03:07:41,460
Handshake. Ähm,

3810
03:07:41,460 --> 03:07:43,460
da überleg ich nur grad, wie man das, äh, am besten

3811
03:07:43,460 --> 03:07:45,460
machen.

3812
03:07:45,460 --> 03:07:47,460
Ambit, TLS, Hand,

3813
03:07:47,460 --> 03:07:49,460
Handshake,

3814
03:07:49,460 --> 03:07:53,470
SSL.

3815
03:07:53,470 --> 03:07:55,470
Und dann ist wieder das gleiche, wenn das

3816
03:07:55,470 --> 03:07:57,470
ungleich 0 ist, dann hat's funktioniert.

3817
03:07:57,470 --> 03:07:59,470
So.

3818
03:07:59,470 --> 03:08:01,470
So ist die einfache Variante, also sprich,

3819
03:08:01,470 --> 03:08:03,470
man guckt, okay, man macht einen

3820
03:08:03,470 --> 03:08:05,470
SSL Handshake, guckt, ob der ungleich 0

3821
03:08:05,470 --> 03:08:07,470
ist und dann ist gut. Äh,

3822
03:08:07,470 --> 03:08:09,470
ob der 0 ist, dann ist gut.

3823
03:08:09,470 --> 03:08:11,470
Wenn der ungleich 0 ist, dann gibt's einen Fehler.

3824
03:08:11,470 --> 03:08:13,470
Die Sache ist jetzt nur die,

3825
03:08:13,470 --> 03:08:15,470
dass, ähm,

3826
03:08:15,470 --> 03:08:17,470
das

3827
03:08:17,470 --> 03:08:19,470
leider ein bisschen komplizierter ist. Man kann sich das

3828
03:08:19,470 --> 03:08:21,470
hier auch im,

3829
03:08:21,470 --> 03:08:23,470
im offiziellen Example mal angucken.

3830
03:08:23,470 --> 03:08:27,040
Wenn man sich hier den Handshake anguckt,

3831
03:08:27,040 --> 03:08:29,040
die machen das in der Schleife.

3832
03:08:29,040 --> 03:08:31,040
Und zwar, es könnte ja sein,

3833
03:08:31,040 --> 03:08:33,040
dass der Client, wenn ich das

3834
03:08:33,040 --> 03:08:35,040
hier aufrufe, SSL Handshake,

3835
03:08:35,040 --> 03:08:37,040
dass der Client noch gar nicht genug Informationen

3836
03:08:37,040 --> 03:08:39,040
geschickt hat, dass ich überhaupt

3837
03:08:39,040 --> 03:08:41,040
einen SSL Handshake machen kann, ja. Also

3838
03:08:41,040 --> 03:08:43,040
stellt euch vor, mein Client ist

3839
03:08:43,040 --> 03:08:45,040
kein, äh, 8700K

3840
03:08:45,040 --> 03:08:47,040
Desktop-CPU, sondern irgendwie

3841
03:08:47,040 --> 03:08:49,040
was noch schlechteres, noch langsameres.

3842
03:08:49,040 --> 03:08:51,040
Und der hat jetzt einen Verbindungs-

3843
03:08:51,040 --> 03:08:53,040
Aufbau gemacht, aber noch gar nicht

3844
03:08:53,040 --> 03:08:55,040
genug Daten geschickt, dass ich überhaupt einen SSL

3845
03:08:55,040 --> 03:08:57,040
Handshake machen kann.

3846
03:08:57,040 --> 03:08:59,040
Dementsprechend machen die das hier in der Schleife

3847
03:08:59,040 --> 03:09:01,040
und sagen, okay, wir machen so lang

3848
03:09:01,040 --> 03:09:03,040
SSL Handshake,

3849
03:09:03,040 --> 03:09:05,040
wie ich, wie der Client

3850
03:09:05,040 --> 03:09:07,040
noch Sachen,

3851
03:09:07,040 --> 03:09:09,040
äh, zum Schrei,

3852
03:09:09,040 --> 03:09:11,040
mir Sachen schicken will oder mir Sachen,

3853
03:09:11,040 --> 03:09:13,040
oder, oder ich Sachen von ihm lesen will.

3854
03:09:13,040 --> 03:09:15,040
So. Und, äh,

3855
03:09:15,040 --> 03:09:17,040
wenn das nicht der Fall ist und trotzdem

3856
03:09:17,040 --> 03:09:19,040
Fehler, dann kacken wir ab und dann gibt's eine Fehlermeldung.

3857
03:09:19,040 --> 03:09:21,040
Also sprich, die hab, die

3858
03:09:21,040 --> 03:09:23,040
behandeln den Fall hier halt auch, dass der Client

3859
03:09:23,040 --> 03:09:25,040
lahm ist. Und das ist nicht verkehrt,

3860
03:09:25,040 --> 03:09:27,040
das sollten wir auch machen.

3861
03:09:27,040 --> 03:09:29,040
Deswegen copy und paste ich mir das auch mal.

3862
03:09:29,040 --> 03:09:31,040
Mir haut er weniger aus dem Beispiel fast 1 zu 1

3863
03:09:31,040 --> 03:09:33,040
raus. Ähm, wir können jetzt folgendes

3864
03:09:33,040 --> 03:09:35,040
machen. Wir können sagen, okay, wir machen so lange

3865
03:09:35,040 --> 03:09:37,040
SSL Handshake,

3866
03:09:37,040 --> 03:09:39,040
so lange SSL Handshake ungleich

3867
03:09:39,040 --> 03:09:41,040
0 ist. Ungleich 0

3868
03:09:41,040 --> 03:09:43,040
heißt irgendein Fehler. Beziehungsweise

3869
03:09:43,040 --> 03:09:45,040
irgendwas, was nicht okay bedeutet.

3870
03:09:45,040 --> 03:09:47,040
0 bedeutet okay, dann können wir weitermachen. Also sprich,

3871
03:09:47,040 --> 03:09:49,040
wenn SSL Handshake okay, äh,

3872
03:09:49,040 --> 03:09:51,040
gleich 0 ist, dann mach ich weiter.

3873
03:09:51,040 --> 03:09:53,040
Also hier unten.

3874
03:09:53,040 --> 03:09:55,040
Äh, wenn es ungleich 0 ist, dann

3875
03:09:55,040 --> 03:09:57,040
guck ich nach, ob es

3876
03:09:57,040 --> 03:09:59,040
vielleicht bedeutet, der Client

3877
03:09:59,040 --> 03:10:01,040
möchte noch was schreiben, beziehungsweise

3878
03:10:01,040 --> 03:10:03,040
ich möchte dem Client noch was senden. Ne, äh,

3879
03:10:03,040 --> 03:10:05,040
umgedreht. Der Client möchte, ich möchte

3880
03:10:05,040 --> 03:10:07,040
vom Client noch was lesen oder der Client möchte mir noch

3881
03:10:07,040 --> 03:10:09,040
was senden. Wenn das der

3882
03:10:09,040 --> 03:10:11,040
Fall ist, dann mach ich einfach

3883
03:10:11,040 --> 03:10:13,040
so lange weiter, bis ich alles gelesen

3884
03:10:13,040 --> 03:10:15,040
hab und alles dem Client geschickt habe, was ich brauche,

3885
03:10:15,040 --> 03:10:17,040
dass ich nen SSL Handshake

3886
03:10:17,040 --> 03:10:19,040
machen kann. So, ist das nicht

3887
03:10:19,040 --> 03:10:21,040
der Fall, dann kack ich ab.

3888
03:10:21,040 --> 03:10:23,040
Mit nem Fehler und wir müssen mal wieder

3889
03:10:23,040 --> 03:10:25,040
die Sachen freen,

3890
03:10:25,040 --> 03:10:28,610
weil ansonsten halt

3891
03:10:28,610 --> 03:10:30,610
Memory liegt.

3892
03:10:30,610 --> 03:10:32,610
So, dann machen wir einen Return. Das heißt, wir kommen wieder

3893
03:10:32,610 --> 03:10:34,610
hier unten raus und

3894
03:10:34,610 --> 03:10:36,610
ähm, räumen auf und nehmen

3895
03:10:36,610 --> 03:10:38,610
die nächste Verbindung an und haben's beendet.

3896
03:10:38,610 --> 03:10:40,610
So, aber wir hoffen ja, dass der SSL Handshake

3897
03:10:40,610 --> 03:10:42,610
funktioniert. So.

3898
03:10:42,610 --> 03:10:44,610
Und deswegen

3899
03:10:44,610 --> 03:10:46,610
geben wir mal hier irgendwie

3900
03:10:46,610 --> 03:10:48,610
was aus. Can't trace.

3901
03:10:48,610 --> 03:10:50,610
Äh, Handshake.

3902
03:10:50,610 --> 03:10:52,610
Okay.

3903
03:10:52,610 --> 03:10:54,610
Wir wissen, wenn wir hier ankommen, hat der SSL Handshake

3904
03:10:54,610 --> 03:10:56,610
funktioniert. Dann müssen wir noch der Form

3905
03:10:56,610 --> 03:10:58,610
halber zwei Sachen machen, dass der

3906
03:10:58,610 --> 03:11:00,610
Client nicht hängen bleibt. Das ist auch recht

3907
03:11:00,610 --> 03:11:02,610
wichtig. Wir müssen sagen, okay,

3908
03:11:02,610 --> 03:11:04,610
wenn die Verbindung beendet ist, also wenn ich

3909
03:11:04,610 --> 03:11:06,610
fertig bin mit dem Client, dann sag

3910
03:11:06,610 --> 03:11:08,610
ich hier, mach mal Verbindung zu.

3911
03:11:08,610 --> 03:11:10,610
Weil ansonsten bleibt der unendlich

3912
03:11:10,610 --> 03:11:12,610
lang hier hängen.

3913
03:11:12,610 --> 03:11:14,610
Was auch nicht schön ist.

3914
03:11:14,610 --> 03:11:16,610
Und danach machen wir wieder sauber. Und jetzt uploaden

3915
03:11:16,610 --> 03:11:18,610
wir das mal und gucken, ob das scheiß funktioniert.

3916
03:11:18,610 --> 03:11:25,700
hsjohu sagt,

3917
03:11:25,700 --> 03:11:27,700
ich mache gerade freiwillig C++ und

3918
03:11:27,700 --> 03:11:29,700
OpenGL und das tracksteil

3919
03:11:29,700 --> 03:11:31,700
macht einfach nix. Das ist ganz

3920
03:11:31,700 --> 03:11:33,700
toll. Excellent. Ah, du hast dir aber auch

3921
03:11:33,700 --> 03:11:35,700
eine tolle Kombination ausgesucht.

3922
03:11:35,700 --> 03:11:43,940
So, jetzt schauen wir mal.

3923
03:11:43,940 --> 03:11:45,940
Ich schieb mal

3924
03:11:45,940 --> 03:11:47,940
meine Konsole hier rüber, dass ich was sehe.

3925
03:11:47,940 --> 03:11:49,940
So.

3926
03:11:49,940 --> 03:11:51,940
Und jetzt gucken wir mal, ob der SSL

3927
03:11:51,940 --> 03:11:55,380
Handshake funktioniert.

3928
03:11:55,380 --> 03:11:57,380
Ja. Ne. Oder?

3929
03:11:57,380 --> 03:12:12,430
Das ist schlecht.

3930
03:12:12,430 --> 03:12:14,430
Das hat nicht funktioniert. Das ist schon mal nicht gut.

3931
03:12:14,430 --> 03:12:16,430
Weil

3932
03:12:16,430 --> 03:12:18,430
jetzt weiß ich nicht, warum.

3933
03:12:18,430 --> 03:12:22,830
Ah, doch.

3934
03:12:22,830 --> 03:12:24,830
Ich glaube, das hat funktioniert.

3935
03:12:26,830 --> 03:12:28,830
Es kam bloß keine Antwort. Kann das sein?

3936
03:12:28,830 --> 03:12:30,830
Okay, das müssen wir uns jetzt genauer angucken.

3937
03:12:30,830 --> 03:12:32,830
Wir gehen jetzt mal mit

3938
03:12:32,830 --> 03:12:34,830
OpenSSL ran.

3939
03:12:34,830 --> 03:12:38,850
Boah, fuck.

3940
03:12:38,850 --> 03:12:40,850
Das weiß ich aus dem Kopf nicht.

3941
03:12:40,850 --> 03:12:42,850
OpenSSL Handshake Test.

3942
03:12:42,850 --> 03:12:44,850
Irgendwie S-Client Connect oder sowas.

3943
03:12:44,850 --> 03:12:46,850
Das weiß ich doch aus dem Kopf nicht, wie der Kram funktioniert.

3944
03:12:46,850 --> 03:12:48,850
Genau. Das Thomas Grenn-Wiki

3945
03:12:48,850 --> 03:12:50,850
weiß das bestimmt. Ja, das hier suche ich.

3946
03:12:50,850 --> 03:12:52,850
Das da suche ich.

3947
03:12:52,850 --> 03:12:54,850
Thomas Grenn-Wiki.

3948
03:12:54,850 --> 03:12:59,120
Weiß Bescheid.

3949
03:12:59,120 --> 03:13:09,540
Connected.

3950
03:13:09,540 --> 03:13:11,540
Sieht doch eigentlich ganz gut aus.

3951
03:13:11,540 --> 03:13:15,300
Ne, das sieht nicht gut aus.

3952
03:13:15,300 --> 03:13:26,220
Das hat nicht funktioniert.

3953
03:13:26,220 --> 03:13:28,220
Okay.

3954
03:13:28,220 --> 03:13:30,220
Warum nicht?

3955
03:13:30,220 --> 03:13:34,560
Es hat aber auch keinen Fehler gegeben hier unten.

3956
03:13:34,560 --> 03:13:36,560
Es gibt auch keinen Fehler.

3957
03:13:36,560 --> 03:13:38,560
Es gibt auch keinen Fehler.

3958
03:13:38,560 --> 03:13:43,090
Hä?

3959
03:13:43,090 --> 03:13:45,090
Okay.

3960
03:13:45,090 --> 03:13:47,090
Es gibt keinen Fehler.

3961
03:13:47,090 --> 03:13:49,090
Habe ich irgendwas vergessen?

3962
03:13:49,090 --> 03:13:51,090
Handle Connection.

3963
03:13:51,090 --> 03:13:59,200
FD. PS-Client.

3964
03:13:59,200 --> 03:14:01,200
Es gibt keinen Fehler.

3965
03:14:01,200 --> 03:14:03,200
Aber wo hängt der denn jetzt?

3966
03:14:03,200 --> 03:14:08,110
Der gibt irgendwas nicht frei.

3967
03:14:08,110 --> 03:14:10,110
Okay, irgendwas habe ich verkehrt gemacht.

3968
03:14:10,110 --> 03:14:12,110
Kommst du aus der inneren Wildschleife raus?

3969
03:14:12,110 --> 03:14:14,110
Ja, das...

3970
03:14:14,110 --> 03:14:16,110
Die Vermutung habe ich auch, dass ich irgendwo drin hänge.

3971
03:14:16,110 --> 03:14:18,110
Wir machen also mal gutes altes

3972
03:14:18,110 --> 03:14:20,110
Printf-Debugging.

3973
03:14:22,110 --> 03:14:24,110
Na gut, das hier muss funktioniert haben,

3974
03:14:24,110 --> 03:14:26,110
wobei, ich mache hier auch mal was dahinter.

3975
03:14:26,110 --> 03:14:28,110
Ähm...

3976
03:14:28,110 --> 03:14:32,640
Okay.

3977
03:14:32,640 --> 03:14:34,640
Upload.

3978
03:14:34,640 --> 03:14:38,780
Bam.

3979
03:14:38,780 --> 03:14:40,780
Kannst du auf deinem Controller nachsehen,

3980
03:14:40,780 --> 03:14:42,780
ob der überhaupt...

3981
03:14:42,780 --> 03:14:44,780
Naja, Verbindung geht ja hier oben, siehst du ja.

3982
03:14:44,780 --> 03:14:46,780
Verbindung geht auf 4433.

3983
03:14:46,780 --> 03:14:48,780
Also die Verbindung klappt,

3984
03:14:48,780 --> 03:14:50,780
aber der SSL-Handshake klappt nicht.

3985
03:14:50,780 --> 03:15:05,550
What?

3986
03:15:05,550 --> 03:15:10,020
Der geht da gar nicht rein.

3987
03:15:10,020 --> 03:15:12,020
Ach.

3988
03:15:12,020 --> 03:15:14,020
Oh Leute, ich weiß... Ne, Moment.

3989
03:15:14,020 --> 03:15:16,020
Wa...

3990
03:15:16,020 --> 03:15:21,890
What?

3991
03:15:21,890 --> 03:15:23,890
What the hell?

3992
03:15:23,890 --> 03:15:25,890
Warum geht der da nicht rein?

3993
03:15:25,890 --> 03:15:27,890
Der muss doch hier reingehen in die Funktion wenigstens.

3994
03:15:27,890 --> 03:15:29,890
Hä?

3995
03:15:29,890 --> 03:15:31,890
Moment, Moment, Moment.

3996
03:15:31,890 --> 03:15:38,370
Run. Hä?

3997
03:15:38,370 --> 03:15:40,370
Ne, ne, ne, ne.

3998
03:15:40,370 --> 03:15:42,370
Der macht gar nichts.

3999
03:15:42,370 --> 03:15:44,370
Der geht da gar nicht rein.

4000
03:15:44,370 --> 03:15:46,370
Warum geht der da nicht rein?

4001
03:15:46,370 --> 03:15:48,370
Was hat der für Schmerzen?

4002
03:15:48,370 --> 03:15:50,370
Neun Monate, dankeschön.

4003
03:15:50,370 --> 03:15:52,370
Big Brain.

4004
03:15:52,370 --> 03:15:54,370
Big Brainiger.

4005
03:15:54,370 --> 03:15:56,370
Huge.

4006
03:15:56,370 --> 03:15:58,370
Face.

4007
03:15:58,370 --> 03:16:06,640
Head.

4008
03:16:06,640 --> 03:16:08,640
Was auch immer.

4009
03:16:08,640 --> 03:16:10,640
Warum geht der da nicht rein?

4010
03:16:10,640 --> 03:16:15,420
What the fuck? Warum?

4011
03:16:15,420 --> 03:16:18,990
Der geht da überhaupt nicht rein.

4012
03:16:18,990 --> 03:16:20,990
Hä?

4013
03:16:20,990 --> 03:16:22,990
Ach, Visual Studio Code, please nicht abkacken jetzt.

4014
03:16:22,990 --> 03:16:27,710
Hab ich irgendwas vergessen?

4015
03:16:27,710 --> 03:16:29,710
Task Run.

4016
03:16:29,710 --> 03:16:31,710
Hm.

4017
03:16:31,710 --> 03:16:36,940
Startet der den Task überhaupt?

4018
03:16:36,940 --> 03:16:38,940
Kannst du mir das Programmierbein bringen?

4019
03:16:38,940 --> 03:16:40,940
Kannst du mir das Programmierbein bringen?

4020
03:16:40,940 --> 03:16:42,940
350 Euro die Stunde.

4021
03:16:42,940 --> 03:16:49,140
Nee, aber du kannst natürlich öfters mal hier im Stream vorbeigucken.

4022
03:16:49,140 --> 03:16:51,140
Nee, aber du kannst natürlich öfters mal hier im Stream vorbeigucken.

4023
03:16:51,140 --> 03:16:53,140
Vielleicht lernst du das ein oder andere.

4024
03:16:53,140 --> 03:16:55,140
Das kannst du natürlich ruhig machen.

4025
03:16:55,140 --> 03:16:57,140
Und wenn du Fragen hast, kannst du mich auch fragen.

4026
03:16:57,140 --> 03:16:59,140
Aber, also was im Ärmel geschüttelt ist, Programmierbein bringen wird ein bisschen schwierig.

4027
03:16:59,140 --> 03:17:02,580
Aber, also was im Ärmel geschüttelt ist, Programmierbein bringen wird ein bisschen schwierig.

4028
03:17:02,580 --> 03:17:04,580
What the fuck?

4029
03:17:04,580 --> 03:17:10,380
Will der mich verar... Was ist das?

4030
03:17:10,380 --> 03:17:15,620
Hä?

4031
03:17:15,620 --> 03:17:17,620
Okay, Moment.

4032
03:17:17,620 --> 03:17:21,120
Also jetzt blick ich den mal durch.

4033
03:17:21,120 --> 03:17:26,800
Also jetzt blick ich den mal durch.

4034
03:17:26,800 --> 03:17:28,800
Was ist eine Schleife?

4035
03:17:28,800 --> 03:17:30,800
Ich wollte jetzt einen doofen Spruch mit If-Schleife machen.

4036
03:17:30,800 --> 03:17:32,800
Ich wollte jetzt einen doofen Spruch mit If-Schleife machen.

4037
03:17:32,800 --> 03:17:34,800
Ihr wisst ja, If-Schleife ist so meine

4038
03:17:34,800 --> 03:17:36,800
Ihr wisst ja, If-Schleife ist so meine

4039
03:17:36,800 --> 03:17:38,800
beliebteste Sache, wo ich mich dann immer am Anfang

4040
03:17:38,800 --> 03:17:40,800
ein bisschen drüber beschweren kann bei den meisten Leuten.

4041
03:17:40,800 --> 03:17:42,800
ein bisschen drüber beschweren kann bei den meisten Leuten.

4042
03:17:42,800 --> 03:17:46,880
Ähm.

4043
03:17:46,880 --> 03:17:48,880
Unser Azubi kam ja auch letzter mit If-Schleife.

4044
03:17:48,880 --> 03:17:50,880
Okay, das funktioniert.

4045
03:17:50,880 --> 03:17:55,980
Hä?

4046
03:17:55,980 --> 03:17:57,980
Moment, das ging doch eben noch nicht.

4047
03:17:57,980 --> 03:17:59,980
Das gibt die aktuelle Zeile aus,

4048
03:17:59,980 --> 03:18:01,980
das gibt die aktuelle Zeile aus, wo er was macht.

4049
03:18:01,980 --> 03:18:06,060
Das habe ich mir selbst zusammengestrickt.

4050
03:18:06,060 --> 03:18:08,060
Jetzt funktioniert es irgendwie, ne?

4051
03:18:08,060 --> 03:18:10,060
So, 108.

4052
03:18:10,060 --> 03:18:12,060
108

4053
03:18:12,060 --> 03:18:14,060
108 ist das da.

4054
03:18:14,060 --> 03:18:16,060
Das funktioniert.

4055
03:18:16,060 --> 03:18:18,060
Accept.

4056
03:18:18,060 --> 03:18:20,060
Aber das Verbindung annehmen

4057
03:18:20,060 --> 03:18:26,700
Aber das Verbindung annehmen geht nicht.

4058
03:18:26,700 --> 03:18:28,700
Das Verbindung annehmen geht nicht.

4059
03:18:28,700 --> 03:18:30,700
Das Verbindung annehmen geht nicht.

4060
03:18:30,700 --> 03:18:35,940
Guck mal, 108.

4061
03:18:35,940 --> 03:18:37,940
Hä? What?

4062
03:18:37,940 --> 03:18:39,940
Hä? Warum geht das nicht?

4063
03:18:39,940 --> 03:18:41,940
Warum geht das nicht?

4064
03:18:41,940 --> 03:18:48,900
Okay, ich habe keine Ahnung, warum das nicht funktioniert.

4065
03:18:48,900 --> 03:18:54,900
Ich meine, die Schleife läuft ja offensichtlich.

4066
03:18:54,900 --> 03:18:56,900
Ich meine, die Schleife läuft ja offensichtlich.

4067
03:18:56,900 --> 03:19:00,340
Kommst du aus Hessen? Ja, richtig, komme ich.

4068
03:19:00,340 --> 03:19:02,340
Ähm.

4069
03:19:02,340 --> 03:19:04,340
Ich meine, die Schleife läuft ja offensichtlich.

4070
03:19:04,340 --> 03:19:06,340
Und die hängt hier auch, weil

4071
03:19:06,340 --> 03:19:08,340
ansonsten würde die ja nicht immer wieder, wenn ich eine Verbindung aufbaue,

4072
03:19:08,340 --> 03:19:10,340
aber die Accepted nicht.

4073
03:19:10,340 --> 03:19:12,340
aber die Accepted nicht.

4074
03:19:12,340 --> 03:19:14,340
Okay, ähm.

4075
03:19:14,340 --> 03:19:16,340
Ähm, anders.

4076
03:19:16,340 --> 03:19:18,340
Oh, ich glaube, ich weiß, woran es liegt.

4077
03:19:18,340 --> 03:19:20,340
Oh, ich glaube, ich weiß, woran es liegt.

4078
03:19:20,340 --> 03:19:22,340
Ich glaube, ich weiß, woran es liegt.

4079
03:19:22,340 --> 03:19:24,340
Ich bin total bescheuert.

4080
03:19:24,340 --> 03:19:26,340
Leute, seht ihr es?

4081
03:19:26,340 --> 03:19:28,340
Richtig, richtig hängengeblieben.

4082
03:19:28,340 --> 03:19:42,140
Guck mal.

4083
03:19:42,140 --> 03:19:44,140
Ich muss gucken, ob das auch 0 ist.

4084
03:19:44,140 --> 03:19:46,140
Ansonsten ist 0 ja false.

4085
03:19:46,140 --> 03:19:48,140
Und false heißt, ähm.

4086
03:19:48,140 --> 03:19:50,140
heißt, ähm.

4087
03:19:50,140 --> 03:19:53,840
Alt-Elz.

4088
03:19:53,840 --> 03:19:55,840
Pass mal auf, jetzt funktioniert es.

4089
03:19:55,840 --> 03:20:06,700
Pass mal auf, jetzt funktioniert es.

4090
03:20:06,700 --> 03:20:08,700
Was zum Geier ist MISRA?

4091
03:20:08,700 --> 03:20:10,700
Oh, ich habe gerade nachgeguckt.

4092
03:20:10,700 --> 03:20:12,700
Motor Industry Software Reliability Association.

4093
03:20:12,700 --> 03:20:14,700
Motor Industry Software Reliability Association.

4094
03:20:14,700 --> 03:20:16,700
Okay, Flo96.

4095
03:20:16,700 --> 03:20:18,700
Was sagt MISRA dazu?

4096
03:20:18,700 --> 03:20:20,700
Erhelle uns.

4097
03:20:20,700 --> 03:20:22,700
Außer Hände waschen, wahrscheinlich.

4098
03:20:22,700 --> 03:20:24,700
Das sagen gerade alle.

4099
03:20:24,700 --> 03:20:26,700
So, pass mal auf, jetzt geht es.

4100
03:20:26,700 --> 03:20:28,700
Easy.

4101
03:20:28,700 --> 03:20:33,230
Jetzt funktioniert es.

4102
03:20:33,230 --> 03:20:35,230
Also, was der jetzt sagt, ist, mein Zertifikat ist falsch.

4103
03:20:35,230 --> 03:20:37,230
Das ist aber in Ordnung.

4104
03:20:37,230 --> 03:20:39,230
Mein Zertifikat ist ja auch falsch.

4105
03:20:39,230 --> 03:20:41,230
Guck, SSL-Handshake, bam.

4106
03:20:41,230 --> 03:20:43,230
Funktioniert.

4107
03:20:43,230 --> 03:20:45,230
Hier haben wir übrigens mal ein tolles Zertifikat.

4108
03:20:45,230 --> 03:20:47,230
Und zwar, ähm.

4109
03:20:47,230 --> 03:20:49,230
Für KEKW ausgestellt.

4110
03:20:49,230 --> 03:20:51,230
Von der CA 0W.

4111
03:20:51,230 --> 03:20:53,230
Irgendwo steht da 0W drin.

4112
03:20:53,230 --> 03:20:55,230
Also, hier mein Zertifikat.

4113
03:20:55,230 --> 03:20:57,230
SSL-Shader funktioniert.

4114
03:20:57,230 --> 03:21:06,690
Sehr schön.

4115
03:21:06,690 --> 03:21:08,690
Ja, aktuell ist es wirklich so.

4116
03:21:08,690 --> 03:21:10,690
If Error Accept, was ja keinen Sinn ergibt.

4117
03:21:10,690 --> 03:21:12,690
Kein Wunder.

4118
03:21:12,690 --> 03:21:14,690
Ich finde es aber gut, dass das ist.

4119
03:21:14,690 --> 03:21:16,690
Dass sie das so gut programmiert haben,

4120
03:21:16,690 --> 03:21:18,690
dass es nicht abkackt.

4121
03:21:18,690 --> 03:21:20,690
Weil ich meine, ich habe hier was total ungültiges

4122
03:21:20,690 --> 03:21:22,690
übergeben, im Endeffekt.

4123
03:21:22,690 --> 03:21:24,690
Okay, also weiß ich, woran es liegt.

4124
03:21:24,690 --> 03:21:26,690
Jetzt kann ich mein ganzes Trace wieder rausnehmen.

4125
03:21:26,690 --> 03:21:28,690
Excellent.

4126
03:21:28,690 --> 03:21:30,690
Übrigens, diese Trace-Funktion, die ist

4127
03:21:30,690 --> 03:21:32,690
so eklig

4128
03:21:32,690 --> 03:21:34,690
programmiert, die will ich euch nicht zeigen.

4129
03:21:34,690 --> 03:21:39,150
Aber es ist schon cool, dass das die aktuelle

4130
03:21:39,150 --> 03:21:41,150
Zeile anzeigen kann.

4131
03:21:41,150 --> 03:21:43,150
Okay, jetzt

4132
03:21:43,150 --> 03:21:45,150
erklärt uns der Flo96piz hier,

4133
03:21:45,150 --> 03:21:47,150
wie es richtig geht.

4134
03:21:47,150 --> 03:21:49,150
Und zwar, bei Misra muss bei einer If-Schleife

4135
03:21:49,150 --> 03:21:53,360
Okay, ich gehe davon aus,

4136
03:21:53,360 --> 03:21:55,360
das ist Absicht.

4137
03:21:55,360 --> 03:21:57,360
Zuerst die Konstante, dann die Variable kommen.

4138
03:21:57,360 --> 03:21:59,360
Beispielsweise

4139
03:21:59,360 --> 03:22:01,360
if true gleich gleich x

4140
03:22:01,360 --> 03:22:03,360
und nicht

4141
03:22:03,360 --> 03:22:05,360
if x gleich gleich

4142
03:22:05,360 --> 03:22:13,470
Das ist eine gute Idee.

4143
03:22:13,470 --> 03:22:15,470
Das ist eigentlich gar nicht so verkehrt.

4144
03:22:15,470 --> 03:22:19,230
Das finde ich nicht schlecht.

4145
03:22:19,230 --> 03:22:21,230
Wäre ich im Leben wahrscheinlich

4146
03:22:21,230 --> 03:22:23,230
nicht machen, so wie ich mich kenne.

4147
03:22:23,230 --> 03:22:25,230
Aber finde ich nicht schlecht.

4148
03:22:25,230 --> 03:22:27,230
Ich habe ein Video von C-Sharp 9 gesehen.

4149
03:22:27,230 --> 03:22:29,230
Ich habe heute Morgen eine Viertelstunde

4150
03:22:29,230 --> 03:22:31,230
von so einem 2-Stunden-Video geguckt,

4151
03:22:31,230 --> 03:22:33,230
aber nicht lange.

4152
03:22:33,230 --> 03:22:35,230
Wenn ihr wollt, wenn es mal wieder danach ist,

4153
03:22:35,230 --> 03:22:37,230
wir können mal

4154
03:22:37,230 --> 03:22:39,230
uns das angucken.

4155
03:22:39,230 --> 03:22:41,230
Hast du ein gutes Video dazu?

4156
03:22:41,230 --> 03:22:43,230
Ich habe nur so ein Webcast gesehen,

4157
03:22:43,230 --> 03:22:45,230
wo sie 2 Stunden rumgelabert haben

4158
03:22:45,230 --> 03:22:47,230
und ich keinen Bock habe, weiter zu gucken.

4159
03:22:47,230 --> 03:22:49,230
Stream-Ideen.

4160
03:22:49,230 --> 03:22:51,230
C-Sharp 9 Features.

4161
03:22:51,230 --> 03:22:55,120
So ein Blogpost.

4162
03:22:55,120 --> 03:22:57,120
Auch gut.

4163
03:22:57,120 --> 03:22:59,120
Also ich muss sagen, Flo96,

4164
03:22:59,120 --> 03:23:01,120
die Idee finde ich gut.

4165
03:23:01,120 --> 03:23:03,120
Ich werde es wahrscheinlich im Leben nicht machen,

4166
03:23:03,120 --> 03:23:05,120
aber klingt sinnvoll.

4167
03:23:05,120 --> 03:23:07,120
Ja.

4168
03:23:07,120 --> 03:23:09,120
Weil dann

4169
03:23:09,120 --> 03:23:11,120
musst du nämlich von Anfang an überlegen,

4170
03:23:11,120 --> 03:23:13,120
was willst du eigentlich mit was vergleichen.

4171
03:23:13,120 --> 03:23:15,120
Wenn du schreibst,

4172
03:23:15,120 --> 03:23:17,120
dann müsstest du nämlich von Anfang an überlegen,

4173
03:23:17,120 --> 03:23:19,120
okay, was will ich jetzt nachgucken.

4174
03:23:19,120 --> 03:23:21,120
Null gleich gleich.

4175
03:23:21,120 --> 03:23:23,120
Das ist eigentlich nicht verkehrt.

4176
03:23:23,120 --> 03:23:25,120
Und zwar Ziel der MISRA-Regeln

4177
03:23:25,120 --> 03:23:27,120
die Programme so sicher zu erstellen,

4178
03:23:27,120 --> 03:23:29,120
dass sie auch in sicherheitskritischen Anwendungen zufällig laufen.

4179
03:23:29,120 --> 03:23:31,120
Dazu gibt es MISRA-C.

4180
03:23:31,120 --> 03:23:33,120
Vor allem fehlen Sprachkonstrukten,

4181
03:23:33,120 --> 03:23:35,120
die im C-Standard unklar spezifiziert sind.

4182
03:23:35,120 --> 03:23:37,120
Zum Glück nicht im C++-Standard,

4183
03:23:37,120 --> 03:23:39,120
weil

4184
03:23:39,120 --> 03:23:41,120
da könntest du es umgedreht machen.

4185
03:23:41,120 --> 03:23:43,120
Was ist da klar?

4186
03:23:43,120 --> 03:23:45,120
Sodass der Hersteller des Compilers

4187
03:23:45,120 --> 03:23:47,120
eine eigene Interpretation wählen muss.

4188
03:23:47,120 --> 03:23:49,120
Eigentlich gut.

4189
03:23:49,120 --> 03:24:00,590
Gefällt mir.

4190
03:24:00,590 --> 03:24:02,590
Und ich finde es auch in dem Fall gar nicht so blöd.

4191
03:24:02,590 --> 03:24:04,590
Normalerweise sagt man ja immer so,

4192
03:24:04,590 --> 03:24:06,590
ja hier gleich gleich true

4193
03:24:06,590 --> 03:24:08,590
und sowas.

4194
03:24:08,590 --> 03:24:10,590
Oder gleich gleich false, sowas schreibt man ja nicht.

4195
03:24:10,590 --> 03:24:12,590
Aber ich muss sagen,

4196
03:24:12,590 --> 03:24:14,590
in dem Fall finde ich es gar nicht mal so doof,

4197
03:24:14,590 --> 03:24:16,590
wenn halt in dem Fall

4198
03:24:16,590 --> 03:24:18,590
der Returncode eben nicht ganz klar

4199
03:24:18,590 --> 03:24:20,590
true false ist,

4200
03:24:20,590 --> 03:24:22,590
sondern ein int.

4201
03:24:22,590 --> 03:24:24,590
Und dann ergibt das

4202
03:24:24,590 --> 03:24:26,590
tatsächlich Sinn.

4203
03:24:26,590 --> 03:24:28,590
Na klar, weil ich meine,

4204
03:24:28,590 --> 03:24:30,590
wenn die Funktion schon gleich true false zurückliefert,

4205
03:24:30,590 --> 03:24:32,590
ob die jetzt funktioniert hat oder nicht,

4206
03:24:32,590 --> 03:24:34,590
dann kannst du einfach den ganzen Kram wegnehmen

4207
03:24:34,590 --> 03:24:36,590
und weg lassen.

4208
03:24:36,590 --> 03:24:42,210
Aber in dem Fall sind es ja ints.

4209
03:24:42,210 --> 03:24:44,210
Ja, ist eine gute Idee.

4210
03:24:44,210 --> 03:24:46,210
Das finde ich nicht verkehrt.

4211
03:24:46,210 --> 03:24:50,860
So, aber mal unabhängig davon.

4212
03:24:50,860 --> 03:24:52,860
Es hat funktioniert.

4213
03:24:52,860 --> 03:24:56,370
Seht ihr?

4214
03:24:56,370 --> 03:24:58,370
Handshake. Bam.

4215
03:24:58,370 --> 03:25:00,370
Handshake okay.

4216
03:25:00,370 --> 03:25:02,370
Hat funktioniert.

4217
03:25:02,370 --> 03:25:04,370
Also Verbindungsaufbau klappt

4218
03:25:04,370 --> 03:25:06,370
und da kann ich meine 50 Milliarden

4219
03:25:06,370 --> 03:25:08,370
Trace Sachen auch wieder rausnehmen.

4220
03:25:08,370 --> 03:25:10,370
Alles fort.

4221
03:25:10,370 --> 03:25:12,370
So ein globales Flag irgendwie mal setzen,

4222
03:25:12,370 --> 03:25:14,370
dass der Trace das automatisch rausschmeißt.

4223
03:25:14,370 --> 03:25:17,680
So, wunderbar.

4224
03:25:17,680 --> 03:25:19,680
In meinem Main, werde ich das übrigens mal

4225
03:25:19,680 --> 03:25:21,680
ein bisschen anders machen.

4226
03:25:21,680 --> 03:25:23,680
Den Heapspace,

4227
03:25:23,680 --> 03:25:25,680
den müssen wir

4228
03:25:25,680 --> 03:25:27,680
unbedingt mal in

4229
03:25:27,680 --> 03:25:29,680
unbedingt mal in orange machen.

4230
03:25:29,680 --> 03:25:31,680
Ich bin da gerade,

4231
03:25:31,680 --> 03:25:33,680
bisschen mehr Farbe.

4232
03:25:33,680 --> 03:25:35,680
So, wie machen wir denn

4233
03:25:35,680 --> 03:25:37,680
jetzt weiter, Leute? Eigentlich habe ich übelst Hunger.

4234
03:25:37,680 --> 03:25:39,680
Wisst ihr das?

4235
03:25:39,680 --> 03:25:41,680
Mein Brain macht auch langsam nicht mehr weiter mit.

4236
03:25:41,680 --> 03:25:43,680
Aber eine Sache würde ich noch machen.

4237
03:25:43,680 --> 03:25:45,680
Nämlich, wir liefern mal

4238
03:25:45,680 --> 03:25:47,680
ein bisschen, also wir haben jetzt ja so lange rumgewurstet.

4239
03:25:47,680 --> 03:25:49,680
Ich will, ich will noch

4240
03:25:49,680 --> 03:25:51,680
eine Webseite ausliefern.

4241
03:25:51,680 --> 03:25:53,680
Ich will noch eine Webseite ausliefern.

4242
03:25:53,680 --> 03:25:55,680
Einfach nur http 200, okay.

4243
03:25:55,680 --> 03:25:57,680
Hast den Link reingeschickt.

4244
03:25:57,680 --> 03:25:59,680
Ja, na heute guck,

4245
03:25:59,680 --> 03:26:01,680
ich bin zu low brain, mir das heute anzugucken.

4246
03:26:01,680 --> 03:26:03,680
Das müssen wir in einem der nächsten

4247
03:26:03,680 --> 03:26:05,680
Streams machen, falls ich es vergessen soll.

4248
03:26:05,680 --> 03:26:07,680
Du kannst mir ruhig nochmal Bescheid sagen, wir machen das.

4249
03:26:07,680 --> 03:26:09,680
Mich interessieren nämlich die neuen Features auch.

4250
03:26:09,680 --> 03:26:11,680
Wir gucken uns die auf jeden Fall im,

4251
03:26:11,680 --> 03:26:13,680
ich schreib sie mal auf hier.

4252
03:26:13,680 --> 03:26:15,680
C++ 9 Features.

4253
03:26:15,680 --> 03:26:17,680
Gucken uns das an.

4254
03:26:17,680 --> 03:26:19,680
Und wenn nicht und du bist im Stream, du kannst mir ruhig Bescheid sagen,

4255
03:26:19,680 --> 03:26:21,680
weil dann gucken wir uns unseren nächsten Stream an,

4256
03:26:21,680 --> 03:26:23,680
wenn wir ein bisschen C sharp machen.

4257
03:26:23,680 --> 03:26:25,680
So, ihr guckt mal.

4258
03:26:25,680 --> 03:26:27,680
Habt ihr das gesehen?

4259
03:26:27,680 --> 03:26:29,680
SSL Handshake failed.

4260
03:26:29,680 --> 03:26:31,680
Das ist, wenn ich die Verbindung

4261
03:26:31,680 --> 03:26:33,680
anfange und dann abbreche.

4262
03:26:33,680 --> 03:26:35,680
Sogar die Fehlermeldungen

4263
03:26:35,680 --> 03:26:38,990
funktionieren. Excellent.

4264
03:26:38,990 --> 03:26:43,580
Excellent.

4265
03:26:43,580 --> 03:26:50,740
Musik ist ein bisschen laut jetzt.

4266
03:26:50,740 --> 03:26:54,110
So, und jetzt

4267
03:26:54,110 --> 03:26:56,110
will ich nochmal eine Webseite

4268
03:26:56,110 --> 03:26:58,110
ausliefern. Das probieren wir jetzt nochmal aus.

4269
03:26:58,110 --> 03:27:00,110
Also.

4270
03:27:00,110 --> 03:27:02,110
Also.

4271
03:27:02,110 --> 03:27:04,110
Gut, also wir haben ab hier

4272
03:27:04,110 --> 03:27:06,110
steht die SSL Verbindung.

4273
03:27:06,110 --> 03:27:08,110
Das bedeutet, ab hier kann

4274
03:27:08,110 --> 03:27:10,110
ich lesen

4275
03:27:10,110 --> 03:27:12,110
aus

4276
03:27:12,110 --> 03:27:14,110
der Verbindung.

4277
03:27:14,110 --> 03:27:16,110
So.

4278
03:27:16,110 --> 03:27:21,020
Hm.

4279
03:27:21,020 --> 03:27:23,020
Ich kann lesen aus der Verbindung.

4280
03:27:23,020 --> 03:27:25,020
Also, das heißt sowas wie

4281
03:27:25,020 --> 03:27:27,020
embed tls read

4282
03:27:27,020 --> 03:27:29,020
oder sowas. Ne.

4283
03:27:29,020 --> 03:27:31,020
SSL read.

4284
03:27:31,020 --> 03:27:33,020
So, was ich da jetzt drüber rauskriege ist ganz normales

4285
03:27:33,020 --> 03:27:35,020
http. Also da kommt jetzt ein get.

4286
03:27:35,020 --> 03:27:37,020
Also das da kriege ich im Endeffekt.

4287
03:27:37,020 --> 03:27:39,020
Ah ne, ich sehs. Moment.

4288
03:27:39,020 --> 03:27:41,020
Ich zeige euch, was ich jetzt lesen will.

4289
03:27:41,020 --> 03:27:43,020
Einlesen will.

4290
03:27:43,020 --> 03:27:45,020
Oder auch nicht.

4291
03:27:45,020 --> 03:27:47,020
Was hat der für Schmerzen? Hallo?

4292
03:27:47,020 --> 03:27:49,020
Ah jetzt. So, ich will das hier einlesen.

4293
03:27:49,020 --> 03:27:51,020
Guckt. Get. Wir machen ein get request.

4294
03:27:51,020 --> 03:27:53,020
Auf

4295
03:27:53,020 --> 03:27:55,020
slash im Endeffekt.

4296
03:27:55,020 --> 03:27:57,020
So.

4297
03:27:57,020 --> 03:27:59,020
Ich habe jetzt ja tcp Verbindung

4298
03:27:59,020 --> 03:28:01,020
aufgebaut. Darüber eine

4299
03:28:01,020 --> 03:28:04,530
verschlüsselte SSL Verbindung.

4300
03:28:04,530 --> 03:28:06,530
GitHub CLI. Was ist das denn?

4301
03:28:06,530 --> 03:28:08,530
Git.

4302
03:28:08,530 --> 03:28:10,530
Git hat eigentlich eine ziemlich gute Kommandozeile.

4303
03:28:10,530 --> 03:28:12,530
Sbarro.

4304
03:28:12,530 --> 03:28:16,860
Ja genau so ist es.

4305
03:28:16,860 --> 03:28:18,860
Und jetzt

4306
03:28:18,860 --> 03:28:20,860
kriege ich eigentlich hier nochmal diesen Text

4307
03:28:20,860 --> 03:28:22,860
drüber. Also das ganz normale

4308
03:28:22,860 --> 03:28:24,860
http request kann ich jetzt hier drüber einlesen.

4309
03:28:24,860 --> 03:28:26,860
So. Also. Machen wir mal

4310
03:28:26,860 --> 03:28:28,860
embed ssl tls read.

4311
03:28:28,860 --> 03:28:30,860
Als erstes brauchen wir hier den ssl Context.

4312
03:28:30,860 --> 03:28:32,860
Den braucht man immer für alles in embed tls.

4313
03:28:32,860 --> 03:28:34,860
Wo ist er?

4314
03:28:34,860 --> 03:28:36,860
Da ist er.

4315
03:28:36,860 --> 03:28:38,860
Und ssl.

4316
03:28:38,860 --> 03:28:40,860
So. Und wie gehts jetzt weiter?

4317
03:28:40,860 --> 03:28:42,860
Buffer

4318
03:28:42,860 --> 03:28:44,860
size t length.

4319
03:28:44,860 --> 03:28:50,220
Mal frage an die

4320
03:28:50,220 --> 03:28:52,220
C++ und C Leute. Falls hier

4321
03:28:52,220 --> 03:28:54,220
der ein oder andere da ist.

4322
03:28:54,220 --> 03:28:56,220
Was bevorzugt ihr in diesem Fall?

4323
03:28:56,220 --> 03:29:00,750
So was hier.

4324
03:29:00,750 --> 03:29:02,750
So was hier.

4325
03:29:02,750 --> 03:29:04,750
248

4326
03:29:04,750 --> 03:29:08,510
So was hier.

4327
03:29:08,510 --> 03:29:10,510
Oder. Was ja auch eine

4328
03:29:10,510 --> 03:29:12,510
Möglichkeit ist in C++.

4329
03:29:12,510 --> 03:29:20,530
Äh.

4330
03:29:20,530 --> 03:29:22,530
So. Das geht ja auch.

4331
03:29:24,530 --> 03:29:26,530
Also wie gesagt. Es gibt einmal die Möglichkeit

4332
03:29:26,530 --> 03:29:28,530
das so zu schreiben.

4333
03:29:28,530 --> 03:29:30,530
Also einmal die Möglichkeit so zu schreiben.

4334
03:29:30,530 --> 03:29:32,530
So. Oder.

4335
03:29:32,530 --> 03:29:34,530
Die Möglichkeit das

4336
03:29:34,530 --> 03:29:36,530
so zu schreiben.

4337
03:29:36,530 --> 03:29:42,980
Äh. Ich glaub size.

4338
03:29:42,980 --> 03:29:44,980
So.

4339
03:29:44,980 --> 03:29:46,980
Was ist denn davon besser?

4340
03:29:46,980 --> 03:29:50,350
Das zweite

4341
03:29:50,350 --> 03:29:52,350
sieht doch super aus.

4342
03:29:52,350 --> 03:29:54,350
Sebarro ich hör da irgendwie so ein bisschen

4343
03:29:54,350 --> 03:29:56,350
raus bei dir.

4344
03:29:56,350 --> 03:30:01,780
Das zweite hat seinen Charme

4345
03:30:01,780 --> 03:30:03,780
insofern, weil man hier die size direkt

4346
03:30:03,780 --> 03:30:05,780
abfragen kann. Aber nachdem es in der Zeit ist kann ich

4347
03:30:05,780 --> 03:30:10,820
einfach die Zahl doppelt schreiben.

4348
03:30:10,820 --> 03:30:12,820
Das C++ Gremium

4349
03:30:12,820 --> 03:30:14,820
mag mit Sicherheit das zweite.

4350
03:30:14,820 --> 03:30:16,820
Übrigens eine Sache. Wo man auch

4351
03:30:16,820 --> 03:30:18,820
wieder sieht finde ich, dass das ganze

4352
03:30:18,820 --> 03:30:20,820
was das C++ Gremium macht

4353
03:30:20,820 --> 03:30:22,820
nicht immer so hundertprozentig durchdacht ist.

4354
03:30:22,820 --> 03:30:24,820
Man kann ja mit Standard C++

4355
03:30:24,820 --> 03:30:26,820
mit Standard C Arrays

4356
03:30:26,820 --> 03:30:28,820
kann man ja sowas hier machen. Size

4357
03:30:28,820 --> 03:30:30,820
keine Ahnung.

4358
03:30:30,820 --> 03:30:32,820
2084 so.

4359
03:30:32,820 --> 03:30:34,820
Und dann kann ich sowas hier machen.

4360
03:30:34,820 --> 03:30:36,820
Sowas kann ich hier nicht machen.

4361
03:30:36,820 --> 03:30:38,820
Also ich kann quasi

4362
03:30:38,820 --> 03:30:40,820
nen. Nennen wir mal

4363
03:30:40,820 --> 03:30:42,820
in Anführungszeichen dynamischer Wert

4364
03:30:42,820 --> 03:30:44,820
kann ich quasi nen Array

4365
03:30:44,820 --> 03:30:46,820
initialisieren. Kann ich sagen. Oder. Oder.

4366
03:30:46,820 --> 03:30:48,820
Länge anlegen.

4367
03:30:48,820 --> 03:30:50,820
const exp geht dann.

4368
03:30:50,820 --> 03:30:52,820
Was? Echt?

4369
03:30:52,820 --> 03:30:54,820
Ja gut. Dann ist es ja zur Compile Zeit.

4370
03:30:54,820 --> 03:30:56,820
Dann ist es ja zur Compile Zeit.

4371
03:30:56,820 --> 03:31:00,960
Dann ist es ja zur Compile Zeit.

4372
03:31:00,960 --> 03:31:02,960
Ne ich mein ja.

4373
03:31:02,960 --> 03:31:04,960
Wenn man das einliest

4374
03:31:04,960 --> 03:31:06,960
jetzt. Also mal angenommen ich

4375
03:31:06,960 --> 03:31:08,960
Also zum Beispiel es gibt ja

4376
03:31:08,960 --> 03:31:10,960
jede Menge Parsing

4377
03:31:10,960 --> 03:31:12,960
Funktionen. Also irgendwie was.

4378
03:31:12,960 --> 03:31:14,960
Pass bla bla bla. Und das gibt dann

4379
03:31:14,960 --> 03:31:16,960
irgendwie ne Länge zurück.

4380
03:31:16,960 --> 03:31:18,960
Und

4381
03:31:18,960 --> 03:31:20,960
wenn ich jetzt das hier anlegen

4382
03:31:20,960 --> 03:31:22,960
will. Na gut das ist jetzt

4383
03:31:22,960 --> 03:31:24,960
doofes Beispiel. Weil das gibt nix zurück.

4384
03:31:24,960 --> 03:31:28,270
So und ähm.

4385
03:31:28,270 --> 03:31:30,270
Das wird funktionieren.

4386
03:31:30,270 --> 03:31:32,270
Wenn ich das mache in

4387
03:31:32,270 --> 03:31:34,270
C. Allerdings in C++

4388
03:31:34,270 --> 03:31:36,270
geht das mit dem Standard Array nicht.

4389
03:31:38,270 --> 03:31:40,270
Es ist klar das es nicht geht. Weil es sind Template Parameter.

4390
03:31:40,270 --> 03:31:42,270
Und Template Parameter müssen zur Compile

4391
03:31:42,270 --> 03:31:46,670
Zeit feststehen.

4392
03:31:46,670 --> 03:31:48,670
Ja aber wie mach ich das denn dann?

4393
03:31:48,670 --> 03:31:50,670
Also mal angenommen.

4394
03:31:50,670 --> 03:31:52,670
Also mal

4395
03:31:52,670 --> 03:31:54,670
angenommen. Ich bräuchte das jetzt.

4396
03:31:54,670 --> 03:31:56,670
Ich mein klar ich kann nen Vector machen.

4397
03:31:56,670 --> 03:31:58,670
Das ist mir auch klar. Das funktioniert.

4398
03:31:58,670 --> 03:32:00,670
Wobei das dann hier wieder schwierig wird.

4399
03:32:00,670 --> 03:32:02,670
Wie würd ich das denn mit nem Vector machen?

4400
03:32:02,670 --> 03:32:04,670
Wie würd ich das denn mit nem Vector machen?

4401
03:32:04,670 --> 03:32:06,670
Also.

4402
03:32:06,670 --> 03:32:08,670
2048. Zack.

4403
03:32:08,670 --> 03:32:12,240
Ähm.

4404
03:32:12,240 --> 03:32:14,240
Das ist nicht Standard. Also das heißt.

4405
03:32:14,240 --> 03:32:16,240
Ich hab Glück das der GCC das frisst.

4406
03:32:16,240 --> 03:32:18,240
In dem Fall hier jetzt. Oder wie?

4407
03:32:18,240 --> 03:32:22,960
Ja also wie gesagt. Mal angenommen.

4408
03:32:22,960 --> 03:32:24,960
Mal angenommen.

4409
03:32:24,960 --> 03:32:26,960
Wir machen das jetzt mal als Beispiel.

4410
03:32:26,960 --> 03:32:28,960
Also mal angenommen. Ich hab hier wirklich sowas.

4411
03:32:28,960 --> 03:32:34,450
So und das.

4412
03:32:34,450 --> 03:32:36,450
Und das ist halt ne Parsing Funktion.

4413
03:32:36,450 --> 03:32:38,450
Die gibt mir irgendwie zurück.

4414
03:32:38,450 --> 03:32:40,450
Wie viel Zeichen gelesen wurden.

4415
03:32:40,450 --> 03:32:42,450
Oder so. Irgendwas. Ist jetzt auch egal.

4416
03:32:42,450 --> 03:32:46,980
So und.

4417
03:32:46,980 --> 03:32:48,980
So also sprich das ist dynamisch.

4418
03:32:48,980 --> 03:32:53,120
Je nachdem was. Je nach Input.

4419
03:32:53,120 --> 03:32:55,120
So. Ähm.

4420
03:32:55,120 --> 03:32:57,120
Fangen wir erstmal.

4421
03:32:57,120 --> 03:32:59,120
Fangen wir erstmal an der Stelle an.

4422
03:32:59,120 --> 03:33:01,120
Wie würde man das in C richtig machen?

4423
03:33:01,120 --> 03:33:03,120
Also. Ich hab jetzt Glück.

4424
03:33:03,120 --> 03:33:05,120
Also wenn ich. Chat.

4425
03:33:05,120 --> 03:33:07,120
Also wenn ich euch richtig verstanden hab.

4426
03:33:07,120 --> 03:33:09,120
Ich hab jetzt Glück das der GCC das macht.

4427
03:33:09,120 --> 03:33:16,340
So. Ähm.

4428
03:33:16,340 --> 03:33:18,340
So mal angenommen.

4429
03:33:18,340 --> 03:33:20,340
Ich will das jetzt.

4430
03:33:20,340 --> 03:33:22,340
Ich will das jetzt machen.

4431
03:33:22,340 --> 03:33:24,340
Also mal angenommen.

4432
03:33:24,340 --> 03:33:26,340
Mein GCC könnte das nicht.

4433
03:33:26,340 --> 03:33:28,340
Dann würde ich dann sowas hier machen.

4434
03:33:28,340 --> 03:33:31,650
Ähm.

4435
03:33:31,650 --> 03:33:33,650
Nur mal so. Nur ich hab keine Ahnung davon.

4436
03:33:33,650 --> 03:33:35,650
Interessiert mich jetzt wie man sagt.

4437
03:33:35,650 --> 03:33:37,650
Äh. Ups. Oh. Alter. Ist ja gut.

4438
03:33:37,650 --> 03:33:41,340
So. Äh.

4439
03:33:41,340 --> 03:33:43,340
Äh. Warte mal.

4440
03:33:43,340 --> 03:33:45,340
Und jetzt irgendwie. Keine Ahnung. Ähm.

4441
03:33:45,340 --> 03:33:47,340
Äh. Len mal.

4442
03:33:47,340 --> 03:33:49,340
Size of.

4443
03:33:49,340 --> 03:33:51,340
Äh. Äh.

4444
03:33:51,340 --> 03:33:53,340
Äh. Ja gut.

4445
03:33:53,340 --> 03:33:55,340
Was ist es in dem Fall. Äh.

4446
03:33:55,340 --> 03:33:57,340
Läuft gleich aus.

4447
03:33:57,340 --> 03:34:02,770
Sowas hier oder wie?

4448
03:34:02,770 --> 03:34:04,770
Also müsst ihr dann in der Richtung machen.

4449
03:34:04,770 --> 03:34:13,710
Oder?

4450
03:34:13,710 --> 03:34:15,710
Ja stimmt.

4451
03:34:15,710 --> 03:34:17,710
Also sprich so ist dann quasi die.

4452
03:34:17,710 --> 03:34:19,710
Offizielle Variante.

4453
03:34:19,710 --> 03:34:21,710
Ja gut.

4454
03:34:21,710 --> 03:34:23,710
Ob das jetzt auf dem Stack liegt.

4455
03:34:23,710 --> 03:34:25,710
Das ist mir ehrlich gesagt ziemlich wurscht.

4456
03:34:25,710 --> 03:34:27,710
Ich muss mich in dem Fall eh so und so drum kümmern.

4457
03:34:27,710 --> 03:34:29,710
Dass ich selbst aufräume.

4458
03:34:29,710 --> 03:34:31,710
Da kommt mir ja nichts.

4459
03:34:31,710 --> 03:34:33,710
Wo ist es dann speichern. Juckt mich nicht.

4460
03:34:33,710 --> 03:34:35,710
So.

4461
03:34:35,710 --> 03:34:37,710
Genau. In C kann ich New machen.

4462
03:34:37,710 --> 03:34:39,710
Das heißt in dem Fall müsste ich jetzt das da machen.

4463
03:34:39,710 --> 03:34:41,710
So müsste ich aufräumen.

4464
03:34:41,710 --> 03:34:43,710
Jetzt wieder.

4465
03:34:43,710 --> 03:34:45,710
So.

4466
03:34:45,710 --> 03:34:47,710
Ich meine das ist jetzt natürlich böse.

4467
03:34:47,710 --> 03:34:49,710
Weil. Klar.

4468
03:34:49,710 --> 03:34:51,710
Also sprich.

4469
03:34:51,710 --> 03:34:53,710
Das wäre die Variante.

4470
03:34:53,710 --> 03:35:08,030
Wenn mein GCC das nicht kann.

4471
03:35:08,030 --> 03:35:10,030
So. Ok.

4472
03:35:10,030 --> 03:35:12,030
Also. So. Und in C++.

4473
03:35:12,030 --> 03:35:14,030
Und in C++.

4474
03:35:14,030 --> 03:35:16,030
Mach ich jetzt was?

4475
03:35:16,030 --> 03:35:19,600
New. Uint.

4476
03:35:19,600 --> 03:35:23,360
So.

4477
03:35:23,360 --> 03:35:25,360
Äh. Würde das funktionieren?

4478
03:35:27,360 --> 03:35:29,360
Ja das. Klar. Mit Vector geht es.

4479
03:35:29,360 --> 03:35:33,500
Das ist klar.

4480
03:35:33,500 --> 03:35:35,500
Das geht. Ok.

4481
03:35:35,500 --> 03:35:37,500
Oh. Oh. Oh. Also. Aber.

4482
03:35:37,500 --> 03:35:44,820
Ok.

4483
03:35:44,820 --> 03:35:46,820
Und das geht jetzt auch nicht nur weil ich GCC hab.

4484
03:35:48,820 --> 03:35:50,820
Sondern das ist jetzt quasi C++ Standardmäßig.

4485
03:35:50,820 --> 03:35:52,820
Das ist ok.

4486
03:35:52,820 --> 03:35:54,820
Oder wie.

4487
03:35:54,820 --> 03:35:56,820
So. Und danach müsste ich mal wieder aufräumen.

4488
03:35:56,820 --> 03:35:58,820
Wenn mit Vector. Wie gesagt.

4489
03:35:58,820 --> 03:36:00,820
Mit Vector ist klar das das funktioniert.

4490
03:36:00,820 --> 03:36:02,820
Wobei was mir mit.

4491
03:36:02,820 --> 03:36:07,220
Was mir ähm.

4492
03:36:07,220 --> 03:36:09,220
Was mir bei Vector nicht ganz klar ist.

4493
03:36:09,220 --> 03:36:11,220
Ich meine angenommen.

4494
03:36:11,220 --> 03:36:13,220
Wir machen das jetzt mit Vector.

4495
03:36:13,220 --> 03:36:15,220
So. Und das hier. Äh.

4496
03:36:15,220 --> 03:36:17,220
Buffer.

4497
03:36:17,220 --> 03:36:19,220
Wobei.

4498
03:36:19,220 --> 03:36:21,220
Das kann man ja auch schon wieder so und so anlegen.

4499
03:36:21,220 --> 03:36:23,220
Ne.

4500
03:36:23,220 --> 03:36:25,220
So.

4501
03:36:25,220 --> 03:36:27,220
So. Wie sag ich dem denn jetzt.

4502
03:36:27,220 --> 03:36:29,220
Das er.

4503
03:36:29,220 --> 03:36:31,220
Warte mal. Da hat doch. Da hat doch irgendeiner.

4504
03:36:31,220 --> 03:36:33,220
Travorex. Da hat doch grad irgendwas im Chat geschrieben.

4505
03:36:33,220 --> 03:36:35,220
Wie das funktioniert.

4506
03:36:35,220 --> 03:36:37,220
Kann leider nicht richtig scrollen.

4507
03:36:37,220 --> 03:36:39,220
Weil es irgendwie suckt.

4508
03:36:39,220 --> 03:36:41,220
Ähm.

4509
03:36:41,220 --> 03:36:43,220
Ja das ist offiziell.

4510
03:36:43,220 --> 03:36:45,220
C++.

4511
03:36:45,220 --> 03:36:47,220
Ach ok. Man schreibt direkt die.

4512
03:36:47,220 --> 03:36:49,220
Die Size dahinter.

4513
03:36:49,220 --> 03:36:52,910
Also sowas hier dann.

4514
03:36:52,910 --> 03:36:54,910
Exzellent.

4515
03:36:54,910 --> 03:36:56,910
Und da Data.

4516
03:36:56,910 --> 03:37:03,810
Ok.

4517
03:37:03,810 --> 03:37:05,810
Das wird das so. So wird das funktionieren.

4518
03:37:07,810 --> 03:37:19,380
Wird das so jetzt gehen.

4519
03:37:19,380 --> 03:37:21,380
Ich meine den muss ich jetzt ja nicht löschen.

4520
03:37:21,380 --> 03:37:23,380
Ne.

4521
03:37:23,380 --> 03:37:25,380
Der räumt der ja automatisch wieder auf.

4522
03:37:25,380 --> 03:37:27,380
Also ok.

4523
03:37:27,380 --> 03:37:29,380
Also sprich.

4524
03:37:29,380 --> 03:37:31,380
Das hat dann die Länge.

4525
03:37:31,380 --> 03:37:33,380
Also in dem Fall sagen wir mal.

4526
03:37:33,380 --> 03:37:35,380
Wir schreiben es jetzt mal rein.

4527
03:37:35,380 --> 03:37:37,380
Und machen dieses sinnlose Pass hier oben wieder weg.

4528
03:37:37,380 --> 03:37:39,380
Ähm.

4529
03:37:39,380 --> 03:37:41,380
Also sprich.

4530
03:37:41,380 --> 03:37:43,380
Das wäre dann ein Vektor mit 2048

4531
03:37:43,380 --> 03:37:48,540
Nuller.

4532
03:37:48,540 --> 03:37:50,540
Ja das ist eigentlich auch ok.

4533
03:37:50,540 --> 03:37:52,540
Da kann ich sie jetzt gar nicht dafür flamen.

4534
03:37:52,540 --> 03:37:54,540
Großartig. Das ist in Ordnung.

4535
03:37:54,540 --> 03:37:56,540
Da kann ich mit leben.

4536
03:37:56,540 --> 03:37:58,540
Das ist ok.

4537
03:37:58,540 --> 03:38:00,540
Das sieht aus ob das ganze funktioniert.

4538
03:38:00,540 --> 03:38:02,540
Also mtls read.

4539
03:38:02,540 --> 03:38:06,110
Jetzt müssen wir allerdings aufpassen.

4540
03:38:06,110 --> 03:38:08,110
Wenn wir hier was einlesen.

4541
03:38:08,110 --> 03:38:11,810
Du kannst den Namen Vektor flamen.

4542
03:38:11,810 --> 03:38:13,810
Ja das stimmt.

4543
03:38:13,810 --> 03:38:15,810
Wie würdest du es nennen?

4544
03:38:15,810 --> 03:38:17,810
So Dynamic Array?

4545
03:38:17,810 --> 03:38:19,810
Oder wie würdest du es nennen?

4546
03:38:19,810 --> 03:38:21,810
List? Oh List.

4547
03:38:21,810 --> 03:38:23,810
Wie in .net.

4548
03:38:23,810 --> 03:38:25,810
Könnte man es nennen.

4549
03:38:25,810 --> 03:38:27,810
Genau Tobi. Könnte man machen.

4550
03:38:27,810 --> 03:38:29,810
Aber mit List könnte ich jetzt auch eher was anfangen.

4551
03:38:29,810 --> 03:38:31,810
Ganz mit Vektor ehrlich gesagt.

4552
03:38:31,810 --> 03:38:33,810
Denn Vektor ist für mich

4553
03:38:33,810 --> 03:38:35,810
Eher sowas wo es von

4554
03:38:35,810 --> 03:38:37,810
Irgendwie um Geschwindigkeit und Beschleunigung

4555
03:38:37,810 --> 03:38:39,810
Von Punkt A nach B oder irgendwie sowas geht.

4556
03:38:39,810 --> 03:38:46,640
List ist auch

4557
03:38:46,640 --> 03:38:50,780
Schwachsinn.

4558
03:38:50,780 --> 03:38:52,780
Naja gut. Ist ja auch egal.

4559
03:38:52,780 --> 03:38:54,780
Also zumindest es funktioniert.

4560
03:38:56,780 --> 03:38:58,780
xxminifinixxx

4561
03:38:58,780 --> 03:39:00,780
Sagt

4562
03:39:00,780 --> 03:39:02,780
Ich programmiere in C ein Programm

4563
03:39:02,780 --> 03:39:04,780
Für meinen NXT Roboter.

4564
03:39:04,780 --> 03:39:06,780
Er hat aber noch ein Problem mit kleinen

4565
03:39:06,780 --> 03:39:08,780
Kurven. Könntest du mir helfen?

4566
03:39:08,780 --> 03:39:10,780
Oh ne da habe ich gar keine Ahnung.

4567
03:39:10,780 --> 03:39:12,780
Ist das Lego?

4568
03:39:12,780 --> 03:39:14,780
Übrigens ihr habt es gesehen.

4569
03:39:14,780 --> 03:39:16,780
Ihr habt es gesehen. Der Browser ist der Meinung.

4570
03:39:16,780 --> 03:39:18,780
Da kommt ein SSL Zertifikat.

4571
03:39:18,780 --> 03:39:20,780
Äh NXT Roboter.

4572
03:39:20,780 --> 03:39:22,780
Ist das Lego?

4573
03:39:22,780 --> 03:39:24,780
Ah Mindstorm ist das.

4574
03:39:24,780 --> 03:39:26,780
Ne.

4575
03:39:26,780 --> 03:39:28,780
Kein Schimmer. Habe ich noch nie was mitgemacht.

4576
03:39:28,780 --> 03:39:30,780
Keine Ahnung.

4577
03:39:30,780 --> 03:39:32,780
Machst du es einfach weil es dich interessiert?

4578
03:39:32,780 --> 03:39:38,720
Oder macht ihr das in der Schule?

4579
03:39:38,720 --> 03:39:40,720
Aber so und so habe ich absolut keinen Plan.

4580
03:39:40,720 --> 03:39:42,720
Okay also.

4581
03:39:42,720 --> 03:39:48,460
Wir lesen das jetzt ein.

4582
03:39:48,460 --> 03:39:50,460
Ähm.

4583
03:39:50,460 --> 03:39:52,460
So jetzt muss ich mal überlegen.

4584
03:39:52,460 --> 03:39:55,970
Also.

4585
03:39:55,970 --> 03:39:57,970
Moment wie wie wie.

4586
03:39:57,970 --> 03:40:01,280
Example read.

4587
03:40:01,280 --> 03:40:03,280
Okay read.

4588
03:40:03,280 --> 03:40:05,280
Was machen die denn hier?

4589
03:40:05,280 --> 03:40:07,280
Embed TLS read.

4590
03:40:07,280 --> 03:40:09,280
Ah verstehe.

4591
03:40:11,280 --> 03:40:13,280
Die lesen quasi so lange ein.

4592
03:40:13,280 --> 03:40:15,280
Bis der Client nichts mehr schickt.

4593
03:40:15,280 --> 03:40:17,280
Denke ich mal.

4594
03:40:17,280 --> 03:40:19,280
Ich weiß nicht was da sowas in der Richtung ist.

4595
03:40:19,280 --> 03:40:21,280
So und da müssen wir den HTTP Request rausbekommen.

4596
03:40:21,280 --> 03:40:23,280
Ähm.

4597
03:40:23,280 --> 03:40:25,280
Okay also.

4598
03:40:25,280 --> 03:40:27,280
Ich mach mal die einfache Variante.

4599
03:40:27,280 --> 03:40:29,280
Wir lesen jetzt mal ein.

4600
03:40:29,280 --> 03:40:31,280
Bis das hier gleich 0 oder was ist.

4601
03:40:31,280 --> 03:40:33,280
Ähm.

4602
03:40:33,280 --> 03:40:35,280
Ne.

4603
03:40:35,280 --> 03:40:37,280
Moment.

4604
03:40:37,280 --> 03:40:39,280
Was gibt es zurück?

4605
03:40:39,280 --> 03:40:41,280
Ähm.

4606
03:40:41,280 --> 03:40:43,280
Return. Boah wilder. Uiuiui.

4607
03:40:43,280 --> 03:40:45,280
Die haben aber Doku as fuck hier.

4608
03:40:45,280 --> 03:40:47,280
Positive numbers of bytes read.

4609
03:40:47,280 --> 03:40:49,280
Also sprich.

4610
03:40:49,280 --> 03:40:51,280
Es muss größer 0 sein.

4611
03:40:51,280 --> 03:41:02,080
Also sagen wir mal okay.

4612
03:41:02,080 --> 03:41:04,080
Größer 0.

4613
03:41:04,080 --> 03:41:06,080
Wenn es größer 0 ist dann habe ich was eingelesen.

4614
03:41:06,080 --> 03:41:08,080
Alles klar.

4615
03:41:08,080 --> 03:41:12,420
So.

4616
03:41:12,420 --> 03:41:14,420
Äh.

4617
03:41:14,420 --> 03:41:16,420
Achso Moment.

4618
03:41:16,420 --> 03:41:18,420
Das muss ich mir speichern.

4619
03:41:18,420 --> 03:41:20,420
Weil ansonsten kriege ich ja die Länge nicht raus.

4620
03:41:20,420 --> 03:41:22,420
Ähm. Länge.

4621
03:41:22,420 --> 03:41:24,420
So.

4622
03:41:24,420 --> 03:41:30,160
Wenn die Länge größer 0 ist.

4623
03:41:30,160 --> 03:41:32,160
Ja Tommi das könnte ich machen.

4624
03:41:32,160 --> 03:41:36,160
Aber äh. Also irgendwelche Type Devs nochmal um 5 Ecken finde ich machen die ganze Sache noch komplizierter.

4625
03:41:36,160 --> 03:41:38,160
Äh.

4626
03:41:38,160 --> 03:41:40,160
Als einfach die Typen zu verwenden.

4627
03:41:40,160 --> 03:41:42,160
Auch wenn sie blöd benannt sind.

4628
03:41:42,160 --> 03:41:44,160
So also Länge.

4629
03:41:44,160 --> 03:41:46,160
Wenn die Länge größer 0 ist dann habe ich was eingelesen.

4630
03:41:46,160 --> 03:41:48,160
Größer gleich 0 ist im Prinzip auch okay.

4631
03:41:48,160 --> 03:41:50,160
Dann hat der Client nichts geschickt.

4632
03:41:50,160 --> 03:41:52,160
Ähm.

4633
03:41:52,160 --> 03:41:54,160
Und nun gäbe ich das doch einfach mal aus.

4634
03:41:54,160 --> 03:42:00,740
Würde ich sagen.

4635
03:42:00,740 --> 03:42:02,740
Okay.

4636
03:42:02,740 --> 03:42:04,740
Also was ich jetzt erwarten würde.

4637
03:42:04,740 --> 03:42:06,740
Was der hier ausgibt ist.

4638
03:42:06,740 --> 03:42:08,740
Ähm.

4639
03:42:08,740 --> 03:42:10,740
Also quasi.

4640
03:42:10,740 --> 03:42:12,740
Zumindest teilweise.

4641
03:42:12,740 --> 03:42:14,740
Ich weiß nicht ob ich das in einem Stück einlesen kann.

4642
03:42:14,740 --> 03:42:16,740
Eigentlich müssen wir das hier auch in der Schleife einlesen.

4643
03:42:16,740 --> 03:42:18,740
Weil ansonsten hört der einfach mittendrin auf.

4644
03:42:18,740 --> 03:42:20,740
Aber mal gucken wie weit er einliest.

4645
03:42:20,740 --> 03:42:22,740
So und jetzt müssen wir sagen.

4646
03:42:22,740 --> 03:42:24,740
Jetzt brauchen wir einen String von einem Buffer.

4647
03:42:24,740 --> 03:42:28,620
Und wenn ich das ganz falsch liege kann man das so machen.

4648
03:42:28,620 --> 03:42:30,620
Ne kann man nicht.

4649
03:42:30,620 --> 03:42:32,620
Warum nicht?

4650
03:42:32,620 --> 03:42:37,470
Achso.

4651
03:42:37,470 --> 03:42:39,470
Ich glaube das liegt daran weil das Char sein muss.

4652
03:42:39,470 --> 03:42:41,470
Kann das sein?

4653
03:42:41,470 --> 03:42:43,470
Äh.

4654
03:42:43,470 --> 03:42:45,470
Moment.

4655
03:42:45,470 --> 03:42:53,740
Ging das nicht?

4656
03:42:53,740 --> 03:42:55,740
Ich meine.

4657
03:42:55,740 --> 03:42:57,740
Ich könnte einfach tricksen.

4658
03:42:57,740 --> 03:42:59,740
Weil ich habe schon mal nachgeguckt wie das geht.

4659
03:42:59,740 --> 03:43:01,740
Und habe einfach mir was gebastelt.

4660
03:43:01,740 --> 03:43:03,740
Mal gucken wie ich das gemacht habe.

4661
03:43:03,740 --> 03:43:05,740
Ah.

4662
03:43:05,740 --> 03:43:07,740
Wieso?

4663
03:43:07,740 --> 03:43:09,740
Das ist doch richtig was ich da gemacht habe.

4664
03:43:09,740 --> 03:43:11,740
Guck mal da.

4665
03:43:11,740 --> 03:43:15,310
Ah ist das kein Int?

4666
03:43:15,310 --> 03:43:17,310
Doch ist auch ein Int.

4667
03:43:17,310 --> 03:43:19,310
Ach das ist ja ein Vector.

4668
03:43:19,310 --> 03:43:21,310
Da muss ich Date.

4669
03:43:21,310 --> 03:43:23,310
Aha richtig.

4670
03:43:23,310 --> 03:43:25,310
Stimmt ja.

4671
03:43:25,310 --> 03:43:28,940
Klar.

4672
03:43:28,940 --> 03:43:30,940
Aber jetzt müsste es eigentlich funktionieren.

4673
03:43:30,940 --> 03:43:34,580
Äh ich.

4674
03:43:34,580 --> 03:43:36,580
Ich uploade einfach mal.

4675
03:43:36,580 --> 03:43:38,580
Da zeigt bestimmt einfach nur Mist an.

4676
03:43:38,580 --> 03:43:45,410
Oh ne.

4677
03:43:45,410 --> 03:43:47,410
Ach der Cast.

4678
03:43:47,410 --> 03:43:59,940
Bei der Gelegenheit.

4679
03:43:59,940 --> 03:44:10,700
So.

4680
03:44:10,700 --> 03:44:12,700
Jetzt jetzt aber.

4681
03:44:12,700 --> 03:44:14,700
Jetzt jetzt funktioniert es.

4682
03:44:14,700 --> 03:44:18,400
So und jetzt gucken wir mal was wir da eingelesen haben.

4683
03:44:18,400 --> 03:44:20,400
Bam.

4684
03:44:20,400 --> 03:44:22,400
Ja.

4685
03:44:22,400 --> 03:44:34,160
Der http Request ist am Start.

4686
03:44:34,160 --> 03:44:42,530
Exzellent.

4687
03:44:42,530 --> 03:44:44,530
Funktioniert.

4688
03:44:44,530 --> 03:44:46,530
So und jetzt bleibt uns nichts anderes übrig.

4689
03:44:46,530 --> 03:44:48,530
Wir haben jetzt den http Request eingelesen.

4690
03:44:48,530 --> 03:44:50,530
Haben festgestellt das es ein get Request ist.

4691
03:44:50,530 --> 03:44:52,530
Das sparen wir uns jetzt alles.

4692
03:44:52,530 --> 03:44:54,530
Weil ich weiß das es ein get Request ist.

4693
03:44:54,530 --> 03:44:56,530
Weil ich mache den get Request selber.

4694
03:44:56,530 --> 03:44:58,530
Mit einer Webseite.

4695
03:44:58,530 --> 03:45:00,530
Mit einer.

4696
03:45:00,530 --> 03:45:02,530
Mit der simpelsten Webseite.

4697
03:45:02,530 --> 03:45:04,530
Die man sich nur vorstellen kann.

4698
03:45:04,530 --> 03:45:06,530
Antworten wir jetzt.

4699
03:45:06,530 --> 03:45:08,530
Und zwar schicken wir da jetzt.

4700
03:45:08,530 --> 03:45:10,530
Folgendes zurück.

4701
03:45:10,530 --> 03:45:12,530
Mbtls.

4702
03:45:12,530 --> 03:45:14,530
Right.

4703
03:45:14,530 --> 03:45:16,530
SSL Right.

4704
03:45:16,530 --> 03:45:18,530
Ähm.

4705
03:45:18,530 --> 03:45:20,530
So.

4706
03:45:20,530 --> 03:45:22,530
Buffer und Länge.

4707
03:45:22,530 --> 03:45:24,530
Ok.

4708
03:45:24,530 --> 03:45:26,530
Also.

4709
03:45:26,530 --> 03:45:28,530
Ne nicht HTML.

4710
03:45:28,530 --> 03:45:30,530
Spons.

4711
03:45:30,530 --> 03:45:32,530
Da ist ja noch Zeug drin.

4712
03:45:32,530 --> 03:45:34,530
Also was müssen wir da jetzt sagen.

4713
03:45:34,530 --> 03:45:36,530
Äh.

4714
03:45:36,530 --> 03:45:38,530
Da krieg ich jetzt http.

4715
03:45:38,530 --> 03:45:40,530
Slash 1.1.

4716
03:45:40,530 --> 03:45:42,530
200. Ok.

4717
03:45:42,530 --> 03:45:44,530
So und dann immer schön.

4718
03:45:44,530 --> 03:45:50,590
Ctrl R, Ctrl N.

4719
03:45:50,590 --> 03:45:52,590
So ähm.

4720
03:45:52,590 --> 03:45:54,590
Dann brauchen wir als nächstes.

4721
03:45:54,590 --> 03:45:56,590
So was wie Content Type.

4722
03:45:56,590 --> 03:46:05,090
Content Type.

4723
03:46:05,090 --> 03:46:07,090
Content Type.

4724
03:46:07,090 --> 03:46:09,090
Ähm.

4725
03:46:09,090 --> 03:46:14,260
Text HTML.

4726
03:46:14,260 --> 03:46:16,260
Auto.

4727
03:46:16,260 --> 03:46:19,950
Ja warum nicht Auto.

4728
03:46:19,950 --> 03:46:21,950
Autobeste.

4729
03:46:21,950 --> 03:46:28,270
Warum soll ich den Kram von Hand schreiben.

4730
03:46:28,270 --> 03:46:30,270
Was ist Ctrl R?

4731
03:46:30,270 --> 03:46:32,270
Das ist Carriage Return.

4732
03:46:32,270 --> 03:46:34,270
Das ist auf einer Schreibmaschine das Zurückschieben des Schreibkopfes.

4733
03:46:34,270 --> 03:46:39,820
Das klingt bescheuert.

4734
03:46:39,820 --> 03:46:41,820
Aber daher kommt das.

4735
03:46:43,820 --> 03:46:45,820
Deswegen ist ja New Line unter Windows.

4736
03:46:45,820 --> 03:46:47,820
Falls ihr euch schon mal gefragt habt.

4737
03:46:47,820 --> 03:46:49,820
Was denn unter Windows das hier ist.

4738
03:46:49,820 --> 03:46:51,820
Das liegt daran.

4739
03:46:51,820 --> 03:46:53,820
Weil die Schreibmaschine.

4740
03:46:53,820 --> 03:46:55,820
Die Schreibmaschine macht.

4741
03:46:55,820 --> 03:46:57,820
Für eine neue Zeile.

4742
03:46:57,820 --> 03:47:01,260
Macht die Schreibmaschine.

4743
03:47:01,260 --> 03:47:03,260
Zurück auf 0 schieben.

4744
03:47:03,260 --> 03:47:05,260
Und dann 1 nach unten drehen.

4745
03:47:05,260 --> 03:47:07,260
Und deswegen hat sich Microsoft gedacht.

4746
03:47:07,260 --> 03:47:09,260
Das ist es was wir in Windows auch brauchen.

4747
03:47:09,260 --> 03:47:11,260
Das ist es was wir in Windows auch brauchen.

4748
03:47:11,260 --> 03:47:16,240
Ja übrigens.

4749
03:47:16,240 --> 03:47:18,240
Cheat 95 das ist die beste Erklärung.

4750
03:47:18,240 --> 03:47:20,240
Ähm.

4751
03:47:20,240 --> 03:47:22,240
Die ersten Terminals waren ja Drucker.

4752
03:47:22,240 --> 03:47:24,240
Also sprich.

4753
03:47:24,240 --> 03:47:26,240
Das was ihr hier seht.

4754
03:47:26,240 --> 03:47:28,240
Dieses Terminal.

4755
03:47:28,240 --> 03:47:30,240
Deswegen nennt man das ja auch Terminal Emulator.

4756
03:47:30,240 --> 03:47:32,240
Das ist kein Emulator im eigentlichen Sinne.

4757
03:47:32,240 --> 03:47:34,240
Wie jetzt irgendwie ein N64 Emulator.

4758
03:47:34,240 --> 03:47:36,240
Es ist aber kein richtig echtes Terminal.

4759
03:47:36,240 --> 03:47:38,240
Oder auch kein richtig echter Drucker.

4760
03:47:38,240 --> 03:47:40,240
In dem Sinn.

4761
03:47:40,240 --> 03:47:42,240
Die ersten Terminals waren Drucker.

4762
03:47:42,240 --> 03:47:44,240
Und da war das halt wirklich so.

4763
03:47:44,240 --> 03:47:46,240
Da musstest du zum Schreiben sagen.

4764
03:47:46,240 --> 03:47:48,240
Ok Drucker.

4765
03:47:48,240 --> 03:47:50,240
Kopf nach links.

4766
03:47:50,240 --> 03:47:52,240
Das Backslash R ist Carriage Return.

4767
03:47:52,240 --> 03:47:54,240
Das ist das Steuerzeichen für.

4768
03:47:54,240 --> 03:47:56,240
Schreibkopf von der.

4769
03:47:56,240 --> 03:47:58,240
Wie nennt man das?

4770
03:47:58,240 --> 03:48:00,240
Schreibkopf von der Schreibmaschine.

4771
03:48:00,240 --> 03:48:02,240
Nach links zurückschieben.

4772
03:48:02,240 --> 03:48:04,240
Und dann kommt ein Backslash N.

4773
03:48:04,240 --> 03:48:06,240
Das ist das Zeichen für New Line.

4774
03:48:06,240 --> 03:48:08,240
Ähm.

4775
03:48:08,240 --> 03:48:10,240
Andere Leute waren da ein bisschen.

4776
03:48:10,240 --> 03:48:12,240
Fortschrittlicher und haben gesagt.

4777
03:48:12,240 --> 03:48:14,240
Ok auf dem Computer reicht uns.

4778
03:48:14,240 --> 03:48:16,240
New Line.

4779
03:48:16,240 --> 03:48:18,240
Zu verwenden.

4780
03:48:18,240 --> 03:48:20,240
Naja gut.

4781
03:48:20,240 --> 03:48:22,240
Carriage Return gibt es da halt nicht so.

4782
03:48:22,240 --> 03:48:24,240
Wenn man hier sowas hat.

4783
03:48:24,240 --> 03:48:26,240
Aber daher kommt das.

4784
03:48:26,240 --> 03:48:28,240
Und bei HTML ist es halt.

4785
03:48:28,240 --> 03:48:30,240
Bei HTTP ist es halt nun mal im Protokoll so definiert.

4786
03:48:30,240 --> 03:48:32,240
Das die einzelnen Abschnitte eben mit.

4787
03:48:32,240 --> 03:48:34,240
Carriage Return New Line beendet werden.

4788
03:48:34,240 --> 03:48:36,240
Also sprich das hier ist eigentlich die HTTP Response.

4789
03:48:36,240 --> 03:48:38,240
Erst der Header.

4790
03:48:38,240 --> 03:48:40,240
Zweiter Header drin.

4791
03:48:40,240 --> 03:48:42,240
Und alles muss Carriage Return New Line getrennt sein.

4792
03:48:42,240 --> 03:48:44,240
Und am Ende kommt ein Carriage Return New Line.

4793
03:48:44,240 --> 03:48:49,150
Carriage Return New Line.

4794
03:48:49,150 --> 03:48:51,150
Genauso kann das mittlerweile auch.

4795
03:48:51,150 --> 03:48:53,150
Und wir können jetzt übrigens noch mal.

4796
03:48:53,150 --> 03:48:55,150
Eine richtig Big Brain Geschichte machen.

4797
03:48:55,150 --> 03:48:57,150
Wir können nämlich mal sagen.

4798
03:48:57,150 --> 03:48:59,150
charset gleich utf8

4799
03:48:59,150 --> 03:49:02,590
So.

4800
03:49:02,590 --> 03:49:04,590
Das ist dann noch besser.

4801
03:49:04,590 --> 03:49:06,590
Dann kommt der Browser gar nicht auf die Idee.

4802
03:49:06,590 --> 03:49:08,590
Das in irgendwelchen komischen Encodings anzuzeigen.

4803
03:49:08,590 --> 03:49:10,590
Sondern utf8 bleibt einfach utf8.

4804
03:49:10,590 --> 03:49:12,590
Und ist utf8 und gut ist.

4805
03:49:12,590 --> 03:49:14,590
So.

4806
03:49:14,590 --> 03:49:16,590
Das ist die Response.

4807
03:49:16,590 --> 03:49:18,590
Und jetzt kommt das HTML rein.

4808
03:49:18,590 --> 03:49:20,590
Ähm.

4809
03:49:20,590 --> 03:49:22,590
Ich glaube aber.

4810
03:49:22,590 --> 03:49:26,670
Dafür muss man erstmal sagen.

4811
03:49:26,670 --> 03:49:28,670
Dafür muss man das hier erstmal abschließen.

4812
03:49:28,670 --> 03:49:30,670
Genau.

4813
03:49:30,670 --> 03:49:32,670
Das ist quasi Response und Header.

4814
03:49:32,670 --> 03:49:34,670
Und jetzt kommt der eigentliche Content.

4815
03:49:34,670 --> 03:49:36,670
Also.

4816
03:49:36,670 --> 03:49:38,670
HTML.

4817
03:49:38,670 --> 03:49:40,670
Grandiose Seite gibt das jetzt.

4818
03:49:40,670 --> 03:49:44,050
Body.

4819
03:49:44,050 --> 03:49:46,050
Body.

4820
03:49:46,050 --> 03:49:48,050
Cute.

4821
03:49:48,050 --> 03:49:50,050
Cute Chat.

4822
03:49:50,050 --> 03:49:52,050
So.

4823
03:49:52,050 --> 03:49:54,050
Und das schreiben wir jetzt.

4824
03:49:54,050 --> 03:49:56,050
Response.

4825
03:49:56,050 --> 03:49:58,050
Wisst ihr was?

4826
03:49:58,050 --> 03:50:00,050
Ich bin faul.

4827
03:50:00,050 --> 03:50:02,050
Wobei.

4828
03:50:02,050 --> 03:50:04,050
Wobei.

4829
03:50:04,050 --> 03:50:06,050
Ich weiß.

4830
03:50:06,050 --> 03:50:08,050
Ich weiß.

4831
03:50:08,050 --> 03:50:10,050
Ich weiß.

4832
03:50:10,050 --> 03:50:12,050
Ich weiß.

4833
03:50:12,050 --> 03:50:16,640
Da schreien die C-Leute jetzt.

4834
03:50:16,640 --> 03:50:18,640
Ich mein.

4835
03:50:18,640 --> 03:50:20,640
Man kann auch einfach sowas hier machen.

4836
03:50:20,640 --> 03:50:22,640
Response.

4837
03:50:22,640 --> 03:50:41,500
Und strrlen.

4838
03:50:41,500 --> 03:50:43,500
Haha.

4839
03:50:43,500 --> 03:50:45,500
So.

4840
03:50:45,500 --> 03:50:48,940
Einfach mal weggecastet.

4841
03:50:48,940 --> 03:50:50,940
Gut.

4842
03:50:50,940 --> 03:50:57,780
So muss das sein.

4843
03:50:57,780 --> 03:50:59,780
So. Upload.

4844
03:50:59,780 --> 03:51:13,460
Und jetzt schauen wir mal.

4845
03:51:13,460 --> 03:51:15,460
Ob deine Webseite zurückkommt.

4846
03:51:15,460 --> 03:51:18,900
Übrigens.

4847
03:51:18,900 --> 03:51:20,900
Ich hätte jetzt einfach einen Arduino String genommen dafür.

4848
03:51:20,900 --> 03:51:22,900
Und nicht strrlen.

4849
03:51:22,900 --> 03:51:30,690
Chat.

4850
03:51:30,690 --> 03:51:32,690
Ich muss mal kurz das Fenster neu laden.

4851
03:51:32,690 --> 03:51:34,690
Und dann gucken wir mal.

4852
03:51:34,690 --> 03:51:36,690
Ok.

4853
03:51:36,690 --> 03:51:38,690
So.

4854
03:51:38,690 --> 03:51:40,690
Ich habe jetzt eine Störung gefunden.

4855
03:51:40,690 --> 03:51:42,690
Störungen.

4856
03:51:42,690 --> 03:51:44,690
Ich habe seit 1,5 Jahren eine Störung.

4857
03:51:44,690 --> 03:51:46,690
Das DSL immer abbricht.

4858
03:51:46,690 --> 03:51:48,690
Mittlerweile wurde die Störung gefunden.

4859
03:51:48,690 --> 03:51:52,640
24V Fremdspannung.

4860
03:51:52,640 --> 03:51:54,640
Machen die Leute denn da.

4861
03:51:54,640 --> 03:51:56,640
Hat da irgendwie einer ein Licht angeschlossen.

4862
03:51:56,640 --> 03:51:58,640
Oder so.

4863
03:51:58,640 --> 03:52:00,640
Was ist denn so eine typische Sache.

4864
03:52:00,640 --> 03:52:02,640
24V.

4865
03:52:02,640 --> 03:52:04,640
Akkustaubsauger laden oder so.

4866
03:52:04,640 --> 03:52:10,460
telefonleitung so jetzt gucken wir mal ob eine webseite zurückkommt und es

4867
03:52:10,460 --> 03:52:13,460
kommt eine webseite zurück und jetzt gucken ob es funktioniert jetzt kommt

4868
03:52:13,460 --> 03:52:20,480
der moment der wahrheit im browser ok übrigens mein zertifikat ist natürlich

4869
03:52:20,480 --> 03:52:27,140
müll na ihr seht ja hier also kek we organization unit kek we also das

4870
03:52:27,140 --> 03:52:31,020
zertifikat ist totaler müll kein wunder dass das funktioniert und das

4871
03:52:31,020 --> 03:52:34,920
zertifikat ist auch für einen anderen host ausgestellt und alles so ok wir

4872
03:52:34,920 --> 03:52:44,220
wir wir accepten the risk and continue und BÄM CUTE CHAT EIJAJA wir haben

4873
03:52:44,220 --> 03:52:53,090
wir haben eine eigene webseite über einen eigenen webserver über https

4874
03:52:53,090 --> 03:53:02,280
ausgeliefert so und jetzt ist es natürlich einfach da mehr drüber

4875
03:53:02,280 --> 03:53:10,380
auszuliefern also also wenn ich jetzt cute chat darüber ausliefern kann kann

4876
03:53:10,380 --> 03:53:11,140
ich da noch mehr drüber

4877
03:53:11,140 --> 03:53:14,380
ausliefern wir probieren jetzt mal was wir probieren jetzt mal was passt mal

4878
03:53:14,380 --> 03:53:18,100
auf passt mal auf wir machen jetzt wir machen jetzt das

4879
03:53:18,100 --> 03:53:22,060
nächste und zwar wir legen jetzt hier unter data mal eine neue webseite ein

4880
03:53:22,060 --> 03:53:30,260
index html so und da legen wir machen jetzt eine richtige webseite ist richtig

4881
03:53:30,260 --> 03:53:42,840
in anführungsstrichen so 0w ja das ist alles okay und ich brauche ein

4882
03:53:42,840 --> 03:53:48,250
ein bild 0w zertifiziert Time

4883
03:53:48,250 --> 03:53:56,930
cricket 4 0w-bild 0w perfekt ja nun we nein a keine halbnackich fini die

4884
03:53:56,930 --> 03:54:00,610
twitch-mädels das brauchen wir jetzt net ich brauche ich brauche und bild ich

4885
03:54:00,610 --> 03:54:05,970
brauche ein bild 0w-bild ja 0w-bild perfekt

4886
03:54:05,970 --> 03:54:09,350
im idioEZ account da haben ein schönes bild muss man eigentlich images so beenden oder geht das auch ohne so dann war noch eine überschrift hairi b beeint raids

4887
03:54:09,350 --> 03:54:14,040
aus habe ein schönes bild ist ja des smallsieren

4888
03:54:14,040 --> 03:54:14,320
noch früher bis selbe zeingen gew gigs ça va aber da wNehmt ihr keine seenings

4889
03:54:14,320 --> 03:54:15,800
haben schönes bild das에요 4 kickeda gente similarum

4890
03:54:15,800 --> 03:54:16,640
oder geht das auch ohne?

4891
03:54:17,260 --> 03:54:18,580
So, dann machen wir noch eine Überschrift.

4892
03:54:18,920 --> 03:54:21,640
H1 Omega 0.

4893
03:54:23,080 --> 03:54:24,140
So, und diese Seite

4894
03:54:24,140 --> 03:54:26,040
liefern wir jetzt aus vom Flash.

4895
03:54:28,000 --> 03:54:30,000
Diese Seite liefern wir jetzt aus vom Flash.

4896
03:54:30,560 --> 03:54:32,300
Das wird, Leute, das wird Big Brain jetzt.

4897
03:54:32,380 --> 03:54:33,060
Dass das funktioniert.

4898
03:54:33,580 --> 03:54:35,100
So, also wir brauchen erstmal eine

4899
03:54:35,100 --> 03:54:37,820
ein Terminal.

4900
03:54:39,960 --> 03:54:40,360
Terminal.

4901
03:54:41,200 --> 03:54:41,640
Upload.

4902
03:54:43,440 --> 03:54:44,560
Also ich habe jetzt eine Webseite

4903
03:54:44,560 --> 03:54:46,000
angelegt, die wahnsinnig

4904
03:54:46,000 --> 03:54:48,060
wirklich High Octane Inhalt hat.

4905
03:54:48,320 --> 03:54:50,280
Wir können übrigens, ich schaue mir mal

4906
03:54:50,280 --> 03:54:52,240
kurz an, ob die Webseite an sich überhaupt funktioniert.

4907
03:54:54,140 --> 03:54:54,540
Plattform

4908
03:54:54,540 --> 03:54:56,100
Documents,

4909
03:54:56,220 --> 03:54:58,120
Plattform I.O., Projects,

4910
03:54:58,140 --> 03:54:59,360
Web-Server, Data,

4911
03:55:00,200 --> 03:55:02,040
Chrome, habe ich nicht drauf.

4912
03:55:02,640 --> 03:55:04,100
Chrome, Index, HTML.

4913
03:55:06,820 --> 03:55:08,300
Okay, die Webseite funktioniert prinzipiell.

4914
03:55:08,940 --> 03:55:09,880
Jetzt müssen wir nur gucken, dass wir die vom

4915
03:55:09,880 --> 03:55:11,220
ESP ausgeliefert kriegen.

4916
03:55:14,700 --> 03:55:16,080
So, Webseite abgeloadet.

4917
03:55:16,620 --> 03:55:17,680
Webseite abgeloadet.

4918
03:55:17,680 --> 03:55:19,560
Und nun gucken wir mal.

4919
03:55:20,380 --> 03:55:21,800
So, Response hier ist klar.

4920
03:55:21,960 --> 03:55:23,600
Die Response brauchen wir nach wie vor.

4921
03:55:24,540 --> 03:55:25,740
Allerdings der Inhalt,

4922
03:55:25,880 --> 03:55:27,020
den brauchen wir noch anderes.

4923
03:55:27,760 --> 03:55:29,280
Noch andere Inhalte. So, also sagen wir

4924
03:55:29,280 --> 03:55:31,460
Helper, Read File

4925
03:55:31,460 --> 03:55:32,700
from Spiffs.

4926
03:55:36,520 --> 03:55:37,620
Als, keine Ahnung,

4927
03:55:37,760 --> 03:55:39,400
String. Oh, ich

4928
03:55:39,400 --> 03:55:41,700
hoffe, das was ich da gebastelt habe, funktioniert.

4929
03:55:41,860 --> 03:55:42,660
Sonst müssen wir es von Hand machen.

4930
03:55:43,220 --> 03:55:44,760
Slash Index HTML.

4931
03:55:44,760 --> 03:55:47,420
Also ist das, was ich hier hochgeladen habe.

4932
03:55:47,680 --> 03:55:49,600
Ähm, zack.

4933
03:55:51,460 --> 03:55:52,460
Das ist das HTML.

4934
03:55:56,620 --> 03:55:57,900
Distortion, Dankeschön.

4935
03:55:58,200 --> 03:55:58,980
Exzellent.

4936
03:56:02,640 --> 03:56:05,120
So, ähm, und jetzt machen wir hier noch was.

4937
03:56:05,120 --> 03:56:08,660
Jetzt sagen wir, keine Ahnung, äh, HTML gleich

4938
03:56:09,160 --> 03:56:11,200
Response plus HTML.

4939
03:56:12,640 --> 03:56:16,540
Und jetzt haben wir einen String mit der Webseite und der Response.

4940
03:56:18,860 --> 03:56:23,260
Und wahrscheinlich müssen wir jetzt noch mal hinten dran

4941
03:56:23,260 --> 03:56:25,500
Carriage Return New Line, Carriage Return New Line machen, denke ich.

4942
03:56:25,500 --> 03:56:27,500
Dann denke ich mal, dass das funktioniert.

4943
03:56:27,500 --> 03:56:29,500
Das ist jetzt aber einfach nur geraten.

4944
03:56:29,500 --> 03:56:32,500
Und jetzt schicken wir das Ganze mal.

4945
03:56:32,500 --> 03:56:43,580
Gucken wir mal, ob das jetzt funktioniert, was ich mir da gerade vorstelle.

4946
03:56:43,580 --> 03:56:49,620
Jetzt bin ich echt gespannt, ob das funktioniert.

4947
03:56:49,620 --> 03:56:53,620
Also wir lesen jetzt die Datei, die ich gerade erstellt habe, vom Flash.

4948
03:56:53,620 --> 03:56:57,620
Und, ähm, zeigen sie im Browser an.

4949
03:56:57,620 --> 03:57:05,490
Ich weiß nicht, ob eine Read Function funktioniert, die ich hier gebaut habe.

4950
03:57:05,490 --> 03:57:08,490
Okay, okay, jetzt, jetzt, jetzt kommt es drauf an.

4951
03:57:08,490 --> 03:57:10,830
Okay, wir lesen jetzt die Datei, die ich gerade erstellt habe, vom Flash.

4952
03:57:10,830 --> 03:57:16,870
Okay, wir testen erst mal mit dem Curl, ob es funktioniert.

4953
03:57:16,870 --> 03:57:21,080
Sieht sehr gut aus, sieht sehr gut aus.

4954
03:57:21,080 --> 03:57:22,080
Bam!

4955
03:57:22,080 --> 03:57:23,080
Leute!

4956
03:57:23,080 --> 03:57:31,080
Webseite vom Flash-Speicher ausgelesen, über den eigenen Web-Server, über TLS ausgeliefert, an den Browser.

4957
03:57:31,080 --> 03:57:34,390
Was geht's Besseres?

4958
03:57:34,390 --> 03:57:44,360
Also, also, ohne Scheiß, also, viel, viel, viel mehr kannst du dann wirklich in vier Stunden streamen nicht wollen.

4959
03:57:44,360 --> 03:57:48,360
So, und das nächste Mal erweitern wir das dann noch,

4960
03:57:48,360 --> 03:57:49,360
dass der erstmal den Get-Return, den Get-Return, den Get-Return, den Get-Return, den Get-Return,

4961
03:57:49,360 --> 03:57:52,360
den Get-Request parsen kann und dass er nen Post annehmen kann.

4962
03:57:55,060 --> 03:57:57,060
Und Basic Auth machen wir das nächste mal noch!

4963
03:57:57,060 --> 03:58:01,060
Also, muss man das jetzt aufschreiben, alleine, ich werde es dann vergessen, ich werde ganz begeistert.

4964
03:58:01,060 --> 03:58:03,060
Also, nächstes Mal security Auth,

4965
03:58:03,060 --> 03:58:08,060
PostSupplyen und borgenlaus und getrackt.

4966
03:58:08,060 --> 03:58:14,060
Und dann die Seite auf dem ESP Display, nee, die Seite brauch ich nicht auf dem ESP Display.

4967
03:58:14,060 --> 03:58:19,060
Außerdem ne HTML Seite auf'm ESP Display rendern, dazu fehl mir nen äh, ne Render Engine vom ESP Display.

4968
03:58:19,060 --> 03:58:20,060
Ja!

4969
03:58:20,060 --> 03:58:21,800
Render-Engine für den ESP, für den

4970
03:58:21,800 --> 03:58:27,620
HTML-Render. Welches

4971
03:58:27,620 --> 03:58:29,520
SDK ist das? Was denn?

4972
03:58:30,320 --> 03:58:31,160
Äh, das, achso.

4973
03:58:31,580 --> 03:58:33,740
Ähm, das ist

4974
03:58:33,740 --> 03:58:35,520
ich zeig's dir

4975
03:58:35,520 --> 03:58:39,600
das ist ESP-IDF

4976
03:58:39,600 --> 03:58:41,760
4 mit Arduino

4977
03:58:41,760 --> 03:58:42,660
als Modul.

4978
03:58:43,780 --> 03:58:45,800
Also im Prinzip ist es ein Arduino

4979
03:58:45,800 --> 03:58:47,660
mit der Möglichkeit ein bisschen

4980
03:58:47,660 --> 03:58:48,660
mehr zu konfigurieren.

4981
03:58:59,750 --> 03:59:01,070
Mit einem reinen Arduino

4982
03:59:01,070 --> 03:59:03,890
ähm, ginge das auch

4983
03:59:03,890 --> 03:59:05,890
ohne Probleme. Das, was dir da in die

4984
03:59:05,890 --> 03:59:07,890
Quere kommt, also was mir in die Quere kommt, ist

4985
03:59:07,890 --> 03:59:10,230
dass ich

4986
03:59:10,230 --> 03:59:11,030
ein paar

4987
03:59:11,030 --> 03:59:13,650
das ist schon ESP32, genau.

4988
03:59:13,830 --> 03:59:14,630
Das ist ein ESP32.

4989
03:59:16,590 --> 03:59:17,910
Das müsstest du aber auch auf dem

4990
03:59:17,910 --> 03:59:19,790
ESP2866 machen können.

4991
03:59:20,790 --> 03:59:21,910
Allerdings, da machst du nicht mehr

4992
03:59:21,910 --> 03:59:23,990
als eine Verbindung wahrscheinlich. Der hat ja noch weniger

4993
03:59:23,990 --> 03:59:31,690
RAM. Also ich

4994
03:59:31,690 --> 03:59:33,590
müsste hier so 4, 5 Verbindungen maximal

4995
03:59:33,590 --> 03:59:35,750
hinkriegen. Da ist auch der RAM vom ESP32 voll.

4996
03:59:37,230 --> 03:59:37,630
Ähm,

4997
03:59:38,330 --> 03:59:39,590
ja, das Problem mit dem

4998
03:59:39,590 --> 03:59:42,030
offiziellen Arduino-Package

4999
03:59:42,030 --> 03:59:43,610
bei Platform.io

5000
03:59:43,610 --> 03:59:46,070
ist, die sind noch auf ESP-IDF

5001
03:59:46,070 --> 03:59:46,970
3.3

5002
03:59:46,970 --> 03:59:49,490
Das ist uralt.

5003
03:59:49,890 --> 03:59:51,170
Das kann glaube ich noch nicht mal C++

5004
03:59:51,170 --> 03:59:53,630
Das kann glaube ich sogar nur C++14 oder so.

5005
03:59:56,270 --> 03:59:57,150
Und das ist der Grund, warum

5006
03:59:57,150 --> 03:59:59,270
ich ein IDF-Projekt

5007
03:59:59,270 --> 04:00:01,010
eigentlich gemacht habe, dass ich eben die

5008
04:00:01,010 --> 04:00:02,790
neueren Tools verwenden kann. Also sprich, dass ich

5009
04:00:02,790 --> 04:00:05,350
ordentlichen C++17-Unterstützung

5010
04:00:05,350 --> 04:00:07,170
hab. Weil wenn schon C++

5011
04:00:07,170 --> 04:00:09,330
also wenn man sich schon mit dem ganzen Kackrum

5012
04:00:09,330 --> 04:00:11,010
ärgern muss, äh, dann will ich's nicht.

5013
04:00:11,030 --> 04:00:12,330
Das ist was halbwegs Neues, ja.

5014
04:00:16,020 --> 04:00:17,520
So. Aber das ist ja cool.

5015
04:00:17,880 --> 04:00:19,860
Also das hat jetzt echt einfacher funktioniert, als ich

5016
04:00:19,860 --> 04:00:21,480
mir das Ganze vorgestellt hab. Ich mein, klar,

5017
04:00:21,940 --> 04:00:23,720
ich will jetzt nicht so tun, ich hab's ja schon ein paar Mal

5018
04:00:23,720 --> 04:00:24,940
gesagt, ich will das nicht so tun, als hab ich das jetzt hier

5019
04:00:24,940 --> 04:00:27,840
einzig und allein im Stream mit zusammen

5020
04:00:27,840 --> 04:00:29,680
gesucht, ne. Ich hab im Vorfeld schon ein bisschen ausprobiert,

5021
04:00:29,720 --> 04:00:30,540
wie's funktioniert, klar.

5022
04:00:31,780 --> 04:00:33,760
Ähm, aber insgesamt ging das doch deutlich

5023
04:00:33,760 --> 04:00:35,540
einfacher, als ich mir das vorgestellt hab.

5024
04:00:37,060 --> 04:00:37,540
Aber guck mal!

5025
04:00:38,840 --> 04:00:39,780
Da kann man sich doch nicht

5026
04:00:39,780 --> 04:00:40,280
beschweren.

5027
04:00:42,020 --> 04:00:42,820
132 Zeilen

5028
04:00:42,820 --> 04:00:43,780
und,

5029
04:00:43,940 --> 04:00:46,680
aber man kann den Kram ja sogar lesen,

5030
04:00:46,740 --> 04:00:48,060
so ist das ja nun auch wieder nicht, ne.

5031
04:00:48,620 --> 04:00:48,820
Also,

5032
04:00:50,560 --> 04:00:52,580
132 Zeilen, äh,

5033
04:00:54,240 --> 04:00:54,840
für ein bisschen

5034
04:00:54,840 --> 04:00:56,460
statisches HTML, ist doch in Ordnung.

5035
04:00:58,300 --> 04:00:59,060
Zumal wir ab jetzt

5036
04:00:59,060 --> 04:01:00,780
ja auch easy mehr machen könnten, ne.

5037
04:01:00,780 --> 04:01:02,920
Wir haben schon die Webseite vom Flash ausgelesen,

5038
04:01:02,980 --> 04:01:04,660
hier, und, äh,

5039
04:01:04,760 --> 04:01:06,840
zurückgeschickt. Das heißt, als

5040
04:01:06,840 --> 04:01:08,940
nächstes, wie gesagt, als nächstes machen wir Basic Auth,

5041
04:01:09,420 --> 04:01:11,360
wir passen die HTTP-Requests

5042
04:01:11,360 --> 04:01:13,100
und gucken, dass wir einen Post-Request

5043
04:01:13,100 --> 04:01:13,920
für ein Update handeln.

5044
04:01:13,940 --> 04:01:16,440
Ach ja, und, äh, Logs ausliefern

5045
04:01:16,440 --> 04:01:17,360
über eine Verbindung.

5046
04:01:17,760 --> 04:01:20,040
Wobei das mit dem Logs ausliefern wird wahrscheinlich relativ

5047
04:01:20,040 --> 04:01:21,960
simpel gehen. Ich mach einfach die

5048
04:01:21,960 --> 04:01:24,040
Verbindung nicht zu und sende

5049
04:01:24,040 --> 04:01:26,080
weiterhin, äh, äh, Dinger.

5050
04:01:26,240 --> 04:01:28,240
Wir können das ja, ich kann das ja mal kurz ausprobieren.

5051
04:01:28,620 --> 04:01:29,540
Das Schöne ist ja,

5052
04:01:30,120 --> 04:01:32,400
dadurch, dass wir eben, äh,

5053
04:01:32,480 --> 04:01:34,040
für jede Verbindung einen eigenen Thread

5054
04:01:34,040 --> 04:01:36,040
aufmachen, ist es auch ziemlich

5055
04:01:36,040 --> 04:01:38,020
einfach, ich kommentier den Kram hier mal

5056
04:01:38,020 --> 04:01:42,620
aus, äh,

5057
04:01:42,660 --> 04:01:44,420
dadurch, dass wir für jede Verbindung einen neuen Thread

5058
04:01:44,420 --> 04:01:46,320
aufmachen, ist es auch ziemlich einfach,

5059
04:01:46,340 --> 04:01:48,900
hier, äh,

5060
04:01:49,040 --> 04:01:50,520
Sachen, Sachen zu schicken, ne?

5061
04:01:51,480 --> 04:01:52,480
So, Text, wollen wir mal

5062
04:01:52,480 --> 04:01:53,240
Text plain

5063
04:01:53,240 --> 04:01:56,580
und, ähm,

5064
04:02:03,620 --> 04:02:04,440
Hauptsache es funktioniert.

5065
04:02:04,920 --> 04:02:06,340
So, jetzt machen wir hier mal eine Endlosschleife

5066
04:02:06,340 --> 04:02:08,600
und sagen, okay, wir verschicken

5067
04:02:08,600 --> 04:02:12,190
einfach alle, alle,

5068
04:02:12,370 --> 04:02:14,210
keine Ahnung, fünf, fünf, alle,

5069
04:02:14,370 --> 04:02:15,710
alle, jede Sekunde,

5070
04:02:16,350 --> 04:02:18,290
jede Sekunde schicken wir

5071
04:02:18,290 --> 04:02:19,410
jetzt mal

5072
04:02:19,410 --> 04:02:22,930
eine Nachricht.

5073
04:02:25,120 --> 04:02:32,800
Keck weh.

5074
04:02:32,800 --> 04:02:33,960
So, und jetzt sollte die Verbindung,

5075
04:02:34,040 --> 04:02:35,100
äh, eigentlich offen bleiben

5076
04:02:35,100 --> 04:02:37,860
und ich müsste jede Sekunde

5077
04:02:37,860 --> 04:02:38,640
eine Nachricht kriegen.

5078
04:02:39,980 --> 04:02:41,520
Was ist eigentlich das aktuellste

5079
04:02:41,520 --> 04:02:43,020
HTTP, äh,

5080
04:02:45,880 --> 04:02:46,660
irgendein Zweier?

5081
04:02:49,810 --> 04:02:50,890
Das hab ich jetzt verkehrt gemacht.

5082
04:02:52,230 --> 04:02:53,510
Achso, muss casten.

5083
04:02:54,510 --> 04:02:56,190
Ja, was ist denn nur mit casten los?

5084
04:02:59,820 --> 04:03:00,400
Hab ich nicht, ich,

5085
04:03:00,540 --> 04:03:02,560
haben sie nicht sogar schon was mit HTTP3

5086
04:03:02,560 --> 04:03:04,440
letztens, äh,

5087
04:03:04,800 --> 04:03:06,900
Preview-mäßig erzählt? Ja, doch, genau.

5088
04:03:06,900 --> 04:03:08,900
Genau, HTTP3

5089
04:03:09,460 --> 04:03:10,680
ist hier grad upcoming.

5090
04:03:11,040 --> 04:03:14,610
Also, wie gesagt, die sind auch schon

5091
04:03:14,610 --> 04:03:16,610
bei zwei, ja, zwei, zwei ist

5092
04:03:16,610 --> 04:03:18,610
sogar schon mäßig verbreitet.

5093
04:03:18,610 --> 04:03:30,500
Okay, das, ah, Moment,

5094
04:03:30,500 --> 04:03:32,500
Moment, ich hab ja das Wichtigste vergessen.

5095
04:03:32,500 --> 04:03:34,500
Control-R, Control-N.

5096
04:03:34,500 --> 04:03:36,500
Muss ich noch schicken.

5097
04:03:36,500 --> 04:03:38,500
Und er sollte jetzt jede

5098
04:03:38,500 --> 04:03:40,500
Sekunde eigentlich eine Message schicken.

5099
04:03:40,500 --> 04:03:42,500
Äh, was ist denn

5100
04:03:42,500 --> 04:03:44,500
der aktuelle Standard, der am meisten benutzt wird?

5101
04:03:44,500 --> 04:03:46,500
1,1.

5102
04:03:46,500 --> 04:03:53,840
1,1.

5103
04:03:53,840 --> 04:03:55,840
1,1 ist so mit, mit Abstand, äh,

5104
04:03:55,840 --> 04:03:57,840
würd ich mal sagen, 95%

5105
04:03:57,840 --> 04:03:59,840
des Internet-Traffics wahrscheinlich.

5106
04:03:59,840 --> 04:04:04,690
So, mal gucken, ob das jetzt klappt.

5107
04:04:04,690 --> 04:04:06,690
Ne.

5108
04:04:06,690 --> 04:04:08,690
Okay, es funktioniert doch nicht

5109
04:04:08,690 --> 04:04:10,690
so, wie ich mir das, äh, ah, doch, guck mal hier,

5110
04:04:10,690 --> 04:04:12,690
Leute, jede Sekunde krieg ich

5111
04:04:12,690 --> 04:04:14,690
ein KQ geschickt. Das ist wunderbar,

5112
04:04:14,690 --> 04:04:16,690
um Logs zu schicken, äh,

5113
04:04:16,690 --> 04:04:18,690
per HTTP.

5114
04:04:18,690 --> 04:04:20,690
Und die Verbindung geht nicht zu, jetzt können wir

5115
04:04:20,690 --> 04:04:22,690
auch gleich noch mal gucken, jetzt

5116
04:04:22,690 --> 04:04:24,690
gucken wir doch grade mal,

5117
04:04:24,690 --> 04:04:28,390
ähm,

5118
04:04:28,390 --> 04:04:30,390
guckt euch mal den Speicher, oh, der Speicher wird

5119
04:04:30,390 --> 04:04:35,300
nicht freigegeben. Warum wird der nicht freigegeben?

5120
04:04:35,300 --> 04:04:37,300
Warum wird der Speicher nicht freigegeben?

5121
04:04:37,300 --> 04:04:42,790
Guckt mal, der Speicher wird nicht freigegeben.

5122
04:04:42,790 --> 04:04:44,790
Achso, weil die Schleife nie endet.

5123
04:04:44,790 --> 04:04:46,790
Lull, kann ja nicht gehen.

5124
04:04:46,790 --> 04:04:48,790
Die Schleife geht nie, okay, ähm,

5125
04:04:48,790 --> 04:04:53,320
also, wenn hier, wenn, wenn ein

5126
04:04:53,320 --> 04:04:55,320
Fehler zurückkommt,

5127
04:04:55,320 --> 04:04:57,320
ungleich null, ungleich null, okay.

5128
04:04:57,320 --> 04:04:59,320
Also, wenn das,

5129
04:04:59,320 --> 04:05:01,320
wenn das, äh,

5130
04:05:01,320 --> 04:05:03,320
ungleich null ist,

5131
04:05:03,320 --> 04:05:05,320
dann

5132
04:05:05,320 --> 04:05:07,320
break.

5133
04:05:07,320 --> 04:05:09,320
Oh, sieht das hässlich aus jetzt.

5134
04:05:09,320 --> 04:05:11,320
Ja.

5135
04:05:11,320 --> 04:05:13,320
Naja, ich werde den nicht

5136
04:05:13,320 --> 04:05:15,320
für Schönheit bezahlen.

5137
04:05:15,320 --> 04:05:17,320
Na, die Schleife,

5138
04:05:17,320 --> 04:05:19,320
ich hör ja nie auf

5139
04:05:19,320 --> 04:05:21,320
mit der Schleife hier, kein Wunder, dass das

5140
04:05:21,320 --> 04:05:23,320
Speicher nicht freigegeben wird, der hängt für Ewigkeiten

5141
04:05:23,320 --> 04:05:25,320
in dieser, in dieser Wildschleife jetzt drinnen.

5142
04:05:27,320 --> 04:05:30,690
So, Upload mal ein bisschen schneller.

5143
04:05:30,690 --> 04:05:32,690
Ich hab übelst Kohldampf.

5144
04:05:32,690 --> 04:05:38,500
Oder wie der Carsten jetzt sagen würde,

5145
04:05:38,500 --> 04:05:40,500
ich hab Knast. Das sagt man im Osten wohl

5146
04:05:40,500 --> 04:05:42,500
irgendwie so, ich hab Knast.

5147
04:05:42,500 --> 04:05:44,500
Klingt,

5148
04:05:44,500 --> 04:05:46,500
das klingt irgendwie wie Knast.

5149
04:05:46,500 --> 04:05:50,640
So, also,

5150
04:05:50,640 --> 04:05:52,640
warum ist das jetzt abgebrochen?

5151
04:05:52,640 --> 04:05:54,640
Du sollst nicht abbrechen.

5152
04:05:54,640 --> 04:05:56,640
Du sollst weiterschreiben.

5153
04:05:56,640 --> 04:05:58,640
Aber zumindest sieht man jetzt, der Speicherplatz wird

5154
04:05:58,640 --> 04:06:00,640
freigegeben, seht ihr?

5155
04:06:00,640 --> 04:06:02,640
Der Speicherplatz wird wieder freigegeben, oh, das ist schon mal gut.

5156
04:06:02,640 --> 04:06:08,000
Nach einem Keg W bricht der ab,

5157
04:06:08,000 --> 04:06:10,000
warum bricht der nach einem Keg W ab?

5158
04:06:10,000 --> 04:06:18,820
Das gehört sich aber nicht.

5159
04:06:18,820 --> 04:06:20,820
Na gut, dann mach ich das nochmal weg.

5160
04:06:20,820 --> 04:06:22,820
Und wir testen mal, wie viele Verbindungen,

5161
04:06:22,820 --> 04:06:24,820
kann man zwar nur einmal testen, aber wie viele

5162
04:06:24,820 --> 04:06:26,820
Verbindungen wir aufgebaut kriegen.

5163
04:06:26,820 --> 04:06:28,820
Das Break ist aber

5164
04:06:28,820 --> 04:06:30,820
conditional gewesen, dass

5165
04:06:30,820 --> 04:06:32,820
das nur abbricht, wenn er nicht richtig schreiben kann.

5166
04:06:32,820 --> 04:06:34,820
Und der müsste einen schreiben können, weil die Verbindung noch

5167
04:06:34,820 --> 04:06:36,820
läuft.

5168
04:06:36,820 --> 04:06:38,820
So, das ist das letzte, was wir ausprobieren.

5169
04:06:38,820 --> 04:06:40,820
Ich will mal gucken, wie viele Verbindungen

5170
04:06:40,820 --> 04:06:42,820
ich aufgebaut kriege. Also ich tipp

5171
04:06:42,820 --> 04:06:44,820
mal so auf,

5172
04:06:44,820 --> 04:06:46,820
keine Ahnung, 3 oder 4 oder

5173
04:06:46,820 --> 04:06:48,820
maximal 5. Mehr

5174
04:06:48,820 --> 04:06:50,820
gehen da nicht.

5175
04:06:50,820 --> 04:06:52,820
Aber für so ein kleines Kackding, also, ja,

5176
04:06:52,820 --> 04:06:54,820
ist das nicht verkehrt.

5177
04:06:54,820 --> 04:06:56,820
Okay, erste Verbindung.

5178
04:06:56,820 --> 04:06:58,820
Geht.

5179
04:06:58,820 --> 04:07:00,820
Erstes Mal, zack, 40 KB weg.

5180
04:07:00,820 --> 04:07:02,820
Na, nicht ganz, 30 KB weg. So, nächste Verbindung.

5181
04:07:02,820 --> 04:07:04,820
Zack.

5182
04:07:04,820 --> 04:07:06,820
Nochmal 30 KB weg.

5183
04:07:06,820 --> 04:07:08,820
Ja, ungefähr, ungefähr 30 KB pro

5184
04:07:08,820 --> 04:07:10,820
Verbindung. Zack.

5185
04:07:10,820 --> 04:07:12,820
Nächste Verbindung.

5186
04:07:12,820 --> 04:07:14,820
Wieder 30 KB. Jetzt wird der RAM aber

5187
04:07:14,820 --> 04:07:16,820
langsam schon knapp.

5188
04:07:16,820 --> 04:07:18,820
Oh, geht nicht mehr. Okay.

5189
04:07:18,820 --> 04:07:20,820
Drei Verbindungen.

5190
04:07:20,820 --> 04:07:22,820
Mehr geht nicht.

5191
04:07:22,820 --> 04:07:24,820
Memory Allocation fehlt. Mehr

5192
04:07:24,820 --> 04:07:26,820
geht nicht. Okay. Aber,

5193
04:07:26,820 --> 04:07:28,820
ich mein, was willst du mehr?

5194
04:07:28,820 --> 04:07:30,820
Ja.

5195
04:07:30,820 --> 04:07:32,820
Ich denk mal, wenn ich das Display nicht für das Display

5196
04:07:32,820 --> 04:07:34,820
äh, die ganze Display-Geschichte

5197
04:07:34,820 --> 04:07:36,820
braucht

5198
04:07:36,820 --> 04:07:38,820
auch nochmal so ungefähr

5199
04:07:38,820 --> 04:07:40,820
40 KB RAM.

5200
04:07:40,820 --> 04:07:42,820
Also, wenn wir die Display-Sache ein bisschen optimieren,

5201
04:07:42,820 --> 04:07:44,820
kriegen wir vielleicht noch eine Verbindung hin.

5202
04:07:44,820 --> 04:07:46,820
Jaja, brauch ich nur

5203
04:07:46,820 --> 04:07:48,820
für mich, also,

5204
04:07:48,820 --> 04:07:50,820
das reicht, wenn ich da eins, zwei

5205
04:07:50,820 --> 04:07:52,820
verbinde. Zwei Verbindungen wären gut.

5206
04:07:52,820 --> 04:07:54,820
Zwei Verbindungen wären gut,

5207
04:07:54,820 --> 04:07:56,820
weil, dann könnte ich

5208
04:07:56,820 --> 04:07:58,820
Logs mir angucken, Remote, während ich

5209
04:07:58,820 --> 04:08:00,820
nen Firmware-Update mache.

5210
04:08:00,820 --> 04:08:02,820
Zwei Verbindungen sind okay. Der Rest

5211
04:08:02,820 --> 04:08:04,820
ist jetzt nicht unbedingt,

5212
04:08:04,820 --> 04:08:11,080
ähm, das muss nicht sein.

5213
04:08:11,080 --> 04:08:13,080
Excellent.

5214
04:08:13,080 --> 04:08:15,080
Ich bin begeistert.

5215
04:08:15,080 --> 04:08:17,080
Wunderbar.

5216
04:08:17,080 --> 04:08:19,080
Leute. Chat.

5217
04:08:23,600 --> 04:08:27,040
Hab ich Fragen übersehen.

5218
04:08:27,040 --> 04:08:29,040
Wenn nicht, dann könnt ihr sie jetzt noch raushauen.

5219
04:08:29,040 --> 04:08:31,040
Guck jetzt nochmal durch.

5220
04:08:31,040 --> 04:08:49,400
Hast du WSL2 schon mal

5221
04:08:49,400 --> 04:08:51,400
probiert? Ja.

5222
04:08:51,400 --> 04:08:53,400
Wenn man keine Linux-VM benutzen

5223
04:08:53,400 --> 04:08:55,400
kann, ordentlich, und wenn man keine

5224
04:08:55,400 --> 04:08:57,400
Linux installieren kann auf irgendeiner anderen,

5225
04:08:57,400 --> 04:08:59,400
dann ist WSL2 nicht verkehrt.

5226
04:08:59,400 --> 04:09:09,810
So, äh, Moment. Chat.

5227
04:09:09,810 --> 04:09:11,810
Dissortion hat abonniert.

5228
04:09:11,810 --> 04:09:13,810
Habe ich gar nicht gesehen. Dankeschön. Zwei Monate.

5229
04:09:13,810 --> 04:09:43,300
Excellent.

5230
04:09:43,300 --> 04:09:45,300
Ne, ich glaube, ich habe nichts übersehen. Großartig.

5231
04:09:48,930 --> 04:09:50,930
Ne, ne, meine WSL2 löst meine

5232
04:09:50,930 --> 04:09:52,930
VM nicht ab. Das liegt ja schon daran, dass

5233
04:09:52,930 --> 04:09:54,930
äh, grafische Programme nicht gut funktionieren.

5234
04:09:54,930 --> 04:09:56,930
Mit WSL. Du kannst mit WSL2

5235
04:09:56,930 --> 04:09:58,930
zwar einen X-Server verwenden

5236
04:09:58,930 --> 04:10:00,930
für Windows, aber die X-Server für Windows

5237
04:10:00,930 --> 04:10:02,930
sind ja noch schlechter als die X-Server für Linux.

5238
04:10:02,930 --> 04:10:20,580
Ne, noch nicht.

5239
04:10:22,580 --> 04:10:30,440
Noch nicht.

5240
04:10:30,440 --> 04:10:32,440
Mein Chef hat geschrieben um 14.26 Uhr

5241
04:10:32,440 --> 04:10:34,440
Briefing 14.30 Uhr

5242
04:10:34,440 --> 04:10:36,440
bei mir. Bin ja froh, dass ich heute frei habe.

5243
04:10:36,440 --> 04:10:41,800
Im Oktober dann.

5244
04:10:41,800 --> 04:10:43,800
An Weihnachten gibt es COBOL-Stream, Leute.

5245
04:10:43,800 --> 04:10:45,800
Da gucken wir,

5246
04:10:45,800 --> 04:10:47,800
da programmieren wir ein bisschen COBOL.

5247
04:10:47,800 --> 04:10:49,800
Ich weiß gar nicht, wie man

5248
04:10:49,800 --> 04:10:51,800
darauf gekommen ist. Irgendeiner war so hartnäckig

5249
04:10:51,800 --> 04:10:53,800
und ich musste mich dann

5250
04:10:53,800 --> 04:10:55,800
darauf festlegen, dass wir Weihnachten COBOL

5251
04:10:55,800 --> 04:10:57,800
programmieren.

5252
04:10:57,800 --> 04:11:05,010
Das wird schrecklich, ey.

5253
04:11:05,010 --> 04:11:07,010
COBOL. Excellent.

5254
04:11:07,010 --> 04:11:09,010
Aber richtig, ja.

5255
04:11:09,010 --> 04:11:11,010
Da brauchst du das passende Gehirn

5256
04:11:11,010 --> 04:11:13,010
dafür, dass du COBOL programmieren kannst.

5257
04:11:13,010 --> 04:11:17,920
Exquisite-Hirn brauchst

5258
04:11:17,920 --> 04:11:23,090
du da. Also entweder

5259
04:11:23,090 --> 04:11:25,090
so oder so. Eins von beiden. So normale

5260
04:11:25,090 --> 04:11:27,090
Leute dazwischen, für die ist das nix.

5261
04:11:27,090 --> 04:11:31,430
Aber was sagt der denn?

5262
04:11:31,430 --> 04:11:33,430
Also ich bin heute wirklich

5263
04:11:33,430 --> 04:11:35,430
zufrieden mit dem,

5264
04:11:35,430 --> 04:11:37,430
was wir hingekriegt haben.

5265
04:11:37,430 --> 04:11:39,430
Also ich sag jetzt wir. Der Chat ist

5266
04:11:39,430 --> 04:11:41,430
ja auch immer mit dabei.

5267
04:11:41,430 --> 04:11:43,430
Aber ich bin da wirklich zufrieden mit,

5268
04:11:43,430 --> 04:11:45,430
dass wir da einen halbwegs

5269
04:11:45,430 --> 04:11:47,430
lauffähigen Webserver hinbekommen haben,

5270
04:11:47,430 --> 04:11:49,430
der zwar nur statische Seiten

5271
04:11:49,430 --> 04:11:51,430
ausliefern kann und das auch

5272
04:11:51,430 --> 04:11:53,430
nur auf einer Fahrt,

5273
04:11:53,430 --> 04:11:55,430
auf einer Uhr.

5274
04:11:55,430 --> 04:11:57,430
Aber ich mein mit SSL.

5275
04:11:57,430 --> 04:11:59,430
Und das funktioniert auch ziemlich gut.

5276
04:11:59,430 --> 04:12:01,430
Richtig nice.

5277
04:12:01,430 --> 04:12:03,430
1,7.

5278
04:12:03,430 --> 04:12:05,430
Excellent.

5279
04:12:05,430 --> 04:12:07,430
Passt ja das, was ich eingeblendet hab.

5280
04:12:07,430 --> 04:12:12,980
So. Also.

5281
04:12:12,980 --> 04:12:14,980
Chat.

5282
04:12:14,980 --> 04:12:16,980
Wenn jetzt keiner mehr irgendwelche Fragen hat,

5283
04:12:18,980 --> 04:12:20,980
dann

5284
04:12:20,980 --> 04:12:22,980
geh ich jetzt was

5285
04:12:22,980 --> 04:12:24,980
essen. Und vorher geh ich mal aufs

5286
04:12:24,980 --> 04:12:26,980
Klo. Wann ist der nächste Stream? Morgen

5287
04:12:26,980 --> 04:12:28,980
wahrscheinlich. Ich hab jetzt ja frei.

5288
04:12:28,980 --> 04:12:30,980
Das ist, Leute ich sag euch, das ist richtig

5289
04:12:30,980 --> 04:12:32,980
angenehm, weil wir 10 Tagen in Folge

5290
04:12:32,980 --> 04:12:34,980
äh, am Start

5291
04:12:34,980 --> 04:12:36,980
war, auf der Arbeit

5292
04:12:36,980 --> 04:12:38,980
und ohne Wochenende unterbringen. 10 Tage

5293
04:12:38,980 --> 04:12:40,980
in Folge, jetzt 4 Tage freizuhaben.

5294
04:12:40,980 --> 04:12:42,980
Das ist, das kommt einem extrem

5295
04:12:42,980 --> 04:12:47,380
erholsam vor.

5296
04:12:47,380 --> 04:12:49,380
Gibt's nicht. Nein.

5297
04:12:49,380 --> 04:12:51,380
ETF.

5298
04:12:51,380 --> 04:12:57,640
Was ich futter, äh.

5299
04:12:57,640 --> 04:12:59,640
Irgendwas normales zum Abendessen.

5300
04:12:59,640 --> 04:13:01,640
Ich ess jetzt kein Schnitzel oder Pizza

5301
04:13:01,640 --> 04:13:03,640
oder so. Irgendwie ein Brötchen oder sowas.

5302
04:13:03,640 --> 04:13:05,640
Gibt's auch mal wieder PoE?

5303
04:13:05,640 --> 04:13:07,640
Ich weiß, die neue Season fängt jetzt gleich an

5304
04:13:07,640 --> 04:13:09,640
oder hat schon angefangen. Ich komm da grad

5305
04:13:09,640 --> 04:13:11,640
nicht dazu, mich da auch einzulesen.

5306
04:13:11,640 --> 04:13:13,640
PoE muss man ja immer ein bisschen Theorie craften.

5307
04:13:13,640 --> 04:13:15,640
Ach, heute um

5308
04:13:15,640 --> 04:13:17,640
10? Nee.

5309
04:13:17,640 --> 04:13:19,640
Ich krieg das grad nicht hin.

5310
04:13:19,640 --> 04:13:21,640
Ich bin da auch grad nicht drin,

5311
04:13:21,640 --> 04:13:23,640
was sich da geändert hat und sowas.

5312
04:13:23,640 --> 04:13:27,200
Wahrscheinlich erst

5313
04:13:27,200 --> 04:13:29,200
nächste Season wieder. Oder mich

5314
04:13:29,200 --> 04:13:31,200
packts irgendwie am Wochenende noch.

5315
04:13:31,200 --> 04:13:33,200
Aber dann stream ich

5316
04:13:33,200 --> 04:13:35,200
wieder nicht, weil dann bin ich ja am

5317
04:13:35,200 --> 04:13:39,480
Kreisegrinden. Wir machen

5318
04:13:39,480 --> 04:13:41,480
morgen weiter. Wir

5319
04:13:41,480 --> 04:13:43,480
erweitern morgen noch den Webserver,

5320
04:13:43,480 --> 04:13:45,480
um

5321
04:13:45,480 --> 04:13:47,480
die

5322
04:13:47,480 --> 04:13:49,480
Postrequests, die Loggeschichte

5323
04:13:49,480 --> 04:13:51,480
und dass der überhaupt

5324
04:13:51,480 --> 04:13:53,480
HTTP-Requests ordentlich parsen kann.

5325
04:13:53,480 --> 04:13:58,450
Excellent.

5326
04:13:58,450 --> 04:14:02,210
So machen wir das.

5327
04:14:02,210 --> 04:14:04,210
Was, die Deutsche Telekom?

5328
04:14:04,210 --> 04:14:09,640
What?

5329
04:14:09,640 --> 04:14:11,640
Ach so, die

5330
04:14:11,640 --> 04:14:13,640
sponsoren

5331
04:14:13,640 --> 04:14:15,640
irgendein LOL-Turnier wahrscheinlich.

5332
04:14:20,800 --> 04:14:22,800
Ja, das hat die bestimmt ordentlich was gekostet, weil

5333
04:14:22,800 --> 04:14:24,800
das macht ja heute keiner

5334
04:14:24,800 --> 04:14:29,330
mehr umsonst.

5335
04:14:29,330 --> 04:14:31,330
Was machen die sonst so?

5336
04:14:31,330 --> 04:14:33,330
Also LOL juckt mich ehrlich gesagt nicht die Bohne.

5337
04:14:33,330 --> 04:14:35,330
Was machen die denn sonst so? Videos.

5338
04:14:35,330 --> 04:14:37,330
Deutsche Telekom. Videos.

5339
04:14:37,330 --> 04:14:39,330
Was machen die sonst so?

5340
04:14:39,330 --> 04:14:41,330
Cache Royale.

5341
04:14:41,330 --> 04:14:45,670
Was?

5342
04:14:45,670 --> 04:14:54,100
Clash Royale? Ladder grind?

5343
04:14:54,100 --> 04:14:56,100
Clash Royale?

5344
04:14:56,100 --> 04:15:01,520
Äh.

5345
04:15:01,520 --> 04:15:03,520
Scheint voll angesagt zu sein.

5346
04:15:03,520 --> 04:15:09,200
4,47 Tausend Views.

5347
04:15:09,200 --> 04:15:11,200
Was ist denn mit der Telekom?

5348
04:15:11,200 --> 04:15:13,200
Warum streamt die Telekom

5349
04:15:13,200 --> 04:15:15,200
so genial?

5350
04:15:15,200 --> 04:15:17,200
Das sind doch bestimmt keine Leute von der Telekom.

5351
04:15:17,200 --> 04:15:19,200
Das sind doch irgendwelche

5352
04:15:19,200 --> 04:15:21,200
eingekauften, halbwegs bekannten Streamer

5353
04:15:21,200 --> 04:15:27,270
Dudes, oder?

5354
04:15:27,270 --> 04:15:29,270
Also ich kenn sie nicht, aber das ist bestimmt

5355
04:15:29,270 --> 04:15:35,840
keine Telekom-Leute.

5356
04:15:35,840 --> 04:15:37,840
Ja, Leute. Schön, dass ihr

5357
04:15:39,840 --> 04:15:41,840
alle dabei wart heute.

5358
04:15:41,840 --> 04:15:43,840
Wir sehen uns wahrscheinlich morgen im Stream.

5359
04:15:43,840 --> 04:15:45,840
Macht's gut, ich geh jetzt was essen. Bis denn.

5360
04:15:45,840 --> 04:15:47,840
See you.
