WEBVTT

00:00.000 --> 00:29.980
Untertitelung des ZDF, 2020

00:30.000 --> 00:59.980
Bis zum nächsten Mal.

01:00.000 --> 01:12.340
So.

01:14.340 --> 01:16.520
Ich habe zum Einstimmen erstmal den

01:16.520 --> 01:19.360
ältesten Java-Joke,

01:19.400 --> 01:20.300
den ich gefunden habe.

01:23.300 --> 01:24.520
Machen wir hier ein bisschen was

01:24.520 --> 01:26.380
spannenderes.

01:30.000 --> 01:41.600
Ja, so ist gut, ja.

01:43.740 --> 01:45.420
Instant Legacy Code.

01:45.720 --> 01:53.320
Also, ich muss euch warnen, ich habe keine Ahnung von Java und ich habe keine Ahnung von Spring Boot.

01:56.820 --> 01:57.580
Aber.

02:00.000 --> 02:03.960
Ich kann euch sagen,

02:04.620 --> 02:07.120
warum ich Java

02:07.120 --> 02:09.080
beziehungsweise Springwood lernen will.

02:10.740 --> 02:11.960
Das ist der größte

02:11.960 --> 02:13.500
World Tourist. Wieso?

02:14.180 --> 02:14.400
Warum?

02:20.760 --> 02:22.120
Ich meine, ich werde es ja sehen

02:22.120 --> 02:23.740
und wahrscheinlich werde ich übelst rumflamen

02:23.740 --> 02:26.780
gleich, weil es nicht ASP.NET Core ist.

02:27.780 --> 02:28.300
Boah.

02:30.000 --> 02:36.680
ist Springboot nicht der neueste Shit bei Java, wie man seine Anwendungen macht?

02:37.660 --> 02:40.520
Dachte eigentlich, das ist so das, was da jeder verwendet.

02:42.240 --> 02:46.740
Also ich weiß, bei uns auf der Arbeit zumindest ist das, glaube ich, zum größten Teil alles Springboot.

02:48.020 --> 02:49.660
Ich mach mal kurz meine VM an.

02:52.520 --> 02:54.900
Du arbeitest hauptberuflich, damit es kotzt dich an.

02:54.900 --> 02:59.280
vielleicht kotzt es sich an weil du hauptberuflich damit arbeitest weil du

02:59.280 --> 03:03.900
darin sachen machen muss die du nicht nicht gut findest und nicht spannend

03:03.900 --> 03:06.260
findet

03:11.540 --> 03:17.700
oder wird sich wird sich vielleicht weniger an kotzen stell dir vor du

03:17.700 --> 03:27.780
guck mal packet tracer mittlerweile funktionieren immer noch nicht kacke stell dir vor du könntest

03:27.780 --> 03:38.080
anstatt spring boot not jasper wenn du willst du weniger kotzen also ich wahrscheinlich nicht weil

03:38.080 --> 03:41.920
ich mag noch erst für backendsachen überhaupt nicht noch erst ist für mich immer so ein

03:41.920 --> 03:45.940
notwendiges übel wenn ich irgendwelchen frontend kram mache ich würde nie auf die idee kommen mit

03:45.940 --> 03:49.400
ExpressJS irgendwelches JavaScript-Backend-Zeug zu machen.

03:50.740 --> 03:55.940
Oder wird es dich weniger nerven, wenn du .NET C Sharp verwenden könntest mit ASP.NET Core?

03:56.160 --> 03:59.700
Das würde mich persönlich weniger nerven, weil ich ASP.NET Core ziemlich nice finde.

04:00.580 --> 04:02.800
Ja, wir machen das, wir machen das.

04:02.940 --> 04:04.560
Also ich habe eine Sache schon gemacht.

04:04.680 --> 04:09.280
Ich habe mir ein 5 Minuten Getting Started Tutorial angeguckt.

04:09.740 --> 04:11.600
So ein 5 Minuten 30 Video auf YouTube.

04:12.560 --> 04:15.580
Im Prinzip ging es da eigentlich nur darum, dass man IntelliJ verwenden soll.

04:15.940 --> 04:26.800
das war es eigentlich das hier ist spring die seite habe ich auch schon gefunden aber angeblich

04:26.800 --> 04:31.900
geht das über intelli j habe ich intelligenz ich habe immer intelligenter die keckweite

04:31.900 --> 04:37.000
ich bin ja hier nicht eingeloggt

04:37.000 --> 04:50.200
rissa toolbox app ich wies da gar nichts da geht es vielleicht immer intellij ultimate ich hoffe

04:50.200 --> 04:55.420
dass jack dass ich hier schon mal weil ich habe ja das all desktop package spandell ich bin bloß

04:55.420 --> 04:59.560
nicht eingeloggt ich hoffe der kommt mir jetzt nicht um die ecke mit sie müssen sich einloggen

04:59.560 --> 05:01.480
oder sonstwas.

05:05.000 --> 05:06.080
Fünf Streams

05:06.080 --> 05:07.400
Streak. Pog.

05:10.160 --> 05:11.660
Ich arbeite damit auch erst sechs Monate,

05:11.800 --> 05:13.500
aber es ist überladen von Boilerplate Code.

05:13.580 --> 05:15.500
Oh ja, da kann ich mir vorstellen, da ist ja

05:15.500 --> 05:16.720
Java irgendwie bekannt für.

05:21.460 --> 05:23.680
Also Dependency Injection im gewissen

05:23.680 --> 05:25.560
Rahmen finde ich eigentlich ganz

05:25.560 --> 05:27.600
nice. Also so

05:27.600 --> 05:29.080
wie sie es in ASP.NET Core haben.

05:29.560 --> 05:32.740
Man muss es aber auch nicht übertreiben.

05:33.740 --> 05:33.980
Java.

05:34.380 --> 05:34.520
Ja.

05:35.600 --> 05:36.000
Java.

05:37.080 --> 05:38.700
Ich kann euch auch erzählen, warum Java.

05:38.820 --> 05:39.760
Wollt ihr wissen, warum Java?

05:40.400 --> 05:44.300
Ist gar nicht so, dass ich jetzt gesagt habe, ich habe mal richtig Bock auf Java.

05:44.440 --> 05:46.000
Wobei, das stimmt nicht.

05:46.620 --> 05:49.000
So ein bisschen Bock, mir das mal anzugucken.

05:49.120 --> 05:51.940
Zumindest mal so kurz.

05:52.220 --> 05:53.480
Habe ich ja schon eine Weile.

05:56.060 --> 05:57.620
Business Enterprise Developer.

05:57.620 --> 05:58.260
Ja.

05:58.260 --> 06:03.760
dafür werde ich nicht aber dafür brauchst du ja war das ist klar bis der centerpreis

06:03.760 --> 06:13.000
stonks ist vieles in java kobold stream hat man auch schon das kann man kann ich die sachen aus

06:13.000 --> 06:21.260
rider importieren und der check das also eigentlich nur die key maps der rest des rest brauche ich

06:21.260 --> 06:28.140
nicht editor von toolbar notifizieren das ist gut das kannst du importieren

06:28.140 --> 06:33.220
key maps importieren das finde ich eigentlich ganz gut

06:39.400 --> 06:42.700
intelli j

06:43.700 --> 06:50.360
ist es jetzt ultimate woran sieht man das ultimate edition ja sehr schön

06:50.360 --> 06:50.960
Pogu.

06:52.920 --> 06:55.320
Hast du Urlaub? Ich hab heute tatsächlich Urlaub, aber nur heute.

06:55.620 --> 06:57.660
Nur heute. Ich war heute beim Hautarzt

06:57.660 --> 06:59.460
und der hat mir

06:59.460 --> 07:01.820
so einen ganz kleinen Leberfleck rausgeschnibbelt.

07:04.200 --> 07:05.160
Nachdem das zu einer

07:05.160 --> 07:07.780
irgendwie sehr unpassenden Uhrzeit war,

07:07.780 --> 07:08.620
also quasi um 10,

07:09.580 --> 07:12.260
da kannst du vorher nichts mehr machen und danach auch nichts mehr machen

07:12.260 --> 07:13.680
und dementsprechend

07:13.680 --> 07:14.640
hab ich den Tag Urlaub genommen.

07:17.840 --> 07:19.700
Java Trace Logs sind auch die Hölle.

07:19.700 --> 07:24.620
egal wir programmieren immer fehlerfrei da braucht man keinen die bar gegen keine

07:24.620 --> 07:28.440
loks keine dokumentation keine kommentare und vor allem keine tests

07:28.440 --> 07:30.920
easy

07:32.420 --> 07:37.580
wieso nutzt du nicht eklips will ich mich selbst geißeln oder was eklips

07:37.580 --> 07:39.860
aller

07:39.860 --> 07:42.380
Eclipse

07:42.380 --> 07:49.260
Wie hießen das andere Ding?

07:49.360 --> 07:50.100
Es gab früher

07:50.100 --> 07:53.320
Drei große Java-IDEs

07:53.320 --> 07:54.660
Das war

07:54.660 --> 07:56.440
Eclipse, ist ja das

07:56.440 --> 07:58.500
Das uralteste schlechthin

07:58.500 --> 08:00.280
Nach Eclipse, NetBeans

08:00.280 --> 08:02.280
NetBeans, genau

08:02.280 --> 08:05.180
NetBeans

08:05.180 --> 08:08.160
NetBeans hatte ich früher mal installiert

08:08.160 --> 08:13.440
weiß ich noch in meiner ausbildung net beans weil es dafür ich weiß gar nicht mehr was gab

08:13.440 --> 08:20.640
es dann ein gutes python plugin damals für oder irgendwas aus irgendwelchen gründen die nicht java

08:20.640 --> 08:30.100
waren hatte ich net beans installiert aber schon ewig her hast du tipps für mich wie ich sie schaap

08:30.100 --> 08:36.680
lernen kann bin fiesi und habe basisprogramm also ich habe einen tipp für dich der ist zwar den gebe

08:36.680 --> 08:41.280
ich immer der ist nicht so top aktuell aber es gibt ein kostenloses deutsches

08:41.280 --> 08:46.820
buch das ist älter das ist von 2012 dementsprechend empfehle ich auch nur

08:46.820 --> 08:51.800
noch die hälfte von dem buch aber von den basics her finde ich ist das eine

08:51.800 --> 08:59.960
super einleitung zumal es kostenlos ist zwar war da mal kann man was trinken

08:59.960 --> 09:04.600
Galileo Open Book C Sharp.

09:08.180 --> 09:09.100
Das da.

09:12.440 --> 09:17.480
Allerdings, also generell, die Grundlagen gelten ja immer noch.

09:18.080 --> 09:20.640
Da fehlt mittlerweile einiges, was neu ist.

09:21.340 --> 09:26.560
Aber in C Sharp ist ja nie so richtig was obsolet geworden.

09:26.560 --> 09:41.740
ich würde mir das ganze angucken bis hier bis 16 du darfst dich alles quasi so als also gerade wenn

09:41.740 --> 09:45.460
es hier geht hierbei nur die serialisieren es macht man nicht mehr xml kannst du auch vergessen

09:45.460 --> 09:50.800
also nicht nicht alles was da drin steht ist wirklich auf dem top aktuellen stand weil das

09:50.800 --> 09:58.120
von 2012 aber hier allgemein eine grundlage ist die sharp klassendesign vererbung polymorphism

09:58.120 --> 10:03.700
wie es auf englisch was ist übrigens sind sie schafft so gar nicht gibt genau mit interface

10:03.700 --> 10:12.980
ist nur delegates events strakt in am sling generics das ist nicht verkehrt soll ich dann

10:12.980 --> 10:20.780
direkt wpf lernen wie gesagt nur bis nur bis 16 den rest kannst du das kannst du ignorieren

10:20.780 --> 10:28.940
nur bis 16 inklusive 16 würde ich mir der pf kannst du knicken es sei denn du möchtest

10:28.940 --> 10:35.900
windows desktop only anwendungen bauen und hast speziellen grund für wpf aber ansonsten

10:35.900 --> 10:42.000
würde ich generell muss ich sagen so gut entwicklung

10:42.000 --> 10:51.220
also mittlerweile bin ich der meinung warum nicht einfach einen embedded web server mit

10:51.220 --> 10:58.140
der der den web interface mit ausliefert wenn man irgendwas wie mäßiges braucht

10:58.140 --> 11:05.940
weil alles andere ist irgendwie kacke

11:05.940 --> 11:14.460
also dass man meiner meinung nach beste cross-plattform desktop desktop cross

11:14.460 --> 11:20.940
plattform wie framework was es gibt ist cute oder qt das problem dabei ist dass

11:20.940 --> 11:29.840
du da früher oder später nicht an c++ vorbeikommt für mobile gibt es flatter für alles gibt es

11:29.840 --> 11:37.520
elektron aber sieht schon dass alles irgendwie nichts geiles ja microsoft hat

11:37.520 --> 11:41.960
es richtig verkackt die hätten

11:49.480 --> 11:54.060
bist du dir sicher dass z++ geil ist

11:59.840 --> 12:07.420
Naja, mich hat ja jemand letztens nach meinen Top 5 von 5 Programmiersprachen gefragt und da war ja auch C++ dabei.

12:07.800 --> 12:08.980
Aber ich habe auch erklärt warum.

12:10.360 --> 12:12.620
Weil auch eklige Sachen manchmal Spaß machen können.

12:17.320 --> 12:19.800
Nicht weil C++ die geilste Sprache ist.

12:19.800 --> 12:34.320
also gui sachen würde ich heutzutage gar nicht mehr machen einfach irgendein embedded web server

12:34.320 --> 12:42.800
der website web web ausliefert und gut ist mit der feste fährst du besser als dich mit desktop

12:42.800 --> 12:48.380
ui frameworks auseinanderzusetzen gibt es einfach nichts gescheites das hat microsoft wirklich

12:48.380 --> 12:50.600
kolossal verkackt.

12:51.500 --> 12:52.740
Die hätten die Chance gehabt,

12:52.860 --> 12:54.540
einen Cross-Plattform-WPF zu machen.

12:54.880 --> 12:55.760
Wobei, ganz ehrlich,

12:56.240 --> 12:57.760
WPF ist halt auch irgendwie Schrott.

12:57.940 --> 12:59.000
Ich mag WPF nicht.

13:02.060 --> 13:02.580
Also,

13:03.720 --> 13:06.700
wenn ich dieses XML-GUI-Gedöns

13:06.700 --> 13:07.980
schon sehe, kriege ich Anfälle.

13:08.440 --> 13:10.460
Ja, man könnte jetzt sagen, warum kriegst du bei WPF

13:10.460 --> 13:12.480
XML Anfälle und HTML

13:12.480 --> 13:14.080
ist okay. Ja gut,

13:14.400 --> 13:16.360
HTML ergibt irgendwie noch Sinn.

13:16.360 --> 13:22.860
WPF XML Gedöns ist einfach nur total doppelt gemoppelt und dreifach den gleichen Shit geschrieben

13:22.860 --> 13:29.060
und überhaupt nicht selbsterklärend und ich, also dieses ganze XAML Zeug, das ist Schrott, ich mag das nicht.

13:29.980 --> 13:32.000
Dann mach ich lieber HTML für irgendeine Webseite.

13:33.080 --> 13:39.520
Und mit HTML und JavaScript hast du automatisch gleich ein Cross-Plattform-fähiges UI dabei.

13:40.120 --> 13:42.200
Ja genau, Avalonia gibt es mittlerweile.

13:42.200 --> 13:53.660
avalon ui das ist ja ein cross-plattform paket framework aber das halt nicht von microsoft selbst

13:53.660 --> 14:02.180
aber trotzdem das ist ganz gut aber da hast halt auch die ganze geschichte und wie findest

14:02.180 --> 14:10.940
es also ich finde es eklig ich habe hier eine ganz fettes wpf buch noch stehen irgendwo was

14:10.940 --> 14:12.820
gar nicht, wo ich es hinhab. Das hat 1200

14:12.820 --> 14:14.720
Seiten oder sowas. Das ist ein ultra fettes

14:14.720 --> 14:16.820
WPF-Buch. Also ich hab mich damit auch

14:16.820 --> 14:18.500
schon mal beschäftigt. Aber das ist noch WPF

14:18.500 --> 14:20.660
von, hast du nicht gesehen, als es noch

14:20.660 --> 14:22.020
neu und angesagt war.

14:23.980 --> 14:24.860
Ja, und

14:24.860 --> 14:26.680
also ich hab mich damit schon beschäftigt. Ich hab da auch

14:26.680 --> 14:28.700
kleine Sachen mitgemacht, aber ich mag es

14:28.700 --> 14:29.620
überhaupt nicht.

14:32.300 --> 14:32.660
So.

14:33.220 --> 14:34.920
Also, was wollte ich denn jetzt eigentlich machen?

14:36.920 --> 14:38.740
Achso, wir müssen glaube ich noch Java-Zeug

14:38.740 --> 14:40.160
überhaupt erst mal installieren, hä?

14:40.940 --> 14:45.120
also gut wir haben das war package updates

14:45.120 --> 14:56.320
bräuchte schon auf die 48 stunden was von 48 stunden woche ich freue mich schon drauf dass

14:56.320 --> 15:00.600
das deutschlandticket wieder probleme macht und hoffentlich nicht abgeschafft wird aber

15:00.600 --> 15:05.940
zumindest mal teurer wird ich kann es kaum erwarten ich hoffe wir kehren nie wieder

15:05.940 --> 15:07.120
zurück zu diesem

15:07.120 --> 15:09.860
Verkehrsverbund-Chaos.

15:10.760 --> 15:11.120
Wie es

15:11.120 --> 15:12.660
vor noch ein paar Jahren war.

15:17.840 --> 15:19.720
Bei Eclipse hättest du das nicht machen müssen.

15:19.860 --> 15:21.160
Warum? Du meinst, weil das

15:21.160 --> 15:22.700
hätte Java als die...

15:22.700 --> 15:24.940
Was hat das denn für Schmerzen, Mann?

15:27.680 --> 15:29.600
Ist irgendwelche Mirrors, die kaputt sind?

15:30.300 --> 15:32.040
Weil Eclipse das mitbringt, oder was?

15:32.040 --> 15:33.080
Ich reboote nochmal.

15:34.940 --> 15:35.460
Reboot.

15:35.940 --> 15:48.940
Ach ja, während die Kiste rebootet, ich wollte euch ja erzählen...

15:48.940 --> 15:51.000
Boah, der Reboot ging aber schnell, müsst ihr was sagen, oder?

15:52.460 --> 15:54.720
Wie lange hat der Reboot jetzt gebraucht?

15:56.060 --> 15:57.260
Acht Sekunden oder so?

16:02.720 --> 16:03.320
Na ja.

16:03.320 --> 16:06.020
Peppo ist am drücken.

16:14.300 --> 16:16.840
Der bringt den Braunbär nach der Amstatt gerade.

16:25.880 --> 16:26.360
So.

16:28.220 --> 16:29.900
Also, ich wollte euch ja erzählen,

16:29.900 --> 16:39.800
warum warum java machen macht kommen intel in jay in telly jay alt remade war schon mal auf

16:39.800 --> 16:45.860
können wir jetzt gleich gleich loslegen wie gesagt ich habe keinen platzen schimmer sein

16:45.860 --> 16:52.220
sieg gemacht haben wir fünf minuten quickstart things tutorial angeguckt und und das einzige

16:52.220 --> 16:55.640
was mir davon so richtig gemerkt habe ist eigentlich benutzt intellij das hätte ich

16:55.640 --> 17:00.020
aber auch so gemacht weil ich ja dass jetbrains all desktop package ab also

17:00.020 --> 17:03.340
irgendwie muss man den kram ja auch mal benutzen

17:03.640 --> 17:08.780
gucken wie groß ist eigentlich mein achten muss man gar nicht wahrscheinlich

17:08.780 --> 17:12.320
wahrscheinlich ist die hälfte meiner festplatte ist wahrscheinlich voll mit

17:12.320 --> 17:19.080
intellij idees jede idee ist bestimmt 8 gig oder so installiert habe ich hier

17:19.080 --> 17:21.080
64 oder so haben wir

17:21.080 --> 17:23.220
ähm

17:23.220 --> 17:25.520
Gig nur für

17:25.520 --> 17:27.560
IntelliJ Zeug oder sowas.

17:30.200 --> 17:30.640
Ne.

17:31.080 --> 17:33.300
Ne, warte mal. 6x8 ist nicht 64. Wie komme ich auf

17:33.300 --> 17:35.040
64? 8x8 ist 64, ne?

17:35.520 --> 17:36.540
6x8 ist 48.

17:41.100 --> 17:41.820
48 Gig.

17:41.880 --> 17:42.700
Ist aber immer noch viel.

17:46.420 --> 17:46.860
So.

17:46.860 --> 17:48.500
Also, was wollt ihr? Genau.

17:48.800 --> 17:49.760
Ich wollte euch erzählen,

17:50.060 --> 17:51.440
Storytime-Modus,

17:52.040 --> 17:53.840
warum Java

17:53.840 --> 17:57.060
und Java 25 nicht gerade

17:57.060 --> 17:59.240
erst released. Kann man nachgucken,

17:59.340 --> 18:00.560
was man für eine Java-Version hat?

18:00.640 --> 18:02.980
Minus Version mit einem Minus ist bei Java,

18:03.120 --> 18:04.520
glaub ich. 25.

18:05.020 --> 18:07.060
Zack, guck mal hier. Pleading Edge.

18:07.360 --> 18:08.620
Top aktuell sind wir wieder.

18:11.460 --> 18:12.540
25.01

18:16.860 --> 18:23.980
Genau, also warum Java?

18:25.620 --> 18:32.000
Ich hatte gestern, also ich habe das schon eine Weile mir überlegt, hätte ich eigentlich mal Bock drauf mir anzugucken.

18:32.520 --> 18:39.020
Aber jetzt erst recht, weil ich hatte gestern mit meinem Chef auf der Arbeit einen Termin.

18:39.020 --> 18:51.140
Und da gab es so jährliche, wie nennt man das so, was es so für Förderungsmöglichkeiten gibt und so Karriereweg und so.

18:52.780 --> 18:55.640
Und Fördergespräch, das gibt es einmal im Jahr bei uns.

18:56.260 --> 19:04.300
So, und mein Chef hat mir erzählt, nee, nee, Mitarbeitergespräch habe ich ziemlich oft mit dem.

19:04.300 --> 19:07.060
Nee, das ist so was, wo man auch das Zeug ausfüllen muss.

19:07.060 --> 19:11.340
Das ist nicht so die Zieldefinition, die gibt es immer bei uns Anfang des Jahres.

19:11.500 --> 19:13.260
Das ist so ein anderes jährliches Ding, keine Ahnung.

19:13.600 --> 19:15.840
Irgendwas mit Fördergespräch, frag mich nicht, ist auch egal.

19:16.900 --> 19:17.000
So.

19:20.940 --> 19:33.060
Und der hat mir erzählt, dass die jetzt quasi ein neues Programm, kann man es jetzt nicht wirklich nennen,

19:33.060 --> 19:50.120
die haben so neue Leitlinien oder sowas für Leute in der IT und zwar ist denen aufgefallen, dass es besser ist, wenn Leute unzufrieden sind in ihrer aktuellen Position, ich versuche mal so die Kurzfassung,

19:50.120 --> 20:06.860
Ja, denen ist aufgefallen, dass es besser ist, wenn Leute unzufrieden sind in ihrer aktuellen Position, wo sie sind und was sie machen, dann ist es besser, denen eine Alternative anzubieten innerhalb des gleichen Unternehmens, anstatt zu riskieren, dass die abhauen.

20:06.860 --> 20:09.580
finde ich eigentlich eine gute Erkenntnis.

20:10.200 --> 20:10.240
Oder?

20:11.180 --> 20:12.220
Klingt auch irgendwie logisch.

20:12.960 --> 20:14.940
Es sind ja gescheite Leute zum größten Teil,

20:15.020 --> 20:17.100
dass man guckt, dass man die behält und denen vielleicht

20:17.100 --> 20:19.040
was anderes gibt, wo sie mehr Bock drauf haben, anstatt

20:19.040 --> 20:20.820
dass sie abhauen. Macht ja irgendwie Sinn.

20:21.800 --> 20:23.500
Und im Zuge dessen

20:23.500 --> 20:24.820
hat er mir eine

20:24.820 --> 20:27.320
lange PowerPoint-Präsentation gezeigt.

20:27.460 --> 20:29.100
Zumindest haben die jetzt

20:29.100 --> 20:29.780
die Möglichkeit,

20:31.380 --> 20:33.300
das konnte sie theoretisch vorher auch schon

20:33.300 --> 20:34.420
machen, aber das ist jetzt quasi so

20:34.420 --> 20:36.660
versicherungsweit, wie das Ganze

20:36.660 --> 20:43.720
laufen soll und zwar kannst du jetzt dieses angebot nutzen aber du musst

20:43.720 --> 20:47.400
nicht gleich das team wechseln so und ich habe ich wollte schon eine weile

20:47.400 --> 20:55.620
mal zu unseren java entwicklern sommer für 14 tage oder sowas einfach

20:55.620 --> 21:00.180
mal 14 tage ins wenn ich jetzt nach anwendungs entwickler team stimmt es

21:00.180 --> 21:02.980
nicht da gibt es ja einige aber ich sage jetzt aber weil so zu unseren

21:02.980 --> 21:08.020
anwendungsentwicklern zu unseren anwendungsentwicklern und dort gibt es

21:08.020 --> 21:13.820
auch ein eigenes der fordsteam warum es das bei uns nicht gibt keine ahnung für

21:13.820 --> 21:17.440
bei uns wird fast schon mehr dazu passen weil das was wir machen ist ja eigentlich

21:17.440 --> 21:24.580
90 prozent überschneidung damit aber wurscht und da wollte ich war für 14

21:24.580 --> 21:29.960
tage hin und ich habe mir gedacht das ist ja business enterprise und ich weiß

21:29.960 --> 21:36.200
dass die filial war machen da ist es bestimmt nicht verkehrt wenn ich mal ein bisschen wenigstens

21:36.200 --> 21:44.780
ahnung habe von java und spring weil ich weiß oder spring boot sagen was spring was was spring

21:44.780 --> 21:51.080
ohne boot was bringt nicht mal dieses dieses komische framework von java das ganz alte hieß

21:51.080 --> 21:58.700
das nicht so das war so ein bisschen schwarz und weiß und super hässlich aussah oder oder

21:58.700 --> 21:59.540
Oder hieß das anders?

22:00.220 --> 22:01.860
Swing! Ach, Swing war das nicht.

22:01.960 --> 22:03.420
Spring. Swing.

22:04.900 --> 22:06.200
Ja, siehste, ich hab von Java

22:06.200 --> 22:07.880
keine Ahnung. Aber ihr habt recht, Chat.

22:08.380 --> 22:09.420
Swing. Genau.

22:11.880 --> 22:12.240
Und deswegen

22:12.240 --> 22:14.200
hab ich mir gedacht, ich guck mir einfach mal ein bisschen Java an.

22:15.760 --> 22:16.460
Und was

22:16.460 --> 22:18.240
gibt es Besseres, um seine Java

22:18.240 --> 22:19.840
Skills zu üben,

22:20.380 --> 22:22.120
wie kekws

22:22.120 --> 22:22.600
Service

22:22.600 --> 22:25.860
in Java neu programmieren?

22:25.860 --> 22:34.980
keck vs service ist ja prinzipiell schon mal die beste web anwendung aller zeiten

22:34.980 --> 22:42.860
nicht wegen swing wegen spring schaue ich mir spring boot schaue ich mir ja war an

22:42.860 --> 22:48.580
ich schaue mir ja war eigentlich an und springen dass ich mich auskennen wenn ich

22:48.580 --> 22:55.560
mal 14 tage zu unseren anwendungsentwicklern gehe ich habe das aber noch gar nicht offiziell

22:55.560 --> 23:00.300
eingetütet oder sonst was aber wer schon mal nicht verkehrt war ein bisschen plan davon hat

23:00.300 --> 23:05.940
oder dass man aber was machen kann ja kek wie es das service ist wirklich hier world first high

23:05.940 --> 23:12.480
iq web service was das macht ist ich bin mir gar nicht sicher ob ich das ding hier noch irgendwo

23:12.480 --> 23:22.420
laufen habe kek wie es das service guck mal weg wie wie gibt es nicht ich habe kein kek wie es

23:22.420 --> 23:32.740
service geklont was soll das denn jetzt clown keck wss ups das ist eine dotnet web anwendung

23:32.740 --> 23:42.040
mit irgendwelchen enzimel terraformen gedöns wo wir jetzt nach sachen aufbaut das brauche

23:42.040 --> 23:51.220
heute nicht ich starte das mal ich hoffe ich kann das überhaupt starten mein dotnet ist so

23:51.220 --> 23:57.360
neu und das projekt so alt und hier dort mit ran probieren aus

23:58.680 --> 24:01.680
überhaupt funs

24:04.740 --> 24:10.280
na ja ich installiere sich dort nennt aber kann ich nicht einfach moment kann

24:10.280 --> 24:17.520
ich nicht einfach sagen nicht programm cs wissen das ding ja

24:17.520 --> 24:22.680
Kann ich nicht einfach sagen, das ist ein .NET 9 Projekt?

24:23.520 --> 24:24.940
Und dann geht's einfach?

24:27.960 --> 24:30.060
Ah, ah, ah, ah, ja, Funst, easy.

24:30.600 --> 24:33.060
Also was CAC WSService macht, ist folgendes.

24:34.940 --> 24:37.660
Das rotiert random einfach dieses Bild, okay?

24:37.980 --> 24:41.140
Wenn man auf die Webseite, wenn man auf den Endpunkt geht.

24:43.280 --> 24:44.540
Mehr macht das nicht.

24:44.540 --> 24:47.520
Aber das ist eine super Anwendung

24:47.520 --> 24:49.060
Um so neue Sachen

24:49.060 --> 24:50.620
Um so neue Sachen zu üben

24:50.620 --> 24:51.220
Ja

24:51.220 --> 24:54.200
Da muss man ein bisschen Java basteln

24:54.200 --> 24:55.080
Da muss man ein bisschen

24:55.080 --> 24:57.160
Web-Anwendungen sich anwenden

24:57.160 --> 24:58.900
Da sind wahrscheinlich am Ende

24:58.900 --> 25:01.620
40 Zeilen oder so

25:01.620 --> 25:04.360
So und man kann

25:04.360 --> 25:06.600
Da lernt man nämlich auch wie man Parameter

25:06.600 --> 25:07.100
Übergibt

25:07.100 --> 25:10.100
Man kann hier hinten nämlich auch irgendwie dran

25:10.100 --> 25:11.880
Fragt mich nicht Rotate oder so

25:11.880 --> 25:12.760
80

25:12.760 --> 25:14.500
äh, ne

25:14.500 --> 25:18.080
ähm, lass mich mal kurz gucken

25:18.080 --> 25:23.440
guck mal, damals hatte

25:23.440 --> 25:25.320
C-Sharp noch eine Main-Methode

25:25.320 --> 25:27.380
gibt's ja heute auch nicht mehr, also gibt's schon, aber

25:27.380 --> 25:29.380
da, Startup

25:29.380 --> 25:30.880
JS gab's da noch, keck

25:30.880 --> 25:33.500
Controller, das ist ein MVC-Projekt

25:33.500 --> 25:35.240
noch, mal gucken wie das

25:35.240 --> 25:36.040
in Spring ist

25:36.040 --> 25:38.900
ähm, so, und man kann

25:38.900 --> 25:42.900
Aus irgendwelchen Gründen kann man auch

25:42.900 --> 25:44.300
Slash Kokona machen

25:44.300 --> 25:48.000
Was auch immer das macht

25:48.000 --> 25:54.840
Das macht genau das gleiche

25:54.840 --> 25:55.200
Okay

25:55.200 --> 26:02.940
Hatten wir nicht irgendwo einen Parameter?

26:04.940 --> 26:07.360
Chat ich war mir eigentlich relativ sicher

26:07.360 --> 26:11.740
Ach ne hier

26:11.740 --> 26:16.080
Hier man kann direkt hinten den Parameter angeben

26:16.080 --> 26:16.780
Okay

26:16.780 --> 26:22.440
Was

26:22.440 --> 26:28.840
So

26:28.840 --> 26:30.440
Man kann

26:30.440 --> 26:32.840
Man kann direkt sagen hier 180

26:32.840 --> 26:34.140
Ja dann dreht er

26:34.140 --> 26:35.020
Okay 1

26:35.020 --> 26:38.600
genau, ja, ja, so ging das

26:38.600 --> 26:40.380
ja, und das bauen wir jetzt einfach mal

26:40.380 --> 26:42.260
in Spring Boot nach, also einfach

26:42.260 --> 26:44.080
ist schnell gesagt, ne

26:44.080 --> 26:46.220
ich hab absolut keinen blassen Schimmer davon

26:46.220 --> 26:52.760
dann machen wir mal hier

26:52.760 --> 26:55.840
Spring Boot Champ

26:55.840 --> 27:00.520
so, auf geht's

27:00.520 --> 27:02.020
ich hoffe mal, IntelliJ

27:02.020 --> 27:04.600
guidet uns da ein bisschen

27:04.600 --> 27:11.320
wie das funktioniert weil wie gesagt absolut keinen plan ich kann ja war lesen ja ich kann

27:11.320 --> 27:16.540
auch ein paar zeilen java zu schreiben aber ich habe also noch nie großartig was damit

27:16.540 --> 27:30.580
gemacht und mit spring gut noch gar nicht kennst du kurs das sich im view js ui framework

27:30.580 --> 27:41.260
hat intellij auch integration ja das ganze jetbrains zeug hat integration ich benutze

27:41.260 --> 27:46.840
das nicht ich benutze nur die lokale ab und zu mal zum auto komplett von kleinem zeug und sonst

27:46.840 --> 27:50.080
Okay, neues Projekt.

27:53.780 --> 28:05.840
Also, laut dem Tutorial, was ich im Internet gesehen habe, kann IntelliJ...

28:09.840 --> 28:12.680
Habe ich das richtige IntelliJ installiert?

28:12.680 --> 28:15.560
laut dem Tutorial, was ich gesehen habe, kann

28:15.560 --> 28:17.820
IntelliJ Spring Boot

28:17.820 --> 28:21.060
Ah ne, ja ich hab's richtige.

28:22.480 --> 28:23.540
Hast du schon mal ein Gemini

28:23.540 --> 28:24.520
CLI getestet? Ne.

28:26.980 --> 28:27.640
Angeblich kann

28:27.640 --> 28:29.880
IntelliJ Spring Boot

28:29.880 --> 28:31.540
Anwendungen generieren. Vielleicht muss man hier

28:31.540 --> 28:32.860
mehr sagen via Plugin?

28:38.100 --> 28:39.040
Das ist Ultimate!

28:42.680 --> 28:47.160
das ist ultimate

28:57.720 --> 29:06.700
sie ist ja hier ich habe nur ich habe ich habe nur ultimate installiert und gar nicht gar nicht

29:06.700 --> 29:09.240
community

29:15.000 --> 29:21.220
manage plugins und war irgendwie spring oder so

29:27.500 --> 29:32.540
sollte das jetzt nicht irgendeinen text laden vielleicht daneben

29:36.700 --> 29:42.200
Weil ich nicht eingeloggt bin, oder was?

29:45.340 --> 29:47.060
Das ist ja doof.

29:55.400 --> 29:57.460
Ne, aber das ist doch was anderes, oder?

29:57.460 --> 30:01.680
Ne, aber das ist Spring Ultimate.

30:01.840 --> 30:03.360
Wir brauchen Spring Boot Ultimate.

30:03.360 --> 30:17.120
Ja gut, dann logge ich mich halt mal ein schnell.

30:17.120 --> 30:25.900
Spring.io Webseite, nee ich will schon, weil da geht bestimmt auch die ganze Integration

30:25.900 --> 30:28.480
mit Spring Boot und so in IntelliJ net richtig.

30:28.480 --> 30:31.260
Ich weiß, ich kenne die Webseite hier, Dista.

30:32.700 --> 30:37.540
Aber dann hast du bestimmt auch Probleme mit Package-Management da drinnen und sonst was, wenn das nicht geht.

30:37.940 --> 30:39.480
Geht? Na gut, dann machen wir das mal.

30:40.180 --> 30:41.460
Also, probieren wir das doch mal aus.

30:41.860 --> 30:42.260
Quickstart.

30:45.440 --> 30:47.280
Startspring.io, das meint ihr, oder?

30:48.880 --> 30:50.340
So, also, was wollen wir haben?

30:50.760 --> 30:51.820
Sprache, Java.

30:53.220 --> 30:53.580
Projekt.

30:54.640 --> 30:55.880
Cradle, Groovy.

30:56.080 --> 30:56.800
Bonk, HS, Alter.

30:56.800 --> 30:58.300
In Groovy habe ich mal was für

30:58.300 --> 31:01.040
Confluence entwickelt.

31:02.400 --> 31:03.280
Das war ganz

31:03.280 --> 31:03.860
abartig.

31:04.680 --> 31:05.720
Kotlin machen wir heute nicht.

31:05.720 --> 31:07.720
Wir müssen mal Maven

31:07.720 --> 31:08.060
nehmen.

31:15.920 --> 31:17.420
Das ist bei VMware

31:17.420 --> 31:18.080
mittlerweile.

31:19.660 --> 31:21.280
Tanzu ist das

31:21.280 --> 31:22.640
VMware Kubernetes.

31:26.800 --> 31:28.160
Okay, Maven.

31:28.740 --> 31:31.220
Maven kenne ich. Das ist wenigstens was, was ich schon mal gehört habe.

31:32.560 --> 31:35.020
Wir wollen die neueste Version, würde ich sagen.

31:35.080 --> 31:36.840
Was ist denn die neueste Version? 3.5.5?

31:37.860 --> 31:40.220
Alternativ gibt es auch 4.0.0 M2.

31:42.420 --> 31:44.300
Milestone, hä? Milestone 2?

31:45.920 --> 31:48.640
Chat, geblieben, aber 3.5.5, da findet man auch mehr Hilfe.

31:49.700 --> 31:52.680
Krupp. Krupp ist wahrscheinlich sowas wie eine Namespace, oder?

31:52.680 --> 32:01.200
also machen wir hier einfach irgendwie wo blos punkt w das ist ja ein umgedrehter

32:01.200 --> 32:12.540
schreibweise keck keck w.wog los okay artefakt und name demo weg wie schreibt man das große

32:12.540 --> 32:13.140
oder klein?

32:14.420 --> 32:15.540
Pack WS

32:15.540 --> 32:17.260
Service.

32:19.260 --> 32:20.580
Wollen wir eine andere Score machen?

32:20.660 --> 32:22.240
Description. Null.

32:23.800 --> 32:24.480
Jar kenne ich,

32:24.600 --> 32:25.520
Var kenne ich nicht.

32:30.420 --> 32:32.120
Macht man Camel Case nicht mit anderen?

32:32.220 --> 32:34.700
Also das ist quasi...

32:34.700 --> 32:36.300
Ne, ich mache das jetzt so. Fertig.

32:38.700 --> 32:40.300
Ich weiß gar nicht, was denn Var ist

32:40.300 --> 32:40.720
überhaupt.

32:42.540 --> 32:46.300
So und Java 17125.

32:50.300 --> 32:52.040
Die Pendancies lassen wir mal.

32:53.260 --> 32:55.360
Können wir dann bestimmt auch über IntelliJ hinzufügen.

32:58.060 --> 32:59.340
Jetzt sagen wir Generate.

33:00.580 --> 33:01.900
Pack W erste Service wird runter.

33:02.220 --> 33:03.940
Moment, was? Nur 15 KB?

33:05.100 --> 33:06.180
Das glaube ich nicht.

33:07.180 --> 33:09.280
Das ist bestimmt wie bei Node.js.

33:09.800 --> 33:11.520
Da ist bestimmt nur ein Package.json drin.

33:11.520 --> 33:18.000
und wenn ich erst mal installieren dann sind es am ende drei gigabyte weil vielleicht nicht

33:18.000 --> 33:21.840
ganz so krass wie bei der nots anwendung der witter das halbe internet runtergeladen

33:21.840 --> 33:27.480
downloads wie ich ist das ding jetzt noch mal spring

33:27.480 --> 33:31.920
service okay

33:31.920 --> 33:34.040
keck

33:34.040 --> 33:36.100
wie zeug sich da drin ab

33:36.100 --> 33:38.040
keck vs service zip

33:38.040 --> 33:40.880
unzip keck vs service

33:40.880 --> 33:41.340
zack

33:41.340 --> 33:42.960
da sind wir

33:42.960 --> 33:46.640
ok dann machen wir mal

33:46.640 --> 33:47.820
intellij auf hier

33:47.820 --> 33:49.900
home max repos

33:49.900 --> 33:54.380
spring

33:54.380 --> 33:55.580
irgendwas hab ich doch genau

33:55.580 --> 33:57.600
hab ich doch

33:57.600 --> 33:59.680
bin ich nicht in repos

33:59.680 --> 34:00.800
ach

34:00.800 --> 34:08.200
Da soll es hin.

34:12.960 --> 34:13.360
Hä?

34:16.980 --> 34:17.800
Jetzt auch doch.

34:19.040 --> 34:19.960
Er checkt es wieder nicht.

34:20.040 --> 34:20.760
Muss mal refreshen.

34:22.980 --> 34:24.040
Will er mich verarschen?

34:24.040 --> 34:31.180
Der ist es doch

34:31.180 --> 34:35.320
Hier, da, da ist es

34:35.320 --> 34:42.060
Will er nicht, hat er keinen Bock

34:42.060 --> 34:44.060
Nope

34:44.060 --> 34:45.600
Ach, das machen wir nicht

34:50.600 --> 34:51.360
Bam

34:51.360 --> 34:53.280
IntelliJ neu starten

34:53.280 --> 34:58.500
intelligent startet nicht mehr

34:58.500 --> 35:05.760
doch okay

35:05.760 --> 35:17.920
also repos spring kann er tippen leute da ist es doch spring boot camp

35:17.920 --> 35:25.460
kqs service ok perfekt so open trust

35:29.400 --> 35:35.820
so was haben wir denn hier jetzt wir haben dann geht repo ok help markdown

35:35.820 --> 35:43.920
juckt mich nett xml ja ich checke nicht warum die alle so auf xml sachen stehen

35:43.920 --> 35:50.680
Da hat übrigens meine Schrift und Theme und so hat er gar nicht übernommen.

35:51.060 --> 35:52.460
Sieht ganz verkehrt aus.

35:54.260 --> 35:56.780
Warum die so auf XML stehen, ich weiß es nicht.

35:59.840 --> 36:03.180
Aber in .NET ist das Projekt witzigerweise auch XML.

36:03.180 --> 36:05.460
So, dann haben wir hier Maven.

36:08.080 --> 36:08.840
Rapper.

36:10.500 --> 36:11.800
Was auch immer.

36:13.920 --> 36:17.100
Wenn man den Maven Wrapper macht.

36:17.740 --> 36:18.240
Source.

36:18.820 --> 36:19.180
Test.

36:24.540 --> 36:26.340
Errorless Programming.

36:26.780 --> 36:27.740
Brauchen wir keine Tests.

36:28.420 --> 36:29.100
Resources.

36:29.480 --> 36:29.820
Java.

36:31.960 --> 36:33.800
Kek WS Service Application.

36:37.800 --> 36:39.700
Und wo ist jetzt mein Main.

36:41.140 --> 36:42.820
Punkt Java oder sowas.

36:42.820 --> 36:44.320
Ist das das hier?

36:47.620 --> 36:48.020
Ah ja.

36:49.040 --> 36:51.020
Project JDK is not defined.

36:51.200 --> 36:51.680
Uiuiui.

37:03.680 --> 37:05.380
Kann ich einfach das hier nehmen?

37:05.380 --> 37:13.160
Wahrscheinlich, ja

37:13.160 --> 37:16.040
Gehen wir jetzt einfach

37:16.040 --> 37:16.980
Das obere, zack

37:16.980 --> 37:19.680
Okay, scheint zu gehen

37:19.680 --> 37:22.220
So, also er hat Schriftart und so hat er schon mal nicht übernommen

37:22.220 --> 37:23.560
Das müssen wir jetzt gleich mal

37:23.560 --> 37:24.140
Font

37:24.140 --> 37:27.420
Ähm

37:27.420 --> 37:29.600
What

37:29.600 --> 37:32.300
Font Size

37:35.380 --> 37:43.620
settings pons erin's

37:46.220 --> 37:52.320
er von jetpens mono wollen wir doch gar nicht wollen hack irgendwie 16 oder so

37:52.320 --> 37:56.640
noch ein bisschen was sie doch vielleicht sogar 17 16

37:56.640 --> 38:09.560
dann erkennt man wenigstens was so und als team eigentlich mein auge

38:13.520 --> 38:16.520
flashback

38:16.520 --> 38:32.180
xml java auch auf 25 müsste eigentlich sein weil ich 25 in diesem generator ausgewählt

38:32.180 --> 38:33.900
hab. Dracula.

38:35.660 --> 38:36.020
Moment.

38:36.420 --> 38:38.180
Das ist Theme für...

38:38.180 --> 38:40.260
Das ist

38:40.260 --> 38:42.180
Theme für den...

38:44.260 --> 38:45.380
Für die ganze Idee.

39:02.180 --> 39:15.380
Ich bin jetzt irgendwie ein bisschen verwirrt.

39:23.600 --> 39:25.540
Na gut, ich meine, das geht ja so auch.

39:26.940 --> 39:28.380
Gibt Schlimmeres.

39:30.280 --> 39:31.680
Okay, also was habe ich hier?

39:32.180 --> 39:34.120
Das ist...

39:34.120 --> 39:36.140
Okay, hier ist der Start von dem Ganzen.

39:36.600 --> 39:38.840
Okay, dann launch ich das jetzt mal.

39:40.060 --> 39:42.460
Wie launcht man das eigentlich gescheit?

39:44.180 --> 39:45.220
Spring Boot.

39:50.320 --> 39:51.300
Was ist das?

39:53.720 --> 39:54.680
Maven Way.

39:57.200 --> 39:57.880
CMD?

39:59.880 --> 40:00.120
Oh!

40:01.220 --> 40:01.660
Batch!

40:02.180 --> 40:04.180
monka giga

40:12.180 --> 40:14.180
in den eintracht

40:14.180 --> 40:16.180
das habe ich eigentlich

40:16.180 --> 40:18.180
gesucht

40:20.180 --> 40:22.180
editor

40:22.180 --> 40:24.180
color skill

40:24.180 --> 40:26.180
light

40:26.180 --> 40:34.580
hätte gerne das wishlist studio team irgendwie finde ich das von den farben

40:34.580 --> 40:41.740
ja aber wir lassen das jetzt ist schon schon okay so was bin ich hier sehend

40:41.740 --> 40:50.280
wir sollten uns glaube ich mal das quick quick start hier angucken

40:50.280 --> 40:56.520
quick start start new project das haben wir gemacht

40:56.520 --> 40:59.820
add your code das machen wir nicht ich will einfach nur wissen wie man startet

40:59.820 --> 41:04.780
doch ich kann wahrscheinlich hier ich will ich mache das in .net auch nie

41:04.780 --> 41:09.900
über über das eingebaute dinge in der idee ich starte das immer über cli

41:09.900 --> 41:17.580
vielleicht ist es aber ein jahr war besser als über die idee zu machen keine ahnung

41:17.580 --> 41:26.340
Aha, Punkt Slash, Cradle haben wir nicht, also machen wir Punkt Slash Mvv.

41:26.340 --> 41:46.000
Ich habe was falsch gemacht.

41:46.200 --> 41:48.040
Achso, Boot Run muss ich machen.

41:48.860 --> 41:49.140
Okay.

41:49.140 --> 41:49.200
Okay.

41:51.680 --> 41:52.800
Ne, geht immer noch nicht.

41:55.300 --> 41:55.700
Was?

41:56.340 --> 42:01.160
Du musst eine fähige Lebenszeitphase spezifizieren.

42:26.340 --> 42:32.420
ja also das beispiel von schon einmal

42:33.500 --> 42:43.240
was will er eigentlich von mir ich will nicht das full stack trace bin ich im

42:43.240 --> 42:47.020
falschen ordner vielleicht

42:47.020 --> 42:54.700
Okay, was ist, wenn ich jetzt hier drüber starte?

43:00.220 --> 43:01.380
Wie, hier findest du das?

43:10.020 --> 43:10.380
Ah.

43:13.540 --> 43:15.340
Das ist jetzt, das hat jetzt gestartet.

43:15.340 --> 43:17.920
aber es ist nichts passiert.

43:18.980 --> 43:22.180
Ich paste jetzt wirklich mal den Kram hier rein.

43:26.020 --> 43:28.440
Ist halt fertig. Sollte er nicht einen Webserver starten?

43:29.920 --> 43:32.180
Ich paste mal das hier rein jetzt.

43:42.580 --> 43:43.140
Äh.

43:45.340 --> 43:48.500
Du hast die Dependency nicht hinzugefügt.

43:49.780 --> 43:52.280
Ich habe das hier durchgeklickt.

43:53.700 --> 43:54.300
Ach.

43:57.180 --> 43:58.420
Ha.

43:59.640 --> 44:00.820
Okay.

44:00.820 --> 44:00.960
Okay.

44:03.700 --> 44:08.000
Okay, wie macht man in IntelliJ Dependency Management?

44:08.160 --> 44:09.400
Hier wahrscheinlich irgendwo drin.

44:13.780 --> 44:14.380
Dependencies.

44:15.340 --> 44:20.800
gibt es da nicht so was also in rider würde ich jetzt nougat aufmachen

44:20.800 --> 44:31.900
hat er nicht so was wie dependencies kann man das nicht kann man nicht irgendwie sagen

44:31.900 --> 44:40.060
at dependency oder so was muss man das da von hand machen da kommt ja auch ein maven knopf

44:40.060 --> 44:52.300
Aber das macht ja nichts hier.

44:52.300 --> 44:54.180
Oder Kamera?

44:54.180 --> 44:58.180
Dependencies?

44:58.180 --> 45:03.000
Ich will ja neue hinzufügen!

45:03.000 --> 45:05.000
Plus?

45:05.000 --> 45:08.540
Ne, add maven projects.

45:08.540 --> 45:27.180
Ich bin überrascht, wie kompliziert man sowas machen kann.

45:27.180 --> 45:34.000
Ich will die Webdependency.

45:34.000 --> 45:39.000
Wie zum Teufel füge ich...

45:51.000 --> 45:57.420
Also Chat, ich bin geneigt dazu, mich tatsächlich mal bei Jetbrains einzuloggen.

46:00.320 --> 46:02.620
Maven Plungins wäre das was wie wo.

46:02.620 --> 46:03.020
Hier?

46:04.000 --> 46:10.520
Ich will die Pendancies hinzufügen und zwar die da hier.

46:10.520 --> 46:11.100
Die, die.

46:12.760 --> 46:13.720
Gibt es denn?

46:14.260 --> 46:16.100
Du editierst von Hand die POP-XML.

46:16.220 --> 46:18.500
Ja gut, aber woher weißt du denn, was da rein muss?

46:19.620 --> 46:25.520
Gibt es quasi sowas wie hier Maven Package Search Central?

46:34.000 --> 46:41.880
Ja, Moment, ich habe das ja nicht aktiviert.

46:41.980 --> 46:47.360
Vielleicht liegt das daran, dass ich eben keine richtig echte IntelliJ-Ultimate habe.

47:00.940 --> 47:01.620
Central.

47:04.000 --> 47:05.180
Das habe ich schon mal gehört.

47:15.380 --> 47:16.260
Was?

47:16.620 --> 47:18.040
Alt-Insert.

47:18.220 --> 47:19.420
Insert.

47:20.720 --> 47:22.380
Okay, das können wir anderweitig machen.

47:22.720 --> 47:24.340
Wir können jetzt hier...

47:24.340 --> 47:24.760
Ah!

47:26.220 --> 47:28.120
Ah! Okay.

47:29.700 --> 47:30.520
Dependency.

47:32.140 --> 47:33.620
Nicht so was wie Spring Web.

47:34.000 --> 47:43.440
Sollte der jetzt nicht irgendwas finden?

47:59.440 --> 47:59.840
Jetzt?

47:59.840 --> 48:06.620
was was brauche ich hier starter web oder irgendwas was okay ist

48:06.620 --> 48:19.400
was hat doch irgendwas spring boot start aber warum finde ich das und findet man das hier nicht drin

48:19.400 --> 48:26.280
verstehe ich nicht müsste das ist oder search for

48:26.280 --> 48:33.360
Manage Dependency vielleicht?

48:35.220 --> 48:36.540
Ne, keine Ahnung.

48:37.620 --> 48:38.800
Da bin ich zu blöd für,

48:38.900 --> 48:40.600
dass es da drüber...

48:40.600 --> 48:44.440
Ah, hier, das da.

48:47.400 --> 48:49.520
End of Life Security Fix Available.

48:50.760 --> 48:52.280
Sollte man das nicht mehr benutzen?

48:52.360 --> 48:52.560
Hä?

48:53.040 --> 48:53.700
Doch, oder?

48:56.280 --> 49:10.180
Ja, ne, bei mir sucht er nix.

49:10.380 --> 49:10.840
Also der...

49:10.840 --> 49:13.780
Wenn ich da drinnen nach Web suche,

49:13.880 --> 49:14.580
findet er nix.

49:17.960 --> 49:18.800
Dependency Web.

49:20.000 --> 49:21.040
Guck, der findet nix.

49:25.040 --> 49:25.480
Ne.

49:26.280 --> 49:32.580
ok also ich brauche das hier ja die pendens ist aber ich will ich moment

49:32.580 --> 49:40.020
nicht vier was was hatte ich noch mal für eine 355

49:40.020 --> 49:46.440
gefühl ist ein bisschen hakelig an copy

49:46.440 --> 49:50.760
so

49:55.980 --> 49:56.380
ok

50:02.560 --> 50:03.840
jetzt hier nicht in den knopf

50:10.560 --> 50:15.180
was das zirkel changes aha

50:16.440 --> 50:25.120
Okay, und jetzt habe ich hier Webgedöns am Start.

50:25.420 --> 50:26.240
Das ist sehr nice.

50:27.080 --> 50:29.780
Das heißt, jetzt kann ich hier hingehen und...

50:36.180 --> 50:36.820
So.

50:37.660 --> 50:39.400
Ach, jetzt kann ich es importieren.

50:39.400 --> 50:40.040
Und hier, guckt.

50:41.400 --> 50:41.920
Request.

50:42.200 --> 50:43.160
Alles klar.

50:44.600 --> 50:45.440
Hier, import.

50:45.580 --> 50:46.020
Import.

50:46.020 --> 50:47.620
Okay, was ist, wenn ich es jetzt starte?

50:50.100 --> 50:50.440
Ha!

50:51.380 --> 50:53.440
Startet on Port 8080.

50:58.340 --> 50:59.800
Wo muss ich jetzt slash hello?

51:03.700 --> 51:04.340
Äh.

51:05.880 --> 51:06.140
Ups.

51:06.420 --> 51:08.580
War nicht slash hello?

51:11.900 --> 51:14.400
Ach, muss ich irgendwas noch angeben?

51:16.020 --> 51:22.440
controller tag nehmen wo sich nicht hier oben

51:22.440 --> 51:32.040
ok

51:32.040 --> 51:38.460
restart gibt es dann control f5 stop entweder

51:38.460 --> 51:49.280
was 80 80 slash hallo

51:49.280 --> 51:59.160
chat es fronzt massive spring boot stellt ok

51:59.160 --> 52:02.700
eckermann modus aktiviert

52:08.460 --> 52:16.700
so genau das reicht so ok und jetzt

52:25.840 --> 52:29.060
als seniorentwickler mindestens mindestens

52:29.060 --> 52:40.380
Ich finde ich die Syntax ein bisschen komisch. Warum schreibt man ein Request? Na gut.

52:40.380 --> 52:46.100
Also in .NET würde das so aussehen.

52:46.100 --> 52:55.100
Also was gibt es da anscheinend nicht? Parameter.

52:55.100 --> 53:08.180
gemacht macht irgendwie sinn so alles wir brauchen jetzt wir brauchen jetzt

53:08.180 --> 53:20.420
für die index seite also get mapping slash nennen wir es mal ja weg weh anscheinend

53:20.420 --> 53:21.640
ist es in Java so, dass man

53:21.640 --> 53:24.440
Methodennamen klein schreibt. Kann das sein?

53:24.580 --> 53:26.460
Also man würde so CamelCase dann schreiben.

53:29.440 --> 53:30.500
So, StringName.

53:30.820 --> 53:31.080
Name.

53:34.300 --> 53:35.700
Ach, warte mal. Moment, Moment.

53:40.800 --> 53:42.380
Muss ich jetzt...

53:42.380 --> 53:44.360
Muss man das so machen? Name gleich

53:44.360 --> 53:44.700
Lull?

53:46.040 --> 53:46.320
Nee.

53:48.140 --> 53:49.560
Wo kommt das jetzt her?

53:50.420 --> 54:02.000
request parameter aber aber ich habe doch gesagt neben gleich

54:14.860 --> 54:19.000
kann jemand sagen warum man dann etwas davor schreibt weil ja war das so will weil nur dann

54:19.000 --> 54:24.380
sind das an den leben wie heißt das bei java das ist keine das ist kein label

54:24.380 --> 54:30.940
auch keine kein attribut das ist ein annotation

54:36.920 --> 54:42.840
also das verstehe ich jetzt nicht so genau was dafür schmerzen hat hier

54:42.840 --> 54:45.180
egal

54:45.180 --> 54:47.620
Moment, warum geht Hello jetzt gar nicht mehr?

54:48.220 --> 54:48.420
Was?

54:49.400 --> 54:50.720
Achso, bin ich doof.

54:50.820 --> 54:52.260
Ich hab's doch...

54:52.260 --> 54:54.240
Name gleich.

54:55.660 --> 54:56.820
Okay, Funst.

54:59.020 --> 54:59.280
Gut.

54:59.700 --> 55:01.640
So, und da wollen wir jetzt nicht

55:01.640 --> 55:03.400
Hello ausliefern,

55:03.400 --> 55:04.820
sondern unser Keckweh-Image.

55:09.860 --> 55:11.280
Wie kriegen wir das hin?

55:12.900 --> 55:14.760
Wir brauchen erstmal unser Bild.

55:15.180 --> 55:20.940
das kann man uns hier erholen keck ws service ob www root oder wo habe ich das licht

55:20.940 --> 55:27.080
ich habe doch da eine neue version gebaut dass das

55:27.080 --> 55:32.120
das ging doch das haben wir doch überhaupt nicht mehr so gemacht

55:32.120 --> 55:35.760
das haben wir überhaupt nicht mehr so gemacht

55:35.760 --> 55:44.500
weil hier hatte ich die ganzen dinge vor vor gerendert quasi

55:44.500 --> 55:52.360
drinnen in jeder in jeder x beliebigen variante ja aber wir hatten doch dann

55:52.360 --> 55:56.740
später so eine image library die das automatisch alles gedreht hat bin ich

55:56.740 --> 56:00.380
jetzt total hängen geblieben wo habe ich das

56:05.820 --> 56:10.900
ich will direkt eine image response haben

56:14.500 --> 56:22.660
Wenn ich das Zeug mal ordentlich nennen würde, dann würde ich vielleicht auch wiederfinden.

56:26.480 --> 56:27.500
Was haben wir hier?

56:28.160 --> 56:29.240
Programm CS.

56:30.340 --> 56:31.380
Nice, das ist das Beste.

56:31.880 --> 56:34.460
Das ist unbedingt wichtig, da ich dafür ein Projekt angelegt habe.

56:35.600 --> 56:37.420
Ja, dann weiß ich gerade nicht.

56:37.640 --> 56:42.140
Aber ich weiß genau, dass wir das schon mal anders gebaut haben.

56:42.260 --> 56:43.040
Ist aber auch egal.

56:43.180 --> 56:44.420
Können wir jetzt ja in Java so machen.

56:44.500 --> 56:48.480
also hier will ich jetzt ein bild ausliefern immer mal dieses bild so

56:48.480 --> 56:57.000
lassen wir das einfach mal nur ein bild ausliefern safe image es keck wp ng

56:57.000 --> 57:00.500
das gibt schon

57:00.500 --> 57:15.920
überhaupt nicht so jetzt ist die preisfrage wie kriegen wir denn überhaupt wir brauchen

57:15.920 --> 57:23.360
sowas wie www root aber vielleicht in die vielleicht ressorts moment wir gucken jetzt

57:23.360 --> 57:28.880
mal spring gut index html

57:28.880 --> 57:34.920
mvc spring

57:53.360 --> 57:55.480
Na gut.

57:57.700 --> 58:00.620
Ich meine, wir können das Bild doch einfach hier hinschmeißen, oder?

58:00.860 --> 58:01.720
Können wir nicht sagen hier?

58:05.980 --> 58:06.500
Downloads.

58:08.060 --> 58:08.880
Cake W.

58:12.960 --> 58:13.720
Ist es?

58:14.140 --> 58:17.720
Dann machen wir jetzt hier einfach mal irgendwie noch eine, ich weiß keine Ahnung, ob ich das nennen soll.

58:18.060 --> 58:18.540
Directory.

58:18.540 --> 58:23.800
Ich nenn's mal www-Root, da weiß ich

58:23.800 --> 58:25.060
wenigstens, was damit gemeint ist.

58:26.060 --> 58:28.020
Jetzt packen wir da kek-w rein.

58:30.060 --> 58:30.240
So.

58:33.560 --> 58:35.140
Oh nu? Okay.

58:35.480 --> 58:38.000
Jetzt wird's kompliziert.

58:39.000 --> 58:39.680
Jetzt will ich so was

58:39.680 --> 58:40.760
wie File Open.

58:43.020 --> 58:43.740
Da hören erst mal

58:43.740 --> 58:45.140
meine Java-Skills auf, ja?

58:48.540 --> 58:50.300
Java Read File.

58:50.700 --> 58:51.660
Da müssen wir uns jetzt durch...

58:51.660 --> 58:53.940
Da müssen wir uns jetzt durchgoogeln.

58:55.560 --> 58:56.960
Ich will nicht ASCII...

58:56.960 --> 58:58.320
Buffered Read...

58:58.320 --> 58:59.640
Nee, nee, nee, nee, nee, nee.

59:00.360 --> 59:03.140
Java Read Binary File.

59:04.720 --> 59:07.160
Read Binary Files in Java.

59:08.040 --> 59:08.880
Warum ist hier eigentlich...

59:08.880 --> 59:09.560
Warum ist hier eigentlich so voll...

59:09.560 --> 59:10.320
Warum...

59:10.320 --> 59:14.020
Warum lacht der Chat schon?

59:14.440 --> 59:16.200
Ist das was total Abwegiges,

59:16.300 --> 59:17.440
was ich hier vorhabe, oder wie?

59:18.540 --> 59:28.100
datei öffnet in java. he doesn't know he lacks critical information. file input stream

59:28.100 --> 59:42.420
file output stream. image io das klingt gut. java image io. image reader

59:42.420 --> 59:51.660
image wap da pack ich will einfach einen beiz ich will einfach beiz haben und dann als meinem

59:51.660 --> 59:57.180
type image ja fein wieder all beiz so was so was habe ich mir gedacht aber es gibt es ja anscheinend

59:57.180 --> 01:00:12.420
Moment, java read file as byte array. Wir fragen jetzt chatgpt.

01:00:12.420 --> 01:00:26.580
Ja genau, das will ich haben. What the hell? Was zum? File input stream. Das ist gut.

01:00:26.580 --> 01:00:28.720
Was? Read?

01:00:43.080 --> 01:00:44.760
Ach, Files gibt's.

01:00:45.720 --> 01:00:46.320
Ach so.

01:00:47.920 --> 01:00:48.280
Ha!

01:00:49.600 --> 01:00:50.980
Ja, das ist ja nice.

01:00:51.080 --> 01:00:51.920
Sowas hab ich gesucht.

01:00:53.280 --> 01:00:54.380
Read all bytes.

01:00:54.380 --> 01:00:55.700
Genau. So.

01:00:55.700 --> 01:00:57.340
Punkt Slash

01:00:57.340 --> 01:01:00.020
www.root

01:01:00.020 --> 01:01:00.940
Slash

01:01:00.940 --> 01:01:02.500
kq.png

01:01:02.500 --> 01:01:06.240
Okay, das geht so schon mal auf gar keinen Fall.

01:01:06.360 --> 01:01:06.520
Warum?

01:01:16.520 --> 01:01:17.040
Path?

01:01:21.680 --> 01:01:23.240
Oder bestimmt New, hä?

01:01:23.240 --> 01:01:26.140
Java-Stells.

01:01:28.680 --> 01:01:29.700
U-Path.

01:01:32.820 --> 01:01:33.100
What?

01:01:33.460 --> 01:01:33.660
What?

01:01:35.520 --> 01:01:36.320
Was?

01:01:39.320 --> 01:01:41.060
Was hat der mir gerade alles

01:01:41.060 --> 01:01:41.940
generiert, Mann?

01:01:41.940 --> 01:01:42.020
Was?

01:01:47.560 --> 01:01:47.960
Alter.

01:01:50.600 --> 01:01:52.200
Was hat der denn hier alles generiert?

01:01:52.320 --> 01:01:52.900
Mann, hör mal auf.

01:01:53.240 --> 01:02:01.680
path of off chat hat recht auf

01:02:01.680 --> 01:02:05.240
jeder wehmer noch nicht

01:02:05.240 --> 01:02:09.280
anhändelt except

01:02:09.280 --> 01:02:17.900
exception da muss ich so eine art try drive try catch oder sowas machen

01:02:17.900 --> 01:02:25.400
was da gibt es neben braun so war es so was muss ich da machen

01:02:32.200 --> 01:02:38.460
da wir gucken uns mal wir gucken uns mal ein example an die das leute machen die wissen wie

01:02:38.460 --> 01:02:39.380
java funktioniert.

01:02:45.780 --> 01:02:46.480
Okay, kommt

01:02:46.480 --> 01:02:48.460
eine ByteArray raus. Das dachte ich mir schon.

01:02:49.700 --> 01:02:50.660
Mein PathGet.

01:02:51.100 --> 01:02:52.580
Was ist denn der Unterschied zwischen

01:02:52.580 --> 01:02:54.400
PathOf und PathGet?

01:02:57.780 --> 01:02:58.940
Gibt's keine Hilfe.

01:03:02.320 --> 01:03:03.400
IPathFactoryManager

01:03:03.400 --> 01:03:03.960
Singleton.

01:03:03.960 --> 01:03:14.460
ist genau das gleiche oder path get und read all by und und und path of

01:03:14.460 --> 01:03:20.460
okay also hier so guck mal so machen wir das doch

01:03:20.460 --> 01:03:25.140
try catch io ah ok man catch nur io exceptions

01:03:25.140 --> 01:03:31.380
und dann wird einfach nur gecatcht mit einem system error ja

01:03:31.380 --> 01:03:34.860
Davon wird die Exception

01:03:34.860 --> 01:03:37.320
geht die aber auch nicht weg, wenn ich die einfach nur printe

01:03:37.320 --> 01:03:40.100
Daher kommt das wahrscheinlich

01:03:40.100 --> 01:03:42.100
dass wenn man eine Java Anwendung startet

01:03:42.100 --> 01:03:44.520
das Ding erstmal 500 Exceptions auf der Konsole auswirft

01:03:44.520 --> 01:03:45.520
aber es dann trotzdem läuft

01:03:45.520 --> 01:03:50.740
Warum muss ich das überhaupt catchen?

01:03:51.580 --> 01:03:52.440
Ganz blöde Frage

01:03:52.440 --> 01:03:53.580
Warum muss ich das catchen?

01:03:53.860 --> 01:03:56.180
Warum kann ich es nicht einfach lassen und dass es knallt?

01:03:57.760 --> 01:03:58.820
Es kann doch einfach knallen

01:03:58.820 --> 01:04:00.440
Dann ist doch gut, wenn es knallt

01:04:00.440 --> 01:04:06.880
also hier muss er nur exception

01:04:08.880 --> 01:04:19.380
ach komm wir lassen wir machen was ist das für hat moment moment wie macht man eigentlich ich

01:04:19.380 --> 01:04:28.320
glaube system out oder system out dass da fehler beim lesen der png ja genau das brauchen wir kann

01:04:28.320 --> 01:04:46.500
java eigentlich so was 0 w doppelpunkt und int ja war sowas ja war interpoliert strings

01:04:46.500 --> 01:04:49.800
String Interpolation in Java.

01:04:57.880 --> 01:04:58.360
Nee.

01:05:00.680 --> 01:05:02.380
String Format macht man da.

01:05:02.940 --> 01:05:04.240
Ja, aber das ist auch eklig.

01:05:08.100 --> 01:05:09.820
Okay, ich tippe mal einfach.

01:05:09.920 --> 01:05:10.540
Das gibt's nicht.

01:05:12.360 --> 01:05:14.280
Ja, sowas Modernes aber auch.

01:05:14.760 --> 01:05:15.740
Wie kann es sowas geben?

01:05:16.500 --> 01:05:20.560
man muss Format Strings machen

01:05:20.560 --> 01:05:21.460
nein

01:05:21.460 --> 01:05:24.420
ich weiß

01:05:24.420 --> 01:05:25.120
ja nicht

01:05:25.120 --> 01:05:29.760
dann machen wir es halt so hier

01:05:29.760 --> 01:05:31.640
genauso wie die Dudes das hier

01:05:31.640 --> 01:05:35.480
in dem Beispiel gemacht haben

01:05:35.480 --> 01:05:38.480
so und jetzt haben wir hier

01:05:38.480 --> 01:05:39.620
das ganze Ding

01:05:39.620 --> 01:05:41.560
Read All Bytes

01:05:41.560 --> 01:05:44.320
aha

01:05:44.320 --> 01:05:46.240
Print Stack Trace

01:05:46.240 --> 01:05:48.560
bricht das auch...

01:05:48.560 --> 01:05:50.580
Ah, das ist gut. Das bricht bestimmt auch das

01:05:50.580 --> 01:05:51.940
Programm auch gleich ab, oder?

01:05:55.200 --> 01:05:57.040
Should be

01:05:57.040 --> 01:05:57.760
Macht's nicht?

01:06:00.760 --> 01:06:02.000
Kann ich mir das auch sparen?

01:06:10.100 --> 01:06:10.980
Ist eine alte

01:06:10.980 --> 01:06:12.220
Sprache? Naja, aber

01:06:12.220 --> 01:06:14.040
macht mir da immer noch was dran.

01:06:14.040 --> 01:06:17.700
also C Sharp hatte das beispielsweise auch nicht von Anfang an

01:06:17.700 --> 01:06:19.620
und sogar in Python gibt es jetzt

01:06:19.620 --> 01:06:21.000
neue F-Strings

01:06:21.000 --> 01:06:22.020
habt ihr das gesehen?

01:06:22.300 --> 01:06:23.320
das ist eigentlich auch ganz cool

01:06:23.320 --> 01:06:29.140
da hat ja fast schon

01:06:29.140 --> 01:06:31.500
wenn man sagt C++ bessere String-Formatting

01:06:31.500 --> 01:06:32.760
und das heißt schon was

01:06:32.760 --> 01:06:38.680
String-Templates zeige ich mal her

01:06:38.680 --> 01:06:41.080
warum gibt es da nicht

01:06:41.080 --> 01:06:43.320
Playungen? Ach ne, Bildung

01:06:43.320 --> 01:06:43.940
nicht Playungen

01:06:43.940 --> 01:06:51.360
Okay, es geht nicht, anscheinend.

01:06:56.360 --> 01:06:56.800
Was?

01:06:59.260 --> 01:07:01.840
Alter, kann man es noch komplizierter machen?

01:07:05.700 --> 01:07:06.620
What the fuck?

01:07:13.940 --> 01:07:17.160
naja, aber so geht das ja auch

01:07:17.160 --> 01:07:18.940
so, jetzt haben wir das Bild gelesen

01:07:18.940 --> 01:07:21.260
und jetzt ist die große Preisfrage

01:07:21.260 --> 01:07:23.320
wie setze ich

01:07:23.320 --> 01:07:25.000
den Type, weil ich will ja kein

01:07:25.000 --> 01:07:26.300
String returnen

01:07:26.300 --> 01:07:29.320
ich will eigentlich Bytes

01:07:29.320 --> 01:07:31.960
returnen

01:07:31.960 --> 01:07:34.460
aber das geht ja wahrscheinlich so nicht

01:07:34.460 --> 01:07:37.340
ähm, ich will

01:07:37.340 --> 01:07:38.740
vor allem will ich

01:07:38.740 --> 01:07:40.200
in meinem Type setzen

01:07:40.200 --> 01:07:42.420
so, Response.

01:07:43.940 --> 01:07:59.300
content type oder sowas dann gucken wir mal hier spring return image png

01:07:59.300 --> 01:08:05.980
das juss

01:08:05.980 --> 01:08:11.600
und du hast es vor ort

01:08:11.600 --> 01:08:16.680
response body

01:08:16.680 --> 01:08:21.020
spongebob

01:08:21.020 --> 01:08:28.220
warum muss hier warum muss hier einfach random was rein geht

01:08:28.220 --> 01:08:29.940
Also ByteArray ist schon mal richtig.

01:08:31.320 --> 01:08:32.740
Ah, man kann gleich sagen,

01:08:32.800 --> 01:08:34.160
hier Throws.io Exception.

01:08:36.940 --> 01:08:38.700
Get Resource as Stream.

01:08:39.800 --> 01:08:40.360
ByteArray.

01:08:40.580 --> 01:08:42.640
Was ist denn das? Das ist ja noch besser als

01:08:42.640 --> 01:08:43.740
das, was ich hier hatte.

01:08:46.640 --> 01:08:48.060
Ja, das ist eigentlich ganz gut.

01:08:48.200 --> 01:08:49.980
Das finde ich auch. Da kann ich mir das Try-Catch

01:08:49.980 --> 01:08:52.340
sparen.

01:08:54.980 --> 01:08:56.980
Bietet das eigentlich IntelliJ auch an?

01:08:58.220 --> 01:09:03.440
Add Exception to Method Signature.

01:09:03.720 --> 01:09:05.260
Ah ja, das ist gut.

01:09:05.580 --> 01:09:07.860
Das finde ich gar nicht mal so schlecht.

01:09:08.940 --> 01:09:10.740
Wisst ihr, das finde ich gar nicht so übel.

01:09:11.100 --> 01:09:16.240
Dann weißt du wenigstens, was da drin nicht behandelt wird und was da rauskommen kann an Exceptions.

01:09:17.400 --> 01:09:21.940
Ich könnte mir allerdings vorstellen, dass das ein bisschen abartig wird, wenn du viele Sachen verwendest,

01:09:22.020 --> 01:09:25.620
weil die babbeln sich ja so hoch, die Exceptions.

01:09:25.620 --> 01:09:32.000
irgendwann hast du dann am ende 80 dinge oder so stehen

01:09:40.800 --> 01:09:45.740
du musst dein index html ich habe kein index html

01:09:49.340 --> 01:09:53.120
ich finde das gar nicht so schlecht mit den mit mit wie auch immer man das hier

01:09:53.120 --> 01:10:05.300
nennt mit diesen dieser thrower annotation da hinten dran bin ich gar nicht übel zum recht

01:10:05.300 --> 01:10:13.400
überlegt so und wie machen wie macht der du dir das jetzt get restore input stream get class

01:10:13.400 --> 01:10:15.200
Was?

01:10:20.840 --> 01:10:22.560
Ach, get resource as stream.

01:10:23.000 --> 01:10:25.200
Ach, das ist, wenn es embedded ist, oder?

01:10:25.960 --> 01:10:30.300
Das ist ein bisschen sowas wie, ja, halt so die embedded resources, die es auch in .NET gibt.

01:10:31.080 --> 01:10:33.680
Ich will es ja vom Filesystem lesen, dann ist das hier eigentlich richtig.

01:10:34.060 --> 01:10:35.040
Was haben wir dann hier sonst noch?

01:10:35.140 --> 01:10:36.180
I.O. Utils.

01:10:37.680 --> 01:10:41.860
I.O. Utils.

01:10:43.400 --> 01:10:46.300
To bite a ray.

01:10:46.500 --> 01:10:46.820
Ah.

01:10:51.080 --> 01:10:51.620
Nö.

01:10:51.980 --> 01:10:52.500
Gibt's nicht.

01:10:53.640 --> 01:10:54.180
Oder nicht.

01:10:55.320 --> 01:10:57.220
Aber ich hab das ja schon als bite a ray.

01:10:57.860 --> 01:10:58.180
Also.

01:10:59.040 --> 01:11:01.660
Gibt es in Java sowas hier oder sowas hier?

01:11:04.960 --> 01:11:05.440
Äh.

01:11:05.900 --> 01:11:06.300
Reiz.

01:11:10.200 --> 01:11:10.840
Ah ja.

01:11:11.660 --> 01:11:12.980
Ist das verpönt in Java?

01:11:13.400 --> 01:11:20.920
Ist verpönt.

01:11:22.520 --> 01:11:23.820
Warum gibt's das denn dann?

01:11:26.880 --> 01:11:28.320
Ach, Kunst gibt's auch.

01:11:29.580 --> 01:11:30.260
Nee, geht aber nicht.

01:11:31.020 --> 01:11:33.220
Kunst war...

01:11:33.220 --> 01:11:33.400
Nee.

01:11:40.100 --> 01:11:41.420
Wegen Leuten wie mir.

01:11:41.720 --> 01:11:42.980
Wie? Was kann ich dafür?

01:11:43.400 --> 01:11:54.540
Das Final.

01:11:58.040 --> 01:11:59.120
Final War.

01:12:00.120 --> 01:12:02.400
Jetzt wird es aber abgedreht.

01:12:02.880 --> 01:12:04.080
Das heißt, jetzt ist Bites

01:12:04.080 --> 01:12:05.100
Read Only, oder wie?

01:12:13.400 --> 01:12:20.900
also ich bin das von C Sharp gewöhnt, da nimmst du für alles wahr und letztendlich bleibt es ja

01:12:20.900 --> 01:12:25.580
trotzdem stark typisiert ja also hier kommt ein Byte Array zurück das heißt Byte ist jetzt ein

01:12:25.580 --> 01:12:32.900
Byte Array. Wenn ich das hier eingebe sagt er das bestimmt auch. Byte Array, ja dann machen wir das

01:12:32.900 --> 01:12:40.040
so. So und jetzt returne ich die Bytes. So und das soll es jetzt, was hat er jetzt für Schmerzen?

01:12:40.040 --> 01:12:47.600
Achso, ja, ich kann das so returnen. Ich muss ja dann noch ein bisschen was dazwischen machen. So,

01:12:47.600 --> 01:12:58.160
restart. Machen wir mal, komm wir machen mal hier einen Chrome auf. Und das machen wir mal weg.

01:12:58.160 --> 01:13:06.960
Aber hier so, localhost port 8080. Achso, meinem Type muss ich noch setzen. Der denkt ja immer

01:13:06.960 --> 01:13:17.400
noch dass das text ist muss ich ist dafür vielleicht das response body zuständig

01:13:23.560 --> 01:13:28.080
media type image jpeg ja aber wie mache ich das

01:13:36.960 --> 01:13:48.420
Ach hier.

01:13:49.680 --> 01:13:50.280
What?

01:13:52.280 --> 01:13:54.940
Ach, in das Mapping schreibt man...

01:13:54.940 --> 01:13:57.520
Okay, das ist schon weird, Champ.

01:14:00.220 --> 01:14:01.740
In das Mapping.

01:14:03.220 --> 01:14:05.060
Ja, da hätte ich jetzt wirklich nicht dran gedacht.

01:14:05.060 --> 01:14:09.220
Das ist schon irgendwie

01:14:09.220 --> 01:14:11.280
Man kann nicht sagen

01:14:11.280 --> 01:14:12.060
eklig

01:14:12.060 --> 01:14:14.020
Aber schon irgendwie

01:14:14.020 --> 01:14:18.440
Merkwürdig

01:14:18.440 --> 01:14:23.620
Jetzt geht es nicht mehr

01:14:23.620 --> 01:14:24.420
Jetzt ist es kaputt

01:14:24.420 --> 01:14:27.400
Media Type erstmal importieren

01:14:27.400 --> 01:14:31.600
Value muss ich das jetzt value nennen?

01:14:32.160 --> 01:14:33.060
Value gleich

01:14:33.060 --> 01:14:37.800
an die path okay

01:14:37.800 --> 01:14:47.300
das will ich jetzt irgendwie nicht so schön aber mein ja auch

01:14:47.300 --> 01:14:52.180
man gewöhnt sich daran okay jetzt da ist es leute

01:14:52.180 --> 01:15:00.240
keck ws service

01:15:00.240 --> 01:15:12.600
kann so live looks good to me schippet das ist korrekt ich habe einen png und

01:15:12.600 --> 01:15:16.740
kein jpg aber der browser ist schlau genug der check das anhand vom header wahrscheinlich

01:15:16.740 --> 01:15:24.900
image png value also da muss ich sagen

01:15:30.240 --> 01:15:34.040
Ich weiß gar nicht wollte sagen da finde ich es in asp.net schöner gelöst aber ich weiß

01:15:34.620 --> 01:15:39.440
Es ist auch da ein bisschen painst champ da musste dann sagen return new

01:15:40.860 --> 01:15:44.540
Irgendwas content by content oder irgendwie sowas

01:15:47.400 --> 01:15:49.540
Muss ich auch immer gucken wie das da funktioniert

01:15:52.360 --> 01:15:54.360
Kannst du alt text anzeigen lassen

01:15:55.440 --> 01:15:59.240
Keiner gibt es nicht gibt kein alt text

01:16:00.240 --> 01:16:07.860
Das ist nicht...

01:16:07.860 --> 01:16:11.320
Wie heißt das?

01:16:11.820 --> 01:16:12.340
Accessibility?

01:16:15.760 --> 01:16:16.320
Regelt?

01:16:22.480 --> 01:16:23.900
Okay, aber das ist schon mal gut.

01:16:24.000 --> 01:16:25.200
Das hier unten können wir übrigens minimieren.

01:16:26.360 --> 01:16:27.700
So, und jetzt...

01:16:27.700 --> 01:16:29.460
Keine Barrierefreiheit auf Deutsch, genau.

01:16:29.460 --> 01:16:36.920
Und jetzt kommt die große Preisfrage. Wie rotieren wir in Java ein PNG?

01:16:36.920 --> 01:16:43.460
action result ist bei mbc bei

01:16:43.460 --> 01:16:52.940
minimal apis ist es glaube ich da kannst du mittlerweile irgendwie sagen return und dann

01:16:52.940 --> 01:17:00.940
gibt es verschiedene contents oder kannst du ich weiß nicht ob es wie ob spite content war ich

01:17:00.940 --> 01:17:04.920
weiß aus dem kopf gar nicht da muss ich auch immer nachgucken aber das geht jetzt anders

01:17:04.920 --> 01:17:13.420
als noch zu mbc zeiten so wie rotieren werden bild da brauchen wir jetzt eine

01:17:13.420 --> 01:17:22.420
image library vielleicht hat ja war ja sowas vielleicht hat ja war ja schon so

01:17:22.420 --> 01:17:29.640
was in der standard library trainer java rotate image guck mal java rotating vor

01:17:29.640 --> 01:17:36.960
13 jahre swing nicht wirklich

01:17:44.960 --> 01:17:49.600
java rotate png image

01:17:53.020 --> 01:17:55.640
auto rotate image with java

01:17:59.640 --> 01:18:02.740
Ach so, meinst du das?

01:18:03.020 --> 01:18:06.460
Ja, du hast recht, man könnte das auch über CSS lösen, aber das will ich ja nicht.

01:18:07.180 --> 01:18:09.100
Ich will ja mal gucken, wie man das Backend-mäßig macht.

01:18:10.600 --> 01:18:12.400
Java AWT Image.

01:18:13.460 --> 01:18:15.480
And the Java Image IOPack.

01:18:15.740 --> 01:18:17.880
Haben wir Image, hab ich Image ION nicht, hat er das?

01:18:21.540 --> 01:18:24.220
Gibt's doch hier Java X Image ION, es ist doch schon da.

01:18:24.220 --> 01:18:30.780
Einfach das beide Ray rotieren

01:18:30.780 --> 01:18:32.860
Ja, da kommt bestimmt genau das

01:18:32.860 --> 01:18:33.560
Richtige raus

01:18:33.560 --> 01:18:39.600
Was bin ich hier sehend

01:18:48.140 --> 01:18:48.660
Okay

01:18:48.660 --> 01:18:49.880
Da kann man direkt

01:18:49.880 --> 01:18:51.380
Das ist gar nicht schlecht

01:18:51.380 --> 01:18:52.920
Da kann man direkt

01:18:52.920 --> 01:18:54.920
von...

01:19:00.280 --> 01:19:02.760
Kann man da nicht direkt von einem Fad lesen?

01:19:11.520 --> 01:19:12.720
Wahrscheinlich so, ha?

01:19:13.780 --> 01:19:14.880
Nee, das geht mal wieder nicht.

01:19:15.540 --> 01:19:16.540
Also Image.io.

01:19:17.920 --> 01:19:19.120
Image.io.

01:19:19.120 --> 01:19:19.160
Oh.

01:19:22.040 --> 01:19:22.400
Ja.

01:19:22.920 --> 01:19:27.120
image.io.read.input.file.

01:19:27.560 --> 01:19:28.640
Ach, so geht das.

01:19:30.140 --> 01:19:31.680
Ja, das ist doch auch gut.

01:19:33.260 --> 01:19:35.180
Das finde ich nice. Das gefällt mir.

01:19:40.180 --> 01:19:41.440
Machen wir das hier mal weg.

01:19:42.940 --> 01:19:43.360
War.

01:19:43.800 --> 01:19:44.420
Keg.wait.

01:19:45.740 --> 01:19:46.160
File.

01:19:47.360 --> 01:19:48.920
Jawoll. Buffert.image.

01:19:48.920 --> 01:19:55.040
Image, Image, Read, Buffered Image, war, null.

01:19:56.560 --> 01:20:02.920
So, und jetzt die Fine Rotation Angle, Math to...

01:20:02.920 --> 01:20:08.920
Was? Moment, was, wie, wo, ah, Moment, was zum...

01:20:10.120 --> 01:20:18.460
Jetzt, jetzt, das wäre ja auch deutlich zu einfach, wenn man jetzt sowas sagen könnte wie Rotate oder so, das geht natürlich nicht.

01:20:18.920 --> 01:20:25.220
das wäre deutlich zu easy

01:20:25.220 --> 01:20:36.500
okay wir machen das war einfach das beispiel durch so das hier muss dann eigentlich noch

01:20:36.500 --> 01:20:42.680
vom paar parameter aber das müssen wir gucken wie wir das hier rein kriegen also anstatt

01:20:42.680 --> 01:20:53.140
name ich will ja eigentlich über das machen 90 90 grad soll das rotiert werden so dann

01:20:53.140 --> 01:20:59.520
braucht man ein was er fein transform translate image to keep it all da

01:20:59.520 --> 01:21:09.300
das ist das top das ist advanced ist der image rotierten weil ich hier gesehen habe ich habe

01:21:09.300 --> 01:21:11.300
Miss war

01:21:14.820 --> 01:21:16.820
New with

01:21:17.800 --> 01:21:20.620
Ich will new with old with sein

01:21:23.160 --> 01:21:25.160
Was durch zwei

01:21:28.140 --> 01:21:34.280
Warum durch zwei ich will es einfach nur täten ja genau ich will es einfach nur das will ich nichts machen

01:21:34.280 --> 01:21:39.200
einfach nur rotiert ist es kann das ding aber auch so

01:21:39.200 --> 01:21:48.980
acht damit der um center rotated ach so mal gucken was das ohne macht

01:21:53.180 --> 01:21:58.580
und warum muss ich jetzt ich will mal wissen was passiert wenn ich wenn es einfach nur so macht

01:21:58.580 --> 01:22:04.300
Natürlich war only.

01:22:05.440 --> 01:22:05.900
Sonst.

01:22:07.340 --> 01:22:09.480
So, und jetzt create output image.

01:22:10.060 --> 01:22:10.260
New.

01:22:17.260 --> 01:22:19.760
What the fuck?

01:22:24.220 --> 01:22:25.020
Was zum?

01:22:25.020 --> 01:22:28.260
Moment, ich dachte, ich hab das Image schon

01:22:28.260 --> 01:22:28.860
Rotated

01:22:28.860 --> 01:22:35.720
Ich hab das noch gar nicht rotated

01:22:35.720 --> 01:22:40.200
Morgen KS

01:22:40.200 --> 01:22:41.120
Moment, Moment

01:22:41.120 --> 01:22:44.480
Das finde ich so abartig, gibt's da nicht eine ordentliche Library

01:22:44.480 --> 01:22:46.240
Für Chatgear, ihr habt doch vorhin

01:22:46.240 --> 01:22:47.040
Irgendwas geschrieben

01:22:47.040 --> 01:22:52.380
Irgendjemand hat doch vorhin was hier

01:22:52.380 --> 01:22:53.960
Geschrieben mit Image.io oder

01:22:53.960 --> 01:23:14.100
Ich kann das einfach kopieren, aber ich finde das super

01:23:14.100 --> 01:23:16.140
Ah, hier the complete code

01:23:16.140 --> 01:23:16.980
Okay, wisst ihr was?

01:23:17.280 --> 01:23:18.460
Hier the complete code, easy

01:23:18.460 --> 01:23:24.140
Flop

01:23:24.140 --> 01:23:30.460
Flop

01:23:30.460 --> 01:23:32.400
So, easy

01:23:32.400 --> 01:23:38.020
Wir klauen das uns einfach

01:23:38.020 --> 01:23:40.860
Jetzt können wir mal der Gelegenheit auch gerade mal gucken

01:23:40.860 --> 01:23:42.740
Wir machen hier private

01:23:42.740 --> 01:23:44.420
Ich weiß gar nicht, wie das in Java funzt

01:23:44.420 --> 01:23:45.800
Private

01:23:45.800 --> 01:23:56.420
tja jetzt kriegen wir dann beide ray wahrscheinlich zurück keine ahnung generate image

01:23:56.420 --> 01:24:04.640
und machen wir einfach so sich umford oder sowas

01:24:04.640 --> 01:24:13.240
wieso machst du das sind ja war stimmt da war es noch gar nicht da wo ich das erzählt habe ich

01:24:13.240 --> 01:24:17.540
Ich mache bei uns auf der Arbeit demnächst ein Praktikum bei den Entwicklern.

01:24:18.540 --> 01:24:21.320
Dachte mir ein bisschen Java zu können, ist nicht verkehrt.

01:24:24.700 --> 01:24:25.640
14 Tage.

01:24:27.040 --> 01:24:29.640
Dachte mir ein bisschen Java angucken, im Vorfeld schadet ja nichts.

01:24:34.540 --> 01:24:35.060
Ja.

01:24:36.860 --> 01:24:39.140
Also ne, Praktikum, das heißt halt so.

01:24:39.140 --> 01:24:42.860
ich mache nicht wirklich ein praktikum ich behalte meinen alten job ich bleibe

01:24:42.860 --> 01:24:50.300
in meinem alten team aber ich gucke mir halt mal was anderes an

01:24:52.260 --> 01:24:56.840
weil es mich interessiert was sie da so machen

01:24:59.180 --> 01:25:05.760
okay jetzt end angle oder so ja zack zack ich hoffe mal dass funzen java

01:25:05.760 --> 01:25:13.800
genauso dann nehmen wir uns nämlich dieses ganze ding hier packen das hier

01:25:13.800 --> 01:25:17.840
rein und jetzt returnen wir

01:25:21.460 --> 01:25:31.660
jetzt muss ich sagen exception hat er da oben okay und jetzt returnen wir return

01:25:31.660 --> 01:25:36.520
was macht man damit jetzt und mit output nein nein nein nein ich will das doch

01:25:36.520 --> 01:25:38.700
nicht gar nicht reiten ich will das gar nicht reiten

01:25:38.700 --> 01:25:48.980
ich will output image ich will das als beide ray wie kriege ich denn das hier

01:25:48.980 --> 01:26:01.380
als beide ray output image ist das vielleicht schon beide ray get data

01:26:01.660 --> 01:26:21.480
Ich brauche hier irgendwas.

01:26:21.480 --> 01:26:26.060
Byte Array.

01:26:26.060 --> 01:26:31.740
Ja genau, da Stack Overflow regelt.

01:26:31.740 --> 01:26:36.140
Ba-O-A-O-A, das kann ich mal aussprechen.

01:26:36.140 --> 01:26:37.140
Alter was?

01:26:37.140 --> 01:26:38.140
Ba-O-S.

01:26:38.140 --> 01:26:39.140
Ba-O-S.

01:26:39.140 --> 01:26:49.620
Ach das hat er einfach so genannt, ich dachte das heißt New Byte Array Output Stream.

01:26:49.620 --> 01:26:57.900
und dann sagt man ach so ok verstehe

01:27:06.660 --> 01:27:07.880
und jetzt sagen wir hier

01:27:07.880 --> 01:27:20.120
baus ne schnitt einfach noch so und das können wir jetzt hier

01:27:20.120 --> 01:27:27.140
to buy the rey schon hammer und sie es fakt methode

01:27:27.140 --> 01:27:32.660
png richtig alles klar

01:27:32.660 --> 01:27:43.580
Was hat er hier eigentlich zu merken?

01:27:45.580 --> 01:27:48.020
Was schlägt IntelliJ denn vor?

01:27:48.580 --> 01:27:49.580
Cast to Double.

01:27:51.400 --> 01:27:53.280
Macht er das unter der Haube nicht eh schon?

01:27:54.540 --> 01:27:56.240
Warum soll ich das extra nochmal casten?

01:27:59.580 --> 01:28:00.800
Kegweight HD XD.

01:28:02.660 --> 01:28:05.660
wenn er meint

01:28:14.620 --> 01:28:20.580
so haben wir hier das bild das wird wird es mit 90 grad gedreht gut also jetzt

01:28:20.580 --> 01:28:28.160
kann man sagen das heißt es übrigens heißt es da auch so generate image sagen

01:28:28.160 --> 01:28:39.560
90 grad was was was merken return value ist never used ist alles ich halte jetzt

01:28:39.560 --> 01:28:45.140
sei man nicht so anstrengend java und jetzt aber wir können eigentlich im prinzip können

01:28:45.140 --> 01:28:57.480
wir das hier sagen so schauen wir mal ob das jetzt funzt das kackt bestimmt ab es geht es

01:28:57.480 --> 01:29:11.640
geht. Hacker meinen Modus aktiviert, Leute. Es funzt. Easy.

01:29:11.640 --> 01:29:25.260
Ja gut

01:29:25.260 --> 01:29:28.620
So und jetzt müssen wir irgendwie random

01:29:28.620 --> 01:29:30.640
Also jetzt müssen wir noch randomisen

01:29:30.640 --> 01:29:34.440
Also wir brauchen jetzt zwei Fälle

01:29:34.440 --> 01:29:35.320
Wenn hier

01:29:35.320 --> 01:29:38.140
Ein Name übergeben wird oder kein Name

01:29:38.140 --> 01:29:40.500
Wenn hier noch ein Parameter

01:29:40.500 --> 01:29:41.200
Übergeben wird

01:29:41.200 --> 01:29:52.180
roten wir wie es im parameter steht wenn kein parameter übergeben wird dann wird randomized

01:29:52.180 --> 01:30:00.640
gucken ob das ob das irgendwie funktioniert wir random eisen das jetzt erst einmal hier random

01:30:00.640 --> 01:30:02.640
Jetzt.

01:30:03.680 --> 01:30:03.960
Was?

01:30:05.720 --> 01:30:08.480
Chump-Able-Generator.

01:30:08.600 --> 01:30:09.360
Leap-Able-Generator.

01:30:13.360 --> 01:30:14.660
Ah, yes.

01:30:15.500 --> 01:30:16.140
Exquisite.

01:30:17.660 --> 01:30:19.940
Math.random ist das Richtige hier.

01:30:20.940 --> 01:30:21.300
Ah, ne Moment.

01:30:22.880 --> 01:30:23.940
Ach so.

01:30:28.000 --> 01:30:30.500
Na, eigentlich will ich das nicht.

01:30:30.640 --> 01:30:32.940
Kann man hier Limit oder so eingeben?

01:30:33.180 --> 01:30:33.840
Ne, auch nicht, oder?

01:30:34.620 --> 01:30:35.700
Oh, was?

01:30:36.240 --> 01:30:37.000
D-Compiler?

01:30:42.040 --> 01:30:44.640
Ich wollte mir eigentlich nur anzeigen lassen, was es da für...

01:30:52.720 --> 01:30:53.900
Ähm, ja, okay.

01:30:54.620 --> 01:30:56.540
Java, generate random

01:30:56.540 --> 01:30:58.780
in between range.

01:31:00.640 --> 01:31:06.400
also diese play-on seite die scheint sich gut mit java aus und

01:31:06.400 --> 01:31:16.760
anders geht es nicht wirklich nicht

01:31:17.400 --> 01:31:25.260
dass das finde ich jetzt aber ganz abgedreht java util random next int ja

01:31:25.260 --> 01:31:26.540
Ja, das will ich haben. Das ist gut.

01:31:29.880 --> 01:31:31.100
Moment, warum ist next in

01:31:31.100 --> 01:31:32.240
max minus min

01:31:32.240 --> 01:31:34.480
plus min?

01:31:35.560 --> 01:31:37.460
Warum ist das denn so eklig gemacht?

01:31:40.040 --> 01:31:41.020
Also so basic

01:31:41.020 --> 01:31:42.200
sieht Java gar nicht mehr aus.

01:31:45.220 --> 01:31:46.180
In stream.

01:31:48.360 --> 01:31:49.100
Ach, da

01:31:49.100 --> 01:31:51.160
kann man jetzt min und max eingeben

01:31:51.160 --> 01:31:51.720
oder was?

01:31:55.260 --> 01:32:02.440
Wie viele Random

01:32:02.440 --> 01:32:05.220
Generators gibt es denn jetzt hier eigentlich noch?

01:32:11.860 --> 01:32:13.340
Es hört ja gar nicht mehr auf.

01:32:21.340 --> 01:32:22.800
Es hört wirklich nicht mehr auf.

01:32:25.260 --> 01:32:40.920
also am besten muss ich ehrlich gesagt sagen gefällt mir das hier red local random was es

01:32:40.920 --> 01:32:55.860
bei mir gar nicht gibt doch korinth next in origin

01:32:58.020 --> 01:33:03.600
also quasi from two wieso java weil die bei uns auf der arbeit alles mit java

01:33:03.600 --> 01:33:14.880
programmieren also von null bis 360 wobei das eigentlich von 1 bis 360 weil

01:33:14.880 --> 01:33:20.940
wobei 360 macht eigentlich auch kein ist das inklusive nee das ist exklusive also

01:33:20.940 --> 01:33:28.940
es geht dann bis 359 also von null bis 359

01:33:30.600 --> 01:33:32.840
so

01:33:33.600 --> 01:33:37.780
So, okay.

01:33:38.160 --> 01:33:39.260
Jetzt müsst ihr jetzt, jetzt müsst ihr jetzt

01:33:39.260 --> 01:33:40.800
funzen. Jetzt müsst das Bild random

01:33:40.800 --> 01:33:42.560
rotaten, wenn du das richtig, richtig

01:33:42.560 --> 01:33:44.420
funzt. Ha! Leute!

01:33:48.560 --> 01:33:49.960
Random KQW-Rotation.

01:33:49.960 --> 01:34:05.780
Aber die Qualität des Rotatens ist nicht gut

01:34:05.780 --> 01:34:07.900
Guckt mal, wie schlecht das Bild

01:34:07.900 --> 01:34:10.580
Guckt mal, wie schlecht das Bild rotated ist

01:34:10.580 --> 01:34:13.680
Alter

01:34:13.680 --> 01:34:15.140
Was ist denn das?

01:34:16.800 --> 01:34:18.140
Das ist ja hässlich wie die Nacht

01:34:18.140 --> 01:34:33.980
übrigens kein anti leasing ja trotzdem alles das ist ja wirklich das ist nur

01:34:33.980 --> 01:34:46.880
Ich meine, aber es macht jetzt immer prinzipiell das, was es soll.

01:34:47.620 --> 01:34:48.760
Es rotiert das Image.

01:34:49.280 --> 01:34:51.380
So, und jetzt ist die nächste Frage.

01:34:53.300 --> 01:34:55.140
Wie kriegen wir das hin,

01:34:56.940 --> 01:34:59.500
dass man ein Parameter übergeben könnte?

01:34:59.720 --> 01:35:02.240
Ich will ja nicht wirklich ein Parameter.

01:35:03.980 --> 01:35:12.980
ich will also ich will es ja so angeben können also ich will sagen können was ich will meine

01:35:12.980 --> 01:35:20.740
güte alter pistisch google kann man das ausblenden image search das faktisch ab das muss weg

01:35:20.740 --> 01:35:32.660
ich will ja sowas hier angeben können slash 1 zum beispiel gleich zwei ist gleich drei und dann soll

01:35:32.660 --> 01:35:36.200
das machen aber das ist dann also ich will ich will im prinzip so was hier haben

01:35:36.200 --> 01:35:45.020
war variable

01:35:48.260 --> 01:35:48.660
ok

01:35:52.340 --> 01:35:53.340
schon wieder mal play um

01:35:53.340 --> 01:36:06.000
ach so funzt es ja das ist gut warum es auch immer ein string ist so will ich das haben ja genau

01:36:06.000 --> 01:36:21.940
string kann man dem gleich sagen bitte einmal in int konvertieren oder ja checkt er das so

01:36:23.340 --> 01:36:24.600
Wir wollen das mal aus.

01:36:26.820 --> 01:36:28.500
Mal gucken, ob er das gleich richtig

01:36:28.500 --> 01:36:30.920
convertet. Achso, ja gut.

01:36:33.280 --> 01:36:33.960
Ne, das geht nicht.

01:36:42.480 --> 01:36:42.880
Ja.

01:36:43.460 --> 01:36:45.340
Ja, so toll finde ich das mit den Annotations

01:36:45.340 --> 01:36:45.720
auch nicht.

01:36:46.900 --> 01:36:48.020
Achso, weil ich hier...

01:36:48.020 --> 01:36:49.120
Genau.

01:36:53.340 --> 01:36:54.540
Ja, trotzdem nicht.

01:36:55.240 --> 01:36:56.060
Not found.

01:36:59.320 --> 01:37:01.420
Aha, ich hab's doch richtig gemacht.

01:37:03.480 --> 01:37:07.380
Was soll eigentlich dieses Response Buddy die ganze Zeit?

01:37:07.440 --> 01:37:08.720
Das hab ich hier gar nicht drin stehen.

01:37:10.380 --> 01:37:11.600
Hier braucht man ID.

01:37:20.980 --> 01:37:21.740
So, hä?

01:37:23.340 --> 01:37:34.160
so also ok

01:37:34.160 --> 01:37:41.180
so und jetzt würde ich gerne gucken kann man dem ding in den defaults

01:37:41.180 --> 01:37:47.880
denn die falls irgendwie setzen oder was gibt es sonst noch so

01:37:47.880 --> 01:37:56.660
consumes produce heather params path value weil das ding ist

01:37:56.660 --> 01:38:05.100
ach nee ich musste ich muss das zweimal machen ich brauche es einmal so und ich brauche einmal ohne

01:38:05.100 --> 01:38:13.420
einmal komplett ohne und da wird jetzt hier random gemacht und sonst wird hier einfach das getönt

01:38:13.420 --> 01:38:19.960
Oh, er muss doch funzen jetzt.

01:38:23.260 --> 01:38:24.180
Normalerweise gibt man

01:38:24.180 --> 01:38:25.720
ein Response Entity zurück.

01:38:26.720 --> 01:38:26.780
Und

01:38:26.780 --> 01:38:32.020
Aber

01:38:32.020 --> 01:38:33.260
wie jetzt?

01:38:34.560 --> 01:38:35.980
Also den verstehe ich immer noch nicht.

01:38:36.540 --> 01:38:38.080
Warum ich da Response Body

01:38:38.080 --> 01:38:38.860
hinschreiben soll.

01:38:39.680 --> 01:38:41.580
Weil ich gebe ja hier einfach nur Bytes

01:38:41.580 --> 01:38:48.000
bytes zurück quasi als image png

01:38:48.000 --> 01:38:54.660
schauen wir mal ob das funzt wenn ich da jetzt reinschreibe 740 dann klappt das

01:38:54.660 --> 01:39:01.020
so wenn ich nichts reinschreibe dann wird random rotated so ist das gut

01:39:01.020 --> 01:39:11.180
Das ist gut.

01:39:11.420 --> 01:39:11.840
Das ist nice.

01:39:12.420 --> 01:39:13.380
Jetzt chatte es von uns.

01:39:13.620 --> 01:39:14.540
Keck WS Service.

01:39:15.540 --> 01:39:16.480
In Java.

01:39:18.140 --> 01:39:20.140
Mit dieser super übersichtlichen

01:39:20.140 --> 01:39:23.180
Bildkreisdrehmethode.

01:39:24.400 --> 01:39:25.980
Jetzt natürlich die nächste Frage.

01:39:27.260 --> 01:39:28.440
Jetzt habe ich

01:39:28.440 --> 01:39:33.300
eine Basic Java Anwendung.

01:39:36.120 --> 01:39:37.900
Wie würde ich die jetzt denn bilden?

01:39:39.200 --> 01:39:41.100
Also, kann man in Java

01:39:41.100 --> 01:39:43.200
irgendeine Self-Contained Anwendung bilden?

01:39:43.200 --> 01:39:43.880
Geht das?

01:39:44.940 --> 01:39:46.200
Wenn ich sowas sage wie...

01:39:47.480 --> 01:39:52.440
Also, im Prinzip sowas wie...

01:39:52.440 --> 01:39:56.400
Minus Minus Self-Contained in .NET oder so,

01:39:56.600 --> 01:39:58.200
dass der Java mit einpackt.

01:39:58.440 --> 01:40:08.320
ich habe einen maven maven target für bild ja habe ich hier guck mal da irgendwo life cycles

01:40:08.320 --> 01:40:15.360
ich habe clean validate compile test package install verify

01:40:15.360 --> 01:40:23.580
ja und in docker na ich wollte mal gucken ob das so generieren kann

01:40:23.580 --> 01:40:31.820
geht nicht also irgendwo selbst content binary was dann da rauskommt es gibt es nicht oder

01:40:31.820 --> 01:40:38.900
denn ja weil brauche ich immer noch java ich will irgend so ein self content binary

01:40:38.900 --> 01:40:48.600
wo ich einfach starten kann will ja kein container aber wahrscheinlich geht das nur

01:40:48.600 --> 01:40:51.880
mit extra extra wurscht

01:41:02.820 --> 01:41:06.380
was mir anja nicht bei edu brauchst immer noch java dafür ich habe gedacht

01:41:06.380 --> 01:41:09.480
vielleicht gibt es die möglichkeit dass man eine anwendung generiert weil einfach

01:41:09.480 --> 01:41:13.000
einen binary rausfällen dass ich starten kann ohne dass java installieren muss

01:41:13.000 --> 01:41:15.260
vorher

01:41:18.600 --> 01:41:29.760
So wie man das bei .NET macht, wenn man "-selfcontain angibt, der bundelt die komplette .NET Runtime zusammen und zippt das zusammen in den Binary.

01:41:30.980 --> 01:41:39.680
Dann kannst du starten und er packt das im Hintergrund aus und startet dann mit der Embedded Runtime das eigentliche Programm.

01:41:39.680 --> 01:41:49.500
native image hat

01:41:58.100 --> 01:41:58.880
aha

01:42:02.140 --> 01:42:06.300
das ist glaube ich für mich noch

01:42:06.300 --> 01:42:10.700
das ist für mich zu etwas aller

01:42:17.980 --> 01:42:21.460
ja ich weiß das wollte ich ja nicht vielleicht geht das irgendwie ein fläche

01:42:21.460 --> 01:42:27.920
singen wie eingebaut habe ich gedacht es ist nicht also container image kriege ich

01:42:27.920 --> 01:42:32.540
da schon noch gebaut das ist kein ding das ist aber auch nicht ziel von dem stream so

01:42:32.540 --> 01:42:34.620
So, Chat, habt ihr eine Idee, was wir noch einbauen können?

01:42:34.740 --> 01:42:37.140
So ein bisschen mehr üben wäre schon nicht verkehrt,

01:42:37.180 --> 01:42:40.700
weil wirklich großartig gemacht haben wir jetzt ja noch gar nichts.

01:42:41.480 --> 01:42:42.540
Was könnte...

01:42:42.540 --> 01:42:44.580
Vielleicht...

01:42:44.580 --> 01:42:45.600
Lass doch mal kurz gucken.

01:42:48.620 --> 01:42:50.660
Kann man vielleicht...

01:42:50.660 --> 01:42:55.640
Java Rotate Image mit Anti-Aliasing.

01:42:57.420 --> 01:42:59.480
Image soll aus der Datenbank geladen werden.

01:42:59.640 --> 01:43:00.160
Boah!

01:43:00.160 --> 01:43:02.880
Datenbank-Integration. Das könnten wir tatsächlich

01:43:02.880 --> 01:43:03.300
machen.

01:43:05.020 --> 01:43:06.680
Nee, Datenbank finde ich ganz, Datenbank

01:43:06.680 --> 01:43:08.560
finde ich eigentlich ganz sinnvoll. Wir starten

01:43:08.560 --> 01:43:09.960
irgendeine Postgres-Docker

01:43:09.960 --> 01:43:12.980
und gucken mal, ob wir da irgendwas reinschreiben

01:43:12.980 --> 01:43:14.800
können. Wobei, dann müssen wir

01:43:14.800 --> 01:43:16.720
uns, wenn wir das machen, oh, das,

01:43:16.920 --> 01:43:18.620
nee, dann machen wir ein komplett neues

01:43:18.620 --> 01:43:20.600
Fass auf. Dann müssen wir uns dann mit irgendwelchen

01:43:20.600 --> 01:43:22.480
ORM-Mappern

01:43:22.480 --> 01:43:24.780
und Zeug beschäftigen. Ich glaube, das schafft

01:43:24.780 --> 01:43:26.880
mein Hirn heutzutage jetzt gerade nicht.

01:43:26.880 --> 01:43:32.440
Kannst auch Liquibase, was ist Liquibase?

01:43:56.880 --> 01:44:10.300
Wie macht er das jetzt?

01:44:10.300 --> 01:44:15.940
Ah, hier?

01:44:15.940 --> 01:44:16.140
Ne.

01:44:28.940 --> 01:44:29.500
Äh.

01:44:34.260 --> 01:44:36.980
Und woher weißt du jetzt, dass man da Interpolation macht?

01:44:43.200 --> 01:44:44.100
Durch das hier.

01:44:44.200 --> 01:44:45.100
1, 1, 0.

01:44:45.100 --> 01:44:47.220
Da weißt du ja auch sofort Bescheid, was gemeint ist.

01:44:47.260 --> 01:44:47.920
1, 1, 0.

01:44:51.680 --> 01:44:52.940
Das ist eigentlich...

01:44:52.940 --> 01:44:53.980
Nee, Start ist das.

01:44:54.600 --> 01:44:55.760
Image Observer.

01:44:57.320 --> 01:44:58.500
Observer Factory.

01:44:59.980 --> 01:45:00.500
Singleton.

01:45:02.580 --> 01:45:03.180
Observer.

01:45:09.600 --> 01:45:11.020
Wo macht er das hier?

01:45:15.100 --> 01:45:40.940
Ich check es halt, wie macht er das so hier?

01:45:42.940 --> 01:45:43.780
Und dann?

01:45:45.100 --> 01:45:56.800
dann wird das anti elast oder was macht das jetzt einfach mal ohne dass ich verstehen würde

01:45:56.800 --> 01:46:06.640
checke nicht was ich da mache aber vielleicht ist es jetzt anti elast

01:46:06.640 --> 01:46:17.080
oder muss ich new

01:46:25.480 --> 01:46:28.540
an der chat weiß bescheid okay ich mache das was der chat geschrieben hat

01:46:28.540 --> 01:46:32.140
okay das funktioniert

01:46:36.640 --> 01:46:55.020
aber ich mache das macht es ja auch komplett falsch war das mal schon input image

01:46:55.020 --> 01:47:02.940
checks kann ich muss das hier

01:47:02.940 --> 01:47:20.080
okay chat sagt g2d set set rendering hint und dann was rendering hins alles jetzt aber

01:47:20.080 --> 01:47:27.580
eklig rendering hinz anti alias on aha

01:47:27.580 --> 01:47:34.840
nicht wirklich oder

01:47:34.840 --> 01:47:41.020
sieht immer noch eklig aus wo man das vielleicht irgendwie davor machen

01:47:41.020 --> 01:47:49.180
dann nicht dann bleibt es da bleibt das bild jetzt so hässlich ist auch okay

01:47:49.180 --> 01:47:53.500
dann bleibt es so

01:47:53.500 --> 01:47:59.660
hier machen sie auch so was guck

01:47:59.660 --> 01:48:06.640
aha

01:48:06.640 --> 01:48:10.360
die machen dann noch mehr

01:48:10.360 --> 01:48:20.440
Machen wir auch. Wir copy-pasten von Stack auf auf Low, so wie sich das gehört.

01:48:20.440 --> 01:48:25.780
Sieht immer noch genauso hässlich aus.

01:48:25.780 --> 01:48:38.860
Sieht das jetzt besser aus? Nee, oder? Nee, das sieht auch genauso hässlich aus.

01:48:38.860 --> 01:48:45.700
Ich habe keine Ahnung, ob man das auch machen kann.

01:48:45.800 --> 01:48:47.500
Ich habe mir das copy-pasted von irgendwo.

01:48:48.640 --> 01:48:49.020
Ne, ne.

01:48:49.360 --> 01:48:50.200
Das bleibt jetzt so.

01:48:50.680 --> 01:48:53.560
Das sieht halt hässlich aus beim Rotaten.

01:48:54.300 --> 01:48:54.740
Meinetwegen.

01:49:02.020 --> 01:49:02.460
So.

01:49:05.520 --> 01:49:07.720
Chat, mein Gehirn reicht.

01:49:07.720 --> 01:49:16.820
meinem gehirn reicht für heute mit java als eineinhalb stunden java stellt ich

01:49:16.820 --> 01:49:20.900
habe gelernt wie man das bringt anwendung erstellt warum ein intelligent

01:49:20.900 --> 01:49:24.360
richtig funktioniert habe ich immer noch nicht verstanden

01:49:24.940 --> 01:49:30.420
das reicht für heute an java stellt genug

01:49:30.420 --> 01:49:40.980
immerhin weil großartig kompliziert ist es nicht da muss man auch erstmal drauf kommen

01:49:40.980 --> 01:49:47.940
ich glaube ich gehe jetzt noch mal an die frische luft

01:49:47.940 --> 01:50:03.120
oder würde ich sagen wir hören uns leute bis dann macht's gut

