Moin
Wo hab ich denn mein Handy?
Kegwait
wieder da
Handy gefunden
Gamepad danke für den Sub
Also schon mal was mit HashiCorp Vault gemacht. Ja was gemacht ist halt sehr
allgemein umfassend
Der Katzenzaun trinkt halt nicht. Warum?
Ja wie findest du das Tool? Ich würde mal sagen es ist das beste für diesen Bereich was es gibt. Auf der Arbeit haben wir was anderes
Ich sage jetzt nicht was, aber es ist nicht
Vault. Es ist so ähnlich
Nur mit dem Unterschied und das ist wie bei vielen Tools. Ich mach mal kurz die Katze aus. Und das ist weil bei vielen Tools
die
Verbreitung hat halt auch
wie soll ich sagen
einen gewissen Vorteil. Wenn was verbreitet ist gibt es für
Sonderfälle schon oftmals fertige Lösungen. Du kannst viele Sachen nachgucken. Es ist oftmals auch relativ gut
sagen wir mal für die meisten Standardsachen geeignet. Sonst wäre es nicht so viel verbreitet
Das kenne ich nicht
Ja und deswegen wäre es mir auf der Arbeit lieber wir hätten auch Vault. Haben wir aber nicht
Wir haben was anderes. Oh moin Leute
Ich wollte die Uhr ausziehen
Gucken ob meine App gesynct hat. Ja ja war ich gerade
Ich bin heute eine mittellange Runde gelaufen. Ich bin heute
Ich glaube 7,5 Kilometer oder so
Erst mal kurz
kurz in die App gucken
Die App zeigt wieder übelsten Schwachsinn an. Alter wie wäre es mit Syncen
Sync Champ
Echt ich wusste gar nicht dass es so teuer ist
Ich dachte man kann Vault. Man kann das doch einfach so inszenieren. Man braucht da doch gar keine großartige Lizenz für oder
Was kann denn die Enterprise Version?
So viel Geld?
Viel besseres
Oh meine Garmin App meint ich war sehr productive diese Woche
Weiß ich nicht. Ich bin schneller als vorher. Also ja wahrscheinlich aber
Ich renne jetzt einfach schneller. Ich renne immer so mit um die 160 Puls die Runde. Das ist einfach am angenehmsten
Morgen mündliches Abi Biologie. Ja GLHF
Wieso geht Twitch immer auf 160p?
Das ist einfach am angenehmsten. Morgen mündliches Abi Biologie. Ja GLHF. Wieso geht Twitch immer auf 160p?
Das ist einfach am angenehmsten. Morgen mündliches Abi Biologie. Ja GLHF. Wieso geht Twitch immer auf 160p?
Das macht man mit Twitch auch manchmal wenn ich es auf automatisch stehen hab. Warum weiß ich auch nicht.
Heute hatte ich wieder genau das gleiche
159 Puls
6,12 pro Kilometer
und 7,39 Kilometer
Also Semi
Semischnell. Aber man soll es ja nicht immer übertreiben. Ich bin die letzten Tage
Bin ich viel Fahrrad gefahren. Die letzten zwei Tage bin ich
viel Fahrrad gefahren, weil ich wollte
mein neues Fahrrad ein bisschen austesten. Ich hab jetzt
ja ein neues.
Kam am Freitag an.
Alter, dein Mund schmeckt übelst nach Salz, ey.
Ich bin immer noch
ein bisschen geschwitzt.
Renn nicht, du sollst mal kurz was trinken, ey.
So.
Wollte ich jetzt sagen.
Ja, genau. Am Freitag kam das Fahrrad an.
Und bin ich
am Samstag
bin ich am Freitag
eine ordentliche Runde
gefahren.
Es war nur eine Stunde 15, aber dafür
relativ schnell und relativ
ordentlich reingetreten, gleich mal um zu gucken, wie es läuft.
Gestern auch nochmal.
Und heute Morgen dann
knapp 7,5 Kilometer gerannt.
Eigentlich wollte ich heute Mittag nochmal eine Runde
Fahrrad fahren, einfach weil es Bock macht,
schönes Wetter ist und ich mein neues
Fahrrad ein bisschen
einfahren muss.
Aber wenn ich jetzt so gucke,
ist das Wetter glaube ich
doch nicht so geil.
Ich glaube, die müssten mal AI-basierte
Wettervorhersage machen,
weil gestern
war quasi mehr oder weniger
den ganzen Tag heute
schönes Wetter
und jetzt ist
halt Wolken.
Keine Ahnung, wie die sich da so
krass vertun, ey.
Ist halt ein Riesenunterschied.
Die Wettervorhersage ist doch mehr oder mehr
anscheinend nicht genug AI.
Heute war bis 17 Uhr
schönes Wetter, Sonnenschein.
Aber wenn ich jetzt, es ist sogar in der Vorschau
immer noch, witzigerweise.
Und wenn ich jetzt
umschalte auf heute, ist halt
den ganzen Tag wolke ich mit
vielleicht ab und zu mal ein bisschen Sonne.
Solange es nicht regnet.
Ja, aber es macht mit Sonne deutlich mehr Spaß zu fahren.
Ja, hatte ich auch.
Ich weiß nicht, wie sieht's
da eigentlich mit Nintendo aus?
Ich hatte beides drauf.
Ich hatte Yuzu drauf und ich hatte
wie heißt das andere?
Ryu irgendwas?
Ryu?
Lup? Keine Ahnung.
Ich hab beides drauf.
Manches lief mit dem einen besser, manches mit dem...
Ja, ja, genau.
Eine lief mit dem besser, andere mit dem.
Wie sieht's denn da jetzt mit Nintendo und Yuzu aus?
Haben die da irgendwie... Gab's da was Neues?
Was?
Eigentlich? Ich mein, was anderes...
Wer macht denn auch schon was anderes?
Wirklich?
Tatsächlich, das ist weg?
Das hat doch 100 pro irgendjemand
schon geforkt, oder?
Hehe.
Das hat doch 100 pro schon jemand geforkt.
Hat irgendwas ausgebaut
und nennt das jetzt anders.
Yuzu heißt das jetzt? Wirklich?
Hehe.
Ja, das ist aber egal, ob es ganz viele Seiten gibt,
die das zum Download anbieten. Das Eigentliche
ist die Weiterentwicklung.
Die ist ja wichtig. Das Ding ist weit davon
entfernt, perfekt zu funktionieren.
Das ist halt das Ding.
Da brauchst du schon ein offizielles Repo.
Ein legales offizielles Repo.
Ähm...
Das war der Nintendo DS
Emulator, gell?
Ja, aber die meisten Leute, die das Ding verwenden, sind nicht
in der Lage, an einem Emulator
gescheit mitzuwirken.
Ja. Ich geh davon aus,
dass das Projekt relativ schnell wieder geben wird
auf GitHub.
Vielleicht etwas legalerer Form.
Vielleicht die
Parts entfernt, die
strittig waren.
Weil einen Emulator
zu entwickeln an sich, ist ja nicht verboten.
Teile, die geschützt
sind, damit zu distributen und sowas, das ist verboten.
Hehe.
Übrigens, Leute.
Ich hab's jetzt auf der Arbeit geschafft.
Unser Spanier, der hat letztens
seinen letzten Arbeitstag gehabt bei uns.
Und ich hab ihn an seinem letzten Tag gefragt,
ob er El Risitas kennt.
Und natürlich kannte er
El Risitas.
Wusste auch, dass der in irgendeiner Talkshow bekannt
geworden ist. Ich wollte einfach von dem wissen,
wie bekannt ist der Typ eigentlich in Spanien?
Das konnte er mir nicht so richtig
beantworten.
Aber er
kennt's. Und er meinte,
es ist traurig,
dass...
Das ist eigentlich voll die Boomer-Antwort, wenn man's mal so will.
Er meinte, es ist traurig, dass
sowas heutzutage...
für Spanien bekannt ist.
Dabei
finde ich das eigentlich doch gut. Das ist doch was, was die Leute
zum Lachen bringt. Wo ist das Problem dabei?
Ja, was Nintendo will
und wo Nintendo am Ende
Recht bekommt, sind ja zwei unterschiedliche Paar Schuhe.
Ne, wenn es jetzt...
Wenn ich als Privatperson da jetzt
irgendwie mich mit Nintendo rumärgern müsste, das würde ich
auch nicht machen.
Ja, gibt Schlimmeres, oder?
Gibt Schlimmeres.
Ich geh davon aus, dass wir das relativ schnell
wieder sehen werden, das Projekt.
In irgendeiner Art und Weise.
Ne, so hat er das nicht
gesagt. Der hat...
Der hat sinngemäß sowas gesagt. Ja,
das ist halt das...
Er findet's traurig, dass das
das ist, was sie heutzutage...
Oder dass es solche Sachen sind, die sie heute
irgendwie so quasi in die Welt exportieren.
Keine Ahnung, vielleicht ist er auch einfach ein bisschen...
Vielleicht mag er das auch nicht.
Kein Schlimmer. Hm.
Ja, also...
Die werden dann aber keinen Emulator auf Github
veröffentlichen.
Ich geh davon aus, dass es das
bald wieder geben wird.
Ich könnte mir vorstellen, dass es dann so Kombinationen
geben wird, wie der Sourcecode ist
auf Github, aber Builds
davon gibt es nicht vom gleichen
Projekt, sondern nur von anderen.
Und irgendwie...
Da gibt's... Da wird's garantiert
werden sie Wege finden.
Betreust du eigentlich wieder Azubis im neuen Laden?
Ne, wir haben auch wenig...
Also wir haben gar nicht so wenig Azubis, aber...
Ich persönlich hab meinen Zweifel,
wie viel die lernen dort als Azubis, weil
die sind permanent damit beschäftigt, durch
alle möglichen Abteilungen zu tingeln und sich
das eine oder andere anzugucken.
So wirklich tiefgreifend...
Ahnung hast du davon eigentlich am Ende nicht.
Ich denke, das liegt daran,
dass die Firma
eher Azubis ausbildet, um sich...
Also die bildet die Azubis
für genau diese Firma aus und nicht
als
guten Fisi.
Als guten Fisi müsstest du beispielsweise
schon mal ein bisschen rumgucken.
Oder auch als Anwendungsentwickler.
Was ist denn, was dir gefällt?
Aber dann musst du mindestens zwei Jahre
von deiner Ausbildung dort sein
und dich damit schon tiefgreifend beschäftigen.
Du kannst nicht mal
5 Wochen
Linux machen, 5 Wochen Windows machen,
5 Wochen Netzwerk machen,
5 Wochen Mainframe machen,
5 Wochen Cloud-Geschichten machen.
Das funktioniert nicht gescheit.
Da hast du am Ende ein bisschen Überblick. Du kennst dich so gut, dass du nicht so gut bist.
Du kennst dich super in der Firma aus.
Du kennst dich auch super aus, wie der Laden tickt.
Aber von der Technik hast du am Ende keinen Plan.
Also die machen das sicherlich gut,
Nachwuchskräfte
heranzuzüchten für exakt
diese Firma.
Weil die kennen sich in der Firma und den Workflows
und drum herum alles wunderbar aus.
Aber
was die halt nicht...
Was nicht am Ende rauskommt, ist technisch
gut versierte Fisis und
Anwendungsentwickler.
Du bist Anwendungsentwickler?
Ja gut, das ist natürlich kacke.
Man sollte schon erwarten,
dass man in der Ausbildung als Anwendungsentwickler
auch ein bisschen was mit Softwareentwicklung
und Programmieren zu tun hat.
Weil ansonsten...
Warum wirst du Anwendungsentwickler?
Die Firma muss ja
eine Azubi-Stelle
für Anwendungsentwickler ausgeschrieben haben,
die du bekommst.
Die müssen ja schon was in der Richtung zu tun haben.
Also wie gesagt,
bei uns, ich glaube das läuft
für die Firma gut.
Weil die Nachwuchskräfte ausbilden,
die sich halt super in der Firma auskennen.
Aber da kommen am Ende
keine guten Fisis bei raus.
Gibt es eigentlich einen Emulator, der gut
Multiplayer kann? Du meinst für die Switch?
Keine Ahnung.
Für ältere Konsolen
gibt es das.
Also für sowas wie Super Nintendo
und so.
Kannst du Spiele online spielen,
die früher nur mit
Splitscreen und
oder nicht nur Splitscreen.
Multi-Input-Controller.
Das wichtigste ist,
dass du die Abschlussprüfung packst.
Und dazu musst du gar nicht so viel Ahnung haben.
Dazu musst du alte Abschlussprüfungen machen
und wissen, wie die IHK fragt
und was die IHK hören will.
Das ist eigentlich das Schwierige an der Abschlussprüfung.
Gar nicht so sehr, dass man großartig Ahnung haben muss.
Man schafft die Abschlussprüfung zum Fachinformatiker
auch ohne Ahnung zu haben.
Klingt jetzt doof,
ist aber so.
Du kannst das schaffen, komplett planlos,
sofern du checkst, wie die IHK Fragen stellen
und was die hören wollen.
Das Fachinformatiker-Buch ist ja glaube ich nicht mehr zugelassen
zur Abschlussprüfung.
Das war auch so eine Gelddruckmaschine
für diesen
Verlag,
dass die das einzig zugelassene
Prüfungsbuch hatten.
Klar, haben wir schon mal
vor zwei Wochen geguckt.
Blödsinn, letzte Woche haben wir den geguckt.
Den zweiten Teil schon.
Zum Anzeigenhauptmeister.
Immerhin ist er konsequent.
Sagt der Polizei,
sie sollen mal ihren Umweltschild sauber machen
und wenn sein Fahrrad umkippt,
ruft er auch die Polizei an.
Was dir die Ausbildung bringt,
dass du eine Ausbildung fertig hast,
bringt dir das.
Dass du danach einen Job findest,
bringt dir das.
Du wirst natürlich Schwierigkeiten haben,
wenn du gar keinen Plan hast,
aber ganz ehrlich,
die wichtigsten Sachen habe ich eh
für mich gelernt und nicht auf der Arbeit.
Am Ende hat es immer auf der Arbeit
was gebracht,
wobei ich auch sehr viele Sachen gelernt habe,
die ich dann nicht gebraucht habe,
weil es mich einfach persönlich interessiert hat.
Ja klar, natürlich müssen die
ordentlich ausbilden,
aber wenn das nicht der Fall ist,
was ist besser?
Nichts beigebracht kriegen,
sich privat mit dem zu beschäftigen,
worauf man Bock hat
und die Abschlussprüfung zu machen.
Oder nichts beigebracht zu kriegen,
nichts zu machen
und die Abschlussprüfung nicht zu packen.
Das ist doch mit Sicherheit besser.
Du sagst,
scheiß auf den Laden,
ich suche mir danach was Neues,
wenn es kacke ist.
Aber das geht nur,
wenn du eine Abschlussprüfung gepackt hast.
Natürlich müssten die dich ausbilden,
aber anscheinend machen sie es ja nicht.
Ich weiß ja nicht,
was du schon unternommen hast.
Ich habe schon viele Beauftragte
für Ausbildung,
bei denen kann man durchaus mal ansprechen,
dass du den Eindruck hast,
dass dein Kenntnisstand
nicht dem entspricht,
wie lange du schon in der Ausbildung bist,
deiner Meinung nach.
Und dass du gerne mehr Sachen machen würdest,
mal gucken, was die da sagen.
Aber ansonsten gibt es auch viele Scheißläden,
da ist das Beste,
was du machen kannst,
dir privat das angucken,
was du machen willst vielleicht
und eben die Abschlussprüfung schaffen,
dass du da weg kannst.
Was?
Oh, keine Ahnung.
So, Arch by the way,
ich mache mal kurz meine VM an
und eine Runde Package Updates,
weil Arch Linux...
Nein, nein, ich mache nicht 17.5 Update.
17.5 ist verbuggt.
AF.
Übrigens, jetzt wo ich gestern
und vorgestern wieder ein bisschen
Fahrrad gefahren bin,
ist mir immer wieder aufgefallen,
wie beschissen
die Straßen hier
in der Gegend oder wahrscheinlich
in Deutschland allgemein sind
zum Fahrradfahren.
Also mehrere Sachen.
Erstens, die Fahrradwege sind oftmals
in unterirdisch schlechtem Zustand.
Also sie sind durchzogen mit Wurzeln
und kaputtem Asphalt
und alles.
Wisst ihr, ich habe mich früher immer aufgeregt
da drüber, wo ich noch nicht
selbst Fahrrad gefahren bin.
Ich habe mir gedacht,
was kann ein Fahrradfahrer eigentlich
auf der Straße machen,
wenn doch direkt daneben ein Fahrradweg ist.
Jetzt weiß ich es.
Die fahren auf der Straße,
weil du auf den Fahrradwegen nicht
gescheit fahren kannst.
Ohne dass dir der Arsch blutet.
Weil du so durchgeschüttelt wirst
die ganze Zeit.
Ich komme aus der Nähe von Frankfurt.
Zwischen Frankfurt und Hanau.
Also in Frankfurt selbst,
das ist super nice,
aber ein bisschen draußen ist halt richtig beschissen.
Und was mir halt auch
gestern wieder aufgefallen ist,
du kannst eigentlich
gar nicht
wirklich risikofrei,
wie soll man das sagen, fahren.
Du bist immer
komplett ausgeliefert dem,
dass
die Autofahrer aufpassen
im Endeffekt.
Zum Beispiel bin ich gestern
aus einer Straße raus gefahren.
Absichtlich nicht dort,
wo Autos fahren.
Ich fahre ein bisschen
Waldwege oder Fahrradwege
oder irgendwas.
Ich fahre ungern dort, wo Autos sind.
Witzigerweise ist es natürlich da,
wo Autos sind, wurde ich auch umgefahren.
Aber das Ding ist,
ich bin gestern
aus einer Straße raus gefahren
und das ist
im Endeffekt
nicht überschaubar
als Fahrradfahrer.
Du hast von links
eine Straße, die kommt.
Du hast von rechts eine Straße,
also du hast geradeaus eine Straße.
Von links kann einer kommen,
von rechts kann einer kommen.
Theoretisch können die dich von hinten überholen,
weil es denen ja egal ist, ob du da stehst.
Von links schräg kommt eine Straße noch
und von rechts schräg kommt eine.
Das sind quasi 1, 2, 3, 4, 5,
also mit der Straße, auf der du draufstehst,
5 Straßen,
wo Autos rauskommen können.
Die gehen nicht irgendwie im rechten Winkel
irgendwie gescheit aufeinander,
was ja bei 5 Straßen auch nicht geht,
sondern so schräg
und die Ausfahrt ist auch so breit
und langgezogen,
du siehst gar nichts.
Und wenn du ganz vorne stehst,
damit du in alle Richtungen gucken kannst,
stehst du im Endeffekt
schon schräg auf dem
Überweg,
der da ist
und dadurch, dass die Ausfahrten
so breit sind,
kommst du dir schon fast vor,
als stehst du mitten auf der Kreuzung.
Das ist super beschissen gemacht, Alter.
Das sicherste ist da echt,
du fährst einfach ein Stückchen nach rechts,
steigst ab
und
guckst dann an der Straße
und rennst mit dem Fahrrad so über die Straße
und steigst auf der anderen Seite wieder auf.
Es ist echt
nicht durchblickbar.
Und du bist permanent darauf angewiesen,
dass
die Autofahrer aufpassen,
was halt viele nicht machen.
Also deswegen,
ich vermeide alle Straßen,
wo irgendwie Autos fahren,
wenn es nicht irgendwie geht.
Also die beschissenste Stelle an der Route,
die ich fahre, ist eigentlich immer
von dort, wo ich wohne, rein und raus.
Also die paar Meter
durch den Ort,
bis ich da ein bisschen raus bin.
Oft ist es für Autofahrer genauso schlecht.
Das ist für mich aber
noch schlechter, wenn es für Autofahrer...
Weil ich ziehe auf jeden Fall den kürzeren.
Ist das UI eigentlich standardmäßig schon
vorinstalliert? Nein.
Außerdem gibt es nicht das UI.
Das ist I3.
X11
Xorg mit I3.
Falls du die Config
brauchst oder es interessiert,
wie ich das configured habe,
dann kannst du auf Github hier gucken.
Macht eigentlich der Fiat Champ.
Gibt es da neue Issues?
Ja, alles perfekt.
Okay, habe ich jetzt hier alles updated?
Ja.
Es ist richtig scheiße,
da Fahrrad zu fahren.
Ganz ehrlich, so unangenehm das ist,
ich glaube das sicherste ist,
und das werde ich in Zukunft auch machen,
an diesen unübersichtlichen Dingern,
ich fahre einfach an die Seite,
steig ab,
schieb das Fahrrad auf den Gehweg,
guck vorne,
ob was kommt, schieb das Fahrrad
über die Gass
und fahr auf der anderen Seite weiter,
weil da blickst du nicht durch.
So.
Ach, by the way.
Warum lädt das jetzt nicht?
Ah, der Coffee Champ ist am Start.
Also ich bin gestern,
äh, nicht gestern, vorgestern,
Max FPS,
Twitter,
ich bin gestern,
oh Mann,
Alter, Elon,
please, warum ist Twitter so unusable?
Warum ist Twitter
so unusable geworden?
So, also,
das ist meine Einweihungsrunde gewesen
fürs neue Fahrrad.
Freitag ist das gekommen,
und da bin ich quasi
direkt nach der Arbeit
bin ich Stunde 15 hier
eine Runde gefahren,
es war übelst Gegenwind,
und
Gassi gehe ja am Start,
Familie mit Kindern am Start, ich muss also laufen,
bremsen, und trotzdem
war ich noch ungefähr 2 kmh
die gleiche Strecke schneller als sonst.
Also als letztes Jahr.
Also man sieht,
man sieht die
im Winter
im Winter auf dem
Smart Trainer hocken,
mit meinem ollen Fahrrad,
was heißt mit meinem alten, das alte ist ja auch erst ein halbes Jahr alt,
aber halt kaputt,
hat sich gelohnt, ja.
Ich hab jetzt auch eine viel höhere durchschnittliche
Herzfrequenz gepackt,
weil mir die Beine nicht mehr so weh tun.
Vorher hatte ich immer 130
oder sowas, weil mir die Beine sofort
gebrannt haben, wenn ich ein bisschen
Gas gegeben hab.
Aber jetzt ging es echt ganz gut.
Ne, mach ich nicht.
Mach ich nicht, mach ich nicht.
Da müsste ich
ja, ich hab mir das überlegt,
ich werde nicht mit dem
Fahrrad auf die Arbeit fahren,
ich wollte ja eigentlich, ich werde nicht mit dem
Fahrrad auf die Arbeit fahren, nicht zurück,
weil mein Fahrrad ist teuer,
mein Fahrrad hat einen Carbonrahmen und ich hab keinen Bock,
dass das irgendwie verkratzt oder Leute irgendwie
mit irgendwas dagegen hauen aus
versehen in der Bahn und sonst was.
Es ist zwar morgen
jetzt nicht, wenn ich fahre, nicht super brechend
voll, aber voll genug
und ich muss dann in die Bahn mit dem Fahrrad
und dann muss ich quasi aus dem Hauptbahnhof
raus und das bei uns
auf der Arbeit abstellen, dort
gibt es halt einen extra Fahrradraum.
Was ich mir jetzt überlegt habe ist,
ich kaufe mir noch ein Alu E-Bike
und
damit komme ich dann auch heim, wenn ich mal gar keinen
Bock habe und ich komme theoretisch
auch hin, keck Alu,
und ich komme theoretisch auch hin
morgens,
wenn ich keinen Bock habe
und scheiß Wetter ist und so.
Ich glaube, das werde ich machen.
Ich kaufe mir quasi noch eins
mit Motor und stabil
und
ausgerüstet mit
schon Lichtern und
Schutzblechen, falls es spritzt
und sowas.
Ich glaube, ich kaufe mir noch ein zweites für
nach Frankfurt fahren.
Es sind ungefähr
28, 30 Kilometer
ja, sagen wir mal
28 Kilometer, so circa
von mir
dorthin, wo ich
arbeite. Das ist eine leise Strecke.
Dann ist man
schön wach morgens.
Ja, bieten sie an, aber
das mache ich nicht. Ich habe da keinen Bock,
irgendwas an der Backe zu haben.
Ich kaufe mir was, was mir gut ist.
Ich habe gerade wieder Bereitschaft dieses Wochenende.
Wo habe ich mein Bereitschaftshandy?
Mal gucken, ob das was gewesen ist. Ne, ist nichts gewesen.
Und alleine schon,
das ist halt echt der Witz,
wenn du dir überlegst,
zweimal Wochenende Bereitschaft gemacht,
aber sagen wir mal, ok, ne nicht ganz, das stimmt nicht.
Ich muss ja noch Steuern bezahlen, was ziemlich sagt.
Sagen wir mal sechs, sechs
mal, sechs mal Bereitschaft
gemacht, Wochenende
kann ich mir das
Fahrrad kaufen.
Und das ist jetzt schon mit Steuern abgezogen.
Mit 50% Steuern gerechnet,
soviel, das ist ja gar nicht. Also realistisch
sagen wir mal, vier bis fünf mal, vier bis fünf
mal Bereitschaft am Wochenende machen, dann kann ich mir
das E-Bike kaufen.
Easy, easy.
Was macht der Bereitschaftschamp?
Der funktioniert, den verwende ich seit ein paar Wochen
schon, seitdem wir hier gebastelt haben im
Stream.
Alter, ich kann ja immer schreiben,
Wobblords.
Den verwende ich schon, seit
hier, seitdem wir da
geproggert haben im Stream.
Der sticht mich automatisch ein und aus,
was Bereitschaft angeht.
Der läuft auch jetzt im Hintergrund
auf meiner
Linux VM auf der Arbeit
und der wird mich Montagmorgen um
sieben Uhr ausstechen.
Äh, sieben Uhr dreißig.
Acht Uhr?
Um sieben Uhr dreißig.
Der Einzige, der mich überholt hat hier auf
meiner Runde,
äh,
der Einzige, der mich hier auf meiner
Testfahrt überholt hat
mit dem neuen Fahrrad, war tatsächlich
ein Fahrradkurier.
Die sind krass drauf, die Typen,
die haben Übung.
Hattest du schon mal einen Fall von
Bereitschaft? Ja, ja, schon öfters.
Kommt ab und zu mal vor.
Aber selten. Es kommt so selten
vor, dass
ich es immer noch
vorziehe, Bereitschaft
zu haben versus keine Bereitschaft zu haben,
weil der,
das Verhältnis von Aufwand zu Geld
immer noch
positiv überwiegt, ja.
Ein Wochenende war wirklich
nervig, das war letztes Jahr im
Ende November, letztes Jahr Ende November.
Da hat mich erst
Samstags morgens irgendjemand angerufen
und da war dann auch wirklich was kaputt.
Da hat irgendein
Windows Sync nicht funktioniert, hab ich eigentlich
gar nichts mit zu tun. Ich kümmere mich ja auch nach
wie vor hauptsächlich um
Linux Zeug, aber da hat irgendwelche
Windows Sachen nicht richtig gesynct,
was dann dazu geführt hat, dass irgendwelche
Berechtigungen nicht gestimmt haben, was dann dazu
geführt hat, dass die auf irgendwelche Linux System
was nicht machen konnten, ja ganz wirr.
Da war ich bestimmt eine Stunde zu gange,
die ich übrigens nie abgerechnet habe,
die Stunde, weil
wenn ich, wenn ich
eintragen würde in unserer Zeiterfassung,
ich habe eine Stunde
gearbeitet am Samstag, dann kriege
ich Zeit gut geschrieben, aber ich habe genug Zeit,
ich bevorzuge lieber
das Geld zu bekommen.
Ich habe die gar nicht eingetragen.
So und dann das gleiche Wochenende
war dann nachts
oder morgens, Sonntag
morgens kam dann noch irgendeine Monitoring
Meldung, dass Datenbank
mäßig was kaputt ist.
Und da dachte ich erst,
das ist
einfach nur eine
falsche Monitormeldung,
weil da kam sinngemäß sowas
wie Monitoring
Agent empfängt keine Daten mehr.
Habe ich mich eingeloggt,
auf den Server, Server lief,
sah gut aus, habe ich mir gedacht, ey
Monitoring hat Probleme.
Habe ich gesagt, hier
bitte Montag Frühschicht drum kümmern,
Server ist da, alles gut.
Und dann Sonntag Mittag habe ich mir gedacht, ey
guckst du nochmal drauf?
Und dann ist mir aufgefallen, nee, das ist eine Datenbank
Kiste, auf der die Datenbank wirklich kaputt ist.
Und dadurch, dass die Datenbank
kaputt ist, hing der
Monitoring Agent und der
Monitoring Agent hing, weil
irgendjemand einen synchronen Datenbank
Abfragecheck programmiert hat.
Richtig, richtig pepega.
Also sprich, wenn die Datenbank
kaputt geht, dann hängt der Monitoring
Check für immer und dann kackt der
Monitoring Agent ab. Also, weiß nicht,
schlechter geht's kaum noch.
Ich meine, hätte auch ich sein können,
der das gebaut hat, ja, aber
hat wahrscheinlich nie einer ausprobiert.
Deswegen hat man gar nicht mitbekommen,
dass die Datenbank kaputt ist, sondern
es kam nur eine Meldung, Monitoring Agent kaputt.
Halt, eigentlich ziemlicher
Fail.
Und da habe ich dann abends noch
denjenigen erreicht, der
für diese Datenbank zuständig ist
und er hat gesagt, ey, weißt was,
lass einfach neu starten und gut ist.
Dann habe ich
die Datenbank neu gestartet und dann
ging's wieder.
Wir haben im Team einen, der immer über alles meckern muss.
Der war natürlich der Meinung,
Datenbank neu starten war keine gute Idee,
weil, ach, keine Ahnung.
Kennt ihr das? Es gibt Leute, die müssen immer meckern.
Moin. Es gibt Leute, die müssen immer meckern.
Was auch witzig ist,
letztens, letztens bei uns im
Team Daily, ne, müsst ihr mir mal
sagen, Leute, ob ihr auch so
Kollegen habt oder so Leute kennt.
Letztens bei uns im Team Meeting
habe ich gesagt, hier, sagt mal,
wir sind jetzt ja fertig, aber ich wollte euch mal
was fragen.
Habt ihr auch alle so viele Meetings?
Äh, da hab ich, da hab ich
mal meinen Kalender kurz gescreenshot, hab gesagt,
hier, ich hab jetzt mal ausgerechnet, das ist kein Witz,
Leute, ich hab ausgerechnet, letzte Woche,
ich arbeite ja nur vier Tage,
ja, die Woche, letzte Woche
hatte ich acht Stunden die gesamte Woche
zum Arbeiten. Ich hab die Mittagspause schon
abgezogen.
Acht Stunden, der Rest war Meeting.
Also ich hab jetzt ohne Scheiß
von vier Tagen,
also könnte man quasi sagen,
zwei, ja,
drei Viertel hab ich gemietet.
75, 75 Prozent,
75 Prozent Meeting-Anteil. Nice, oder?
So, und
da hab ich gesagt, Leute, habt ihr das auch?
Und da meinen alle, oh ja,
ist bei uns auch, vielleicht teilweise nicht ganz so
krass wie die Woche, aber
haben wir auch.
Und
dann haben wir ein bisschen drüber geredet und ich hab so
drei, vier Sätze mit einem anderen Kollege
ausgetauscht. Und dann kommt dann unser
Lehrer wieder um die Ecke und meint,
ja, ich geh dann mal oder
irgendwie sowas in der Richtung,
ihr könnt euch ja danach
weiter drüber unterhalten.
Da hat er so
gemacht, er fühlt sich
ausgegrenzt so von dieser Diskussion.
Da hab ich schon gedacht, hä?
Was ist jetzt, was ist jetzt los?
Weil ansonsten kann der gleiche Typ
zehn Minuten Monologe halten,
ohne dass es ihn irgendwie juckt, dass er
zehn Minuten der Einzige ist, der was erzählt.
Und...
Da hab ich mich ein bisschen aufgeregt
und
dann haben wir ihn ein bisschen geflamed
und dann war schlechte Stimmung, so.
Kennt ihr so
Leute, die laufend irgendwie
nerven müssen mit irgendwas?
So grundlos?
Das ist wirklich anstrengend, ja.
Aber was man daran auch merkt,
und das finde ich eigentlich ganz witzig,
was man daran auch merkt, erstens
bin ich deutlich entspannter, was das angeht, als früher.
Ich mein, mich regt's immer
noch auf, aber...
Ich raste dann nicht mehr aus.
Und...
Und...
Krieg mich übelst auf.
Ich reg mich dann mal kurz auf,
hier in der Runde, dann ist gut.
Also, ich bin da deutlich entspannter
geworden, was das angeht.
Und, was man auch
daran merkt ist,
ich bin jetzt fast ein Jahr dort
und es gibt halt Sachen, die einen einfach
nerven. Was man daran merkt ist,
sobald es genug Sachen gibt,
die einen nerven, merkt man,
dass so diese Einarbeitungsphase,
Eingewöhnungsphase vorbei ist.
Weil am Anfang, wenn man irgendwo neu ist,
findet man das in der Regel eigentlich toll
und so negative Sachen merkt
man gar nicht so. Sobald man
aber merkt, okay, es gibt genug
Dinger, die dir so spontan einfallen, die dir auf den
Sack gehen, dann weißt du, okay, du bist angekommen,
alles alltagsmäßig passt.
Aber verhältnismäßig muss ich immer
noch sagen, es nervt mich deutlich weniger,
als beim alten Laden und vor allem
ganz andere
und viel unwichtigere
Sachen, die mich nerven, als beim
alten Laden. In meinem Team
finde ich alle nice, außer
halt wie gesagt unser
Spezialmeckerer, der bei überallem was zu meckern hat.
Aber es ist halt ein bisschen schade
insofern, weil immer, weißt du,
wenn du einen dabei hast, der die ganze Zeit
rummeckert, das zieht die anderen Leute
dann auch immer runter so. Die merkst du direkt,
die haben gar keinen Bock mehr irgendwie
weiterzumachen.
Was ist das Unwichtigste, worüber du dich gerne...
Oh, da muss ich mir Gedanken machen, da gibt's bestimmt sehr
viel.
Ja, das stimmt.
Ich reg mich
auch gern auf über Leute, die sich
über unsinnige Sachen aufregen.
Das ist ja vielleicht noch unsinniger.
Da müsste ich mir mehr Gedanken
drüber machen, aber es gibt sicherlich
einiges. Mich regt
vieles auf
und vieles davon ist sehr unwichtig.
Was mich zum Beispiel
nervt ist, und das ist super unwichtig,
jetzt mal Gaming
Aspekt, was mich
übelst abfuckt, sind Leute,
die ein Spiel
seit über 20 Jahren spielen,
aber die absoluten Basics
nicht geschissen bekommen.
Das regt mich immer auf.
Extrem regt mich
das auf, ich bin immer am flamen.
Beispiel, okay,
nicht LOL,
naja gut, LOL und Dota
ist ja nur
toxic games
ever,
wobei ehrlich gesagt Overwatch rankt
auch schon ganz schön heftig.
Beispiel,
ich nehme mal das als Beispiel,
was mich gestern aufgeregt hat,
ich spiele ja
Dark Age of Camelot seit 2002
und ich spiele
das aktuell auch immer wieder auf dem
Freeshot und aktuell auch auf dem Freeshot
und
das ist ein MMO,
ein PvP fokussiertes MMO.
Du kannst natürlich auch Monster kloppen oder so,
aber der Kern des Games
ist PvP fokussiert.
Das ist PvP fokussiertes MMO.
So und
dort hat man 8er Gruppen.
Also nicht so wie heute
klassisch in MMOs 5er Gruppen,
8er Gruppen, was ich sehr nice finde,
weil das bietet enorm viele Möglichkeiten,
wie man Gruppen bauen kann
und mehr Variationen irgendwie.
Dafür, dafür brauchst du natürlich
auch 8 Leute.
8 Leute zusammen bekommen ist um ein Vielfaches
schwieriger als 5 Leute zusammen zu bekommen
und dementsprechend invietet man halt immer
auch mal random Leute. Ja.
Und du brauchst in dem Game so ein paar
Sachen, dass du gescheit PvP
spielen kannst. Zum Beispiel brauchst du eine
Klasse, die dein
Runspeed erhöht,
weil sonst bist du zu langsam und wirst von allem abgefarmt,
weil dich alle erwischen.
Ja, du brauchst eine Klasse, die den Runspeed
erhöht. So.
Und da habe ich gestern random einen eingeladen
und der war immer komplett
am Arsch der Welt.
Der hat einen Gegner gesehen
und ist dann einfach mal, obwohl
wir gar nicht zu den Gegnern hingelaufen sind, ist
dann einfach mal 2 Minuten den Gegnern hinterher
gesprintet, sodass die Gruppe keinen
Runspeed mehr hatte, weil er weg war und dann ist er allein
gestorben und sowas. Das sind so
Dinger, die fucken mich übertrieben ab
und ich denke mir, Leute, ihr spielt das
Game seit über 20 Jahren,
aber ihr seid nicht in der Lage, einfach mal auf die
Karte zu gucken, wo die Gruppe ist. Das ist so,
das ist nicht mal Basics, das ist
was, was ein Level 1
Typ lernt, der
neu in dem Game ist. Die Karte aufzumachen
und gucken, wo die anderen Gruppenmitglieder
sind. Aber nein, der hat es nicht hingekriegt.
Und das hat mich so
aufgeregt. Oder zum Beispiel,
wir sind in ein Boot gestiegen, um woanders hinzufahren
im PvP-Gebiet.
Er hat es wieder nicht gecheckt, war
30 Sekunden AFK,
ist dann gestorben
an der Bootanlegestelle und
hat dann gemeint, Guys, where are you?
Wir sagten, ja, seit 30
Sekunden im Boot und schon weg.
Das hat mich übelst
aufgeregt. So Leute hast du halt massig
dort, wo ich mir immer denke, Mann,
Leute, ihr spielt das Game seit
20 Jahren
und ihr seid schlechter
als jemand, der es zwei Wochen
spielt, der sich
ein bisschen Mühe gibt. Das kann doch nicht
sein. So,
das regt mich. Das ist eines der Sachen, die mich
tatsächlich, was extrem
unwichtig ist, so fürs Allgemeine gesehen,
worüber ich mich sehr aufregen kann.
Ja, ist es, ist es.
Die sind so schlecht, die Leute. So schlecht.
Es ist unglaublich,
wie schlecht Leute in Games sein können,
die sie seit 20 Jahren spielen.
Ja, Google will C schrittweise
ausmustern. Ja, sollen
sie Go, sollen sie
Rust verwenden?
Außerdem hat Google
nicht angefangen, irgend so einen komischen
C++
Kompa-, ne, irgendein
C++-Dialekt oder irgendwie sowas
zu entwickeln. Wie hieß denn das? Carbon, oder?
GitHub, Carbon, Go,
ne, Google.
Wie läuft denn das eigentlich so?
Interessiert keinen so wirklich, oder? Ich hab's ja,
ich mein, hat viele, viele Sterne.
Wie gesagt, ich hab ja von Anfang an,
als ich das gesehen hab, prophezeit,
das ist vielleicht sowas für Google-Leute,
aber das wird keine weitreichende
Verbreitung finden. Außerdem finde ich
das übelst hässlich aus. Da kann ich auch
gleich Rust verwenden.
Ich mein, wenn ich Kompatibilität zu C++
Libraries und Sachen brauch, dann natürlich schwierig.
Ja, das kann schon sein.
Möglich, möglich.
Dann ist aber die erste Frage,
warum spielt man ein gruppenbasiertes
PvP-MMO
und geht in Gruppen und spielt nicht solo?
Und es ist für die eigene
Gaming-Experience ja auch schlecht,
weil man permanent tot ist und
scheiße spielt. Und das dritte ist,
so nach 20 Jahren sollte
man auch so einen gewissen Mindestanspruch
daran haben, wenn man ein Spiel spielt,
so die absoluten Basics,
die Einsteiger am ersten Tag lernen
zu können, oder? Ah ja, GitHub
Trends, gute Frage, müssen wir gleich mal gucken.
Hat Max ein Video über sein Setup?
Äh, ich
spiele nicht auf Linux.
Ha! Glaubst du nicht ernsthaft,
dass ich mir das antue, unter Linux zu spielen?
Ich spiele nicht unter Linux,
ich spiele unter Windows und hab meine
Linux-Kiste hier am Start, wenn ich
Linux-Sachen brauche.
Ich bin doch nicht
lebensmüde und mach
hauptsächliches Gaming unter
Linux, ja. Videobearbeitung,
Thumbnails, Streaming
und Gaming, das mach ich mal schön unter
Windows. Und alles, was technikbezogen ist,
mach ich schön unter Linux. Ich benutze
das, was seine Stärken hat,
ja, dort, wo es seine Stärken
hat und versuche nicht
zwangsläufig alles unter einem zu machen.
Also ich kann dir das auch nur empfehlen,
wenn du möglichst wenig Probleme
haben willst, was Gaming angeht,
dann spiel einfach weiter unter Windows.
Nichts,
nichtsdestotrotz funktioniert erstaunlich viel
mittlerweile recht gut unter Linux.
So wenig Tabs, ich hab nicht so wenig Tabs
offen, hier hab ich noch ein paar offen
und hier hab ich auch noch ein paar offen.
Und hier hab ich das, was du gesehen hast, ist nur Chrome.
Wir haben einen Tag, alle zwei
Wochen haben wir Sprintplanung,
Sprintretrospektive,
Sprintreview und alle mögliche.
Wie kann man 7TB hosten?
Kommt drauf an, wie schnell das
angebunden sein muss. 80%
Meetings die Woche ist halt komplett lächerlich
immer. Ist bei mir ja wie gesagt, ich hab ja
ausgerechnet, diese Woche hatte ich 75%
Meetings. Ist halt absolut lächerlich.
Weil dieses ganze in Meeting
gehocke, ist meistens, meistens
nicht alles. Bei manchen ist es auch, ist es auch
nicht so. Meistens braucht man dort deine
Expertise überhaupt nicht. Du bist einfach nur
dabei, weil du vielleicht zufälligerweise
in der richtigen Gruppe, in der richtigen Abteilung, im richtigen
Projekt bist. Aber um das, was es da
geht, ist vollkommen egal, ob du jetzt guter Entwickler,
schlechter Entwickler bist, Durchblick bei der
Architektur hast, sonst was. Du bist einfach
nur dabei. Oftmals muss man diesen Meetings
ja nicht mal großartig was zu beitragen und
sagen. Aber am Ende,
wenn du nicht dabei gewesen bist und sagst, hä, wie
hab ich gar nicht mitgekriegt, sagen sie dir,
ja, wärst du beim Meeting gewesen, hättest du es mitgekriegt.
Nö, ich nicht.
Ich find's da ganz gut. Bezahlung
ist gut, ähm, Homeoffice-Regelung
ist gut, äh, Arbeit
an sich ist auch okay.
Es sind halt sehr viele
Meetings, aber ich denk mir,
wenn die Firma das will
und wenn die sich dann auch nicht beschweren am Ende, dass
halt nix geschafft wird,
soll es so sein. Ich hab
kein, ich hab da prinzipiell keine Schmerzen da
mit 6 Stunden am Tag zu mieten.
Oder 75% zu mieten.
Das ist easy, das ist easy für
verdientes Geld. Auf den meisten Meetings
musst du, was heißt musst du,
kannst du nicht großartig was beitragen,
weil's gar nicht um deine Sachen geht. Aber vielleicht
musst du ab und zu was mitkriegen.
Guckst du auf den zweiten Bildschirm Twitch
oder irgendwas? Was willst du machen?
Also ich mach ja meistens, während ich
miete, irgendwas anderes nebenbei.
Irgendwelche
Terraform-Sachen anpassen
oder vielleicht, wenn mich irgendein Entwickler
angeschrieben hat, dass, letztens hat mich
zum Beispiel ein Entwickler angeschrieben, er kommt von seinem
Entwicklungs-VM nicht mehr auf die Entwicklungsumgebung
drauf. Da guck ich, äh,
irgendwie, ob er's verkackt hat
mit seinen SSH-Tunneln und sowas.
Das mach ich meistens. Ich mach ja meistens sogar noch was sinnvolles
neben den Meetings, ja.
Das ist nämlich dann auch so'n
Ding, wo die Planung
nicht, nicht mit der Realität
übereinstimmt. Weil guck mal, dir wird jeder
Projektmanager oder sonst was sagen, mehr als
100% kann man nicht
verplanen. Das stimmt aber
gar nicht, genau genommen, ja.
Weil, wie, wie,
wie ist es jetzt, Chat?
Stellt euch mal vor, ihr sitzt ne Stunde auf,
im Meeting. Dann habt ihr
ne Stunde für dieses Meeting quasi
verplant. Aber wenn ihr in dieser
Stunde, während ihr eigentlich nur im Meeting
sitzt, was arbeitet,
dann habt ihr ja eigentlich
150% gearbeitet
in dieser Stunde.
Ihr habt die offiziell geplante
Meetingzeit gehabt, plus ihr habt noch was anderes
gearbeitet nebenbei.
Wie, wie bildet
man sowas in der Planung ab?
Der Friseur, ja, den gibt's noch. Der hat sich
auf Twitch umbenannt, hab ich gesehen.
Der streamt aber nur so komische Mobile
Weep Games.
Ich hab grade nichts, was ich
mit dem ESP32 in der
Heimautomatisierung umsetzen will.
Moin, Sarix.
Würdest du auch 75%
mieten, wenn du 100% arbeiten würdest?
Vielleicht minimal weniger,
weil, zumindest
wenn ich mir meinen Kalender angucke,
montags
gar nicht so viele Meetings sind.
Das könnte aber natürlich sein,
dass ich montags
einfach nicht so viele Meetings im Kalender
stehen habe,
weil ich montags nicht
da bin. Also,
die laden mich montags halt auch gar nicht ein.
Was dann im Endeffekt
heißt, wahrscheinlich hätte ich montags genauso
viele Meetings, wenn ich regelmäßig da wär.
Und
dementsprechend
wahrscheinlich auch mit Montag 75%
gemiete, ja.
Man weiß das oftmals nicht.
Ja, man weiß das oftmals nicht richtig.
Weil vielleicht kommt oftmals,
also es kommt ja oftmals doch ab und zu was,
wozu man was sagen will, oder was nicht schlecht ist, mitbekommen
zu haben.
Ja.
Bei komplett unsinnigen Sachen versuche ich das im Vorfeld
eigentlich schon, mich da abzumelden.
Drasilisk, danke für den Sub.
Ja. Aber was machst du denn,
wenn in der Agenda schon Themen draufstehen,
die dich theoretisch betreffen könnten,
aber dann halt am,
das kommt dann, sag mal, am Ende eine Viertelstunde,
und in Wirklichkeit, selbst wenn's
dran kommt, heißt dann nicht mal, ob das sich jetzt
konkret interessiert.
Ja. Stell dir mal vor, da ist irgendein Agenda.
Cloud-Infrastruktur drauf, so.
Das ist das letzte, Stunde Meeting,
das ist das letzte, das letzte Thema,
wird die letzten 15 Minuten angesprochen,
und im Endeffekt stellst du dann,
stellst dich dann raus, okay,
ähm, du sagst da einen Satz zu,
und dann bist du wieder geistig afk.
Ja. Kannste halt auch nicht
im Vorfeld absagen, das ist nicht so einfach.
Ich mach das, ich setz mich da eine Stunde rein.
Ich hab da echt keine Schmerzen. Wenn die Firma
das will, die bezahlen mich im Endeffekt
für 75% Mieten, soll mir recht sein.
Warte mal herrlich, dankeschön für den Sub.
So.
Wir gucken jetzt mal, was
denn unsere Shithub-Trends so machen.
Ja.
Shithub-Trends.
This week.
Tja. Ich würd auch mal ganz gern
was Sinnvolles machen, zwei, drei Tage
am Stück, aber das kannst du vergessen.
Ja. Na, deswegen krieg ich auch nix
geschafft. Aber, ich
mecker da jedes Mal bei meinem Chef drüber.
Und, im Endeffekt
hat sich bei mir bisher noch keiner beschwert,
dass Sachen nicht fertig werden.
Und wenn halt Sachen nicht fertig werden,
dann sag ich halt, ja gut, guck hier
in meinem Kalender, 75% Meetings, wann?
Ach, guck mal!
Ein Nintendo Switch
Emulator trendet
auf GitHub. Woran könnte
das nur liegen?
Ich bin mir nicht sicher, ob sich Nintendo und Gefallen damit
getan hat. Ich glaube, viel mehr
Leute sind jetzt überhaupt dadurch erst auf die,
auf den Trichter gekommen, dass es
Switch Emulatoren gibt, die das
im Vorfeld gar nicht wussten.
Doch klar!
Ich weiß, wie du's meinst, ja, aber es ist nicht
verboten, einen Emulator zu benutzen.
Ich hab natürlich alle meine
ROMs selbst gerippt, ist doch klar.
Ja, ist so.
So.
Also. Screenshot to code.
Drop in a screenshot and convert it to screen.
Moment. Ah! Das ist AI.
Das hab ich schon mal gesehen.
Genau. Du pastest ein
Screenshot und das analysiert
dein Screenshot mit AI und baut dir
das dann nach in HTML
und CSS.
Das ist eigentlich ne coole Idee.
Ist richtig coole Idee.
Nee, ist es nicht. Es ist,
solange du, sobald du Kopierschutz
umgehst, ist es
immer problematisch. Aber das muss
ja glücklicherweise das Projekt,
das den Emulator programmiert, nicht interessieren.
Das muss dich interessieren.
So.
Juckt nicht.
Kickstart NeoWim.
Leute, ich wollte ja mal ne NeoWim
Stream machen, wo wir das einrichten.
Zumal ich ja selbst davon relativ wenig
Ahnung hab. Ich hab früher
super krass aufgebohrten Wim verwendet,
noch bevor es NeoWim gab.
Da bin ich ja schon seit ner ganzen Weile wieder weg von.
Also ich verwende Wim zwar immer
noch mehrfach,
also längere Zeit am Tag,
täglich,
aber halt nur basic.
Wenn ich irgendwie Kommandozeilen mäßig was
nachgucken muss, schnell editieren muss,
dann Wim. Ansonsten
für Frontend Sachen und Microcontroller
Visual Studio Code und für die anderen
Sachen halt Jetbrain IDE.
Muss sich lohnen, dass ich mir das
Jetbrain All Desktop Package gekauft hab.
Mittlerweile bin ich glaub ich sogar schon
im dritten Jahr oder über dem dritten Jahr
raus. Das heißt, ich krieg's sogar ein bisschen günstiger.
Aber ich find
des Jetbrains Zeug, wenn man
auch nur Semi damit sein Geld
verdient, lohnt sich schon.
Es ist nicht so teuer, es kost glaub ich
im ersten Jahr irgendwie 300 Dollar
im Jahr. Das find ich
gerechtfertigt für dieses All Desktop Pack.
Frisst halt RAM wie sonst was
der Kram. Das stimmt.
Das ist halt bloated
Java Zeug.
Aber es funktioniert gut.
Und man hat ja heutzutage glücklicherweise
genug RAM.
Okay.
Pingora
Nee.
Oder Pingora?
Cloudflare.
Library for building fast,
reliable and evolvable
network services.
Eine Rust Library von Cloudflare.
Blazingly fast.
Ist die denn Blazingly
Blazingly fast? Nee.
Ist sie nicht.
Aber die muss Blazingly fast sein, weil das ist
in Rust gerittet.
Geritten.
Okay.
Ich wüsste nicht wann ich die verwenden soll.
Oh.
Keine Ahnung.
Ich weiß nicht was es ist.
Das haben wir doch schon gesehen.
What the fuck.
Okay.
Windows
in a docker container.
Dokurr. Windows.
Moment. Ist es
docker in Windows oder Windows in docker?
Windows in a docker.
Das ist 100 projibet.
Leute.
Windows kann nicht in einem docker container laufen.
Das ist genau das
Splixer. Das ist das was ich auch vermutet habe.
Das ist wahrscheinlich
schlicht ergreifend ein docker image.
Wo du
kvm pass
through machen musst.
Von deinem host.
Und dann
ist es halt ein fertiges image
von Windows was der in a vm
startet. Also wahrscheinlich
relativ simpel. Aber
bestimmt praktisch.
Warum sollte man Windows in a container haben wollen?
Es ist ja nicht Windows in a container.
Es ist ja wahrscheinlich nur ein KVM
Start
Script
im Container.
Insofern stelle ich es mir ganz praktisch vor.
Wenn du mal schnell ein cleanes Windows brauchst.
Ist das doch eigentlich ganz nice.
Alternativ. Man kann sich
auch einfach eine Windows VM machen mit einem Snapshot.
Wenn man das öfters. Aber. Ja.
Ach guck mal hier.
Du kannst dich sogar per Browser direkt drauf einloggen.
Ist doch eigentlich ganz cool.
Siehste. Wie ich gesagt habe. Du musst KVM
vom host durch
pass throughen.
Weil
es kann kein Windows in a container sein.
Weil Windows nicht unter
Linux läuft.
Und Container keine VMs sind.
Container sind ganz normale
Linux Prozesse.
Und dementsprechend kann
Windows nicht unter Linux laufen.
Wäre es
möglich Windows als
Container laufen zu lassen.
Dann könntest du Windows auch generell
unter Linux laufen lassen. Was keinen Sinn ergibt.
Also.
Weil Windows kein Binary ist
was du einfach ausführst.
Ne. Aber das war klar
dass es eben ein KVM mit pass
through ist.
Dementsprechend ist ja Docker unter
Windows auch gelogen.
Das sind auch VMs.
Wenn Windows irgendwann
mal den Linux Kernel bekommt. Geht das
vielleicht. Ne.
Selbst dann geht das nicht.
Weil das ja gerade
eines der hauptsächlichen Unterschiede ist.
Zwischen Containern und VMs.
Container sind ein weiterer
Prozess der im gleichen
Host Kernel läuft. VMs ist voll
virtualisiert mit eigenem Kernel.
Du kannst auch Linux nicht unter
Linux in einem Container
ausführen. Was du machen kannst ist.
Du kannst einen Prozess starten in
einem Container. Der seine
eigenen Abhängigkeiten mitbringt.
Aber das ist kein eigenes Linux was
da drin läuft. Das ist im Prinzip
nur die eigenen Abhängigkeiten die das
jeweilige Binary braucht. Weil du kannst
natürlich noch deutlich mehr da drin ausliefern.
Ja. Du kannst auch nur Bash ausliefern und sonst was.
Aber es ist streng genommen kein
Linux was in diesem Container läuft.
Es ist ein Linux Image mit den Binarys
und den Abhängigkeiten. Aber es bleibt immer
der gleiche Host Kernel.
Weil das das ist was Container ausmacht.
Und das das ist was Container auch so
leichtgewichtig und
schnell macht.
Beziehungsweise schnell.
Kann man sich jetzt drüber streiten.
Performance Unterschied zwischen Container und
VM ist CPU technisch jetzt nicht
so großartig.
Ich würde sagen außer mit Benchmarks
so gar nicht
wirklich feststellbar. Der riesen
Unterschied zwischen Containern und VMs
was die Ressourcenauslastung angeht
ist der Speicherverbrauch.
Sowohl
Diskspeicher als also SSDs
Plattenspeicher als vor allem auch
Storage und RAM Auslastung.
Weil wenn du einen Container startest
einen Prozess startest
dann braucht das in einem Container
nicht bedeutend
mehr als wenn du den Prozess
direkt unter deinem Host System
startest. Weil es ist ja im Prinzip
ein weiterer Prozess unter deinem Host System.
Und in einer VM musst du ein komplett eigenes
Betriebssystem starten. Das heißt
du brauchst für den Prozess
du hast bei einem Container
vielleicht ein paar
MB Overhead
wenn überhaupt
und bei einer
VM wahrscheinlich
ein paar 100 MB Overhead.
Je nachdem. Es gibt natürlich Versuche
so mit Micro-VMs und sowas.
Das ist ja eines der hauptsächlichen Unterschiede
dazwischen.
Ich mache übrigens Chatgear. Ihr müsst demnächst Beta testen.
Ich habe auf der Arbeit gesagt
ich mache mal eine Einführung zu Linux
Container
und da wollte ich mir wirklich mal
die Funktionsweise ein bisschen
genauer angucken.
So wie das Ganze, wo das Ganze herkommt
und so die Vorgänger
so von Changeroute
zu falls noch jemand Open
äh wie hieß das? OpenVZ kennt
Dann starten
wir auch mal einen
Prozess
ohne Docker
aber ähnlich zu dem was Docker
macht. So und
ich muss mir da noch ein bisschen was aus den
Fingern saugen. Aber ihr müsst ein
Beta Tester sein. Ich zeige euch das da
im Stream.
Es geht ungefähr, ich habe das ungefähr so
eine Stunde geplant.
Also Inhalt wird sein
laggt es gerade? Och ne
hör mal auf Vodafone please.
Ne laggt nix.
Keine. No lag.
Ne es laggt überhaupt nicht.
Also bei euch vielleicht aber
bei mir laggt nichts.
Vielleicht
laggt Twitch auch. Das kann sein aber
es liegt nicht an mir.
Also
Ziel wird sein
dass wir uns einmal so ein bisschen
historisch angucken wie das mit Containern ist
und so ein bisschen Docker Hello World
machen im Endeffekt. Man muss ja auch
sagen, dass Docker
ungleich Linux Container ist.
Docker ist im Prinzip nur ein Kommandozeilen
Tool, dass man
easy Container verwalten kann.
Ne, nicht wirklich. Ein Kurs
so eine Stunde, Stunde Übersicht. Und da gucken wir uns
vielleicht am Ende nochmal kurz an wie man möglichst
schön Multistage Container Image
baut, dass es nicht 800 MB
am Ende groß ist.
Die Wubblos Masterclass, genau.
Gibt's ein Zertifikat am Ende.
Ja, kannst du, kannst du. Das geht.
Äh, bilde ich mir zumindest
ein, dass ich das schon gemacht hab.
Relativ safe geht das.
Ich glaub das hab ich mit dem Fiat Champ
schon gemacht, bevor der Public war.
Ja und da müsste, ich muss mir da aber noch
was fertig aus den Fingern saugen.
Das geht so
ungefähr ne Stunde.
Das wird dann ein bisschen
nicht wirklich Powerpoint, weil
ich
mag kein Powerpoint.
Das wird aber so ein bisschen
sagen wir mal Powerpoint
ähnlich und dann Terminal
was ausprobieren. Ich muss mir das überlegen.
Wenn ich, wenn ich mir was aus den
Fingern gesaugt habe, dann
dürft ihr Beta
testen im Stream, ob man das versteht, was ich da erzähle.
Ja Container in
irgendeiner Art und Weise gibt es schon sehr lang.
Und Linux ist auch nicht
das einzige, also ist auch nicht
die ersten, die angefangen haben. Wobei
Linux Container halt abgehoben
sind, so richtig mit Linux.
Gerade als Docker dann aufgekommen ist.
Ich mein viele andere
Betriebssysteme haben sowas auch. Du hast
BSD Jails,
du hast Solaris
Container und solche Dinger. Sowas gibt's schon
ewig.
Und
letztendlich
ob man jetzt
Podman verwendet, Docker verwendet,
Kubernetes verwendet
oder irgendwas anderes zum Container
starten, unter der Haube
ist das alles das gleiche.
Was sich
unterscheidet ist die Handhabung
der jeweiligen Tools, ja auch
das Management drumherum, was Netzwerk
angeht, was Images angeht und sowas.
Aber das eigentliche Starten
oder quasi
den Prozess im Container ausführen,
das ist bei allem das gleiche.
Das basiert alles auf
Namespaces und Cgroups.
Und das kann man auch von Hand machen.
Mit Unshare zum Beispiel,
das Kommandozeilen-Tool, um
Namespace-Funktionalität
verwenden zu können.
Das kann man auch von Hand machen.
Aber natürlich nicht so schön, wie mit
irgendeinem ordentlichen Container-Tool.
Aber unter der Haube ist
das alles das gleiche. Echt.
Haben wir doch
vor Ewigkeiten schon mal gemacht, aber die hat mir nicht
gefallen, weil die zu spontan war.
So, ich wollte mir angucken, was auf ShitHub
trendet.
Also, Windows hatten wir.
WebCheck. Aha.
StarCoder.
Home of StarCoder 2. Alles klar, jetzt weiß
man Bescheid.
Ah ja, AI.
AI.
Guck mal, ein weiterer
Emulator trendet die Woche für Nintendo
Systeme. Woran das nun wieder liegen
könnte?
Wie gesagt, ich glaube
Nintendo hat sich damit keinen Gefallen getan.
Viele Leute sind jetzt erstmal darauf aufmerksam
geworden, dass es Emulatoren gibt, die
die übelsten Kack-Noobs waren und das gar nicht wussten.
AI.
Redis Client.
Schön für ihn.
China-Chinesen-
Java-Kram.
Android-Stells.
AI.
Unity-Stells.
Was?
C-Libraries. Es ist selten, dass C-Libraries
trenden.
Okay.
Bei diesen ganzen Projektlogos habe ich
immer den Eindruck, dass mittlerweile
alles AI-generated.
Ach, das ist eine
C-Standard-Library-Implementierung,
die überall läuft.
Aha.
Das klingt aber eigentlich ganz cool.
Aber C ist unsafe. Ja, du hast recht.
Krustentiere
approven das nicht.
Aber es ist blazingly fast, obwohl es nicht
written in Rust ist.
Das habe ich auch mal eine Weile bei mir verwendet,
um meine Hardware zu tracken, aber ich war dann
zu faul, für das zu verwenden.
Ich habe gar keinen Screenshot
von. Das ist eigentlich ganz nice, aber das ist
Overkill
für mich gewesen.
Opendit. Was?
Dit.
Ich weiß nicht, was Dit ist, aber
wahrscheinlich AI.
Im Zweifelsfall, wenn ich das kenne,
ist es AI.
Sowas trendet im .NET-Umfeld.
Switch-Emulator, Power Toys,
China-Chinesen- .NET-Guide.
Aha, was lernen die da so?
Die haben schon mal das
Emoji-Game durchgespielt.
Das finde ich schon mal sehr, sehr nice.
Okay, lasst uns das mal kurz translaten.
Follow, Like, Share.
Excellent.
Die haben das Emoji-Game aber mal richtig
durchgespielt hier.
Das ist so eine awesome Collection
für .NET.
Was ist denn das für eine Sprache? Keine Ahnung.
Ist das Chinesisch? Ist das Japanisch?
Man weiß es nicht. Oder steht das da oben dabei?
Chinesisch. Ja, Chinesisch.
AI.
Winged UIs.
Das gibt es noch.
China-Chinesen-Kram.
Accept Bitcoin Payments.
Okay, Leute.
Ich wollte schon immer
Bitcoin Payments accepten.
Maui.
Jedes Mal, wenn ich sehe, frage ich mich,
wann der Blogpost von Microsoft kommt,
wann es eingestellt wird.
Quasar. Remote Admin Tool
für Windows.
Oh.
So sieht es doch aus.
Alter. Okay.
Nice. Jetzt sind wir auf dem aktuellen Stand,
was ShitHub angeht.
Nachricht aus der Zukunft.
Korrekt.
Nudeln mit Tomatensoße und Hackfleisch.
Gibt es heute.
Leute, stellt euch vor,
ich habe letztens, also
wie gesagt, ich spiele immer noch Dark
auf dem Freeshard.
Dort spielt auch eine
semi-bekannte italienische
Food-Bloggerin.
Und ich habe die letztens gefragt,
wie sie Schnitzel findet.
Und die meinte, I don't like it.
Wie kann man Schnitzel nicht mögen?
Ich meine, was sie auf ihrem Blog postet,
ist richtig nice, ja.
Aber so ein Schnitzel ist trotzdem nice.
Richtig lost, oder?
Und sie meinte,
sie findet...
Kotletto oder sowas?
Kot...
Kotoletta.
Findet sie besser als Schnitzel.
Da habe ich mir ein Bild angeguckt und habe mir gedacht,
das sieht halt einfach aus wie ein Schnitzel.
Ich weiß nicht,
was der Unterschied ist dazwischen.
Das sieht halt wirklich schon aus
wie ein Schnitzel halt, ja.
Wie ein Schnitzel.
Ach, Moment. Das ist kein Schnitzel.
Da ist...
Das... Nee, hä?
Nee, Moment.
Das ist kein Schnitzel.
Das ist das Bein oder so.
Ja, kann sein. Verstehe ich nicht.
Paniertes Rippchen oder sowas, ja.
Diese Woche wäre Lachs dran.
Nee, das stimmt nicht. Lachs war letzte Woche dran.
So.
Life of a Zoomer. Gen 7.
Warum YouTube?
Warum denkt YouTube,
dass ich mir das angucken will?
Ich habe von diesem Channel bisher noch nichts gehört.
Aber Life of a Zoomer. Gen 7.
Gen-Z-Meme.
Weiß nicht, taugen die Videos was?
Doch, angeklickt. Ja, jetzt krieg ich...
Da ist er wieder. Da ist er wieder.
Der Anzeigehauptmeister.
Okay, was haben wir denn sonst?
Was ist das?
By the way. Heißt das eigentlich noch Tweet?
Wie nennt man das jetzt eigentlich,
seitdem es X ist?
Overmean X?
X-Message?
Ist schon wieder outdated?
Das neue Lohnt sich das Video ist echt gut.
Das da?
Das da?
Job auf Windrad.
Im Meer bringt alles ans Limit.
Oh, das stelle ich mir sehr...
Also nicht nur anstrengend vor.
Sondern so von da oben runter gucken.
Ich war mal, als ich klein war.
Im Schwimmbad.
Im...
Wie hieß das Ding in Frankfurt?
Gibt es nicht mehr.
Wie hieß dieses Schwimmbad?
Oh, in Frankfurt.
Schwimmbad Wellen?
Nicht Wellness.
Rebstock, das Rebstockbad, genau.
Was macht das Rebstockbad? Das gibt es nicht mehr.
Ich dachte, das soll umgebaut werden.
Aber sie kriegen es irgendwie nicht gebacken.
Das wird neu gebaut.
Irgendwie seit 50 Jahren oder so.
Bis zum Jahr 2025 soll das am gleichen Tag noch für 90 Millionen Euro...
Das ist nächstes Jahr.
Bis nächstes Jahr ist das garantiert nicht fertig.
Im Leben nicht.
Zumindest das Rebstockbad, das war früher mega nice.
Und zwar, man sieht es hier vielleicht auch.
Die...
Man sieht einen übelst dicken Dude im Wasser stehen.
Schon mal nice.
Ja, hier hinten.
Hier hinten sieht man es.
Und zwar hier hinten hatten die 10 Meter Brett.
Und...
Ich weiß noch, als ich klein war.
Das ist so ein extra...
Extra tiefes, extra tiefes Becken hier.
Ging irgendwie 3, 3,7 Meter oder so runter.
10 Meter Brett.
Als ich klein war, habe ich mal übelst auf dicke Hose gemacht.
Da war ich mit meinem Vater im...
Gredolange für den Zap.
Das habe ich dafür...
Hä?
Hatte ich nicht ein 10 Meter Brett auch?
Nee, das...
Oder ist da nebenan noch was?
Wie, wie, wie auch immer.
2, 3, 5...
Nee, oder?
War das vielleicht in einem anderen Schwimmbad?
Zumindest.
Egal.
Oder ist da oben noch was?
Dann war es woanders.
Aber zumindest, hier war ich mit meinem Vater.
Und als ich klein war, habe ich da übelst auf dicke Hose gemacht.
Das ist easy, gar kein Problem hier.
Ich hüpfe da runter und sonst was.
Und dann bin ich zum ersten Mal...
Dann bin ich zum ersten Mal auf so ein Sprungbrett.
Weil von unten sieht das überhaupt nicht hoch aus.
Ja?
Dann bin ich zum ersten Mal auf das Ding hochgeklettert.
Und du musst hier hochklettern, dann da hochklettern.
Und als ich auf dem war...
Habe ich schon runtergeguckt und habe mir gedacht...
Oh, fuck.
Das ist ja viel höher, als ich gedacht habe.
Und dann bin ich da hochgeklettert und habe runtergeguckt und habe mir gedacht...
Oh, scheiße.
Alter, ist das tief.
Und da ist mir zum ersten Mal aufgefallen, dass dir das viel höher vorkommt, wenn du von oben ins Wasser runterguckst.
Weil du guckst ja von hier ins Wasser runter und siehst ja gefühlt die Höhe von hier plus nochmal die Höhe ins Wasser.
Alter, ich hätte mir fast in die Hose geschissen.
Aber ich bin runtergehüpft.
Aber wie, Alter.
So wirklich von vorne so einen ganz kleinen Satz und...
Schnell wieder raus.
Da hatte ich echt Schiss, als ich da erstmal drauf bin.
Ja.
Also...
Aber das Schwimmbad war richtig nice.
Hier gab es Wellen drinnen.
Also keine Ahnung, warum es das nicht mehr gibt.
Ich hoffe, dass es gibt...
Guck mal, was es hier News gibt.
Ne.
Nix.
Ach, jetzt sind wir bis 2027.
Leute, es ist so schlimm.
Warum kriegen wir in Deutschland nie Projekte auch nur ansatzweise...
Das ist bis 2027 anfertig.
Wir hätten mal ansatzweise irgendwie fertig.
Das ist so kacke, Alter.
Die Chinesen hätten schon drei Rebstockbäder gebaut.
Gut, dann wären vielleicht im Fundament fünf Arbeiter oder so zufällig mit einem...
Eingegossen oder was.
Aber es wäre zumindest fertig gebaut.
Wie lange es halten würde, wäre was anderes.
Schlimm.
Okay, wo ist der...
Okay.
Job auf Windrad.
Im Meer bringt alle ans Limit.
Okay, das gucken wir uns jetzt an.
Limit-Ge...
Er ist halt für den Arsch, ne?
Wenn die ursprüngliche Planung heißt, bis 2025 soll es fertig sein.
Wenn es bis 2025 fertig sein soll, sollte man den Auftrag halt vielleicht nicht...
Äh, ja...
Bis Mitte 2024 starten wir.
Machen.
Wir sind gerade in einer Störung.
Also so soll es auch gehen.
Jetzt haben wir ein Notis-Connect.
Das Wetter kann...
What the fuck?
Da geht einfach...
Da geht einfach die Brücke weg.
Okay, das gucken wir uns an.
Wir sind gerade in einer Störung.
Also so soll es auch gehen.
Jetzt haben wir ein Notis-Connect.
Das Wetter kann sehr schnell umschlagen.
Die letzten Tage waren kritisch.
Nein, wir brechen die Aktion.
Ab Ende.
Weil es einfach zu gefährlich wird.
Das Offshore-Geld ist gut.
Da kann man sich nicht drüber beschweren, dass der Fahrstuhl kaputt ist in der Windturbine.
Und Abflug, das kommt nicht so häufig vor.
Oh shit.
Hallo zusammen.
Ich bin der Johann und ich arbeite als Techniker auf der Nordsee in der Offshore-Windenergie.
Heute nehmen wir euch mit und zeigen euch unsere Welt.
Gerhard, ja, das kann schon sein.
Da kenne ich mich nicht mit aus.
Aber hier hast du halt das Problem, wenn die seltene Froschart auf dem Gelände nistet,
dann musst du schon mal zwei Jahre verschieben, bis sie umgesiedelt sind.
So, und jetzt wird geschleppt.
Wir haben Wetterprognosen, die eigentlich nicht besonders gut sind.
Es wird am Anfang wahrscheinlich erstmal ein bisschen...
Die Musik im Hintergrund, Alter.
...von der Welle sein.
Ich mache das seit fünf Jahren.
Ich kenne diese Situation, aber Seekrankheit ist nicht unbedingt vorhersehbar.
Moin zusammen.
Kotzke.
Kotzke.
Kotzke.
Jetzt fahren wir gerade aus Norddeich raus.
Alter, die übelste Wickhängermusik, Mann.
Maschine kann nichts mehr.
Tja.
Hallo, Olaf.
So, Team Chaos meldet sich.
Der Kapitän versucht, an der Wind of Change anzudocken und zu pushen, aber ob das jetzt geht, wissen wir noch nicht.
Der eine ist schon halb seekrank.
Oh.
Oh.
Kotzke.
Ich würde sagen, seekrank.
Kamerafrau und Redakteurin, Moderatorin ist wohl auf.
Und mir geht's super.
Bis später.
Ciao.
Ciao.
Oh, just now.
Okay.
Hey.
Wir sind jetzt auf dem großen Service Operation Vessel.
Das ist also so ein bisschen das Mutterschiff, was hier rumdümpelt.
Das ist dann unser Crew-Bereich, in dem wir unsere Ruhe finden können.
Wir sind die eigene Kabine, wie man sieht.
Service Operation Vessel.
Ich wette mit dir, das wird in Deutschland abgekürzt.
Das nennen sie wahrscheinlich dann nur noch SOV oder sowas.
Man hat schon ein bisschen Platz.
Jeder hat, und das ist, finde ich, eigentlich sehr wichtig, seinen eigenen Dusch- und Toilettenraum.
Schon ein sehr schöner Moment, wenn ich morgens aufwache und den Sonnenaufgang sehe.
Ich mache das auch gerne auch.
Aber nice, oder?
Ist eine coole Kabine.
Ist es größer, als ich es mir vorgestellt hätte.
Aber in den letzten Tagen wäre das keine gute Idee gewesen.
Dann wäre hier wahrscheinlich was.
Da wäre ein Wasser reingelaufen.
So, man hört es schon pfeifen.
Windke.
Ich arbeite zwei Wochen am Stück, von montags bis sonntags und dann wieder von vorne.
Und habe dann entsprechend als Ausgleich danach die zwei Wochen frei.
Die Zeit kann ja doch sehr lang werden auf dem Schiff.
Deswegen haben wir noch einen Sportbereich.
Man muss jetzt nicht der Kletterer sein, um in der Windturbine klarzukommen.
Es ist mehr das Leiternklettern.
Wenn man wirklich der Fahrstuhl kaputt macht.
Aber das kommt nicht so häufig vor.
Die große Kantine, unsere kleine Beachbar, dass wir ein bisschen rausschauen können.
Hier haben wir noch ein Helikopterdeck.
Und so schaut dann die Wind of Change von der anderen Seite aus.
Das ist so hier erst mal unsere Welt.
Großes Teil.
Der Chat meint, FloSan meint, hätte richtig Bock auf den Job.
Ich nicht.
Call of Duty Map.
Das operative Geschäft findet natürlich nur dann statt, wenn vorher eine vernünftige Planung stattgefunden hat.
Und dort sitzen dann verschiedene Positionen, die sich darum kümmern, dass das Tagesgeschäft läuft.
Welche Turbinen laufen, welche stehen.
Wenn wir dann wieder navigieren wollen, haben wir entsprechende Schaubilder von den Windparks.
Wie die aufgebaut sind, wie die Netze miteinander verbunden sind.
Wenn es da Probleme gibt, springst du auch nicht einfach mal runter.
Bei 140 Meter bist du Matsch.
Das ist einer von den kritischen Fehlern.
Dann wird kein Strom produziert.
Deswegen haben wir auch versucht, möglichst schnell zu reagieren.
So, wir sehen, dass hier schon Gewitter reinkommt.
Also hier in den Niederlanden sind gerade Blitzeinschläge.
Also es zieht gerade nach oben.
Blitzgeld.
Und morgen schauen wir mal, wie es da aussieht.
Und wir sehen, dass die Welle relativ weit oben ist morgen.
Also können wir nicht mit unseren CTWs operieren.
Ausschließlich mit der Gangway.
Ob da auf dem Schiff, auch wohl, da programmieren wir nicht, aber ITler werden die da garantiert auch sagen, warte mal.
Irgendwie so Technik.
Elektro-IT-Hybrid-Leute hast du garantiert auch auf dem Schiff, weil da immer mal was sein kann.
Was?
Okay.
So, schauen wir mal, ob wir tatsächlich euch morgen versetzen können.
Wir werden uns auf einen vollen Arbeitstag vorbereiten.
Wir müssen uns quasi dem fügen, was wir dann morgen erleben, durch das Wetter.
Alter!
Ha!
Haben wir nicht irgendwo ein Wikinger-Emoji?
Maus!
Doch, hier.
Sekunde.
Morgen.
Oh, oh.
Durch die Wetterbedingungen hatten wir natürlich besonders schwere Bedingungen, die uns eigentlich gesagt haben, lasst es besser sein heute.
Der Leuchte-Mann.
Da sind wir wieder bereit.
Da wir heute keine CTV-Transfers haben, werden die per Helikopter angeliefert von Nordeich aus.
Da hatten wir das Ersatzteil verfügbar.
Der Helikopter wird oberhalb der Heli-Plattform die Position halten und dann die Winde ablassen.
Wenn jetzt quasi das Gepäckstück runtergelassen wird und das Schiff bewegt sich in der Zeit, dann müssen wir eben aufpassen, dass das nicht kollidiert, dass ich da vorsichtig bin beim Aushaken, dass ich mich nicht verletze.
Incoming.
Okay.
Ach, schon ein bisschen windig, ja?
So, wir haben das Cargo.
Jetzt haben wir hier drei neue Module bekommen.
Es musste jetzt eben schnell gehen, deswegen hat sich der Helikopter-Einsatz heute gelohnt.
Sonst hätten wir wahrscheinlich zwei, drei Tage warten müssen und dann sind die Kosten von dem Helikopter-Flug natürlich wesentlich geringer als die Ausfallkosten von der Turbine.
Ja, dann gehen wir erstmal essen.
Hello.
Alkohol, Drogen, alles, was in irgendeiner Weise die Sinne betäubt, ist strengstens verboten.
Dafür müssen wir uns bei euch dazusetzen.
Wir machen jetzt dann nochmal das letzte Wetter-Update von der Brücke und dann fangen wir an mit den ersten Triebs.
Dann packen wir jetzt.
Wir haben Troubleshooter-Kits und da haben wir schon mal eine ganze Menge an Werkzeug drin, um so die meisten Dinge dann auch zu reparieren.
Ähm, Pumpensatz.
Ich wüsste ja gar nicht, wo ich anfangen müsste damit.
Da haben wir genug Wasser da drinnen.
Aber gut, deswegen sind es ja auch die Pros.
Wenn wir uns an der Kamera sehen, wenn wir uns an dem Turm annähern.
Dann können wir schon starten.
Es gibt verschiedene Level vom Techniker.
Je höher das Level, desto höher auch die Bezahlung.
Okay, was haben wir?
Basisstufe, klassischer Teamlead.
Moment, Teamlead ist nur Stufe 2.
Äh, Offshore Troubleshooter, Senior-Techniker.
Aber nicht jeder will jedes Level erreichen.
Ich habe jetzt relativ neu den Level 4, also den Senior-Technischen.
Okay, das hat jetzt schon mal nicht geklappt.
Geht ja gut los.
Das haben wir noch nie so gehabt.
Das macht Mut.
Jetzt ist er direkt wieder disconnected.
Alter, die Musik.
Ey, das wäre nichts für mich, sage ich euch ganz ehrlich, ja.
Das Piepsen heißt...
Wir sind gerade in einer Störung, also so soll es auf jeden Fall...
Jetzt haben wir einen Not-Disconnect, und das ist nicht geil.
Schauen wir mal schnell, dass wir uns hier...
Wind of Change, VMIKE01, Radiocheck.
VMIKE01.
Aber das, was jetzt passiert ist, ist eben so ein...
War zu sehr gewackelt, wahrscheinlich, weil es zu sehr gewackelt hat.
Nein, die werden es jetzt natürlich noch mal versuchen,
aber dadurch, dass wir sehr kritisches Wetter haben,
haben wir direkt Situationen, die wir eigentlich nicht unbedingt haben möchten.
Das habe ich so in der Realität bisher noch nie gesehen.
Lass mich mal ganz kurz telefonieren.
Man muss bloß jetzt rüberspringen, wenn das mit der Brücke nicht funktioniert.
Ich muss mich mal mit dem anderen Teil des Teams abstimmen,
aber das sind Situationen,
in denen wir dann nicht mehr arbeiten möchten,
weil es einfach zu gefährlich wird.
Ja, sollen wir Abbruch, oder?
Wir sind jetzt zwei- oder dreimal abgerissen.
Nein, wir brechen die Aktion ab. Ende.
Wind of Change, VMIKE01.
Hello, guys. Could you please tell us, what your plan is now?
We need to check the alarm on.
That's all copied. Thank you for the update.
Sieht leider nicht gut aus.
Auf der Windturbine ist es arschkalt im Winter.
Ja, kann ich mir vorstellen.
Es ist grün, heiß im Sommer.
Es gibt keine Möglichkeit, sich zu waschen.
Es gibt keine Toilette.
Es gibt eben nichts außer die Maschine.
Wir müssen abwarten, bis dann herausgefunden wird.
Wenn du da dünn schießt, hast du es echt problematisch.
Was eigentlich passiert ist,
solange werden die quasi aus dem Sicherheitsbereich
unserer Turbine rausfahren,
deswegen entfernt sich gerade auch das Schiff.
Am Pinkel kann man da wahrscheinlich noch, wenn der Wind gut ist.
Could you please tell us, what the plan is?
Haben die jetzt tatsächlich da irgendwie...
Ich meine, das war eben noch...
Nicht mal Dämmerung.
Und jetzt ist es dunkel.
Und da steht immer noch da drauf.
Alter, ist das kacke.
We are now for the operation of the...
There is no problem.
That's all copied. Thank you.
Herzlich willkommen.
Schön, jetzt seid ihr mit uns gefangen.
So.
Dann können wir uns jetzt tatsächlich mal um die eigentliche Arbeit kümmern.
Also, wir sind hier auf einer Offshore-Windturbine.
Das heißt für uns alle, das sind besondere Konditionen.
Hinter den Schaltschränken befinden sich Spannungen, die gefährlich sind,
die uns töten würden, wenn wir sie berühren.
Wir haben bewegte, mechanische Teile, absturzgefährdete Stellen.
So, dann haben wir das hier soweit fertig.
Kamera auf.
Ja, genau.
Kletterchamp.
Bis später.
Bis später.
Also, wir können froh sein, dass wir einen Fahrstuhl haben, der funktioniert.
Und dann sparen wir uns die Leiter.
Und jetzt geht er kaputt.
Das wären sonst um die 90 Meter hier im Turm.
Was blitzt denn der Fahrstuhl so?
Nee, das ist einfach ein Licht, so nach dem Motto, es fährt, oder?
Es fährt gut.
Ist eigentlich so.
Krass.
Wir müssen auf die nächste Ebene.
Wir müssen uns in der Turbine einbauen.
Da geht es ordentlich rauf.
Was haben die gesagt? 145 Meter?
Aktuell sind wir noch ferngesteuert.
Und das müssen wir ändern, damit Julian oben auch kraden kann.
Und wenn man es so sehen kann, sollte mir jetzt irgendwas passieren,
hänge ich quasi hier drinnen und wäre halt geschützt.
Jetzt gibt es in der Windturbine den großen Schalter.
Damit wird die Anlage quasi überwacht.
Aber man muss mal sagen, sehr clean da drinnen.
Jetzt ist sie uns.
Also wir brauchen hier irgendwie eine Art und Weise,
wie wir mit der Anlage sprechen.
Und in dem Fall ist das dann hier unser Oldschool-Controller.
Und dann ist der Kran oben aktiv.
Das ist dann nur unsere redundante Sicherung.
Sollte der Fahrstuhl abstürzen.
Wer soll denn da Dreck produzieren?
Das frage ich mich bei mir daheim auch immer.
So.
Aber es geht trotzdem.
Und Abflug.
Das ist die Ebene,
wo die Survival Barrels stehen.
Also da siehst du die Tonnen.
Falls alle gestorben sind und du bist der Einzige, der hier drauf ist
und du weißt nicht, was du machen sollst.
Da sind Schlafsäcke drinne und Wasser und Kekse.
Das ist aber nicht gut.
Wir hängen quasi an einem Seil, wo dann die Seilwinde uns hochzieht.
Und dazu haben wir nochmal ein Sicherungsseil, wenn wir fallen.
Jetzt ist genau das passiert, was irgendwie nicht sein sollte.
Ich sag doch, hier geht alles schief.
Monkeys.
Warte mal.
Alter Schöne.
Das ist nicht schlimm.
Aber wir sind halt...
Das war's.
Wir müssen klettern.
Also so können wir den Lift nicht benutzen.
Ich sag dir, heute geht alles schief.
Wir fahren unsere Plattform runter und schauen uns den Lift an.
Kletter-Champ.
Das habe ich noch nie erlebt.
Der Fahrstuhl ist gecrashed.
Wir sind in der Mitte der Ebene.
Hektar.
Wir sind in der Mitte der Ebene.
Hektar.
Ah, die ist gebrochen.
Das ist der Grund.
Nee, der Lift ist am Arsch.
Wir können nicht mehr.
Da müssen wir klettern.
Boah.
Was ist los?
Du wirst mir das nicht glauben.
Du wirst mir das einfach nicht glauben.
Was?
Für den farschen Steckenbetrieb.
Nein.
Ja, das ist recht.
Also, Leute.
90 Meter Treppe hoch ist schon echt nicht ohne.
Aber 90 Meter Leiter?
Kletter-Champ.
Der Kameramann muss diesmal wirklich was schaffen für sein Geld.
Der Kameramann muss diesmal wirklich was schaffen für sein Geld.
Hey.
Also, das ganze Drumherum, was wir bisher gesehen haben, ist alles schön und gut.
Aber unser eigentlicher Beruf ist ja dann letztendlich doch im elektrischen Bereich oder auch im mechanischen.
Wir haben ja den Fehler an der Windturbine.
Und dann müssen wir jetzt das defekte Teil austauschen.
Wie ist denn der andere jetzt hochgekommen?
Der ist von ganz unten geklettert, oder wie?
Fehler an der Windturbine.
Und dann müssen wir jetzt das defekte Teil austauschen.
Warte, warte, warte.
Wir sind ja irgendwo.
Ich halte ihn rein und du kannst schrauben.
Ich halte ihn rein und du kannst schrauben.
Perfekt. Der hält.
Perfekt. Der hält.
Wir hoffen, dass das jetzt quasi auf Anhieb gut läuft.
Wir hoffen, dass das jetzt quasi auf Anhieb gut läuft.
Ich kann zum Beispiel mit dem Gehör feststellen, ist ein Lager defekt.
Macht das Geräusche? Vibriert vielleicht ein Bauelement?
Also habe ich jetzt einen Getriebeschaden?
Also habe ich jetzt einen Getriebeschaden?
Der ist nicht zuerst gefahren.
Der stand doch eben nach unten und hat gesagt, die sind stecken geblieben und hat nach oben geguckt.
Der stand doch eben nach unten und hat gesagt, die sind stecken geblieben und hat nach oben geguckt.
Jetzt haben wir gehört, die Bremsen lösen sich.
Jetzt können wir auf die Bewegung gehen.
Ne.
Nicht gut.
So, da hat was noch nicht funktioniert, aber kein Grund zur Panik.
So, da hat was noch nicht funktioniert, aber kein Grund zur Panik.
Was macht man, wenn was nicht funktioniert?
Jeder kennt es von seinem Computer.
Reboot. Erstmal ein Reset.
Testet durch. Klar.
Was bei meinem Kühlschrank funktioniert, muss bei der Windturbine auch funktionieren.
Was bei meinem Kühlschrank funktioniert, muss bei der Windturbine auch funktionieren.
Was bei meinem Kühlschrank funktioniert, muss bei der Windturbine auch funktionieren.
Ah, wer hätte das gedacht?
Dann hat sich tatsächlich mal der Computer aufgehangen.
Dann machen wir gleich einmal ein Ratter.
Vollständigen Testlauf.
Testläufe sind dann eine kritische Phase.
Deswegen auch wichtig, dass man da immer mit vollem Bewusstsein dabei ist.
Deswegen auch wichtig, dass man da immer mit vollem Bewusstsein dabei ist.
Wir müssen mal gucken, dass alles, was hier rumfliegen kann,
und so ein bisschen verstaut ist.
Und es wird laut.
Und jetzt würden wir die Anlage tatsächlich aufstarten.
Das heißt, wir drehen uns jetzt in den Wind rein.
Das heißt, wir drehen uns jetzt in den Wind rein.
Genau, und jetzt fangen wir an, Strom zu produzieren.
Und jetzt nimmt die erst richtig Fahrt auf.
Da braucht man Gehörschutz.
Da braucht man Gehörschutz.
Ich hoffe, es läuft nicht mit mir.
Ich hoffe, es läuft nicht mit mir.
Ich bin aufs 311, wie bei der Bahn.
Das ist ein Moment, den kann man auf sich wirken lassen.
Da halte ich ihn auch ganz gerne mal inne.
Was man da im Hintergrund sieht, sind das alles andere?
Alles auch Windräder?
Was man da im Hintergrund sieht, sind das alles andere?
Alles auch Windräder?
Schauen wir das nochmal an.
Weil das ist schon ein bisschen unwirklich, wenn man hier rausschaut.
Was?
Dann haben wir das Schiff,
das uns heute dann hoffentlich wieder aufnehmen möchte.
Das ist schon ein bisschen unwirklich, wenn man hier rausschaut.
Was?
Das ist schon ein bisschen unwirklich, wenn man hier rausschaut.
Das ist schon ein bisschen unwirklich, wenn man hier rausschaut.
Maschinenbau in der Schwerpunktrichtung, dann erneuerbare Energien.
Das habe ich dann aber aus persönlichen Gründen abgebrochen.
Das habe ich dann aber aus persönlichen Gründen abgebrochen.
Ich war nicht so ganz mit dem Herz dahinter.
Ich habe erst zu dem Zeitpunkt festgestellt,
wie das Handwerk eigentlich ins falsche Licht gerückt wurde
Nach 2,7 Jahren.
Ach nee, das Studium.
dass das nichts Niederes oder Minderwertiges ist.
Ja, sehe ich genauso.
Alter Schwede.
Wenn du dir die Preise heute mal anguckst.
Ein, Toss, Toss, Toss, Toss.
Toss, Toss, Toss, Toss, Toss.
Toss, Toss, Toss, Toss, Toss.
Habt ihr alle überlebt.
Die Anlage läuft wieder.
Alles richtig gemacht.
Und das, was dazwischen gekommen ist, gehört eben dazu.
Das gehört eben dazu.
Seitdem ich eben dieser neuen Position arbeite,
Ja ok, was kommt da noch oben drauf?
sind es dann rund 4.500 Euro brutto im Grundgehalt.
plus die entsprechenden Zulagen,
die dann durch dieses Offshoreleben eben entstehen.
Wenn wir uns jetzt beispielsweise mal den September anschauen...
Heißt, am Ende?
habe ich einen sehr guten Monat gehabt.
Durch diese Zulagen, die entstanden sind, komme ich also auf tatsächlich fast 8.000 Euro brutto.
Boah, da geht doch was!
Davon wird dann noch mal ein bisschen was abgezogen, um dann bei einem Nettobetrag von um die 4,8 rauszukommen.
Das sind dann die Monate, die gut laufen.
Aber sowas musst du auch ordentlich bezahlen, sonst macht das keiner.
Ich sehe dann wirklich mal Bilder, wie Freunde sich im Kreis wieder treffen und ich kann dann in dem Moment nicht dabei sein.
Das schmerzt tatsächlich schon sehr.
Es ist ein schöner Moment, zu wissen, dass wir gleich an Land sind und dann wieder dem normalen Leben abgehen können.
Das ist der gute Tünnis. Ich mag ihn tatsächlich sehr gerne, weil er immer wieder sehr hilfreich ist,
weil man drinnen schlafen kann und weil man ihn auch für den Urlaub nutzen kann.
Der Tünnis.
Herzlich willkommen einmal zu Hause.
Wir haben hier eine sehr schöne, offene Wohnung.
Das heißt, einmal so einen sehr großen Wohnbereich.
Und es ist halt ein reines Wohnzimmer.
Es wäre ein kleiner Glücksgriff gewesen, in Hamburg sowas zu finden.
Wenn du jetzt deinem früheren Ich einen Rat mitgeben könntest, was wäre das?
Also es gibt eigentlich keine falsche Entscheidung, die ich getroffen habe für meinen beruflichen Werdegang.
Deswegen würde ich vielleicht den jungen Johann einmal ein bisschen beruhigen und sagen, dass du alles richtig machst
und dass du auf dem richtigen Weg bist, weil du wirst auf jeden Fall glücklich sein.
Toast, Toast, Toast, Toast, Toast, Toast, Toast, Toast, Toast.
Warte mal kurz, ich bin hier leiser.
Toast, Toast, Toast, Toast, Toast, Toast, Toast, Toast, Toast, Toast, Toast.
Toast, Toast, Toast, Toast, Toast, Toast, Toast, Toast, Toast, Toast, Toast, Toast, Toast, Toast.
Ah ja.
Du musst es ja ordentlich bezahlen, sonst macht den Kram ja keiner.
Easy.
Okay.
Wenn ihr das Video schauen wollt, gebt es das einmal.
Das abonnieren nicht vergessen.
Machen wir.
Ja, das war eine gute Folge.
Nein, nein, wir gucken uns jetzt nicht die Partnervermittlerin an.
Was zum...
Alter, was kriege ich da wieder für...
Alter, YouTube-Short!
Schwarzmann.
Jetzt habe ich einmal als Just for Fun so ein Video aufgemacht.
Jetzt kriege ich 24 Stunden Katzenschnurren vor Kamin.
Zeit für Schwarzblocker.
Ich wollte gerade sagen, sowas gibt es.
Aber wenn ich mir das überlege, ja klar gibt es sowas.
Warum nicht?
Wollen wir noch ein bisschen durch Technik-Trends stöbern?
Ja.
Wie denn?
Wo denn?
Was meinst du jetzt?
Also es gibt eine Fallout-Serie.
Fällt mir gerade auf.
Wahrscheinlich Schrott, oder?
Wie das meiste andere, was da so verfilmt wird.
Jemand hat Erfahrung von euch mit Garmin-Power-Meter-Pedalen.
Ob das taugt?
Die sind Rotz.
Okay, warum?
Preis.
Ah ja.
Kram ist teuer.
Der Kurbelkopf.
Du kommst deutlich günstiger.
Ja, mag sein, ja.
Wieso 46 Euro mit Pedale?
Weil das noch ein Cadence und...
Ne, also wie heißt das auf Deutsch?
Weil es ein Umdrehungs...
Wie viele Umdrehungen-Minute du machst, Sensor eingebaut hat.
Und wie viel Leistung du trittst, Messung mit eingebaut hat.
Das ist das, was das teuer macht.
Die Pedale an sich wahrscheinlich weniger.
Wer ist du denn mit Klick-Pedalen?
Ich habe angefangen, ja.
Ich habe geübt auf meinem Trainer daheim.
Trittfrequenz, genau.
Mit Ein- und Ausklippen.
Ich fahre aber mit dem Mountainbike-Klipsystem.
Damit ich auch mal irgendwo zwei Meter laufen kann.
Ich habe aber kein E-Bike.
Ne, aber irgendjemand hat auch gesagt, das ist Schrott.
Ah ja, ich hatte zweimal ein Problem mit dem Kugellager.
Vielleicht aber auch...
Okay.
Hyundai liefert...
Hä?
Was zum...
Hä?
Was hat das mit Pedalen zu tun?
Hast du das falsche Video gepostet?
Alter, ich habe kein E-Bike.
Es geht überhaupt nicht um ein E-Bike.
Wenn du sowas hast, dann brauchst du es nicht.
Ein ganz normales Fahrrad.
Guck, das hier.
Ist das.
Was hat...
Die haben zwar hier Pedale dran, aber es wird ohne Pedale geliefert.
Das ist kein E-Bike.
Und ich habe richtig Glück gehabt.
Guck mal.
Ich habe es...
Ich habe es 1.000 Euro günstiger bekommen, weil es das letzte Lieferbare war.
Ach ja, ich kann jetzt tatsächlich noch eine Sache hier dazu sagen.
Mein letztes Fahrrad hatte ja 1x11 Schaltung und ich fand das ja mega nice, weil das so clean ausgesehen hat.
Ja, kein Umwerfer vorne, nur ein Platt vorne und insgesamt fand ich das ja super.
Aber ich muss sagen, ich bin jetzt ja schon zwei Runden mit dem neuen Fahrrad gefahren.
2x11.
2x11 ist auch nicht verkehrt.
Ich habe gleich das automatische Schalten aktiviert, dass du quasi nicht mehr manuell umschalten musst vorne, sondern du kannst quasi nur hoch und runter schalten und der macht das automatisch.
Das ist super angenehm.
Du merkst eigentlich kaum irgendwie einen großen Unterschied zu 1x11.
Und du hast auf dem Flachen, wenn es wirklich gute Straße ist, vielleicht ein bisschen bergab geht.
Aber es ist auch ein bisschen mehr Tempo drauf.
Also es ist gar nicht so übel.
Automatik beim Rad, ja.
Das ist mit DI2 Schaltung, das ist elektronisch.
Normalerweise schaltest du, guck mal, normalerweise ist es so, auf der Seite schaltest du hier vorne den Gang um, vom kleinen auf das große oder vom großen auf das kleine.
Und auf der linken Seite hier schaltest du um, hinten runter oder hoch.
Hattest du vorher auch schon DI2?
Ja, ich hatte 1x12 DI2.
Ich hatte exakt das gleiche Fahrrad, nur mit 1x12 DI2 versus jetzt 2x11 DI2.
Am liebsten hätte ich 1x12 gekauft, gibt es aber aktuell nicht.
Da hätte ich SRAM oder sowas nehmen müssen.
So, und man kann die Elektronik so einstellen.
Der 50 KMA, ähm...
So schnell war ich damit noch nicht, habe ich auch nicht vor.
Höchstens, höchstens.
Irgendwo, wenn es richtig steil bergrunter geht.
Und jetzt kann man das so einstellen, das hat 3 Modi, wie man einstellen kann.
Hast du dein Fahrrad in Home Assistant?
Ne, aber ich habe eine Home Assistant App im Garmin, da kann ich theoretisch darüber Sachen steuern.
Zumindest, es gibt 3 verschiedene Shifting Modi, die du einstellen kannst.
Manuell, das ist so wie man es sich vorstellt, hier hoch und da hinten, hoch und da vorne.
Und dann hast du Synchro Shift, heißt das.
Da kannst du einstellen.
Dass du nur hier schaltest, hoch und runter, hoch und runter.
Und wenn du dann quasi angekommen bist, auf, ähm...
Hier auf dem Großen, da unten und...
Ne, Moment.
Da oben, dann schalte das dann eins runter.
Und schalte hinten drei auf.
Also du kannst quasi alle Gänge durchschalten, nur mit einem Hebel.
Und das vorne umwerfen passiert automatisch.
Das ist mega nice.
Ah, das ist keine Federung, ne, wozu?
Keine Federung.
War ja keine Trails oder irgendwas.
Welche abschüssigen Wald-Dinger oder so.
So, und...
Wollte ich jetzt noch sagen.
Ja, also eine Sache werde ich aber tatsächlich daran noch modifizieren.
Und zwar hinten ist zur Zeit eine 11-34 Kassette drauf.
Das heißt, 31 durch 34.
Das heißt, der leichteste Gang hat leichte Untersetzung.
Mehr oder weniger 1 zu 1.
1 zu dem, was mein Alters hatte.
Mein Alters hatte das kleinste, glaube ich, äh, 42 zu 54.
Was zum...
Warum kann das Google jetzt nicht ausrechnen?
Eben, konntest...
Eben, das kann Google ausrechnen, okay?
Ähm...
Kann man hier irgendwie...
Errechnen das Ergebnis?
Ja.
Also, das ist sogar ein bisschen, bisschen leichter jetzt, ja.
Also nicht ein bisschen unterschiedlich.
So, was ich machen werde ist...
Ich werde hinten noch...
40er Kassette draufbauen.
11 bis...
11 bis 40.
Und dann komme ich easy jeden Berg hoch.
Das kostet...
Ja, 2600 Euro.
Aber das ist super Preis.
Das ist ein Carbonrahmen, alles dabei.
Nice Schaltung.
Bremsen.
Nur keine Pedale.
Pedale sind nicht dabei.
Also bis jetzt bin ich echt zufrieden.
Ich bin aber auch erst zwei Runden gefahren.
Eigentlich wollte ich heute Mittag noch eine Runde fahren.
Ich bin mir aber gerade unschlüssig, ob ich das machen sollte.
Erstens.
Wetter nicht so geil, wie angekündigt.
Kein Motor und kein Akku, ne.
Wetter nicht so geil, wie angekündigt.
Außerdem bin ich heute Morgen schon 7,5 Kilometer gerannt.
Muss es ja nicht komplett übertreiben.
Aber ich hätte schon Bock,
nochmal eine Runde zu radeln heute.
Was Kleines.
So eineinhalb Stunden oder so.
Ja, deswegen mache ich das auch nicht.
Ich nehme das nicht mit in die Stadt.
Und ich gehe damit auch nicht einkaufen.
Ich benutze das rein zum fitnessmäßigen Fahren.
Also das weiteste, was ich bisher gefahren bin,
waren, glaube ich, 62 Kilometer.
Aber das war ziemlich anstrengend,
weil da ging es einen ordentlichen Berg hoch.
Äh, nö.
Wie gesagt, deswegen will ich mir die Pedale kaufen.
Damit misst man zwar nicht seine Geschwindigkeit.
Die sehe ich ja auf meinem GPS-Tracker.
Aber da kann man besser einschätzen,
wie viel Leistungs-Output man hat.
Ja, das würde ich nicht meinen.
Ich habe zwar ein Schloss dabei, so ein ganz kleines, leichtes,
was du mit jedem Seitenschneider gefühlt aufkriegst.
Falls ich wirklich mal aus irgendwelchen Gründen
ganz kurz irgendwo anhalten muss.
Und ich wüsste nicht, wozu ich es brauchen sollte.
Aber ich habe so ein kleines Minischloss dabei.
Ich habe nicht vor, dass ich es brauche.
Aber man weiß ja nie.
Oh, okay.
Was hat man sonst noch hier auf YouTube zu bieten heute?
Das ist professionelles ... Ach, der Kevin wieder.
Von dem habe ich auch schon eine Weile nichts mehr geguckt.
Ist professionelles Code langweilig?
Wahrscheinlich wie so vieles, was man professionell macht,
ist der Großteil langweilig.
So, und ihr habt gesagt, es ist schon wieder outdated,
dass Apple Epic gebannt hat.
Epic was unbanned after agreeing to no more mean Tweets.
Was haben wir denn hier?
Ist dir was? Leute, wir machen jetzt mal was.
Wir räumen mal kurz die Tabs auf.
Das könnte man sich angucken, das könnte man sich angucken,
das könnte man sich angucken.
Das auch.
Das vielleicht auch.
UI-Library is blowing your mind.
Nein, das gucken wir uns nicht an.
Gucken wir uns auch nicht an.
Gucken wir uns ... Ist outdated.
Hätten wir vor zwei Wochen gucken müssen.
Gucken wir uns auch nicht an.
Softwareentwickler sind immer schon vielleicht,
wenn es mir irgendwann mal danach ist.
Gucken wir uns auch nicht mehr an.
Gucken wir uns auch nicht mehr an.
Was ist aus BattleBit geworden vor einem ...
Das interessiert mich tatsächlich.
Ich glaube, das hat nicht mehr so viele Spieler.
Das gucken wir uns auch nicht an.
Maurice ist wieder am Start.
Gucken wir uns jetzt auch nicht mehr an.
Auch nicht mehr.
GitLab was hacked with an image.
Haben wir das nicht schon geguckt?
Which is a popular library to work with.
2000 ...
Nochmal Maurice.
Docker is one of my most ...
Nein.
Last week I went to ...
Gucken wir uns auch nicht mehr an.
Heute geht es um ...
Der peinliche Absturz von LFTs.
Gucken wir uns auch nicht mehr an.
MonkaS.
Albtraum-Arbeitsplatz.
Bore out.
Kaputt.
Durch Unterforderung.
Okay, das könnte man sich vielleicht angucken.
Ich sehe, es ist vorbei und wir konnten einen Blick ...
Das gucken wir auch nicht mehr an.
Gucken wir uns auch nicht mehr an.
Gucken wir uns auch nicht mehr an.
Der Auer.
Was hat denn der Bauer Neues?
Habe ich schon eine Weile nicht mehr geguckt.
Bitte kauft sowas nicht.
Okay, warum?
Hallo zusammen.
Weil es Schrott ist.
Okay, aber eigentlich ist es mir egal.
Ich kaufe mir sowas auch nicht, weil ich habe schon was.
Wie schädlich ist Social Media nun wirklich?
Kommt drauf an, ob du das Falsche auf Twitter gepostet hast und deswegen Leute bei dir auf der Arbeit anrufen und sagen, sie sollen dich rauswerfen.
Da kann Social Media schon ein bisschen schädlich sein.
Gucken wir uns auch nicht mehr an.
Das haben wir schon geguckt.
Das Keeper FX.
Haben wir auch schon geguckt.
Haben wir auch schon ...
Weihnachtszeit, das ist zu outdated.
Keine Ahnung, vielleicht.
Ein Tutorium zu halten bedeutet ...
Informatische Masse mit ...
Haben wir nicht irgendwas ...
JavaScript Devs are switching to Rust.
Das ist auch ...
Alter ...
Das ergibt überhaupt keinen Sinn.
Diese Überschrift schon wieder, Mann.
Okay, ich habe ...
Wir haben ein bisschen ...
Wir haben ein bisschen aufgeräumt.
Hat zumindest den Vorteil, dass ich jetzt wieder sehe, was ...
Wenn ich neue Tabs aufmache.
Meint er geschlossene Wasserkühlung allgemein oder nur das Corsair-Ding?
Keine Ahnung, was er meint, aber dass er das allgemein meint, kann ich mir nicht vorstellen.
Er hat ja in der Vergangenheit auch schon Dinger von denen getestet und empfohlen.
Also ich bin echt zufrieden damit, muss ich sagen.
Das ist ja mein ...
Das ist ja mein allererster PC mit Wasserkühlung.
Irgendwann ist es mal bei jedem so weit, den ich mir hier gekauft habe.
Letztes Jahr.
Und das Ding macht überhaupt keine Zinken, funktioniert wunderbar.
Ist auch nicht übertrieben laut, blubbert nichts.
Wie viel RAM belegt dein Browser?
Erstaunlich wenig.
Guck mal.
Oh, vier Gig.
Chrome braucht mehr.
Vier Gig.
Das ist halt nichts.
Ich habe ...
Wie viel RAM habe ich? 64 Gig.
Kommt drauf an, was du haben willst.
Wasserkühlung ist ...
Unterm Strich, wenn es dir wirklich um die Temperaturen geht
oder um maximalen Multicore-Takt oder was auch immer,
ist besser als eine Luftkühlung.
Also vom ... Wie nennt man das? Von der Kühlcharakteristik oder so.
Ich persönlich würde auch Luftkühlung vorziehen,
einfach weil es simpler ist
und auf lange Sicht sicherlich auch wenige Fehlerquellen hat.
Aber in dem Fall war es sinnvoll.
Und bis jetzt bin ich echt zufrieden mit ...
Ob ich den nächsten PC wieder mit Wasserkühlung kaufe, weiß ich nicht.
Die Empfehlungen sind ja schon hart pepega heute wieder.
Warum will das die ganze Zeit, dass ich dieses komische Sauna-Video gucke?
Oh, Leute, ich muss mal kurz mein Headset entknoten.
Ich habe irgendwie noch 20 cm Kabel übrig.
So, wieder am Start.
Lasst uns kein Interesse beim Sauna-Video angucken.
Das geht nicht. Ich bin nicht eingeloggt.
Da kann man das nicht machen.
Leider.
Sätge.
Was ist das?
The smallest female in a rusty spotted ...
Die ist ausgewachsen, oder?
He may look like a kitten.
Ja.
He'd still fit in the palm of your hand.
But this little male is very nearly fully grown.
He'll soon be setting off on a solo trip to life,
fending entirely for himself.
Der ist für uns niedlich.
Für die Mäuse oder was auch immer da so rumkrabbelt,
ist das Furcht ein Flüst.
Wobei Mäuse, ich weiß nicht, wenn das ein Blatt ist ...
Parks in size.
He makes up for.
In daring.
Äh! Äh!
Äh!
Wasser!
Young cats are born curious.
It's how they learn about their world ...
Hopp!
Nice jumper.
It can get them into trouble.
Was der jetzt jagt, würde mich auch interessieren.
Aber ...
Ich dachte, wir sehen jetzt noch, was der fängt.
Ne, darf man nicht sehen.
Das ist quasi nur ein Teaser dafür gewesen, oder was?
Sieht irgendwie nicht echt aus.
Ja, bestimmt. Garantiert AI-generated Content gewesen.
Wisst ihr, was ich bei solchen alten Katzenvideos immer sad gefinde, wenn ich sehe, 16 Jahre, dass es die wahrscheinlich nicht mehr gibt?
Da fragt man sich echt, was die sich so erzählen.
Klassiker. Ja, das Video ist schade.
Was auch Klassiker-Video ist, kennt ihr bestimmt noch alle, oder?
Charlie bit my finger.
Gibt es das auch mit Meme-Untertiteln?
Wahrscheinlich.
Jetzt habe ich leider YouTube auf die falsche Fährte gelockt.
Jetzt habe ich mir drei Katzenvideos angeguckt.
Und jetzt denkt sich YouTube, nope, jetzt musst du immer mehr...
Das Sauna-Video, Mann!
Mir hätte es zu.
Ja, das ist das erste YouTube-Video gewesen.
Oh, das ist die Excel-Schubserin.
Also ganz ehrlich, die YouTube-Empfehlungen heute sind mal richtig ganz für den Arsch.
Ich gucke das Sauna-Video nicht.
Keine Chance.
Dann gucke ich mir lieber an.
Live-Office-Zoomer.
Ich kenne den Channel nicht. Ich habe keine Ahnung, ob das was taugt.
Okay.
Entschuldigung.
Wenn es zu cringe und unlustig ist, mache ich aus.
Stubenmocker 500.
Danke schön für den Sub.
Ja, was sonst morgens?
Sub, Bro.
What's up, mate?
Finally you here.
You bringing some main character vibes by always coming too late.
I know, I know.
I was busy grinding this morning.
However, let's go to school.
Alright, everybody, this next video will show how maths work.
Listen carefully.
Quick maths.
And then go ahead and try it out.
So, like I said, the first step is just going through any of these and just scrolling to find any products that we can possibly work with.
So let's say this product right here is what I want to add to my list.
Was bin ich da eigentlich sehend? Kommt da jetzt so irgendwas noch?
Why aren't you watching the video I put up, Brandon?
It's not interesting enough to me. I'll learn it at home.
You're supposed to learn at school and only do the homework at home.
Okay, Boomer.
Excuse me? Do you not understand how important these lectures are?
I'll manage myself. I usually watch this material on YouTube. These YouTube teachers explain it much better.
Then why are you here?
I keep wondering myself that as well. I know I'll never use this lecture in the future.
I'd rather learn about entrepreneurship, business management and marketing, but I guess you don't know anything about that.
Das ist das richtige Grindset Mindset.
You don't know anything about that.
I think that's enough, Brandon. Please leave.
I think that's enough, Brandon. Please leave.
I think that's enough, Brandon. Please leave.
You don't have to leave my class.
Okay, Boomer.
Okay, Boomer.
Okay, Boomer.
Sagt er Boomer oder Broomer?
Ich glaube, das Video ist nicht für mich.
Ich bin selber nicht Gen-C genug dafür, glaube ich.
Man. Okay.
YouTube. Ich versuche YouTube jetzt zu erklären, dass ich das Sauna-Video nicht gucken will.
Ich klicke das jetzt an.
Zwei Sekunden View-Time und ich mache wieder zu.
Meistens bringt das YouTube dazu.
Nein.
Keine Chance.
Ich habe eigentlich gedacht, YouTube lernt es jetzt.
Und? Und? Und? Und?
Ah, kein
Sauna-Video mehr. Jawohl.
Das ist geschafft. Easy.
Sauna-Video
outdated,
overrated, jebaited.
Okay, das können wir uns jetzt noch angucken.
Ab jetzt kommen mehr Sauna-Videos.
Ja, ich habe es angeklickt.
Was ist das denn sonst noch so?
Was ist das denn jetzt? Professionelles Coden.
Ist das langweilig.
Zeig mal her.
Er ist nicht mehr in Spanien.
Das letzte Mal, wo ich ein Video von ihm geguckt habe,
da war er in Spanien.
Und hat dort von irgendeinem
Ferienhaus oder so,
Remote Home Office.
Moment.
Ist das der mit dem Dackel, der Franz heißt?
Das habe ich mir irgendwie gemerkt.
Ja, oder?
Franz.
Ich glaube schon.
Franz, Alter.
Using Docker in unusual ways.
Das habe ich eben offen gehabt.
Und dann habe ich es wieder geclosed.
Weil ich mir gedacht habe,
das ist wahrscheinlich nichts.
As a time machine, running legacy code,
hosting a local stack,
integration testing, improving application security.
Easy.
Das machen wir doch alles schon.
Ich meine, wir sind
errorless-driven programmers.
Bei uns geht alles immer first try.
Dementsprechend können wir auch
auf wirkliche Kommentare und Tests
und solche Sachen verzichten.
Einfach fehlerfrei programmieren.
Okay, kommen wir mal.
Ist professionelles Coding langweilig?
Hi Leute, heute gebe ich dir wieder
einen Einblick in den Arbeitsalltag
eines Softwareentwicklers.
Ich mache den Job schon seit über
zehn Jahren.
Diesen Begriff habe ich in letzter Zeit
auch öfters gehört.
Ich habe keine Ahnung, was das bedeuten soll.
Shift left.
Ich habe das schon öfters gehört.
Ich habe null Plan, was die Leute...
Leute damit meinen.
Kann mich irgendjemand mal aufklären?
Oder der Meldminister weiß das bestimmt.
Oder der benutzt das...
Nein, nein, die meinen bestimmt nicht das.
Shift left.
Verantwortung für ein Thema nach links
an den Anfang schieben.
Geht darum, Security schon ab der Entwicklung
zu integrieren, nicht erst ganz am Ende.
Teil von DevSecOps.
Und warum heißt es Shift left?
Das ist ja
ein äußerst unintuitives Buzzword.
Zurück auf Anfang.
In der Timeline.
Ach so, weil du in der Timeline
nach left shiftest.
Es gibt so viel
Schwachsinnsbegriffe.
Ich habe übrigens...
Es gibt in jedem Unternehmen
so ein paar Begriffe,
die sich dort durchgesetzt haben,
weil mal irgendwelche Manager-Dudes
das die ganze Zeit verwendet haben.
Zum Beispiel in der
alten Firma, wo ich gearbeitet habe,
war das Next Level.
Irgendeiner bei unseren Manager-Leuten
damals hat diesen Begriff
laufend verwendet. Für jeden Scheiß.
Dann müssen wir das Next Level erreichen.
Next Level hier, Next Level da und sowas.
Das hat sich so durchgesetzt,
dass auch die ganzen anderen Manager-Dudes,
die cool sein wollten, Next Level als Wort
verwendet haben. Und irgendwann
haben sogar alle anderen Leute angefangen,
jeden Scheiß irgendwie Next Level
zu nennen. Wobei das oftmals
dann...
so eher ironisch gemeint war.
So nach dem Motto, das ist ja richtig
Next Level. Zumindest haben dort gefühlt
alle Next Level gesagt. Jetzt
in der aktuellen Firma, wo ich bin,
ist mir aufgefallen, dass dort ganz
viele Leute, wenn es
Wartungsarbeiten gibt,
also stellt euch mal vor, es gibt
Wartungsarbeiten,
ein System wird abgelöst durch das andere.
Und das passiert
jetzt nicht von heute
auf morgen, sondern
Einzelsysteme
der Reihe nach.
Und da habe ich jetzt schon öfters den Begriff
gehört. Wir machen
dort keinen Big Bang.
Das klingt
so komisch, Alter.
Wir machen keinen
Big Bang. Das habe ich jetzt schon
öfters dort gehört. Das ist
garantiert auch irgend so ein Wort,
was irgendwelche Manager-Dudes
dort schon seit Jahren
benutzen.
Und das hat sich...
Hat sich da jetzt irgendwie durchgesetzt.
Kein Big Bang.
Cut over.
Ja, es gibt überall
so Dinge, die sich da durchgesetzt
haben. Aber wir
diagonalskalieren ja nur. Da kann uns das
nicht passieren. Da müssen wir uns
doch synken, ja. Ich würde sagen,
in unserem Daily Stand-Up machen wir das dann.
Aber ich kann dir jetzt schon sagen,
wir sind da mit Hochdruck dran an dem Thema.
Also, gucken wir mal.
Ich arbeite aktuell bei einem
TV-Streaming-Anbieter.
Neue Funktionen...
Ja, Dings, bei Waipu arbeitet er, gell?
Wahrscheinlich will das
nicht mehr so prominent sagen. Vielleicht haben die
sich ja aufgeregt darüber.
Zu entwickeln ist ein großer Teil des Aufgabenbereichs,
aber es gibt noch so viel mehr.
8.30 Uhr Arbeit zu beginnen. Ich fange meistens
7.30 Uhr tatsächlich schon an, weil
da kann ich früher abhauen. Easy.
Also einen Software-Fehler
in einer App oder einem Videospiel
gefunden. Also irgendetwas
hat nicht richtig funktioniert.
Solche Programmfehler können immer...
Was hat er denn eigentlich?
Mit was machen hier die
Hackermans Hackermans-Stell?
Ist das Xcode oder was ist das?
Software-Fehler in einer App
oder einem Videospiel gefunden.
Also irgendetwas hat nicht richtig
funktioniert. Solche Programmfehler
können immer mal wieder auftreten und da
muss man sich auch einfach mal hinsetzen und diese
Probleme lösen. Für heute habe ich mir deshalb
vorgenommen... Was war denn das?
Ah, so ein Spezial-Kaffee-Kaffee-Kaffee-Mach-Ding.
Gut.
Ich trinke keinen Kaffee, fällt flach.
Ich muss nur diese Probleme lösen.
Für heute habe ich mir deshalb vorgenommen,
eine ganze Reihe von Bugs zu beheben.
Ich zeige dir also, wie man solche Bugs
findet, das Problem identifiziert und den
Fehler behebt.
Siehste? Der hat nicht das Wubbler-Stream-Diplom.
Dann wirst du das fehlerfrei programmieren,
alles, alle Probleme löst.
So, ich mein, wann... Chatge, seriously.
Wann hat schon mal irgendwas, wenn wir hier
programmiert haben, im Stream nicht funktioniert?
Never, oder?
First try.
Fehlerfrei. Immer.
Und wir wissen auch, dass das hier gar keine
richtigen Issues sind, sondern einfach nur
Anwendungsfehler.
Anwenderfehler.
Und in Kombination mit diagonaler Skalierung,
dann ist Quality wirklich Destiny.
Wenn wir gleich noch sehen, dass seine Variable
nicht Cakeweight oder Tempogas heißt,
ne, ne.
Plub lasse ich mir auch noch gefallen,
aber richtige Variablen-Namen sind schon
ziemlich...
outdated.
Wow, supergesund, Alter.
Da soll ich mir mal ne Scheibe vorn abschneiden.
Nummer eins, der unsichtbare Bug.
Bei iOS und Android gibt es jeweils Systeme,
die sich darum kümmern, dass eine App nicht zu viel
Arbeitsspeicher verbraucht.
Wenn eine App dennoch nicht genug mit Ressourcen umgeht,
kann es sein, dass sie einfach geschlossen wird.
Also unter Linux dann sowas wie der OOM-Killer.
Also unter Linux dann sowas wie der OOM-Killer.
Also unter Linux dann sowas wie der OOM-Killer.
Hier haben wir ein Problem, dass der Speicher
nicht mehr freigegeben wird, wenn wir in der App umschalten.
Das heißt, jedes Mal wird ein neuer Screen erzeugt,
aber nicht aus dem Speicher geworfen,
wenn er nicht mehr benötigt wird.
Ich habe in meiner Entwicklungsumgebung Xcode,
also das Programm, mit dem ich iOS-Apps programmiere,
verschiedene Diagnose-Tools, um die Ursache dafür zu finden.
Manchmal ist es offensichtlich,
aber hier war es schon ein wenig versteckt.
Ich kann mir alle Objekte, die sich aktuell im Speicher befinden,
mit diesen...
Ich weiß nicht, was ich da so machen kann.
Ich weiß nicht, was ich da so machen kann.
Ich weiß nicht, was ich da so machen kann.
Ich weiß nicht, was ich da so machen kann.
Ich weiß nicht, was ich da sehe, aber es sieht sehr advanced aus.
Diese Memory-Debugger-Anschalt...
Ah!
Da sieht man...
Nee, wobei...
Also, ich kann das hier null zuordnen, was man da sieht.
Gut, ich kenne Xcode auch nicht.
Das sieht ein bisschen aus wie Unreal Blueprints,
aber auch nicht wirklich.
Damit kann man sich die Verbindung zwischen diesen einzelnen...
Okay, aber...
Also, ich get it.
Was er sagt, aber ich kann das nicht in Zusammenhang bringen
mit dem, was ich sehe.
...Objekten ganz gut darstellen lassen,
was natürlich dabei hilft, solche Retain-Cycles zu finden.
Das erkennt man dann ganz gut,
wenn man so eine zyklische Verbindung zwischen mehreren Objekten...
Ach so!
Ah, verstehe.
Okay, das ist natürlich nice.
...Objekten hat.
Also, sieht man auch hier, glaube ich, ganz gut.
Ich gehe hier auch nicht zu sehr in technische Details,
aber mit ein paar kleinen Änderungen des Codes...
Was ist denn das für eine Sprache?
Ist das...
Else?
Ist das schon mal nicht Go?
Das ist Swift?
Swift?
Ja.
Das war jetzt auch nur geraten,
weil ich dachte, es sieht nicht aus wie was, was ich groß kenne,
aber es ist Apple, also habe ich jetzt mal auf Swift getippt.
Also, es ist definitiv nicht Objective-C,
also so viele Möglichkeiten gab es da gar nicht.
Was? Guard? Was ist Guard?
Wo steht Guard?
Wo steht Guard?
Chatgear?
Ich sehe es noch nicht mal.
Unter Item?
Ach hier, Guard, Item.
Ist das irgendein Multithreading-Gedöns?
Nee.
Das ist quasi ein If.
Aber warum kann man nicht schreiben,
If item is cancelled,
return.
Warum schreibt man Guard item not cancelled,
else return?
Ja gut.
Ich hätte jetzt vielleicht wegen Guard, hätte ich an irgendwas Multithreading-mäßiges gedacht, aber...
Ich hätte jetzt vielleicht wegen Guard, hätte ich an irgendwas Multithreading-mäßiges gedacht, aber...
Keine Ahnung.
Ganz gut beheben.
Okay, das gucken wir jetzt mal.
Guard, Swift.
Swift Guard Statement.
Swift Guard, in Swift,
we use the Guard Statement
to transfer program control out of scope
when certain conditions are not met.
Okay, das ist quasi ein If, oder?
Also ein If? Ah ja.
The Guard Statement is similar to the If Statement
with one major difference.
The If Statement runs when a certain condition is met.
Das Statement läuft, wenn ein gewisser Konjunkturmitglied tot ist, und das Statement läuft, wenn ein gewisser Konjunkturmitglied nicht tot ist.
Das Statement läuft, wenn ein gewisser Konjunkturmitglied nicht tot ist, und das Statement läuft, wenn ein gewisser Konjunkturmitglied nicht tot ist.
Das Statement läuft, wenn ein gewisser Konjunkturmitglied nicht tot ist, und das Statement läuft, wenn ein gewisser Konjunkturmitglied nicht tot ist, und das Statement läuft, wenn ein gewisser Konjunkturmitglied nicht tot ist, und das Statement läuft, wenn ein gewisser Konjunkturmitglied nicht tot ist, und das Statement läuft, wenn ein gewisser Konjunkturmitglied nicht tot ist, und das Statement läuft, wenn ein gewisser Konjunkturmitglied nicht tot ist, und das Statement läuft, wenn ein gewisser Konjunkturmitglied nicht tot ist, und das Statement läuft, wenn ein gewisser Konjunkturmitglied nicht tot ist, und das Statement läuft, wenn ein gewisser Konjunkturmitglied nicht tot ist, und das Statement läuft, wenn ein gewisser Konjunkturmitglied nicht tot ist, und das Statement läuft, wenn ein gewisser Konjunktur
Die Lösung ging jetzt relativ einfach, denn wir benutzen für jede Seite eine unterschiedliche Datenquelle.
Was ich aber machen kann, ist, dass das Attribut, wo der aktuelle Filter gespeichert wird, über alle Datenquellen geteilt wird.
Wenn man den Filter also an einer Stelle ändert, wird...
Also quasi globale Variable.
...dass automatisch auf alle anderen Seiten auswirken.
Naja.
Also globale Variable klingt so negativ, globaler State klingt nicht so negativ.
So mal die Idee.
Meine Code-Änderungen sind jetzt natürlich nicht final, denn wie in jedem professionellen Umfeld machen wir auch hier Code-Reviews.
Das heißt, ich mache einen Pull-Request auf, in dem all meine Änderungen übersichtlich dargestellt werden.
Mein Kollege schaut sich dann alles detailliert durch und gibt Verbesserungsvorschläge.
Und dann sagt er, kriege.
Wenn dann alles passt und nur dann können meine Änderungen in die eigentliche App gebracht werden.
Lass mich in den Kommentaren wissen, falls du zu diesem ganzen Workflow ein eigenes Video sehen möchtest.
Naja, jetzt ist erstmal Pause angesagt.
Und in der Mittagspause...
...gehe ich erstmal eine Runde mit Franz spazieren.
Das tut auch mir gut, damit ich mal ein bisschen frisch...
Moment, Chat, Chat.
Ihr habt prinzipiell das Wichtigste vergessen.
LGTM ist schon okay, aber ohne Rakete geht da nix.
Rakete muss sein.
...Luft schnappen und meine Beine vertreten kann.
Wenn man mal im Flow ist, das passiert mir auch manchmal, dann kann man gerne...
Der hat's gut, Mann.
Der kann den ganzen Tag wenigstens was Sinnvolles machen und muss nicht 75% mieten.
Aber es bringt mir immer neue Energie, wenn ich mal ein bisschen draußen an der Luft bin.
Und dann, Franz bekommt seinen Mittagessen.
Wie definierst du globale Variablen in .NET-Projekts?
Ich mach immer eine Public Class mit Content-Variablen.
Es kommt ein bisschen drauf an, was man machen will.
Das kannst du natürlich machen.
Aber was ist mit App-Settings und Dependency-Injection, wenn es ein bisschen größeres .NET-Projekt ist?
Du hast irgendeine globale...
Keine globale, Blödsinn, was laber ich denn?
Irgendeine App-Settings-Klasse, wo dann so Dinger drinstehen wie, keine Ahnung, welcher Username ist in der Config eingetragen oder kommt über Environment-Variablen irgendwas rein.
Und die registrierst du in deiner Dependency-Injection.
Eventuell auch über Options.
Das ist ja neu.
Was heißt neu?
Da gibt's ein paar Sachen.
Die kannst du sogar mittlerweile automatisch refreshen lassen.
Wenn sich...
Was an der JSON-Datei geändert hat.
Und das kannst du dann in deinem Dependency-Injection...
Registrierst du das.
Und dann lässt du dir einfach eine Instanz App-Settings oder App-Config oder halt was auch immer du brauchst injecten.
Und du kannst dann gleich einbauen, dass der sich das zusammenbaut aus den richtigen Quellen.
Zum Beispiel...
Vielleicht hast du die Möglichkeit, das über eine Config-File zu setzen, über ein Environment-Variable zu setzen.
Über Command-Line-Switch zu setzen.
Und da musst du nicht jedes Mal gucken, ist Command-Line gesetzt, ist Environment-Variable gesetzt.
Das kann diese Option-Geschichte für dich machen.
Und dann kriegst du eine Option-Class rein.
Das ist dann keine globale, gesharete State-Klasse in dem Sinn.
Sondern es ist meistens so transient.
Also du kriegst dann pro Anforderung eine neue Instanz davon.
Ja, wenn du...
So, wenn du globale Variablen...
Variablen brauchst...
Jetzt eigentlich hat nichts ein, wo ich so richtig global übergreifend mal irgendwas gebraucht habe.
Also wenn du eine Datenbank hast, dann ist es meistens eh relativ easy.
Dann geht das erst in die Datenbank rein.
Auf der anderen Seite wird es gequeried.
Aber...
Also, sagen wir mal so.
Es gibt schon sicherlich die ein oder anderen Sachen, die eben global einzigartig sind.
Ja, sowas wie Konsolen-Output und sowas vielleicht in der Richtung.
Oder sagen wir mal, schreiben.
Sagen wir mal, okay, ich habe eine Idee.
Sagen wir mal, du hast eine Klasse, die schreibt irgendwie Serial-Port irgendwas oder USB und so.
Ja.
Dann würde ich in meinem Dependency-Injection irgendeinen Singleton registrieren, was ich mir injecten lassen kann.
Und dann habe ich meinen globalen State, aber trotzdem über die I.
So würde ich das wahrscheinlich machen.
Hängt immer ein bisschen vom Anwendungszweck ab.
Injected in einen Kaffee, ja.
Das klingt spannend.
Wir haben das sogar...
Haben wir das nicht sogar...
Letztens im Stream hier gemacht mit Options-Injecten.
Also, das ist ziemlich easy.
Du kannst...
Vielleicht machen wir das demnächst mal.
Kann ich dir das mal zeigen.
Wollen wir ein bisschen basteln.
Erinnere mich beim nächsten .NET-Progress-Stream dran, dass ich dir das zeige.
So, gehen wir weiter.
Oh, ist das...
Ich hätte jetzt erst mal gedacht, das ist so eine Art Lasagne.
Aber doch nicht.
Eine leckere Lasagne.
Doch, Lasagne.
Okay, okay.
An ein paar Stellen ist noch der Wunsch.
Wurm drin.
Aber deshalb kümmern wir uns heute ja um alles.
Denn ich habe euch ja schon die Serienaufnahmen gezeigt.
Und da haben wir aktuell noch das Problem, dass wir nicht den einzelnen...
Serien-Enjoyer.
...Episodentitel anzeigen, sondern den Seriennamen.
Das ist natürlich offensichtlich Quatsch.
Denn diese Information bringt hier überhaupt keinen Mehrwert.
Deshalb werde ich das Ganze jetzt spezifischer gestalten.
Jede einzelne Episode einer Serie soll sich jetzt den Episodentitel holen und diesen dort anzeigen.
Auch hier wieder eine sehr kleine Aufgabe.
Chatgear ist doch klar, was er meint.
Aber irgendwann muss man das mal repariert haben.
Aktuell ist das jetzt noch gar nicht so schlimm, weil unsere iOS-Kunden diese Neuerungen noch gar nicht sehen.
Das heißt, aktuell gibt es diese neuen Funktionen noch gar nicht.
Aber spätestens, wenn wir das Ganze ausrollen, sollte alles funktionieren und Sinn ergeben.
Für solche Fälle haben wir auch Tester in der Firma, die sich die App immer mal wieder genauer anschauen und solche Fehler notieren, damit...
Siehste?
Nächster Vorteil von immer First Try fehlerfrei programmieren.
Du brauchst keine Tester zu bezahlen.
...wir sie dann in der Zukunft reparieren können.
So.
Wenn du mit der Softwareentwicklung zu tun hattest, dann wirst du auch wissen, dass es in der Programmierung immer viele Lösungen für das gleiche Problem gibt.
Und deshalb ist die Absprache mit anderen Entwicklern so super wichtig, um eine gemachte Änderung...
Warum kümmert er sich denn um Designanscheinungen?
Wahrscheinlich, weil das kein Riesenteam ist.
Wahrscheinlich machen die nicht für alles Konzeptzeichnung oder sowas.
Auf der anderen Seite...
Weiß nicht, wie es da aufgeht, aber ich finde, das ist doch eigentlich gut, oder?
Ja.
Wenn ein Programmierer ein gewisses Auge für was sinnvoll ist und was nicht sinnvoll...
...im Interface hat, finde ich das sogar gut.
Das ist doch nice.
Ich finde das auch immer gut, wenn Entwickler über den Tellerrand rausgucken und wenn Admins über den Tellerrand rausgucken.
Oder jeder.
Letztendlich profitieren da alle nur von.
Wenn Entwickler sich ein bisschen Gedanken darüber machen, zum Beispiel, worauf am Ende oder wie ihre Software dann deployed wird und läuft...
...und umgedreht bei der Infrastruktur sich auch ein bisschen Gedanken darüber gemacht wird.
Okay, wie wird hier Software entwickelt?
Wie können wir es den Leuten einfach machen, neue Sachen zu testen?
Zu besprechen habe ich jetzt einen Call mit einem Kollegen.
Ich möchte einfach mal seine Meinung zu ein paar Ideen haben, wie ich die Bugs bisher gefixt habe.
Wie gesagt, wenn man die Köpfe zusammensteckt, dann kommt man oft schneller auf eine bessere Lösung.
Und weiter geht's.
Hier haben wir jetzt ein visuelles Problem, denn wir haben auf der Übersichtsseite die Möglichkeit, vorgeschlagene Sendungsempfehlungen direkt in die persönliche Bibliothek aufzunehmen.
Naja, jetzt haben wir hier allerdings noch einen sehr unschönen Glitch.
Wenn man den Button gedrückt hat, dann zeigen wir einen Ladespinner an, weil wir erst noch den requesten.
Oh, ich seh's schon.
Und dann blitzt kurz aufnehmen durch.
Und wenn der Ladevorgang abgeschlossen ist, wird für einen sehr kurzen Moment noch der alte Status angezeigt.
Also, echt.
Da musst du optimistisch updaten.
Da schickst du den, oder wie man das nennt, da schickst du den...
Ne, Chat, also da wäre ich auch pingelig.
Finde ich auch nicht, dass das...
Also das würde mir persönlich schon so gegen den Strich gehen, dass ich das auch fixen wollte.
Das wird wahrscheinlich...
Das würde mir wahrscheinlich kaum jemand groß stören, aber es ist auf jeden Fall unschön.
Ja, das würde auch nicht meinem persönlichen Ordnungsempfinden entsprechen.
Bei sowas musst du die Sachen quasi...
Wie nennt sich das? Optimistic Update oder so?
Da gibt's auch so ein komisches Buzzword für.
Also sprich, du schickst den Request los, so nach dem Motto, okay, der User klickt jetzt auf Aufnehmen.
Du schickst den Request los und bevor du den Request überhaupt fertig hast und der Server sagt, jawohl, ich hab's umgestellt,
stellst du einfach den Request los.
Stellst du einfach den Button schon um.
Sollte der Server aus irgendwelchen Gründen tatsächlich einen Fehler melden, stellst du den wieder zurück.
Ist nicht schön. Ich muss erst mal herausfinden, woran das liegt.
Im Prinzip lag es jetzt daran, dass wir mehrere Requests an den Server checken.
Also natürlich der erste Request, wenn ich auf den Button drauf drücke, um zu sagen, ich möchte das jetzt in meine Liste aufnehmen.
Und dann müssen wir noch auf einen zweiten Request warten, damit sich die ganze Liste aktualisiert, damit das neue Element auch dargestellt wird.
Wir haben allerdings den Spinner schon zurückgesetzt.
Der zweite Request abgeschlossen wurde.
Aber das funktioniert jetzt auch schon super, deshalb würde ich sagen, dass wir direkt mal zum letzten Bug für heute gehen.
Dieser Fehler ist, muss ich ganz ehrlich sagen, ein bisschen cool.
Okay, da bin ich seit einer halben Stunde meistens schon nicht mehr am Rechner.
Oder spätestens ab 16 Uhr nicht mehr am Rechner.
Ich gehe dann meistens noch mal eine Runde draußen, mal frische Luft schnappen und dann setze ich mich wieder vor den Rechner, wie sich das so Kellerkind-mäßig gehört.
Und spiele MMO Kreis.
Also Client bis 22 Uhr.
Oder mache Stream oder YouTube oder irgendwas.
YouTube müsste ich auch mal wieder machen.
Schon irgendwie seit über einem Monat kein Video am Start.
Komisch.
Denn auf der Übersichtsseite steht bei manchen Serien, dass wir zum Beispiel zwei Aufnahmen für die einzelne Serie haben.
Aber sobald wir auf die Serie drauf tippen, sehen wir allerdings nur eine Episode.
Absolut merkwürdig.
Zuerst ist es tatsächlich in der Android-App aufgefallen.
Aber nach einer Analyse haben wir bemerkt, dass wir genau das gleiche Problem...
...auch in der iPhone-App haben.
Der Fehler lag schließlich darin, dass wir zu viele Filteroptionen an unser Backend schicken, wenn wir nach der tatsächlichen Episodenliste fragen.
Immer high-traded sein.
Deshalb steht auf der ersten Seite, dass es zwei Episoden gibt.
Aber nach einer weiteren Filterung wird uns nur ein Ergebnis angezeigt.
Das heißt, den überflüssigen Filter aus dem API-Request entfernen und schon bekommen wir alle Episoden.
Auch hier mache ich natürlich wieder meinen Pull-Request auf.
Mein Kollege kann sich die Coin-Änderung anschauen.
Und am nächsten Tag werde ich dann alles mal durchgehen.
Mal gucken, was er für Feedback gegeben hat.
Naja, jetzt haben wir 17.30 Uhr.
Wir haben heute vier Bugs platt gemacht.
Also gar nicht mal so schlecht, oder?
Also zusammenpacken und ab nach Hause.
Nachdem ich Feierabend mache...
Moment, das ist nicht bei ihm zu Hause?
Das ist auf der Arbeit?
Nee, im Leben nicht.
Das ist einfach sein Arbeitsplatz.
Gar nicht mal so schlecht, oder?
Also zusammen...
Das ist quasi sein Büro sozusagen daheim.
Zusammenpacken und ab nach Hause.
Nachdem ich Feierabend mache, verbringe ich natürlich noch ein bisschen Zeit mit meinem Sohn.
Aber sobald er schläft, wird es auch für uns endlich Zeit, die Beine hochzulegen und zu chillen.
Mit einem Teller voller Sushi wird es auch ein bisschen Netflix...
Das würde ich mir jetzt...
Da hätte ich...
Da würde ich sogar auf Nudeln mit Lachs verzichten.
Oder auf Nudeln mit Tomatensauce heute.
So eine ordentliche Portion Sushi würde ich mir jetzt auch reinhauen.
Mit einem Teller voller Sushi wird es auch ein bisschen Netflix geschaut.
Und bevor ich dann um halb zehn ins Bett gehe.
Das war's und ich hoffe, wir sehen uns beim nächsten Mal.
Dein Kevin.
Heute gebe ich dir wieder einen kleinen Blick in die...
Sag dir mal, ich gehe früh ins Bett.
Max, wie ist dein Büro eingerichtet auf der Arbeit?
Naja, gut, nachdem ich nur einen Tag die Woche in Frankfurt bin, ist da nicht sonderlich viel gemacht.
Nagischer Schreibtisch, Monitor drauf, Dockingstation, fertig.
Was ich mitbringe ist...
Also es gibt theoretisch ein Headset auf der Arbeit.
Das benutze ich aber nicht.
Ich benutze immer meinen Noise-Canceling-Kopfhörer.
Ja, und...
Stellen ausschreiben müssen wir echt mal wieder machen.
Ja, hast du recht.
Vielleicht, vielleicht heute Mittag.
Ob es Kreisel-Crime-technisch geht.
Ich schreibe mir das mal auf.
Müssen wir echt mal wieder machen, ja.
Richtig.
Ja, aber ansonsten, wie gesagt, höhenverstellbarer Schreibtisch.
Ziemlich schlechter Stuhl im Vergleich zu meinem hier.
Großer Bildschirm drauf, Dockingstation.
Das war's, mehr habe ich nicht.
Auf der Arbeit.
Ja, viele bei uns anderen haben die Sachen super customised im Büro.
Also mit Bildern und allem.
Ich nicht.
Nagischer Schreibtisch, gut ist.
Wir ziehen aber bald auch um ins Großraumbüro.
Der Trend ist zwar schon wieder abgefahren,
aber bis das in Deutschland ankommt, dauert das immer ein bisschen.
Ich freue mich da aber tatsächlich drauf,
weil dort ist meistens nicht viel los,
weil die meisten Leute Homeoffice-Stells machen.
Und ich sitze mit anderen Linux-Leuten zusammen im Büro,
die nicht in meinem Team sind.
Das finde ich eigentlich ganz nice.
Da ist auch mein Kollege wieder dabei,
mit dem ich gewechselt bin von der alten Arbeit zur neuen.
Wir haben uns schon die Plätze so klar gemacht,
dass wir quasi daneben...
... in der Ecke hocken, so.
Sogar zusammen in der Ecke hocken.
Ich habe ein Bose QuietComfort35 oder so heißt das.
Das habe ich seit ein paar Jahren schon.
Sicherlich nicht mehr aktuellster Stand der Technik,
aber ganz okay.
Was habe ich hier eigentlich für komische Bilder drinne, man?
Als Emotes.
Billy posing with his cute waifus.
Alles klar.
Und...
Ja, ich finde es auch nicht schlecht.
Ich finde es auch nicht schlecht.
Ich freue mich da drauf.
Ja.
Musste jetzt auf Jabra umsteigen.
Warum?
Ich habe ein Jabra-Headset auf der Arbeit,
so ein einseitiges.
Das benutze ich gar nicht.
Stimmt, wo ist der Chain-Lover, wenn man ihn braucht?
Wobei, brauchen wir den?
Ja.
Aber warum musstest du umsteigen?
Also, ich benutze absichtlich das hier.
Gucken, wie das aussieht.
Ah, das ist so ein beidseitiges.
Okay, das ist schon mal besser.
Ah ja, okay, es suckt.
Also, das funzt.
Aber ich benutze das auch immer über das Handy, ja.
Ich mache Teams...
Teams...
...auf der Arbeit nur über das Handy
und joine auf dem Desktop nur rein, wenn ich was sharen muss.
Decked-Headset.
Aus welchem Jahr kommt ihr denn?
Okay, ein bisschen random.
Die Frage von Nixi Larner.
Bisschen random, die Frage.
Aber du warst doch früher auch Turnshow-Admin.
Ja, ich habe meine Ausbildung gemacht
bei einem Internet-Provider
mit mehreren Standorten in Deutschland
und Rechenzentren weltweit.
Wie hast du da den Weg zum Jetzt gemacht?
Ich bilde mir ein, dass ich dazu schon einige Videos habe auf YouTube,
aber ich bin mir nicht sicher, ob ich jemals ein...
Wie nennt man das so?
...mein Werdegang-Video gemacht habe.
Was haltet ihr?
Findet ihr das eine gute Video-Idee?
Habe ich, glaube ich, noch nie so komplett gemacht.
Okay, du bist ja momentan mehr im DevOps-Bereich.
Oder was machst du derzeit?
Ja, habe ich zwar nicht mehr.
Bei der alten Arbeit hatte ich das offiziell in der Berufsbezeichnung.
Habe ich nicht mehr.
Ich bin jetzt Senior.
Ich bin nur Linux-Engineer,
aber letztendlich ist das eh alles Schall und Rauch.
Die Arbeit ist gar nicht so großartig unterschiedlich.
Hast du vorher schon programmiert?
Bin erzertert, wenn du mich gerade ein bisschen zu verändern...
Hast du vorher...
Ja, habe ich.
Ja, na ja.
Also, ich habe 2002 oder so angefangen zu programmieren.
Und da war ich auch schon 18.
Ja.
Vorher ein bisschen.
In der einen Schule, aber da hat es bei mir noch nicht gezündet.
Das lag aber auch daran, der Lehrer hat gesagt und er hat irgendwelche Low-Level-C-Sachen zum Einstieg gemacht.
Ja, wahrscheinlich eher 2001, wo ich angefangen habe.
Ich habe mir damals ein Python-Buch gekauft, 2001.
Das war damals so der neueste Scheiß.
Das war noch Python 2, 2, 4 oder sowas.
Also, ich habe schon immer ganz gerne programmiert.
Also, immer, aber schon lange.
Ich habe schon lange gerne programmiert.
Bin erzertert, wenn du mich gerade ein bisschen zu verändern...
Also, du hast, wenn du dich für das Entwickeln von Software interessierst plus Background hast im Admin-Linux-Umfeld oder auch Windows-Umfeld, hast du optimale Voraussetzungen für...
Ich weiß ja nicht, was du gerade vorhast.
Also, ich kann dir sagen, wie das bei mir war.
Ich habe eine Ausbildung gemacht beim Internet-Provider.
Danach war ich da noch ein Jahr.
Allerdings, ich war ja, also der Provider kam nicht aus Frankfurt, aber ich war ein Frankfurter Standort.
Und wir haben uns dort für eine Bank um das Rechenzentrum gekümmert und um die Linux-Server von denen, um den Betrieb von der ganzen Geschichte.
Wir waren da quasi hinverkauft, wenn du es so willst.
Und irgendwann, und da habe ich ja schon ein Video zu gemacht, deswegen, das muss ich nicht.
Da gab es jetzt ja, gibt es da ein Video von?
Ja, wenn der Chef dich verarscht, da habe ich ja ein Video zu gemacht, was da alles gelaufen ist, auf der, damals nach der Ausbildung.
Zumindest, ich habe da noch ein Jahr oder zwei, ich weiß es jetzt aus dem Kopf nicht mehr so genau.
Ich habe doch meinen Lebenslauf hier irgendwo, Sekunde, warte mal.
Office, nee, Lebenslauf, LibreOffice, lass mich gerade mal in meinen Lebenslauf gucken, da kann ich es dir sagen.
Also, ich kann...
Ah, doch, hier.
Siehst du, ich habe es geschickt gemacht, ich fange von oben nach unten an.
Also, Ausbildung beim Provider, als FISI.
Danach, eineinhalb Jahre ungefähr, habe ich dort noch gearbeitet.
Hast du nicht die Notepad-Skill-Liste als Bewerbung geschickt?
Doch, die habe ich dabei, habe ich dabei geschickt.
So, und danach hatte ich Glück, die Bank, wo wir damals uns um das Rechenzentrum gekümmert haben und um die Linux-Server.
Und die haben gesagt, sie wollen ein bisschen unabhängiger von Dienstleistern werden.
Habt ihr nicht Bock, zu uns zu kommen?
Und da war ich natürlich sofort dabei und habe gesagt, ja, easy, wo muss ich unterschreiben?
Weil es hieß damals, besserer Laden und mehr Kohle auf einen Schlag.
Ja, easy, mache ich sofort.
Zumal mir, wie gesagt, wen es genau interessiert, kann sich das Video angucken, was ich gerade gezeigt habe,
der Provider extrem auf den Sack ging.
Da hatte ich überhaupt keinen Bock mehr drauf.
Da bin ich dann dahin gewechselt und, also ich war da von Anfang an quasi auch im Linux-Team.
Ich habe aber privat auch schon immer gerne Sachen gebastelt und entwickelt und programmiert und Microcontroller-Zeug und alles mögliche.
Von Command-Line-Tools, ich habe Windows-Desktop-Anwendungen, Web-Anwendungen, also was wir hier im Stream auch machen.
Wir haben ja hier im Stream gefühlt alles schon mal irgendwie gemacht, ja.
Mich interessiert da auch vieles.
So, und dann haben wir irgendwann angefangen mit,
Server-Automatisierung war es damals.
Falls noch jemand Puppet kennt, kennt jemand Puppet?
Kennt das noch jemand?
Verwendet heute kaum noch jemand.
Außer die Leute, die Legacy-Sachen noch supporten müssen.
Zum Verteilen von Updates, nee, ist es nicht.
Puppet ist eine Config-Management-Software.
Dort stellst du zum Beispiel ein,
da stellst du zum Beispiel ein,
ich will auf einem Linux-System
ein Ordner haben,
var lib blub
und der soll 7.7.5 als Rechte haben.
So, und das ist kein Jamel, glaube ich, oder?
Das ist, glaube ich, so ein komisches, komischer Dialekt.
Das ist quasi der Vorgänger von Ansible.
Nicht wirklich der Vorgänger von Ansible,
weil es hat mit Ansible nichts zu tun.
Aber es ist auf Ruby-Basis.
Aber es ist die gleiche,
die gleiche Richtung an Software, ja.
Ja, genau so sieht es dann aus.
Ja, guck, du willst einen Pfeil anlegen,
ntp-conf, unter diesem Pfad,
Content soll hierher kommen,
Owner das und so.
Also es ist ein bisschen wie Ansible,
nur halt nicht Ansible.
Hat übrigens ein paar coole Sachen,
die Ansible nicht hat,
aber dafür ist Ansible insgesamt viel angenehmer zu benutzen, ja.
Zum Beispiel hat Puppet einen ordentlichen No-Op-Mode,
wo man sieht, was er machen würde.
Er ist zwar auch nicht ganz perfekt,
weil manche Sachen siehst du erst,
wenn er es wirklich machen würde,
aber das ist ganz cool.
Wo liegt der Vorteil gegenüber einem Bash-Skript?
Ja, im Bash-Skript musst du alles ja auch komplett selbst machen,
wenn du ein bisschen mehr brauchst,
als einfach nur Datei anlegen.
Natürlich, unter der Haube
könntest du auch ein Bash-Skript machen
und sagen, hier Touch oder mkdir Touch
und dann chmod oder sowas, ja.
Kannst du auch machen.
Aber spätestens,
wenn du Abhängigkeiten untereinander hast,
wenn es parallel vielleicht sogar aussieht,
dass es ausgeführt werden kann,
dass es schneller geht,
weil du viele Sachen konfigurieren musst,
wenn du was Komplizierteres machen möchtest,
als nur Dateien anlegen, ja,
zum Beispiel in ssh-config irgendwelche Options ausschalten,
dann artet das mit Bash-Skripts aus.
Mein Bash-Skript ist das,
wie du es früher gemacht hast,
zumal auch die ganze Sache drumherum, ja,
das Ausrollen zentral mit Bash-Skripten viel komplizierter ist.
Aber in kleineren,
also man muss die Sache ja nicht verkomplizieren.
Wenn du nicht viele Systeme hast,
wenn es nicht so sonderlich kompliziert ist,
was du drauf machen willst,
kannst du einfach ein Bash-Skript basteln.
Also man muss nicht,
ich bin immer dafür,
das pragmatisch zu handhaben.
Sensible und Puppet, das macht Sinn,
ab einer gewissen Größe,
vor allem ab einer gewissen Systemanzahl.
Ansonsten,
mal ein Bash-Skript,
wenn es was Kleines ist, ja.
Mach ein Bash-Skript,
was nach Cloud-Init läuft, fertig.
So, und worauf habe ich jetzt eigentlich geantwortet?
Random, irgendwas mit Random kam da.
Genau.
So, und damit haben wir damals angefangen,
Server-Automatisierung.
Und irgendwie,
wir haben angefangen mit SVN,
das war noch in einem SVN drinnen.
Und irgendwie,
habe ich mal ein Video geguckt,
wo es um Software-Verwaltung
und Versionsverwaltung mit Git ging.
Das war damals noch ganz neu.
2011, 2012 oder so.
Und dann habe ich mich wirklich monatelang
mit Source-Code-Verwaltung auseinandergesetzt
und mit Git-Workflows
und wie man am besten was brancht
und wie macht das der Linux-Kernel eigentlich.
Und dann habe ich angefangen,
unsere Server-Automatisierung.
Wir hatten damals tatsächlich noch Git-Hooks, ja.
Ich habe einen Git-Hook programmiert,
der beim Pushen gecheckt hat,
ob die Leute Syntax-Fehler in ihren Puppet-Files haben und sowas.
Da habe ich mit angefangen.
Das war quasi schon DevOps zu Zeiten,
wo es kein Wort dafür gab.
So, und
nachdem ich das ja quasi in der Firma mit erfunden habe,
diesen ganzen Workflow und alles,
als es dann irgendwann mal darum ging,
als man festgestellt hat,
das ist ja durchaus sinnvoll,
dass man sich darum kümmert,
und das ist auch ein guter Ansatz.
Quasi DevOps-Pionier, ja, wenn du so willst.
Das ist ein guter Ansatz.
Dann habe ich das auch als hauptsächliche Aufgabe gekriegt.
Und da habe ich mich auch jahrelang darum gekümmert.
Quasi automatisches Ausrollen von Config-Updates.
Teilweise kamen da sogar noch Versions-Updates
für Software mit dabei,
die da mit ausgerollt wurde.
Und wir hatten zwischenzeitlich,
zwischenzeitlich war ich federführend verantwortlich
für knapp 4000 Linux-Systeme,
dass die einmal im Monat
die neuesten Updates und Config-Sachen bekommen.
Und ich will nicht sagen,
dass immer alles perfekt gelaufen ist,
aber wir hatten nie große Ausfälle dadurch.
Wurde Papa dann auch für Container-Deployments benutzt?
Nee.
Nee.
Also wir hatten nie größere Ausfälle dadurch.
Es gab dann sicherlich immer mal die ein oder anderen Probleme.
So, und das Ganze ist dann so gewachsen.
Und am Ende sah das,
also ich habe das dann auch immer weiter ausgebaut,
am Ende sah das so aus,
dass wir tatsächlich das ähnlich hatten zu dem,
was da Kevin gerade im Video gezeigt hat.
Wir hatten übrigens ein GitLab ganz am Anfang,
als es noch neu war,
habe ich ein GitLab installiert.
Dann zwischenzeitlich hatten wir Bitbucket,
weil die Firma sagte,
Atlassian muss,
wir wollen alles von Atlassian haben.
Und mittlerweile sind sie bei GitHub gelandet.
Naja, zumindest lief das so,
dass wir dann auch so,
dass wir hatten ein Team,
das Linux-Team war relativ groß,
da waren glaube ich 17 Leute am Ende,
für alle möglichen Anwendungen,
verschiedene spezifische Sachen,
wo sich die Leute ausgekannt haben.
Lief das dann so drauf raus,
dass wir auch so einen Merge-Request-Workflow hatten.
Also sprich, mal angenommen,
die Leute, die sich um die Loadbalancer gekümmert haben,
mussten irgendwas an,
die hatten da zum größten Teil HA-Proxy am Start,
mussten irgendwas an der HA-Proxy-Config ändern.
Und das sollte natürlich dann möglichst automatisiert
auf alle, frag mich nicht,
30 Loadbalancer-Kisten ausgerollt werden.
Das lief dann so.
Die haben das bei sich gemacht,
die haben sich einen Branch aufgemacht.
Ich habe da sogar so einem Guide geschrieben damals zu,
wie das aussehen soll.
Und das hat sich tatsächlich,
also wenn man sich das mal überlegt,
dass wir damit angefangen haben,
bevor das großartig etabliert war,
kam da was relativ Gutes bei raus,
was auch heute eigentlich mehr oder weniger viele machen.
Also zum Beispiel war es so,
wenn mal angenommen,
Leute, die für HA-Proxy zuständig waren,
wollten was in ihrer Config ändern,
die haben sich einen eigenen Branch ausgecheckt.
Vorgabe von mir war,
Branch soll heißen,
Kürzel slash Feature-Name.
Das hieß dann zum Beispiel, was weiß ich,
ABC, wenn das da ein Namenskürzel ist,
ABC slash neues Feature.
Da haben die sich ausgecheckt,
haben die Sachen entwickelt für ihren HA-Proxy,
für ihre Loadbalancer,
haben das in der Bastelumgebung getestet,
konnte es ja einfach die Server umstellen
auf den neuen Branch,
haben das ausgeführt, haben festgestellt,
okay, Puppetechnisch, Automatisierungstechnisch
macht das alles.
Dann sind die ins,
was auch immer zum damaligen Zeitpunkt aktuell war,
ich sag mal GitLab, reingegangen,
haben ein Pull-Request aufgemacht,
beziehungsweise Merch-Request aufgemacht.
Dort musste dann drinnen stehen,
eine Ticketnummer vorne, Feature-Name
und wie kritisch sie das Ganze einschätzen.
Das war für mich immer recht wichtig zu wissen.
Sobald es nämlich Service-Unterbrechungen gab,
bei irgendeinem Change oder bei irgendwelchen Änderungen,
musste man das im Vorfeld ankündigen.
Deswegen war immer gut, wenn die Leute von sich aus
schon mal eine Einschätzung geschrieben haben,
ey, da wird was Neues gestartet oder nicht.
Kurze Beschreibung rein, fertig, Abflug.
Dann habe ich nochmal einen Blick reingeworfen,
wie das Ganze aussieht.
Ich hatte zwar von den meisten Sachen
servertechnisch wenig Ahnung,
aber es gab so die üblichen Verdächtigen,
was die Leute oftmals vergessen haben.
Von Domains, die falsch waren,
von Servernamen, wo was vertauscht war,
von Schreibfehler.
Ich habe da tatsächlich relativ oft was gefunden,
was noch nicht gepasst hat.
Dann ging das halt nochmal zurück,
die haben das gefixt, wieder gepusht,
dann wurde das Ganze gemerged
und einmal im Monat gab es dann halt quasi einen Tag drauf
und das kam dann zuerst nochmal zentral ausgerollt
in die Testing-Umgebung, dann in die nächste,
dann in die Abnahme-Umgebung, dann irgendwann live.
Und da habe ich mich bis zum Schluss drum gekümmert
und da bin ich quasi mehr oder weniger so reingewachsen
in diese Rolle.
Und als es mir dann zu sehr auf den Keks ging,
in der Bank, wo ich gearbeitet habe,
mein letzter Arbeitgeber,
habe ich eine Liste erstellt,
drei Seiten mit Skills,
einen ordentlichen Lebenslauf zusammengebastelt
und mich umgeguckt.
Und jetzt bin ich in dem neuen Laden gelandet.
Natürlich nicht ganz einfach random so,
sondern ich hatte Glück,
dass mich jemand, den ich noch von früher kannte,
unter anderem da von diesem Arbeitgeber,
wo ich vorher gearbeitet habe,
hat gesagt, Max, du, ich habe gehört,
du suchst einen neuen Job, willst du nicht zu uns?
Und dann ging das Ganze recht schnell.
Ich habe dem schon mal unter der Hand
meinen Lebenslauf und die Skill-Liste geschickt.
Die hat er seinem Chef weitergeleitet.
Sein Chef hat mich angerufen,
noch bevor offizielle Bewerbung raus war.
Ja, da war ich gerade beim Bauhaus Weihnachtsbaum kaufen,
weiß ich noch, hat er mich angerufen.
Und ja, das ging schnell,
weil die Kündigung musste ja bis Ende des Jahres raus,
letztes Jahr, äh, nicht letztes Jahr,
vorletztes, vorletztes Jahr.
Ja, und dann bin ich da gelandet, wo ich jetzt gelandet bin.
So, das war jetzt die mittellange Kurzfassung.
Die Recruiting-Prämie geteilt, nee, haben wir nicht.
Er hat die Recruiting-Prämie für mich bekommen
und ich habe die Recruiting-Prämie
für meinen anderen Kollegen bekommen,
weil ich habe ja noch einen mitgebracht.
Das ist ja gerade das Witzige dabei.
Ich habe die Bewerbungsunterlage von meinem Kollege mitgenommen
und habe gesagt, nachdem mein Vorstellungsgespräch fertig war,
habe ich gemeint, ich habe gesehen,
ihr sucht noch einen zweiten Linux-Kenner.
Ich kenne da noch jemand.
Habe ich ihm die Bewerbung in die Hand gedrückt
und zwei Tage später hatte der auch einen Anruf
und konnte dann auch da anfangen.
Und das war auch der Nagel in den Sarg für die alte Firma,
weil wir hatten dann im Endeffekt eine gute,
also einen neuen Arbeitgeber mit guter Homeoffice-Regelung,
ähnlich guter Anbindung, wie gesagt,
ist 800 Meter Luftlinie vom alten Laden weg,
das ist der neue, genauso gute Anbindung,
gute Homeoffice-Regel, ordentliche Kohle,
insgesamt einen deutlich besseren Eindruck gemacht
und mein Kollege konnte sogar noch mitkommen.
Also das war wirklich so der letzte Nagel in den Sarg für die Bank.
Und ja, dann sind wir 1.4. zur Versicherung gewechselt letztes Jahr.
So sieht das aus.
Hat dir das was gebracht, was ich dir erzählt habe jetzt, Nixie Larner?
Gibt es bei euch dann auch Git-Schulungen, als das neu war?
Ich habe, ich habe, beim alten Laden habe ich ein paar Git-Schulungen gemacht, ja,
als das neu war.
Was war eigentlich deine ursprüngliche Stellenbezeichnung,
als du bei der Bank angefangen hast?
Weiß ich gar nicht, wahrscheinlich Linux-Server-Admin oder so, glaube ich.
Ich kann mal gucken.
Ich habe irgendwo mein Zeugnis noch.
Von damals, warte mal.
Äh, Zeugnis?
Nee, keine Ahnung, finde ich jetzt gerade auf dem zweiten Rechner nicht.
Ich glaube Linux-Server-Admin oder sowas.
Muss das, muss das gewesen sein.
Ja.
Später war ich offiziell Senior Defaults Engineer.
Ich meine, passt so, ich habe damit zu einer Zeit angefangen,
wo es das Wort noch nicht gab.
Und jetzt bin ich Senior Linux-Engineer.
Letztendlich ist mir der Name aber vollkommen wurscht.
Wichtig ist das, was gemacht wird.
Auf den Namen, also auf Job-Bezeichnung kannst du eh nichts geben.
Ich wäre eher für Fifehead-Engineer, aber das checkt dort wieder keiner.
So.
So sieht's aus.
Jetzt Pepo Fett und danach Stellenanzeigen.
Ich glaube, es ist echt Pepo Fett-Time, ja.
Es ist 13 Uhr.
Wartet mal.
Ich check mal was.
Wartet mal, lasst mich mal kurz was gucken.
Ich bin nämlich unschlüssig, ob ich nachher noch eine Runde Fahrrad fahren soll oder nicht.
Das Wetter ist okay, aber jetzt nicht so geil, wie es angekündigt war.
Also vielleicht machen wir nachher wirklich Stellenanzeigen.
Ja, danke.
Ich habe nicht die Programmierskills, die du hast.
Die hatte ich auch nicht von Anfang an.
Hat niemand.
Mache natürlich Bash und so Skripte hier für Datenverarbeitung.
Aber ich glaube, da muss ich noch reinhängen.
Das habe ich auch.
Wir arbeiten viel mit Linux.
Da würde ich auch gerne wieder hin.
Ja, sehr gute Entscheidung.
Linux ist auch gefragt.
Potenziell würde ich tatsächlich sagen, das ist aber wirklich sehr subjektiv.
Ich kann das nicht mit Statistiken untermauern.
Potenziell würde ich sagen, verdienst du als Linux-Admin mehr als als Windows-Admin.
Nur bezahlen die hier nicht so gut wie bei euch.
Ja, gut.
Frankfurt Finanzbranche.
Ich habe doch letztens erst die Statistik gelesen.
Top-Top-Branchen in Deutschland ist, glaube ich, Banken auf der 1, Versicherungen auf der 2.
Pharma-Industrie auf der 3 und Autos auf der 4 oder Autos auf 3 und Pharma-Industrie auf 4.
Irgendwie so.
Also Banken und Versicherungen sind Top-Top-Top 2.
Da ist, ja, ist halt so.
Manchmal hat es auch seinen Vorteil, wenn man in Frankfurt oder Frankfurt und Umgebung wohnt.
Das ist auf jeden Fall nicht verkehrt.
Liest sich immer gut.
Aber wir haben so 200 Server.
Je nachdem, wie viele Leute ihr seid und was da drauf.
Ich kann das trotzdem antragen.
Also, wenn du dich in Richtung DevOps-Bereich weiterentwickeln willst,
es ist jetzt nicht zwingend erforderlich, dass du der super krasse Programmierstelzer bist oder so.
Aber du musst dich natürlich schon mit ein paar Sachen beschäftigen, die oft in den Bereich fallen.
Ja, zum Beispiel Automatisierungen aller Art.
Sei es jetzt auf Betriebssystem-Ebene Automatisierung, aber auch Build-Pipelines,
Infrastruktur-Automatisierung für irgendwelche Cloud-Setups.
Und...
Du musst...
Also, wenn du in dem Bereich...
Die üblichen Tools, ja.
Guck dir mal Ansible an.
Guck dir Terraform an.
Guck dir einen der großen drei Cloud-Anbieter ein bisschen im Detail an.
Es ist jetzt eigentlich fast egal, ob das Azure, Google oder Amazon ist.
Und ansonsten, es schadet auf jeden Fall nicht, noch eine Programmiersprache sich ein bisschen tiefer anzugucken.
Im Cloud- und DevOps-Umfeld generell ist Go sehr beliebt,
weil viele der Tools dort, was Cloud angeht, in Go selbst programmiert sind.
Go ist auch eine gute Einsteiger-Programmiersprache.
Aber wenn du unter Linux unterwegs bist, ist es eigentlich fast egal.
Da kannst du alles verwenden.
Du kannst Csharp.net machen, du kannst Go machen, du kannst Java machen, du kannst Python machen, Ruby oder was auch immer.
Aber sich ein bisschen damit zu beschäftigen und ein paar kleine so Bastelprojekte zu haben, ist nicht verkehrt.
Es hilft einem. Oder meinetwegen auch Perl.
Wobei, man muss ein bisschen schisslich veranlagt sein.
Okay, da hat einer aufgepasst im Stream. Das heißt nicht Cloud-Anbieter, das heißt Hyperscaler. Korrekt.
Also Go wäre auch nicht verkehrt. Ja, tatsächlich.
Also eine Programmiersprache gut können, ist immer von Vorteil.
Unabhängig davon, in welchem Bereich du unterwegs bist. Ich bin der Meinung, es bringt immer was.
Es hat auch einen Vorteil.
Und ganz ehrlich, wisst ihr, was auch ein weiterer Vorteil ist?
Es gibt doch schon seit jeher immer so ein bisschen so Gezanke zwischen der Admin-Seite und der Entwickler-Seite.
Das ist normal.
Die Entwickler erzählen dir dann irgendwie so nach dem Motto, so schwierig kann es doch nicht sein.
Und die Admins erzählen dir dann irgendwie, ah, wer hat denn den Mist wieder programmiert?
Das ist ja eigentlich schon Standard.
Warum machst du schisslich bei Perl?
Weil Perl outdated, overrated, debated ist.
Und wenn du selbst allerdings halbwegs brauchbar programmieren kannst, dann merken Entwickler das relativ schnell.
Und reden mit dir normal.
Und wenn du dann mit denen auch normal redest, auch als Admin, dann versteht man sich und die Intergroup-Communication klappt deutlich besser.
Also die Erfahrung habe ich schon gemacht, ja. Ich arbeite relativ viel mit einem ehemaligen Java-Entwickler zusammen, jetzt in dem aktuellen Projekt, wo ich bin.
Und wir haben uns schon öfters über irgendwelche Entwicklungen unterhalten, was Programmieren mäßig angeht.
Ich habe ihn nach irgendwelchen Garbage-Collector-Runs gefragt und sowas.
Und das funzt einfach.
Manchmal besser, wenn man ein bisschen Ahnung vom Programmieren hat.
Das ist so, das ist so, ja.
Deswegen, ich versuche ja auch immer so ein bisschen dafür Werbung zu machen, dass es für alle Seiten gut ist, wenn sie ein bisschen über den Tellerrand rausgucken.
Entwickler, die nur stumpf ihre Idee kennen und nichts wissen,
die die Idee kennen und nichts drumherum, sind halt total schnell aufgeschmissen.
Zum Beispiel so nach dem Motto, ey, ich will das jetzt nicht auf meiner lokalen Admin-Kiste testen.
Ich will das jetzt im Kubernetes-Cluster testen und mal gucken, ob das funktioniert.
Wie tunnel ich mich da in die Dings? Wie melde ich mich da an? Wie mache ich ein Deployment-Yaml?
Die wollen das oftmals auch gar nicht machen, weil die sagen, das ist ja kein Entwickler-Job.
Und umgedreht hast du dann irgendwelche Admins, die sich darüber aufregen, warum das so kacke Entwickler sind.
Warum das so entwickelt wurde, dass es sich nicht gescheit vercontainerisieren lässt und sowas.
Ist halt Blödsinn. Am besten ist, wenn beide von beidem Ahnung haben.
Natürlich ein gewisser Schwerpunkt. Ihr wisst, ich programmiere viel. Wir haben im Stream auch schon viele Sachen programmiert.
Ich bin aber kein professioneller Software-Entwickler, der damit sein Geld verdient.
Aber ich kenne mich gut genug aus, dass ich da die Pain-Points halbwegs nachvollziehen kann bei den meisten Sachen.
Und das führt dazu.
Und jetzt habe ich den Eindruck, dass gerade auch unsere Architekten und Entwickler geneigter sind, sich dann auch um die andere Seite Gedanken zu machen.
Bist du Admin hauptberuflich? Ja, wenn du so willst schon. Ich bin Senior Linux-Engineer. Nein, ich bin kein Admin.
Im Prinzip ist es aber sowas. Ja, klar.
Die ganzen DevOps-Leute sind Admins oder waren mal Entwickler zum Admin mutiert.
Man nennt sich heute nur DevOps-Engineer, weil es einfach cooler klingt als Admin.
A real talk, Freunde.
Ja, die Aufgaben sind schon ein bisschen übergreifender als in der klassischen Admin-Rolle.
Aber ich habe es schon oft gesagt, die Job-Bezeichnung macht... Es ist eigentlich wurscht, was da draufsteht.
Es ist cool, wenn du gewisse Level hast. Wenn da Senior davorsteht, das macht sich im Lebenslauf gut.
Aber ob du Admin bist, DevOps-Engineer bist, Linux-Engineer bist, was auch immer.
Letztendlich ist wichtig, was du machst am Ende. Wo du landest und was du da machst.
Nicht so sehr, was auf deinem Titel draufsteht oder auf deinem Job draufsteht.
Also ganz ehrlich, aus dem DevOps-Bereich sind mir deutlich mehr Admin-Leute bekannt als Entwickler, die sich dahin orientiert haben.
Das wächst immer mehr zusammen.
Das sage ich ja auch, wenn es um Ausbildungsdiskussionen geht, dass es immer mehr Überschneidungen gibt.
Nehmen wir mal wirklich etwas ganz aktuelles.
Mal angenommen, ihr wollt irgendeinen Service entwickeln und den lasst ihr bei irgendeinem Cloud-Anbieter als Cloud-Function laufen.
Wo hört dort das Entwickeln auf und wo fängt das Administrieren an?
Könnt ihr da irgendeine klare Linie ziehen? Also ich nicht.
Ist das Deployment für Cloud-Functions eher noch was für den Entwickler? Ist das schon eher was für den Admin?
Ist das Ganze vielleicht generell eine reine Entwickler-Sache?
Weil es ist ja so easy, du kannst quasi programmieren, deployen, ausführen.
Wer kümmert sich aber darum, um zu gucken, was das Ganze kostet? Wer kümmert sich darum, um zu gucken, wie sind die Response-Zeiten? Wer überwacht das Ganze?
Es ist gerade im Cloud-Umfeld super schwammig, wo das anfängt.
Deswegen würde ich sagen, macht es eigentlich gar nicht mehr so viel Sinn.
Die Finanzabteilung macht...
Die Finanzabteilung macht Kostenauswertung von irgendwelchen Cloud-Infrastrukturen.
Mit was machen die das? Mit Excel oder wie?
Excel mit AWS Connect oder...
Ne, so habe ich das nicht gemeint.
Was ich gesagt habe ist, viele Leute, die ursprünglich aus klassischen Admin-Jobs kommen, sind heute eher in dem Bereich unterwegs.
Also ich kenne im DevOps-Bereich mehr ehemalige Admins als ehemalige Entwickler.
Ja, da kann man sich auch drüber streiten.
Also Deployment ist für mich das Schieben der fertigen Software auf das System, auf dem es läuft.
Das ist für mich Deployment.
Es kann durchaus sein, dass das angestoßen wird durch den Git-Push in den richtigen Branch.
Aber im Hintergrund passiert ja noch was. Durch ein pures Git-Push kommt ja nicht ein Software-Update auf den Server.
Da müssen ja noch irgendwelche Pipelines, irgendwelche automatisierten Prozesse oder auch manuelle Prozesse laufen, dass sie darauf rauskommen.
Und das Ding ist halt, bei irgendeiner Cloud-Function, da ist das halt schwer zu sagen, wo das anfängt und wo das aufhört.
Deswegen ist es gut, wenn beide Seiten von allem ein bisschen Ahnung haben.
Ja, genau.
Was hältst du von nicht-technischem Beruf in der Info?
Noch keine Gedanken zugemacht.
Und ich finde es halt auch irgendwie wichtig, weil ich es schon oft erlebt habe, dass man nicht immer denkt, die anderen sind blöd und seine Sache ist das Beste.
Ich meine, diese Auseinandersetzung zwischen Entwicklung und den Leuten, die es dann im Endeffekt betreiben müssen, die ist ja so alt, wie es das gibt.
Ich finde das bescheuert.
Man selbst hat oftmals gar nicht so sehr die Ahnung, was es eigentlich alles für Probleme drumherum gibt.
Ja, beim Programmieren, beim Entwickeln, beim Entwerfen der Software, weil man das halt einfach nicht kennt.
Man sieht halt oftmals nur das fertige Produkt.
Und Entwickler haben halt oftmals nicht so den Einblick darauf, okay, wie kompliziert ist es wirklich, den Kram 24-7 High Available zu betreiben.
Deswegen rutscht dann halt ein Entwickler oftmals raus, so nach dem Motto, ey, warum habe ich kein Login in die Live-Umgebung oder warum geht das nicht?
Und du als Admin sagst dann mal relativ schnell so nach dem Motto, Alter, warum ist das schon wieder verbuggt?
Das kann ich auch.
Da muss man sich ein bisschen entspannen und erstmal davon ausgehen, dass die anderen schon so halbwegs wissen, was sie so treiben.
Und wenn man dann noch ein bisschen Ahnung hat von dem, was da jeweils andere machen, dann kommt man auch gut miteinander aus.
Ich finde, das ist eh die Zukunft.
Ganz ehrlich, reiner Entwickler, der nur seine Idee kennt, nichts drumherum, ist outdated.
Ein klassischer Keller-Admin, der alles Kacke findet, ablehnt und was nicht seit 30 Jahren etabliert ist, ist bloated.
Müll ist auch outdated.
Leute, die in beide Richtungen, oder nicht nur in beide, in alle Richtungen, ein bisschen über den Tellerrand rausgucken, sich für mehrere Sachen interessieren,
zwar nach wie vor ihren Schwerpunkt haben, das ist das, was du heute brauchst.
Machen wir euch das Deployment.
Das Deployment, die Entwickler selber, oder wie ist das bei euch aufgeteilt?
Also, das kommt ein bisschen nach Projekt und ein bisschen nach Infrastruktur an.
Ich rede jetzt mal nur von dem Projekt, in dem ich bin, wo die ganzen Sachen hauptsächlich in der Cloud laufen.
Die Entwickler entwickeln auf irgendeiner eigenen Kiste, wo sie Admin-Rechte drauf haben und basteln können, was das Zeug hält.
Da können sie auch lokal, ja, kann man das Deployment nennen, lokal den Kram hinschieben.
Ausprobieren, machen, was sie wollen.
Dann können sie die Sachen relativ unproblematisch mit einem GitLab CI-Job in die Entwicklungsumgebung in der Cloud schieben und dort ihre Sachen ausprobieren.
Da müssen sie allerdings sich ein bisschen mit der Infrastruktur auseinandersetzen, weil du dazu erstmal dich gegen die Cloud authentifizieren musst und auch ein paar Tunnel zum Weiterleiten brauchst, dass du da drauf kommst.
Da habe ich beispielsweise die letzten Wochen viel mit einem unserer Entwickler rumgebastelt, wie er aus IntelliJ den Debugger an einen laufenden Container im Kubernetes-Cluster attachen kann.
Abenteuerliche SSH-Tunnel-Aktion, ich kann euch sagen, bis das funktioniert hat.
Das geht dann relativ easy, das können die selbst machen.
Und alles weitere können die Entwickler nicht mehr.
Also die Entwickler können nicht in die Tests und in die Live-Umgebung irgendwas hinschieben.
Ja, sehe ich auch so.
Entwickler, Entwicklerkisten ohne Adminrechte sind scheiße.
Da kriegst du bei allem irgendwelche Zustände.
Wir hatten mal was, da wollte sich ein Entwickler die Google Cloud Tools installieren und dann konnte er das nicht.
Das war noch die alte, das war noch irgendwie so eine nicht privilegierte Kiste.
Und da wollte sich die Google Cloud Tools installieren und da ging das nicht.
Und das ging auf mehrere Ebenen nicht.
Es war so, es war, also, damit der Google Cloud Tools auf diesem Rechner installieren konnte, musstest du, wartet mal kurz.
So, damit du die Google Cloud Tools installieren konntest auf der Kiste, musstest du den Installer patchen.
Der Installer läuft nämlich über den integrierten Python Runtime, der Google Cloud Tool Installer.
Der nicht unserem Man in the Middle Zertifikat vertraut hat.
Weil diese Kiste dürfte nur über irgendeinen Man in the Middle SSH, HTTPS, nicht SSH, HTTPS Proxy raus ins Internet.
Da musstest du quasi die Installer Runtime von dem Python, vom Installer patchen, dass er das installieren konnte.
Super abenteuerlicher Geschiss.
Aber glücklicherweise haben die Entwickler mittlerweile Admin, Entwickler, Entwicklerkisten.
Weil alles andere kannst du komplett vergessen.
Es ist nicht.
Es ist einfach, und ich hoffe, das haben sie jetzt auch soweit gecheckt.
Es ist einfach unsinnig, nicht richtig möglich, ordentlich zu entwickeln und auch mal ein paar Sachen auszuprobieren auf einer Nicht-Admin-Kiste.
Dass die Admin-Kiste keinen Zugriff auf die produktive Umgebung braucht, ist was anderes.
Aber die sollte ordentlichen Internetzugang haben und vielleicht über Proxy, meinetwegen, aber dann ordentlich eingerichtet.
Internetzugriff haben und die Leute sollten dort Möglichkeiten haben, was zu installieren.
Alles andere ist einfach nur Arbeitsverweidungsmaßnahmen Deluxe.
So, Leute.
Ich geh jetzt was futtern.
Wahrscheinlich, weil das Wetter ist gar nicht so nice gerade.
Höchstwahrscheinlich, weil man später eine Runde Stellenanzeigen stellt.
Pepo-Fat-Time.
Bis denn.
Hapa, hapa.
Ich geh jetzt was essen.
See you.
