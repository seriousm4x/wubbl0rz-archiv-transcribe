WEBVTT

00:01.520 --> 00:04.140
So, jetzt schauen wir mal, ob wir jetzt Quality Options haben.

00:13.960 --> 00:14.880
Haben wir jetzt Quality Options?

00:24.330 --> 00:28.410
Tja Leute, dann streben wohl zu viele Leute und ich kriege sie gerade auf Twitch nicht.

00:33.680 --> 00:38.840
Da kann ich leider jetzt nichts machen, außer ich werde Twitch Partner endlich mal irgendwann.

00:39.560 --> 00:41.320
Dann kriege ich auch immer Quality Options.

00:48.900 --> 00:56.120
Aber solange ich keinen Twitch Partner bringe, bin ich halt quasi streben so dritter Klasse, was Quality Options angeht.

00:56.560 --> 01:07.930
Ich pause nochmal kurz auf Twitch.

01:07.930 --> 01:15.430
Und, ey Leute, ich sage euch, ich habe quasi gestern den ganzen Tag rumprobiert, hier den Gift Player zum Laufen zu kriegen.

01:16.310 --> 01:24.450
Also nicht den da, sondern den Highspeed, DirectX, FFM Pack, sonst was Gift Player.

01:24.450 --> 01:30.610
Und was unglaublich schwierig war, also das Gegenteil von, warum geht Easy nicht?

01:34.380 --> 01:36.500
Ah, das Fenster noch kleines.

01:38.950 --> 01:39.270
Easy.

01:40.410 --> 01:41.730
Also das Gegenteil von Easy.

01:41.770 --> 01:44.750
Das ist, ey, Windows.

01:44.910 --> 01:49.030
Es ist so undurchsichtiger Kack, ey, teilweise.

01:49.650 --> 01:54.370
Ich weiß gar nicht, wie man dafür überhaupt irgendwas Ernstzunehmendes entwickeln kann manchmal.

02:15.450 --> 02:16.790
So, auf Twitch gepostet.

02:17.270 --> 02:17.890
Ey, auf Twitter.

02:18.090 --> 02:20.070
Ich bin schon komplett, komm, wir im Kopf, äh.

02:26.070 --> 02:30.790
So, machen wir mal hier unsere Chill-Steps, Chill-Steps-Sore-Geschichte an.

02:35.340 --> 02:35.460
So.

02:36.500 --> 02:37.780
Mal gucken, wie die Lautstärke ist.

02:39.780 --> 02:40.140
Ja.

02:40.540 --> 02:47.460
Joa.

02:47.460 --> 02:48.160
Joa.

02:51.860 --> 02:52.700
Machen wir den an.

02:53.080 --> 02:53.640
Ach, das ist der.

02:54.660 --> 02:55.860
Oh, und ein anderes Icon.

02:56.220 --> 02:56.640
Icon.

02:56.820 --> 02:57.800
Ey, ich meine Thumbnail.

02:58.060 --> 03:01.080
Leute, das Windows-Zeug hat mich so kaputt gemacht im Kopf.

03:01.180 --> 03:02.720
Ey, ich kann überhaupt keine Wörter mehr aussprechen.

03:03.980 --> 03:07.180
Ich bin wirklich komplett, komplett hinüber, was das angeht.

03:14.820 --> 03:18.440
Also, ich hab hier das, das, das, das ekligste überhaupt produziert, ne.

03:18.880 --> 03:22.340
Also, man kann das, man kann das nicht mal mal lesen, was ich hier gebastelt hab letztendlich.

03:22.400 --> 03:23.480
Das müssen wir jetzt aufräumen.

03:23.660 --> 03:25.480
Ich hab hier quasi 365 Zeilen.

03:26.380 --> 03:29.540
Irgend, irgendeinen Schritt zusammen gebastelt, dass es schnell ist.

03:30.060 --> 03:30.680
Was ein Akt.

03:30.740 --> 03:33.120
Ich zeige euch das jetzt gleich mal, was da alles dahinter steckt.

03:33.220 --> 03:34.700
Ey, das ist, es ist der Wahnsinn.

03:35.220 --> 03:39.760
Und es macht aktuell nicht mehr, außer ne noch nicht animierten Papagei-Anzeigen.

03:43.150 --> 03:47.590
Mit 6000, na gut, das ist, weil OBS im Hintergrund jetzt auch noch ein bisschen CPU braucht.

03:48.790 --> 03:51.370
Mit 6500 FPS ne nicht animierten Papagei.

03:51.430 --> 03:55.250
Aber, man, man, man, man merke, der Papagei ist transparent.

03:56.450 --> 03:58.630
Was meint ihr, was es für ein Akt war?

03:58.630 --> 04:01.810
Diesen Scheiß transparent zu kriegen, das könnt ihr euch gar nicht vorstellen.

04:03.450 --> 04:08.090
Das ist wirklich, also, was sie sich bei Microsoft dabei gedacht haben.

04:08.550 --> 04:10.470
Es ist mir vollkommen schleierhaft.

04:10.830 --> 04:16.350
Und es ist, es ist mir teilweise echt ein Rätsel, wie man, warum man dafür entwickelt.

04:16.510 --> 04:18.650
Ey, das ist, also ich zeige euch das jetzt mal.

04:20.070 --> 04:20.750
Sollen wir gehen in den Chat?

04:22.190 --> 04:23.170
Warte mal, ich glaub meinen.

04:25.170 --> 04:26.810
Ich muss mal kurz meinen Vorschau refreshen.

04:26.810 --> 04:26.890
Okay.

04:28.630 --> 04:30.650
Was ich sehe, ist der König, der Highmax geschrieben hat.

04:30.730 --> 04:34.230
Ich glaube nicht, dass das das letzte war, dass er schon wieder, irgendwie, 6 Minuten her.

04:40.380 --> 04:40.580
So.

04:41.520 --> 04:42.180
Sagt mal was.

04:43.760 --> 04:45.680
Ich weiß, dass es für ein Vorschau-Fenster geht.

04:54.930 --> 04:57.970
So, ah ja, genau, jetzt, jetzt, Chat, jetzt geht der Chat wieder.

04:58.750 --> 05:00.190
The boy next door, ja, genau.

05:02.670 --> 05:04.630
Jetzt am, am Gachi-Bessen.

05:09.290 --> 05:11.090
Okay, also ich zeige euch das mal, ey.

05:11.150 --> 05:13.130
Das, das, das haltet ihr im Kopf nicht aus.

05:13.130 --> 05:15.490
Also, das ist so ungefähr, also man.

05:15.650 --> 05:19.250
Die, eh, wir räumen das jetzt auf, das ist wirklich ganz abartig, ne.

05:19.750 --> 05:23.690
Also, das hier ist so ungefähr, was wir das letzte Mal auch hatten.

05:24.590 --> 05:29.470
Bloß, dass es nicht skaliert war, weil das habe ich jetzt auch mittlerweile eingebaut, dass es, dass es hier schön skaliert.

05:30.170 --> 05:31.970
Und, dass es nicht transparent war.

05:32.370 --> 05:39.210
Und ich sage euch Leute, Transparenz unter Windows, ey, sowas undurchsichtiges ist der Wahnsinn.

05:39.270 --> 05:45.630
Also, ähm, erste Mal, wenn man danach sucht, findet man nichts.

05:45.650 --> 05:54.690
Was man findet ist, sind in irgendwelchen, äh, Cheaterstellungsforen, ist kein Witz, ja.

05:55.890 --> 06:10.350
Also, wenn man hier irgendwie danach sucht, äh, wenn man jetzt hier zum Beispiel sucht, keine Ahnung, ähm, äh, Direct to, äh, Direct to the Transparent Overlay.

06:10.350 --> 06:16.960
Wenn man irgendwie solche Dinger sucht, das erste, was man findet, sind irgendwelche Cheatforen, ja.

06:17.220 --> 06:20.720
Weil das natürlich auch für viele Cheats unerlässlich ist.

06:21.320 --> 06:25.040
Und das Schlimme ist, dass Microsoft dazu nichts Gescheites geschrieben hat.

06:25.420 --> 06:34.580
Es gibt 20 Millionen Optionen, die du setzen kannst, hier beim Erstellen vom Fenster zum Beispiel, wo du nicht genau weißt, was der ganze Kram überhaupt macht.

06:38.820 --> 06:40.180
Es ist, es ist, es ist komplett viel.

06:40.380 --> 06:43.100
Achso, ja, das Ziel heute, das Ziel heute kann ich dir zeigen.

06:43.460 --> 06:47.920
Also, das Ziel generell ist, einen schnellen, einen schnellen GIF-Player zu machen für mein Meme-Tool.

06:47.920 --> 06:49.260
Weil, ich zeig dir das mal.

06:50.580 --> 07:03.660
Du draufklickst, hör mal, hör mal, klicken, klicken, zack, das braucht 2, 3 Sekunden oder vielleicht, naja, so 1, 2 Sekunden hier, bis das geladen ist und angezeigt wird.

07:04.280 --> 07:08.340
Aber kleinere GIFs gehen schneller, aber man merkt, man merkt die Verzögerung.

07:09.200 --> 07:17.380
Bei kleinen GIFs geht, hier, hier hängt es schon wieder, weil ich den jetzt erstmal wieder groß machen muss, so.

07:18.520 --> 07:21.440
Aber hier hängt es, man kann also klicken, so.

07:22.660 --> 07:35.580
Und, was wir machen, äh, Moment, was wollte ich jetzt sagen?

07:36.520 --> 07:43.280
Ja, genau, was wir machen, wir basteln einen eigenen GIF-Player, den, den ich anstatt hier meinem WPF-Fenster verwenden kann.

07:44.980 --> 07:48.840
Alles in RAM-Laden macht er ja, wenn du hier nämlich im Hintergrund guckst.

07:49.500 --> 07:57.860
Das Ding braucht, sobald du einen GIF aufmachst, 830 MB, weil er jeglichen Frame irgendwie in voller Auflösung, in voller Farbe, mit allem in RAM lädt, für jedes Bild.

07:58.800 --> 08:06.260
So ein GIF ist dann unglaublich groß, vor allem in diesem komischen WPF-Plugin, was ich verwende und diese komischen WPF-Library, die ich verwende, fürs Anzeigen von GIFs.

08:06.520 --> 08:07.280
Und das ist Müll.

08:07.920 --> 08:13.140
Und, ähm, erstens will ich es schneller haben, ja, und das darf auch gerne ein bisschen weniger RAM verbrauchen.

08:13.640 --> 08:21.840
Deswegen haben wir das letzte Mal angefangen, was eigenes zu basteln, mit, ähm, FFmpeg und, und Direct2D.

08:21.840 --> 08:28.780
Man sieht schon, das braucht jetzt 85 MB, ich hab, wir haben so ein bisschen, so ein paar kleinere Memory-Leaks haben wir.

08:28.800 --> 08:33.740
Hier, ja, ein paar kleinere Memory-Leaks haben wir.

08:34.140 --> 08:40.180
Aber sagen wir mal so, das braucht halt 80 MB, ähm, und es ist gut, ja, und es geht halt mega schnell.

08:40.300 --> 08:41.780
Guck, sobald man sieht, zack, GIF ist da.

08:42.580 --> 08:45.280
Und der muss jetzt die ganze Anwendung noch starten, also das geht schon schneller.

08:46.140 --> 08:53.800
Ähm, und die große Herausforderung, die es jetzt gab, das letzte Mal haben wir das eigentlich ganz gut hingekriegt, das GIF zu animieren.

08:54.920 --> 08:58.580
Das GIF zu animieren ist auch kein Akt, das könnte ich jetzt auch wieder, wieder einfügen.

08:58.800 --> 09:02.960
Da muss ich einfach hier, wie gesagt, wir müssen das alles auf, auf, aufräumen.

09:03.880 --> 09:09.300
Ähm, das ist, überbleibsel von meinem Rumprobieren, äh.

09:10.300 --> 09:14.360
So, und hier lesen wir das GIF, irgendwo lesen wir das GIF, wo lesen wir das GIF?

09:19.650 --> 09:20.010
Packet.

09:22.220 --> 09:24.120
Moment, wo lesen wir das GIF? Da lesen wir das GIF.

09:24.500 --> 09:34.000
Hier lesen wir das GIF ein, also sprich, eigentlich, um jetzt das GIF zu animieren, müsste ich jetzt bloß noch den Kram quasi, ich kann es ja mal kurz zeigen, dass wir jetzt einen Stand haben, wo das GIF auch animiert.

09:34.000 --> 09:34.500
Animiert.

09:34.560 --> 09:35.080
Läuft.

09:37.530 --> 09:39.770
Machen wir hier unten hin, irgendwie so, zack.

09:40.610 --> 09:46.390
Und jetzt machen wir ein Sleep von, keine Ahnung, machen wir 100 Millisekunden, dass es nicht zu schnell läuft.

09:46.670 --> 09:50.690
So, als sollte das GIF, äh, oder auch nicht.

09:52.690 --> 09:56.330
Was auch immer, zumindest ist es nicht, kein, kein großartiger Akt, das GIF zu animieren.

09:57.410 --> 10:00.410
Ähm, ich weiß gar nicht, warum er jetzt, was hat er jetzt für Schmerzen, äh.

10:01.030 --> 10:03.090
Egal, es ist total wir, was ich hier gebaut hab.

10:03.890 --> 10:05.670
Und das Schwierige war wirklich.

10:05.670 --> 10:09.810
Die Transparenz hinzukriegen, also das jetzt zu animieren, das, das kriegen wir heute auch hin.

10:09.810 --> 10:20.270
Also das Ziel ist heute, dass wir nen ordentlichen GIF-Player haben, nicht hier mein, mein hingerotztes Zeug, der schnell funktioniert und animierte GIFs abspielt.

10:20.270 --> 10:23.630
Wie gesagt, das Animieren ist nicht das Problem, das haben wir das letzte Mal schon gemacht.

10:23.630 --> 10:27.310
Da kann man sich einfach den nächsten Frame aus FFmpeg ziehen und gut ist.

10:27.310 --> 10:28.630
Das haben wir auch schon hingebastelt.

10:28.630 --> 10:32.790
Was wirklich schwierig war, und jetzt kommen wir mal wieder zurück zu dem, was ich eigentlich sagen wollte.

10:32.790 --> 10:34.790
Also es ist wirklich schwierig.

10:34.790 --> 10:36.820
Nennst du das mal?

10:36.820 --> 10:41.700
Nen transparentes Windows, äh, Window zu machen, unter, äh, Windows.

10:41.700 --> 10:44.700
Nen transparentes Window, auf dem man malen kann.

10:44.700 --> 10:48.380
Und ich hab nur einen offiziellen Weg von Microsoft gefunden.

10:48.380 --> 10:56.780
Alle anderen waren aus irgendwelchen Cheatforen, die irgendwelche Dinger abusen, die man nicht machen sollte.

10:56.780 --> 11:05.940
Zum Beispiel, was ich ganz witzig fand, was ich rausgekriegt hab, ist, ihr kennt doch dieses Nvidia-Overlay, was ich jetzt aus irgendwelchen Gründen nicht einblenden darf.

11:05.940 --> 11:09.940
Warum darf ich das denn nicht einblenden?

11:09.940 --> 11:13.940
All diese, diese Geforce-Experience, das Ding ist so kaputt.

11:13.940 --> 11:15.940
So, Moment, ich mach's mal an.

11:15.940 --> 11:17.940
Overlay, Overlay, zack.

11:17.940 --> 11:19.940
Ja, besser hier, will kein Account.

11:19.940 --> 11:21.940
So, seht ihr das?

11:21.940 --> 11:23.940
Seht ihr das Nvidia-Overlay?

11:23.940 --> 11:25.940
Wie benutzt du FFmpeg mit C-Sharp?

11:25.940 --> 11:30.940
Mit, äh, einem automatisch generierten Binding, was es auf Github gibt.

11:30.940 --> 11:32.940
Such mal nach, ich zeig's dir gleich.

11:32.940 --> 11:34.940
Seht ihr, seht ihr das Nvidia-Overlay?

11:34.940 --> 11:38.580
Oder seht ihr das im Stream nicht?

11:38.580 --> 11:40.580
Muss man auf meinem Vorschau, Vorschau-Bildschirm gucken.

11:40.580 --> 11:42.580
Ja, also man sieht das.

11:42.580 --> 11:44.580
Man sieht das Nvidia-Overlay.

11:44.580 --> 11:50.580
Ähm, und da hab ich rausgefunden, ich zeig dir mal kurz die FFmpeg-Bindings, die du brauchst.

11:50.580 --> 11:53.580
Das hier brauchst du für FFmpeg von C-Sharp aus.

11:53.580 --> 11:57.400
Den hier.

11:57.400 --> 12:00.400
FFmpeg Autogain von Ruslan B.

12:00.400 --> 12:07.400
Und dann musst du quasi im Prinzip C-Style FFmpeg machen, halt, plus aus C-Sharp raus.

12:07.400 --> 12:12.400
So, und ich hab rausgekriegt in diesen Cheat-Foren, die ich geguckt habe,

12:12.400 --> 12:19.400
was da teilweise für komische Hacks am Werke sind, um nicht erkannt zu werden.

12:19.400 --> 12:20.400
Das ist teilweise ganz witzig.

12:20.400 --> 12:29.400
Und zwar, sie verwenden dieses Nvidia-Overlay, was quasi kein Cheat, keine Cheat-Engine der Welt flaggen wird,

12:29.400 --> 12:33.400
weil es ja das Nvidia-Overlay ist, und das ist ja was Legitimes.

12:33.400 --> 12:35.400
Die hijacken das so ein bisschen, ja.

12:35.400 --> 12:37.400
Also die crappen sich quasi das.

12:37.400 --> 12:44.400
Sie nehmen das Nvidia-Overlay und malen dann dort in das Nvidia-Overlay ihr eigenes Zeug rein.

12:44.400 --> 12:48.900
Das ist, das ist eigentlich eine richtig geile Idee.

12:48.900 --> 12:53.900
Ich mein, so Dinge kann man alles machen, aber wir wollen, wir wollen ja gar nicht wie ein Cheat aussehen,

12:53.900 --> 12:55.900
weil wir sind ja kein Cheat.

12:55.900 --> 13:01.900
Und, ähm, das heißt alles, was ich hier so gefunden habe, in diesen komischen hier,

13:01.900 --> 13:07.900
hier, also, die meisten, ohne Scheiß, die meisten Treffer zu wie man transparente Overlays macht,

13:07.900 --> 13:08.900
sind in diesem Cheat-Forum.

13:08.900 --> 13:10.900
Das sind irgendwie 500 Stück oder so, ja.

13:10.900 --> 13:13.900
Das ist gar nicht, danach kommt Stack-Overflow.

13:13.900 --> 13:16.900
Aber es ist alles, ähm, nicht sonderlich intuitiv.

13:16.900 --> 13:21.900
Das heißt, ich denke mal, und der Sibaro, der nimmt ja die Videos auch wieder auf, ähm,

13:21.900 --> 13:27.900
das ist wahrscheinlich eine der wenigen Anleitungen, mit ne, also, was wir hier, was wir heute im Stream machen,

13:27.900 --> 13:34.900
eine, wenn nicht die einzige, weltweit, die quasi nicht auf irgendwelchem Cheat-Scheiß basiert,

13:34.900 --> 13:37.900
auf offiziellen Lösungen von Microsoft basiert, UND

13:37.900 --> 13:39.900
ein funktionierendes Beispiel hier im Stream hat.

13:39.900 --> 13:41.900
Transparente Fenster, ja.

13:41.900 --> 13:48.900
Und, ähm, ja, gibt es Punktabzug, wenn der Player als Cheat erkannt wird,

13:48.900 --> 13:52.900
dann geht die Anzeige raus an den Cheat-, äh, Anti-Cheat-Entwickler.

13:52.900 --> 13:59.900
Also, mehr als den offiziellen Microsoft-Weg, äh, befolgen können wir nicht tun.

13:59.900 --> 14:01.900
Können wir wirklich nicht machen.

14:01.900 --> 14:06.900
Und der offizielle Microsoft-Weg ist, ähm, also, dass man hier so ein transparentes Fenster kennt,

14:06.900 --> 14:10.900
der Witz ist ja, das Fenster muss nicht nur von der Farbe transparent sein,

14:10.900 --> 14:12.900
sondern man muss auch durchklicken können.

14:12.900 --> 14:14.900
Das Ding wird safe detected.

14:14.900 --> 14:20.900
Ey, ohne Scheiß, ich, ich kann halt nichts dagegen, dagegen machen, ähm,

14:20.900 --> 14:23.900
was, was, was soll ich tun letztendlich, ja?

14:23.900 --> 14:27.900
Wenn die Funktionen, die in Windows eingebaut sind, vollkommen legitim sind,

14:27.900 --> 14:32.900
sogar Microsoft in Anleitung verwendet, von irgendwelchen Anti-Cheat-Tools erkannt werden,

14:32.900 --> 14:34.900
weiß ich auch nicht, tja.

14:34.900 --> 14:35.900
Aber gut, was willst du machen?

14:35.900 --> 14:39.900
Ich mein, die, äh, Cheat-Entwickler können den ganzen gleich, äh,

14:39.900 --> 14:46.330
können den gleichen Kram verwenden.

14:46.330 --> 14:51.330
Und ich hoffe ja mal, dass das Anti-Cheat-Zeug nicht wild flaggt,

14:51.330 --> 14:54.330
sondern quasi schon mal guckt, zu welchem Programm gehört das und sonst was.

14:54.330 --> 14:59.150
Weil ich mein, das Nvidia-Overlay wird ja auch nicht geflaggt.

14:59.150 --> 15:00.150
Lol, Alter.

15:00.150 --> 15:06.720
So, und, ja, der einzige Weg, den ich gefunden habe, wie man das offiziell macht,

15:06.720 --> 15:09.720
ist ein Artikel von Microsoft.

15:09.720 --> 15:10.720
Den muss ich jetzt mal finden.

15:10.720 --> 15:12.720
Das war irgendwie, ähm,

15:12.720 --> 15:17.120
wofür machst du das?

15:17.120 --> 15:19.120
Zum GIFs-Anzeigen als Overlay.

15:19.120 --> 15:21.120
Zum Beispiel, guck mal, ähm,

15:21.120 --> 15:23.120
hier kann ich GIFs als Overlay anzeigen lassen.

15:23.120 --> 15:25.120
Das funktioniert auch gut.

15:25.120 --> 15:28.120
Das ist auf, das ist auf WPF-Basis.

15:28.120 --> 15:29.120
Das, das klappt ganz gut.

15:29.120 --> 15:34.120
Das Problem ist nur, dass, ähm, diese Library für WPF ziemlich lahm ist.

15:34.120 --> 15:38.120
Bei großen GIFs wie dem hier zum Beispiel, guck mal, klickste,

15:38.120 --> 15:40.120
und jetzt ist es erst da.

15:40.120 --> 15:44.120
So, deswegen wollte ich selbst ein Overlay basteln, was, ähm, GIFs anzeigen kann.

15:44.120 --> 15:51.590
Und es geht auch schon.

15:51.590 --> 15:53.590
Guck mal da, zack, GIF da.

15:53.590 --> 15:55.590
Und rendert so ungefähr mit 7000 FPS.

15:55.590 --> 16:00.590
Wenn man es mal, wenn man es sich ein bisschen ein, einlaufen lässt, ja, so irgendwas.

16:00.590 --> 16:02.590
Wenn man es sich ein bisschen einlaufen lässt, ja.

16:02.590 --> 16:06.590
Wenn man es ein bisschen ein, wenn es ein bisschen gelaufen ist, dann hat es eben 7000 FPS.

16:06.590 --> 16:08.590
Aber, ähm, es ist schon, es ist schon deutlich schneller.

16:08.590 --> 16:09.590
Es braucht viel, viel weniger RAM.

16:09.590 --> 16:12.590
Das andere braucht irgendwie 800 MB RAM für so ein publisches GIF.

16:12.590 --> 16:15.590
Und das hier ist mit komplettem Fenster und allem irgendwie bei 80.

16:15.590 --> 16:25.020
Ja, dann sollen sie mich halt als suspicious flaggen.

16:25.020 --> 16:29.020
Wenn das Leute, wenn das, wenn das, äh, ganz viele verwenden.

16:29.020 --> 16:31.020
Also viele, ich weiß nicht, was für die viele ist.

16:31.020 --> 16:33.020
Irgendwie keine Ahnung, 30, 40 Leute.

16:33.020 --> 16:37.020
Ja, und irgendwann werden sie ja mal nachgucken, um was es da eigentlich geht.

16:37.020 --> 16:42.020
Ansonsten sind sie auch, ansonsten sind die Anti-Cheat-Hersteller auch nicht besser als irgendwelche Virenprogrammierer.

16:42.020 --> 16:45.020
Wenn sie einfach blind da irgendwelche Sachen machen.

16:45.020 --> 16:47.020
Vor allem, wenn es halt viele Leute haben.

16:47.020 --> 16:52.530
Und dann muss man halt auch schon mal einfach gucken, was dahinter steckt.

16:52.530 --> 16:54.530
Ich meine, der Source Code ist offen auf GitHub.

16:54.530 --> 16:55.530
Kann sich jeder angucken.

16:55.530 --> 17:02.220
So, und der einzige Weg, und jetzt, jetzt, pass auf, jetzt Leute, jetzt wird es übelst abenteuerlich.

17:02.220 --> 17:08.220
Den einzigen Weg, den ich gefunden habe, bei Microsoft, wie man das macht, ist...

17:08.220 --> 17:11.220
Ha, ich, wie hießen diese Artikel?

17:11.220 --> 17:14.220
Ähm, da war irgendwas von 2014.

17:14.220 --> 17:25.270
Ich muss euch den mal zeigen, weil der Artikel selbst ist schon wieder übelst abgedreht, ey.

17:25.270 --> 17:40.530
Ähm, kann man das irgendwie nicht?

17:40.530 --> 17:42.530
Das kann man doch auf Seiten einstellen.

17:42.530 --> 17:43.530
Side.

17:43.530 --> 17:44.530
So, und ich hab...

17:44.530 --> 17:45.530
Das sind alle Artikel.

17:45.530 --> 17:46.530
Der ist in C++.

17:46.530 --> 17:52.530
Ich hab den so ein bisschen quasi für SharpDX übersetzt.

17:52.530 --> 17:59.810
Dass der damit funktioniert.

17:59.810 --> 18:10.330
Okay, Alter, wie hieß denn dieser komische Artikel?

18:10.330 --> 18:15.330
Ah, da kommen wir der Sache doch schon näher.

18:15.330 --> 18:21.730
Kann man nicht noch irgendwie nach Datum 2014 oder so suchen?

18:21.730 --> 18:27.810
Okay, dann suchen wir mal nach Microsoft.

18:27.810 --> 18:28.810
Das da.

18:28.810 --> 18:29.810
Das ist es, glaube ich.

18:29.810 --> 18:30.810
Ja, das ist es.

18:30.810 --> 18:31.810
Das ist der einzige Artikel.

18:31.810 --> 18:34.810
Das ist der einzige Artikel von Microsoft, den ich zu dem Thema gefunden habe.

18:34.810 --> 18:35.810
Aber nicht auf Deutsch, sondern auf...

18:35.810 --> 18:37.810
Wo stellt man hier die Sprache um?

18:37.810 --> 18:38.810
Sprache...

18:38.810 --> 18:39.810
Sprache?

18:39.810 --> 18:40.810
Ich will das nicht auf Deutsch.

18:40.810 --> 18:41.810
Wo stellt man...

18:41.810 --> 18:42.810
Ah, da unten.

18:42.810 --> 18:43.810
English United States.

18:43.810 --> 18:44.810
Okay.

18:44.810 --> 18:52.690
Gut.

18:52.690 --> 18:53.690
So, und das ist der einzige Artikel, den ich gefunden habe.

18:53.690 --> 18:54.690
Und das ist schon wieder...

18:54.690 --> 18:55.690
Und das ist wohlgemerkt von 2014.

18:55.690 --> 18:56.690
Und so macht's auch keine Cheat...

18:56.690 --> 18:57.690
Kein Cheat, den ich bisher irgendwie da in diesem Anlass...

18:57.690 --> 18:58.690
Ich hab's schon mal...

18:58.690 --> 18:59.690
Ich hab's schon mal...

18:59.690 --> 19:00.690
Ich hab's schon mal...

19:00.690 --> 19:01.690
Ich hab's schon mal...

19:01.690 --> 19:02.690
Ich hab's schon mal...

19:02.690 --> 19:03.690
Ich hab's schon mal...

19:03.690 --> 19:04.690
Ich hab's schon mal...

19:04.690 --> 19:05.690
Ich hab's schon mal...

19:05.690 --> 19:06.690
Keine Cheat...

19:06.690 --> 19:10.210
Kein Cheat, den ich bisher irgendwie da in diesem anderen Forum gesehen hab, macht's

19:10.210 --> 19:11.690
nach dem offiziellen Microsoft-Weg.

19:11.690 --> 19:18.690
Die machen alle so krumme Dinge, also irgendwie Nvidia-Overlay-Hijacken, irgendwelche...

19:18.690 --> 19:21.370
Irgendwelche Window...

19:21.370 --> 19:23.690
Window-Manager-Geschichten...

19:23.690 --> 19:24.930
Abgreifen und so.

19:24.930 --> 19:31.790
Aber das ist der einzige Weg von Microsoft, den ich gefunden habe, ein transparentes Windows

19:31.790 --> 19:34.850
zu machen, wo man schnell reinzeichnen kann.

19:34.850 --> 19:35.650
Okay.

19:35.650 --> 19:40.670
Ja, stimmt, Lesezeit ist keine schlechte Idee.

19:40.670 --> 19:44.290
So, und jetzt nur mal so zu erklären, also der Typ labert halt hier ein bisschen rum,

19:44.290 --> 19:51.190
so, und der Artikel ist halt in C, äh, C, C, C++, was ist das, ich würde sagen, das

19:51.190 --> 19:58.190
ist eher C, ne, da ist noch nicht mal was mit C++, also die Beispiele, die sie da haben,

19:58.190 --> 20:04.310
sind in C, und ich hab das versucht so ungefähr nachzubauen, was der Dude da treibt, ja, und

20:04.310 --> 20:06.950
ey, es ist wir.

20:06.950 --> 20:07.950
Es ist, es ist mega wir.

20:07.950 --> 20:08.950
Es ist mega wir.

20:08.950 --> 20:13.470
Also die Essenz aus dem Ganzen, ich zeig's euch mal, gleich bei mir im Code, ähm, stimmt

20:13.470 --> 20:19.090
das in LAMP, das, das müssen C++ sein, ähm, so, und da zeigt er hier, bla bla bla, Window

20:19.090 --> 20:23.670
erstellen, bla, transparentes Window erstellen, ja, also sprich, das ist, Microsoft sagt selbst,

20:23.670 --> 20:28.950
so funktioniert's, also, ja, gut, kann sich nicht davor schützen, das ist irgendein Cheat-,

20:28.950 --> 20:29.950
Anti-Cheat-Typ-Flag.

20:29.950 --> 20:35.830
So, hier, guckt, transparentes Window, bla bla bla bla, DirectX, bla bla bla bla bla, ganz

20:35.830 --> 20:36.830
viel bla.

20:36.830 --> 20:41.830
So, Scheiß hab ich ausprobiert und in C Sharp, äh, SharpDX zu übersetzt, ja, also, so, bla

20:41.830 --> 20:46.750
bla bla, dann steht hier zwischendrin irgendwas von der Direct Composition API, wenn du nach

20:46.750 --> 20:52.830
Direct Composition suchst, findst du ein Video von Microsoft im Jahr 2013, also das ist wirklich

20:52.830 --> 20:57.670
der Abgrund, der Abgrund, wirklich, der komplette Abgrund, den ich, in den du hier schaust,

20:57.670 --> 21:03.150
von Windows wieder, ähm, so, und am Ende zeigt er dir dann halt, wie geil er ist, er hat ein

21:03.150 --> 21:04.830
Fenster am Start mit nem grünen Kreis drauf.

21:04.830 --> 21:06.630
Und letztendlich ist es ja das, was wir auch wollen.

21:06.630 --> 21:12.160
Und das Einzige, was wir danach noch machen müssen, ist den Fensterrahmen weg.

21:12.160 --> 21:13.160
War's aber kein Ding.

21:13.160 --> 21:16.960
Wichtig ist erstmal, dass man ein trans-, dass man ein transparentes Fenster bekommt

21:16.960 --> 21:17.960
und das man reinmalen kann.

21:17.960 --> 21:21.220
So, und jetzt zeige ich euch mal, wie das geht, weil wir wollen uns ja nicht diesen

21:21.220 --> 21:24.320
komischen Artikel von dem Typ angucken, sondern wie ich das gemacht hab.

21:24.320 --> 21:28.120
Und, Leute, es ist Magic pur, es ist wirklich Magic pur.

21:28.120 --> 21:30.920
Ähm, ich kann's euch, ich kann, wie gesagt, ich kann's euch gar nicht erklären, ich kann

21:30.920 --> 21:33.700
euch erklären, was ich gemacht hab, aber nicht, warum das an manchen Stellen so aussieht.

21:33.700 --> 21:38.200
Ähm, fangen wir erstmal oben an.

21:38.200 --> 21:42.360
Ne, wir fangen, wir fangen beim, beim interessanten Teil an.

21:42.360 --> 21:45.920
Also, das erste, was ich mach, den, wir räumen das jetzt gleich auf, das ist auch Ziel dieses

21:45.920 --> 21:49.520
Streams, ne ordentliche Giftplayer-Klasse zu machen und meine ganzen, ganzen Scheiße

21:49.520 --> 21:50.520
rauszuschmeißen.

21:50.520 --> 21:53.700
Das Ding hat jetzt irgendwie 400 Zeilencode, danach hat's wahrscheinlich noch 150, wenn

21:53.700 --> 21:54.700
wir fertig sind.

21:54.700 --> 21:59.700
Ja, und das hier, diese Funktion ist das auch, was die ganzen Cheat-Tools immer verwenden.

21:59.700 --> 22:05.740
Ich hab auch erst probiert, das damit hinzukriegen, funktioniert, aber, und jetzt kommt der Hit,

22:05.740 --> 22:07.200
es ist langsamer als meine Lösung.

22:08.200 --> 22:12.980
Layered Window mit, ähm, diesem, dieser Geschichte ist langsamer als das, was ich

22:12.980 --> 22:16.960
gebastelt hab, also ist die offizielle Microsoft-Lösung wahrscheinlich gar nicht mehr so schlecht.

22:16.960 --> 22:23.060
Aber wahrscheinlich nicht so flexibel, was, äh, natürlich wieder für, äh, Cheat-Geschichten

22:23.060 --> 22:24.060
schlecht ist.

22:24.060 --> 22:28.400
Ja, also hier kannst du halt auch wirklich nur dein eigenes Fenster malen, alles andere

22:28.400 --> 22:29.400
kannst du vergessen.

22:29.400 --> 22:32.960
Was halt bei den Cheat-Dingern nicht so ist, ne.

22:32.960 --> 22:36.420
Aber wir wollen ja auch nicht cheaten, das ist, wie gesagt, die einzige offizielle Microsoft-Lösung.

22:36.420 --> 22:37.420
So, ähm.

22:38.200 --> 22:40.760
Also, wo geht's denn los?

22:40.760 --> 22:45.880
Also, als erstes müssen wir irgendwie DirectX-Gedöns erstellen.

22:45.880 --> 22:50.560
Äh, das ist für mich zum größten Teil Magic, was diese Optionen hier machen, allerdings

22:50.560 --> 22:53.340
braucht man diese Optionen, sonst funktioniert's nicht.

22:53.340 --> 22:59.760
Und ganz wichtig, auch, auch wirklich sehr praktischer Tipp, wenn ihr mal DirectX-Zeug

22:59.760 --> 23:06.260
macht, wusste ich bis vor kurzem auch nicht, das Ding schmeißt laufend, wenn es sich an

23:06.260 --> 23:07.580
irgendwas stört, Fehler.

23:07.580 --> 23:09.580
Und die Fehler sind halt überhaupt nicht aussagegemäß.

23:09.580 --> 23:12.580
Da steht dann einfach nur DirectX-Error oder sowas, da.

23:12.580 --> 23:19.350
Da kann man, ähm, da kann man auch, Alter, wo war das denn jetzt versteckt?

23:19.350 --> 23:20.350
Ich glaub hier irgendwo.

23:20.350 --> 23:26.270
Da kann man hier in den Projekt-Settings unter Debug, kann man einstellen, Enable Native

23:26.270 --> 23:27.310
Code Debugging.

23:27.310 --> 23:39.230
Wenn man das eingestellt hat, und an sein DirectX-Device hier die Option Debug dran

23:39.230 --> 23:40.230
steckt.

23:40.230 --> 23:41.230
Dann.

23:41.230 --> 23:44.910
Das geht jetzt zwar ein bisschen langsamer, bis man Debug wieder rausnimmt, aber dann

23:44.910 --> 23:51.390
wirft DirectX sinnvolle, und überraschend sinnvolle, hab ich mich selbst gewundert,

23:51.390 --> 23:54.990
Fehlermeldungen, allerdings nicht auf die Konsole, sondern hier in dieses Output-Window.

23:54.990 --> 24:00.190
Also wenn ihr mal irgendwas mit DirectX oder irgendwelchen Windows-API-Geschiss macht,

24:00.190 --> 24:04.310
macht Native Code Debugging an und schaltet die Debug-Geschichten hier für euer DirectX-Device

24:04.310 --> 24:07.710
ein, dann bekommt ihr zum größten Teil recht sinnvolle Fehlermeldungen.

24:07.710 --> 24:11.690
Und so hab ich mich auch hier so ein bisschen ran getastet.

24:11.690 --> 24:17.050
Zum Beispiel, ich hatte keine Ahnung, dass ich Flipdiscard verwenden muss für meine Swapchain

24:17.050 --> 24:18.050
anstatt Discard.

24:18.050 --> 24:23.250
Weil, ich weiß es nicht, weil nur das das Supportete ist für dieses Szenario.

24:23.250 --> 24:26.730
Weil, ich weiß es nicht, aber Microsoft sagt das in der Fehlermeldung.

24:26.730 --> 24:29.230
So.

24:29.230 --> 24:30.230
Ähm.

24:30.230 --> 24:31.230
Ähm.

24:31.230 --> 24:36.030
Achso, den Link, den Link kann ich dir geben, ja.

24:36.030 --> 24:41.440
Du willst bestimmt jetzt dein Cheat updaten, gibst du?

24:41.440 --> 24:42.440
So.

24:42.440 --> 24:43.880
Wo lernt man die Grundlagen von C?

24:43.880 --> 24:44.760
Ja.

24:44.760 --> 24:49.760
Also, YouTube-Videos oder irgendwelche Bücher oder sonst was.

24:49.760 --> 24:53.280
Wobei ich sagen würde, ich würde, also wenn du schon was programmieren kannst und was

24:53.280 --> 24:58.600
Low-Level-mäßiges machen willst, ist nicht verkehrt, mit sich das mal anzugucken.

24:58.600 --> 25:03.200
Allerdings muss man sagen, einsteigen würde ich mit C auf keinen Fall.

25:03.200 --> 25:11.260
Äh, Sibaro, ich hab probiert Quality-Settings zu kriegen, hat nicht funktioniert.

25:11.260 --> 25:15.940
So.

25:15.940 --> 25:16.940
Okay.

25:16.940 --> 25:17.940
Also.

25:17.940 --> 25:18.940
Fangen wir mal an.

25:18.940 --> 25:19.940
Die Magic kommt später.

25:19.940 --> 25:21.620
Erstmal zur Erklärung, was am Anfang passiert.

25:21.620 --> 25:22.620
Das ist relativ Standard-DirectX-Gedöns.

25:22.620 --> 25:23.620
Man erst, man erstellt eine Swap-Chain.

25:23.620 --> 25:28.620
Eine Swap-Chain, das ist, DirectX hat, also ich muss ja sagen, ich persönlich finde die

25:28.620 --> 25:35.620
OpenGL-Sachen ein bisschen angenehmer benannt, vor allem wenn man sowas wie SDL oder irgendwie

25:35.620 --> 25:40.620
OpenTK oder sowas verwendet, das ist irgendwie ein bisschen griffiger, finde ich, als vieles

25:40.620 --> 25:41.620
DirectX-Zeug.

25:41.620 --> 25:43.620
Wobei, das eigentlich nimmt sich nix.

25:43.620 --> 25:48.620
Dafür ist OpenGL viel, ähm, nerviger, weil man viel mehr selbst machen muss.

25:48.620 --> 25:49.620
Ähm.

25:49.620 --> 25:50.620
Naja.

25:50.620 --> 25:57.620
Also erstens muss man eine Swap-Chain-Description erstellen, damit man eine Swap-Chain erstellen

25:57.620 --> 25:58.620
kann.

25:58.620 --> 25:59.620
Ähm.

25:59.620 --> 26:07.620
Eine Swap-Chain ist im Prinzip ne, im Prinzip mehrere Buffer, die du, die du austauschen

26:07.620 --> 26:08.620
kannst.

26:08.620 --> 26:12.620
Das ist eigentlich alles, was eine Swap-Chain ist, im Großen und Ganzen, ne.

26:12.620 --> 26:17.620
Du hast, du hast einen Buffer, da wird gerade, also das, was da drin ist, wird angezeigt

26:17.620 --> 26:19.620
und du hast in der Regel noch einen zweiten Buffer.

26:19.620 --> 26:24.620
Da schreibst du dein Zeug rein und wenn du fertig bist, dein, dein neues Bild reinzuschreiben,

26:24.620 --> 26:25.620
dann swappst du das Ganze.

26:25.620 --> 26:31.620
Also sprich, den Buffer, den du gerade anzeigst, den schmeißt du weg und zeigst deinen Buffer

26:31.620 --> 26:33.620
an, in den du gerade reingeschrieben hast und swappst halt, ne.

26:33.620 --> 26:36.620
Deswegen musst du auch hier einstellen, der Swap-Effekt.

26:36.620 --> 26:41.620
Und in dem Fall muss, muss man, warum auch immer, weil Microsoft, muss man FlipDiscard

26:41.620 --> 26:42.620
verwenden.

26:42.620 --> 26:44.620
Natürlich auch kein Hilfetext, warum.

26:44.620 --> 26:46.620
Es gibt noch zig andere Varianten.

26:46.620 --> 26:47.620
Das ist der Effekt.

26:47.620 --> 26:50.620
Wenn man diese beiden Buffers switcht.

26:50.620 --> 26:55.620
Also sprich, von dem Buffer, wo das angezeigte Bild ist, wenn ich dann switche zu dem Buffer,

26:55.620 --> 26:57.620
wo ich gerade reingerendert habe, ne.

26:57.620 --> 27:01.620
Dann, aber in dem Fall muss ich FlipDiscard oder FlipSequential nehmen, weil das Microsoft

27:01.620 --> 27:02.620
gerne hätte.

27:02.620 --> 27:07.620
Ähm, unterstützt wird aktuell generell wohl, so wie es aussieht, fast nur noch Alpha Mode

27:07.620 --> 27:08.620
Premultiplied.

27:08.620 --> 27:12.620
Da habe ich, ey, ohne Scheiß, da habe ich Stunden gebraucht für, bis ich gecheckt habe,

27:12.620 --> 27:16.620
aber das zeige ich euch gleich noch, zeige ich euch gleich noch, wie ich mein GIF transparent

27:16.620 --> 27:17.620
bekomme.

27:17.620 --> 27:26.620
Also es gibt prinzipiell zwei verschiedene Alpha Modi, die, äh, DirectX, äh, Direct2D

27:26.620 --> 27:27.620
und DirectX unterstützt.

27:27.620 --> 27:29.620
Das ist einmal Premultiplied und Straight.

27:29.620 --> 27:36.620
Der Unterschied ist im Prinzip relativ subtil auf den ersten Blick, weil, ähm, die Anzahl

27:36.620 --> 27:38.620
der Bytes sind die gleichen.

27:38.620 --> 27:44.620
Also ein Pixel, ja, ein Pixel ist zum, besteht zum Beispiel, also wenn man ein, ein, keine

27:44.620 --> 27:46.620
Ahnung, rot, ein roter Pixel, ja.

27:46.620 --> 27:49.620
Ein roter Pixel sind erstmal drei Bytes.

27:49.620 --> 27:52.940
Sind erstmal drei Bytes.

27:52.940 --> 27:55.940
Und zwar die Bytes 2, 5, 5, 0, 0.

27:55.940 --> 27:56.940
Also hier, ne.

27:56.940 --> 28:00.940
Erstes Byte 255, zweites Byte 0, drittes Byte 0.

28:00.940 --> 28:02.940
So, das ist erstmal ein roter Pixel.

28:02.940 --> 28:10.940
Jetzt gibt es da zusätzlich noch ein viertes Byte, der sagt, ähm, wie transparent dieser

28:10.940 --> 28:11.940
Pixel ist.

28:11.940 --> 28:15.940
Deswegen ist das normale, ist das sowas wie RGB, das hat ja jeder schon mal gehört.

28:15.940 --> 28:19.940
Und, ähm, RGB, das ist dann quasi zwei, zwei Dinger.

28:19.940 --> 28:24.940
Übrigens, falls ich irgendwelche Host-Donations oder sonst was vergesse, spammt mich mal voll,

28:24.940 --> 28:30.940
weil ich hab wieder vergessen, meine Alert-Dinger anzumachen.

28:30.940 --> 28:39.940
So, und wenn man jetzt, das sind Alpha, äh, also Alpha-Channel-Informationen, sprich,

28:39.940 --> 28:41.940
wie transparent der Pixel ist.

28:41.940 --> 28:44.940
0 ist transparent, 255 ist komplett nicht transparent.

28:44.940 --> 28:48.940
Also wenn ich sowas mache wie 100, dann ist das so halb transparent.

28:48.940 --> 28:53.940
Das muss natürlich das jeweilige, äh, Backend unterstützen, aber das ist eigentlich Standard,

28:53.940 --> 28:54.940
Leute.

28:54.940 --> 29:00.940
Deswegen nennt sich das nicht mehr RGB, sondern RGBA, also sprich, äh, Rot, Grün, äh, Blau,

29:00.940 --> 29:01.940
Transparenz.

29:01.940 --> 29:02.940
So.

29:02.940 --> 29:07.940
Und intern, um die ganze Sache noch ein bisschen komplizierter zu machen, intern arbeitet

29:07.940 --> 29:14.940
DirectX, beziehungsweise Direct 3D, äh, Direct 2D in dem Fall nicht mit RGBA, sondern mit

29:14.940 --> 29:22.940
BGRA, weil, wahrscheinlich, weil's besser für das, äh, Speicher-Layout von Grafikkarten

29:22.940 --> 29:23.940
ist oder so.

29:23.940 --> 29:24.940
Ich weiß es nicht genau.

29:24.940 --> 29:28.940
Ähm, zumindest intern verwenden sie das da.

29:28.940 --> 29:30.940
Aber das macht im Prinzip keinen großen Unterschied.

29:30.940 --> 29:32.940
Das ist ja im Prinzip einfach nur ein paar Sachen vertauscht.

29:32.940 --> 29:34.940
Alpha-Byte ist immer das letzte.

29:34.940 --> 29:37.630
So.

29:37.630 --> 29:40.630
Und jetzt wollte ich ja erklären, was der Unterschied ist zwischen Pre-Multiply, und

29:40.630 --> 29:44.630
das braucht ihr immer, wenn ihr irgendwelche Grafikgeschichten macht, müsst ihr euch das

29:44.630 --> 29:45.630
merken.

29:45.630 --> 29:47.630
Ähm, der...

29:47.630 --> 29:49.630
Wie ist die Lage?

29:49.630 --> 29:51.630
Ja, sehr verwirrend ist die Lage, ey.

29:51.630 --> 29:54.630
Windows, Windows-Zeugs wieder am Start, äh.

29:54.630 --> 29:58.630
Also der Unterschied ist, den Hilfetext hier könnt ihr, könnt ihr erstmal, könnt ihr

29:58.630 --> 29:59.630
erstmal vergessen.

29:59.630 --> 30:02.630
Also, Pre-Multiplied, also fangen wir mal an.

30:02.630 --> 30:09.630
Straight, ja, jetzt, jetzt, äh, keine Feminism-Chokes oder sowas.

30:09.630 --> 30:15.630
Also Straight bedeutet in dem Fall, die Pixel hier vorne stellen ganz klassisch, äh, die

30:15.630 --> 30:17.630
sind rot, grün, blau da.

30:17.630 --> 30:25.630
Und nur der letzte bedeutet, steht für den, für die, für die Transparenz von dem kompletten

30:25.630 --> 30:26.630
Pixel.

30:26.630 --> 30:27.630
So.

30:27.630 --> 30:33.630
Pre-Multiplied bedeutet, die Transparenz ist quasi hier vorne schon mit eingerechnet.

30:33.630 --> 30:37.630
Ganz ehrlich, Vor- und Nachteile habe ich nicht so wirklich gecheckt.

30:37.630 --> 30:43.630
Also, ich weiß, sowieso, im Hinterkopf ist mir schon lange klar, dass es das gibt, aber

30:43.630 --> 30:44.630
ich hatte damit noch nie Probleme.

30:44.630 --> 30:49.630
Ähm, deswegen musste ich mir das heute erstmal angucken, so, was eigentlich auch genau der

30:49.630 --> 30:50.630
Unterschied ist.

30:50.630 --> 30:55.630
Ähm, zumindest Pre-Multiplied bedeutet genau das, was da steht, nämlich, dass der Alpha-Wert

30:55.630 --> 30:59.630
schon eingerechnet ist in das normale RGB.

30:59.630 --> 31:01.630
Das bedeutet Pre-Multiplied.

31:01.630 --> 31:02.630
So.

31:02.630 --> 31:05.630
Und nachdem, und ich muss jetzt ein bisschen ausholen, sonst versteht man nämlich das,

31:05.630 --> 31:07.630
das eigentliche Problem bei der ganzen Sache gar nicht.

31:07.630 --> 31:13.630
Nachdem jetzt quasi meine komplette Geschichte, die ich hier initialisiere am Anfang, zwingend,

31:13.630 --> 31:20.630
zwingend dieses Format braucht für Pixel, also sprich Blau, Grün, Rot und Alpha-Channel

31:20.630 --> 31:25.630
und sein Alpha-Channel Pre-Multiplied haben will, also es geht einfach davon aus, das

31:25.630 --> 31:27.630
macht da keine Magic mehr oder so.

31:27.630 --> 31:32.630
Also sprich, wenn, wenn der Pixel Pre-Multiplied nicht transparent ist, dann wird er einfach

31:32.630 --> 31:34.630
nicht transparent angezeigt.

31:34.630 --> 31:38.630
Da kann mein Alpha-Channel noch so sehr auf Null stehen, das juckt den dann überhaupt

31:38.630 --> 31:39.630
nicht.

31:39.630 --> 31:40.630
Ist dem vollkommen egal.

31:40.630 --> 31:41.630
Ähm.

31:41.630 --> 31:47.630
Und das heißt, ich kann meine normalen Bilder, also sprich die einzelnen Frames vom GIF,

31:47.630 --> 31:50.630
nicht so einfach rendern, weil die sind nicht durchsichtig.

31:50.630 --> 31:54.630
Und ihr seht ja, wenn man es hier anzeigt, hier sind sie durchsichtig.

31:54.630 --> 32:01.630
Normalerweise hat er das immer weiß gerendert hier im Hintergrund, weil es nicht Pre-Multiplied

32:01.630 --> 32:02.630
war.

32:02.630 --> 32:03.630
So.

32:03.630 --> 32:04.630
Ähm.

32:04.630 --> 32:06.630
Einmal nochmal einen Schritt zurück.

32:06.630 --> 32:10.630
Wir müssen ja irgendwie diesen Inhalt, bevor wir Probleme überhaupt mit Transparenz oder

32:10.630 --> 32:15.630
sonstigen Dingern haben, wir müssen ja erstmal den ganzen Kram überhaupt in unser transparentes

32:15.630 --> 32:16.630
Fenster reinkriegen.

32:16.630 --> 32:18.630
Und jetzt, jetzt beginnt die Magic.

32:18.630 --> 32:21.630
Also, wir erstellen hier mal unsere Swap Chain Description, habe ich ja gerade erklärt,

32:21.630 --> 32:23.630
was die einzelnen Optionen machen.

32:23.630 --> 32:24.630
Ähm.

32:24.630 --> 32:25.630
Der Rest ist nicht so wichtig.

32:25.630 --> 32:28.630
Höhe, Breite noch, wie das Fenster halt ist.

32:28.630 --> 32:31.630
Dann erstelle ich das DirectX Device.

32:31.630 --> 32:35.630
Muss ich sagen, ich nehme auch nochmal BGHA Support, das braucht man für Direct2D.

32:35.630 --> 32:36.630
Äh.

32:36.630 --> 32:38.630
Wir wollen plus das neueste DirectX haben, weil wir halt krasse Checker haben.

32:38.630 --> 32:39.630
Ähm.

32:39.630 --> 32:41.630
Krase Checker sind und nur das neueste verwenden.

32:41.630 --> 32:44.630
Geht wahrscheinlich mit älteren Sachen ganz genauso gut.

32:44.630 --> 32:45.630
Ähm.

32:45.630 --> 32:46.630
So.

32:46.630 --> 32:51.630
Dann speichern wir uns das hier in unserer Klasse, das DirectX Device.

32:51.630 --> 32:53.630
Dann kommt, jetzt kommt Magic.

32:53.630 --> 32:54.630
Jetzt kommt übelste Magic.

32:54.630 --> 32:56.630
Ich habe keine Ahnung, warum man das genau machen muss.

32:56.630 --> 33:00.630
Jetzt braucht man irgendwie so ein XDX, DXGE Device.

33:00.630 --> 33:04.630
Danach muss man sich eine Factory erstellen von diesem DXGE Device.

33:04.630 --> 33:07.630
Ihr wisst, was ich meine.

33:07.630 --> 33:08.630
Äh.

33:08.630 --> 33:10.630
In diesem DXGE Device.

33:10.630 --> 33:12.630
Danach kann ich mal eine Swap Chain erstellen.

33:12.630 --> 33:15.630
Das ist das, was ich vorhin erklärt habe, wo du deine Buffer switchen kannst mit.

33:15.630 --> 33:21.630
Da braucht die Factory, die braucht das DXGE Device und die Description, dass sie weiß, was sie für Settings haben soll.

33:21.630 --> 33:22.630
So.

33:22.630 --> 33:23.630
Und jetzt.

33:23.630 --> 33:25.630
Ich habe schon die Warnung hier reingeschrieben.

33:25.630 --> 33:26.630
Jetzt kommt komplette Magic.

33:26.630 --> 33:27.630
Weil.

33:27.630 --> 33:35.630
Aktuell ist es so, ich habe ein Fenster erstellt, das ist transparent und hat keinen Hintergrund.

33:35.630 --> 33:36.630
Das ist.

33:36.630 --> 33:38.630
Ich habe es zuhause gemacht, wie der, wie der, wie der Dude hier im Artikel.

33:38.630 --> 33:39.630
Ne.

33:39.630 --> 33:42.630
Ich habe ein Fenster erstellt, was keinen Hintergrund hat.

33:42.630 --> 33:43.630
Also kein.

33:43.630 --> 33:44.630
Nein.

33:44.630 --> 33:45.630
Was keine.

33:45.630 --> 33:46.630
Ähm.

33:46.630 --> 33:53.630
Was kein Bitmap quasi reserviert hat im Speicher von Windows, wo man überhaupt Content reinmalen könnte.

33:53.630 --> 33:59.630
Also sprich, mit Windows-Bordmitteln kann man in dieses Fenster nicht zeichnen, weil es keinen Buffer hat.

33:59.630 --> 34:00.630
Gibt es nicht.

34:00.630 --> 34:01.630
Ja.

34:01.630 --> 34:04.630
Also irgendwelche GDI Dinger oder so von früher.

34:04.630 --> 34:05.630
Das geht da nicht.

34:05.630 --> 34:14.150
Das geht direkt.

34:14.150 --> 34:15.150
Haha.

34:15.150 --> 34:16.150
Nice.

34:16.150 --> 34:17.150
Ähm.

34:17.150 --> 34:19.150
Warum entwickelst du eigentlich nicht auf Linux?

34:19.150 --> 34:21.150
Weil das ähm.

34:21.150 --> 34:24.150
Ziemlich Windows-Only hier ist, was ich gerade mache.

34:24.150 --> 34:26.150
Deswegen mache ich es nicht unter, unter Linux.

34:26.150 --> 34:30.660
Weil das ist halt, gibt es halt unter Linux nicht.

34:30.660 --> 34:33.350
Naja.

34:33.350 --> 34:34.350
Zumindest.

34:34.350 --> 34:36.350
Wo bin ich denn jetzt stehen geblieben?

34:36.350 --> 34:37.350
Genau.

34:37.350 --> 34:38.350
Absolute Magic.

34:38.350 --> 34:39.350
Wie gesagt.

34:39.350 --> 34:40.350
Das Fenster.

34:40.350 --> 34:41.350
Das, auf das kann man nicht malen.

34:41.350 --> 34:42.350
Auf dieses Fenster.

34:42.350 --> 34:43.350
Mit.

34:43.350 --> 34:44.350
Das ist genau das gleiche, wie der Typ hier im Artikel macht.

34:44.350 --> 34:45.350
Bloß, dass ich bei mir auch den Rahmen aufmache.

34:45.350 --> 34:47.350
Bloß, dass ich bei mir auch den Rahmen ausgeblendet habe.

34:47.350 --> 34:48.350
Ähm.

34:48.350 --> 34:49.350
So.

34:49.350 --> 34:50.350
Mit.

34:50.350 --> 34:53.110
Ja, mit Qt könntest du das machen.

34:53.110 --> 34:54.110
Aber ich.

34:54.110 --> 34:55.110
Bringt mir in dem Fall auch nichts.

34:55.110 --> 34:56.110
Weil ähm.

34:56.110 --> 34:57.110
Das andere ist auch Windows-Only.

34:57.110 --> 34:58.110
Das ist vollkommen wurscht.

34:58.110 --> 34:59.110
Ja.

34:59.110 --> 35:00.110
Ähm.

35:00.110 --> 35:01.110
Und das mit Qt ist gar nicht so einfach.

35:01.110 --> 35:02.110
Qt ist ja erstmal standardmäßig.

35:02.110 --> 35:03.110
Äh.

35:03.110 --> 35:04.110
Also.

35:04.110 --> 35:05.110
Also du machst mit QML ist es ja auch nicht großartig beschleunigt.

35:05.110 --> 35:06.110
Das heißt, da müsste es mit OpenGL irgendwas passen.

35:06.110 --> 35:07.110
Kein Nerv.

35:07.110 --> 35:08.110
Wir.

35:08.110 --> 35:09.110
Wir sind eh relativ abhängig von Windows.

35:09.110 --> 35:10.110
Und.

35:10.110 --> 35:11.110
Dementsprechend.

35:11.110 --> 35:12.110
Bleibt.

35:12.110 --> 35:13.110
Ja.

35:13.110 --> 35:14.110
Ja.

35:14.110 --> 35:15.110
Ja.

35:15.110 --> 35:16.110
Ja.

35:16.110 --> 35:17.110
Ja.

35:17.110 --> 35:18.110
In gewisser Weise noch nichts.

35:18.110 --> 35:19.110
Okay.

35:19.110 --> 35:20.110
Mache ich das nun mit reuse.

35:20.110 --> 35:21.110
Wie Bloody Spirit es ist noch mehr Irunos.

35:21.110 --> 35:23.870
Na also im Prinzip ist das das gleiche Fenster wie der Typ im Artikel.

35:23.870 --> 35:34.120
Ähm.

35:34.120 --> 35:35.120
So.

35:35.120 --> 35:37.560
Und bloß, dass ich den Rahmen ausgeblendet habe.

35:37.560 --> 35:38.560
Okay.

35:38.560 --> 35:39.560
Und jetzt kommt.

35:39.560 --> 35:40.560
Absolute Magic.

35:40.560 --> 35:41.560
Ähm.

35:41.560 --> 35:44.920
Nachdem wir ja wie ich gerade erklärt habe hier nichts rein malen können auf klassische

35:44.920 --> 35:46.860
Art und weise in dieses Fenster.

35:46.860 --> 35:48.880
Müssen wir.

35:48.880 --> 35:49.880
Dem.

35:49.880 --> 35:51.420
Was hab.

35:51.420 --> 35:52.860
Wie heißt das eigentlich?

35:52.860 --> 35:53.860
Korrekt.

35:53.860 --> 35:55.100
DWM.

35:55.100 --> 35:56.100
Desktop Window Manager wahrscheinlich.

35:56.100 --> 36:01.000
unfeinlich, Dynamic Window Manager, das ist das Linux-Ding, Windows, für was steht denn das hier überhaupt?

36:02.100 --> 36:08.040
Der Desktop Window Manager, also sprich, das ist der Part von Windows, der dafür zuständig ist,

36:08.540 --> 36:14.700
so Sachen wie überlappende Fenster zu machen, halbtransparente, was ist denn ein halbtransparentes Fenster,

36:14.780 --> 36:18.880
gibt es sowas unter Windows 10 noch standardmäßig, kann man auf jeden Fall, auf jeden Fall machen, ja,

36:19.480 --> 36:24.200
also sprich, dass dieses Fenster über diesem Fenster ist oder das, was haben wir denn hier, halbtransparentes,

36:24.200 --> 36:29.740
gibt es hier nichts noch, was halbtransparentes zum zeigen, zumindest, ich starte einfach jetzt mal mein Programm,

36:30.180 --> 36:36.560
dass hier dieses Fenster da drüber ist und dieses Fenster dafür, dafür ist dieser Desktop Window Manager zuständig.

36:37.640 --> 36:43.340
Das heißt, nachdem unser Fenster jetzt kein Buffer hat, in dem wir malen können,

36:44.120 --> 36:49.900
müssen wir das Ganze quasi mit dem Desktop Window Manager in das Fenster malen.

36:49.900 --> 36:54.140
Das ist das, was der Typ hier in seiner Anleitung beschreibt, wie das Ganze funktioniert.

36:54.200 --> 37:04.040
Ach stimmt, der Calculator ist transparent, ja, richtig, oder auch, ich gebe dir aber recht,

37:04.100 --> 37:07.440
der sollte eigentlich transparent sein, ich bilde mir auch an, dass der transparent ist.

37:09.520 --> 37:13.580
Ach, ne, weißt du was, warum der nicht transparent ist, weil ich Transparenz abgeschaltet habe, lull.

37:14.960 --> 37:17.960
Ich habe Transparenz abgeschaltet, weil mir Transparenz aufgekriegt gegangen ist, stimmt.

37:26.140 --> 37:30.540
Der ist minimal transparent, ich glaube nicht, dass der transparent ist, der ist nicht transparent.

37:30.540 --> 37:32.980
Ich habe das abgeschaltet.

37:33.860 --> 37:36.680
Aber guckt mal, hier unten die Taskleiste ist ein bisschen transparent, seht ihr es?

37:37.720 --> 37:40.760
Da, ne, das macht alles der Desktop Window Manager.

37:42.720 --> 37:50.540
So, und mit dem müssen wir jetzt, mit Direct Composition, müssen wir in unser Fenster malen.

37:53.790 --> 37:55.570
Wohlgemerkt, das hier ist immer noch ein transparentes Fenster.

37:56.030 --> 37:59.970
So, und ich habe keine Ahnung, was diese nächsten paar Dinger machen, aber sie funktionieren.

38:00.210 --> 38:04.170
Die habe ich mir mehr oder weniger eins zu eins hier aus diesem C++ geschwuppert,

38:04.170 --> 38:05.670
äh, ja, doch, aus diesem C++.

38:05.690 --> 38:09.130
Aus dem Artikel übersetzt nach SharpDX.

38:10.010 --> 38:10.190
So.

38:11.870 --> 38:13.810
Und was da jetzt passiert, ist folgendes.

38:14.390 --> 38:19.550
Als erstes muss ich ein Direct Composition Device erstellen, aus meinem DXGE Device.

38:19.750 --> 38:22.810
Warum, weiß nur Microsoft, ich habe keine Ahnung, muss man aber machen.

38:23.510 --> 38:27.790
Als nächstes, und ey, das ist die übelste Magic, also wirklich, ich weiß nicht, was da passiert.

38:28.430 --> 38:35.670
Als nächstes muss ich ein Target erstellen, was ein Direct Composition Target erstellt.

38:35.670 --> 38:41.410
Als nächstes muss ich ein Target erstellen, ähm, was ist denn jetzt mit dem, irgendwie höre ich mich anders an, oder?

38:41.850 --> 38:47.270
Ja, ich glaube, wartet mal, hatte ich gerade einen Wackelkontakt oder so?

38:48.650 --> 38:49.550
Ja, jetzt geht es wieder.

38:51.250 --> 38:54.070
Vielleicht ist mein, vielleicht ist mein Gehirn auch einfach nur kaputt langsam.

38:56.560 --> 39:02.660
Zumindest muss ich jetzt ein Direct Composition Target erstellen, von meinem Fenster.

39:02.660 --> 39:06.440
Also von dem transparenten Fenster, den ihr nicht seht.

39:06.980 --> 39:08.340
Das ist das, was man jetzt hier an der Stelle nicht sieht.

39:09.140 --> 39:13.600
Ähm, ja.

39:14.120 --> 39:19.180
Davon muss ich ein Direct Composition Target erstellen, mit Handle von meiner Windows Form.

39:19.860 --> 39:22.560
Und dem muss ich das Direct Composition Device übergeben.

39:23.100 --> 39:27.600
Danach muss ich, es wird immer abgedreht, ohne Scheiß, ich weiß wirklich nicht, was hier passiert, aber es funktioniert.

39:28.240 --> 39:36.160
Danach muss ich ein Direct Composition Visual erstellen, wo ich dann das Composition Device reinstecke, weil das es wohl irgendwie braucht.

39:36.500 --> 39:38.820
Und danach muss ich sagen, dieses Visual.

39:38.820 --> 39:41.360
Kriegt den Content von meiner Swap Chain.

39:41.660 --> 39:45.220
Dann muss ich sagen, das Root Element ist dann das neue Visual.

39:45.400 --> 39:48.080
Und dann muss ich das Ganze committen auf meinem Composition Device.

39:48.600 --> 39:59.840
Und dann wird alles über den Desktop Window Manager, was ich hier in meiner normalen DirectX Swap Chain rendere, in mein Fenster beim Compositionen reingerendert.

40:00.480 --> 40:00.640
So.

40:02.120 --> 40:03.100
Alter, ja.

40:03.740 --> 40:04.340
Was auch immer.

40:04.580 --> 40:05.540
Ist komplett hier.

40:11.950 --> 40:13.390
Also es ist absolut.

40:14.670 --> 40:15.410
Für den Arsch, ja.

40:15.890 --> 40:17.610
Dass das überhaupt so ein Riesenakt ist.

40:19.070 --> 40:22.890
Aber zumindest ist es der einzige Artikel von Microsoft, den ich gefunden habe, der sich mit diesem Thema beschäftigt.

40:22.930 --> 40:24.350
Und die sagen, so geht's.

40:25.630 --> 40:25.990
Und.

40:28.510 --> 40:29.450
Es geht tatsächlich.

40:29.970 --> 40:30.730
Und es ist schnell.

40:32.190 --> 40:33.310
Es ist wirklich schnell.

40:34.790 --> 40:43.890
Es ist schneller, als dieses ganze Zeug, was man da zum Beispiel in irgendwelchen Cheat Foren findet, die auch Overlays machen wollen.

40:43.990 --> 40:44.650
Das ist so um den Faktor.

40:44.770 --> 40:46.070
20% ungefähr schneller.

40:46.610 --> 40:52.910
Also es ist schneller als Layered Windows mit Client Area gedöhnt und so.

40:53.350 --> 40:54.170
Es ist wirklich schnell.

40:55.290 --> 40:56.450
Und das sieht man ja auch.

41:00.530 --> 41:01.670
Windows ist oft schwarze Magie.

41:01.730 --> 41:03.410
Es ist wirklich komplett schwarze Magie.

41:03.470 --> 41:05.350
Aber es funktioniert an der Stelle.

41:05.410 --> 41:08.610
Und ich bin wirklich froh, dass der ganze Camp funktioniert, weil es ist schnell.

41:08.670 --> 41:10.150
Es ist transparent und es funktioniert.

41:10.390 --> 41:10.850
Man sieht hier.

41:10.910 --> 41:11.910
Guck, ich kann hier durchklicken.

41:12.190 --> 41:13.510
Eigentlich ist es hier das Fenster.

41:13.570 --> 41:14.730
Ist hier das Fenster drumherum.

41:15.010 --> 41:15.730
Ich kann hier durchklicken.

41:16.090 --> 41:16.850
Ohne Probleme hier.

41:21.740 --> 41:23.620
Das einzige, was verdeckt sind die Visual Studio Menüs.

41:23.940 --> 41:24.340
Warum auch immer.

41:24.440 --> 41:25.100
Aber damit kann ich leben.

41:29.340 --> 41:31.220
Immerhin gibt es einen Artikel von Microsoft, das ist richtig.

41:32.080 --> 41:32.440
Immerhin.

41:32.920 --> 41:33.280
Immerhin.

41:33.640 --> 41:33.740
So.

41:35.480 --> 41:40.240
Ja, und als nächstes zeige ich euch, was man machen muss, um das Bild transparent zu kriegen.

41:40.240 --> 41:45.340
Weil wer gedacht hätte, damit ist die größte Hürde genommen, der hat sich wirklich getäuscht.

41:45.420 --> 41:46.720
Aber vorher, Leute, muss ich mal kurz aufs Klo.

41:50.220 --> 41:51.220
Ich mach mal mal einen Text hier.

41:53.600 --> 41:54.800
Afg Klo.

41:54.800 --> 42:12.890
So, ich bin gleich wieder da.

42:13.670 --> 47:40.590
So, da bin ich wieder.

47:41.650 --> 47:43.050
Weiß jemand, wann es losgeht?

47:43.330 --> 47:46.190
Also, man beachte einfach hier da oben diese Überschrift.

47:46.390 --> 47:48.410
Da sieht man, was gerade war.

47:48.790 --> 47:50.250
Oder was da schon losgegangen ist.

47:52.090 --> 47:52.310
So.

47:58.480 --> 47:58.880
Okay.

47:59.700 --> 48:00.380
Weiter geht's.

48:00.700 --> 48:01.660
Ähm, Körbi aus.

48:02.200 --> 48:03.100
Chills der Psoan.

48:05.280 --> 48:05.580
Easy.

48:12.180 --> 48:12.580
Progress.

48:15.180 --> 48:15.420
So.

48:16.420 --> 48:17.920
Also, wo sind wir stehen geblieben?

48:17.920 --> 48:18.300
Genau.

48:18.300 --> 48:19.980
Bei schwarzer Windows-Magie.

48:21.960 --> 48:25.060
Schwarze Windows-Magie hab ich jetzt, äh, genug mich drüber ausgelassen.

48:28.520 --> 48:29.980
Bob Ross können wir auch noch hinzufügen.

48:34.740 --> 48:35.220
Gut.

48:35.660 --> 48:41.840
Jetzt hab ich euch erklärt, wie man es schafft, quasi sein DirectX-Zeug in sein Window zu rendern.

48:41.900 --> 48:43.640
Das ist ja quasi das, was hier beschrieben ist.

48:43.720 --> 48:46.780
Dazu gibt es immerhin noch einen Artikel.

48:47.100 --> 48:52.420
Zu dem anderen, was ich euch jetzt zeige, wie ich das Bild überhaupt transparent gekriegt hab, gibt's kein Artikel.

48:52.420 --> 48:54.480
Aber ich vermute mal, jeder, der sowas öfters macht.

48:54.640 --> 48:58.040
Und dem wird's wahrscheinlich halbwegs klar sein, wo das Problem gewesen ist.

49:02.580 --> 49:04.720
In der Pause des 3DS-Unboxes mit dem Friseur.

49:05.160 --> 49:05.960
Oh, das war noch Zeit.

49:06.120 --> 49:07.820
Na, das war noch, das ist schon ewig her.

49:07.860 --> 49:09.480
Das war ja 2011 oder so.

49:10.520 --> 49:11.500
Ach, Pogers.

49:17.540 --> 49:18.700
Okay, weiter geht's.

49:18.900 --> 49:21.300
So, und jetzt kommt der nächste Knackpunkt.

49:22.180 --> 49:29.760
Das Bild, was wir von unserem animierten GIF auslesen, also aktuell ist es nur das erste Bild, aber trifft für alle weiteren Bilder natürlich auch zu.

49:31.020 --> 49:33.220
Das hat einen Alpha-Channel.

49:33.340 --> 49:38.100
Also sprich, das hat eine Anzeige, äh, das, das hat transparente Farbe, hier, ne?

49:38.800 --> 49:45.840
Außen drumherum sieht man ja, weil das Bild ist transparent, aber das Ding wurde die ganze Zeit nicht transparent gerendert.

49:47.840 --> 49:55.180
Bis ich dann auf die glorreiche Idee gekommen bin, mir mal zu überlegen, warum das Ganze nicht funktioniert.

49:55.580 --> 50:01.180
Ähm, erst mal hab ich wild gesucht, Google und sonst was, so, wie malt man ordentlich Bilder in Direct2D?

50:02.000 --> 50:03.220
Aber, ähm.

50:03.340 --> 50:09.180
Da gibt's zwar Anleitungen zu, aber so wirklich eine Beschreibung, wie ich transparente Bilder male, gibt's irgendwie nicht.

50:09.980 --> 50:15.220
Und das liegt einfach daran, dass Bilder, die den korrekten Alpha-Channel haben, einfach standardmäßig transparent sind.

50:15.600 --> 50:32.880
Problem ist bloß, und deswegen, jetzt nochmal zurückzukommen auf diese Geschichte hier, Problem ist nur, dass natürlich mein GIF, also der Frame von, äh, der erste Frame von diesem GIF, also das erste Bild von der GIF-Animation, ähm, das ist zwar im richtigen Farbformat,

50:32.880 --> 50:46.100
das sieht man ja auch, weil die Farben sind richtig, also sprich, das ist zwar im Format, äh, BGRA, allerdings, es ist Alpha-Mode quasi straight und nicht pre-multiplied.

50:46.540 --> 50:53.440
Und deswegen hat ich die ganze Zeit hier, wo ich, jetzt hab ich mich kaputt gesucht, war der Hintergrund weiß und nicht transparent.

50:54.100 --> 50:59.020
Bis ich dann auf die glorreiche Idee gekommen bin, ich muss das Ganze einfach multiplien und dann geht's.

50:59.240 --> 51:01.760
Und wie man das macht, zeige ich euch jetzt mal schnell.

51:02.880 --> 51:11.960
Und danach fangen wir an, neue Sachen zu basteln, beziehungsweise das hier aufzuräumen und unser FFM-Pack-Zeug, Threadsicher, in der eigenen Klasse zu verpacken.

51:13.180 --> 51:15.140
So, also jetzt zeige ich euch, wie man das Ganze macht.

51:15.200 --> 51:17.320
Hier ist ganz viel Geschiss drin, was man eigentlich gar nicht mehr braucht.

51:17.580 --> 51:22.140
Ich hab übrigens meinen komischen FPS-Counter, hab ich weggeschmissen, wir machen das FPS hier in der, in der Render-Loop drinne.

51:22.700 --> 51:27.900
Ähm, das ist im Prinzip noch das gleiche hässliche Kram vom letzten Mal, nix Neues dazugekommen.

51:28.600 --> 51:35.840
Äh, FFM-Pack, bla, GIF einlesen, äh, weiter.

51:35.860 --> 51:40.280
Weiteres Rennen hab ich übersprungen, wir lesen, lesen bloß den ersten, wir lesen bloß das erste Bild ein.

51:44.150 --> 51:46.370
Dann hab ich hier noch irgendwas, das brauchen wir gar nicht mehr, oder?

51:47.930 --> 51:48.290
Loll.

51:49.330 --> 51:53.690
Also, wie gesagt, der Code ist jetzt nicht mehr 400 Zeilen lang, der ist danach wahrscheinlich noch 150 oder so.

51:54.450 --> 51:58.810
Ähm, den Scheiß können wir auch rausmachen, da wollte ich gucken, ob das auch im richtigen Farbformat ist.

51:59.330 --> 52:04.510
Brander, gibt's da noch? Der Brander, der Bitmap-Brander, da brauchen wir auch alles gar nicht mehr eigentlich.

52:04.510 --> 52:07.570
Ähm, ist eigentlich komplett.

52:08.770 --> 52:10.710
Overrated, den können wir schon mal löschen.

52:10.950 --> 52:11.550
Der Brander.

52:14.150 --> 52:19.190
Der Name ist so geil, ey, der ist mir nichts eingefallen, der Brander, der Brander-Renderer.

52:24.660 --> 52:32.700
Okay, und jetzt kommt der Knackpunkt, wie kriegt man das Bild von, ähm, straight zu pre-multiplied.

52:33.080 --> 52:38.660
Und da gibt es was schönes, also entweder macht man das von Hand, das ist, äh, auch kein Ding.

52:38.660 --> 52:42.660
Da muss man halt jeden Pixel mal dem Alpha-Value nehmen, durch 205.

52:44.180 --> 52:46.080
Dann hat man das Ganze pre-multiplied.

52:46.420 --> 52:51.060
Aber, da gibt es schon was Fertiges in DirectX, und zwar gibt es Effects.

52:51.680 --> 52:53.820
Und ein Effect ist pre-multiply.

52:58.190 --> 53:04.790
Und pre-multiply funktioniert relativ einfach, legt man als Effect an, und als Input sagt man einfach hier, dieses Bitmap.

53:05.290 --> 53:13.050
Und dann macht er das für einen, da wandelt er quasi den Straight-Alpha-Channel in ein pre-multiplied.

53:13.750 --> 53:16.750
Über alle Bytes von jeweils.

53:16.750 --> 53:18.750
Und dann schaltet er den Pixel um.

53:18.750 --> 53:20.750
Und danach habe ich noch was gemacht.

53:20.750 --> 53:26.750
Danach skaliere ich das Bild noch, ähm, hoch auf die jeweilige Fensterbreite.

53:26.750 --> 53:28.750
Mit dem richtigen Seitenverhältnis.

53:28.750 --> 53:30.750
Das ist gar nicht so kompliziert.

53:30.750 --> 53:38.570
Das ist, hier, hier kriege ich raus, Scale 1, Scale 2, warum heißt das so?

53:38.570 --> 53:42.720
Weil, man weiß das nicht genau.

53:42.720 --> 53:44.720
Die Dinger können wir dann auch mal ordentlich nennen.

53:44.720 --> 53:46.720
Nennen wir mal, nennen wir, nennen wir das jetzt schon.

53:46.720 --> 53:51.240
Also, das ist der Effekt für die Transparenz.

53:51.240 --> 53:53.240
Und das hier.

53:53.240 --> 53:55.240
Das hier ist der Scale-Effekt.

53:55.240 --> 54:00.240
So, und ich gehe mal davon aus, dass er das halt ziemlich effizient in Hardware auf der Grafikkarte macht.

54:00.240 --> 54:02.240
Hier unten habe ich nochmal Scales.

54:02.240 --> 54:06.240
Die brauche ich aber wahrscheinlich nicht mehr.

54:06.240 --> 54:16.940
So, ähm, und hier passiert jetzt das, was ich euch eben erklärt habe mit dem Bild.

54:16.940 --> 54:21.940
Der schreibt das, äh, Alpha, den Alpha-Channel um, von Straight zu pre-multiplied.

54:21.940 --> 54:26.940
Und skaliert das Ganze auf die, äh, also in der passenden, ähm, passenden Seitenverhältnis auf das Fenster hoch.

54:26.940 --> 54:30.940
Das hat auch ewig gedauert, bis ich das rausgekriegt habe letztendlich.

54:30.940 --> 54:33.940
Das steht in keinem Guide und in sonst nichts drinnen.

54:33.940 --> 54:35.940
Ähm, nirgendwo.

54:35.940 --> 54:37.940
Kannst, kannst du klicken.

54:37.940 --> 54:39.940
Aber es ist im Prinzip ganz logisch, wenn man sich das überlegt.

54:39.940 --> 54:42.940
Ich habe nämlich die ganze Zeit versucht, sowas hier zu machen.

54:42.940 --> 54:46.940
Ich wollte nämlich sagen, alter, mein Bitmap ist nicht pre-multiplied.

54:46.940 --> 54:51.940
Und wenn man das probiert, dann crasht das Ganze, wie man hier sieht.

54:51.940 --> 54:53.940
Er macht nichts im Endeffekt.

54:53.940 --> 54:55.940
Weil, eben in meiner Swap-Chain gar nichts passiert.

54:55.940 --> 54:57.940
In der Swap-Chain gar kein Straight erlaubt ist.

54:57.940 --> 55:02.940
Und ich habe wirklich ewig rumprobiert, bis ich dann mal so den Geistesblitz irgendwo hatte.

55:02.940 --> 55:05.940
Ey, wandle doch einfach mal dein Straight in pre-multiplied um.

55:05.940 --> 55:07.940
Und seitdem funktioniert das Ganze.

55:07.940 --> 55:09.940
Und wird auch noch schön skaliert.

55:09.940 --> 55:13.940
Und ist dementsprechend, weil es wahrscheinlich auf der GPU läuft, auch relativ zackig.

55:13.940 --> 55:14.940
Ne?

55:14.940 --> 55:17.640
So.

55:17.640 --> 55:22.200
Und dann kommt im Prinzip das, was wir das letzte Mal auch gemacht haben.

55:22.200 --> 55:27.200
Wir, ähm, das ist, das ist übrigens ganz wichtig, wenn man transparente Fenster malen will.

55:27.200 --> 55:29.200
Dann, ähm, muss man hier sagen.

55:29.200 --> 55:32.200
Äh, man cleart den Background mit 0.

55:32.200 --> 55:34.200
Wenn man den, wenn man das nämlich nicht macht.

55:34.200 --> 55:41.200
Wenn man zum Beispiel irgendwie sagt, keine Ahnung, äh, color, so, blue oder so.

55:41.200 --> 55:43.200
Dann ist der Hintergrund halt blau.

55:43.200 --> 55:44.200
Oder halt hellblau.

55:44.200 --> 55:48.200
Oder, oder, keine Ahnung, oder, indian red oder sowas.

55:48.200 --> 55:49.200
Ne?

55:49.200 --> 55:51.200
Aber das, das will man ja nicht.

55:51.200 --> 55:54.200
Das heißt, man muss hier sagen, clear 0.

55:54.200 --> 55:58.200
Und dann ist nämlich, dann ist das quasi halt durchsichtig, der Hintergrund.

55:58.200 --> 55:59.200
So.

55:59.200 --> 56:02.200
Und da ist ganz viel geschwummelt drin, was man hier nicht braucht.

56:02.200 --> 56:07.200
Und das hier ist der eigentliche, äh, Kniff, wie man dann den ganzen Krempel rendert, den

56:07.200 --> 56:09.200
man hier oben zusammengebastelt hat.

56:09.200 --> 56:14.200
Wir haben ja hier das Bild mit dem, mit den RGB-Werten vom GIF drinne.

56:14.200 --> 56:18.200
Dann haben wir hier die Effekte, die quasi das premultiplyen und danach skalieren.

56:18.200 --> 56:21.200
Und hier kann man dann quasi sagen, mal das Bild.

56:21.200 --> 56:24.200
Als Output nimmst du das Bild von den Effekten.

56:24.200 --> 56:26.200
Und dann kann man es auch ein bisschen verschieben.

56:26.200 --> 56:27.200
Das müssen wir übrigens gleich machen.

56:27.200 --> 56:31.200
Weil das Bild ist, äh, werden wir gleich sehen, wenn wir das Bild animieren.

56:31.200 --> 56:34.200
Das Bild ist dann zwischenzeitlich ein bisschen abgeschnitten.

56:34.200 --> 56:38.200
Das ist dann, das ist ein bisschen, äh, nicht so, nicht so praktisch, ne?

56:38.200 --> 56:41.200
Das ist dann hier oben abgeschnitten und links und rechts ein bisschen abgeschnitten.

56:41.200 --> 56:45.200
Deswegen müssen wir hier sagen, ähm, dass wir das Ganze ein bisschen tiefer, tiefer setzen.

56:45.200 --> 56:47.200
Aber das machen wir dann, wenn es soweit ist.

56:47.200 --> 56:50.200
Guck, ich zeig's euch mal mit den FPS zum Beispiel.

56:50.200 --> 56:54.200
Wenn ich die direkt oben in der linken Ecke male, dann ist ein bisschen was abgeschnitten.

56:54.200 --> 56:56.200
Warum, bin ich mir noch nicht so ganz sicher.

56:57.200 --> 57:02.200
So, und das war's im Prinzip schon.

57:02.200 --> 57:10.200
Ähm, und da hab ich gestern quasi fast den ganzen Tag noch dran rumprobiert, bis ich das auf die Reihe gekriegt hab.

57:10.200 --> 57:14.200
Es ist wirklich, das sieht jetzt hier relativ simpel aus, aber es ist voll wirklich übelst kompliziert.

57:14.200 --> 57:17.200
So, und jetzt werden wir den ganzen Scheiß ein bisschen aufräumen.

57:17.200 --> 57:24.200
Und einen ordentlichen GIF-Decoder basteln mit FFmpeg, der nicht hier quasi alles, alles versaut.

57:24.200 --> 57:26.200
Wir löschen erstmal alle möglichen Dinge, die wir nicht mehr brauchen.

57:26.200 --> 57:32.220
Weil ich mein, offensichtlich, es läuft ja gerade, es läuft ja gerade.

57:32.220 --> 57:37.220
Also sprich, warum, also brauchen wir ja anscheinend von dem ganzen Kram nix, der hier drinne steht.

57:37.220 --> 57:43.900
Und das ganze Kommentarzeug rauslöschen.

57:43.900 --> 57:52.730
So, mein Magic-Hinweis kann ich auch löschen.

57:52.730 --> 57:59.730
Debug-Mode hab ich weg.

57:59.730 --> 58:04.040
Den ganzen Mist hier oben kann auch weg.

58:04.040 --> 58:08.550
Das kann auch weg.

58:08.550 --> 58:12.550
Ähm, das brauchen wir auch alles nicht mehr.

58:15.050 --> 58:17.050
Das hier brauchen wir noch.

58:17.050 --> 58:19.050
Sonst geht's nämlich nicht.

58:19.050 --> 58:24.050
So, siehste, allein durch das Löschen sind wir jetzt schon mal 100 Zeilen Code weniger.

58:24.050 --> 58:28.050
Jetzt werden wir noch dieses ganze FFmpeg-Zeugs auslagern.

58:28.050 --> 58:32.050
Und, ähm, ich überleg grad, wo wir da am besten mit anfangen.

58:32.050 --> 58:39.050
Also erstmal sollten wir mal gucken, ob das hier unten schon halbwegs sinnig ist.

58:39.050 --> 58:42.050
Wir zählen am Anfang unsere FPS, okay.

58:42.050 --> 58:44.050
Wir skalieren.

58:44.050 --> 58:47.490
Copy for Memory für das Bitmap.

58:47.490 --> 58:50.490
Das müssen wir dann später in der Schleife machen.

58:50.490 --> 59:00.870
Also, sprich, das müssen wir später, müssen wir das hier machen, weil wir updaten ja pro Durchgang unser Bild.

59:00.870 --> 59:08.680
Ey, jetzt ist es nicht mehr skaliert.

59:08.680 --> 59:11.680
Hab ich irgendwas, hab ich irgendwas zu viel gelöscht?

59:11.680 --> 59:12.680
MonkaS?

59:12.680 --> 59:21.700
Ach nee, ha, ich mach das andere auch noch außerhalb von der, ups, außerhalb von der Schleife.

59:21.700 --> 59:29.080
Ja, das ist kein Wunder, dass das jetzt noch nicht, äh, äh.

59:29.080 --> 59:35.720
Moment, was hab ich jetzt gemacht?

59:35.720 --> 59:40.570
Was hab ich denn jetzt gemacht?

59:40.570 --> 59:43.570
Ich hab doch gar nichts geändert.

59:43.570 --> 59:45.570
Warum ist das Bild jetzt kleiner?

59:45.570 --> 59:47.570
Ah, ich weiß warum.

59:47.570 --> 59:48.570
Lol.

59:48.570 --> 59:52.010
Weil ich die Größe gelöscht hab.

59:52.010 --> 59:54.010
Was natürlich Blödsinn ist.

59:54.010 --> 59:59.160
Die sollte ich mal lieber da lassen.

59:59.160 --> 01:00:02.160
So.

01:00:02.160 --> 01:00:04.160
Jetzt wird er ordentlich groß.

01:00:04.160 --> 01:00:07.160
Ja gut, manchmal muss man sich auch nicht wundern, ne.

01:00:07.160 --> 01:00:08.160
Oh.

01:00:08.160 --> 01:00:11.160
Höhe, Breite.

01:00:11.160 --> 01:00:13.160
Alles gut.

01:00:13.160 --> 01:00:19.160
So, und ich würde sagen, wir fangen jetzt mal damit an, das ganze FFmpeg-Zeug auszulagern in eine eigene Klasse.

01:00:19.160 --> 01:00:23.160
So, den Max-FPS, äh, FPS-Counter können wir löschen, den brauchen wir nicht mehr.

01:00:23.160 --> 01:00:26.160
Wir counten das jetzt in der Schleife drin.

01:00:26.160 --> 01:00:28.160
Es ist relativ einfach, ja.

01:00:28.160 --> 01:00:38.180
Ähm, wir gucken, wann wir angefangen haben, ähm, von der Zeit her.

01:00:38.180 --> 01:00:40.180
Dann gucken wir, was für eine Zeit jetzt ist.

01:00:40.180 --> 01:00:50.180
Und dann gucken wir quasi, wenn quasi, also wenn jetzt größer ist als Startzeit plus eine Sekunde.

01:00:50.180 --> 01:00:55.520
Also, dann ist halt eine Sekunde rum.

01:00:55.520 --> 01:01:00.520
Dann gucken wir, wie viel FPS wir gezählt haben, schreiben es in FPS und setzen die Framestate auf 0.

01:01:00.520 --> 01:01:10.480
Also, eigentlich recht einfach.

01:01:10.480 --> 01:01:29.600
Ja, TeraFox, ich sage ja nicht, dass es hier nicht nur Optimierungspotential gibt.

01:01:29.600 --> 01:01:30.600
Genau.

01:01:30.600 --> 01:01:32.600
So, ähm, jetzt weiter im Text.

01:01:32.600 --> 01:01:34.600
Wir machen jetzt eine eigene Klasse für den FFmpeg.

01:01:34.600 --> 01:01:36.600
Für den Gif-Decoder.

01:01:36.600 --> 01:01:38.600
Dass es hier ein bisschen aufgeräumt ist.

01:01:38.600 --> 01:01:49.360
So, das Ding nennen wir auch ganz billig Gif-Decoder.

01:01:49.360 --> 01:01:51.360
Das ist noch übrig.

01:01:51.360 --> 01:01:55.210
The fuck?

01:01:55.210 --> 01:01:57.210
Wir schreiben das jetzt einfach.

01:01:57.210 --> 01:01:59.210
Gif-Decoder.

01:01:59.210 --> 01:02:03.210
Do you want to check the file and replace it?

01:02:03.210 --> 01:02:06.210
Replace it? Yes.

01:02:06.210 --> 01:02:08.210
Schreckt.

01:02:08.210 --> 01:02:10.210
Okay, ähm.

01:02:10.210 --> 01:02:14.610
Also, wir machen jetzt einen Gif-Decoder.

01:02:14.610 --> 01:02:25.610
Und was das Ding auf jeden Fall braucht, ist den Dateinamen von der Datei, die wir wiedergeben wollen.

01:02:25.610 --> 01:02:32.610
Ich meine, wie soll das Ding was decoden können aus einer Datei, wenn es nicht weiß, ob es decoden soll?

01:02:32.610 --> 01:02:35.610
Also, irgendwie logisch.

01:02:35.610 --> 01:02:38.610
Wenn er nicht weiß, wo das Gif ist, kann er ja auch schlecht.

01:02:38.610 --> 01:02:40.610
Das seht ihr ja auch hier.

01:02:40.610 --> 01:02:43.610
Also, ich muss ja irgendwo das Gif angeben, wo es liegt.

01:02:43.610 --> 01:02:50.610
So, also wir brauchen auf jeden Fall für unseren Gif-Decoder, brauchen wir den Pfad, wo das Gif liegt.

01:02:50.610 --> 01:02:54.610
Und wir machen mal so eine Variable, die nennen wir irgendwie Loop.

01:02:54.610 --> 01:03:03.310
Und die ist standardmäßig, keine Ahnung, also sprich, der soll das Gif in Endlosschleife basteln.

01:03:03.310 --> 01:03:08.310
Und wir werden es jetzt ganz am Anfang, wir werden am Anfang keine Sleeps oder sonst was einbauen.

01:03:08.310 --> 01:03:11.310
Wir gucken einfach mal, wie schnell man das Gif...

01:03:11.310 --> 01:03:16.310
Das Gif, wie gesagt, mein Hirn ist schon komplett Matsch heute.

01:03:16.310 --> 01:03:21.310
Wie schnell man das Gif quasi rendern kann, wie oft wir das in der Sekunde hinkriegen.

01:03:21.310 --> 01:03:25.310
In Endlosschleife, also in Animationsschleife.

01:03:25.310 --> 01:03:28.310
Von Anfang bis Ende, von Ende bis Anfang, von Anfang bis Ende.

01:03:28.310 --> 01:03:37.100
Also, wie oft wir einfach das Gif loopen können pro Sekunde. Mal schauen.

01:03:37.100 --> 01:03:43.100
Genau, so, jetzt gruppieren wir uns mal den ganzen Krempel, den wir hier quasi in unserer Render-Funktion drin hatten.

01:03:43.100 --> 01:03:45.100
Gruppieren wir uns jetzt erstmal in unseren Gif-Decoder.

01:03:45.100 --> 01:03:58.100
Weil, es sollte später so sein, dass die ganze Windows-Klasse, die ganze Form-Klasse überhaupt nichts mehr von FFmpeg weiß und wissen muss.

01:03:58.100 --> 01:04:00.100
Das ist eigentlich Sinn und Zweck der Sache.

01:04:00.100 --> 01:04:02.100
Alles mit FFmpeg machen wir hier drinnen.

01:04:02.100 --> 01:04:13.220
Achso, unsave.

01:04:15.220 --> 01:04:17.220
Das Ganze muss unsave sein.

01:04:17.220 --> 01:04:21.790
Und das unsave können wir dann hier wieder rausmachen, wenn wir fertig sind.

01:04:21.790 --> 01:04:24.790
Weil unsave, weil Pointer und Gedöns.

01:04:25.790 --> 01:04:27.790
So.

01:04:27.790 --> 01:04:31.790
Dann brauchen wir jetzt den Initialisierungs-Code von hier.

01:04:31.790 --> 01:04:32.790
Also Format, Kontext.

01:04:32.790 --> 01:04:34.790
Wir gruppieren uns das jetzt einfach mal rüber.

01:04:34.790 --> 01:04:37.790
Jetzt kommt ein Constructor von unserem Gif-Decoder rein.

01:04:37.790 --> 01:04:39.790
Das ist ja im Prinzip ganz logisch.

01:04:39.790 --> 01:04:43.790
Wenn das Ding angelegt wird, wenn irgendjemand den Gif-Decoder anlegt, dann lese ich die Datei ein.

01:04:43.790 --> 01:04:45.790
Und lege so die Sachen an, die ich brauche.

01:04:45.790 --> 01:04:51.790
Damit ich, wenn man Play drückt oder wenn man abspielen will das Gif, dass schon alles geladen ist.

01:04:51.790 --> 01:04:52.790
So.

01:04:52.790 --> 01:04:54.790
Dann nehmen wir das hier.

01:04:54.790 --> 01:04:56.790
Das müssen wir dann mal ein bisschen anpassen.

01:04:56.790 --> 01:05:02.420
Weil das ist jetzt kein Hardcoded-Fart mehr, sondern der Fart, den ich übergebe.

01:05:02.420 --> 01:05:04.420
So viel Setup für eine von außen einfache Sache.

01:05:04.420 --> 01:05:05.420
Richtig.

01:05:05.420 --> 01:05:08.820
Richtig.

01:05:08.820 --> 01:05:11.820
Es sieht super simpel aus, ne?

01:05:11.820 --> 01:05:16.820
Ein paar Gifs abzuspielen quasi als Overlay über allen anderen Fenstern.

01:05:16.820 --> 01:05:20.820
Wenn irgendeiner sagt, ey, zeig mal ein Gif an quasi als Overlay.

01:05:20.820 --> 01:05:22.820
Da denkt man doch, ey, das ist kein Akt.

01:05:22.820 --> 01:05:24.820
Wahrscheinlich gibt es auch ein paar Programme dafür, wie man das machen kann.

01:05:24.820 --> 01:05:27.820
Es gibt ja viele Programme, die quasi topmost Windows setzen können.

01:05:27.820 --> 01:05:30.820
Und auch noch manche Fenster transparent machen können und so.

01:05:30.820 --> 01:05:34.820
Aber das wirklich richtig zu machen, ordentlich und schnell zu machen.

01:05:34.820 --> 01:05:36.820
Es ist tatsächlich gar nicht so ohne.

01:05:36.820 --> 01:05:39.820
Würde man gar nicht denken, ja.

01:05:39.820 --> 01:05:40.820
So.

01:05:40.820 --> 01:05:45.820
Wir kopieren uns unseren ganzen FFM-Code, FFM-Pack-Code rüber, den wir schon das letzte Mal gebastelt haben.

01:05:45.820 --> 01:05:47.820
Von dem wir wissen, dass er funktioniert.

01:05:47.820 --> 01:05:50.820
Hier lesen wir ein Dateiformat.

01:05:50.820 --> 01:05:51.820
Also sprich, was es ist.

01:05:51.820 --> 01:05:52.820
Wie viele Frames es hat.

01:05:52.820 --> 01:05:53.820
Also wie viel FPS es hat.

01:05:53.820 --> 01:05:55.820
Wie lang es ist und sowas.

01:05:55.820 --> 01:05:57.820
Dann brauchen wir den.

01:05:57.820 --> 01:05:59.820
Ich krempel hier noch.

01:05:59.820 --> 01:06:02.820
Mal gucken, bis wann wir alles in Constructor packen.

01:06:02.820 --> 01:06:04.820
Und ab wann in die Play-Methode.

01:06:04.820 --> 01:06:05.820
Oder wie nennen wir sie?

01:06:05.820 --> 01:06:07.820
Decode nennen wir sie.

01:06:07.820 --> 01:06:08.820
Wir nennen sie nicht Play.

01:06:08.820 --> 01:06:18.400
Play wäre für den Decoder ziemlich blöd.

01:06:18.400 --> 01:06:19.400
Find Decoder.

01:06:19.400 --> 01:06:20.400
Decoder. Blah.

01:06:20.400 --> 01:06:23.550
Package.

01:06:23.550 --> 01:06:25.550
So. Mehr brauchen wir erstmal nicht.

01:06:25.550 --> 01:06:33.190
Jetzt ist der Kram hier alles initialisiert.

01:06:33.190 --> 01:06:35.190
Packages und Stream werfe ich weg.

01:06:35.190 --> 01:06:37.190
Das machen wir später.

01:06:37.190 --> 01:06:39.190
Legen wir das neu an.

01:06:39.190 --> 01:06:41.190
Weil das brauchen wir bloß in der Methode, wo wir dann auch

01:06:41.190 --> 01:06:43.190
unser GIF rendern.

01:06:43.190 --> 01:06:44.190
Unser GIF-Decode.

01:06:44.190 --> 01:06:46.190
Die brauchen wir nicht global.

01:06:46.190 --> 01:06:49.190
So und jetzt können wir eigentlich schon anfangen das Ganze zu rendern.

01:06:49.190 --> 01:06:51.190
Stream.

01:06:51.190 --> 01:06:56.760
Ups.

01:06:56.760 --> 01:06:58.760
Habe ich den aus Versehen gelöscht.

01:06:58.760 --> 01:07:04.000
Habe ich aus Versehen gelöscht.

01:07:04.000 --> 01:07:06.000
Wollte ich gar nicht.

01:07:06.000 --> 01:07:08.000
Ich wollte Package löschen.

01:07:08.000 --> 01:07:11.000
Package und Frame löschen und nicht Stream.

01:07:11.000 --> 01:07:12.000
So.

01:07:12.000 --> 01:07:13.000
Okay.

01:07:13.000 --> 01:07:15.000
Können wir das hier irgendwie ein bisschen schöner schreiben?

01:07:15.000 --> 01:07:16.000
So.

01:07:16.000 --> 01:07:22.470
So.

01:07:22.470 --> 01:07:30.220
So.

01:07:30.220 --> 01:07:31.220
So.

01:07:31.220 --> 01:07:32.220
So.

01:07:32.220 --> 01:07:33.220
So.

01:07:33.220 --> 01:07:34.220
Für die letzten drei Welten.

01:07:34.220 --> 01:07:35.220
Okay.

01:07:35.220 --> 01:07:36.220
Ich versuche immer so die Sachen immer so die Logik zusammen gehören.

01:07:36.220 --> 01:07:37.220
So eine Block stehen zu lassen.

01:07:37.220 --> 01:07:38.220
Eine Leerzahl dazwischen zu machen.

01:07:38.220 --> 01:07:39.220
So.

01:07:39.220 --> 01:07:41.220
So ein bisschen persönliche Ansicht, wie es einem am besten gefällt.

01:07:41.220 --> 01:07:42.220
So.

01:07:42.220 --> 01:07:43.220
Und jetzt braucht man als nächstes.

01:07:43.220 --> 01:07:45.220
Also wir machen uns jetzt.

01:07:45.220 --> 01:07:47.220
Ich zeige euch jetzt mal wie man das ganze Thread sicher macht.

01:07:47.220 --> 01:07:50.220
Ich habe da nämlich schon so eine Idee wie wir das machen.

01:07:50.220 --> 01:07:55.660
Das heißt an der Stelle legen wir jetzt einen neuen GIF-Decoder an.

01:07:55.660 --> 01:07:58.660
Und übergeben dem mal einen hardcoded FAD wieder.

01:07:58.660 --> 01:07:59.660
Und zwar.

01:07:59.660 --> 01:08:00.660
Das nehmen wir den mal.

01:08:00.660 --> 01:08:04.860
Was nehmen wir denn mal?

01:08:08.360 --> 01:08:09.400
Komm, wir nehmen, wir nehmen.

01:08:09.460 --> 01:08:10.740
Wir nehmen wieder den Papagei.

01:08:10.800 --> 01:08:11.720
Der Papagei ist schon okay.

01:08:19.340 --> 01:08:23.800
Mit dem Dateipfad im Constructor musst du für jede Datei eine eigene Instanz erstellen.

01:08:23.880 --> 01:08:25.900
Ja, das will ich aber auch so.

01:08:31.620 --> 01:08:32.540
So, ähm.

01:08:33.800 --> 01:08:34.240
Decoder.

01:08:34.540 --> 01:08:36.160
So, jetzt brauchen wir sowas wie.

01:08:37.800 --> 01:08:39.160
Wir brauchen ein Task.

01:08:40.440 --> 01:08:44.180
Damit wir das Ganze quasi in einem eigenen Platz laufen lassen können, das decoden.

01:08:44.360 --> 01:08:45.240
Müssen wir ja letztendlich.

01:08:45.240 --> 01:08:48.620
Wir wollen ja unser Gui-Zeug nicht blocken, was nicht unbedingt sein muss.

01:08:49.920 --> 01:08:50.320
Ähm.

01:08:50.800 --> 01:08:52.000
So, dann machen wir eine Methode.

01:08:53.240 --> 01:08:54.040
Ich kann nicht schreiben.

01:08:54.920 --> 01:08:56.080
Irgendwie decode.

01:08:56.180 --> 01:08:56.800
Ne, ähm.

01:08:57.220 --> 01:08:58.620
Wir nennen das Start.

01:08:59.460 --> 01:09:01.100
Oh, ich hab eine Idee.

01:09:01.540 --> 01:09:02.780
Wir machen das jetzt richtig pro.

01:09:02.940 --> 01:09:04.000
Wir machen das jetzt richtig pro.

01:09:04.100 --> 01:09:04.580
Passt mal auf.

01:09:05.260 --> 01:09:06.440
Jetzt zeige ich euch mal was.

01:09:06.520 --> 01:09:10.160
Jetzt kommt hier wirklich High IQ Progress Skills.

01:09:10.500 --> 01:09:13.180
Also wir machen eine Startmethode.

01:09:13.500 --> 01:09:14.940
Vorher sagen wir uns im Konstrukt noch.

01:09:15.240 --> 01:09:18.560
Ähm, Task, irgendwie, äh, New Task.

01:09:18.680 --> 01:09:20.900
Und dann brauchen wir noch eine Methode, die der Task ausführt.

01:09:21.340 --> 01:09:23.680
Und das wird die Methode Decode.

01:09:24.940 --> 01:09:25.860
Methode Decode.

01:09:25.920 --> 01:09:27.460
Werden wir jetzt gleich nochmal einfügen lassen.

01:09:28.400 --> 01:09:28.600
So.

01:09:29.780 --> 01:09:30.220
Wunderbar.

01:09:30.780 --> 01:09:35.000
Und in Start machen wir nichts anderes wie das Task, äh, Start.

01:09:36.300 --> 01:09:37.220
Soweit, so gut.

01:09:37.400 --> 01:09:38.320
Erstmal relativ einfach.

01:09:38.740 --> 01:09:40.280
So, und jetzt, jetzt machen wir Trick 17.

01:09:41.160 --> 01:09:41.980
Jetzt machen wir Trick 17.

01:09:43.520 --> 01:09:43.960
Ähm.

01:09:45.240 --> 01:09:47.800
Ich, wir, wir müssen, wir müssen danach nochmal gucken.

01:09:47.800 --> 01:09:55.860
Ich hab nämlich im Hinterkopf, dass es irgendwie mit C-Sharp, beziehungsweise mit irgendwie einem der letzten .NET Updates, was gab, um das noch schöner zu machen.

01:09:55.960 --> 01:09:57.500
Vielleicht weiß da ja einer was von euch.

01:09:57.620 --> 01:10:00.600
Und zwar, von der Idee her, machen wir das jetzt so.

01:10:00.660 --> 01:10:04.760
Wir haben ja hier einmal unseren, nennen wir es mal GUI Thread.

01:10:05.180 --> 01:10:07.100
Also sprich das Ding, wo DirectX drinnen läuft.

01:10:08.280 --> 01:10:10.000
Haben wir hier unser DirectX Zeug.

01:10:10.900 --> 01:10:15.140
Und das hier, das Decode von dem GIF, läuft in einem separaten Thread.

01:10:15.140 --> 01:10:15.200
Okay.

01:10:15.240 --> 01:10:21.160
Und jetzt ist es ja so, ich muss ja irgendwie, dieses, das, ja, ich mach das gerne.

01:10:21.300 --> 01:10:27.620
Es gibt Leute, die machen dann so Dinger hier wie, äh, Private, äh, Blub gleich 1, so, so Dinger, ja.

01:10:28.660 --> 01:10:31.160
Also, so Dinger machen viele gerne.

01:10:32.920 --> 01:10:44.260
Aber ich mag ehrlich gesagt, äh, das lieber, wenn meine Klassendinger quasi meine Instanzvariablen halt nicht unterstrich haben und ich jedes Mal ein This davor schreibe.

01:10:44.360 --> 01:10:45.160
Das ist komplett.

01:10:45.240 --> 01:10:45.820
Geschmackssache.

01:10:45.900 --> 01:10:46.800
Kann jeder machen, wie er will.

01:10:48.860 --> 01:10:52.680
Und, ähm, ein Task ist nicht zwangsläufig ein neuer Thread.

01:10:52.820 --> 01:10:54.960
Das stimmt, aber in der Regel ist das ein neuer Thread.

01:10:55.080 --> 01:10:58.960
Und zwar im Standard Threadpool, den es halt so gibt.

01:10:59.440 --> 01:11:05.300
Und es sei denn, man macht den Task mit Long Running, dann ist es ein eigenständiger Thread.

01:11:05.580 --> 01:11:08.780
Ansonsten kann es, ansonsten ist es ein Task in der Regel, aber ein anderer neuer Thread.

01:11:11.480 --> 01:11:12.220
MI Int.

01:11:12.300 --> 01:11:15.140
Ja, okay, man kann es natürlich immer noch weiter, weiter versauen, ja.

01:11:19.800 --> 01:11:20.960
Ist auch eine Geschmackssache.

01:11:21.000 --> 01:11:32.300
Äh, in welchem Fall ist denn ein neuer Task, in welchem Fall ist denn ein Task kein neuer Thread?

01:11:34.120 --> 01:11:36.600
Mir fällt jetzt da gar nicht so viel ein, ehrlich gesagt.

01:11:39.040 --> 01:11:41.100
Das muss ich jetzt mal Backup mit ein paar Beispielen.

01:11:43.690 --> 01:11:49.030
Da sagt ja auch sogar hier irgendwo, dass, ähm, das standardmäßig halt im Threadpool läuft.

01:11:49.490 --> 01:11:50.390
Dass es Default ist.

01:11:52.330 --> 01:11:52.810
Guck.

01:12:00.910 --> 01:12:04.070
Was, wenn der Main Thread nicht blockiert ist, dann ist es...

01:12:04.370 --> 01:12:08.220
Ach so, ja.

01:12:08.440 --> 01:12:08.540
Hm.

01:12:14.570 --> 01:12:15.110
Ist das so.

01:12:21.510 --> 01:12:28.230
Also ich dachte eigentlich, dass standardmäßig, wenn du einen Task anwirfst, dass das immer in den Standard Threadpool geworfen wird.

01:12:28.470 --> 01:12:29.270
Steht doch sogar da.

01:12:29.590 --> 01:12:33.110
Use specific work to run on Threadpool and return task object.

01:12:36.530 --> 01:12:39.230
Oder ist es ein Unterschied zwischen Task Run und New Task?

01:12:46.360 --> 01:12:48.580
Zumindest läuft es parallel.

01:12:50.460 --> 01:12:52.800
Wir blockieren nichts, das ist ja das Wichtige an der Stelle.

01:13:22.150 --> 01:13:23.070
Ja gut, das stimmt natürlich.

01:13:23.270 --> 01:13:24.350
Nimmt irgendwas, was frei ist.

01:13:32.020 --> 01:13:32.140
Oh.

01:13:32.500 --> 01:13:36.120
Es geht aber hauptsächlich darum, quasi den Kram nicht zu blockieren und das erreichen wir auf jeden Fall.

01:13:36.500 --> 01:13:37.440
So, ähm.

01:13:39.300 --> 01:13:40.720
Genau, Decode, bla bla bla, Start.

01:13:41.120 --> 01:13:46.860
So, und jetzt in unsere Decode-Methode werden wir uns die einzelnen Bilder aus dem GIF rausholen.

01:13:47.280 --> 01:13:48.140
Jetzt war aber Trick 17.

01:13:48.220 --> 01:13:49.200
Ich hatte nämlich gerade eine gute Idee.

01:13:49.860 --> 01:13:55.520
Und das kann sein, dass es, wie gesagt, in C Sharp 7 oder in allen der neuen .NET-Versionen noch was Besseres gibt.

01:13:55.520 --> 01:13:59.920
Ich bilde mir ein, dass ich irgendeinen Vortrag von der letzten Bild oder der vorletzten...

01:14:00.080 --> 01:14:02.740
...Bild gesehen habe, wo sie genau was zu diesem Thema erzählt haben.

01:14:03.260 --> 01:14:04.520
Ist das hier noch immer das Meme-Board?

01:14:04.620 --> 01:14:06.500
Ja, es wird weiter verbessert.

01:14:07.800 --> 01:14:12.200
Und zwar aktuell hast du das Problem, wenn du auf GIFs drückst, hast du ja gerade das Klicken gehört, das dauert ewig.

01:14:13.600 --> 01:14:16.300
Wir basteln jetzt unser eigenes GIF-Overlay, dass das schneller geht.

01:14:16.520 --> 01:14:18.660
Und das wird auch deutlich schneller gehen.

01:14:19.220 --> 01:14:20.100
Geht ja jetzt schon schneller.

01:14:20.360 --> 01:14:20.840
Viel, viel schneller.

01:14:21.300 --> 01:14:23.640
Braucht anstatt 58 MB nur 80 MB.

01:14:25.140 --> 01:14:25.780
Ähm, genau.

01:14:25.860 --> 01:14:26.880
Wir machen jetzt...

01:14:26.880 --> 01:14:28.200
Pass mal auf, jetzt kommt hier...

01:14:28.200 --> 01:14:29.200
Jetzt...

01:14:29.200 --> 01:14:30.060
Äh, wir nehmen jetzt...

01:14:30.080 --> 01:14:36.930
Wir nehmen jetzt eine Plocking-Collection und zwar von AV-Frame.

01:14:38.070 --> 01:14:39.470
Nennen das Ganze Frames.

01:14:40.850 --> 01:14:42.130
So, Default-Value.

01:14:43.470 --> 01:14:46.350
Das ist auch ein schönes neues, ich glaube, das ist die Sharp 7-Feature.

01:14:46.810 --> 01:14:53.570
Du kannst jetzt sagen, ey, dieses Property hat nur einen Getter, also sprich, du kannst da nichts Neues reinschreiben.

01:14:54.310 --> 01:15:00.390
Also, keine neue Collection zuweisen, aber du kannst einmal zum Initialisieren hier was reinschreiben.

01:15:00.390 --> 01:15:01.890
Sonst müsstest du das halt hier im Konstant.

01:15:01.910 --> 01:15:10.480
So, ähm, und Plocking-Collection hat eine ganz schöne Eigenschaft.

01:15:10.580 --> 01:15:11.740
Erstens, das Ding ist Thread-sicher.

01:15:12.840 --> 01:15:15.820
Und das Zweite ist, es hält quasi...

01:15:16.980 --> 01:15:20.460
Es blockiert die andere Seite, wenn nicht genug Bilder da sind.

01:15:21.320 --> 01:15:24.180
Wir probieren das jetzt mal aus, mal gucken, ob das das ist, was wir haben wollen.

01:15:24.860 --> 01:15:31.580
Und ich denke aber mal, dass wir ziemlich schnell in der Lage sind, neue GIF-Bilder zu decoden und dass wir auch ziemlich schnell in der Lage sind, Sachen zu rendern.

01:15:32.140 --> 01:15:33.880
Und eine Sache müssen wir noch machen.

01:15:33.940 --> 01:15:40.020
Man kann nämlich der Collection angeben, dass wir maximal 100 Items queuen wollen.

01:15:40.020 --> 01:15:55.940
Weil sonst hätten wir den Fall, ähm, mal genommen, wir hätten einen riesen GIF und unser GIF decodet viel, viel schneller, als wir es rendern können, würde das hier quasi volllaufen mit neuen Bildern.

01:15:56.580 --> 01:16:00.580
Deswegen sagen wir, hey, 100 Bilder im Voraus berechnen ist erstmal genug.

01:16:01.140 --> 01:16:02.940
Wir werden jetzt kaum ein GIF mit 100 Bildern finden.

01:16:02.940 --> 01:16:03.860
Äh, äh...

01:16:03.880 --> 01:16:06.140
Mehr als 100 Bilder im Voraus berechnen ist genug.

01:16:06.360 --> 01:16:12.040
Im Zweifelsfall dann block halt hier dein Decoding, solange bis eins abgearbeitet ist.

01:16:12.440 --> 01:16:26.620
Und auf der anderen Seite, sollte das hier leer sein, dann blockt das Rendern, was wir auch in einem separaten Task, ja, was wir auch in einem separaten Task laufen lassen, blockt das Rendern vom DirectX.

01:16:27.540 --> 01:16:28.980
Sollte hier nichts drin sein.

01:16:30.260 --> 01:16:33.860
Und da müssen wir uns nicht um irgendwelche Fälle kümmern mit, es ist nichts da.

01:16:33.880 --> 01:16:37.520
Es ist null drin, es kackt ab oder sonst was in der Richtung.

01:16:38.260 --> 01:16:41.600
Es hängt dann einfach bis auf beiden Seiten irgendwie was drin ist.

01:16:42.440 --> 01:16:50.260
So, und das heißt in unserem Decode lesen wir jetzt die einzelnen Bilder vom GIF aus und schreiben dann die Bilder in diese Collection rein.

01:16:51.960 --> 01:16:54.020
So weit, so, so weit, so gut, ne?

01:16:54.700 --> 01:16:58.880
Ähm, also von der Idee her haben wir dann sowas hier wie...

01:17:00.260 --> 01:17:02.140
An der Stelle brauchen wir hier Frame.

01:17:02.140 --> 01:17:12.620
So, haben wir den Decoder, Decoder, Decoder, Frames, Take.

01:17:13.860 --> 01:17:26.740
So, und an der Stelle ist es jetzt so, wenn hier nichts drin ist in Frames, weil unser GIF-Decoder mal angenommen zu lahm ist, dann würde es an der Stelle blockieren und nicht weiter rendern, bis das, ähm, bis was drin ist.

01:17:27.540 --> 01:17:31.620
Das heißt, und es ist Thread-sicher, das ist natürlich ultra praktisch, das heißt ich muss mich hier um nichts kümmern.

01:17:31.620 --> 01:17:43.540
Moin, du hast doch immer noch deinen Server zu Hause, wie hast du den gegen Angriffe von außen abgesehen, hier mit einer Firewall und TLS oder, ähm, es gibt keine Zugriffe von außen.

01:17:44.640 --> 01:17:46.080
Deswegen muss ich da auch nichts absichern.

01:17:47.620 --> 01:17:53.740
Das einzige, was es gibt, ist, ähm, ein OpenVPN.

01:17:57.240 --> 01:17:58.980
Das ist das einzige, was es gibt.

01:17:59.260 --> 01:18:02.880
Aber ansonsten, es gibt keine wirklichen Zugriffe von außen, deswegen muss ich da auch nichts großartig absichern.

01:18:03.400 --> 01:18:04.240
Und mein Netzwerk...

01:18:04.280 --> 01:18:10.540
...nextcloud und das ganze Zeug, das ist quasi nur intern verfügbar, oder wenn man per VPN angemeldet ist.

01:18:11.840 --> 01:18:15.880
Also sprich, das funktioniert dann auch nur von meinen Geräten aus, wo ich auch ein VPN drauf installieren kann.

01:18:18.830 --> 01:18:22.710
Ansonsten, äh, fragst du, weil du selbst was absichern willst?

01:18:25.040 --> 01:18:26.640
Also ich kann dir erzählen, wie ich das machen würde.

01:18:28.020 --> 01:18:30.100
Wenn ich es von außen erreichbar haben will.

01:18:30.520 --> 01:18:42.220
So, ähm, Decoder Frames Take, Take Frame, das ist ein AV-Frame.

01:18:42.880 --> 01:18:45.140
So, und das können wir die ganzen Krempel hier löschen.

01:18:45.260 --> 01:18:49.180
Den brauchen wir drüben in unserer Decode-Methode drin.

01:18:50.420 --> 01:18:55.210
Ähm, so, Frame, Frame.

01:18:55.790 --> 01:18:57.370
Was muss ich den ganzen Krempel ersetzen?

01:18:59.740 --> 01:19:03.780
Die ganzen Pointers ersetzen durch Punkte.

01:19:07.410 --> 01:19:09.530
Und wir dürfen nicht vergessen, den Frame wieder aufzuräumen.

01:19:09.530 --> 01:19:16.470
Wenn wir vergessen, den Frame wieder aufzuräumen, dann ist Memory Leak des Todes angesagt.

01:19:20.110 --> 01:19:20.630
Okay, soweit.

01:19:20.630 --> 01:19:22.630
Gut, gucken wir mal, ob das jetzt prinzipiell funktioniert.

01:19:23.130 --> 01:19:24.790
Also, wir decoden den ganzen Krempel.

01:19:24.890 --> 01:19:25.690
Bla, bla, bla, bla, bla.

01:19:25.830 --> 01:19:26.630
Frame, Packet.

01:19:27.290 --> 01:19:30.010
Also müssen wir hier ein neues Packet pro Durchlauf anlegen.

01:19:30.010 --> 01:19:35.410
Sagen wir hier, Packet gleich new AV-Packet.

01:19:36.690 --> 01:19:40.970
Und sagen, Frame gleich new AV-Frame.

01:19:42.610 --> 01:19:43.830
So, bla, bla, bla.

01:19:44.130 --> 01:19:44.430
Add.

01:19:45.310 --> 01:19:45.990
Achso, ja, genau.

01:19:46.050 --> 01:19:47.510
Dann müssen wir Referenz übergeben.

01:19:50.660 --> 01:19:52.080
Und sagen, Add Frame.

01:19:52.580 --> 01:19:54.540
So, und jetzt gucken wir mal, ob es funktioniert.

01:19:54.660 --> 01:19:56.780
Es sollte eigentlich jetzt immer noch der Vogel rauskommen.

01:19:59.800 --> 01:20:00.580
Macht er aber nicht.

01:20:02.140 --> 01:20:03.160
Okay, dann habe ich an irgendeiner Stelle...

01:20:03.160 --> 01:20:04.540
Achso, ich muss das Ganze ja noch starten.

01:20:04.900 --> 01:20:07.020
Haha, haben wir noch nicht gestartet.

01:20:09.160 --> 01:20:11.560
Decoder Start.

01:20:12.660 --> 01:20:13.640
Kann ja nicht funktionieren.

01:20:15.080 --> 01:20:15.360
Bam!

01:20:16.840 --> 01:20:18.680
Es nimmt Formen an, Leute.

01:20:18.800 --> 01:20:19.480
Es nimmt Formen an.

01:20:27.960 --> 01:20:29.040
Was wird denn, wenn es fertig ist?

01:20:29.040 --> 01:20:32.040
Das wird ein GIF-Player, der schneller ist als der normale WPF.

01:20:32.500 --> 01:20:33.120
GIF-Player.

01:20:33.180 --> 01:20:33.840
Guck hier, klick.

01:20:35.180 --> 01:20:35.960
Wie lange das braucht.

01:20:36.180 --> 01:20:40.400
Und meiner ist dann der Highspeed-GIF-Player mit 6000 FPS die Sekunde.

01:20:43.540 --> 01:20:46.320
Wie im Titel steht, der schnellste GIF-Player der Welt wird das.

01:20:47.680 --> 01:20:51.560
Also, Woosa, wäre cool, wenn du das mal erzählen würdest.

01:20:51.700 --> 01:20:55.620
Also, wenn ich von außen was verfügbar machen würde.

01:20:56.280 --> 01:20:58.320
Das Beste, was du machen kannst, ist natürlich erstmal VPN.

01:20:58.480 --> 01:21:00.820
Da gibt es relativ wenige Probleme.

01:21:00.960 --> 01:21:02.480
Das nächste sind Client-Settings.

01:21:02.560 --> 01:21:03.760
Zertifikate, auch immer wunderbar.

01:21:04.460 --> 01:21:08.840
Allerdings möchtest du dir das oftmals von außen zugänglich machen, ohne dass der andere eine Zeremonie abziehen muss,

01:21:08.880 --> 01:21:10.000
dass er darauf zugreifen kann.

01:21:11.180 --> 01:21:18.250
Und da ist das Einfachste, also erstmal brauchst du ein paar Zertifikate.

01:21:19.010 --> 01:21:21.750
Wenn du das Ganze verschlüsselt machen willst, da empfiehlt sich Let's Encrypt.

01:21:22.310 --> 01:21:27.710
Und ich würde nie meine Anwendung direkt Port weiterleiten oder direkt freigeben in der Firewall.

01:21:28.170 --> 01:21:32.490
Ich würde das Ganze immer über irgendwie, wenn es HTTP ist, aber das meiste ist ja HTTP.

01:21:34.130 --> 01:21:39.090
Würde ich das über eine Reverse-Proxy laufen lassen, dann nehme ich meistens NGINX für.

01:21:39.390 --> 01:21:42.030
Aber es gibt auch zig andere Sachen, die du da verwenden kannst.

01:21:42.770 --> 01:21:44.090
Ich verwende meistens NGINX für.

01:21:44.090 --> 01:21:48.130
NGINX und Let's Encrypt mit Certport funktioniert auch wunderbar zusammen.

01:21:48.690 --> 01:21:53.250
Dann hast du quasi einen NGINX zwischen deinem Dienst und zwischen außen.

01:21:55.370 --> 01:22:06.700
Das heißt, da kannst du auch wunderbar quasi hinter einer Domain auf mehreren Ports quasi Dinger laufen lassen.

01:22:06.700 --> 01:22:07.080
Ja.

01:22:07.140 --> 01:22:12.160
Oder quasi mehrere Subdomains intern auf unterschiedliche Dinger mappen oder sowas.

01:22:13.620 --> 01:22:18.520
So, und dann kannst du dir überlegen, ob du noch Authentifizierung machst über NGINX.

01:22:18.520 --> 01:22:22.820
Du könntest beispielsweise, wenn du sagst, okay, ich will es möglichst einfach haben,

01:22:23.020 --> 01:22:28.800
dann machst du halt einen NGINX als Reverse-Proxy dazwischen und holst dir Let's Encrypt-Zertifikate.

01:22:29.420 --> 01:22:33.820
Und dann machst du halt, wenn du willst, dass es simpel ist und du noch ein bisschen Authentifizierung hast,

01:22:34.140 --> 01:22:36.280
dann machst du dem NGINX einfach Basic Auth an.

01:22:36.280 --> 01:22:41.280
Dann musst du halt Passwort und Username irgendwie mit deinen Leuten austauschen.

01:22:41.900 --> 01:22:43.280
Aber das ist das Einfachste, was du machen kannst.

01:22:43.800 --> 01:22:45.020
Und das ist dann aber schon relativ gut.

01:22:45.800 --> 01:22:49.000
Natürlich gibt es dann noch unendlich viele weitere advancede Varianten.

01:22:49.120 --> 01:22:54.180
Du kannst dir sogar eine To-Factor-Authentifizierung basteln mit, gibt es dann so Keycloak oder irgendwie sowas,

01:22:54.540 --> 01:22:58.360
wo dann der NGINX einen Request dagegen macht, so nach dem Motto, darf der Typ und sowas.

01:22:58.740 --> 01:23:04.400
Aber die einfachste Variante dürfte wirklich sein, Let's Encrypt, NGINX oder irgendeine andere Reverse-Proxy

01:23:04.400 --> 01:23:06.260
und dann kannst du dann auch noch eine Authentifizierung basteln mit, gibt es dann so Keycloak oder irgendwie sowas,

01:23:06.260 --> 01:23:07.760
wo dann der NGINX einen Basic Auth davor und gut ist.

01:23:10.990 --> 01:23:14.630
Läuft schon. Es läuft mit einem Bild und ist transparent, Patrick.

01:23:14.830 --> 01:23:20.370
Also es ist schon deutlich besser als das letzte Mal und du hast das ganze Intro verpasst,

01:23:20.770 --> 01:23:25.730
wie sehr es mich genervt hat, ein transparentes Fenster und ein transparentes GIF selbst zu rendern.

01:23:25.850 --> 01:23:26.290
Riesenakt.

01:23:27.050 --> 01:23:29.490
Okay, Decoder start. Zack, da ist er.

01:23:29.790 --> 01:23:31.370
Und sogar schön gescaled.

01:23:33.930 --> 01:23:37.930
Okay, jetzt müssen wir natürlich noch einstellen, dass mehr Frames abgerufen werden.

01:23:47.140 --> 01:23:49.100
Okay, kann ich noch ein bisschen was löchern?

01:23:49.220 --> 01:23:51.120
Schon von dem ganzen Krempel hier, den ich da habe.

01:23:53.370 --> 01:23:54.210
Bla, bla, bla.

01:24:03.150 --> 01:24:10.930
Bla, bla, bla. Kann ich davon noch irgendwas wegschmeißen?

01:24:15.840 --> 01:24:16.620
Ne, glaube ich nicht.

01:24:17.040 --> 01:24:17.820
Okay, ähm.

01:24:19.820 --> 01:24:21.500
Copy from memory, frame.

01:24:24.530 --> 01:24:25.590
Decoder start, Decoder.

01:24:26.970 --> 01:24:31.370
Gut, das hier muss ich in der Schleife machen.

01:24:32.030 --> 01:24:34.730
Das Bitmap kann ich ja vorher schon anlegen, das ist kein Problem.

01:24:40.620 --> 01:24:42.480
Das muss ich in der Schleife machen.

01:24:43.280 --> 01:24:50.760
Und ich muss einmal pro Schleifendurchgang einen neuen Frame holen.

01:24:50.900 --> 01:24:52.260
Also am Ende vom Durchgang.

01:24:53.080 --> 01:24:55.900
So, jetzt sollte eigentlich das GIF animiert sein.

01:24:56.780 --> 01:24:59.580
Und ist es auch, plus es ist viel zu schnell.

01:25:04.080 --> 01:25:05.900
Ich vermute mal, dass es das ist.

01:25:06.660 --> 01:25:08.200
Machen wir mal ein Sleep irgendwie dazwischen.

01:25:09.140 --> 01:25:10.480
100 Millisekunden.

01:25:11.260 --> 01:25:11.820
Da ist es.

01:25:12.160 --> 01:25:12.420
Bam.

01:25:12.420 --> 01:25:12.900
Bam.

01:25:12.900 --> 01:25:13.480
Danach kackt es ab.

01:25:13.620 --> 01:25:18.260
Logischerweise kackt es danach ab, weil es gibt kein Frame mehr.

01:25:18.400 --> 01:25:18.880
Richtig so, ne?

01:25:18.980 --> 01:25:32.150
Aber, Animation in Form an.

01:25:35.220 --> 01:25:36.680
Warum genau kackt das ab?

01:25:36.780 --> 01:25:37.160
Frame.

01:25:41.550 --> 01:25:43.250
Na, eigentlich abkacken sollte es doch nicht.

01:25:50.120 --> 01:25:52.260
Der letzte Frame ist doch immer noch drin, oder?

01:26:04.890 --> 01:26:07.130
Jetzt muss ich mal überlegen, warum kackt das an der Stelle ab?

01:26:12.510 --> 01:26:16.190
Also, wir müssen den Frame eh auf jeden Fall wieder löschen.

01:26:17.350 --> 01:26:18.790
Weil das haben wir im Memory Leak.

01:26:19.790 --> 01:26:20.670
Das wollen wir nicht.

01:26:20.670 --> 01:26:27.240
Eigentlich, ja, prinzipiell funktioniert es so, wenn die Animation fertig ist, kackt der ab.

01:26:29.020 --> 01:26:39.820
Weil, wahrscheinlich hier, da kam nicht, wo kackt, was war, Paint kackt der ab?

01:26:40.340 --> 01:26:42.920
Das ist wahrscheinlich ein Bug, dass er war Paint abkackt.

01:26:43.700 --> 01:26:47.000
Also, wahrscheinlich hat er hier irgendwie Probleme mit dem Speicherbereich.

01:26:48.680 --> 01:26:52.840
Wobei, ist den Frame doch eigentlich, ach ne, ha, ne, Moment.

01:26:54.100 --> 01:26:56.580
Der sollte hier doch eigentlich hängen, wenn nichts mehr drin ist.

01:27:00.690 --> 01:27:05.010
Also, warum der abkackt, ist mir jetzt nicht so ganz klar, ehrlich gesagt.

01:27:34.140 --> 01:27:42.380
Hm, warum kackt der ab?

01:27:53.000 --> 01:27:55.260
Kannst du mal erklären, was Endpoint der für eine Datenstruktur ist?

01:27:55.540 --> 01:27:59.000
Das ist quasi die Managed-Variante von, äh, einem Pointer.

01:28:03.920 --> 01:28:04.740
Ja, alles gut.

01:28:06.160 --> 01:28:06.900
Sharks Development.

01:28:07.320 --> 01:28:08.560
Warum kackt der denn ab an der Stelle?

01:28:08.620 --> 01:28:11.800
Ich meine, es ist nicht schlimm, wir laden ja eh die Bilder dann nochmal neu.

01:28:12.120 --> 01:28:19.850
Aber er sollte nicht, er sollte definitiv nicht abkacken, wenn keine Bilder, also von der Idee,

01:28:19.990 --> 01:28:21.650
hier sollte es folgendermaßen sein.

01:28:22.970 --> 01:28:24.630
Ah, ich weiß, woran das liegt.

01:28:26.610 --> 01:28:27.850
Das Ding hier kackt ab.

01:28:33.940 --> 01:28:35.060
Wartet mal, ich hab ne Idee.

01:28:35.580 --> 01:28:38.540
Äh, wir machen, wir machen mal, decoden mal wieder nur ein Frame.

01:28:40.800 --> 01:28:42.360
Siehste, jetzt kackt's nämlich nicht ab.

01:28:45.430 --> 01:28:48.150
Das kackt gar nicht ab, das ist, das ist, das ist Fail.

01:28:48.590 --> 01:28:54.810
Es kackt in Wirklichkeit, ähm, in Wirklichkeit kackt nämlich der GIF-Decoder ab, was ganz klar ist,

01:28:55.150 --> 01:28:57.210
weil, ähm, denn ich weiß nicht, was das ist.

01:28:57.210 --> 01:28:57.950
Ich weiß nicht, was ich weiterlesen kann.

01:28:58.210 --> 01:29:05.030
Ich muss hier nämlich gucken, if error ffmpeg, okay, das muss ich mir jetzt mal abgucken,

01:29:05.110 --> 01:29:12.330
von dem, was wir das letzte Mal gemacht haben, äh, das waren das, äh, EOF oder sowas, ne?

01:29:12.870 --> 01:29:13.470
Ja, genau.

01:29:13.950 --> 01:29:18.550
Sprich, wenn das File fertig gelesen ist, dann muss er, dann darf er nicht weitermachen.

01:29:18.630 --> 01:29:19.710
Da muss er machen, break.

01:29:21.390 --> 01:29:23.490
Ha, guckt, und jetzt kackt das Ganze auch nicht mehr ab.

01:29:24.310 --> 01:29:28.150
Das lag nämlich gar nicht an unserem Render, das lag am, am Decoder, der abgekackt ist.

01:29:28.150 --> 01:29:28.950
Und die Exception.

01:29:28.970 --> 01:29:30.570
Die Exception war nur an der komplett Fail-Stelle.

01:29:36.740 --> 01:29:38.760
Äh, Memory Leaks werden wir gleich ordentlich produzieren.

01:29:38.840 --> 01:29:43.720
Ich hab's, ich hab's im Gefühl, äh, so.

01:29:44.200 --> 01:29:47.760
Und jetzt müssen wir eine Möglichkeit finden, wie wir das Ganze resetten.

01:29:48.700 --> 01:29:52.320
Also, der Witz ist jetzt, ja, wir können, also, wir haben jetzt eine relativ lange Sleep drin,

01:29:52.400 --> 01:29:53.940
dass wir sehen, dass die Animation funktioniert.

01:29:54.060 --> 01:29:57.280
Wir machen das Sleep dann gleich mal raus, wenn wir, wenn wir es geschafft haben,

01:29:57.340 --> 01:30:01.720
eine quasi endlos, eine endlos GIF-Schleife zu, zu decoden.

01:30:02.360 --> 01:30:06.020
Also, von der Idee her würde ich mal sagen, was ich übrigens auch toll finde,

01:30:06.080 --> 01:30:06.860
wir haben null FPS.

01:30:09.300 --> 01:30:20.860
Ähm, wir müssen jetzt mal gucken, wie man mit, mit, äh, FFmpeg quasi zurückspringt hier.

01:30:21.400 --> 01:30:24.580
Weil wir lesen ja immer noch, wir haben ja hier irgendwo einen neuen,

01:30:24.680 --> 01:30:25.820
wir haben ja hier irgendwo einen Stream.

01:30:29.150 --> 01:30:34.690
Und, ähm, wir lesen Frames, Frames, Frames, Frames.

01:30:34.790 --> 01:30:37.550
Und irgendwann sind wir am Ende, End of File.

01:30:38.450 --> 01:30:45.530
Und jetzt müssen wir irgendwie FFmpeg ja wieder sagen, geh an den Anfang des Files.

01:30:45.550 --> 01:30:46.250
Zurück.

01:30:47.610 --> 01:30:49.910
Ich habe keine Ahnung, wie man das macht, da müssen wir jetzt mal suchen.

01:30:50.890 --> 01:30:52.410
FFmpeg Reset File.

01:30:54.650 --> 01:30:55.090
Äh.

01:31:04.100 --> 01:31:07.800
Ja, das kann man auch machen, wir könnten auch einfach alle Frames zwischenspeichern, das geht auch.

01:31:08.120 --> 01:31:09.600
Aber ich will mal gucken, wie man resettet.

01:31:13.510 --> 01:31:17.910
How to reset AV-Format Context so it could be reused.

01:31:18.390 --> 01:31:20.070
Das ist schon mal gut.

01:31:22.710 --> 01:31:23.070
Bäh.

01:31:27.270 --> 01:31:28.490
Okay, der hat keine Antwort gekriegt.

01:31:31.770 --> 01:31:32.690
Wisst ihr was, wir sollen jetzt mal...

01:31:33.690 --> 01:31:35.510
Stack, Overflow oder was?

01:31:40.530 --> 01:31:43.430
FFmpeg Reset Start Time of File.

01:31:48.260 --> 01:31:49.620
AV-Frame.

01:31:52.870 --> 01:31:53.390
Position.

01:32:01.420 --> 01:32:02.940
Man muss einfach nur gut suchen können.

01:32:06.460 --> 01:32:08.460
FFmpeg Position File.

01:32:09.920 --> 01:32:10.640
Context.

01:32:15.820 --> 01:32:16.540
Reset.

01:32:25.340 --> 01:32:25.900
Seeking.

01:32:26.700 --> 01:32:27.140
Seek.

01:32:28.140 --> 01:32:28.800
Seek.

01:32:54.520 --> 01:32:55.160
Avioca.

01:32:59.040 --> 01:33:00.500
Ihr seht jetzt gerade...

01:33:01.320 --> 01:33:04.420
Stack Overflow Driven Programming in Aktion.

01:33:05.840 --> 01:33:08.280
Seeking with AV-Seek Frame.

01:33:13.950 --> 01:33:14.570
I.O.

01:33:23.780 --> 01:33:24.280
Stream.

01:33:26.690 --> 01:33:27.250
Set.

01:33:31.090 --> 01:33:32.410
Ich würde sagen, wir kommen der Sache...

01:33:33.010 --> 01:33:36.750
Wir kommen der Sache langsam näher.

01:33:38.370 --> 01:33:39.650
AV-Seek Frame.

01:33:39.930 --> 01:33:41.130
Hatten wir das schon oder hast du...

01:33:41.130 --> 01:33:41.470
Weißt du...

01:33:41.470 --> 01:33:45.890
Hier ist doch...

01:33:45.890 --> 01:33:47.110
AV-Seek Frame.

01:33:47.770 --> 01:34:41.120
Das muss doch irgendwie funktionieren.

01:34:43.740 --> 01:34:44.920
AV-Seek mit...

01:34:44.920 --> 01:34:46.920
Mit dem Beginning Flag.

01:34:48.680 --> 01:34:49.580
Also quasi...

01:34:49.580 --> 01:34:51.580
Okay, lass mal überlegen.

01:34:51.580 --> 01:34:53.580
Also sprich, wenn wir hier EOF haben...

01:34:53.580 --> 01:34:55.580
Dann müssen wir sagen...

01:34:55.580 --> 01:34:57.580
AV-Seek?

01:34:57.580 --> 01:34:59.580
AV-Seek Frame?

01:34:59.580 --> 01:35:01.580
AV-Seek Frame?

01:35:01.580 --> 01:35:04.960
Context.

01:35:04.960 --> 01:35:06.960
Was für einen Context brauchen wir denn an der Stelle?

01:35:06.960 --> 01:35:10.340
Was für einen Context brauchen wir denn an der Stelle?

01:35:10.340 --> 01:35:14.420
Ayaya! Format. Okay.

01:35:14.420 --> 01:35:20.220
Format. Context.

01:35:20.220 --> 01:35:22.220
Stream Index.

01:35:22.220 --> 01:35:25.800
Stream Index ist 0.

01:35:26.040 --> 01:35:27.260
GIF hat nur einen Stream.

01:35:28.000 --> 01:35:28.640
Timestamp.

01:35:29.760 --> 01:35:30.940
Wo wir hinwollen.

01:35:31.060 --> 01:35:32.320
Seek to the Keyframe.

01:35:32.700 --> 01:35:34.120
Timestamp 0.

01:35:35.980 --> 01:35:36.640
Inflex.

01:35:38.680 --> 01:35:39.360
0.

01:35:41.200 --> 01:35:42.560
Ob das jetzt funktioniert?

01:35:46.820 --> 01:35:47.920
Ob das jetzt funktioniert?

01:36:00.760 --> 01:36:02.460
Ne, ich glaube nicht, dass das funktioniert.

01:36:14.480 --> 01:36:14.720
Äh.

01:36:20.360 --> 01:36:21.240
Scheiße, das funktioniert?

01:36:22.560 --> 01:36:28.370
Krass.

01:36:28.370 --> 01:36:30.370
Übrigens, wir haben ein paar Memory Leaks, aber...

01:36:30.370 --> 01:36:40.340
Das funktioniert.

01:36:40.340 --> 01:36:42.340
Ich bin echt, äh...

01:36:42.340 --> 01:36:50.640
Überrascht jetzt, ne?

01:36:50.640 --> 01:36:52.640
Guck mal.

01:36:52.640 --> 01:36:54.640
Wir leaken ein bisschen Memory.

01:36:54.640 --> 01:36:56.640
So ein bisschen. Ein bisschen.

01:36:56.640 --> 01:36:58.640
Ein bisschen Memory leaken wir.

01:36:58.640 --> 01:37:00.640
Das liegt aber daran, dass ich auch nichts freigebe.

01:37:00.640 --> 01:37:02.640
Das liegt aber daran, dass ich auch nichts freigebe.

01:37:02.640 --> 01:37:04.640
Okay, gucken wir mal.

01:37:04.640 --> 01:37:06.640
Also, wir sagen... Okay, das Packet brauchen wir nicht.

01:37:06.640 --> 01:37:08.640
Package freen können wir. Frame freen können wir nicht.

01:37:08.640 --> 01:37:10.260
Also, FFM Pack.

01:37:10.260 --> 01:37:12.260
Free Packet.

01:37:12.260 --> 01:37:14.260
Free Packet.

01:37:14.260 --> 01:37:18.980
Deprecated.

01:37:18.980 --> 01:37:20.980
Deprecated.

01:37:20.980 --> 01:37:22.980
Darauf geschissen.

01:37:22.980 --> 01:37:30.840
Jetzt leaken wir schon

01:37:30.840 --> 01:37:36.320
ganze Ecke weniger.

01:37:36.320 --> 01:37:38.320
Free Packet. Ist optional. Use Packet Unref.

01:37:38.320 --> 01:37:41.760
Use Packet Unref.

01:37:41.760 --> 01:37:46.160
Machen wir.

01:37:46.160 --> 01:37:48.160
Das das 1717, äh...

01:37:48.160 --> 01:37:50.160
Kennst du dich mit FFM Pack aus?

01:37:50.160 --> 01:37:52.160
Oder woher weißt du das alles?

01:37:52.160 --> 01:37:54.160
Okay, wir leaken noch ein bisschen

01:37:54.160 --> 01:37:56.160
an anderen Stellen, wie es aussieht.

01:37:56.160 --> 01:37:58.160
Wahrscheinlich in unserem DirectX.

01:37:58.160 --> 01:38:00.160
DirectX Krempel. Müssen wir mal gucken.

01:38:00.160 --> 01:38:02.160
Ja, garantiert.

01:38:02.160 --> 01:38:04.160
Garantiert. Wir müssen hier noch aufräumen.

01:38:04.160 --> 01:38:06.160
Garantiert. Wir müssen hier noch aufräumen.

01:38:06.160 --> 01:38:08.160
Wir müssen mal gucken, an welcher Stelle.

01:38:08.160 --> 01:38:22.290
Wir müssen mal gucken, an welcher Stelle.

01:38:22.290 --> 01:38:24.290
So, und jetzt müssen wir hier am Ende noch sagen.

01:38:24.290 --> 01:38:26.290
FFM Pack.

01:38:26.290 --> 01:38:28.290
Frame. Wahrscheinlich auch Unref.

01:38:28.290 --> 01:38:30.290
Unref Frame.

01:38:30.290 --> 01:38:32.290
Und jetzt sollten wir weniger leaken.

01:38:32.290 --> 01:38:40.560
Und jetzt sollten wir weniger leaken.

01:38:40.560 --> 01:38:42.560
Achso, bin ich blöd.

01:38:42.560 --> 01:38:44.560
Vielleicht sollten wir das davor machen.

01:38:44.560 --> 01:38:49.090
Bevor wir uns den neuen holen.

01:38:49.090 --> 01:38:51.090
Guck mal, wir leaken nicht mehr.

01:38:51.090 --> 01:38:57.090
Weil es, äh...

01:38:57.090 --> 01:38:59.090
Wir machen das mit DirectX, weil es

01:38:59.090 --> 01:39:08.740
Windows Only ist.

01:39:08.740 --> 01:39:10.740
Also, so, und jetzt nehmen wir mal das Sleep raus.

01:39:10.740 --> 01:39:12.740
Mal gucken, was passiert.

01:39:12.740 --> 01:39:14.740
Mal gucken, was passiert.

01:39:18.740 --> 01:39:20.740
Alter!

01:39:20.740 --> 01:39:22.740
Ich sag doch,

01:39:22.740 --> 01:39:24.740
der schnellste GIF-Player der Welt.

01:39:24.740 --> 01:39:30.550
Hahaha.

01:39:30.550 --> 01:39:35.650
Hahaha.

01:39:35.650 --> 01:40:11.730
Wisst ihr, dazu passt jetzt richtig gut.

01:40:11.730 --> 01:40:24.710
Ich bin begeistert.

01:40:24.710 --> 01:40:37.170
Nice. Gut.

01:40:37.170 --> 01:40:39.170
Mal in den normalen Modus wieder wechseln.

01:40:41.170 --> 01:40:52.290
Warum ist die Musik gar nicht so leise?

01:40:52.290 --> 01:40:54.290
Ich mein, guck mal.

01:40:54.290 --> 01:40:56.290
Wir schaffen es jetzt. Meine Platte ist wahrscheinlich auch voll am...

01:40:56.290 --> 01:40:58.290
Oh, ja.

01:40:58.290 --> 01:41:00.290
Meine SSD ist ein bisschen am blinken, ja.

01:41:00.290 --> 01:41:03.670
Ähm, ich mein, guck mal.

01:41:03.670 --> 01:41:05.670
Wir, wir, wir, wir haben ja die, die

01:41:05.670 --> 01:41:07.670
Frames noch nicht mal gecached oder so.

01:41:07.670 --> 01:41:09.670
Wir, wir lesen das quasi immer neu ein,

01:41:09.670 --> 01:41:11.670
erstellen immer neue Objekte und wir rendern das quasi mit

01:41:11.670 --> 01:41:13.670
maximal 1200 FPS oder so.

01:41:13.670 --> 01:41:15.670
Das ist doch schon mal

01:41:15.670 --> 01:41:17.670
sehr ordentlich.

01:41:17.670 --> 01:41:19.670
Allerdings soll das Ganze

01:41:19.670 --> 01:41:21.670
natürlich nicht ganz so hektisch sein.

01:41:21.670 --> 01:41:26.520
Aber nice, das funktioniert schon mal.

01:41:28.520 --> 01:41:30.520
Und wir brauchen auch

01:41:30.520 --> 01:41:32.520
nur 90 FPS, äh,

01:41:32.520 --> 01:41:34.520
90, 90 MB RAM.

01:41:34.520 --> 01:41:36.520
Habe ich hier überhaupt auf Release?

01:41:36.520 --> 01:41:38.520
Soll ich auf Release stehen?

01:41:38.520 --> 01:41:45.570
Wow.

01:41:45.570 --> 01:41:50.550
Das ist kaputt.

01:41:50.550 --> 01:41:58.850
Warum, warum geht das kaputt?

01:41:58.850 --> 01:42:00.850
Warum geht das kaputt, wenn es auf Debug steht,

01:42:00.850 --> 01:42:06.280
aber auf Release geht es nicht kaputt?

01:42:06.280 --> 01:42:09.910
Wie dem auch sei,

01:42:09.910 --> 01:42:11.910
wir wollen das ja eh nicht so schnell haben,

01:42:11.910 --> 01:42:13.910
aber kaputt gehen sollte es eigentlich nicht.

01:42:13.910 --> 01:42:15.910
Es sollte eigentlich

01:42:15.910 --> 01:42:21.080
volle Pulle.

01:42:21.080 --> 01:42:23.080
Wir, wir unraffen bestimmt irgendwas, was,

01:42:23.080 --> 01:42:25.080
was schon kaputt ist oder so.

01:42:25.080 --> 01:42:30.440
Triggered a breakpoint. Ja, welcher

01:42:30.440 --> 01:42:39.510
Breakpoint auch immer.

01:42:39.510 --> 01:42:41.510
Jetzt, ich mein, ist ja geil, wenn's, wenn's

01:42:41.510 --> 01:42:43.510
Caption wirft, aber warum?

01:42:43.510 --> 01:42:45.510
Unref.

01:42:45.510 --> 01:42:52.530
Ja, Breakpoint.

01:42:52.530 --> 01:42:54.530
Hab ich halt keinen.

01:42:54.530 --> 01:42:56.530
Okay, ähm,

01:42:56.530 --> 01:42:58.530
wahrscheinlich machen wir hier

01:42:58.530 --> 01:43:00.530
irgendwie irgendwas, äh, blödes.

01:43:00.530 --> 01:43:25.990
Beim Unref

01:43:25.990 --> 01:43:27.990
kackt er ab.

01:43:27.990 --> 01:43:35.780
Warum kackt der denn beim Unref ab?

01:43:35.780 --> 01:43:37.780
Das ergibt ja überhaupt keinen Sinn.

01:43:37.780 --> 01:43:42.690
Habe ich das vielleicht

01:43:42.690 --> 01:43:44.690
in der falschen Reihenfolge irgendwie?

01:43:44.690 --> 01:43:56.580
AV Frame Free?

01:43:56.580 --> 01:43:58.580
Ne, ich dachte, das ist das neue Free.

01:43:58.580 --> 01:44:25.000
Moment.

01:44:25.000 --> 01:44:27.000
Das sind unterschiedliche Dinger, ne?

01:44:27.000 --> 01:44:35.240
Wartet mal kurz.

01:44:35.240 --> 01:45:05.970
So, wieder da.

01:45:05.970 --> 01:45:07.970
Ich brauch gar nicht Unref.

01:45:07.970 --> 01:45:09.970
Geht's, liegt's denn, wir gucken mal, ob's überhaupt am Unref

01:45:09.970 --> 01:45:13.990
liegt. Ja, ohne Unref

01:45:13.990 --> 01:45:15.990
geht's, allerdings, äh, ist mein RAM gleich voll.

01:45:15.990 --> 01:45:28.130
Wenn's so weitergeht.

01:45:28.130 --> 01:45:30.130
Moment, wie, wie mach ich das denn jetzt?

01:45:32.130 --> 01:45:34.130
Jetzt, jetzt, oh, jetzt, jetzt, jetzt stoßen

01:45:34.130 --> 01:45:36.130
meine krassen C Pointer Skills an die

01:45:36.130 --> 01:45:38.130
Grenzen. Der möchte,

01:45:38.130 --> 01:45:40.130
der möchte

01:45:40.130 --> 01:45:42.130
einen Pointer haben.

01:45:42.130 --> 01:45:44.130
Einen Pointer Pointer, also

01:45:44.130 --> 01:45:46.130
einen Pointer zu einem Pointer

01:45:46.130 --> 01:45:48.130
auf Frame. Ich hab allerdings nur

01:45:48.130 --> 01:45:50.130
einen Pointer auf Frame zu bieten.

01:45:50.130 --> 01:45:56.520
Was mach ich denn jetzt? Leute,

01:45:56.520 --> 01:45:58.520
haben wir nicht den, haben wir nicht irgendeinen, der

01:45:58.520 --> 01:46:00.520
hier, der Patrick, der ist so der krasse C Owner.

01:46:00.520 --> 01:46:19.190
Was mach ich denn jetzt?

01:46:19.190 --> 01:46:21.190
Also das geht, okay, probier mal aus.

01:46:21.190 --> 01:46:23.190
Und, und.

01:46:23.190 --> 01:46:25.190
Ey, das wär lustig, wenn das geht, aber das glaube

01:46:25.190 --> 01:46:27.190
ich nicht.

01:46:27.190 --> 01:46:29.190
Ne.

01:46:29.190 --> 01:46:31.190
Was, AV Frame?

01:46:31.190 --> 01:46:40.230
Äh, GFF.

01:46:40.230 --> 01:46:42.230
Äh, wenn's das Richtige tippt.

01:46:42.230 --> 01:46:44.230
Aber das ist dann immer noch kein Pointer

01:46:44.230 --> 01:46:53.880
zum Pointer, oder?

01:46:53.880 --> 01:47:04.710
Ha. HA!

01:47:04.710 --> 01:47:06.710
Nein.

01:47:06.710 --> 01:47:12.580
Hahaha.

01:47:12.580 --> 01:47:14.580
Nicht wirklich.

01:47:14.580 --> 01:47:16.580
Fast. Man weiß ja nie.

01:47:16.580 --> 01:47:18.580
Haha.

01:47:18.580 --> 01:47:40.450
Das funktioniert nicht.

01:47:40.450 --> 01:47:45.360
Da kackt er ab.

01:47:45.360 --> 01:47:54.370
Hier an der Stelle.

01:47:54.370 --> 01:47:58.900
Hm. Ich hab keine Ahnung.

01:47:58.900 --> 01:48:00.900
Was ich aber interessant finde, dass er das

01:48:00.900 --> 01:48:02.900
im Release-Modus nicht macht.

01:48:02.900 --> 01:48:07.170
Also.

01:48:07.170 --> 01:48:09.170
Mit UnRef hat's ja im Release-Modus

01:48:09.170 --> 01:48:17.220
wenigstens funktioniert.

01:48:17.220 --> 01:48:19.220
Was ich halt interessant finde, UnRef ist doch eigentlich das

01:48:19.220 --> 01:48:21.220
Richtige.

01:48:21.220 --> 01:48:23.220
Im Release-Modus funktioniert der Campbell doch auch.

01:48:23.220 --> 01:48:35.560
Boah, was hat der im Debug-Mode für

01:48:35.560 --> 01:48:43.350
Schmerzen damit, äh.

01:48:43.350 --> 01:48:45.350
Ha.

01:48:45.350 --> 01:48:47.350
Na gut, wisst ihr was, wir machen mal Native

01:48:47.350 --> 01:48:49.350
Code Debugging an. Ah, ne, haben wir schon.

01:48:49.350 --> 01:49:05.780
Docs.

01:49:05.780 --> 01:49:10.500
Wood. Wie geht?

01:49:10.500 --> 01:49:12.500
Docs.

01:49:12.500 --> 01:49:14.500
Ja, da stand, dass ein Breakpoint aktiv ist.

01:49:14.500 --> 01:49:16.500
Ich glaub, das sagt Visual Studio einfach nur so.

01:49:16.500 --> 01:49:24.610
Ja, das ist halt die Frage,

01:49:24.610 --> 01:49:26.610
ob, ähm,

01:49:26.610 --> 01:49:28.610
der Constructor das hier auch so macht.

01:49:28.610 --> 01:49:32.690
Können wir jetzt nicht reingucken.

01:49:32.690 --> 01:49:45.090
Aber wahrscheinlich, ja.

01:49:45.090 --> 01:49:47.090
Habe ich hier irgendeine Logik drinne, die Fail ist?

01:49:47.090 --> 01:49:49.090
Wisst ihr was, wartet mal.

01:49:49.090 --> 01:49:51.090
Wir machen jetzt mal was anderes.

01:49:51.090 --> 01:49:55.750
Wir rendern jetzt mal nichts.

01:49:55.750 --> 01:50:00.920
Wir rendern jetzt mal nichts.

01:50:00.920 --> 01:50:09.920
Gucken, ob der, ob der, ob

01:50:09.920 --> 01:50:11.920
der Decoder jetzt läuft.

01:50:11.920 --> 01:50:22.280
Ne, guckt mal, der Decoder

01:50:22.280 --> 01:50:24.280
kackt schon ab. Warum?

01:50:24.280 --> 01:50:26.280
Achso, ja, weil

01:50:26.280 --> 01:50:36.560
100 Elemente voll sind.

01:50:36.560 --> 01:50:38.560
Ich, ich free das Ding mal hier drin.

01:50:38.560 --> 01:51:02.550
Kann ich mir nicht vorstellen, dass man

01:51:02.550 --> 01:51:09.890
das hier irgendwie, was ist das denn?

01:51:09.890 --> 01:51:11.890
Siehst du das richtig, dass FFmpeg komplett statisch ist?

01:51:11.890 --> 01:51:13.890
In dem Fall schon. Das ist einfach ein Wrapper

01:51:13.890 --> 01:51:15.890
um diese, um, um halt

01:51:15.890 --> 01:51:17.890
die C

01:51:17.890 --> 01:51:19.890
Library von FFmpeg.

01:51:19.890 --> 01:51:50.980
Ja, FFmpeg ist, ist

01:51:50.980 --> 01:52:04.600
C-Geschwubbel.

01:52:04.600 --> 01:52:06.600
You can use frameunwrap

01:52:06.600 --> 01:52:11.380
Oh, er drückt hier.

01:52:11.380 --> 01:52:13.380
Donation sound.

01:52:13.380 --> 01:52:19.640
Poggers.

01:52:19.640 --> 01:52:21.640
1 Euro, 23.

01:52:21.640 --> 01:52:23.640
Vom Hureboss, seine Konjunkturen sind immer interessant.

01:52:23.640 --> 01:52:25.640
Nice, wenn's dir gefällt.

01:52:25.640 --> 01:52:27.640
Sehr, sehr nice.

01:52:27.640 --> 01:52:33.960
Da musst du das Objekt doch pinnen.

01:52:33.960 --> 01:52:35.960
Weiß ich nicht, ob ich das pinnen muss.

01:52:35.960 --> 01:52:43.940
Ich dachte, pinnen muss

01:52:43.940 --> 01:52:45.940
ich nur, wenn ich quasi

01:52:45.940 --> 01:52:47.940
irgendwelche managed

01:52:47.940 --> 01:52:49.940
zu native Geschichten mache.

01:52:49.940 --> 01:52:51.940
Was ich jetzt an der Stelle ja gar nicht mache.

01:52:51.940 --> 01:52:53.940
Ich mach ja unter der Haube im Prinzip.

01:52:53.940 --> 01:52:55.940
Alles unsaved native.

01:52:55.940 --> 01:53:15.060
Da drückt man hier ein Beispiel,

01:53:15.060 --> 01:53:38.280
wie die das verwenden.

01:53:38.280 --> 01:53:40.280
Okay, da machen wir

01:53:40.280 --> 01:53:42.280
das jetzt doch mal so.

01:53:42.280 --> 01:53:44.280
Also wir machen jetzt ein frame.

01:53:44.280 --> 01:53:51.240
Ups.

01:53:51.240 --> 01:54:21.200
Frame.

01:54:21.200 --> 01:54:30.020
Das funktioniert.

01:54:30.020 --> 01:54:44.790
Interessant.

01:54:44.790 --> 01:54:46.790
Warum funktioniert das so und anders nicht?

01:54:46.790 --> 01:54:48.790
Ich mein, das ist okay.

01:54:48.790 --> 01:54:50.790
Was machen die denn in dem Konstrukt

01:54:50.790 --> 01:54:52.790
davon?

01:54:52.790 --> 01:54:54.790
Das müssen wir jetzt mal nachholen.

01:54:54.790 --> 01:54:56.790
So, das ist ein

01:54:56.790 --> 01:54:58.790
AV-Frame.

01:54:58.790 --> 01:55:00.790
Da muss ich mal nachgucken,

01:55:00.790 --> 01:55:02.790
ob die da unter der

01:55:02.790 --> 01:55:08.150
Haube irgendwas anderes machen.

01:55:08.150 --> 01:55:10.150
Ja, ich mach auch, achso,

01:55:10.150 --> 01:55:12.150
das ist das Package oben drüber.

01:55:12.150 --> 01:55:14.150
Ich mach nur

01:55:14.150 --> 01:55:16.150
free grade.

01:55:16.150 --> 01:55:20.360
Das funktioniert und wir leaken auch

01:55:20.360 --> 01:55:25.400
nix. No leaks.

01:55:25.400 --> 01:55:29.540
Ich probier das jetzt nochmal andersrum.

01:55:29.540 --> 01:55:31.540
Loopframe.

01:55:31.540 --> 01:55:37.350
Warum hat der hier irgendwelche

01:55:37.350 --> 01:55:39.350
Schmerzen mit?

01:55:39.350 --> 01:55:41.350
Ich mein, das müsste hier lokal von der Funktion sein.

01:55:41.350 --> 01:55:43.350
Okay, sind wir ja auch weiterhin.

01:55:43.350 --> 01:56:05.410
Okay.

01:56:05.410 --> 01:56:08.720
Das Problem ist anscheinend nur,

01:56:08.720 --> 01:56:10.720
wenn ich das anre...

01:56:10.720 --> 01:56:12.720
Okay, das funktioniert

01:56:12.720 --> 01:56:14.720
auch.

01:56:14.720 --> 01:56:16.720
Okay, das ist prinzipiell, prinzipiell ist alles

01:56:16.720 --> 01:56:18.720
gut. Das Problem tritt nur auf, wenn

01:56:18.720 --> 01:56:20.720
ich das von der anderen Seite

01:56:20.720 --> 01:56:22.720
aus mache.

01:56:22.720 --> 01:56:29.490
Warum das denn?

01:56:29.490 --> 01:56:41.120
Das ist entweder...

01:56:41.120 --> 01:56:47.190
Hm. Das ist entweder irgendeine

01:56:47.190 --> 01:56:49.190
Threading-Geschichte?

01:56:49.190 --> 01:56:51.190
Was ich mir eigentlich nicht vorstellen kann.

01:56:51.190 --> 01:56:57.250
Oder die Adressen

01:56:57.250 --> 01:57:03.570
stimmen einfach nicht.

01:57:03.570 --> 01:57:12.130
Was ich allerdings merkwürdig finde.

01:57:12.130 --> 01:57:14.130
Okay, warte mal, ich brauch den Frame. Hier brauch ich den.

01:57:14.130 --> 01:57:24.040
Danach brauch ich den ja.

01:57:24.040 --> 01:57:26.040
Ich mein, wir geben einfach den...

01:57:26.040 --> 01:57:28.040
Wir speichern uns einfach den Pointer da drin.

01:57:28.040 --> 01:57:30.040
Das geht natürlich auch.

01:57:30.040 --> 01:57:32.040
Aber eigentlich will ich kein

01:57:32.040 --> 01:57:34.040
Unsafe-Zeug rausgeben.

01:57:34.040 --> 01:57:43.430
Okay, ich hab ne andere Idee, Leute.

01:57:43.430 --> 01:57:45.430
Wir machen...

01:57:45.430 --> 01:57:47.430
Weil ich will eigentlich hier in meiner Form

01:57:47.430 --> 01:57:49.430
kein Unsafe-Zeug verwenden.

01:57:49.430 --> 01:57:51.430
Das ganze Unsafe-Zeug hier hinterein machen.

01:57:51.430 --> 01:57:53.430
Ich hab ne Idee. Wir machen jetzt noch

01:57:53.430 --> 01:57:55.430
Public Class Frame.

01:57:55.430 --> 01:57:57.430
Der

01:57:57.430 --> 01:57:59.430
kriegt

01:57:59.430 --> 01:58:01.430
ein AV-Frame.

01:58:01.430 --> 01:58:03.430
AV-Frame.

01:58:03.430 --> 01:58:09.360
Ähm.

01:58:09.360 --> 01:58:17.640
Frame.

01:58:17.640 --> 01:58:19.640
Was hat der für Schmerzen?

01:58:19.640 --> 01:58:21.640
Achso.

01:58:21.640 --> 01:58:32.630
Unsafe.

01:58:32.630 --> 01:58:36.770
Wir können's auch noch anders machen. Wir können

01:58:36.770 --> 01:58:38.770
den End-Pointer frame.

01:58:38.770 --> 01:58:45.350
So war das. Also, ja.

01:58:45.350 --> 01:58:47.350
Wir rappen den Krempl

01:58:47.350 --> 01:58:49.350
noch mal in ner eigenen Frame-Klasse.

01:58:49.350 --> 01:58:53.360
Da müssen wir da kein

01:58:53.360 --> 01:58:55.360
Unsafe-Zeug rausgeben. Irgendwie so

01:58:55.360 --> 01:58:57.360
probieren wir das mal aus gerade.

01:58:57.360 --> 01:58:59.360
So von der Idee her

01:58:59.360 --> 01:59:03.570
funktioniert.

01:59:03.570 --> 01:59:05.570
Was programmiert er? Ich programmier nen GIF.

01:59:05.570 --> 01:59:09.720
Einen GIF-Viewer.

01:59:09.720 --> 01:59:11.720
Also, der

01:59:11.720 --> 01:59:13.720
viewt ganz schön schnell das GIF.

01:59:13.720 --> 01:59:15.720
Das ist als Ergänzung

01:59:15.720 --> 01:59:17.720
zu meinem Overlay hier.

01:59:17.720 --> 01:59:19.720
Weil das WPF-GIF-Zeug so langsam ist.

01:59:19.720 --> 01:59:21.720
Guck, wenn du hier drauf klickst.

01:59:21.720 --> 01:59:23.720
Hast

01:59:23.720 --> 01:59:25.720
einen Klick gehört, wie lange das dauert.

01:59:25.720 --> 01:59:27.720
Und das ist der schnellste GIF-Player der Welt hier.

01:59:27.720 --> 01:59:29.720
Leider

01:59:29.720 --> 01:59:31.720
funktioniert der nur im Release-Modus, im Debug-Modus

01:59:31.720 --> 01:59:33.720
nicht. Das macht mich echt fertig

01:59:33.720 --> 01:59:35.720
jetzt. Was ist das für ein Sch... Vielleicht liegt's am Debugger.

01:59:35.720 --> 01:59:37.720
Das liegt am Debugger!

01:59:37.720 --> 01:59:39.720
Wenn da Debugger attached ist,

01:59:39.720 --> 01:59:41.720
dann spackt's rum.

01:59:41.720 --> 01:59:43.720
Wenn da Debugger

01:59:43.720 --> 01:59:45.720
nicht attached ist, dann spackt's nicht rum.

01:59:45.720 --> 01:59:49.280
Liegt das am Native-Code-Debuggen?

01:59:49.280 --> 01:59:59.250
Nee.

01:59:59.250 --> 02:00:01.250
Also, mit attachedem Debugger

02:00:01.250 --> 02:00:03.250
spinnt's?

02:00:03.250 --> 02:00:05.250
Okay, dann ist das...

02:00:05.250 --> 02:00:07.250
Ich glaube gar nicht, dass mein Code da irgendwie Probleme

02:00:07.250 --> 02:00:12.160
hat, aber...

02:00:12.160 --> 02:00:18.800
Oder doch? Komisch.

02:00:18.800 --> 02:00:20.800
Aber...

02:00:20.800 --> 02:00:22.800
Wir machen das trotzdem mal mit der eigenen

02:00:22.800 --> 02:00:30.150
Klasse.

02:00:30.150 --> 02:00:32.150
So, und dann kriegen wir jetzt hier einen AV-Frame.

02:00:32.150 --> 02:00:34.150
So, überlegen wir mal,

02:00:34.150 --> 02:00:36.150
wie wir das am besten machen. Ähm...

02:00:36.150 --> 02:00:41.190
Also haben wir einen AV-Frame.

02:00:41.190 --> 02:00:51.920
Ich probier das jetzt mal so.

02:00:51.920 --> 02:00:53.920
Frame...

02:00:53.920 --> 02:01:11.540
Suppose...

02:01:11.540 --> 02:01:13.540
Weil das ist eigentlich das, was ich ursprünglich

02:01:13.540 --> 02:01:15.540
ursprünglich vorhatte.

02:01:15.540 --> 02:01:20.640
Also ich wollte

02:01:20.640 --> 02:01:22.640
eh eine eigene Klasse dafür machen,

02:01:22.640 --> 02:01:24.640
dass ich kein unsafe Zeug

02:01:24.640 --> 02:01:26.640
rausgeben muss.

02:01:26.640 --> 02:01:28.640
Weil...

02:01:28.640 --> 02:01:34.200
Fixed...

02:01:34.200 --> 02:01:36.200
Fixed...

02:01:36.200 --> 02:01:38.200
Wie ging der Kram nochmal so, ne? Fixed...

02:01:38.200 --> 02:01:40.200
Und da musste man quasi sagen...

02:01:40.200 --> 02:01:42.200
Das wird doch da dran liegen.

02:01:42.200 --> 02:01:44.200
AV-Frame...

02:01:44.200 --> 02:01:48.080
Sternchen...

02:01:48.080 --> 02:01:50.080
Pointergeschiss...

02:01:50.080 --> 02:01:58.070
Ah...

02:01:58.070 --> 02:02:00.070
Jetzt wirds schmerzen.

02:02:00.070 --> 02:02:02.070
Achso...

02:02:02.070 --> 02:02:04.070
Unsafe...

02:02:04.070 --> 02:02:06.070
Ne, machen wir nicht. Unsafe...

02:02:06.070 --> 02:02:08.070
Unsafe...

02:02:08.070 --> 02:02:11.440
Unsafe...

02:02:11.440 --> 02:02:19.810
Eieiei...

02:02:19.810 --> 02:02:21.810
Ne, ich hab kein if...

02:02:21.810 --> 02:02:23.810
Keine Debug-ifs irgendwo drin.

02:02:23.810 --> 02:02:25.810
Also nicht, dass ich wüsste.

02:02:25.810 --> 02:02:33.480
Unsafe fixed...

02:02:33.480 --> 02:02:35.480
So...

02:02:35.480 --> 02:02:37.480
So...

02:02:37.480 --> 02:02:39.480
Was können wir in unserer Frame-Klasse sinnvolles geben?

02:02:39.480 --> 02:02:41.480
Das ist eh was, was ich noch machen wollte.

02:02:41.480 --> 02:02:43.480
Properties brauchen wir.

02:02:43.480 --> 02:02:45.480
Wir brauchen...

02:02:45.480 --> 02:02:47.480
Int-Pointer-Data...

02:02:47.480 --> 02:02:52.770
Hier wird er mir wahrscheinlich wieder meckern.

02:02:52.770 --> 02:02:54.770
Hier wird er mir wahrscheinlich wieder meckern.

02:02:54.770 --> 02:02:56.770
Wenn ich sage...

02:02:56.770 --> 02:02:58.770
Framedata...

02:02:58.770 --> 02:03:00.770
Null... Das mag er wahrscheinlich nicht.

02:03:00.770 --> 02:03:12.280
Ne, das muss unsafe sein.

02:03:12.280 --> 02:03:14.280
Also sprich, brauchen wir hier

02:03:14.280 --> 02:03:16.280
einen getSet

02:03:16.280 --> 02:03:18.280
get...

02:03:18.280 --> 02:03:20.280
Return...

02:03:20.280 --> 02:03:22.280
So...

02:03:22.280 --> 02:03:24.280
Das da brauchen wir...

02:03:24.280 --> 02:03:26.280
Das da brauchen wir...

02:03:26.280 --> 02:03:28.280
Hups, was jetzt?

02:03:28.280 --> 02:03:36.840
Achso, unsafe...

02:03:36.840 --> 02:03:38.840
Moment, Einrückung...

02:03:38.840 --> 02:03:44.130
Einrückung...

02:03:44.130 --> 02:03:46.130
Unsafe...

02:03:46.130 --> 02:03:48.130
Unsafe...

02:03:48.130 --> 02:03:50.130
Return unsafe...

02:03:50.130 --> 02:03:54.020
So, gut.

02:03:54.020 --> 02:03:56.020
Wenn er nicht mag, wird gecastet, klar.

02:03:56.020 --> 02:03:58.020
Easy cast, easy life.

02:03:58.020 --> 02:04:00.020
So, dann brauchen wir noch...

02:04:00.020 --> 02:04:02.020
Int...

02:04:02.020 --> 02:04:06.740
Int...

02:04:06.740 --> 02:04:08.740
Int...

02:04:08.740 --> 02:04:10.740
Int...

02:04:10.740 --> 02:04:12.740
Int...

02:04:12.740 --> 02:04:14.740
Int...

02:04:14.740 --> 02:04:16.740
Int...

02:04:16.740 --> 02:04:18.740
Int...

02:04:18.740 --> 02:04:27.360
Int...

02:04:27.360 --> 02:04:29.360
Int...

02:04:29.360 --> 02:04:35.110
Falls das jetzt klappt, hat derjenige,

02:04:35.110 --> 02:04:37.110
der von fix geschrieben hat,

02:04:37.110 --> 02:04:49.250
doch recht gehabt.

02:04:49.250 --> 02:04:55.890
Das Package können wir weiter anreffen.

02:04:55.890 --> 02:04:57.710
Klar, das gibt's ja nicht. So, weil Frame

02:04:57.710 --> 02:04:59.930
ist jetzt ja ein breiter, breiter

02:04:59.930 --> 02:05:01.870
Dings da. Breite Höhe brauchen wir

02:05:01.870 --> 02:05:04.150
noch. Das kann natürlich schon funktionieren.

02:05:10.780 --> 02:05:11.220
Witz

02:05:11.220 --> 02:05:17.230
und Heiz.

02:05:19.700 --> 02:05:21.360
Wisst ihr, wo ich übelst Bock drauf hätte, Leute?

02:05:24.040 --> 02:05:25.260
Also, nicht jetzt.

02:05:26.160 --> 02:05:27.100
Aber wo ich gerade,

02:05:27.240 --> 02:05:29.380
gerade so Bauchgefühl, gerade

02:05:29.380 --> 02:05:31.300
so unbewusst dran gedacht

02:05:31.300 --> 02:05:32.820
habe, wo ich übelst Bock drauf hätte.

02:05:34.280 --> 02:05:35.360
Das ist, ich würde jetzt

02:05:35.360 --> 02:05:37.180
gerne mit dem Fabian MW2 spielen auf der

02:05:37.180 --> 02:05:39.240
360. So, ohne Scheiß, das habe ich

02:05:39.240 --> 02:05:41.260
mir gerade so eingefallen. Am liebsten würde

02:05:41.260 --> 02:05:43.300
ich mich jetzt einloggen. Xbox Party

02:05:43.300 --> 02:05:45.400
Chat. Alter, war Xbox Party Chat geil.

02:05:45.480 --> 02:05:47.300
Nicht diese verkackte Scheiße da, ja.

02:05:53.400 --> 02:05:54.200
Stunden haben wir den

02:05:54.200 --> 02:05:56.040
Krams gespielt. Außerdem waren wir da noch jünger.

02:05:57.800 --> 02:05:58.200
Wobei

02:05:58.200 --> 02:06:00.180
ist es nicht so, dass ich mir großartig alt vorkomme in der

02:06:00.180 --> 02:06:01.800
Richtung. Aber das wäre nice.

02:06:05.320 --> 02:06:05.640
So.

02:06:10.580 --> 02:06:11.020
Witz.

02:06:12.420 --> 02:06:14.740
So viele Witz und so viele Heiz.

02:06:16.020 --> 02:06:16.720
Noch mehr.

02:06:22.550 --> 02:06:23.090
Das ist

02:06:23.090 --> 02:06:24.650
jetzt einfach nur noch Frame Data.

02:06:24.650 --> 02:06:26.570
Das haben wir schön gewrappt.

02:06:31.600 --> 02:06:32.840
Bin schon mal gespannt, ob der

02:06:32.840 --> 02:06:33.900
Shit funktioniert, ja.

02:06:34.920 --> 02:06:36.600
So, jetzt muss es erstmal funktionieren und wir

02:06:36.600 --> 02:06:37.940
Memory leaken jetzt wie verrückt.

02:06:39.460 --> 02:06:40.580
Wir Memory leaken ordentlich.

02:06:40.720 --> 02:06:42.960
2 GB RAM schon weg. Bam in your face.

02:06:47.870 --> 02:06:48.610
So, mal gucken, ob das

02:06:48.610 --> 02:06:50.690
jetzt funktioniert. Frame. Dispose.

02:06:54.460 --> 02:06:54.820
Scheiße,

02:06:54.920 --> 02:06:56.220
Alter, was ist das für eine Kacke?

02:07:01.650 --> 02:07:02.850
Ich bin voll auf den Sack, ja.

02:07:10.020 --> 02:07:11.960
Ich bin mega auf den Sack, dass das nicht funktioniert.

02:07:29.250 --> 02:07:29.990
Alter, wie ging das?

02:07:30.990 --> 02:07:31.390
Free.

02:07:31.830 --> 02:07:33.630
Kann ich mal tippen.

02:07:36.850 --> 02:07:37.450
Free.

02:07:43.020 --> 02:07:43.620
Frame.

02:07:44.400 --> 02:07:44.960
Frame.

02:07:45.980 --> 02:07:46.980
Ich kann nicht schreiben.

02:07:47.440 --> 02:07:48.680
AV Frame.

02:07:50.620 --> 02:07:51.220
Free.

02:07:58.220 --> 02:07:59.180
Nee, nee, das mag nicht.

02:08:00.540 --> 02:08:01.800
Ich weiß, woran das

02:08:01.800 --> 02:08:03.000
liegt. Ich habe eine Idee.

02:08:04.260 --> 02:08:05.720
Das liegt überhaupt nicht an den

02:08:05.720 --> 02:08:07.420
Referenzen. Das liegt

02:08:07.420 --> 02:08:08.380
hier dran.

02:08:12.200 --> 02:08:14.040
Das liegt 100 pro hier irgendwo dran.

02:08:14.380 --> 02:08:15.320
Ich sag's euch.

02:08:16.300 --> 02:08:18.420
Das Rumgesieke

02:08:18.420 --> 02:08:20.020
ist nicht richtig, was ich hier mache.

02:08:21.860 --> 02:08:22.760
Weil ich guck mal,

02:08:23.100 --> 02:08:24.900
das kackt ab, genau,

02:08:26.060 --> 02:08:26.860
ziemlich genau,

02:08:27.000 --> 02:08:28.600
nachdem es einmal durch ist.

02:08:33.480 --> 02:08:34.740
Mein Gesieke ist falsch.

02:08:41.460 --> 02:08:42.020
Jetzt kackt,

02:08:42.060 --> 02:08:43.200
wischelst du dir noch ab, oder was?

02:08:47.490 --> 02:08:49.670
Guck, das kackt mehr oder weniger

02:08:49.670 --> 02:08:51.610
direkt nach. Ich siege falsch.

02:08:51.950 --> 02:08:52.910
Das wird sein.

02:08:54.030 --> 02:08:55.810
Es fehlt noch was,

02:08:55.810 --> 02:08:56.430
oder sowas.

02:08:57.210 --> 02:09:13.950
Ist das anders an der Stelle?

02:09:14.070 --> 02:09:24.530
Fast. Das ist einfach nur

02:09:24.530 --> 02:09:25.310
verzögert da.

02:09:29.710 --> 02:09:31.550
Ich wette mir, ich siege falsch.

02:09:36.180 --> 02:09:37.460
Ich hab das so irgendwie...

02:09:38.100 --> 02:09:39.620
Mach einfach Try-Catch drauf.

02:09:40.360 --> 02:09:41.380
Wahrscheinlich wird das sogar

02:09:41.380 --> 02:09:43.740
funktionieren. Aber da haben wir auf jeden Fall

02:09:43.740 --> 02:09:44.780
irgendeine Memory-Leak drin.

02:09:45.460 --> 02:10:04.440
Ich muss mal suchen. Ich hab bestimmt

02:10:04.440 --> 02:10:05.680
irgendwo was, wo ich mal

02:10:05.680 --> 02:10:07.660
den Stream gesettet hab.

02:10:12.420 --> 02:10:14.060
Ich such noch mal.

02:10:14.240 --> 02:10:15.180
Ich such noch mal danach.

02:10:21.410 --> 02:10:23.030
Seek File Position.

02:10:23.030 --> 02:10:23.210
Okay.

02:10:51.110 --> 02:10:53.590
Fmpeg Format Context

02:10:53.590 --> 02:10:54.330
Seek

02:10:54.330 --> 02:11:04.260
Stream Reset

02:11:04.260 --> 02:11:36.830
Einfach nicht siegen und die Datei

02:11:36.830 --> 02:11:44.210
selbst storen. Ja, das ist...

02:11:44.210 --> 02:11:46.110
Es muss gehen. Man muss doch

02:11:46.110 --> 02:11:48.230
an den Anfang kommen.

02:11:57.390 --> 02:11:58.150
Nee, Flo.

02:11:58.290 --> 02:11:59.030
Sowas mach ich nicht.

02:12:00.330 --> 02:12:00.910
Also sag mal so,

02:12:01.990 --> 02:12:04.330
das mit dem Storen,

02:12:04.610 --> 02:12:06.530
das ist eh eine Sache, die ich vielleicht noch mache.

02:12:07.850 --> 02:12:08.630
Aber ich will

02:12:08.630 --> 02:12:09.890
wissen, wie ich ordentlich siege.

02:12:29.560 --> 02:12:30.040
Position.

02:12:30.900 --> 02:12:42.110
AV-Konec

02:12:42.110 --> 02:12:45.030
Flush Buffers. Aha.

02:12:46.870 --> 02:12:48.090
Können wir gleich mal ausprobieren.

02:13:20.820 --> 02:13:22.660
Was? Als letzten Parameter 4.

02:13:22.940 --> 02:13:30.680
Okay. Wäre das immer lustig,

02:13:30.760 --> 02:13:32.620
wie interaktiv die ganzen Streams dann wären,

02:13:32.700 --> 02:13:33.900
wenn ich mir irgendwann halt weiter weiß.

02:13:34.900 --> 02:13:39.220
Nope. Ist ja schon gleich am Anfang abgekackt, ey.

02:13:39.620 --> 02:13:42.450
Nimm doch irgendwas nett.

02:13:52.500 --> 02:13:53.460
Warte mal. Ich spar mir jetzt mal

02:13:53.460 --> 02:13:55.340
kurz das Disposen, dann kackt er auf jeden Fall

02:13:55.340 --> 02:13:55.880
nicht mehr ab.

02:13:57.580 --> 02:13:58.720
Aber mein RAM ist halt

02:13:58.720 --> 02:13:59.680
relativ schnell voll.

02:14:53.940 --> 02:14:54.280
Okay.

02:14:54.340 --> 02:14:56.060
Okay. Also, nach was könnte man denn

02:14:56.060 --> 02:14:58.060
nochmal suchen? Interessantes

02:14:58.060 --> 02:15:00.100
ähm, SomaStack

02:15:00.100 --> 02:15:02.100
Overflow. Also was, was ist

02:15:02.100 --> 02:15:04.240
eigentlich, was wir machen? Wir wollen FFM-Pack

02:15:04.240 --> 02:15:09.260
ResetStream.

02:15:12.740 --> 02:15:13.580
Wollen wir vielleicht

02:15:13.580 --> 02:15:16.040
RepeatStream.

02:15:26.900 --> 02:15:27.380
FFM-Pack

02:15:27.380 --> 02:15:28.320
RepeatStream.

02:15:29.300 --> 02:15:30.080
Gibt's da irgendwas?

02:15:42.100 --> 02:15:43.520
FFM für Videostream, du.

02:15:54.080 --> 02:15:55.600
Ich finde das Wort ja überhaupt nicht.

02:16:05.470 --> 02:16:06.590
Moment. Video

02:16:06.590 --> 02:16:08.030
Stack Exchange, da will ich überhaupt nicht hin.

02:16:10.900 --> 02:16:12.900
Repeating FFM-Pack Stream.

02:16:17.960 --> 02:16:19.220
Was will der Max programmieren?

02:16:19.300 --> 02:16:20.080
Warte mal, ich zeig's dir.

02:16:21.300 --> 02:16:22.920
Das Memory liegt aber extrem, weil ich

02:16:22.920 --> 02:16:23.600
gerade noch nicht free.

02:16:26.220 --> 02:16:28.520
Der schnellste Giftplayer der Welt.

02:16:31.180 --> 02:16:32.180
Aber eigentlich soll das

02:16:32.180 --> 02:16:33.920
nicht so schnell wiedergeben, sondern so, dass es

02:16:33.920 --> 02:16:34.880
normal schnell ist.

02:16:42.410 --> 02:16:43.450
Was haben wir hier gefunden?

02:16:43.930 --> 02:16:45.390
Repeating FFM-Pack Stream.

02:16:49.200 --> 02:16:50.260
Ah, das ist der gleiche, Dude.

02:16:52.020 --> 02:16:52.460
Streams.

02:16:52.460 --> 02:16:56.100
A-V-I-O-Sieg.

02:16:57.580 --> 02:17:00.580
A-V-Format-Sieg-File.

02:17:05.180 --> 02:17:05.500
Okay.

02:17:16.020 --> 02:17:16.980
V-I-O.

02:17:32.820 --> 02:17:34.440
Nix F. Stream geht noch.

02:17:35.500 --> 02:17:37.060
V-I-O-Sieg.

02:17:38.080 --> 02:17:39.100
Video-Kontext.

02:17:39.300 --> 02:17:41.040
Äh, äh, Moment. Was ist das hier für ein Kontext,

02:17:41.120 --> 02:17:42.980
was der Typ da reinbastelt?

02:17:43.320 --> 02:17:45.360
Heute sind wir mal richtig Stack-Overflow-Triven,

02:17:45.440 --> 02:17:46.120
ich sag's euch.

02:17:49.840 --> 02:17:50.900
Was ist das für ein Kontext?

02:17:51.240 --> 02:17:53.420
Äh, der, der, der, der, äh...

02:17:54.480 --> 02:17:55.700
Codec-Kontext.

02:17:56.660 --> 02:17:57.060
Oder?

02:17:57.060 --> 02:17:57.120
Oder?

02:18:02.550 --> 02:18:02.750
Nee.

02:18:04.690 --> 02:18:05.290
Nee.

02:18:05.830 --> 02:18:06.070
Oder?

02:18:08.880 --> 02:18:09.940
Format-Kontext.

02:18:19.280 --> 02:18:21.040
Der Typ widerspricht sich irgendwie selbst.

02:18:30.920 --> 02:18:32.260
Format-Kontext.

02:18:33.620 --> 02:18:34.220
Offset?

02:18:34.560 --> 02:18:35.580
Keine Ahnung. Null?

02:18:36.640 --> 02:18:37.840
Äh, Null?

02:18:38.760 --> 02:18:42.120
Ich weiß nicht, wir waren es einfach mal.

02:18:42.800 --> 02:18:44.760
Wobei, der hatte doch irgendwas reingeschrieben hier unten.

02:18:47.020 --> 02:18:47.500
PB.

02:18:47.500 --> 02:18:47.740
PB.

02:18:51.210 --> 02:18:51.690
PB.

02:18:52.890 --> 02:18:53.910
I-O-Kontext.

02:18:53.930 --> 02:18:55.390
Was es nicht alles gibt, ey.

02:18:56.070 --> 02:18:57.010
Was auch immer, äh.

02:18:57.470 --> 02:18:59.570
So, und als nächstes haben wir jetzt FFM-Pack.

02:19:00.210 --> 02:19:02.150
AV-Format.

02:19:02.370 --> 02:19:02.590
Was?

02:19:02.890 --> 02:19:03.450
AV-Format.

02:19:04.130 --> 02:19:05.570
Seek-File.

02:19:07.310 --> 02:19:10.210
So, und da muss rein der komische Kontext hier wieder.

02:19:16.900 --> 02:19:18.280
Äh, Kontext.

02:19:22.120 --> 02:19:23.140
Index of Stream.

02:19:24.180 --> 02:19:24.780
Null.

02:19:26.460 --> 02:19:27.680
Smiles-Timestamp.

02:19:27.800 --> 02:19:28.140
Null.

02:19:29.840 --> 02:19:30.240
Long.

02:19:30.980 --> 02:19:31.700
Target-Timestamp.

02:19:31.700 --> 02:19:31.720
Long.

02:19:31.860 --> 02:19:32.300
Timestamp.

02:19:32.840 --> 02:19:33.560
Was macht der da?

02:19:34.740 --> 02:19:35.340
Stream.

02:19:35.900 --> 02:19:36.540
Stream.

02:19:38.340 --> 02:19:38.940
Duration.

02:19:39.540 --> 02:19:40.200
Null.

02:19:40.780 --> 02:19:43.040
Jetzt bin ich ja mal gespannt, ob der Scheiß funktioniert, äh.

02:19:44.940 --> 02:19:45.260
Ups.

02:19:46.940 --> 02:19:47.240
Äh.

02:19:48.080 --> 02:19:48.860
Hab ich was vergessen?

02:19:53.890 --> 02:19:54.430
Äh, Moment.

02:19:54.910 --> 02:19:55.630
Ich hab was vergessen.

02:19:55.730 --> 02:19:56.270
Was hab ich vergessen?

02:20:00.100 --> 02:20:00.620
Äh.

02:20:03.180 --> 02:20:03.640
Null.

02:20:04.440 --> 02:20:05.040
Min.

02:20:05.220 --> 02:20:05.700
Null.

02:20:11.430 --> 02:20:12.730
Target-Timestamp.

02:20:12.910 --> 02:20:13.210
Null.

02:20:13.210 --> 02:20:13.290
Null.

02:20:16.170 --> 02:20:16.610
Null.

02:20:17.390 --> 02:20:18.430
Max-Timestamp.

02:20:18.690 --> 02:20:18.890
There.

02:20:19.770 --> 02:20:20.510
Jetzt aber, ne?

02:20:21.830 --> 02:20:23.190
Alter, was ist das für ein Tag da?

02:20:25.130 --> 02:20:28.310
Okay, wir Memory-Leaken immer noch des Todes, aber das ist ja klar.

02:20:31.320 --> 02:20:33.080
Okay, jetzt gucken wir, ob wir das pausen dürfen.

02:20:37.520 --> 02:20:37.920
Aha!

02:20:39.180 --> 02:20:40.660
Ich sag's euch, ich hab's euch doch gesagt.

02:20:40.960 --> 02:20:42.220
Wir haben falsch gesiegt.

02:20:43.280 --> 02:20:45.020
Das ist zwar kein richtiges Deutsch.

02:20:45.600 --> 02:20:48.780
Ich weiß zwar nicht, was wir falsch gesiegt haben, aber wir haben falsch gesiegt.

02:20:53.090 --> 02:20:54.750
Das ist halt einfach so.

02:20:54.750 --> 02:20:55.810
Wir wieder.

02:20:55.930 --> 02:20:56.990
Komplett wir, Alter.

02:20:57.150 --> 02:20:57.570
Komplett.

02:20:57.990 --> 02:20:58.550
Durch, äh.

02:21:02.580 --> 02:21:04.940
Und wir Memory-Leaken auch nicht wirklich, oder?

02:21:05.300 --> 02:21:11.620
Vielleicht ein paar Kilobyte, aber das...

02:21:11.620 --> 02:21:12.960
Ne, wir Memory-Leaken nicht.

02:21:17.090 --> 02:21:17.590
Guck mal hier.

02:21:18.030 --> 02:21:22.870
1.200 FPS GIF-Animationen.

02:21:23.070 --> 02:21:26.750
Was gesiegt bedeutet, das ist ganz schlecht eingedeutet, gesucht.

02:21:27.090 --> 02:21:27.290
Ähm.

02:21:28.530 --> 02:21:29.650
Ich mein damit hier das hier, guck.

02:21:30.990 --> 02:21:31.410
Sieg.

02:21:31.710 --> 02:21:32.570
Also, suchen.

02:21:32.570 --> 02:21:34.470
Und zwar, also.

02:21:34.570 --> 02:21:37.390
So wie ich das jetzt verstehe, macht er an der Stelle folgendes.

02:21:38.370 --> 02:21:38.670
Ähm.

02:21:38.790 --> 02:21:40.470
Hier, ich öffne ja hier die Datei.

02:21:40.630 --> 02:21:41.110
Warte mal.

02:21:44.580 --> 02:21:44.960
Hier, guck mal.

02:21:45.000 --> 02:21:46.280
Hier öffne ich ja die Datei.

02:21:46.360 --> 02:21:48.260
Also meine, meine Bilddatei öffne ich ja hier.

02:21:49.180 --> 02:21:49.960
Open Input.

02:21:50.720 --> 02:21:52.520
Im Fad steht die Bilddatei drin, also.

02:21:53.060 --> 02:21:57.580
Und dann hab ich hier ne Schleife, wo ich quasi Inhalte aus der Datei auslese.

02:21:58.100 --> 02:21:59.520
Irgendwann bin ich am Ende.

02:21:59.820 --> 02:22:00.500
End of File.

02:22:01.560 --> 02:22:05.300
Und dann muss ich, dass ich weiterlesen kann, wieder an den Anfang.

02:22:05.600 --> 02:22:05.940
Seeken.

02:22:06.180 --> 02:22:07.040
Also wieder an den Anfang.

02:22:07.160 --> 02:22:07.660
Springen.

02:22:08.060 --> 02:22:09.540
Also ich muss quasi den Anfang suchen.

02:22:10.500 --> 02:22:12.500
Also ich gehe quasi wieder auf Position 0 zurück.

02:22:13.040 --> 02:22:14.320
Das ist ja natürlich sehr umständlich.

02:22:14.320 --> 02:22:21.320
Bei irgendeinem C-Sharp Stream würde ich sagen, bei einem C-Sharp Memory Stream, würde ich sagen, ähm, äh, Position gleich 0 oder mehr am Anfang.

02:22:22.320 --> 02:22:24.040
Aber so einfach ist das hier jetzt natürlich nicht.

02:22:25.980 --> 02:22:28.260
AV Format Sieg File.

02:22:31.880 --> 02:22:33.460
Warum ich doppelt machen muss, weiß ich nicht.

02:22:36.440 --> 02:22:38.500
Weil Stack Overflow das gesagt hat.

02:22:45.310 --> 02:22:47.230
Kannst du ein Video von mir kurz anschauen?

02:22:47.230 --> 02:22:48.230
Und sagen, wie es ist?

02:22:48.230 --> 02:22:51.170
Und ob ich das Video schneller machen soll, also oder nicht?

02:22:52.170 --> 02:22:54.270
Es ist ein Tutorial Video für einen Bot.

02:22:54.650 --> 02:22:58.170
Einer hat mich gefragt, ob ich ein Anleitungsvideo machen möchte für den Bot.

02:22:58.790 --> 02:23:01.490
Was ich auch gemacht habe, was für mich war eher zu langsam.

02:23:01.490 --> 02:23:01.990
Die Aktion.

02:23:02.470 --> 02:23:03.490
Um was für ein Bot geht's denn?

02:23:04.630 --> 02:23:05.430
Gibt ja viele Bots.

02:23:07.270 --> 02:23:08.670
Aktuelle SSD Temps.

02:23:09.290 --> 02:23:10.230
Wie liest man das aus?

02:23:12.110 --> 02:23:14.770
Naja, das geht, dass das das hittet ja gar nicht immer die SSD.

02:23:14.770 --> 02:23:16.670
Das hängt ja schon irgendeinem File System Cache oder so.

02:23:22.960 --> 02:23:24.320
Kommt mir trotzdem nicht ganz richtig vor.

02:23:24.320 --> 02:23:25.520
Hast du probiert, ob man beides machen muss?

02:23:26.040 --> 02:23:26.240
Nö.

02:23:26.600 --> 02:23:28.060
Ich hab das Stack Overflow kopiert.

02:23:28.200 --> 02:23:28.480
Warte mal.

02:23:31.700 --> 02:23:32.380
Nö, muss man nicht.

02:23:39.610 --> 02:23:40.610
Man muss nicht beides machen.

02:23:44.100 --> 02:23:47.320
Jetzt gucken wir mal, ob das andere auch gehen würde.

02:23:51.200 --> 02:23:51.340
Ne.

02:23:51.720 --> 02:23:52.920
Okay, man braucht nur das erste.

02:23:56.820 --> 02:23:58.400
Man braucht nur das erste, wie es aussieht.

02:24:07.120 --> 02:24:07.780
Äh, oder auch nicht.

02:24:08.860 --> 02:24:09.260
Äh.

02:24:10.100 --> 02:24:11.140
Vielleicht braucht man doch beides.

02:24:20.200 --> 02:24:21.180
Man braucht doch beides.

02:24:24.450 --> 02:24:25.330
Das war eben nur Glück, oder?

02:24:25.330 --> 02:24:30.340
Oder nicht?

02:24:30.560 --> 02:24:30.720
Hä?

02:24:31.260 --> 02:24:32.020
Wartet mal.

02:24:32.340 --> 02:24:32.700
The fuck?

02:24:40.630 --> 02:24:41.550
Man braucht doch nur eins.

02:24:41.750 --> 02:24:42.650
Das ist das Spack drumherum.

02:24:42.710 --> 02:24:43.470
Wir müssen mal ein cleanes.

02:24:43.550 --> 02:24:44.430
Wir müssen mal ein neues bilden.

02:24:45.510 --> 02:24:46.130
So, und jetzt nochmal.

02:24:48.130 --> 02:24:48.570
Ne.

02:24:48.990 --> 02:24:49.510
Es reicht.

02:24:49.610 --> 02:24:50.250
Es reicht nicht.

02:24:50.890 --> 02:24:51.190
Guck mal.

02:24:54.070 --> 02:24:55.130
Man muss beides machen.

02:25:02.590 --> 02:25:04.430
Kackt ab, wenn man nur eins davon macht.

02:25:04.910 --> 02:25:05.610
Ab und zu mal.

02:25:06.290 --> 02:25:07.170
So kackt es nicht ab.

02:25:12.330 --> 02:25:13.590
Sehr interessant.

02:25:28.500 --> 02:25:29.580
1200 FPS.

02:25:29.800 --> 02:25:30.960
Die Sekunde, wohlgemerkt.

02:25:31.600 --> 02:25:31.800
Ja.

02:25:31.800 --> 02:25:33.800
Aber richtig cool, dass es...

02:25:34.960 --> 02:25:36.200
...so schnell ist.

02:25:36.200 --> 02:25:39.580
Ich mein, mit gecachten Bildern ist es mit Sicherheit noch ne ganze Ecke schneller.

02:25:40.920 --> 02:25:41.800
Keine Frage.

02:25:44.020 --> 02:25:46.020
Geh ich mal, geh ich mal von aus, dass es, ähm...

02:25:48.020 --> 02:25:50.660
...mit gecachten Bildern noch ne ganze Ecke schneller ist.

02:25:55.670 --> 02:25:57.670
Ich mein, wir könnten es mal ausprobieren.

02:26:00.470 --> 02:26:01.510
Da müssten wir quasi...

02:26:07.370 --> 02:26:11.690
Na, wir könnten uns quasi die Bilder hier intern zwischenspeichern.

02:26:14.770 --> 02:26:16.250
Das können wir mal, das können wir mal probieren.

02:26:17.130 --> 02:26:17.630
Gucken.

02:26:18.230 --> 02:26:19.490
Äh, mal einfach nur mal testen.

02:26:19.490 --> 02:26:21.870
Was es für'n Unterschied macht, wenn wir die Bilder zwischenspeichern.

02:26:23.570 --> 02:26:25.450
Ne Möglichkeit, um die Framerate zu setten.

02:26:25.450 --> 02:26:26.850
Warum soll ich denn die Framerate setten?

02:26:26.850 --> 02:26:28.110
Der soll doch die Framerate messen.

02:26:28.610 --> 02:26:29.110
Hä?

02:26:30.770 --> 02:26:31.790
Du siehst ein Memory Leak.

02:26:31.790 --> 02:26:32.290
Wo ist es?

02:26:32.530 --> 02:26:33.030
Zeig her.

02:26:34.210 --> 02:26:35.170
Äh, private...

02:26:36.090 --> 02:26:36.590
...list...

02:26:36.890 --> 02:26:37.390
...frame.

02:26:38.890 --> 02:26:40.450
Äh, pff, keine Ahnung.

02:26:41.090 --> 02:26:41.590
Frames.

02:26:42.790 --> 02:26:43.410
Jetzt haben wir zwei.

02:26:43.410 --> 02:26:45.410
Einmal Frames klein, einmal Frames groß.

02:26:53.200 --> 02:26:54.200
While true.

02:26:56.560 --> 02:26:58.560
Frames... äh...

02:26:59.120 --> 02:27:01.120
Okay, mal gucken, ob das, ob das so funktioniert.

02:27:05.130 --> 02:27:10.130
Das jetzt noch mal zu checken, was es für'n Performanceunterschied macht, zu cachen.

02:27:13.210 --> 02:27:15.210
Wenn du das Programm jetzt startest, geht's nach oben.

02:27:16.770 --> 02:27:17.270
Hä?

02:27:21.130 --> 02:27:21.630
Wie jetzt?

02:27:22.130 --> 02:27:23.130
Warum soll... Ich hab da gar nichts gemacht.

02:27:40.290 --> 02:27:42.290
Das pendelt sich ein bei irgendwie um die 100.

02:27:43.930 --> 02:27:44.930
Äh, da liegt nix.

02:27:48.870 --> 02:27:49.870
Da liegt nix.

02:27:50.630 --> 02:27:51.430
Warum ist da ein Stier?

02:27:51.430 --> 02:27:53.430
Die... die Chills, Chills der Playliste.

02:27:53.430 --> 02:27:54.430
Warum geht die denn immer?

02:28:04.750 --> 02:28:05.250
Da liegt nix.

02:28:05.250 --> 02:28:05.750
Guck.

02:28:17.180 --> 02:28:17.680
Äh, was heißt Fehler?

02:28:17.680 --> 02:28:19.680
Hätte durchaus sein können.

02:28:21.660 --> 02:28:23.660
Und jetzt bitte das GIF noch mit Multithreading.

02:28:23.660 --> 02:28:25.660
Äh, wir Multithreaden ja im Prinzip schon.

02:28:27.420 --> 02:28:30.420
Wir, wir rendern das GIF in dem einen und die Grafik in dem anderen.

02:28:30.420 --> 02:28:33.420
Also wir decoden das GIF in einem Thread und rendern die Grafik in dem anderen.

02:28:36.320 --> 02:28:38.320
So, jetzt mal gucken, wie viel das jetzt bringt mit gecachten Frames.

02:28:41.580 --> 02:28:42.080
Okay, so.

02:28:42.080 --> 02:28:49.400
Das heißt, wir machen das, wir breaken, also wir gehen raus, nachdem wir einmal durch sind.

02:28:49.400 --> 02:28:50.400
End of File.

02:28:50.400 --> 02:29:03.660
Und danach machen wir endlos, zum testen, endlos add, äh, Frames von, von dem Ding.

02:29:03.660 --> 02:29:09.660
Oder wie machen wir das jetzt am besten?

02:29:09.660 --> 02:29:13.740
Ne, das muss man, das muss man vorschleifen.

02:29:13.740 --> 02:29:17.950
Muss man das machen.

02:29:17.950 --> 02:29:19.950
Oder, wie machen wir das jetzt am besten?

02:29:19.950 --> 02:29:22.950
Sind sie, wir gehen ja, wir breaken, wenn wir End of File sind.

02:29:22.950 --> 02:29:24.950
Wir haben uns alle Files zwischengespeichert.

02:29:24.950 --> 02:29:28.580
Go to, ja.

02:29:28.580 --> 02:29:34.840
Doch, wir machen das mit einer Walschleife.

02:29:34.840 --> 02:29:35.840
Wie machen wir das?

02:29:35.840 --> 02:29:36.840
Wie machen wir das?

02:29:36.840 --> 02:29:37.840
Wir machen C-Style.

02:29:37.840 --> 02:29:38.840
C-N-T.

02:29:38.840 --> 02:29:39.840
So, und dann sagen wir, add, Frames, add.

02:29:39.840 --> 02:29:40.840
Ich bin mal gespannt, wie viel schneller das ist.

02:29:40.840 --> 02:29:41.840
Das lassen wir aber nicht so.

02:29:41.840 --> 02:29:42.840
Ich finde das andere schon schöner, wenn das direkt, weil ich will ja gar nicht so viel

02:29:42.840 --> 02:29:43.840
RAM verbrauchen.

02:29:43.840 --> 02:29:46.470
Das ist ja eigentlich nur ein Zweck der Sache.

02:29:46.470 --> 02:29:47.470
So.

02:29:47.470 --> 02:29:48.470
Add, Frame.

02:29:48.470 --> 02:29:49.470
So.

02:29:49.470 --> 02:29:50.470
So.

02:29:50.470 --> 02:29:51.470
So.

02:29:51.470 --> 02:29:59.030
So.

02:29:59.030 --> 02:30:00.030
So.

02:30:00.030 --> 02:30:01.030
So.

02:30:01.030 --> 02:30:02.030
So.

02:30:02.030 --> 02:30:03.030
So.

02:30:03.030 --> 02:30:04.030
So.

02:30:04.030 --> 02:30:05.030
So.

02:30:05.030 --> 02:30:06.030
So.

02:30:06.030 --> 02:30:07.030
So.

02:30:07.030 --> 02:30:08.030
So.

02:30:08.030 --> 02:30:09.030
So.

02:30:09.030 --> 02:30:10.030
So.

02:30:10.030 --> 02:30:11.030
So.

02:30:11.030 --> 02:30:13.340
So.

02:30:13.340 --> 02:30:14.340
So.

02:30:14.340 --> 02:30:15.340
So.

02:30:15.340 --> 02:30:16.340
So.

02:30:16.340 --> 02:30:17.340
So.

02:30:17.340 --> 02:30:18.340
So.

02:30:18.340 --> 02:30:19.340
So.

02:30:19.340 --> 02:30:20.340
So.

02:30:20.340 --> 02:30:21.340
So.

02:30:21.340 --> 02:30:22.340
So.

02:30:22.340 --> 02:30:23.340
So.

02:30:23.340 --> 02:30:24.340
So.

02:30:24.340 --> 02:30:25.340
So.

02:30:25.340 --> 02:30:26.340
So.

02:30:26.340 --> 02:30:27.340
So.

02:30:27.340 --> 02:30:28.340
So.

02:30:28.340 --> 02:30:29.340
So.

02:30:29.340 --> 02:30:30.340
So.

02:30:30.340 --> 02:30:34.450
So.

02:30:34.450 --> 02:30:35.450
So.

02:30:35.450 --> 02:30:36.450
So.

02:30:36.450 --> 02:30:37.450
So.

02:30:37.450 --> 02:30:38.450
So.

02:30:38.450 --> 02:30:39.450
So.

02:30:39.450 --> 02:30:40.450
So.

02:30:40.450 --> 02:30:41.450
So.

02:30:41.450 --> 02:30:42.450
So.

02:30:42.450 --> 02:30:43.450
So.

02:30:43.450 --> 02:30:44.450
So.

02:30:44.450 --> 02:30:45.450
So.

02:30:45.450 --> 02:30:46.450
So.

02:30:46.450 --> 02:30:53.350
irgendwo irgendwo ist meine meine logik fail größer gleich doch es muss

02:30:53.350 --> 02:31:00.720
wahrscheinlich größer gleich sein auch nicht wo ist das problem

02:31:00.720 --> 02:31:18.140
unser letztes problem ach so ich sollte die frames nicht die pausen das wäre

02:31:18.140 --> 02:31:38.390
vielleicht ganz praktisch moment was stimmt jetzt an meiner logik ich meine

02:31:38.390 --> 02:31:50.490
es kackt schon mal nicht mehr ab das ist schon mal gut 0 immer 0

02:31:50.490 --> 02:32:01.100
ach ich mache es pro durchlauf alter bin ich dumm guck mal richtig dumm ist der

02:32:01.100 --> 02:32:06.640
kaknub kommt mal hier beim gleich mal doppelte bis dreifache anzahl wieder

02:32:06.640 --> 02:32:17.260
schwankt es liegt es liegt da da heftig liegt es warum liegt das denn das

02:32:17.260 --> 02:32:17.400
soll

02:32:17.400 --> 02:32:27.130
du jetzt aber eigentlich nicht liegen das soll

02:32:27.130 --> 02:32:33.130
wo kommt das memory league jetzt bitte schon her ich höre jedoch auf einzulesen

02:32:33.130 --> 02:32:56.300
kommt das her das muss jetzt mal irgendeiner erklären wo das herkommt

02:32:56.300 --> 02:33:03.880
wirst du nicht alten frames aus der liste wie moven

02:33:03.880 --> 02:33:19.440
ja das mache ich ja hier das immer wieder in cash eingelesen hast glaube

02:33:19.440 --> 02:33:30.280
ich nicht kommt das jetzt um liegt das denn jetzt es können ja auch gar nicht

02:33:30.280 --> 02:33:37.080
mehr als 100 rein oder moment ich hab das level rausgenommen ich habe das

02:33:37.080 --> 02:33:39.940
limit rausgenommen für die kohle für die block in collection

02:33:39.940 --> 02:33:55.030
der schreibt wirklich jetzt unendlich viel da reine kassel verpackt hallo an

02:33:55.030 --> 02:34:05.150
die unter aller sau was ist ein memory league er war da mal

02:34:05.150 --> 02:34:08.910
bockers gekämpfte bilder fair macht was aus

02:34:08.910 --> 02:34:11.250
bockers gekämpfte bilder der macht was aus

02:34:11.250 --> 02:34:12.210
Guckt es euch an.

02:34:13.890 --> 02:34:15.230
Gekashte Bilder ist das nochmal.

02:34:15.230 --> 02:34:20.130
Da ist der schnellste Giftplayer quasi noch schneller geworden.

02:34:20.550 --> 02:34:29.070
Jetzt sind wir schon bei fast 5000 FPS.

02:34:29.450 --> 02:34:30.150
Oh mein Gott.

02:34:31.210 --> 02:34:35.070
Also, ähm, in Memory League ist eigentlich relativ einfach erklärt.

02:34:35.550 --> 02:34:41.350
Das, was der Flo96 sagt, ist so schon gar nicht verkehrt, wobei das nicht den Kern trifft.

02:34:41.610 --> 02:34:43.850
Wenn der RAM-Verbrauch permanent steigt, die Frage ist natürlich,

02:34:43.850 --> 02:34:47.530
warum steigt der RAM-Verbrauch immer weiter an.

02:34:49.690 --> 02:34:54.630
Und in Sprachen wie, sagen wir mal, C, dort wo du dich um die Speicherverwaltung selbst kümmern musst,

02:34:55.050 --> 02:34:57.270
ist eigentlich auch das Einzige, wo Memory Leaks auftreten können.

02:34:57.370 --> 02:35:01.970
Und warum ich in C-Sharp Memory Leaks habe, ist, weil ich eben eine C-Library verwende.

02:35:02.550 --> 02:35:05.250
Im Prinzip ist ein Memory Leak ganz einfach damit erklärt,

02:35:05.590 --> 02:35:09.450
wenn du Speicher anforderst, aber den Speicher nicht wieder zurückgibst.

02:35:10.170 --> 02:35:11.110
Das ist ein Memory Leak.

02:35:11.770 --> 02:35:13.830
Wenn ich jetzt sage, Betriebssystem, gib mir Speicher.

02:35:13.850 --> 02:35:18.330
Speicher, ich möchte was damit machen, kriege ich, keine Ahnung, ein MB Speicher.

02:35:19.450 --> 02:35:25.030
Und, ähm, nächstes Mal, wenn ich was sage, wenn ich was brauche nach Betriebssystem,

02:35:25.090 --> 02:35:29.790
ich brauche wieder ein MB Speicher, ohne dass ich den Speicher jemals wieder, äh, sage,

02:35:29.890 --> 02:35:31.210
hier, kannst du wieder verwenden.

02:35:31.490 --> 02:35:32.310
Das ist ein Memory Leak.

02:35:32.630 --> 02:35:36.570
Ja, also sprich, ich gebe einfach nicht den Speicher wieder frei, den ich mal angefordert habe.

02:35:36.650 --> 02:35:37.870
Ganz, ganz simpel gesagt.

02:35:39.390 --> 02:35:40.490
Und was heißt ganz simpel gesagt?

02:35:40.610 --> 02:35:41.290
Genau das ist es.

02:35:42.750 --> 02:35:43.690
Du forderst Speicher.

02:35:43.690 --> 02:35:47.250
Speicher an und gibst ihn nicht wieder, oder vergisst ihn wieder zurückzugeben und forderst weiteren an.

02:35:48.190 --> 02:35:53.550
Und dann leakst du halt quasi Memory, weil, naja, du hast es angefordert, gibst es aber nie wieder zurück.

02:35:55.410 --> 02:35:59.610
Letztendlich führt ein Memory Leak aber nie dazu, dass was kaputt geht.

02:36:00.390 --> 02:36:07.370
Das Schlimmste, was passieren kann, ist, äh, dass es irgendwann mal Out of Memory gibt und du halt keinen Rahmen mehr kriegst

02:36:07.370 --> 02:36:08.770
oder dein Programm abgeschossen wird.

02:36:10.210 --> 02:36:12.510
Das, äh, wahrscheinlich eher dein Programm abgeschossen wird.

02:36:12.570 --> 02:36:13.670
Also, eigentlich passiert nichts.

02:36:13.690 --> 02:36:23.710
Weil spätestens, wenn dein Programm beendet wird, wird auch jeglicher Speicher wieder eingesammelt, den, den es jemals bekommen hat.

02:36:24.070 --> 02:36:30.810
Also sprich, du kannst nur, und das ist eine ganz wichtige Geschichte, die man sich merken muss, du kannst nur Memory leaken, solange dein Programm noch läuft.

02:36:32.410 --> 02:36:39.890
Das ist ja auch gerade der, der Effekt, den man hat bei Zeug, was ein bisschen merkwürdig programmiert ist, und zum Beispiel war es am Anfang Battlefield 4,

02:36:40.690 --> 02:36:42.890
dass man das teilweise nach 2-3 Stunden...

02:36:43.690 --> 02:36:47.590
Neu starten musste, weil das dann irgendwann 5 GB gefressen hat oder so, RAM.

02:36:48.770 --> 02:36:56.870
Und nach, durch den Neustart vom Game beendet sich der Prozess, das Betriebssystem sammelt allen Arbeitsspeicher wieder ein, den es jemals diesen Prozess gegeben hat,

02:36:57.270 --> 02:37:03.070
das weiß es ja, das wurde ja von ihm angefordert, und, ähm, sagt, jawohl, kann es wieder verwendet werden.

02:37:09.410 --> 02:37:14.510
Okay, bei, seit über 3, man sieht es natürlich anders aus, ja, wir reden jetzt hier rein von User-Mode-Geschichten.

02:37:23.800 --> 02:37:27.580
Aber ich muss sagen, hier dieser, der Player, der ist richtig hübsch.

02:37:27.640 --> 02:37:28.000
Jetzt, oder?

02:37:30.470 --> 02:37:34.350
Wir können das hier nochmal einrücken, bisschen anders, ich glaube, wir machen das mal alles...

02:37:36.410 --> 02:37:39.070
Gucken, ob das so besser aussieht, wenn wir das alles auf eine Ebene machen.

02:37:48.020 --> 02:37:48.960
Sieht das jetzt besser aus?

02:37:49.040 --> 02:37:49.620
Ah, ich weiß nicht.

02:37:51.220 --> 02:37:52.220
Sieht kürzer aus.

02:37:53.240 --> 02:37:54.320
Dsch, dsch, dsch, dsch, dsch, dsch, dsch.

02:38:03.650 --> 02:38:08.070
Ich muss sagen, ich finde den, ich finde den Gift-Player eigentlich ganz, ganz hübsch, jetzt, so wie er ist.

02:38:08.810 --> 02:38:13.130
Vor allem jetzt, nachdem wir den Frame nochmal quasi, ähm, gekapselt haben,

02:38:20.530 --> 02:38:21.810
finde ich den echt ganz, ganz...

02:38:21.830 --> 02:38:22.330
ganz nett.

02:38:32.060 --> 02:38:34.360
Ach so, ja, gut, jetzt müssen wir noch einen Sleep einbauen.

02:38:37.860 --> 02:38:40.880
Okay, dann machen wir hier noch einen Public.

02:38:44.870 --> 02:38:46.870
Wusste man zwar nicht, aber finde ich schöner.

02:38:50.120 --> 02:38:52.220
Stream-Index brauchen wir auch nicht, ist immer 0.

02:38:53.360 --> 02:38:59.010
Ähm, können wir tatsächlich Read-Only machen.

02:39:06.780 --> 02:39:10.060
Ähm, wir machen jetzt noch hier was.

02:39:10.860 --> 02:39:11.300
PS.

02:39:13.920 --> 02:39:14.360
FPS.

02:39:14.360 --> 02:39:17.060
Und das setzen wir.

02:39:17.240 --> 02:39:40.470
Äh, äh, ähm, Stream-Frame-Rate, oder wie heißt der Scheiß?

02:39:41.590 --> 02:39:42.810
Watch-Frame-Rate.

02:39:45.180 --> 02:39:47.520
So, jetzt kriegen wir noch die FPS.

02:39:47.980 --> 02:39:52.520
So, jetzt werden wir das Ganze nämlich ein bisschen begrenzen noch, weil aktuell ist ein bisschen, ein bisschen viel, ne?

02:39:52.740 --> 02:39:55.160
Guck mal, was der ganze Spaß für CPU verursacht.

02:39:56.380 --> 02:39:56.900
Ah, ja.

02:39:56.900 --> 02:40:05.620
Ah, also wir brauchen gerade mal läppische 30%, ah, sag mal 33% CPU.

02:40:05.640 --> 02:40:13.460
Also, quasi von einem 6-Kerne lasten wir zwei Kerne quasi komplett aus, gerade.

02:40:13.900 --> 02:40:14.280
Komplett.

02:40:14.540 --> 02:40:17.800
Was auch irgendwie Sinn ergibt, dass wir zwei Kerne komplett auslasten, ne?

02:40:18.240 --> 02:40:21.060
Wir haben hier unseren Thread, der GIFs decodet.

02:40:21.840 --> 02:40:24.780
Und wir haben hier unseren Thread, der wie verrückt rendert.

02:40:26.480 --> 02:40:29.700
Also, das passt schon, dass wir zwei Kerne ziemlich gut auslasten.

02:40:31.040 --> 02:40:34.620
Und das ist ein Beispiel halt für ein Problem, was sich super multithreaden lässt.

02:40:34.620 --> 02:40:37.060
So, und wir werden jetzt mal...

02:40:37.080 --> 02:40:37.580
...sleepen.

02:40:39.970 --> 02:40:46.630
Wir, wir sleepen jetzt allerdings, äh, nicht einfach random irgendwie, sondern wir sleepen jetzt anhand der...

02:40:52.300 --> 02:40:53.420
...na, irgendwie Time...

02:40:54.280 --> 02:40:55.460
...das ist hier Decoder...

02:40:56.480 --> 02:40:57.160
...FPS...

02:40:58.960 --> 02:40:59.880
...hier 1000...

02:41:01.300 --> 02:41:01.940
...1000...

02:41:02.480 --> 02:41:05.480
...durch FPS, dann müssten wir eigentlich die Zeit, oder?

02:41:06.100 --> 02:41:09.100
Die Zeit in Millisekunden haben, die wir sleepen müssten.

02:41:13.140 --> 02:41:14.060
Da ist ein Double.

02:41:18.210 --> 02:41:19.510
Ja, ich will's ja in Millisekunden.

02:41:20.490 --> 02:41:25.530
Eins, eins durch Framerate ist ja null Komma irgendwas, ich will's ja, ich will's ja in Millisekunden, das müsste so doch eigentlich passen.

02:41:28.520 --> 02:41:29.020
Time.

02:41:29.240 --> 02:41:30.620
Oder ist das jetzt genau falsch rum?

02:41:33.190 --> 02:41:34.050
Ne, passt doch!

02:41:34.510 --> 02:41:35.010
Guck mal!

02:41:35.710 --> 02:41:37.710
Genau, 25 FPS, so soll's sein!

02:41:47.060 --> 02:41:51.340
Das ist der alte GIF-Player, also man sieht, 25 FPS sind 25 FPS.

02:41:54.890 --> 02:41:56.790
Wenn man sich das anguckt, wird man verrückt, ne?

02:41:57.770 --> 02:41:58.470
Mit der Zeit.

02:41:59.030 --> 02:42:00.530
Das wird, da wird's voll schwindelig.

02:42:03.960 --> 02:42:05.260
Man sieht, es ist nicht ganz synchron.

02:42:05.260 --> 02:42:06.140
Guck mal, es läuft auseinander.

02:42:06.140 --> 02:42:08.140
Jetzt weiß man nicht, was richtiger ist.

02:42:08.140 --> 02:42:10.140
Mainz oder der WPF-Timer.

02:42:10.140 --> 02:42:12.140
Es läuft immer weiter auseinander.

02:42:12.140 --> 02:42:14.140
Ja, mit dem Timer könnte man das auch machen.

02:42:14.140 --> 02:42:19.560
Aber wir brauchen halt, also wir bräuchten halt einen sehr, sehr präzisen Timer.

02:42:19.560 --> 02:42:21.560
Ja, also das wäre schon, also mit, mit nem Timer, den man auf, ähm...

02:42:21.560 --> 02:42:23.560
Da reichen noch nicht mal Millisekunden.

02:42:23.560 --> 02:42:51.380
Also mal angenommen, wir wollen was mit 60 FPS haben.

02:42:51.380 --> 02:42:53.380
Ne, dann bräuchten wir quasi 16,6, ne?

02:42:53.380 --> 02:42:55.380
Ja, also das wäre schon, also mit, mit nem Timer, den man auf, ähm...

02:42:55.380 --> 02:42:57.380
Da reichen noch nicht mal Millisekunden.

02:42:57.380 --> 02:43:02.100
Da reichen noch nicht mal Millisekunden.

02:43:02.100 --> 02:43:04.100
Also mal angenommen, wir wollen was mit 60 FPS haben.

02:43:04.100 --> 02:43:13.340
Ne, dann bräuchten wir quasi 16,66, also irgendwie soweit, wie es geht.

02:43:13.340 --> 02:43:17.100
Millisekunden.

02:43:17.100 --> 02:43:19.100
Die Differenz der Zyklen, ja, das muss man auch machen.

02:43:19.100 --> 02:43:29.100
Ne, das ist, also und sprich, wenn man es quasi nur mit 16 macht, wird man ja irgendwie, dann läuft man ja mit knapp unter 25, äh, FPS.

02:43:29.100 --> 02:43:35.100
Also müsste man, ne, mit knapp über 25, umso kürzer die Zeit, umso, umso schneller.

02:43:35.100 --> 02:43:37.100
Knapp über 25 FPS.

02:43:37.100 --> 02:43:39.100
Also bräuchte man irgendwie nen Timer.

02:43:39.100 --> 02:43:41.100
Der halt auch wirklich hoch auflöst.

02:43:41.100 --> 02:43:43.100
Gibt's, gibt's .NET mäßig, mäßig sowas?

02:43:43.100 --> 02:43:46.920
Gibt's, gibt's .NET mäßig, mäßig sowas?

02:43:46.920 --> 02:43:48.920
Timer, Intervall, kann man, kann man die Inter...

02:43:48.920 --> 02:43:50.920
Timer, Intervall, kann man, kann man die Inter...

02:43:50.920 --> 02:43:52.920
Warte mal, das müssen wir mal gucken.

02:43:52.920 --> 02:43:54.920
Wie sieht es mit Sleep...

02:43:54.920 --> 02:43:56.920
Nanosekunden aus? Mikrosekunden aus?

02:43:56.920 --> 02:43:58.920
Ähm...

02:43:58.920 --> 02:44:00.920
Es gibt, es gibt das hier.

02:44:00.920 --> 02:44:02.920
Es gibt Thread, aber das ist nicht schön.

02:44:02.920 --> 02:44:04.920
Es gibt Spin Weight.

02:44:04.920 --> 02:44:06.920
Da kannst du irgendwie, ähm...

02:44:06.920 --> 02:44:08.920
Ich weiß nicht, ob's...

02:44:08.920 --> 02:44:10.920
Sind's Nanosekunden?

02:44:10.920 --> 02:44:15.260
Ne, das ist, glaub ich, irgendwie...

02:44:15.260 --> 02:44:17.260
Schla... äh, so Internet-Schleifendurchgänge oder sowas.

02:44:17.260 --> 02:44:24.470
Wir können ja mal Stack Overflow bemühen.

02:44:24.470 --> 02:44:26.470
Wir können ja mal Stack Overflow bemühen.

02:44:26.470 --> 02:44:28.470
C Sharp, Sleep...

02:44:28.470 --> 02:44:30.470
Nanosekonds.

02:44:30.470 --> 02:44:38.970
Wir können mal gucken, was, was Task Delay hat.

02:44:38.970 --> 02:44:40.970
Wir können mal gucken, was, was Task Delay hat.

02:44:40.970 --> 02:44:42.970
Millisekonds, Millisekonds, Timespan.

02:44:42.970 --> 02:44:44.970
Millisekonds, Millisekonds, Timespan.

02:44:44.970 --> 02:44:46.970
Na, wenn das Ding ne Timespan frisst...

02:44:46.970 --> 02:44:54.440
Na, wenn das Ding ne Timespan frisst...

02:44:54.440 --> 02:44:56.440
Programmierst du auch beruflich?

02:44:56.440 --> 02:44:58.440
Ja, aber was anderes als hier...

02:44:58.440 --> 02:45:00.440
Ich mach ja keine hauptsächliche Scroller damit.

02:45:00.440 --> 02:45:08.740
Ich programmier auch Sachen.

02:45:08.740 --> 02:45:10.740
Ich mach so das, was man neudeutsch DevOps nennt.

02:45:10.740 --> 02:45:12.740
Ich mach so das, was man neudeutsch DevOps nennt.

02:45:12.740 --> 02:45:14.740
Kann man hier nicht sagen New Timespan?

02:45:14.740 --> 02:45:16.740
Kann man hier nicht sagen New Timespan?

02:45:16.740 --> 02:45:20.250
Also erstmal gucken, ob das generell mit dem...

02:45:20.250 --> 02:45:22.250
Also erstmal gucken, ob das generell mit dem...

02:45:22.250 --> 02:45:32.660
Delay... Wie macht man das jetzt? Weight?

02:45:32.660 --> 02:45:36.490
Nicht wirklich, oder?

02:45:36.490 --> 02:45:38.490
Was hat man? 40 Millisekunden für 25 FPS, ne?

02:45:38.490 --> 02:45:40.490
Was hat man? 40 Millisekunden für 25 FPS, ne?

02:45:40.490 --> 02:45:42.490
Okay, der Task Delay ist Fail.

02:45:42.490 --> 02:45:44.490
Okay, der Task Delay ist Fail.

02:45:44.490 --> 02:45:51.580
Der funktioniert nicht richtig.

02:45:51.580 --> 02:45:53.580
60 FPS funktionieren hier.

02:45:53.580 --> 02:45:55.580
60 FPS funktionieren hier.

02:45:55.580 --> 02:45:57.580
60 FPS.

02:45:57.580 --> 02:45:59.580
Ja, und hier sieht man jetzt, dass halt der...

02:45:59.580 --> 02:46:01.580
Ja, und hier sieht man jetzt, dass halt der...

02:46:01.580 --> 02:46:03.580
Das nicht so ganz stimmt.

02:46:03.580 --> 02:46:05.580
Das immer ein bisschen schwankt.

02:46:05.580 --> 02:46:14.580
Wie könnten wir denn das jetzt...

02:46:14.580 --> 02:46:16.580
Wie sleept man denn hier ordentlich?

02:46:16.580 --> 02:46:18.580
Wie könnten wir denn das jetzt...

02:46:18.580 --> 02:46:20.580
Oder besser gesagt...

02:46:20.580 --> 02:46:22.580
Moment.

02:46:22.580 --> 02:46:24.580
Wie gut auflösend sind denn die Timer?

02:46:24.580 --> 02:46:30.010
Wie gut auflösend sind denn die Timer?

02:46:30.010 --> 02:46:40.550
System Threading Timer.

02:46:40.550 --> 02:46:42.550
System Timer.

02:46:42.550 --> 02:46:44.550
System Windows Timer.

02:46:44.550 --> 02:46:46.550
Okay, was ist der Unterschied dazwischen?

02:46:46.550 --> 02:46:48.550
Timer Callback.

02:46:48.550 --> 02:46:50.550
Timer Callback.

02:46:50.550 --> 02:46:55.400
Okay, der sieht kompliziert aus.

02:46:55.400 --> 02:46:57.400
Der kann bestimmt was.

02:46:57.400 --> 02:46:59.400
Period.

02:46:59.400 --> 02:47:01.400
In Millisekonds. Alles in Millisekonds.

02:47:01.400 --> 02:47:10.980
Timers.

02:47:10.980 --> 02:47:12.980
Was haben wir hier zu bieten?

02:47:12.980 --> 02:47:14.980
Intervall. Millisekonds.

02:47:14.980 --> 02:47:21.690
Intervall. Millisekonds.

02:47:21.690 --> 02:47:25.060
Was haben wir hier zu bieten?

02:47:25.060 --> 02:47:27.060
Intervall. Millisekonds.

02:47:27.060 --> 02:47:29.060
Intervall. Millisekonds.

02:47:29.060 --> 02:47:31.060
Intervall. Millisekonds.

02:47:31.060 --> 02:47:33.060
Intervall. Millisekonds.

02:47:33.060 --> 02:47:35.060
Query Performance Counter...

02:47:35.060 --> 02:47:37.060
Das gibt's bestimmt schon managet.

02:47:37.060 --> 02:47:39.060
Das ist...

02:47:39.060 --> 02:47:43.020
Ich mein...

02:47:43.020 --> 02:47:45.020
Ich hätt ne ganz blöde Idee, ne?

02:47:45.020 --> 02:47:51.270
Ich mein...

02:47:51.270 --> 02:47:53.270
Flo, das hast du gut beobachtet.

02:47:53.270 --> 02:47:55.270
Flo, das hast du gut beobachtet.

02:47:55.270 --> 02:48:03.260
Das können wir mal ausprobieren.

02:48:03.260 --> 02:48:05.260
Timer, Timer...

02:48:05.260 --> 02:48:07.260
Er akzeptiert aber Double.

02:48:07.260 --> 02:48:09.260
Er akzeptiert aber Double.

02:48:09.260 --> 02:48:11.260
Das könnten wir echt mal ausprobieren.

02:48:11.260 --> 02:48:17.960
Also sprich, dass man da jetzt...

02:48:17.960 --> 02:48:19.960
Also sprich, dass man da jetzt...

02:48:19.960 --> 02:48:21.960
16,777 oder nee, was war's?

02:48:21.960 --> 02:48:23.960
16,777 oder nee, was war's?

02:48:23.960 --> 02:48:52.580
Ja.

02:48:52.580 --> 02:48:54.580
So. Mal gucken, wie wir das jetzt machen.

02:48:54.580 --> 02:48:56.580
So. Mal gucken, wie wir das jetzt machen.

02:48:56.580 --> 02:48:58.580
Also von der Idee her müssen wir uns jetzt ja die Schleife hier schenken.

02:48:58.580 --> 02:49:00.580
Also von der Idee her müssen wir uns jetzt ja die Schleife hier schenken.

02:49:00.580 --> 02:49:18.100
Und der Renderkrempel müsste eigentlich da...

02:49:18.100 --> 02:49:20.100
Und der Renderkrempel müsste eigentlich da...

02:49:20.100 --> 02:49:25.080
rein jetzt, ne?

02:49:25.080 --> 02:49:27.080
Wenn ich das jetzt richtig sehe.

02:49:27.080 --> 02:49:35.320
Es kann aber auch sein, dass wir es voll verkacken.

02:49:35.320 --> 02:49:37.320
Achso, vielleicht sollte man mal starten.

02:49:37.320 --> 02:49:51.670
Start.

02:49:51.670 --> 02:50:00.550
33?

02:50:00.550 --> 02:50:05.980
33?

02:50:05.980 --> 02:50:10.310
Warum 33?

02:50:10.310 --> 02:50:14.580
Check ich's jetzt nicht?

02:50:14.580 --> 02:50:16.580
Das Ding sollte doch...

02:50:16.580 --> 02:50:18.580
33?

02:50:18.580 --> 02:50:22.730
Warum 33?

02:50:22.730 --> 02:50:24.730
Ich glaub, der timet einfach nicht so genau.

02:50:24.730 --> 02:50:30.090
Nee, der ist einfach nicht so genau,

02:50:30.090 --> 02:50:32.090
der Timer, der ist schlecht.

02:50:32.090 --> 02:50:34.090
Ich mein, wir wollen jetzt hier alle 40 Millisekunden

02:50:34.090 --> 02:50:36.090
Ich mein, wir wollen jetzt hier alle 40 Millisekunden

02:50:36.090 --> 02:50:38.090
einen Tick haben und...

02:50:38.090 --> 02:50:42.680
Hast du noch einen Sleep drin?

02:50:42.680 --> 02:50:49.580
Nee.

02:50:49.580 --> 02:50:51.580
Ja, aber wenn's mit 40 schon halt geht...

02:50:51.580 --> 02:51:02.570
Clocks HD...

02:51:02.570 --> 02:51:08.120
Also, der Timer ist irgendwie nicht sonderlich

02:51:08.120 --> 02:51:10.120
Precision-mäßig.

02:51:10.120 --> 02:51:13.560
Das Drawn geht schon nicht.

02:51:13.560 --> 02:51:15.560
Das Drawn braucht doch keine...

02:51:15.560 --> 02:51:19.060
Das Drawn braucht nix.

02:51:19.060 --> 02:51:21.060
Ja, aber mein Code braucht keine...

02:51:21.060 --> 02:51:23.060
Ja, aber mein Code braucht keine...

02:51:23.060 --> 02:51:27.270
Ohne Timer geht's ja auch

02:51:27.270 --> 02:51:29.270
Ohne Timer geht's ja auch schnell.

02:51:29.270 --> 02:51:31.270
Also, mit nem normalen Sleep funktioniert's ja.

02:51:31.270 --> 02:51:33.270
Also, mit nem normalen Sleep funktioniert's ja.

02:51:33.270 --> 02:51:35.270
Also, daran kann das schon mal nicht liegen.

02:51:35.270 --> 02:51:37.270
Also, mit dem Timer klappt das nicht.

02:51:37.270 --> 02:51:41.480
Ich hab aber ne ganz blöde

02:51:41.480 --> 02:51:43.480
andere Idee.

02:51:43.480 --> 02:51:45.480
Pass mal auf.

02:51:45.480 --> 02:51:50.710
Ist bei GIFs nicht die Zeit

02:51:50.710 --> 02:51:52.710
zwischen den einzelnen Bildern in der GIF selbst

02:51:52.710 --> 02:51:54.710
hinterlegt?

02:51:54.710 --> 02:51:56.710
Das kann durchaus sein.

02:51:56.710 --> 02:52:01.560
Das kann durchaus sein.

02:52:01.560 --> 02:52:08.070
Das kann durchaus sein.

02:52:08.070 --> 02:52:10.070
Warte, wo schreib ich auf Englisch?

02:52:10.070 --> 02:52:12.070
Warte, wo schreib ich auf Englisch?

02:52:12.070 --> 02:52:14.070
Meinst du hier drinne?

02:52:14.070 --> 02:52:16.070
Ja, Source Code schreibt man

02:52:16.070 --> 02:52:23.990
immer auf Englisch.

02:52:23.990 --> 02:52:25.990
Ja, aber Leute, das macht doch überhaupt

02:52:25.990 --> 02:52:27.990
keinen Unterschied. Lass es mal ne Millisekunde

02:52:27.990 --> 02:52:29.990
dauern, wie das

02:52:29.990 --> 02:52:31.990
hier Ding. Das kann aber trotzdem nicht sein,

02:52:31.990 --> 02:52:33.990
dass der Timer auf einmal anstatt 60,

02:52:33.990 --> 02:52:35.990
obwohl ich die Zeit für 60 FPS angegeben habe, auf einmal

02:52:35.990 --> 02:52:43.400
33 hat.

02:52:43.400 --> 02:52:45.400
Achso, das Tastaturlayout. Hab ich nicht.

02:52:45.400 --> 02:52:47.400
Ich hab das Tastaturlayout auf Deutsch.

02:52:47.400 --> 02:52:55.000
So, also. Wir machen jetzt mal

02:52:55.000 --> 02:52:57.000
sowas hier. While True.

02:52:59.000 --> 02:53:01.000
Das ist natürlich

02:53:01.000 --> 02:53:03.000
der Hardcore-Ansatz

02:53:03.000 --> 02:53:05.000
sowas zu machen.

02:53:05.000 --> 02:53:09.460
Also,

02:53:09.460 --> 02:53:14.820
wir machen jetzt sowas wie

02:53:14.820 --> 02:53:16.820
While True und dann

02:53:16.820 --> 02:53:18.820
sleepen wir irgendwie zwischendurch.

02:53:20.820 --> 02:53:22.820
Irgendwie sowas.

02:53:22.820 --> 02:53:24.820
Das funktioniert.

02:53:24.820 --> 02:53:26.820
Das wird auf jeden Fall funktionieren.

02:53:28.820 --> 02:53:30.820
Können wir das irgendwie mit DateTime machen oder so?

02:53:30.820 --> 02:53:35.670
Wobei, wir haben hier oben doch schon

02:53:35.670 --> 02:53:37.670
ein DateTime gesetzt.

02:53:37.670 --> 02:53:39.670
StartTime.

02:53:39.670 --> 02:53:48.100
Warte mal, ich probier das jetzt mal aus.

02:53:48.100 --> 02:53:50.100
StartWait.

02:53:50.100 --> 02:53:57.260
Wobei,

02:53:57.260 --> 02:53:59.260
ne, mit DateTime komme ich da wahrscheinlich nicht weiter.

02:53:59.260 --> 02:54:03.980
Mit StopWatch.

02:54:03.980 --> 02:54:05.980
Mit StopWatch könnte man

02:54:05.980 --> 02:54:12.170
da irgendwas machen.

02:54:12.170 --> 02:54:27.450
Mit StopWatch.

02:54:27.450 --> 02:54:29.450
Was war eine Imageinstanz dort?

02:54:29.450 --> 02:54:31.450
Den aktuellen Frame Index.

02:54:31.450 --> 02:54:33.450
Und Last Update Millisekunden.

02:54:33.450 --> 02:54:41.050
Image Update.

02:54:43.050 --> 02:54:45.050
Leuchtet mir grad nicht ein.

02:54:45.050 --> 02:54:49.900
Achso, du checkst vorher,

02:54:49.900 --> 02:54:53.660
ob es Zeit zum updaten ist.

02:54:53.660 --> 02:54:55.660
Du machst das nicht alles hier in

02:54:55.660 --> 02:54:57.660
so einem riesen Durchlauf,

02:54:57.660 --> 02:54:59.660
sondern du checkst quasi so nach dem Motto

02:54:59.660 --> 02:55:01.660
gibt's ein Update, ist es Zeit zu updaten

02:55:01.660 --> 02:55:03.660
und wenn es Zeit zu updaten ist, dann wird gemalt

02:55:03.660 --> 02:55:14.260
und gestort.

02:55:14.260 --> 02:55:19.820
Ticks. Oh, nice.

02:55:19.820 --> 02:55:27.160
Ticks. Ticks brauchen wir.

02:55:27.160 --> 02:55:38.600
Okay, die meinen das ernst.

02:55:38.600 --> 02:55:40.600
Ticks.

02:55:40.600 --> 02:55:49.930
Wie lang ist denn ein Tick?

02:55:49.930 --> 02:55:53.430
Paar Nanosekunden

02:55:53.430 --> 02:55:58.920
oder so?

02:55:58.920 --> 02:56:00.920
Ne, Ticks sind nicht Millisekunden, Ticks sind irgendwas

02:56:00.920 --> 02:56:06.280
mit Nanosekunden oder so.

02:56:06.280 --> 02:56:08.280
How long is DateTime

02:56:08.280 --> 02:56:15.750
Tick?

02:56:15.750 --> 02:56:17.750
Nanoseconds.

02:56:17.750 --> 02:56:19.750
Na, Ticks

02:56:19.750 --> 02:56:21.750
mal 100

02:56:21.750 --> 02:56:23.750
sind Nanoseconds.

02:56:23.750 --> 02:56:25.750
Oder?

02:56:25.750 --> 02:56:27.750
Sehe ich das hier richtig?

02:56:27.750 --> 02:56:36.890
Ticks mal 100 sind Nanoseconds.

02:56:36.890 --> 02:56:48.200
Okay.

02:56:48.200 --> 02:56:50.200
Nanoseconds würden mir schon reichen.

02:56:50.200 --> 02:57:10.220
Ah.

02:57:10.220 --> 02:57:12.220
Haha.

02:57:12.220 --> 02:57:14.220
Das ist ja nice.

02:57:14.220 --> 02:57:18.810
Ticks per Millisecond.

02:57:18.810 --> 02:57:20.810
Aha. Oh, das ist gut.

02:57:20.810 --> 02:57:22.810
Stack Overflow.

02:57:22.810 --> 02:57:24.810
Heute sind wir richtig Stack Overflow

02:57:24.810 --> 02:57:41.180
driven.

02:57:41.180 --> 02:57:43.180
Ich will das jetzt einfach mal rauskriegen,

02:57:43.180 --> 02:57:54.810
ob das so funktioniert würde.

02:57:54.810 --> 02:57:56.810
So.

02:57:56.810 --> 02:57:58.810
Jetzt gucken mir gerade wieder 140 Leute zu.

02:57:58.810 --> 02:58:00.810
Wie ich keine Ahnung hab,

02:58:00.810 --> 02:58:02.810
was ich machen kann.

02:58:02.810 --> 02:58:04.810
Gibt es nicht vielleicht einen

02:58:04.810 --> 02:58:06.810
C-Sharp?

02:58:06.810 --> 02:58:11.980
Das wäre mir natürlich am allerliebsten.

02:58:11.980 --> 02:58:13.980
Da muss ich den ganzen Wait-Scheiß nicht selber machen.

02:58:13.980 --> 02:58:21.700
High Resolution

02:58:21.700 --> 02:58:23.700
Most Accurate Timer.net

02:58:23.700 --> 02:58:28.550
Das hat doch bestimmt schon

02:58:28.550 --> 02:58:30.550
irgendeiner programmiert.

02:58:30.550 --> 02:58:32.550
Github C-Sharp Timer.

02:58:32.550 --> 02:58:34.550
High Precision Timer

02:58:34.550 --> 02:58:36.550
in .net

02:58:36.550 --> 02:58:47.540
Zack. Easy.

02:58:47.540 --> 02:59:03.780
Wie macht der das?

02:59:03.780 --> 02:59:05.780
Ah, mit dem Windows Timer.

02:59:05.780 --> 02:59:07.780
Das können wir auch machen.

02:59:07.780 --> 02:59:12.760
Was ist das für eine

02:59:12.760 --> 02:59:14.760
WinMM

02:59:14.760 --> 02:59:22.170
DLL?

02:59:22.170 --> 02:59:24.170
Media Timer muss ja genau sein.

02:59:24.170 --> 02:59:29.400
Dann machen wir das doch damit.

02:59:29.400 --> 02:59:34.500
Dann machen wir das doch damit.

02:59:34.500 --> 02:59:38.710
Wobei mich ja doch interessieren würde,

02:59:38.710 --> 02:59:40.710
wie man sowas hier hinkriegt.

02:59:40.710 --> 02:59:42.710
Probieren wir das mal mit dem Windows Timer.

02:59:42.710 --> 02:59:44.710
Ich glaube, das ist die bessere Variante.

02:59:44.710 --> 02:59:48.090
Warum ist es hier schwarz?

02:59:48.090 --> 02:59:57.740
Man weiß nicht.

02:59:57.740 --> 02:59:59.740
Vielleicht gibt es aber schon fertige Projekte.

02:59:59.740 --> 03:00:26.600
Da gibt es ein paar.

03:00:26.600 --> 03:00:32.020
Okay, wir machen das mal wie hier.

03:00:32.020 --> 03:00:34.020
Ich finde das hier klingt gut.

03:00:34.020 --> 03:00:36.020
Time Set Event

03:00:36.020 --> 03:00:40.490
Wir klauen uns jetzt mal

03:00:40.490 --> 03:00:42.490
hier den Aufruf

03:00:42.490 --> 03:00:44.490
von ihm, wie er das gemacht hat.

03:00:44.490 --> 03:00:48.700
Also wir klauen uns das nicht.

03:00:48.700 --> 03:00:50.700
Wir holen uns die API Definition raus.

03:00:50.700 --> 03:01:02.710
Ah, hier hat er es nämlich.

03:01:02.710 --> 03:01:07.940
Callback

03:01:07.940 --> 03:01:09.940
Gucken wir mal, ob das funktioniert.

03:01:09.940 --> 03:01:13.700
Wir rendern

03:01:13.700 --> 03:01:15.700
mal gerade nichts.

03:01:15.700 --> 03:01:17.700
Wir gucken einfach nur mal, ob das geht.

03:01:17.700 --> 03:01:19.700
Blablabla

03:01:19.700 --> 03:01:26.340
Time Set

03:01:26.340 --> 03:01:28.340
Timer Callback

03:01:28.340 --> 03:01:30.340
Das sieht von der

03:01:30.340 --> 03:01:32.340
Methode her

03:01:32.340 --> 03:01:34.340
relativ simpel aus.

03:01:34.340 --> 03:01:36.340
Von der Signatur her.

03:01:36.340 --> 03:01:38.340
Also.

03:01:38.340 --> 03:01:40.340
Set

03:01:40.340 --> 03:01:42.340
Time

03:01:42.340 --> 03:01:44.340
Time Set Event

03:01:44.340 --> 03:01:46.340
Time Set Event

03:01:46.340 --> 03:01:51.830
So, und dann sagen wir

03:01:51.830 --> 03:01:53.830
Kleine Stars

03:01:53.830 --> 03:01:55.830
Diese Promifrauen sind unter 1,60m

03:01:55.830 --> 03:01:57.830
Das wollte ich schon immer mal wissen.

03:01:57.830 --> 03:01:59.830
Von gofeminin.de

03:01:59.830 --> 03:02:08.460
Milliseconds?

03:02:08.460 --> 03:02:10.460
Moment.

03:02:10.460 --> 03:02:15.240
Ich will keine Milliseconds.

03:02:15.240 --> 03:02:17.240
Wobei doch, Milliseconds

03:02:17.240 --> 03:02:25.290
mit Komma ist okay.

03:02:25.290 --> 03:02:27.290
Was sagt denn die Microsoft-Hilfeseite dazu?

03:02:27.290 --> 03:02:31.750
Wartet mal kurz.

03:02:31.750 --> 03:02:43.320
So, was sagt denn die

03:02:43.320 --> 03:02:45.320
Microsoft-Hilfeseite dazu?

03:02:45.320 --> 03:02:47.320
In Milliseconds.

03:02:47.320 --> 03:02:53.900
In Milliseconds.

03:02:53.900 --> 03:02:55.900
Ich will das doch nicht

03:02:55.900 --> 03:02:57.900
in Milliseconds haben.

03:02:57.900 --> 03:03:03.450
Warum ist das Scheiß auch wieder in Milliseconds?

03:03:03.450 --> 03:03:05.450
Alter,

03:03:05.450 --> 03:03:17.460
geht mir das auf den Keks jetzt.

03:03:17.460 --> 03:03:19.460
Was?

03:03:19.460 --> 03:03:23.030
Query Performance Counter

03:03:23.030 --> 03:03:25.030
Was ist das?

03:03:25.030 --> 03:03:29.300
Oh,

03:03:29.300 --> 03:03:31.300
Times...

03:03:31.300 --> 03:03:33.300
Oh, ja, das ist schön.

03:03:33.300 --> 03:03:35.300
Das wollen wir haben.

03:03:35.300 --> 03:03:37.300
Sag das doch gleich.

03:03:37.300 --> 03:03:39.300
Dann machen wir einfach jetzt eine while-Schleife

03:03:39.300 --> 03:03:43.580
while true und gucken einfach

03:03:43.580 --> 03:03:45.580
Warum nennt man das

03:03:45.580 --> 03:03:47.580
UTILAVOR des Milliseconds?

03:03:47.580 --> 03:03:49.580
Ich fühle unsigned.

03:03:49.580 --> 03:03:51.580
Weil das ein unsigned int ist.

03:03:51.580 --> 03:04:09.800
Ich weiß, dass du es

03:04:09.800 --> 03:04:11.800
gleich schon gesagt hast.

03:04:11.800 --> 03:04:13.800
Query Performance Counter.

03:04:13.800 --> 03:04:15.800
Query Performance Counter.

03:04:15.800 --> 03:04:23.530
QPC und was ist QPF?

03:04:23.530 --> 03:04:25.530
QPC und was ist QPF?

03:04:25.530 --> 03:04:35.300
Query

03:04:35.300 --> 03:04:37.300
Performance

03:04:37.300 --> 03:04:47.820
Ah.

03:04:47.820 --> 03:04:49.820
Frequency of the Performance Counter.

03:04:49.820 --> 03:04:56.390
Frequency of the Performance Counter.

03:04:56.390 --> 03:04:58.390
Die Frequenz, in der sich der Performance Counter

03:04:58.390 --> 03:05:00.390
updatet, oder was?

03:05:00.390 --> 03:05:02.390
Man sieht, wie groß die Sprünge sind

03:05:02.390 --> 03:05:04.390
zwischen den

03:05:04.390 --> 03:05:06.390
Countern.

03:05:06.390 --> 03:05:08.390
Oder wie darf man das verstehen?

03:05:08.390 --> 03:05:28.980
Query Performance Counter.

03:05:28.980 --> 03:05:34.920
Jetzt, Achtung, schönes neues

03:05:34.920 --> 03:05:36.920
C Sharp 7 Feature.

03:05:36.920 --> 03:05:38.920
OUT

03:05:38.920 --> 03:05:40.920
OUT war

03:05:40.920 --> 03:05:42.920
COUNTER. Nichts damit extra Variable

03:05:42.920 --> 03:05:44.920
anlegen und jetzt

03:05:44.920 --> 03:05:49.830
COUNTER ausgeben.

03:05:49.830 --> 03:05:51.830
Aha, jetzt bin ich mal gespannt.

03:05:51.830 --> 03:05:53.830
Weil...

03:05:53.830 --> 03:06:33.210
Flutscht.

03:06:33.210 --> 03:06:35.210
Achso.

03:06:35.210 --> 03:06:37.210
Und das heißt, hiermit sehe ich quasi den

03:06:37.210 --> 03:06:39.210
COUNTER, der sich erhöht.

03:06:39.210 --> 03:06:41.210
Nur mal so, dass ich das jetzt richtig verstehe.

03:06:41.210 --> 03:06:43.210
Ich habe hier einen COUNTER, ich weiß allerdings nicht, wie genau, wie lang

03:06:43.210 --> 03:06:45.210
eine Einheit ist. Wenn ich wissen will, wie lang eine Einheit

03:06:45.210 --> 03:06:47.210
ist, dann muss ich hier reingucken, ne?

03:06:47.210 --> 03:06:56.410
Oder ist das ein Timestamp

03:06:56.410 --> 03:06:58.410
in...

03:06:58.410 --> 03:07:03.000
in was?

03:07:03.000 --> 03:07:09.450
Mikrosekunden, okay.

03:07:09.450 --> 03:07:19.610
Können wir mal ausprobieren.

03:07:19.610 --> 03:07:21.610
Beruflich mache ich das in vielen Sprachen.

03:07:21.610 --> 03:07:25.610
Also, was natürlich,

03:07:25.610 --> 03:07:27.610
wenn man ein bisschen mit Linux zu tun hat,

03:07:27.610 --> 03:07:29.610
immer der Fall ist, ist

03:07:29.610 --> 03:07:31.610
irgendwelche Shells. Bash.

03:07:31.610 --> 03:07:33.610
Ich mache ganz gerne in Ruby was, wenn es nicht schnell

03:07:33.610 --> 03:07:35.610
sein muss.

03:07:35.610 --> 03:07:37.610
In Groovy habe ich auch ein paar Sachen

03:07:37.610 --> 03:07:39.610
gebastelt schon. Wenn es geht,

03:07:39.610 --> 03:07:41.610
.NET. Mit .NET Core geht der auf

03:07:41.610 --> 03:07:43.610
Linux mittlerweile auch.

03:07:43.610 --> 03:07:45.610
Mache auch die eine oder andere JavaScript

03:07:45.610 --> 03:07:47.610
Frontend-Geschichte, wenn es sich nicht vermeiden lässt.

03:07:47.610 --> 03:07:50.980
Ein paar Sachen. Also, am liebsten

03:07:50.980 --> 03:07:52.980
mache ich eigentlich was in Ruby, wenn es

03:07:52.980 --> 03:07:54.980
nicht auf Performance ankommt.

03:07:54.980 --> 03:07:56.980
Ruby und .NET ist für mich so auf einer,

03:07:56.980 --> 03:07:58.980
also C-Sharp und Ruby ist für mich so auf einer

03:07:58.980 --> 03:08:12.280
Ebene.

03:08:12.280 --> 03:08:17.130
Okay. Also,

03:08:17.130 --> 03:08:19.130
das heißt, nur mal so. Wir machen das

03:08:19.130 --> 03:08:21.130
jetzt mal ganz billig. Wir machen jetzt

03:08:21.130 --> 03:08:23.130
eine Schleife und pranken die Schleife, sobald

03:08:23.130 --> 03:08:25.130
wir quasi

03:08:25.130 --> 03:08:27.130
ähm

03:08:27.130 --> 03:08:29.130
40 Millisekunden

03:08:29.130 --> 03:08:31.130
oder sagen wir mal 16

03:08:31.130 --> 03:08:33.130
16, irgendwas

03:08:33.130 --> 03:08:35.130
Millisekunden

03:08:35.130 --> 03:08:37.130
gewartet haben. Irgendwie so.

03:08:37.130 --> 03:08:39.130
So.

03:08:39.130 --> 03:08:41.130
Oder besser gesagt,

03:08:41.130 --> 03:08:43.130
äh, 16.000

03:08:43.130 --> 03:08:45.130
Mikrosekunden

03:08:45.130 --> 03:08:47.130
Also, gucken wir mal.

03:08:47.130 --> 03:08:53.900
Äh, mal.

03:08:53.900 --> 03:08:55.900
Query Performance Counter

03:08:57.900 --> 03:08:59.900
Ich habe irgendwas im Hals.

03:08:59.900 --> 03:09:01.900
So, und dann brauchen wir jetzt noch das andere.

03:09:01.900 --> 03:09:03.900
Das heißt, dann brauchen wir jetzt noch

03:09:03.900 --> 03:09:10.540
weil es die gleiche

03:09:10.540 --> 03:09:21.020
Signatur hat, ne.

03:09:21.020 --> 03:09:23.020
Okay, das müssen wir nur einmal querien.

03:09:23.020 --> 03:09:35.160
Hab ich auch gerade gesehen.

03:09:35.160 --> 03:09:37.160
Äh, ich weiß

03:09:37.160 --> 03:09:39.160
jetzt gerade nicht, wie wir es nennen sollen.

03:09:39.160 --> 03:09:41.160
Query

03:09:41.160 --> 03:09:43.160
Performance Frequency

03:09:43.160 --> 03:09:45.160
Out

03:09:45.160 --> 03:09:47.160
War

03:09:47.160 --> 03:09:50.980
Äh

03:09:50.980 --> 03:09:52.980
Timespan

03:09:52.980 --> 03:09:57.450
Irgendwie so.

03:09:57.450 --> 03:09:59.450
Was machst du dort gerade? Ich bastel

03:09:59.450 --> 03:10:01.450
ein transparentes

03:10:01.450 --> 03:10:05.270
Gif-Overlay

03:10:05.270 --> 03:10:08.970
für mein

03:10:08.970 --> 03:10:10.970
Meme-Board.

03:10:10.970 --> 03:10:12.970
Weil das Standard-WPF-Overlay, wie du hier siehst,

03:10:12.970 --> 03:10:14.970
viel zu langsam ist.

03:10:14.970 --> 03:10:16.970
Siehst du, du klickst.

03:10:16.970 --> 03:10:18.970
Zack.

03:10:18.970 --> 03:10:20.970
Klick.

03:10:20.970 --> 03:10:22.970
Zack. Klick. Zack.

03:10:22.970 --> 03:10:24.970
Viel zu langsam.

03:10:24.970 --> 03:10:26.970
Bei kleinen Gifs geht es ganz schnell.

03:10:26.970 --> 03:10:28.970
Aber ich habe jetzt was eigenes gebastelt.

03:10:28.970 --> 03:10:30.970
Was viel schneller ist.

03:10:30.970 --> 03:10:32.970
Das spielt Gifs

03:10:32.970 --> 03:10:34.970
mit 4273

03:10:34.970 --> 03:10:36.970
FPS ab.

03:10:36.970 --> 03:10:38.970
Was kein Mensch braucht.

03:10:38.970 --> 03:10:40.970
So, jetzt gucken wir gerade, wie wir am besten warten

03:10:40.970 --> 03:10:42.970
auf das nächste Mal, wo wir rendern müssen.

03:10:42.970 --> 03:10:52.810
Ja.

03:10:52.810 --> 03:10:54.810
Ganz wichtig, nicht einfach FPS,

03:10:54.810 --> 03:10:56.810
sondern FPS in der Sekunde.

03:10:56.810 --> 03:11:00.890
So.

03:11:00.890 --> 03:11:02.890
Performance Counter

03:11:02.890 --> 03:11:04.890
Ups.

03:11:04.890 --> 03:11:06.890
So, jetzt hängt er nach einmal rendern,

03:11:06.890 --> 03:11:08.890
hängt er jetzt hier. Ja, genau.

03:11:08.890 --> 03:11:13.540
So.

03:11:13.540 --> 03:11:15.540
Das bedeutet doch jetzt

03:11:15.540 --> 03:11:17.540
nur mal so von der Idee, also

03:11:17.540 --> 03:11:19.540
wenn ich jetzt hier einmal ausgebe

03:11:19.540 --> 03:11:21.540
quasi den, den, den, den

03:11:21.540 --> 03:11:23.540
die Timespan

03:11:23.540 --> 03:11:27.820
Also das da

03:11:27.820 --> 03:11:31.900
ist quasi

03:11:31.900 --> 03:11:36.620
die Zeit

03:11:36.620 --> 03:11:38.620
zwischen zwei Ticks

03:11:38.620 --> 03:11:40.620
von diesem Performance Counter.

03:11:40.620 --> 03:11:42.620
Oder?

03:11:42.620 --> 03:11:55.690
Wo habe ich das denn jetzt?

03:11:55.690 --> 03:11:57.690
Frequency. Oder?

03:11:57.690 --> 03:11:59.690
Nee, Moment, Moment, Moment.

03:11:59.690 --> 03:12:01.690
Das ist das, nee, das ist wie, wie,

03:12:01.690 --> 03:12:03.690
wie schnell der updatet, oder?

03:12:03.690 --> 03:12:25.300
Gibt es das wieder aus 2000?

03:12:25.300 --> 03:12:37.770
Aha. Genau.

03:12:37.770 --> 03:12:39.770
Counter durch Frequency. Okay.

03:12:39.770 --> 03:12:46.220
Was kommt dann da am Ende raus?

03:12:46.220 --> 03:12:48.220
Nennen wir es nicht Timespan.

03:12:48.220 --> 03:12:50.220
Nennen wir es

03:12:50.220 --> 03:12:57.560
Frequency.

03:12:57.560 --> 03:12:59.560
Das ist, ist das eine Sekunde?

03:12:59.560 --> 03:13:10.810
Das ist jetzt pro Sekunde,

03:13:10.810 --> 03:13:20.330
ne? Aha.

03:13:20.330 --> 03:13:22.330
Okay, das, das ist aber echt

03:13:22.330 --> 03:13:32.620
interessant.

03:13:32.620 --> 03:13:42.140
Lange Mikrosekunden, ja.

03:13:42.140 --> 03:13:44.140
Also ganz, so ganz habe ich es jetzt aber noch

03:13:44.140 --> 03:13:46.140
nicht gecheckt, wie wir das machen.

03:13:46.140 --> 03:13:56.360
Ähm.

03:13:56.360 --> 03:13:58.360
Warte mal. Also sprich, was sehe ich

03:13:58.360 --> 03:14:09.480
denn hier jetzt überhaupt?

03:14:09.480 --> 03:14:11.480
Das updatet sich einmal in der Sekunde.

03:14:11.480 --> 03:14:13.480
Das ist die, der Counter,

03:14:13.480 --> 03:14:15.480
der geht permanent rauf und das

03:14:15.480 --> 03:14:20.710
geteilt durch die,

03:14:20.710 --> 03:14:22.710
durch die Frequency.

03:14:22.710 --> 03:14:30.890
So, also das bedeutet

03:14:30.890 --> 03:14:32.890
jetzt haben wir hier die Frequency.

03:14:32.890 --> 03:14:36.900
Was?

03:14:36.900 --> 03:14:54.040
Wahr,

03:14:54.040 --> 03:15:20.070
das ist kein JavaScript, wahr.

03:15:20.070 --> 03:15:22.070
Wie checke ich das nicht, was ich, was ich

03:15:22.070 --> 03:15:36.460
da jetzt eigentlich für eine Zeit habe?

03:15:36.460 --> 03:15:38.460
Also wenn ich das hier jetzt habe,

03:15:38.460 --> 03:15:43.110
wenn das jetzt in der Sekunde ist,

03:15:43.110 --> 03:16:12.980
also es leuchtet mir ehrlich gesagt

03:16:12.980 --> 03:16:14.980
nicht ein.

03:16:14.980 --> 03:16:16.980
Was soll das jetzt genau sein?

03:16:16.980 --> 03:17:00.200
Ah.

03:17:00.200 --> 03:17:08.630
Ah. Der query das hier

03:17:08.630 --> 03:17:10.630
am Anfang an, speichert er sich das irgendwo?

03:17:10.630 --> 03:17:12.630
Wo speichert er sich das? Da?

03:17:12.630 --> 03:17:14.630
Muss ich das nicht hier oben speichern?

03:17:14.630 --> 03:17:16.630
Warte mal. Äh.

03:17:16.630 --> 03:17:18.630
Counter start, Counter start. Das ist im Prinzip

03:17:18.630 --> 03:17:20.630
ein bisschen, was ich oben beim FPS-Counter

03:17:20.630 --> 03:17:22.630
auch mache, oder? Ähm.

03:17:22.630 --> 03:17:31.130
Also brauche ich hier sowas wie

03:17:31.130 --> 03:17:45.480
Last.

03:17:45.480 --> 03:17:52.760
Hä? Ich will im Prinzip

03:17:52.760 --> 03:17:54.760
doch einfach nur wissen,

03:17:54.760 --> 03:17:56.760
ob ich jetzt schon 60

03:17:56.760 --> 03:17:58.760
Millisekunden gewartet habe.

03:17:58.760 --> 03:18:00.760
Oder in dem Fall 16 Millisekunden.

03:18:00.760 --> 03:18:19.050
Also. Äh.

03:18:19.050 --> 03:18:24.410
Wie macht man das da draus?

03:18:24.410 --> 03:18:29.380
Ähm. Oder scheiße.

03:18:29.380 --> 03:18:31.380
Ist die Sharp stark von C++? Ja.

03:18:31.380 --> 03:18:43.340
Was? Double counter?

03:18:43.340 --> 03:18:47.990
Ich kann sowas nicht copy-pasten.

03:18:47.990 --> 03:18:49.990
Ich muss das selbst ja erstmal checken, was ich da hab.

03:18:49.990 --> 03:19:00.340
Jaja, dass das die Millisekunden

03:19:00.340 --> 03:19:02.340
sind, das ist mir schon klar.

03:19:02.340 --> 03:19:04.340
Aber ich will doch einfach gucken, ob ich mehr als

03:19:04.340 --> 03:19:06.340
ob ich mehr als, ähm.

03:19:06.340 --> 03:19:08.340
Ich muss die zwei Sachen

03:19:08.340 --> 03:19:11.980
miteinander vergleichen.

03:19:11.980 --> 03:19:13.980
Also ich muss mir einfach, ich muss mir

03:19:13.980 --> 03:19:20.550
einmal start holen.

03:19:20.550 --> 03:19:22.550
Start counter.

03:19:22.550 --> 03:19:25.990
So, und im Prinzip muss ich doch jetzt eigentlich

03:19:25.990 --> 03:19:27.990
nur gucken, ob ich jetzt

03:19:27.990 --> 03:19:29.990
ob das hier

03:19:29.990 --> 03:19:31.990
größer

03:19:31.990 --> 03:19:33.990
Start counter.

03:19:33.990 --> 03:19:35.990
So, und hier muss ich

03:19:35.990 --> 03:19:37.990
jetzt dazu rechnen,

03:19:37.990 --> 03:19:39.990
was ich brauche zur Zahl

03:19:39.990 --> 03:19:41.990
für Millisekunden.

03:19:41.990 --> 03:19:46.460
Also irgendwie, keine Ahnung.

03:19:46.460 --> 03:19:48.460
Wie auch immer, wie viel das ist.

03:19:48.460 --> 03:19:53.300
So, wenn ich das jetzt

03:19:53.300 --> 03:19:55.300
dazu rechne, dürfte es dann

03:19:55.300 --> 03:19:57.300
bei einer Sekunde sein.

03:19:57.300 --> 03:19:59.300
Jaja, geh aus.

03:19:59.300 --> 03:20:06.840
Ne, nicht plus Frequency.

03:20:14.950 --> 03:20:16.950
Genau, das jetzt einmal in der Sekunde.

03:20:16.950 --> 03:21:26.570
Wir können mal gucken,

03:21:26.570 --> 03:21:28.570
was passiert. Genau, aus keinem Fokus.

03:21:28.570 --> 03:21:30.570
Sowas in der Richtung hab ich auch gar nicht.

03:21:30.570 --> 03:21:32.570
Wenn man die Krams voneinander abzieht,

03:21:32.570 --> 03:21:39.980
da müsste ja was relativ Kleines

03:21:39.980 --> 03:21:43.540
rauskommen. Genau.

03:21:43.540 --> 03:21:45.540
So.

03:21:45.540 --> 03:21:49.500
Und das?

03:21:49.500 --> 03:22:10.600
Aber die Frequency

03:22:10.600 --> 03:22:12.600
ist ja nicht in Millisekunden.

03:22:12.600 --> 03:22:14.600
Irgendwie ist das der übelste

03:22:14.600 --> 03:22:42.550
Brainfuck dieser Kram, ey.

03:22:42.550 --> 03:23:34.890
Achso, Break soll ich doch einmal.

03:23:34.890 --> 03:23:36.890
Das ist, das ist übelst

03:23:36.890 --> 03:23:38.890
um die Ecke, ey.

03:23:38.890 --> 03:23:48.090
Ich glaube, ich habe heute schon zu lange

03:23:48.090 --> 03:24:24.490
vom Rechner gesessen, um das zu checken.

03:24:24.490 --> 03:24:31.320
Stimmt das jetzt?

03:24:31.320 --> 03:25:17.960
Gibt das jetzt irgendwie Sinn, was ich da gebastelt habe?

03:25:17.960 --> 03:25:19.960
Ja klar kann man es mit einem kleinen Sleep ersetzen.

03:25:19.960 --> 03:25:21.960
Das ist ja auch

03:25:21.960 --> 03:25:27.640
genau genug.

03:25:27.640 --> 03:25:29.640
Ich glaube, ich bin noch nicht in der Lage sowas zu checken mehr.

03:25:29.640 --> 03:25:31.640
Das ist echt Wahnsinn.

03:25:31.640 --> 03:25:35.660
Ich habe komplett...

03:25:35.660 --> 03:25:37.660
Ich kann gerade keinen

03:25:37.660 --> 03:25:39.660
klaren Gedanken fassen, was so ein bisschen

03:25:39.660 --> 03:25:41.660
Logik anbelangt, ey.

03:25:41.660 --> 03:25:43.660
Es war halt einfach

03:25:43.660 --> 03:25:45.660
schon zu lange rumgebastelt.

03:25:45.660 --> 03:25:47.660
Jaja, das GIF hat, das GIF

03:25:47.660 --> 03:25:49.660
hat 25 FPS. Das ist easy.

03:25:49.660 --> 03:25:51.660
Das ist überhaupt kein Ding. Aber ich will ja trotzdem gucken,

03:25:51.660 --> 03:25:53.660
wie ich konstante 60 FPS

03:25:53.660 --> 03:25:55.660
hinkriege. Würde mich einfach mal interessieren.

03:25:59.420 --> 03:26:01.420
Ja, Timer, Timer

03:26:01.420 --> 03:26:03.420
habe ich keinen gefunden, der genau genug ist.

03:26:03.420 --> 03:26:12.040
Ich mache jetzt mal kurz was.

03:26:12.040 --> 03:26:28.860
Ha, Flo, die Idee

03:26:28.860 --> 03:26:34.860
ist gar nicht so schlecht.

03:26:34.860 --> 03:26:36.860
Ich meine, von der Idee her war das am Anfang richtig.

03:26:36.860 --> 03:26:38.860
Wenn mein Counter

03:26:38.860 --> 03:26:40.860
größer ist als

03:26:40.860 --> 03:26:42.860
Start-Counter und jetzt

03:26:42.860 --> 03:26:44.860
halt hier quasi sowas wie

03:26:44.860 --> 03:26:46.860
plus 16

03:26:46.860 --> 03:26:58.300
Millisekunden in Ticks.

03:26:58.300 --> 03:27:00.300
So, kann ich jetzt nicht sagen. Okay.

03:27:00.300 --> 03:27:02.300
Frequency, Frequency ist

03:27:02.300 --> 03:27:04.300
das was pro Sekunde, ne?

03:27:04.300 --> 03:27:06.300
Frequency ist

03:27:06.300 --> 03:27:08.300
Ticks.

03:27:08.300 --> 03:27:10.300
Frequency ist Ticks von diesem Counter pro Sekunde.

03:27:10.300 --> 03:27:27.370
Das heißt,

03:27:27.370 --> 03:27:37.140
was kommt da jetzt raus?

03:27:37.140 --> 03:27:39.140
Ist das jetzt Teil durch 16 Millisekunden?

03:27:39.140 --> 03:27:48.980
Ich will

03:27:48.980 --> 03:27:50.980
rauskriegen,

03:27:50.980 --> 03:27:52.980
wie viel

03:27:52.980 --> 03:27:54.980
Frequency

03:27:54.980 --> 03:27:56.980
quasi 16

03:27:56.980 --> 03:27:58.980
Millisekunden, also wie viele

03:27:58.980 --> 03:28:00.980
Ticks quasi 16 Millisekunden

03:28:00.980 --> 03:28:05.580
entsprechen, ne?

03:28:05.580 --> 03:28:07.580
Was das bedeutet.

03:28:07.580 --> 03:28:12.740
Ich muss was ausprobieren.

03:28:12.740 --> 03:28:14.740
Einfach mal gucken, wie viel da ungefähr rauskommen muss jetzt.

03:28:14.740 --> 03:28:24.780
Aha.

03:28:24.780 --> 03:28:32.950
Also irgendwas in

03:28:32.950 --> 03:28:46.820
dieser Größe.

03:28:46.820 --> 03:28:48.820
Ich kann heute nichts mehr umrechnen.

03:28:48.820 --> 03:28:50.820
Ich bin nicht in der Lage, irgendwas zu rechnen gerade.

03:28:50.820 --> 03:28:52.820
So, also irgendwas um

03:28:52.820 --> 03:28:54.820
50.000 muss da rauskommen.

03:28:54.820 --> 03:28:58.520
Das ist irgendwie in dem Dreh und das ist auch

03:28:58.520 --> 03:29:42.410
relativ konstant.

03:29:42.410 --> 03:29:44.410
Ist das nicht...

03:29:44.410 --> 03:29:46.410
Wenn ich 60 mal,

03:29:46.410 --> 03:29:48.410
wenn ich quasi weiß, das ist

03:29:48.410 --> 03:29:50.410
pro Sekunde und ich weiß,

03:29:50.410 --> 03:29:52.410
das ist pro Sekunde. Da kann ich das nicht machen.

03:29:52.410 --> 03:29:54.410
Kann ich das doch eigentlich durcheinander teilen, oder?

03:29:54.410 --> 03:30:07.260
Oder? Ich meine, von der Idee

03:30:07.260 --> 03:30:13.000
müsste es doch sowas hier sein.

03:30:13.000 --> 03:30:15.000
Aber aus irgendwelchen Gründen ist es das nicht, oder?

03:30:15.000 --> 03:30:49.610
Oder ist es das doch?

03:30:49.610 --> 03:30:51.610
Was?

03:30:51.610 --> 03:30:53.610
Kann man auch machen, müsste aber doch keinen großen Unterschied sein.

03:30:53.610 --> 03:31:07.220
Ne, so

03:31:07.220 --> 03:31:12.330
kein Unterschied.

03:31:12.330 --> 03:31:14.330
Ist doch genau das gleiche im Endeffekt.

03:31:14.330 --> 03:31:16.330
Weil es beides, ist doch beides

03:31:16.330 --> 03:31:18.330
pro Sekunde. Das müsste doch im Prinzip,

03:31:18.330 --> 03:31:20.330
das müsste doch eigentlich genau das gleiche sein.

03:31:20.330 --> 03:31:38.900
Echt doch.

03:31:38.900 --> 03:31:42.660
Ups. Äh. Moment.

03:31:42.660 --> 03:31:46.360
Was habe ich jetzt falsch gemacht?

03:31:46.360 --> 03:31:53.000
Ich kann echt nicht mehr denken heute.

03:31:53.000 --> 03:32:09.660
Hä? Hä?

03:32:09.660 --> 03:32:16.300
Ich blicke nicht mehr durch gerade.

03:32:16.300 --> 03:32:21.660
Das würde doch keinen so großen Unterschied machen.

03:32:21.660 --> 03:32:23.660
Nö.

03:32:23.660 --> 03:32:25.660
What the fuck?

03:32:25.660 --> 03:32:34.790
Warte mal, das ist irgendeine...

03:32:34.790 --> 03:32:36.790
Das ist irgendeine

03:32:36.790 --> 03:32:38.790
Conversion-Geschichte.

03:32:38.790 --> 03:32:40.790
Ja, weil ich meine im Prinzip,

03:32:40.790 --> 03:32:42.790
das da, wenn ich das

03:32:42.790 --> 03:32:44.790
jetzt da von Hand eintrage, geht das ja auch.

03:32:44.790 --> 03:32:46.790
Aber das... Warum

03:32:46.790 --> 03:32:53.690
ging das vorher nicht?

03:32:53.690 --> 03:33:01.610
Auch von 9000, ja.

03:33:01.610 --> 03:33:03.610
Das ist irgendeine Conversion-Geschichte.

03:33:03.610 --> 03:33:10.090
Stimmt. Ja.

03:33:10.090 --> 03:33:12.090
Okay, das hatte ich doch vor 5 Minuten schon mal.

03:33:12.090 --> 03:33:14.090
Was ist denn jetzt daran verkehrt?

03:33:14.090 --> 03:33:27.130
Das ist doch von der Logik her okay, oder?

03:33:27.130 --> 03:33:44.010
Das müsste doch...

03:33:44.010 --> 03:33:46.010
Das sieht nicht so aus, wie man normalerweise performt.

03:33:46.010 --> 03:33:48.010
Ich habe auch keine Ahnung, wie man das macht.

03:33:51.700 --> 03:33:53.700
Wisst ihr was?

03:33:53.700 --> 03:33:55.700
Da muss ich mir nochmal Gedanken drüber machen,

03:33:55.700 --> 03:33:57.700
wie wir das am besten machen.

03:33:57.700 --> 03:33:59.700
Hier drinnen zu sleepen ist eh keine sonderlich clevere Idee.

03:33:59.700 --> 03:34:01.700
Aber ich meine, wir können das jetzt

03:34:01.700 --> 03:34:03.700
als erstes mal kurz...

03:34:03.700 --> 03:34:05.700
Als erstes mal...

03:34:05.700 --> 03:34:07.700
Für heute können wir das so lassen.

03:34:07.700 --> 03:34:09.700
Ich meine, prinzipiell funktioniert es ja, ne?

03:34:09.700 --> 03:34:18.970
25 FPS GIF.

03:34:18.970 --> 03:34:33.030
Passt.

03:34:33.030 --> 03:34:35.030
Start Counter vorm Rendering Hall.

03:34:35.030 --> 03:34:44.420
Okay, machen wir.

03:34:44.420 --> 03:34:46.420
Ich mache jetzt alles.

03:34:46.420 --> 03:34:51.460
Ich kann heute eh nicht mehr richtig denken.

03:34:51.460 --> 03:34:53.460
Du meinst aber schon vorm Durchgang, ne?

03:34:53.460 --> 03:35:02.220
Pro Durchgang.

03:35:07.960 --> 03:35:09.960
Jetzt ist es sogar

03:35:09.960 --> 03:35:22.620
ein bisschen zu schnell.

03:35:22.620 --> 03:35:24.620
Aber das liegt daran,

03:35:24.620 --> 03:35:26.620
wahrscheinlich, dass ich hier Kommastellen

03:35:26.620 --> 03:35:30.890
verliere, irgendwie, ne?

03:35:30.890 --> 03:35:32.890
Wobei mir das jetzt ja mal einer erklären muss.

03:35:32.890 --> 03:35:34.890
Was hat er denn jetzt? Was macht er hier wieder für Conversion-Dinger?

03:35:34.890 --> 03:35:40.570
Das sind...

03:35:40.570 --> 03:35:49.640
Zack!

03:35:49.640 --> 03:35:51.640
Ah...

03:35:51.640 --> 03:36:10.700
Damit kann ich leben.

03:36:10.700 --> 03:36:37.910
So...

03:36:37.910 --> 03:36:39.910
Das sieht doch jetzt ziemlich gleich aus, oder?

03:36:39.910 --> 03:36:56.150
GIFs übertaktet, yeah.

03:36:56.150 --> 03:37:05.480
Ja, TiraFox, das klingt logisch.

03:37:05.480 --> 03:37:07.480
Ich muss ja nochmal Gedanken drüber machen.

03:37:07.480 --> 03:37:09.480
Von der Logik her müsste es doch stimmen,

03:37:09.480 --> 03:37:11.480
weil ich da gewastelt habe, oder?

03:37:11.480 --> 03:37:13.480
Ich meine, das GIF sieht jetzt auch schön Sync aus.

03:37:13.480 --> 03:37:36.890
Das ist präzise genug.

03:37:36.890 --> 03:37:51.980
Drawzeit abziehen.

03:37:51.980 --> 03:37:53.980
Naja, das ist nicht lang.

03:37:53.980 --> 03:37:55.980
Wollen wir mal messen, wie lange

03:37:55.980 --> 03:37:57.980
das eigentliche Malen dauert?

03:37:57.980 --> 03:37:59.980
Können wir mal gucken.

03:37:59.980 --> 03:38:09.180
Gucken wir mal.

03:38:09.180 --> 03:38:11.180
Wir gucken mal, wie lange das dauert.

03:38:11.180 --> 03:38:17.560
Einmal malen.

03:38:17.560 --> 03:38:19.560
Ja, und das stimmt, die Drawzeit wird tatsächlich abgezogen,

03:38:19.560 --> 03:38:24.220
weil wir den Krams am Anfang nehmen.

03:38:24.220 --> 03:38:26.220
Da habe ich jetzt gar nicht dran gedacht am Anfang.

03:38:26.220 --> 03:38:31.000
Gucken wir mal, wie lange das dauert hier.

03:38:31.000 --> 03:38:33.000
Also, wo fangen wir an?

03:38:33.000 --> 03:38:35.000
Das eigentliche Malen ist ja hier.

03:38:35.000 --> 03:38:37.000
Start.

03:38:37.000 --> 03:38:42.230
Painter. Paint.

03:38:44.230 --> 03:38:52.470
Bis da, würde ich sagen, ne?

03:38:52.470 --> 03:38:54.470
Hier oben müssen wir übrigens...

03:38:54.470 --> 03:38:56.470
Reset müssen wir an der Stelle machen.

03:38:58.470 --> 03:39:00.470
Ne, nicht Reset. Stop.

03:39:02.470 --> 03:39:04.470
So.

03:39:04.470 --> 03:39:11.940
Gucken wir mal.

03:39:11.940 --> 03:39:13.940
Ein paar Millisekunden.

03:39:13.940 --> 03:39:15.940
So, und danach.

03:39:15.940 --> 03:39:17.940
Aber Reset.

03:39:17.940 --> 03:39:28.870
Äh.

03:39:28.870 --> 03:39:42.490
Dauert keine Millisekunde.

03:39:44.490 --> 03:39:46.490
Gucken wir mal.

03:39:46.490 --> 03:39:48.490
Das braucht nichts im Endeffekt.

03:39:48.490 --> 03:39:50.490
Ein Tick sind 100 Nanosekunden irgendwie an der Stelle.

03:39:50.490 --> 03:39:55.460
Ja.

03:39:55.460 --> 03:39:57.460
Das Drawn braucht nichts.

03:39:57.460 --> 03:39:59.460
Das braucht wirklich

03:39:59.460 --> 03:40:01.460
unter einer Millisekunde.

03:40:01.460 --> 03:40:22.180
Ja.

03:40:22.180 --> 03:40:24.180
Gucken wir mal.

03:40:24.180 --> 03:40:26.180
Unter einer halben Millisekunde

03:40:26.180 --> 03:40:28.180
braucht das Ganze.

03:40:28.180 --> 03:40:30.180
Das Drawn.

03:40:30.180 --> 03:40:51.800
Das ist nichts im Endeffekt.

03:40:51.800 --> 03:40:59.590
Das ist wirklich nichts.

03:40:59.590 --> 03:41:01.590
Eigentlich könnten wir anstatt...

03:41:01.590 --> 03:41:03.590
Wir könnten auch den Stopwatch-Timer da unten nehmen, ne?

03:41:03.590 --> 03:41:20.790
Was?

03:41:20.790 --> 03:41:22.790
Wenn das Drawn länger dauern würde, wie lange würden dann 3D-Spiele dauern?

03:41:22.790 --> 03:41:24.790
Lange.

03:41:24.790 --> 03:41:26.790
Das muss schnell gehen.

03:41:26.790 --> 03:41:28.790
Ich meine, wir Drawn ja hier im Endeffekt auch nichts, ne?

03:41:28.790 --> 03:41:33.450
Ne, ne.

03:41:33.450 --> 03:41:35.450
Das mache ich schon selbst alles.

03:41:35.450 --> 03:41:37.450
Wir machen hier im Endeffekt auch nichts, ne?

03:41:37.450 --> 03:41:39.450
Wir haben hier oben ein paar komische

03:41:39.450 --> 03:41:41.450
Scale und...

03:41:41.450 --> 03:41:43.450
ähm...

03:41:43.450 --> 03:41:45.450
Na...

03:41:45.450 --> 03:41:47.450
Transparenz-Geschichten und...

03:41:47.450 --> 03:41:49.450
ähm...

03:41:49.450 --> 03:41:51.450
Dann malen wir noch einen FPS-Counter unten im Bild.

03:41:51.450 --> 03:41:53.450
Also...

03:41:53.450 --> 03:41:56.820
Das ist im Endeffekt ja nichts.

03:41:56.820 --> 03:41:58.820
Übrigens, das...

03:41:58.820 --> 03:42:00.820
Das geht aus dem Bild raus, oder?

03:42:00.820 --> 03:42:08.100
Das geht aus dem Bild raus.

03:42:08.100 --> 03:42:10.100
Seht ihr es?

03:42:12.100 --> 03:42:14.100
Den lassen wir mal...

03:42:14.100 --> 03:42:16.100
Den lassen wir mal 20...

03:42:16.100 --> 03:42:18.100
22 Pixels weiter unten starten.

03:42:18.100 --> 03:42:20.100
Ja, jetzt ist es besser.

03:42:20.100 --> 03:42:22.100
Wobei...

03:42:22.100 --> 03:42:24.100
Nicht weiter unten,

03:42:24.100 --> 03:42:26.100
20 weiter rechts starten.

03:42:26.100 --> 03:42:28.100
20 weiter rechts starten.

03:42:28.100 --> 03:42:35.130
Ja.

03:42:35.130 --> 03:42:37.130
Oder?

03:42:37.130 --> 03:42:39.130
Ne, ich glaube oben klippt er.

03:42:39.130 --> 03:42:45.000
Oben klippt er.

03:42:45.000 --> 03:42:47.000
Ja, oben hat er ein bisschen geklippt.

03:42:47.000 --> 03:42:53.700
So, machen wir das Ganze erstmal mit 5 FPS.

03:42:53.700 --> 03:43:01.820
Rechts...

03:43:01.820 --> 03:43:03.820
Und oben...

03:43:03.820 --> 03:43:05.820
Klippt er oben? Oben klippt er noch ein bisschen, oder?

03:43:05.820 --> 03:43:10.410
Oben klippt er noch.

03:43:10.410 --> 03:43:12.410
Aber es könnte sogar sein, dass das

03:43:12.410 --> 03:43:14.410
im Bild so ist.

03:43:14.410 --> 03:43:16.410
Machen wir mal oben ganz viel

03:43:16.410 --> 03:43:20.300
Abstand.

03:43:20.300 --> 03:43:22.300
Ah, ne, okay, nochmal 30 oben.

03:43:22.300 --> 03:43:24.300
Muss ich mal gucken, warum das oben überhaupt klippt.

03:43:24.300 --> 03:43:26.300
Ja, so ist gut.

03:43:26.300 --> 03:43:28.300
Hier oben, das ist

03:43:28.300 --> 03:43:30.300
im Bild so, dass der oben kurz geklippt ist.

03:43:30.300 --> 03:43:43.080
Wunderbar.

03:43:43.080 --> 03:43:45.080
Zack. Bäm.

03:43:45.080 --> 03:43:59.340
Sehr schön.

03:43:59.340 --> 03:44:08.920
Das ist doch nice.

03:44:08.920 --> 03:44:10.920
Das gefällt mir.

03:44:10.920 --> 03:44:14.680
Durchklicken.

03:44:14.680 --> 03:44:16.680
GIF am Start.

03:44:16.680 --> 03:44:18.680
Und, ich mein, guck mal.

03:44:18.680 --> 03:44:20.680
Wir brauchen jetzt

03:44:20.680 --> 03:44:22.680
90 MB.

03:44:24.680 --> 03:44:26.680
Machen wir mal, stellen wir das Ganze

03:44:26.680 --> 03:44:28.680
mal wieder um auf Window Only.

03:44:28.680 --> 03:44:34.810
Window Only stellen wir das Ganze

03:44:34.810 --> 03:44:36.810
um.

03:44:36.810 --> 03:44:40.890
Release Mode.

03:44:40.890 --> 03:44:42.890
Wir brauchen

03:44:42.890 --> 03:44:44.890
ziemlich genau 88 MB.

03:44:44.890 --> 03:44:48.780
Ah.

03:44:48.780 --> 03:44:50.780
Oder auch nicht.

03:44:50.780 --> 03:44:55.240
Äh.

03:44:55.240 --> 03:44:57.240
80?

03:44:57.240 --> 03:44:59.240
Hä?

03:44:59.240 --> 03:45:02.940
Was für eine komische Anzeige.

03:45:02.940 --> 03:45:04.940
Angeblich haben wir 80.

03:45:04.940 --> 03:45:06.940
Gut, hier oben ist 89.

03:45:06.940 --> 03:45:08.940
Also wir brauchen 80 MB

03:45:08.940 --> 03:45:10.940
im Vergleich zu 850.

03:45:10.940 --> 03:45:12.940
Und es startet übel schnell.

03:45:12.940 --> 03:45:14.940
Also wenn man sich überlegt, dass

03:45:14.940 --> 03:45:16.940
guck mal, es startet jetzt die ganze,

03:45:16.940 --> 03:45:18.940
das ganze Programm startet jetzt.

03:45:18.940 --> 03:45:20.940
Wohlgemerkt.

03:45:20.940 --> 03:45:22.940
Und das, das startet,

03:45:22.940 --> 03:45:24.940
das ganze Programm startet schneller

03:45:24.940 --> 03:45:26.940
und zeigt das GIF an,

03:45:26.940 --> 03:45:28.940
als das, das andere.

03:45:28.940 --> 03:45:30.940
Jetzt nehmen wir mal ein großes GIF,

03:45:30.940 --> 03:45:32.940
was beim anderen Probleme macht.

03:45:32.940 --> 03:45:34.940
Zum Beispiel, ähm,

03:45:34.940 --> 03:45:36.940
Brain, irgendwas mit Brain.

03:45:36.940 --> 03:45:38.940
Mindblown heißt das Ding hier.

03:45:38.940 --> 03:45:51.270
Mindblown.

03:45:51.270 --> 03:45:58.360
Das GIF brauchen wir jetzt noch.

03:45:58.360 --> 03:46:00.360
Ups, jetzt hab ich's gelöscht.

03:46:00.360 --> 03:46:08.220
So.

03:46:08.220 --> 03:46:10.220
Ich hab mich irgendwo verschrieben.

03:46:10.220 --> 03:46:25.750
Und auch übelst flüssig im Vergleich

03:46:25.750 --> 03:46:27.750
zum anderen, ne?

03:46:27.750 --> 03:46:29.750
Wir könnten, wir könnten noch das,

03:46:29.750 --> 03:46:31.750
das Bilder, das Bilderscalen könnten wir

03:46:31.750 --> 03:46:33.750
noch ein bisschen schöner machen.

03:46:33.750 --> 03:46:40.140
Weil hier sieht er besser aus.

03:46:40.140 --> 03:47:00.730
Guck mal.

03:47:00.730 --> 03:47:04.170
Fehlt da ein bisschen was?

03:47:04.170 --> 03:47:06.170
Oder ich glaub mein, ich glaub mein Scaling ist nicht

03:47:06.170 --> 03:47:08.170
ganz so sinnvoll.

03:47:08.170 --> 03:47:10.170
Mein Scaling ist nicht ganz, äh, richtig,

03:47:10.170 --> 03:47:15.340
würd ich sagen.

03:47:15.340 --> 03:47:17.340
Nee, mein Scaling ist nicht so ganz korrekt.

03:47:17.340 --> 03:47:28.900
Sagen wir mal so,

03:47:28.900 --> 03:47:30.900
hier ist er schöner skaliert.

03:47:30.900 --> 03:47:38.440
Wobei, Leute,

03:47:38.440 --> 03:47:40.440
ohne Scheiß, ich würd fast eher sagen,

03:47:40.440 --> 03:47:45.740
mein Scaling sieht mir irgendwie,

03:47:45.740 --> 03:47:47.740
also,

03:47:47.740 --> 03:47:49.740
von Abmaßen her scheint mir das aber,

03:47:49.740 --> 03:47:55.160
guck mal, wie flüssig das hier ist.

03:47:55.160 --> 03:47:57.160
Seht ihr das, wie flüssig das ist?

03:47:57.160 --> 03:48:08.150
Und wie sehr es da rumbleckt.

03:48:08.150 --> 03:48:10.150
Wir können das noch mal ein bisschen ändern,

03:48:10.150 --> 03:48:12.150
wie er das Ganze macht.

03:48:12.150 --> 03:48:14.150
Wir können jetzt mal hier,

03:48:14.150 --> 03:48:16.150
Nearest Neighbor ist das Schlechteste von der Qualität,

03:48:16.150 --> 03:48:18.150
mit dem Cubic.

03:48:18.150 --> 03:48:20.150
Beste Quali.

03:48:20.150 --> 03:48:22.150
Ja, guck, jetzt sieht's auch gleich besser aus.

03:48:22.150 --> 03:48:38.260
Na doch, es ist nicht ganz gleich

03:48:38.260 --> 03:48:40.260
groß, guck mal.

03:48:40.260 --> 03:48:42.260
Wir müssen doch mal einen anderen Hintergrund

03:48:42.260 --> 03:48:51.850
nehmen.

03:48:51.850 --> 03:48:53.850
Guck mal, es ist nicht ganz gleich groß, es ist, äh,

03:48:53.850 --> 03:49:04.900
es ist ein bisschen,

03:49:04.900 --> 03:49:06.900
meins ist ein bisschen kleiner, ne?

03:49:06.900 --> 03:49:08.900
Ich mein,

03:49:08.900 --> 03:49:14.140
jetzt ist es gleich,

03:49:14.140 --> 03:49:16.140
jetzt ist es ungefähr gleich breit,

03:49:16.140 --> 03:49:18.140
aber das hier ist ein Stück höher.

03:49:18.140 --> 03:49:22.280
Also, das heißt,

03:49:22.280 --> 03:49:24.280
bei mir fehlt ein Stückchen.

03:49:24.280 --> 03:49:26.280
Würde ich mal sagen.

03:49:26.280 --> 03:49:28.280
Bei mir fehlen ein paar Pixels.

03:49:28.280 --> 03:49:40.740
Ja, TeraFox,

03:49:40.740 --> 03:49:42.740
guck ich mir an, ich muss wieder, ich kann heute nicht mehr

03:49:42.740 --> 03:49:44.740
mir großartig Gedanken zu machen.

03:49:44.740 --> 03:49:46.740
Normalerweise ist das bestimmt, äh,

03:49:46.740 --> 03:49:52.680
eigentlich nichts schwieriges.

03:49:52.680 --> 03:49:54.680
Ah, hier fehlt oben und unten ein bisschen was.

03:49:54.680 --> 03:49:56.680
Aber,

03:49:56.680 --> 03:50:05.050
das passt schon.

03:50:05.050 --> 03:50:07.050
So, nice.

03:50:07.050 --> 03:50:09.050
Das können wir jetzt dann einbauen, das nächste Mal.

03:50:09.050 --> 03:50:12.490
In das eigentliche Tool,

03:50:12.490 --> 03:50:14.490
wofür wir das Ganze gebastelt haben.

03:50:14.490 --> 03:50:16.490
Und dann dauern GIFs nicht mehr

03:50:16.490 --> 03:50:18.490
drei Sekunden zum Anzeigen, sondern sind instant da.

03:50:18.490 --> 03:50:22.120
Äh, die PNGs

03:50:22.120 --> 03:50:24.120
könnten wir übrigens auch noch mit, äh,

03:50:24.120 --> 03:50:26.120
dann eigentlich auch noch mit FFmpeg

03:50:26.120 --> 03:50:38.460
machen. Sehr schön.

03:50:38.460 --> 03:50:42.920
Gefällt mir auch.

03:50:42.920 --> 03:51:35.640
So, Leute, ähm,

03:51:35.640 --> 03:51:37.640
genug für heute.

03:51:37.640 --> 03:51:39.640
Der GIF-Player funktioniert ziemlich gut.

03:51:39.640 --> 03:51:44.870
Sag mal, verlieren wir immer noch irgendwo

03:51:44.870 --> 03:51:46.870
Speicher? Kann das sein? Ne, der muss,

03:51:46.870 --> 03:51:48.870
der braucht einfach eine Weile, bis alles geladen ist.

03:51:48.870 --> 03:51:50.870
Guck mal, das ist ein Riesenunterschied,

03:51:50.870 --> 03:51:52.870
das fette GIF, komplett,

03:51:52.870 --> 03:51:54.870
äh, gecached,

03:51:54.870 --> 03:51:56.870
braucht 160 MB,

03:51:56.870 --> 03:51:58.870
wohingegen das in WPF 850

03:51:58.870 --> 03:52:00.870
braucht.

03:52:00.870 --> 03:52:13.020
Das ist schon ein Unterschied.

03:52:13.020 --> 03:52:32.780
Ja, das ist schon ein Unterschied.

03:52:32.780 --> 03:52:34.780
Ne, der Server ist da nicht dabei. Insgesamt

03:52:34.780 --> 03:52:36.780
braucht das Zeug irgendwie 180.

03:52:36.780 --> 03:52:38.780
Das, ähm,

03:52:38.780 --> 03:52:40.780
ASP.NET Core plus das WPF-Fenster.

03:52:40.780 --> 03:52:42.780
Aber sobald ein GIF geladen wird,

03:52:42.780 --> 03:52:44.780
geht's ja irgendwie hoch auf 850,

03:52:44.780 --> 03:52:46.780
900 oder so. Also sagen wir mal so,

03:52:46.780 --> 03:52:48.780
okay, sagen wir das GIF braucht, braucht

03:52:48.780 --> 03:52:50.780
700. 700 braucht das GIF.

03:52:50.780 --> 03:52:52.780
Und das liegt einfach daran,

03:52:52.780 --> 03:52:54.780
wir können uns das hier grad nochmal angucken,

03:52:54.780 --> 03:52:56.780
guck mal, ich hab jetzt ein paar GIFs

03:52:56.780 --> 03:52:58.780
geladen, Instant 2G voll.

03:52:58.780 --> 03:53:00.780
Alter, kann doch nicht sein.

03:53:00.780 --> 03:53:04.470
Jetzt geht's wieder runter,

03:53:04.470 --> 03:53:06.470
auf

03:53:06.470 --> 03:53:08.470
760. Guck mal,

03:53:08.470 --> 03:53:10.470
jetzt sind wir bei 760 und jetzt mach ich

03:53:10.470 --> 03:53:12.470
das GIF hier an, äh,

03:53:12.470 --> 03:53:14.470
das GIF hat eine schlechte Position.

03:53:14.470 --> 03:53:23.740
Guck,

03:53:23.740 --> 03:53:25.740
1,1.

03:53:25.740 --> 03:53:27.740
Also da sind wir schon besser.

03:53:27.740 --> 03:53:29.740
Na ja, nicht ganz, es ist, ähm,

03:53:29.740 --> 03:53:31.740
es ist tatsächlich

03:53:31.740 --> 03:53:33.740
nicht ganz so viel, aber es ist ordentlich.

03:53:33.740 --> 03:53:38.010
Also irgendwie, keine Ahnung,

03:53:38.010 --> 03:53:40.010
400 aus uns immer noch.

03:53:40.010 --> 03:53:42.010
Und ich glaube,

03:53:42.010 --> 03:53:44.010
hat er auch nicht alle aus dem Garbage Collector geschaufelt.

03:53:44.010 --> 03:53:46.010
Also das ist nicht sonderlich

03:53:46.010 --> 03:53:48.010
optimiert, ähm,

03:53:48.010 --> 03:53:50.010
dieses, dieses WPF-GIF-Ding.

03:53:50.010 --> 03:53:53.320
Da sind wir

03:53:53.320 --> 03:53:55.320
hier doch schon deutlich besser mit dabei, oder?

03:53:55.320 --> 03:54:05.860
Da sind wir schon deutlich besser

03:54:05.860 --> 03:54:07.860
mit dabei. 120,

03:54:07.860 --> 03:54:11.430
120 MB oder so.

03:54:11.430 --> 03:54:13.430
Und wenn wir das Ganze nicht cachen,

03:54:13.430 --> 03:54:15.430
das können wir jetzt, glaube ich, gleich auch nochmal ausprobieren,

03:54:15.430 --> 03:54:23.860
wie viel wir dann haben,

03:54:23.860 --> 03:54:25.860
und ich hoffe, ich hab mir den Kram irgendwo gespeichert.

03:54:25.860 --> 03:54:27.860
So, mal das übliche.

03:54:27.860 --> 03:54:29.860
Rückgängig, rückgängig,

03:54:29.860 --> 03:54:31.860
rückgängig.

03:54:31.860 --> 03:54:33.860
Rückgängig, rückgängig, rückgängig.

03:54:33.860 --> 03:54:35.860
Wo hab ich mir gespeichert, den Scheiß?

03:54:35.860 --> 03:54:42.630
Lol.

03:54:42.630 --> 03:54:44.630
Wenn ich mich jetzt verdrücke, ist alles weg.

03:54:44.630 --> 03:54:50.310
Ich muss ja nicht speichern. Da!

03:54:50.310 --> 03:54:54.520
Und wieder vorwärts.

03:54:54.520 --> 03:54:56.520
Dafür hat man eigentlich, äh, ein Git oder so was.

03:54:56.520 --> 03:55:04.500
So, mal gucken,

03:55:04.500 --> 03:55:06.500
wie viel das ist. Wenn ich's nicht cache,

03:55:06.500 --> 03:55:10.140
dann für 25 FPS

03:55:10.140 --> 03:55:19.400
reicht's natürlich immer noch.

03:55:19.400 --> 03:55:21.400
Achso, ich muss ja die Frames freeen.

03:55:21.400 --> 03:55:23.400
Sonst, sonst leaken wir.

03:55:23.400 --> 03:55:34.580
Na, guck!

03:55:34.580 --> 03:55:36.580
118. Das ist doch top. Da kann man sich

03:55:36.580 --> 03:55:51.860
echt nicht beschweren.

03:55:51.860 --> 03:55:53.860
Und ich könnte wetten, wenn wir das, wenn wir jetzt wirklich so

03:55:53.860 --> 03:55:55.860
so RAW-Window aufmachen würden,

03:55:55.860 --> 03:55:57.860
ohne Forms und ohne den ganzen Geschiss,

03:55:57.860 --> 03:56:01.820
wären wir wahrscheinlich unter 100.

03:56:01.820 --> 03:56:03.820
Ey, aber man darf nicht vergessen, ich mein,

03:56:03.820 --> 03:56:05.820
Bilder brauchen halt einfach ein bisschen Speicher.

03:56:05.820 --> 03:56:07.820
Platz.

03:56:07.820 --> 03:56:09.820
Unkomprimierte Bilder, ne? Ich mein,

03:56:09.820 --> 03:56:11.820
es hat ein bisschen was.

03:56:13.820 --> 03:56:15.820
Kannst du aber ausrechnen.

03:56:15.820 --> 03:56:17.820
600 mal

03:56:17.820 --> 03:56:19.820
600 mal 4.

03:56:19.820 --> 03:56:21.820
So.

03:56:21.820 --> 03:56:23.820
Hallo,

03:56:23.820 --> 03:56:25.820
Google, please.

03:56:25.820 --> 03:56:27.820
So.

03:56:27.820 --> 03:56:29.820
Bytes to MB.

03:56:31.820 --> 03:56:33.820
Okay, das ist nicht so wirklich viel.

03:56:33.820 --> 03:56:35.820
Aber, Bilder brauchen halt

03:56:35.820 --> 03:56:37.820
ein bisschen was. Vor allem, wenn sie größer werden.

03:56:37.820 --> 03:56:47.270
Warte mal.

03:56:47.270 --> 03:56:49.270
Doch, hab ich richtig gerechnet.

03:56:49.270 --> 03:56:56.100
Da hab ich noch was vergessen.

03:56:56.100 --> 03:57:34.040
Also, kleine Bilder gehen noch.

03:57:34.040 --> 03:57:36.040
Stell dir mal ein unkomprimiertes Video vor.

03:57:36.040 --> 03:57:38.040
Das ist in der Regel, also

03:57:38.040 --> 03:57:40.040
rein das, ähm, rein das Anzeigen

03:57:40.040 --> 03:57:42.040
ist ziemlich, äh, angenehm,

03:57:42.040 --> 03:57:44.040
weil du nix decoden musst.

03:57:44.040 --> 03:57:46.040
Also, schnell, also, vorausgesetzt,

03:57:46.040 --> 03:57:48.040
man kann es schnell genug lesen,

03:57:48.040 --> 03:57:50.040
ist das super. Das hat kaum CPU-Last.

03:57:50.040 --> 03:57:52.040
Unkomprimierte Videos.

03:57:52.040 --> 03:57:55.420
Weil du halt nix decoden musst.

03:57:55.420 --> 03:58:09.030
Die sind halt riesengroß.

03:58:09.030 --> 03:58:11.030
Ja.

03:58:11.030 --> 03:58:13.030
Also, wenn du mit deinem C++

03:58:13.030 --> 03:58:15.030
Zeug dann quasi 60 MB

03:58:15.030 --> 03:58:17.030
hast.

03:58:17.030 --> 03:58:19.030
Ich hab hier noch ein bisschen Managed-Krempel drumherum.

03:58:21.030 --> 03:58:23.030
Dann ist das, ist das mit 100 MB

03:58:23.030 --> 03:58:25.030
oder sowas, was das hier hat.

03:58:25.030 --> 03:58:30.840
Und wie viel hatte das hier jetzt?

03:58:30.840 --> 03:58:32.840
Ja, dann ist das doch vollkommen okay.

03:58:32.840 --> 03:58:34.840
Das ist ja 118, das ist doch top.

03:58:34.840 --> 03:58:36.840
Kann man nix sagen.

03:58:36.840 --> 03:58:44.700
Ja.

03:58:44.700 --> 03:58:46.700
Denk ich auch.

03:58:46.700 --> 03:58:48.700
120 MB ist wirklich

03:58:48.700 --> 03:58:50.700
top. Und man muss sich mal angucken, wie

03:58:50.700 --> 03:58:52.700
sauschnell das ist, ne.

03:58:52.700 --> 03:58:54.700
Das ist halt einfach instant.

03:58:54.700 --> 03:58:56.700
Und man muss es halt mal ohne Debugger machen hier.

03:58:56.700 --> 03:58:58.700
Zack, da. Das ist nix.

03:58:58.700 --> 03:59:00.700
Wir müssen uns noch

03:59:00.700 --> 03:59:02.700
ein bisschen um das Handling kümmern, also wir müssen

03:59:02.700 --> 03:59:04.700
noch Resizen und so einbauen.

03:59:04.700 --> 03:59:06.700
Das müssen wir noch

03:59:06.700 --> 03:59:10.900
machen. Da hat man noch

03:59:10.900 --> 03:59:12.900
Resizen können, das Fenster.

03:59:12.900 --> 03:59:14.900
Das müssen wir noch einbauen, das machen wir aber das nächste Mal.

03:59:14.900 --> 03:59:26.980
Ja Flo, du machst

03:59:26.980 --> 03:59:28.980
das nächste Mal den Gift Player in Assembler, easy.

03:59:28.980 --> 03:59:30.980
Dann verwende ich den auch.

03:59:30.980 --> 03:59:32.980
Wenn du mir den in Assembler

03:59:32.980 --> 03:59:34.980
machst, auf, go, go.

03:59:34.980 --> 03:59:39.510
Ja, da kannst du

03:59:39.510 --> 03:59:41.510
im Prinzip, da muss ich jetzt

03:59:41.510 --> 03:59:43.510
Theorafox schon recht geben, im Prinzip kannst du ja nicht

03:59:43.510 --> 03:59:45.510
so viel unterschiedliches speichern, eigentlich, ne.

03:59:45.510 --> 03:59:47.510
Du hast halt deine 3 Bytes

03:59:47.510 --> 03:59:49.510
für Farben und hast halt 1 Byte für Transparenz,

03:59:49.510 --> 03:59:51.510
man.

03:59:51.510 --> 03:59:53.510
Was willst du mehr machen?

03:59:53.510 --> 03:59:55.510
Das einzige, wo du variieren kannst, ist halt, dass

03:59:55.510 --> 03:59:57.510
du wieder die RGB-Dinge

03:59:57.510 --> 03:59:59.510
anordnest, jetzt halt BGRA,

03:59:59.510 --> 04:00:01.510
RGB,

04:00:01.510 --> 04:00:03.510
äh, GAA, was auch immer

04:00:03.510 --> 04:00:05.510
es da alles für Varianten wahrscheinlich gibt.

04:00:05.510 --> 04:00:16.630
Wie heißt

04:00:16.630 --> 04:00:18.630
bei C-Sharp nochmal

04:00:18.630 --> 04:00:20.630
der Krams, den man

04:00:20.630 --> 04:00:22.630
mit, äh, Attribute meinst du?

04:00:22.630 --> 04:00:35.930
Juff, gibt's auch noch,

04:00:35.930 --> 04:00:37.930
ja, da ist da Colorspace ein bisschen

04:00:37.930 --> 04:00:45.660
anders und

04:00:45.660 --> 04:00:47.660
noch paar andere Sachen, die ich jetzt

04:00:47.660 --> 04:00:51.160
weiß jetzt nicht genau.

04:00:51.160 --> 04:00:53.160
Ja Patrick, auf geht's, Assembler,

04:00:53.160 --> 04:01:05.370
go, go.

04:01:05.370 --> 04:01:07.370
Also, Tyra Fox, ich hab mir grad mal dein C++

04:01:07.370 --> 04:01:09.370
Beispiel angeguckt, was ich nicht checke

04:01:09.370 --> 04:01:11.370
ist, du machst ja ganz unten

04:01:11.370 --> 04:01:13.370
Sleep 4 Milliseconds.

04:01:13.370 --> 04:01:15.370
So, und dann mal 1000.

04:01:15.370 --> 04:01:17.370
Was für eine Zahl übergibst du denn

04:01:17.370 --> 04:01:19.370
Sleep 4, was steht denn da drinnen so

04:01:19.370 --> 04:01:21.370
als Beispiel? Sag mal ein Beispiel

04:01:21.370 --> 04:01:28.650
als Zahl.

04:01:28.650 --> 04:01:30.650
Steht da da irgendwie sowas drinnen wie

04:01:30.650 --> 04:01:32.650
16,7 oder was?

04:01:32.650 --> 04:01:46.580
Das ist richtig,

04:01:46.580 --> 04:01:48.580
das hat der Auskennfuchs recht,

04:01:48.580 --> 04:01:50.580
ähm, das könnte man noch viel

04:01:50.580 --> 04:01:52.580
schöner, äh, darstellen, ja.

04:01:52.580 --> 04:01:54.580
Aber, die Sache ist die,

04:01:54.580 --> 04:01:56.580
FFM-Pack haut mir

04:01:56.580 --> 04:01:58.580
ja quasi hier an der Stelle,

04:01:58.580 --> 04:02:00.580
da müsste man schon sich richtig

04:02:00.580 --> 04:02:09.660
das Bein ausreißen,

04:02:09.660 --> 04:02:11.660
ähm, hier, da müsste man

04:02:11.660 --> 04:02:13.660
sich ja schon richtig das Baum, äh, das Bein

04:02:13.660 --> 04:02:15.660
ausreißen, weil das FFM-Pack,

04:02:15.660 --> 04:02:17.660
ähm, die Code gibt dir

04:02:17.660 --> 04:02:19.660
halt quasi ein, äh,

04:02:19.660 --> 04:02:23.860
BGRA Memory

04:02:23.860 --> 04:03:00.260
Block zurück.

04:03:00.260 --> 04:03:02.260
So Leute, ich werd erstmal meine Pizza

04:03:02.260 --> 04:03:11.460
futtern, äh, Patrick, er meint,

04:03:11.460 --> 04:03:13.460
wenn du das

04:03:13.460 --> 04:03:15.460
quasi in Millisekunden

04:03:15.460 --> 04:03:17.460
schreiben würdest,

04:03:17.460 --> 04:03:19.460
oder?

04:03:19.460 --> 04:03:21.460
Also sprich,

04:03:21.460 --> 04:03:23.460
wenn du die Sekunden in Millisekunden

04:03:23.460 --> 04:03:27.220
haben willst,

04:03:27.220 --> 04:03:29.220
was ja natürlich mehr wird.

04:03:29.220 --> 04:03:31.220
Ah, ne, das ist der, der hat's verschrieben.

04:03:31.220 --> 04:03:33.220
Hahaha, okay, oder auch nicht.

04:03:33.220 --> 04:03:35.220
Weil das auch Sinn ergeben hätte, ja.

04:03:35.220 --> 04:03:39.500
Also wenn du jetzt mal 1000 rechnest,

04:03:39.500 --> 04:03:41.500
dann hast du halt das, was du in Millisekunden

04:03:41.500 --> 04:03:43.500
schreiben müsstest, dass du wieder auf Sekunden kommst.

04:03:43.500 --> 04:04:04.020
Max, kochst du nicht selbst?

04:04:04.020 --> 04:04:06.020
Naja, kein Bock.

04:04:06.020 --> 04:04:09.910
Lieferservice beste.

04:04:09.910 --> 04:04:11.910
Aber ich bin echt

04:04:11.910 --> 04:04:13.910
begeistert, wie flüssig das ist.

04:04:13.910 --> 04:04:15.910
Ich finde auch, wenn man sich das hier anguckt,

04:04:15.910 --> 04:04:17.910
im Vergleich jetzt zu,

04:04:17.910 --> 04:04:19.910
zu der WPF-Geschichte,

04:04:19.910 --> 04:04:21.910
ich finde auch,

04:04:21.910 --> 04:04:23.910
es ist flüssig, guckt euch das mal an,

04:04:23.910 --> 04:04:25.910
die Animation ist viel flüssiger.

04:04:25.910 --> 04:04:27.910
Guckt mal, wie die Hände hier wackeln.

04:04:27.910 --> 04:04:31.220
Seht ihr?

04:04:31.220 --> 04:04:34.540
Moment, meins ist,

04:04:34.540 --> 04:04:36.540
meins hat auch die falsche, falschen FPS

04:04:36.540 --> 04:04:38.540
kann das sein?

04:04:38.540 --> 04:04:40.540
Wart mal, meins hat die falschen FPS.

04:04:40.540 --> 04:04:42.540
Nö, hat's

04:04:42.540 --> 04:04:44.540
nicht.

04:04:44.540 --> 04:04:46.540
Meins hat die richtigen FPS.

04:04:46.540 --> 04:04:48.540
Meins hat die FPS, die im Pfeil stehen.

04:04:48.540 --> 04:04:50.540
WPF kriegt's

04:04:50.540 --> 04:04:56.540
nicht richtig hin.

04:04:56.540 --> 04:04:58.540
Guckt mal, wie lahm das ist.

04:04:58.540 --> 04:05:00.540
Ich hab zwei Durchläufe,

04:05:00.540 --> 04:05:05.830
bis die einen haben.

04:05:05.830 --> 04:05:07.830
Aber meins hat die FPS,

04:05:07.830 --> 04:05:09.830
die das Pfeil sagt, dass es hat.

04:05:09.830 --> 04:05:11.830
Und WPF hat, was auch

04:05:11.830 --> 04:05:13.830
immer.

04:05:13.830 --> 04:05:15.830
Das braucht doppelt so lang oder so.

04:05:15.830 --> 04:05:17.830
Wahrscheinlich, weil's

04:05:17.830 --> 04:05:19.830
CPU-mäßig hinterherkommt.

04:05:19.830 --> 04:05:25.380
Keine Ahnung.

04:05:25.380 --> 04:05:27.380
Das hier hat, keine Ahnung, 5 FPS oder so.

04:05:27.380 --> 04:05:31.980
Und der hier hat 25.

04:05:31.980 --> 04:05:33.980
Aber ich nehm das,

04:05:33.980 --> 04:05:35.980
was das Pfeil auslässt.

04:05:35.980 --> 04:05:37.980
Wir können ja mal gucken.

04:05:37.980 --> 04:05:39.980
Wir können mal wirklich checken,

04:05:39.980 --> 04:05:41.980
was das Zeug hat.

04:05:41.980 --> 04:05:43.980
Ne, VLC, wir machen

04:05:43.980 --> 04:05:45.980
FF-Probe.

04:05:45.980 --> 04:05:47.980
FF-Probe.

04:05:47.980 --> 04:05:49.980
Hat FPS

04:05:49.980 --> 04:05:51.980
12,5

04:05:51.980 --> 04:05:55.930
und

04:05:55.930 --> 04:05:57.930
der Papagei

04:05:57.930 --> 04:06:05.400
hat

04:06:05.400 --> 04:06:07.400
25.

04:06:07.400 --> 04:06:09.400
Allerdings, ah, Moment.

04:06:09.400 --> 04:06:11.400
Ne.

04:06:11.400 --> 04:06:13.400
Keine Ahnung.

04:06:13.400 --> 04:06:15.400
Müsste er eigentlich richtig erkennen.

04:06:15.400 --> 04:06:18.970
Macht er aber anscheinend nicht.

04:06:18.970 --> 04:06:20.970
Läuft dein alter Play dann als Web-Overlay

04:06:20.970 --> 04:06:22.970
oder lokal?

04:06:22.970 --> 04:06:24.970
Das ist lokal.

04:06:24.970 --> 04:06:26.970
Das Web-Interface ist ja dafür gedacht,

04:06:26.970 --> 04:06:28.970
dass du es auf dem Tablet oder so verwenden kannst.

04:06:28.970 --> 04:06:30.970
Das ist ein transparentes WPF-Fenster

04:06:30.970 --> 04:06:32.970
und im Hintergrund

04:06:32.970 --> 04:06:34.970
eine ASP.NET Core-Anwendung.

04:06:34.970 --> 04:06:36.970
Das Web-Interface kannst du auf dem Tablet verwenden.

04:06:36.970 --> 04:06:38.970
Klickst du drauf, dann geht's dir auf.

04:06:38.970 --> 04:06:40.970
Das besteht aus quasi dem Web,

04:06:40.970 --> 04:06:42.970
aus der ASP.NET Core und der WPF-Anwendung.

04:06:42.970 --> 04:06:49.220
Ja, ich weiß, dass man

04:06:49.220 --> 04:06:51.220
Gif-Play mit 25 FPS abgespielt hat.

04:06:51.220 --> 04:06:53.220
Allerdings, ich hab's ja nicht gesetzt.

04:06:53.220 --> 04:06:55.220
Guck da.

04:06:55.220 --> 04:06:57.220
Ich sag hier, Decoder FPS.

04:06:57.220 --> 04:06:59.220
Und Decoder FPS ist ja dann,

04:06:59.220 --> 04:07:01.220
in meiner Meinung,

04:07:01.220 --> 04:07:03.220
dass es 25 sind.

04:07:03.220 --> 04:07:07.180
Was aber

04:07:07.180 --> 04:07:09.180
anscheinend

04:07:09.180 --> 04:07:13.830
nicht stimmt.

04:07:13.830 --> 04:07:15.830
Wobei, FF Probe gibt es aus

04:07:15.830 --> 04:07:17.830
und ich mach's auch mit FFmpeg.

04:07:17.830 --> 04:07:19.830
Das ist irgendwie

04:07:19.830 --> 04:07:21.830
ein bisschen

04:07:21.830 --> 04:07:29.240
merkwürdig.

04:07:29.240 --> 04:07:31.240
Doch, doch, ich bin demnächst off.

04:07:31.240 --> 04:07:33.240
25?

04:07:33.240 --> 04:07:35.240
Der denkt, das sind 25.

04:07:35.240 --> 04:07:37.240
Guck da.

04:07:37.240 --> 04:07:39.240
25, wo schreib ich denn hier hin?

04:07:39.240 --> 04:07:41.240
Stream?

04:07:41.240 --> 04:07:43.240
Ja.

04:07:43.240 --> 04:07:45.240
Framerate.

04:07:45.240 --> 04:07:49.260
Was haben wir noch zu bieten?

04:07:49.260 --> 04:07:51.260
R-Rate.

04:07:51.260 --> 04:07:53.260
Können wir auch nochmal machen.

04:07:53.260 --> 04:07:57.590
Vielleicht sind die auch unterschiedlich.

04:07:57.590 --> 04:08:03.270
25.

04:08:03.270 --> 04:08:05.270
Was haben wir sonst noch so zur Auswahl?

04:08:05.270 --> 04:08:11.910
Mal gucken, was die anderen Dinger für Framerates ausspucken.

04:08:11.910 --> 04:08:16.500
Ray.

04:08:16.500 --> 04:08:18.500
Ähm, wenn man das jetzt nochmal

04:08:18.500 --> 04:08:22.970
vielleicht richtig schreiben würde, alles.

04:08:22.970 --> 04:08:24.970
Bitrate. Sample Rate.

04:08:24.970 --> 04:08:26.970
Was kommt denn da raus?

04:08:26.970 --> 04:08:28.970
Null.

04:08:28.970 --> 04:08:34.330
Frame.

04:08:34.330 --> 04:08:36.330
Framerate.

04:08:36.330 --> 04:08:43.740
Ich hab eine Idee, woran das liegt.

04:08:43.740 --> 04:08:48.200
Aha!

04:08:48.200 --> 04:08:50.200
Daran liegt das.

04:08:50.200 --> 04:08:52.200
Ich lese das falsch aus.

04:08:52.200 --> 04:08:54.200
Guckt mal.

04:08:54.200 --> 04:08:57.510
Das Richtige ist Stream.

04:08:57.510 --> 04:08:59.510
Das Richtige ist Stream.

04:08:59.510 --> 04:09:01.510
Das hat total beknackt.

04:09:01.510 --> 04:09:06.740
Das Richtige ist Stream.

04:09:06.740 --> 04:09:08.740
Average Framerate.

04:09:08.740 --> 04:09:10.740
Das da.

04:09:10.740 --> 04:09:12.740
Geteilt durch.

04:09:12.740 --> 04:09:14.740
Das da.

04:09:14.740 --> 04:09:20.680
Und dann stimmt das nämlich auch.

04:09:20.680 --> 04:09:51.960
Aber meins ist trotzdem noch flüssiger.

04:09:51.960 --> 04:09:53.960
Was funktioniert denn schon alles?

04:09:53.960 --> 04:09:55.960
Fast alles?

04:09:55.960 --> 04:09:57.960
Resizen klappt noch nicht.

04:09:57.960 --> 04:09:59.960
Aber GIFs abspielen geht.

04:09:59.960 --> 04:10:01.960
Transparente GIFs abspielen geht.

04:10:01.960 --> 04:10:03.960
Eigentlich funktioniert alles.

04:10:03.960 --> 04:10:11.370
Also das Schwierige ist geschafft.

04:10:11.370 --> 04:10:13.370
Musst du die FPS nicht später auslesen,

04:10:13.370 --> 04:10:15.370
wenn das... Das Pfeil ist schon geöffnet.

04:10:15.370 --> 04:10:17.370
Ich mach das Pfeile im Konstraktor auf.

04:10:17.370 --> 04:10:19.370
Ich kann gar nichts vorher...

04:10:19.370 --> 04:10:21.370
Ich kann quasi nichts vorher auslesen,

04:10:21.370 --> 04:10:23.370
bevor ich überhaupt drauf zugreifen kann.

04:10:23.370 --> 04:10:25.370
Das Pfeil ist auf jeden Fall da.

04:10:25.370 --> 04:10:31.370
Ich hab's jetzt ja hier richtig.

04:10:31.370 --> 04:10:33.370
Ich hab den...

04:10:33.370 --> 04:10:35.370
Die zweite Komponente nicht ausgelesen

04:10:35.370 --> 04:10:37.370
an der Stelle hier.

04:10:37.370 --> 04:10:39.370
Jetzt stimmt's ja mit 12,5 FPS.

04:10:39.370 --> 04:10:44.280
Leider gibt's keine halben FPS.

04:10:44.280 --> 04:10:46.280
Es gibt im Prinzip nur 12 oder 13.

04:10:46.280 --> 04:11:11.290
Ja.

04:11:11.290 --> 04:11:13.290
Das ist schon... Das gefällt mir.

04:11:13.290 --> 04:11:19.540
Das gefällt mir echt gut.

04:11:19.540 --> 04:11:21.540
So Leute, ich geh jetzt mal

04:11:21.540 --> 04:11:23.540
Pizza futtern. Wir sehen uns

04:11:23.540 --> 04:11:25.540
demnächst. Macht's gut.

04:11:25.540 --> 04:11:27.540
Bis denn. Tschüss.

04:11:27.540 --> 04:11:31.110
Gibt's irgendwas zu hosten?

04:11:31.110 --> 04:11:39.800
Wen kann ich hosten?

04:11:39.800 --> 04:11:45.930
Irgendwas, den ich hosten kann?

04:11:45.930 --> 04:11:47.930
Hosten...

04:11:47.930 --> 04:11:51.620
Keine Ahnung.

04:11:51.620 --> 04:11:55.640
Irgendwie keiner da.

04:11:55.640 --> 04:11:57.640
Der Frasier, der spielt nicht.

04:11:57.640 --> 04:12:08.630
Ne, dann geh ich jetzt einfach

04:12:08.630 --> 04:12:22.060
auf ein Remix.

04:12:22.060 --> 04:12:27.220
Aber Remix.

04:12:27.220 --> 04:12:34.890
So, macht's gut.
