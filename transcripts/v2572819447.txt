Untertitelung des ZDF, 2020
Untertitelung des ZDF, 2020
Untertitelung des ZDF, 2020
Untertitelung des ZDF, 2020
Moment, Chat, ich muss noch was zu trinken holen.
Jetzt sind wir am Start.
Test ja, Funst.
so der peper muss bisschen kleiner dancen
So.
So.
Weiter geht's.
Heute
steht auf dem Programm
Wir haben uns ja in den letzten zwei Streams mit Java und Springboot beschäftigt.
Wovon ich bei dem so gut wie keine Ahnung hatte.
Von Java nur minimal und von Springboot gar nicht.
Und wir haben es hingekriegt per Websocket sich zu verbinden und da irgendwelche sinnlosen Sachen drüber zu spammen.
Ich zeige euch auch gleich was wir gemacht haben.
Das ist nicht viel, das sind irgendwie 20 Zeilen oder so insgesamt.
Nein, das waren 40 Zeilen vielleicht.
Ich habe es noch ein bisschen ordentlich aufgeräumt vom letzten Stream,
aber im Prinzip ist es mehr oder weniger noch.
Das ist zu 99% das Gleiche, was wir im Stream gemacht haben.
Facegesicht, danke für den Sub.
Excellent Subscriptions hier.
Genau, so sieht es aus.
und heute habe ich mir überlegt, probieren wir mal zu gucken, wie man Post-Requests macht.
Dringend, habe ich gerade.
Wie man Post-Requests macht, wie man was in der Datenbank speichert.
Dann wollte ich mir mal angucken, wie man aus, also das heißt nicht, dass wir das heute alles hinkriegen,
ich sage nur so, weil ich mir so überlegt habe, was man machen könnte.
Dann wie man aus Java andere Libraries aufruft, die nicht in Java sind, beispielsweise über irgendein C-Interface.
Dann wie man am besten Sachen validiert, wenn man die über Post-Request reinschickt.
Und dann Thema so Metriken, Monitoring.
Wir können für unsere Anwendung ein Prometheus Backend oder Prometheus Metrik Endpoint machen.
Habe ich auch schon gesehen, das ist tatsächlich wohl in Springboot relativ einfach.
Kafka Streams.
Also, ich lerne schon Java
und ich lerne Spring Boot. Da muss ich mich jetzt nicht auch noch
damit auseinandersetzen.
Irgendwie ist mein Nackenstütze
verrutscht.
Ne, muss ich nicht. Das wird das dann noch ein bisschen viel.
Also, unsere Anwendung ist
super simpel.
Ich starte die gerade mal.
Ne, warte mal.
Hier rüber.
run
so auf port 80 80 und jetzt wenn ich mich hier connecte mit einem websocket
im websocket connecte kriege ich einfach hier sinnlose to do's gespammt gepusht
an an den kleinen das alles so und es ist es ist im prinzip noch genauso wie
das letzte mal einmal in der sekunde wenn ihr neue updates geschickt das
einzige was ich gemacht habe ist ich habe die ich hatte ja letzten stream alles hier in der alles
quasi unter main reingeschrieben ich habe das jetzt einfach mal aufgesplittet auf 34 dateien
ja also hier gibt es websocket config dann hat man alles schön der übersicht websocket konflikt
gibt es eigentlich nur ein endpunkt slash ps ja wir haben uns auch letztes mal aus dem browser
an den websocket endpunkt verbunden das hat alles funktionieren dann gibt es hier diesen
das wo ich mir speichere wenn der web session der websocket session aufgebaut wird es wird
hier in diesem diese hash map trainer gespeichert jedes session und dann wieder gelöscht also mit
den connection kloster wird die session gelöscht wenn connection täglich das wird die session
hinzugefügt einmal pro sekunde wird alles geupdatet hier an den client geschickt und
das war es eigentlich genau dann haben wir noch habe ich das ganze noch mal hier ausgelagert wie
querin ja hier so eine jason placeholder api random zwischen 1 und 11 das einzige was ich
zum letzten stream eingebaut habe zu also zu dem was ich gestreamt habe also dass das ist alles
noch genauso wie wir es gemacht haben im stream nur dass sie ein bisschen aufgesplittet habe
in unterschiedliche dateien ich habe das hier so als eigenen service ausgelagert und ich habe noch
einen cache eingebaut dass wir nicht so viele api requests machen gegen diese placeholder api weiß
nicht ob man das so macht aber klickt mir eigentlich ganz sinnvoll der map und er guckt
einfach nach ob es diese id schon gibt wenn es diese id schon gibt dann return das result und
wenn es das noch nicht gibt dann ruft er das ab und speichert sie in die hashmap das war's
im prinzip schon können wir hier in unsere main reingehen und weiter basteln
jo und ich habe mir überlegt wir können hast du urlaub warum wie kommst du drauf
du denkst wahrscheinlich weil ich am montag warum weil ich montags um 13 uhr
online bin montags arbeite ich nicht schon seit jahren arbeite ich montags nicht ich
dachte eigentlich dass es allgemein bekannt mittlerweile ne ne ne montags ist nix montags
ist nichts.
Ja, genau. Montags habe ich frei.
Ja, vier Tage
Woche. Ich arbeite Dienstag, Mittwoch, Donnerstag,
Freitag. Wir machen erstmal Package-Updates.
Ach, by the way.
Muss man ja immer mal gucken, dass man top
aktuell ist. Ah, ein neuer
Linux-Kernel am Start. Heißt, ich
muss auch noch rebooten
jetzt gleich.
Machen wir das doch mal.
Gucken wir mal, ob es hier neue Sachen gibt.
Gucken wir mal, ob es Jetbrain
EE-Updates gibt.
Ne, gibt es nicht.
Da klicke ich jetzt nicht drauf.
So.
Reboot.
Kann ich mir das irgendwie aliasen?
Reboot.
So.
Reboot.
Ja.
Allgemein bekannt, ne?
das stimmt ich war nicht nicht oft am start ich habe mal das letzte halbe jahr geguckt in
meinen twitch statistiken da war ich weniger im durchschnitt ja über das letzte halbe jahr
im durchschnitt war ich weniger als eine stunde die woche online es ist aber halt so er geballt
Ja, ich war zwei Monate gar nicht on, dann war ich wieder ein bisschen on, dann war ich wieder einen Monat gar nicht on.
Oder ich bin ein bisschen on.
Ruby.
Von dem Kern habe ich auch nie wieder was gehört.
So, hat er rebooted.
Ja.
Dart X.
Und hoffentlich fragt mich jetzt keiner, warum nicht Wayland.
Da muss ich wieder eine Runde ranten über Wayland, Alter.
Firefox starten, Terminal starten, zack, Pleon.com, IntelliJ starten.
Warum nutzt du Arch?
By the way fehlt er dazwischen hier noch.
By the way, warum nutzt du Arch, by the way?
was ist bei dir der Grund Arch über Debian zu nutzen
Debian hat ziemlich alte Pakete
gut man könnte jetzt Testing oder sowas nehmen
Debian ist für mich eher was was
auf Server kommt
nicht so sehr als Desktop Betriebssystem
der Vorteil von Arch ist
also man lieber dem arch wiki und sowas ist du hast eine riesen paketauswahl was die art user
repos und du hast top aktuelle pakete du hast einen sauschnellen package manager und du kannst
jetzt halt exakt zu konfigurieren wie willst du das mit dem ja auch kannst ja also ich finde das
top gerade wenn sie will was ausgefallen das ist an software barth gibt es das in der regel
Bei Debian nicht
Öh
OpenSUSE, Alter
Gibt es eigentlich einen Unterschied
Von Debian Server zu Ubuntu Server?
Ja, Ubuntu
Hat ganz viel Schrott noch mit dabei
Ne, das habe ich falsch formuliert
Es ist jetzt nicht so, dass die irgendwie
Mehr bloated werden
Als Debian oder so
es ist beides relativ gut paketiert, sowohl Demian als auch Ubuntu,
aber Ubuntu bastelt immer irgendwelche ekligen Dinger rein.
Die haben beispielsweise diese komische Netzwerk-Config über YAML.
Dann haben sie jetzt demnächst irgendwelche Rust-CLI-Tools anstatt die Standard-Dinger.
Dann haben sie hier komische Sachen, die es teilweise nur noch per Snap gibt.
ganz ehrlich da ist mir demian mittlerweile zehnmal lieber ich war ich war riesen ubuntu
fanboy ubuntu server fanboy ja ihr wisst ich habe früher immer wenn wir irgendwas im stream
gemacht haben wir meinen default irgendeinen ubuntu server lts und das gar nicht mehr mittlerweile ist
demian mein default außer auf der arbeit da ist es red hat aber halt auch nur weil business
enterprise gedöns
10 snaps
ja haben wir doch schon kommt man wir haben wir haben schon eine eine zeile editiert
Ach ne, nicht was.
Was? Ich lerne Java und Spring Boot.
Im Prinzip haben wir nur eine minimale WebSocket-Anwendung mit Spring Boot,
die, Moment, starten,
die nichts anderes macht als
einmal in der Sekunde ein Update pushen an den Client über WebSocket.
Ich kann auch mit dem Browser draufgehen, das funzt auch.
Ja.
und heute gucken wir mal wie das mit datenbank zugriff so geht in springwood datenbank zugriff
wie man per post jason also wie man jason daten per post an springwood schickt dann wie man die
sachen validiert die man per post gekriegt hat eventuell wie man mit java libraries aufruft die
nicht in java sind und einen prometheus endpoint fürs monitoring habe ich mir so überlegt gucken
wie weit wir das auf die Reihe kriegen.
Kannst du was über dein Klo erzählen?
Ja.
Da gibt es ein Video zu.
Ich habe da ein Video zu gemacht.
Guck mal.
Es gibt einmal hier ein Video zu.
Mein Geberit
Aqua Clean Klo.
Und dann gibt es noch ein Fazit Video.
8 Jahre Premium Klo Fazit
Kannst dir angucken
Aber ich kann dir auch kurz was zu sagen
Woher weiß ich nicht mehr
Von irgendeinem Sanitärladen
Keine Ahnung, das ist zu lang her
Marke, das Ding ist ein Geberit Aqua Clean
Das gibt es mittlerweile in der Form gar nicht mehr
Es gibt halt neuere Versionen davon
Beispielsweise mein Klo hatte noch kein Bluetooth
und noch kein USB.
Stellt euch das mal vor.
Wo kommt man denn da hin?
Die neueren Versionen haben auf jeden Fall
Bluetooth und ich glaube auch USB.
Es ist wirklich weird champing.
Für was?
dass du dich zum beispiel mit einer handy app verbinden kannst zum klo preis
weiß ich nicht mehr habe ich aber im video gesagt einbau einbau wird von so
einem sanitären laden gemacht und dann gibt es auch eine witzige story dazu
Irgendwann hat der Hersteller mal eine Rundmail geschrieben.
Warum Java lernen, kann ich gleich was dazu sagen.
Irgendwann hat der Hersteller mal so eine Rundmail geschrieben oder Rundanruf.
Ich weiß es gar nicht mehr, ob es ein Anruf oder eine Mail war.
Zumindest hat der Hersteller gesagt, Achtung, bitte das Klo nicht mehr verwenden.
Das Klo kann Feuer fangen.
Das ist kein Witz. Das war wirklich so.
Da haben wir doch das passende
Moment
Da haben wir doch das passende
Emote irgendwo dafür
Hier
Das Klo kann Feuer fangen
Haben die geschrieben
Ja die wichtigen Sachen müssen jetzt als erstes
Bevor wir anfangen zu programmieren
Müssen jetzt erstmal geklärt werden
genau der hersteller hat gesagt achtung das klo kann feuer fangen man sollte
sich mehr benutzen da dachte ich mir auch so er jetzt habe
ich in 3000 euro klo und kann es nicht benutzen und ja auch gesagt die werden
das fixen also problem war problem war da war irgendeine ich weiß nicht was es
genau ist eine flüssigkeit drin in dem klo das benutzt wird für
Boah, keine Ahnung. Irgendwas zu schmieren oder zu... Keine Ahnung.
Ich weiß es nicht, für was die Flüssigkeit ist. Keine Ahnung.
Ne, eine Sitzheizung hat das Ding nicht.
Also ich weiß nicht, wofür die Flüssigkeit ist.
Zumindest konnte die Flüssigkeit auslaufen und die hatten Angst, wenn das in die Elektronik läuft, dann könnte es Feuer fangen.
Weiß ich nicht, ob das überhaupt passiert ist, aber das war so.
und so. Und da
habe ich mich bei denen gemeldet, habe gesagt, hier, ich habe so ein Klo,
ich brauche das gefixt, haben die gesagt, ja, ja,
alles klar, machen wir. Und dann haben die sich
einfach wochenlang
nicht gerührt. Die haben wahrscheinlich
gedacht, so,
ist das an 230 Volt
angeschossen, relativ sicher, ja.
Ich meine, die Spannung für die
Elektronik im Klo wird wahrscheinlich deutlich weniger
sein, das sind wahrscheinlich 5 Volt oder
3,3 für, vielleicht doch 12,
aber wahrscheinlich eher 3,3 oder 5
wegen welches Mikrocontroller gedöhnt ist.
Ja, zumindest musste ich dann damals die großen Geschütze rausholen.
Und zwar habe ich auf Twitter gepostet, dass mein Klo Feuer fangen kann und der Hersteller sich nicht drum kümmert.
Ich habe wirklich lang gewartet, ja.
Da musste ich die großen Geschütze rausholen.
Und du glaubst es nicht, an dem, oder ihr glaubt es nicht, an dem gleichen Tag, wo ich das gepostet habe, hat mich noch eine von Geberit angeschrieben.
ob sie Kontaktdaten haben kann.
Also manchmal hilft es,
um die 20.000
Leute, Follower auf Twitter zu haben.
Manchmal, ich mache ja sowas
normalerweise nicht, ja. Aber
in dem Fall, ich konnte
mein Klo nicht richtig benutzen.
Was soll ich denn machen? Und die haben sich
wochenlang nicht gerührt.
Nein, mein Klo hat kein USB-C. Die neuen
haben glaube ich usb c und bluetooth die neuen kannst du haben so eine moment
eberit app
geberit home ich nenne hier genau die haben so eine app für fürs klo und so
was da kannst du dann beispielsweise spülen über die app und solche dinger
du kannst auch presets speichern für die neuen klos da kannst du sagen hallo ich
Ich bin der Max und ich will das Max-Preset aktivieren.
Ja, das Max-Preset könnte dann zum Beispiel sein,
Wasser anwärmen und spezieller Winkel für den Wasserstrahl oder sowas.
Das kannst du ja da alles anstellen.
Ja.
Also gibt es eine App,
die kann sich aber nur mit den neueren Modellen verbinden, die Bluetooth haben.
Hat das Klo RGB?
Naja, so ein bisschen vielleicht.
das hat eine grüne led ja eine blaue led und eine rote led also das ist das ist nicht ganz rgb aber
es geht in die richtung hol dir auch als die dinger sind mega geil ganz ehrlich jetzt mal
jetzt jetzt mal etwas klingt klingt ja wieder die first world sinnlos probleme ja aber im ernst das
lohnt sich richtig das lohnt sich ich gehe seitdem ich dieses klo habt hier also dass da
dann euch das jetzt ja zeit ja nicht dass jetzt habe ich jetzt ja eigentlich blog ob ich erstmal
hier seitdem ich mache mal kurz mein gelaber aus seitdem ich das klo hier habe das video ist von
von vor elf jahren schon ja ich habe das schon eine ganze weile die neuen könnte von ausgehen
Die sind deutlich besser nochmal.
YouTube, come on.
So, hier, da sieht man es.
Aber hier, hier zeige ich die Fernbedienung, glaube ich, ordentlich.
Genau so sieht das Klo aus im Endeffekt.
Der aussieht wie ein ganz normales Klo, nur mit dem Unterschied, man hat da eine Fernbedienung.
Bin ich gar nicht sicher, ob ich die zeige.
Da ist die Fernbedienung, da oben war sie.
Da hier ist die Fernbedienung.
Die Fernbedienung kann man ausklappen.
Da hat man alle möglichen Sachen für Spülen, Trocknen, Dunstabzugshaube, nenne ich es mal.
Damendusche, verschiedene Resets, glaube ich, weiß ich gar nicht.
Man kann den Winkel verstellen vom Wasserstrahl, Heizung anmachen.
Wohlgemerkt, das ist nicht die Heizung für die Brille oder so, sondern für das Wasser.
Und hier kann man die Temperatur einstellen.
Ja
Und ich kann das wirklich nur empfehlen
Wenn ihr so ein Klo habt, ihr geht nicht mehr woanders aufs Klo
Es sei denn, es geht gar nicht mehr anders
Das ist das Beste
Und dazu kommt, also
Man braucht schon auch Klopapier, ja, zum Abtrocknen und sowas
Also was ich beispielsweise nicht mag, ist hier das mit dem Föhn
Das benutze ich so gut wie gar nicht
Ja, so ein bisschen Klopapier braucht man immer noch
Aber man hat deutlich weniger Klopapierverbrauch.
Und es ist einfach tausendmal angenehmer.
Jetzt ohne Scheiß, das ist viel...
Im wahrsten Sinne des Wortes.
Das ist viel besser...
Hier, ich zeige es dir, glaube ich, auch irgendwo mit dem Wasserstrahl.
Hier, guck.
Wasserstrahl.
Genau.
Guck hier, zack, kann man draufklicken
Draufdrücken
Auf Max, laber nicht so viel, zeig's
Bei dir muss der Rand
Du meinst, die Kloschüssel muss kalt sein
Ja, dann schaltet halt die Heizung aus
Ne, reinholen tut man das nicht
So, Achtung, guck mal
Hier ist normalerweise der Poppes
So, und der Wasserstrahl, der macht so gut sauber, dass du gar nicht großartig mehr reiben musst mit Klopapier.
Also es ist viel angenehmer auch und nicht so anstrengend für den Hintern.
Also ich kann es echt nur empfehlen, wenn ihr ein bisschen Kohle übrig habt und die Installation in der Wohnung und so, das hinhauen, ohne Scheiß, überlegt euch mal, ob ihr euch nicht so ein Klo kauft mit Spülung.
Ja, ja, ja.
Das hat überhaupt keine Probleme mit auch hartnäckigem Schiss.
Gut.
Das erkennt, ob du drauf sitzt.
Ich gehe davon aus, dass die Neuen mittlerweile eine automatische Poppuss-Erkennung haben.
Dass die wissen, wo sie hinspritzen müssen.
Aber es trifft auch so relativ gut.
Was hast du für die Installation bezahlt?
Ich habe keine Ahnung mehr.
Das ist 13 Jahre oder so her.
12, 13 Jahre her.
Also 12 Jahre.
So.
Ich glaube nicht, dass das mit KI funktioniert.
Aber heutzutage weißt du ja nie was.
Ja, nein, machen wir nicht.
Ich lerne nur gerade Springboot und Java.
Ach ja, vielleicht zur Erklärung nochmal, warum ich...
Ne, meiner nicht.
Meiner nicht.
Die neuen kann ich mir durchaus vorstellen, dass da potenziell Doom drauf läuft.
Es gab doch auch mal Doom auf einem Schwangerschaftstest.
Aber das war nur Fake, hat sich ja dann rausgestellt.
Genau, also Java. Warum Java?
Das kann ich erklären.
Ganz einfach.
Ja, wenn man das
out of context knipft, dann klingt das schon
merkwürdig, ne?
Hast du den Webserver auf der E-Zigarette?
Ja, hab ich gesehen.
Das hab ich gesehen.
Spring is easy to death. I'm spring noob.
Just started to learn it
a few streams ago.
Aber der Grund,
warum ich Spring Boot lerne,
ist folgendermaßen.
Und zwar,
ich werde demnächst
bei mir auf der Arbeit
zu unseren Entwicklern gehen
für 14 Tage oder sowas.
Und ich mache da quasi ein
Entwicklerpraktikum.
Also im Prinzip
ist das
nicht wirklich ein Praktikum.
Bei uns gibt es jetzt so ein neues
Programm. Das muss ich jetzt mal kurz
ja, dass man es besser versteht.
Also, ich arbeite in Frankfurt in der Versicherung und denen ist aufgefallen, dass die Schwierigkeiten haben, geeignetes Personal zu finden, wie wahrscheinlich gefühlt jeder IT-Laden in Deutschland Probleme hat, geeignetes Personal zu finden.
So, und jetzt haben sie erkannt, dass es trotzdem, obwohl sie sich Mühe geben, und das muss man denen auch echt mal zugutehalten, die geben sich ja wirklich Mühe, dass die Leute zufrieden sind und nicht abhauen, aber es kommt trotzdem ab und zu mal vor, dass manche Leute unzufrieden sind, keinen Bock mehr haben.
Und da haben die jetzt erkannt, eigentlich richtig High IQ Gedanke, haben die gedacht, wenn wir Leute haben, die unzufrieden sind mit dem, wo sie aktuell sind, vielleicht gibt es ja in der Versicherung was anderes für die Leute, was ihnen besser gefällt, bevor die ganz abhauen.
Und jetzt haben sie so ein Karriereprogramm gestartet, wo man auch mal in andere Abteilungen reingucken kann.
Sei es nur, weil es einen interessiert oder sei es vielleicht auch, weil man mal was anderes machen will.
Da habe ich schon meinem Chef gesagt, also ich würde gerne mal, nicht weil ich wechseln will oder sowas.
Ein CEO-Priorität, das wäre auch mal geil.
Das würde ich im Leben nicht machen wollen.
Da habe ich meinem Chef gesagt, ich würde gerne mal 14 Tage zu unseren Entwicklern.
Nicht, weil ich das machen will, ich bleib da, wo ich bin, ja, aber ich will einfach mal 14 Tage mir das angucken.
Und da ist es halt, die machen zum größten Teil alles in Java und das meiste davon ist aus Springboot-Anwendung.
Deswegen habe ich mir gedacht, also der Termin steht ja noch gar nicht fest, wann ich da hingehe, ja.
Also es kann durchaus noch ein bisschen dauern.
Was, warum habe ich die Entwickler gedisst?
Hä?
Naja, zumindest gehe ich jetzt dann demnächst da irgendwann mal hin.
Und ich dachte mir, es ist vielleicht nicht verkehrt, bevor ich da hingehe, wenn ich zumindest ein bisschen Ahnung von Java und Spring Boot habe.
Weil natürlich könnte ich dann 14 Tage rumhocken und zugucken und, ähm, und Zeug.
Aber das macht ja nichts.
Das ist ja, das ist ja Blödsinn.
Ich will ja da ein bisschen, bisschen was machen, ja.
vielleicht irgendwie mal so ein simples Ticket
oder so. Irgendwas
will ich ja da auch auf die Reihe kriegen. Ich will zumindest auch
verstehen, was da passiert.
Deswegen
habe ich mir gedacht,
es ist ein guter Zeitpunkt, sich einfach mal Java
und Springboot anzugucken. Und ich muss sagen,
ich flame ja Java immer
ganz gerne.
Wir haben doch hier irgendwo
hatten wir nicht so ein
hatten wir nicht sogar irgendwo mal ein Java-Emoji?
Sekunde, lasst mich mal kurz checken.
Hatten wir nicht irgendein Java-Emote?
Seht ihr irgendwas, was nach Java aussieht?
Java, geh mir bloß weg.
Ich sehe hier nichts.
Java, hier!
Den haben wir
Genau
Und ich hab sogar noch einen Java Choke am Start
Falls man es erkennt
Aber richtiger
Dead Choke
Ganz ehrlich
Ich hätt's auch lieber, dass es die Sharp wäre
Anstelle von Java
Aber ist nicht so
Und ich muss sagen, seitdem ich mich damit ein bisschen auseinandergesetzt hab
So schlimm find ich's gar nicht
Und Spring Boot ist auch irgendwo ganz nice
Was mich allerdings bei Spring Boot
Ein bisschen nervt, ist diese ganze Magic
Ähm
Annotation Geschichte
Du hast ja teilweise gar keine Ahnung, was abgeht, aber hauptsache mal irgendwie eine Annotation dran gepappt.
Warum nicht Go?
Ja, weil es halt nicht Go ist.
Was soll ich...
Weil Business Enterprise.
Business Enterprise ist gefühlt 90% Java.
Weiß ich nicht, ich habe nie großartig was in Java gemacht, aber hier ist schon ganz schön viel Annotation-Rahmen.
Kotlin haben wir auch mal in einem Stream kurz gemacht.
ja sowas in der richtung ist das oder attribute in sich ab ja warum ich cobol
ich gucke mir gerade noch mal die web anwendung vom letzten mal rüber
cpc die web app haben wir doch irgendwo drin
Gehen wir das hier mal rein.
Web App.
Die Web App ist eine Index HTML, sonst nix.
Und da machen wir jetzt noch mal schnell
bester name für das projekt übrigens der kek weh champ immer in die web app
rein und starten wish to do code das brauchen wir nämlich so kommt das so
mir ist ja da eigentlich gar nicht am start dann können wir hier mal ein traum starten
moment
muss erst mal hier die web app surfen auf port 8000
8000 so und jetzt irgendwas kaputt meine spring anwendung läuft nicht okay
das ist alles was unsere anwendung aktuell macht unsere springboot anwendung die schickt
einmal in der sekunde hier neue daten per websocket an den client guck sieht man auch hier
gut sieht man auch wenn die neuen sachen rein also mehr macht die noch nicht und da basteln wir heute
mal ein paar andere sachen in springwood also man muss gar nicht dabei gewesen sein im letzten stream
oder so also websocket haben wir eigentlich abgehakt ich muss sagen vielleicht noch um das zu
zeigen das ist relativ gut gemacht und relativ simpel mit dem websocket ja also das einzige was
man machen muss für websocket verbindung in spring boot ist man muss hier so eine
so eine websocket config anlegen muss das ist halt wieder magic annotation ja
also du musst quasi eine klasse erstellen die dieses interface hier
implementiert und dann musste die annotaten mit enable websocket und add
configuration warum weil spring boot das so will so und dann sagst du da drin im
prinzip einfach nur ich will den websocket server haben der am endpunkt
slash vs lauscht und wenn man jetzt hier mal in unsere javascript anwendung
reingucken da sieht man da geht halt auf slash vs erlaubt von überall und dann
sagt man ihm okay was sollen wir dann auf also was soll dann aufgerufen werden
wenn es irgendwelche neuen verbindungen gibt oder abbrüche oder sowas von websocket
und dann brauchen wir noch hier diesen websocket händler das aber auch
Ihr seht, das ist alles übersichtlich. Das passt alles hier auf eine Seite drauf.
Und da habe ich im Endeffekt nichts anderes gemacht wie,
okay, sobald eine neue Websocket-Connection established wird,
dann speichert er sich dieses hier in dieser Session-Hashmap
und wenn die Session abkackt, removed er die Session aus der Hashmap.
Das ist alles.
Mehr habe ich nicht gemacht, um meine Websocket-Geschichten zum Laufen zu kriegen.
Also das ist wirklich nicht schlecht.
Das ist in .NET. Wenn man sich überlegt, wie man beispielsweise Websockets in ASP.NET Core macht, ist das auch nicht viel mehr oder weniger.
In ASP.NET Core verwendest du meistens Signal A anstatt Raw Websockets. Letztendlich ist es aber sehr ähnlich, muss man mal sagen.
Ja, man sagt dann auch hier AddSignal, ah, dann kann man Endpunkt sagen und in .NET legt man dann irgendeinen Message-Hub an, anstatt einen WebSocket-Händler.
Kommt aber mehr oder weniger aufs Gleiche raus.
Also das ist eigentlich ziemlich gut gemacht, wie man WebSockets hier benutzt in Spring Boot.
Das gefällt mir, also das ist wirklich sehr übersichtlich, kurz und knackig.
hätte ich gar nicht gedacht was ich ein bisschen blöd finde ist wenn du wenn man sucht spring boot
websocket minimal example zum beispiel dann findet man hier so was zum beispiel und das ist lautet es
faktisches beispiel was was die da machen hier ein schimmer was da überhaupt abgeht konfigur
stomp was auch immer stomp ist dann benutzen sie sich libraries hier in
ihrem client keine ahnung warum dieses warum dieses beispiel so kompliziert ist
stomp on connect on websocket error whatever super kompliziert im endeffekt
ist das geil ich weiß nicht ob das geil ist im endeffekt brauchst du einfach nur
hier 15 zeilen und ein bisschen javascript funktioniert also ich finde
ist mein, ist das
deutlich übersichtlicher für einen
für einen
für einen
Example.
Kann sich streiten,
ob Annotations
es wirklich übersichtlicher
machen, weil zum Beispiel,
also ich gebe dir ja prinzipiell recht,
ja, ich finde das schon durchaus sinnvoll,
wie sie das gemacht haben,
aber zum Beispiel hier, guck mal,
Spring Boot Application, dass du weißt, was das macht, musst du erstmal gucken, aha, Moment, Spring Boot Application ist eigentlich nur ein Alias für 8 weitere Annotations.
Und dann musst du gucken, okay, was machen denn diese weiteren Annotations, wenn du wirklich wissen willst, was abgeht.
Also ein bisschen Magic ist das schon.
Das ist gut und schlecht gleichermaßen.
Also ich finde es eigentlich nicht schlecht, wie sie es mittlerweile in .NET machen.
Da ist ein bisschen mehr explizit.
Also da sagst du dann nicht zum Beispiel Enable Scheduling, da würdest du dann sagen, so irgendwie, keine Ahnung, Add Scheduler oder sowas.
Mit irgendeiner Funktion.
mehr funktionen dann kannst du sag hier mehr braut bla bla bla und sowas natürlich ist auch immer
noch magic dran ich schaue mir alles mögliche an ich schaue mir also am liebsten am liebsten
gucke ich mir tatsächlich youtube tutorials an gibt es aber für viele sachen gar nicht so richtig
ich habe ich habe mal geguckt für spring boot gibt es relativ viele aber das halt wirklich nur basic
Websocket Tutorial gab es auch nur wieder welche mit Stomp und zig kompliziertem Kram.
Und wo ich gar nichts zugefunden habe, gescheit, ist ein Beispiel mit SQLite.
Ich wollte ja eigentlich Datenbank Access mal mit SQLite probieren, aber anscheinend ist SQLite in der Java Welt überhaupt nicht angesagt.
Gibt so gut wie keine Beispiele für.
Ja, das ist ja letztendlich irgendwo bei vielen Sachen so.
Ich finde es auch nicht so schlimm.
Wenn man sich halt für irgendein Framework entscheidet,
muss man halt ein bisschen gucken, wie das tickt
und sich möglichst dran halten,
weil ansonsten hast du wieder das problem dass sie permanent versucht am
framework vorbei zu bauen angefangen hat das ganze mit ruby und
rails was web frameworks angeht ruby und rails war so das erste framework was mir
einfällt wo die gesagt haben ey du machst das entweder so wie wir wollen
oder es geht nicht also bei ruby und rails war das ja ganz extrem wenn die
dateien nicht richtig hießen ging es nicht und so was damit hat das
angefangen dass sie gesagt haben hey du musst das so benutzen wie wir das wollen
oder Skeletten. Also du konntest das nur ganz
beschränkt konfigurieren auch.
So.
Und was ich jetzt mal ausprobieren wollte,
ist, wie man einen Post-Request macht.
Mal gucken, ob ich das ohne Hilfe hinkriege.
So ein bisschen die Logik
von Spring habe ich ja, glaube ich,
schon gecheckt. Also wir brauchen erstmal
eine Klasse. So, und das Ding halt,
Wobei, wir können doch mal unsere IDE verwenden.
Generate.
Ne.
Generate.
Controller.
REST Controller.
Ha!
Chatbrains IDE Magic.
REST Controller.
Ähm, ja.
Ich weiß nicht, wie wir das Ding nennen sollen hier.
Cute Chat Controller.
Okay.
Äh, Request Mapping.
Ne, das wollen wir nicht.
so, also, ich glaube, was wir jetzt
machen müssen für den Post-Request
ich brauch sowas wie hier
String
String, äh, ja gut
keine Ahnung, Post
und dann
muss man da drüben drüber schreiben
also es gibt Get-Mapping
und dann, glaube ich, jetzt vermutlich
gibt es vielleicht auch Post-Mapping
ah, gibt es, so, wir wollen
unter Slash-AP
Slash, ähm
Vielleicht sollten wir das Ding
API-Controller nennen.
Slash
API. Tja.
Keine Ahnung. Komm. Reicht.
Slash API. Fertig.
Danke für den Sub.
Massive Subscription.
So.
Und jetzt.
Keine Ahnung. Returnen wir einfach mal.
Okay. Okay. Beste.
So.
Von der Idee her,
ich muss übrigens noch mal was einstellen.
Wisst ihr, was mich nervt?
Guck mal, wenn ich hier schreibe add post,
findet er nichts. Ich muss schreiben add post.
Ich will mal hier
IntelliJ
Case
insensitive also complete.
Ich bin anscheinend nicht der Einzige.
Preferences Editor Code Completion.
Okay.
preference editor code completion
was
case
sensitive completion
ich hab hier oben match case, das wird's doch wahrscheinlich
sein, oder?
und jetzt probieren wir mal
add post, jetzt geht's, das ist doch gut
so, wenn ich das
jetzt richtig gesehen hab, dann sollte
ich jetzt eigentlich
unter slash
AP einen Post-Request hinschicken können.
Probieren wir das doch mal aus.
Curl
Localhost
Port 8080 slash AP
Not allowed, ich weiß, weil
X post.
Geht.
Das ist doch cool.
Das ist tatsächlich
relativ simpel.
Also, das muss man
Spring jetzt auch mal zur Hude halten.
Irgendwie hat es eine gewisse Logik, dass
wenn man eine sache gemacht hat auf die andere kommt doch jetzt natürlich die nächste preisfrage
übergeben wir hier jetzt da muss jetzt aber die hilfe gucken wie wir jetzt hier beispielsweise
machen wir mal machen wir eine klasse hier keine records api requests eigentlich sollte man die
sachen ja so benennen was sie machen und nicht so abstrakt egal so einfach irgendwie string
name oder so so nicht mache kein zeug so und da will ich jetzt als parameter will
ich so was hier bekommen api post request so das wird wahrscheinlich nicht so einfach
funktionieren oder vielleicht doch so mal schauen also wenn ich jetzt da nichts
hinschicken dann sagt er trotzdem okay
okay ich schicke mal ich schicke mal irgendwelche daten mit post ist minus
minus data ist es glaube ich minus die data genau minus x post minus die value genau
was die machen wir mal hier irgendein jason gedöns hier nehmen
als weiß ich nicht was funktioniert schreibe ich mal anders ich habe gedacht ich hatte
eigentlich okay jetzt mal mal ein mail formt jason ob es dann abkackt juck den
juck den ich juck den ich dann schauen wir mal da bin ich jetzt mal gespannt
wenn wir jetzt hier mal das printen dieses ding system out sind klein data
mal gucken was der dann da sagt wenn ich da etwas post wahrscheinlich sagt er gar
nichts.
Name gleich 0.
Das ist Java, das ist nicht Kotlin.
Was ist denn ein Record? Das ist das gleiche
wie in C Sharp. Das ist quasi eine Klasse,
die ein paar Sachen schon standardmäßig
überschreibt.
dass es sich mehr value type mäßig verhält also quasi checkt das nicht bei reference
ob was equal ist sondern anhand von den feldern und sowas und man kann es kürzer
schreiben mit gettern und settern in java als über eine klasse schreibt wenn ich eine
klasse schreiben würde müsste ich jetzt hier sich getter und setter methoden noch machen
ja ich denke es ist nicht so viel in java in der java-welt ich werde es später mit postgres probieren
request body das egal wir gucken uns mal spring gut post request jason guck mal
uns mal an rest template post request wird die playung schon wieder also eine klasse
haben wir nein ich brauche ich brauche am besten will ich brauche kein person service
Person Service Factory single mapping. Observer. Let's define a simple REST API for our Person
Class. Okay, Post Mapping value, Consumes Application JSON, Produces Application JSON.
Aha.
Aha.
Aha.
Wirst du für das gerade bezahlt oder frei?
Nein, werde ich nicht.
Nicht dafür bezahlt.
Keine Ahnung, großartig von Java und Spring Boot.
Dafür bezahlt mich doch keiner.
So, mal gucken, ob das jetzt schon was gebracht hat.
Unsupported Media Type.
Ach so, ja, logisch.
weil ich sagen muss hätte ich brauche nicht den ex content type application
jason brauche ich
Okay, aber es ist immer noch 0.
Also das hat es anscheinend nicht gebracht.
Okay, weiter.
Was haben sie hier sonst noch gemacht?
Ach, Add Request Body machen sie hier.
Guck mal.
Add Request Body.
Also muss man annotaten.
Das ist auch schon wieder ein bisschen Magic,
das man wissen muss.
Add Request Body.
Hat der hier sonst noch irgendwas?
Ne, okay. Starten wir mal neu.
Mal gucken, ob es jetzt funktioniert.
Kunst!
Also, man muss
AddRequestBody davor schreiben,
dass er das irgendwie serialisiert.
Okay.
Wir können ja mal das gleiche returnen.
Return?
Ähm, blöde Frage.
aber mal angenommen ich will kann ich das hier einfach so returnen nicht nicht
nicht so string kann ich das hier einfach so einfach so returnen und dann
sehr realisiert das mit der wird es wieder zurück ja sonst sehr gut
ja gut da kommen jetzt mal eine html form bauen und versuchen uns mal was zu
zu pushen gut das ist doch eigentlich gut gemacht finde ich jetzt das ist
kann man sich dran gewöhnen was macht er eigentlich was passiert
eigentlich wenn ich das hier weg lasse
dann geht es trotzdem kann das sein dass das schon default ist wenn man den rest
controller verwendet dass der stand märz ich check dass das jason gelöst dass
ich ja gar nicht konsumt und produce und
Was passiert eigentlich, wenn ich hier den Mist übergebe?
Ah, unsupported Media Type.
Okay.
Ja, dann lasse ich das doch weg, wenn man es weglassen kann.
So, dann bauen wir mal bei uns hier eine HTML.
wobei ich brauche keine form wir können sie einfach so pushen dann probieren wir
das doch mal aus wir machen hier mal einen button wir machen hier plaintext plaintext html
starten das jetzt läuft ja noch
mal ein button 0 ich habe übrigens kein auto refresh weil plain html und gedöns
wie von stars jetzt hier on click muss man machen und klick
und jetzt kann ich kann ich hier oben so was machen hier function ja was sich progress klick
Geht das so? Und dann? Dann... Okay, das funzt du schon mal nicht.
Muss ich so machen? Ah ja, okay. Alles klar. Gut. So, das Websocket Gedöns,
das machen wir gerade mal aus. Das brauchen wir jetzt nicht.
Ich habe keine Ahnung,
ob wir
noch so Projekte haben.
Ich bin ja sonst nie bei den Entwicklern. Ich habe keine Ahnung.
So.
Also, progress, klick.
Jetzt machen wir mal einen Request
vom Browser aus. Also sagen wir quasi hier
Fetch.
Ist eigentlich auch bescheuert, dass es nicht sowas wie Post
gibt. Fetch wird
benutzt quasi zum Sachen
fetchen und zum Sachen senden.
Wie war das? Fetch?
Boah, krieg ich das jetzt aus dem Kopf hin?
Auf jeden Fall http://localhost.com.
So, und jetzt?
Einmal Autocomplete, please.
Method.
Post.
Ging das so?
Access to...
Ah!
Course-Gedöns.
Da muss man auch gucken, wie man das setzt.
So, und dann müssen wir hier noch irgendwas übergeben.
Data? Ne, Body. Body ist es, glaube ich.
Body.
Ludelw.
Dann sagt er mir, kann ich serialisiert werden.
So, wie macht man eine Course-Policy?
spring gut postkurs vor acht jahren nur ach guck mal hier als registry at mapping
was
was für ein Ding
der Web Security Configure
Adapter Configure
HTTP Security HTTP
äh
was
Moment, was will das von mir?
Bienen?
Ich bin mir jetzt gerade irgendwie unschlüssig, was der von mir...
Ah ja.
hier ist ein Tutorial
Tutorials sind immer so krass bloated
Waiting Arrest Controller
Request Param
bla bla
ahhhh
das kann man einfach da drüber schreiben
einfach ein Sternchen
Kann man das nicht irgendwie global hier?
Global Course Configuration.
Ich will es global disablen.
Wo muss das denn hin?
Cross Configurer?
What?
Okay, keine Ahnung.
Ist egal. Wir pappen hier oben dieses Ding dran.
Cross Origins.
Sternchen.
Cross Origins.
Sternchen.
Okay, starten wir neu.
schau mal ha funzt und support media type ja gut das ist klar wie ging das noch mal hier
hätte ich kann es mir nicht mehr ein fettsch post jason habe ich schon mehrfach http
method post
ja content type application
jason
das habe ich gesucht
format
ne wie war das
äh
Ich mach meinen Visual Studio Code nochmal auf.
Format.
No Formatter.
MonkaS, Alter.
Ich mach so wenig Plain HTML.
Bad Request.
Ja gut, weil Body 0 versteht er nicht.
Aber Body Name
Dings hier, das müsste er verstehen.
Geht das in Java auch?
Oder doch?
Das müsst ihr verstehen. Ja, passt.
Kunst.
Gibt keinen Fehler.
Okay, also so kann man was vom Browser ausschicken.
Dann
können wir doch jetzt gucken,
wenn das hier vom Browser
ausgeht. Wir gucken mal.
Warte mal.
Async.
Await.
war, ne Moment, Javascript
äh
Konst
so langsam wird es verwirrend, es ist Auto
in C++, es ist war in C Sharp
und Java, es ist Let und
Konst in die Javascript
äh Result, so
jetzt locken wir
das mal, ich glaube man muss noch
ich glaube man muss noch den
body oder irgendwie so
irgendwie so
irgendwie so
das muss man auch awaiten
wenn ich das auch richtig im Kopf hab
und jetzt loggen wir das mal
da müsste im Endeffekt ja ein bisschen Jason gedöhnt
zurückkommen jetzt
ist not a function
äh und wie war das
nochmal
war das so?
Hä?
Ach ne, Jason
war das. Genau, nicht Boddy.
Jetzt geht's hier.
Blub.
Das kriegen wir jetzt
zurückschickt. Okay, das funktioniert.
Das ist ja auch
in Node...
Das ist ja auch JavaScript jetzt.
Oder meinst du das hier?
Na, Express sieht schon ein bisschen anders aus.
Aber ich mag Express auch nicht.
Es ist jetzt nicht so krass
übertrieben boilerplate-lastig,
wie ich mir das vorgestellt habe.
Geht schon irgendwo klar.
Wird halt auch viel an Logik
und Sachen versteckt durch die ganzen Annotations.
Fragt mich, wie Spring das im Hintergrund dann macht.
so also post request funktioniert dann ist jetzt die nächste frage wenn wir
einen post request haben der funktioniert wie
validieren wir das jetzt beziehungsweise schreiben das in der datenbank rein
jetzt bin ich mal gespannt
Gucken wir mal. Spring Boot Post Validation.
Aha.
Bla bla bla. Ja haben wir hier. Ach da muss man Entity oben drüber schreiben.
Dann okay. Entity ID. Ach das ist wohl für die Datenbank dann unter der Haube.
aber haben die hier überhaupt eine Datenbank in dem Beispiel?
Okay, lesen wir uns das erstmal durch.
Lesen wir uns das erstmal durch.
Public Interface Repository, was?
User Repository Extends Crud Repository.
Was will das jetzt von mir?
Okay, ich nenne das Ding nicht ab.
Ich glaube Postrequence ist ein ziemlich dummer Name oder?
Wir nennen das hier irgendwie...
Was ist denn das?
Äh...
Chatter
Cute Chat User
Okay
Long, ist das was die ID wird?
Oder...
Okay, das hier gibt es nicht oder?
Ne, gibt es nicht.
Da fehlen mir jetzt wahrscheinlich
die Pendancies.
Gibt es sowas?
Ein Rider kann ich jetzt sagen,
such auf Nougat nach der Klasse.
Hier, warte mal, hier oben stehen ja auch die
Pendancies.
Springboot JPA
brauche ich.
H2 Database
In Memory, oh ja das ist gut, da können wir uns das mit Postgres erstmal sparen
Dann checken wir doch, ah Moment, da können wir gleich was ausprobieren was ich gelernt habe
Können nochmal gucken, hier Add Starters
Suchen wir mal nach, hey H2
Guck mal da
H2 Database, zack
Aber der hat jetzt keine JPA Sachen geadded.
Wollen wir auch noch.
Dependency ist hinzugefügt.
Hat er das jetzt schon installiert?
Oder muss ich hier erst, normalerweise muss ich doch hier oben irgendwo noch was klicken.
Ich glaube das hat er schon gemacht.
Ja hat er schon gemacht.
Achso weil es Public ist.
Am besten JPA Repository von Crud.
Was ist denn der Unterschied?
das akku macher paging entsorgt in turn externe um als ipv2 difference
ich glaube wir bleiben erst mal bei dem beispiel
also dann müssen wir unser unser zeug annotaten
es geht bestimmt jetzt nicht mehr mit einem record
das geht ja nicht die kann ich nicht an oder kann ich die annotate wenn ich
hier sage in die was ist eigentlich hier hinten dieses long id also quasi mit
also muss es long sein hier
ID
kann ich, kann man hier jetzt sowas
sagen wie
should have a primary key
ok, kann man hier oben sowas sagen wie
add ID
ach, das geht direkt, da muss man das
nämlich gar nicht ausschreiben hier
Das ist eigentlich ganz gut.
Aber wenn man das länger machen will, ist das schon schöner, oder?
Das ist aber schon besser, wenn man das so untereinander schreibt.
Weil man will ja dann hier so irgendwie...
...noch irgendwelche Validation-Sachen hinterlegen.
Übrigens mag ich diese...
Attribut
Annotation basierte Validation Sachen
nicht. Gibt es in .NET auch.
Finde ich hakelig.
Ich finde es schöner, wenn man
irgendwo hinschreibt, so wie keine Ahnung hier
ist 0
was weiß ich
Matches, irgendwas.
So.
Dann machen wir noch mal
eine Klasse draus.
string name das ist richtig schreiben könnte so long id die id muss klein das muss man dann taggen
mit id und weg was hat er jetzt für schmerzen entity s more than one id attribute hat es
Hat es?
Ich sehe nichts.
Ne, hat das gar nicht.
Die IDE spinnt rum.
Generate value.
Aha.
Das ist natürlich auch ganz gut.
Wie das automatisch erzeugt werden soll.
Was gibt es denn für Types zur Auswahl?
auto identity secret id ja auto auto ist okay so string string soll nehmen wir einfach mal
das hier vom beispiel name is mandatory not blank wo kommt not blank her
Wo kommt denn das her?
Es gibt noch eine Dependency.
Wo denn?
Spring
Framework Boot. Das haben wir doch.
Ne.
JPA?
Starter Web
haben wir auch.
Aber die haben ja...
Ach, hier unten.
Nee.
Ach doch, Validation.
Okay.
Okay.
Jetzt hat er es.
jetzt habe ich zweimal nehmen wir das so haben wir das okay wie geht es weiter
simple domain das haben wir gerade gemacht repository haben wir auch
auch.
cutechat user repository.
Implementing a REST Controller, das haben wir schon.
Response Entity.
Achso, das ist wenn ich kein JSON direkt returnen will, sondern, ja das macht der vielleicht.
Add Valid.
Mehr Annotations, würde ich sagen.
Wir haben Annotations of Annotations mittlerweile.
Return.
String.
Das machen wir mal genau so hier.
Zack.
Sponsentity, okay, User is valid.
Jetzt einfach nur valid.
Okay, so, bam.
Valid.
Valid.
Okay, das probieren wir mal aus.
Wenn ich das jetzt starte.
Und ich curl da jetzt was hin.
Wow.
Monkers.
Connecting to Datas.
Ich habe keine Ahnung, was da eigentlich gerade passiert.
aber Hypernaid macht irgendwas.
Scheint aber funktioniert zu haben.
Es ist nicht ge...
nicht gecrashed.
Okay, curlen wir mal was dahin.
Error, Bad Request.
Warum?
Warum ist das jetzt ein Bad Request?
Name ist doch da hier.
Ja.
Mal gucken, ob das daran liegt.
Okay, das liegt da dran.
Das liegt an AddValid.
Okay, kommen wir uns das Beispiel mal weiter an.
The AddExceptionHandlerAnnotations.
Es wird ja immer mehr Annotations, Alter.
Jetzt ist es aber langsam gut.
Bald haben wir drei Annotations hintereinander.
While it's really handy to have Spring Boot valid at user object...
Exception Handler Annotation.
Ähm...
Wo kommt denn das hin? In den Controller oder wie?
Also hier rein?
Alter.
Ich habe keine Ahnung, was hier passiert, aber okay.
So, findest du das jetzt?
Okay.
Name is valid.
Das funktioniert.
So, jetzt muss ich das nochmal kurz geistig verarbeiten,
was da eigentlich passiert ist.
Was haben wir hier am Start?
Also, der guckt jetzt, ob das valid ist,
wenn das reinkommt.
So, valid ist das.
Aber ich hab doch,
ich hab doch ein Name.
Hier ist doch ein Name gesetzt.
verstehe ich nicht
ist doch gar nicht blank
ist zum punkt und
war doch freund gesetzt das ging vorhin
Und ich muss das Valet nochmal wegmachen
Das verstehe ich nicht
Das ging doch vorhin
Hä?
Ach, weil das jetzt kein Rekord mehr ist
Oder?
Moment, Blödsinn
Oder?
Vorhin war es nämlich noch ein Rekord
Aber was ist der Unterschied?
Also das ist der Unterschied jetzt zu vorher.
Null?
Warum ist es null?
Ich hatte vorher genau das...
Brauche ich den Konstruktor?
Gibt es doch hier auch nicht.
Moment, ich brauche Getters und Setters, oder was?
Was ist Lombok?
Moment, es gibt doch bestimmt...
Es gibt doch bestimmt hier sowas wie...
Create
So
Warum hat er jetzt einen Zeilenumbruch gemacht?
Jetzt geht's
Boah, das ist ja abartig
Es muss ernsthaft
Muss
Ja, das ist, okay, das gefällt mir nicht
Was ich halt merkwürdig finde, das Ding
Braucht Getter und Setter
Aber Getter und Setter sind nicht
Teil der Sprache, das ist ja eigentlich nur
Convention, dass die Dinger so heißen.
Das ist
IntelliJ.
Ich benutze
recht viel von JetBrains.
Das hier ist JetBrains
IntelliJ.
Gibt es übrigens kostenlos.
In der Community-Variante.
Die haben
ein paar kostenlose IDEs.
Die haben
PyCharm ist kostenlos.
Die Community IntelliJ ist kostenlos.
Ähm.
Wo ist das?
Fleet ist kostenlos, glaube ich.
Die machen gutes Zeug.
Mal was anderes Blödes, ja.
Zilein auch.
Mal was anderes Blödes, Leute.
Guckt mal.
Was ist denn, wenn ich die Getter und Setter wegmache?
und sag, das ist Public.
Funktioniert das dann?
Ja.
Ja, dann machen wir das doch so.
Ich meine,
wozu ein Getter und Setter
wenn er eh nichts anderes macht als zu getten und setten. In .NET ist das halt einfacher. In .NET
würdest du dann quasi... Was macht denn meine IDE hier? Ja, in .NET würdest du hier sowas schreiben
hier public int blub.
So, und dann
oder records
verwenden.
Aber es
funktioniert. Public, also dann machen
wir das doch so.
So,
dann hätte ich das
jetzt zumindest nochmal gecheckt, woran das lag,
dass das nicht funktioniert hat.
Jetzt ist immer noch die große Preisfrage,
was
Moment muss immer noch sagen
Add Valid
Validated
Das sollte jetzt abcutten
Genau Name is mandatory und jetzt geht's
Was macht das hier denn
Bitteschön
ist was ich jetzt nicht ganz verstehe gilt das jetzt nur für den api controller oder
ich war mir können das ja mal ausbringen was ist denn jetzt wenn ich das hier nehme
und sagen wir mal ich hab das hier rein
dann okay sehr schön das heißt das ist quasi gescoped zu dem
api controller ok also was soll das machen das ist wahrscheinlich der return
code übrigens was ich auch ein bisschen doof finde wirklich viele hilfe haben
die ja nicht wenn man hier drüber hafer bin ich oder bin ich einfach nur zu
blöd und weiß nicht wie man sich die die dokumentation in der idee anzeigt
Show Documentation Pop-Up.
Das ist nicht maintainbar.
Ja, das ist richtig.
Das wird ja auch danach wieder gelöscht.
Das muss nicht maintainbar sein.
Außerdem ist es nicht Business Enterprise genug.
Aber ich finde, es ist auch mit Gettern und Settern nicht Business Enterprise genug.
Anpö, danke schön für den Sub.
Also, ich finde, eigentlich müsste man...
Bevor man Getter und Setter macht,
man sollte sich vielleicht noch eine Getter-Setter-Factory anlegen.
und damit man das ordentlich erstellen kann muss das noch injectet werden über dependency
injection als singleton factory über den manager dann ist es glaube ich dann ist es glaube ich
enterprise du kannst auch er aus die entdecken lassen in post dann brauchst du diesen ganzen
Händler nicht. Ja, das ist mir viel lieber.
Wie mach ich denn das?
Vielleicht steht das auch im Beispiel drin.
Das wäre mir nämlich viel
lieber, als dieses komische
Ding hier.
Spring boot
Post inject validation
errors.
Einfach Errors als weiteres.
Moment, das ist ja deutlich zu einfach.
Das ist mir jetzt aber zu einfach.
Weil man einfach Errors injecten kann.
Das geht aber nicht.
Das ist aber nichts.
Ich will erstmal kurz gucken.
Nicht Data to String.
Errors, was da überhaupt drinnen steht.
Get on. Ach, das ist einfach
eine Liste mit Errors hinten dran.
Ja, super.
Das ist doch nice.
Ja, dann. Moment.
Iterate.
Ne.
Iterate over.
So.
war beste system was gibt die folge message wird
jetzt die folge message meinetwegen so jetzt kriegen wir das ganze schon mal
auf standard raus wenn der error so sollte er nicht er und hier soll der es
sollte er war ok cool ja heißt doch jetzt im endeffekt wir können jetzt
jetzt einfach sagen ach jetzt verstehe ich warum die das so gemacht haben dass
man das nicht in jeder mit also in jeder jedem post request quasi noch mal
machen muss weil so was müsste ich jetzt quasi jedem post request machen
so als jetzt kann man hier sagen
if es eros response entity sagt man sagt man als bett request
macht er aus to string schon das was ich will vielleicht
die welt für sechs beta habe ich nicht gespielt
an die return muss machen weil ich dachte ich kann sie nicht spielen
wegen secure boot aber ich war blöd es hätte wahrscheinlich funktioniert
wird viel in object user und field name rejected value 0 codes not okay das ist ja ganz toll lesbar
das müssen wir irgendwie anders mappen
wir gucken mal ich habe eine idee also in dort net würde ich jetzt so was machen er uns
Select
Gibt's aber nicht
Get all errors
For each error
Ja sowas in der Richtung
Gibt's sowas wie Map vielleicht
Map
Stream Map
Ist das gut
Äh
Get default message ist auch gut
Aber das machen wir mal anders hier
Error
an dem moment so ist es ja er hat die voller er war er uns jetzt haben wir
schon message so moment jetzt habe ich jetzt habe ich einen array mit und
jetzt muss ich da noch sagen string join oder sowas wie join collect collectors
joining ich habe keinen plassen schimmer was ich hier mache aber es sieht richtig
aus oder
das kommt jetzt das trinkt raus
Okay.
Das machen wir auch hier drinnen.
Schauen wir mal, ob das jetzt funktioniert.
Easy.
Easy.
Easy.
Easy.
Easy.
Easy.
Also ganz ehrlich, das da finde ich aber deutlich schöner als das da, oder?
Sagt mal, Chat, was ist schöner?
Das hier?
Oder das hier?
Das macht doch mehr oder weniger das gleiche.
Was will er eigentlich hier von mir?
Can be replaced with method reference.
Okay.
Ob das jetzt so viel hübscher ist, weiß ich auch nicht.
Naja.
Wenn IntelliJ meint, das ist besser, dann...
Okay.
Default message source resolvable.
How to irgendwas benennen, wo du am Ende echt nicht weißt, was es eigentlich sein soll.
Ja gut.
Aber das Funs finde ich eigentlich ganz optisch ganz schick.
Gefällt mir auf jeden Fall besser als das andere.
So, dann haben wir jetzt...
Gucken wir mal, ob das in unserem Frontend auch funzt, was ich hier gebaut habe.
Was?
Valid is not valid, Jason.
Ja, jetzt komm.
kriegt einfach ein leeres chancen zurück und gut ist und
ich war theoretisch sollten wir vielleicht eher so was hier machen die result noch mal
Aber, wurscht.
Das Funds.
So, jetzt ist natürlich die Frage, wie fügen wir das jetzt in die Datenbank ein?
Also, wir pushen jetzt hier Name, blub.
Wir wollen es in die Datenbank einfügen.
Das habe ich jetzt hier noch gar nicht gelesen.
Hier, Repository.
User, Mockbean.
Der Mockchamp.
Ah ja, hier
User Repository Save
Oh Moment, das muss ich jetzt
Injecten, pass mal auf
Massive Dependency Injection
Ähm
Generate
Konstruktor
Ne, das ist ja nix
Also ich will injecten
Mein
cute chat user repository und dann create field
so was will er jetzt von mir never exist also so wird's internet funktionieren ich
bin mir relativ sicher so wird es wahrscheinlich auch in springwood
funktionieren was ich mache ich lerne spring gut und java ich versuche gerade
was zu schicken vom browser an mein backend zu gucken ob das welt ist und
dann in die datenbank zu schreiben das heißt hier ist das ding welt da kann
ich jetzt quasi sagen repository save data richtig richtig und dann loggen wir das ganze
system gibt es irgendeinen shortcut eigentlich für system out irgendwie so out oder so makro
oder sowas sind weil das nervt mich dass ich saut was sie so
gibt's laut muss man sich auch erst mal dran gewöhnen
saut wind so eine repositori count
warum gibt es eigentlich kein chat weiß jemand wie ich mir einen ordentlichen
hilfetext anzeigen lassen kann eigentlich ist es control q aber
control q zeigt mir nichts an warum nicht ich möchte mir den hilfetext
zu Count anzeigen lassen.
Da gibt's nix.
Gibt keinen Hilfetext zu.
Ist schon doof, oder?
Okay, Count.
Schauen wir mal.
Was jetzt passiert.
Ob er jetzt was in die Datenbank schreibt.
Äh, ja.
Ja?
Ja?
Ich muss sagen, das ist alles relativ easy.
Schöne Dokumentation, wenn man über die Count-Methode hovert, wäre auch noch cool.
Weil das bringt mir jetzt nicht allzu viel.
Aber das ist doch easy.
Sind die Dokumentationen runtergeladen?
Macht er das nicht automatisch?
In welche Datenbank?
Das ist eine gute Frage, in welche Datenbank.
Ich habe keine Ahnung, in welche Datenbank.
Also ich habe hier H2 hinzugefügt.
Aber woher weiß ich jetzt überhaupt, wo ist mein Connection String und sowas?
Vielleicht hier unter Application Properties?
Äh.
Nee, mit dem Hover geht das nicht.
Guck, hier gehe ich über Count, Hover.
Dann kriegt man sowas hier.
Ja, wo ist mein Connection String?
Oder wo stelle ich ein,
gegen welche Datenbank ich mich verbinde?
Ctrl-J.
No Suggestions.
Aber es geht ja.
Er schreibt ja was in die Datenbank.
Weil der Count geht hoch.
Ich habe eine Applications Properties, aber da ist nichts drin.
Aber wenn ich das starte, guckt mal, wenn ich das starte, schreibt das hier unten irgendwas rein.
Guckt mal.
Connecting through Data Source.
Hikari Data Source.
Was ist das überhaupt?
Data Source is what?
Ne, ne, nicht.
Nicht SQLite.
H2.
Ich weiß nicht, was H2 ist.
Das, was in dem Beispiel hier drin stand.
In Memory.
A2 Database.
Ist das.
Ist eine temporäre Datenbank, die nach dem Stopp gelöscht wird.
Ja, ist ja eigentlich für meine
Zwecke jetzt erstmal ausreichend.
Der nächste Schritt ist, wie kann man
eine Postgres-Datenbank schreiben?
Von der Idee her,
rein
logisch gesehen, ja.
Das ist ja alles so weit abstrakt,
was ich hier hab,
dass wenn ich mein Connections String austausche und den Postgres Provider benutze,
müsste ich nichts am Code ändern, dass es mit Postgres funktioniert.
Das probieren wir jetzt mal aus.
Docker run Postgres.
Runnen wir mal ein Postgres Image.
Aber da irgendein Exempel? Ja.
Guck mal. Minus minus rm. Name braucht das Ding nicht.
Wir müssen den Port noch weiterleiten. Was ist denn der Port?
Was ist denn der Postgres-Port?
Das war irgendwie so Scheppes, gell?
80, 80?
Nee.
Hör ihr, genau.
So was Scheppes hier, ja.
Aber.
Docker, Postgres.
Ich muss doch noch einen Port weiterleiten, oder?
oder nicht
ja doch genau
hätte ich auch gedacht dass das funktioniert doch mein secret passwort super geheim
ach so ja das image muss ich schon angeben
kann man da eigentlich was immer davon im inschert
18 17 17 bookworm 17 bookworm das ist da
aus kreis heißt es postkarton post kreske aus kreis
So, jetzt haben wir eine Postgres-Datenbank laufen, klar.
Was?
Was jetzt verkehrt?
Hab ich doch.
Muss das vielleicht hinten dran?
Kann das sein?
Wir machen Massive Password.
Äh.
Was hat er denn für Schmerzen?
All connections without password.
Ja, das ist gut.
Das will ich auch haben.
Ähm...
Ich bin jetzt gerade echt verwirrt.
Was er für Schmerzen hat.
Das irgende...
Was will er denn?
Docker Run Postgres.
Hä?
Was habe ich denn verkehrt gemacht?
Zwischen Run und den Image?
Nee, eigentlich ist das so okay.
Ach, die schreiben den Image-Namen ganz hinten hin.
Aber das ist eigentlich...
Das ist ein Unterschied.
macht einen unterschied ok weiß so unser postgres läuft jetzt die große preisfrage spring boot und
postgres postgres sind doch ein komponist jetzt nicht muss mal gucken wie man das hinzufügt docker
compose files bring data source okay das brauche ich jetzt anscheinend gleich
rating customer entity and repository das haben wir alles schon gemacht alles
hammer doch hier aber wo sind die wo sind die dependencies war wie konfiguriert jetzt
ein connection string für postgres ok also was sekunde warte mal irgendwie ist man hätte gerade
auf einem ohr aus okay jetzt geht's wieder
playung ist nur kaibe sind aber ziemlich weit oben also power und postgres und
das haben wir schon postgres brauner brauner jetzt hier unseren dependencies
dann machen wir das noch mal starte
Postgres.
Da ist er.
ABAP.
Oh, hör mal auf los.
Create a new Postgres
Database. Ja, das brauchen wir jetzt nicht.
Das macht doch bestimmt alles Spring Boot
für mich, wenn Datenbank nicht da ist, die erstellen.
Oder gibt es da nicht sowas wie
Create Database if not present?
oder so. Connect Springboard.
Aha. Application Properties.
Das brauche ich jetzt.
Was ist denn das?
Hibernate Dialect.
What?
Äh.
Kann das mal weggehen?
DDL Auto.
Oh.
Ich habe absolut keine Ahnung, was das sein soll, aber wir kopieren das jetzt einfach mal hier rein.
So, Postgres.
Localhost port 5432, your database name.
Ja, kekw.
Die kekwdb ist das.
Username, Passwort brauchen wir nicht.
Create, drop, validate, none.
Invalid value.
Okay.
Must be one of
Achso
So? Oder was? Oder wie?
Ne
Was so?
Was will es von mir?
D.D. Autos
Ob sie anhand der Entities automatisch erstellen
die sollen alles automatisch erstellen hier create create drop update
validaten an keine ahnung create beim soll mir recht sein
und verbindet er sich jetzt so post chris roll max das nordex
ach so moment username username admin oder was ist die vpost passwort brauche
nicht was ist das denn was ist denn die default oder ruht ich bin mir unschlüssig
so einfach ist es nicht was create drop was hat er denn ja was ist da drin
Postgres Docker
Default User
Default Postgres
Ach Postgres heißt ja Default User
Stimmt jetzt wo es da steht
Erinnere ich mich dran
Hä
Database
Keg WDB das non exist
Ja das ist aber doof ich dachte das kann der
Kann er das automatisch erstellen
Spring Boot
Create Database
Das ist gut.
Ja gut, aber der findet ja die Datenbank nicht.
Ich dachte, der kann die initial erstellen.
Ja.
Create Database.
Achso, das muss man einfach da drunter schreiben, oder was?
Create
Hä?
Moment, was ist das?
Was?
Ne, das ist SQL Server, oder?
SQL Server ist, glaube ich, ziemlich
pepega. Ich glaube nicht, dass das so
funktioniert, ehrlich gesagt.
Ne.
Ne.
Postgres.
Spring Auto Create Database.
Ach.
Postgres kann das nicht.
aha
ja
ps ich will nicht ps das weiß dass das ein psql ran kann weil ich selbst da
muss es aber doch die möglichkeit geben irgendwas abzusetzen gegen die postkurs
datenbank und flyer das nordex ist der haben bmw tool
du kennst initialize bin what the fuck
Nee, okay wisst ihr was bevor ich da jetzt lange gucke
PSQL
Jetzt habe ich die Datenbank abge... ne ist auch egal
PSQL habe ich gar nicht erzählt wie heißen diese Postgres CLI Tools
Postgres
Das heißt das sind ja nicht die Datenbank und CLI, sind glaube ich gesplittet
gute frage in die pg admin will ich beim pg das mal per commandline
das denn wie geht das noch einmal backman search package containing binary auch
kann ich finden, welche Package ich mit Contentfile installieren kann? Okay, genau.
psqps clips ok
post krebs lips
das will ich haben so psql psql da haben wir es doch so psql connect
nicht postel aller ps ps
ja please hallo
Alter.
Genau.
Das suche ich.
Minus H.
Localhost. Minus Port.
5, 4, 3, 2.
Minus User.
Postgres.
Okay.
Create Database
keg WDB.
Gut.
So, jetzt sollte unser Springboot
funktionieren.
das damals weg von dem der postgres
database driver und die feind an
sicher dass er jetzt über postgres nimmt 17.6 klingt so ein bisschen nach
postgres
Postgres.
Hast du den Treiber?
Ja, hab ich.
Hab ich.
Hab ich vielleicht was
vergessen?
Nö.
Wie sagt man denn hier?
Spring?
Data?
Driver?
Data Source Driver Class Name.
Aha, jetzt sollte er checken, dass man Postgres benutzt.
Monkers, was habe ich jetzt gemacht?
Nö, das juckt ihn nicht.
Aber es ist ziemlich sicher Postgres.
Ist aber blöd, dass der nichts anzeigt.
man hat ja gesehen dass post ist weil es nicht ging als die datenbank nicht da
war okay dann schauen wir mal ob das jetzt
funzt ob das was in der postgres datenbank bei rauskommt wir verbinden
uns noch mal auf die postkarte was war das idee oder
hier war die u wie verwende c
keck wdb ja das wollte ich machen so select sternchen gibt ja noch nichts
dann starten wir noch mal neu jetzt legen wir mal ein paar sachen an
ob das funst 8 einträge sollten jetzt da also select sternchen from cute chat user
da sind wir hier sind unsere einträge artenbank id wird anscheinend immer
hochgezählt so auto inkrement mäßig und arme blubb wir können wir können
übrigens auch wartet mal kurz das klopft
10 minuten muss weg leute
wo sind wir jetzt stehen geblieben das wollte ich jetzt noch fertig machen
genau ich wollte noch mal ein bisschen ein bisschen rennt hast du urlaub nicht habe ich
nicht übrigens falls ich nur irgendwas falls irgendwelche sachen hier nicht
gesehen habt schreibt es einfach noch mal in chat mit entwurf los davor wir
machen jetzt mal random kann man die kammer in java nicht erst generate uid
gibt es sowas
ok perfekt
ok exe genau das will ich haben das unbedingt dass da ganz ganz genau das genau das was ich
haben wollte.
Timescript kommt weg. Was ich eigentlich machen will,
ist ein bisschen random Zeug da rein.
Ja, Function.
Function.
Okay, perfekt.
Generate Unique Serial.
Und dann posten wir
das jetzt hier mal.
Wie ging das in JavaScript nochmal so, ne?
Ach so, ey.
so und jetzt nee, ach warte mal, nee nee nee nee template strings waren so, gell?
javascript, mkfs, generate serial
ok so da habe unsere random sachen drin und machen wir mal was war was anderes war hier
nicht mit klick aber vor index ich will einfach nur ziel index aller 100.000 1000 einträge aber
1000 einträge progress klick so jetzt haben wir gleich 1000 daten bei einträge
moment das ist falsch da muss das hin ich brauche unbedingt formatting zeug
So haben wir jetzt 1000 Einträge? BÄM!
Funst!
Ich brauche keine Escapes mehr im Template String? Stimmt.
Okay, und nochmal 1000
Bam
Passt mal auf, jetzt kommen meine krassen
SQL Skills, Leute
Oh, war da irgendwas doppelt?
Moment, hab ich da gerade was doppelt gesehen?
Hä?
Hä?
Es ist einfach random, oder?
Ach, die sind nicht...
Die sind...
Die Lücken füllt er dann irgendwann auf.
Das sind schon alle Unique.
Ich hoffe, da ist ein Unique Constraint drauf auf meine ID.
Ja, also muss ja eigentlich.
Das sind Primary Key.
Primary Key kannst du nur einmal geben.
Doch, das sind die IDs.
Das ist die ID, das ist die Seriennummer.
So, passt mal auf meine hyperkrassen SQL-Skills.
ich glaube und konnte man doch machen oder 2013 so dass man auf wir schreiben jetzt einfach guck
mal hier oben bei der auslastung was passiert hier wir schreiben mit java eine postgres datenbank und
das fetzt ich meine das annotation zeug ist ziemlich magic aber so im großen und
ganzen kann man sich nicht beschweren das ist eigentlich ganz gut wie sie das
gemacht haben wir haben mit relativ wenig code postgres datenbank angebunden
können als euch reinschreiben und wir bekommen und wir bekommen eine fehlermeldung wenn wir
was pushen was es nicht gibt also eigentlich genauso wie es sein soll also haben wir heute
gelernt wie man post request macht mit jason jason daten post requestet in spring boot wie
man eine datenbank anbindet und wie man das was gepusht wird validated schlecht
da mache ich die anderen sachen die ich am anfang als teams erzählt habe ich
nächstes mal ich muss jetzt weg nämlich gerade mal kein regen und was holen
schön dass ihr dabei war leute wir macht das richtig spaß jetzt liegt
wahrscheinlich einfach daran dass es wenn man was neues lernen kann
wir machen das nächste mal weiter leute schön dass ihr da wart kannst du
webstore plugin installieren ich glaube die meisten plugins sind relativ ide
übergreifend
glaube ich bin mir nicht sicher musste ausprobieren keine ahnung aber ich weiß
dass man die teams und so was die sind alle ideeübergreifend doch ich muss jetzt weg bis
denn scammed ja webstorm für die das gibt es nicht also bis dann macht's gut
