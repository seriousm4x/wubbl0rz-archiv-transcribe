So, mal wieder regelmäßiger Sonderstream.
Gab ja die letzten drei Wochen nichts.
Oder vier.
Weiß gar nicht, wie lange es ist.
Ist schon bis drei Wochen, glaube ich.
Ist schon ein bisschen her.
Muss mal kurz Wetter checken für heute.
Ich glaube, es ist kühl, aber ziemlich gutes Wetter.
Den fahre ich vielleicht nachher.
So geil ist das gar nicht.
Zumindest ist es trocken.
Jetzt ist schönes Wetter, aber nachher ist es wieder bewölkt.
Ich hatte eigentlich gedacht, wenn heute schönes Wetter ist, kann ich nochmal eine ordentliche Runde Fahrrad fahren.
So irgendwie, was weiß ich, zweieinhalb, drei Stunden nehmen, so eine ordentliche Runde.
Aber wenn ich so gucke, dass ab zehn wolkig.
Und wolkig und kalt ist kacke.
Ich fahre nur bei schönem Wetter Fahrrad.
Dann gehe ich lieber eine große Runde Rennen heute.
Meine Garmin-Uhr sagt, mein Fitnesslevel ist, weil ich die letzten fünf Wochen kaum was gemacht habe, oder noch länger, ich bin ja erst wieder seit einer Woche so richtig dabei, oder seit zwei Wochen, eineinhalb Wochen sind wir so richtig dabei, mit Rennen und allem.
Mein Fitnesslevel ist runtergegangen, weil ich die letzten paar Wochen nicht viel gemacht habe.
Die Garmin-Uhr sagt, meine VO2 Max wäre gefallen um zwei Punkte.
Oder um drei sogar, von 45 auf 42.
Das ist immer ein paar Wochen rumgegammelt und ich schon verkackt.
Dafür habe ich nicht zugenommen in der Zeit.
Auch schon mal was.
Ich habe sogar weiter abgenommen.
Ich wiege jetzt nur noch 82,5 oder 82 ungefähr.
Moin Chat, ja.
Ist hier alles am Start.
Die üblichen Verdächtigen wieder.
Chat?
Wenn ich, wobei, damit warte ich, bis ein paar Leute da sind.
Ich habe, ich habe da mal, ich habe, ich wollte euch da was zeigen.
Und dann, was euch dazu einfällt.
Ich sage euch, ich sage euch, was mir dazu einfällt.
Dann sage ich, könnt ihr mir ja sagen, was euch dazu einfällt.
Erst einmal machen wir mal kurz eine Runde.
Hallo, meine Tastatur wird nicht richtig durchgereicht.
Was ist da?
Machen wir erstmal kurz Package Update.
Weil Arch, by the way.
Ja, und wir müssen uns demnächst auch mal, weil das schon wieder richtig lang her.
Mal aktualisierte Stellenanzeigen angucken.
Ich habe noch viele offen vom letzten Mal.
Die können wir höchstwahrscheinlich vergessen.
Weil, was interessieren irgendwie Leute, die Stellenanzeigen vom August oder, oder.
Brauchen wir neue.
Funktioniert.
Moin.
Whistle Studio Code.
Was haben die denn mittlerweile für eine komische Version?
1.931.
Okay, die werden also immer bei 1 bleiben.
Du wartest seit drei Monaten.
Ja, wenn du mir sagst, was deiner ist.
Da gucken wir uns den natürlich noch an.
Also.
Ich gehe davon aus, die machen das ein bisschen wie der Linux-Körner eine Zeit lang.
Die bleiben immer bei der gleichen Major-Version.
Und zählen einfach nur hoch.
Muss ich sagen, finde ich, ist auch das beste Versionierungsschema.
Ich muss euch was erzählen, Leute.
Auf der Arbeit.
Wirklich super krass schwarze Magie.
Mich hat, also.
Vielleicht, um noch ein bisschen Kontext drumherum zu erzählen.
Was?
Lip fake internal error.
Payload not recognized.
Arch, by the way.
Ist das schlimm?
Nee, oder?
Ey, solange das funktioniert, ist mir das eigentlich ziemlich egal.
Moin, Michael.
Das hat funktioniert.
Okay.
Reboot.
Guck mal erstmal, was die ganzen Jetbrains-Dinger machen.
Die werden bestimmt auch, ja, guck mal hier, alle updatebar.
What's new in Rider?
Elschen grenzen.
Okay, bam.
Alles updaten.
Pass mal auf, das wird jetzt einfach mal.
100%.
CPU-Last verursachen gleich.
Pass auf, das Jetbrains-Update ist, glaube ich, eines der rechenintensivsten Sachen, die ich auf meiner VM ausführen kann.
Nachdem der Download fertig ist.
Dann geht das.
Guckt euch das an.
Das ist nicht normal.
Ruhig auf.
Guckt euch.
Das ist komplett, komplett verrückt.
Java-Stelz, Alter.
Keine Ahnung, was da abgeht.
Welches Dateisystem?
Das weiß ich jetzt.
Ich glaube, wahrscheinlich Ext4.
Ich glaube, ich habe da ganz normal.
Base.
Alter, Moment.
Ich kann gerade nichts machen.
Meine VM ist unbenutzbar.
Bin ich blöd?
Wo steht's?
Hier, Ext4.
Man kann auch, man kann auch hier.
Gab's nicht noch BLK-Tree oder sowas?
Man kann auch sagen, ich weiß nicht, ob man es mal bei DF sieht.
Bei DF sieht man es nicht.
Bei, sieht man es bei Mount?
Bei Mount sieht man es, glaube ich, auch noch irgendwo.
Aber BLK-ID ist meistens ganz praktisch.
Gab's nicht auch BLK-Tree oder sowas?
Fdisk-L geht auch noch, wenn man, wenn man denn darf.
Und da sieht man auch, dass es, da sieht man nur, dass es, das ist ein Linux-File.
Warum eigentlich kein Hyper-V?
Weil Hyper-V, also ich habe es nie ausprobiert, muss ich ehrlich sagen.
Aber weil Hyper-V sagt, was Grafik-Ausgabe angeht, meines Wissens nach, und USB-Path-Thru und eigentlich so ziemlich alles.
So, jetzt reboot.
Okay, also Leute.
Ich muss euch, ich muss euch was erzählen.
Ja, aber ich will ja auch vom Desktop keinen Windows-Server 2025 haben.
Gibt's jemanden, der Hyper-V, ups, jetzt habe ich das aus Versehen angeklickt, siehste mal hier.
Kommt nicht auf die Idee, mir komische, komische Sachen hier als Links unterzuschieben, nur weil ich aus Versehen draufklicke, dann gibt's direkt ein BAN in your face, Alter.
Gen Z scheitert oft an Computer, ja, du, das wundert mich nicht.
Ich habe das ja auch schon öfters gesagt.
Ich meine, ich weiß jetzt nicht, ob das ein Shibate-Artikel ist oder nicht, aber...
Die Generation Z gilt als digital versiert.
Nun wurde eine doch eher überraschte Lücke in ihren Fähigkeiten auf Tippen auf einer Computer-Serie.
Ist allerdings nicht so, Tippen immer mehr auf die...
Also, das wundert mich nicht.
Ich habe es auch schon öfters gesagt.
Früher, als ich quasi so in dem Alter war von Gen Z, da dachte ich mir, alle Leute, die nach mir kommen, haben ein instinktives Verständnis für Computer- und Technik-Sachen.
So, das ist in gewisser Weise ja auch so gekommen.
Das darf man, also für Technik-Sachen schon, aber nicht für Computer.
Weil ich habe den Eindruck, dass gerade...
Junge Leute, also richtig junge Leute heute, ich weiß nicht, ob das noch Gen Z ist oder schon die danach,
dass wenn du die vor einen Desktop-Computer setzt und da sagst, hier, guck mal hier, was weiß ich,
Internetverbindung geht nicht, Drucker geht nicht, so Basic-Sachen, wo man ein paar Sachen checken kann,
da sind die komplett lost.
Da sind die genauso lost wie die Generation vor mir und die Generation davor.
Der Shave-Champ, ja, das müsste ich tatsächlich auch mal wieder machen.
Generation Alpha ist es dann.
Ja, genau.
Das ist mir tatsächlich schon aufgefallen.
Also, es ist ja auch nicht verwunderlich, weil damals war das so.
Also, als ich, ne, Opa Max erzählt vom Krieg, also als ich jung war und du dich mit Computer-Problemen beschäftigen musstest,
da konntest du erstens nicht googeln, das war jetzt aber nicht so wirklich das Problem.
Ich meine, ich löse heute immer noch viele Probleme einfach mit Suchmaschine.
Aber du musst, aber das war damals noch nicht, sagen wir mal so,
jetzt muss ich ein bisschen Staub wegpusten,
das war damals noch nicht so...
User-zentriert alles.
Also, damals hat vieles vorausgesetzt, dass der User sich mit Computersachen beschäftigt hat,
um überhaupt dahinter kommen zu können, was los ist.
Heute setzt ja jede App und jedes Gerät im Endeffekt drauf,
dass es so idiotensicher wie irgendwie möglich ist.
Das ist übrigens, auch wenn ich das jetzt vielleicht so ausdrücke,
das ist nichts Schlechtes.
Das ist der Job der Hersteller und das machen viele Hersteller immer noch zu schlecht, ja.
Ich bin auch mittlerweile auf den Punkt, dass wenn manche,
klar,
wenn ich noch Jumper,
ich bin ja auch mittlerweile auf den Punkt,
wenn es mir irgendeinen Dienst oder eine Software zu kompliziert macht
oder zu nervig macht, sie zu benutzen,
benutze ich die einfach nicht.
Da sage ich, ihr habt euren Job nicht erledigt, ihr könnt mich mal, ich benutze das nicht.
Aber viele, das wissen natürlich die Softwarehersteller auch,
deswegen gibt es ganz viele Analysen, die da reinfließen.
Was meint ihr denn, was ein Online-Shop macht?
Eines der größten Dinger, die ein Online-Shop macht, ist Analysieren,
an welcher Stelle des Bestellprozesses
steigen Leute an, die sich da reinfließen.
An welcher Stelle steigen Leute aus, an welcher Stelle ist was nicht klar.
Also die Usability ist heute einem ganz anderen Licht,
wird heute einem ganz anderen Licht gesehen, auch gerade auf Mobile- und App-Basis.
Das muss der letzte,
dümmste Hinterwäldler kapieren,
um die maximale Kohle zu machen.
Und das wissen die Hersteller.
Das machen viele noch immer noch nicht gut, aber die Hersteller wissen das,
oder sollten das zumindest wissen.
Das heißt, vieles ist darauf auch ausgelegt.
Und dementsprechend kann ich das jetzt irgendeiner,
einem jungen Gen Z, oder einem der letzten Leute in Gen Z oder Alpha Generation,
gar nicht vorwerfen, dass die mit Standard-Desktop-Computer-Problemen nicht klarkommen.
Weil das ist einfach nicht in ihre Welt.
Ja.
Und Chatge, wer von euch kennt noch Jumper?
Also meine Lieblings-Jumper, es gibt zwei, es gibt zwei Sachen.
Meine Lieblings-Jumper damals waren eindeutig IDE-Festplatten-Jumper.
Also die
Zoomer unter euch, die wissen das vielleicht nicht, aber früher
musste man an Festplatten, als sie noch solche IDE-Anschlüsse hatten,
musste man Jumper setzen.
Und da gab es jede Menge verschiedene Jumper-Kombinationen.
Genau, also die hauptsächliche Jumper-Kombination war Master-Slave.
Oh, das darf, das ist ja heute, seht ihr mal, seht ihr mal, wie sich die Zeiten ändern.
Heute würde das garantiert nicht mehr Master-Slave genannt,
sondern da hätten sie sich so irgendwie was Leader und Follower oder irgendwie sowas ausgedacht.
Das wäre richtig Toss gewesen, zu der heutigen Zeit.
Aber du hattest ja noch mehr Jumper-Kombinationen.
Es gab dann so abgedrehte Sachen wie, manche Jumper musstest du quer setzen,
dann konntest du die Festplatte beschränken auf maximal 8 Gig oder 32 Gig,
dass manche Betriebssysteme keine Probleme hatten.
Ja.
Okay, hattest du Master-Setting, Slave-Setting, Cable-Select,
ich weiß ehrlich gesagt gar nicht mehr, was Cable-Select eigentlich genau gewesen ist.
Und dann hattest du Master mit...
Cable-Select-Jump?
Nee, kein Schimmer, kein Plassen, was das, kein Plassen-Jumper ist das eigentlich.
Was das eigentlich sein soll.
Ah, obvius, die ist sehr gut lesbar, mhm, mhm, alles klar.
Ja.
Also das war, das war, das war, Jumper, die fand ich damals immer geil,
weil ich mich wieder richtig krass als der Hackerman aller Zeiten gefühlt hab,
diese Idee, Jumper zu setzen.
Und Jumper, damals eine Sache, die mich fast zum Verzweifeln gebracht hat,
Fritz-Card, ISA, falls das noch irgendjemand kennt.
Kennt ihr mal noch die allererste ISDN-Fritz-Card?
Die da könnte sein, dass das die da war?
Ja, die da ist das, guckt mal.
Das, das ist noch nicht mal PCI, das ist noch ISA gewesen.
Und die hatte hier ein Jumper.
Wisst ihr, Chat, weiß noch irgendjemand, für was diese Jumper sind?
Oder kann sich irgendjemand denken?
Irgendwelche, irgendwelche...
Irgendwelche ollen Leute wie ich.
Irgendjemand eine Ahnung hast, für was man das hätte,
für was man das Jumpern, Jumpern müsste.
Oder vielleicht umstellen müsste.
Memory Address Space für I.O.
Nicht richtig, nee.
Auch wenn's dran steht.
Interrupt, richtig.
Genau.
Interrupt-Adresse.
Das war so, du hast das Ding damals in den Rechner gesteckt,
hast Windows gestartet, das war dann wahrscheinlich damals Windows,
3.11 oder sowas.
Und dann hast du in Gerätemanager geguckt, hast den Treiber installiert für deine Fritz-Card,
hast in Gerätemanager geguckt, hast festgestellt, die Fritz-Card hat so einen komischen,
wie war das so ein, so ein, Device-Manager-Question-Mark gab's dann.
Ja, so sah das hier, Windows 3.11.
Irgendwie so, da hast du in Device-Manager, da war da so ein Fragezeichen dran,
hast dir gedacht, okay, was ist das Problem?
Nee, nee, nee, nee, nee, nee, das war für Interrupt, das weiß ich genau.
Weil das hat nicht funktioniert.
Und dann musstest du im Device-Manager gucken, was der für eine Interrupt-Adresse ausgewählt hat.
Das war irgendwie random.
Dann musstest du den Rechner aufschrauben, musstest den Jumper auf diese Adresse setzen.
Zumindest stand unter Windows Interrupt, was unter Windows stand und was wirklich ist.
Aber, weiß nicht, vielleicht hast du ja auch recht.
Und dann musstest du das aufschreiben, umstöpseln, also wieder einschalten,
vorher natürlich ausschalten, wieder einschalten und dann,
und dann hast du Glück gehabt, dass es vielleicht funktioniert hat.
Ja, das war noch so.
Und das sind so Dinger, ohne Scheiß, da wäre Generation Z und Alpha komplett lost.
Denn glücklicherweise braucht man so einen Scheiß an einem Jahr.
Ja, Chat geben.
Ich gucke jetzt mal kurz den Chat durch, weil ich bestimmt wieder die Hälfte vergessen habe.
Es gibt niemanden, der Hyper wie mag, glaube ich.
Okay, doch, Flosen mag das.
Will mir demnächst einen eigenen Nass bauen, bin mir noch nicht sicher,
ob ich den Nass bauen kann.
Ich weiß nicht, ob ich den Nass bauen kann.
Und Unraid oder Trunas hat wer?
Ja, ich mag, ganz ehrlich,
ich habe einen Unraid daheim,
nachdem ich mich jahrelang dagegen gewehrt hatte.
So richtig glücklich bin ich damit auch nicht.
Aber Trunas mochte ich gar nicht.
Ganz ehrlich, wahrscheinlich,
wenn ich heute nochmal einen neuen bauen würde,
mit einer neuen Kiste,
wahrscheinlich würde ich mir schlicht ergreifen,
wieder einen Demian draufhauen.
Wobei Unraid schon seine Vorteile hat.
Kann man nicht sagen.
Also, ich werde es jetzt erstmal sagen.
Ich werde es immer so lassen, wie es ist.
Also, wenn ich zwischen beiden wählen müsste, dann Unraid.
Wobei Unraid mittlerweile so ein ganz komisches Lizenzmodell hat.
Früher war das einmal kaufen, für immer behalten.
Ich glaube, mittlerweile ist es ein Jahresabo oder irgendwie so komisches Zeug.
Richtig, richtig hängen geblieben.
Unraid, Pricing.
Moin.
Mal kurz gucken.
Ja, genau, weil die haben letztes Jahr irgendwie umgestellt.
Und es ist so teuer geworden.
Hatten die jetzt nicht ein Abo?
Oh.
Haben die das wieder?
Hatten die das wieder geändert?
Hatten die nicht umgestellt auf so ein komisches Jahresabo-Modell?
Ah, ne.
Hier steht es doch.
Free OS Updates for One Year.
Richtig hängen geblieben.
Ich habe zum Glück noch genug.
Also, genug.
Ich habe zwei Lizenzen noch für die lebenslange Geschichte.
Ja, aber Proxmox ist nicht so ein richtiger Ersatz dafür.
Proxmox ist ja hauptsächlich eine Virtualisierungslösung.
Und weniger eine Storage-Geschichte.
Ja.
Du kannst natürlich Proxmox da in der VM anlegen, die das zum Durchreichen, die das für dich macht.
Aber so schön ist das an.
Das ist so eine All-in-One-Sache.
Deswegen finde ich Unraid eigentlich ganz gut.
Unraid ist eine gute Mischung.
Leider ist Unraid auf Slackware-Basis, glaube ich.
Also, da ist mit irgendwie einfachen Package-Repos hinzufügen nichts.
Da musst du es extra für Slackware kompiliert haben und alles.
Deswegen gibt es auch so wenig zum Nachinstallieren.
Aber Unraid finde ich, ist an sich eine schöne Kombination aus hauptsächlich erstmal eine relativ effiziente Storage-Geschichte.
Gerade auch unabhängig von klassischen Raid-Leveln, kommt man oftmals ein bisschen weiter mit.
Auch wenn man nicht die Performance hat wie von einem Raid 10 oder sowas.
So, und das nimmt einem vieles ab.
Und gerade die Möglichkeit, dass du auch in der Oberfläche noch VMs und Docker-Container managen kannst, ist nice.
Auch wenn natürlich gerade dieses Management von VMs und Containern in Unraid ein bisschen hakelig ist.
Ja, aber dadurch, dass alles in einem ist, finde ich das eigentlich ganz nice.
Also, wenn ich nochmal komplett neu bauen würde, würde ich vielleicht wieder einfach eine Debian-Kiste bauen.
Ja, also was bei Amazon los ist, verstehe ich auch nicht so genau.
Ich benutze ja öfters mal noch Prime Video, weil halt Prime und dabei und so.
Und die App benutze ich drüben auf meinem Shield-TV.
Da hat man glücklicherweise keine Probleme mit DRM und sonst was, wenn man das auf dem Desktop verwendet oder gar unter Linux verwenden will.
Aber ich bin regelmäßig erstaunt über die Usability.
Man sollte eigentlich ja vermuten, ne?
Dass in einer Video-Guck-App, das eines der most basic Funktionen ist, ich will dort weitergucken, wo ich aufgehört habe.
Also, stellt euch mal vor, ihr guckt jetzt eine Serie, ihr habt jetzt gestern Folge 5 geguckt, heute macht ihr die App auf, loggt euch ein.
Und allein schon, dass man bei Amazon immer gezwungen wird, auszuwählen, wer guckt, ob es Gäste sind, man selbst oder Kinder.
Ich meine, ich verstehe das aus Jugendschutzgründen, aber dass man das nicht wenigstens mal abschalten kann, weil mir gucken keine Kinder.
Im Haushalt gibt es keine Kinder.
Welche Kinder sollten Fernsehen gucken bei mir?
Es ist schon nervig.
Und dann würde man eigentlich erwarten, das Erste, was in dieser App auftaucht, ist, jetzt die Serie fortsetzen, mit der du gestern aufgehört hast.
Aber nein, bei Amazon ist das nicht so.
Bei Amazon musst du dich erstmal durch ganz viel Schrott durchscrollen, bis du Glück hast, dass du irgendwo mal bei der Serie rauskommst und dann da weitermachen kannst.
Die Prime-Video-App ist wirklich Schrott.
Und wisst ihr, was ich ganz gut finde, wo ich am Anfang auch dachte, ah, wie kann man sowas, wie kann man so einen Schrott machen?
YouTube Music, die App, finde ich eigentlich mittlerweile, mittlerweile, finde ich die eigentlich ganz gut gemacht.
Nachdem sie es mal geschafft haben, so Sachen wie, diesen Song als nächstes abspielen, wenigstens ordentlich, das ging ja am Anfang gar nicht.
Ihr müsst euch mal vorstellen, YouTube Music hatte am Anfang keinen, zumindest keinen mir bekannten Knopf für dieses Lied jetzt als nächstes abspielen.
Mittlerweile haben sie es.
Mittlerweile klickst du drauf, du hast einen großen Knopf oben links.
Das ist also, also, wisst ihr, das sind so, so, so absolute Basic-Funktionen, wo ich mir immer denke, wie kann man eine Musik-App bauen oder bei Amazon, wie kann man eine Video-App bauen, ohne dass das als erstes drin ist.
Ich glaube, diesen Titel als nächstes abspielen ist so eines der am häufigsten, mit am häufigsten genutzten Funktionen von der Musik-App überhaupt, ja.
Ja, und Prime will noch mehr Werbung einbauen, das stimmt, ja.
Habe ich auch gelesen.
Ja, es gibt, es gibt glücklicherweise immerhin weiter Leute, die sich dafür interessieren.
Vielleicht nicht mehr so diesen großen Run, wie es das bei mir in der Jugend gegeben hat, da wollte ja jeder was mit Computer machen.
Weiß ich nicht.
Was ist denn der Traum der Leute heute, was zu machen?
Influencer zu werden wahrscheinlich.
Was ist denn der Traum der Gen Z, beziehungsweise der Alpha Generation, was sie später machen wollen?
Mal außer, mal außer Pro-Gamer und Influencer.
Da ist doch, da ist doch garantiert irgendwelche Technik-IT-Kram auch relativ weit oben.
Wobei, ne, die meisten, die meisten sagen, die meisten, die meisten werden wahrscheinlich sagen, ähm, ich will, ich will reich werden, ich will harzen oder so, keine Ahnung.
Ich habe letztens ein Thread gesehen auf, auf Reddit, Bürgergeld-Maxing.
Das haben die ernst gemeint.
Maxi, ich muss die Escape-Taste drücken, damit mein Laptop bootet und arbeitet, okay.
Power-Taste funktioniert nicht, Softwarefehler oder Hardwarefehler.
Also, sowas klingt mir tatsächlich eher nach einem...
Hardwarefehler, ich glaube nicht, dass, dass ein Softwarefehler den durchrutscht, dass man die Escape-Taste gedrückt halten muss.
Ja, geht dann, da ist, da ist irgendwas kaputt.
Das ist bestimmt, das kann ich mir nicht vorstellen, das ist ein Softwarefehler.
Es sei denn, es tritt direkt nach einem BIOS-Update auf oder sowas, aber das, das, selbst das, also das kann ich mir nicht vorstellen, da muss, da ist irgendwas, irgendwas kaputt.
Wahrscheinlich auch nicht mal was großartig kompliziertes, aber Laptops reparieren, das ist halt immer so ein Ding.
Man kriegt sie selbst so gut wie nicht auseinander und Hersteller haben da kein Wachstum.
Da hat man keinen Bock drauf.
Gab es nicht letztens ein Problem mit vorgefertigten Docker-Apps, dass das irgendeinen Krypto-Miner drin hatte, irgendeine, irgendeine, ich habe letztens irgendwo gelesen, irgendeine, irgendeine Android-Docker-App hatte einen Krypto-Miner drin.
Gibt also auch noch Leute, die klassische Sachen machen.
Ich verdiene keine 200k im Jahr.
Wenn ich mal, wenn ich mal Influencer-Sellout-Maxing betreiben würde, dann vielleicht, kann auch sein.
So, also Chat.
Da muss ich was erzählen.
Ich habe bei mir auf der Arbeit, ich habe was ganz Grausames gefunden.
Und zwar am Freitag, also genau, bisschen Kontext, bisschen Kontext.
Also bei uns ist es so auf der Arbeit geregelt, wir haben Kernarbeitszeiten, das könnt ihr mir mal in den Chat schreiben, wie das bei euch ist.
Aber ich glaube, das ist bei einigen so.
Wir haben Kernarbeitszeiten von 8 bis 18 Uhr.
Oder ich glaube streng genommen sogar von 7.30 Uhr bis 18 Uhr.
Und das heißt aber nicht, dass du anwesend sein musst.
Gar nicht.
Also das ist super flexibel, ja.
Aber was wir haben ist halt, dass wir das so eingeteilt haben, dass immer einer da ist.
Also einer ist immer da von 7.30 Uhr bis 12.30 Uhr, einer ist immer da von 12.30 Uhr bis 18 Uhr.
Und dann hat noch einer Rufbereitschaft.
Das wird randomized nach Wünschen.
Ja, mein Wunsch ist zum Beispiel, ich will möglichst wenig spät eingeteilt werden.
Spät ist quasi 12.30 Uhr bis 18 Uhr.
Ich mache am liebsten 7.30 Uhr bis 12.30 Uhr.
Und nachdem wir ja schon ein paar Leute im Team sind.
Ich weiß gerade gar nicht aus dem Kopf, wie viel genau, 7 oder so.
Ist das gar nicht so wild, das muss man nur ein paar Mal machen.
Rufbereitschaft mache ich persönlich gerne.
Ups, mein Tastatur hat umgeschmissen.
Dreimal dürft ihr raten, warum ich gerne Rufbereitschaft mache, Leute.
Es ist das naheliegendste überhaupt.
Passives Einkommen, genau, so sieht es aus.
Rufbereitschaft ist in der Regel passives Einkommen.
Ja, gerade am Wochenende.
An den Feiertagen, Tag der Deutschen Einheit, hatte ich auch nichts passiert.
So, zumindest, ich mache gerne Rufbereitschaft und 7.30 Uhr bis 12.30 Uhr, ja.
Aber, das klappt auch.
Weil viele machen beispielsweise das früh gar nicht gerne und lieber spät, nur dass es klappt.
So, Freitag hat mich jemand gefragt, Max, hier, ich habe irgendwie einen Termin beim Arzt.
Kannst du nicht, können wir das nicht irgendwie tauschen?
Kannst du nicht für mich das spät übernehmen?
Ich habe gesagt, okay, kein Problem, mache ich.
12.30 Uhr bis 18 Uhr.
Also, da ist eh nichts mehr.
Das war Freitag, also Zwischentag der Deutschen Einheit und Wochenende, also vorgestern.
Da dachte ich mir so, ey, easy, da passiert doch eh nichts.
Da wird doch nichts sein.
Da ist doch tote Hose, keine Sau ist da, ja.
So, und was ist?
So ab, keine Ahnung, ab 15.30 Uhr, ab 16 Uhr wollen irgendwie laufend die Leute was.
Als erstes wollten die Leute irgendwelche komischen Java-Heap.
Deck-Dumps.
Ich habe mir gedacht, Leute, es ist Freitag, 16 Uhr.
Habt ihr nichts Besseres zu tun, jetzt mal irgendwie so langsam mal Schluss machen oder so?
Also, irgendwelche Java-Thread-Dumps.
Aber, verstehe ich auch.
Ich mag die Leute da auch.
Das habe ich gerne gemacht.
Die Thread-Dumps noch gezogen, das ist kein Ding.
So, und dann 17 Uhr, frag mich nicht, 17.40 Uhr oder so.
17.40 Uhr ruft mich jemand an von einem unserer wichtigsten Services und sagt, Max, kannst du,
äh, für die und die Umgebung, das und das deaktivieren?
Man muss dazu sagen, ich habe von diesem Produkt, von diesem Service, ich habe absolut keine Ahnung.
Ich habe damit nichts zu tun.
Ich werde damit in Zukunft auch nichts zu tun haben.
Das einzige, was ich damit zu tun habe, ist ab und zu mal ein paar Monitoring-Meldungen davon sehen und sagen, Leute, guckt mal, da ist irgendwie fast eine Festplatte voll oder so.
Null, ich habe gar keinen Plan von dem Service.
Ich weiß mit Ach und Krach, wofür er da ist.
Und so ein paar Basics, Linux-technisch, die da halt überall gleich sind, die kann ich machen, ja.
Sondern meint er von mir, Max,
du musst für nächste Woche den Start dieser und dieser Services morgens deaktivieren.
Da habe ich gesagt, ähm, also erstens, was, ich habe da keine Ahnung, was sind das für Services und wie, was, wie, wo deaktiviert man da irgendwas?
So, da hat er gemeint, ja, das wären wohl irgendwelche Cron-Jobs, die morgens unter der Woche um 8 dort irgendwelche Services starten oder so.
Da dachte ich mir so, okay, easy, kein Problem.
Cron-Tab, guck mal, ich habe nicht mal Cron installiert, keck, wait, Alter.
Cron-Tab-E, Cron-Tab-L geguckt und da habe ich was gefunden, das hat mich echt ein bisschen vom Glauben abfallen lassen.
Nachdem ich kein Cron installiert habe, muss ich jetzt mal googeln.
Cron-Tab-L, hier, Chat-GPT machen wir jetzt einfach.
Start, Chat-GPT.
Ähm, Beispiel-Ausgabe, Cron-Tab-L.
Sehr gut.
Das stimmt aber nicht.
Das stimmt, das stimmt, das stimmt aber so ungefähr sieht eine Cron-Tab, so ungefähr sieht eine Cron-Tab, das stimmt aber auch nicht so ganz.
Zumindest habe ich Cron-Tab-L geguckt, was da so passiert und ohne Scheiß, Cron-Tab-L hat, was auch immer, 1600 Zeilen oder sowas, 1800 Zeilen, was auch immer, 2000 Zeilen, mega viele Zeilen ausgespuckt.
Alter, was ist bei euch los?
Beispiel mit 600 Zeilen.
So, so ungefähr, guck mal, ne, ne, und dann war Chat-GPT, wie, das ist keine, weiter bis zu 600 Zeilen, Keckel, Alter.
So, so, sowas.
Komplett anzeigen, Chat-GPT.
Ah, so, so ungefähr sah mein Terminal aus, als ich das, als, ne, als ich das AIO angeguckt habe.
Und dann habe ich mir gedacht, okay, welches dieser 1000 Jobs ist viel mehr?
Keine 600 Zeilen, Chat-GPT.
Das sind doch im Leben keine 600 Zeilen.
Alle 600 Zeilen anzeigen.
Hört einfach auf, Anzeige ist raus.
Ich glaube, der will nicht, weil der will Ausgabe-Dings-Zeug sparen.
Jetzt, jetzt macht das, hä?
Ist auch, ist auch egal, es ist auch wurscht.
Und zumindest gucke ich da so rein und denke mir so, okay, ich sehe hier so ein paar Jobs,
wo das drin vorkommt, was du haben willst.
Da gab es Jobs bei uns beispielsweise, ähm, frag mal, Chat-GPT.
Beispiel, Beispiel mit System, System, CTL, Start Now.
Ja, so, so, genau.
So, und der hat mir quasi sinngemäß gesagt, Max, der hat mir quasi so gesagt, sinngemäß, Max,
äh, deaktiviere alle Starts des, äh, sag ich mal so, Memcached Service,
da drin, und nur, dass da diese Sache mit Memcached Service und System, CTL, Start,
irgendwie 800 Mal oder so da drin vorgekommen ist.
So, und dann habe ich gesehen, okay, wo, dann habe ich erstmal überlegt,
wo liegen denn diese Grondtabs überhaupt, ja?
Grondtab-L zeigt ja im Endeffekt nur alle Grondjobs an.
Die müssen aber in irgendeiner Datei definiert sein.
Also, habe ich geguckt, habe ich etc. durch greppt, danach nichts gefunden.
Nichts gefunden, nichts gefunden, nichts gefunden.
Und dann habe ich mir die Kommentarzeilen,
nochmal angeguckt, in der Grondtab, was Grondtab-L ausgegeben hat.
Und in der Kommentarzeile stand drinnen, was die Quelldatei ist, dieser, dieser Grondjob-Einträge.
Und da habe ich was gefunden, da bin ich echt vom Glauben abgefallen.
Wenn man diese Datei aufgemacht hat, hat man nicht etwa eine Grondtab-Datei gefunden,
die dann included wurde, sondern ein Perl-Script,
beziehungsweise auch nicht mal ein Perl-Script, ein Custom-Config-Format,
von einem Perl-Script, was daraus dann wieder Grondtabs generiert.
Also, hier oben stand ein Kommentar drinnen, diese Grondjobs wurden definiert in, keine Ahnung,
war userblubla, userconfig.conf, das war dann ein Custom-Config-Format,
weder JSON, weder INI, weder YAML, noch sonst was.
Ein Custom-Config-Format, in dem dann einzelne Einträge für Grondtabs,
Grondjobs definiert wurden.
Und das war so undurchsichtig, ich habe keine Ahnung gehabt, was ich da mache.
Ich habe dann dort alles auskommentiert, was irgendwie was mit, hier, Systemctl start Memcached-Service hatte.
Und danach musste man, und jetzt haltet euch fest, danach musste man nach etc. initd.generate-grondtab oder sowas gehen.
Das war ein Perl-Script, was aus dieser Custom-Config dann systemweit bekannte Grondjobs, Grondtabs angelegt hat.
Das war ein Perl-Script, das aus dieser Custom-Config, dann systemweit bekannte Grondjobs, Grondtabs angelegt hat.
Das war ein Perl-Script, das aus dieser Custom-Config, dann systemweit bekannte Grondtabs angelegt hat.
Was zum Teufel? Was ist das für schwarze Magie, Mann?
Das ist irgendwas Selbstgestricktes, Undurchsichtiges.
Ich habe dann auch bei uns im Chat geschrieben, Leute, ich will das eigentlich nicht anfassen, ja?
Ich will, ich weiß nicht, was ich da mache.
Ich mache das jetzt, was der Typ haben will, in der Hoffnung, dass es das ist.
Aber ich habe keine Ahnung, was ich da eigentlich mache.
Ja, guckt euch das mal nächste Woche, ich habe keinen Plan.
Also das war echt, das war komplett schwarze Magie.
Ihr müsst euch das mal vorstellen.
Anstatt einfach Grondtabs anzulegen, die ja eh schon keine haben,
die keine schöne, schöne Grondtabs haben.
Ja, das Perl-Script wurde mir dann gesagt, ist 20 Jahre alt.
Deswegen initd.
Oder initd liegt seit mindestens 10 Jahren nix mehr.
Das hat kein Praktikant gebaut, das hat irgendein Solaris-Admin gebaut.
Ein Solaris-Admin gebaut vor 20 Jahren.
Und es ist immer noch da.
Das ist immer noch am Start.
Alter, da habe ich auch gedacht, wollt ihr mich eigentlich verarschen, ey?
Schwarze Magie pur.
Es ist immer noch da.
Es war kein Produktionsserver.
Das ist ja doch besser.
Der hat mich für irgendeine Testkiste angerufen, Freitag, 17.40 Uhr.
Auf einer Produktionskiste hätte ich das ehrlich gesagt auch nicht gemacht.
Da hätte ich gesagt, Leute, ich habe keine Ahnung, was das ist.
Ich habe keine Ahnung, was ich hier mache.
Ich weiß nicht, wer das gebaut hat, wie das funktioniert und wie das gedacht ist.
Da mache ich nix dran.
Hätte ich eine E-Mail geschrieben an Teamverteiler, CC, auch mein Chef nochmal,
der hat gesagt, hier, das und der Auftrag kam rein.
Da war ich, äh...
Mir zu...
Da hatte ich zu viel Schiss vor, ihr das auszuführen.
In der Hoffnung, der erwartet, dass irgendwas kaputt geht.
Das habe ich nicht gemacht.
Das muss sich einer nächste Woche angucken, der von dem System Ahnung hat.
Aber das war echt so ein Ding.
Da habe ich mir gedacht, what the fuck, man.
Ein Perl-Skript, das aus einem Custom-Config-Format-Gron-Tabs.
Aber 800, 600, 1000 Zeilen, was auch immer.
Das war so lang, da blickst du nicht mehr durch.
Außer...
So, jetzt habe ich euch das erzählt.
Jetzt habe ich noch was anderes für euch.
Wo ich eine Idee habe, aber euch mal was fragen wollte.
Guckt mal hier.
Es geht mir übrigens überhaupt nicht um FritzOS 8.
Ist mir vollkommen egal.
Mir geht es um das Kommentar hier.
Und zwar heiße...
Jetzt ist Premiere.
Wir gucken uns wirklich heiße Comments an.
Und zwar das hier.
Von Doofnase.
Doofnase sagt, ey, guckt mal.
Das habe ich mir nämlich heute Morgen...
Das habe ich heute Morgen, als ich auf dem Klo gesessen habe,
habe ich das gelesen und habe mir mal ein bisschen Gedanken drüber gemacht.
Doofnase fragt hier.
Hallo zusammen.
Kennt jemand von euch eine Möglichkeit,
beispielsweise einen kommerziellen VPN-Dienst,
mit dem ich auf meinen WireGuard auf der IPv6-DS-Lite-Fritzbox zugreifen kann,
auch wenn ich nicht in einem nativen IPv6-Netz bin?
Wenn ich im IPv6-Netz bin, kann das Notebook Handy problemlos
vier IPv6 auf die Fritzbox verbinden.
Ich möchte es aber auch von Dienstreisen im Ausland,
wenn ich nur IPv4 habe, am liebsten mit einem DNS-Eintrag.
So, jetzt sage ich euch mal, was mir dazu eingefallen ist.
Dann könnt ihr mir mal sagen, was euch...
dazu einfällt.
So, also, vielleicht ist allen Beteiligten überhaupt klar,
was das Problem ist.
Ich werde das...
Ich versuche es mal kurz zu erklären.
Also, wir haben einen DS-Lite-Anschluss.
Ein DS-Lite-Anschluss ist in der Regel,
du bekommst nur noch eine IPv6-Adresse
als Public IP.
Und wenn du auf Teile des Internets zugreifen möchtest,
das nur...
nur per IPv4 erreichbar ist,
beispielsweise Amazon, glaube ich, ne?
Ist Amazon nicht auch nur immer noch
nur only per IPv4 erreichbar?
Es gibt größere Services,
die sind nur per IPv4 erreichbar.
So, dann funktioniert das folgendermaßen.
Du gehst über einen Tunnel.
Also sprich,
dein Request wird eingepackt
in ein IPv6-Package.
Das geht an einen Provider.
Und ein Provider hat einen IPv6-Package,
und ein Provider hat einen IPv6-Package,
und ein Provider hat einen IPv4-Ausgang.
Dann wird das wieder ausgepackt.
Das nennst du dann
cgnut, carrier-crate-nut.
Dort wird es wieder ausgepackt.
Und du sharest dir eine externe IPv4-Adresse
mit ganz vielen Kunden dieses Providers.
Und dann gehst du IPv4 raus.
Also IPv4 mit DS-Lite
kann man prinzipiell nur über einen Tunnel machen
zum Provider.
Das hat den Nachteil,
dass wenn du von außen kommst,
also von außen kommst,
also wenn du quasi dich von außen ansprechen willst,
dann geht das nicht,
weil du keine Public-IPv4-Adresse
mehr auf deiner Fritzbox hast.
Du müsstest quasi, damit das funktioniert,
müsste quasi dein Provider
eine Port-Weiterleitung machen auf dich.
Was der natürlich nicht macht.
Und du hast natürlich auch keinen Zugriff
auf den NAT-Endpunkt von deinem Provider.
Logischerweise.
Also das funktioniert nicht.
Wenn du DS-Lite hast mit carrier-crate-nut,
also es ist meistens alles in einem,
hast du keine Public-IPv4-Adresse.
Dementsprechend,
kannst du nicht per IPv4
auf das VPN beispielsweise
auf deine Fritzbox zugreifen.
So.
Was kann man dagegen machen?
Die einfachste Idee,
die ich hatte, ist folgende.
Mal gucken, ob euch noch was,
gucken wir mal, ob euch noch was
besseres einfällt.
Also sein Ziel ist ja eindeutig,
er möchte per VPN aus dem Ausland,
wo er nur IPv4 hat,
quasi sich in sein Heimnetz einwählen.
Das ist quasi so das,
was er, was er will.
So, wir können jetzt Excalibur.
Habt ihr recht?
Ich verwende immer noch Trio,
aber Excalibur,
die coolen, ex Excalibur.
So, wie handelt Streaming?
Anbieter bei sowas wohl wie ein Haushalt?
Es ist wahrscheinlich anhand von der Session ID oder so.
Das ist tatsächlich gar nicht so einfach.
Wer an einem carrier-crate-nut sitzt,
der hat auch öfters die Probleme,
dass Google Captchas möchte und sowas,
weil viele Leute eben diese Ausgangs-IP verwenden.
Und wenn einer da zu viel spammt,
musst du Google Captchas eingeben.
Ja, ja, das ist tatsächlich ein Problem.
So, also gibt, hat das auch ein Dark Mode Excalibur?
Dark Mode?
Also was ich mir überlegt habe, ist folgendes.
Hat es, wo denn?
Hier?
Ah, hier.
Okay.
Du sagst dann im Anbieter, dass du kein DS,
ja gut, das ist, das ist die einfachste Variante.
Du wirst auf einen vollwertigen Dual-Stack umgestellt.
Aber gehen wir mal davon aus, dass es nicht so.
Also meine Idee, meine Idee wäre folgendes.
Ja, sagen wir mal, Alter,
lag AF, was ist das?
Ist das in, ist das in Chrome auch so?
Ne, pff, legt das, legt das am Dark Mode?
Okay, es ist nur Firefox, was laggy as fuck ist.
So, also gehen wir mal davon aus,
dass hier, das hier ist so sein Heimnetz, okay?
So, sein Heimnetz und so hier, sagen wir mal, sagen wir mal,
das hier, sagen wir mal, das hier ist die FRITZ!Box, okay?
Die, die, die, what the, wie benutzt man das?
Ne, äh, so?
Wie, wie verschiebt man das so?
Die FRITZ!Box, mach mal, wir machen die FRITZ!Box mal so als, als Eingang, okay?
So, das ist die FRITZ!Box, FRITZ!Box, da vor allem, das Ding, das ist sein Heimnetz.
Und hier hat er, ja, hier drin hat er beispielsweise auch sein, sein Desktop-PC stehen
und irgendwie sein, sein Fernseher und, und was auch immer, das, ja, das PC ist das.
Und das hier, das hier, das hier ist die, das hier ist die FRITZ!Box, okay?
Das ist die FRITZ!Box.
Kann man sagen, dass man das hier rot haben will?
Excellent.
So, und das hier, das hier ist halt sein Heimnetz, ja?
Sagen wir mal,
Alter,
kann man das jetzt nun,
Alter,
Excalibur, ich will hier was reinschreiben.
Geht net.
Ah, doch.
Äh, so, das, das hier ist quasi sein Heimnetz, ja?
192.168, äh, keine Ahnung, äh, 5.0 slash 24.
Oder so.
Okay.
Oh, das ist sein Heimnetz.
Und der will jetzt, der will jetzt ja quasi hier von außen irgendwie aus dem Ausland über das Internet.
Hat Excalibur noch mehr hier, so, das ist das, das ist das Internet.
Internet.
So, und das ist, das ist, ey, das ist der, das ist der Dude hier, Remote, okay?
So.
Und jetzt ist halt die Frage, wie kann man das machen?
Die FRITZ!Box selber hat nur eine IPv6-IP.
Das heißt, das wird nix.
So, der hier, das ist Remote IPv4.
Und das hier ist FRITZ!Box, hat nur IPv6.
Über einen Tunnel vom, vom Provider.
So.
Was, das Einfachste, was mir jetzt einfällt, was man machen könnte, ist, man mietet sich einen Server.
Ne, irgendwie, irgendwie so eine Kiste bei Hetzner, ja?
Hetzner Server mit einer Public, Public IPv4-Adresse.
So.
Jetzt nimmt man sich einen Raspberry Pi, zum Beispiel.
Vielleicht kann man's auch mit der FRITZ!Box, mit der FRITZ!Box alleine machen, aber sein Ziel ist ja, ins Netzwerk zu kommen, von seinem heilen Netz.
So.
Jetzt nimmt man sich einen Raspberry, Raspberry Pi.
Einfach Pi.
Ja, vielleicht habt ihr ne bessere Idee.
Ja, kann ja sein.
Also, manuell.
Meine Idee, wie man das manuell fixen könnte.
So.
Was man jetzt macht, ist folgendes.
Man kommt zwar von außen nicht direkt an die FRITZ!Box ran, beziehungsweise, man kommt von außen nicht direkt an den, also, das hier ist, das hier ist ein Raspberry Pi mit, mit, sagen wir mal, WireGuard oder so drauf, okay?
Mit irgendeiner, mit irgendeiner VPN, mit irgendeiner VPN-Geschichte.
So.
Und, was ich jetzt machen würde, ist folgendes.
Du kommst zwar nicht, selbst mit Port-Weiterleitung, ne, kommst du, kommst du zwar von hier nicht auf deinen WireGuard Pi,
aber was ich machen würde, ist folgendes.
Ich würde einen SSH-Tunnel aufbauen von dem Pi auf meinen Hetzner-Server.
Das funktioniert, weil, das ist zwar IPv4-Traffic, aber IPv4-Traffic geht über die FRITZ!Box über das NAT vom Provider an den Hetzner-Server.
Also, ausgehend kein Problem.
Ja, das funktioniert.
Also, ich verbinde mich per, ähm, das ist auch per IPv4, ja, verbinde ich mich von meinem Raspberry Pi.
Auf den Hetzner-Server.
Und zwar, und zwar nicht einfach nur so, sondern mit, kann man hier irgendwie einfach nur Text einfügen,
sondern ich verbinde mich mit einem SSH-G, glaube ich, da bin ich mir nicht ganz sicher,
Minus G, Minus, äh, R, glaube ich, und dann irgendwie, was weiß ich, Port, Port, ja, was auch immer, was ist WireGuard-Port?
WireGuard-Port.
Ups, okay.
Wobei, ich brauch was, ich brauch was auf TCP-Basis auf jeden Fall, sonst funktioniert SSH nicht.
Wobei, ich brauch was, ich brauch was auf TCP-Basis auf jeden Fall, sonst funktioniert SSH nicht.
Wobei, ich brauch was, ich brauch was auf TCP-Basis auf jeden Fall, sonst funktioniert SSH nicht.
Ja, keine Ahnung, auf Port 12345 verbinde ich mich zum IP, Raspberry Pi IP, äh, ja, VPN-Port, und das war's.
Das, das wäre, das wäre meine Lösung dafür.
Was, was man jetzt, so, was jetzt passiert ist folgendes.
Auf dem Hetzner-Server wird jetzt ein Port aufgemacht, nämlich Port 12345.
Minus G bedeutet, der Port ist Closed.
Minus G bedeutet, der Port ist Global.
Das heißt, der wird hier auf der Public, oder eingehalten auf, nicht nur auf Localhost,
sondern hat auf alle Interfaces aufgemacht oder halt auf, ohne IP-Einschränkungen aufgemacht.
Das heißt, man hat public ins Internet hin, jetzt hier auf IPv4, diesen Port offen.
So, und alles was auf diesen Port geht, geht über, wird über den SSH-Tunnel zurück an den Raspberry Pi geschickt,
So, und alles was auf diesen Port geht, geht über, wird über den SSH-Tunnel zurück an den Raspberry Pi geschickt,
Und dort kommt es auf dem VPN-Port raus.
So, das wäre meine Linux-Admin-Bastel-sich-was-zurecht-Lösung.
Die wäre zwar nicht super performant, latency und schnell, aber die würde funktionieren.
Und wenn er jetzt ein VPN aufbauen will, wenn er jetzt ein VPN aufbauen will in seinem Heimnetz,
dann würde das VPN so funktionieren.
Der geht hier auf Port 12345, VPN, und wird dann über SSH weitergeleitet hier an die WireGuard-Kiste.
Über den SSH-Tunnel wird er weitergeleitet.
Ritzbox ist egal, die ist nur Durchlauferhitzer.
Und bekommt am Ende dann eine, hier von dem VPN-Server drauf, eine interne IP.
Was weiß ich, 192.168.5.
Und 200.
So.
Das wäre meine Lösung dafür.
Das ist, glaube ich, ein bisschen gebastelt, aber das funktioniert.
Du könntest auch auf der Hetzner-Kiste routen.
Na, irgendwo muss ja die Umsetzung IPv4 zu IP...
Muss das?
Ich habe ja keinen Endpunkt auf der Hetzner-Kiste für meine, für meinen Raspberry Pi.
Das funktioniert nicht.
Das funktioniert nicht.
Nur weil der, weil SSH das hier managt.
SSH routet das hier schon weiter.
Was ich bräuchte, wäre quasi eine IPv4-Verbindung zwischen dem Hetzner-Server und meinem WireGuard-Pi.
Also ich könnte anstatt dem SSH-Tunnel auch noch eine, ich könnte einen VPN bauen zwischen den Kisten hier.
Und darüber das machen, anstatt über den SSH-Tunnel.
So.
Und jetzt, und jetzt seid ihr dran.
Was ist eure Idee dafür?
Also das ist, das ist eine Lösung, die sieht kompliziert aus.
Die ist aber easy.
Die Lösung ist wirklich easy.
Du brauchst einen Raspberry Pi oder irgendeine Kiste bei dir im Internet.
Aber das brauchst du ja eh.
Irgendwo muss ja ein VPN drauflaufen.
Und...
Und du brauchst eine Hetzner-Kiste für 3 Euro.
Wofür genau der Pi ist?
Äh, weil du eine Kiste brauchst, von der aus du SSH machen kannst auf deinem Public-Server.
Soweit ich weiß, hast du bei der Fritzbox kein Command-Line-Interface, was SSH unterstützt und dann auch Public-Server.
Du musst irgendwie, du musst einmalig rauskommen.
Und dann kannst du gleich welche auswählen.
Und dann kannst du die ganze App auf 3, 4, 5, 10, 10, 11 oder 12.
Und dann kannst du ganz einfach in die App kommen und jetzt kannst du abwarten, wie lange es dauert.
Und dann bist du da direkt in der App.
Weil es ist ja so, wenn du diese Sprache kommst.
Und dann kannst du in die Prüfung und dann kannst du das ist ja auch ganz einfach.
Ich glaube, es ist ja auch ganz einfach, weil er wirklich sehr praktisch ist.
Weißt du, das steht na rein.
Also, ich versuche das ein bisschen.
Ich versuche das, ich versuche das.
Ich versuche das.
fritz box für verwenden aber es fällt in dem fall an flach weil nicht direkt
ankommt und das dann nicht aufbauen kannst wenn du kannst hast du kannst
übrigens das vpn von der fritz box verwenden ist auch kein problem du
kannst du hier auch nur ssh machen und dann port weiterleitung auf den port
anstatt auf den port auf den fritz box port dass das geht ja aber muss ja die
komplizierte mann du brauchst vpn punkt und du brauchst ein public server also
dieses setup hier ist in ist in der halben stunde einsatzbereit
du willst du liest in raspberry pi mit vpn lösung deiner deiner wahl und du
brauchst eine externe eine kiste linux kiste mit ipv4 drauf wir jetzt cloud
pricing für 2 euro 50 oder so ich glaube mittlerweile ist ein bisschen
teurer weiß es ja ja 451 für 4 euro 51 so und das also das funktioniert auf
jeden fall
also das funktioniert auf jeden fall aber ich glaube nicht dass es die
einfachste variante ist stimmt stimmt stimmt du brauchst du keine exakt nach
geht's brauchst du abendkiste reicht ja auch aus wo wo wo sind die abendkisten
hin hier alle das waren schon okay kostet das
gleiche kummer ok kostet kostet 0,001 cent
0
0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
Das ist im Prinzip ähnlich, ne?
Das ist im Prinzip was ganz ähnliches.
Wenn ich das hier schon lese.
Carry, create, punch, hold.
Das ist im Prinzip was ganz ähnliches.
Du brauchst halt irgendwo einen Public Endpunkt.
Und, ja, ja, das ist gar nicht so unterschiedlich dazu.
Du brauchst auf jeden Fall einen Public Endpunkt, mit dem beide Seiten reden können.
Dann machst du quasi einen Synth-Package.
Auf, also, okay, ich rate mal, wie das hier funktioniert, okay?
Ich rate mal, wie das hier funktioniert.
Du brauchst einen externen Server, mit dem beide Seiten reden können.
Ohne funktioniert es auf jeden Fall nicht.
Du brauchst einen Public Endpunkt.
Das ist in dem Fall halt wahrscheinlich Tailscale.
Dann schickst du einen TCP-Synth-Package los.
Was dafür sorgt, dass in dem Nut auf dem Weg...
Du einen Eintrag in der Tabelle kriegst.
Du weißt, was du für einen Synth-Package losgeschickt hast.
Und diese Info, quasi, ähm, Public IP und...
Oh, da bin ich mir jetzt gar nicht sicher.
Public IP, aber weißt du, welchen Port du da bekommen hast?
Geht das überhaupt?
Zumindest von der Idee her musst du dich über den Public Server austauschen,
was du für ein Package losgeschickt hast.
Ja, klar, doch.
Ja, klar, doch.
Doch, doch, doch, doch, das funktioniert.
Du schickst...
Genau, okay, also, von der Idee...
Ich hab mir das noch nie angeguckt.
Von der Idee her ist es folgendes.
Über den Public Endpunkt tauchst du dich als erstes drüber aus,
was die IP der Gegenseite ist.
Die Absender-IP der Gegenseite.
Dann schickst du ein Package los mit Ziel IP...
Also mit Destination,
die, ähm...
Ja, die, die, äh, die, die andere Seite,
wo du vorher die Infos bekommen hast.
Und denkst dir irgendeinen, denkst dir irgendeinen Port aus.
Diese Info, dazu, auf, dadurch, dass du das losschickst,
hast du schon mal auf allen Nuts auf dem Weg
einen Eintrag in der Tabelle.
Und die wissen alle, okay, wenn eine Antwort kommt
von diesem Absender auf dem Quellport,
dann gehört das zu dieser Verbindung.
Dann sagst du der Gegenseite eigentlich nur noch,
ich hab das jetzt losgeschickt, es ist offen,
und die kann direkt mit dir kommunizieren.
Und zwar mit der Public IP vom Nut-Endpunkt deines Providers
jetzt als Destination-Port
den Port, den du vorher frei gewählt hast,
als Source-Port und über den externen Talescale-Server
der anderen Seite mitgeteilt hast.
So ungefähr müsste das funktionieren.
Wenn ich mir das gerade so im Kopf zusammenreime.
Ich hab Talescale noch nie benutzt.
Irgendwie so.
Weil das ist, sag mal so, das ist das,
was man normal unter Pole-Punching, Punch-Holling,
wie auch immer, versteht.
Du brauchst einen externen Server, mit dem du dich austauschst,
welche Ports du geöffnet hast.
Über Infrastruktur, die dir im Zweifelsfall auch nicht gehört.
Das ist das Gleiche übrigens,
wie das beispielsweise bei Discord läuft.
Oder bei, na, bei Discord läuft das nicht.
Bei Discord läuft das nicht.
Bei Discord läuft das nicht.
Bei Discord läuft das nicht.
Bei Discord läuft das nicht.
Bei Discord läuft das nicht.
Bei Discord, doch, doch, relativ sicher, auch bei Discord.
Oder bei Video, bei Videocalls.
Bei Videocalls in Teams geht das ja auch nicht alles über Microsoft-Server.
Es wird im Endeffekt die Verbindung aufgebaut über den Microsoft-Server.
Der Rest geht direkt, zumindest wenn es über WebRTC geht.
WebRTC funktioniert auch so.
Du brauchst einen externen Server, um dich beispielsweise,
um auszutauschen, was deine Endpunkte sind.
Dann machst du über NAT-Ports auf,
teilst das der anderen Seite mit über diesen Signalisierungsweg
und dann kannst du direkt kommunizieren.
Du brauchst nur, um dich auszutauschen,
nur initial zum Verbindungsaufbau, diesen externen Server.
Das wäre ja auch total ineffizient,
wenn jeder Videocall in Teams über Microsoft-Server gehen müsste.
Okay.
Ja, sowas in der Richtung würde wahrscheinlich auch funktionieren.
Also Cloudflare Tunnel und Cloud...
Ist Talescale das gleiche wie Cloudflare Tunnel, ja?
Habe ich selbst noch nicht verwendet.
Kannst du das SSH über IPv6 machen
und trotzdem einen Port auf einer...
Ja, das müsste vielleicht...
Das könnte vielleicht funktionieren.
Da bin ich mir nicht ganz sicher.
Es könnte durchaus sein, dass es funktioniert,
dass du ein IPv6-SSH machen kannst
und trotzdem Port weiter...
Nee, kannst du nicht. Geht nicht.
Kannst keinen IPv6...
Doch, doch, das könnte funktionieren.
Dann braucht der Raspberry Pi aber auf jeden Fall eine IPv6-Adresse.
Nee, das funktioniert nicht.
Das funktioniert nicht.
Das SSH muss über IPv4 gehen.
Dass das...
Dass das...
Ähm...
Da bin ich mir jetzt nicht ganz sicher.
Macht aber im Prinzip jetzt nicht viel Unterschied.
Na doch, macht schon Unterschied.
Dann gehst du nicht über das Carrier-Crate nach drüben.
Also vielleicht würde es funktionieren,
wenn er eine IPv6-Adresse hat,
der hätte dann eine Public IPv4
und eine Public IPv6,
dass du das hier über IPv6 machen könntest
und es trotzdem funktionieren würde
mit dem Port weiterleiten.
Doch, das könnte funktionieren.
Also das SSH könnte auch über IPv6 gehen.
Ja.
Dann könnte man...
Dann könnte man sich das Carrier-Crate dann an der Stelle sparen.
Aber vom Setup her ist es immer noch das Gleiche.
Also wie gesagt, Routen an sich funktionieren nicht.
Routen würde nur funktionieren,
wenn ich irgendwie zwischen diesen zwei Servern vorher
nochmal eine extra VPN baue oder sowas.
Man könnte ja sagen,
SSH macht ja was ähnliches.
Ja.
Das könnte ich machen, ja.
Genau, VPN zwischen Pi und Hetzner.
Das Transportnetz sollte eigentlich egal sein.
Ja, das stimmt.
Wofür genau?
Das habe ich ja schon erklärt, genau.
Was ist Carrier-Crate?
Das ist Carrier-Crate.
Weißt du, was DS-Lite ist?
DS-Lite ist eine Technik für Provider,
oder Technik, kann man es überhaupt Technik nennen?
Das ist was, was sich Provider ausgedacht haben,
um IPv4-Adressen zu sparen.
Weil wie ihr vielleicht schon gehört habt,
ist es ein bisschen knapp mit IPv4-Adressen.
Und mit DS-Lite können Provider IPv4-Adressen sparen,
indem sie dir nur noch eine IPv6-Adresse geben
und keine IPv4-Adresse.
Das Problem ist aber,
dass viele Services über IPv4-Adresse,
die IPv6 nicht erreichbar sind.
Und deswegen müssen die Provider dafür sorgen,
dass du trotzdem auch IPv4 erreichen kannst,
obwohl du nur eine IPv6-Adresse bekommst.
Und das machen sie mit Carrier-Crate-Nut.
Das heißt, wenn du beispielsweise von deinem PC
einen Service aufrufen willst,
der nur über IPv4 erreichbar ist,
dann geht das von deinem PC zu deinem Router.
Dort wird das eingepackt in ein IPv6-Package,
geht zum Provider,
der Provider packt das aus
und der Provider hat immer...
Machen wir das doch mal hier.
Hier hast du einen Service.
Warte mal, der ist hier so.
Hier hast du einen IPv6-Service.
Ist Amazon eigentlich mittlerweile über IPv6 erreichbar?
Ja, der AWS kann das.
Amazon selbst bin ich mir...
Gab es nicht sowas wie
Are we IPv6 yet?
Oder sowas gibt es doch.
Also denkt dir mal irgendeinen Service aus,
der nur über IPv6 erreichbar ist.
Bin mir nicht sicher, ob Amazon mittlerweile auch...
Ja.
Hm.
So und du willst jetzt von hier auf diesen IPv6 hier,
ne, IPv6,
nennen wir das einfach hier Website, ja?
Okay.
Hier willst du darauf zugreifen.
Das funktioniert hier natürlich nicht.
So ohne weiteres.
Ja, das hier ist ja alles IPv4 und das ist IP...
Und das ist, ähm...
Übrigens, so stimmt überhaupt nicht, was ich hier erzähle.
IPv4.
Das funktioniert hier ja nicht.
Das hier ist IPv4, das ist IPv4,
dazwischen ist nur IPv6.
So.
Also, was...
Was passiert jetzt?
Du kriegst, ähm...
Du machst ein Request an eine Fritzbox.
Die Fritzbox hat ne Public...
Die Fritzbox muss das quasi einpacken
an deinen Provider.
Bin mir gar nicht sicher, wie das genau funktioniert.
Ich geh mal davon aus, dass...
Ich weiß nicht.
Ich hab keine Ahnung, wie das genau funktioniert an der Stelle.
Ähm...
Zumindest geht es dann über IPv6
an deinen Provider.
So.
Und dein Provider hat dann ein Carrier-Crate-Nut-Ausgang.
Gateway.
Das nennt sich witzigerweise After.
Zumindest bei Vodafone.
Ja.
Und das hier ist quasi ne Public IPv4-Adresse,
die sich...
Die sich, äh...
Alle Provider-User teilen.
Das stimmt nicht ganz.
Die haben mehrere Ausgänge.
Ja.
Das zählt nicht.
Das zählt nicht.
Das zählt nicht.
Das zählt nicht.
Das zählt nicht.
Das zählt nicht.
Das zählt nicht.
Das zählt nicht.
Das zählt nicht.
Das zählt nicht.
Das zählt nicht.
Das zählt nicht.
Das zählt nicht.
Das zählt nicht.
Die müssen nicht wirklich alle Provider-User über den exakten gleichen Ausgang...
So findest du das dann.
Dann geht es weiter an die IPv4-Adresse.
Also, dein PC schickt es an die Fritzbox, die Fritzbox schickt es über IPv6 von deinem
Provider.
Dein Provider packt aus dem IPv6-Package dein IPv4-Package aus, schickt es weiter an
ein Nut-Gateway mit einer Public IPv4-Adresse,
die ihn aber ganz viele Leute vom Provider benutzen.
Ja, das machen, sagen wir mal vereinfacht gesagt,
alle Kunden des Providers müssen hier drüber.
Das heißt im Endeffekt auch,
diese Webseite sieht nur die Absender-IP.
Geht das wirklich über IPv6 zwischen Fritzbox und Provider?
Ja.
Ach so, ähm, ja, ja.
Also ich bin mir nicht sicher, ehrlich gesagt,
da bin ich mir jetzt an der Stelle wirklich nicht sicher,
wie das funzt.
Es kann auch sein, es kann auch sein,
dass das irgendwie ein internes IPv4-Netz ist
zwischen Provider und sonst wie.
Es kann auch sein, dass das wirklich intern,
es geht zumindest nicht public,
wie man sich das vorstellt,
public IP, IPv4 zum Provider, zum nächsten Hopp und sonst was.
An dieser Stelle muss irgendwie,
muss dein Package da VPN eingepackt, getunnelt werden.
Wie genau, weiß ich nicht, wie das funktioniert, ja.
Zumindest an der Stelle kannst du nur per IPv4,
per IPv6 ins Internet
und alles andere muss irgendwie über deinen Provider getunnelt werden.
Und dort gibt es eine Ausgangs,
eine Ausgangs-Gateway mit einer Public-IP-Adresse,
die sich, sagen wir mal vereinfacht gesagt,
alle Kunden teilen.
Das heißt, wenn die IP irgendwo geblockt ist,
werden alle Kunden geblockt, richtig.
Das ist eines der Probleme davon.
In Wirklichkeit haben die natürlich nicht ein Gateway,
sondern haben halt, was weiß ich, 50 oder so.
Aber du hast immer eine gewisse Menge an Kunden,
die sich diese Public-IPv4-Adresse teilen.
Ja, und das stimmt.
Wenn du irgendwo gebannt bist, IP gebannt bist,
sind alle Kunden, die über diesen Gateway gehen, IP gebannt.
Das ist korrekt.
Und das macht auch öfters mal Probleme.
Das ist Carrier-Crate-Nut an der Stelle.
Die sparen es sich, im Endeffekt dir eine IPv4-Adresse zu geben.
Die geben dir eine IPv6-Adresse.
Aber du willst ja trotzdem auf IPv4-Webseiten zugreifen.
Dementsprechend musst du halt dieses Getunnel und Genutte machen.
Ich wollte bei 1&1 auch eine IPv4 wegen der Slideshow machen.
Damit ich mich VPN nach Hause verbringen kann.
Und die haben mir einen kleinen Port-Bereich zugewiesen.
Ah, das heißt, die haben wirklich eine Port-Weiterleitung gemacht.
Von einer Public-IP bei ihnen auf eine interne IPv4 auf deiner Fritzbox.
Oder was haben die gemacht?
Das hätte ich nicht gedacht, dass die sowas Kompliziertes überhaupt einrichten.
Also kompliziert ist es nicht, aber das geht natürlich auch.
Aber das hätte ich nicht gedacht, dass das ein Provider macht.
Das hätte ich nicht gedacht, dass die das an der Stelle machen.
Das musst du mal etwas genauer erklären.
GoWizard, danke für den Sub.
Auf der Fritzbox.
Das würde funktionieren, ja.
Das ist ja im Prinzip eine Abwandlung dessen, was ich hier gebaut habe.
Ob es jetzt ein SSH-Tunnel ist oder ein VPN, ist ja eigentlich egal.
Fritzbox auf IPv4 umstellen geht nicht.
Nein, dein Provider gibt dir keine IPv4-Adresse mehr.
Keine Public-IPv4-Adresse.
Das hat mit deiner Fritzbox nichts zu tun.
Das liegt am Provider.
Da sagt er, er hat keinen Bock.
Wir überlegen uns gerade, wie man mit DSLite und CarrierCrateNut
sich trotzdem per VPN daheim einwählen kann.
Wenn man selbst nur IPv4 hat.
Ich habe auch einen richtig echten.
Ich habe einen richtig echten.
Ich habe auch einen richtig echten.
Ich habe einen richtig echten Dual-Stack, glücklicherweise.
Ich bin den so auf den Sack gegangen bei Vodafone.
Ich habe ja öffentlich auch mehrere Wochen rumgeflamed auf Twitter,
bis sie mir das gegeben haben.
Ich habe mir gerade überlegt, wie das funktioniert.
Was hältst du vom Beruf des IT-System-Elektronikers?
Das ist richtig oldschool.
Das gab es vor Fachinformatiker schon.
Ich habe mich damals, als es noch keinen Fachinformatiker gab,
tatsächlich auch mal beworben als IT-System-Elektroniker.
Aber danach habe ich mir gedacht,
scheiß drauf, warum soll ich arbeiten,
wenn ich auch den ganzen Tag 24-7 MMOs
grinden kann?
Und da habe ich ein paar Jahre gegammelt.
Warum stellen die nicht einfach neue IPv4-Adressen her?
Ja, das frage ich mich auch.
Warum machen wir nicht einfach
ein bisschen mehr IPv4-Adressen?
Wisst ihr,
ich habe ja eh eine Theorie dazu.
Und da sagt der Chat immer,
Max, das ist Schwachsinn, das wird nicht passieren.
Und auf der einen Seite denke ich,
ja, der Chat hat recht, aber auf der anderen Seite
denke ich auch, ich habe recht.
Und zwar ist meine Theorie folgendes.
IPv6 wird sich
nie komplett durchsetzen.
Aber das Problem mit IPv4-Adressen
ist real.
Das heißt,
irgendwann wird Amazon,
Google und Microsoft
sich irgendwas
Wirres ausdenken,
um
irgendwas zu basteln.
Ich bin mir nicht sicher, was die basteln.
Zumindest, wenn es
Google, Amazon und Microsoft
machen und Apple,
dann ist es auf allen wichtigen Betriebssystemen,
drauf. Das reicht schon mal.
Und ich habe irgendwie die blöde Vermutung,
die benutzen irgendwelche freien Bytes,
die noch zur Verfügung stehen
oder die man vielleicht irgendwie
anders encoden kann oder was auch immer
in so einem IPv4-Package,
um noch ein paar Adressen unterzubringen.
Also die machen dann irgendwie so eine Art
IPv4-V2 oder sowas.
Das ist ja meine Verschwörungstheorie,
was IPv6 angeht.
So, dass die sowas planen.
So nach dem Motto IPv6
wird es nie machen. Wir brauchen irgendwas,
was rückwärts kompatibel
zu IPv4 ist, aber mehr Adressen bietet.
Und dass sie dann
dass sie dann irgendwie hergehen
dass sie dann irgendwie hergehen und sagen
ey,
wir sind Google, Amazon,
Apple, Microsoft. Wir haben eh
99,9% von allen Geräten
am Marktanteil.
Wir machen jetzt einfach IPv4-2.
So, und es ist rückwärts kompatibel
zu IPv4.
Und wenn,
was auch immer, ich denke mir jetzt einfach mal was aus,
und wenn
irgendein Flag
auf einen bestimmten Code gesetzt ist,
es muss ja rückwärts kompatibel sein,
irgendwas, was sonst nichts verwendet,
dann ist jetzt
die, keine Ahnung,
die Hälfte der
Header-Checksumme könnten noch
weitere IPs sein oder sowas.
Irgendwie, irgendwie sowas.
Dass sie sich irgendwie sowas ausdenken, ja?
Ich weiß, ihr haltet
davon nichts. Ihr sagt, Max, Schwachsinn,
es wird IPv6 und sonst nichts anderes.
Das ist IPv4.1
oder...
Übrigens, Chat,
habt ihr gehört, wie der neue USB-Standard
heißt?
Habt ihr ernsthaft...
Also, ich bin mir relativ sicher,
wenn die, wisst ihr was,
die können auch irgendwas
encoden oder so.
Dass die sagen, wir nehmen,
keine Ahnung, denen fällt schon irgendwas ein.
Ja? Oder so nach dem Motto,
wir benutzen das, wo Protokoll drinne steht.
So nach dem Motto,
wir sind uns doch eh einig.
Protokoll ist immer TCP.
So. Und wir benutzen jetzt den Protokoll,
irgendwas, ja, irgendwas,
dass sie irgendwas aus diesem IPv4-Header
zweckentfremden,
um noch ein paar Adressen unterzubringen.
Das würde mich echt nicht wundern.
Guck mal, hier haben wir zwei Bars,
zwei Bytes. Zwei Bytes mehr.
Da kannst du hier, das ist ja Luxus.
Na gut, die Paketlänge braucht man
natürlich tatsächlich.
Die Header-Checksumme. Hier.
Header-Checksumme. Zwei Bytes extra.
Was zwei Bytes extra bringen würde.
Checksumme braucht man eh nicht.
Scheiß auf Checksumme. Man hat einfach keinen
Übertragungsfehler mehr.
Irgendwas, irgendwas in der Richtung,
wenn die sich ausdenken.
So meine Verschwörungstheorie zu IP-Adressen.
Pass mal auf.
USB-Standards.
Okay. Sogar Wikipedia hat es aufgegeben.
Ja, Tailscale hatten wir.
Sogar, sogar.
Also, der neue USB-Standard
heißt allen Ernstes
USB 4, übrigens nicht Leerzeichen.
Das Leerzeichen wurde weg.
USB 4.2.0.
Also quasi USB 420.
Das ist denen ihr Ernst.
Das heißt wirklich so.
Ach ne, man schreibt es sogar.
So jetzt.
USB 4 minus 2.0
schreibt man es jetzt ja sogar. Okay.
Ich meine USB 4.1 hätte ich ja noch verstanden.
Aber warum um alles in der Welt
USB 4
2.0
Das ist
entgegen jeglicher Logik,
die sie bisher hatten.
Was übrigens alle USB-Standards vorher auch schon waren.
Und das Problem bei USB ist ja immer,
dass USB
retroaktiv
Standards umbenennt.
Also wer sich,
Chat, wer von euch erinnert sich noch an USB 3.0
oder an USB 3.1?
Da erinnert sich doch bestimmt noch
der ein oder andere dran, oder?
Das stimmt aber nicht.
Guck mal hier.
Standard USB 3.0
nennt sich in Wirklichkeit
mittlerweile nicht mehr USB 3.0, sondern
USB 3.2 Gen 1x1.
Das ist der aktuelle Name von
ehemals USB 3.0.
Die haben tatsächlich ihren
Standard retroaktiv
umbenannt.
Ich weiß nicht,
wie das überhaupt zusammenpasst,
das Wort Standard
und nachträglich umbenennen.
Als es rausgekommen ist,
hieß es USB 3.0,
USB 3.1 und USB 3.2.
So. Und als
USB 3.2 rausgekommen ist,
hat man USB 3.1 und USB 3.0
umbenannt.
Und zwar hat man gesagt,
USB 3.0 heißt jetzt USB 3.2,
Gen 1x1 und USB 3.1 heißt jetzt
auf einmal USB 3.2, Gen 2x1.
Übrigens, Frage, Bonuspunkte.
Auf was bezieht sich dieses
1x1 und 2x1 und 2x2?
Es ist das
das Unintuitivste überhaupt.
Das bezieht sich, also das hier
ist die Generation.
Okay?
Und das hier bezieht sich, wie viele
Datenleitungen in dem USB-Kabel sind.
Und das hier bezieht sich, wie viele
Datenleitungen in dem USB-Kabel sind.
Und das hier bezieht sich, wie viele Datenleitungen in dem USB-Kabel sind.
Und das hier bezieht sich, wie viele
Kupferspuren
in dem USB-Kabel
für Datenübertragung
vorgesehen sind.
Das heißt, USB 3.2
Generation 2x2 bedeutet,
das sind zwei
Datenleitungen zur
Übertragung drinnen.
Warum auch immer das überhaupt
im Standard drinsteht, weil ganz ehrlich,
das ist doch dem Anwender sowas von scheißegal.
Und übrigens, by the way,
der aktuelle Marketingname ist, das wurde übrigens
nochmal umbenannt, es wurde nochmal umbenannt,
seit USB 4
seit USB 4
ist das hier der Modusname
und das hier ist der offizielle
Name. Also das heißt,
USB 3.0 ist jetzt USB
5
Gigabits per Second, auch
genannt Superspeed, auch genannt
vielleicht etwas unglücklich, was SS
zu nennen.
USB 3.1 ist
USB 10 Gigabits pro Sekunde
Superspeed Plus, SS Plus
und das andere ist dann einfach nur USB
20. Also das sind ja Sachen,
damit kann ich mich irgendwie anfreunden.
Ja? Damit kann ich mich irgendwie
anfreunden. Das ist doch irgendwie ne,
soll ich sagen, noch ein bisschen
verständlicher. Das Problem,
was ich dabei sehe, ist nur,
dass
der Übertragungsmodus
eigentlich das kleinste Problem,
also nicht der Übertragungsmodus, die
Übertragungsgeschwindigkeit eigentlich das kleinste
Ding bei USB ist.
Übertragungsgeschwindigkeit ist nett und schön und gut
ja und USB 2.0 ist auch ein bisschen langsam
für USB Sticks, aber alles
ab USB 3.0 ist vollkommen in Ordnung.
Das Problem, was ich sehe ist,
dass zu dem
Speed noch ganz viel anderes gehört,
ja? Was sonst noch unterstützt wird.
Also nicht nur welche
Steckertypen gibt's, sondern auch was
wird noch da drüber unterstützt.
USB ist ja schon lange nicht mehr Datenübertragung,
ja? Oder, oder einfach
nur Maus und Tastatur.
USB ist ganz, ist ganz viel mehr.
Mittlerweile sind USB Docking Stations
mit Quick Charge
und allem möglichen drinnen und
Displayport
ist integriert in USB und sowas
und das kannst du anhand
dieser Sache nur sehr schwerlich
erkennen.
Aber sagen wir mal so, die Benahmung ist halt einfach schon wieder
komplett hängen geblieben. Ja.
Ist so. Also jetzt habe ich auch
doppelt Upload. Du bist IT System
Elektroniker bei Telekom.
In der Ausbildung oder fertig?
Und wenn ja, wie lange schon fertig?
IPv6
auf 128 Bits umstellen
und es dann IPv6 nennen, ja das ist
das ist mega pfeifern, ja.
Sollte man machen. Hätte man
vielleicht schon vor 20 Jahren machen sollen.
Doomwalker, danke schön für den Sub.
Das ist ja mein Punkt. Ich gehe davon
aus, dass die irgendwas rückwärtskompatibles
bauen werden mit ganz vielen Hacks.
Ich glaube, ich glaube die sträuben sich
gar nicht so sehr. Viele scheuen
naja doch, man könnte schon sträuben.
Scheuen den
Aufwand.
Und vor allem die
Trennung, dass du intern weiter IPv4
hast und extern IPv6
unterstützen musst. Weil für viele
macht intern die Umstellung auf IPv6
wenig Sinn. Ja, die ganzen
IoT Geräte und alle müssten das können. Das ist halt
schwierig.
Wobei IPv4
in IPv6 gar nicht so
ein großes Problem ist. Aber es ist trotzdem
eklig. Was kopierst
du die ganze Zeit?
Mach mal Ausrufezeichen 1 im Chat.
Da gibt es eine Erklärung zu. Aber ausgeschrieben 1.
USB
ist auch nicht schlecht, ja.
Ich habe auch fast den Eindruck, dass die
420 da drin haben wollten.
Das kann übrigens auch sein, dass ich misserzählt habe,
dass es 4 Kabel sind anstatt 2.
Ja, das kann auch sein.
Ja, da weiß ich das.
Musst du USB-Forum fragen.
Habe ich gelesen, ja. Ah ja, ok.
Ja, ich habe,
ich wäre auch fast
IT-Systemelektroniker geworden.
Aber nachdem ich dann meine MMO-Gammelzeit
hatte, danach gab es fiesi...
Ok, Chat, wir haben es geschafft.
Nice, so, das speichere ich mir mal, falls
wir das irgendwie mal wieder brauchen sollten, wenn wir
das gemale hier. So, Arch,
by the way, gibt es jetzt in den letzten halben Stunden neue
Package-Updates? Bleeding Edge,
Leute, wir haben vor einer Stunde Package-Updates
installiert. Gibt schon wieder neue.
Arch, by the way.
So, dann lasst uns doch mal gucken. Wir haben jetzt
lange genug geschwätzt. Ich merke schon im Hals, ich muss noch ein bisschen
Tee trinken. So einfach ist
Docker. Ja, das gucken wir uns nicht. Was verdient eine Anwältin?
Steuerkanzlei. Ok, das können wir uns angucken.
What if a
glass of water were literally half empty?
Ok, die Dinger sind auch immer nicht schlecht.
420, gute Länge.
Programming language is explained.
14 views. Nein.
Das ist bestimmt irgendein AI-generated
Content. Bugs in CR
skill issues. Da hat er recht.
Neues Fire-Ship-Video.
Lebt man
eigentlich komplett hinterm Mond, wenn man diese Leute
alle nicht kennt? Ein Tag
im Leben eines Software... Alter,
wie viele... Ich guck die Videos gerne,
vor allem, weil da Franz drinnen vorkommt, aber
wie viele dieser Videos will er noch
machen? Franz is Pog.
First Perth in the Age of
Empires 2. Was ist das gemacht?
Das ist bestimmt einfach ein neues Game,
was ein bisschen so aussieht. Das ist bestimmt nicht wirklich
integriert. Hast du das
Jules? Nein, hab ich noch nicht.
Um was geht's?
Huge problem. Massive.
So irgendwas spannendes.
Die Winamp-Geschichte. Ne, nicht
wirklich. Übrigens, ich hab
letztens...
Moment mal, jetzt muss ich mal kurz das Video
raus... Wir gucken uns nur den Anfang an,
dann könnt ihr mal was zu sagen.
Bisschen Gehirn. Das hab ich
schon morgen gesehen. Ich
habe mir die Lösung
im Video angeschaut und ich wäre
nicht darauf gekommen. Ich hatte
eine andere Lösung, die ist aber nicht so gut.
Mal gucken, was
ihr dazu sagt.
Wir hören uns nur den Anfang an und dann
kann der Chat ja mal kurz... Wir machen das auch noch
fünf Minuten. Ich will ja euer Gehirn nicht gleich nach
dem Aufstehen überlasten. Da könnt ihr mal
fünf Minuten zu sagen, was ihr dazu... Ich sag
euch auch, was ich mir gedacht hab.
Hallo zusammen, der König hat ein Problem. In genau
einer Woche findet an seinem Hof...
Hallo zusammen, der König hat ein Problem.
In genau einer Woche findet an seinem
Hof ein großes Fest statt.
In seinem Weinkeller
lagern hundert Fässer mit dem besten
Wein des Landes. Die hat er
eingeplant für dieses Fest.
Dummerweise, erfährt
jetzt von seinem Geheimdienst, ist genau eines
dieser Fässer aber vergiftet worden.
Man weiß nicht welches, aber man kennt
die Wirkung des Giftes.
Wer aus dem Fass trinkt,
wird nach genau sieben Tagen einen
furchtbar hässlichen Ausschlag
im Gesicht haben, der über mehrere
Tage anhält. Das muss also
auf jeden Fall vermieden werden.
Und insofern braucht der König
also jetzt Vorkoster,
die aus den einzelnen Fässern eben probieren.
Die Frage ist, wie viele?
Naja,
machen wir uns die Sache mal klar.
Die Problematik ist die Zeitknappheit.
In einer Woche muss er also
dieses Fass gefunden haben. Und zum anderen
dauert es eben, bis das Gift
seine Wirkung entfaltet, ebenfalls eine Woche.
Also der eine Vorkoster,
den er bereits an seinem Hof beschäftigt,
wird ihm hier nicht weiterhelfen können.
Okay,
Chad, ich sag euch jetzt mal, was ich mir gedacht hab.
Ich hab mir Folgendes
gedacht. Ich hab erstmal drüber
nachgedacht. Ich hab mir gedacht, okay,
die einfachste Variante, also
das Ziel ist ganz klar, man
möchte mit den wenigsten, so wenig wie möglichen
Vorkostern auskommen.
Das erste, was ich mir gedacht hab, ist,
okay, kannst du doch nichts machen, du brauchst
einfach so viele Vorkoster wie Fässer.
Und da hab ich mir gedacht, ja, Moment mal,
Max, das kann aber nicht sein,
weil du kannst ja auch ein Vorkoster
aus mehreren Fässern trinken lassen.
Und ich hab mir dann
überlegt, mal gucken, ob
ihr eine bessere, ich hab das Video geguckt,
ich weiß, wie die es machen am Endeffekt, ja.
Ähm,
und ich hab mir überlegt, wir machen,
wir könnten das folgendes machen,
man nimmt einen Vorkoster,
also man stellt die 100 Fässer in eine
Reihe, man nimmt einen Vorkoster,
der trinkt
alle geraden Fässer.
Und du nimmst einen Vorkoster,
der trinkt alle ungeraden, also
nummerierst die durch, die Fässer, ja.
Du hast einen Vorkoster, der trinkt alle geraden
Fässer, also stellst die in einer Reihe auf,
nummerierst die durch.
Einer trinkt alle geraden Fässer,
und einer trinkt
alle ungeraden Fässer.
Und dann nimmst du noch einen dritten
Vorkoster,
der
trinkt
die erste Hälfte
aller geraden und ungeraden Fässer.
Und da kannst
du sagen, okay,
es bekommt derjenige
Ausschlag,
der die ungeraden Fässer getrunken hat,
und es bekommt derjenige Ausschlag,
der
die erste Hälfte aller Fässer getrunken
hat. Dann weißt du, okay,
es muss
ein ungerades Fass sein
in der ersten Hälfte.
Das heißt, du hast quasi mit drei
Vorkostern, kannst du
zu 75% sagen,
welche Fässer
ähm, giftfrei sind.
Oder besser gesagt, du kriegst mit drei
Vorkostern zu
25%, also du kannst
du kriegst, du kannst quasi 25%
der Fässer kannst du sagen, okay, in diesen
25% muss irgendwo das Gift sein.
Mit nur drei Vorkostern.
Das ist das Beste, was mir eingefallen ist.
Das ist das Beste, was mir eingefallen
ist. Ja.
Weil, wenn keiner einen Ausschlag
kriegt, dann
weißt du, der Geheimdienst hat irgendwelche
irgendwelche komischen
Dinger, irgendwelche komischen Dinger gemacht, ja.
Und wenn nur einer
einen Ausschlag bekommt, dann heißt das,
das Gift muss quasi
in einem geraden Fass sein, aber in der zweiten
Hälfte. Das heißt, du kannst
mit drei Testern, mit drei
Vorkostern kannst du es auf jeden Fall
auf 25% einschränken,
wo das Gift drin ist.
Das heißt, du bist hier zu fün- du hast zu fün-
du kannst 75%
des Weines verfüttern
an deine Gäste. Das ist das Beste,
was mir eingefallen ist mit drei Vorkostern.
Habt ihr, habt ihr irgendeine Idee?
Was er macht am Ende
ist wirklich super nice, da wäre ich nicht
drauf gekommen.
Habt ihr noch irgendeine schlaue Idee?
Hm.
Ich will nur das eine Fass wegwerfen.
Ja, das Ziel ist, rauszubekommen, genau
welches Fass das Gift hat
und
alle anderen will man verwenden, genau.
Also, ich kann euch, ich kann euch zeigen,
wie es gemacht wird, so wie er das in dem
Video sagt. Es ist im Prinzip ganz einfach.
So, 100 in-
du machst das in binär.
Du nummerierst alle Fässer
alle Fässer in binär durch.
Und dort, wo eine 1 steht,
also du bekommst ja dann so, du bekommst ja im Endeffekt,
wenn du es so willst, so eine Matrix raus, ja.
Du machst dann hier Paint.
Ja, du hast hier vorne
mache nicht Paint, ja noch.
Du hast hier vorne quasi die Nummer, die Nummer
der Fässer, 0, 1, 2,
3 und so weiter, so.
Und hier hinten hast du quasi, hast du das
quasi das Ganze, das Ganze in
in binary stehen.
Und das hier,
das hier ist quasi Tester,
Tester,
Tester 1,
Tester 2
und dort, wo eine 1 steht,
binär,
dort dringt der Tester immer.
Versteht man auf,
versteht man auf was das, auf was das rausläuft?
Du kannst quasi
anhand dieser,
dieser Einsen sicher sagen, welches Fass
das ist. Also, du musst jetzt halt nur
gucken, wie viele Stellen brauchst
du binär 100.
Das sind 7 im Endeffekt.
Das Ganze geht dann übrigens auch bis 127.
Also bis 127 könntest du,
127 Fässer kommst du mit 7 Testern
aus, weil du das als binär
repräsentieren kannst, so.
Machen wir es mal in dem Fall, einfach mit 2 Tester,
ja. Okay, 0, 0 ist vielleicht
jetzt nicht so, so.
Das hier übrigens, das müsstest du dann,
das habe ich jetzt, das habe ich jetzt ein bisschen,
ein bisschen doof
nummeriert. Eigentlich müsste das hier,
eigentlich, eigentlich müsstest du das,
das, das,
mal gescheit macht,
eigentlich müsstest du das so machen, dass du es besser erkennst.
Also,
wobei,
ja, ich habe scheiße nummeriert. Ich habe, Arrays
fangen bei 0 an, okay? Das 0.
Fass. Aber ich glaube, man versteht, was ich,
so, wenn, du kannst dem Fass ja auch eine 0 geben,
ist ja auch okay. So, wenn,
wenn beispielsweise
nur der 2. Tester
einen Ausschlag bekommt,
dann ist es dieses Fass. Bekommt nur der 1.
Tester einen Ausschlag, ist es dieses, äh,
ich habe Mist nummeriert.
Ja,
ähm, sagst du mal,
nicht mal das funktioniert richtig,
aber ich glaube, man versteht,
ich glaube, man versteht trotzdem,
ich glaube, man versteht trotzdem,
was gemeint ist, ja?
Also, so, 0 0,
0 1,
1 0,
1 1, okay?
Also, keiner, keiner der Tester
kriegt einen Ausschlag.
Heißt, es muss das 0. Fass sein. Das ist, wobei das
ein doofer Fall ist, ja? Das könnte auch genauso
gut heißen, dass, ähm,
das einfach nicht stimmt, was der Geheimdienst
gesagt hat, ja? Aber in dem Fall ist es einfach,
kriegt nur der 2. Tester einen Ausschlag,
dann ist es das Fass mit der Nummer 1.
Kriegt nur der 1. Tester einen Ausschlag, dann ist es das Fass mit der Nummer 2.
Kriegen beide einen Ausschlag, dann ist es
das Fass mit der Nummer 3. So, und das kannst du jetzt
natürlich weitermachen noch mit, äh,
den, den unterschiedlichsten,
unterschiedlichsten Anzahlen von Testern, ja?
Dann kannst du sagen, hier, das ist Tester
4, aber da müsste ich jetzt halt hier wieder,
das passt jetzt mit der Tabelle
nicht, aber man kann das beliebig weitermachen,
man muss im Endeffekt nur gucken,
wie viele
Binärziffern brauche ich,
dass ich die Zahl der Fässer
noch repräsentieren kann in Binär.
Ja, und mit 7 Stellen ist es
quasi 127.
Oder beziehungsweise, um genau zu sein, ist es
eigentlich 128, weil die 0 zählt ja noch dabei.
Das heißt, so kannst du das, so kannst du das
encoden. Quasi die Stelle der 1er
ist das, wo du nachgucken musst,
wer hat Ausschlag bekommen und wer nicht.
Da wäre ich nicht draufgekommen.
Aber bei einem Fass braucht
es doch gar keinen Tester, oder?
Naja, du könntest, du könntest,
wenn du dir sicher bist, wenn du dir sicher bist,
dass ein Fass
definitiv vergiftet ist, kannst du sagen,
ok, ein Fass habe ich, ein Fass ist definitiv
vergiftet, das ist vergiftet. Aber du könntest
vielleicht ja auch sagen, ok, vielleicht hat der
Geheimdienst einfach nur Mist, keine
Informationen bekommen.
Du weißt das ja nicht.
Ob der Tester besoffen ist oder nicht, ist egal.
Das zählt da nicht.
Ich könnte mir vorstellen,
es gibt vielleicht noch bessere Varianten,
das
zu encoden irgendwie.
Also meine,
ich finde meine Sache war,
für heute Morgen zwei Minuten im Bett überlegt,
gar nicht so verkehrt, oder?
Man kann zumindest zu 75%
sicher sein, oder das stimmt nicht, nicht zu 75%
sicher sein, ist falsch. Man kann sich
sicher sein, dass in 75%
des Weines kein Gift ist.
Das ist doch mit drei Testern gar nicht so
verkehrt. Aber auf diese
Binär-Encoding-Sache bin ich nicht gekommen.
Die ist natürlich besser.
So, haben wir sonst noch irgendwas, was hier...
Nein, das gucken wir nicht.
So einfach ist Docker. In der Tat ist
Docker einfach. Da brauchen wir kein Video zu.
Wobei man sagen muss,
Docker ist die letzten Jahre über, wenn man sich mal
die Command Line anguckt,
teilweise doppeldeutig
geworden. Ja, du hast
Docker-Images, bla bla bla,
du hast Docker PS minus, äh,
PS minus A, LS minus, nee, PS minus A.
Also du hast mehrere Sachen,
die ähnliche Sachen machen und
es ist schon ziemlich komplex geworden
mittlerweile, aber die Basics im Docker,
die sind wirklich easy.
Das kannst du in der Viertelstunde
hier angucken.
Verstehe ich das richtig, dass ich auf meinem Debian das
Nix-Package... Kannst du machen, ja?
Ja, ja, das funktioniert. Du kannst den Nix-Package
meiner Docker auf Debian installieren.
Ich bin mir gar nicht sicher. Habe ich nicht sogar auch hier
Nix installiert? Nee, habe ich nicht.
Das könnte ich machen, ja, das funzt.
Wollen wir das mal ausprobieren, schnell?
Ich habe das... Ups.
Nicht Control-Alt entfernen.
Äh, Snapshot machen.
Ich habe auf meinem anderen,
meinem anderen VM, den ich sonst verwende, habe ich das
installiert. Kannst du machen.
Ich verwende das aber normalerweise.
Unix-Shadow.
Also man könnte, man könnte den Nix-Package-Manager
installieren.
Dann weiß ich aber nicht, wie es weitergeht, ehrlich gesagt.
Nix Arch.
Wir brauchen kein Installations-
Skript. Okay.
Nix-Demon müssen wir enablen.
Add required users to the
Nix-User-Group.
Nutzt du eigentlich Vim oder Nano? Ich benutze, äh,
ich benutze, äh, Vim.
Systemctl
enable nix-demon
Wobei, gibt es nicht
enable-minus-start oder sowas? Nee.
Oder minus-minus-now?
Ah, das gibt es, genau.
Was? Dann zeige uns doch bitte mal
Nextcloud und Subix zusammen in auf
einer Post-Cresta...
Subix in Docker?
Da musst du irgendwie fünf Container
oder so starten.
Aber prinzipiell ist das, ist das
eigentlich kein Ding. Das würde ich allerdings
eher mit einem Docker-Compose-File dann
lösen. Du kannst ohne Probleme
Nextcloud und Subix in einer Post-Crest-Datenbank
verwenden. Brauchst
dann unterschiedliche Daten...
Also, da wüsste ich jetzt...
Also, da müsste ich mir jetzt auch die Config
genau angucken, ja, aber...
Das ist nichts, was ich aus dem Ärmel
schütteln könnte. Ich würde wahrscheinlich ein Docker...
Wenn ich das öfters mal bräuchte, so zum Testen,
würde ich wahrscheinlich ein Docker-Compose-File bauen,
wo das alles drinsteht.
Brauchst ein eigenes Netzwerk
im besten noch dafür.
Also, aus dem Ärmel schütteln kann ich das nicht.
Funzt das jetzt hier?
Nix-Channel-Update.
Permission denied. Aha!
Mein User muss ja auch...
Mein User muss ja auch in die Nix-
User-Group. Muss er das
überhaupt? Unter was
läuft denn diese...
Nix... Seht ihr das irgendwo?
Es läuft als
Root und...
Moment, was... Wem gehört dann dieser
Socket hier?
Root-Root! Ja, geil!
Ich glaube, Nix-User-Gruppe
ist so ne... Wobei, ne, doch, stimmt.
Ha! Tatsächlich!
Ey, was hat denn mein User für ne...
Ah! Alter!
What the fuck? Was tipp ich denn hier so?
Ist mein User da drinne?
Muss ich mich jetzt noch irgendwie ausloggen?
Oder einloggen oder sowas?
Gucken wir mal, ob das jetzt geht.
What the fuck?
Ich bin in
Group...
Ey, warum bin ich nicht in Group?
Hätte ich mich doch mal komplett
ausloggen müssen? Oder...
Warum bin ich nicht in... Warum bin ich nicht in
Group... in Group Nix-User?
Warum net? Chatge?
Warum...
Warum bin ich nicht in Nix-User?
Weil da bin ich ja... Hätte ich mich doch mal
komplett ausloggen müssen, oder?
Ja, jetzt... Jetzt geht's, okay.
Ja, es... Urilog...
Aber, wundert mich...
Wird eigentlich reichen,
aber ne, logisch, ich hab hier die Session
über die Shell gestartet.
Okay. Und jetzt
muss ich was machen? Channel
Update. Achso.
Aha.
Nix-Channel-Add...
Unstable? Ist das
ne gute Idee? Ach komm, YOLO.
Wurscht. Nix-Channel-Update.
Okay.
Usage.
Ey, warum ist die Musik eigentlich aus?
Usage. Nix-Env.
If you install Nix from official
repos, you must add the
bin directory to your path
manually. Okay.
With the shell configured, the following
should install... Okay, das können wir noch machen.
Gibt's denn dieses
Package überhaupt? Nö.
Nix-Env.
Nix-Env install package
hello.
Gibt's das jetzt? Aha.
Okay, das muss in meine
Shell rein.
Und jetzt kann ich hello benutzen, oder was?
Ja. Funst. Easy.
Okay, und was war jetzt deine Frage,
ob du Podman da drüber installieren kannst?
Wie uninstallt man jetzt eigentlich irgendwas?
Nix-Env uninstall hello. Okay.
Cool. So, jetzt haben wir
Nix als Package-Manager. So, was war
hier die Frage ursprünglich? Ich kann mir was, wie,
wo? Dass ich auch mit dem hier Nix
beispielsweise aktuelle Podman-Version
zu bekommen. Ja.
Ja, ja. Ich kenn
mich damit allerdings nicht so wirklich gut aus.
Wie sucht man denn
Nix-Env? Gibt's da irgendwie nen Search oder sowas?
Oder gibt es da
Nix-Package-Search? Gibt's da online
irgendwas? Ah ja, hier.
Podman. Also Podman selbst hab ich jetzt
nicht installiert. Wozu auch? Oh, doch hab ich
nicht. Warum zum Teufel hab ich Podman installiert?
Erstmal wegschmeißen braucht man net.
Benutz ich eh net.
Okay, Podman. Also seht ihr,
ich hab keinen Podman installiert.
Podman, wenn man's richtig schreibt.
Gibt's net. Podman.
Hier gibt's das Ganze.
Nix-Shell?
Ah, this can be used to
try a piece of software
before deciding.
Aha.
Äh, was sind Flakes?
Kein
Plan, ne? So, okay, probier mal. Nix-Env.
Nix-Package.
Podman braucht halt auch noch Netzwerk-Config
und sowas. Ich weiß überhaupt nicht, ob das dann richtig
funzt damit. Aber gucken wir mal.
Wow! Alter! Halbes
Internet am Start, man!
Podman. Funzt.
Okay. Wir gucken
auch mal. Wir gucken auch mal, ob
das, ob das funzt, ja.
Docker Hello Worlds.
Ja, ja, aber mal abwarten.
Mal abwarten, ob das auch wirklich
funzt, ja.
Probieren wir mal.
Äh.
Oder kann man nicht einfach
sagen Ubuntu oder sowas?
22.4?
Äh. Bei Podman muss man
doch die, muss man die, muss man die Registry
angeben, ne? Podman.
Podman Run Hello Worlds.
Muss man doch irgendwie einmal.
Wie gibt man das an?
Wie gibt man hier beispielsweise, macht
man jetzt irgendwie Docker I.O. oder so?
Äh. Ähm.
Wie, wie funzt
denn das?
Wie gibt man da die Registry an?
Use Docker
Registry I.O.
Registry. Ah ja.
How to use
Podman.
Registry. Okay, da braucht man noch irgendeinen
Eintrag. Siehste? Das,
warum ist das schon wieder so kompliziert? Warum kann ich
da nicht einfach?
Das muss man doch garantiert irgendwie so
angeben können, oder?
Podman specify
Registry. Okay.
Auch okay. Latest Fedora.
Es soll mir auch recht sein.
Oder auch nicht. Siehste?
So einfach ist es natürlich wieder nicht.
Und da hören jetzt meine
NixOS Skills auf.
NixOS, das würde
ja bedeuten, oder NixOS oder
NixSkills. Es ist garantiert nicht
ETC. Es ist garantiert nicht ETC
Containers. Es muss, es muss
irgendwas sein hier.
Ja, irgendwie. Irgendwas
geht runter, aber kein Plan.
Da weiß ich jetzt nicht, wie man
das macht. Da muss man jetzt
irgendwie die, ja.
Da muss man jetzt irgendwie
die Config dafür angeben und
kein Plan.
Da, da hören
meine NixSkills auf, wie man
den Kram jetzt modifiziert.
Ja, wahrscheinlich,
wahrscheinlich muss man jetzt irgendwie
hingehen unter NixProfiles
oder so.
Und da dann
was? Kein
Schimmer. Aber wie
uninstallt man denn wieder was?
Wie war das?
Minus, minus uninstall. Okay.
Ja, ja. Aber wo
ist die Datei?
Das habe ich auch schon. Wo ist die Datei?
Das ist ja wahrscheinlich keine
systemweite Datei, sondern irgendwas
nix spezifisches. Aber ich
weiß nicht wo.
Es ist bestimmt nicht einfach hier mein
Heimatverzeichnis, ja. Es ist ja,
es ist, muss irgendwas nix
sein. By the way, warum kann ich das
übrigens,
warum kann ich das übrigens so installieren,
aber nicht
uninstallen? Ne, das
glaube ich nicht, weil, weil
ja nix eigene
Pfade und Sachen immer mitbringt.
Ich glaube nicht, dass es mein normales
nicht mixt, nix.
Achso, okay.
Da hätte ich jetzt vermutet, das muss irgendwas hier unter
nixprofiles oder so sein.
Da blick ich aber nicht
durch, wie das frunzt,
genau. Das muss man, das muss
man bestimmt hier dann, boah,
keine Ahnung. Da bin ich überfragt.
Aber du hast gesehen, prinzipiell funktioniert
das mit dem installieren.
Muss nur gucken, wo die Configs hin müssen.
Vielleicht ist es auch wirklich eine systemweite
Conf, das kann auch sein, ja.
Okay, also was können wir uns
dann hier mal angucken?
Was haben wir denn hier?
Das
Gehalt, also
Deno 2 ist hier, okay.
Wir gucken uns ein Fireship wieder an.
Fireship macht immer POG-Videos.
Sind wir uns einig, oder?
Keck, keck, weh, JavaScript. Hatten wir da nicht
sogar mal ein Emote für?
Keck, doch
haben wir doch irgendwie, oder? Keck,
keck, JavaScript haben wir.
Okay, ich glaube, das war
eines der Sachen, die Deno echt
zurückgehalten hat, auch was so
größere Sachen angeht,
weil die hatten am Anfang ja
keine
eigentliche
Veränderung,
also
keine
Veränderung,
also
am Anfang ja
keine, kein NPM. Und nach dem Gefühl,
jedes JavaScript-Projekt erstmal das halbe
Internet installieren muss über NPM, dass es
funktioniert, war das nichts. Aber ich glaube,
die haben NPM-Support schon eigentlich relativ
lange drinnen. Bilde ich
mir ein. Ich habe Deno nie verwendet.
Wichtig, wichtig.
Wobei, ganz ehrlich, ich bin mir
nicht sicher, ob ich das neue oder das alte
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
Ich habe von BUN schon lange nichts mehr gehört.
Ist BUN überhaupt noch Hype oder schon wieder out?
By the way, das ist auch was, was mich interessiert hier.
Deno TypeScript Single Binary.
Wie Single Binary sind diese Binaries denn?
Also worauf ich raus will ist, wie unabhängig von dem System, auf dem sie kompiliert wurden oder erzeugt wurden, sind sie denn?
Ich kann mir nicht vorstellen, dass sie so unabhängig sind wie ein Go Binary.
Ein Go Binary ist ja wirklich so ziemlich das unabhängigste Binary, was du haben kannst.
Du kannst Go heute auf dem aktuellen Rechner kompilieren und auf jedem Linux Rechner starten.
Seit Kernel 2.6.38.
Deno Single Binary vermute ich mal, die packen einfach die Runtime ein mit irgendeinem Trick und entpacken die Runtime in ein temporäres Verzeichnis und starten das dann.
Dann ist halt die Frage, wie unabhängig das Ganze ist.
Hat das eine Abhängigkeit auf die GLibc Version, auf dem System, wo man es kompiliert?
Was im Endeffekt heißt, auf älteren DIN-Unternehmen.
Funktioniert das System dann richtig?
Das würde mich tatsächlich interessieren, weil ich bin immer daran interessiert, neue Möglichkeiten Single Binary Tools zu entwickeln.
Nebar Go.
Mit .NET kommt man mittlerweile auch erstaunlich weit, aber noch nicht so schön wie mit Go.
Weil das Schöne an Go Binaries oder an Go Programmen ist, die kompilierst du und sie laufen einfach auf jedem Linux der letzten 15 Jahre.
Wenn du GLibc Probleme mit Go hast, dann hast du es nicht richtig kompiliert.
Dann hast du C-Go eingeschaltet oder sonst was.
Also wenn du es mit, also wenn du, ich weiß ja nicht, vielleicht hast du Upper Independencies gehabt, die C-Go brauchen.
Dann hast du Probleme.
Aber du kannst mal explizit setzen, du kannst mal explizit setzen, C-Go gleich No beim Kompilieren.
Dann hast du einen Go Binary, was...
...nix mit GLibc zu tun hat, lauffähig ist seit jedem Linux seit 2.6.38.
Ja, wenn die Leute das richtig...
.NET Self-Contained läuft doch ganz gut.
Ja!
Also du kannst .NET Self-Contained ja auf mehrere Arten machen.
Du kannst Self-Contained Executables machen, was die Runtime einpackt oder Ahead-of-Time kompilieren.
Ahead-of-Time kompilieren ist gar...
Also, no.
Frag mich nicht, warum du jetzt Ahead-of-Time...
Normales Kompilieren halt, ja?
Ohne Runtime einpacken und JIT und Gedöns.
Das hat halt den Vorteil, dass es startet schön schnell.
Und...
...ist aber halt abhängig...
...gegen das System, also von dem System, auf dem du es kompilierst.
Du kannst, also wenn man mal .NET nimmt und sagt, man macht .NET normales .NET, wir kompilieren Ahead-of-Time in ein Binary.
Dann ist dieses Binary abhängig...
...von dem System, auf dem du kompilierst.
Zum Beispiel von der GLIB-C-Version des Systems.
Das heißt, wenn du es kompilierst, kannst du es nur auf Systemen starten, die eine neuere GLIB-C-Version haben, als das System, auf dem du es kompiliert hast.
Deswegen, ich hab da mal was gebaut hier, vor M-Champ.
Hab ich schon lange nichts mehr dran gemacht, ich weiß.
Aber, das Ding hab ich kompiliert auf nem...
...CentOS 7.
Auf nem CentOS 7.
Und das liegt daran...
...weil das das Älteste...
...und hier ist, hier ist, äh, die...
...Publish.AOT, ja, wie es kompiliert wird.
Weil CentOS 7...
...das älteste Betriebssystem ist...
...auf dem du .NET noch installieren kannst, konntest, konntest damals, ja.
Das älteste System, auf dem du .NET noch installieren konntest...
...um da Binarys zu erzeugen.
So, und das ist, CentOS 7 ist so alt...
...dass jedes irgendwie nennenswerte Betriebssystem neuere...
...Gelibc-Versionen und Library-Versionen hat, als CentOS 7.
Und dementsprechend lief dieses Binary halt auch auf...
...ja, das, das lief quasi auf allen Linux-Systemen der letzten 14, äh, der letzten 10 Jahre.
Das war, moin, ja, ich, ich war mittlerweile nicht mehr on, das stimmt, ja, da hast du schon recht.
Der letzten 10 Jahre, das hat mir gereicht.
So, und die normale .NET Self-Contained-Geschichte, also mit eingebauter, mit eingebauter Runtime...
...die läuft auch gar nicht so lang rückwirkend.
Die haben ne...
...Kompatibilitätsliste, .NET Minimum Requirements, ähm, ja, das ist ein bissl, äh, bisschen doof, bisschen doof geschrieben.
Ja, guck, die gehen offiziell nur zurück bis Ubuntu 20.04.NET 8.
Also du kannst quasi ne Self-Contained .NET, da muss man halt wirklich mal gucken, ob das auch stimmt, ob man das nicht auf nem Ubuntu 18.04 oder so auch kompilieren könne.
Also, das heißt, du könnt...
...ne Self-Contained .NET Anwendung mit diesem normalen Single, Single Binary Build läuft nur auf Linux-Systemen, die mindestens, also die, die höchstens 4 Jahre alt sind, ungefähr, ja.
Also du könntest beispielsweise mit ner ganz, ganz aktuellen unter Ubuntu kompilierten Self-Contained .NET Anwendung schon Probleme kriegen, die unter Red Hat 8 laufen zu lassen.
Ich würd's wahrscheinlich unter Red Hat 8 kompilieren, weil das am ältesten ist.
Das ist halt alles ein bissl doof.
Ja, dass man auf solche Sachen da achten muss, das hast du bei Go halt nicht.
Bei Go ist ein Go-Binary ohne C-Go lauffähig die letzten 20 Jahre, egal auf welchem Linux.
Und ich hab noch nichts anderes gefunden, was so, wo das so gut ist und so kompatibel Self-Contained Binarys, wo man sich so wenig Gedanken zu machen muss, wie bei Go.
Wie gesagt, mit .NET kommt man schon ganz gut weit, gerade wenn man das auf möglichst alten Systemen dann erzeugt, seine Binarys.
Aber...
So schön wie Go ist es nicht.
Und deswegen würd mich halt interessieren, wie das bei Deno ist, ja.
Also ob Deno das irgendwie hinbekommt, dass das auch so ähnlich ist wie bei Go oder eher wie bei .NET.
Ich vermute, dass es eher so ist wie bei .NET.
Das heißt, wenn du nen Binary erzeugst auf nem aktuellen Rechner und willst es auf den Server kopieren, kannst du durchaus sein, dass du sagst, oh nee, geht nicht, weil GLC-Version zu alt oder sowas.
Wer nutzt schon so alte Systeme?
Naja, naja, CentOS 8.
Beziehungsweise Red Hat 8, muss man ja sagen.
Red Hat 8 ist jetzt schon ein bisschen älter, aber ist im Enterprise-Umfeld, würd ich sagen, immer noch mit das eines der verbreitetsten Server-Betriebssysteme.
Eigentlich, wann das rauskam.
Red Hat 8.
Ja, 2000, 2019, so irgendwie.
2019.
Lucky, Luke, danke schön für den Sub.
Pog.
Exzellent.
Das ist sehr...
Nice.
Ja.
Ja.
Übrigens.
Hab ich auch auf der Arbeit gemacht, ein Go-Binary in ein Distroless-Image.
Das Image war dann am Ende, frag mich nicht, irgendwie 12 MB groß oder sowas.
Aber es ist übrigens, Distroless ist richtig dumme Bezeichnung.
Wenn ich sowas höre wie Distroless-Debian, habt ihr da nicht auch irgendwie so nen Blocker im Kopf, der euch sagt, das kann nicht sein?
Distroless-Debian.
Was soll das sein?
Ist das ein Debian oder ist es Distroless?
Distroless ist sau doof.
Warum?
Ja, ist so.
Hattest du nicht sogar Probleme bei deiner TV-Anwendung bei .NET und Linux?
Ähm, ja.
Aber das ging dann, wenn man es auf einem alt genugeren System kompiliert.
Wobei, nee, nee, nee.
Moment, das Problem mit .NET bei der TV-Anwendung war, weil diese Box so ne merkwürdige Architektur hatte, war doch das Problem, oder?
Ich erinnere mich dunkel.
Ich hab nochmal ein Webinterface für mein...
...DVBC-Receiver gebaut, vor ner Weile.
Ich hab nen DVBC-Receiver, auf dem Linux läuft, auf dem man sich per SSH einloggen kann.
Wenn ihr mir nicht glaubt, ich zeig's euch.
Ich muss mir nur grad die IP raussuchen, weil...
Äh, DHCP-Server, Leases...
Ja.
Ähm...
Das ist mein...
Das ist mein, ähm...
TV...
Äh, DVBC-Receiver im Wohnzimmer.
Da läuft Linux drauf, und man kann sich per SSH drauf verbinden.
Was hat der da grad alles im...
Habt ihr grad gesehen, was hat der da grad im Hintergrund gestartet?
Moment, Moment, Moment.
Da hab ich...
Ich hab da grad mehr gesehen, als...
Was hat man da alles gesehen?
Das muss ich jetzt mal checken.
Sekunde.
Ich, ich, ich stalk...
Ich stalk mich jetzt selbst.
Wobblons.
Twitch.
Man hat's ja, man hat's ja im Hin...
Interessiert mich jetzt.
Jaja.
Was, was der da...
Bahatop.
Was der Bahatop da aufmacht.
Im Hintergrund.
Okay.
Frag mich nicht, warum die jetzt...
Head of Time.
Oh, ist das noch nicht drauf?
Wie jetzt?
Alter.
Twitch.
Kack.
Twitch.
Alter.
Ich will meinen eigenen Stream an gucken.
Vielleicht hätte ich's klippen sollen.
Ah, es geht nicht.
Krass da aus.
Ich will wissen, was der jetzt angezeigt hat.
Twitch, Twitch checkt's wieder nicht, ey.
Wir refreshen...
Wir refreshen einfach noch ein paar Mal, dann hilft das.
Aber ich hab Haartop.
Ich hab Haartop aufgemacht.
Hat er irgendwie...
Irgendwas anderes.
Das hat mich...
Das verwirrt mich.
Ich vermute die große Receiver-Verschwörung hier.
Okay.
Hier.
Okay.
Jetzt.
What?
Eben waren wir doch schon weiter, Mann.
Twitch, Alter.
Schock mich nicht.
Was soll das?
Twitch will nicht, dass ich mir angucke, was da ist, ey.
Sag doch, große...
Große TV-Receiver-Verschwörung.
Große TV-Receiver-Verschwörung, Mann.
Twitch steckt...
Die steckt unter einer Decke.
Okay.
Pass auf.
Pass auf.
Pass auf.
Kann man sich das...
Kann man sich das noch angucken mit VLC?
Noch nicht in höherer Auflösung verfügbar.
Das ist es, Chat.
Ihr seid fivehead, Mann.
Wir müssen das Ganze...
Wir müssen das Ganze uns einfach angucken in 360p.
Dann geht's bestimmt.
Twitch.
The fuck?
Okay.
Neues privates Feld...
Ich will das jetzt rauskriegen, Mann.
Die stecken alle unter einer Decke.
Okay.
Zack.
Videos.
Vor zwei Stunden.
Guck mal.
Okay.
Okay.
Okay.
Okay.
Okay.
Achtung.
Achtung.
Postchamp.
Postchamp.
Postchamp.
Okay.
Postchamp.
Einloggen.
Okay.
Okay.
Okay.
Und jetzt?
Unaim hab ich gemacht.
Genau.
Genau.
Genau.
Genau.
H-Top kommt jetzt, Max.
H-Top.
Jetzt muss ich tippen.
Max, tipp.
Tipp.
Ja, okay.
Langsam.
Fuck.
Ich war zu langsam.
Kann man hier...
Einzelne Bilder vor- und zurückspulen?
Ja.
Mal 0,5.
Postchamp.
Okay.
Guck mal.
Guck mal, wie lahm ich tippe.
Moment.
Er zeigt meine...
Warum zeigt mein Terminal meine Shell?
Ich glaub, das war einfach nur ein Bug im Terminal.
Kann das sein?
Der hat einfach nur Mist angezeigt von vorher.
Der hat einfach nur Mist angezeigt von vorher.
Wie?
Fuck.
Okay.
War doch nicht die große Verschwörung.
Es wurde einfach gar nichts angezeigt.
Es war ein Bug im Terminal.
Keck, wait.
So, zumindest...
Das ist mein Linux-Receiver.
Ja.
Mein DVB-C-Receiver.
Mit Linux drauf, auf dem ich mich einloggen kann per SSH.
Das wollte ich sagen.
Ja.
Und dafür...
Und dafür hab ich mal mit .NET ein Programm gebaut.
Und das Problem war diese komische Architektur hier.
Das ist Leaf.
Die große Verschwörung will, dass du glaubst, dass es nur eine kleine Verschwörung ist.
Ja, shit.
Kann sein.
Jetzt haben wir gelitten.
Ja, Go hat wirre Sachen.
Ich blick da auch nicht alles.
Ich mag Go auch als Sprache nicht sonderlich gern.
Aber für solche Single-Binaries ist das das Beste.
Äh, GLIB-C ist für Go überhaupt nicht relevant, wenn du es ohne Go kompilierst.
Go ist rückwärtskompatibel, meines Wissens nach.
Das hat auch mit CentOS 7...
Na gut, CentOS 5 kann sein.
Meines Wissens nach ist der Mindestkernel für Go 2.6.38.
Go-Lang-Minimum-Kernel.
Okay, 2.6.32 sogar.
Okay, was hat das CentOS 5 für einen Kernel?
2... 2.6.18.
Okay, das ist nicht supported.
Aber ganz ehrlich, 2.6. war Release-Date...
Dezember 2009.
Ganz ehrlich, das reicht mir.
Das sind 15 Jahre.
Das ist okay.
Also da kannst du dir ziemlich sicher sein, der shit läuft auf jedem Linux, was dir heute so unterkommt.
Bei meinem alten Arbeitgeber gab es...
Ein Red Hat 6 getarnt als Red Hat 4.
Und das hieß wirklich so.
Red Hat 6 getarnt als Red Hat 4.
Das war ein altes Warenwirtschaftssystem, was gar nicht mehr betrieben werden durfte.
Aber manchmal musste trotzdem noch drauf geguckt werden.
Und damit das alte Warenwirtschaftssystem überhaupt lief, das hat nach ETC Red Hat Release geguckt,
musste da Red Hat 4 drinne stehen.
Wir haben damals ein Red Hat 6 installiert, weil es das älteste war, was wir hatten.
Und haben ihn die Release...
Datei reingeschrieben, dass es ein Red Hat 4 ist.
Das war ein Red Hat 6 als Red Hat 4 getarnt.
Also das stand auch da so dran.
Und dann ging das.
Und das durfte laut Security-Vorgaben nicht mehr betrieben werden.
Deswegen musste das System immer On-Demand eingeschaltet werden.
Also irgendjemand musste was Altes im Warenwirtschaftssystem gucken.
Der hat angerufen bei uns.
Wir haben das hochgefahren, die VM.
Der hat sich eingeloggt, hat geguckt und wir haben es wieder ausgeschaltet.
Ganz grausame Sache, ne?
Ja stimmt, aber warum ist...
Achso, warum das Naming...
Das Naming ist doof.
Ja das stimmt, das Naming ist richtig doof.
Das hab ich mal...
Das hab ich mal irgendwo...
Hab ich das mal gelie...
Ich glaub ich sogar hab ich mal irgendwo einen Konferenztalk zugesehen.
Rett heraus, danke schön für den Sub.
Gibt es überall so Dinger.
So eigentlich...
Eigentlich wollten wir das Deno-Video gucken von Fireship.
Wir fangen nochmal von vorne an.
All the best programmers in the world love Javascript.
While all the worst programmers in the world love to hate Javascript.
I don't understand why that is, because I'm a hater myself.
But today the Javascript world just leveled up big time with the release of Deno 2.
Many people thought Deno was about to go extinct after it was hit by an asteroid named Bun.
But now it's back with a vengeance and provides the most polished back-end Javascript experience in the world.
Not only is it now backwards compatible with Node.js and NPM,
but most importantly it's got a new logo that can dramatically improve the quality of your code.
In today's video we'll break down all of its new features
and find out if it's finally time to take Node.js behind the barn.
It is September 24th, 2020.
Das Gute an Node.js ist ja letztendlich einfach die Verbreitung.
Und dass sich die Leute darauf eingeschaut haben.
Und dass sich die Leute darauf eingeschaut haben.
Ich habe meine Zweifel, ob Deno oder Bun das jemals ablösen können.
Vielleicht für kurze Sachen zum Ausprobieren auf Entwicklerkisten und so.
Ja gut, alles klar.
Aber so...
Dann im Endeffekt Production-Ready-Image mit Ding...
Ich glaube, da wird es uns auf längere Zeit Node.js erhalten bleiben.
Weil es gibt doch sicherlich...
Ich kenne mich damit nicht aus.
Ich mache da zu wenig mit.
Ich habe Deno auch noch nie ausprobiert.
Aber es gibt doch sicherlich mittlerweile auch einige Inkompatibilitäten zwischen Deno und Node.
...24 and you're watching the Code Report.
A lot of people make fun of JavaScript because it has multiple competing server runtimes
like Node, Deno and Bun.
When really it should have zero runtimes and only ever be used in the browser to trigger pop-up ads.
But competition is good.
Gibt es nicht auch so.
And even languages like Python have CPython, PyPy and RustPython.
And C++ has multiple compilers like GCC and Clang.
For over a decade, Node.js...
...was the only game in town.
But then one day, its original creator, Ryan Dahl, realized that it was all f***ed up
and decided to shift the letters around to create a new runtime called Deno.
The killer feature on the first iteration was TypeScript support out of the box.
You could create a TS file and run it with no TS config or compile stuff.
War das nicht so, dass in Bun TypeScript support ziemlicher fake ist?
Ich bilde mir ein, dass mal irgendwo gehört oder gelesen zu haben,
dass TypeScript support in Bun eigentlich nur ist,
wir remove'n alle Typen.
Also, du kriegst keine gescheiten Errors oder sonst was.
Bei Deno weiß ich nicht.
...required.
But nowadays you can even do that in Node.js.
So why didn't everybody just drop Node.js and switch to Deno four years ago?
The problem is that it wasn't fully compatible with Node.js and NPM.
Many of your favorite packages just wouldn't work.
That motivated a new...
Das ist das wichtigste Package überhaupt.
Is odd, is even.
300.000 weekly downloads.
Also, böse Zungen würden jetzt behaupten,
man könnte eine Zahl beispielsweise durch zwei teilen und gucken,
ob es einen Rest gibt und solche Geschichten.
Aber das ist JavaScript, so einfach ist das Ganze natürlich nicht.
You run time called Bun to come out of nowhere
and seize the opportunity to not only provide TypeScript support,
but also NPM compatibility.
Well, now Deno 2 is thrown the ground...
Das ist doch ein Meme, nein, nein, nein, das ist kein...
Das ist kein, das ist kein Meme.
Das gibt es.
Das gibt es schon lange.
Und wenn wir uns den Source Code angucken,
155, wenn wir uns den Source Code angucken von is even,
werden wir feststellen, is even required is odd.
Um dann zu sagen, even is not odd.
Also gerade ist nicht ungerade.
Das ist das Einzige, was dieses Package macht.
So, dann gucken wir uns das Package an.
Allein schon der Organisationsname.
So, Index.js.
Hier.
Das ist the way...
Ach, Moment, is number wird auch noch required.
Is...
Ach, du Scheiße!
Wollt ihr mich verarschen?
Is number hat 68 Millionen Downloads die Woche.
Keck JavaScript.
Alter!
Fuck!
Required?
Okay, das required glücklicherweise nix mehr.
Ich glaub denn auch nix.
Cyber 95.
Machen die das als Meme?
Nein!
Das benutzen wirklich viele Projekte.
Is number, is, is, is even.
Also, das heißt, wenn du das Paket is even verwendest,
hast du schon mal drei Dependencies.
Du, is even hat ne Dependency auf is odd,
is odd hat ne Dependency auf is number.
Is number hat glücklicherweise nur drei, zwei,
naja, fünf Zeilen Code und hat keine Dependencies.
Jetzt, jetzt...
Jetzt, jetzt, man kann sich da drüber lustig machen, ja?
Aber ich möchte jetzt mal auf ein Problem hinweisen.
Das es tatsächlich gibt, was wirklich ein großes Problem ist.
Stellt euch mal vor, ähm, der GitHub-Account von John Schlinkert kommt irgendwie in falsche Hände und jemand ändert das hier.
Macht, äh, 7.0.1 Release und, äh, trägt hier irgendwas sehr unvorteilhaftes ein.
Ja.
Ja.
Ja.
Ja.
Ist ja nicht so, als ist das nicht schon vorgekommen.
Dann haben, nicht auf einen Schlag, weil, meistens sind die Dependencies ja gelockt,
aber dann haben doch relativ schnell wahrscheinlich relativ viele Leute,
ein Krypto-Miner oder irgendwas, was auch immer da passiert dann drauf.
Wenn wir jetzt relativ schnell merken, aber ihr seht, das ist schon problematisch, diese, diese...
30 Milliarden Dependencies und du kannst überhaupt nicht mehr durchblicken, was da eigentlich passiert.
So, jetzt gucken wir mal weiter.
Let down Yeti provide TypeScript support, but also NPM compatibility.
Well, now Deno2,
has thrown the gauntlet down yet again, by providing full backwards compatibility with
Node and NPM.
Like, check this out.
I have a basic API written in ExpressJS in plain JavaScript.
One easy way to take advantage of Deno right away is to run Lint, which will have it scan
my code and tell me what sucks about it.
You can forget about ESLint.
Or run Deno format and forget about Prettier.
Or better yet, I can start writing better code by switching to TypeScript, by simply
changing the file extension to .ts.
Then instead of NPM run, I use Deno run and the code rest...
Also das Ding ist...
Könnte ich mit Deno...
Beispielsweise eine SvelteKit-App entwickeln.
Für uns ist das soweit kompatibel.
Das müsste man echt mal ausprobieren.
...perfectly without having to mess around with the ts-config.
And Deno also forces us to give the script proper permissions to access the network.
That's pretty cool, but Deno2 now also fully understands the packaged JSON file.
And it can even work with monorepos using...
Wir probieren das echt aus.
Ich habe hier auf dem Desktop einige Dateien gespeichert.
Die definitiv nicht...
...für diesen Account gedacht sind.
Warum habe ich das gemacht?
Habe ich Mist gespeichert?
...Stream-Themen.
Das ist auf jeden Fall hierfür gedacht.
Das war für eine Krankenversicherung, wo ich was geguckt habe.
Da gucken wir aber jetzt nicht rein, weil mir war gar nicht bewusst, dass ich Dinge hier gespeichert habe.
Was war denn Deno?
...NPM-Workspaces.
Und das ist riesig, wenn du jemand bist, der Deno benutzen möchte.
Aber du wirst niemals die Technik wegschmeißen.
Du wirst immer noch die Technik von deinem Existenzprojekt nutzen.
Weil du jetzt Deno installieren kannst.
Und es funktioniert mit jedem Package und Metaframework wie Next.js, Svelte und so weiter.
Aber du musst auch wissen, dass Deno seine eigene Package-Registrierung, die JSR heißt, hat.
Wobei jeder Package dort natively TypeScript unterstützt.
Aber eines der Hauptziele des Run-Times ist es, dass du weniger Packages installieren kannst.
Weil du keine mehr Packages in deinem Node-Modul, Mining-Bitcoin-Folder oder in deinem Maschinen für Ransom brauchst.
In Deno2 ist die Standard-Library vollständig.
Und die Bedürfnisse für Tools wie Jest für Testen, Chalk...
Das finde ich in der Tat cool.
Kommt bald wieder ein Video...
Ja, ich habe eine riesen Liste mit Themen.
Aber irgendwie gerade so unmotiviert.
Was YouTube angeht.
Ich wollte ja mal...
Ich habe ja schon viele Videos versprochen.
Also zumindest wie es jetzt im neuen Job läuft nach über einem Jahr.
Beziehungsweise wie es mit Kohle aussieht.
Muss ich mal wieder ein Update machen.
Habe ich ja gesagt, mache ich einmal im Jahr.
Ist schon ein bisschen...
Schon zwei Jahre her.
Das finde ich wirklich mega nice bei Deno.
Dass sie jetzt eine deutlich umfangreichere Standard-Library haben als Node.
Und du nicht 30.000 Dependencies brauchst.
Da habe ich halt meine Zweifel,
wie rückwärtskompatibel das ist.
Wollen wir das mal ausprobieren?
Das probieren wir jetzt gleich nochmal aus.
Scheiß drauf.
Den Deno.
Das interessiert mich.
Wobei, ne, ne, ne, Leute.
Das machen wir im nächsten Stream.
Im nächsten Stream machen wir auch Single Binary rückwärts lauffähig.
Ne, das machen wir nicht jetzt.
Das machen wir im nächsten Stream.
Das interessiert mich in der Tat sehr.
Wie rückwärtskompatibel...
Also morgen.
Vielleicht doch heute Abend.
Oder morgen.
Ja.
Cool.
Ja.
Oh, jetzt kannst du,
jetzt kannst du JavaScript-Notebooks bauen.
Fuck.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Ja.
Die Dino hört sich auch gut an. Ich bin halt skeptisch, wie gut wirklich die Kompatibilität ist zwischen Node, weil im Prinzip werden alle Packages immer noch hauptsächlich für Node entwickelt. Ich finde auch, dass sich das gut anhört. Ich glaube, das müssen wir mal ausprobieren.
Ich frage mich halt, ob man mit Dino alleine auskommt, weil, wahrgenommen, ich will eine SvelteKit App entwickeln, nur mit Dino. Okay, das mag CLI-mäßig funktionieren, aber spätestens Visual Studio Code wird wahrscheinlich Probleme bekommen, wenn ich kein TypeScript oder TypeScript können wir mal weglassen, wenn ich kein Node installiert habe mit seinem ganzen Zeug, was die Plugins da machen wollen, vermute ich.
Ne, ne, ne, UI-Sachen sind mit Dino nicht drin. Da brauchst du was wie Elektron. Und Elektron enthält ja auch quasi Chrome und Node. Mit Dino kannst du wahrscheinlich keine GUIs entwickeln. Ich meine, du kannst theoretisch mit jeder Sprache GUIs entwickeln, wenn du es halt Low-Level machen willst.
Du kannst dir beispielsweise irgendein... Wie heißt das Ding?
Image, UI, GitHub oder so. Ja, du kannst dir hier sowas C-mäßiges schnappen und das aus jeder Sprache ansprechen und sowas, aber schön ist es nicht.
Oder du kannst auch... Du kannst auch GTK... Gibt bestimmt GTK-Bindings für JavaScript und sowas. Aber schön ist es nicht.
Generell, es gibt eh wenige Sprachen.
In denen UI-Entwicklung schön ist.
Mir fällt keiner ein.
In welcher Sprache... Okay.
Vielleicht, ganz ehrlich, vielleicht, vielleicht tatsächlich Flutter, beziehungsweise... Wie heißt das? Dart?
Da bin ich mir aber nicht sicher. Das habe ich nie großartig verwendet.
Da habe ich nur mal sowas ganz Kleines mitgebastelt. Das war schon in Ordnung.
Wobei das auf dem Desktop nicht so schön ist.
In welcher Sprache ist Desktop-UI-Entwicklung schön?
Ganz ehrlich, so oldschool und blöd das klingt, für Kleinkram würde ich immer noch sagen .NET und Windows Forms.
Ansonsten, Avalonia ist auch ganz gut. Ich mag aber halt diese ganze XML-Geschichte nicht. Ich fand die schon bei WPF scheiße.
Qt ist gut, aber C++.
Ja, und ich weiß, du kannst das aus anderen Sprachen verwenden.
Aber sobald du ein bisschen mehr machen willst...
Früher oder später C++.
Die einfachste Sache für UIs heutzutage ist tatsächlich Elektron.
Weil dann hast du nämlich eine Webseite und die verpackst du einfach in eine Desktop-App und du hast alles in einem.
Du hast quasi eine Mobile-App, eine Desktop-App und eine Webseite.
Aber ich hasse Elektron. Aber ich glaube, Elektron ist im Gesamtpaket echt immer noch das Einfachste, was man zurzeit machen kann.
Und dann auf Endo danach.
Und er wird das immer weiter machen, bis er es erreicht hat.
Und er wird das immer weiter machen, bis er es erreicht hat.
Und er wird das immer weiter machen, bis er es erreicht hat.
Und dann auf Endo danach.
Und dann auf Endo danach.
Und dann auf Endo danach.
Und dann auf Endo danach.
Und dann auf Endo danach.
Das war Bescheid.
Habt ihr das Video vom Krieger gesehen mit dem Schlaganfall?
Richtig krass, oder?
Da sieht man mal, wie schnell's vorbei sein kann.
Da sieht man mal, wie schnell's vorbei sein kann.
Und er hat noch echt Glück gehabt, ja.
Und er hat noch echt Glück gehabt, ja.
Freie RAM-Slots?
Freie RAM-Slots?
Probleme.
Wie freie RAM-Slots Probleme verursachen.
Der Auer.
Das guck ich dir mal gerne an.
Chatge?
Äh, ich muss mal ganz kurz...
Probleme verursachen.
Der Auer.
Chatge?
Äh, ich muss mal ganz kurz
pinkeln. Ich bin gleich wieder da.
Ich bin am Start.
Max, warst du bei Sammy? Nein, war ich
nicht. Ich hab gar nicht nachgeguckt, wie Sammy
geht. Ich hab nur die Operation
von Sammy bezahlt und mich
erkundigt, ob alles gut gelaufen ist.
Ich hab mir noch nicht mal eine Spendenquittung
oder so geben lassen.
Ich sollte den wirklich mal schreiben.
Ich bräuchte Hilfe bei Auszubildenden.
Folter. ES-Lint?
Boah.
Was kann ich noch einsetzen?
Jede Menge. Aber da helfe ich dir
nicht bei. Sag ich nicht.
So viel, dass die meisten
Leute mich für bescheuert halten würden, aber
das ist meine Kohle.
Ist mit Elektron dann auch
normaler Systemzugriff möglich?
Ähm, wie man es mit
.NET oder sonst auch hat?
Oder ist man da generell komplett auf...
Jaja, das geht. Das ist ja gerade das Schöne
an Elektron. Elektron ist eine
Kombination aus einem Browser für UI
und Node.js
für Backend,
könnte man so sagen, quasi.
Mit Node.js hast du Zugriff auf alles,
was du auf dem Computer so machen willst
und das UI
malst du halt mit dem Browser.
Und Elektron hat ja dann auch
Aufrufe
drin, wie du quasi dann von
dem Browser auf die Node.js-Komponenten
zugreifen kannst, mit denen du dann betriebssystemmäßig
alles machen kannst.
Naja, das geht.
Der Node.js-Part von Elektron
kann auf alles zugreifen,
betriebssystemmäßig.
Natürlich nicht so schön wie in .NET,
wenn so Windows-Sachen geht, weil vieles
ja da schon eingebaut ist. Mit Node musst du
dann halt vieles manuell machen.
Aber das geht, jaja.
Also du kannst beispielsweise eine
Elektron-Anwendung bauen,
die, sagen wir mal,
Registry-Einträge anlegt.
Ja, das würde funktionieren.
Warum auch immer man das in der Kombination
machen sollte, weiß ich nicht.
Aber gehen tut's.
Mit Rust hat man auch recht viele GUI-Möglichkeiten.
Ich habe noch nichts gesehen, was mir gefallen hat.
Also ich meine damit jetzt nicht optisch von dem GUI,
sondern irgendwie, wo ich mir gedacht habe, oh ja,
das will ich mal verwenden.
Weil ganz ehrlich, das Problem bei
UI-Frameworks ist, dass die meisten
UI-Frameworks schnell sind
am Anfang, so die Basic-Elemente
bereitzustellen, ja, Fenster,
Buttons, Text-Input oder sonst was.
Aber ein komplettes,
wirklich gut integriertes
und, ja,
fully-featured UI-Framework zu machen
ist nahezu
ein Ding der Unmöglichkeit für ein paar
Entwickler. Und ich bin eh der Meinung,
UI-Frameworks sind nur gut, wenn sie
Controls selber malen, nicht wenn sie
Controls verwenden, die es schon gibt.
Also zum Beispiel die ganzen UI-Frameworks,
zum Beispiel auch Dings hier von Microsoft,
Maui von Microsoft, finde ich aus
dem Punkt, aus diesem Gesichtspunkt einfach
nur Schrott.
Ein ordentliches UI-Framework muss
Controls selber malen.
Sobald du Controls wiederverwendest,
die das Betriebssystem zur Verfügung stellt,
bist du auf, hast du ganz
viele eklige Sachen so. Entweder
bist du auf den kleinsten gemeinsamen Nenner festgelegt
oder du musst trotzdem wieder
viel plattformabhängigen Code
programmieren, weil unter
macOS beispielsweise einen
Progress-Balken das kann, unter Windows kann
ein Progress-Balken das oder ein Button da
dieses und unter Linux-GTK kann ein Button
wieder was anderes. Also
UI-Frameworks müssen die
Controls selbst malen, sonst kann es nicht so gut sein.
Da kannst du alles knicken, ist meine Meinung dazu.
Und da gibt es gar nicht
mal so viele, weil das eben ein riesen,
ein Fass ohne Boden ist.
Habe ich gelesen, habe ich auch auf GitHub
schon gesehen, habe ich noch nicht ausprobiert.
Elektron ist
ziemlich out-of-the-box-plattform-unabhängig.
Sobald du natürlich
im Node.js-Part
plattformabhängige Sachen machst, dann
nicht. Also wenn du
Node.js-Registry-Einträge anlegst,
geht das unter Linux nicht.
Aber der GUI-Part ist
out-of-the-box
Cross-Plattform. Was ja auch der
Vorteil ist, weil ein Browser malt
alles selbst auf jeder Plattform. Du bist nicht
davon abhängig, dass ein Button
oder eine Textbox unter Windows
und Linux und Mac das gleiche kann.
Weil das ist eine eigene
Textbox, die kann unter allen Betriebssystemen das gleiche.
Also C-Sharp
ist für Windows-UIs tatsächlich
nicht verkehrt.
Wenn es was Einfaches sein soll,
nimm .NET
und Windows Forms.
Das ist das Einfachste und Simpelste, was es geht.
Das sieht out-of-the-box nicht schön aus.
Es sieht nie richtig schön aus.
Man kann es ein bisschen hübscher machen.
Aber Windows Forms ist nach wie vor mit Abstand
das Simpelste und Einfachste, was du machen kannst.
Sobald es Cross-Plattform
sein soll,
ja,
so was richtig, wirklich
Gutes, wo ich sagen würde, jawohl,
Cross-Plattform, all-in-one,
alles ist super, vielleicht noch Apps,
fällt mir nicht ein.
Also du hast einmal,
sowas wie
Flutter und Dart.
Das ist dann aber
eher auf Mobile ausgelegt.
Da sieht man auch die UIs an.
Und Flutter auf dem Desktop
hat immer noch, meines Wissens nach,
Probleme. Ich habe es eine Weile nicht mehr ausprobiert.
Dann hast du ein bisschen
Desktop-zentriertere Sachen,
sowas wie Avalonia
zum Beispiel. Also wenn du C-Sharp
programmieren willst, ist das
wahrscheinlich dein bester,
deiner besten,
Möglichkeit.
Das ist quasi ein Cross-Plattform-WPF.
Ja, und auch mit diesem hässlichen
XML für
GUIs.
Was haben die sich da geklaut?
Das ist halt hässlich.
Ich mag das halt überhaupt
gar nicht.
Samples.
Samples.
Ja.
Dieses hässliche XML für...
Gibt es da nicht vielleicht auch was Simples?
Direkt-Painter.
Gachi-Buzz, alles klar.
Arxa. Okay, die haben das sogar erweitert jetzt.
Aber ich finde halt,
dieses XML für GUI-Sachen,
das tut mir immer so weh,
wenn ich mir das angucke.
Also Desktop-UI-Sachen,
es ist wirklich alles sehr suboptimal.
Ich muss sagen, von den ganzen
Desktop-UI-Cross-Plattform-Frameworks
gefällt mir
Qt noch am besten.
Also, ich glaube, dass das
aber
da hast du halt wieder das Problem, dass wenn du was
Ernsthaftes machen willst
oder was grundlegend da
anders haben willst, als
es vorgesehen ist, musst du mit C++ ran.
Du kannst zum Groß...
Du kommst ja mit Python auch relativ weit, aber
früher oder später kommst du ja nicht um C++ rum.
Also, es gibt...
Also, das ist halt das Ding.
Das denke ich mir seit Jahren schon.
Es gibt irgendwie nix
Cross-Plattform-UI-mäßiges,
wo ich sagen würde, oh ja,
nice, damit macht's ja richtig
Spaß, was zu entwickeln
und da hätte ich auch Bock drauf,
was zu machen.
Es gibt für Go auch ein paar Sachen, aber die sind
auch alle nicht schön.
Also, wenn man es sich schabt, will es Avalonia tatsächlich das Beste,
was man machen kann, Cross-Plattform-mäßig.
Und die machen es auch richtig, die malen
ihre Controls selber.
Das heißt, es sieht auch überall gescheit aus.
Aber Qt dürfte
tatsächlich das
Framework sein mit den meisten Features,
was Cross-Plattform gut funktioniert.
Auf Mobile wiederum wohl nicht so geil.
Also, das ist es halt, wenn man wirklich
was haben will, was Mobile-Apps,
Desktop-Apps und Web
abdeckt, es bleibt
realistisch betrachtet eigentlich
nur Elektron. Was sonst?
Wenn man
ein größeres Entwicklerteam hat und
viel Aufwand treiben kann, kann man
selbstverständlich hergehen und sagen, man baut
das in unterschiedlichen
Technologien. Man kann zum Beispiel
sagen, okay, man baut eine Webseite,
man baut,
Mobile-Apps, vielleicht
mit irgendwie React Native
oder sowas, ja, dass du zumindest Android und
iOS in einem hast und du
baust halt eine Windows
und eine Mac-App oder
wie auch immer du die Linux...
Ganz ehrlich,
GUI-Entwicklung ist scheiße.
Ich hab von TensorFlow keine Ahnung.
Du kannst alles benutzen,
was du im Browser und in Node.js benutzen kannst
in Elektron.
Du hast eine Node-Runtime und eine Browser-Runtime.
Und einen Browser.
Was hältst du von Blazor?
Abstand.
Weil das letzte Mal, wo ich geguckt hab,
musste das für den
initialen Seitenladen, für das initiale
Seitenladen irgendwie, keine Ahnung,
15 MB Mono-Runtime
runterladen. Also für interne
Seiten eine ganz coole Sache, aber für normale
Webseiten eher nix oder auch normale Web-Anwendungen
eher nix. Und es war lahm,
als ich es das letzte Mal gesehen hab.
Mono hat mit...
Mono ist aus, gibt es nicht mehr.
Das ist jetzt alles .NET Core.
Beziehungsweise .NET heißt es nur noch.
Du meinst Maui, meinst du? Maui.
Du meinst nicht Mono, du meinst Maui.
Ne, Maui ist auch Schrott
aus meiner Sicht.
Mono-Dev kenne ich nicht.
Mono-Develop kenne ich, das war mal ne
ne, ne
Cross-Plattform .NET IDE.
Also Maui ist das Cross-Plattform-GUI
Ding von Microsoft für
C-Sharp. Damit kannst du theoretisch
Desktop-Apps und Mobile-Apps machen.
Linux ist by the way, glaube ich, gar nicht
supported offiziell.
Was?
Aber die malen die
Controls auch nicht selbst. Die benutzen
Native-Controls und das finde ich halt
schrottig.
In den GitHub-Trends ist Maui öfters drin
und ich verstehe nicht, warum.
Ja, gut.
Elektron-Apps sind halt
Speicher- und RAM-hungrig.
Ich kann den Zusammenhang zu
Elektron gerade nicht herstellen.
Okay, lass uns mal gucken, was uns
der Auer über
freie RAM-Slots erzählt.
Hallo zusammen, herzlich willkommen zurück zu einem weiteren Video.
Ich war letzte Woche bei Asus in Taiwan und da habe ich mich mit Ingenieuren
zusammengesetzt aus der Entwicklung und habe mich über das Nitro-Path-Feature
unterhalten.
Ach so, okay, das ist irgendein, ich habe
kein Sven-Sellout-Video, ist es aber nicht.
Das wurde schon bei der Gamescom vorgestellt, da habe ich auch in einem
Livestream ganz kurz darüber gesprochen und zu dem Zeitpunkt dachte ich mir eher
so, ja, das ist ein typisches Marketing-Blabla-Feature. War mir auch nicht
sicher, was es tatsächlich für Auswirkungen hat.
Kurz erklärt ist es eine Änderung am RAM, die bis zu 400 Megatransfers mehr erlauben soll.
Ist das jetzt viel oder wenig? Ich habe kein Blast-Schimmer.
Letzte Woche habe ich mir das dann tatsächlich live angeschaut und war überrascht, welche
technischen Hintergründe dahinter stecken, also was da tatsächlich anders gemacht wurde,
was auch in Zukunft nicht nur bei Asus zum Einsatz kommen wird, sondern mit Sicherheit
auch nächstes Jahr bei anderen Herstellern.
Und das schauen wir uns im heutigen Video zusammen an.
Du bist auf der Seite.
Du bist auf der Suche nach einem starken und zuverlässigen Hosting-Partner, dann bist du bei Hetzner genau richtig.
Als ein führender Hosting-Partner, also links ein konventioneller RAM-Slot, so wie das bei der Bestellung des Designs.
Hier seht ihr die Grafik, wie Asus das beworben hat, also links ein konventioneller RAM-Slot,
so wie das bei jedem aktuellen Mainboard der Fall ist, alles, was ihr zuhause habt.
Und dann rechts eben dieser Nitro Path RAM-Slot und da seht ihr schon diese umgebogenen Pins,
die dann vorne wieder Kontakt mit dem RAM-Slot haben.
Die ganze Diskussion kam auf, als wir
ein Mainboard verwendet haben.
Wir können mal testen.
Ne, ne, das passt schon.
Klick, klick, klick.
Das haben wir noch nicht veröffentlicht.
Achso, das ist alles synchron.
Können wir mal ausprobieren, ihr könnt ja mal gucken.
Klick, klick, klick, klick.
Es funktioniert schon, es ist synchron.
Wie drücke ich das aus, ohne mich in Bredouille zu bringen?
Es ist ein Mainboard, das hat zwei RAM-Slots und das ist hauptsächlich für RAM-Overclocking auch ausgelegt.
Und dieses Mainboard, das demnächst auf dem Markt kommt, ist ein Mainboard, das hat zwei RAM-Slots und das ist hauptsächlich für RAM-Overclocking auch ausgelegt.
Und dieses Mainboard, das demnächst auf dem Markt kommt, ist ein Mainboard, das hat zwei RAM-Overclocking auch ausgelegt.
Und dieses Mainboard, das demnächst auf dem Markt kommt, ist ein Mainboard, das hat zwei RAM-Overclocking auch ausgelegt.
Und dieses Mainboard, das demnächst auf dem Markt kommt, ist ein Mainboard, das hat zwei RAM-Overclocking auch ausgelegt.
Und dieses Mainboard, das demnächst auf dem Markt kommt, ist ein Mainboard, das hat zwei RAM-Overclocking auch ausgelegt.
Und dieses Mainboard, das demnächst auf dem Markt kommt, ist ein Mainboard, das hat zwei RAM-Overclocking auch ausgelegt.
Und dieses Mainboard, das demnächst auf dem Markt kommt, ist ein Mainboard, das hat zwei RAM-Overclocking auch ausgelegt.
Es gibt ja jetzt die Boards, die jetzt vor kurzem vorgestellt wurden, X870.
Ich finde das krass, wie gepanzert Mainboards mittlerweile aussehen.
Ich habe ja auch so ein Ding, was so eine Stahlhülle irgendwie hat.
In meinem Kopf sehen Mainboards immer noch, Hauptplatinen, immer noch so aus, ja, in der Richtung.
Das ist ein aktuelles, ja.
Aber in meinem Kopf sehen die Dinger so aus, immer noch.
Vielleicht ohne IDE, aber so, ja.
Aber die sehen schon seit Jahren ja immer gepanzerter aus.
Das ist das Mindeste, dass die Dinger so aussehen.
Neuen AMD Mainboards und die haben, wie das jetzt hier das Hero mit den vier RAM-Sorts,
das hat dieses Nitro-Path-Feature, was höheren RAM-Takt erlauben soll.
Warum hat es dann ein Mainboard, was dediziert für...
Die Panzerung ist nur ästhetisch.
Nein, nicht nur.
Die, also, ich bin jetzt ja kein großer Kenner, aber ich glaube, das hat mehrere Gründe.
Einmal Kühlung.
Da meinte man, da waren manche Sachen wirklich warm.
Und viele Mainboards haben jetzt quasi solche NVMe-SSD-Slots und Platten zum drüber machen.
Also da sind dann manchmal halt einfach SSDs drunter, die gekühlt werden müssen.
Und das andere, aber da bin ich mir nicht ganz sicher, ob das wirklich der Grund ist,
liegt daran, um quasi...
Komponenten ein bisschen besser voneinander abzuschirmen.
Und zum Beispiel Sound, dass die Soundkarte nicht so viele Störsachen kriegt von anderen Teilen.
Weil die Sachen, die haben ja mittlerweile halt auch alles wahnsinnig hohe Frequenzen.
Und dass sich das nicht so beeinflusst gegenseitig, ist so meine Vermutung auch ein bisschen.
Aber sicherlich ist da auch vieles einfach nur Optik.
RAM-Overclocking ist das nicht.
Und dann haben wir uns mit dem Entwicklerteam zusammengesetzt.
Da sind ein paar Ingenieure...
Ich wollte jetzt eigentlich sehen, wie das sein RAM...
RAM-Slot abträmelt.
... angearbeitet haben.
Und die haben mir dann im Detail erklärt, warum das so ist.
Und ich hatte da selber so ein bisschen eine falsche Vorstellung von.
Und fand es dann aber technisch extrem interessant.
Deswegen wollte ich euch das auch in dem Video ein bisschen nahe bringen.
Also die haben mir X870A Gaming WiFi Mainboards gezeigt.
Zwei Stück.
Das sind ja so Mittelklasse AMD Mainboards.
Und eins davon hatte dieses Nitro Path Feature, also diesen neuen RAM-Slot.
Und eins hatte das nicht.
Auf dem ersten Mainboard...
Also...
Es war immer die gleiche CPU, gleiche RAM-Sticks, alles identisch, nur eben zwei unterschiedliche Mainboards.
Bei dem klassischen, normalen, standardkonventionellen RAM-Slot war das Maximum 8200 Megatransfers, was man booten konnte.
Das war mit einem AMD 8700...
Ja, da muss es ja irgendwas mit besserer Auflage, besserem Kontakt oder so haben.
... weil die haben aktuell bei AMD so den schnellsten RAM-Controller.
8200 konnte man booten.
Aber im Windows...
Wenn man dann MemTest angemacht hat...
Ich benutze seit Jahren nur Onboard-Sound.
... sofort, ja, Error.
Wobei...
Das stimmt ja nicht direkt.
Ich habe ja mein Audio-Interface.
Ich gehe von meinem Rechner per TOS-Link in das Audio-Interface.
Aber vom Mainboard.
Dann haben die die Hardware getauscht, also die CPU von dem einen Board und RAM auf das andere Board, was das Nitro Path Feature hat.
Und da liefen dann 8600.
Alle Settings identisch, einfach nur höhere Frequenz.
8600 im MemTest.
Komplett stabil.
Und ich dachte dann, okay, das ist halt, weil die RAM-Slots anders sind.
Aber das ist das, wo ich falsch lag.
Aktuelle Mainboards sind eigentlich immer gleich aufgebaut.
Wir haben die CPU, darin ist ein RAM-Controller, der zwei Kanäle hat.
Deswegen ist es immer Dual Channel, was bei euch angezeigt wird, was man anstreben möchte.
Und wir haben bei den meisten Boards vier RAM-Slots.
Und die sind meistens dann markiert, wie man es hier oben sehen kann, mit DIMM A1, A2, B1, B2.
Und dieses A und B sind die RAM-Kanäle.
Also RAM-Kanal A und RAM-Kanal B.
Und es ist jetzt so, dass wir ein sogenanntes Daisy-Janing haben.
Also dass zwei RAM-Slots immer hintereinander geschaltet sind.
Und wir haben deswegen immer den A2-Slot und den B2-Slot, die man normalerweise verwendet,
wo man eben die zwei Sticks reinsteckt.
Und dann läuft das Ganze im Dual-Channel-Modus.
Wenn ich jetzt zwei RAM-Module im Board installiert habe,
dann ist es halt nach wie vor eben so, dass wir zwei leere Slots haben.
Und die leeren Slots bekommen aber trotzdem weiterhin,
aktive elektrische Signale von der CPU.
Also da ist kein Schalter dazwischen, dass wenn man die freien Slots nicht bestückt,
dass da nichts mehr ankommt, dass die tot sind.
Also das ist nicht der Fall.
Ich dachte jetzt eben, als das Feature bei der Gamescom vorgestellt wurde,
dass diese kürzeren Pins, die jetzt in diesen Slots drin sind,
irgendwie einen besseren Kontakt zu den RAM-Modulen selber haben.
Genau das habe ich mir auch gedacht.
Das war jetzt das Naheliegendste, was ich mir auch gedacht habe.
Und dann irgendwie die Signalqualität besser ist.
Ja, genau das dachte ich auch.
Weil da auch... Genau das dachte ich auch.
Weil da auch... Genau das dachte ich auch.
Weil da auch... Genau das dachte ich auch.
Weil da auch... Genau das dachte ich auch.
...davon gesprochen wurde, dass der Anpressdruck von den neuen Pins
zu den konventionellen einfach höher ist.
Wie groß die Module sind...
Die RAM-Module sind ungefähr nur so, der Rest ist einfach Kühlung.
Das ist am Ende gar nicht der Grund, sondern es geht tatsächlich nur um die leeren
und nicht bestückten RAM-Slots.
Das Ganze kann man auch messen mit einem sogenannten Augendiagramm
oder im Englischen sagt das iChart.
Wenn man ein binäres Signal hat, was ja eigentlich in der Originalform
rechteckig ist, wenn es aber sehr sehr schnell ist,
wie das hier der Fall ist, so Richtung 3.000, 4.000, 5.000 MHz,
dann kann das sich optisch so ein bisschen an eine Sinusform annähern.
So kann man das so ein bisschen sagen.
Und mit einem Augendiagramm kann man dann schauen,
ob die Signalqualität noch gut genug ist
oder ob die sich irgendwo überlagern.
Was dann eben bedeutet, dass das Signal nicht mehr eindeutig identifizierbar ist
und dass es dann irgendwie...
Okay, Chad, da gebe ich euch recht.
Wenn ihr Kopfhörer habt mit höherem Widerstand,
dann ist das oftmals an den Audioausgängen vom Mainboard,
vom Mainboard zu leise.
Geht gar nicht gescheit.
Aber deswegen, ich übertrage es ja optisch vom Mainboard
an mein Audiointerface.
... zu Problemen kommen kann.
Das sehen wir jetzt hier an den blauen und grünen Linien.
Wir haben entsprechend den Zustand 0 bei 0 Volt, also unten,
und Zustand 1 jetzt in dem Fall bei zum Beispiel 0,4 Volt.
Weil das wie gesagt so ein hoher Takt ist,
sind dann die Signale nicht mehr rechteckig,
sondern halt deutlich verformt und wie gesagt fast so ein bisschen...
Das ist also ein Augendiagramm.
In der Mitte hat man ein Loch.
Das ist das Auge.
Das ist dann hier so rot markiert und das ist das,
was man als Auge bezeichnet, deswegen heißt es Augendiagramm.
Und durch die Breite in Picosekunden, also der Zeit,
und die Höhe in Millivolt, also der Spannung,
kann man dann beurteilen, wie gut die Signalqualität ist.
Also je größer dieses Auge in der Mitte ist,
desto besser ist es, weil es dann keine Überlagerungen gibt.
Und das Beispiel, was wir uns hier jetzt gerade auch anschauen,
ist das, was die mir auch in Taiwan gezeigt haben
und auch eine Messung von Asus.
Das Beispiel ist hier gerade
mit 6400 Megatransfers, also 3200 Megahertz.
Wir sehen links, da steht Config 1,
bei der der A2 RAM-Slot gemessen wurde.
Dann gibt es noch unten drunter die Config 2,
das wäre dann der B2 RAM-Slot.
Auf der rechten Seite sehen wir einmal den Old Connector,
also das ist der konventionelle RAM-Slot.
Und dann sehen wir rechts daneben den New Connector,
das ist dann eben dieser Nitro Path Memory Slot von Asus.
Ja, das sieht man eindeutig hier, guck mal.
Das ist viel, das geht viel weiter rauf.
Das ist viel mehr Platz.
Ne, hier guck mal, vergleich das mal.
Das ist viel, da ist, das ist, die Form ist prinzipiell die gleiche,
aber das ist viel, geht viel weiter hier hoch.
400, muss man sagen, hier in dem Beispiel
ist es nicht wirklich relevant.
Also da sieht man sowohl konventionell links,
als auch rechts mit Nitro Path,
beides hat eine ausreichend gute Signalqualität.
Aber man sieht, dass das besser ist.
Und kann dementsprechend wunderbar verwendet werden.
Schauen wir uns das Ganze jetzt mal bei 5000 Megahertz an,
also 10.000 Megatransfers.
Okay.
Hier hast du, hier hast du gar kein Auge mehr
und da hast du noch ein Auge.
Da sieht man, da gibt es tatsächlich einen großen Unterschied.
Beim traditionellen RAM-Slot,
da sieht man in der Mitte eben kein Auge mehr.
Da kommt es dann einfach zu Überlagerungen von Signalen
und dementsprechend dann Fehlern oder der Tatsache,
dass ihr die Geschwindigkeit gar nicht erst booten könnt.
Rechts dagegen sieht man,
das Auge ist zwar viel, viel kleiner geworden als bei 6400,
aber man kann es noch sehen.
Und dementsprechend sieht man,
dass das auch tatsächlich in der Praxis was bringt.
Okay.
Und ich ging wie gesagt am Anfang davon aus,
dass die neuen Slots einfach irgendwie besser an den Modulen anbieten oder so.
Interesting.
Und dass das irgendwie verbessert wird.
Das hätte ich jetzt auch vermutet, ja.
Aber es geht tatsächlich nur um die nicht bestückten Slots.
Jeder von diesen RAM-Slots hat ja 288 Pins.
Davon natürlich nicht alle nur für Datenverbindungen,
sondern auch unterschiedliche Spannungen, Masse und so weiter.
Aber wir haben genug Datenverbindungen
und jeder von diesen einzelnen Pins wirkt auch für sich als eine Art Antenne.
Aha.
Da steht dann auch oben raus,
da kommen hochfrequente Signale an.
Also arbeitet das auch ein Stück weit wie eine Antenne.
Das bedeutet, der leere Slot hat eine negative Auswirkung
auf den Slot, der daneben ist, der mit einem Riegel bestückt ist.
Da wäre ich im Leben nicht drauf gekommen.
Und das ist der Punkt, wo dieses Feature einen Unterschied macht,
weil die Pins ungefähr 40 Prozent kürzer sind
und auch anders geformt sind,
dass dieser Antennen-Effekt einfach verringert wurde
mit dem, was man bisher hatte.
Weil bisher,
war das aufgrund der niedrigeren Frequenzen einfach nicht so sehr ein Problem.
Jetzt mit DDR5, wo es Richtung 10.000 Megatrend-Transfers irgendwie geht,
ist es halt tatsächlich ein Punkt, wo das relevant wird.
Und Asus hat mir dann tatsächlich auch noch einen Querschnitt gezeigt.
Das Bild darf ich euch auch interessanterweise zeigen.
Das sind mehrere Bilder, wo Asus durch RAM-Slots durchgeschnitten hat.
Also die haben eine Platine gemacht.
Wisst ihr, was man mal sagen muss, wo man echt mal auch hier Hut ab...
Der Bauer, der macht diese Videos.
Ich meine, da hat er zwar ein paar Schnitte drinne und sowas.
Der schafft das aber, das mehr oder weniger durchgängig,
konsistent, passend, ohne großartige Dinge zu erklären und aufzunehmen.
Ja, der schneidet das zwischendurch immer mal ein bisschen so.
Aber das ist nicht so wie diese Videos.
Ich sag zwei Sätze, cut.
Zwei Sätze, cut.
Zwei Sätze, cut.
Da krieg ich immer Anfälle, ja.
Oben RAM-Slots drin sind.
Und dann auch RAM drinsteckt.
Das Ganze wurde dann in Epoxy eingegossen.
Und dann wird es geschliffen, poliert und so weiter.
Bis man dann einen richtig schönen Querschnitt hat.
Um auch beurteilen zu können, wie das Ganze in der Praxis läuft.
Dass er die Sachen nicht alle eins zu eins so im Kopf hat, ist auch kein Problem.
Trotzdem machen es viele, machen es genug Leute, die zwei Sätze sagen, cutten.
Zwei Sätze sagen, cutten.
Das finde ich viel angenehmer bei ihm.
Patrick, dankeschön für den Sub.
63 Monate, exzellent.
Das ist ja sehr...
Nice.
Das ist jetzt ein ganz normaler RAM-Slot, wie es bei euch zum Beispiel auf dem Mainboard auch verbaut ist.
Links seht ihr den leeren Slot, also da ist noch kein RAM-Modul drin.
Das, was so dunkel ist, ist der Kunststoff von dem Slot.
Und unten in der Mitte seht ihr die Kontakt-Pins.
Das klingt eine gute Idee.
Die auch so eine, ich sag mal, runde Öffnung in die Mitte haben.
Das dann eben die Verbindung mit dem RAM-Modul herstellt.
Was wir dann auf der rechten Seite sehen können.
Auf der rechten Seite ist dann eben ein RAM-Modul eingesteckt.
Da sieht man die dicke Platine in der Mitte.
Auch, dass sie mehrere Lagen hat.
Das kann man gut sehen.
Außen hat sie Kupfer, das dann eben Kontakt herstellt mit den Pins.
Und man sieht auch, wenn das Modul eingesteckt ist, dann werden die Pins so ein kleines bisschen weiter nach außen gedrückt.
Hier sehen wir jetzt den Querschnitt von dem neuen RAM-Slot.
Links wieder ohne Modul, rechts wieder mit Modul.
Da sieht man auch direkt, dass...
Die sind anders geformt, ja?
Die gehen so nach unten wieder.
Die Kontakt-Pins einfach deutlich kürzer geworden sind und auch eine andere Form haben.
Also die sind so nach unten gebogen.
Und das ist ein Detail, was hat sich bei dem Marketing-Material nicht ersichtlich.
Weil da sah das aus, als würde das einfach so spitz enden und irgendwie dann an den RAM-Slot randrücken.
Also da haben sie was kleines, sag ich mal, verheimlicht.
Wahrscheinlich ein kleines Detail, was auch einen Unterschied macht.
Aber hier in dem Querschnitt, den man jetzt da sehen kann, sieht man, dass das eben auch so ein bisschen nach unten gebogen und geformt ist.
Und das dann nur so eine runde Form Kontakt zum RAM-Modul selber hat.
Und insgesamt sind die Kontakte in dem...
Ich hoffe aber, dass das mit klassischen RAM-Modulen weiter funktioniert.
Gehe ich jetzt mal einfach von aus.
Ich glaube nicht, dass die RAM-Module anders gebaut werden müssen.
Das wäre ein riesen Aufwand.
Die haben sich was ausgedacht, was mit normalen RAM-Modulen weiterhin funktioniert.
Du schon ungefähr 40% kürzer als im konventionellen RAM-Slot.
Um das Ganze zusammenzufassen.
Das Feature ist also einfach nur relevant für den leeren RAM-Slot, nicht die bestückten.
Das ist das, wo ich einfach komplett falsch sage.
Interessant.
Und das wird auch der Grund sein, warum man sowas wahrscheinlich trotzdem auf den RAM-Overclocking-Mainboards,
also zum Beispiel einem MSI UniFi X oder einem Asus Apex, wird man das wahrscheinlich dann nicht finden.
Weil es einfach nichts bringt.
Weil es nur was bringt für die freien RAM-Slots, die eben diese Interferenzen als, sag ich mal, Antenne verursachen.
Wir hatten ja vor kurzem das Thema, als ich über RAM-Taktraten von Intel gesprochen habe.
Und dass das, was angegeben ist, mit wie viel Frequenz eine CPU bei welcher Konfiguration schafft,
eigentlich gar nicht von der CPU abhängig ist.
Und der tatsächlichen RAM-Konfiguration, sondern vom Mainboard.
Also Intel hat ja zum Beispiel, ich glaube, das waren 5600 Megatransfers garantiert bei der 14. Generation.
Und dann stand im Datenblatt aber, wenn das ein Mainboard ist, das vier RAM-Slots hat, dann sind es effektiv irgendwie nur 4200 oder sowas.
Das war einfach viel, viel geringer.
Das war das, wo ich mich gewundert hatte.
Da hatten wir ein Video dazu gemacht.
Ich hatte nachgefragt.
Das ist auch so.
Das ist auch bestätigt.
Das bleibt auch so.
Weil tatsächlich die Bestückung nicht so sehr relevant ist, wie das, wie das Mainboard ist.
Das ist tatsächlich interessant.
Das hätte ich auch nicht gedacht.
Wenn ihr hohe RAM-Taktraten haben wollt, dann funktioniert es meistens immer nur zuverlässig bei Boards, die eben nur zwei Slots haben.
Und ich denke, das wird auch bei der kommenden Intel-Generation wieder relevanter werden.
Also wenn man den Leaks glauben mag, dann sind die nochmal ein bisschen potenter, was den RAM-Controller betrifft.
Bei AMD weiß ich es nicht, inwiefern das relevanter wird, weil da nach wie vor das Problem ist, dass man über 6400 eben einschalten muss.
Weil dann zum Beispiel der RAM-Controller nicht mehr eins zu eins laufen kann und so weiter.
Und deswegen ist es bei AMD nicht so sehr relevant, wie das aktuell zumindest mal bei Intel relevant ist.
Dieses Feature wird übrigens nicht Asus exklusiv bleiben, das Nitro Path Feature.
Also Asus hat mir gesagt, dass das ein öffentlicher Standard wird.
Und ab nächstem Jahr auch alle anderen Hersteller dieses Feature wahrscheinlich verbauen werden.
Also ich bin mir ziemlich sicher, dass wir dann nächstes Jahr auch von LSI Gigabyte und ASRock dann auch Boards mit diesen neuen RAM-Slots sehen werden.
Ich glaube nicht.
Ich glaube das wurde zusammen mit Lotes.
Max, wird dein nächster Rechner aktuell im Stand AMD oder Intel?
Ich kenne mich zu wenig aus mit aktuellen Sachen.
Ich tendiere ein bisschen zu AMD.
Hatte ich aber in den letzten Jahren über schon und mein aktueller Rechner ist auch wieder Intel.
Wobei der ist auch schon zwei Jahre alt.
Einem von diesen Slot-Herstellern entwickelt.
Und ich glaube jetzt hat es Asus exklusiv für ein Jahr und danach dürfen alle darauf zugreifen, was auf jeden Fall cool ist.
Das wollte ich in diesem Video mal kurz kappen.
Also wahrscheinlich, also Nvidia als Grafikkarte, klar.
Ich tendiere aktuell eher zu AMD, aber ich bin da nicht auf dem aktuellen Stand.
Weil es einfach interessant war, weil ich einfach auch falsch lag und dachte, das ist einfach nur für den Slot selber interessant.
Ja, wie gesagt, dachte ich auch.
Aber dass ein leerer RAM-Slot solche Auswirkungen hat, das war mir persönlich nicht bewusst.
Interessant. Ja, ne, mir auch nicht.
Ich hoffe das Video hat euch gefallen.
Ja, nice.
Ich wünsche euch einen schönen Sonntag.
Der Auer war wieder am Start.
Ich bin nicht eingeloggt, sonst hätte ich es geliked.
Was bin ich sehend.
Denen gehen auch langsam die Ideen aus, oder?
Also wenn es dir kalt ist, dann würde ich nicht umgehen.
Games spielen, sondern erstmal gucken, dass ich ein bisschen warm mich aufwärme.
Und dann Games spielen.
So Heizung anmachen vielleicht.
Oder willst du Games spielen, die dein Zimmer heizen?
Das heißt, du brauchst irgendwas Hardware-lastiges.
Also zum Zimmer aufwärmen im Rechner sind Games nicht gut.
Mach irgendwie Dings an.
Wie heißt dieses Ding, wo du die Grafikkarte super heiß kriegst?
Diese Haberechnung.
Hurmark, ne?
Genau.
Und dann machst du Prime95 an und Hurmark für die Grafikkarte.
Und dann gib ihm.
Dann kannst du deinen Raum heizen.
Geht das unter Linux?
Glaube ich nicht.
Aber unter Linux geht was viel besseres.
Absolut high-end Graphics.
Wenn es dir da nicht warm wird im Zimmer, dann weiß ich auch nicht.
Also jetzt ist vorbei.
Meine CPU ist auf 150.
Mein CPU und GPU lüften auf 150.
Guck mal, du kannst sogar FPS anzeigen lassen.
Gibt es heute Lachs mit Reis?
Nein, es gibt Lachs mit Nudeln.
Jetzt kommt die Advanced-Variante.
Es müssen aber ziemlich starke Magnets sein.
Almost big.
Ja gut, das ist Cheaten.
Wenn er da mit dem Labor-Netzteil rangeht, anstatt mit dem Lego-Motor.
Sauerei.
Gut, dass er das in der Badewanne oder in der Dusche macht.
Der fliegt gleich los, ja.
Okay.
Ich bin mir unschlüssig, warum ich mir das Video jetzt angeguckt habe.
Aber irgendwie sind die immer ein bisschen satisfying.
Die Lego-Videos.
So, mal gucken, ob es neue Packages gibt.
Wir haben schon eine halbe Stunde nicht mehr geupdatet.
Arch, by the way.
Ich habe viermal geupdatet heute im Stream.
Es gab immer was Neues.
Arch, by the way, ja.
Die Videos von dem gucke ich gerne.
Mach einen einen mit dem Cron-Job.
Ja.
Package-Update.
Cron-Job.
So, Leute, ich geh jetzt was essen.
Ich hab Hunger.
AF.
Lachs mit Nudeln.
Und bald Deno.
Ich sag mal nicht heute Mittag, weil ihr kennt mich.
Wenn ich heute Mittag sage, dann ist es nie heute Mittag.
Viele Tabs offen.
Es sind vor allem auch noch viele Stellenanzeigen offen.
Aber die sind alle schon outdated, overrated, jebaited.
Da müssen wir auch mal wieder ran.
Schön, dass ihr am Start wart.
Wir hören uns demnächst.
Ich geh jetzt was futtern.
Könnt ihr ja auch machen.
Bis bald.
Bis bald.
