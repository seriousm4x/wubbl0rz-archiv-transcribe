Das ist richtig, es gibt jetzt einen React-Button, aber der React-Button macht nicht das was
man denkt, dass er macht. Kannst ja mal drauf drücken. Warum es den gibt, also ich weiß was
er macht, ich verstehe den Sinn des Features nicht so ganz, aber okay. Ich weiß nicht, ob ihr alles
versteht. Genau, korrekt. Ja, wie gesagt, ich verstehe den Sinn davon nicht so ganz, aber okay.
Wahrscheinlich ein weiteres Zoomer-Feature für Twitch, was ich nicht kapiere. Leute,
ich werde bald 40, also dauert noch zwei Jahre, aber...
bald. Und mir ist gestern aufgefallen, dass es echt einige Sachen gab, die ich mir früher
vorgestellt habe, die 2025 anders sind. Also mal von den offensichtlichen Sachen, wie das ich
gedacht habe, die Games werden immer geiler werden, beziehungsweise gerade MMOs werden 2025 so das
beste aller Zeiten sein. Das habe ich so 2003, 4, 5 rum gedacht.
So, als halt die riesengroße MMO-Ära gewesen ist. Aber ehrlich gesagt kamen mir die letzten
Jahre kaum gescheite MMOs raus. Oder besser gesagt, gar keine, gar kein gescheites MMO raus. Es gab New
World, was abgekackt ist, was auch nicht gescheit war. Ansonsten, was das eigentlich? MMOs sind
eigentlich fast dead. Das hätte ich damals nicht gedacht. Ja, und eine Sache, die mich tatsächlich
auch fast wöchentlich immer wieder überrascht, ist folgendes.
Und zwar vor, sagen wir mal vor 25 Jahren, also 2000 rum, da habe ich gedacht, okay, die älteren Leute, also quasi so die Generationen vor mir, die hat keine Ahnung von Technik und Computerzeug und Internetsachen und generell Technik-Kram.
Was ja auch so ist. Und leider zum größten Teil immer noch so ist. Also die, die damals schon keine Ahnung hatten, haben es zum größten Teil nicht mehr dazu gelernt.
Was ich damals gedacht habe, ist, ich habe es bei Amazon gekauft. Amazon mit Gutschein. Also du kannst auf der Seite direkt den Gutschein hinzufügen. Total wir, warum das überhaupt so ist. Ja, zumindest die, die damals keine Ahnung haben, haben heute auch wenig Ahnung bekommen. Aber was ich damals halt dachte, so 2000 rum ist, okay, also die Generation vor mir hat keinen Plan von Technik, Computer, Internetzeug. Okay, okay, soweit klar.
Aber ich dachte dann, also sprich die Generation, die nach mir kommt, die hat ja, die ist ja dann komplett damit aufgewachsen, die hat bestimmt jeder Basic-Ahnung. Das ist aber nicht so.
Da habe ich mich, da habe ich mich total getäuscht. Ich bin halt von mir ausgegangen, ja. Damals war Computerzeug so das geilste, was es gibt. Jeder hat sich irgendwie in meiner Generation so ein bisschen damit beschäftigt, einfach weil es neu war und so und sehr spannend war und so. Da haben ja fast jeder ein bisschen Ahnung von Computerzeug gehabt. Okay, naja, das stimmt auch nicht.
Viele, viele, ja, viel mehr als heute. Und, also die sich prozentual dafür interessiert haben. Und das ist nicht so gekommen. Also heute ist es so, dass ich Jung und Alten erklären muss. Also Computerzeugs. Und da denkt man sich immer so, ich hätte, das hätte ich mir anders vorgestellt. Ich hätte echt gedacht vor 25 Jahren, also sagen wir mal so, wenn ich dann 40 bin, ja, das ist ja, dauert ja noch ein bisschen.
Dauert ja noch zwei Jahre. Also vor 25 Jahren hätte ich nicht gedacht, dass die Leute in 25 Jahren, also die Generation danach, fast genauso planlos ist wie die Generation vor mir. Also das ist, das überrascht mich immer wieder. Wie planlos auch junge Leute sind heutzutage, was Technik angeht. Also die Alten sind planlos. Also die, die vor mir da waren, sind planlos. Die, die da waren, sind auch planlos. Also das geht doch eigentlich gar nicht. Die sind doch damit aufgewachsen. Sie müssten doch eigentlich Durchblick haben. Haben sie aber nicht.
Das sieht man zum Beispiel daran, dass gerade viele jüngere Leute zum Beispiel es super schlau finden, Cloud Password Manager zu benutzen und sowas. Wo man ja schon gesehen hat, die Einschläge kommen immer näher. Irgendwann wird es auch den Cloud Password Manager betreffen, den die Leute verwenden.
Das gleiche haben sich LastPass und OnePass und sowas Nutzer auch gedacht. Ah, bei mir gibt es da bestimmt keine Probleme. Und Bäm.
Aber es fängt ja schon bei vielen bei Basic Sachen an so. Frag mal Leute heutzutage, wie sie einen Drucker anschließen. Da haben die ja schon teilweise Probleme mit an den Desktop. Wo man sich denkt, alter Mann, das ist USB einstecken und in der Regel geht es einfach. Die trauen sich dann aber nicht. Das habe ich beispielsweise schon auf der Arbeit gesehen. Die Leute trauen sich dann teilweise nicht. Wo ich mir denke, what? Wo ist das Problem?
Was soll schon passieren?
So nach dem Motto, ah, wenn ich da jetzt was mache, dann mache ich es irgendwie kaputt. Keine Ahnung. Also die sind wirklich genauso planlos irgendwie. Das hätte ich wirklich nicht gedacht. Ich weiß nicht, ob es an TikTok und Instagram und YouTube liegt. Wahrscheinlich nicht.
Ich glaube, ich bin damals einfach mit falschen Annahmen rangegangen, sodass jeder Technik Sachen interessant findet und auch jeder, der das quasi damit aufwachsen wird, die Generation danach wird es auch interessant finden. Aber das ist ja anscheinend nicht so.
Setzt heute mal einen, keine Ahnung, 14-Jährigen vor einen Desktop-Rechner. Also mit Ach und Krach kriegt der wahrscheinlich einen Epic-Launcher für Fortnite installiert. Das war es dann aber auch schon. Ja, das stimmt schon. Aber das ist ja auch daran, weil die Leute das nicht wollen. Die wollen sich ja mit dem Hintergrund, wie was funktioniert, gar nicht auseinandersetzen.
Verknüpfung erstellen wäre für die Leute unmöglich. Wobei man sagen muss, Verknüpfung erstellen ist tatsächlich unmöglich, weil...
Windows keinen Bock mehr hat auf Verknüpfung. Windows denkt sich, nee, nee, nee, Verknüpfung gibt es nicht. Verknüpfung sind overrated, cheap baited. Braucht man nicht. Genauso wie ich Track und Drop darf, braucht man alles nicht.
Wohl gemerkt, der Shit ging sogar unter Windows 95 schon. Ja. Aber das hätte ich so wirklich nicht gedacht. Also ich dachte, ich dachte damals echt, dass die komplette Generation nach mir, dass die automatisch...
Ahnung von Technik haben werden. Und sich auch gerne damit beschäftigen. Was? Das ist aber halt nicht so. Ja, das geht auch unter Windows nicht mal, Verknüpfung auf die Taskleiste, weil Microsoft sich gedacht hat, das ist ein bloated feature.
Aber das braucht man nicht. Warum sollte man auch Verknüpfung auf die Taskleiste ziehen können? Warum sollte man auch Programme erkennen, die laufen in der Taskleiste? Das ist ja komplett bescheuert.
Ich meine, warum will man denn sehen, was auf seinem Rechner läuft gerade? Das ist ja undenkbar. Nicht bei Microsoft. Es ist unglaublich schlecht. Also Windows 11 ist an einigen Stellen ganz okay, aber zum größten Teil einfach nur nerviger Müll.
Und ich muss ehrlich sagen, ich war schon kein großer Freund von Windows 10. Aber das ging dann irgendwie nach einer Weile. Aber ich verwende Windows 10 jetzt schon seit ungefähr zwei Monaten.
Würde ich mal sagen. Vielleicht sogar ein bisschen länger. Ne, länger. Fast drei Monate. Drei Monate, sagen wir mal. Drei Monate ungefähr. Und ich finde es immer noch kacke.
Na gut, wie dem auch sei. Ich glaube, über das Thema könnte ich mal ein Video machen. Also nicht Windows 11. Wobei, wahrscheinlich wird ein Windows 11 Up-Rant-Video besser performen auf YouTube als das andere.
So was kommt lustigerweise auf YouTube immer gut an. Also fast alle Videos, wo ich mich ein bisschen ausgekotzt habe über Windows 11, kamen gut an.
Anscheinend scheint es irgendwie so einen gewissen Nerv zu treffen und die Leute sagen, jawoll, so ist es. Oder der YouTube-Algorithmus mag einfach nur die Wörter, die Wortkombination. Man weiß es ja nicht.
Irgendwann kommt Windows 12 und es gibt wieder was zu meckern.
Ja, Moment. Moment. Das Gemeckere über Windows 11 hatte nicht aufgehört.
Windows 12, also das ist ja dann nicht besser geworden wahrscheinlich.
Sondern es kommt einfach neuer Scheiß dazu, der auch kacke ist.
Du hast dann mehr zu meckern.
Ne, hab ich nicht. Ich vermute mal, dass IBM i irgendwas für Mainframes ist oder so. So was wie ZOS oder so.
Ich weiß es nicht.
Keine Ahnung.
Also iX sagt mir was.
Das ist irgendeine Unix-Variante von wahrscheinlich IBM.
Aber ich hab keine Ahnung. Also hab ich nie benutzt.
Ich geh mal davon aus, dass wenn man Basic-Kommandozeilen-Bedienung beherrscht, man damit zumindest was Navigation angeht, Filesystem, Dateien und sowas ganz gut klarkommt.
Im Detail aber kein Plan.
Hab ich euch eigentlich schon gezeigt. Ich hab letztens auf der Arbeit
Wobblorts-Tweets.
Ich hab letztens auf der Arbeit ein Wim-Handbuch gefunden von 1995. Guckt euch das mal an.
Geht eigentlich nitter mittlerweile wieder.
Nitter.
Hört sich an wie ne Porn-Seite oder so. Ist es aber nicht.
Broken.
Und angeblich liegt das, ich hab bei denen auf GitHub geguckt, angeblich liegt das nicht an der Twitter-API, dass es nicht geht.
Ne, guckt mal. Ich hab ein Handbuch gefunden.
VI-Editor 1995.
Mehr Wissen, mehr Chancen, mehr Erfolg. Siemens-Nixdorf-Training-Center.
Das war vor 30 Jahren der heiße Shit.
VI-Editor.
Damals hatten die Leute schon Probleme, rauszukommen.
Die Frage ist, ob die unter... Das hab ich fotografiert. Das lag vor mir. Das ist ein Foto von mir.
Die existieren noch.
Das hab ich ja selbst fotografiert. Das lag bei uns auf der Arbeit rum.
Das ist ein Foto von mir. Das ist ein Foto von mir. Das ist ein Foto von mir. Das ist ein Foto von mir. Das ist ein Foto von mir. Das ist ein Foto von mir. Das ist ein Foto von mir.
Das ist ein Foto von mir. Das ist ein Foto von mir. Das ist ein Foto von mir. Das ist ein Foto von mir. Das ist ein Foto von mir.
Das ist ein Foto von mir. Das ist ein Foto von mir.
Das lag auf nem Tisch bei uns auf der Arbeit.
Hab ich gedacht, was ist das denn? Warum haben wir da nen VI-Handbuch von 1995 rumliegen?
Dachte, du wärst mega alt. Bin ich auch.
Bin 1984 geboren.
Du hast Explorer versehentlich gesucht.
Gibt's das nicht mehr? Steht das da nicht mehr drin?
Ist mir erstmal wurscht.
Ich hab jetzt ein iPhone 14 gekauft.
Vor ner Woche.
Das reicht jetzt 5 Jahre.
jahre ja hat er ja auch recht hat er doch auch recht solange das die leute
kaufen soll würde ich das auch machen warum auch nicht hat sich was geändert
von wie als ich bin mir gar nicht so sicher ob sich an wie was geändert hat
wahrscheinlich nicht aber an dem hat sich jede menge geändert und wie ist ja
also der die meisten systeme haben ja wahrscheinlich wenn sie wie auf was die
meisten haben wenn sie wie aufmachen wahrscheinlich einfach nur den wimm
entweder im wimm modus oder im wie ein kompatibilitäts modus wenn es die leute
kaufen bald wie gesagt ich wollte sagen bald kostet dich ein neues smartphone
mehr als dritten als ein rechner aber ist ja schon so bei dem preis für 2000
euro kriegst ein halbwegs brauchbaren desktop spieler rechner muss ja nicht
jeder so schwachsinn kaufen wie ich für 5k plus
wenn man sich das mal anschaut
stimmt gar nicht 4850 euro aber solange die leute kaufen ist doch ist doch ist
doch bei spielen nicht anders hätte sich mw2 nicht geil verkauft was es
wahrscheinlich hat ich weiß die zahlen gar nicht gäbe es sicherlich kein mw3 so
gibt es bestimmt auch wieder mw3 remastered oder wie man das nennen mag
ich fand schon seit der ankündigung von mw1
das komplett kreativ für den arsch das man mw modern warfare wieder neu
auflegt ich meine was kommt dann 2030 2030 gibt es dann modern warfare noch mal
aber halt dann 3.0 oder wie ultra rebooted
das gibt es nur dann nicht wenn es die leute nicht kaufen der anderen seite ist
es das ist halt gut und schlecht gleichermaßen es gibt ja durchaus
manchmal dinge die man selbst cool findet aber nicht so viel anklang finden
und dementsprechend gibt es dann halt nicht mehr davon.
Und manchmal denkt man sich, wer kauft denn den Scheiß überhaupt noch?
Das ist eine gute Frage.
Ich glaube, also ich kann dir das beantworten,
aber ich glaube, dass die Frage an sich nicht allzu viel Sinn macht,
weil es eigentlich eher ein eigenes Themengebiet ist
und es setzt sich zwar aus Dev und Ops zusammen,
ich würde aber nicht zwangsläufig sagen,
dass du sagst, man programmiert zu einem gewissen Anteil
und administriert zu einem gewissen Anteil zwangsläufig,
nur weil es sich aus den beiden Wörtern zusammensetzt.
Oftmals ist es so, dass im Dev-Ops-Bereich sich vornehmlich beispielsweise
um Tools und Automatisierung und sowas gekümmert wird,
was jetzt weder gut zu dem einen noch gut zu dem anderen passt.
Also es ist mittlerweile schon eher ein eigenes Themengebiet an sich.
Man hat zum Beispiel,
ähm,
Infrastruktur-Automatisierung, sei es jetzt automatisch erstellen von Infrastruktur,
konfigurieren von Infrastruktur, sowas wie mit Puppet, Ansible, Terraform,
das war zum Beispiel recht beliebt,
irgendwelche Continuous Integration-Geschichten, irgendwelche Pipelines,
was du früher vielleicht irgendwie zu der einen oder anderen Seite schieben musstest,
aber heute gibt es halt sowas dazwischen zu machen können.
Also ich würde gar nicht sagen, dass es sich zusammensetzt aus
Development-Arbeit und Admin-Arbeit,
sondern es ist tatsächlich ein eigener Bereich,
mittlerweile.
Aber wenn man das, wenn man das irgendwie teilen müsste,
dann würde ich sagen,
70% Admin-Zeug und 30% Entwicklungs-Zeug,
weil man es, wie gesagt, schwierig trennen kann.
DevSecOps, ja, ja, ich habe sogar noch mehr Abwandlungen gelesen,
aber ich komme gerade nicht drauf.
Dev...
Als nächstes gibt es dann DevSecOps.
Als nächstes gibt es dann DevSecOps.
DevSecOps, ja.
DevSecOps, ja.
DevSecOps, ja.
DevSecOps, ja.
DevSecOps, ja.
DevSecOps, ja.
DevSecOps, ja.
DevSecOps, ja.
Man wird hier im Stream der nächste Champ programmiert.
Gar nicht mal so lange hin, weil,
wobei ich nicht weiß, ob ich das im Stream mache,
ich will endlich mal meinen Domain-Check fertig programmieren,
dass ich mitbekomme, wenn meine Domains ablaufen.
Ja, aber das kommt bestimmt als nächstes.
DevSec, Full-Stack-Cloud-Agile-Ops oder sowas.
Mit meiner 4090 musst du echt mal in Hogwarts,
Legacy anzocken.
Oh, dann kommt Twitter zu mir
und fuckt mich ab.
Harry Potter interessiert mich so überhaupt nicht,
aber ich habe gelesen, dass Hogwarts Legacy
auch mit einer 4090
nicht so toll aussieht, dass das Spiel grafisch
wohl
so Artstyle-technisch
ganz nice sein muss, aber
technologisch nicht das allergeilste
von der Grafik.
Ich muss sagen,
nachdem ich jetzt ja das Dead Space Remake
fast durchgespielt habe,
grafisch ist das wirklich nice,
haben sie sich wirklich Mühe gegeben.
Das ist jetzt nicht so nach dem Motto,
ich sage mal, Dead Space ist eh so ein bisschen
undankbar für Grafik.
Du hast fast nur Innenareale und sowas.
Ich würde jetzt nicht sagen, dass es das geilste ist ever.
Grafisch, aber
ist schon cool, Dead Space
zu spielen in Ultra-Details
mit Raytracing, Lightning und alles.
200 plus FPS die ganze Zeit.
Ist schon cool.
Hat schon was, ja.
Was ist los bei Twitter?
Sei froh, dass du es nicht mitbekommen hast.
Belass es auch lieber dabei.
Dass du diese
Riesenwelle auf Twitter nicht mitbekommen hast.
Ich glaube aber,
es hat sich mittlerweile ein bisschen beruhigt.
Zumal die Leute, glaube ich,
mittlerweile realisiert haben,
dass ihr Rumgehate komplett
das Gegenteil bewirkt hat.
Also auf der einen Seite
hat es Leute, die vielleicht
sich im Vorfeld mit der
Thematik der Twitter-Sendung
nicht so sehr auseinandergesetzt haben,
eher abgeschreckt, das zu tun.
Und es hat dazu geführt,
dass sich das Spiel wahrscheinlich
sogar noch besser verkauft hat als ohne.
Viele Leute sind doch erst darauf
aufmerksam geworden durch den ganzen Shitstorm.
Und ich will nicht wissen, wie viele Leute tatsächlich
Gibt es sowas wie Rage-Buying?
Moment, ich muss gucken,
ob es dieses Wort gibt.
Gibt es Rage-Buying?
Rage-Buying?
Rage-Buying?
Jetzt okay, tatsächlich, tatsächlich.
Sowas ähnliches.
Ich glaube, das haben auch manche gemacht.
Die waren so abgefuckt, dass sie gesagt haben,
es juckt mich eigentlich nicht, aber jetzt kaufe ich es mir erst recht,
um euch zu ärgern.
Ist jetzt vielleicht keine
sonderlich weise Entscheidung?
Oder Protest-Buying oder sowas?
Ist jetzt vielleicht keine sonderlich weise Entscheidung?
Wenn es einen eh nicht juckt?
Aber ich könnte mir vorstellen,
dass so emotional manche Leute
diesen Drang verspürt haben.
Boah, das hat sich krass verkauft, ne?
Fünf Millionen ist massive.
Aber gut, das ist auch eine Riesenmarke.
Ich meine, die Generation quasi jetzt,
die ein bisschen älter ist, äh, ein bisschen jünger ist als ich.
Bei mir war es eher noch Herr der Ringe.
So, so das Hype-Franchise, aber
dann ein paar Jahre später
waren sie alle verrückt
auf Harry Potter.
Okay, für mich war es Herr der Ringe.
Für die Mädels in meinem Alter war es eindeutig Titanic.
Wobei das ja kein, kein, ja...
Das ist ja nur ein einzelner Film.
Das ist ja kein, kein...
Mit so viel drumherum.
Und ich muss mich jetzt mal outen.
Ähm...
Ich fand Titanic gar nicht so schlecht.
Es ist ja, es ist ja irgendwie so
Standard, dass gerade
Typen in meinem Alter
sagen, oh Alter, Titanic, der beschissenste Film ever.
Ich fand den nicht so schlecht.
Ich meine, ich würde nicht irgendwie 120 mal ins Kino gehen,
wie das manche Mädels damals gemacht haben.
Der ging aber eigentlich voll klar.
Kann man sich, kann man sich mal angucken
und dann ist auch gut.
Was ich nie, was ich nie
verstanden habe ist,
warum die Leute auf die ganzen
Twilight-Filme so abgegangen sind.
Ich muss, da muss ich aber sagen, da habe ich auch nur den
ersten Teil geguckt und das
fand ich schon, man konnte sich das
angucken, aber Bock
mehr zu gucken hätte ich da nicht gehabt.
Die sind total drauf abgegangen.
Das habe ich, das habe ich bis heute
nicht verstanden, was, was die alle
an den Twilight-Filmen fanden.
Gut, doch, ich kann es mir insofern vorstellen,
die Twilight-Filme waren ja explizit dafür gemacht,
dass sich junge Mädels da gut reinversetzen
können, ja.
Das hat ja wohl auch,
hat ja wohl auch geklappt, aber
rein, also,
wenn man nicht exakt diese Zielgruppe ist,
waren die Filme
nix.
Naja, das habe ich nicht verstanden und gut, ein paar Jahre
später was, wobei, nee, das stimmt gar nicht,
oder? Ich erzähle nur Mist, Twilight
war doch eher nach Harry Potter oder
so parallel so teilweise, das war ja nicht
so lang. Die ganzen Harry Potter-Filme
gingen ja, glaube ich, irgendwie, frag mich nicht,
acht, neun Jahre lang oder so, die gingen ja ewig.
Wir haben ja zehn Jahre
Harry Potter zu euch produziert oder so.
Ähm,
und die Twilight-Dinger waren, glaube ich, eher
so, eher so parallel
dazu. Den habe ich
tatsächlich gar nicht geguckt.
Naja.
Bisschen danach vielleicht, ja.
Ach, was weiß ich.
Habe ich,
habe ich beides nicht so
verfolgt.
Was sind so deine Lieblingsfilme? Da müsste ich drüber
nachgucken. Ich kann dir nur sagen, dass Matrix
so ziemlich mein Lieblingsfilm schlechthin ist.
Habe ich auch schon
mehr, mehr als eine Handvoll
Mal geguckt, was ich selten, was ich
selten mal Film mache.
Bei den anderen müsste ich ehrlich gesagt
nachgucken, aber Matrix ist definitiv
...
sogar Nummer eins, ja.
Wusstet ihr eigentlich,
muss ich jetzt mal, Matrix ist auch eines
der wenigen Filme, wo ich tatsächlich das
Making-of geguckt habe. Normalerweise
gehen mir Making-ofs mal sonst wo vorbei.
Aber das war damals
technisch wegweisend und ich fand es auch
so drum herum ganz interessant.
Wusstet ihr, dass in Matrix dieser grüne
Look, also die,
die ganze Welt und die
ganzen Darsteller und so, die sind
ja alle so ein bisschen grünlich, weil es ja so
Hackermäßig aussehen soll. Wusstet ihr eigentlich,
dass dieser grüne Look in Matrix
nicht Post-Processing ist, sondern
dass die die Sachen wirklich grün angemalt
haben?
Also die haben den Leuten ein bisschen grüne Farbe ins Gesicht
gesprayt und überall hin gesprayt,
dass das mehr Hackermäßig aussieht
oder mehr Matrix-mäßig aussieht
in der Matrix.
Also das ist kein Post-Processing
Effekt mit dem grünlichen
Schimmer in der Matrix. Das ist
gefärbt, wirklich.
Also in Matrix 1 natürlich mal
nicht. Die anderen kannst du vergessen.
Das ist auch das einzige,
was ich dazu zähle.
Und
wusstet ihr, das habe ich mir auch noch
aus dem Making-of gemerkt, dass
Helikopter-Szene
wusstet
ihr, dass
diese Szene
mit dem, das
meine ich nicht, das hier
mit dem,
wo man die Stadt im Hintergrund
sieht,
wo man die Stadt im Hintergrund sieht,
da wo Morpheus
in dem Büro hockt,
das hier im Hintergrund, das Zeug,
ähm,
nee, das ist, man sieht es hier nicht
richtig, dass der Hintergrund
nicht CGI war, habe ich nicht geguckt,
werde ich auch nicht gucken, dass der Hintergrund
nicht CGI war,
sondern
ein gemaltes
Plakat,
da wo man Morpheus sieht,
ja, das hier,
bloß, bloß halt,
egal, dass das ein Plakat gewesen
ist im Hintergrund,
dass das weder CGI war, noch
Post-Processing, noch irgendwie
reingeschnitten oder sowas, das war einfach
ein Plakat, was die dahinter gehängt haben,
die haben, die haben quasi ein riesen, oder Plakat,
die haben eine riesen Leinwand gemalt,
dahinter,
das war, das war zum damaligen Zeitpunkt
die, die größte,
die größte Leinwand, die sie wohl je für den Film
hergestellt haben,
die, aber es, es sieht
echt nicht schlecht aus, ja,
fällt dir gar nicht auf,
deswegen gefällt mir wahrscheinlich Matrix 1
auch am besten, weil dort noch
relativ
viel nicht CGI ist,
wo es nicht notwendig war, damals
war CGI halt einfach noch nicht
so weit, dass du da so viel
machen konntest, ich mein, man hatte den
Making-of auch gesehen, wo sie die ganzen
Bullet-Time,
also wie sie Bullet-Time-Effekte
teilweise gemacht haben, wo sie
dann, wo sie halt den Hintergrund
nicht rein-rendern konnten und sowas, das ist richtig,
also dafür sieht's mega nice aus, für
das, dass es, das geht immer
noch, ohne Scheiß, Matrix 1 kannst
du dir 2023 angucken
und die Effekte gehen immer noch voll klar,
bei Sachen davor wird's,
wird's teilweise schon ein bisschen cringe,
wenn man sich die Effekte aus heutiger Sicht anguckt,
aber Matrix 1 geht, geht voll klar,
aber Matrix 2 schon wieder nicht,
da war, da war zu viel
CGI und dementsprechend für die damaligen,
für den damaligen technischen Stand auch zu
viel schlechtes CGI.
Übrigens, Jurassic Park 1,
ja, den find ich, den Film find ich auch nice,
was, was richtig gut gemacht ist,
kennt ihr, kennt ihr das
hier? Jurassic
Park
mit der Katze, ja, das da.
Warte mal, ich mach mal kurz
Musik aus.
Kennt ihr das hier? Das ist auch, das ist
richtig gut gemacht.
Ich mein, wir, wir gucken's gleich, wir gucken's
gleich komplett, ich wusste aber, da war's zu sagen.
Also, unabhängig davon, dass es
mega, mega gut gemacht ist, aber
man kann sich, glaub ich,
ungefähr vorstellen, wenn man
das so sieht, so vom Größenverhältnis vor,
wie sich so eine Maus fühlen
muss, wenn die Katze ihr hinterher
rennt in der Küche oder irgendwie
draußen ihr auflauert.
Also,
die muss, die muss schon
ein bisschen Panik haben, ja.
Gucken wir uns, gucken wir uns
mal, kommt, geht ja nur 1,14.
Absolutely still.
Das ist richtig
gut gemacht.
Ja, Jurassic Park 1 war auch nice.
Jurassic Park
1 war ja einer der ersten Filme,
wo sie
viele CGI-Effekte,
also, wo CGI mit
noch so klassischen
gebauten Robotern
oder wie nennt man das, so Maschinen halt
benutzt wurden, aber es war
viele CGI, aber das Coole war halt,
die haben halt auch sehr günstige,
sehr günstige Szenen genommen.
Für CGI, ja. Beispielsweise die,
im Original ist diese Szene
auch zu 90% CGI.
Also, eines der ersten so richtig großen
CGI-Dinger.
Und die haben halt
günstige Szenen genommen. Das war halt bei
Nacht, das war halt ein bisschen mit
Schatten und so. Das war halt auch
sehr günstig, das CGI-technisch
zu machen. Und ich muss ehrlich sagen,
ich finde das
angenehmer zu gucken,
als die neueren
Generationen. Wo halt
alles CGI gemacht wird, einfach weil's
irgendwie angenehmer ist. So nach dem Motto
ach, wir müssen das eigentlich gar nicht gescheit filmen,
wir machen dann einfach ein bisschen CGI
und dann ist es wieder gut.
Hast du dir mal die IMDB-Liste angeguckt mit den
besten Filmen? Ne, hab ich nicht.
Das einzige, wo ich in so Datenbanken
gucke, ist tatsächlich, wenn ich, sagen wir mal
bei Amazon oder irgendwie rum
rumscrolle
und mal gucken will, wie so die
Bewertungen sind, wenn ich mich nicht allein auf
Amazon-Bewertungen verlassen will.
Snake in Unity entwickelt.
Nein, das muss jetzt nicht sein.
In-Ear-Kopfhörer von
Hans Zimmer. Okay.
Chat, was meint ihr?
Wie hoch war der Anteil von Hans Zimmer
an diesen Kopfhörern?
Eher 0% oder
eher
0%?
Also außer den Namen drauf
schreiben.
0,001%.
Das ist
genauso wie bei Beats Kopfhörer.
Die gibt's
glaube ich gar nicht mehr, oder? Irgendwann hat das ja
Apple gekauft. Ich weiß gar nicht, ob es den Kram überhaupt noch gibt.
Wobei Beats, zumindest
die ersten Beats waren ja auch richtig kacke.
Der hat die 100% selber entwickelt
und verwendet sie im täglichen Leben. Ja.
Okay. Das wird
so sein. Denke ich auch.
Denke ich auch, dass das so ist.
Oh please, nicht noch. Wo wir wieder bei CGI
Filmen sind, die kein Mensch
braucht, ja?
Ist CES nicht schon ewig vorbei?
Die Videoempfehlung war auch schon mal besser.
Ne.
Wir haben das immer noch nicht hingekriegt.
Das Gute ist,
wir haben die ganzen Sachen
gespeichert
und ich hab auch die ganzen
die ganzen malwareverseuchten
Dinger noch. So.
Okay. Excellent.
Ach, ich kann euch noch was erzählen.
Wir müssen doch mal ganz schnell GitHub Trends
gucken, so wie wir das jede Woche machen.
Um wahrscheinlich wieder festzustellen,
dass es nichts gescheites gibt.
Außer Krypto und AI wieder.
Ähm, so.
Date range this week.
Was sagt, was macht eigentlich der Fiat Champ?
Da hab ich jetzt schon eine Weile nicht mehr reingeguckt.
Oh, hier. Okay, der will mitmachen.
Das ist schon mal nice.
So, AI, AI,
AI, ne, Zeug.
Tritt hier jemand? AI.
Core-Utils.
Okay. Das ist auch wieder so ein Ding, wo man
sich fragt.
Muss man, muss man Tools, die
Ich will da keinen davon abhalten.
Kann man ja alles machen, aber
muss man unbedingt so die Basic Tools,
die es seit irgendwie gefühlt 20 Jahren gibt
und eigentlich auch zum größten Teil
genau das machen,
was man will und so funktionieren,
wie man sich dran gewöhnt hat.
Ist das wirklich sinnvoll, LS und Gedöns in Rust
neu zu implementieren, einfach nur weil es geht?
Ich glaube kaum einer hat sich bei
LS bisher gedacht. Oh, LS,
LS ist mir aber viel zu langsam.
Das müsste rewritten werden in Rust.
Aber es hat vielleicht auch seine Vorteile.
Vielleicht, vielleicht hat es auch seine Vorteile.
Weiß ich nicht.
Ja, Sudo, Sudo ist ja auch nicht Core-Utils.
Also was haben die da,
was haben die da alles für Tools dabei?
Ja, unter anderem LS.
Ich habe keine Ahnung, was hier noch alles drin ist.
Was haben die denn, was haben die denn
eigentlich für, was haben die, was haben die für Tools alles?
Was haben die denn, okay, also
hier, Utilities.
Achso, ist doppelte, doppeltes.
Okay, was haben sie denn hier?
Basename,
Alter, Basename. Basename sind fünf
Zeilen Code oder sowas. Moment, das muss ich mir jetzt mal
schnell angucken.
Sehr gute,
exzellente Benamung.
Basename,
Source,
Basename.
Fuck, warum ist das so viel?
Basename, Mann.
What the fuck?
Warum ist das so viel?
Ach, Moment, das ist Argument Parsing,
oder? Was ist
Basename? Zeige ich dir das.
Basename
holt dir, wenn du, wenn du
Art hast zu ner Datei,
was ist denn mal hier?
Holt dir den Dateiname raus.
Guck, oh.
Also, du hast sowas wie Echo,
Tackle, Blub,
Cute Chat,
lul.txt,
oh,
Basename. Ach, kann man das
gar nicht pipen, oder was? Na geil.
Ah,
da muss man den Krempel hier irgendwie reinschreiben.
Ja, lul.txt
kommt da raus. Dachte, man kann das
wenigstens reinpipen. Okay, das wäre schon mal
ein Verbesserungsvorschlag. Wie wäre
es mit, wie wäre es mit reinpipen
können, Gachibas?
Was natürlich immer geht, ist, wenn man,
nur mal so, nur mal so als Tipp,
wenn ihr,
wenn ihr das Problem habt,
dass ihr
Text habt und in ein anderes Kommando
reinpipen wollt, aber das Kommando unterstützt
nur Parameter und keinen
Standard in, dann könnt ihr einfach xargs
davor schreiben und xargs
ruft dann dieses Kommando da hinten
auf mit dem Input
als Parameter.
Das ist tatsächlich ganz praktisch.
Und es sorgt auch dafür, dass es die maximale Anzahl
an Parameter nicht übersteigt
und ruft es dann im Zweifelsfall, es ruft aber im
Zweifelsfall mehrfach auf. Das muss einem klar
sein. Also, wenn man jetzt hier eine ganz, ganz lange
Inputliste hat und die Shell unterstützt maximal
500 Parameter,
dann ruft es das auch zweimal auf. Also,
das darf man nur machen, wenn man auch okay damit ist,
dass es zweimal aufgerufen wird.
Ja, so funktioniert das also.
Okay, das macht Basename. Also,
da frage ich mich, warum die
Basename Implementierung
177 Zeilen lang sein muss.
Aber das ist wahrscheinlich Argument
Parsing zum größten Teil.
Ja, Argument Parsing,
Argument Parsing, Argument Parsing,
Argument Parsing,
auch noch Argument Parsing.
Hier geht Main Program los. Okay,
das ist eigentlich alles. Da war ich ja mit 5
Zeilen Code gar nicht so weit
so weit weg, oder?
Das ist alles anscheinend.
Argument Parsing.
Argument Parsing Hilfetext.
Ach ne, hier passiert
das Eigentliche.
Also, es hält sich
wirklich in
Grenzen. Hier passiert
das Eigentliche.
So viel Zeremonie.
Aber was ist
so richtig den Sinn davon, dass es das
jetzt nochmal in Rust implementiert gibt, alles
verstehe ich auch nicht so
richtig. Ich meine, sie haben die Basic Sachen drinnen.
Okay.
Außer, dass
es vielleicht nice ist für den
Projektersteller.
Ich verstehe die Daseinsberechtigung nur
teilweise.
Du findest meine Repos nicht mehr auf Github.
Github? Wobblors?
Da.
Ich meine,
du kannst wahrscheinlich auch
danach suchen. Wenn du Wobblors suchst,
dann findest du nichts.
Argument Parsing.
Argument Parsing.
Oh, ich
sehe gerade, ich habe es zu leise.
Ah, Moment.
Man muss ja auch nach User suchen.
Das geht ja, hier geht es ja
um Repository Names.
Die Githubs suche ich schon
immer kacke. Zum Beispiel, wenn
wir den Serious Max eingeben,
dann findet man hier wahrscheinlich auch
Ah ja gut, der hat ein eigenes.
Das ist natürlich sehr schlau von ihm,
dass er sich ein eigenes
Repo angelegt hat mit seinem Namen.
Pfeiffer Time.
Da findet man ihn nämlich über die Suche.
Und man kann ihm Bitcoins donaten.
So sollte man das machen, ja.
Richtig, richtiger
Pfeifferer.
Wie würde man
diese Implementierung auf einem vorhandenen
System nutzen? Wie welche Implementierung?
Die Rust Implementierung.
Da wahrscheinlich ein anderes
Verzeichnis legen.
Und dann mit dem Pfad aufrufen.
Oder aber, du änderst deinen
Path, dass dieses Verzeichnis, wo du
die Rust Tools drin liegen, Vorrang hat
versus den anderen.
Das geht schon.
Ersetzen würde ich ehrlich gesagt die
Build In Tools nicht unbedingt.
Da würde ich mir eher Gedanken machen.
Ich muss gerade mal was checken.
Sound Settings ist es glaube ich.
Mikrofon aussteigen, alles gut.
Ich wollte euch noch irgendwas erzählen,
bevor wir uns ein paar Videos angucken.
Erstmal überlegen, was war das denn?
Achso, ja, genau. Jetzt weiß ich wieder,
was ich euch erzählen wollte.
Also, jetzt weiß ich wieder,
was ich euch erzählen wollte.
Ich bin wieder sidetracked ohne Ende.
Wir wollen erstmal Github Trends
fertig gucken, ob es irgendwas
spannendes drin gibt.
So, AI, AI, AI, AI.
NeoVim Chat.
Blazingly fast
Start up time.
NeoVim S
IDE.
NVJet Chat.
Ist das ein NeoVim Config?
Ok, warum nicht.
Why not?
Blazingly fast.
Blazingly fast.
Ich mag so Vim Config
Distribution nicht.
Gibt es ja schon eine ganze Weile.
Ich finde es immer noch am besten,
wenn man sich das selbst konfiguriert.
Und da bin ich mittlerweile auch zum Schluss gekommen,
dass ich mein Vim nicht mehr
bis zur Unkenntlichkeit customisieren will,
sondern den für kleine Edit-Tasks
in der Command Line verwende und für sonst
eigentlich nichts.
Ansonsten benutze ich Visual Studio Code
oder irgendwelche JetBrains IDE's
für die anderen größeren Sachen.
Ich war früher
auch so ein Hardcore Vim User.
Das Ding aufgebohrt hat
bis zum geht nicht mehr.
Aber ich finde es gut.
Konkurrenz ist in dem Bereich wirklich immer
von Vorteil.
Zum Beispiel was Microsoft für Visual Studio Code
wirklich mal langsam angehen könnte
ist besseres Syntax Highlighting.
Und zum Beispiel was anderes
als ihre komischen TextMate
Regex Parser
für Syntax Highlighting.
Irgendwas modernes benutzen.
Das ist halt das Gute.
Wenn die hier Innovationen bringen
und das zu gut funktioniert
und Microsoft sieht,
oh die Leute schwenken eher darauf um,
dann wird sich auch
Visual Studio Code was tun.
Das hat letztendlich für alles nur Vorteile,
wenn es hier mehrere beliebte Sachen gibt.
Ok, AI, AI, AI, AI,
Style Guide,
China-Chinesen-Zeug,
keine Ahnung.
Alles klar, ok.
Obviously.
Alles klar, verstehe ich.
Ich habe keine Ahnung,
was es hier geht.
What the fuck?
Warum ist da ein Zebra?
Was ist das für ein Repo?
Ok, den brauchen wir.
Google Translate
Google Translate
Ne, wie geht denn das?
Google Translate Website
Konnte man nicht?
Websites
Ok.
Tech Enthusiast Weekly
Ah, das ist so quasi wie
eine China-Chinesen
Hacker News
Zusammenfassung oder sowas.
Verstehe.
Gut, dass wir das gefunden haben.
Noch mehr China-Chinesen
Tools
Wo man jetzt gar nicht mehr weiß, was es ist.
Mensch.
Muss jetzt, müssen wir jetzt auch mal kurz gucken, was das ist.
NAS Tools
NAS Media Library
Management Tool
The future is promising.
Ähm.
Da ist überhaupt nichts drin.
Wahrscheinlich ist das, die versuchen wahrscheinlich
wirklich die Zensur zu umgehen.
Was anderes kann ich mir hier nicht
wirklich vorstellen.
Weil da ist ja gar keine Software drin.
Da ist irgendwas,
irgendwas China-Chinesen
mäßiges dabei, was wir als
Noobs nicht, als Außenstehende
nicht verstehen.
Ok, YouTube Downloader ist am
Start. Der ist richtig Pogu.
Also der Fork. Wusstet ihr
eigentlich, dass YouTube, YouTube DL
beziehungsweise YitYit
DLP auch sehr
viele andere Seiten unterstützt?
Supported Sites. Guck mal, unterstützt
sehr viele andere Seiten.
Also kann man
alles mögliche downloaden. Nicht nur
Ich
Ich sollte nicht im Bereich P
scrollen, weil im Bereich
P ist hier
wahrscheinlich MonkaTOS angesagt.
So, AI, AI,
AI, AI, ne, BitTorrent
AI, AI
China-Chinesenkram, AI
AI, AI,
Ok, meine Güte ey.
Also die Trends waren echt schon mal interessanter.
So.
Ah ja, jetzt kann ich euch noch die
kleine Story erzählen, die ich euch erzählen wollte.
Da gucken wir uns ein paar Videos an.
Wir hatten diese Woche
auf der Arbeit nachts einen Ausfall.
Teile von
unserem Produktivsystem waren kaputt.
Ja, und die haben auch ziemlich
Critical Information geleckt, weil es ganz schön
lange kaputt war.
Es war kaputt, glaube ich, so von
22 Uhr
bis 7 Uhr ungefähr.
Das war leider, das war nicht
Lufthansa.
Das hätte natürlich sein können.
Nein, es war nicht Lufthansa.
Es war nicht Lufthansa, es hat auch nichts
mit Lufthansa zu tun.
Informatikstudio kann man machen.
Es hat auch nichts mit
Lufthansa zu tun. So.
Und ich,
ich erzähle euch jetzt mal, ich erzähle euch jetzt mal
so ungefähr, anonymisiert
grob
was es gewesen ist.
Beziehungsweise auch, warum das so lange
gedauert hat. Und das ist wieder typischer
Business Enterprise.
Shit.
Also, das eigentliche Problem ist relativ einfach
zu erklären.
Es wurden DNS Server abgeschaltet.
Also, es gibt genug funktionierende
DNS Server, ja. Es wurden zwei alte
DNS Server abgeschaltet.
Und
das hat erstmal keine Auswirkung gezeigt.
Allerdings
wurde bei einem
nächtlichen Lauf unseres Config
Management Systems
die Hostdatei, also
beziehungsweise die Resolve Datei
abgeschaltet und die alten DNS Server
rausgeschmissen.
Also die jetzt veralteten DNS Server rausgeschmissen.
Sollte eigentlich auch nichts bei passieren.
Ist auch nichts bei passiert.
Allerdings im gleichen Config Management Lauf
wurden auf dem System
Container reloaded.
Die müssen anscheinend
aus irgendwelchen anderen Gründen reloaded werden.
So.
Das Reloaden der Container
hat dazu geführt, dass
da muss man wissen, was da für eine Anwendung läuft.
Da läuft so ein komisches
selbstgestricktes
Java Zeug drin.
Und das funktioniert folgendermaßen.
Wenn das Java Zeug startet,
dann geht es zu den DNS
Servern und löst bestimmte Namen
auf. Und das macht es einmal
Add Startup und dann nie wieder.
Das heißt zum Zeitpunkt
des letzten Startups vor zwei Monaten
oder so, waren die alten DNS
Server noch da. Namensauflösung ging
ohne Probleme. Alles gut.
Und
diesmal waren die Nameserver halt weg.
Beim Reboot.
Und er hat zufälligerweise versucht,
einen von den, es stehen vier Nameserver
drin, zwei alte,
die es nicht mehr gibt, und zwei neue.
Und da hat er zufällig versucht, den
alten abzufragen und ist dann abgekackt.
So.
Der Bug im Config Management war,
das ist jetzt nur, dass ihr wisst, was gewesen ist.
Das ist eigentlich relativ
Standard Zeug.
Bis jetzt noch nichts wildes.
Der Bug im Config Management war, also eigentlich
hat es ja das Config Management
richtig gemacht. Es hat die alten Server rausgeschmissen.
Das Problem ist nur, dass keine
Abhängigkeit definiert war zwischen Änderungen
an der Resolve
Datei und
am Reload des Containers, so dass
die Container
zuerst reloaded wurden
und die Resolve Datei danach
erst angefasst wurde. Also zum Zeitpunkt
als die Container reloaded wurden,
standen noch, wie die Wochen davor
auch, zwei richtige und zwei
falsche Nameserver in der
Resolve Datei drin.
Das wäre davor auch kaputt gegangen, hätte man es reloaded.
Allerdings, hier hätte es
fünf Sekunden später getan und es wäre nicht kaputt
gegangen. Gut. Also deswegen ist es kaputt gegangen.
Aber jetzt kommt der Hit,
warum das gar nicht großartig aufgefallen
ist. Also.
Das ist der Technik Teil. Der ist relativ
einfach zu beantworten und
hat halt irgendeiner nicht dran gedacht
oder war nicht bewusst, dass man
eine Abhängigkeit eintragen muss
zwischen Resolve Datei und Container Reload.
Da muss man auch wissen,
wie die Anwendung da drauf funktioniert.
Könnte man sagen, ja hat man
daraus gelernt, trägt man ein,
das ist im Prinzip zwei Zeilen Config Management,
dann ist das definiert und fertig. Passiert nicht mehr.
So. Aber, warum das so lange
gedauert hat und warum es nicht aufgefallen ist.
Und jetzt kommen wir zum richtig krassen
Business Enterprise Teil,
wo sich vielleicht der eine oder andere auch wieder entdeckt.
Und zwar, das erste ist, wir machen
also was heißt wir machen, das hört sich ja so an,
als würde ich das machen. Ich habe damit eigentlich gar nichts zu tun.
Ähm.
Es gibt Leute bei uns,
ja das kommt nächste Woche wahrscheinlich,
da bin ich gespannt. So.
Es gibt bei uns ja morgens,
also wir haben hier Leute, die sind 24
7 vor Ort
und äh eskalieren
Fehlermeldungen, gucken sich das Monitoring an,
führen nächtliche Wartungsarbeiten durch und sowas.
Die sind 24 7 da
und die führen um
4 Uhr 30 oder 5 Uhr 30,
ich weiß es nicht genau, es ist auch
vollkommen unerheblich. Sagen wir einfach
4 Uhr 30.
Führen die einen
Test durch der produktiven
des produktiven
Services.
Bisschen laut, oder?
Geht eigentlich.
Die Musik baut extra Spannung
auf hier jetzt. Also sie führen quasi
um 4 Uhr 30 einen Test
der produktiven Live Services
durch, weil
viele im Außendienst fangen auch schon
relativ früh an im Büro zu arbeiten
und sowas. Also dass die Leute quasi so
ab 7 Uhr, ab 7 Uhr
geht meistens der Traffic dann hoch.
Und das heißt die testen
das ganze schon 4 Uhr 30 um zu gucken
ob eben alles soweit ready ist
dass der Außendienst da drauf arbeiten kann.
So und der Test
war ok.
Die haben ihren
täglichen Produktiv
Services Test durchgeführt.
Das läuft unter anderem auch als
Smoketest, egal
viele viele nennen das so.
Also die haben ihren täglichen Smoketest durchgeführt
und der hat
gesagt, a kriege, alles gut
funktioniert. Sind wir schon mal beim
ersten Problem.
Funktionen die der Außendienst dringend
benutzt
werden in dem täglichen
Service Check nicht
erfasst und
das, jetzt kommt ja der Hit
und das obwohl
ein Service kaputt
war, der vom Management
als eines der wichtigsten Services
die wir anbieten definiert wurden.
Also sprich, wir haben einen
Test, der die Funktionsfähigkeit
der Live-Umgebung testen soll.
Der erfasst allerdings
nicht einen der als
am wichtigsten definierten Services.
Ist auch schon mal Business Enterprise
Extreme.
So, das war das erste.
Deswegen hat man
schon mal nicht gemerkt,
dass es wirklich richtig Hardcore
kaputt ist und das
bevor Leute vom Außendienst
gemerkt haben, dass es kaputt
ist. Das ist immer doof, wenn man
davon bekommt und sagt, es ist kaputt, obwohl man
selbst noch nicht weiß.
So, das ist das erste. Das zweite war
normalerweise
werden solche Änderungen ja
getestet im Vorfeld. Das heißt es gibt
quasi nochmal
einen etwas
kleineren, aber
nach Möglichkeiten identischen
Nachbau der
Live-Konfiguration,
der Live-Infrastruktur
oder der produktiven Infrastruktur
um darauf zu testen. Und das wird auch
ausführlich gemacht. Wir haben ja ein
komplett eigenes Test-Team.
Die machen Performance-Tests
zum Beispiel.
Die machen funktionale
Tests, geht der Button noch oder
druckt das, wenn man da drauf drückt und so was.
Also sie testen den Kram und das machen
die eigentlich mehr oder weniger den ganzen
Monat über. Mit jedem Fix,
mit jeder Version, mit jeder Änderung.
Dementsprechend funktioniert der meiste
Krempel auch. Und wir testen natürlich
unsere Infrastruktur-Änderungen auch.
Abgesehen davon, das was
Azure ist, da sieht es ein bisschen anders aus,
aber so die
normalen Sachen, Infrastruktur-Änderungen, werden dort
auch getestet, sagen wir mal
soweit möglich.
Also wenn man jetzt zum Beispiel
irgendwelche Core-Switches
updaten will, ist es natürlich
schwierig, dass in einer Testing-Umgebung,
wenn man das nicht alles 1 zu 1
nochmal Millionen ausgeben will, das zu haben.
Aber zumindest was Server-Infrastruktur
angeht, das hat ja zur Zeit dafür gereicht,
wird da nochmal getestet. Und
wir haben diese Änderung,
diese mit den DNS-Servern,
das wurde auch in der Test-Umgebung
getestet.
Und in der Test-Umgebung
gab es keine Fehler.
Obwohl man sich jetzt eigentlich denken sollte,
Moment, das hätte doch in der Test-Umgebung
auch auffallen müssen.
Naja, das ist
in der Test-Umgebung nicht aufgefallen, weil
irgendjemand von,
ich kann jetzt den Namen nicht sagen,
von welchem Projekt, weil
jemand aus einem Projekt der Meinung war,
wobei ich kann das doch, ich kann das
umschreiben. Die Services,
die kaputt gegangen sind,
die sollten schon
vor ungefähr einem Jahr
nach Azure umgezogen werden.
Man hat allerdings diesen Azure-Umzug
durchgeführt,
bis inklusive der Test-Umgebung
und dann
hat man einfach nicht weiter gemacht.
Das heißt seit einem Jahr
sind alle Sachen
umgezogen, nur die produktive
Umgebung nicht.
Also dieser Teil, dieser Produktiv
dieser Service läuft
überall anders in Azure,
in der Cloud mittlerweile,
außer im Live-System,
da läuft er noch bei uns im Rechenzentrum.
Heißt im Endeffekt, der Test in Abnahme
oder in
Testing, je nachdem auch immer
wie man das Ganze nennen mag,
ist nicht aussagekräftig,
weil es komplett anders, zumindest für diesen Service,
komplett anders aufgebaut ist.
Das heißt, man konnte das gar nicht merken.
Das ist das nächste.
Und jetzt kommt noch ein weiterer
Hit, warum man es nicht gemerkt hat,
als es kaputt gegangen ist.
Also es wäre das noch nicht genug.
Als der Service kaputt gegangen ist,
nachts, in unserem
Live-System, gab es
Monitoring-Fehlermeldungen.
Das Monitoring hat gesagt, ey guckte mal,
dort ist was kaputt.
Das Problem ist jetzt nur, also wie gesagt, wir haben ja auch
24-7 Leute da, die sich um Monitoring-
Fehlermeldungen kümmern und sich das Ganze angucken.
Jetzt kann man sich ja fragen,
warum haben die
diese Fehlermeldungen nicht interessiert?
Also ich kann euch verraten, die Fehlermeldungen
wurden gesehen und die Fehlermeldungen
wurden ignoriert.
Aber allerdings, warum wurden denn
die Fehlermeldungen ignoriert? Hatten die Leute
keinen Bock? Oder
was war da los?
So und das liegt daran,
dass, und jetzt kommt der
eigentliche Business Enterprise Cack,
der
eigentliche Business Enterprise
Cackle-Time, und zwar
seit
diesem versuchten
Umzug,
seit diesem versuchten Umzug
von diesem Service nach Azure,
der dann in der Testing-Umgebung
bisher abgebrochen wurde,
gibt es Fehler.
Jede Nacht, jede Nacht
gibt dieser Service
Falschmeldungen im Monitoring. Jede Nacht.
Seit über einem Jahr.
Und dementsprechend
dachten die Leute, die die Monitoring-
Meldungen bekommen haben natürlich,
das sind Falschmeldungen.
Das ist gar nicht wirklich kaputt.
Das sind halt die üblichen Falschmeldungen, die immer kommen,
jede Nacht. Da ist nichts kaputt.
Und die waren ja sogar so
schlau und haben danach noch
ihren Test durchgeführt, ihren
Live-Services-Test.
Und der hat auch gesagt, es ist alles okay.
Und dann sind die halt davon ausgegangen,
das waren übliche Falschmeldungen,
muss man nichts machen. Und erst morgens
so um 7, 8
Uhr ist es dann aufgefallen,
als die ersten Leute im Außendienst
bei unserer Hotline angerufen
haben, haben gesagt, Jungs, hier ist
irgendwas kaputt.
Das ist wieder geil, oder?
Das ist
typischer, typischer Business
Enterprise Chat, Mann.
Das ist typisch. Ach,
und noch was weiteres, wo ich euch auch
wird ja noch
lustiger dabei.
Normalerweise,
okay,
normalerweise ist es so, dass im Falle
einer Störung
gibt es so
einen Eskalationsleitfaden,
nennt sich das, der hängt auch überall rum
und unter anderem sieht der
vor, dass ab einer gewissen,
ab einem gewissen
Störungslevel, also
quasi ab einer Stufe, also
ab einer gewissen Wichtigkeit,
also wie umfangreich das ist oder wer alles
davon betroffen ist, gibt es
dann in diesem Eskalationsplan
gibt es den Punkt,
dass der
Vorstand und
IT-Leitung und so per
Push-Message informiert
werden sollen
über den Vorfall.
Klingt ja sinnvoll,
klingt ja sinnvoll.
Das Problem ist nur gewesen,
dass
das nicht funktioniert hat,
weil wir
unser, naja
sagen wir mal, sehr knauserig eingekauftes
Kontingent an Push-Notifications
bei unserem Push-Notification-Provider
schon
exceeded hatten für die Woche.
Also sie konnten da noch nicht mal
Nachrichten drüber rausschicken,
dass es kaputt
gewesen ist.
Ja und warum?
Warum ist das so?
Warum ist das so?
Weil
ähm
mittlerweile
für jeden scheiß
Notification-Zeug rausgeschickt
wird und nicht etwa
eine Notification oder so
da reicht, nein
es wird stündlich,
es wird stündlich
ähm oder oder
alle zwei
Stunden oder so wird informiert
und mittlerweile sind
über 60 Leute
in diesem Push-Notification
in dieser Push-Notification-Group.
Das heißt, ihr könnt
euch vorstellen, wenn mal was kaputt ist
und es wird alle Stunde bis zwei Stunden
60 Leute
notificated,
dann ist dieses Kontingent von 1000
in der Woche ist es glaube ich sogar gewesen
relativ schnell aufgebraucht.
Und das war halt
der Fall, da konnten die Leute keine Push-Notification
mehr schicken.
Das war schon,
das war wieder wirklich Fail auf allen
Ebenen, Mann.
Und so wirklich den Leuten, die es kaputt gemacht haben,
kannst du eigentlich gar keinen großartigen
Vorwurf machen.
Also es hat ja gar keiner kaputt gemacht.
Das Konfigurationssystem
hat ja den Server sogar in den richtigen
Zustand gebracht. Leider war halt
der Reload der Container
zu früh.
Den Leuten kannst du gar nicht so wirklich
einen Vorwurf machen. Ich meine, du konntest
es nicht feststellen, dass es kaputt ist.
Du konntest es im Vorfeld nicht testen, dass es kaputt geht.
Also verlässlich,
ähm,
Fehlermeldungen interessieren keinen,
weil laufen welche kommen. Also du hattest
gar keine Chance,
da irgendwas zu machen.
Schon nice, oder?
So sieht die Business Enterprise Welt aus,
Leute. Also wer denkt,
dass es im Business Enterprise Umfeld
irgendwie besser läuft,
ist nicht so.
Macht euch da keine Gedanken. Es kochen alle
nur mit Wasser.
Und so Dinger, ich gehe mal davon aus, wenn ihr
in einem ähnlichen Bereich
vielleicht arbeitet,
so oder so ähnliche Fälle hatte jeder
schon mal. Die kochen alle nur mit
Wasser, genau. Es war auch noch
irgendwas, aber das habe ich schon wieder verdrängt.
Es war noch irgendeine Kleinigkeit,
war auch noch, die lustig war.
Wo ich mir auch gedacht habe, das jetzt auch noch, oder wie?
Weiß ich aber gerade nicht
mehr, fällt mir gerade nicht mehr ein.
Sag mal,
bist du ein Bot?
Das ergibt so überhaupt keinen Sinn,
was du schreibst. Könnte man nicht
auch einfach die Anwendung
so entwickeln, dass sie die anderen DNS
aber probiert, wenn es einer nicht, natürlich
hätte man das machen können.
Ich glaube dazu,
Leute, ich glaube, dazu muss ich heute noch schnell
ein Video aufnehmen. Ich nenne
das Video, Einmal mit Profis.
Das ist doch eigentlich
ein ganz guter Titel, oder?
Wir brauchen bloß noch einen samt, habt ihr
einen guten, habt ihr einen guten Clickbait Titel
für dieses Video?
Ich bin Einmal mit Profis, ist eigentlich
wirklich ganz gut.
Ja, dann lass halt unformatiert.
Enterprise
zum Canterprise.
Ja.
Millionenverlust durch
einfachen Fehler.
Das ist tatsächlich ein ziemlich guter Titel
und seriously,
so weit von der Realität weg ist das nicht.
Das war bestimmt verdammt teuer.
Dann mache ich Millionenverlust durch
einfachen Fehler und
auf Thumbnail mache ich Einmal mit Profis.
Ich glaube, das ist ganz gut.
Irgendwie so.
So machen wir das. Okay.
So, gucken wir uns mal ein paar Videos an.
Genug geschwätzt.
Irgendwas habe ich noch vergessen.
Es war noch ein weiterer Punkt,
wo man sich auch schon gedacht hat,
Mann, ist das bescheuert.
Durch einfachen IT-Fehler.
Ich mache übrigens absichtlich
Sachen, die man mit Bindestrich zusammenschreibt,
nicht mit Bindestrich im Titel
und schreibe manchmal Sachen groß,
die man nicht groß schreibt im Titel,
weil die Leute suchen halt nicht mit Bindestrich.
Naja, nicht Lufthansa.
Das kommt ganz darauf an, was man bezahlt in Azure.
Aber gerade NFS
oder Azure Files ist abfuck langsam.
Also ich habe keine Ahnung,
wer ernsthaft Azure Files über NFS verwenden kann
und damit glücklich ist.
Das funktioniert so überhaupt gar nicht
gescheit.
Lass mich mal kurz in mich gehen.
Es gab noch einen Punkt,
den habe ich vergessen.
Das war auch noch was witziges,
wo ich gesagt habe,
das kam auch noch mal oben drauf.
Naja, wurscht.
Fällt mir vielleicht wieder ein.
Okay, was gucken wir uns denn jetzt an?
Was haben wir hier zu bieten?
NeoWim in 100 Sekunden.
Wenn wir schon gerade dabei sind, Leute.
Wie sieht es aus?
Viel Verkehr, wenig Gehalt.
Okay, NeoWim in 100 Sekunden, das geht jetzt.
Der zeigt da glaube ich
sogar NeoWim Chat.
Der lässt sich das nicht entgehen,
wenn er eine Runde mimen kann,
das auch zu machen.
NeoWim.
Ein sehr extensiver, keyboardbasierter Editor,
der die Produktivität der modernen Programmer optimiert.
In 1976 hat Bill Joy
V.I. erschaffen.
NeoWim.
Ein sehr extensiver, keyboardbasierter Editor,
der die Produktivität der modernen Programmer optimiert.
In 1976 hat Bill Joy V.I. erschaffen.
1991 wurde er von Bram Molinar
als Vim verbessert.
Dann kam NeoWim 2014.
Das muss man auch mal wirklich
Fairness halber sagen.
Der Kerl hier, der hat Vim
1991 gestartet und der
entwickelt heute da immer noch dran.
Könnt ihr euch das vorstellen?
Über 30 Jahre an der gleichen
Software zu entwickeln?
Ich schaff's ja kaum länger als 2 Wochen
bei irgendeinem Thema zu bleiben.
Dann kam NeoWim 2014.
Es ist ein Fork von Vim,
der es als Einstiegsvergleich
99% identisch ist für den Grundausgleich.
All of your favorite, hell,
I can't exit Vim memes,
are still perfectly valid.
But its codebase was restructured
with well-documented APIs that embrace
new features from the community,
which has resulted in a thriving plug-in ecosystem.
Most importantly,
Scripting can be accomplished
in not only VimScript,
but also Lua.
Das hab ich nicht so genau verstanden.
Warum genau haben die jetzt eigentlich
Lua in NeoWim reingehauen?
Und ich weiß,
dass sie am Anfang versucht haben,
VimScript irgendwie zu Lua zu transpilen,
dass es schneller wird,
aber das hat nicht funktioniert.
Aber,
warum haben die nicht irgendwas anderes genommen?
Irgendeinen
Python-Interpreter,
einen kleinen JavaScript
oder so?
Warum muss es Lua sein?
Aber ich geh davon aus,
es hat schon seinen Sinn.
Vielleicht waren es auch einfach Lua-Fans,
die Lua in der Multi-Paradigm-Language lernten,
das auch auf Plattformen wie Roblox
genutzt wurde.
Es geht hier um irgendwelche Editor-Sachen,
dafür ist Python auf jeden Fall schnell genug.
Das auch auf Plattformen wie Roblox genutzt wurde.
Lua hat den Kode-Auto-Kompletion
für das Gerät-Server-Protokoll
in Lua genutzt.
Es hat einen skriptbaren Terminal-Emulator
in Ergänzung von einem Haufen tollen Plug-Ins,
wie Telescope,
ein Fuzzy-Finder,
der über dein Filesystem searchen kann.
Um anstatt von NeoWim zu starten,
kannst du mit dem End-Wim-Kommand
wie beim normalen Wim
auf I klicken, um in den Insert-Modus zu gehen
und anfangen zu typen,
dann auf Escape zu klicken, um wieder in Normal-Modus zu gehen.
Nimm einen Kolon, um in den Command-Modus zu klicken,
wenn du den Computer helfen musst.
Aber das lustige an NeoWim ist die Kustomisierung,
die kann mit dem traditionellen init.wim-File
oder alternativ mit einem init.lua-File behandelt werden.
In diesem File können wir mit Lua-Code
eine Wim-RC konfigurieren,
wie bei Tabs oder Spacen.
Sobald das Konfigurieren komplexer wird,
können wir es in Modulen in der Lua-File
einstellen, die automatisch von NeoWim
geloadet werden.
Von da an können wir einen Package-Manager wie Packer
nutzen, um ein Color-Theme wie OneDark zu installieren.
Ich würde ja sagen, wo sind wir,
wenn man für seinen Editor schon einen Package-Manager
braucht, aber letztendlich ist ein Package-Manager
nichts anderes wie ein Extension- oder Plugin-Manager.
Also, was ja auch so die meisten
Sachen heutzutage haben.
Warum nicht? Ist ja sogar gut.
Aber man muss sagen,
dass manche Anwendungen
ein bisschen so in die Falle tappen.
So nach dem Motto, wir haben jetzt ja Extensions,
Möglichkeit, da müssen wir
eben im Base-Produkt nichts mehr einbauen.
Das finde ich blöde.
Das Base-Produkt selber muss alleine für sich
genommen schon gut taugen.
Sonst bringt dir das mit den ganzen Extensions auch
irgendwo nichts. Weil bei Extensions
hast du immer das Problem, also nicht offizielle
Extensions, bei offiziellen Extensions ist
es ja quasi das gleiche, wie wenn es eingebaut wäre,
dass irgendein Typ halt sagt,
nach einem Jahr, ich habe keinen Bock mehr, das weiterzuentwickeln.
Und dann sitzt er dann da.
Package-Manager like Packer to install
a Color-Theme like OneDark and some
icons to go along with it. You'll need an LSP
server for code completion. You might also
want nvimtree to easily explore
the file system. TreeSitter for syntax
highlighting. Das ist wirklich, TreeSitter
ist wirklich nice. Ich hoffe,
dass Visual Studio Code
auch mal sowas in
der Richtung demnächst macht.
Es gibt zwar ein paar Plugins, aber die sind alle
nicht sonderlich beliebt und nicht sonderlich weit entwickelt.
Aktuell macht Visual Studio Code
Syntax Highlighting über
TextMate.
TextMate, RackEx,
Syntax-Definitionen
und die Dinger sind halt kompliziert
as fuck und fehleranfällig as fuck.
Vor allem, sobald du
anfangen möchtest, eine Sprache in einer
anderen zu embedden.
Man muss ja mal sagen, das geht ja
beliebig weit. Du kannst ja,
wenn du eine HTML-Datei hast,
kannst du in dem HTML
Inline-JavaScript machen
und in diesem Inline-JavaScript
kannst du
CSS-Geschichten editieren
und sowas. Also,
da kackt das richtig ab bei.
ZOS-Mainframe-Emulator
Keine Ahnung.
Leute, das schreiben wir mal hin, das machen wir mal.
NeoVim
mit Plugins.
Wir kochen uns das einfach just for fun.
Das kochen wir uns irgendwann mal im Stream an.
Hups.
Da bauen wir uns ein
customized NeoVim.
Schonmal mit Java Editor gearbeitet.
Nö.
Warum sollte ich einen Java Editor verwenden?
Ich kann einfach Visual Studio Code verwenden.
Ich kann für Kommandozeile
Vim oder NeoVim verwenden.
Und ich kann für was richtiges
eine ordentliche IDE verwenden. Fertig.
Bevorzugt irgendeine
JetBrains IDE.
Und dann gibt es eine
Starter-Config, wie NVChat.
Du hast Syntax Highlighting, Code Completion
und viele andere...
Bald gibt es davon einen Fork, der sich
NVGigaChat nennt.
...Tools. Und jetzt bist du bereit, Code zu schreiben,
wie ein 10x-Ingenieur.
Jetzt, dass wir fertig sind, könnte ich dir erzählen,
wie man Vim auswählen kann, aber dann müsste ich dich töten.
Das war NeoVim in 100 Sekunden.
Wenn du mehr lernen willst, abonniere TJDebris.
Du nutzt Privat-Eclipse.
Nein! Gott, bitte, nein!
Nein! Nein!
Kann man denn sowas machen?
Nach was meintest du, soll ich googeln,
was eklig ist?
Java Editor...
Ah!
Ah, ne, Moment, das gehört nicht dabei. Nur Java Editor.
Das da?
Moment, Java Editor heißt Editor Struktogramme!
Hahaha!
Bist du...
Struktogramme, okay, ich seh...
Alter, was ist das?
Ein Struktogramm-Editor.
Okay,
das Ding ist einzig und allein
für Schulungszwecke gemacht.
Wisst ihr,
man muss sich ernsthaft überlegen,
wenn man eine Software
entwickeln muss,
die explizit für Schulungszwecke
gedacht ist,
dass dann das, was geschult wird,
mit der Realität wenig zu tun haben kann.
Versteht ihr, wie ich meine?
Wenn man sich an der Realität
orientieren würde,
bräuchte man keine extra Software,
die den Shit unterstützt für die Schulung extra.
Sondern man würde einfach
das in der Schulung machen,
was in der Realität gebraucht wird.
Struktogramm-Editor ist komplett für'n Arsch, Mann.
Ansonsten sieht das Ding halt aus
wie ne ganz normale Windows-Software
von 2003 oder so.
Jetzt nicht super Kacke,
aber nicht so wirklich was,
was ich benutzen will.
Und mal ganz davon abgesehen,
richtig Chillfreak, JetBrains hat auch
ein paar kostenlose IDEs.
Und...
IntelliJ ist kostenlos, oder?
Ich glaub schon.
Ich glaub, IntelliJ ist kostenlos.
Ähm...
Sonst noch was?
Ich glaub, das war's.
Ich glaub, die zwei sind kostenlos.
Nee, IntelliJ kostet nix.
Also die Community Edition,
aber das ist jetzt erstmal eh egal.
Die Python Community Edition kostet nix
und die IntelliJ Community Edition kostet nix.
Und die anderen?
Ich bin mir nicht sicher,
ne, Fleet hat mich bis jetzt
noch wenig gejuckt, ehrlich gesagt.
Ist Android Studio?
Nee, oder?
Ich bin blind, so hell wie die ist.
Developer Tools?
Nee, das kostet alles Geld.
Kostet alles Geld.
Das ist umsonst in der Community Edition.
Und PyCharm ist kostenlos
in der Community Edition.
Ich glaube, der Rest kostet was.
Wobei man sagen muss,
der Preis finde ich persönlich,
also ich hab auch
ein JetBrains Abo.
Ich finde das schon
okay.
Weil,
du musst ja nur das für Individual Use
kaufen.
Und das kostet dich im Jahr,
na, ich bin jetzt hier,
das kostet mich im Jahr 173 Euro.
Ganz ehrlich, das kann ich
äh,
kann ich machen.
Das ist okay.
173 Euro, quasi das komplette Package.
Also, ne, bei mir
bezahl ich das tatsächlich selbst nicht, die Firma.
Ich hab's mal
versucht, über die Firma zu bestellen.
Die haben's irgendwie ewig nicht gebacken bekommen.
Aber ich hab hier nen privaten, nen privaten Account.
Mit, mit, äh,
Abo for Organizations ist das natürlich
teurer. Ja, nur wenn man das
in der Schule macht zu kaufen, ist das natürlich
Overkill. Wobei, man kann natürlich
auch die Testversion, äh,
extenden, wenn man das will.
Aber ich find das in Ordnung.
173 Euro
find ich vollkommen gerechtfertigt dafür.
Echt in Ordnung.
Ich glaub, wenn du eine EDU-E-Mail-Adresse
hast, kriegst du's umsonst.
Ja. Ich glaub, du brauchst ne EDU-E-Mail-Adresse,
dass das funktioniert.
Okay. Gucken wir uns mal an.
Was verdient ein Busfahrer?
Dirk ist
Busfahrer und sieht fast nie rot.
Aha. Okay.
Wahrscheinlich, wahrscheinlich
verdient der auch zu wenig. Wobei ich sagen muss,
ich, also ich hab viele Busfahrer,
in meinem Leben
erleben müssen.
Und da waren richtige
Volldeppen dabei. Ich kann's wahrscheinlich
keinem übel nehmen,
weil er sich den Scheiß da
jeden Tag geben muss. Aber
ich, ich hab schon
jede Menge Abfuck-Busfahrer gesehen.
Kannst du das auch von
der Steuer absetzen? Ja, kann ich.
Ist schon cool.
Muss ich schon sagen. Ist schon mega.
Mega. Also wenn man da nicht genau schaut.
Mal gucken, wie viel er verdient.
Ist gleiche Unfall passiert.
Also ohne diese Zulagen würde das Geld
nicht reichen.
Hallo, ich bin der Dirk. 47 Jahre alt
und seit 21 Jahren Linienbusfahrer
hier in München.
5 Uhr. Monka ist
Alter, der ist um
3 Uhr 30 aufgestanden
oder so. Also ich bin
früher 5 Uhr 45
aufgestanden zum größten Teil
und war dann irgendwie so
7 oder so dann
auf der Arbeit.
Da war ich schon für den restlichen Tag
eigentlich nicht zu gebrauchen. Das habe ich
bloß damals nicht realisiert.
Wir gehen jetzt rein ins Verwaltungsgebäude
und schauen, welches Fahrzeug wir haben.
Guten Morgen.
Also wir fahren jetzt
die Linie 62-63.
Das ist ein Linienwechsler.
Ein Linienwechsler?
Das ist ein Gelenkbus.
Okay, alles klar.
Als erstes starten wir das Fahrzeug.
Also schlimmstenfalls kann jetzt sein,
dass das Fahrzeug nicht funktioniert.
Das ist immer so ein großes Problem bei diesem Fahrzeug.
Da haben wir echt wirklich Türprobleme.
Also so ist das Fahrzeug jetzt.
Was stand da? Ich habe gerade nicht geguckt.
Was stand da eben da?
Das ist immer so ein großes Problem bei diesem Fahrzeug.
Da haben wir echt wirklich Türprobleme.
Debrüt-Gelenkbus
375.000 Euro.
Naja gut, den muss der Typ ja nicht selbst bezahlen.
Also so ist das Fahrzeug jetzt von außen gut.
Beleuchtung funktioniert auch alles.
Wenn wir von der
Städteallee zum Ostbahnhof fahren.
Das ist die größte Herausforderung,
weil tatsächlich wir da mit viel Verkehr
rechnen müssen und auch mit vielen Fahrgästen.
Insgesamt fahre ich ungefähr 45 Linien
von 90.
Und ja,
es ist immer wieder spannend.
Das ist halt auch die Abwechslung,
die wir beim Busfahren haben.
Der 62-63 ist die längste Linie.
Wir haben einen Umlauf von 4 Stunden.
Das dauert 4 Stunden.
Also fährt er am Tag
zweimal die Runde, oder wie?
Und in 4 Stunden sind wir hoffentlich
wieder gut angekommen.
Das ist immer ganz wichtig.
Moment!
Ach guck mal, der sitzt
hinter einer Glasscheibe.
Also sitzt der jetzt ein bisschen gesicherter
als früher in den Bussen.
Wo dann
irgendwelche
Gestörter im Zweifelsfall
auch was entgegenschmeißen konnten und sowas.
Da haben wir natürlich auch verschiedene Stauzonen,
wo wir auch unpünktlich sein können.
Wenn er um 6.30 Uhr
schon unpünktlich wäre.
Wir haben eigentlich
immer grün.
Ah, das ist nice. Ist ja auch sinnvoll.
Da kommen noch welche.
Und dann freut man sich natürlich
über ein Dankeschön.
Das wäre halt auch schön. Aber das gibt es halt selten.
Das ist den Leuten wahrscheinlich
gar nicht klar.
Ich habe 2005 einen Übergriff von einem Fahrgast,
der mich zusammengeschlagen hat.
Dieser Fahrgast
war halt sehr auffällig,
weil er sehr umeinander geschrien hat.
Ich bin dann aufgestanden und habe ihm gesagt,
er soll sich ein bisschen beruhigen.
Der wollte dann
ein paar Haltestellen später aussteigen
und
hat mich dann
ins Gesicht mehrmals geschlagen.
War sportlich angezogen
und eine Sporttasche dabei.
Besser, Alter!
Natürlich immer, wenn solche Leute dann einsteigen,
die dem Täter ähneln, dann muss ich sagen,
das ist bei mir schon hoch.
Ist halt auch kacke, wenn du permanent Angst
haben musst täglich auf der Arbeit,
dass dich irgendein Vollspast angreift.
Ich würde es nicht machen wollen.
Da musst du den ganzen Tag
Bedenken haben,
dass irgendein Typ da austickt.
Das ist jetzt die Tür.
Aber das haben wir gleich wieder.
So, jetzt sollte es wieder funktionieren.
Der Busfahrer allgemein braucht
jetzt keine intensive Ausbildung.
Wichtig ist einfach,
dass er natürlich gesundheitlich fit ist.
Das ist ganz, ganz wichtig.
Und natürlich auch diese zwei bis drei Monate
Führerscheinausbildung.
Der hat jetzt einfach rebooted, dann ging es wieder.
Echt?
Damals habe ich ja den LKW-Führerschein schon gehabt.
Den habe ich bei der Bundeswehr gemacht.
Und tatsächlich war es dann sehr naheliegend.
Man hat halt viele Busfahrer gesucht.
Und das war für mich auch der Reiz natürlich.
Etwas Neues,
große Fahrzeuge zu fahren in der Stadt.
Natürlich auch mit verschiedenen Fahrgästen.
Schönen Tag Ihnen.
Mich langweilt Busfahren nicht.
Tatsächlich.
Die Fahrgäste sehen das natürlich anders.
Wahrscheinlich.
Der schaut da bloß aus dem Fenster raus.
Aber es ist tatsächlich immer wieder
hundertprozentige Konkurrenzzentration.
Ja gut, musst du aufpassen.
Kann ja jederzeit was passieren.
Kannst ja nicht...
Du weißt ja nicht,
vielleicht rennt jetzt hier von links gleich irgendein Typ drüber.
Oder hinterm Auto kommt jetzt irgendwie
einer mit dem Kinderwagen.
Man weiß das ja wirklich nicht.
Du musst ja wirklich die ganze Zeit gucken.
Du hast ja auch die Verantwortung dafür,
dass du nicht einfach Leute über den Haufen fährst.
Mittlerweile kann es auch sein,
dass du irgendwo langgefahren kommst
und es klebt einer auf der Straße.
Kommt ja auch ab und zu mal vor in letzter Zeit.
Also das ist sicherlich nicht ohne.
Schon einiges los.
Ich liebe Pünktlichkeit
und ich möchte das natürlich auch gerne meinen Fahrgästen anbieten.
Jetzt fahren wir wieder auf eine Busspur,
die uns
den Autoverkehr...
Genau, du willst ja auch ruhig fahren.
Ja, du willst ja auch ruhig fahren.
Und nicht, dass die Leute hin und her
geschleudert werden hinten in deinem Bus.
Ab geht.
Auf hält.
Ja, ist schon cool.
Muss ich schon sagen.
Schon ein Pogu.
So, jetzt kriegen die rot.
Und ich krieg grün.
Ja, und der hat es natürlich missachtet.
Der ist da einfach durchgefahren.
Anzeige ist raus.
Also wenn man da nicht genau schaut,
ist das gleiche Unfall passiert.
Jetzt haben wir gleich nochmal eine Haltestelle,
wo deutlich mehr Fahrgäste stehen.
Woher weiß er das?
Ach, so hat er gesehen.
Also ich hatte auch schon Personen...
Was meint ihr, wie hoch der Anteil ist,
Leute, die eine Karte haben versus Leute,
die dann beim Busfahrer sich eine Karte holen müssen?
Ich glaube, das hält eigentlich am meisten auf,
dass die Leute beim Busfahrer
sich Karten holen müssen.
Ich hatte tatsächlich ein Kind
unterm Fahrzeug liegen,
unterm Vorlauf des Busses.
Oder dann auch
ein Mann, der mir dann
in den Bus reingerannt ist
und an die Scheibe
traugte, mit dem Kopf.
Und das ist halt auch sehr...
Ja, das ist heftig.
Wir haben natürlich als Busfahrer
eine sehr große Verantwortung.
Entsprechend muss natürlich auch
unsere Gesundheit überprüft werden,
wo wir alle zweieinhalb Jahre zum Werksarzt gehen.
Guck mal, dem kann jetzt permanent
irgendein Typ da vorrennen,
der zwischen irgendeinem Auto rauskommt oder so.
Da steckst du ja nicht drin.
Und dass die Leute mitdenken,
kannst du ja wirklich nicht erwarten.
Also könntest du aber.
Kannst du nicht.
Es gibt natürlich auch Haltestellen,
wo jetzt keiner steht.
Natürlich kommt das auch vor,
dass man mal eine Haltestelle einfach übersieht.
Oder wenn jemand gedrückt hat
und man ist gerade in Gedanken
und man nicht angehalten ist.
Hä? Sollte es da nicht irgendein
Warnsystem für geben? So Achtung Bushaltestelle
oder so?
Ja, man grüßt natürlich
etwas Freundlicher, wenn man
die Kollegen etwas näher kennt.
Dann gibt es nicht nur so einen,
sondern auch mal so einen.
Jetzt auf zur letzten
Haltestelle.
Mit drei Minuten Verspätung kommen wir
am Ostbahnhof an.
Und der Kollege kann dann pünktlich um
9.19 Uhr
wieder weiterfahren.
Moment, welche
Stadt ist das? Ich habe jetzt nicht aufgepasst.
München.
Ah, okay.
Einen schönen guten Morgen.
Grüße dich.
So gibt es nichts.
Alles Roger. Alles wunderbar.
Ging super durch.
Fahrzeug ist auch super.
Der Marienstern ist etwas verlegt
vom 63.
Aber das weißt du schon wahrscheinlich.
Genau. Nee, super. Alles klar.
Und jetzt gibt es Pepo Fett.
Ciao, ciao.
Einen schönen guten Morgen.
Jetzt genehmige ich mir
erstmal eine Brotzeit.
Das alte gute Wurstbrot.
Wahrscheinlich könnte man auch ohne Probleme am Südbahnhof
was futtern, aber das ist wahrscheinlich München
und Südbahnhof wahrscheinlich viel zu teuer.
Ein Euro Essens.
Oh ganz. Ein Euro Essens
Pauschale. Wie großzügig.
Heute schon was gefahren?
Wir fahren jetzt
die Linie 100.
Da kannst du dir so einen Instantrahmen kaufen
beim Lidl.
Wir müssen jetzt da rüber gehen, weil da drüben die Ablöse ist.
Drei Runden fahren wir jetzt
bis 14.04 Uhr.
Ich freue mich drauf.
Ich wünsche dir was.
Ich wünsche dir eine gute Fahrt.
Guten Morgen.
Da sind Sie vollkommen richtig.
Danke sehr.
Ich bin als Busfahrer auch so etwas wie Google Maps.
Für junge Leute
ist der Beruf
des Busfahrers mittlerweile sehr unattraktiv.
Weil man auch das Wochenende arbeiten muss.
Man hat verschiedene Schichten zum
Tätigen und vom Geld her,
vom Entlohn, bleibt wenig übrig.
Ja, da muss man sich auch nicht wundern.
Wenn das keiner machen will.
Also wenn der Job an sich
die Arbeitsbedingungen der Leute nicht anspricht
und dazu kommt,
dass es auch nicht viel Geld gibt,
dann ja.
Dazu kommen noch Basiszuschläge
wie Schichtzulage,
aber auch Münchenzulage,
Reinigungszuschuss,
aber auch Zeitzuschläge
wie Nachtarbeit, Sonntagsarbeit
und auch Feiertagszuschlag.
Also ohne diese Zulagen könnten wir
das Geld nicht reichen,
in München hier zu leben.
Das ist wirklich nicht viel.
Ah, okay.
Also in München ist es
echt nicht viel.
Ich habe keine praktischen
Erfahrungen mit München, aber München ist
teuer.
2500 Euro kriegt er
überwiesen im Monat aufs Konto.
Da gehen natürlich
vielleicht noch so Sachen wie
betriebliche Altersvorsorge und andere
Sachen von ab.
Kann ja sein.
Also ob er die wirklich überwiesen kriegt,
sei mal dahingestellt.
Allein die Wohnung, die er in München bezahlen muss,
ist wahrscheinlich die Hälfte schon weg.
Mindestens.
Ich würde mir schon wünschen,
dass unser Beruf oder mein Beruf
entsprechend mehr Wertschätzung bekommt.
Das ist wirklich
nicht so krass jetzt so,
wo ich das sagen würde,
da hätte ich Bock drauf.
Wir hatten es doch letztens davon,
dass ein
irgendjemand
Einstiegsgehalt
oder so gefragt hat
für Softwareentwickler
und die Leute dann
irgendwie gesagt haben, ja
sie haben so im Durchschnitt
irgendwie mit 45k angefangen.
Also muss man sich mal vorstellen,
wenn, also nicht München
oder sonst was,
45k
Einstiegsgehalt Softwareentwickler
und dann nach 20 Jahren, das ist ja natürlich deutlich mehr,
das ist ja auch nach 20 Jahren.
Also ich glaube
weit große Sprünge kannst du da in München
nicht mitmachen.
Auch mit Geld entsprechend.
Etwas mehr Geld monatlich.
Ich bin durch.
Ich fahre
mit der S-Bahn immer.
Weil für mich das tatsächlich besser ist.
Weil wir unterschiedliche Ablösungsstellen haben.
Wie ist so die Münchner S-Bahn?
Da muss man nichts drauf verlassen.
Also ich bin in München,
glaube, bin ich in München Zug?
Ja, U-Bahn bin ich in München gefahren.
Das fand ich tatsächlich ganz praktisch,
weil die damals schon so ein Münchenticket hatten.
Wo du quasi fahren konntest, wie du willst.
Warum ein Busfahrer
nicht for free fahren kann,
ja, das ist eine gute Frage.
Und das Auto irgendwo hinzustellen,
macht keinen Sinn.
So, jetzt freue ich mich natürlich
auf einen Spaziergang mit unserer Maia.
Schau, das ist da ganz was anderes.
Ja, ja, ja, ja, das ist...
Ja, aber der muss doch bestimmt schon
spätestens 20 Uhr wieder ins Bett,
wenn er am nächsten Tag so früh aufstehen muss.
Also das ist für den jetzt 15 Uhr,
ist für ihn quasi schon Abend.
Alles ist gut, alles ist super.
Schau, wie toll du das machst.
Kann man leider keine
teuren Hobbys leisten.
Das geht einfach vom Finanziellen.
Ich muss mal ganz klar sagen,
weil wir auch jetzt aufgrund dieser
hohen Nebenkosten, die wir jetzt haben,
mittlerweile eine Miete haben,
wo ich sage, das schmerzt schon richtig.
Du kannst gerne ins Büro gehen.
Okay?
Ja, die Wohnung ist
178 Quadratmeter groß.
Sechs-Zimmer-Wohnung und wir zahlen
Warmmiete mit Strom über 1.800 Euro.
Boah!
Alter!
Aber gut, das ist München, ja?
Nach wie vor gut ist,
aber ja, es ist eine Staats...
Wie groß ist denn die Wohnung?
Ich habe jetzt überhaupt nicht zugehört.
Wie groß ist denn das?
Ja, ist schon ein bisschen größer.
180 Quadratmeter.
Okay, ich kann
es ultra schlecht einschätzen.
Ich weiß nicht mal, wie groß mein Haus ist,
ehrlich gesagt.
Ich habe keine Ahnung.
Aber gut, es sind immerhin drei Leute,
die brauchen schon ein bisschen Platz.
Ja, die Wohnung ist
178 Quadratmeter groß.
Sechs-Zimmer-Wohnung und wir zahlen
Warmmiete mit Strom über 1.800 Euro.
Okay, das ist natürlich schon recht viel.
Wie war das?
Bei der Zimmerangabe zählt Badezimmer
und Küche nicht dabei, oder?
Also sind es wahrscheinlich eher
eine Acht- und Neunzimmerwohnung,
weil sie vielleicht zwei Badezimmer
sogar haben, man weiß ja nicht.
Ähm...
Das ist dann schon
relativ, relativ viel.
Aber 2.000 Euro
im Monat Miete ist natürlich auch schon krass.
Über 1.800 Euro.
Ich überlege gerade, was ich in der alten Wohnung
bezahlt habe. Ich glaube 800 Euro,
irgendwas in dem Dreh.
Das ist aber auch schon ein bisschen her.
Was, der hat auch noch drei Töchter daheim?
Okay, dann reicht das Geld aber nicht weit.
Mit vier Kindern?
Nach wie vor gut ist, aber
es ist eine staatsbedienstete Wohnung,
die ja bekannterweise etwas billiger,
preiswerter ist.
Die schönste Gegend mag es jetzt auch nicht sein, oder?
Die ja bekannterweise
etwas billiger, preiswerter ist,
aber trotzdem schon
ein Haufen Geld.
Ja, der Job als Busfahrer lohnt sich für mich,
weil ich jeden Tag
mit vielen Menschen unterwegs bin,
die ich von A nach B bringe,
weil ich natürlich
auch... Der Job als Busfahrer
lohnt sich, weil er damit nicht unter der Brücke
schlafen muss. Da kann man auch sagen, wie es ist.
Wir gehen alle arbeiten,
um Geld zu verdienen. Klar,
wenn wir daran auch Spaß haben und was
irgendwo auch unterm Strich ein Muss ist,
sonst hält man das keine 40 Jahre aus,
ist das natürlich gut.
Ich bin jeden Tag woanders in München unterwegs
bin und das ist
das, wo ich sage, ja, das lohnt sich für mich.
Damit so einfach ins Caf ziehen ist es nicht,
der muss ja zu seinem Einsatzort kommen.
Der muss ja da zu dieser Buszentrale morgens
losfahren, wenn er auf irgendeinem Caf wohnt
und dann noch 45 Minuten Anfahrt hat
und jetzt schon aufsteht um 5 Uhr,
äh, um 3.30 Uhr oder so,
wann soll er sonst aufstehen? Einfach gar nicht mehr
just never sleep.
Just wach bleiben.
So.
Einfach wach bleiben, einfach nicht schlafen,
easy. 38 Euro
bleibt über, doch so viel.
Ja gut, vielleicht verdient seine Frau noch was,
dann kommt man dann wahrscheinlich halbwegs
über die Runden, je nachdem.
Aber anscheinend bezahlt er die Wohnung komplett.
Wobei ist halt fraglich, ob die
meine die Frau kann auch viel machen, wenn die
vier Kinder daheim haben?
Das wars von mir, wenn ihr mehr wollt, dann lohnt sich das.
Dann gibt es hier auch
ein Video von einem Kfz
Mechanikermeister.
Hier haben wir schon geguckt.
Und bitte nicht vergessen auch abonnieren.
Also reich wirst du schon mal nicht als Busfahrer
in München.
Aber er macht jetzt auch keinen unglücklichen Eindruck da drinnen.
Oh, was ist das?
Er kriegt 1 Euro Essenszuschlag pro Tag.
Ja.
Da kann er sich dann quasi ein Zehntel
ein Zehntel Döner holen oder so.
So, was haben wir hier?
Mein Informatikstudium in 15 Minuten.
Ah, juckt mich jetzt nicht so.
Warum habe ich denn den Mist gestern aufgemacht?
Ah, weil es die Arbeitskammer Österreich ist.
Wo ich mir gedacht habe, was zum Teufel machen die Dudes
in meinen Empfehlungen. Aber das Video guckt keiner.
Das wichtigste in Kürze, neue Sonos
Lautsprecher. Juckt mich mal gar nicht.
Was haben wir denn sonst noch?
Scaling, oh ne, Moment.
Ist das der Kubernetes Cluster?
Ah, das ist der Kubernetes Cluster at home dude.
Das wird er total übertreiben.
Kein Kubernetes Cluster at home Typ jetzt.
Nochmal.
Wo ist er nochmal am Start?
Was er selbst hostet.
Ja, nix eigentlich.
Der hostet selbst, um selbst zu hosten.
Um seine selbsthostet Hosting Sachen
zu hosten und verwalten.
Der macht nix mit dem Kram.
Der hat die Infrastruktur einfach.
Und kaum was damit zu machen.
Oh guck mal, ein Linkshortener.
Brauchst du aber schon zwei Kubernetes Cluster daheim,
dass du einen Linkshortener
einsetzen kannst daheim.
Ohne Scheiß Leute.
Unter einem eigenen ESX Cluster
und zwei Kubernetes Cluster
und einem Ceph Cluster
da kannst du daheim schon keinen Linkshortener hosten.
Unmöglich.
Homelab muss nicht produktiv sein.
Ne, sieht man ja.
Muss nicht.
Ist halt nur die Frage, ob man das als zweiten Job
betreiben will
oder einfach was haben möchte,
was einem das Leben leichter macht.
Wenn man das als zweiten Job sieht,
ja, kann man das machen.
Mario ist das glaube ich nicht.
Das ist irgend so ein
Reddit Gerücht oder so
vielleicht.
Ja, was guckt man denn jetzt?
Google steckt in Microsofts Falle.
Bloß keine Meetings.
Karriere als Wirtschaftsingenieur.
Das größte Videospiel.
Reich werden als Informatikstudent.
Reich werden als Informatikstudent.
Also, du hast gelernt,
wie man programmiert und denkst,
jetzt ist...
Man wird wahrscheinlich so ohne weiteres
auch nicht reich als Informatikstudent.
Weil warum sollten die einfach
einem ultra viel Geld bezahlen,
wenn man nix...
Kommt drauf an, was man macht.
Irgendwie nix spannendes dabei, oder?
Linkshortener Consultant.
Irgendwie nix...
Irgendwie nix...
Irgendwie nix...
Irgendwie nix...
Irgendwie nix...
Irgendwie nix...
Wann?
Wann was?
Go Bearbones.
Write your own OS in Golang.
Ja, ist klar.
Ja, ist klar.
Ich hab auch nix,
ich hab auch nix anderes zu tun, ne?
OS Champ.
Irgendwie muss ich die ganze Zeit da gestern
die Woche. Okay, okay.
G-Baited.
G-Baited.
Wieder 100.000%ig
G-Baited.
Der muss diese One-Minute-Habits
auch wirklich oft machen, dass er auf
20 Stunden die Woche kommt.
Hast du eigentlich schon einen Monitor für mich gefunden?
Ja, ich behalte erstmal meinen aktuellen.
Okay, wir können...
Er erzählt einfach, ich gehe in Teilzeit.
Easy. Avoid work.
Nice.
Bester Tipp überhaupt,
um mehr Zeit zu haben. Einfach
weniger arbeiten.
Da wäre ich nicht drauf gekommen.
Und die Sachen
gleichzeitig machen.
Ja, ernsthaft. Wirklich.
Okay, nice.
Da hätte man nicht drauf kommen können, Leute.
Wir gucken jetzt irgendwas hier.
Drei Fehler. Da ist er ja schon wieder.
Da ist er schon wieder.
Von dem haben wir letztens ein Video geguckt.
Und seitdem ist YouTube der Meinung, ich soll alle Videos
von ihm gucken. Ist aber nicht schlimm.
Der hat kaum Aufrufe und kaum Abos.
Der kann ruhig ein paar Sachen gebrauchen.
Also, wenn es euch gefällt, guckt vorbei.
Also, was soll ich sagen? Drei Fehler, die jeder
Programmierer macht. Auch du,
MonkaS.
Nee, wir nicht, Chat.
Der kennt uns nicht.
Wir machen prinzipiell keine Fehler.
Und
deswegen brauchen wir
auch keine Dokumentation und keine
Tests und sonstige Sachen,
weil es einfach fehlerfrei ist und
immer funktioniert.
Der benutzt bestimmt auch diese
Nvidia-KI, die
immer in die Kamera gucken lässt.
Klar. Und beim Programmieren
habe ich schon tausende Fehler gemacht.
Einige, die haben mich als Anfänger wirklich
weit zurückgeworfen. Hätte ich auch nur
eine Minute länger in meinen Code investiert,
dann wären wir definitiv...
Einfach anfangen, fehlerfrei zu
programmieren, dann braucht man das alles nicht mehr.
Ich will dir jetzt also drei Punkte
näher bringen, mit denen...
Der muss uns anklotzen, Leute.
... extrem viel Zeit gespart hätte.
Und du wahrscheinlich auch.
Also, lass uns gleich anfangen.
Ich bin also in meinem natürlichen Umfeld
vor dem Laptop, 17.23 Uhr
und gleich ist Feierabend.
Ich will noch schnell diese eine Funktion zu Ende coden.
Geht Push.
Ich wusste, dass irgendwie sowas kommt jetzt.
Erst einmal kurz pushen,
bevor man heimgeht. Wobei das an sich eigentlich
überhaupt kein Problem sein sollte,
weil der Kram ja nicht instant gemerged wird.
Ich habe gerade mein
Kopfhörerkabel um mein Bein gewickelt
und ich weiß nicht, wie ich es wieder abkriege.
Wie habe ich das geschafft?
Ah, so.
Bist du eigentlich jemand,
das ist eine gute Frage,
bist du eigentlich jemand, der sagt, Kommentare im Code
braucht man nicht, wenn man sauber und übersichtlich
programmiert? Also, das ist ja, ich hoffe,
ich muss das jetzt an der Stelle mal sagen,
das ist ja immer nicht ganz ernst gemeint, wenn ich sage,
einfach perfekt programmieren, dann braucht man keine Tests
und keine Kommentare und sonst was.
Also, ich denke schon, dass Kommentare
sinnvoll sind an manchen Stellen.
Hauptsächlich, wenn es darum geht,
wenn nicht ganz klar ist,
warum man
was
so macht.
Also, ich würde nicht so sehr
sagen,
dass es Sinn macht, die Funktion
Zeile für Zeile jetzt zu beschreiben,
was die genau macht, weil das sieht man ja.
Also, wenn man das
gescheit programmiert hat, dann sieht man ja in der Regel,
was da passiert. Es sei dann,
es ist irgendwelche Magic-Werte, wo man
das wissen muss. Wenn jetzt da zum Beispiel
drin steht, okay, wir haben jetzt irgendeine Zahl
und die müssen wir jetzt wie Binary
End machen mit 0
F5-Dings-Dings
2A,
oder so.
Und sonst was.
So, und das müssen wir jetzt machen.
Und man hat keine Ahnung, warum.
Ja, dann könnte man ja durchaus dahinter schreiben,
dass das hier die Magic-Number
für File-Format XY
ist oder sowas. Ja, das macht ja
durchaus Sinn. Alternativ
kann man da auch einfach
einen Inum draus machen
und man weiß, was es ist.
Also ja, das finde ich tatsächlich ganz sinnig.
An Stellen, wo es gar nicht
klar ist, weshalb das,
was das ist.
Das ist, da würde ich es hinschreiben,
aber ich finde es sinnvoll,
Kommentare zu schreiben, wie gesagt,
ich mache es tatsächlich äußerst selten,
weil ich meistens viel zu faul bin. Also ich schreibe
so gut wie gar keine Kommentare, weil ich viel zu faul bin.
Aber ich finde es sinnvoll an Stellen,
wo man sich fragt,
warum macht er jetzt genau
das? Also was ist der Hintergrund?
Also weshalb wird das gemacht?
Nicht so sehr, was passiert da? Das sieht man ja auch,
sondern weshalb wird das gemacht?
Das finde ich schon ganz sinnig.
Ansonsten kommt man aber eigentlich ganz gut mit klar,
wenn man die Sprachen, die Sprach Features
der jeweiligen Sprache verwendet, ja, wenn man
zum Beispiel anstatt
inline Magic Strings eine Variable
anlegt mit einem ordentlichen Namen oder
einen I-Namen draus macht oder die Funktion
ordentlich heißt oder was auch immer.
Man kommt ja meistens ganz gut damit klar,
aber eventuell ist es manchmal nicht ganz klar,
warum man was gemacht hat.
Ja, zum Beispiel, weil,
weil dieser Name seit einem Monat nicht mehr gültig ist.
Oder so und dann, naja, ich muss, ich muss hier einen If,
also ich habe hier eine Abfrage drin,
ob das und das der Fall ist,
weil ich dann einen anderen Namen benutzen muss,
weil es den auf Google nicht gibt und auf Azure schon.
Oder ich saub mir jetzt irgendwas aus den Fingern.
Das ist dann vielleicht ganz sinnvoll,
das reinzuschreiben, weil sich jemand denkt,
der das zum ersten Mal liest, hä?
Warum ist denn da jetzt überhaupt ein If drin?
Macht doch keinen Sinn. Ein Name und gut.
Menschen in Tickets, ja.
Ja, gut.
Das kann auch gut passieren.
Aber das ist doch wirklich irgendein Bot hier, oder?
Was, was ist das denn für,
was sind das für random, für random Chat-Messages?
Ja, Kommentare entforcen finde ich auch unsinnig.
Das müssen die Leute schon machen,
wenn sie denken, dass es, dass es passt.
Wie gesagt, ich bin nicht der ausführlichste Kommentierer.
Das weiß ich.
Also was ich zum Beispiel haben will,
also bei den Sachen, wo ich drüber entscheide,
ob das am Ende reinkommt oder nicht,
es gibt so ein paar, so ein paar Kleinigkeiten,
die ich gerne, die, die, die ich haben will.
Und zwar, wenn es um Config-Management-Änderungen geht
für unsere Server,
das ist ja mittlerweile auch ein ziemlich komplexes System,
da müssen die Leute reinschreiben.
Es gibt so einen, ich habe so einen Guide erstellt,
dass man, auch wenn man neu ist und überlegen muss,
was da Sache ist, reingucken kann.
Also was ich haben will, ist in einem Pull-Request
oder in einem Merge-Request,
wenn es um Server-Änderungen geht,
beziehungsweise Änderungen am Server-Config-Management,
dann soll drinnen stehen, ganz kurz,
was das macht, so in einem Satz,
weil ich nicht wirklich anhand der Änderungen durchblicke,
warum das gemacht wird oder was das eigentlich macht.
Ja, zum Beispiel Konfiguration an irgendwelchen Mail-Servern,
keine Ahnung, wofür das gut ist.
Und ich will auch nicht das Ursprungsticket
alle 30 Kommentare lesen, bis ich den Change kapiert habe.
Also ganz kurz, weil ich nicht wirklich anhand der Änderungen
ganz kurz weiß, warum das da ist, eine Ticketnummer
und welche Server das betrifft.
Weil eine Änderung am Server-Config-Management
bedeutet nicht unbedingt, dass man immer direkt sieht,
welche Systeme es betrifft.
Es gibt ja auch zum Beispiel, wenn einer was an der Config ändert,
wie das Active Directory Login funktioniert,
dann betrifft es potenziell alle Linux-Server.
Und das ist gar nicht für mich so ersichtlich,
wenn ich die Änderungen sehe, dass es auf einmal ein Change ist
an allen unseren Linux-Systemen.
Das will ich wissen.
Das war es aber auch schon.
Also das machst du eigentlich in zwei Minuten.
Da schreibst du in die Comment-Message.
Nee, tatsächlich nicht.
Da schreibst du ein Pull-Request rein.
Es gibt so ein Template, wenn du ein Pull-Request aufmachst.
Kannst du ausfüllen und dann ist es gut.
So.
Next.
Das ist überstehen geblieben.
Also schnell, komm mit, push und fertig.
Beste.
Genau das sollte man freitags immer machen.
Die gehören jetzt meinem Zukunfts-Ich.
Und eins dieser Probleme, das wird mich definitiv wieder einholen.
So soll es dann auch sein, als ich am nächsten Tag meinen Laptop öffne
und versuche zu verstehen, was mein Code denn jetzt eigentlich nochmal machen sollte.
Mein Kopf ist dabei total leer.
Okay, ganz einfach das Problem zu lösen.
Das ist easy.
Einfach Git-Revert machen und alles wegschmeißen, was man gemacht hat
und nochmal vom Scratch neu.
Dann weiß man auch wieder, was man gemacht hat.
Easy.
Ja, und ich kann mich an nichts wirklich erinnern.
Was soll diese Schleife hier?
Das geht doch auch viel effizienter.
Und diese komische Abfolge an Zeichen.
Was soll das?
Was soll das?
Was soll das?
Was soll das nochmal sein?
Ich denke mir jetzt nur, ein paar Kommentare hätten mir sicherlich sehr viel weitergeholfen.
Und das bringt mich auch zu meinem ersten Punkt.
Da hat er wohl recht.
Schreibe ein paar Kommentare.
Da hat er wohl recht.
Na klar.
Dein Code, der liest sich wie ein Buch und dokumentiert sich ja auch zu 100% selten.
Richtig.
Und er ist fehlerfrei.
Deswegen braucht man das alles nicht.
Aber ich habe auch noch nie was langweiligeres gelesen als Fachlektüre.
Also, finde ich gar nicht.
Ich lese, ohne Mist, ich lese sowas gerne.
Ich lese, ich lese sowas gerne.
Also, wenn es ein Thema ist, was mich interessiert.
Also, jetzt irgendwie irgendein Random-Technik-Buch über irgendwas, was mich nicht interessiert.
Das ist mir wurscht.
Aber wenn es ein Thema ist, was mich interessiert, dann finde ich das tatsächlich ganz spannend.
Fachlektüre.
Also, besonders wenn du vom Standard irgendwo abweichst, schreib vielleicht ein, zwei Kommentare
und mach es für alle verständlicher.
Bonuspunkte gibt es dafür, Strings und andere Magic Numbers auszulagern in eigene Variablen.
Ja, da hat er recht.
Da gebe ich ihm recht.
Wenn man da eine Variable draus macht.
Das hatte ich ja witzigerweise.
Das hatte ich ja witzigerweise auch gerade.
Also, so ein ähnliches Beispiel.
Wenn man da eine Variable draus macht oder wenn es geht, einen Inam draus machen, ist
auch nicht verkehrt.
Dann sieht man nämlich auch gleich, wofür es gut sein soll.
Und kann es überall für wieder verwenden.
Ich lagere die Magic Strings in Variablen aus und denke mir, dieses Meisterstück ist
fertig für ein Code Review.
Beim Code Review geht es dann darum, dass ein Kollege nochmal über meinen Code rüberschaut
und ein paar Verbesserungen vorschlägt oder vielleicht auch nochmal ein paar Fehler erkennt,
die ich nicht erkannt habe.
Es dauert nicht lange.
Da bekomme ich einen Anruf vom Kollegen.
Moin!
Dein Code ist ja einfach...
Ah!
Teams Call!
Ja, und von Gett, da fehlt doch die Hälfte.
Und da fällt es mir auch auf, bis jetzt hat auch alles funktioniert, kontere ich.
Aber für schlechte Ausreden hat er keine Zeit.
Dennoch hat er recht, dass gute Fehlerbehebung wirklich wichtig ist.
Egal, ob es nur darum geht, dass das Programm...
Exzellent!
So muss man das machen.
Beste Fehlerbehebung überhaupt.
Ein Try-Catch-All drumherum.
Easy.
Okay, vielleicht das ist JavaScript.
Vielleicht macht man das da so.
Egal, ob es nur darum geht, dass das Programm nicht abstürzt.
Das Debuggen-Programm nicht abstürzt.
Weil es dann zum Schluss einfacher wird.
Und wer hasst das nicht auch?
Webseiten ohne Fehlermeldung.
Und Bonuspunkte gibt es dafür, sinnvolle Pattern, wie zum Beispiel retry zu verwenden,
auch dass du ja abonniert hast.
Das Error-Helm steht jetzt...
Da hat er recht.
Da hat er recht.
Es gibt für .NET eine sehr praktische Library für retries.
Nennt sich poly.
Oder poli?
Poly wahrscheinlich, weil es polt.
Poly Nougat.
Lass da.
Das ist...
Das ist für solche Sachen echt praktisch.
Wenn man zum Beispiel auf irgendeine Web-API zugreift.
Oder API.
Was die coolen Leute sagen würden.
Kann man damit zum Beispiel retries konfigurieren.
Und man kann nicht einfach nur retries konfigurieren.
Die Beispiele sind richtig beschissen.
Wisst ihr das?
Da checkt ja...
Checkt keiner.
Man kann nicht nur...
Ja, das hier.
Das hier zum Beispiel.
Wobei das auch...
Das hier finde ich...
Das ist ein gutes Beispiel.
Das ist ein gutes Beispiel.
Du kannst hier zum Beispiel auch sagen.
Du machst einen Request.
Und wenn es einen Fehler gibt.
Dann machst du einen Retry nach einer Sekunde.
Nach zwei Sekunden.
Und den nächsten nach drei Sekunden.
Also...
So ein Back...
Das ist jetzt ein blödes Beispiel.
So ein Back-Off.
Also nach dem ersten Retry wartest du eine Sekunde.
Machst den zweiten Retry.
Äh, Schwachsinn.
Nach dem ersten Try.
Machst du...
Wartest du eine Sekunde.
Nach dem nächsten wartest du zwei Sekunden.
Und dann wartest du drei Sekunden.
Also quasi...
Du wartest immer eine Sekunde länger.
Was tatsächlich sehr sinnvoll ist.
Dass du nicht auf eine Sekunde wartet.
Dass du nicht auf einmal rate-limited wirst.
Oder irgendwelchen APIs geblockt wirst.
Weil du sie auf einmal zuspamst.
Die Beispiele sind richtig hängen geblieben.
Es gibt ein Beispiel im Fiat Champ.
Da benutze ich das auch.
Irgendwo.
Wenn ich wüsste wo.
Äh...
Ich glaube im...
Retry.
Ne.
Boah, keine Ahnung.
Da kann man besser erkennen.
Ja, da sieht man eigentlich ganz gut was es macht.
Ne.
Hahaha.
Hier erkennt man eigentlich auch nichts.
Hier erkennt man eigentlich auch nichts was es macht.
Aber es macht im Prinzip genau das gleiche.
Wie im Beispiel.
Es wartet eine Sekunde.
Zwei Sekunden.
Und dann fünf Sekunden.
Bevor es die Fiat API zuspamt.
Weil ich will ja nicht rate-limited werden.
Oder geblockt werden.
Wobei man...
Man versteht es.
Doch ohne Scheiß.
Man versteht es eigentlich wirklich ganz gut.
Also der guckt.
Ob das Result.
Nicht successful ist.
Also ist...
Ist success...
Nicht successfull ist.
Oder.
Wenn es eine HTTP Request Exception gibt.
Also diese...
In diesen zwei Fällen.
Gibt es den Retry.
So.
Und was er macht ist.
Der macht nen Retry.
Nach dem ersten Fehler.
Macht er ne Sekunde Pause.
Dann macht er zwei Sekunden Pause.
Dann macht er fünf Sekunden Pause.
Ähm.
Und da unten lock ich den ganzen Krempel.
Glaube ich.
Einfach nur.
Ja.
Ich glaub.
Ich glaub hier unten lock ichs.
Einfach nur.
Auf sehr komplexe Art.
Und Weise.
Und da unten lock ich den ganzen Krempel.
Glaube ich.
Einfach nur.
Ja.
Auf sehr komplexe Weise.
Log ich das.
Glaube ich.
Einfach nur.
Ja.
Also man versteht.
Also die Library ist wirklich sehr nice.
Wenn man.
Wenn man das für solche.
Also wenn man solche Fälle hat.
Was ist das für ne Sprache.
Das ist C-Sharp.
Ja.
Das ist ein Home Ass...
Ein Home Assistant Addon.
Also die eigentliche Software ist in .Net.
Also in C-Sharp.
Aber das ist ein Home Assistant Addon.
Wo du dein Auto.
Dein Elektroauto.
Infos auslesen kannst.
Über die.
API von Fiat.
Allerdings ist die API von Fiat.
Einfach.
Einfach.
Einfach.
Einfach.
Einfach.
Einfach.
Die API von Fiat.
Nicht offiziell.
Sondern die wurde.
Reverse Engineert.
Und ich hab die hier quasi.
Nochmal nachgebaut.
Vom anderen Projekt.
So das man.
Eben seine Sachen.
Ins.
Smart Home bekommt.
Wichtig ist.
Ganz viele Emojis verwenden in der Readme.
Nur dann.
Nur dann.
Ist es.
Next Level.
Blazingly Fast.
Alternativ.
Rewrite in Rust.
Rust Rewrite.
Benzel.
Danke schön für den Sub.
So.
stehen geblieben dafür sinnvolle pattern wie zb retry zu verwenden ja das stimmt ja abonniert
hast das error handling steht jetzt und auch alle kommentare aus dem code review habe ich
erfolgreich bearbeitet vorgas jetzt kann gar nichts mehr schiefgehen oder moin ich hab da
noch mehr teams call was gibt's denn sag mal hast du denn eigentlich selbst mal getestet bei mir
wirft die ganze zeit nur errors daher kann ich dir auch nur noch mitgeben review und teste dein
code wirklich selbst noch mal ich hatte das einfach ticket wo kommt man denn da hin wurden
die gar nicht funktioniert haben das ist dann einfach nur für eine reviewer frustrierend als
auch für den der das ticket bearbeitet hat ich weiß nach ein paar monaten elektrisch fahren ich
habe nichts daran auszusetzen also es gibt ein paar kleinigkeiten am auto wo ich mir denke ja
aber im groß und ganz bin ich sehr zufrieden damit ich finde das sehr nice würde ich mir
wieder kaufen ich glaube so kann man das ganz gut zusammenfassen würde ich mir wieder kommen
ändern noch mal die gesamte
entwicklung
aber trotzdem meistens weißt du es nicht besser als wenn du es getestet hättest bonuspunkte gibt
es also jetzt test alles overrated betesteter code ist aber nur die halbe miete er muss auch
gut lesbar sein wie du insgesamt im programmieren besser wirst und dadurch auch besseren code
schreibst das zeige ich dir hier in diesem video was da los i tried using air it scared me but why
warum wird er warum ist er gescheert ich habe keinen bock auf videos leute bolgi
podcast subscription schön für den sub gibt es noch irgendwelche videos die mich okay dieses video hat
sicherlich auch nur die aufrufe weil der inhalt so borgers ist nicht weil es den hinterteilen mitten
im bild hat mittlerweile ja jeder macht den tv videos und die haben mich schon nach der ehemaligen
Woche mega gelangweilt. Die meisten sind so langweilig.
I lost my fingers, so I made a new one.
What the fuck? Was ist mit den Videos heute los?
Jetzt gibt es auch schon irgendwelche Fußball-Sachen.
Als hätte mich jemals Fußball-Sachen interessiert.
Was so? Was ist mit den Shorts los?
Was ist mit den Shorts los?
Alter.
Christian Lindner interviewt sich selbst.
Okay.
Das ist bestimmt richtiger Schwachsinn.
Hallo und herzlich willkommen. Eine neue Ausgabe meines Podcasts CL+.
Thema ich. Ein Megathema, das mir sehr wichtig ist.
Und heute CL+, mit jemandem, der sich auch mit diesem Thema beschäftigt.
Mit mir selbst.
Nämlich mit mir selber.
Herzlich willkommen, Christian Lindner.
Oh Mann.
Du bist der Christian Lindner, der im Nebenjob neben seinem Podcast auch noch Finanzminister ist.
Ja, das sind dicke Bretter, die man da bohrt.
Ich sehe jetzt in meinem Bereich Bundesfinanzministerium.
Jetzt bin ich Finanzminister und dann staunen die Leute Bauklötze.
Ja. Wie ist dein Eindruck? Wird eigentlich über Christian Lindner genug gesprochen?
Nein.
Da würde ich sagen, nein. Finde ich auch.
Dann sind wir doch einer Meinung.
Ich finde das teilweise sehr paradox.
Dass man sich über viele Dinge Gedanken macht.
Aber nicht über mich, wo ich sogar noch oft der Entscheider bin.
Ich als Finanzminister.
Ja, richtig, genau.
Also so Dinge, meine ich, müssten stärker vermittelt werden.
Auch in der Schule.
Und zwar für alle.
Ja, also solche Zukunftsthemen dürfen nicht hinunterfallen.
Wenn du jetzt auf die aktuelle Marktsituation schaust als Profi.
Was würdest du sagen, wenn jemand immer mehr Kapital haben will?
Ja, also ich selbst investiere tatsächlich in Aktien.
Was ist die Idee dahinter?
Schnell reich werden, klar.
Besser, easy.
Aber Herr Lindner, was ist eigentlich mit meinen ganzen Kreditkarten passiert?
Ein bisschen Spekulantentum oder Zocken.
Das mal zwölf.
Kurz mal Grüße an Hedgefonds Henning.
Ja, diese finanzielle Bildung ist eigentlich fast ein Stück Lebensberatung.
Da stimme ich dir zu.
Wie auch immer.
Dann gingen alle Kapitalmärkte runter und gleichzeitig geht der Kühlschrank noch kaputt.
Meine Güte, kommt das noch oben drauf.
Ich danke dir, dass du da warst.
Das war ganz spannend.
Ich habe auch was gelernt.
Ciao.
Sehr erhellend.
Jetzt wissen wir Bescheid.
Das hat er aber gut geschnitten.
Man hat es kaum gemerkt.
Also heute sind die YouTube-Videos wirklich pepega, Mann.
Ich weiß gar nicht, was ich gucken soll.
Obwohl ich so viele Tabs auf habe.
Da muss doch noch irgendwas.
Irgendwas.
Okay, das gucken wir nicht.
Kein Informatik.
Das gucken wir auch nicht.
Ich mache jetzt mal zu.
Das könnte vielleicht sein, dass wir es gucken.
Das gucken wir auch nicht.
Auch wenn es für ein N64 ein massive geiles optisches, von der Optik her, Level ist.
Ja, das stimmt.
Das stimmt.
Das stimmt.
Das stimmt.
Das stimmt.
Das stimmt.
Auch wenn es für ein N64 ein massive geiles optisches, von der Optik her, Level ist.
So, das gucken wir auch nicht.
Das gucken wir auch nicht.
Das gucken wir auch nicht.
Ich mache mal zu.
Das gucken wir auch nicht.
Google steckt in Microsofts Falle.
Das gucken wir auch nicht.
Bloß keine Meetings.
Meetings stehen..
Das habe ich glaube ich sogar kommentiert, das Video, das kenne ich doch schon.
Das hab ich doch irgendwo sogar kommentar reingeschrieben.
tatsächlich und wie sogar irgendwelche leute drauf geht drauf reagieren und das
gucken wir auch nicht karriere als wirtschaftsingenieur gehalt 100.000 mit
mitte 20 lohnt sich das und nein wir haben keine ist das ist das ist das im
debate video rechnet uns irgendwas vor das ist mir jetzt auch das interessiert
mich das gucken wir auch nicht das interessiert gucken wir auch nicht das
böseste video spiel aller zeiten okay was ist das böseste video spiel aller
zeiten lege henne gucken wir auch nicht ich habe letzte woche
das können wir vielleicht gucken was abgasen random frank p
random frank p cool tech an okay das geht noch neun minuten cool tech unter
50 dollar wetten wetten leute da ist einfach gar nichts dabei was ich erstens
cool finde und zweitens
cool
so cool dass ich mir kaufen würde wir skippen da mal ein bisschen schneller
drüber hast du dir schon mal exodia os
angeschaut dass irgendwas mit yugioh zu tun habe ich noch nie gehört
stimmte sachen die jeder kennt
okay erzähl mal random france in der best tech in your tech
wir müssen erst mal das wort auf europa sponsor skippen am kreis schau drauf das
ist die one mit f04 giving you all your mutet WAV
massive cool tech include first man power down to have a bright blue eliti
leitring an der backside next usb c-port johan 2 ox in and out port not only for
direct listening if you want to plug in with oks in and out ports not only for
direct listening if you want to plug in with oks in and out ports not only for
Die Soundqualität an diesen Kopfhörer-Ausgängen ist doch wahrscheinlich unterirdisch schlecht.
Findet ihr nicht auch richtig, richtig geile Tech?
Wow, ist das mindblowing.
Extrem, extrem mindblowing.
Da packt man.
Alter, wie lange kann man das für so einen komischen Knopf noch hin?
Hey, man kann das dann ausbreiten und an drei Geräte nebeneinander legen, oder wie?
Leute, das ist doch...
Da nehme ich halt einen Dreifachstecker mit.
Da nehme ich einen Dreifachstecker mit.
Das ist doch besser, als was mitzuschleppen, um es wireless chargen zu können.
Da nehme ich so einen Triple-Stecker mit.
Mit einem USB-C-Anschluss, mit einem Lightning-Anschluss und mit einem Micro-USB-Anschluss.
Da kann ich alles anschließen, alles laden, was ich will.
Hat einen USB-Stecker auf der anderen Seite.
Gut ist.
Strom brauchst du für das Ding ja auch irgendwie.
Und fertig.
Wenn man das mitnehmen muss, macht es keinen Sinn.
Das macht nur Sinn, wenn man das stationär irgendwo hat, um dann eben, wenn man da vorbeiläuft, sein Zeug draufzulegen.
Und sparen Platz auf dem Weg.
Das sollte ein...
Also zum Mitnehmen ist es irgendwie sinnlos.
Wenn ich unterwegs aufladen will, mache ich einfach mal easy den Stecker dran von der Powerbank.
Fertig.
... in deinem Reisen oder in deinem EDC-Bag.
Eines der ersten Dinge, die mir zu mir gefällt, war das Design.
Ich liebe den Look.
Ja.
Rohes, rohes Kupfer.
Krasser Look.
... with the visible coils and the transparent glass to expose the circuitry inside.
I'm a fan.
Now, each of the three sections has its designated purpose.
The leftmost pad is a MagSafe 7.5-Watt phone charger.
Okay, seriously, finde ich komplett unsinnig.
Das ist sinnvoll vielleicht, wenn man es sich daheim irgendwo hinlegt, aber nicht für unterwegs.
... in the middle is for your AirPods or for another iPhone or smartphone.
This gets 7.5 watts as well.
... with the rightmost square pad being solely for your Apple Watch.
And since they all have the magnetic...
Skip.
Ach, gleich, skip.
... as well, I'd say.
... so for just around...
Was haben wir als nächstes?
... travelers with...
Was haben wir als nächstes?
Cool-Tech.
... technology used here...
Moment, was hat denn der Shit nochmal gekostet jetzt?
Hast du ihn wo eingeblendet?
Nee, oder?
Moment, was kostet dieses Wireless-Charging-Ding?
Nee, Moment, das sind auch noch Ref-Links, das machen wir jetzt nicht.
... we have in the SteelSeries Apex Pro Keyboards or the Wooting 68G for...
... we have in the SteelSeries Apex Pro Keyboards or the Wooting 68G for...
Moment, was kostet dieses Wireless-Charging-Ding?
Moment, was kostet dieses Wireless-Charging-Ding?
Was hat er denn da?
Ist das...
... Joystick, oder?
... Joystick, oder?
... example, with their magnetic Hall-Effect-Switches, except magnets, there is...
... example, with their magnetic Hall-Effect-Switches, except magnets, there is...
Ist das ein Joystick?
... there's no traditional wear-downs. These will never experience drift.
... so in an old set I have...
... and there...
... are no instructions, but it's honestly not that bad.
... and there...
... I don't have...
... you can use...
... I don't have...
... a Nestle...
Ein Batterie-Charger mit einer Anzeige dran. Ja, super.
Warum braucht man denn einen extra Rucksack für Konsolen mitzunehmen?
Man kann einfach einen x-beliebigen anderen Rucksack nehmen.
Jeder x-beliebige Rucksack geht dafür.
Ah, Leute, ich kann das Video nicht mehr ausmachen.
Das ist braun.
Das ist braun.
Java.
Ich muss mir ein Java-Video angucken.
Ich kann es nicht beenden.
Was?
Oh, mein Browser ist irgendwie ein bisschen kaputt. Kann das sein?
Ist mein Browser brocken?
Vielleicht so ein bisschen?
So minimal brocken?
Scheint so.
Ich mach mal kurz zu.
Zu viele Tabs, möglich.
Okay, geht wieder. Easy.
Browser hat Java-Nummer gedacht.
Hat keinen Bock mehr.
Hat keck-by gemacht.
Reich werden als Informat...
Okay, komm.
Auf geht's.
Wir hören uns jetzt an, ob man reich wird als Informatiker.
Wir müssen mal ein paar Videos hier wegmachen.
Chat-PK...
GPT perfectly balanced.
Weg.
Wie reich werde ich mit Retouren? Gar nicht.
Weg.
Battlefield weg.
Weg.
Was ist das?
Was will er von uns?
Was will er von uns?
Was will er von uns?
Was will er von uns?
Was will er von uns?
Was will er von uns?
Was will er von uns?
Was will er von uns?
Was will er?
Was will er von uns?
Was will er von uns?
Was will er von uns?
Was will er von uns?
Was will er von uns?
Was...
Und es funktioniert ziemlich gut.
Singing an Twinkies.
Keine Ahnung, Sebastian?
Das heißt es läuft nicht richtig hoher Speed.
Und es läuft nicht früher als wir....
Pro
relativ wie die same speed den aktuar came in rheinland 2000 ich sage ich sage ich wie sie es
nicht ob wir das nicht gekommen selbst wenn ich sage ich wie sie es der neue mag vielleicht geiler
aussehen aber ich gehe mal davon aus dass der noktor schlicht ergreifen besser funktioniert
und die torridor was just a hair faster at 2000 59 rpm soundtest ist was looking most
for work to however die h12 x 25 in lisa meistert was quater denn die mit torridor
ein bisschen anders das video nicht geguckt haben das gucken wir auch nicht das gucken wir
auch nicht das gucken wir auch nicht geht es um das vielleicht gucken wir auch nicht
gucken wir auch nicht wir müssen ein bisschen videos zu mann
microservices sind überbewertet das hat jemand im chat gepostet das können wir gucken aber nicht
heute was geht's da irgendwas was ich kenne gucken wir auch nicht gucken wir auch nicht
schon always get the truth with three light detection questions never be lied to again
okay hier lernen wir als richtiges
krasse psycho life hacks das wenn das ein gutes video das könnte sogar ganz interessant sein das
ist mir aber zu sex hat jetzt btf wenn wir gehen zu quote unquote modern web development
you'll be introduced und fireship video und fireship video war sie noch nicht kenne to a
wonderfully confusing world of mysterious config files a simple project might have an es lindt rc
es lindt ignore editor config prettier config ja gut
dass die frontend leute nicht mehr ganz dicht sind das ist ja nichts neues
dass die frontend leute rumspinnen das habe ich schon lange什麼
make a e mail
habe ich schon in paar projekten gesehen ich selbst habe es kauft dass was auch immer heating
hat
habe ich schon ein paar projekte gesehen und selbst habe es noch nie gesehen ich glaube z.B bei den logics die damit damit obtenkeiten bis hier hvorcagelbon war
habe ich schon ein paar projekten gesehen ich selbst habe sehe auch prayers also also übrigens wenn ich es mache einige verk agraden weil ichmind über predictions also H cultivated
ich schon ein paar projekten gesehen ich selbst habe nie verwendet und ehrlich gesagt sie auch
keine veranlassung dazu wenn der editor konflikt das macht sinn ich glaube das macht vielleicht
sinn wenn man mit mehreren leuten daran arbeitet und sich in sicherstellen will dass sie alle die
gleichen eindrückung und sowas verwenden okay vielleicht aber das meiste sonst glaube ich
ziemlich genau so kalt prüger wenn es da ist es aktuell modifizieren code bei format konflikt
allein schon wenn ich wenn ich das sehe dass ich das machen müsste lasse ich sein habe keinen bock
drauf das ist auch so ein javascript ding ist hier jede andere programmier sprache kriegt es
irgendwie halbwegs hin halbwegs gescheiten default coding style und format dazu haben
aber javascript anscheinend nicht dass es natürlich in go in go gibt es eigentlich
einfach gar keine config optionen das muss einfach alles gleich aussehen da gibt es in
go wenn ihr es in go nicht gefällt hast du pech da kannst du den go compiler forken wenn es dir
nicht gefällt hast du da hast du da hast du echt gelitten was mir persönlich ja in go nicht so
richtig gefällt ist das hier if blub else diese diese syntax hier das ist nicht so meins ja hier
diese syntax das ist das was der standard creator macht und wo ich sogar aber da bin ich bin ich
ganz sicher nicht kompiliert wenn das nicht in diesem format ist oder glaube möchte dass
so ich glaube drilled nicht wenn es so ist zum beispiel archiv file und rice für urban
javascript in which case entry
Ich hoffe, irgendwann erfindet noch mal einer Triple Quotes.
Wobei, wir müssen mal in den Unicode-Standard gucken.
Es gibt bestimmt schon Triple Quotes.
Wie würdest du es lieber formatieren?
Ehrlich gesagt...
Ups.
Ehrlich gesagt hätte ich es am liebsten...
So.
Da werden jetzt viele sagen, oh, das nimmt aber so viel Platz weg.
Es ist nicht wirklich, als würde es Platz was kosten.
Also ich mag das so.
So finde ich besser.
Aber es ist Geschmackssache.
Das hier finde ich persönlich übelst hässlich.
Ja, aber das sind keine Triple Quotes.
Ups.
Das sind drei Single Quotes.
Drei Single Quotes sind nicht Triple Quotes.
Ich rede ja von einem Zeichen.
Quasi, es gibt Single Quotes, es gibt Double Quotes.
Und jetzt hätte ich gerne noch ein Zeichen.
Was?
Triple Quotes sind kompakter, finde ich schöner.
Also wenn Modges da sind und Modges Bock haben, eine Umfrage zu machen, macht.
Aber so sehr interessiert es mich jetzt auch nicht, dass ich Bock habe, eine Umfrage zu machen.
... ist, dass viele dieser Konfigurationsfile in unterschiedlichen Sprachen geschrieben werden können.
Normalerweise JSON, JavaScript, YAML oder TOML.
Jetzt ist es in YAML, aber ich kann es leichter in JavaScript verändern, indem ich...
Und was ist mit INI?
Ich mag INI viel mehr.
... den Namen des Files.
Auf dem anderen Seite, viele Tools können...
... und Konfigurationsfile können direkt im Package-JSON-File eingebettet werden.
Das bringt uns jetzt zu ESLint, das auch sehr ähnlich fühlt als die vorherigen zwei,
aber es ist mit mehr als nur Code-Style beschäftigt.
Es kann statisch dein Projekt analysieren, um Code-Qualität-Probleme zu entdecken.
Zum Beispiel gibt es eine Regel, die heißt No Unused Vars, die dir entweder eine Warnung oder eine Errung geben wird.
Ich bin ja auch kein hauptberuflicher Frontend-Entwickler, aber ich habe noch nie eine ESLint-RC angelegt
und auch noch nie...
... glaube ich zumindest, eine ESLint-RC editiert.
Und auch keine Prettier-RC.
Also Package-JSON, ja, habe ich schon gemacht, aber bis jetzt sonst nichts davon.
... wenn du eine Variable hast, die noch nie benutzt wurde.
Was ein bisschen verwirrend ist, ist, dass sie mit Prettier benutzt werden kann,
aber einige ihrer Regeln können sich verändern.
Also wenn du das tust, willst du normalerweise nur die Code-Qualität-Regeln in ESLint konzentrieren.
Es funktioniert mit dem ganzen JavaScript-Initial.
Es gibt doch jetzt irgendein neues JavaScript-Initial.
Also okay, das muss ich anders sagen, das muss ich anders sagen, weil die Aussage, es gibt doch jetzt...
... das muss ich anders sagen, weil die Aussage, es gibt doch jetzt...
... ein neues JavaScript-Tool, das kannst du eigentlich sekündlich mit Ja beantworten,
weil es permanent neue JavaScript-Tools gibt.
Was ich meine ist, es gibt doch jetzt ein neues, etwas größeres, gehyptes JavaScript-Tool für sowas.
Das nennt sich, glaube ich, Roam.
Ist es das?
Was sonst?
Was sonst?
Okay, ich hätte raten sollen, in welcher Programmiersprache das entwickelt ist.
Was sonst?
Natürlich Rust.
Selbstverständlich.
Leute, soweit sind wir schon, dass JavaScript-Formatting-Tools in Rust programmiert sind.
Aber hey, es ist ja okay, wenn das taugt, ist mir es eigentlich egal, in was das programmiert ist.
Und ist written in Rust, okay, das muss natürlich da drin stehen, ganz furchtbar wichtig, dass da written in Rust drin steht.
Also das ist jetzt sowohl der neueste Hype, was JavaScript-Tools angeht.
Was JavaScript-Tools angeht.
Weil das sollen wohl alle...
...anderen Tools irgendwie miteinander vereinen.
Also das soll Syntax...
Äh, nicht Syntax, das soll Format, Formatting machen, Code-Style checken und alles.
Ah, guck mal, hier steht es ja.
Also was das alles machen soll.
Ja, JavaScript-Tools haben immer 30 Milliarden GitHub-Sterne.
Und im Endeffekt sind sie auch nicht wirklich richtig bedeutend.
So ein bisschen wie, so BUN.
Ja, BUN hat auch mittlerweile einfach 99...
...und 30k und ist überhaupt null relevant.
Es ist einfach nur existent, das war's.
Oder hat jemand von euch schon mal was in BUN gemacht, wo auch wirklich was Sinnvolles rausgekommen ist, außer ein bisschen mit rumgebastelt?
Es ist niedlich, das stimmt.
Ja, wenn es danach geht, sollten prinzipiell nur noch Qt-Projekte existieren.
Warum BUN und das Logo ist ein Dumpling?
Keine Ahnung, aber eins fällt mir immer wieder auf.
Das Logo von BUN, der Performance-Graph, guck mal, das Logo von BUN erinnert mich extrem an ein Overwatch-Pachimari, hieß das Ding?
Dieses Teil.
Es hat irgendwie schon eine gewisse Ähnlichkeit, oder?
So, das braucht...
Also ich gehe nicht davon aus, dass ich demnächst was in BUN entwickeln werde.
Okay, also, weil Roam soll ja wohl alles an JavaScript-Tools suchen.
So, vereinen, was heute random ist.
Und, also was heute random verschiedene Tools sind.
Erfunden wurde Roam, glaube ich, von dem...
Oh, lass mich jetzt kein Mist erzählen.
Von irgendeinem recht bekannten JavaScript-Typ.
Ich glaube, der Bubble-Typ könnte das sein.
Der Roam, das das Projekt ins Leben gerufen hat.
Ich glaube, es könnte der Bubble...
Babel, wie auch immer man das jetzt korrekt ausspricht.
Das ist...
Ich glaube, ich glaube, das ist der Typ.
Oh, mein Auge.
So, also, das sollen nämlich alle Tools in einer vereinen hier.
Vor allem ein Formatter, ein Linter.
Angeblich soll das noch mehr können später mal.
Bis jetzt, bis jetzt ist es anscheinend noch sehr, sehr raw.
Es formatet und lintet bisher nur.
Aber es ist written in Rust.
Das ist halt das Dumme, wenn man seine Projekte so nennt.
Okay, hier steht, hier steht was, was, was er meint.
Formatter, Linter, Compiler, Bundler und Testing.
Das soll, das soll alles, das soll alles in einem machen.
Fast, wichtig.
Build, placing the fast written in Rust.
Mal gucken.
Ob das dieses Jahr kommt.
Ich meine, es ist ja schon fast März 2023.
Also, das ist wohl...
Hier.
Founded by the creators of Bermel and Yarn.
Okay, dann lag ich doch gar nicht so fest.
Also, das ist so voll angesagt jetzt.
In der JavaScript-Welt.
Wir holen uns das mal weiter an.
Frontend-Zeug ist wirklich richtig lost.
Da blickt auch keiner mehr durch, man.
Wobei ich sagen würde, dass es nicht so einfach ist,
aber man muss sagen, ganz ehrlich, im Vergleich zu noch vor ein paar Jahren,
ich bin der Meinung, JavaScript hat sich in die richtige Richtung entwickelt
und ich benutze mittlerweile lieber JavaScript als vieles andere.
Schäger, danke schön für den Sub.
Also, am liebsten, meine Lieblingssprache ist eindeutig immer noch C-Sharp,
gefolgt von Ruby, aber Ruby ist ja heute ein bisschen in der Bedeutungslosigkeit verschwunden.
Also, ich quäle mich gar nicht mehr so sehr mit JavaScript.
Ich muss sagen, JavaScript ist mittlerweile echt in Ordnung.
Wenn man es benutzt, hat man auch ein File namens TS-Config.
Wenn man Glück hat, kann man sogar mehrere TS-Configs haben.
Ja, da mache ich immer einen großen Bogen drum,
indem ich einfach kein TypeScript verwende.
Der Job ist es, das Behavior des TypeScript-Kompilers zu kontrollieren.
Ein TypeScript-File muss eventuell zu JavaScript transpiliert werden.
In der TS-Config kann man entscheiden, welche File inkludiert werden,
und auch den Target-Flavor von JavaScript, den man auch kompilen möchte,
unter vielen anderen Dingen.
Nun, das Problem mit Web-Development ist, dass man nicht nur zu JavaScript kompiliert und es benutzt,
sondern man muss alle JavaScript-File bundeln.
Und solche Geschichten, ob das ist jetzt neu, das habe ich gesehen,
fand ich jetzt nicht so schlimm.
Also ich kann es in JavaScript zur Zeit schlecht einschätzen,
ob sich das irgendwie in eine doofe Errichtung entwickelt oder nicht.
Die letzten Jahre über hatte ich nur den Eindruck, es hat sich in eine gute Richtung entwickelt,
auch dass sie festgestellt haben, dass ihr Handling von Date-Time-Kacke ist,
und haben sich jetzt Gedanken darüber gemacht, jetzt ist es was ganz Gescheites.
Wo ich es aber, denke ich, ganz gut einschätzen kann, ist bei C-Sharp.
Und C-Sharp hat tatsächlich ein Problem, vielleicht ist es ja in JavaScript ähnlich,
bloß dass ich es da nicht richtig einschätzen kann.
Ich muss kurz die Musik ein bisschen leiser machen.
Nur dass ich es in C-Sharp ganz gut einschätzen kann, denke ich.
Also in C-Sharp haben die zu viel Syntax, wie soll man das nennen,
zu viel Convenience-Syntax eingebaut die letzten Jahre über.
Und sie haben zu viele Nischen-Features eingebaut, die wahrscheinlich nur Microsoft selbst benötigt.
Ich finde die Entwicklung von C-Sharp im Prinzip, im Großen und Ganzen gut.
Ich finde es auch gut, dass es regelmäßig Updates gibt, dass es einmal im Jahr eine neue Version gibt.
Das finde ich ist eine super Sache.
Da kann man sich einmal im Jahr drauf freuen.
Leider bauen sie...
Also sie legen ein bisschen viel Fokus drauf, neue Sachen in die Sprache einzubauen, die nicht so wirklich passen.
Ich meine, seriously, wer blickt denn bitte schön in C-Sharp noch durch?
Es gibt Klassen, es gibt Structs.
Soweit okay.
Es gibt Records.
Soweit auch noch okay, da wird es aber langsam schon ein bisschen komplizierter.
Es gibt Recordstructs.
Es gibt Recordclasses.
Was übrigens das gleiche ist wie normaler Rack.
Es gibt Rackord.
Es gibt Refstructs.
Refstructs, Records und Zeug.
Und da blickst du echt nicht mehr durch.
Ja, kann ja jeder benutzen, was er will.
Da blickst du einfach nicht mehr durch.
Dann wollen sie noch komische Syntax-Sachen einführen, dass du jetzt irgendwie Record oben hinschreiben kannst.
Nee, dass du Konstruktor oben...
Sie wollen ernstes einführen, habe ich gelesen, in der nächsten C-Sharp-Version, dass du Konstruktor weglassen kannst und in der Klassendefinierung...
Also bisher hast du es ja so gemacht.
Class, Keckel, so, wir machen jetzt krasses Notepad-Programming, Keckel und dann hast du reingeschrieben, hier, wenn du Sachen übergeben willst, beim Anlegen von der Klasse, dann musstest du das so schreiben.
Du hast die Klasse definiert, dann hast du den Konstruktor definiert, der so hieß wie die Klasse.
Jetzt gab es eine neue Überlegung, ob man nicht sowas einbauen soll.
Was die komplette Syntax wieder...
Dann hast du wieder 20 Möglichkeiten, was zu machen und so.
Richtig bescheuert.
Was sie mal meiner Meinung nach wirklich machen müssten...
Die müssten die nächsten 1, 2...
Auch diese Nullability-Geschichte ist sehr halbherzig.
Die müssten die nächsten 2...
1, 2 C-Sharp-Versionen...
sich hinsetzen.
Und die können ja durchaus neue Sachen einbauen.
Die können ja durchaus neue Sachen einbauen.
Allerdings sollten sie die nächsten 1, 2 Versionen mal darauf achten, dass sie neue Sachen einbauen, um es wieder logischer und konsistenter zu machen.
Ja, scheiß drauf.
Dann schreibt man es halt doppelt.
Ich verstehe den Sinn, aber ich...
Es macht es, es macht es undurchsichtiger.
Man muss sich das mal angucken, die letzten C-Sharp-Versionen.
Man muss sich das mal angucken, die letzten C-Sharp-Versionen
Es sind viele sinnvolle Sachen drinne.
Es sind viele sinnvolle Sachen drinne.
Zum Beispiel finde ich so die
die grundsätzliche Patterm Matching-Geschichte
die grundsätzliche Patterm Matching-Geschichte sehr nice.
Sie ist teilweise extrem pypäger, wenn
Sie ist teilweise extrem pypäger, wenn
man es übertreibt.
Aber die grundsätzlichen Sachen
find ich beispielsweise ziemlich cool.
Das du jetzt machen kannst...
Four posts T moderne
Was ich zum Beispiel ganz cool finde...
Was ich zum Beispiel ganz cool finde...
AgentSmith, dankeschön für den Sub.
Also was ich zum Beispiel ganz cool finde,
wir machen mal hier Konsolen-Application
dort, dann sehen wir ja, create.
Also eine Sache, die ich
tatsächlich nice finde, was Pattern-Matching
angeht, was aber auch schon seit ein paar
Versionen geht, ist, dass
man jetzt zum Beispiel sowas hier machen kann, ja.
Ähm, keine Ahnung.
War, blubb,
gleich,
keckel, so.
Und dass man jetzt gucken kann, if
ja, das Plutonium,
das ist auch schon wieder, das finde ich auch bescheid.
Aber was ich cool finde, ist, was du machen kannst,
if, wir machen es einfach mal so,
if, blubb,
is, string,
also falls du das nicht, falls du das nicht weißt, dass es
ein String ist, es könnte ja ein Object sein
oder sowas hier, isString,
blubb, so, ähm, das ist doof hier.
Ich nenn's mal, ich nenn's mal richtig hier.
Input,
so, InputObject,
und jetzt kannst du testen,
InputIsString,
so. Das finde ich sehr
praktisch. Das musstest du früher ein bisschen
umständlicher machen.
Das finde ich ganz cool, ja. Jetzt kannst du hier drinnen,
kannst du sicher sein,
das ist nicht null.
Alter, was ist denn jetzt los hier? Danke schon für die ganzen Subs, Leute.
Poggers, Xeto,
RealAgentSmith,
SilverCross, Stubenmoker,
danke schon, Leute, für die ganzen Subs. Jetzt ist der GBA-Track
am Start.
Danke, Leute. Ja, das, das
finde ich, das finde ich gut.
Jetzt kannst du dir sicher sein, String ist
nicht null.
Und wobei, kannst du dir sicher sein? Ja, du kannst dir,
du kannst dir, glaube ich, sicher sein, dass es nicht null ist.
Und es ist, es ist
gecastet automatisch in String.
Das finde ich zum Beispiel ganz cool.
Man kann es,
man kann es aber auch richtig übertreiben.
Zum Beispiel, was man nicht machen
soll ist, ist,
wenn man einfach nur checken will,
das, das wollen sie nicht, dass man
das macht, sondern sie wollen,
dass man checkt, ist
so.
Wo ich mir denke, was ist das schon wieder für
eine Abfuck-Syntax, Mann?
Ich, ich verstehe, wo das herkommt.
Es geht darum, dass man hier beispielsweise
auf weitere Properties
von diesem Input zugreifen
könnte. Aber
iiih!
Warum?
Ja, ich weiß, dass es immer true ist in dem Fall.
Aber warum? Es gibt
einige Sachen. Wir müssten uns mal demnächst,
wir müssten uns
demnächst mal wieder
ein bisschen, ein bisschen
C-Sharp-Versions-History angucken.
Also da hat sich, da ist viel wirres Zeug.
Da ist, da ist viel wirres Zeug drin, wo ich sage,
das ist höchstens drin, weil Microsoft das selber
braucht.
Ja, ne, aber nicht heute. Können wir wirklich bei einem
nächsten... Ich benutze ja auch bei
weitem nicht alles, weil die haben so viel Zeug
eingebaut und vieles davon
finde ich auch nicht gut gemacht. Also, die
müssten echt die nächste Version oder die nächsten zwei
Versionen am besten neue Features
bringen. Ist ja gut, aber Features im Sinne
von, es wieder zu machen.
Es wieder einheitlicher und
konsistenter und logischer zu machen.
Microsoft hat noch nie ein gutes Produkt
rausgebracht. Change my mind. Was hältst,
was hältst du von Visual Studio Code zum
Beispiel?
Es ist doch ganz, ist doch ganz
brauchbar oder nicht? Oder GitHub, wobei
GitHub ja nicht, ja, ist ja nicht wirklich
von Microsoft. Kann man so nicht sagen.
Es ist ja durchaus gescheites, gescheites
Zeug dabei. Microsoft neigt irgendwie dazu,
die sachen unnötig plote zu machen mit der zeit weiß nicht ob es das ob es das trifft oder was
haltet ihr von uwp uwp ist doch auch geil oder etwa dich grinscher uwp nicht geil findet nein
ich finde uwp auch nicht geil uwp das sind die sachen die früher in den windows du musst das
früher die sachen für den windows store erstellen mit mit uwp uwp ist quasi so ein zwischending aus
windows ui und ein bisschen windows api ja gut uwp versus elektron ist ja auch so pest und cholera
man wie sieht es eigentlich mit win ui und unpackaged windows apps aus funktioniert das
mittlerweile gescheit microsoft hat auch die xbox 360 zum beispiel rausgebracht die war auch gut
also vereinzelt kommt da schon gescheiten gescheiter kram
raus finde ich roosters microsoft teams ist doch auch nicht so kacke die alternativen ok sagen wir
mal so microsoft teams ist kacke ok aber die alternativen sind noch beschissener age of
empires ist beispielsweise auch ein cooles game gewesen also microsoft hat schon die ein oder
andere gescheiten sachen rausgebracht denkst du pauschal kann man das nicht sagen ms dokumentation
ist auch beste na ja also die
netto co ist zum größten teil nicht sonderlich toll also wo ich rauschen
raus rot als ein neuer sollten nur glas ist als parameter bekommen können was moment okay das
muss ich jetzt bei neuer api sollen nur glas es als parameter bekommen können das ist doch überhaupt
nicht java-script spirit da wird doch auch ganz viele objekte hin und hergeschoben mit
vale Wesley und sowas drin ich bin für ihre
Ihre Standard-Library ist es vielleicht gar nicht so blöde, weil du dann immer genau weißt, wie die Datentypen aufgebaut sind, die du als Parameter übergeben musst.
Dann bräuchtest du beispielsweise keine TypeScript-Sachen mehr im Hintergrund dafür, aber es ist nicht so wirklich im JavaScript-Spirit, oder?
Visual Studio Code ist nur gekauft? Hä? Echt? Seit wann?
Die haben, die haben, nee, das war doch schon immer Microsoft, die haben das angefangen als, ähm, nee, das ist nicht, sie haben damals noch Atom-Shell benutzt, weil Elektron hieß damals Atom-Shell, das ist kein Elektron-Fork gewesen, das war das UI-Framework davon.
Aber das ist ja nicht wirklich, ähm, gekauft, also das gab es ja auch schon, bevor sie GitHub übernommen haben.
Visio, nee, Visio mag ich nicht.
Gibt es irgendeine Idee, die so ausgebaut ist wie Visual Studio Code?
Äh, was meinst du jetzt?
Ja, normales Visual Studio vielleicht, oder was?
Oder wie jetzt?
Also die JetBrains-IDEs sind schon ziemlich pock, das stimmt.
Aber, sag mal, in puncto, in puncto Erweiterbarkeit dürfte eigentlich Visual Studio Code wirklich ganz vorne mit dabei sein.
Also, man kann sicher...
Man kann sicherlich auch andere Editoren aufrüsten, wenn man zum Beispiel jetzt sich anguckt, was die, was die Leute gerade mit NeoWim veranstalten, gerade, oder früher mit Emacs und solche Sachen, aber Visual Studio Code ist da schon ganz weit vorne.
In puncto Erweiterbarkeit.
Mit der neuen, die neue Windows-API kann mir insofern gestohlen bleiben, weil man damit nicht mal gescheit Screenshots machen kann, vielleicht geht's ja mittlerweile.
Wenn man gute UI unter Linux haben will, dann sollte man...
Wenn man gute UI unter Linux haben will, dann sollte man nicht EndeavorOS mit MATE verwenden, habe ich gestern gesehen.
Ja, es ist doch hier die neue UI sogar, oder?
Ja, wir haben doch schon die neue UI.
Find die, find die echt nicht schlecht.
Draw.io heißt übrigens nicht mehr Draw.io.
Draw.io heißt jetzt, äh...
Diagrams.net oder so?
Wo ich ernsthaft nicht verstehe, warum man...
Warum man das umbenannt hat, verstehe ich absolut gar nicht.
Draw.io war so ein cooler Sprechmodus.
Und so ein sehr rechender, sinnvoller Name.
Diagrams.net ist einfach doof.
Ich finde, das stimmt tatsächlich.
Ja, Ausnahmen bestätigen die Regel.
Ich finde Windows auch nicht gut, ich benutze es, weil einiges darunter halt am besten funktioniert.
Wirklich Bock drauf habe ich auch nicht.
Excalibur ist auch...
Haben wir das Video eigentlich fertig geguckt, oder bin ich wieder mal sidetracked worden?
Ich bin... wir haben's nicht fertig geguckt.
Wo sind wir stehen geblieben?
Vietconfig.
Okay, da habe ich tatsächlich schon mal was drin editiert.
Ich habe mittlerweile das Gefühl, dass Viet das beliebtere Projekt ist als Vue.js von... von Avenue.
Auch ein geiler Name der Typ, oder? Avenue.
Ich glaube, Viet ist mittlerweile beliebter als Vue.js.
Guck mal mal, guck mal mal.
GitHub, Viet.
53k Name, Sternehand, Vue immer noch.
Aber aktuell ist Viet auf jeden Fall angesagt, also im ganzen, ganzen Ökosystem.
Was benutzt du privat für eine Firewall und warum?
Ich habe die ganz normale Standard-Windows-Firewall und ich habe einen MikroTik-Router mit ein paar Firewall-Regeln.
Fertig.
Nicht sonderlich advanced.
Vue wird immer mehr wie React.
Ich habe lange nichts mehr in Vue gemacht.
Ich habe, ehrlich gesagt, bei der Umstellung von Vue 2 auf 3 keinen Bock mehr gehabt.
Das war mir zu... schnell der Umbruch irgendwie.
Also ja, eigentlich... okay.
Eigentlich nicht.
Man kann ja Vue 3 genauso benutzen wie Vue 2.
Äh, von 2 auf 3.
Man kann ja Vue 3 genauso benutzen wie Vue 2.
Aber irgendwie, ich kann es auch nicht richtig jetzt genau sagen, den Finger drauf legen, woran es lag.
Aber ich hatte keinen Bock mehr auf Vue, so richtig bei dem Umstieg von 2 auf 3.
Gerade auch, weil sehr viele Projekte und Libraries ewig gebraucht haben.
Wirklich ewig.
Bis sie mal auf Version 3 angekommen sind.
Ich glaube, Vuetify hat irgendwie 3 Jahre gebraucht oder so.
Ich glaube, mittlerweile haben sie es, glaube ich, geschafft.
So nach 3 Jahren.
Und ich muss sagen, ich bin ja so ein bisschen auf den Svelte-Zug aufgesprungen.
Dementsprechend habe ich noch weniger mit Vue gemacht.
Ist immer noch nicht stable auf Version...
Ja, gut, dann kannst du knicken.
Ich habe keinen PFS.
Ich hatte früher mal PFSense.
Als ich noch die fette Serverkiste hier laufen hatte.
Habe ich aber nicht mehr.
Wollten die noch nicht schon letztes Jahr im Februar stable Vue 3 rausbringen?
Das wird zumindest noch ein Konfigurationsfile benötigen, das dem Modulbundler sagt, wo man den Sourcencode finden kann und was man als letztes Output nennt.
Also ich habe ehrlich gesagt, ich habe noch nie was mit React gemacht.
Mich hat es bisher nie großartig angesprochen, weil ich diese ganze Geschichte mit...
HTML, Inline, JavaScript immer eklig fand.
Man muss dazu sagen, ich habe mittlerweile auch...
Ich leake jetzt mal was, Leute.
Ich leake jetzt mal was.
Obacht.
Wenn ich mal wieder Mist erzähle, könnt ihr mir den Clip dann einspielen, okay?
Ich leake jetzt mal was an der Stelle.
Dadurch, dass ich mittlerweile schon so lange Videos mache...
Nein, kein Facelike.
Dadurch, dass ich mittlerweile schon so lange Videos mache und auch schon eine ganze Weile streame und natürlich auch schon eine Weile im IT-Sektor und sowas unterwegs bin.
Ich habe schon vieles gehört, ich habe auch schon vieles benutzt, aber ich habe mittlerweile auch ein gewisses...
Wie soll man das nennen?
Ein gewisses Talent dafür entwickelt, Sachen überzeugender zu verkaufen, als ich wirklich Ahnung davon habe.
Also ich sage jetzt nichts, von dem ich weiß.
Es ist komplett falsch oder so.
Aber ich habe mal...
Wenn ich mal irgendwelche Artikel drüber gelesen habe oder mich mal fünf Minuten damit beschäftigt habe, dann sage ich da auch manchmal meine Meinung zu im Stream, die jetzt vielleicht nicht so sehr auf monatelange Erfahrung beruht.
Und dementsprechend hört es sich wahrscheinlich oftmals krasser an, als es ist.
Also denkt mal, boah krasser Max hier.
React kann er, Vue kann er, Svelte kann er, Backend kann er, Node.js kann er, Go kann er.
Rust kann er, alles kann er.
Ich kriege vieles relativ schnell hin, weil ich ganz gut googeln kann.
Aber ich kann das auch nicht alles.
Deswegen bin ich jetzt ja auch Senior DevOps Engineer geworden.
Weil das muss man als Senior eindeutig können, ja.
Hast schon recht.
Vielleicht sollte ich mir auch mal ein bisschen React zu Gemüte führen.
Wenn du es konkret in einem Satz Ja oder Nein haben willst, dann werdet ihr mir sagen,
dann werdet ihr wahrscheinlich...
Ja oder Nein?
Okay.
Null und hundert Antworten gibt es nicht.
Ja, dann werdet ihr verarscht.
Aber man könnte eher sagen, ihr werdet, sagen wir mal, zu 20% vielleicht ein bisschen gebetet
und 80% stimmt.
Was wahrscheinlich schon ein ziemlich hoher Anteil ist, ja.
Im Influencer-Game.
Das stimmt, ja.
Das stimmt, das stimmt.
Merke ich auch öfters.
War Netzwerk für dich nie interessant?
Also Netzwerk fand ich während der Ausbildungszeit und sich damit beschäftigt, fand ich sehr
spannend.
Aber irgendwann habe ich gemerkt, so wirklich langfristig Netzwerksachen will ich nicht
machen.
Also mich interessiert zwar so Grundlagen.
Ich kann beispielsweise lange im Packet Tracer rumklicken und über irgendwelche Netzwerk-Grundlagen
reden.
Von Up-Requests.
Hier gibt es dann einen ICMP-Error und sowas.
Das mache ich gerne.
Das finde ich interessant.
Aber so richtig, so die richtig Hardcore-Netzwerk-Sachen, muss ich sagen, die interessieren mich jetzt
nicht so richtig.
Also was ich beispielsweise, was mir zum Beispiel total am Arsch vorbeigeht, zum Beispiel irgendwelche
Cisco-Application Firewalls und sowas, das interessiert mich nicht die Bohne.
Wenn ich da drinnen rumklicken muss, da habe ich schon wieder keinen Bock, wenn ich das
Interface aufmachen muss.
Also das interessiert mich nicht.
Ja.
Und ich interessiere mich auch beispielsweise überhaupt nicht für irgendwelche Eigenheiten
von, ja, okay, das ist jetzt ein Dell-Switch, das ist ein Cisco-Switch, das ist hier und
das ist da.
Es gibt ja Leute, die stehen da total drauf und kennen sich da mega aus.
Das was interessiert mich überhaupt nicht.
SolidJS gibt es ja auch noch, wo wir wieder beim Thema sind.
Es gibt eigentlich jede Minute ein neues Framework in JavaScript.
Habe ich schon deinen PR beim Fiat Champ?
Wie, du hast einen PR aufgemacht?
Wirklich?
Nee.
Da habe ich noch gar nichts.
Ah, habe ich noch gar nichts gesehen.
Krass.
Read me Design Changes.
Poggers.
Oh, jetzt wird es aber advanced.
Alter, jetzt wird es advanced.
Hast du das, hast du das?
Oh, das können wir nicht machen.
Wie ist denn das offizielle Fiat-Logo?
Das darf nicht zu, das darf nicht zu, es darf nicht zu, es darf nicht zu, das ist zu sehr
am Original dran.
Ich glaube, das ist zu sehr am Original Fiat-Logo dran.
Das muss, das muss champiger sein irgendwie.
Nee.
Nee, ich glaube nicht, dass das selbst nachgebaut ist.
Aber es hat, es hat schon ein bisschen was.
Das ist mir zu Fiat.
Die Schrift und das ist mir zu original.
Das ist mir zu original.
Nicht, dass sie sich da noch aufregen.
Nimm lieber eine andere Schriftart.
Ich weiß, was du machen wolltest, ja.
Nimm lieber, nimm lieber eine andere Schriftart und mach das, den Shape ein bisschen anders.
Dann ist, dann ist okay.
Und du kannst es, nenn es vielleicht auch einfach nicht Fiat, sondern nenn es Fiat Champ.
Das ist dann okay.
Ja, sowas, sowas hier in der Richtung kann man.
Also Fifat ist es schon.
Aber das kann man, kann man so nicht machen.
Ich bin bei sowas echt vorsichtig.
Das liegt wahrscheinlich daran, dass ich YouTube schon zu lange mache, was Copyright-Geschichten
angeht.
Das ist Absicht.
Kann ich dir an der Stelle auch sagen.
Das ist Absicht, dass die README noch mal dort liegt, weil Home Assistant die README
aus dem Add-on Directory anzeigt.
Das ist Absicht.
Kann ich dir an der Stelle auch sagen.
Das ist Absicht, dass die README noch mal dort liegt, weil Home Assistant die README aus
dem Add-on Directory anzeigt.
Und nicht die README aus dem Root-Verzeichnis.
Ich habe ein Build-Script, was die README-Datei kopiert.
Jedes Mal, wenn ich ein neues Tag setze.
Das geht leider nicht anders.
Links gehen ja nicht gescheit.
SolidJS.
Hast du in der Ausbildung auch viel Scripting gemacht?
Ja, ich habe in der Ausbildung im Prinzip das viel von dem gemacht, was man so in klassischer
Linux-Administration macht, weil ich habe zwar eine Ausbildung gemacht, aber ich wurde nicht
ausgebildet.
Das war Six-Set-Time von der Firma.
Die Firma hatte, bei der ich Ausbildung, also der Provider, bei dem ich die Ausbildung gemacht
habe, der hat sich teilweise in einem Jahr, das ist kein Witz, 50 Azubis hatte der teilweise.
Also nicht in einem Jahr neu dabei, in einem Jahr Spitzenzeit.
50 Azubis bei, glaube ich, 160 Mitarbeitern.
50.
Also ihr könnt euch vorstellen, die Azubis wurden dort nicht ausgebildet.
Die Azubis waren dafür da.
Um irgendwelche Dinge zu machen, weil es billiger war, als andere Leute machen zu lassen.
Also du wurdest dort nicht ausgebildet.
Du hast entweder was gemacht und was gelernt oder du hast reingeschissen.
So, also die Ausbildung war extrem lehrreich, aber die Ausbildung selbst war schlecht.
Ich glaube, vielleicht versteht man es in dem Zusammenhang besser, wie ich das meine.
Also die Ausbildung war nicht existent, aber es war insofern sehr lehrreich, weil man halt
viel machen konnte und viel gelernt hat.
Und ich habe in der Ausbildung extrem viel gelernt, was Linux angeht.
Aber wenn man sich hingesetzt hätte und nichts gelernt hätte, wäre auch okay gewesen.
Also das war da halt, das hat auch keinen interessiert.
Was ist die Readme an sich?
Ah Moment, ich habe tatsächlich Files Change noch nicht angeguckt.
Oh, du hast den Asset Directory gemacht, das ist schon mal Six Head.
Da liegt nicht mehr alles im Root rum.
Gar nicht so, gar nicht so schlecht.
Warum hast du einen Punkt XD hinzugefügt?
Was ist denn bitteschön Punkt XD?
Ach, das ist Adobe Design Datei XD.
Ist auch geiler Name für ein Projekt.
Wird Zeit für den XD Champ.
Das stimmt, ja.
Da war es aber echt Programm.
Ja, das ist ja normal, dass man immer noch was Neues lernt.
Okay.
So, vielleicht schaffen wir es irgendwann nochmal dieses Video fertig zu gucken hier, Mensch.
Wenn man einen Rollup unter dem Hut benutzt, wird das zumindest eine Konfigurationsfile benötigen, die dem Modulbundler sagen wird, wo man den Source Code finden kann, und was du als letztes Output nennen kannst.
Wenn Vite benutzt Rollup?
Ne oder? Ich dachte Vite ist ein Ersatz für Rollup.
Ich blick bei JavaScript Zeug nicht mehr durch.
Match doch mal die an einem PR.
Ich bin mir nicht so sicher, ob ich den wirklich haben will.
Die kopieren dort irgendwelche... Dinger um.
Ich muss mich mit dem Fiat Champ in nächster Zeit mal mehr beschäftigen.
Wir brauchen noch Alpha Romeo Support.
Den kriegen wir relativ einfach.
Und ich hab letztes Jahr auch ganz viel Zeug noch mitgeschnitten, was man noch aus der API rausziehen kann an Infos.
Das müsste ich echt mal einbauen.
Now, it's important to point out that none of this would have been possible without a package.json, which is yet another config file, where you declare all the different packages that you install from Node Package Manager or NPM.
Now, when you install packages using NPM install, it also creates a package.json lock.
You don't actually modify anything in this file.
Shut the Jazon.
It just keeps track of all the exact versions of packages in your project.
Because your dependencies have their own dependencies, who have their own dependencies, who have their own dependencies, who have their own dependencies, who have their own dependencies, who have their own dependencies.
To make matters more confusing, there's also Yarn and PNPM as alternatives.
Okay, Yarn hat sich ja selbst ins Knie geschossen.
Yarn hat sich mit Version 2 auch wieder richtig selbst ins Knie geschossen.
Nachdem es ja irgendwie erst Barry hieß und dann Yarn 2 und jetzt wieder Barry und...
Und eigentlich ganz viele Default Settings geändert hat.
Und dann haben sie gesagt, Yarn 2 ist eigentlich ein neues Tool.
Benutzt einfach Yarn 1 weiter, wenn es euch nicht gefällt.
Aber wir werden Yarn 1 nicht mehr weiterentwickeln.
Also die haben sich auch ziemlich ins Bein geschossen.
Ich glaube, die Leute verwenden heutzutage eigentlich gar nicht mehr Yarn, sondern eher NPM.
Oder wie die coolen Leute PNPM.
Der Unterschied, ich glaube, das wird er auch gleich erklären.
Aber soweit ich weiß, der Unterschied zwischen NPM und PNPM ist,
dass NPM jedes Mal die ganzen Sachen neu installiert.
Und PNPM quasi ein Cache Directory hat und nur noch linkt daraus.
Also jede Version nur einmal installiert und dann daraus irgendwie linkt.
Was dazu führt, dass es viel weniger Platz auf der Platte wegnimmt und deutlich schneller ist.
Ob es Downsides hat, ob es Probleme hat, in speziellen Fällen kann ich nicht sagen.
Vielleicht gibt es ja Fälle, wo Simulink nicht richtig funktioniert.
Da habe ich zu wenig Erfahrung mit.
Außerdem müsste man noch irgendwo deine App auf rund,
in welchem Fall braucht man irgendwie ein Config File in Vercel, Firebase, Netlifier, oder was auch immer.
Diese File werden für das An beating behaviour auf deinem Server anfangs von.
Übrigens, ich möchte jetzt an der Stelle nur mal kurz erwähnen.
Wir haben jetzt ein komplettes Verzeichnis voll mit Config-Dateien.
Es wurde noch nicht eine Zeile Funktionalität programmiert.
Es wird bloß die Konfiguration konfiguriert.
But before you deploy, you want to make sure you do some automated stuff.
Das ist doch immer so? Nö, das ist eigentlich nur in JavaScript so.
Also, in diesem extremen Ausmaße, ja.
Okay, GitHub Actions würde ich da jetzt nicht wirklich mit dabei zählen.
Jetzt übertreibt das, jetzt übertreibt das aber.
But of course, that's also going to require another config file.
I think that pretty much covers the basics.
However, the other day I came across a config file that I had never heard of called Alex.
What it does is analyze your project for profanity, wrong thing and other offensive language.
For example, if you write a comment like, fuck all these config files,
I'm gonna go work with my motherfucking cousin, who's a garbage man making more money than I do.
Alex will warn you that garbage man is gendered language and...
Seriously? Das ist das Tool, das alles...
Da haben wir drauf gewartet.
Das muss sein.
...could be garbage collector instead.
That concludes our tour of config files in the JavaScript ecosystem.
If you want to learn more about testing and linting, check out a new course from the full stack.
Alex, wie hieß das?
Catch? Okay.
Catch insensitive inconsiderate writing.
Okay, wenn man zu oft fuck schreibt.
Okay, hey, das ist gar nicht mal, gar nicht mal schlecht.
Weil du möchtest vielleicht nicht unbedingt einen Comment einchecken im Superbusiness.
Bei der Enterprise-Repo, wo 20 mal fuck und sonst was drin steht.
Eigentlich gar nicht so schlecht.
Wobei mich das eher wundert, dass es dafür ein extra Tool gibt.
Ich hätte gedacht eher, dass so was als Visual Studio Plugin ist.
Aber gut, wenn es als extra Tool ist, lass mich an...
Written in... In was? Written in...
In JavaScript, okay.
Nicht in Rust. Ich hätte jetzt fast auf Rust getippt.
So, ähm.
Es ist natürlich gut, wenn es ein eigenes Tool ist.
Dann kann man das in irgendwie, in eine Pipeline einbauen...
...oder irgendwelche Checks anbauen.
einbauen, die laufen, wenn einer einen Pull-Request
macht, kannst du gucken, okay, hat er
irgendwelche
beleidigten Comets drin, dann
weiss ihn mal in seinem Pull-Request
drauf hin. Wobei, dann dürften wahrscheinlich
viele Sachen im Linux-Körnel auch nicht
gemerged werden, oder?
Linus ist ja nicht dafür bekannt, dass
er zurückhaltend ist, was irgendwelche Dinge
angeht. Alternativ, äh, nee, nicht
alternativ, man muss ihm aber echt
zugutehalten, Linus ist ja seit
ein paar Jahren
ziemlich reformt, ne?
Der hat ja
früher, der hat ja früher richtig krass immer
rumgeflamed, und seit so den
letzten vier,
drei, vier Jahren,
seitdem er mal gesagt hat, ich nehm hier eine Auszeit,
und der ist dann wieder
gekommen, dann war er deutlich
entspannter, ja? Also, der
hat, der ist wirklich ein bisschen reformt.
Natürlich flamed er immer
noch gerne rum.
Aber er hat ja,
ich mein, er hat ja auch meistens
Grund dazu, und außerdem sind die Finnen
eh dafür bekannt, überall,
wie mit Schimpfwörtern, um sich zu werfen.
Also, YouTube möchte unbedingt,
dass wir uns die Hans-Zimmer-Kopfhörer angucken.
Ich hab keinen Bock auf die Hans-Zimmer-Kopfhörer.
Code mit Schimpfwörtern
ist besser.
Ja, sieht man ja, Linus
funktioniert ziemlich gut, da sind bestimmt einige Schimpfwörter
drinne.
Also, wir müssten mal wirklich den Linux-Kernel-Repo
klonen und dort mal nach Fax suchen,
zum Beispiel. Ich glaube, wir finden
da öfters mal sowas in der Richtung.
Problem ist nur, dass das
Kernel-Repo-Klonen eine Viertelstunde dauert.
Das dauert echt ne ganze Weile,
das Linux-Kernel-Repo zu klonen.
Pass mal auf.
Git-Klon.
Stimmt, du hast recht, du hast recht.
Wir können, wir können einfach
nur die, die, wir wollen ja nur
die History, wir,
äh, muss es 1 sein?
Wir wollen ja nur die History, wir wollen, also
den letzten Stand, den letzten Working Tree, wir wollen ja
gar nicht die gesamte, den gesamten
Div und sowas haben.
Einfach das, das machen wir jetzt. Sekunde,
Leute, null.
Git-Hub-Alex.
Okay, wie benutzt, wie benutzt? Moment, das geht nur für,
das geht nur für JavaScript?
Spooky, spooky Musik, das passt.
Wie installiert man das jetzt überhaupt?
NPM install Alex Global, okay.
Gibt es vielleicht sogar hier, Alex?
Okay.
Git-Log, nee, wir müssen nicht kratten.
Wir müssen Git-Log.
Und jetzt noch mal g-i, fuck.
Okay, da ist schon mal nix drin, ne?
Fuck, nee.
Fuck.
Wir, wir, wir,
wir finden wohl einiges mit fuck,
wenn wir das da drin suchen.
Okay, suchen wir nach, nach
shit.
Oh, oh, Moment, da, da finden wir jetzt,
da finden wir jetzt
Data-Read-Shit.
Alles klar.
Komm, fuck suchen gibt's nicht, okay.
Und wie, wie können wir jetzt Alex installieren?
Okay, NPM install Alex.
Was, wie, wie führt man das aus?
CLI?
Aber man kann das gar nicht aufs gesamte Repo anwenden.
Oh.
Und, und versteht Alex überhaupt C?
Das kann wahrscheinlich nur JavaScript, oder?
Ja, das ist natürlich,
das ist natürlich doof, da brauchen wir das auch nicht.
Also es, es gibt einige, es gibt einiges fuck und shit im Linux, Linux-Kernel.
Was ist, wenn man das Git-Log?
Crap.
Shit.
Okay, äh, zumindest, zumindest in den Log,
ach, Moment, ich hab's ja geklont.
Ah, ich depp,
ich hab ja das Repo nur geklont, ohne die,
ohne die History.
Das hätt's ja zu lang gedauert.
Oh, was jetzt?
Ah!
Meine Shell ist voll am abkacken.
Das Repo, das Repo ist zu groß.
Linux.
Bam.
Yes.
Yes.
Yes.
Alles klar.
Gib ihm.
Wenn man das nämlich, wenn man das nämlich komplett klont,
das klont locker eine Viertelstunde, der Linux-Kernel.
Es ist gar nicht so groß, wie man denkt,
aber es klont wirklich richtig lange.
Nun ja.
So, dann gibt's ja irgendwas Spannendes.
Ich krieg langsam Hunger.
Pippo-Fat-Time nähert sich.
Ach, hätte ich das auch machen können?
Raster must, äh, must, rust, rustmaster.
Ja, und?
Und?
Wieso eigentlich Windows 11?
Weil nur Windows 11 meine CPU ordentlich unterstützt.
Auch wenn das rein technisch gesehen falsch ist.
Der Windows-Task-Scheduler kann unter Windows-Version unter 11
nicht die Efficiency-Cores richtig ansprechen,
schedulen für 13.900K.
Was gibt's heute wahrscheinlich?
Übrig geblieben in Sachen von, von gestern.
Also das Gleiche, was ich gestern erzählt hab.
Wer's nicht mehr weiß, es gab Nudeln mit Lachs.
Das gibt's heute Mittag wieder.
Rust.
Rust im Kernel.
Poggers.
Da können sich die ganzen Leute auf Hacker-News ein...
ab...
Da kann ihnen da eine abgehen drauf jetzt,
dass Rust im Kernel drin ist.
Das muss man, das muss man Linus aber echt zugute halten, ne?
Der ist immer am Flamen.
Und meistens...
Meistens hat er ja auch Recht.
Auch wenn er manchmal etwas, etwas über...
über das Ziel hinausschießt.
Aber eins muss man dem wirklich zugute halten.
Wenn genug Leute...
das gesehen haben, gut finden und ihn versuchen zu überzeugen,
der lässt sich auch überzeugen.
Der war am Anfang, das war jetzt schon am Anfang, komplett kein Fan von Rust im Linux-Kernel.
Und jetzt ist es mittlerweile drin.
Bisschen...
Wen oder was flamed er denn?
Also im Prinzip flamed Linus so ziemlich alle.
Natürlich meistens Mitarbeiter am Linux-Kernel,
die irgendwelche Änderungen nicht so machen, wie er sich das vorstellt.
Schlecht kommentieren, ähm, schlechte...
seiner Meinung nach schlechten Code committen oder irgendwie blöde Aussagen treffen und sonst was.
Der flamed auch ganz gerne mal...
Der flamed auch ganz gerne mal Hersteller, dass sie nicht gescheite Linux-Treiber machen.
Ich sag dazu nur, wo wir gerade dabei sind, den...
Das will ich übrigens...
WTF, das will ich überhaupt nicht anklicken.
Ich will einfach nur auf YouTube.
Fuck you Nvidia, zum Beispiel.
...chips into the Android-Market.
And Nvidia has been the single worst company we've ever dealt with.
So, Nvidia, fuck you.
Zum Beispiel solche Sachen, ja.
Kommt da schon ab und zu mal vor.
Wo...
Aber ich muss ehrlich sagen, ich find's bei ihm gar nicht so wild.
Er hat ja meistens irgendwo einen Punkt,
er schießt auch übers Ziel hinaus, aber letztendlich, hey,
er ist der Ober-Linux-Fivehead,
der dafür sorgen muss, dass der Kram funktioniert.
Und...
Dem ist auch egal.
Also, der flamed auch alles und jeden.
Es ist nicht, dass der da einen großen Unterschied machen würde.
Also, wenn du einen Kack-Patch einreichst, flamed er dich genauso,
wie irgendein highly paid Intel-Engineer.
Die werden auch geflamed.
Der Typ, der...
Den, äh...
Treiber, Treiber, ich glaub, der 10G-Treiber war das,
der Intel-10-Gigabit-Netzwerkkarten-Treiber,
committet hat, der wurde auch des Todes geflamed von ihm damals,
bei diesem Commit.
Also, der macht da keinen Unterschied.
Der flamed den 0815-Dude um die Ecke,
genauso wie den highly paid Intel-Chef oder ganz Nvidia.
Das juckt die nicht.
Da schreiben die über Rust.
Ja gut, da wird natürlich geflamed.
Das kann ich mir jetzt nicht durchlesen, Mann.
Guck mal hier.
Da fuck, Alter.
Das ist eine Diskussion über zwei Jahre.
Aber da wird, da wird gerne rum geflamed.
Sie haben aber meistens irgendwie...
Übrigens, Linux kernel klont immer noch.
Aber zum größten Teil ist es am Ende irgendwie produktiv gewesen,
weil Linux ist seit Jahren strong, was das angeht.
Und immer irgendwo auch am Puls der Zeit.
Auch mit Neuerungen.
Oftmals schon lange bevor Windows irgendwas kann.
Beispielsweise der Task-Scheduler für den 13900K.
Was aber auch daran liegt natürlich,
dass die Hersteller ein gewisses Interesse haben.
Also Intel ist richtig dick dabei, was Linux angeht.
Und oftmals gehen die Sachen unter Linux schneller als unter Windows,
was Intel-Geschichten angeht.
Wo es natürlich schwierig wird, ist Nvidia, AMD und sowas,
die keinen Bock da drauf haben.
Wobei Nvidia und, also gerade Nvidia,
so im Bereich, wo es um Cloud-Geschichten und GPU-Computing und sowas geht,
da sind die auch ganz gut dabei.
Wo sie halt nicht gut dabei sind, sind Desktop-Grafikkarten.
Da haben die auch kein Interesse.
Endlich kann man mehr RAM downloaden.
Nice.
VRAM-based file system for Linux.
Unused RAM is wasted RAM.
So why not put some of the VRAM in your graphics card?
Ah, ok.
Man kann quasi sein Grafik-RAM jetzt als normalen RAM verwenden.
Das ist eigentlich auch ziemlich 6-Hert.
Das ist ja unused.
Hä?
Wie viel RAM hat so eine aktuelle 4090 RAM?
Wie viel RAM-Size haben die?
24 GB?
Leute, das brauchst du doch meistens gar nicht.
Einfach mal 8 GB mega hyper schnellen RAM?
Hinzufügen.
Das ist doch eigentlich richtig, richtig high-IQ.
Wobei man sich fragt, ob es wirklich so krass ist, weiß ich gar nicht.
Man muss ja immer über PCI-Express drüber.
Ja, es ist ja so ungefähr nur ein Drittel so schnell wie richtiger RAM.
Aber ist doch trotzdem eine coole Idee.
Einfach Grafik-Karten-RAM als RAM verwenden.
So, ok, jetzt haben wir Linux-Kernel ausgecheckt.
Alter, meine Shell lag.
Das ist echt krass.
Alter, meine Shell lag da drinnen.
Ok, Grab.
Nach Shit.
Ok.
Shit können wir nicht suchen.
Fuck.
Fucked up.
Moment.
Heißt der Typ wirklich Michael Fuckner?
Na gut, warum nicht.
Really dumb fucked up.
It has fucked...
Och.
Ok.
Die...
Die Comet History...
Die Comet History ist halt auch voller Fucks, ja.
Wundert mich jetzt nicht anders.
Wir müssen das übrigens löschen.
Weil, wie groß ist denn das?
Falls das überhaupt in endlicher Zeit heute...
Ok, geht ja.
5...
Na ja.
Geht doch eigentlich.
5,9G.
Ich meine, das ist der Linux-Kernel.
Und vieles vom Linux-Kernel ist wahrscheinlich gar nicht mal so sehr der Source-Code, was 5,9G groß ist.
Da sind ja bestimmt auch die ein oder anderen Binaries dabei.
So.
Linux.
Linux.
Löschen.
Moin Patrick.
Weg damit.
Ok.
Nice.
Leute, es ist Pepo-Fat-Time.
Ich glaub...
Ich glaub, wir haben es geschafft, das eine Video fertig zu gucken.
Mit den Config-Files.
Es ist Pepo-Fat-Time.
Ich geh jetzt was essen.
Ja.
Ich weiß.
Aber ich muss jetzt trotzdem auf.
Wir sehen uns im nächsten Stream.
Bis denn.
See you.
