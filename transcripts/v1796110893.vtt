WEBVTT

01:21.580 --> 01:42.600
So, ich bin am Start, alles wieder in Ordnung, ja geht, also es war gestern Abend echt, ist noch ein bisschen, ist noch schlimmer geworden, also ich war glaube ich insgesamt, ja ich muss glaube ich fünfmal aufs Klo oder so, bis es dann wieder gut war, bis ich dann keinen Bauchweh mehr hatte, also das weiß ich, was es war, ich hab das manchmal,

01:42.600 --> 02:18.020
ja, meistens so ein paar Stunden nach dem letzten Essen, irgendwie manchen Tagen vertrage ich nix, weiß nicht woran das liegt, ja war gestern Abend blödes Timing, aber gut, was soll ich machen, ich mein, ich kann ja schlecht mit Bauchweh vorm Rechner sitzen und streamen, in die Hose kacken oder so, naja, das geht ja nicht, also insofern, keine Chance, komm, wir machen wieder ein bisschen Wupp Wupp von gestern an, Wupp Wupp, stehen geblieben, Wupp Wupp,

02:20.760 --> 02:57.320
hast du heute Urlaub? Nein, ich hab heute keinen Urlaub, ich krieg das hier, den Stream als Arbeitszeit bezahlt, Quatsch Leute, Lull, ich arbeite, ich arbeite nur vier Tage in der Woche und montags hab ich immer frei, was sehr, sehr ist, nein, nein, ich hab keinen Urlaub,

02:58.920 --> 03:01.340
ich hatte dieses Jahr noch gar keinen Urlaub, ich hab sogar den Abend,

03:01.360 --> 03:31.340
ich hab den alten Urlaub mitgenommen vom alten Arbeitgeber zum neuen, der neue hat's noch nicht gut geschrieben, aber ich denke mal, das werden die im Laufe der Woche machen, Strategie nicht gut gewählt, ja, das stimmt, ich weiß, dass ihr gerade alle arbeiten müsst, aber was wäre besser, gar nicht jetzt, oder, was soll ich machen, ne, außerdem könnt ihr den Stream sicherlich als Fort- und Weiterbildung abrechnen, ja, so würde ich das auch machen, ich mein, hier lernt man ja was, wir gucken uns heute wieder Google Cloud mit Terraform an und ich zeige euch heute, ich mach jetzt das gleiche,

03:31.360 --> 04:20.630
Intro nochmal, was ich, was ich gestern gesagt hab, so, äh, und zwar, ich zeige euch heute, wie's richtig geht, ganzen Dezember Urlaub, weiß ich nicht, ich hab mich schon, hab ich noch nicht geplant, das zählt fast als Arbeitszeit, dass wir, da wir uns auch, äh, Google Cloud im Geschäft anschauen, ja, das ist so, passt doch, passt auch ganz, passt auch gut, wieso, wie gesagt, wir machen ja hier wirklich Sachen, die euch auch auf der Arbeit was bringen, also, das ist ja nicht, muss es ja nicht komplett verheimlichen, man, gerade wenn ihr was mit Google Cloud und Terraform macht, dann ist es jetzt, es ist ja wirklich,

04:20.650 --> 04:50.510
so was wie, wie, wie Weiterbildung, wenn man so will, ja, natürlich ist vielleicht der Chef ein bisschen skeptisch, wenn das auf Twitch-TV passiert, man, man weiß ja nicht, übrigens, mein, mein Ex-Kolleg, oder was, mein, mein Ex-Kolleg, der mit mir auf die neue Arbeit, der wieder mein richtiger Kollege jetzt, äh, ihr wisst ja, ähm, der hat heute auch angefangen, der hat wieder richtig die Arschkarte gezogen, der war irgendwie im Urlaub vorher und wollte eigentlich gestern da sein und heute anfangen auf der Arbeit und dann ist irgendwie sein Flieger ausgefallen,

04:50.650 --> 05:23.290
er ist heute erst um elf oder so was in Frankfurt angekommen, macht super Eindruck am ersten Arbeitstag, oder, wenn du anstatt morgens wie verabredet erst um elf auftauchst, war das bei der Pizza letzte Woche nicht auch so, ich weiß es nicht, es wäre auf jeden Fall denkbar und wenn es bei der, immer bei der Pizza ist, dann sollte ich vielleicht abends keinen, es ist ja nicht so, ich esse ja gar keine ganze Pizza, ich esse meistens zwei, zwei, drei Stück, je nachdem, wie groß die sind, das ist auch so ganz dünne Pizza,

05:24.550 --> 05:26.810
also, da ist eigentlich nichts,

05:26.830 --> 05:35.170
nix dran, großartig, aber gut, es kann doch durchaus an abends Pizza liegen, dass ich Bauchweh hab, ja.

05:40.200 --> 05:44.020
Bei meiner Arbeit gibt es einen DNS-Block für Twitch, hä?

05:45.760 --> 05:57.560
Ach so, ein DNS wird geblockt für Twitch, okay, ich dachte, du hast einen Block für Twitch in deiner DNS-Configuration, hä?

05:57.560 --> 05:57.600
Was?

06:02.450 --> 06:04.690
Terraform Apply, wir machen mal Terraform Destroy.

06:04.730 --> 06:29.580
Okay, wenn wir gerade dabei sind, ah, no, wir destroyen das nicht, es gibt nämlich einen Bug, den ich euch gleich zeigen muss, du kannst den Stream ja, du kannst den Stream ja, ja, Chat, Leute, ich meine, ich kann auch heute Abend streamen, wenn euch das lieber ist, aber, ich glaube, jetzt wieder aufzugehen ist auch doof, oder?

06:33.450 --> 06:41.550
Ich meine, ihr könnt den Stream ja auch im Wort gucken, das ist ja immer noch irgendwie drei Monate auf Twitch, oder ihr geht auf archivwublos.tv, könnt euch das im Wort anschauen.

06:41.610 --> 06:57.800
Oder ihr geht auf den Wort-Channel auf YouTube, also, wir müssen noch ein paar Sachen anpassen, was wir gestern gemacht haben, ich mach nochmal, ich mach nochmal ein bisschen Intro, ja.

06:58.820 --> 07:06.160
Oh, nice, Pfeifert, ich bin nicht ausgelockt aus Google Cloud, das ist schon mal gut, da muss ich mich nämlich nicht wieder einloggen.

07:07.780 --> 07:11.060
Unknown Error, Keckel, Keckel Test 1, 2, 3, perfekt.

07:13.100 --> 07:19.060
Also, ich mach nochmal das Intro, von dem ich gestern gemacht hab, also wir haben ja vor zwei Tagen bisschen rumgebastelt.

07:19.200 --> 07:22.940
Mit Google Cloud und Terraform, ich erzähl euch ja auch gleich nochmal kurz, was Terraform ist.

07:24.160 --> 07:34.860
Vor allem, wenn wir da rumkonfigurieren, und da war ja ein bisschen das Problem, dass ich selbst, mir ist noch nicht so genau im Vorfeld angeguckt hab, wie man den Terraform Google Cloud Provider benutzt.

07:34.980 --> 07:42.500
Also, sprich, wie man den Terraform Google Cloud provisioniert, und ich hab mir das jetzt ein bisschen angeguckt, und heute zeige ich euch, wie man das richtig macht.

07:43.120 --> 07:48.960
Damit ich nicht alle Lorbeeren selbst ernte hier, ich hab mir ein YouTube Tutorial angeguckt.

07:49.200 --> 07:59.180
Und von irgendeinem Anton, das hier, hab ich mir angeguckt, und hab mich davon ein bisschen inspiriert.

07:59.280 --> 08:01.480
Also, wir machen es allerdings nicht genauso, wie er das macht.

08:02.280 --> 08:06.740
Ich werd die Terraform Datei ein bisschen anders benennen, und auch ein bisschen anderen Inhalt reinschreiben.

08:07.240 --> 08:14.620
Aber das war ein sehr gutes Tutorial für Terraform, Kubernetes Cluster, und so ein bisschen Basic Usage von Terraform plus Google Cloud.

08:15.560 --> 08:18.100
Weil es ist doch schon anders als Azure, muss man sagen.

08:18.840 --> 08:21.380
Terraform, jetzt nochmal zur Erklärung, was das Ganze ist.

08:21.400 --> 08:25.600
Bei der Erklärung selbst von denen, ihrer Seite, blickt man ja nicht wirklich durch, was die einem sagen wollen.

08:26.920 --> 08:28.100
Was ist Terraform?

08:29.240 --> 08:37.760
Terraform ist ein Tool, mit dem man sich Cloud-Infrastruktur provisioniert.

08:39.240 --> 08:43.360
Kann man sich jetzt vielleicht ein bisschen schwierig was darunter vorstellen.

08:43.360 --> 08:51.180
Ganz praktisches Beispiel, wenn ihr bei irgendeinem Cloud-Anbieter, sei es bei Hetzner, sei es bei DigitalOcean,

08:51.400 --> 08:59.240
sei es bei Google Cloud, das ist eigentlich vollkommen egal, wenn ihr dort beispielsweise VMs installieren wollt,

08:59.240 --> 09:05.240
Netzwerke anlegen wollt, bei irgendeinem Cloud-Provider, dann könnt ihr das entweder von Hand im Web-Interface machen,

09:05.240 --> 09:11.240
was halt nicht reproduzierbar ist, das müsst ihr dann jedes Mal machen und dürft keine Zwischenschritte vergessen und sowas.

09:11.240 --> 09:14.240
Oder ihr macht das mit Terraform.

09:14.240 --> 09:21.240
Terraform ist quasi ein Cloud-übergreifendes Tool, wo man Cloud-Ressourcen anlegen kann.

09:21.240 --> 09:29.080
So dass es reproduzierbar ist und man nicht alles immer wieder von Hand machen muss.

09:29.080 --> 09:33.080
Terraform hat noch ein weiteres cooles Feature, wobei das manchmal auch Probleme...

09:33.080 --> 09:39.210
Ich mach die Musik aus.

09:39.210 --> 09:43.040
Wupp wupp wupp.

09:43.040 --> 09:45.040
Terraform der große Bruder von Ansible.

09:45.040 --> 09:47.040
Ne, sind zwei unterschiedliche Tools.

09:47.040 --> 09:51.040
Kann ich aber auch noch gleich was zu sagen, weil das gerne gefragt wird.

09:51.040 --> 09:53.040
Also, um das jetzt hier nochmal abzuschließen.

09:53.040 --> 09:57.040
Terraform hat noch ein weiteres sehr nice Feature.

09:57.040 --> 09:59.040
Was wir vielleicht auch gleich sehen werden.

09:59.040 --> 10:04.040
Und zwar, Terraform merkt sich, welche Infrastruktur man damit angelegt hat.

10:04.040 --> 10:06.040
Und man kann damit die Infrastruktur auch wieder löschen.

10:06.040 --> 10:11.040
Also sprich, wenn ihr Terraform benutzt, um bei Hetzner in der Cloud 10 VMs zu erzeugen.

10:11.040 --> 10:17.040
Und ihr wollt die dann irgendwann wieder löschen, dann könnt ihr einfach sagen Terraform Destroy.

10:17.040 --> 10:19.040
Das ist das Gegenteil von Terraform Apply.

10:19.040 --> 10:25.040
Dann guckt es in seinen State rein und sieht, aha, ich habe vorher diese und diese VMs aufgesetzt.

10:25.040 --> 10:27.040
Das sind also diese VMs mit diesen Inputs.

10:27.040 --> 10:29.040
Die internen IDs und sowas.

10:29.040 --> 10:31.040
Die muss ich jetzt auch wieder löschen.

10:31.040 --> 10:35.040
Und wenn jemand von Hand sich einloggt und dann in der Cloud an den VMs rumspielt.

10:35.040 --> 10:37.040
Und hier Terraform wieder ausführt.

10:37.040 --> 10:39.040
Dann merkt Terraform, dass da einer was von Hand geändert hat.

10:39.040 --> 10:41.040
Und bietet das an, das wieder rückgängig zu machen.

10:41.040 --> 10:45.040
Also, es ist ein sehr nützliches Tool.

10:45.040 --> 10:47.040
Es gibt noch mehr Tools in dieser Richtung.

10:47.040 --> 10:49.040
Terraform ist nicht das einzige, sollte man sagen.

10:49.040 --> 10:53.480
Auch sehr beliebt ist Pulumi.

10:53.480 --> 10:57.480
Das ist von den Features her ungefähr...

10:57.480 --> 11:00.480
...gleich mit Terraform.

11:00.480 --> 11:10.480
Allerdings, man benutzt das mit einer handelsüblichen normalen Programmiersprache.

11:10.480 --> 11:13.480
Also in Terraform definiert man seine Ressourcen so.

11:13.480 --> 11:15.480
In so einer komischen...

11:15.480 --> 11:17.480
Das ist kein YAML, das ist HCL nennt sich.

11:17.480 --> 11:19.480
Das sieht ein bisschen aus wie YAML vielleicht.

11:19.480 --> 11:24.480
In so einer extra Definitionssprache macht man das in Terraform.

11:24.480 --> 11:26.480
Und in Pulumi macht man das zum Beispiel...

11:26.480 --> 11:32.480
...in C-Sharp oder in Getting Started.

11:32.480 --> 11:36.040
Gucken wir uns mal sowas an.

11:36.040 --> 11:39.040
In Pulumi macht man das zum Beispiel...

11:39.040 --> 11:42.040
Es wäre natürlich sehr nice, wenn man ein schönes Beispiel hätte.

11:42.040 --> 11:53.400
Ja gut, genau hier sieht man es.

11:53.400 --> 11:55.400
In Pulumi würde man das gleiche dann machen.

11:55.400 --> 11:59.400
Bloß, dass man das zum Beispiel in JavaScript, Python, Go, C-Sharp...

11:59.400 --> 12:03.400
...oder auch in so einem YAML-Dialekt machen kann.

12:03.400 --> 12:05.400
Ist deutlich vielseitiger.

12:05.400 --> 12:07.400
Pulumi als Terraform.

12:07.400 --> 12:10.400
Dadurch, dass es eben ein Framework ist...

12:10.400 --> 12:14.400
...für so die handelsüblichen Programmiersprachen, die es gibt.

12:14.400 --> 12:16.400
Also wenn man ganz abgedrehte Sachen machen will...

12:16.400 --> 12:18.400
...ist das wahrscheinlich mit Pulumi einfacher.

12:18.400 --> 12:20.400
Dafür ist der Einstieg auch komplizierter.

12:20.400 --> 12:22.400
Terraform hat das auch erkannt.

12:22.400 --> 12:25.400
Wir machen jetzt mal so einen Rundum-Überblick.

12:25.400 --> 12:27.400
Terraform hat das auch erkannt.

12:27.400 --> 12:30.400
Und hat CDKTF ins Leben gerufen.

12:30.400 --> 12:32.400
Das ist Terraform.

12:32.400 --> 12:33.400
Allerdings nicht mehr...

12:33.400 --> 12:36.400
...in ihrem komischen eigenen Dialekt hier.

12:36.400 --> 12:38.400
In ihrem eigenen YAML-Dialekt.

12:38.400 --> 12:42.400
Sondern Terraform auch in handelsüblichen Programmiersprachen.

12:42.400 --> 12:45.400
Ist auch eine coole Geschichte.

12:45.400 --> 12:46.400
Habe ich selbst noch nie benutzt.

12:46.400 --> 12:48.400
Haben wir bei uns im To-Do drinne stehen.

12:48.400 --> 12:50.400
Werden wir irgendwann demnächst mal ausprobieren.

12:50.400 --> 12:54.400
Das Ganze, egal jetzt ob Terraform oder Pulumi...

12:54.400 --> 12:57.400
...nennt man Neudeutsch Info.

12:57.400 --> 13:00.400
Wobei Neudeutsch ist vielleicht ein bisschen verkehrt.

13:00.400 --> 13:02.400
Wenn man hip sein will, ja.

13:03.400 --> 13:05.400
Also auch auf Neuenglisch...

13:05.400 --> 13:08.400
...nennt man das Ganze Infrastructure as Code.

13:08.400 --> 13:09.400
Warum?

13:09.400 --> 13:10.400
Man sieht es ja hier schon.

13:10.400 --> 13:12.400
Man beschreibt nur noch...

13:12.400 --> 13:14.400
...was in der Cloud angelegt werden soll.

13:14.400 --> 13:16.400
Zum Beispiel so ein Netzwerk hier.

13:16.400 --> 13:18.400
Mit dieser IP-Range.

13:18.400 --> 13:20.400
Und Terraform übersetzt das dann...

13:20.400 --> 13:22.400
...in die passenden Cloud-Ressourcen.

13:22.400 --> 13:24.400
Man muss die Cloud-Ressourcen nicht selbst anlegen.

13:24.400 --> 13:26.400
Also ich könnte auch zum Beispiel...

13:26.400 --> 13:28.400
...hier bei Google in das Web-Interface gehen.

13:28.400 --> 13:31.400
Und in Netzwerke.

13:31.400 --> 13:32.400
Und dann sagen...

13:33.400 --> 13:38.760
...create network.

13:38.760 --> 13:39.760
Könnte ich auch machen.

13:39.760 --> 13:41.760
Ich könnte es aber auch Terraform machen lassen.

13:41.760 --> 13:43.760
Das heißt, dementsprechend...

13:43.760 --> 13:45.760
...Infrastructure as Code.

13:45.760 --> 13:47.760
Man beschreibt halt, was man haben will.

13:47.760 --> 13:49.760
In Source-Code-Dateien.

13:49.760 --> 13:50.760
Und Terraform...

13:50.760 --> 13:52.760
...applied das dann, das nennen die auch so...

13:52.760 --> 13:54.760
...auf die jeweilige Cloud-Umgebung.

13:54.760 --> 13:55.760
Man könnte das auch für Azure machen.

13:55.760 --> 13:56.760
Oder für DigitalOcean.

13:56.760 --> 13:58.760
Oder für AWS oder sowas.

13:58.760 --> 14:00.760
Wobei man auch sagen muss...

14:00.760 --> 14:02.760
...Terraform...

14:02.760 --> 14:04.760
...ist keine Abstraktionsschicht...

14:04.760 --> 14:06.760
...zwischen den Clouds.

14:06.760 --> 14:08.760
Also man definiert...

14:08.760 --> 14:10.760
...in Terraform jetzt nicht...

14:10.760 --> 14:12.760
...ein Netzwerk oder eine VM...

14:12.760 --> 14:14.760
...oder ein Kubernetes-Cluster...

14:14.760 --> 14:16.760
...jedes Mal gleich, egal ob für Azure...

14:16.760 --> 14:18.760
...oder für Google.

14:18.760 --> 14:20.760
Man muss schon die Cloud-spezifischen Sachen...

14:20.760 --> 14:22.760
...machen, nur dass man es halt in Terraform...

14:22.760 --> 14:24.760
...reproduzierbar machen kann und State-Tracking dabei hat.

14:24.760 --> 14:26.760
Dann sollte man noch eine Sache...

14:26.760 --> 14:28.760
...erwähnen. Wie gesagt, letztendlich...

14:28.760 --> 14:30.760
...unter der Haube ist es eigentlich ziemlich wurscht...

14:30.760 --> 14:32.760
...was man verwendet. Ob es jetzt Terraform ist...

14:32.760 --> 14:34.760
...oder Pulumi ist.

14:34.760 --> 14:36.760
Oder hier dieses neue Terraform...

14:36.760 --> 14:38.760
...mit in Programmiersprachen verwendet.

14:38.760 --> 14:40.760
Wichtig ist, dass das Team damit klarkommt...

14:40.760 --> 14:42.760
...wofür man das benutzt...

14:42.760 --> 14:44.760
...beziehungsweise in dem man ist...

14:44.760 --> 14:46.760
...oder für die man das erstellt.

14:46.760 --> 14:48.760
Anwendungsentwickler selbst mögen wahrscheinlich...

14:48.760 --> 14:50.760
...ein bisschen lieber Pulumi.

14:50.760 --> 14:52.760
Wohingegen die klassischen Admin-Teams...

14:52.760 --> 14:54.760
...wahrscheinlich eher die...

14:54.760 --> 14:56.760
...Terraform-Geschichte mögen.

14:56.760 --> 14:58.760
Man muss sagen...

14:58.760 --> 15:00.760
...Terraform ist das deutlich verbreitetere Tool...

15:00.760 --> 15:02.760
...versus Pulumi.

15:02.760 --> 15:04.760
Also Terraform ist viel, viel verbreiteter.

15:04.760 --> 15:06.760
Terraform ist quasi so der...

15:06.760 --> 15:08.760
...wie nennt man das so schön...

15:08.760 --> 15:10.760
...der Industriestandard, falls es da sowas...

15:10.760 --> 15:12.760
...gibt. Also Terraform ist das...

15:12.760 --> 15:14.760
...bekanntere und das verbreitetere...

15:14.760 --> 15:16.760
...von beiden Tools. Und wenn ihr Jobs sucht...

15:16.760 --> 15:18.760
...ist Terraform-Knowledge...

15:18.760 --> 15:20.760
...häufiger...

15:20.760 --> 15:22.760
...gerne gesehen als Pulumi-Knowledge.

15:22.760 --> 15:24.760
Wobei man halt auch sagen muss...

15:24.760 --> 15:26.760
...wenn man Pulumi kann, kommt man relativ schnell...

15:26.760 --> 15:30.520
...in Terraform rein und umgedreht.

15:30.520 --> 15:32.520
Genau, soviel zum Thema Infrastructure as Code.

15:32.520 --> 15:34.520
Jetzt mal zu der eigentlichen Frage...

15:34.520 --> 15:36.520
...wie es mit Ansible aussieht.

15:36.520 --> 15:38.520
Terraform und Ansible sind zwei...

15:38.520 --> 15:42.600
...unterschiedliche Tools. Und zwar...

15:42.600 --> 15:44.600
...Ansible...

15:44.600 --> 15:46.600
...ist ein Tool um Server...

15:46.600 --> 15:48.600
...zu konfigurieren und Terraform...

15:48.600 --> 15:50.600
...ist ein Tool um Infrastruktur...

15:50.600 --> 15:52.600
...anzulegen. Kann man sich quasi...

15:52.600 --> 15:54.600
...so vorstellen, mit Terraform...

15:54.600 --> 15:56.600
...erzeuge ich meine Cloud-Ressourcen...

15:56.600 --> 15:58.600
...unter anderem auch VMs...

15:58.600 --> 16:00.600
...und mit Ansible konfiguriere ich...

16:00.600 --> 16:02.600
...die VMs dann, wenn es notwendig ist.

16:02.600 --> 16:04.600
Der Trend geht ja dahin, dass...

16:04.600 --> 16:06.600
...Cloud-Ressourcen möglichst...

16:06.600 --> 16:08.600
...konfigurationsfrei sein sollten...

16:08.600 --> 16:10.600
...möglichst immutable sein sollen...

16:10.600 --> 16:12.600
...was natürlich Schwachsinn ist in der Realität...

16:12.600 --> 16:14.600
...tritt das auch nicht ein...

16:14.600 --> 16:16.600
...aber so...

16:16.600 --> 16:18.600
...geht zumindest der Trend hin...

16:18.600 --> 16:20.600
...was ja auch sinnvoll ist.

16:20.600 --> 16:22.600
Also wenn man jetzt beispielsweise 20...

16:22.600 --> 16:24.600
...virtuelle Maschinen in der Cloud erzeugen will...

16:24.600 --> 16:26.600
...dann würde man das mit Terraform erzeugen...

16:26.600 --> 16:28.600
...und wenn die noch etwas...

16:28.600 --> 16:30.600
...spezielle, kompliziertere Konfigurationen...

16:30.600 --> 16:32.600
...brauchen, dann würde ich das mit...

16:32.600 --> 16:34.600
...Terraform konfigurieren...

16:34.600 --> 16:36.600
...mit Ansible konfigurieren...

16:36.600 --> 16:38.600
...nicht mit Terraform, mit Terraform provisionieren...

16:38.600 --> 16:40.600
...mit Ansible konfigurieren...

16:40.600 --> 16:42.600
...die Tools haben...

16:42.600 --> 16:44.600
...gewisse Überschneidungen, man kann...

16:44.600 --> 16:46.600
...teilweise Cloud-Infrastruktur auch...

16:46.600 --> 16:48.600
...mit Ansible anlegen, man kann teilweise...

16:48.600 --> 16:50.600
...ein bisschen so mit Inline Bash Scripts und sowas...

16:50.600 --> 16:52.600
...auch mit Terraform dann...

16:52.600 --> 16:54.600
...Sachen konfigurieren...

16:54.600 --> 16:56.600
...sagen wir mal so 10-20%...

16:56.600 --> 16:58.600
...überschneiden sich vielleicht...

16:58.600 --> 17:00.600
...aber grundsätzlich sind das eigentlich schon...

17:00.600 --> 17:02.600
...ziemlich unterschiedliche Tools...

17:02.600 --> 17:04.600
...Terraform ist zum Anlegen, zum Provisionieren...

17:04.600 --> 17:06.600
...und Ansible ist zum Konfigurieren...

17:06.600 --> 17:08.600
...so, das ist so der grundlegende Unterschied...

17:08.600 --> 17:10.600
...das heißt, wenn man...

17:10.600 --> 17:12.600
...Cloud-Infrastruktur mit Terraform anlegt...

17:12.600 --> 17:14.600
...ist sie noch nicht unbedingt in dem Zustand, wie man...

17:14.600 --> 17:16.600
...das haben will, zum Beispiel auf VMs und da...

17:16.600 --> 17:18.600
...wenn man es braucht, kommt dann sowas wie...

17:18.600 --> 17:20.600
...Ansible ins Spiel, also beides...

17:20.600 --> 17:22.600
...sehr nützliche Tools und auch...

17:22.600 --> 17:24.600
...sowohl Terraform als auch Ansible...

17:24.600 --> 17:26.600
...recht gefragt...

17:26.600 --> 17:28.600
...wenn man sich mal so...

17:28.600 --> 17:30.600
...ja so...

17:30.600 --> 17:32.600
...Skill-Anforderungen anguckt...

17:32.600 --> 17:34.600
...die Arbeitnehmer...

17:34.600 --> 17:36.600
...die Arbeitgeber aktuell suchen...

17:36.600 --> 17:38.600
...ist sowohl...

17:38.600 --> 17:40.600
...Ansible als auch Terraform ganz gut dabei...

17:40.600 --> 17:42.600
...Polumi, was Infrastructure as Code...

17:42.600 --> 17:44.600
...angeht, ein bisschen weniger, wobei ich...

17:44.600 --> 17:46.600
...persönlich, wenn ich für mich privat...

17:46.600 --> 17:48.600
...machen würde, ja, ich persönlich mag...

17:48.600 --> 17:50.600
...Polumi mehr als Terraform...

17:50.600 --> 17:52.600
...also Geschmackssache und CDKTF...

17:52.600 --> 17:54.600
...hab ich ausprobiert...

17:54.600 --> 17:56.600
...soviel mal zur ganz schnellen...

17:56.600 --> 17:58.600
...Übersicht, was Infrastructure as Code angeht...

17:58.600 --> 18:00.600
...mag jetzt vielleicht ein bisschen abstrakt sein...

18:00.600 --> 18:02.600
...wir gucken uns das gleich an...

18:02.600 --> 18:04.600
...ich erzähle euch noch was dazu...

18:04.600 --> 18:06.600
...ein Tool will ich aber jetzt...

18:06.600 --> 18:08.600
...an der Stelle auch noch erwähnen...

18:08.600 --> 18:10.600
...wenn wir gerade dabei sind...

18:10.600 --> 18:12.600
...und zwar ist das Crossplane...

18:12.600 --> 18:14.600
...das ist gerade im Kubernetes...

18:14.600 --> 18:16.600
...aber da lasse ich mich jetzt nicht...

18:16.600 --> 18:18.600
...großartig drüber aus...

18:18.600 --> 18:20.600
...gerade im Kubernetes-Umfeld sehe ich da...

18:20.600 --> 18:22.600
...in sowas in der Richtung die Zukunft...

18:22.600 --> 18:28.790
...also sprich...

18:28.790 --> 18:30.790
...Crossplane ist auch ein Tool...

18:30.790 --> 18:32.790
...nur mal ganz zwei Sätze dazu, weil ich den Ansatz...

18:32.790 --> 18:34.790
...wirklich sehr, sehr nice finde und ich hoffe...

18:34.790 --> 18:36.790
...dass ich damit auch mal so...

18:36.790 --> 18:38.790
...im Kubernetes-Umfeld was machen kann...

18:38.790 --> 18:40.790
...wenn man...

18:40.790 --> 18:42.790
...ehe plant...

18:42.790 --> 18:44.790
...seine Sachen auf dem Kubernetes-Cluster zu deployen...

18:44.790 --> 18:46.790
...dann kann man ja auch theoretisch...

18:46.790 --> 18:48.790
...die Konfiguration anstatt über Terraform...

18:48.790 --> 18:50.790
...auch...

18:50.790 --> 18:52.790
...in Kubernetes-Config erstellen...

18:52.790 --> 18:54.790
...also brauche ich keine Terraform-Files...

18:54.790 --> 18:56.790
...und keine Kubernetes-Yammels, sondern ich kann für alles...

18:56.790 --> 18:58.790
...Kubernetes-Yammels machen...

18:58.790 --> 19:02.550
...und Crossplane bietet...

19:02.550 --> 19:04.550
...dafür die Möglichkeit zum Beispiel...

19:04.550 --> 19:06.550
...nur mal so jetzt...

19:06.550 --> 19:08.550
...was man damit Cooles machen kann...

19:08.550 --> 19:10.550
...dann kann man auch...

19:10.550 --> 19:12.550
...eine Anwendung haben, die ich auf dem Kubernetes-Cluster...

19:12.550 --> 19:14.550
...deployen will, die allerdings...

19:14.550 --> 19:16.550
...nicht rein aus Kubernetes-Ressourcen...

19:16.550 --> 19:18.550
...besteht, zum Beispiel...

19:18.550 --> 19:20.550
...ich habe ein Kubernetes-Deployment...

19:20.550 --> 19:22.550
...was im Prinzip ein Container-Image ist mit der Anwendung drin...

19:22.550 --> 19:24.550
...das braucht aber zusätzlich noch...

19:24.550 --> 19:26.550
...eine Datenbank, die nicht im Kubernetes-Cluster...

19:26.550 --> 19:28.550
...laufen soll, zum Beispiel...

19:28.550 --> 19:30.550
...hier Cloud SQL bei Google...

19:30.550 --> 19:32.550
...ne, das ist die neue...

19:32.550 --> 19:34.550
...hier Cloud SQL bei...

19:34.550 --> 19:36.550
...Google Cloud...

19:36.550 --> 19:38.550
...wie verbinde ich das Ganze jetzt zusammen?

19:38.550 --> 19:40.550
Das ist so mit der klassischen...

19:40.550 --> 19:42.550
...Infrastructure-as-Code...

19:42.550 --> 19:44.550
...nicht so ohne weiteres möglich, du brauchst...

19:44.550 --> 19:46.550
...einmal ein Kubernetes-YAML-Deployment...

19:46.550 --> 19:48.550
...und du brauchst irgendwas, was deine...

19:48.550 --> 19:50.550
...Cloud SQL-Datenbank...

19:50.550 --> 19:52.550
...provisioniert...

19:52.550 --> 19:54.550
...das heißt, du müsstest dann quasi...

19:54.550 --> 19:56.550
...Terraform und...

19:56.550 --> 19:58.550
...dein Kubernetes-Zeug irgendwie verbinden...

19:58.550 --> 20:00.550
...geht, ja Flux...

20:00.550 --> 20:02.550
...kann das mit einem...

20:02.550 --> 20:04.550
...Terraform-Controller, aber...

20:04.550 --> 20:06.550
...es ist nicht so schön, das ist das wo Crossplane...

20:06.550 --> 20:08.550
...dazukommt, Crossplane...

20:08.550 --> 20:10.550
...ist anders, du kannst quasi dann ein Deployment...

20:10.550 --> 20:12.550
...konfigurieren für Kubernetes...

20:12.550 --> 20:14.550
...und gleichzeitig allerdings auch im gleichen...

20:14.550 --> 20:16.550
...Config-File oder so im gleichen Kontext...

20:16.550 --> 20:18.550
...auch noch sagen, ich möchte bei Google...

20:18.550 --> 20:20.550
...eine Datenbank provisionieren...

20:20.550 --> 20:22.550
...ich sehe da persönlich die Zukunft...

20:22.550 --> 20:24.550
...im Kubernetes-Umfeld eindeutig...

20:24.550 --> 20:26.550
...bei Crossplane, weniger...

20:26.550 --> 20:28.550
...bei Terraform, Terraform wird immer noch...

20:28.550 --> 20:30.550
...wichtig bleiben, allein schon...

20:30.550 --> 20:32.550
...zum initialen Aufbau und ganzer...

20:32.550 --> 20:34.550
...Cloud-Umgebung, das wird man ja mit Crossplane...

20:34.550 --> 20:36.550
...auch nicht machen...

20:36.550 --> 20:38.550
...aber gerade das Handling von Anwendungen...

20:38.550 --> 20:40.550
...und Deployments in Kubernetes...

20:40.550 --> 20:42.550
...was externe Ressourcen zusätzlich...

20:42.550 --> 20:44.550
...braucht, da sehe ich die Zukunft bei Crossplane...

20:44.550 --> 20:46.550
...ich habe mir das in...

20:46.550 --> 20:48.550
...letzten paar Wochen über schon ein bisschen angeguckt...

20:48.550 --> 20:50.550
...noch nie großartig was mitgemacht, aber...

20:50.550 --> 20:52.550
...das sieht wirklich gut aus, hat noch ein paar...

20:52.550 --> 20:54.550
...Nachteile versus Terraform, aber ich...

20:54.550 --> 20:56.550
...persönlich denke, da geht die Zukunft...

20:56.550 --> 20:58.550
...hin, was...

20:58.550 --> 21:00.550
...Kubernetes-Deployments angeht, aber das...

21:00.550 --> 21:02.550
...gucken wir uns heute nicht an, heute machen wir den Klassiker...

21:02.550 --> 21:04.550
...Terraform...

21:04.550 --> 21:06.550
...den man auch auf absehbare Zeit...

21:06.550 --> 21:08.550
...immer noch brauchen wird, also Crossplane...

21:08.550 --> 21:10.550
...wird nie Terraform ersetzen...

21:10.550 --> 21:12.550
...sondern eher im Kubernetes-Umfeld ein bisschen...

21:12.550 --> 21:14.550
...die Sachen übernehmen, aber irgendwann...

21:14.550 --> 21:16.550
...muss man ja mal initial den Cluster hinstellen, ja...

21:16.550 --> 21:18.550
...ohne Kubernetes-Cluster kannst du ja auch...

21:18.550 --> 21:20.550
...darauf nichts ausführen, und dafür wird es nach wie vor...

21:20.550 --> 21:22.550
...für immer auf absehbare Zeit...

21:22.550 --> 21:24.550
...zumindest wahrscheinlich Terraform oder Pulumi...

21:24.550 --> 21:26.550
...oder sowas in der Richtung bleiben, das heißt...

21:26.550 --> 21:28.550
...Terraform ist ein sehr wichtiger Skill...

21:28.550 --> 21:30.550
...wenn man im...

21:30.550 --> 21:32.550
...ja, so im...

21:32.550 --> 21:34.550
...DevOps-Bereich, im...

21:34.550 --> 21:36.550
...Server-Administrationsbereich, aber auch im...

21:36.550 --> 21:38.550
...Entwicklungsbereich unterwegs ist...

21:38.550 --> 21:40.550
...Terraform ist aktuell überall...

21:40.550 --> 21:45.360
...so...

21:45.360 --> 21:47.360
...soviel zur Einleitung...

21:47.360 --> 21:52.150
...hab ich mir grad ein bisschen aus den Fingern...

21:52.150 --> 21:54.150
...gesaugt, aber Chat, ich glaub man hat alles soweit...

21:54.150 --> 21:56.150
...verstanden, oder? Ich verstehe, dass viele den Stream...

21:56.150 --> 21:58.150
...auf der Arbeit nebenbei laufen haben und nicht soviel...

21:58.150 --> 22:00.150
...schreiben können, Chat...

22:00.150 --> 22:02.150
...ich glaub, konnte man halbwegs...

22:02.150 --> 22:04.150
...ne, auf absehbare Zeit...

22:04.150 --> 22:06.150
...ja, für immer ist nix...

22:06.150 --> 22:08.150
...gerade in der IT, aber...

22:08.150 --> 22:10.150
...Terraform hat sich so etabliert...

22:10.150 --> 22:12.150
...dass ich nicht sehe, dass irgendwas...

22:12.150 --> 22:14.150
...großartig Terraform in nächster Zeit...

22:14.150 --> 22:16.150
...den Platz 1...

22:16.150 --> 22:18.150
...schreitig machen wird, dahinter ist ein bisschen Pulumi...

22:18.150 --> 22:22.100
...und...

22:22.100 --> 22:24.100
...alles andere spielt eigentlich kaum...

22:24.100 --> 22:31.760
...ne größere Rolle.

22:31.760 --> 22:33.760
Kann ein Terraform mit Ansible zusammenarbeiten?

22:33.760 --> 22:35.760
Ja, kannst du.

22:35.760 --> 22:37.760
Ja, kannst du machen.

22:37.760 --> 22:39.760
Okay, also die Host-Datei...

22:39.760 --> 22:41.760
...die kannst du auch mit irgendeinem Inline Bash-Script...

22:41.760 --> 22:43.760
...in Terraform...

22:43.760 --> 22:45.760
...erstellen.

22:45.760 --> 22:47.760
Also ich würd nicht...

22:47.760 --> 22:49.760
...ich würd nicht Ansible...

22:49.760 --> 22:51.760
...zusätzlich noch an Start bringen, nur um...

22:51.760 --> 22:53.760
...die Host-Datei zu erstellen...

22:53.760 --> 22:55.760
...auf VMs.

22:55.760 --> 22:57.760
Aber du kannst selbstverständlich...

22:57.760 --> 22:59.760
...Terraform und Ansible zusammen ausführen...

22:59.760 --> 23:01.760
...gibt's ja mehrere Möglichkeiten...

23:01.760 --> 23:03.760
...wie du das machen kannst.

23:03.760 --> 23:05.760
Also es gibt ja bei Ansible, dass du das...

23:05.760 --> 23:07.760
...pullen kannst...

23:07.760 --> 23:09.760
...aus dem Git-Repo...

23:09.760 --> 23:11.760
...oder aber auch von nem zentralen Ding...

23:11.760 --> 23:13.760
...quasi pushen kannst auf die Kiste...

23:13.760 --> 23:15.760
...zum Ausführen. Du könntest quasi zum Beispiel...

23:15.760 --> 23:17.760
...am Ende von einer...

23:17.760 --> 23:19.760
...von einem Terraform...

23:19.760 --> 23:21.760
...Run, der dir VMs anlegt...

23:21.760 --> 23:23.760
...könntest du in dem Cloud-Init-File...

23:23.760 --> 23:25.760
...anstoßen, dass Ansible ausgeführt wird.

23:25.760 --> 23:27.760
Und das geht. Das ist sogar sehr sinnvoll...

23:27.760 --> 23:29.760
...zusammen zu verbinden, wenn man komplexere...

23:29.760 --> 23:31.760
...Konfigurationsaufgaben für VMs hat.

23:31.760 --> 23:33.760
Also wenn du wirklich öfters...

23:33.760 --> 23:35.760
...VM anlegst mit Terraform, die dann...

23:35.760 --> 23:37.760
...auch irgendwie ein bisschen komplizierter...

23:37.760 --> 23:39.760
...eingerichtet werden müssen, als einfach nur...

23:39.760 --> 23:41.760
...Standard-Image drauf...

23:41.760 --> 23:43.760
...dann ist das sogar wirklich sinnvoll...

23:43.760 --> 23:45.760
...Terraform und Ansible zu kombinieren.

23:45.760 --> 23:47.760
Man kann Ansible...

23:47.760 --> 23:49.760
...die Kiste konfigurieren, Terraform hat's ja vorher...

23:49.760 --> 23:54.290
...angelegt.

23:54.290 --> 23:56.290
Kann ich mit Terraform standardisierte AD-Gruppen anlegen?

23:56.290 --> 23:58.290
Habe ich noch nie gemacht, weil ich mit Windows nichts zu tun habe...

23:58.290 --> 24:00.290
...aber ich bin mir ziemlich sicher, dass das geht.

24:00.290 --> 24:05.650
Original scharf, dankeschön...

24:05.650 --> 24:07.650
...für den Sub.

24:07.650 --> 24:11.030
So, so sieht's aus.

24:11.030 --> 24:13.030
Und ich zeige euch heute, wie man das ordentlich macht...

24:13.030 --> 24:15.030
...in Terraform für Google Cloud.

24:15.030 --> 24:20.000
Wir werden heute folgendes machen.

24:20.000 --> 24:22.000
Moment, ich muss mal kurz was im Chat noch beantworten.

24:22.000 --> 24:24.000
Wie kommuniziert Terraform mit Ansible?

24:24.000 --> 24:26.000
Gar nicht.

24:26.000 --> 24:28.000
Also, achso, ja, okay...

24:28.000 --> 24:30.000
...jetzt weiß ich, was du machen willst.

24:30.000 --> 24:32.000
Wie kannst du das Ansible Inventory...

24:32.000 --> 24:34.000
...erstellen mit Terraform?

24:34.000 --> 24:36.000
Ja, da musst du dir...

24:36.000 --> 24:38.000
...das würde ich gar nicht so sehr machen, also...

24:38.000 --> 24:40.000
...es gibt keine direkte...

24:40.000 --> 24:42.000
...also, es gibt vielleicht mittlerweile irgendwelche Plugins oder so...

24:42.000 --> 24:44.000
...keine Ahnung.

24:44.000 --> 24:46.000
Also es gibt jetzt standardmäßig keine direkte Kommunikation...

24:46.000 --> 24:48.000
...zwischen Terraform und Ansible.

24:48.000 --> 24:50.000
Es gibt verschiedene Sachen, wie du das machen kannst.

24:50.000 --> 24:52.000
Du willst ja quasi dein...

24:52.000 --> 24:54.000
...Ansible Inventory...

24:54.000 --> 24:56.000
...nicht das Haus, weil du willst dein...

24:56.000 --> 24:58.000
...Ansible Inventory mit Terraform erstellen.

24:58.000 --> 25:00.000
Ja gut, so direkt...

25:00.000 --> 25:02.000
...gibt es da glaube ich nichts eingebautes.

25:02.000 --> 25:04.000
Was du machen kannst in Terraform, das...

25:04.000 --> 25:06.000
...gucken wir uns vielleicht auch an, nachher...

25:06.000 --> 25:08.000
...du kannst Outputs definieren.

25:08.000 --> 25:10.000
Das sind quasi Werte, die...

25:10.000 --> 25:12.000
...Terraform, nennen wir es mal, exportiert.

25:12.000 --> 25:14.000
Also zum Beispiel...

25:14.000 --> 25:16.000
...du legst eine VM an...

25:16.000 --> 25:18.000
...mit Terraform und dann kannst du als Output...

25:18.000 --> 25:20.000
...die IP und den Namen...

25:20.000 --> 25:22.000
...von dieser VM...

25:22.000 --> 25:24.000
...die sie bekommen haben nach dem Anlegen, mit Terraform...

25:24.000 --> 25:26.000
...wieder exportieren und das...

25:26.000 --> 25:28.000
...könnte dann in irgendeiner Art und Weise...

25:28.000 --> 25:30.000
...Ansible bei dir benutzen, um sich...

25:30.000 --> 25:32.000
...in der Inventory zu bauen, wenn man das so machen will.

25:32.000 --> 25:34.000
Schöner wäre die Variante...

25:34.000 --> 25:36.000
...allerdings...

25:36.000 --> 25:38.000
...wenn du das unabhängig voneinander machst...

25:38.000 --> 25:40.000
...weil du willst ja auch nicht unbedingt...

25:40.000 --> 25:42.000
...immer Terraform am Start haben, wenn du...

25:42.000 --> 25:44.000
...Sachen konfigurieren willst.

25:44.000 --> 25:46.000
Dann sind wir jetzt aber schon im...

25:46.000 --> 25:48.000
...Bereich ja quasi...

25:48.000 --> 25:50.000
...Discovery, Service Discovery, Inventory...

25:50.000 --> 25:52.000
...Discovery und...

25:52.000 --> 25:54.000
...Resource Management, dass du quasi irgendwo...

25:54.000 --> 25:56.000
...einen Key-Value-Store hast oder...

25:56.000 --> 25:58.000
...irgendwo was, wo das registriert wird...

25:58.000 --> 26:00.000
...initial, die Kisten, die du aufgebaut hast.

26:00.000 --> 26:02.000
Ja, oder...

26:02.000 --> 26:04.000
...aber die einfachere Variante...

26:04.000 --> 26:06.000
...ist, also es gibt zwei Varianten, die noch deutlich...

26:06.000 --> 26:08.000
...simpler sind. Du benutzt einfach...

26:08.000 --> 26:10.000
...das jeweilige Cloud...

26:10.000 --> 26:12.000
...Kommandozeilen-Tool von dem...

26:12.000 --> 26:14.000
...Cloud-Anbieter, was du verwendest.

26:14.000 --> 26:16.000
Ja, du kannst ja zum Beispiel relativ easy...

26:16.000 --> 26:18.000
...hier mit GCP...

26:18.000 --> 26:20.000
...GCP Compute...

26:20.000 --> 26:22.000
...äh, nee, was ist es?

26:22.000 --> 26:24.000
Ach, weiß ich gar nicht.

26:24.000 --> 26:26.000
Ähm...

26:26.000 --> 26:28.000
...kannst du dir deine VMs anzeigen lassen.

26:28.000 --> 26:32.980
Ist das Addresses List?

26:32.980 --> 26:34.980
Ich hab noch das falsche Projekt ausgewählt.

26:34.980 --> 26:36.980
Ha, muss man gleich mal ändern.

26:36.980 --> 26:38.980
Also kannst du ja auch mit dem jeweiligen Cloud-Tool...

26:38.980 --> 26:40.980
...des Anbieters, was du ausgewählt hast, auflisten...

26:40.980 --> 26:42.980
...was dann dort Terraform für VMs...

26:42.980 --> 26:44.980
...erzeugt hat.

26:44.980 --> 26:46.980
Ist besser, da musst du die zwei Sachen nicht miteinander...

26:46.980 --> 26:48.980
...verdrahten.

26:48.980 --> 26:50.980
Ja, oder...

26:50.980 --> 26:52.980
...die allerbeste...

26:52.980 --> 26:54.980
...Lösung, wenn möglich, bei dir...

26:54.980 --> 26:56.980
...ist, du lässt einfach...

26:56.980 --> 26:58.980
...nach einem Terraform Run...

26:58.980 --> 27:00.980
...automatisch die neu erstellte VM...

27:00.980 --> 27:02.980
... äh, Ansible ausführen.

27:02.980 --> 27:04.980
Du kannst ja in Terraform...

27:04.980 --> 27:06.980
...Inline-Script angeben, so eine...

27:06.980 --> 27:08.980
...Zeile, gibst du einfach Ansible Run...

27:08.980 --> 27:10.980
...oder Ansible Playbook...

27:10.980 --> 27:12.980
...dann kannst du ein Git-Repo angeben...

27:12.980 --> 27:14.980
...das Ansible automatisch applied wird...

27:14.980 --> 27:16.980
...nach jedem Starten einer neuen VM.

27:16.980 --> 27:18.980
Das ist auch möglich. Musst du halt überlegen...

27:18.980 --> 27:25.170
...was bei dir am besten passt.

27:25.170 --> 27:39.240
So, äh, ich muss mal das...

27:39.240 --> 27:41.240
...Default-Projekt festlegen, kurz bevor...

27:41.240 --> 27:43.240
...wir hier anfangen.

27:43.240 --> 27:45.240
So, kommen wir jetzt aber mal zu Terraform und Google Cloud.

27:45.240 --> 27:47.240
Ich hab ein Projekt angelegt schon...

27:47.240 --> 27:49.240
...Cackle Stream 1...

27:49.240 --> 27:51.240
...äh...

27:51.240 --> 27:53.240
...what the hell?

27:53.240 --> 27:55.240
Was hab ich hier reinkopiert?

27:55.240 --> 27:57.240
Ach, die Projektnummer...

27:57.240 --> 27:59.240
...ich hab das falsche kopiert, lol.

27:59.240 --> 28:10.100
Ja, aber das sind meistens...

28:10.100 --> 28:12.100
...Provisioners, die sollte man wirklich nur als...

28:12.100 --> 28:14.100
...letzte Instanz wählen.

28:14.100 --> 28:16.100
Ich weiß nicht, auf was sich das...

28:16.100 --> 28:18.100
...bezieht jetzt gerade.

28:18.100 --> 28:20.100
Du magst Recht haben, aber ich weiß nicht, was du meinst.

28:22.100 --> 28:25.410
So, deine Meinung...

28:25.410 --> 28:27.410
...ich hab damit noch nichts gemacht.

28:27.410 --> 28:29.410
Ich weiß, dass das irgendwie so ein...

28:29.410 --> 28:31.410
...bisschen containerzentriertes...

28:31.410 --> 28:33.410
...OS ist, so wo alles...

28:33.410 --> 28:35.410
...abgeschottet in Containern läuft.

28:35.410 --> 28:37.410
Glaube zumindest, dass es das war.

28:37.410 --> 28:39.410
Oder bringe ich das jetzt durcheinander?

28:39.410 --> 28:41.410
Weil so, dass das irgendwas ist mit eigenem Package Manager...

28:41.410 --> 28:43.410
...dafür alles containerisiert, hab ich noch nicht ausprobiert.

28:43.410 --> 28:45.410
Klingt Security-technisch...

28:45.410 --> 28:47.410
...nach einer sehr nicen Sache...

28:47.410 --> 28:49.410
...und auch um Dinger rückstandslos zu entfernen.

28:49.410 --> 28:51.410
Ich hab es noch nicht ausprobiert.

28:51.410 --> 28:53.410
Keine Ahnung, kann ich nichts weiter zu sagen.

28:53.410 --> 29:00.310
Ach, ist das nicht das mit den...

29:00.310 --> 29:05.160
...was war denn das mit den Containern?

29:05.160 --> 29:07.160
Ja stimmt, das könntest du machen lassen.

29:07.160 --> 29:09.160
Wobei die schönere...

29:09.160 --> 29:11.160
...jetzt weiß ich, was er meint.

29:11.160 --> 29:13.160
Die schönere Variante ist ja irgendein Cloud-Init-File...

29:13.160 --> 29:15.160
...zu nehmen, was das macht.

29:15.160 --> 29:17.160
Ich würde auch nicht Terraform unbedingt...

29:17.160 --> 29:19.160
...warten lassen, sondern...

29:19.160 --> 29:21.160
...irgendein Cloud-Init reinhauen...

29:21.160 --> 29:23.160
...und wo beim Start dann am Ende Ansible ausgeführt wird.

29:23.160 --> 29:27.490
Kann ja Terraform...

29:27.490 --> 29:29.490
...ich würde gar nicht Terraform wissen lassen...

29:29.490 --> 29:31.490
...dass Ansible noch läuft.

29:31.490 --> 29:33.490
Also sprich...

29:33.490 --> 29:35.490
...wozu sollte...

29:35.490 --> 29:37.490
...das Terraform wissen? Terraform ist fertig...

29:37.490 --> 29:39.490
...sobald die VM über die API angelegt ist...

29:39.490 --> 29:41.490
...und running ist.

29:41.490 --> 29:43.490
Danach kann Ansible machen, was es will.

29:43.490 --> 29:45.490
Also ich würde gar nicht so sehr...

29:45.490 --> 29:47.490
...Kommunikation zwischen Ansible und Terraform probieren.

29:47.490 --> 29:49.490
Denn es sind ja zwei unterschiedliche Tools...

29:49.490 --> 29:51.490
...die auch nicht zwangsläufig von einer abhängig sind.

29:51.490 --> 29:53.490
So, also...

29:53.490 --> 29:55.490
...fangen wir mal an. Ich habe ein Projekt...

29:55.490 --> 29:57.490
...angelegt in der Google Cloud...

29:57.490 --> 29:59.490
...mit dem sprechenden Namen...

29:59.490 --> 30:01.490
...KekkelStream1.

30:01.490 --> 30:03.490
Wenn ihr ein Projekt in der Google Cloud anlegt...

30:03.490 --> 30:05.490
...zeige ich euch...

30:05.490 --> 30:07.490
...grad mal ein, weiß nicht ob ich es Trick nennen soll...

30:07.490 --> 30:09.490
...aber ich nenne es mal Trick.

30:09.490 --> 30:11.490
Normalerweise ist es so...

30:11.490 --> 30:13.490
...wenn ihr hier irgendwas anlegt...

30:13.490 --> 30:15.490
...so blubb, ihr könnt das Ding...

30:15.490 --> 30:17.490
...Projektname blubb...

30:17.490 --> 30:19.490
...und dann erstellt Google für euch...

30:19.490 --> 30:21.490
...eine Projekt-ID, die weltweit...

30:21.490 --> 30:24.870
...einzigartig ist.

30:24.870 --> 30:26.870
Allerdings muss ich sagen...

30:26.870 --> 30:28.870
...ist das Handling...

30:28.870 --> 30:30.870
...von diesen IDs...

30:30.870 --> 30:32.870
...ja...

30:32.870 --> 30:34.870
...vielleicht...

30:34.870 --> 30:36.870
...bisschen kryptisch, wenn man die an manchen Stellen...

30:36.870 --> 30:38.870
...eintragen muss.

30:38.870 --> 30:40.870
Wenn man die Möglichkeit hat...

30:40.870 --> 30:42.870
...hier oben was einzutragen, was unique ist...

30:42.870 --> 30:44.870
...dann seht ihr...

30:44.870 --> 30:46.870
...dann generiert das keine Projekt-ID.

30:46.870 --> 30:48.870
Also man muss sich überlegen...

30:48.870 --> 30:50.870
...was einem wichtiger ist...

30:50.870 --> 30:52.870
...ein cooler...

30:52.870 --> 30:54.870
...kurzer Projektname...

30:54.870 --> 30:56.870
...und dafür aber eine...

30:56.870 --> 30:58.870
...nicht zu merkende ID...

30:58.870 --> 31:00.870
...oder vielleicht ein etwas längerer Projektname...

31:00.870 --> 31:02.870
...aber der weltweit...

31:02.870 --> 31:04.870
...einzigartig ist...

31:04.870 --> 31:06.870
...und ihr könnt den überall verwenden...

31:06.870 --> 31:08.870
...ich find's zum Beispiel ganz cool...

31:08.870 --> 31:10.870
...wenn man dann sowas macht...

31:10.870 --> 31:12.870
...man kann ja zum Beispiel sowas machen...

31:12.870 --> 31:14.870
...Wubblors Stream 1...

31:14.870 --> 31:16.870
...und sowas in der Richtung...

31:16.870 --> 31:18.870
...da ist relativ sicher davon auszugehen...

31:18.870 --> 31:20.870
...dass das weltweit unique ist...

31:20.870 --> 31:22.870
...ich weiß, es gibt jetzt bestimmt irgendwelche Leute...

31:22.870 --> 31:24.870
...die mir auf den Sack gehen wollen...

31:24.870 --> 31:26.870
...und Wubblors Stream 1, 2, 3, 4 und so schon bei sich registrieren...

31:26.870 --> 31:28.870
...einfach nur, dass es angelegt ist...

31:28.870 --> 31:30.870
...ich kenn euch...

31:30.870 --> 31:32.870
...aber...

31:32.870 --> 31:34.870
...normalerweise finde ich das die schönere Variante...

31:34.870 --> 31:36.870
...weil dann ist es irgendwo...

31:36.870 --> 31:38.870
...sprechend und ohne...

31:38.870 --> 31:40.870
...kryptische ID hinten dran...

31:40.870 --> 31:42.870
...natürlich...

31:42.870 --> 31:44.870
...könnt ihr die Dinger dann nicht sowas nennen wie...

31:44.870 --> 31:46.870
...default oder so...

31:46.870 --> 31:48.870
...das ist logischerweise schon belegt...

31:48.870 --> 31:50.870
...gibt...

31:50.870 --> 31:52.870
...mehrere Leute auf der Welt...

31:52.870 --> 31:54.870
...die schon den Projektnamen...

31:54.870 --> 31:56.870
...default verwendet haben...

31:56.870 --> 31:58.870
...also...

31:58.870 --> 32:00.870
...unser Ziel heute ist folgendes...

32:00.870 --> 32:02.870
...wir...

32:02.870 --> 32:04.870
...ich mach nochmal von Anfang an...

32:04.870 --> 32:06.870
...was wir gestern gemacht haben...

32:06.870 --> 32:08.870
...ist ja nahezu nichts...

32:08.870 --> 32:10.870
...ich zeig's einfach nochmal...

32:10.870 --> 32:12.870
...also was wir heute machen ist folgendes...

32:12.870 --> 32:14.870
...wir richten Google Cloud in Terraform ein...

32:14.870 --> 32:16.870
...wir legen Netzwerke an...

32:16.870 --> 32:18.870
...wir legen...

32:18.870 --> 32:20.870
...einen Router an...

32:20.870 --> 32:22.870
...wir legen NAT-Regeln an...

32:22.870 --> 32:24.870
...also NAT-Regeln an, dass wir ins Internet kommen...

32:24.870 --> 32:26.870
...wir legen...

32:26.870 --> 32:28.870
...Firewall-Regeln an, dass wir per SSH...

32:28.870 --> 32:30.870
...drauf zugreifen können...

32:30.870 --> 32:36.610
...was machen wir noch...

32:36.610 --> 32:38.610
...wir legen eine...

32:38.610 --> 32:40.610
...Jump-VM an...

32:40.610 --> 32:42.610
...dass wir uns quasi von daheim...

32:42.610 --> 32:44.610
...in unsere private Google Cloud connecten können...

32:44.610 --> 32:46.610
...wir legen...

32:46.610 --> 32:48.610
...einen...

32:48.610 --> 32:50.610
...Kubernetes-Account an...

32:50.610 --> 32:52.610
...wir legen ein Kubernetes-Cluster an...

32:52.610 --> 32:54.610
...und ein Kubernetes-Node-Pool an...

32:54.610 --> 32:56.610
...allerdings...

32:56.610 --> 32:58.610
...nicht public...

32:58.610 --> 33:00.610
...das ist alles in einem privaten Netz...

33:00.610 --> 33:02.610
...also wir werden das Netz hier verwenden...

33:02.610 --> 33:04.610
...das ist alles in einem privaten Netz...

33:04.610 --> 33:06.610
...das heißt man kommt vom Internet aus nicht dran...

33:06.610 --> 33:08.610
...ist glaube ich sogar ein bisschen billiger...

33:08.610 --> 33:10.610
...weil man keine public IPs braucht...

33:10.610 --> 33:12.610
...kostet ja alles Geld...

33:12.610 --> 33:14.610
...ich gehe mal ganz stark davon aus, dass es nicht umsonst ist...

33:14.610 --> 33:16.610
...ich weiß es aus dem Kopf nicht, wie es in Google Cloud ist...

33:16.610 --> 33:18.610
...aber höchstwahrscheinlich sind public IPs nicht umsonst...

33:18.610 --> 33:20.610
...das heißt...

33:20.610 --> 33:22.610
...das ist alles nicht aus dem Internet...

33:22.610 --> 33:24.610
...erreichbar, das heißt man muss über so einen...

33:24.610 --> 33:26.610
...Zwischenschritt...

33:26.610 --> 33:28.610
...dass man zu seinem Cluster hinkommt...

33:28.610 --> 33:30.610
...was nicht bedeutet...

33:30.610 --> 33:32.610
...dass der Cluster nicht von außen...

33:32.610 --> 33:34.610
...erreichbar gemacht werden kann...

33:34.610 --> 33:36.610
...für Services, die im Internet...

33:36.610 --> 33:38.610
...angeboten werden sollen...

33:38.610 --> 33:40.610
...aber der Cluster selbst...

33:40.610 --> 33:42.610
...also die Management Interface von dem Cluster...

33:42.610 --> 33:44.610
...und von den VMs als...

33:44.610 --> 33:46.610
...die sind nicht aus dem Internet erreichbar...

33:46.610 --> 33:48.610
...Services, die auf dem Cluster laufen...

33:48.610 --> 33:50.610
...irgendwelche Webseiten oder Webservices...

33:50.610 --> 33:52.610
...die können aus dem Internet per Ingress erreichbar sein...

33:52.610 --> 33:54.610
...aber ich denke mal, das werden wir heute nicht machen...

33:54.610 --> 33:56.610
...so weit werden wir nicht kommen...

33:56.610 --> 33:58.610
...wie gesagt, ich sage es nochmal...

33:58.610 --> 34:00.610
...ich habe mir das nicht alles selbst ausgedacht...

34:00.610 --> 34:02.610
...ich habe gestern ein richtig gutes...

34:02.610 --> 34:06.880
...Tutorial Video geguckt...

34:06.880 --> 34:08.880
...von ihm hier...

34:08.880 --> 34:10.880
...sonst hätte ich das auch nicht so schnell gecheckt...

34:10.880 --> 34:12.880
...wie man die Sachen gut in Terraform macht...

34:12.880 --> 34:14.880
...aber wie gesagt, ich habe ein paar Sachen angepasst...

34:14.880 --> 34:16.880
...und ein paar Dinge fehlen aus meiner Sicht auch...

34:16.880 --> 34:18.880
...die man machen sollte...

34:18.880 --> 34:22.580
...gut, auf geht's...

34:22.580 --> 34:24.580
...Windows, was Windows, wo Windows...

34:24.580 --> 34:26.580
...ach, du meinst hier Windows...

34:26.580 --> 34:28.580
...ja, ich habe ein Setup aus...

34:28.580 --> 34:30.580
...Linux Kiste hier und Windows Kiste hier...

34:30.580 --> 34:32.580
...also ich habe für...

34:32.580 --> 34:34.580
...Videos schneiden...

34:34.580 --> 34:36.580
...Videos auf YouTube hochladen, Streaming...

34:36.580 --> 34:38.580
...Sachen spielen...

34:38.580 --> 34:40.580
...und für alles andere habe ich meine Linux Kiste am Start...

34:40.580 --> 34:42.580
...oder ist das ein gutes KDE Stream...

34:42.580 --> 34:44.580
...nö, das ist Windows...

34:44.580 --> 34:46.580
...das ist Windows und das ist Linux...

34:46.580 --> 34:48.580
...i3...Arch by the way...

34:48.580 --> 34:50.580
...sollte ich vielleicht öfters mal erwähnen...

34:50.580 --> 34:52.580
...weil die coolen Leute, wenn sie Arch verwenden...

34:52.580 --> 34:54.580
...erwähnen das auch öfters...

34:54.580 --> 34:56.580
...ich glaube...

34:56.580 --> 34:58.580
...noch cooler wäre man nur mit Gentoo...

34:58.580 --> 35:00.580
...oder Gentoo...

35:00.580 --> 35:02.580
...wie das manche...

35:02.580 --> 35:04.580
...aussprechen...

35:04.580 --> 35:06.580
...gut, also fangen wir nochmal ganz...

35:06.580 --> 35:08.580
...von Anfang an an...

35:08.580 --> 35:10.580
...ich werde mir mal ein paar Sachen...

35:10.580 --> 35:12.580
...Leute...

35:12.580 --> 35:14.580
...wir müssen noch eine Sache von gestern fixen...

35:14.580 --> 35:16.580
...sonst muss ich ein neues Projekt anlegen...

35:16.580 --> 35:18.580
...und dann fangen wir nochmal von vorne an...

35:18.580 --> 35:20.580
...hier an der Stelle...

35:20.580 --> 35:22.580
...ich mach das jetzt einfach mal...

35:22.580 --> 35:24.580
...dann erklär ich...

35:24.580 --> 35:26.580
...dann erklär ich...

35:26.580 --> 35:28.580
...dann erklär ich was es macht...

35:28.580 --> 35:30.580
...wenn wir soweit sind...

35:30.580 --> 35:32.580
...Terraform apply...

35:32.580 --> 35:34.580
...so mehr haben wir noch nicht...

35:36.580 --> 35:38.580
...und dann machen wir das nochmal rückgängig...

35:38.580 --> 35:40.580
...und dann fangen wir von vorne an...

35:40.580 --> 35:42.580
...so ja, yes, wunderbar...

35:42.580 --> 35:44.580
...ok, gut...

35:44.580 --> 35:46.580
...Terraform destroy...

35:46.580 --> 35:48.580
...so man hat jetzt vielleicht...

35:48.580 --> 35:50.580
...ohne dass ich das jetzt im Detail erklärt habe...

35:50.580 --> 35:52.580
...was passiert ist...

35:52.580 --> 35:54.580
...man sieht jetzt zum Beispiel schon mal was richtig cooles...

35:54.580 --> 35:56.580
...Terraform...

35:56.580 --> 35:58.580
...kann Ressourcen anlegen...

35:58.580 --> 36:00.580
...und kann, also mit Terraform apply...

36:00.580 --> 36:02.580
...sachen anlegen...

36:02.580 --> 36:04.580
...ich hoffe ich hab mein Projekt jetzt nicht kaputt gemacht...

36:04.580 --> 36:06.580
...weil ich das vorhin letztes mal vergessen hab...

36:06.580 --> 36:08.580
...ne ok...

36:08.580 --> 36:10.580
...er scheint zu funktionieren...

36:10.580 --> 36:12.580
...Terraform merkt sich welche Ressourcen das angelegt hat...

36:12.580 --> 36:14.580
...und kann die Dinger danach auch wieder löschen...

36:14.580 --> 36:16.580
...das ist sehr praktisch, also wenn ich...

36:16.580 --> 36:18.580
...ich kann quasi was aufbauen...

36:18.580 --> 36:22.150
...und rückstandslos wieder entfernen...

36:22.150 --> 36:24.150
...also eigentlich eine ganz coole Geschichte...

36:24.150 --> 36:26.150
...wenn man zum Beispiel in einem Projekt was aufbaut...

36:26.150 --> 36:28.150
...wo man nicht danach, wenn man fertig ist...

36:28.150 --> 36:30.150
...das ganze Projekt in der Cloud wieder löscht...

36:30.150 --> 36:32.150
...aber ich zeige es euch...

36:32.150 --> 36:34.150
...ich zeige es euch im Detail...

36:34.150 --> 36:36.150
...so ich hoffe das klappt jetzt...

36:36.150 --> 36:38.150
...Network delete...

36:38.150 --> 36:40.150
...er sollte alles löschen...

36:40.150 --> 36:42.150
...so und ich kopiere mir jetzt noch zwei Scripts...

36:42.150 --> 36:44.150
...die ich mir gebastelt habe rüber...

36:44.150 --> 36:46.150
...das macht es nämlich ein bisschen einfacher...

36:46.150 --> 36:48.150
...das erste ist ein Initscript...

36:48.150 --> 36:53.190
...legen wir hier mal rein...

36:53.190 --> 36:55.190
...ah nein es hat funktioniert...

36:55.190 --> 36:58.500
...ähm...

36:58.500 --> 37:00.500
...geke Terraform...

37:00.500 --> 37:02.500
...so ich lösche mal kurz...

37:02.500 --> 37:04.500
...meinen ganzen Terraform State...

37:04.500 --> 37:06.500
...so als hätten wir noch nichts gemacht...

37:06.500 --> 37:08.500
...Terraform Logs und alles...

37:08.500 --> 37:10.500
...so dann machen wir noch ein extra Verzeichnis...

37:10.500 --> 37:12.500
...nennen wir mal Terraform...

37:12.500 --> 37:14.500
...und alles was es hier gibt...

37:14.500 --> 37:16.500
...reinschieben...

37:16.500 --> 37:18.500
...weil wir müssen es ein bisschen besser strukturieren...

37:18.500 --> 37:20.500
...denn hier kommt ja später noch ein Kubernetes...

37:20.500 --> 37:22.500
...ordner hin...

37:22.500 --> 37:24.500
...und alles mögliche...

37:24.500 --> 37:26.500
...wir machen jetzt mal hier ein Script hin...

37:26.500 --> 37:29.880
...das nennen wir init...

37:29.880 --> 37:31.880
...und ich kopiere mal was rein...

37:31.880 --> 37:33.880
...und dann führen wir das mal aus...

37:33.880 --> 37:35.880
...das macht es nämlich ein bisschen einfacher...

37:35.880 --> 37:37.880
...so also...

37:37.880 --> 37:39.880
...ich kann euch nicht sagen ob das der Weisheitsletzter Schluss ist...

37:39.880 --> 37:41.880
...das so zu machen...

37:41.880 --> 37:43.880
...so wenn ich ein neues Google Cloud Projekt...

37:43.880 --> 37:45.880
...anfange...

37:45.880 --> 37:47.880
...bereite ich das ein bisschen darauf vor...

37:47.880 --> 37:49.880
...dass ich mit Terraform meine ganzen Ressourcen...

37:49.880 --> 37:51.880
...anlegen kann...so und zwar...

37:51.880 --> 37:53.880
...ich suche mir einmal die aktuelle Projekt-ID...

37:53.880 --> 37:55.880
...raus...dann lege ich ein...

37:55.880 --> 37:57.880
...Storage Bucket an...

37:57.880 --> 37:59.880
...zeige ich euch gleich wofür das notwendig ist...

37:59.880 --> 38:01.880
...und ich lösche das Default...

38:01.880 --> 38:03.880
...die Default Firewall Regeln und das Default Netzwerk...

38:03.880 --> 38:05.880
...ans Trinken erinnern...sehr gut...

38:05.880 --> 38:09.760
...exzellent...schau dir mir...

38:09.760 --> 38:11.760
...Terra Mix an...

38:11.760 --> 38:13.760
...Terranigma kenn ich...

38:13.760 --> 38:15.760
...achso für...

38:15.760 --> 38:17.760
...ja es gibt ja ein paar Terraform Rapper...

38:17.760 --> 38:19.760
...ich bin immer noch für...

38:19.760 --> 38:21.760
...Raw Terraform...

38:21.760 --> 38:23.760
...so dann führen wir das jetzt mal...

38:23.760 --> 38:25.760
...aus...

38:25.760 --> 38:27.760
...achso das alte Storage...

38:27.760 --> 38:29.760
...Bucket können wir auch noch löschen...

38:29.760 --> 38:31.760
...Cloud...

38:31.760 --> 38:33.760
...Storage...

38:33.760 --> 38:35.760
...warum ist das so fett...

38:35.760 --> 38:42.020
...Alter...

38:42.020 --> 38:44.020
...das da...

38:44.020 --> 38:46.020
...ja...

38:46.020 --> 38:48.020
...so löschen wir mal das Storage Bucket...

38:48.020 --> 38:50.020
...und dann fangen wir an...

38:50.020 --> 38:52.020
...Delete...

38:52.020 --> 38:54.020
...zack...

38:54.020 --> 38:57.650
...okay führen wir das In-Hit Script aus...

38:57.650 --> 38:59.650
...wie gesagt ich mach nachher noch ein Github Repo...

38:59.650 --> 39:01.650
...wo das alles drin ist...

39:01.650 --> 39:03.650
...auf löschen...

39:03.650 --> 39:05.650
...please...

39:05.650 --> 39:10.310
...yes...

39:10.310 --> 39:12.310
...so das dauert jetzt kurz...

39:12.310 --> 39:14.310
...und dann können wir uns schon ein bisschen um die...

39:14.310 --> 39:16.310
...Terraform Sachen kümmern...

39:16.310 --> 39:18.310
...dieses In-Hit Script habe ich mir...

39:18.310 --> 39:20.310
...einfach nur gemacht damit es schneller geht...

39:20.310 --> 39:22.310
...aus einem Default Projekt...

39:22.310 --> 39:24.310
...das so zu bauen das ich Terraform ausführen kann...

39:24.310 --> 39:26.310
...also das erste was man für...

39:26.310 --> 39:28.310
...Terraform konfigurieren muss ist folgendes...

39:28.310 --> 39:30.310
...man muss angeben...

39:30.310 --> 39:32.310
...welche Provider man benutzen will...

39:32.310 --> 39:34.310
...wir benutzen Google...

39:34.310 --> 39:36.310
...das heißt wir benutzen den Terraform Provider für Google...

39:36.310 --> 39:38.310
...wer hätte das gedacht...

39:38.310 --> 39:40.310
...dann muss man noch einstellen welches Projekt...

39:40.310 --> 39:42.310
...man...

39:42.310 --> 39:44.310
...befüllen will...

39:44.310 --> 39:46.310
...und ihr seht ja hier Kekkel Stream 1 ist mein Projekt...

39:46.310 --> 39:48.310
...und dann noch in welcher Region wir das ganze...

39:48.310 --> 39:50.310
...machen wollen...

39:50.310 --> 39:52.310
...wir wollen das in der Region...

39:52.310 --> 39:54.310
...Europe West 3 machen...

39:54.310 --> 39:56.310
...Europe West 3 ist Frankfurt am Main...

39:56.310 --> 39:58.310
...wenn man nicht weiß...

39:58.310 --> 40:00.310
...was es ist...

40:00.310 --> 40:02.310
...Europe West 3...

40:02.310 --> 40:04.310
...man kann hier nachgucken bei Google...

40:04.310 --> 40:06.310
...z.B. hier...

40:06.310 --> 40:08.310
...Europe West 3...

40:08.310 --> 40:10.310
...da sieht man...

40:10.310 --> 40:12.310
...Europe West 3 ABC...

40:12.310 --> 40:14.310
...das sind die Zonen btw...

40:14.310 --> 40:16.310
...Europe West 3 ist Frankfurt Germany...

40:16.310 --> 40:18.310
...aktuell zumindest...

40:18.310 --> 40:20.310
...das hier ist die Region...

40:20.310 --> 40:22.310
...und das hier unten drunter...

40:22.310 --> 40:24.310
...dieses minus ABC...

40:24.310 --> 40:26.310
...das sind Zonen...

40:26.310 --> 40:28.310
...und manchmal muss man bei Google Cloud...

40:28.310 --> 40:30.310
...entscheiden...

40:30.310 --> 40:32.310
...möchte man Sachen in einer Region...

40:32.310 --> 40:34.310
...oder in einer Zone aufbauen...

40:34.310 --> 40:36.310
...wenn man das in einer Region aufbaut...

40:36.310 --> 40:38.310
...dann werden manchmal...

40:38.310 --> 40:40.310
...z.B. wenn man Storage oder sowas anlegt...

40:40.310 --> 40:42.310
...dann wird das automatisch repliziert...

40:42.310 --> 40:44.310
...oder die Kubernetes...

40:44.310 --> 40:47.750
...Node...

40:47.750 --> 40:52.020
...wie heißt...

40:52.020 --> 40:54.020
...man repliziert automatisch in...

40:54.020 --> 40:56.020
...alle Zonen einer Region...

40:56.020 --> 40:58.020
...das kostet mehr...

40:58.020 --> 41:00.020
...ist nice...

41:00.020 --> 41:02.020
...will man aber oftmals gar nicht haben...

41:02.020 --> 41:04.020
...d.h. man sollte sich immer überlegen...

41:04.020 --> 41:06.020
...möchte man was regional...

41:06.020 --> 41:08.020
...oder wirklich nur was in einer Zone aufbauen...

41:08.020 --> 41:10.020
...und in einer Zone es aufzubauen...

41:10.020 --> 41:12.020
...ist meistens billiger...

41:12.020 --> 41:14.020
...weil regional bedeutet in der Regel...

41:14.020 --> 41:16.020
...in allen 3 Zonen einer Region...

41:16.020 --> 41:18.020
...ja und es gibt noch bei...

41:18.020 --> 41:20.020
...Storage auch die Möglichkeit...

41:20.020 --> 41:22.020
...so das ist eine ganz simple...

41:22.020 --> 41:26.040
...Config was ich eigentlich...

41:26.040 --> 41:28.040
...wofür ich Terraform...

41:28.040 --> 41:30.040
...in dem Fall hier eigentlich verwenden will...

41:30.040 --> 41:32.040
...ich will das für...

41:32.040 --> 41:34.040
...ich soll euch vielleicht mal das...

41:34.040 --> 41:36.040
...Terraform-Config-File zeigen...

41:36.040 --> 41:38.040
...ich will das ganze für die Projekt-ID...

41:38.040 --> 41:40.040
...KekkelStream1 verwenden...

41:40.040 --> 41:42.040
...Region ist Europe-West3...

41:42.040 --> 41:44.040
...und die Zone wenn ich Zonen verwenden...

41:44.040 --> 41:46.040
...möchte dann möchte ich...

41:46.040 --> 41:48.040
...die Unterregion...

41:48.040 --> 41:50.040
...-a verwenden...

41:50.040 --> 41:52.040
...und die Unterregion in dem Fall ist halt...

41:52.040 --> 41:54.040
...die Zone, so nennt sich das bei Google Cloud...

41:54.040 --> 41:56.040
...und...

41:56.040 --> 41:58.040
...wenn man hier so ein File anlegt...

41:58.040 --> 42:00.040
...Terraform.tf war es...

42:00.040 --> 42:02.040
...dann zieht Terraform hier den Inhalt...

42:02.040 --> 42:04.040
...dieser Variablen aus diesem...

42:04.040 --> 42:06.040
...Variabelfile, das ist ganz nützlich...

42:06.040 --> 42:08.040
...es kann ja durchaus sein, dass ich die gleiche...

42:08.040 --> 42:10.040
...Terraform-Config...

42:10.040 --> 42:12.040
...es kann ja durchaus sein, dass ich...

42:12.040 --> 42:14.040
...die gleiche Terraform-Config...

42:14.040 --> 42:16.040
...für mehrere...

42:16.040 --> 42:18.040
...Projekte...

42:18.040 --> 42:20.040
...benutzen möchte...

42:20.040 --> 42:22.040
...dann könnte es sein, dass ich zum Beispiel sowas habe wie...

42:22.040 --> 42:24.040
...CackleStreamDev...

42:24.040 --> 42:26.040
...CackleStreamLive oder sowas...

42:26.040 --> 42:28.040
...und dass ich das darauf dann applyen will...

42:28.040 --> 42:30.040
...also ist das ganz sinnvoll...

42:30.040 --> 42:32.040
...so die grundlegenden Sachen so wie Region...

42:32.040 --> 42:34.040
...Zone und vor allem...

42:34.040 --> 42:36.040
...Projekt-ID...

42:36.040 --> 42:38.040
...variabel zu machen...

42:38.040 --> 42:40.040
...man könnte sich das übrigens auch komplett sparen...

42:40.040 --> 42:42.040
...man könnte zum Beispiel hier auch...

42:42.040 --> 42:44.040
...sagen Default...

42:44.040 --> 42:46.040
...und dann könnte ich hier mein Projekt eintragen...

42:46.040 --> 42:48.040
...was ich aber ein bisschen blöd finde...

42:48.040 --> 42:50.040
...weil es könnte ja sein, dass ich was anderes...

42:50.040 --> 42:52.040
...verwenden will und aus versehen es dann in diesem Projekt...

42:52.040 --> 42:54.040
...ausführe, obwohl ich das vielleicht gar nicht will...

42:54.040 --> 42:56.040
...also ist...

42:56.040 --> 42:58.040
...so finde ich es auf jeden Fall schöner...

42:58.040 --> 43:00.040
...bis jetzt passiert noch nichts großartig...

43:00.040 --> 43:02.040
...wir haben jetzt nur den Google Provider konfiguriert...

43:02.040 --> 43:04.040
...und paar Basic-Variablen...

43:04.040 --> 43:06.040
...angelegt, die wir in Zukunft brauchen...

43:06.040 --> 43:08.040
...der nächste Schritt ist das hier...

43:08.040 --> 43:12.950
...ja, da kann man sich jetzt überschreiten...

43:12.950 --> 43:14.950
...macht man das in der extra...

43:14.950 --> 43:16.950
...Datei oder macht man das hier beim...

43:16.950 --> 43:18.950
...Provider drinnen...

43:18.950 --> 43:20.950
...was das macht ist...

43:20.950 --> 43:22.950
...die Voraussetzung dafür, dass wir...

43:22.950 --> 43:24.950
...auch was anderes machen können, nämlich...

43:24.950 --> 43:26.950
...das aktiviert in meinem Projekt erstmal...

43:26.950 --> 43:28.950
...bestimmte Services...

43:28.950 --> 43:30.950
...weil wenn ich jetzt hier reingehe...

43:30.950 --> 43:32.950
...wobei ich habe es gestern schon...

43:32.950 --> 43:34.950
...aktiviert, ich kann es euch nicht zeigen...

43:34.950 --> 43:36.950
...normalerweise, wenn ich jetzt hier reingehe...

43:36.950 --> 43:38.950
...in die Kubernetes Engine oder...

43:38.950 --> 43:40.950
...in die Compute Engine...

43:40.950 --> 43:42.950
...Compute Engine ist bei Google Cloud quasi alles...

43:42.950 --> 43:44.950
...was mit virtuellen Maschinen zu tun hat...

43:44.950 --> 43:46.950
...dann würde jetzt normalerweise hier was aufploppen...

43:46.950 --> 43:48.950
...Achtung, dieser Service ist nicht aktiviert...

43:48.950 --> 43:50.950
...sie müssen diesen Service erst aktivieren...

43:50.950 --> 43:52.950
...so und nachdem ich...

43:52.950 --> 43:54.950
...das ich eben...

43:54.950 --> 43:56.950
...den Compute Engine verwenden will...

43:56.950 --> 43:58.950
...kann ich hier sagen, Compute Engine...

43:58.950 --> 44:00.950
...Service...

44:00.950 --> 44:02.950
...aktivieren...

44:02.950 --> 44:04.950
...und das hier ist wichtig an der Stelle...

44:04.950 --> 44:08.520
...ich weiß nicht ob es ein Bug ist...

44:08.520 --> 44:10.520
...oder ob es...

44:10.520 --> 44:14.660
...by Design ist...

44:14.660 --> 44:16.660
...man kann über...

44:16.660 --> 44:18.660
...Terraform Services die man...

44:18.660 --> 44:20.660
...aktiviert hat für das Projekt nicht wieder...

44:20.660 --> 44:22.660
...deaktivieren...

44:22.660 --> 44:24.660
...ich bin mir auch gar nicht sicher...

44:24.660 --> 44:26.660
...ob man Services wieder deaktivieren kann...

44:26.660 --> 44:28.660
...mit Web Interface...

44:28.660 --> 44:30.660
...glaub ich habe ich es noch nie gemacht...

44:30.660 --> 44:32.660
...geht wahrscheinlich auch irgendwo...

44:32.660 --> 44:34.660
...also wenn ich jetzt beispielsweise für dieses Projekt...

44:34.660 --> 44:36.660
...Compute Engine komplett wieder deaktivieren will...

44:36.660 --> 44:38.660
...dann wüsste ich gar nicht wo ich es mache...

44:38.660 --> 44:40.660
...und wenn man das hier einstellt...

44:40.660 --> 44:42.660
...und ich mein...

44:42.660 --> 44:44.660
...Terraform Projekt wieder entferne...

44:44.660 --> 44:46.660
...dann lässt es das ganze einfach enabled...

44:46.660 --> 44:48.660
...das ist quasi nur...

44:48.660 --> 44:50.660
...anschalt only...

44:50.660 --> 44:52.660
...ausschalten gibt es nicht mehr...

44:52.660 --> 44:54.660
...das ist bei Services wichtig...

44:54.660 --> 44:56.660
...weil ansonsten schmeißt...

44:56.660 --> 44:58.660
...Terraform irgendwelche Fehler...

44:58.660 --> 45:00.660
...also wenn ihr komische Fehler bekommt bei Terraform Destroy...

45:00.660 --> 45:02.660
...belegt euch vielleicht ob ihr bei...

45:02.660 --> 45:04.660
...Servicedefinition Disable on Destroy...

45:04.660 --> 45:06.660
...ausschalten müsst...

45:06.660 --> 45:08.660
...das dient aber alles noch...

45:08.660 --> 45:10.660
...dazu das vorzubereiten für das was wir...

45:10.660 --> 45:12.660
...machen wollen als es noch gar nichts...

45:12.660 --> 45:14.660
...großartiges passiert...

45:14.660 --> 45:16.660
...der nächste Block...

45:16.660 --> 45:18.660
...ist wichtig...

45:18.660 --> 45:20.660
...wenn ihr Terraform nicht nur alleine verwenden wollt...

45:20.660 --> 45:22.660
...überlegt euch mal...

45:22.660 --> 45:24.660
...ihr verwendet Terraform im Team...

45:24.660 --> 45:26.660
...die Configs hier benutzen...

45:26.660 --> 45:28.660
...mehrere Leute gleichzeitig...

45:28.660 --> 45:30.660
...ich habe ja gesagt Terraform speichert...

45:30.660 --> 45:32.660
...sich was es gemacht hat...

45:32.660 --> 45:34.660
...standardmäßig...

45:34.660 --> 45:36.660
...speichert Terraform das Lokal...

45:36.660 --> 45:38.660
...bei euch im Verzeichnis...

45:38.660 --> 45:46.290
...was...

45:46.290 --> 45:48.290
...ich kack noob...

45:48.290 --> 45:50.290
...mein Initscript funktioniert ja noch gar nicht so...

45:50.290 --> 45:52.290
...ok...

45:52.290 --> 45:55.990
...warum eigentlich nicht...

45:55.990 --> 45:59.680
...achso weil ich das falsche Projekt eingetragen habe oder...

45:59.680 --> 46:01.680
...ja ich noob habe da dev...

46:01.680 --> 46:03.680
...eingetragen alter...

46:03.680 --> 46:05.680
...nicht dev...

46:05.680 --> 46:07.680
...naja egal...

46:07.680 --> 46:09.680
...und wenn man jetzt mit mehreren Leuten...

46:09.680 --> 46:11.680
...verwenden möchte...

46:11.680 --> 46:13.680
...dann ist der State...

46:13.680 --> 46:15.680
...den Terraform standardmäßig hier...

46:15.680 --> 46:17.680
...bei euch lokal im Dateiverzeichnis...

46:17.680 --> 46:19.680
...im Filesystem speichert...

46:19.680 --> 46:21.680
...wird dann zu einem Problem...

46:21.680 --> 46:23.680
...weil es könnte jetzt ja sein...

46:23.680 --> 46:25.680
...dass ich das gerade ausführe...

46:25.680 --> 46:27.680
...bei mir lokal und jemand anderes bei sich lokal...

46:27.680 --> 46:29.680
...ausführt...

46:29.680 --> 46:31.680
...dann haben wir zwei Terraform States die voneinander nichts wissen...

46:31.680 --> 46:33.680
...das muss...

46:33.680 --> 46:35.680
...über kurz oder lang zu Problemen führen...

46:35.680 --> 46:37.680
...weil Terraform merkt sich...

46:37.680 --> 46:39.680
...was es gemacht hat...

46:39.680 --> 46:41.680
...und versucht es immer rückgängig zu machen...

46:41.680 --> 46:43.680
...wenn jemand außerhalb von Terraform was dran gemacht hat...

46:43.680 --> 46:45.680
...und wenn jemand Terraform auf einem anderen Rechner...

46:45.680 --> 46:47.680
...laufen lässt...

46:47.680 --> 46:49.680
...und die beiden voneinander nichts wissen...

46:49.680 --> 46:51.680
...dann denken beide der andere hätte es ihm kaputt gemacht...

46:51.680 --> 46:53.680
...das heißt man muss sich überlegen...

46:53.680 --> 46:55.680
...wo man den Terraform...

46:55.680 --> 46:57.680
...wo man den Terraform State speichert...

46:57.680 --> 46:59.680
...und den Terraform State...

46:59.680 --> 47:01.680
...kann man zum Beispiel in einem Storage Bucket...

47:01.680 --> 47:03.680
...speichern in der Cloud...

47:03.680 --> 47:05.680
...auf dieses Bucket greifen dann alle Leute...

47:05.680 --> 47:07.680
...gleichermaßen zu...

47:07.680 --> 47:09.680
...und es gibt keinerlei so...

47:09.680 --> 47:11.680
...Synchronisationsprobleme und...

47:11.680 --> 47:13.680
...einer macht dem anderen den State kaputt...

47:13.680 --> 47:15.680
...das heißt da können mehrere Leute Terraform ausführen...

47:15.680 --> 47:17.680
...und...

47:17.680 --> 47:19.680
...es ist...

47:19.680 --> 47:21.680
...alles gut...

47:21.680 --> 47:25.250
...funktioniert...

47:25.250 --> 47:30.040
...ja macht das...

47:30.040 --> 47:32.040
...heute nicht arbeiten Max oder ist montags frei...

47:32.040 --> 47:34.040
...ich habe montags frei immer...

47:34.040 --> 47:37.480
...arbeiter habe ich montags frei...

47:37.480 --> 47:39.480
...so ich muss mal kurz hier in meine Buckets gehen...

47:39.480 --> 47:41.480
...ich habe glaube ich irgendwas erstellt...

47:41.480 --> 47:43.480
...was ich nicht erstellen wollte...

47:43.480 --> 47:48.000
...weil ich blöd rumeditiert habe...

47:48.000 --> 47:54.450
...ist doch alles da...

47:54.450 --> 47:58.020
...eigentlich alles gut...

47:58.020 --> 48:00.020
...warum ist mein Innenscript gefailt...

48:00.020 --> 48:02.020
...ah gut keine Ahnung...

48:02.020 --> 48:04.020
...ich führ es so nochmal aus...

48:04.020 --> 48:09.440
...nö geht doch alles...

48:09.440 --> 48:11.440
...alles gut...

48:11.440 --> 48:13.440
...also...

48:13.440 --> 48:15.440
...wie wird bei GCP der Stateload gemanagt oder passiert das auch...

48:15.440 --> 48:17.440
...ja...

48:17.440 --> 48:19.440
...ich habe ein Bucket...

48:19.440 --> 48:21.440
...wenn du das über Cloud Storage machst...

48:21.440 --> 48:23.440
...hast du überhaupt keine Probleme mehr...

48:23.440 --> 48:25.440
...wenn mehrere Leute...

48:25.440 --> 48:27.440
...das heißt...

48:27.440 --> 48:29.440
...überhaupt keine Probleme ist bei Terraform immer so ein Ding...

48:29.440 --> 48:31.440
...das kann immer irgendwie außer Sync geraten...

48:31.440 --> 48:33.440
...weil irgendwelche komischen Sachen passieren...

48:33.440 --> 48:35.440
...aber du solltest keine Probleme mehr haben...

48:35.440 --> 48:37.440
...wenn du den kompletten Terraform State...

48:37.440 --> 48:39.440
...in dem Bucket speicherst...

48:39.440 --> 48:41.440
...du musst das übrigens auch nicht...

48:41.440 --> 48:43.440
...hier zwangsläufig...

48:43.440 --> 48:48.680
...so machen wie ich das gemacht habe...

48:48.680 --> 48:50.680
...die unterstützen mehrere Backends...

48:50.680 --> 48:52.680
...also sie unterstützen alle...

48:52.680 --> 48:54.680
...großen Cloud Anbieter...

48:54.680 --> 48:56.680
...jeweils die...

48:56.680 --> 48:58.680
...das spezielle von denen...

48:58.680 --> 49:00.680
...aber auch S3...

49:00.680 --> 49:02.680
...da bin ich jetzt bescheuert wo ist das denn...

49:02.680 --> 49:04.680
...each Backend...

49:04.680 --> 49:06.680
...available Backends...

49:06.680 --> 49:08.680
...also die können natürlich...

49:08.680 --> 49:10.680
...die können Google Cloud...

49:10.680 --> 49:12.680
...die können natürlich auch Azure...

49:12.680 --> 49:14.680
...und die können auch S3...

49:14.680 --> 49:18.180
...du kannst es auch in Postgres speichern...

49:18.180 --> 49:20.180
...als Secret im Kubernetes Cluster...

49:20.180 --> 49:22.180
...webserver was auch immer...

49:22.180 --> 49:24.180
...oder auch in Console...

49:24.180 --> 49:26.180
...oder auch ganz ganz toll in der Alibaba Cloud...

49:26.180 --> 49:31.090
...ne du kannst...

49:31.090 --> 49:33.090
...du kannst bei AWS auch in einem S3 Bucket speichern...

49:33.090 --> 49:35.090
...wenn du willst...

49:35.090 --> 49:39.680
...du musst das nicht über DynamoDB machen...

49:39.680 --> 49:41.680
...kannst du auch...

49:41.680 --> 49:43.680
...ach Moment...

49:43.680 --> 49:45.680
...Sekunde ich habe nichts gesagt...

49:45.680 --> 49:50.400
...ich habe Mist erzählt...

49:50.400 --> 49:52.400
...this Backend also supports...

49:52.400 --> 49:54.400
...State Locking and Consistency Checking...

49:54.400 --> 50:03.440
...ok...

50:03.440 --> 50:05.440
...vielleicht habe ich dir auch Mist erzählt...

50:05.440 --> 50:07.440
...vielleicht habe ich dir auch Mist erzählt...

50:07.440 --> 50:09.440
...vielleicht habe ich dir auch Mist erzählt...

50:09.440 --> 50:11.440
...this Backend supports State Locking...

50:11.440 --> 50:13.440
...ne doch geht...

50:13.440 --> 50:15.440
...das geht alles über das Storage Bucket...

50:15.440 --> 50:17.440
...in dem Fall...

50:17.440 --> 50:19.440
...das funktioniert...

50:19.440 --> 50:21.440
...das kann man alles so machen...

50:21.440 --> 50:23.440
...wenn man mehrere Umgebungen hat...

50:23.440 --> 50:25.440
...dass man zum Beispiel DevInt...

50:25.440 --> 50:27.440
...oder was weiß ich...

50:27.440 --> 50:29.440
...DevLive...

50:29.440 --> 50:31.440
...oder was auch immer hat...

50:31.440 --> 50:33.440
...kann man hier noch Unterordner machen...

50:33.440 --> 50:35.440
...wenn man unterschiedlich speichern will...

50:35.440 --> 50:39.460
...ja...

50:39.460 --> 50:41.460
...muss man sich ein bisschen angucken...

50:41.460 --> 50:43.460
...was der jeweilige Cloud Anbieter unterstützt...

50:43.460 --> 50:45.460
...und jetzt können mehrere Leute...

50:45.460 --> 50:47.460
...parallel Terraform ausführen...

50:47.460 --> 50:49.460
...ohne das was kaputt geht...

50:49.460 --> 50:51.460
...so weit so gut...

50:51.460 --> 50:53.460
...es gibt eine Sache die man noch machen sollte...

50:53.460 --> 50:55.460
...die wir jetzt aber nicht gemacht haben...

50:55.460 --> 50:57.460
...man kann hier...

50:57.460 --> 50:59.460
...bei diesem Storage in der Google Cloud...

50:59.460 --> 51:01.460
...einstellen dass das eine History...

51:01.460 --> 51:03.460
...sich speichert...

51:03.460 --> 51:05.460
...in dem Fall der Fälle das irgend jemand Mist baut...

51:05.460 --> 51:07.460
...und was kaputt macht...

51:07.460 --> 51:09.460
...könnte man so den State wieder...

51:09.460 --> 51:11.460
...hat man quasi so ein automatisches...

51:11.460 --> 51:13.460
...7 Tage Backup vom Terraform State...

51:13.460 --> 51:15.460
...falls irgend jemand Mist eingetippt hat...

51:15.460 --> 51:17.460
...und ich möchte es einfach schnell wieder rückgängig machen...

51:17.460 --> 51:19.460
...machen wir jetzt an der Stelle nicht...

51:19.460 --> 51:21.460
...is Overkill brauchen wir nicht...

51:21.460 --> 51:23.460
...so und wenn wir das alles eingerichtet haben...

51:23.460 --> 51:25.460
...können wir anfangen unser Google Cloud Projekt...

51:25.460 --> 51:27.460
...anzulegen...

51:27.460 --> 51:29.460
...das war alles nur Zeremonie jetzt...

51:29.460 --> 51:31.460
...zur Vorbereitung...

51:31.460 --> 51:33.460
...und wir fangen jetzt an...

51:33.460 --> 51:35.460
...also wie gesagt...

51:35.460 --> 51:37.460
...wir legen Netzwerke an...

51:37.460 --> 51:39.460
...Routen an, Firewall Regeln an...

51:39.460 --> 51:41.460
...Jump VM in die Cloud an...

51:41.460 --> 51:43.460
...paar Accounts an, Kubernetes Cluster...

51:43.460 --> 51:45.460
...und Kubernetes Cluster Node Pool...

51:45.460 --> 51:47.460
...wir fangen allerdings ganz simpel an...

51:47.460 --> 51:49.460
...und führen es mal aus...

51:49.460 --> 51:51.460
...und dann versuche ich mal so ein bisschen grob zu erklären...

51:51.460 --> 51:53.460
...was Terraform eigentlich macht...

51:53.460 --> 51:55.460
...und warum es nützlich ist...

51:55.460 --> 51:57.460
...und was das coole ist...

51:57.460 --> 51:59.460
...wenn man seine Infrastruktur mit Terraform...

51:59.460 --> 52:01.460
...verwaltet...

52:01.460 --> 52:03.460
...damit wir unsere ganze Cloud Infrastruktur...

52:03.460 --> 52:05.460
...zu anlegen ist das aller erste was wir brauchen...

52:05.460 --> 52:07.460
...ein Netzwerk...

52:07.460 --> 52:09.460
...und ich bin mal so frei und benenne das um...

52:09.460 --> 52:11.460
...und zwar ein Network...

52:11.460 --> 52:13.460
...und wir fassen das ein bisschen zusammen...

52:13.460 --> 52:15.460
...wir fassen nämlich Subnetz...

52:15.460 --> 52:17.460
...und Netz Network zusammen...

52:17.460 --> 52:19.460
...hab ich mir überlegt...

52:19.460 --> 52:21.460
...ist glaube ich einfacher zu verstehen...

52:21.460 --> 52:23.460
...was letztendlich passiert...

52:23.460 --> 52:25.460
...also...

52:25.460 --> 52:27.460
...hier sagt man...

52:27.460 --> 52:29.460
...mittels Terraform...

52:29.460 --> 52:31.460
...an Google Cloud...

52:31.460 --> 52:33.460
...wollen wir ein Netzwerk erstellen...

52:33.460 --> 52:35.460
...mit der IP Range...

52:35.460 --> 52:37.460
...oder mit der...

52:37.460 --> 52:39.460
...SIDR...

52:39.460 --> 52:41.460
...SIDR...

52:41.460 --> 52:43.460
...das ist Classless Inter Domain Routing...

52:43.460 --> 52:45.460
...kein Mensch...

52:45.460 --> 52:47.460
...spricht das jemals so aus...

52:47.460 --> 52:49.460
...wie auch immer...

52:49.460 --> 52:51.460
...man könnte es einfach IP Range nennen...

52:51.460 --> 52:53.460
...aber in dem Fall ist es IP Sidr Range...

52:53.460 --> 52:55.460
...es gibt eigentlich...

52:55.460 --> 52:57.460
...heutzutage so gut wie...

52:57.460 --> 52:59.460
...warum sollte man andere Sachen benutzen...

52:59.460 --> 53:03.730
...ich weiß es nicht...

53:03.730 --> 53:05.730
...das ist die Range...

53:05.730 --> 53:07.730
...die wir für unsere IPs benutzen...

53:07.730 --> 53:09.730
...das heißt...

53:09.730 --> 53:11.730
...10.0.0.0 slash 24...

53:11.730 --> 53:13.730
...wir können mal gucken...

53:13.730 --> 53:15.730
...ich meine es ist in dem Fall wirklich extrem simpel...

53:15.730 --> 53:17.730
...leute...

53:17.730 --> 53:19.730
...wer hat aufgepasst in der Berufsschule...

53:19.730 --> 53:21.730
...was ist die erste IP...

53:21.730 --> 53:23.730
...und was ist die letzte IP...

53:23.730 --> 53:25.730
...die wir benutzen können in der Range...

53:25.730 --> 53:27.730
...was ist die erste IP...

53:27.730 --> 53:29.730
...und was ist die letzte IP...

53:29.730 --> 53:31.730
...nutzbare IP...

53:31.730 --> 53:33.730
...nutzbare IP wohlgemerkt...

53:33.730 --> 53:35.730
...also 10.0.0.0 slash 24...

53:35.730 --> 53:37.730
...die erste IP ist was...

53:37.730 --> 53:39.730
...HiIQ Chat...

53:39.730 --> 53:41.730
...jetzt enttäuscht mich nicht...

53:41.730 --> 53:43.730
...es ist sehr simpel...

53:43.730 --> 53:45.730
...das kann jeder Azubi in der dritten Woche...

53:45.730 --> 53:47.730
...eins richtig...

53:47.730 --> 53:51.430
...und was ist die letzte nutzbare IP in diesem Netz...

53:51.430 --> 53:53.430
...254...

53:53.430 --> 53:55.430
...exzellent...

53:55.430 --> 53:57.430
...also das ist quasi das hier...

53:57.430 --> 53:59.430
...bis...

53:59.430 --> 54:01.430
...254...

54:01.430 --> 54:03.430
...korrekt...

54:03.430 --> 54:05.430
...Wir haben hier IP Calc...

54:05.430 --> 54:07.430
...sehr nices Tool...

54:07.430 --> 54:09.430
...Hosts Minimum...

54:09.430 --> 54:11.430
...1 Host Maximum...

54:11.430 --> 54:13.430
...254...

54:13.430 --> 54:15.430
...und Broadcast Adresse ist 255...

54:15.430 --> 54:17.430
...das heißt nutzbar in diesem Netz...

54:17.430 --> 54:19.430
...sind 254 IPs...

54:19.430 --> 54:21.430
...und die Netzadresse...

54:21.430 --> 54:23.430
...ist das da...

54:23.430 --> 54:25.430
...und also die Netzadresse ist das hier...

54:25.430 --> 54:27.430
...und die Netmaske in dem Fall ausgeschrieben...

54:27.430 --> 54:29.430
...das da...

54:29.430 --> 54:31.430
...also das ist glaube ich das ziemlich...

54:31.430 --> 54:33.430
...simpelste IP Netz was man überhaupt haben kann...

54:33.430 --> 54:35.430
...oftmals...

54:35.430 --> 54:37.430
...verwendet man daheim ja eher...

54:37.430 --> 54:39.430
...das hier oder sowas hier...

54:39.430 --> 54:41.430
...aber wir machen jetzt einfach mal das hier...

54:41.430 --> 54:43.430
...hat den Vorteil werdet ihr später auch noch sehen...

54:43.430 --> 54:45.430
...ein Netz zu verwenden was ihr...

54:45.430 --> 54:47.430
...nicht zu Hause benutzt weil...

54:47.430 --> 54:49.430
...wenn ihr euch dann später...

54:49.430 --> 54:51.430
...so nennen wir es mal VPN mäßig...

54:51.430 --> 54:53.430
...in eure Cloud verbinden wollt...

54:53.430 --> 54:55.430
...ist es praktisch wenn es...

54:55.430 --> 54:57.430
...dieses Netz bei euch lokal nicht gibt...

54:57.430 --> 54:59.430
...weil ansonsten habt ihr das Problem...

54:59.430 --> 55:01.430
...dann könnt ihr entweder nur auf das Netz lokal...

55:01.430 --> 55:03.430
...bei euch zugreifen oder auf das Netz in der Cloud...

55:03.430 --> 55:05.430
...zugreifen weil das ist das gleiche Netz...

55:05.430 --> 55:07.430
...oder ihr müsst sehr viele komische Dinger machen...

55:07.430 --> 55:09.430
...es ist sinnvoll...

55:09.430 --> 55:11.430
...ein Netz zu benutzen was man...

55:11.430 --> 55:13.430
...lokal nicht hat...

55:13.430 --> 55:15.430
...zumal man hier sehr viele Möglichkeiten hat...

55:15.430 --> 55:17.430
...das ist glaube ich standardmäßig in Slash 8...

55:17.430 --> 55:19.430
...was dafür vorgesehen ist...

55:19.430 --> 55:21.430
...als private IP Range...

55:21.430 --> 55:25.000
...wobei ist es das überhaupt...

55:25.000 --> 55:27.000
...ich glaube es ist standardmäßig in Slash 8...

55:27.000 --> 55:29.000
...was man also man kann quasi das hier...

55:29.000 --> 55:31.000
...das hier und das hier frei...

55:31.000 --> 55:36.610
...frei benutzen...

55:36.610 --> 55:38.610
...ja geht wieder besser...

55:38.610 --> 55:40.610
...habe ich hier irgendwelche...

55:40.610 --> 55:42.610
...Pepo Pupu Fire Toilet angesagt...

55:42.610 --> 55:44.610
...Servus Max...

55:44.610 --> 55:46.610
...weißt du ob man auf Linux Guzzi Sharp .NET...

55:46.610 --> 55:48.610
...ja beste Umgebung dafür...

55:48.610 --> 55:50.610
...wie kommst du drauf...

55:50.610 --> 55:52.610
...dass es vielleicht nicht möglich sein sollte...

55:52.610 --> 55:54.610
...das ist die beste Entwicklungs...

55:54.610 --> 55:56.610
...beste Entwicklungsplattform für .NET mittlerweile...

55:56.610 --> 55:58.610
...besser als Windows...

55:58.610 --> 56:00.610
...die beste Plattform...

56:00.610 --> 56:02.610
...um .NET Programme .NET Core...

56:02.610 --> 56:04.610
...beziehungsweise es ist ja eigentlich nur noch .NET...

56:04.610 --> 56:06.610
...heißt es jetzt...

56:06.610 --> 56:08.610
...Dotnet 6, 7, 8...

56:08.610 --> 56:10.610
...Programme entwickeln will ist das beste...

56:10.610 --> 56:12.610
...was man machen kann auf Linux Basis...

56:12.610 --> 56:14.610
...es sei denn man möchte eine Windows Only...

56:14.610 --> 56:16.610
...GUI das ist korrekt...

56:16.610 --> 56:18.610
...aber warum sollte man eine Windows GUI unter Linux...

56:18.610 --> 56:20.610
...erstellen wollen...

56:20.610 --> 56:22.610
...es gibt Möglichkeiten mittlerweile relativ gut...

56:22.610 --> 56:24.610
...Cross-Plattform GUIs mit C Sharp zu erstellen...

56:24.610 --> 56:26.610
...leider ist Cross-Plattform GUI immer noch...

56:26.610 --> 56:28.610
...ziemlich Pains Champ...

56:28.610 --> 56:30.610
...auch der Grund warum sich Elektron...

56:30.610 --> 56:32.610
...so durchgesetzt hat die letzten Jahre...

56:32.610 --> 56:34.610
...Avalonia ist...

56:34.610 --> 56:36.610
...pretty POG...

56:36.610 --> 56:38.610
...wie geht es dir...ja wieder besser...

56:38.610 --> 56:42.050
...probiert kann man es nicht nennen...

56:42.050 --> 56:44.050
...ich habe mal ein paar Beispielsachen...

56:44.050 --> 56:46.050
...durch geklont von denen...

56:46.050 --> 56:48.050
...von der Webseite...

56:48.050 --> 56:53.860
...also nicht großartig was gemacht...

56:53.860 --> 56:57.240
...alles klar...

56:57.240 --> 56:59.240
...genau...

56:59.240 --> 57:01.240
...wir legen jetzt Netzwerke in der Google Cloud an...

57:01.240 --> 57:03.240
...ist Elektronik...

57:03.240 --> 57:05.240
...nur eine Web Anwendung...

57:05.240 --> 57:09.890
...eine Windows Only GUI...

57:09.890 --> 57:11.890
...eine Windows Only GUI...

57:11.890 --> 57:13.890
...unter Linux entwickeln ist schwierig...

57:13.890 --> 57:15.890
...da kannst du es ja nicht ausprobieren...

57:15.890 --> 57:17.890
...also wenn du Windows Only Software...

57:17.890 --> 57:19.890
...entwickelst dann würde ich die...

57:19.890 --> 57:21.890
...logischerweise auch unter Windows entwickeln...

57:21.890 --> 57:23.890
...wenn du Avalonia...

57:23.890 --> 57:25.890
...Cross-Plattform GUI benutzen...

57:25.890 --> 57:27.890
...möchtest die würde dann unter Linux...

57:27.890 --> 57:29.890
...und Windows laufen...

57:29.890 --> 57:31.890
...aber testen musst du sie nach wie vor...

57:31.890 --> 57:33.890
...unter Windows...

57:33.890 --> 57:35.890
...also wenn du Windows Only...

57:35.890 --> 57:37.890
...Software entwickelst dann mach das unter Windows...

57:37.890 --> 57:39.890
...was anderes macht auch keinen Sinn...

57:39.890 --> 57:45.760
...wie gesagt es sei denn benutzt du...

57:45.760 --> 57:47.760
...Cross-Plattform GUI Framework...

57:47.760 --> 57:49.760
...und...

57:49.760 --> 57:51.760
...hoffst das es unter Windows dann auch so aussieht...

57:51.760 --> 57:53.760
...wie das was du unter Linux testest...

57:53.760 --> 57:55.760
...unter Windows programmieren...

57:55.760 --> 57:57.760
...macht halt überhaupt keinen Spaß...

57:57.760 --> 57:59.760
...aber wir müssen bei Google Cloud...

57:59.760 --> 58:01.760
...Config bleiben sonst wird das heute nichts...

58:01.760 --> 58:03.760
...also...

58:03.760 --> 58:05.760
...wir legen jetzt Netzwerke in der Google Cloud an...

58:05.760 --> 58:07.760
...also wir haben ein relativ...

58:07.760 --> 58:09.760
...großzügiges Netz...

58:09.760 --> 58:11.760
...254 Hosts haben wir hierfür...

58:11.760 --> 58:13.760
...und...

58:13.760 --> 58:15.760
...es gibt ein paar Sachen die man hier angeben muss...

58:15.760 --> 58:17.760
...die ganz praktisch sind...

58:17.760 --> 58:19.760
...oder besser gesagt...

58:19.760 --> 58:21.760
...wenn es ein bisschen schwierig wird...

58:21.760 --> 58:23.760
...und zwar das erste ist hier Depends On...

58:23.760 --> 58:25.760
...wir möchten Netzwerke erst anlegen...

58:25.760 --> 58:27.760
...nachdem alle APIs...

58:27.760 --> 58:29.760
...aktiviert wurden...

58:29.760 --> 58:31.760
...im Google Cloud Projekt was wir brauchen...

58:31.760 --> 58:33.760
...das müssen wir aber nur einmalig machen...

58:33.760 --> 58:35.760
...dass wir sicherstellen können...

58:35.760 --> 58:37.760
...bevor wir anfangen irgendwas zu machen...

58:37.760 --> 58:39.760
...dass die nötigen APIs im Projekt...

58:39.760 --> 58:41.760
...eingeschaltet sind...

58:41.760 --> 58:43.760
...das kann 20-30 Sekunden dauern...

58:43.760 --> 58:45.760
...und dementsprechend ist das einmal sinnvoll...

58:45.760 --> 58:47.760
...als Abhängigkeit zu definieren...

58:47.760 --> 58:49.760
...so...

58:49.760 --> 58:51.760
...ist erstmal wurscht wie das Ding heißt...

58:51.760 --> 58:53.760
...ist auch erstmal wurscht ich benutze es...

58:53.760 --> 58:55.760
...ich nenn es mal übrigens um...

58:55.760 --> 58:57.760
...ich nenn es mal Default...

58:57.760 --> 58:59.760
...weil ich habe das Default Netzwerk gelöscht...

58:59.760 --> 59:01.760
...das finde ich viel angenehmer...

59:01.760 --> 59:03.760
...Routing Mode...

59:03.760 --> 59:05.760
...ihr könnt übrigens wenn ihr die Terraform...

59:05.760 --> 59:07.760
...Visual Studio Code Erweiterung installiert habt...

59:07.760 --> 59:09.760
...könnt ihr euch die Hilfetexte aus den jeweiligen...

59:09.760 --> 59:11.760
...Cloud API Docs anzeigen lassen...

59:11.760 --> 59:13.760
...sprich was hier möglich ist...

59:13.760 --> 59:15.760
...und hier steht auch so ein kleiner Hilfetext dabei...

59:15.760 --> 59:17.760
...und das es als mögliche Values...

59:17.760 --> 59:19.760
...Regional und Global gibt...

59:19.760 --> 59:21.760
...weil Routing Mode für unser Netzwerk...

59:21.760 --> 59:23.760
...Regional ist vollkommen okay...

59:23.760 --> 59:25.760
...Auto Create Subnets würde ich auch ausschalten...

59:25.760 --> 59:27.760
...ich will die Sachen selbst anlegen...

59:27.760 --> 59:29.760
...und das hier...

59:29.760 --> 59:31.760
...finde ich tatsächlich relativ...

59:31.760 --> 59:35.840
...nützlich...

59:35.840 --> 59:37.840
...und zwar...

59:37.840 --> 59:39.840
...Delete Default Routes on Create...

59:39.840 --> 59:41.840
...setze ich auf False...

59:41.840 --> 59:43.840
...das ist ganz nützlich dafür...

59:43.840 --> 59:45.840
...wenn man zum Beispiel mit seinen VMs...

59:45.840 --> 59:47.840
...ins Internet raus will um Paketupdates zu machen...

59:47.840 --> 59:49.840
...braucht zwar glaube ich noch eine NAT Regel...

59:49.840 --> 59:51.840
...bin ich mir jetzt gar nicht ganz sicher...

59:51.840 --> 59:53.840
...aber...

59:53.840 --> 59:55.840
...wenn man das komplett abgeschottet isoliert machen will...

59:55.840 --> 59:57.840
...dann würde man das auf True setzen...

59:57.840 --> 59:59.840
...wenn man aber zum Beispiel mit seiner VM...

59:59.840 --> 01:00:01.840
...noch ordentlich ins Internet will...

01:00:01.840 --> 01:00:03.840
...und eine Default Route haben möchte...

01:00:03.840 --> 01:00:05.840
...dann würde ich das hier ausschalten...

01:00:05.840 --> 01:00:07.840
...und hier unten...

01:00:07.840 --> 01:00:09.840
...legen wir das eigentliche Netzwerk an...

01:00:09.840 --> 01:00:11.840
...also das hier ist im Prinzip nur so ein...

01:00:11.840 --> 01:00:13.840
...container...

01:00:13.840 --> 01:00:15.840
...in dem man dann verschiedene Subnets...

01:00:15.840 --> 01:00:17.840
...anlegen kann...

01:00:17.840 --> 01:00:19.840
...man sieht es ja auch hier, dass man hier erst die IP Range angibt...

01:00:19.840 --> 01:00:21.840
...nicht wie erwartet...

01:00:21.840 --> 01:00:23.840
...mit dem Netzwerk selbst...

01:00:23.840 --> 01:00:25.840
...sondern erst bei Subnet...

01:00:25.840 --> 01:00:27.840
...so und das ist im Prinzip alles was ich euch schon erzählt habe...

01:00:27.840 --> 01:00:29.840
...wir legen ein Subnet an...

01:00:29.840 --> 01:00:31.840
...mit der IP Range...

01:00:31.840 --> 01:00:33.840
...quasi die hier bis die hier...

01:00:33.840 --> 01:00:35.840
...in der Region...

01:00:35.840 --> 01:00:37.840
...die wir vorher als Variable definiert haben...

01:00:37.840 --> 01:00:39.840
...also quasi hier in der Region...

01:00:39.840 --> 01:00:41.840
...in der Region Europe West 3...

01:00:41.840 --> 01:00:45.670
...und sagen dieses Subnet...

01:00:45.670 --> 01:00:47.670
...gehört zu diesem Network...

01:00:47.670 --> 01:00:49.670
...und...

01:00:49.670 --> 01:00:51.670
...das ganze soll Private sein...

01:00:51.670 --> 01:00:56.200
...ach ne Moment...

01:00:56.200 --> 01:00:58.200
...das ist das die VMs Google...

01:00:58.200 --> 01:01:00.200
...API Services...

01:01:00.200 --> 01:01:02.200
...drauf zugreifen können, ja das ist sinnvoll...

01:01:02.200 --> 01:01:04.200
...das schalten wir ein...

01:01:04.200 --> 01:01:06.200
...und das wars, das wars für die Netzwerk Config...

01:01:06.200 --> 01:01:08.200
...mehr müssen wir an der Stelle nicht machen...

01:01:08.200 --> 01:01:10.200
...was jetzt passieren wird ist folgendes...

01:01:10.200 --> 01:01:12.200
...wenn wir jetzt mal hier in Netzwerke gehen...

01:01:12.200 --> 01:01:14.200
...übrigens bei Google Cloud...

01:01:14.200 --> 01:01:16.200
...nennen sich Netzwerke VPC...

01:01:16.200 --> 01:01:18.200
...ich glaub Virtual Private Cloud...

01:01:18.200 --> 01:01:20.200
...

01:01:20.200 --> 01:01:22.200
... weshalb man das nicht einfach nur Networks genannt hat...

01:01:22.200 --> 01:01:24.200
...entzieht sich meiner Kenntnis...

01:01:24.200 --> 01:01:26.200
...trotzdem muss man sagen...

01:01:26.200 --> 01:01:28.200
...Google Cloud hat finde ich...

01:01:28.200 --> 01:01:30.200
...noch ganz gute Benamungen...

01:01:30.200 --> 01:01:32.200
...nicht so wie AWS...

01:01:32.200 --> 01:01:34.200
...wo man echt nicht weiß wie die Sachen heißen...

01:01:34.200 --> 01:01:36.200
...bei Google Cloud finde ich heißen die Dinger...

01:01:36.200 --> 01:01:38.200
...meistens relativ gut benannt...

01:01:38.200 --> 01:01:40.200
...Cloud Storage, SQL...

01:01:40.200 --> 01:01:42.200
...Compute, Kubernetes...

01:01:42.200 --> 01:01:44.200
...kann man sich alles was darunter vorstellen...

01:01:44.200 --> 01:01:46.200
...bei Amazon heißt das dann...

01:01:46.200 --> 01:01:48.200
...Fargate...

01:01:48.200 --> 01:01:50.200
...und solche Geschichten...

01:01:50.200 --> 01:01:52.200
...wobei es auch EKS...

01:01:52.200 --> 01:01:54.200
...zumindest das was ich bisher von Amazon...

01:01:54.200 --> 01:01:56.200
...gesehen habe...

01:01:56.200 --> 01:02:01.750
...bei Google sind die Dinger ganz ok...

01:02:01.750 --> 01:02:03.750
...Route 53 ist doch eindeutig...

01:02:03.750 --> 01:02:05.750
...ich meine zumindest Port 53 und DNS...

01:02:05.750 --> 01:02:07.750
...bringt man halbwegs zusammen...

01:02:07.750 --> 01:02:09.750
...aber die Benahmung bei AWS finde ich...

01:02:09.750 --> 01:02:11.750
...so ihr seht wir haben keinerlei Netzwerke...

01:02:11.750 --> 01:02:13.750
...angelegt...

01:02:13.750 --> 01:02:15.750
...das heißt wenn wir unsere Terraform jetzt ausführen...

01:02:15.750 --> 01:02:17.750
...wir haben übrigens noch was vergessen...

01:02:17.750 --> 01:02:19.750
...aber ich lege erstmal das Netzwerk an...

01:02:19.750 --> 01:02:21.750
...dann zeige ich euch was noch fehlt...

01:02:21.750 --> 01:02:23.750
...sollten wir danach ein Netzwerk haben...

01:02:23.750 --> 01:02:25.750
...und zwar mit dieser IP Range...

01:02:25.750 --> 01:02:27.750
...und das ist Terraform...

01:02:27.750 --> 01:02:29.750
...Apply...

01:02:29.750 --> 01:02:31.750
...so wenn man Terraform Apply macht...

01:02:31.750 --> 01:02:33.750
...ups...

01:02:33.750 --> 01:02:35.750
...was...

01:02:35.750 --> 01:02:37.750
...ja ich sollte es auch vielleicht Default nennen...

01:02:37.750 --> 01:02:39.750
...und nicht die Sache von gestern...

01:02:39.750 --> 01:02:41.750
...wenn man Terraform Apply macht...

01:02:41.750 --> 01:02:43.750
...dann zeigt einem Terraform immer erst an...

01:02:43.750 --> 01:02:45.750
...bevor es anfängt...

01:02:45.750 --> 01:02:47.750
...was es machen würde...

01:02:47.750 --> 01:02:49.750
...das heißt Terraform hat sich jetzt connected...

01:02:49.750 --> 01:02:51.750
...zur Google Cloud...

01:02:51.750 --> 01:02:53.750
...übrigens wer sich fragt wie connected sich Terraform...

01:02:53.750 --> 01:02:55.750
...überhaupt zur Google Cloud...

01:02:55.750 --> 01:02:57.750
...das geht über das...

01:02:57.750 --> 01:02:59.750
...Google Cloud Command Line Tool...

01:02:59.750 --> 01:03:01.750
...wenn man das eingerichtet hat...

01:03:01.750 --> 01:03:03.750
...das heißt bevor man das macht...

01:03:03.750 --> 01:03:05.750
...muss man einmal gcloud init machen...

01:03:05.750 --> 01:03:07.750
...und gcloud...

01:03:07.750 --> 01:03:09.750
...äh ne auth...

01:03:09.750 --> 01:03:11.750
...ja...

01:03:11.750 --> 01:03:13.750
...gcloud auth application default login...

01:03:13.750 --> 01:03:15.750
...Projektname bla bla bla...

01:03:15.750 --> 01:03:17.750
...also man muss es einmal einrichten...

01:03:17.750 --> 01:03:19.750
...und sich einmal anmelden...

01:03:19.750 --> 01:03:21.750
...und dann kann Terraform das ganze über das Google Cloud Utility machen...

01:03:21.750 --> 01:03:23.750
...das heißt man muss in Terraform...

01:03:23.750 --> 01:03:25.750
...und in seinem Git Repo...

01:03:25.750 --> 01:03:27.750
...wo man seine Terraform Files hat...

01:03:27.750 --> 01:03:29.750
...keine Tokens und Passwörter hinterlegen...

01:03:29.750 --> 01:03:31.750
...sofern derjenige...

01:03:31.750 --> 01:03:33.750
...ein...

01:03:33.750 --> 01:03:35.750
...eingerichtetes Google Cloud...

01:03:35.750 --> 01:03:37.750
...Command Line Tool bei sich...

01:03:37.750 --> 01:03:39.750
...auf dem Rechner hat...

01:03:39.750 --> 01:03:41.750
...also wenn man sagt Terraform Apply...

01:03:41.750 --> 01:03:43.750
...dann sagt einem Terraform erstmal was es machen würde...

01:03:43.750 --> 01:03:48.980
...bei IBM...

01:03:48.980 --> 01:03:50.980
...heißen die Dinge glaube ich auch VPC...

01:03:50.980 --> 01:03:52.980
...bei IBM...

01:03:52.980 --> 01:03:54.980
...IBM verkaufen einem auch tolle Großrechner...

01:03:54.980 --> 01:03:56.980
...die dann bei einem im Rechenzentrum stehen...

01:03:56.980 --> 01:03:58.980
...der vielleicht gar nicht gehört...

01:03:58.980 --> 01:04:00.980
...IBM macht viele Sachen...

01:04:00.980 --> 01:04:02.980
...wobei die aller schlimmsten sind immer noch Oracle was das angeht...

01:04:02.980 --> 01:04:04.980
...was Lizenzierung und...

01:04:04.980 --> 01:04:06.980
...vire Verträge angeht...

01:04:06.980 --> 01:04:08.980
...ich glaube beim Oracle kommt da nix ran...

01:04:08.980 --> 01:04:10.980
...wobei ich habe gehört SAP soll auch nicht ohne sein...

01:04:10.980 --> 01:04:12.980
...ich bin froh das ich nie große...

01:04:12.980 --> 01:04:14.980
...berührungspunkte bisher mit SAP hatte...

01:04:14.980 --> 01:04:16.980
...und ich habe es ehrlich gesagt auch nicht vor...

01:04:16.980 --> 01:04:18.980
...wenn man Terraform...

01:04:18.980 --> 01:04:20.980
...Apply macht dann...

01:04:20.980 --> 01:04:22.980
...erzählt einem Terraform erstmal was es machen würde...

01:04:22.980 --> 01:04:24.980
...da kann man jetzt gucken ob das...

01:04:24.980 --> 01:04:26.980
...passt was man da...

01:04:26.980 --> 01:04:29.420
Also ob das so sein soll.

01:04:31.120 --> 01:04:37.100
Terraform ist jetzt zu meiner Google Cloud in das Projekt gegangen und hat nachgeguckt, was ist denn schon da und was soll das anlegen.

01:04:37.100 --> 01:04:44.310
Und jetzt schickt es mir ein Report und sagt, okay, ich würde folgende Sachen machen.

01:04:44.830 --> 01:04:51.070
Ich lege ein Netzwerk an und ich lege ein Subnet an mit diesen Eigenschaften.

01:04:51.250 --> 01:04:54.150
So, da kann ich jetzt durchgucken und alles ist gut.

01:04:54.310 --> 01:04:57.350
Ja, und es enabelt unser Projekt, unsere APIs.

01:04:57.350 --> 01:04:59.770
Dann sage ich, okay, sieht gut aus. Yes.

01:05:00.610 --> 01:05:15.910
Wer keinen Bock hat, darauf zu warten und sich sicher ist, dass er immer fehlerfrei seine Terraform-Config erstellt, der kann sagen, auch wenn ich es nicht unbedingt empfehlen würde, der kann sagen, Terraform Apply minus Auto Approve.

01:05:20.760 --> 01:05:23.320
Und dann sagt es automatisch Yes.

01:05:23.800 --> 01:05:25.540
Ich weiß nicht, wie ihr das handhabt, Leute.

01:05:26.340 --> 01:05:31.040
Seid ihr eher im, ich gucke mir alles an und sage Yes oder seid ihr eher im Auto Approve Lager?

01:05:31.040 --> 01:05:34.120
Für die Leute, die schon ein bisschen Terraform benutzen oder Terraform öfters benutzen.

01:05:34.600 --> 01:05:36.220
Ich muss sagen, ich bin faul as fuck.

01:05:36.760 --> 01:05:39.040
Das heißt, ich benutze ganz gerne Auto Approve.

01:05:40.540 --> 01:05:41.660
So, Terraform ist durch.

01:05:43.920 --> 01:05:46.260
Wo läuft denn Terraform in der Praxis auf einer VM?

01:05:46.320 --> 01:05:47.320
Ah, da kann ich gleich was zu sagen.

01:05:47.740 --> 01:05:52.520
So, Terraform ist durch und wir sehen, dass es ein Netzwerk gibt.

01:05:53.060 --> 01:05:55.420
Mit dem Namen Default, mit einem Subnet.

01:05:57.060 --> 01:05:59.000
Und das ist das Subnet, was wir angegeben haben.

01:05:59.120 --> 01:06:00.540
Also, das hat schon mal funktioniert.

01:06:00.540 --> 01:06:01.520
So, und jetzt.

01:06:01.520 --> 01:06:07.700
Das ist das Feature schlechthin, warum man Terraform benutzt.

01:06:07.800 --> 01:06:08.300
Oder zwei.

01:06:08.700 --> 01:06:12.100
Zwei Features schlechthin, warum man Terraform benutzt.

01:06:12.460 --> 01:06:13.460
Das erste habt ihr gesehen.

01:06:13.560 --> 01:06:16.140
Man hat jetzt alles, was man hier hat, definiert in der Textdatei.

01:06:16.560 --> 01:06:24.060
Das heißt, wenn ich ein nächstes Projekt anlege und das genauso konfigurieren will, würde ich die Variablen austauschen.

01:06:24.400 --> 01:06:29.780
Würde sagen, Terraform Init, Terraform Apply und es wäre genau in dem Zustand, wie es sein soll.

01:06:30.340 --> 01:06:30.780
So.

01:06:31.520 --> 01:06:34.280
Ähm, ich sag erst noch mal was hierzu.

01:06:34.840 --> 01:06:37.760
Also, wo läuft denn Terraform dann in der Praxis auf einer VM?

01:06:38.200 --> 01:06:40.820
Terraform kann ohne Probleme bei dir auf dem Laptop laufen.

01:06:41.320 --> 01:06:42.420
Oder aber in einer VM.

01:06:42.780 --> 01:06:43.760
Oder in einer Cloud VM.

01:06:44.160 --> 01:06:45.940
Oder theoretisch glaube ich sogar in einer Cloud Shell.

01:06:46.820 --> 01:06:57.060
Ähm, du kannst allerdings auch einen Workflow in GitLab oder in GitHub machen, der für dich Terraform Applied.

01:06:57.060 --> 01:06:58.800
Da gibt es ein ganz cooles Projekt.

01:06:59.000 --> 01:07:01.120
GitHub Terraform.

01:07:01.520 --> 01:07:03.160
Atlantis.

01:07:04.360 --> 01:07:06.920
Wenn man im Team arbeitet, ist es tatsächlich ganz nice.

01:07:06.920 --> 01:07:13.480
Und zwar ist das eine Pull Request Integration für Terraform.

01:07:15.520 --> 01:07:17.660
In einer, ja, kannst du es auch in einer Pipeline ausführen.

01:07:17.660 --> 01:07:18.060
Genau.

01:07:18.060 --> 01:07:21.400
Ja, oder GitHub Actions, was ja im Prinzip so eine, ist ja eine Pipeline.

01:07:21.900 --> 01:07:32.080
Ja, wenn man das im Team hat, äh, im Team benutzt und das ein bisschen strukturierter haben will, dann kann man Atlantis benutzen und Atlantis hängt sich quasi in diesen Team.

01:07:32.080 --> 01:07:32.780
Und Atlantis hängt sich quasi in diesen Team.

01:07:32.780 --> 01:07:34.240
Und Atlantis hängt sich quasi in diesen Pull Request Workflow rein.

01:07:34.680 --> 01:07:43.350
Ich weiß nicht, ob es ein gutes, ein gutes, ja, hier sieht man es eigentlich ganz gut, ja.

01:07:43.790 --> 01:07:44.810
Open Pull Request.

01:07:45.330 --> 01:07:50.470
So, und dann schreibt ihr Atlantis quasi rein, was würde jetzt passieren mit einem Terraform Plan.

01:07:50.930 --> 01:07:53.930
Terraform Plan ist das, was das anzeigt, was es machen würde.

01:07:54.770 --> 01:08:00.670
So, und dann können auch andere Leute diesen, diesen Output von dem Plan reviewen und approven.

01:08:00.670 --> 01:08:07.810
Und wenn das gemerged wird, so, dann, wenn das gemerged wird, dann.

01:08:07.830 --> 01:08:16.740
Dann wird das Ganze, ach ne, man applyt es erst und dann mergt man das.

01:08:16.860 --> 01:08:17.440
Okay, auch gut.

01:08:17.800 --> 01:08:20.380
Dann ist das Ganze ein bisschen nachvollziehbarer.

01:08:29.030 --> 01:08:31.750
Wo ist der Unterschied zu Docker mit Docker Compose?

01:08:34.240 --> 01:08:42.360
Docker ist die, dein Command Line Tool, um Container zu starten, zu stoppen, down zu loaden und anzulegen.

01:08:42.820 --> 01:08:47.720
Und Docker Compose ist was, um mehrere Docker Images miteinander zu verbinden.

01:08:52.120 --> 01:08:54.200
Also du kannst mit Docker Compose.

01:08:54.220 --> 01:09:01.100
Alles das machen, was du auch von Hand mit Docker machen kannst, nur halt in einer automatisierten Art und Weise.

01:09:02.300 --> 01:09:11.320
Und unterm Strich sind alle diese Tools, egal ob es Docker ist, Potman, Kubernetes oder was auch immer, benutzen die alle die gleiche Funktionalität.

01:09:11.580 --> 01:09:12.840
Ja, das kann man nicht oft genug sagen.

01:09:13.480 --> 01:09:19.720
Die, also die Möglichkeit Container auszuführen, Container gibt es ja eigentlich gar nicht, habe ich ja schon oft genug gesagt.

01:09:20.220 --> 01:09:21.900
Das sind Kernelfunktionen von Linux.

01:09:21.900 --> 01:09:31.460
Und das besteht hauptsächlich aus zwei Potman, aber Pogman wäre auch, gibt es, gibt es mal ein Gitter.

01:09:37.200 --> 01:09:41.040
Okay, es gibt schon auf Gitter Projekte, die sich Pogman nennen.

01:09:43.740 --> 01:09:48.160
Ja, also nochmal, nochmal zu dieser, zu dieser Container Geschichte, immer schnell was gesagt.

01:09:49.300 --> 01:09:57.120
Letztendlich sind das zwei Funktionalitäten zum größten Teil, die Linux anbietet und die ausnahmslos alle Container Runtimes benutzen.

01:09:57.500 --> 01:10:00.320
Weil es gibt keine Container, außer das.

01:10:00.380 --> 01:10:02.680
Was der Linux-Kernel anbietet, sind zwei Sachen.

01:10:03.200 --> 01:10:07.800
Das sind C-Names und Namespace, äh, C-Groups und Namespaces, so rum.

01:10:08.580 --> 01:10:18.620
Das eine ist so ein bisschen Sandboxing und das andere ist, in, dass man quasi so tun kann, als wären Sachen anders.

01:10:18.720 --> 01:10:21.700
Zum Beispiel andere IP, andere Hostname, als es wirklich ist.

01:10:22.240 --> 01:10:23.920
Unter der Haube gibt es keine Container.

01:10:23.920 --> 01:10:29.920
Es gibt Sandboxe Prozesse mit C-Groups und Prozessen, den du vorstellst.

01:10:30.380 --> 01:10:33.480
Stockerhaukels, der Hostname wäre anders mit Namespaces.

01:10:34.000 --> 01:10:36.980
Aber unter der Haube, es gibt eigentlich keine Container in dem Sinn.

01:10:37.920 --> 01:10:45.980
Sondern, das ist Linux-Kernel-Funktionalität, die um ganz normale Prozesse drumherum gelegt wird.

01:10:46.440 --> 01:10:58.440
Also, ob ihr jetzt zum Beispiel Echo 1, 2, 3 so ausführt oder Docker, Run, ähm, ja, Ubuntu, Echo, Echo 1, 2, wie geht das nochmal, Ubuntu?

01:10:58.440 --> 01:11:00.360
Ich weiß nicht, ob das sowas so funktioniert.

01:11:00.380 --> 01:11:08.350
Ne, wie, wie, wie führt man ein Kommando drinnen aus?

01:11:09.130 --> 01:11:11.470
Da muss ich Bash, muss ich Bash minus C machen?

01:11:13.510 --> 01:11:16.530
Weißt du, ey, ich hab keinen Plan aus dem Kopf, wie es funktioniert.

01:11:16.770 --> 01:11:18.450
Muss ich, nee, ich muss Exec machen, oder?

01:11:19.710 --> 01:11:22.150
Ähm, jetzt kann ich mir aus dem Kopf nicht merken.

01:11:23.490 --> 01:11:25.490
Exec, hier, das, das, das muss ich machen.

01:11:27.840 --> 01:11:29.920
Aber ich will Runnen und direkt Exec machen.

01:11:30.020 --> 01:11:31.440
Warte mal, wie ging das? Minus It?

01:11:32.380 --> 01:11:34.360
Das will ich machen, das will ich machen, okay.

01:11:34.360 --> 01:11:34.440
Okay.

01:11:37.260 --> 01:11:45.000
Also, ob ich jetzt sowas hier mache, ähm, kann man jetzt hier minus C, Echo 1, 2, 3 machen?

01:11:45.380 --> 01:11:46.040
Ja, das funktioniert.

01:11:46.400 --> 01:11:57.880
Okay, also, ob ich jetzt sowas hier ausführe, oder ob ich hier sowas hier ausführe, da ist weniger Unterschied, ich, im Detail natürlich schon, ist weniger Unterschied dazwischen, als man vielleicht so denkt.

01:11:58.940 --> 01:12:04.280
Das hier wird auf meinem Host-System ausgeführt, genauso wie das, es wird beides auf meinem Host-System ausgeführt.

01:12:04.280 --> 01:12:07.240
Der Unterschied ist, hier benutzt es Binaries von Ubuntu.

01:12:07.260 --> 01:12:14.040
Ubuntu, um es auszuführen, aber unter der Haube sind das beides Prozesse auf meinem Host.

01:12:14.480 --> 01:12:16.060
Das ist nicht wie bei VMs.

01:12:17.260 --> 01:12:21.160
Also, da ist weniger Unterschied dazwischen, als man denkt.

01:12:22.060 --> 01:12:26.680
Das hier ist kein Ubuntu im eigentlichen Sinne, das ist nach wie vor der ganz normale Kernel, der hier auch läuft.

01:12:27.640 --> 01:12:30.440
Ähm, so.

01:12:30.980 --> 01:12:37.200
Wenn ich jetzt, wenn ich mir hier anzeigen lasse, was ich, was ich, da bin ich mal gespannt, was eigentlich in der VM passiert, wenn ich das ausführe.

01:12:37.200 --> 01:12:38.740
Äh, in der, im Container.

01:12:38.820 --> 01:12:40.820
Was ist denn da passiert, wenn ich das ausführe?

01:12:40.820 --> 01:12:44.820
Ja, da steht, da steht Mist da, der nicht, der nicht wirklich stimmt.

01:12:44.820 --> 01:12:46.820
Doch, hier seht ihr es doch, guckt mal.

01:12:46.820 --> 01:12:48.820
Also, euch wird vielleicht was auffallen bei den Sachen.

01:12:48.820 --> 01:12:51.820
Hier lasse ich mir die Kernel-Version anzeigen auf meinem Host.

01:12:51.820 --> 01:12:54.820
Hier lasse ich mir die Kernel-Version im Container anzeigen, guckt mal da.

01:12:54.820 --> 01:12:57.820
Es ist der gleiche Kernel.

01:12:57.820 --> 01:13:04.820
Also, ob ich was im Container ausführe, oder ob ich was auf meinem Host ausführe, das ist gar kein so großer Unterschied.

01:13:04.820 --> 01:13:07.820
Das eine ist ein Prozess, der direkt losläuft.

01:13:07.820 --> 01:13:10.820
Hier, auf meinem Host.

01:13:10.820 --> 01:13:16.820
Und das andere ist ein Prozess, der auch direkt losläuft, nur dass noch ein bisschen Sandboxing-Zeug drumherum kommt.

01:13:16.820 --> 01:13:21.820
Es sind beides Prozesse auf meinem Host.

01:13:21.820 --> 01:13:23.820
Im gleichen Kernel.

01:13:23.820 --> 01:13:26.820
Das ist der große Unterschied von Containern zu VMs.

01:13:26.820 --> 01:13:28.820
Container gibt es in dem Sinn nicht.

01:13:28.820 --> 01:13:34.820
Container ist ein Sammelsurium aus verschiedenen Sachen, die der Linux-Kernel bereitstellt,

01:13:34.820 --> 01:13:36.820
und die manche Container-Runtimes, wie Docker, oder so,

01:13:36.820 --> 01:13:39.820
bereitstellen.

01:13:39.820 --> 01:13:42.820
Einen Container an sich gibt es in Linux so gar nicht.

01:13:42.820 --> 01:13:44.820
Auch wenn das so genannt wird.

01:13:44.820 --> 01:13:47.820
Das ist ein Sammelsurium aus verschiedenen Funktionen.

01:13:47.820 --> 01:13:52.820
Und unter der Haube sind es ganz normale Prozesse, die im gleichen Kernel laufen,

01:13:52.820 --> 01:13:55.820
wie alles andere, was ich sonst so ausführe.

01:13:55.820 --> 01:13:58.820
Bei einer VM wäre das was anderes.

01:13:58.820 --> 01:14:04.820
Wenn ich zum Beispiel jetzt sage, hier, wir machen mal eine Debian...

01:14:04.820 --> 01:14:05.820
S...

01:14:05.820 --> 01:14:07.820
Legt die mal neu an.

01:14:07.820 --> 01:14:08.820
Das ist richtig.

01:14:08.820 --> 01:14:09.820
Kubernetes ist keine Container-Runtime.

01:14:09.820 --> 01:14:10.820
Kubernetes ist ein Orchestrierungs-Tool.

01:14:10.820 --> 01:14:11.820
Ich weiß gar nicht, was Kubernetes mittlerweile standardmäßig für eine Runtime nimmt.

01:14:11.820 --> 01:14:12.820
Container-D?

01:14:12.820 --> 01:14:13.820
Oder Run...

01:14:13.820 --> 01:14:14.820
Ich weiß gar nicht.

01:14:14.820 --> 01:14:15.820
Ist das bei LXC gleich?

01:14:15.820 --> 01:14:16.820
Richtig.

01:14:16.820 --> 01:14:17.820
Das ist bei LXC genau das gleiche.

01:14:17.820 --> 01:14:18.820
Seba...

01:14:18.820 --> 01:14:19.820
Se...

01:14:19.820 --> 01:14:20.820
Se...

01:14:20.820 --> 01:14:21.820
Seba...

01:14:21.820 --> 01:14:22.820
Su...

01:14:22.820 --> 01:14:23.820
Chan...

01:14:23.820 --> 01:14:24.820
95...

01:14:24.820 --> 01:14:25.820
Se...

01:14:25.820 --> 01:14:26.820
Se...

01:14:26.820 --> 01:14:27.820
Se...

01:14:27.820 --> 01:14:28.820
Se...

01:14:28.820 --> 01:14:29.820
Se...

01:14:29.820 --> 01:14:30.820
Se...

01:14:30.820 --> 01:14:31.820
Se...

01:14:31.820 --> 01:14:32.820
Se...

01:14:32.820 --> 01:14:33.820
Se...

01:14:33.820 --> 01:14:34.820
Se...

01:14:34.820 --> 01:14:35.820
Chan...

01:14:35.820 --> 01:14:36.820
95...

01:14:36.820 --> 01:14:37.820
Danke für den Sub.

01:14:37.820 --> 01:14:42.610
Das ist bei LXC genau das gleiche.

01:14:42.610 --> 01:14:46.610
Diese ganzen Tools, ob Podman, ob Docker, ob...

01:14:46.610 --> 01:14:48.610
Ja, was auch immer.

01:14:48.610 --> 01:14:58.220
Aus irgendwelchen Gründen funktioniert meine Debian vor...

01:14:58.220 --> 01:15:01.220
Oh, ich habe einen Kernel-Update gemacht, ohne neu zu starten.

01:15:01.220 --> 01:15:02.220
Kann das sein?

01:15:02.220 --> 01:15:06.580
Nice.

01:15:07.580 --> 01:15:08.580
Starten meine VMs nicht.

01:15:08.580 --> 01:15:09.580
Auch sehr cool.

01:15:09.580 --> 01:15:10.580
Ja.

01:15:10.580 --> 01:15:16.220
Pogu.

01:15:16.220 --> 01:15:18.220
Geht ja gut los, was ich jetzt zeigen wollte.

01:15:18.220 --> 01:15:19.220
Ja.

01:15:19.220 --> 01:15:25.750
Vielleicht...

01:15:25.750 --> 01:15:26.750
Vielleicht startet es jetzt?

01:15:26.750 --> 01:15:35.080
Okay.

01:15:35.080 --> 01:15:36.080
Scheint...

01:15:36.080 --> 01:15:37.080
Jetzt...

01:15:37.080 --> 01:15:38.080
Jetzt scheint es zu funktionieren.

01:15:38.080 --> 01:15:41.080
Pogsbox, danke für den Sub.

01:15:41.080 --> 01:15:42.080
Ja.

01:15:42.080 --> 01:15:44.080
Das ist bei LXC genau das gleiche.

01:15:44.080 --> 01:15:46.080
Das ist bei LXC genau das gleiche.

01:15:46.080 --> 01:15:49.080
Also egal, ob es Docker, LXC oder Podman ist.

01:15:49.080 --> 01:15:57.080
Das sind alles nur Frontends für die Linux-Kernel-Funktionalität, die man zusammenfasst als Container.

01:15:57.080 --> 01:15:58.080
Ja.

01:15:58.080 --> 01:16:00.080
Also Namespaces, C-Groups.

01:16:00.080 --> 01:16:01.080
Natürlich gehört es auch...

01:16:01.080 --> 01:16:04.080
Natürlich gehört es zu so einem Container, zu so einer Container-Runtime noch mehr.

01:16:04.080 --> 01:16:06.080
Die muss das Image runterladen vom Container.

01:16:06.080 --> 01:16:08.080
Die muss die Kernel-APIs ansteuern.

01:16:08.080 --> 01:16:10.080
Aber unter der Haube ist das genau das gleiche.

01:16:10.080 --> 01:16:15.080
Also es macht eigentlich keinen Unterschied, ob ich LXC, Docker oder Podman verwende.

01:16:15.080 --> 01:16:21.080
Und am Ende ist es ein Prozess, der über die Kernel-Schnittstellen für, wenn es mal

01:16:21.080 --> 01:16:23.080
Containerisierung gestartet wird.

01:16:23.080 --> 01:16:25.080
Natürlich ist das Handling.

01:16:25.080 --> 01:16:26.080
So.

01:16:26.080 --> 01:16:27.080
So.

01:16:27.080 --> 01:16:28.080
Und jetzt ist jetzt der Unterschied.

01:16:28.080 --> 01:16:29.080
Also guckt euch mal an.

01:16:29.080 --> 01:16:32.080
Uname-A, sagt er mir.

01:16:32.080 --> 01:16:33.080
Es ist Arch.

01:16:33.080 --> 01:16:36.080
Was sehr merkwürdig ist für den Ubuntu.

01:16:36.080 --> 01:16:38.080
Warum das ein Arch-Kernel ist.

01:16:38.080 --> 01:16:39.080
So.

01:16:39.080 --> 01:16:41.080
Uname-A auf meinem Host und Uname-A im Container.

01:16:41.080 --> 01:16:43.080
Ihr seht, es ist der gleiche Kernel.

01:16:43.080 --> 01:16:45.080
Uname-A.

01:16:45.080 --> 01:16:50.080
Uname-A in der VM ist Linux Debian Test-VM 5.10.

01:16:50.080 --> 01:16:54.080
Also das ist der große Unterschied zwischen VMs und Container.

01:16:54.080 --> 01:16:56.080
Auch wenn das immer ein bisschen über den Haufen geschmissen wird.

01:16:56.080 --> 01:16:58.080
Eine VM ist wirklich ein Komplett-Virtualisierer.

01:16:58.080 --> 01:17:00.080
Ein Komplett-Virtualisiertes System.

01:17:00.080 --> 01:17:02.080
Inklusive eigenem Kernel.

01:17:02.080 --> 01:17:04.080
Braucht dementsprechend auch mehr Ressourcen.

01:17:04.080 --> 01:17:07.080
Was Speicherplatz angeht.

01:17:07.080 --> 01:17:09.080
Was vor allem RAM-Usage angeht.

01:17:09.080 --> 01:17:13.080
Deswegen sind Container deutlich schneller gestartet und leichtgewichtiger als VMs.

01:17:13.080 --> 01:17:16.080
Weil Container gar nicht existieren.

01:17:16.080 --> 01:17:19.080
Weil Container ganz normale Prozesse in meinem Host-Kernel sind.

01:17:19.080 --> 01:17:21.080
Wie alles andere auch.

01:17:21.080 --> 01:17:23.080
Nur ein bisschen besser gesandboxed.

01:17:23.080 --> 01:17:25.080
Also das ist ein Unterschied.

01:17:25.080 --> 01:17:27.080
Ob man was in der VM ausführt oder im Container.

01:17:27.080 --> 01:17:30.080
Weil es ist grundlegend einfach was ganz anderes.

01:17:30.080 --> 01:17:34.080
Das heißt, ich kann auch in der VM manche Sachen machen, die ich im Container nicht machen kann.

01:17:34.080 --> 01:17:37.080
Ich kann im VM zum Beispiel Kernel-Module laden.

01:17:37.080 --> 01:17:41.080
In einem Container kann ich keine Kernel-Module laden oder unloaden.

01:17:41.080 --> 01:17:46.080
Mit speziellen Rechten mag das vielleicht gehen.

01:17:46.080 --> 01:17:52.080
Aber zumindest teilen sich alle Container, die ich starte, die gleichen Host-Kernel-Module.

01:17:52.080 --> 01:18:07.580
Ist ein Unterschied.

01:18:07.580 --> 01:18:09.580
Der Sibaro war schon lange nicht mehr da.

01:18:15.740 --> 01:18:17.740
Ist eine VM nicht auch ein Prozess?

01:18:17.740 --> 01:18:18.740
Nee.

01:18:18.740 --> 01:18:22.740
Eine VM ist zwar ein Prozess, der gestartet wird, um die VM zu starten.

01:18:22.740 --> 01:18:25.740
Aber das ist wirklich dein komplett virtualisiertes System.

01:18:25.740 --> 01:18:29.740
Du siehst ja beispielsweise auch nicht...

01:18:29.740 --> 01:18:31.740
Okay, guck mal.

01:18:31.740 --> 01:18:33.740
Wir machen jetzt nochmal einen Docker-Run.

01:18:33.740 --> 01:18:35.740
Ähm...

01:18:35.740 --> 01:18:37.740
Sleep 5.

01:18:37.740 --> 01:18:38.740
So.

01:18:38.740 --> 01:18:40.740
Und jetzt sage ich PSAux Grab Sleep.

01:18:40.740 --> 01:18:41.740
Ich hoffe das funktioniert.

01:18:41.740 --> 01:18:42.740
Da, guck mal da.

01:18:42.740 --> 01:18:43.740
Was sehe ich denn hier?

01:18:43.740 --> 01:18:44.740
Was sehe ich hier?

01:18:44.740 --> 01:18:47.740
Als ganz normalen Prozess in meiner Prozess-Tabelle.

01:18:47.740 --> 01:18:48.740
Was sehe ich hier?

01:18:48.740 --> 01:18:50.740
Bash-C Sleep.

01:18:50.740 --> 01:18:56.740
Was ein weiterer Beweis dafür ist, es ist ein stink-normaler Prozess, den ich im Kernel starte.

01:18:56.740 --> 01:18:59.740
Äh, äh, den ich, den ich im Container starte.

01:18:59.740 --> 01:19:01.740
Also ihr seht es ja...

01:19:01.740 --> 01:19:02.740
Ups.

01:19:02.740 --> 01:19:04.740
Jetzt habe ich, jetzt habe ich Mist gemacht.

01:19:04.740 --> 01:19:05.740
So.

01:19:05.740 --> 01:19:06.740
Hier.

01:19:06.740 --> 01:19:07.740
Da steht es.

01:19:07.740 --> 01:19:08.740
Laufende Prozesse.

01:19:08.740 --> 01:19:09.740
Bin Bash-C Sleep 20.

01:19:09.740 --> 01:19:12.740
Das ist das, was ich eigentlich im Container ausgeführt habe.

01:19:12.740 --> 01:19:15.740
Also weiteres Beleg dafür, dass das stimmt, was ich gesagt habe.

01:19:15.740 --> 01:19:18.740
Wenn ich was im Container starte, es gibt keinen Container.

01:19:18.740 --> 01:19:22.740
Das ist ein ganz normaler Prozess, der hier in meinem System läuft.

01:19:22.740 --> 01:19:24.740
Nur ein bisschen besser Sandboxed.

01:19:24.740 --> 01:19:25.740
Und jetzt ist er weg.

01:19:25.740 --> 01:19:29.740
Also das ist wie bei Portal, wo es den Cake nicht gibt.

01:19:29.740 --> 01:19:31.740
Container gibt es eigentlich gar nicht.

01:19:31.740 --> 01:19:35.740
Das ist ein Sammelsurium aus Sachen, was man so unter Container versteht.

01:19:35.740 --> 01:19:37.740
Also es gibt keinen Container in dem Sinn.

01:19:37.740 --> 01:19:40.750
Genau.

01:19:40.750 --> 01:19:42.750
Und bei einer VM ist das anders.

01:19:42.750 --> 01:19:44.750
Wenn ich eine VM starte.

01:19:44.750 --> 01:19:49.960
Ich starte nochmal eine VM.

01:19:49.960 --> 01:19:51.960
Eine Abstraktionsebene.

01:19:51.960 --> 01:19:56.960
Ja, es ist ein bisschen, es ist eher so ein bisschen Sandboxed das Ganze.

01:19:56.960 --> 01:19:57.960
Genau.

01:19:57.960 --> 01:19:58.960
So.

01:19:58.960 --> 01:20:04.960
Wenn ich eine VM starte und darin was ausführe, dann wird euch auffallen, da sehe ich nichts.

01:20:04.960 --> 01:20:06.960
Okay, die VM läuft auch noch nicht.

01:20:06.960 --> 01:20:08.960
VM läuft gleich.

01:20:08.960 --> 01:20:14.300
Gut, dass wir den VM-Champ gebaut haben, oder?

01:20:14.300 --> 01:20:16.300
Kann ich so Sachen besser zeigen.

01:20:16.300 --> 01:20:22.620
Auf Debian.

01:20:22.620 --> 01:20:23.620
Booten.

01:20:23.620 --> 01:20:24.620
Please.

01:20:24.620 --> 01:20:25.620
Break it.

01:20:25.620 --> 01:20:26.620
So.

01:20:26.620 --> 01:20:27.620
Und jetzt mache ich hier mal das Gleiche.

01:20:27.620 --> 01:20:30.620
Was habe ich in der VM aus, was habe ich im Container ausgeführt?

01:20:30.620 --> 01:20:33.620
Sleep 20 an A minus A.

01:20:33.620 --> 01:20:34.620
So.

01:20:34.620 --> 01:20:35.620
Und jetzt werdet ihr sehen.

01:20:35.620 --> 01:20:39.340
Ich sehe nichts.

01:20:39.340 --> 01:20:43.340
Was ich sehe, ist so Sachen wie zum Beispiel QEMU.

01:20:43.340 --> 01:20:45.340
Dass das läuft.

01:20:45.340 --> 01:20:46.340
Oder KVM.

01:20:46.340 --> 01:20:47.340
Ne.

01:20:47.340 --> 01:20:48.340
Ja.

01:20:48.340 --> 01:20:49.340
Sowas sehe ich.

01:20:49.340 --> 01:20:52.340
Also ich sehe, dass ein Prozess läuft, der eine VM virtuall.

01:20:52.340 --> 01:20:54.340
Gestartet hat, wenn ich weiß, was dieser Prozess macht.

01:20:54.340 --> 01:20:57.340
Aber ich sehe nicht, was in dieser VM läuft.

01:20:57.340 --> 01:20:59.340
In der Prozessliste von meinem Host.

01:20:59.340 --> 01:21:02.340
Weil es eben in einer komplett virtualisierten Kiste läuft.

01:21:02.340 --> 01:21:05.340
Wo mein Host Kernel, mein Host System gar nichts mit zu tun hat.

01:21:05.340 --> 01:21:06.340
Ja.

01:21:06.340 --> 01:21:09.340
Das einzige, was ich hier starte, ist die Software, die die Virtualisierung macht.

01:21:09.340 --> 01:21:14.340
Aber was dann in der virtualisierten VM läuft, hat mit meinem Host System nichts zu tun.

01:21:14.340 --> 01:21:17.340
Dementsprechend sieht man auch hier, ich habe einen eigenen Kernel.

01:21:17.340 --> 01:21:19.340
So wie ich das bei Debian erwarten würde.

01:21:19.340 --> 01:21:21.340
Aber wenn ich jetzt exakt das Gleiche mache.

01:21:21.340 --> 01:21:22.340
Guck mal Leute.

01:21:22.340 --> 01:21:24.340
Ich habe hier oben gestartet.

01:21:24.340 --> 01:21:27.340
In Debian 11 habe ich gestartet.

01:21:27.340 --> 01:21:28.340
So.

01:21:28.340 --> 01:21:33.030
Jetzt machen wir mal Docker run Debian.

01:21:33.030 --> 01:21:35.030
Debian 11.

01:21:35.030 --> 01:21:38.030
Ich weiß gar nicht, ob man 11 überhaupt machen kann.

01:21:38.030 --> 01:21:40.030
Und ihr werdet feststellen, dass.

01:21:40.030 --> 01:21:41.030
Ja ja.

01:21:41.030 --> 01:21:42.030
Download Image.

01:21:42.030 --> 01:21:43.030
Warte mal.

01:21:43.030 --> 01:21:44.030
Ich mache das mal weg.

01:21:44.030 --> 01:21:45.030
Und ihr werdet feststellen, dass der Unterschied schon ziemlich groß ist.

01:21:45.030 --> 01:21:48.030
Hier ist es nämlich nach wie vor Host Kernel 6.2.11 Arch.

01:21:48.030 --> 01:21:51.030
Und hier oben ist es das gleiche Debian System.

01:21:51.030 --> 01:21:52.030
Es ist beides ein Debian System.

01:21:52.030 --> 01:21:54.030
Es ist beides ein Debian 11.

01:21:54.030 --> 01:21:59.030
Hier oben in der VM habe ich den Kernel 15 Debian.

01:21:59.030 --> 01:22:06.030
Und hier unten habe ich, obwohl ich angeblich den Debian in Anführungsstrichen gestartet habe, nach wie vor 6.2.11 Arch.

01:22:06.030 --> 01:22:08.030
Und man sieht, Container ist komplett geschwindelt.

01:22:08.030 --> 01:22:10.030
Es gibt keine Container.

01:22:10.030 --> 01:22:19.030
Es gibt nur paar Kernel Funktionalitäten und ein bisschen Kleber, die das zusammenführt als Container Runtime.

01:22:19.030 --> 01:22:21.030
Und man nennt es dann halt Container.

01:22:21.030 --> 01:22:23.030
So, aber genug zu dem Thema.

01:22:23.030 --> 01:22:28.070
Das kann man nicht oft genug sagen.

01:22:28.070 --> 01:22:42.180
Es ist egal, welche Container Runtime du benutzt.

01:22:42.180 --> 01:22:43.180
Das ist im Prinzip immer das gleiche.

01:22:43.180 --> 01:22:49.180
Man kann auch Container Images in einer VM ausführen.

01:22:49.180 --> 01:22:51.180
Dann sind es trotzdem keine Container mehr danach.

01:22:51.180 --> 01:22:53.180
Das sind VMs.

01:22:53.180 --> 01:22:56.810
So, aber wo bin ich denn stehen geblieben?

01:22:56.810 --> 01:23:03.810
Ich wollte eigentlich die zwei Features zeigen, warum man Terraform benutzt.

01:23:03.810 --> 01:23:05.810
Also das erste habt ihr ja schon gesehen.

01:23:05.810 --> 01:23:09.810
Man könnte jetzt reproduzierbar das in unterschiedlichen Projekten anlegen.

01:23:09.810 --> 01:23:16.810
Egal, ob das jetzt in meinem Kekkel Stream 1 Projekt ist oder in Kekkel Stream 99 oder in Plup 1, 2, 3.

01:23:16.810 --> 01:23:20.810
Egal, ich könnte reproduzierbar den ganzen gleichen Krempel anlegen.

01:23:20.810 --> 01:23:23.810
Immer wieder mit Terraform auf die gleiche Art und Weise.

01:23:23.810 --> 01:23:34.180
So, eine weitere coole Geschichte ist, Terraform merkt sich, was es gemacht hat.

01:23:34.180 --> 01:23:37.820
Terraform hat einen State.

01:23:37.820 --> 01:23:41.820
Terraform hat sich gemerkt, wenn ich jetzt hier nochmal Apply mache,

01:23:41.820 --> 01:23:47.820
Terraform hat sich gemerkt, dass es Netzwerke für mich angelegt hat.

01:23:47.820 --> 01:23:51.820
Das heißt, wenn ich jetzt nochmal Terraform Apply mache, schlägt es auch nicht vor, was zu machen,

01:23:51.820 --> 01:23:56.820
sondern weil sie sagt, hier meine Infrastruktur und das, was ich konfiguriert habe, ist gleich.

01:23:56.820 --> 01:23:59.820
Das heißt, Terraform weiß, dass es die Netzwerke angelegt hat.

01:23:59.820 --> 01:24:05.820
Das bedeutet auch, wenn ich jetzt alles wieder löschen will, was ich mit Terraform aufgebaut habe,

01:24:05.820 --> 01:24:06.820
dann könnte ich sagen Terraform Destroy.

01:24:07.820 --> 01:24:10.820
Mache ich jetzt nicht, weil ich brauche sie ja gleich wieder.

01:24:10.820 --> 01:24:17.820
Dann würde Terraform nachgucken und sagen, jawoll, ich werde einfach das, was ich angelegt habe,

01:24:17.820 --> 01:24:24.820
nämlich das Network und das Subnet und hier so ein paar APIs eingeschaltet, werde ich einfach wieder löschen.

01:24:24.820 --> 01:24:28.820
Und um euch zu zeigen, dass das auch tatsächlich der Fall ist,

01:24:28.820 --> 01:24:32.820
oder wenn ich jetzt hier von Hand noch ein zusätzliches Netzwerk anlege,

01:24:32.820 --> 01:24:34.820
hier bla bla plups, ist wurscht, wie das heißt.

01:24:34.820 --> 01:24:36.820
Hier Subnet 122168.0.

01:24:37.820 --> 01:24:38.820
Slash 4 und 2.

01:24:38.820 --> 01:24:39.820
Moment, das ist der Name.

01:24:39.820 --> 01:24:40.820
0w.

01:24:40.820 --> 01:24:49.150
Region Asia ist vollkommen egal.

01:24:49.150 --> 01:24:50.150
IP Range.

01:24:50.150 --> 01:24:59.620
So, wenn ich das hier jetzt anlege und sage Terraform Destroy,

01:24:59.620 --> 01:25:10.620
dann sagt Terraform nichts von diesem neu angelegten Netzwerk.

01:25:10.620 --> 01:25:11.620
Warum nicht?

01:25:11.620 --> 01:25:14.620
Weil Terraform es nicht selbst erstellt hat.

01:25:14.620 --> 01:25:17.620
Terraform interessiert sich nur für Sachen, die Terraform selbst angelegt hat.

01:25:17.620 --> 01:25:21.620
Ja, man kann Sachen importieren in Terraform, aber in der Regel ist es so,

01:25:21.620 --> 01:25:26.620
Terraform hat es nicht selbst angelegt, also interessiert sich Terraform auch nicht dafür.

01:25:26.620 --> 01:25:32.620
Terraform merkt sich, was es erstellt hat und kann das auch wieder löschen oder überprüfen,

01:25:32.620 --> 01:25:35.620
ob das richtig ist.

01:25:35.620 --> 01:25:37.620
So, jetzt gucken wir uns mal was weiteres an.

01:25:37.620 --> 01:25:43.230
Ich löscht es, löscht es jetzt einfach wieder.

01:25:43.230 --> 01:25:47.230
Ja, je nachdem was der macht, das ist nämlich das nächste, was ich euch zeigen will.

01:25:47.230 --> 01:25:50.230
So, ich löscht den Krempel gerade mal wieder.

01:25:50.230 --> 01:25:51.230
Delete.

01:25:51.230 --> 01:25:52.230
Yes.

01:25:52.230 --> 01:25:55.230
Also das nicht mit Terraform erstellte.

01:25:55.230 --> 01:26:00.230
So, mal angenommen, ich gehe jetzt in das Netzwerk rein, was ich mit Terraform angelegt habe.

01:26:00.230 --> 01:26:02.230
So, ich gehe jetzt in das Subnet hier rein.

01:26:02.230 --> 01:26:04.230
Ich weiß gar nicht, ob man da was gescheit ändern kann.

01:26:04.230 --> 01:26:11.230
Und ich sage jetzt, nee, nee, IP Range soll eigentlich Slash 25 sein, anstatt Slash 24.

01:26:11.230 --> 01:26:12.230
Und ich speichere das jetzt.

01:26:12.230 --> 01:26:15.230
Ja, natürlich, man kann immer noch viel zusätzlich machen.

01:26:15.230 --> 01:26:16.230
Also, fuck ja.

01:26:16.230 --> 01:26:24.630
Äh, 21.

01:26:24.630 --> 01:26:26.630
Aber man darf es nicht kleiner machen.

01:26:26.630 --> 01:26:27.630
Man darf es nur größer machen.

01:26:27.630 --> 01:26:30.630
Dann fragt, oh warte, jetzt bin ich gespannt.

01:26:30.630 --> 01:26:32.630
Jetzt bin ich gespannt, was Terraform macht.

01:26:32.630 --> 01:26:36.630
Wahrscheinlich wird Terraform das Netzwerk neu erzeugen, weil es sich nicht ändern kann.

01:26:36.630 --> 01:26:38.630
Oder es backt rum.

01:26:38.630 --> 01:26:39.630
Gucken wir mal.

01:26:39.630 --> 01:26:42.630
Bin ich mal gespannt, wie Terraform das jetzt händelt.

01:26:42.630 --> 01:26:44.630
Weil Terraform müsste es ja eigentlich kleiner machen.

01:26:44.630 --> 01:26:50.100
So, also irgendjemand ist jetzt ins Webinterface gegangen.

01:26:50.100 --> 01:26:52.100
Und hat da dran rumgespielt.

01:26:52.100 --> 01:26:54.100
Jetzt mache ich mal Terraform Apply.

01:26:54.100 --> 01:26:59.100
Und jetzt guckt Terraform nach, wie ist der State, wie er sein soll.

01:26:59.100 --> 01:27:01.100
Und wie ist der State, wie er wirklich ist.

01:27:01.100 --> 01:27:04.100
Und jetzt sagt Terraform, Momente mal.

01:27:04.100 --> 01:27:05.100
Guckt mal da.

01:27:05.100 --> 01:27:13.200
Irgendwie ist es Slash 23, aber es sollte doch Slash 24 sein.

01:27:13.200 --> 01:27:20.200
Terraform ist aber auch schlau genug, dass es weiß, es kann es nicht einfach ändern, sondern es muss replaced werden.

01:27:20.200 --> 01:27:22.200
Dann kann ich jetzt sagen, jetzt sage ich Yes.

01:27:22.200 --> 01:27:31.200
Und dann wird Terraform jetzt das Subnet löschen und das Subnet neu anlegen mit der richtigen Subnet Mask oder mit der richtigen Net Mask hinten dran.

01:27:31.200 --> 01:27:37.200
Das sind die zwei richtig nicen Features an Terraform.

01:27:37.200 --> 01:27:40.200
Dass Terraform weiß, was es gemacht hat.

01:27:40.200 --> 01:27:48.200
Und Terraform Sachen korrigieren kann oder Sachen rückstandslos, rückstandslos, manchmal bleiben trotzdem ein paar Sachen übrig, rückstandslos wieder entfernen kann.

01:27:48.200 --> 01:27:51.200
Neben dem reproduzierbar aufbauen.

01:27:51.200 --> 01:27:54.200
Und das ist wirklich extrem nice.

01:27:54.200 --> 01:27:58.200
Gerade wenn ihr im Projekt seid, also wenn mehrere Leute hier in diesem Projekt rumwursten.

01:27:58.200 --> 01:28:04.200
Und ihr wollt danach nicht das komplette Projekt löschen, wenn ihr durch seid, sondern nur eure Ressourcen wieder entfernen.

01:28:04.200 --> 01:28:06.200
Dann ist Terraform wirklich sehr praktisch.

01:28:06.200 --> 01:28:12.200
Weil ansonsten müsstet ihr von Hand hingehen und alles im Web Interface wieder wegklicken, was ihr angelegt habt.

01:28:12.200 --> 01:28:17.090
So und jetzt hat Terraform das wieder geändert.

01:28:17.090 --> 01:28:22.090
Deswegen sage ich in Anführungsstrichen rückstandslos in Anführungsstrichen.

01:28:22.090 --> 01:28:25.090
So und jetzt wird Terraform wieder sagen, jo passt.

01:28:25.090 --> 01:28:29.090
Manchmal muss man mit Terraform Sachen exkluden.

01:28:29.090 --> 01:28:33.090
Und ich sage das jetzt auch nur, weil manchmal das jemand im Chat gesagt hat.

01:28:33.090 --> 01:28:35.090
Das kann man hier machen.

01:28:35.090 --> 01:28:37.090
Man kann hier glaube ich ignore.

01:28:37.090 --> 01:28:41.090
Man kann sagen, ey Terraform scheiß mal drauf, weil einer was von Hand geändert hat.

01:28:41.090 --> 01:28:45.090
Aber das sollte man nur an Stellen machen, wo es auch wirklich notwendig ist.

01:28:45.090 --> 01:28:50.090
Ansonsten versucht Terraform das immer in den Stand zu bringen, wie es hier im Code steht.

01:28:50.090 --> 01:28:57.090
Was auch der Grund ist, warum sich das ganze Infrastructure as Code nennt.

01:28:57.090 --> 01:29:04.090
Weil man seine Infrastruktur hier in Code, in Textdateien beschreibt.

01:29:04.090 --> 01:29:06.090
Gut, jetzt machen wir mal was Sinnvolles.

01:29:06.090 --> 01:29:08.090
Wir haben ja im Prinzip nur ein Netzwerk angelegt bisher.

01:29:08.090 --> 01:29:10.090
Wir brauchen noch ein paar andere Sachen.

01:29:10.090 --> 01:29:15.090
Und zwar, wir möchten ja VMs erzeugen können.

01:29:15.090 --> 01:29:17.090
Ein Kubernetes Cluster erzeugen können.

01:29:17.090 --> 01:29:19.090
In diesem Kubernetes Cluster.

01:29:19.090 --> 01:29:23.090
Also mehrere Nodes für den Kubernetes Cluster erzeugen können.

01:29:23.090 --> 01:29:26.090
Mehrere Pots laufen lassen können.

01:29:26.090 --> 01:29:29.090
Und Deployments laufen lassen können im Kubernetes Cluster.

01:29:29.090 --> 01:29:32.090
Das heißt, wir brauchen noch mehr IP Ranges.

01:29:32.090 --> 01:29:34.090
Und das ist ein bisschen eklig gemacht.

01:29:34.090 --> 01:29:41.090
In der Terraform Config für Google Cloud.

01:29:41.090 --> 01:29:43.090
Wir machen Ignore Changes.

01:29:43.090 --> 01:29:45.090
Ja, wir machen auch Ignore Changes bei einer VM gleich.

01:29:45.090 --> 01:29:47.090
Nämlich für SSH Keys.

01:29:47.090 --> 01:29:48.090
So.

01:29:48.090 --> 01:29:50.090
Und dafür gibt es folgende Sachen.

01:29:50.090 --> 01:29:55.090
Neben einer primären IP Range kann man für ein Subnet auch.

01:29:55.090 --> 01:29:57.090
Es ergibt Netzwerktechnisch, Leute.

01:29:57.090 --> 01:29:59.090
Ich sage es euch einmal an der Stelle.

01:29:59.090 --> 01:30:02.090
Netzwerktechnisch ergibt das, was ich jetzt hier konfiguriere, keinen Sinn.

01:30:02.090 --> 01:30:04.090
Aber man muss es bei der Google Cloud so machen.

01:30:04.090 --> 01:30:06.090
Sonst funktioniert es nicht.

01:30:06.090 --> 01:30:09.230
So.

01:30:09.230 --> 01:30:15.230
Man kann jetzt nämlich noch sagen, mehrere Secondary IP Ranges anlegen.

01:30:15.230 --> 01:30:17.230
Wollen einen Block haben.

01:30:17.230 --> 01:30:18.230
Secondary IP Range.

01:30:18.230 --> 01:30:22.230
Und da kann man jetzt noch zusätzliche IP Ranges definieren.

01:30:22.230 --> 01:30:27.230
Die nicht zwangsläufig hier drinnen liegen müssen unbedingt.

01:30:27.230 --> 01:30:31.820
Sondern andere.

01:30:31.820 --> 01:30:32.820
Ja.

01:30:32.820 --> 01:30:36.820
Da kann man zum Beispiel jetzt so etwas sagen wie Range Name.

01:30:36.820 --> 01:30:37.820
So.

01:30:37.820 --> 01:30:41.820
Also wir brauchen einmal eine Range für Kubernetes Pods.

01:30:41.820 --> 01:30:47.900
Also letztendlich die Container, die ich in meinem Kubernetes Cluster laufen lasse.

01:30:47.900 --> 01:30:49.900
Die sollen ja interne IPs kriegen.

01:30:49.900 --> 01:30:51.900
Und das macht man über so eine Secondary Range.

01:30:51.900 --> 01:30:52.900
So.

01:30:52.900 --> 01:30:55.900
Da muss man wieder eine weitere Range angeben.

01:30:55.900 --> 01:31:01.900
Und da können wir jetzt irgendwie so etwas machen wie hier 10.1.0.0.

01:31:01.900 --> 01:31:02.900
Gut.

01:31:02.900 --> 01:31:18.860
Dann können wir halt nur mal gucken, ob das geht oder ob es irgendwelche Auflagen gibt,

01:31:18.860 --> 01:31:20.860
dass man das nicht machen darf.

01:31:20.860 --> 01:31:30.480
Wir können auch Slash 16 machen.

01:31:30.480 --> 01:31:32.480
Das ist vielleicht gar nicht so blöd.

01:31:32.480 --> 01:31:34.480
Dann haben wir mehr Platz.

01:31:34.480 --> 01:31:35.480
Dann haben wir mehr Pods.

01:31:35.480 --> 01:31:37.480
Dann können wir quasi das hier für Pods benutzen.

01:31:37.480 --> 01:31:38.480
So.

01:31:38.480 --> 01:31:42.780
Das können wir machen.

01:31:42.780 --> 01:31:43.780
Und dann brauchen wir nochmal was.

01:31:43.780 --> 01:31:44.780
Das können wir jetzt keine Ahnung.

01:31:44.780 --> 01:31:45.780
10.2.0.0.

01:31:45.780 --> 01:31:46.780
Slash 16.

01:31:46.780 --> 01:31:47.780
Oder wir können auch etwas kleineres nehmen.

01:31:47.780 --> 01:31:48.780
Ist eigentlich vollkommen egal.

01:31:48.780 --> 01:31:49.780
Das nächste ist für.

01:31:49.780 --> 01:31:50.780
Wann brauchen wir das überhaupt?

01:31:50.780 --> 01:31:51.780
Ich glaube.

01:31:51.780 --> 01:31:52.780
Ich glaube, das reicht.

01:31:52.780 --> 01:31:53.780
Für die für die Nodes selber.

01:31:53.780 --> 01:31:54.780
Ich bin mir nicht sicher, ob wir das brauchen.

01:31:54.780 --> 01:31:55.780
Müssen wir.

01:31:55.780 --> 01:31:58.470
Müssen wir gleich machen.

01:31:58.470 --> 01:31:59.470
Ja.

01:31:59.470 --> 01:32:00.470
Ja.

01:32:00.470 --> 01:32:01.470
Ja.

01:32:01.470 --> 01:32:02.470
Ja.

01:32:02.470 --> 01:32:03.470
Ja.

01:32:03.470 --> 01:32:04.470
Ja.

01:32:04.470 --> 01:32:05.470
Ja.

01:32:05.470 --> 01:32:06.470
Ja.

01:32:06.470 --> 01:32:07.470
Ja.

01:32:07.470 --> 01:32:08.470
Ja.

01:32:08.470 --> 01:32:09.470
Ja.

01:32:09.470 --> 01:32:10.470
Ja.

01:32:10.470 --> 01:32:11.470
Ja.

01:32:11.470 --> 01:32:12.470
Ja.

01:32:12.470 --> 01:32:13.470
Ja.

01:32:13.470 --> 01:32:14.470
Ja.

01:32:14.470 --> 01:32:15.470
Ja.

01:32:15.470 --> 01:32:16.470
Ja.

01:32:16.470 --> 01:32:21.920
Ja.

01:32:21.920 --> 01:32:22.920
Ja.

01:32:22.920 --> 01:32:23.920
Ja.

01:32:23.920 --> 01:32:24.920
Ja.

01:32:24.920 --> 01:32:25.920
Ja.

01:32:25.920 --> 01:32:26.920
Ja.

01:32:26.920 --> 01:32:27.920
Ja.

01:32:27.920 --> 01:32:30.940
Ja.

01:32:30.940 --> 01:32:31.940
Ja.

01:32:31.940 --> 01:32:32.940
Ja.

01:32:32.940 --> 01:32:33.940
Ja.

01:32:33.940 --> 01:32:34.940
Ja.

01:32:34.940 --> 01:32:35.940
Ja.

01:32:35.940 --> 01:32:36.940
Ja.

01:32:36.940 --> 01:32:37.940
Ja.

01:32:37.940 --> 01:32:38.940
Ja.

01:32:38.940 --> 01:32:39.940
Ja.

01:32:39.940 --> 01:32:40.940
Ja.

01:32:40.940 --> 01:32:41.940
Ja.

01:32:41.940 --> 01:32:42.940
Ja.

01:32:42.940 --> 01:32:43.940
Ja.

01:32:43.940 --> 01:32:44.940
Ja.

01:32:44.940 --> 01:32:45.940
Ja.

01:32:45.940 --> 01:32:46.940
Ja.

01:32:46.940 --> 01:32:49.020
dass wir das so machen, ansonsten

01:32:49.020 --> 01:32:50.700
ansonsten funktioniert es nicht, so, machen wir mal

01:32:50.700 --> 01:32:53.240
Terraform Apply, gucken, ob wir alles richtig gemacht haben

01:32:53.240 --> 01:32:57.560
Wasche-Tabs

01:32:57.560 --> 01:33:01.480
Die Wäsche-Tabs-Challenge

01:33:01.480 --> 01:33:15.220
Gut

01:33:15.220 --> 01:33:16.720
Weiter geht's

01:33:16.720 --> 01:33:19.380
Terraform legt den ganzen

01:33:19.380 --> 01:33:21.640
Darf das mehrfach

01:33:21.640 --> 01:33:23.220
sein? Ja, das darf mehrfach sein

01:33:23.220 --> 01:33:25.640
Wie gesagt, ich muss auch sagen, Terraform

01:33:25.640 --> 01:33:27.500
ist zwar mit Abstand das verbreitetste Tool

01:33:27.500 --> 01:33:29.520
dafür, ich persönlich mag die

01:33:29.520 --> 01:33:31.280
Syntax von HCL nicht wirklich

01:33:31.280 --> 01:33:34.840
Man muss sich halt ein bisschen mit auskennen

01:33:34.840 --> 01:33:37.420
weil das, ja, weil das so zu den

01:33:37.420 --> 01:33:39.360
Standard-Skills mittlerweile gehört

01:33:39.360 --> 01:33:41.280
Ich persönlich mag die

01:33:41.280 --> 01:33:43.640
Terraform-Syntax nicht, deswegen finde ich das

01:33:43.640 --> 01:33:45.700
gut, dass sie sowas wie CDKTF

01:33:45.700 --> 01:33:47.740
jetzt haben, dass man das mit normalen Programmiersprachen

01:33:47.740 --> 01:33:49.760
machen kann, mein persönlicher Favorit

01:33:49.760 --> 01:33:50.860
ist nach wie vor Pulumi

01:33:50.860 --> 01:33:53.360
aber Terraform ist mit Abstand

01:33:53.360 --> 01:33:55.900
das verbreitetste, schlicht und ergreifend

01:33:55.900 --> 01:33:58.960
Diesmal wirklich, wieso?

01:33:59.080 --> 01:34:01.220
Das ist das zweite Mal, wo wir das gemacht haben

01:34:01.220 --> 01:34:02.720
Letztes Mal hatte ich keinen Bock mehr zu

01:34:02.720 --> 01:34:04.480
streamen und gestern hatte ich Dünnschiss

01:34:04.480 --> 01:34:06.720
Konnte ich nicht streamen

01:34:06.720 --> 01:34:09.220
So, jetzt haben wir das angelegt

01:34:09.220 --> 01:34:11.520
Ist die Playlist vorbei?

01:34:11.520 --> 01:34:17.840
Ah, die war zu epic, die Playlist

01:34:17.840 --> 01:34:19.600
Kann die Syntax komplex werden?

01:34:19.600 --> 01:34:22.380
Ja, auch, aber die Syntax ist nicht schön

01:34:22.380 --> 01:34:24.100
Zum Beispiel, wenn du Schleifen machen musst

01:34:24.100 --> 01:34:26.160
und sowas, das ist einfach abartig

01:34:26.160 --> 01:34:27.800
Es könnte ja durchaus sein, dass ich eine Schleife

01:34:27.800 --> 01:34:29.320
machen will, ja, hierfür jetzt

01:34:29.320 --> 01:34:31.580
für mehrere Netzwerke

01:34:31.580 --> 01:34:33.760
Und Schleifen hier

01:34:33.760 --> 01:34:35.320
Terraform Loops

01:34:35.320 --> 01:34:40.860
Das ist nicht

01:34:40.860 --> 01:34:43.720
wirklich aktuell

01:34:43.720 --> 01:34:45.040
2016

01:34:45.040 --> 01:34:49.210
Kein offizielles

01:34:49.210 --> 01:34:50.550
Ding

01:34:50.550 --> 01:34:55.500
Ja, dann machst du das so

01:34:55.500 --> 01:34:57.420
Ja, dann schreibst du Count

01:34:57.420 --> 01:34:58.940
und dann macht er das mehrfach

01:34:58.940 --> 01:34:59.900
und dann kannst du hier so irgendwie

01:34:59.900 --> 01:35:02.220
Count Index Variable einsetzen

01:35:02.220 --> 01:35:04.340
Das ist wirklich abartig

01:35:04.340 --> 01:35:05.900
Schleifen, Schleifen, Terraform

01:35:05.900 --> 01:35:07.060
Das wird, da ist

01:35:07.060 --> 01:35:10.800
Ja, genau, man kann dann auch

01:35:10.800 --> 01:35:13.020
irgendwie so Wildcard Patterns

01:35:13.020 --> 01:35:13.260
und so

01:35:13.360 --> 01:35:14.380
komisches Gedöns machen

01:35:14.380 --> 01:35:16.060
Das ist wirklich abartig

01:35:16.060 --> 01:35:18.960
Also, insofern ist so Sachen wie

01:35:18.960 --> 01:35:20.900
Pulumi schon ganz nice, weil man einfach

01:35:20.900 --> 01:35:22.900
eine vollwertige, echte Programmiersprache hat

01:35:22.900 --> 01:35:23.900
Alles ist gut

01:35:23.900 --> 01:35:25.960
So, also, machen wir weiter

01:35:25.960 --> 01:35:30.950
Das nächste ist äußerst unspektakulär

01:35:30.950 --> 01:35:32.330
Das nennen wir

01:35:32.330 --> 01:35:32.850
2

01:35:32.850 --> 01:35:35.690
2 Router.tf

01:35:35.690 --> 01:35:38.430
Und das kopiere ich jetzt, weil wir da schlicht und ergreifend

01:35:38.430 --> 01:35:39.250
gar nichts machen müssen

01:35:39.250 --> 01:35:40.010
So, ja

01:35:40.010 --> 01:35:44.060
Das ist einfach

01:35:44.060 --> 01:35:46.680
Äh, hups, vielleicht auch im richtigen

01:35:46.680 --> 01:35:47.680
Ordner

01:35:47.680 --> 01:35:48.680
So

01:35:48.680 --> 01:35:50.680
Ich glaube, dazu muss ich jetzt nicht

01:35:50.680 --> 01:35:52.680
Wollen wir nichts großartiges erzählen

01:35:52.680 --> 01:35:54.680
Das nächste wird schon ein bisschen interessanter

01:35:54.680 --> 01:35:56.680
Wir müssen, äh, NAT-Regeln anlegen

01:35:56.680 --> 01:35:58.680
Also sprich, dass unsere

01:35:58.680 --> 01:36:00.680
VMs zum Beispiel ins Internet connecten können

01:36:00.680 --> 01:36:07.960
Ah

01:36:07.960 --> 01:36:09.960
So, was ist mit dieser Playlist

01:36:09.960 --> 01:36:16.410
los, Mensch?

01:36:16.410 --> 01:36:18.410
Was bin ich denn? Du siehst Terraform-Config

01:36:18.410 --> 01:36:20.410
Auf jeden Fall

01:36:20.410 --> 01:36:22.410
So, als nächstes brauchen wir

01:36:22.410 --> 01:36:24.410
NAT-Regeln

01:36:24.410 --> 01:36:26.410
Damit unsere Kisten sich in die Internetseite verändern können.

01:36:26.410 --> 01:36:28.410
So, das geht folgemaßen

01:36:28.410 --> 01:36:29.410
Resource

01:36:29.410 --> 01:36:30.410
Google

01:36:30.410 --> 01:36:32.410
Compute

01:36:32.410 --> 01:36:33.410
Router

01:36:33.410 --> 01:36:34.410
NAT

01:36:34.410 --> 01:36:37.410
Jetzt werdet ihr auch gleich sehen, warum wir einen Router anlegen mussten

01:36:37.410 --> 01:36:40.410
Weil ich kann keine NAT-Regeln anlegen, ohne dass ich vorher einen Router angelegt habe

01:36:40.410 --> 01:36:42.410
So

01:36:42.410 --> 01:36:44.410
NAT-Regeln, damit unsere Kisten ins Internet kommen

01:36:44.410 --> 01:36:45.410
Also, Name

01:36:45.410 --> 01:36:47.410
NAT

01:36:47.410 --> 01:36:49.410
Haben wir nur eins, so

01:36:49.410 --> 01:36:51.410
Router gleich

01:36:51.410 --> 01:36:53.410
Ähm, den hier im Endeffekt

01:36:53.410 --> 01:36:55.410
Äh, Router

01:36:55.410 --> 01:36:56.410
Moment, warte mal

01:36:56.410 --> 01:36:58.410
Ich hoffe, das Ding kann Auto-Complete

01:36:58.410 --> 01:37:00.410
Google Default Router

01:37:00.410 --> 01:37:02.410
Genau, es kann Auto-Complete

01:37:02.410 --> 01:37:04.410
Äh, Self-Link

01:37:04.410 --> 01:37:09.410
Wenn man Self-Link benutzt, das ist auch so eine Google Terraform-Eigenheit

01:37:09.410 --> 01:37:14.410
Dann bedeutet das, dass diese Ressource gelinkt wird mit dieser Ressource

01:37:14.410 --> 01:37:16.410
Und die hängen voneinander ab

01:37:16.410 --> 01:37:18.410
Das heißt, dann weiß Terraform

01:37:18.410 --> 01:37:21.410
Das hier darf es erst nach dem hier machen

01:37:21.410 --> 01:37:23.410
So, wenn ich das richtig verstanden habe

01:37:23.410 --> 01:37:49.850
Ja

01:37:49.850 --> 01:37:50.850
Ja

01:37:50.850 --> 01:37:51.850
So, ähm

01:37:51.850 --> 01:37:53.850
Jetzt müssen wir noch zwei andere Sachen anlegen

01:37:53.850 --> 01:37:56.850
Und zwar müssen wir angeben, welche Region

01:37:56.850 --> 01:37:58.850
Region haben wir eine Variable für

01:37:58.850 --> 01:38:00.850
Unsere Region ist

01:38:00.850 --> 01:38:01.850
So sieht man ja nicht

01:38:01.850 --> 01:38:04.850
Unsere Region ist Europe-West-3

01:38:04.850 --> 01:38:08.230
Also Region gleich Europe-West-3

01:38:08.230 --> 01:38:13.230
Jetzt müssen wir ein bisschen Terraform-Matching machen für Google

01:38:13.230 --> 01:38:15.230
Und zwar copy-paste ich mir das mal

01:38:15.230 --> 01:38:17.230
Wir müssen folgendes angeben

01:38:17.230 --> 01:38:19.230
Source-Subnetwork IP-Ranges to NAT

01:38:19.230 --> 01:38:21.230
Da steht auch die Erklärung

01:38:21.230 --> 01:38:22.230
Was das Ganze ist

01:38:22.230 --> 01:38:28.400
High-IQ-Shit, also erlaubt ist

01:38:28.400 --> 01:38:35.400
All subnetworks, all IP-Ranges, all subnets, all primary IPs and list of subnetworks

01:38:35.400 --> 01:38:38.400
Das heißt, ich kann jetzt hier selbst angeben

01:38:38.400 --> 01:38:47.950
Welche NAT-IPs das Ding verwenden soll

01:38:47.950 --> 01:38:50.950
Beziehungsweise welche

01:38:50.950 --> 01:38:55.950
Welche Subnets für NAT benutzt man?

01:38:55.950 --> 01:38:57.950
Es ist Google-Logik

01:38:57.950 --> 01:38:59.950
Wobei man das auch nicht zwangsläufig bräuchte

01:38:59.950 --> 01:39:01.950
Man könnte es wahrscheinlich

01:39:01.950 --> 01:39:02.950
Man könnte es auch

01:39:02.950 --> 01:39:03.950
Ich lasse es mal weg

01:39:03.950 --> 01:39:05.950
Vielleicht geht es auch so

01:39:05.950 --> 01:39:06.950
Mal ausprobieren

01:39:06.950 --> 01:39:08.950
Das habe ich tatsächlich auch aus einem Tutorial

01:39:08.950 --> 01:39:10.950
Also weiß nicht, warum man das so macht

01:39:10.950 --> 01:39:13.950
Das ist von Cloud-zu-Cloud-Anbieter ein bisschen unterschiedlich

01:39:13.950 --> 01:39:16.950
Zumindest muss man jetzt noch die NAT-IPs angeben

01:39:16.950 --> 01:39:30.580
Also sprich, welche ausgehenden IP-Adressen man verwendet

01:39:30.580 --> 01:39:32.580
Das heißt, man muss die IPs angeben

01:39:32.580 --> 01:39:34.580
Welche ausgehenden IP-Adressen man verwendet

01:39:34.580 --> 01:39:39.580
Und wer jetzt denkt, man könnte hier einfach sowas reinschreiben

01:39:39.580 --> 01:39:41.580
Naja, ist ein bisschen zu einfach

01:39:41.580 --> 01:39:44.580
Weil ich weiß ja meine IP nicht

01:39:44.580 --> 01:39:46.580
Es sei denn, ich habe die im Vorfeld angelegt

01:39:46.580 --> 01:39:50.580
Das heißt, ich muss jetzt auch externe IPs anlegen

01:39:50.580 --> 01:39:55.580
Und das geht mit Google Compute Address

01:39:55.580 --> 01:39:59.580
So, da kann man NAT-IPs oder irgendwie sowas angeben

01:39:59.580 --> 01:40:04.280
Übrigens, das sollten wir auch mal NAT nennen

01:40:04.280 --> 01:40:06.280
Und da kann man dann sagen

01:40:06.280 --> 01:40:07.280
Hier Name

01:40:07.280 --> 01:40:11.480
Address-Type

01:40:11.480 --> 01:40:12.480
Das ist jetzt wichtig

01:40:12.480 --> 01:40:13.480
Address-Type muss man reinschreiben

01:40:13.480 --> 01:40:16.990
External

01:40:16.990 --> 01:40:19.990
Und Network-Tier können wir Standard lassen

01:40:19.990 --> 01:40:20.990
Depends on

01:40:20.990 --> 01:40:21.990
Brauchen wir auch nicht

01:40:21.990 --> 01:40:23.990
So, das müsste jetzt eigentlich so funktionieren

01:40:23.990 --> 01:40:24.990
Und an der Stelle sage ich

01:40:24.990 --> 01:40:37.560
IPs benutzt doch mal bitteschön die IPs von Google Compute Address Punkt NAT

01:40:37.560 --> 01:40:39.560
Da geht das AutoComplete wieder nicht

01:40:39.560 --> 01:40:40.560
Wo AutoComplete geht?

01:40:40.560 --> 01:40:42.560
Und wann AutoComplete geht?

01:40:42.560 --> 01:40:43.560
Keine Ahnung

01:40:43.560 --> 01:40:50.560
Ich glaube das Terraform Plugin von Visual Studio Code ist einfach eklig

01:40:50.560 --> 01:40:52.560
Genau, ich hoffe das funktioniert so

01:40:52.560 --> 01:40:55.560
Es könnte sein, dass ich den Subnet angeben muss

01:40:55.560 --> 01:40:57.560
Achso, ich habe eine List of Subnets angegeben

01:40:57.560 --> 01:40:58.560
Ich will ja nicht

01:40:58.560 --> 01:40:59.560
Ich will...

01:40:59.560 --> 01:41:00.560
Was ist hier möglich?

01:41:00.560 --> 01:41:01.560
Was kann man hier angeben?

01:41:01.560 --> 01:41:02.560
Source Subnet

01:41:02.560 --> 01:41:03.560
Moment

01:41:03.560 --> 01:41:05.560
Source Subnetwork IP ranges to NAT

01:41:05.560 --> 01:41:08.560
How NAT should be configured per Subnet

01:41:08.560 --> 01:41:14.560
If all subnets of all of the in every are allowed

01:41:14.560 --> 01:41:16.560
Ja, das ist durchaus okay

01:41:16.560 --> 01:41:23.760
If all primary IP ranges

01:41:23.760 --> 01:41:24.760
Wollen...

01:41:24.760 --> 01:41:26.760
Ne, wir wollen all IP ranges haben

01:41:26.760 --> 01:41:42.020
Ne, wollen wir nicht

01:41:42.020 --> 01:41:58.450
Wollen wir nicht

01:41:58.450 --> 01:42:09.410
Wir wollen nur NAT erlauben aus diesen IP ranges

01:42:09.410 --> 01:42:10.410
Wisst ihr was?

01:42:10.410 --> 01:42:11.410
Scheiß drauf

01:42:11.410 --> 01:42:13.410
Wir tragen jetzt mal da alle ein

01:42:13.410 --> 01:42:19.560
So

01:42:19.560 --> 01:42:23.560
Ich glaube, dass das Security-Technik nicht die beste Variante ist

01:42:23.560 --> 01:42:30.560
Und übrigens, man könnte glaube ich hier an der Stelle auch Auto machen

01:42:30.560 --> 01:42:32.560
Probieren wir das mal aus

01:42:32.560 --> 01:42:37.560
Weil dann brauche ich wahrscheinlich diese Einträge hier nicht

01:42:37.560 --> 01:42:40.070
Schauen wir mal

01:42:40.070 --> 01:42:42.070
Mal gucken, ob sich das applyen lässt

01:42:42.070 --> 01:42:44.070
Ich bin mir da selbst nicht ganz sicher

01:42:44.070 --> 01:42:46.070
Ich habe es ja im Vorfeld schon ausprobiert

01:42:46.070 --> 01:42:48.070
Aber im Vorfeld habe ich es anders gemacht

01:42:48.070 --> 01:42:51.070
Aber ein bisschen die Sachen vereinfachen ist ja nicht verkehrt

01:42:51.070 --> 01:42:52.070
So

01:42:52.070 --> 01:42:55.070
Also, er will jetzt ein paar Regeln anlegen

01:42:55.070 --> 01:42:58.070
Und ein NAT-Objekt und ein Router und so

01:42:58.070 --> 01:42:59.070
Mal gucken, ob er Fehler schmeißt

01:42:59.070 --> 01:43:02.070
Wenn er Fehler schmeißt, dann habe ich es verkehrt gemacht

01:43:02.070 --> 01:43:06.890
Zumindest kommen wir jetzt gleich zu einem interessanten Part

01:43:06.890 --> 01:43:08.890
Wir sind ja noch bei Netzwerk-Config

01:43:08.890 --> 01:43:10.890
Das ist relativ...

01:43:10.890 --> 01:43:12.890
Ah, ja, okay

01:43:12.890 --> 01:43:16.460
That's all we know

01:43:16.460 --> 01:43:18.460
Nice, GG Eats

01:43:18.460 --> 01:43:20.460
Da weiß man auch sofort Bescheid, oder?

01:43:20.460 --> 01:43:23.460
Es ist komplett, komplett obvious, was kaputt ist

01:43:23.460 --> 01:43:26.460
Also, wenn ihr nicht versteht, dann cringe, ja

01:43:26.460 --> 01:43:33.650
Es ist eigentlich logisch, woran es liegt, oder?

01:43:33.650 --> 01:43:37.960
Versteht man, versteht man doch sofort

01:43:37.960 --> 01:43:40.960
Nicht eingeloggt, doch, doch, ich bin eingeloggt

01:43:40.960 --> 01:43:43.960
Ich habe irgendwo einen Config-Fehler drin

01:43:43.960 --> 01:43:53.080
Äh, ja

01:43:53.080 --> 01:43:57.080
Also, ich kann jetzt einfach mal das kopieren, von dem ich weiß, dass es geht

01:43:57.080 --> 01:43:59.080
Ähm

01:43:59.080 --> 01:44:01.080
Wie habe ich das Netzwerk genannt hier? Internal... ähm...

01:44:02.080 --> 01:44:04.080
Also, ich hätte jetzt...

01:44:04.080 --> 01:44:06.080
Ich habe es ein bisschen vereinfacht jetzt für den Stream

01:44:06.080 --> 01:44:08.080
Ich habe jetzt eigentlich gehofft, das funktioniert auch

01:44:08.080 --> 01:44:11.080
Was er für Probleme hat, man weiß es nicht

01:44:11.080 --> 01:44:13.080
Router was not found on the server

01:44:13.080 --> 01:44:15.080
Warum?

01:44:15.080 --> 01:44:17.080
Habe ich hier vielleicht... Moment, Router?

01:44:17.080 --> 01:44:18.080
Muss ich... Habe ich das falsch...

01:44:18.080 --> 01:44:22.080
Ah, muss man Router nicht self-link, sondern name machen? Vielleicht

01:44:22.080 --> 01:44:30.020
Yes

01:44:30.020 --> 01:44:37.000
Ja, es ist teilweise etwas undurchsichtig, was man braucht

01:44:37.000 --> 01:44:40.000
The name of the Cloud Router in which that will be... Okay

01:44:40.000 --> 01:44:43.000
Hier muss man den name angeben, es steht ja sogar da

01:44:43.000 --> 01:44:44.000
Es steht ja sogar da

01:44:44.000 --> 01:44:48.000
Leider ist es halt das dumme, dass es nicht Router name heißt, weil dann wüsste man gleich, was Sache ist

01:44:48.000 --> 01:44:50.000
Aber so ist das halt

01:44:50.000 --> 01:44:51.000
So, jetzt hat es funktioniert

01:44:51.000 --> 01:44:52.000
Nice

01:44:52.000 --> 01:44:53.000
Gut

01:44:53.000 --> 01:44:55.000
Kommen wir jetzt mal zu ein bisschen was Spannenderem

01:44:55.000 --> 01:44:58.000
Ähm, nämlich... Na gut, wir müssen noch eine Firewall-Regel anlegen

01:44:58.000 --> 01:44:59.000
Das ist tatsächlich jetzt nicht so spannend

01:44:59.000 --> 01:45:00.000
Machen wir ein neues File

01:45:00.000 --> 01:45:05.560
4... oder Firewall-Rules

01:45:05.560 --> 01:45:06.560
.tf

01:45:06.560 --> 01:45:16.360
Imagine... Ja, die Variablen sind wirklich nicht so nice

01:45:17.360 --> 01:45:21.360
So, das copy-paste ich, weil das ist relativ selbsterklärend

01:45:21.360 --> 01:45:25.360
Also, wir wollen SSH-Zugang erlauben, und zwar von überall

01:45:25.360 --> 01:45:31.360
Von überall wird SSH erlaubt auf Port 22

01:45:31.360 --> 01:45:38.360
Nachdem, um das jetzt mal ein bisschen zu relativieren, dass das Security technisch gar kein so großes Problem ist

01:45:38.360 --> 01:45:41.360
Es ist nichts davon public im Internet verfügbar

01:45:41.360 --> 01:45:46.360
Also ihr müsst euch vorher authentifizieren, bevor ihr euch überhaupt versuchen könnt, über SSH einzuloggen

01:45:46.360 --> 01:45:51.360
Was im Endeffekt heißt, es ist nicht schlimm, dass wir von allen Ranges das Ganze erlauben

01:45:51.360 --> 01:45:54.360
Ja, also...

01:45:54.360 --> 01:45:56.360
SSH ist überall erlaubt

01:45:56.360 --> 01:45:59.360
Und jetzt kommt tatsächlich, finde ich, was ganz interessantes

01:45:59.360 --> 01:46:01.360
Und danach führen wir es auch nochmal aus

01:46:01.360 --> 01:46:03.360
Wir brauchen eine Jump-VM

01:46:03.360 --> 01:46:07.360
Denn bisher ist alles private in der Google Cloud, was wir angelegt haben

01:46:07.360 --> 01:46:08.360
Wir haben ja private Netze

01:46:08.360 --> 01:46:13.360
Der private Kubernetes-Cluster wird auch nicht von außen zugänglich sein

01:46:13.360 --> 01:46:15.360
Das heißt, wir müssen jetzt irgendwas anlegen

01:46:15.360 --> 01:46:21.360
Und zwar eine, nennen wir es mal, Jump-VM.tf

01:46:21.360 --> 01:46:26.360
Das ist eine virtuelle Maschine über Google Cloud Compute

01:46:26.360 --> 01:46:28.360
Eine VM-Instance

01:46:28.360 --> 01:46:29.360
Die legen wir jetzt nicht im Webinterface

01:46:29.360 --> 01:46:31.360
Einmal hier ganz normale Google Cloud VM

01:46:31.360 --> 01:46:33.360
Die Dinger sind übrigens schweineteuer

01:46:33.360 --> 01:46:35.360
Ich zeige euch nochmal exemplarisch

01:46:35.360 --> 01:46:38.360
Also wenn ihr einfach nur eine VM wollt, ist Google Cloud der Witz

01:46:38.360 --> 01:46:42.670
So eine popelige VM, 28 Dollar

01:46:42.670 --> 01:46:44.670
Und dann gucken wir mal hier, Europe

01:46:44.670 --> 01:46:46.670
Europe, Frankfurt

01:46:46.670 --> 01:46:48.670
So eine popelige VM

01:46:48.670 --> 01:46:50.670
Zwei CPUs

01:46:50.670 --> 01:46:52.670
Und das ist noch die Shared-Plattform

01:46:52.670 --> 01:46:54.670
Machen wir mal was ordentliches

01:46:54.670 --> 01:46:57.670
N2 Standards

01:46:57.670 --> 01:47:09.980
Die wollen ernsthaft 74 Euro

01:47:09.980 --> 01:47:12.980
Für eine 2,8 GB VM

01:47:12.980 --> 01:47:15.980
Da kriegst du bei Hetzner 3 Server für

01:47:15.980 --> 01:47:17.980
Mit ordentlich Power

01:47:17.980 --> 01:47:20.980
Kann man die 1 überhaupt noch auswählen?

01:47:20.980 --> 01:47:22.980
Das sind die alten

01:47:22.980 --> 01:47:24.980
Gibt es die 1 noch?

01:47:24.980 --> 01:47:25.980
Ja, First Generation

01:47:25.980 --> 01:47:26.980
Die sind ein bisschen billiger

01:47:26.980 --> 01:47:29.980
Aber auch nicht, aber auch nicht so viel

01:47:29.980 --> 01:47:32.980
Guck mal, 32 Euro für

01:47:32.980 --> 01:47:34.980
Einen Kern

01:47:34.980 --> 01:47:37.980
Und 4 GB RAM

01:47:37.980 --> 01:47:40.980
32 Euro

01:47:40.980 --> 01:47:43.980
Jetzt guck mal, was wir, pass mal auf

01:47:43.980 --> 01:47:49.510
Jetzt guck mal, was wir bei Hetzner Cloud dafür bekommen

01:47:49.510 --> 01:47:54.120
Prices

01:47:54.120 --> 01:47:57.120
So, bei Hetzner Cloud kriegen wir, wir brauchen

01:47:57.120 --> 01:47:58.120
Ja, komm, mit IP

01:47:58.120 --> 01:48:00.120
Das macht man aber ohne

01:48:00.120 --> 01:48:01.120
So

01:48:01.120 --> 01:48:05.440
Ok, Dedicated machen wir auch

01:48:05.440 --> 01:48:06.440
Also

01:48:06.440 --> 01:48:08.440
Wir kriegen, bei Hetzner würden wir tatsächlich

01:48:08.440 --> 01:48:10.440
Dedicated

01:48:10.440 --> 01:48:15.130
Auch eine

01:48:15.130 --> 01:48:19.660
Wie viel, wie viel kostet's?

01:48:19.660 --> 01:48:20.660
32 Euro

01:48:20.660 --> 01:48:21.660
Ja

01:48:21.660 --> 01:48:24.660
Da würden wir 2 CPUs und 8 GB RAM kriegen

01:48:24.660 --> 01:48:27.660
Versus eine CPU und 4 GB RAM

01:48:27.660 --> 01:48:29.660
Besser bei Hetzner würde ich dann tatsächlich sogar

01:48:29.660 --> 01:48:31.660
Die hier nehmen

01:48:31.660 --> 01:48:34.660
Und da kriegen wir dann tatsächlich

01:48:34.660 --> 01:48:36.660
8 CPUs

01:48:36.660 --> 01:48:38.660
Und 16 GB RAM

01:48:38.660 --> 01:48:40.660
So

01:48:40.660 --> 01:48:42.660
Aber gut, das ist, das ist vielleicht fairer

01:48:42.660 --> 01:48:44.660
Wenn man es dann mit denen vergleicht

01:48:44.660 --> 01:48:46.660
Die sind nämlich auch Shared

01:48:46.660 --> 01:48:48.660
Shared Medium

01:48:48.660 --> 01:48:51.660
Also 2, 2 V-CPUs, 4 GB RAM

01:48:51.660 --> 01:48:53.660
32 Euro, auch nicht viel billiger

01:48:53.660 --> 01:48:55.660
32 Euro

01:48:55.660 --> 01:48:58.660
Ja, also, man kriegt bei Google, kriegt man

01:48:58.660 --> 01:49:00.660
2 CPUs, 4 GB Memory

01:49:00.660 --> 01:49:02.660
Und bei Hetzner kriegt man quasi

01:49:02.660 --> 01:49:04.660
8 CPUs und 16 GB RAM

01:49:04.660 --> 01:49:06.660
Wo ist der Unterschied?

01:49:06.660 --> 01:49:07.660
Shared und Not Shared

01:49:07.660 --> 01:49:08.660
Ja, ob es exklusiv für dich ist

01:49:08.660 --> 01:49:09.660
Oder ob andere auch noch Zeit

01:49:09.660 --> 01:49:11.660
CPU-Zeit abbekommen

01:49:11.660 --> 01:49:15.800
Also das können dann beispielsweise

01:49:15.800 --> 01:49:16.800
Das könnte dann zum Beispiel

01:49:16.800 --> 01:49:18.800
Ein Vm-Cluster sein

01:49:18.800 --> 01:49:20.800
Wo halt

01:49:20.800 --> 01:49:21.800
Nicht nur

01:49:21.800 --> 01:49:22.800
Du drauf bist

01:49:22.800 --> 01:49:24.800
Sondern auch ein paar andere Leute

01:49:24.800 --> 01:49:33.620
Shared kann manchmal ein bisschen langsamer sein

01:49:33.620 --> 01:49:34.620
Ja

01:49:34.620 --> 01:49:35.620
Bei, bei, hier ist es so

01:49:35.620 --> 01:49:36.620
Du kannst, du kannst

01:49:36.620 --> 01:49:38.620
Wenn du kurzzeitig

01:49:38.620 --> 01:49:40.620
Wenn du kurzzeitig mehr brauchst

01:49:40.620 --> 01:49:42.620
Dann

01:49:42.620 --> 01:49:43.620
Es kann aber auch sein

01:49:43.620 --> 01:49:44.620
Dass ich jetzt sogar Mist erzähle

01:49:44.620 --> 01:49:45.620
Wie es ist

01:49:45.620 --> 01:49:46.620
Wenn du

01:49:46.620 --> 01:49:47.620
Oder halt, dass ich Mist erzähle

01:49:47.620 --> 01:49:48.620
Aber, aber ich, ich glaube

01:49:48.620 --> 01:49:49.620
Es ist, wenn du

01:49:49.620 --> 01:49:50.620
Wenn du kurzzeitig mehr brauchst

01:49:50.620 --> 01:49:53.620
Dann kriegst du für, glaube ich

01:49:53.620 --> 01:49:54.620
Bis zu 120 Sekunden

01:49:54.620 --> 01:49:56.620
Auch ein bisschen mehr Leistung

01:49:56.620 --> 01:49:57.620
So, das, das, das ja

01:49:57.620 --> 01:49:59.620
Also was ich, was ich euch zeigen wollte

01:49:59.620 --> 01:50:01.620
Vm's sind unsinnig teuer

01:50:01.620 --> 01:50:02.620
Über die Google Cloud

01:50:02.620 --> 01:50:05.620
Also einfach nur Vm's anlegen

01:50:05.620 --> 01:50:06.620
Würde ich da nicht

01:50:06.620 --> 01:50:07.620
Würde ich da nicht machen

01:50:07.620 --> 01:50:09.620
So

01:50:09.620 --> 01:50:11.620
Also wir erstellen jetzt mal eine Vm

01:50:11.620 --> 01:50:13.620
Resource

01:50:13.620 --> 01:50:14.620
Google

01:50:14.620 --> 01:50:15.620
Compute

01:50:15.620 --> 01:50:16.620
Nicht Computer

01:50:16.620 --> 01:50:18.620
Google Compute Instance

01:50:18.620 --> 01:50:19.620
Nennt sich das ganze

01:50:19.620 --> 01:50:20.620
Instance

01:50:20.620 --> 01:50:21.620
Name heißt

01:50:21.620 --> 01:50:22.620
Äh

01:50:22.620 --> 01:50:23.620
Jump Host oder sowas

01:50:23.620 --> 01:50:24.620
Jump

01:50:25.620 --> 01:50:26.620
Name

01:50:26.620 --> 01:50:27.620
Hallo

01:50:27.620 --> 01:50:28.620
What the

01:50:28.620 --> 01:50:29.620
Fuck

01:50:29.620 --> 01:50:31.620
Name

01:50:31.620 --> 01:50:32.620
Alles klar

01:50:32.620 --> 01:50:33.620
Name gibt es nicht

01:50:33.620 --> 01:50:34.620
Sehr gut

01:50:34.620 --> 01:50:35.620
Obwohl, obwohl ich weiß

01:50:35.620 --> 01:50:36.620
Dass es Name gibt

01:50:36.620 --> 01:50:37.620
An der Stelle

01:50:37.620 --> 01:50:38.620
Das Auto komplett ist

01:50:38.620 --> 01:50:39.620
Pega und Brocken

01:50:39.620 --> 01:50:47.050
Äh

01:50:47.050 --> 01:50:54.550
Was auch immer

01:50:54.550 --> 01:50:55.550
So

01:50:55.550 --> 01:50:56.550
Jetzt muss ich hier

01:50:56.550 --> 01:50:57.550
Maschinen Type angeben

01:50:57.550 --> 01:50:58.550
Maschinen Type ist das

01:50:58.550 --> 01:50:59.550
Was ich hier auswählen kann

01:50:59.550 --> 01:51:00.550
Und wir nehmen die kleinsten

01:51:00.550 --> 01:51:01.550
Dies gibt

01:51:01.550 --> 01:51:02.550
Als Jump Host

01:51:02.550 --> 01:51:03.550
Also was

01:51:03.550 --> 01:51:04.550
Was im Monat

01:51:04.550 --> 01:51:05.550
Nur noch

01:51:05.550 --> 01:51:06.550
8 Euro kostet

01:51:06.550 --> 01:51:07.550
Also wir wollen haben

01:51:07.550 --> 01:51:08.550
Etu

01:51:08.550 --> 01:51:09.550
Mikro

01:51:09.550 --> 01:51:10.550
Übrigens

01:51:10.550 --> 01:51:11.550
Ich bin der Meinung

01:51:11.550 --> 01:51:12.550
Die könnten das Auto

01:51:12.550 --> 01:51:13.550
Komplett viel viel besser machen

01:51:13.550 --> 01:51:14.550
In dem

01:51:14.550 --> 01:51:15.550
In der Terraform

01:51:15.550 --> 01:51:16.550
Visual Studio Code

01:51:16.550 --> 01:51:17.550
In der Internet

01:51:17.550 --> 01:51:18.550
In der Internet

01:51:18.550 --> 01:51:19.550
In der Internet

01:51:19.550 --> 01:51:20.950
Visual Studio Code Extension.

01:51:23.950 --> 01:51:25.190
Weil du kannst zum Beispiel hier

01:51:25.190 --> 01:51:27.130
nicht Auto-Compliten.

01:51:27.250 --> 01:51:28.550
Das wäre ja ohne Probleme möglich,

01:51:29.210 --> 01:51:31.210
was einzubauen, was du scannst

01:51:31.210 --> 01:51:32.790
für den Google-Provider.

01:51:34.050 --> 01:51:35.650
So, MachineType E2Micro,

01:51:35.710 --> 01:51:37.190
das ist die billigste 4M, die es gibt.

01:51:37.870 --> 01:51:39.370
Dann müssen wir noch eine Zone angeben,

01:51:39.490 --> 01:51:40.830
wo das Ganze erstellt werden soll.

01:51:40.830 --> 01:51:42.850
Zone ist bei uns Frankfurt.

01:51:44.110 --> 01:51:44.210
Also,

01:51:45.250 --> 01:51:46.810
Europe West 3

01:51:46.810 --> 01:51:48.690
minus A ist unsere Zone.

01:51:50.250 --> 01:51:50.930
Wir müssen

01:51:50.930 --> 01:51:52.690
eine Sache noch customizen, nämlich die

01:51:52.690 --> 01:51:53.230
Boot-Disk.

01:51:54.890 --> 01:51:57.050
Und zwar

01:51:57.050 --> 01:51:57.890
das Image.

01:51:59.030 --> 01:52:00.650
Warum kann ich nicht Enter drücken an der Stelle?

01:52:01.970 --> 01:52:02.910
Das Image ist

01:52:02.910 --> 01:52:04.790
Debian Cloud

01:52:04.790 --> 01:52:06.850
slash Debian 11.

01:52:07.250 --> 01:52:08.510
Also das, was wir eben auch

01:52:08.830 --> 01:52:10.510
nach übrigens Auto-Compliten

01:52:12.230 --> 01:52:12.530
wieder

01:52:12.530 --> 01:52:14.590
komplett procken, das automatisch formatieren.

01:52:15.170 --> 01:52:16.410
Wir wollen ein Debian 11

01:52:16.410 --> 01:52:16.950
drauf machen.

01:52:18.210 --> 01:52:20.310
Und wir brauchen ein Network-Interface,

01:52:20.750 --> 01:52:20.910
ein

01:52:20.910 --> 01:52:22.390
Network-Interface für die 4M.

01:52:23.210 --> 01:52:24.670
Da gehen wir an Network

01:52:24.670 --> 01:52:26.830
und an der Stelle im Prinzip

01:52:26.830 --> 01:52:29.190
unser Default-Network,

01:52:29.270 --> 01:52:30.450
was wir vorhin angelegt haben.

01:52:30.950 --> 01:52:32.990
Und die 4M soll seine IPs beziehen

01:52:32.990 --> 01:52:33.830
von

01:52:33.830 --> 01:52:36.890
vom internen Subnet.

01:52:37.350 --> 01:52:37.970
Also von

01:52:37.970 --> 01:52:39.390
10.0.0.

01:52:39.710 --> 01:52:42.270
10.0.0.0

01:52:42.270 --> 01:52:43.010
slash 24.

01:52:43.710 --> 01:52:44.530
Das ist ja das, was wir

01:52:44.530 --> 01:52:47.610
konnte man hier nicht eigentlich

01:52:47.610 --> 01:52:48.830
auch, nee Moment, ich hab was vergessen.

01:52:48.990 --> 01:52:50.410
Self-Link muss ich noch machen.

01:52:50.910 --> 01:52:54.130
Ja, hier, da, da kommt das her.

01:52:57.660 --> 01:52:57.780
So.

01:52:58.920 --> 01:53:01.300
Das war's. Eine Sache fügen wir aber noch ein.

01:53:02.860 --> 01:53:03.880
Sonst wird's nämlich eklig.

01:53:04.840 --> 01:53:06.120
Lifecycle ignore changes.

01:53:06.280 --> 01:53:07.520
Man kann Terraform sagen,

01:53:08.680 --> 01:53:09.880
dass es manche Änderungen,

01:53:09.880 --> 01:53:12.180
die außerhalb von Terraform passieren,

01:53:12.340 --> 01:53:13.140
ignorieren soll.

01:53:14.240 --> 01:53:15.960
Und ich finde es sinnvoll,

01:53:16.060 --> 01:53:18.100
wenn man die SSH-Keys nicht über Terraform

01:53:18.100 --> 01:53:18.900
selbst managt,

01:53:19.780 --> 01:53:21.880
diese zu ignorieren, weil, wenn ich mich

01:53:21.880 --> 01:53:23.520
sonst dort per SSH einlogge,

01:53:23.700 --> 01:53:26.620
und dann meckert Terraform das nächste

01:53:26.620 --> 01:53:28.640
Mal rum und sagt, oh, die SSH-Keys

01:53:28.640 --> 01:53:30.280
sind unterschiedlich, ah, ich möchte die

01:53:30.280 --> 01:53:32.460
4M jetzt bitte anpassen. Wollen wir nicht.

01:53:32.540 --> 01:53:34.660
SSH-Keys kann Terraform ignorieren.

01:53:34.740 --> 01:53:36.460
Aber die 4M soll sie tracken und sollen

01:53:36.460 --> 01:53:38.460
sie anlegen. So, und wenn ich das

01:53:38.460 --> 01:53:39.740
jetzt richtig gemacht habe,

01:53:40.540 --> 01:53:41.660
alles, dann

01:53:41.660 --> 01:53:43.140
apply,

01:53:44.180 --> 01:53:46.220
dann sollte Terraform jetzt vorschlagen,

01:53:46.340 --> 01:53:47.380
eine 4M anzulegen.

01:53:48.840 --> 01:53:49.320
Und

01:53:49.320 --> 01:53:52.560
ja, sieht gut aus.

01:53:52.680 --> 01:53:53.540
Network Interface,

01:53:53.540 --> 01:53:55.380
Bootdisk, neue Compute Resource

01:53:55.380 --> 01:53:57.500
und neue Firewall-Regeln

01:53:57.500 --> 01:53:59.500
für SSH, alles klar. Ja, Terraform

01:53:59.500 --> 01:54:01.580
legt es mal an. Und wenn ich alles richtig gemacht

01:54:01.580 --> 01:54:03.580
habe, dann hat

01:54:03.580 --> 01:54:05.540
Terraform gleich eine 4M

01:54:05.540 --> 01:54:06.420
erzeugt für mich.

01:54:07.460 --> 01:54:08.100
Da ist sie doch schon.

01:54:09.860 --> 01:54:10.980
Ja, Internal IP

01:54:10.980 --> 01:54:13.500
1002. Wir können auch

01:54:13.500 --> 01:54:15.140
gleich mal ausprobieren, ob wir da drauf kommen.

01:54:16.500 --> 01:54:17.240
Können wir ausprobieren.

01:54:17.340 --> 01:54:19.720
Sagen wir nämlich jetzt einfach Cloud Compute

01:54:19.720 --> 01:54:21.380
SSH, und zwar zur

01:54:21.380 --> 01:54:22.580
Jump, zu Jump.

01:54:23.540 --> 01:54:25.300
Und jetzt sagen wir Tunnel Through IAP.

01:54:29.590 --> 01:54:31.190
Braucht man, macht er eigentlich

01:54:31.190 --> 01:54:33.050
automatisch, braucht man aber dann,

01:54:33.670 --> 01:54:35.150
wenn die 4M selber

01:54:35.150 --> 01:54:37.470
keine Public IP hat.

01:54:38.130 --> 01:54:39.430
Ja, direktes SSH

01:54:39.430 --> 01:54:41.150
auf die 4M geht nur,

01:54:41.510 --> 01:54:43.550
wenn die 4M selbst eine Public IP hat.

01:54:43.650 --> 01:54:45.070
Hat sie nicht, sie hat nur eine Interne IP.

01:54:45.590 --> 01:54:46.790
Deswegen muss man das durch diesen,

01:54:47.110 --> 01:54:48.990
muss man sich SSH tunneln durch so einen

01:54:48.990 --> 01:54:51.390
extra Google Tunnel. So, mache ich

01:54:51.390 --> 01:54:51.910
das jetzt mal.

01:54:53.610 --> 01:54:55.030
Und jetzt generiert er mir

01:54:55.030 --> 01:54:56.830
erstmal SSH-Keys und

01:54:57.090 --> 01:54:59.050
überträgt diese SSH-Keys

01:54:59.050 --> 01:54:59.810
an die 4M.

01:55:00.830 --> 01:55:02.970
Deswegen habe ich auch, jetzt ergibt

01:55:02.970 --> 01:55:04.810
das auch Sinn, deswegen habe ich eben auch

01:55:04.810 --> 01:55:06.990
in Terraform gesagt, Terraform, ignorier mal bitte

01:55:06.990 --> 01:55:09.150
die SSH-Keys, sonst würde beim nächsten

01:55:09.150 --> 01:55:10.810
Apply Terraform jetzt sagen,

01:55:10.890 --> 01:55:13.110
oh nein, die SSH-Keys haben

01:55:13.110 --> 01:55:15.110
sich geändert. Jetzt ist ganz böse

01:55:15.110 --> 01:55:16.390
und das muss jetzt unbedingt

01:55:16.390 --> 01:55:17.730
überschrieben werden.

01:55:18.670 --> 01:55:20.990
Und ihr seht, ich bin auf meiner Cloud 4M

01:55:20.990 --> 01:55:22.630
drauf. Funktioniert auch.

01:55:23.270 --> 01:55:24.910
Update. Mein NAT

01:55:24.910 --> 01:55:26.850
funktioniert. NAT ist richtig eingerichtet.

01:55:26.850 --> 01:55:28.250
Schau mal, sehr gut, hat funktioniert.

01:55:29.910 --> 01:55:30.130
Jo.

01:55:32.930 --> 01:55:34.830
Jetzt habe ich eine 4M. Über die 4M

01:55:34.830 --> 01:55:36.770
kann ich mich jetzt in meine Google Cloud

01:55:36.770 --> 01:55:39.110
verbinden, weil ihr seht ja,

01:55:39.490 --> 01:55:40.710
Google Cloud technisch ist

01:55:40.710 --> 01:55:42.850
alles nicht aus dem

01:55:42.850 --> 01:55:44.830
Internet erreichbar. Das kann ich jetzt

01:55:44.830 --> 01:55:46.190
nur nochmal betonen.

01:55:46.490 --> 01:55:48.910
Da kommt man ja easy drauf. Ne, ne, man kommt nicht easy

01:55:48.910 --> 01:55:51.050
drauf. Das ist alles ein internes

01:55:51.050 --> 01:55:52.710
Netz, Private IP

01:55:52.710 --> 01:55:54.970
Range und nicht aus dem Internet

01:55:54.970 --> 01:55:55.550
erreichbar.

01:55:56.910 --> 01:55:58.910
Das heißt, auch wenn ich hier irgendwelche Security,

01:55:58.930 --> 01:56:00.770
problematische Security Sachen mache,

01:56:01.090 --> 01:56:02.890
ist jetzt erstmal nicht so schlimm, weil die

01:56:02.890 --> 01:56:04.430
Sachen sind aus dem Internet eh nicht erreichbar.

01:56:04.710 --> 01:56:06.790
Was nicht heißt, dass ich nicht bestimmte

01:56:06.790 --> 01:56:08.850
Services, ähm, ja,

01:56:09.030 --> 01:56:10.090
erreichbar machen

01:56:10.090 --> 01:56:15.140
könnte. Okay.

01:56:16.380 --> 01:56:17.100
Weiter geht's.

01:56:17.860 --> 01:56:19.460
Wir haben jetzt alles Wichtige angelegt.

01:56:19.660 --> 01:56:20.940
Also wir haben unsere Jump4Ms,

01:56:21.280 --> 01:56:22.500
wir haben unsere

01:56:22.500 --> 01:56:25.240
Netzwerke. Jetzt kommen

01:56:25.240 --> 01:56:26.880
wir mal zum Kubernetes Cluster.

01:56:29.610 --> 01:56:31.110
Und um den Kubernetes Cluster

01:56:31.110 --> 01:56:33.010
anzulegen, wir machen eine Sache nochmal zwischen

01:56:33.010 --> 01:56:34.950
durch. Da bin ich mir nicht ganz so sicher,

01:56:35.070 --> 01:56:36.930
warum man das braucht, aber in dem

01:56:36.930 --> 01:56:38.570
Tutorial stand das drin. Das heißt, ich

01:56:38.570 --> 01:56:40.670
vermute mal, das hat irgendeinen

01:56:40.670 --> 01:56:42.830
irgendeinen Sinn.

01:56:43.370 --> 01:56:45.290
Wie ich es immer im falschen Verzeichnis anlege.

01:56:47.550 --> 01:56:48.390
Und zwar, wir legen noch

01:56:48.390 --> 01:56:50.210
ein Service Account an für unser

01:56:50.210 --> 01:56:52.490
Kubernetes. Ich vermute

01:56:52.490 --> 01:56:54.310
mal, das ist später relevant,

01:56:54.890 --> 01:56:56.470
wenn ich in meinem Kubernetes Cluster

01:56:56.470 --> 01:56:58.510
auf Secrets zugreifen will und sowas.

01:56:59.310 --> 01:57:00.310
Oder um

01:57:00.310 --> 01:57:02.210
vielleicht von anderen Services

01:57:02.210 --> 01:57:04.030
auf meinen Kubernetes Cluster zuzugreifen.

01:57:04.390 --> 01:57:06.110
Ich bin mir nicht ganz sicher, wozu man das braucht.

01:57:06.830 --> 01:57:08.090
Ich habe es bis jetzt noch nicht gebraucht,

01:57:08.630 --> 01:57:09.630
aber ich vermute mal,

01:57:10.510 --> 01:57:12.190
es hat seinen Sinn, dass sie das im Tutorial auch

01:57:12.190 --> 01:57:12.650
gemacht haben.

01:57:14.550 --> 01:57:16.190
Und jetzt kommen wir zu unserem Kubernetes

01:57:16.190 --> 01:57:18.330
Cluster. Ich Terraform applye

01:57:18.330 --> 01:57:20.450
nochmal, dass wir hier up to date

01:57:20.450 --> 01:57:20.750
sind.

01:57:27.840 --> 01:57:28.820
Ja, yes,

01:57:29.020 --> 01:57:30.740
alles gut, das wird klappen. So,

01:57:30.860 --> 01:57:32.980
jetzt kommen wir zur eigentlichen Sache, die wir machen wollen,

01:57:33.080 --> 01:57:34.900
nämlich unser Kubernetes Cluster anlegen

01:57:34.900 --> 01:57:36.980
in der Google Cloud. Dazu

01:57:36.980 --> 01:57:39.000
legen wir auch wieder Terraform an. Terraform

01:57:39.000 --> 01:57:40.740
File an 7 minus

01:57:40.740 --> 01:57:42.660
Kubernetes Cluster

01:57:42.660 --> 01:57:44.960
.tf. Und das ist

01:57:44.960 --> 01:57:46.980
jetzt in der Tat etwas trickreicher,

01:57:47.100 --> 01:57:48.840
wie das funktioniert mit einem Kubernetes Cluster.

01:57:49.080 --> 01:57:50.660
Und zwar, das erste, was man machen muss, natürlich,

01:57:51.160 --> 01:57:52.340
man muss eine Ressource anlegen.

01:57:52.860 --> 01:57:54.460
Google Container

01:57:54.460 --> 01:57:56.000
nennt sich das, Cluster.

01:57:56.520 --> 01:57:58.660
Nicht Kubernetes, nein, Google

01:57:58.660 --> 01:58:01.100
Container Cluster.

01:58:02.260 --> 01:58:02.700
Dem kann man

01:58:02.700 --> 01:58:04.840
einen Namen geben und in dem Tutorial, was ich geguckt

01:58:04.840 --> 01:58:07.020
habe, haben sie ihn Primary

01:58:07.020 --> 01:58:08.880
genannt, was ich eigentlich ganz sinnvoll finde, weil

01:58:08.880 --> 01:58:17.300
das der einzige Kubernetes Cluster ist, den wir anlegen. Man könnte ihn auch Cluster oder wie

01:58:17.300 --> 01:58:26.790
auch immer nennen. So, name, gleiche wie gehabt. Location und da ist es jetzt wichtig, dass wir

01:58:26.790 --> 01:58:39.050
sagen location.zone. Ansonsten braucht er nämlich viel zu viel Disk Space. Wenn ich hier sagen würde

01:58:39.050 --> 01:58:44.250
location.region, dann würde er, also wenn ich jetzt region angebe anstatt zone, dann würde das

01:58:44.250 --> 01:58:49.310
replizieren dreimal alles. Und dann bin ich an meinem Storage Quota. Also wir haben nur einen

01:58:49.310 --> 01:58:55.290
Single Location Cluster. Ist nicht sonderlich hoch verfügbar. Gut, aber für die Demo jetzt egal.

01:58:55.290 --> 01:59:01.670
Nächste Sache, die auch wichtig ist, removeDefaultNodePool. Das müssen wir auf true setzen.

01:59:01.670 --> 01:59:08.850
Und true 0w und den InitialNodeCount. Alter, was ist denn mit dem? Warum ist diese

01:59:08.850 --> 01:59:08.870
Echtzeit? Warum ist diese Echtzeit? Warum ist diese Echtzeit? Warum ist diese Echtzeit? Warum ist

01:59:08.870 --> 01:59:09.030
diese Echtzeit? Warum ist diese Echtzeit? Warum ist diese Echtzeit? Warum ist diese

01:59:09.030 --> 01:59:17.610
Extension so kacke? Auf 1. Was das macht, ist normalerweise, wenn ein Google

01:59:17.610 --> 01:59:22.870
Kubernetes Cluster, Google Kubernetes Engine Cluster erzeugt wird, bringt er einen Standard

01:59:22.870 --> 01:59:30.450
NodePool mit. Das wollen wir nicht. Wir wollen einen extra NodePool anlegen, weil es könnte

01:59:30.450 --> 01:59:35.190
ja sein, dass wir unterschiedliche Workloads für den Cluster haben. Dass wir zum Beispiel

01:59:35.190 --> 01:59:40.230
Workloads haben, die besonders starke Kubernetes Nodes brauchen und welche

01:59:40.230 --> 01:59:48.850
die mit weniger starken Kubernetes Nodes auskommen. Das spart Kosten. Also ich kann natürlich überall

01:59:48.850 --> 01:59:54.550
die fettesten Kubernetes Nodes hinstellen, aber das kostet halt. Wenn ich sage, hey,

01:59:54.550 --> 01:59:59.790
wir machen einfach NodePools, einmal ein NodePool mit BilligNodes und einmal ein NodePool mit

01:59:59.790 --> 02:00:03.930
HighPerformanceNodes, dann kann ich mir Geld sparen. Ich kann natürlich auch alles mit

02:00:03.930 --> 02:00:08.190
HighPerformanceNodes aufbauen, aber es ist wahrscheinlich gar nicht notwendig. Das heißt,

02:00:08.190 --> 02:00:09.510
wir löschen den HighPerformanceNodeCount. Das heißt, wir löschen den HighPerformanceNodeCount.

02:00:09.510 --> 02:00:10.030
Das heißt, wir löschen den HighPerformanceNodeCount. Das heißt, wir löschen den

02:00:10.030 --> 02:00:18.010
initial angelegten Pool für Nodes in diesem Cluster und legen gleich selbst von Hand noch

02:00:18.010 --> 02:00:24.730
einen NodePool an. Nodes sind bei Kubernetes im Prinzip ja die Teile, aus denen sich der

02:00:24.730 --> 02:00:30.850
Kubernetes Cluster zusammensetzt. Ein Kubernetes Cluster besteht aus mehreren Nodes. Auf jedem

02:00:30.850 --> 02:00:36.670
Node läuft dann das ganze Kubernetes Zeug immer. Also nicht die Container mit der Anwendung,

02:00:36.670 --> 02:00:39.910
sondern das ganze Kubernetes Management Zeug läuft auf jedem Node.

02:00:40.030 --> 02:00:48.310
So, also erstmal alles weg. Jetzt müssen wir dem Ding natürlich noch sagen, welches Netzwerk soll

02:00:48.310 --> 02:00:54.670
das denn benutzen und da wollen wir unser Default Network, falls es hier irgendwo steht. Network

02:00:54.670 --> 02:00:59.170
Default. Dann muss man dem Ding noch sagen, welches Subnetwork es benutzen soll und das

02:00:59.170 --> 02:01:06.700
soll unser Default Subnetwork benutzen. Logging, Monitoring lassen wir aus. Es gibt noch eine

02:01:06.700 --> 02:01:11.180
wichtige Sache, Networking Mode und da sollten wir reinschreiben. Wir können ja mal gucken, was alles.

02:01:11.340 --> 02:01:18.840
Ah super, gibt keine Hilfe, gibt keine Hilfe. Wir wollen VPC Native haben. Es gibt die Möglichkeit,

02:01:18.840 --> 02:01:24.840
dass die IPs geroutet werden aus dem Kubernetes Cluster oder das IP-Aliasing benutzt wird.

02:01:24.840 --> 02:01:33.660
IP-Aliasing ist grob gesagt auf einem Netzwerk Interface mehrere IPs und Routing ist Routing.

02:01:33.660 --> 02:01:40.180
Anderes Netz über den Gateway und IP-Aliasing ist

02:01:41.340 --> 02:01:50.630
glaube ich schneller und einfacher. Jetzt können wir noch ein paar andere Sachen machen. Wir könnten

02:01:50.630 --> 02:01:56.450
zum Beispiel noch den Standard Ingress Controller löschen und sowas. Das lassen wir uns, sparen wir

02:01:56.450 --> 02:01:59.630
uns jetzt aber alles, weil so viel Kubernetes Config machen wir heute nicht. Wir legen den

02:01:59.630 --> 02:02:04.610
Cluster an, reproduzierbar. So, jetzt ist noch eine weitere wichtige Sache. Wir müssen ihm sagen,

02:02:04.610 --> 02:02:13.070
was für Kubernetes soll denn da eigentlich drauf? Und es gibt die Auswahl zwischen Stable, Regular

02:02:13.070 --> 02:02:13.570
und

02:02:14.570 --> 02:02:23.250
Rapid, genau. So, da kann man mehrere, da gibt es verschiedene Release Cycles. Wenn ich sage Stable,

02:02:23.250 --> 02:02:29.890
gibt es alle paar Monate Upgrades. Wenn ich sage Regular, gibt es mehrfach im Monat Upgrades und

02:02:29.890 --> 02:02:35.930
wenn ich Rapid sage, kriege ich Kubernetes Upgrades wöchentlich. Also, wenn ich immer eine super

02:02:35.930 --> 02:02:41.390
aktuelle Kubernetes Version haben möchte, dann nehme ich Rapid, ansonsten nehme ich Regular.

02:02:41.390 --> 02:02:42.230
Wir nehmen jetzt Regular.

02:02:42.230 --> 02:02:44.270
Regular.

02:02:44.570 --> 02:02:48.890
Das ist tatsächlich eine wichtige Geschichte und ich habe gesehen, bei uns auf der Arbeit,

02:02:48.890 --> 02:02:52.730
habe ich schon einen Fehler entdeckt oder ich vermute, dass es ein Fehler ist. Ich habe gesehen,

02:02:52.730 --> 02:02:58.510
dass die irgendwo hardcoded in ihr Terraform Kubernetes Versionen reingeschrieben haben.

02:02:58.510 --> 02:03:09.920
Das wird über kurz oder lang zu Problemen führen, weil die Cluster geupdatet werden und Terraform

02:03:09.920 --> 02:03:16.100
dann eine andere Version sieht, als bei ihm im State steht. Also, das wird, es wird noch Probleme geben.

02:03:16.460 --> 02:03:20.400
Muss ich ja gleich mal morgen gucken, ob das wirklich so ist oder ob das nur für mich so ausgesehen hat.

02:03:20.400 --> 02:03:29.360
Rapid ist aber nicht Unstable. So wie ich das verstehe nicht. Ich gehe davon aus, es sind nur

02:03:29.360 --> 02:03:35.340
normale Kubernetes Releases, aber halt schnell, nachdem sie rausgekommen sind. Und da buggt ja

02:03:35.340 --> 02:03:46.060
auch ganz gerne mal was. Also, wenn du nicht neue Features brauchst, kannst du durchaus auch auf

02:03:46.060 --> 02:03:52.140
Stable gehen. Also, es sind keine Beta Releases, sondern es geht einzig und allein, wie oft wird geupdatet.

02:03:52.140 --> 02:03:52.640
Also, es sind keine Beta Releases, sondern es geht einzig und allein, wie oft wird geupdatet. Also, es sind keine Beta Releases, sondern es geht einzig und allein, wie oft wird geupdatet.

02:03:53.020 --> 02:03:53.520
Also, es sind keine Beta Releases, sondern es geht einzig und allein, wie oft wird geupdatet.

02:03:53.520 --> 02:04:02.160
Und Kubernetes Versionen kommen ja relativ oft raus. Wir können sonst, erinnere mich mal dran, wir können im Web Interface später gucken, was zur Auswahl steht.

02:04:02.160 --> 02:04:06.670
Oder wir können auch so bei Google gucken.

02:04:06.670 --> 02:04:12.670
So, also wir gehen mit Regular, ganz normal, ganz normale. Update Intervall wollen wir haben.

02:04:12.670 --> 02:04:18.670
So, und jetzt muss man sagen, jetzt wird es super weird champig, was man einstellen muss.

02:04:18.670 --> 02:04:25.790
Man muss eine IP Allocation Policy einstellen. Das ist, aus welchen IP Ranges,

02:04:25.790 --> 02:04:33.790
Kubernetes, also die Services auf dem Kubernetes Cluster selbst, IPs beziehen sollen.

02:04:33.790 --> 02:04:41.790
Und aus welcher IP Range die Pods, also die Container, die auf dem Kubernetes Cluster laufen, ihre IPs beziehen sollen.

02:04:41.790 --> 02:04:47.790
Und das bekommen wir hier her. Guck mal, bei unserem Netzwerk haben wir doch das hier angelegt.

02:04:47.790 --> 02:04:54.790
K8S Services, K8S Pods. Das brauchen wir an der Stelle jetzt. Also, IP Allocation Policy.

02:04:54.790 --> 02:05:00.790
Man kann, ach guck mal, man kann das auch so direkt zuordnen. Das ist vielleicht auch nicht schlecht.

02:05:00.790 --> 02:05:16.710
Ah, nice. Also man kann hier sagen, okay, Services, Cluster Secondary IP Range Name.

02:05:16.710 --> 02:05:22.710
Das ist das, was wir dort angegeben haben. Cluster Secondary IP Name.

02:05:22.710 --> 02:05:28.710
Und entweder können wir jetzt da reinschreiben, K8S Pods.

02:05:28.710 --> 02:05:38.710
Und K8S Services, das ist übrigens Secondary Services, Secondary Range Name.

02:05:38.710 --> 02:05:44.210
Dass er weiß, wo er seine IPs herbeziehen soll.

02:05:44.210 --> 02:05:50.210
Ich vermute mal, man kann hier auch das irgendwie linken, indem man sagt, das muss ich jetzt mal ausprobieren, indem man sagt,

02:05:50.210 --> 02:05:59.780
Network, nee, Google Subnets Internal Secondary IP Range.

02:05:59.780 --> 02:06:00.780
Google Subnets Internal Secondary IP Range.

02:06:00.780 --> 02:06:01.780
Google Subnets Internal Secondary IP Range.

02:06:01.780 --> 02:06:07.780
Kann man da mehrere angeben? Hier, Secondary IP Range Name.

02:06:07.780 --> 02:06:16.690
Nee.

02:06:16.690 --> 02:06:20.690
Okay, da bräuchte ich jetzt irgendeinen Terraform-Experten, der weiß, wie das funktioniert.

02:06:20.690 --> 02:06:25.220
Ich weiß nicht, ob man da sowas angeben kann.

02:06:25.220 --> 02:06:28.220
Aber wenn man den Namen braucht, ist der eh blöd.

02:06:28.220 --> 02:06:31.980
Na gut.

02:06:31.980 --> 02:06:34.980
Wir schreiben es so rein, da weiß ich, dass es funktioniert.

02:06:34.980 --> 02:06:37.980
So, also, das ist das Wichtigste hier.

02:06:37.980 --> 02:06:41.980
Die Container, die ich auf dem komponiertes Cluster starte, die ziehen ihre IPs

02:06:41.980 --> 02:06:44.980
aus dieser IP Range.

02:06:44.980 --> 02:06:46.980
Intern.

02:06:46.980 --> 02:06:50.980
Also, da bekommen die eine zugewiesen, wenn sie gestartet sind.

02:06:50.980 --> 02:06:53.980
Beziehungsweise, wenn sie gestartet werden.

02:06:53.980 --> 02:06:55.980
Das Wichtigste, das muss man machen.

02:06:55.980 --> 02:07:01.980
Und jetzt noch eine wichtige Config für alle Cluster, die nicht öffentlich im Internet verfügbar sein sollen.

02:07:01.980 --> 02:07:05.980
Man muss als erstes einstellen, Enable Private Nodes.

02:07:05.980 --> 02:07:09.980
Und dann muss man einstellen, Enable...

02:07:09.980 --> 02:07:11.980
Geist, Alter.

02:07:11.980 --> 02:07:12.980
Enable Private Endpoint.

02:07:12.980 --> 02:07:14.980
Die zwei Sachen muss man machen.

02:07:14.980 --> 02:07:20.980
Und wenn man das gemacht hat, noch mal weirdchampiger, muss man noch mal eine extra IP Range angeben.

02:07:20.980 --> 02:07:24.980
Für die Managed Kubernetes Cluster Seite von Google.

02:07:24.980 --> 02:07:28.980
Und das nennt sich Master IPv4 Sidre Block.

02:07:28.980 --> 02:07:30.980
Weil, fragt mich nicht.

02:07:30.980 --> 02:07:33.980
Und dann nehme ich das, was Google in seinem Beispiel hingeschrieben hat.

02:07:33.980 --> 02:07:35.980
Das hat nichts mit meinen IPs zu tun.

02:07:35.980 --> 02:07:37.980
Das ist die IP Range.

02:07:37.980 --> 02:07:40.980
Das ist die Managed Kubernetes Service von Google.

02:07:40.980 --> 02:07:42.980
Was die dafür nehmen soll.

02:07:42.980 --> 02:07:44.980
Das ist nicht, worum ich mich kümmern muss.

02:07:44.980 --> 02:07:46.980
Aber ich kann es trotzdem aussuchen.

02:07:46.980 --> 02:07:49.980
Weil ich mich vielleicht zu irgendeiner API oder so connecten will.

02:07:49.980 --> 02:07:53.360
Aus diesem Bereich.

02:07:53.360 --> 02:07:57.360
Das ist übrigens die offizielle Range, die Google vorschlägt, dass man die dafür nimmt.

02:07:57.360 --> 02:08:07.280
Es muss Slash 28 sein, was anderes ist nicht erlaubt.

02:08:07.280 --> 02:08:09.280
Genau, und am Ende kopiere ich mir noch was raus.

02:08:09.280 --> 02:08:11.280
Am Ende gibt es noch eine Config.

02:08:11.280 --> 02:08:14.280
Welche internen Netze alles auf meinen Kubernetes Cluster zugreifen dürfen.

02:08:14.280 --> 02:08:15.280
So.

02:08:15.280 --> 02:08:16.280
Who cares?

02:08:16.280 --> 02:08:17.280
Wurscht.

02:08:17.280 --> 02:08:18.280
Next.

02:08:18.280 --> 02:08:19.280
So.

02:08:19.280 --> 02:08:20.280
Wir haben den Default Pool gelöscht.

02:08:20.280 --> 02:08:21.280
Da.

02:08:21.280 --> 02:08:22.280
Guckt hier.

02:08:22.280 --> 02:08:23.280
Remove Default Node Pool.

02:08:23.280 --> 02:08:24.280
Wobei.

02:08:24.280 --> 02:08:26.280
Wir können den Kubernetes Cluster jetzt eigentlich erstmal anlegen lassen.

02:08:26.280 --> 02:08:27.280
Apply.

02:08:27.280 --> 02:08:28.280
Ich hoffe das geht ohne Pool.

02:08:28.280 --> 02:08:33.280
Und ich warne euch jetzt schon mal, das kann durchaus 4-5 Minuten dauern.

02:08:33.280 --> 02:08:38.280
Das ist mega langsam Kubernetes Cluster zu professionieren in Google Cloud.

02:08:38.280 --> 02:08:45.100
Allerdings in allen anderen Cloud Plattformen ist es ähnlich langsam, wenn nicht sogar noch

02:08:45.100 --> 02:08:46.100
langsamer.

02:08:46.100 --> 02:08:50.100
Wir checken mal, ob wir alles richtig gemacht haben.

02:08:50.100 --> 02:08:51.100
Nein.

02:08:51.100 --> 02:08:52.100
Haben wir nicht.

02:08:52.100 --> 02:08:53.100
Oh ne.

02:08:53.100 --> 02:08:54.100
So.

02:08:54.100 --> 02:08:55.100
This is secondary IP Range.

02:08:55.100 --> 02:08:56.100
Ja.

02:08:56.100 --> 02:08:57.100
Kaum macht man es richtig.

02:08:57.100 --> 02:08:58.100
Ja.

02:08:58.100 --> 02:08:59.100
Kaum macht man es richtig, dann wird es auch funktionieren.

02:08:59.100 --> 02:09:00.100
Sag mal, ich habe es früher falsch gemacht.

02:09:00.100 --> 02:09:14.320
Wie beschissen ist diese Visual Studio Code Extension eigentlich?

02:09:14.320 --> 02:09:15.320
Jetzt weiß ich auch, warum die nur 2,5 Sterne von 5 hat.

02:09:15.320 --> 02:09:16.320
Oder nur 2 von 5 Sterne.

02:09:16.320 --> 02:09:17.320
Weil die einfach suckt.

02:09:17.320 --> 02:09:18.320
Ich weiß nicht.

02:09:18.320 --> 02:09:19.320
Ich weiß nicht.

02:09:19.320 --> 02:09:20.320
Ich weiß nicht.

02:09:20.320 --> 02:09:21.320
Ich weiß nicht.

02:09:21.320 --> 02:09:22.320
Ich weiß nicht.

02:09:22.320 --> 02:09:23.320
Ich weiß nicht.

02:09:23.320 --> 02:09:24.320
Ich weiß nicht.

02:09:24.320 --> 02:09:25.320
Ich weiß nicht.

02:09:25.320 --> 02:09:26.320
Ich weiß nicht.

02:09:26.320 --> 02:09:27.320
Ich weiß nicht.

02:09:27.320 --> 02:09:28.320
Ich weiß nicht.

02:09:28.320 --> 02:09:29.320
Ich weiß nicht.

02:09:29.320 --> 02:09:30.320
Ich weiß nicht.

02:09:30.320 --> 02:09:31.320
Ich weiß nicht.

02:09:31.320 --> 02:09:32.320
Oh, was habe ich verkehrt gemacht?

02:09:32.320 --> 02:09:33.320
Null.

02:09:33.320 --> 02:09:35.940
Ok, Primary Network Default Cluster.

02:09:35.940 --> 02:09:38.940
Ah, das habe ich falsch gemacht.

02:09:38.940 --> 02:09:42.320
Ah ja, Self-Link, weil Google Logik Self-Link.

02:09:42.320 --> 02:09:46.610
Das sieht schon besser aus.

02:09:46.610 --> 02:09:50.540
So, und dann jetzt Glück haben.

02:09:50.540 --> 02:09:53.440
Schlägt der mir vor, ein Kubernetes Cluster anzulegen?

02:09:53.440 --> 02:09:58.380
Hier war der End Point, so.

02:09:58.380 --> 02:10:01.820
Yes, und wie gesagt, Warnung, das nicht wundern.

02:10:01.820 --> 02:10:04.900
Es dauert 4-5 Minuten oftmals, bis das Ganze erstellt ist.

02:10:04.900 --> 02:10:09.060
Also nicht wundern, nicht zwischendurch abbrechen, das dauert einfach eine Weile.

02:10:09.540 --> 02:10:14.900
Man kann dem ganzen Treiben im Webinterface zugucken, zumindest nach einer gewissen Weile.

02:10:15.320 --> 02:10:19.380
Wenn wir in die Google Kubernetes Engine gehen, sieht man, okay, der Cluster ist schon da,

02:10:19.920 --> 02:10:23.520
aber er ist noch am Professionieren und Node Numbers 1 stimmt auch nicht.

02:10:23.520 --> 02:10:25.880
Das sind die initialen Nodes, die dann wieder gelöscht werden.

02:10:26.720 --> 02:10:31.520
Bei der Gelegenheit würde ich euch empfehlen, werft mal einen Blick auf...

02:10:31.520 --> 02:10:43.140
Alter, ich habe keine Push-Notification gekriegt.

02:10:43.520 --> 02:10:46.480
Ich soll doch bitte Firmware-Update auf meinem Katzenbrunnen machen.

02:10:46.580 --> 02:10:49.440
Dafür kriege ich Push-Notifications. Alter, geht mir nicht auf den Sack.

02:10:50.840 --> 02:11:03.090
Das wird gleich ignored.

02:11:04.930 --> 02:11:07.550
Und jetzt kommt noch der Weekly Cleaning Reminder.

02:11:07.550 --> 02:11:20.130
Na gut, jetzt habe ich ganz vergessen, was ich sagen wollte, Leute.

02:11:23.720 --> 02:11:26.820
Ja, das kann ein bisschen dauern, bis der Kubernetes Cluster angelegt ist.

02:11:27.160 --> 02:11:28.740
Ja, aber wir sollten mal auf Billing gehen.

02:11:29.420 --> 02:11:32.500
Und wir gucken uns die Quotas an.

02:11:35.980 --> 02:11:44.920
Und da wird man gleich sehen, das dauert ein bisschen, bis das aktualisiert ist.

02:11:45.600 --> 02:11:49.840
Und da wird man gleich sehen, dass der Speicherplatz verbraucht.

02:11:50.620 --> 02:11:53.100
Das dauert manchmal ein bisschen, bis die Quotas aktualisiert sind.

02:11:54.000 --> 02:11:55.820
Gehen wir mal hier, Total SSD.

02:11:57.900 --> 02:11:59.560
Ist das das Richtige?

02:11:59.560 --> 02:12:02.600
Ne, das ist nicht das Falsche.

02:12:03.740 --> 02:12:04.260
SSD.

02:12:04.380 --> 02:12:06.200
Hier, SSD.

02:12:08.280 --> 02:12:09.820
SSD Total Storage.

02:12:10.640 --> 02:12:13.040
Ja, da habe ich ein Limit von 250 Gig.

02:12:13.780 --> 02:12:17.720
Und mein Kubernetes Cluster wird ein bisschen was brauchen.

02:12:22.860 --> 02:12:24.820
Das braucht aber ein bisschen, bis das aktualisiert ist.

02:12:24.900 --> 02:12:25.560
Manchmal nicht so schnell.

02:12:37.500 --> 02:12:37.680
So.

02:12:42.690 --> 02:12:46.410
Irgendwann sollte der Kubernetes Cluster fertig angelegt sein.

02:12:49.300 --> 02:12:50.540
Wie gesagt, das dauert ein bisschen.

02:12:52.220 --> 02:12:52.340
So.

02:12:52.640 --> 02:12:54.540
Und irgendwann aktualisiert jetzt auch das Quota.

02:12:54.540 --> 02:12:54.580
Ja.

02:12:59.120 --> 02:13:01.480
Und dann wird er wieder angezeigt, dass er irgendwie 100 Gig oder so verbraucht hat.

02:13:01.600 --> 02:13:02.100
Oder was auch immer.

02:13:02.400 --> 02:13:02.720
Ne, Moment.

02:13:02.800 --> 02:13:06.840
Der sollte mir gar nichts anzeigen, weil ich ja alle Nodes wieder lösche.

02:13:07.460 --> 02:13:07.680
Null.

02:13:08.000 --> 02:13:09.740
Ne, aktuell ist es sogar gut, dass da Null steht.

02:13:12.280 --> 02:13:12.680
Ja.

02:13:13.640 --> 02:13:15.220
Weil der löscht ja wieder alle Nodes.

02:13:15.300 --> 02:13:19.060
Da dürfte nur, wenn überhaupt, kurz zwischenzeitlich mal 100 stehen.

02:13:19.140 --> 02:13:20.120
Guck hier, jetzt steht 100 da.

02:13:23.560 --> 02:13:24.600
Current Usage 100.

02:13:27.950 --> 02:13:32.090
Weil standardmäßig ein Kubernetes Cluster, wenn man nichts explizit angibt,

02:13:32.090 --> 02:13:34.090
ein Node 100 Gigabyte SSD speichert.

02:13:34.370 --> 02:13:39.050
Der sollte der aber auch gleich wieder löschen, weil ich habe ihm ja gesagt,

02:13:39.150 --> 02:13:42.690
hier, Delete, also Remove Default Node Pool.

02:13:43.310 --> 02:13:43.430
So.

02:13:43.530 --> 02:13:45.590
Während er anlegt, wir können ja eigentlich schon mal weitermachen

02:13:45.590 --> 02:13:47.030
und wir können unseren Node Pool anlegen.

02:13:49.120 --> 02:13:56.360
Nennen wir mal K8S Node Pool, Node Pool Punkt PF.

02:13:57.260 --> 02:13:57.420
So.

02:13:57.720 --> 02:14:02.020
Und da stellen wir jetzt ein, die ganzen Nodes von unserem Cluster.

02:14:02.020 --> 02:14:05.660
Wie gesagt, ein Kubernetes Cluster besteht aus unterschiedlich vielen.

02:14:05.680 --> 02:14:12.140
Die Nodes müssen nicht zwangsläufig alle die gleiche Hardware sein.

02:14:12.540 --> 02:14:15.380
Das macht man ganz gerne mal, vor allem, wenn man das selbst aufbaut.

02:14:15.520 --> 02:14:19.020
Aber ein Kubernetes Cluster kann aus unterschiedlichen Nodes bestehen.

02:14:19.720 --> 02:14:24.280
Was eventuell auch ganz sinnvoll ist, wenn ihr zum Beispiel ein paar Anwendungen habt,

02:14:24.400 --> 02:14:29.680
die viel Performance brauchen und ein paar sporadische Tasten und ein paar Low Performance Anwendungen,

02:14:29.680 --> 02:14:34.680
wo man zum Beispiel auch damit leben kann, dass...

02:14:35.680 --> 02:14:39.060
die erstmal eine Weile brauchen, bis sie starten und sowas in der Richtung.

02:14:39.140 --> 02:14:41.140
Da kann man mehrere Node Pools machen.

02:14:41.580 --> 02:14:44.640
Da muss man aber halt sagen, worauf was professioniert werden soll.

02:14:45.000 --> 02:14:47.080
Das heißt, wir legen heute nur einen Default Node Pool an.

02:14:47.160 --> 02:14:50.940
Und ich behaupte mal, das ist standardmäßig auch zum größten Teil so.

02:14:51.100 --> 02:14:53.820
Ja, dass es ein Cluster gibt und ein Node Pool gibt.

02:14:54.300 --> 02:15:00.720
Aber es ist tatsächlich ganz praktisch, dass ich den Node Pool unabhängig einstellen kann vom Cluster.

02:15:01.480 --> 02:15:04.620
Nämlich zum Beispiel kann ich ihn auch kleiner einstellen, als ich will.

02:15:04.800 --> 02:15:05.640
Und dementsprechend...

02:15:05.640 --> 02:15:06.280
kann ich ihm Geld sparen.

02:15:06.520 --> 02:15:07.860
Also, mal mal Resource.

02:15:09.240 --> 02:15:11.880
Google Container Node Pool.

02:15:15.340 --> 02:15:15.900
Heißt...

02:15:15.900 --> 02:15:17.180
Wie habe ich den Cluster genannt?

02:15:18.300 --> 02:15:23.560
Primary Pool oder wie soll ich das Ding nennen?

02:15:27.850 --> 02:15:29.750
Pool. Ich nenne es einfach Pool. Fertig.

02:15:33.860 --> 02:15:36.980
So, das Ding kriegt wieder einen Namen.

02:15:37.620 --> 02:15:42.830
Dann muss man natürlich sagen, für welchen Cluster der Pool ist.

02:15:43.930 --> 02:15:46.150
Für unseren Primary Kubernetes Cluster.

02:15:47.030 --> 02:15:51.530
Wir sind mal großzügig und sagen Node Count 3.

02:15:52.030 --> 02:15:53.810
Das funktioniert so standardmäßig nicht.

02:15:53.910 --> 02:15:56.170
Wie gesagt, ich habe zu wenig Festplattenplatz.

02:15:56.310 --> 02:15:58.090
Ihr seht, fünf Minuten, das Ding ist immer noch nicht angelegt.

02:15:58.850 --> 02:16:00.050
Ich habe zu wenig Festplattenplatz.

02:16:00.530 --> 02:16:04.850
Deswegen muss ich jetzt noch eine Node Config angeben.

02:16:05.590 --> 02:16:08.930
Und zwar unter anderem Disk Size Gigabyte.

02:16:09.010 --> 02:16:09.630
Da machen wir 40.

02:16:10.030 --> 02:16:12.590
Das heißt, er legt drei Nodes an.

02:16:12.590 --> 02:16:14.530
Mit jeweils 40 Gigabyte SSD Platz.

02:16:14.690 --> 02:16:18.450
Heißt im Endeffekt 120G SSD Speicher.

02:16:19.210 --> 02:16:22.370
Das passt ohne Probleme in meinen Quota rein.

02:16:22.470 --> 02:16:22.990
Gar kein Ding.

02:16:25.100 --> 02:16:28.260
So, jetzt können wir noch ein paar andere Sachen angeben.

02:16:31.480 --> 02:16:35.280
Nämlich, dass das Ding sich Auto-Upgraden soll und automatisch reparieren soll.

02:16:35.340 --> 02:16:36.360
Habe ich auch aus dem Tutorial.

02:16:36.480 --> 02:16:38.840
Keine Ahnung, was es genau macht.

02:16:39.720 --> 02:16:43.240
Aber automatisches Reparieren und nachts nicht angerufen werden,

02:16:43.300 --> 02:16:45.120
ist prinzipiell schon mal ganz nice.

02:16:46.620 --> 02:16:52.580
Service-Account können wir angeben in der Node Config muss man das, glaube ich, machen.

02:16:52.660 --> 02:16:57.480
Service-Account können wir den Kubernetes-Account angeben,

02:16:57.560 --> 02:16:59.460
den wir vorhin angelegt haben.

02:16:59.560 --> 02:17:04.510
So, Machine-Type für die Nodes.

02:17:04.610 --> 02:17:05.890
Wir wollen es möglichst billig haben.

02:17:05.990 --> 02:17:10.130
E2-Small, das ist das, was irgendwie 15 Euro oder so im Monat kostet.

02:17:10.230 --> 02:17:20.340
Also im Prinzip kostet uns das gesamte Setup irgendwas um 70 Euro im Monat oder so.

02:17:20.520 --> 02:17:24.580
Also da sieht man, so ein Managed-Kubernetes-Cluster bei dem großen Cloud-Anbieter

02:17:24.680 --> 02:17:27.280
muss nicht zwangsläufig günstig sein.

02:17:27.380 --> 02:17:31.720
Ich würde mal sagen, so ungefähr 70 Euro im Monat wird uns der ganze Spaß kosten.

02:17:31.820 --> 02:17:36.880
Ohne jetzt großartig Storage-Preise und Traffic-Preise und sowas dabei.

02:17:36.980 --> 02:17:38.580
Also das kann schon recht teuer werden.

02:17:38.680 --> 02:17:41.180
Also wer auf die Idee kommt, Cloud ist immer billiger,

02:17:41.280 --> 02:17:43.620
würde ich so pauschal nicht unterschreiben.

02:17:43.720 --> 02:17:51.870
So, und noch was aus dem Tutorial, wo ich auch nicht weiß, was das macht.

02:17:51.970 --> 02:17:55.380
Das ist irgendwelche Berechtigungen.

02:17:55.380 --> 02:18:03.990
Worauf die Nodes zugreifen dürfen.

02:18:04.090 --> 02:18:06.890
Das war's. Mehr brauchen wir nicht für unseren Kubernetes-Cluster.

02:18:06.990 --> 02:18:10.790
Für den Node-Pool, wenn wir... Alter, wie lange brauchen das bitte zum Anlegen?

02:18:10.890 --> 02:18:17.170
Das ist ja Resident Sleeper, Mann.

02:18:17.270 --> 02:18:21.610
Wie gesagt, ich habe euch gewarnt, das ist ultra lahm teilweise.

02:18:21.710 --> 02:18:30.400
Also Kubernetes-Cluster erzeugen, da drehst du teilweise 10 Minuten Däumchen.

02:18:30.500 --> 02:18:39.780
Der ist wirklich schon ins Bett ge... Still creating.

02:18:39.880 --> 02:18:50.780
Alles Arbeitszeit, genau, so sieht es aus.

02:18:50.920 --> 02:18:53.880
Eats Money, alles abbrechen, na klar.

02:18:53.980 --> 02:18:59.950
Na, ich werde garantiert einstechen, bevor ich ein Kubernetes-Cluster aufbaue.

02:19:00.050 --> 02:19:04.050
Erst mal schön Home Office startet, einstechen, Zeit eintragen

02:19:04.150 --> 02:19:06.550
und dann Kubernetes aufbauen.

02:19:06.650 --> 02:19:13.100
Nicht vorher.

02:19:13.200 --> 02:19:16.700
Also ich habe das vorhin noch mal ausprobiert, da hat es nur 5 Minuten gebraucht.

02:19:16.800 --> 02:19:23.000
Aber es könnte sein, dass in einem neuen Projekt das Ganze langsamer geht.

02:19:23.100 --> 02:19:25.400
Ach, guck mal, er hat den Node mittlerweile gelöscht.

02:19:25.500 --> 02:19:27.600
Das heißt, er müsste fast durch sein.

02:19:27.700 --> 02:19:32.200
Er ist fertig, easy, yeah, nice.

02:19:32.300 --> 02:19:34.800
Hat ja nur 9 Minuten 30 gebraucht.

02:19:34.900 --> 02:19:37.540
So, mein Kubernetes-Cluster ist running.

02:19:37.640 --> 02:19:40.980
Aktuell total unnütz, Node-Number 0, total CPU...

02:19:41.080 --> 02:19:43.700
Also ein Kubernetes-Cluster hat quasi eine Hülle ohne Nodes.

02:19:43.800 --> 02:19:45.380
Das bringt mir natürlich nichts.

02:19:45.480 --> 02:19:49.680
Das heißt, jetzt applye ich mal noch mal Terraform mit meinem Node-Pool.

02:19:49.780 --> 02:19:51.600
Und jetzt sollte ich ein Kubernetes-Cluster bekommen,

02:19:51.700 --> 02:19:57.400
wenn ich alles richtig gemacht habe, mit drei Nodes, jeweils 40 Gigabyte SSD-Speicher,

02:19:57.400 --> 02:19:59.960
und ja, jetzt nicht die fetteste VM.

02:20:00.060 --> 02:20:02.100
Ich glaube, ein CPU-Core pro Node.

02:20:02.200 --> 02:20:03.300
Aber zum Testen reicht das, ja.

02:20:03.400 --> 02:20:04.800
So, Terraform apply.

02:20:04.900 --> 02:20:08.560
Mal gucken, was Terraform anzeigt, was es machen möchte.

02:20:08.660 --> 02:20:11.740
Schadet nichts, sich das immer mal anzugucken.

02:20:11.840 --> 02:20:15.100
Fuck, Alter, wo ist das Problem?

02:20:15.200 --> 02:20:18.700
Incorrect attribute value type.

02:20:18.800 --> 02:20:19.540
Cool.

02:20:19.640 --> 02:20:21.560
Cluster, Container-Cluster-Primary.

02:20:21.660 --> 02:20:26.060
Habe ich wieder Self-Link oder was vergessen?

02:20:26.160 --> 02:20:27.200
Cluster.

02:20:27.200 --> 02:20:28.400
Das muss man machen.

02:20:28.500 --> 02:20:30.200
Cluster to create a Node-Pool for.

02:20:30.300 --> 02:20:33.300
Cluster must be present in location...

02:20:33.400 --> 02:20:36.600
Okay, Self-Link vielleicht.

02:20:36.700 --> 02:20:37.960
Gucken wir mal, ob das jetzt funktioniert.

02:20:38.060 --> 02:20:43.460
Also es ist nicht unbedingt immer alles so hundertprozentig klar,

02:20:43.560 --> 02:20:45.200
was man da einstellen muss.

02:20:45.300 --> 02:20:46.240
Deswegen Fall...

02:20:46.340 --> 02:20:48.800
Alter.

02:20:48.900 --> 02:20:54.330
ID.

02:20:54.430 --> 02:20:58.630
Das heißt, falls ihr bei eurem Arbeitgeber so was aufsetzen müsst,

02:20:58.730 --> 02:21:00.930
lasst euch auf jeden Fall eine Spielumgebung...

02:21:00.930 --> 02:21:03.930
geben, um da ein bisschen rumzuprobieren.

02:21:04.030 --> 02:21:06.130
Das Schöne an dieser Terraform-Geschichte ist,

02:21:06.230 --> 02:21:08.630
wenn es einmal angelegt ist hier und es funktioniert,

02:21:08.730 --> 02:21:10.430
dann funktioniert es immer reproduzierbar.

02:21:10.530 --> 02:21:13.230
Und das ist ja auch eines der großen Selling Points,

02:21:13.330 --> 02:21:14.230
wie man dann so schön sagt,

02:21:14.330 --> 02:21:17.130
für das du es reproduzierbar immer wieder so aufbauen kannst.

02:21:17.230 --> 02:21:19.430
Okay, das war jetzt anscheinend richtig mit der ID.

02:21:19.530 --> 02:21:21.530
Es wäre natürlich sinnvoll, wenn hier stehen würde,

02:21:21.630 --> 02:21:24.830
the Cluster ID to create a Node-Pool for.

02:21:24.930 --> 02:21:31.150
Aber nein, obviously muss da ID rein,

02:21:31.250 --> 02:21:32.750
so wie man das selbstverständlich

02:21:32.750 --> 02:21:34.550
ganz einfach erkennen konnte.

02:21:34.650 --> 02:21:37.050
So, jetzt wird eine Node-Pool erstellt.

02:21:37.150 --> 02:21:40.150
Der Node-Pool zu erstellen dauert noch einmal fünf Minuten.

02:21:40.250 --> 02:21:42.850
Das ist alles nicht so schnell.

02:21:42.950 --> 02:21:44.050
Wenn wir Glück haben,

02:21:44.150 --> 02:21:47.050
hat unser Quota mittlerweile wieder aktualisiert auf null runter.

02:21:47.150 --> 02:21:48.850
Nee, hat noch nicht aktualisiert.

02:21:48.950 --> 02:21:50.050
Ah, gut.

02:21:50.150 --> 02:21:51.150
Debated.

02:21:51.250 --> 02:21:55.360
So, also Leute, ich habe ungefähr noch eine halbe Stunde Zeit.

02:21:55.460 --> 02:21:56.960
Ich zeige euch jetzt noch eine coole Sache.

02:21:57.060 --> 02:21:58.860
Ach ja, Frage, Chat.

02:21:58.960 --> 02:22:01.960
Soll ich dieses Repo auf GitHub hochpushen,

02:22:02.060 --> 02:22:03.960
dass ihr abgucken könnt?

02:22:04.160 --> 02:22:12.980
Du, du, du.

02:22:13.080 --> 02:22:15.980
Trinken, sehr gut, mache ich jetzt.

02:22:16.080 --> 02:22:20.700
So, okay.

02:22:20.800 --> 02:22:23.700
Dann machen wir schon mal ein GitHub.

02:22:23.800 --> 02:22:26.700
Ah, Moment, da müssen wir auf Firefox aufmachen.

02:22:26.800 --> 02:22:28.700
Auf Firefox sind wir eingeloggt.

02:22:28.800 --> 02:22:30.700
GitHub.

02:22:30.800 --> 02:22:34.390
GitHub.

02:22:34.490 --> 02:22:36.390
Repo, New Repo.

02:22:36.490 --> 02:22:40.390
In der Pfeife der Orga natürlich.

02:22:40.490 --> 02:22:42.390
Ah, komm, wo bloß?

02:22:42.490 --> 02:22:45.090
K8SG...

02:22:45.090 --> 02:22:47.290
GCP...

02:22:47.390 --> 02:22:50.700
Ja, nennen wir es mal so.

02:22:50.800 --> 02:22:52.500
Wie ist das so im neuen Job?

02:22:52.600 --> 02:22:53.700
Sehr viele Abkürzungen

02:22:53.800 --> 02:22:56.700
und ich blicke noch bei ganz vielen Sachen nicht durch.

02:22:56.800 --> 02:22:57.800
Keine mit Zugangsdaten.

02:22:57.900 --> 02:23:03.780
Ja, ja, natürlich.

02:23:03.880 --> 02:23:05.580
Ja.

02:23:05.680 --> 02:23:07.480
Aber seit Ende letzter Woche ist besser.

02:23:07.580 --> 02:23:10.180
Ich habe jetzt wenigstens was, was ich machen kann.

02:23:10.280 --> 02:23:14.910
SSH-Login geht übrigens immer noch nicht nach zwei Wochen.

02:23:15.010 --> 02:23:16.710
Wie viel der Config kannst du wiederverwenden,

02:23:16.810 --> 02:23:18.510
wenn man den Hoster wechselt?

02:23:18.610 --> 02:23:20.110
Ehrliche Meinung, ehrliche Antwort?

02:23:20.110 --> 02:23:21.110
Gar nichts.

02:23:21.210 --> 02:23:24.110
Dafür ist Terraform nicht gedacht.

02:23:24.210 --> 02:23:27.110
Terraform abstrahiert nicht zwischen Cloud-Anbietern,

02:23:27.210 --> 02:23:32.110
sondern macht den Aufbau bei einem Cloud-Anbieter reproduzierbar.

02:23:32.210 --> 02:23:34.110
Ja, und mit State-Tracking und alles.

02:23:34.210 --> 02:23:36.110
Wenn du jetzt umziehen willst nach Azure,

02:23:36.210 --> 02:23:38.110
ist die Config komplett anders.

02:23:38.210 --> 02:23:42.110
Ich meine, allein schon, dass du hier oben drinnen stehen hast,

02:23:42.210 --> 02:23:44.110
Resource Google-Container-Node-Pool.

02:23:44.210 --> 02:23:46.110
Das heißt, bei Azure bestimmt nicht so

02:23:46.210 --> 02:23:48.310
und hat bestimmt noch andere Settings.

02:23:48.310 --> 02:23:50.310
Nichts kannst du davor verwenden.

02:23:50.410 --> 02:23:51.310
Gar nichts.

02:23:51.410 --> 02:23:55.540
No pass.

02:23:55.640 --> 02:24:06.260
Haben wir überhaupt schon ein Repo angelegt?

02:24:06.360 --> 02:24:11.460
Terraform-Git-Ignore.

02:24:11.560 --> 02:24:14.460
Gibt es auch bestimmt ein gutes Git-Ignore-Template.

02:24:14.560 --> 02:24:16.460
Wobei, wir haben eh kein State.

02:24:16.560 --> 02:24:18.460
Vim-Git-Ignore.

02:24:18.560 --> 02:24:23.670
Status-Git-Init.

02:24:23.770 --> 02:24:25.670
Git-Status-Terraform.

02:24:25.770 --> 02:24:26.670
Ja, ja, okay.

02:24:26.770 --> 02:24:28.670
Git-Add.

02:24:28.770 --> 02:24:30.670
Status, ja, okay.

02:24:30.770 --> 02:24:32.570
Der checkt den ganzen Müll nicht mit ein.

02:24:32.670 --> 02:24:33.570
Alles gut.

02:24:33.670 --> 02:24:37.670
Git-Remote-Add.

02:24:37.770 --> 02:24:38.670
GitHub.

02:24:38.770 --> 02:24:39.670
Boom.

02:24:39.770 --> 02:24:41.670
Okay.

02:24:41.770 --> 02:24:44.980
Google-to-Azure-Converter.

02:24:45.080 --> 02:24:45.980
Also, ich könnte mir vorstellen,

02:24:46.080 --> 02:24:48.980
dass es tatsächlich Konvertierungsprojekte gibt.

02:24:49.080 --> 02:24:50.980
So eine Cloud-Infrastruktur,

02:24:51.080 --> 02:24:52.980
Terraform-Config und eine andere.

02:24:53.080 --> 02:24:53.980
Wie gut das funktioniert,

02:24:54.080 --> 02:24:55.980
ich habe da meine Zweifel.

02:24:56.080 --> 02:24:58.980
Moment, ist er fertig?

02:24:59.080 --> 02:24:59.980
Terraform-Stells?

02:25:00.080 --> 02:25:00.980
Ja, ist fertig.

02:25:01.080 --> 02:25:01.980
Easy, hat funktioniert.

02:25:02.080 --> 02:25:04.080
Also, unser Node-Pool ist fertig.

02:25:04.180 --> 02:25:04.980
Okay.

02:25:05.080 --> 02:25:05.980
Also, unser Node-Pool ist angelegt.

02:25:06.080 --> 02:25:08.980
Wir haben einen Kubernetes-Cluster in der Google Cloud am Start

02:25:09.080 --> 02:25:14.980
mit 3 Nodes, 6 CPUs und 6 GB RAM.

02:25:15.080 --> 02:25:16.980
Wir können jetzt mal kurz in die Übersicht reingucken.

02:25:17.080 --> 02:25:19.980
Wir sehen, okay, wir haben sogar ein Kubernetes-Upgrade available.

02:25:20.080 --> 02:25:21.980
Was haben wir für ein Upgrade available?

02:25:22.080 --> 02:25:24.980
Wir können auf den Rapid-Channel gehen.

02:25:25.080 --> 02:25:26.980
Dann kriegen wir diese Dinger hier zur Auswahl.

02:25:27.080 --> 02:25:28.980
Wir können auf den Regular-Channel gehen.

02:25:29.080 --> 02:25:30.980
Da kriegen wir die hier zur Auswahl.

02:25:31.080 --> 02:25:32.980
Oder wir gehen auf den Stable-Channel.

02:25:33.080 --> 02:25:35.880
Dann gibt es die 25 noch gar nicht.

02:25:35.980 --> 02:25:38.260
Verstehe.

02:25:38.360 --> 02:25:43.810
Tja, aber wir machen jetzt keine Updates.

02:25:43.910 --> 02:25:45.810
Bist du eigentlich als typischer Programmierer,

02:25:45.910 --> 02:25:47.810
der eigentlich nur programmiert?

02:25:47.910 --> 02:25:48.810
Ich?

02:25:48.910 --> 02:25:51.810
Nee, ich arbeite nicht als Software-Entwickler.

02:25:51.910 --> 02:25:53.810
Ich mache was ganz anderes.

02:25:53.910 --> 02:25:55.810
Ich mache eher sowas hier.

02:25:55.910 --> 02:25:58.810
Also, beim alten Arbeitgeber war ich DevOps-Engineer,

02:25:58.910 --> 02:26:01.810
beim neuen bin ich Senior Linux-Engineer.

02:26:01.910 --> 02:26:03.810
Ich bin nicht, ich bin, ich war noch nie

02:26:03.910 --> 02:26:05.810
hauptberuflicher Software-Entwickler

02:26:05.910 --> 02:26:07.810
und habe ich eigentlich auch gar nicht vor.

02:26:08.010 --> 02:26:10.810
Ich weiß auch nicht, ob mein Programmier-Stelz

02:26:10.910 --> 02:26:13.810
dafür reicht, ob ich das machen könnte überhaupt.

02:26:13.910 --> 02:26:15.810
Habe ich aber ehrlich gesagt überhaupt keinen Bock drauf.

02:26:15.910 --> 02:26:17.810
Ich finde den Bereich, wo ich jetzt bin,

02:26:17.910 --> 02:26:19.810
ist eigentlich genau das Richtige.

02:26:19.910 --> 02:26:21.810
Und gerade die ganze Cloud-Geschichte ist was,

02:26:21.910 --> 02:26:26.470
was mir auch echt Bock macht.

02:26:26.570 --> 02:26:29.470
Und was wir sehen, wir haben kein external Endpoint

02:26:29.570 --> 02:26:30.470
vom Kubernetes-Cluster.

02:26:30.570 --> 02:26:33.470
Das heißt, das ist nicht erreichbar aus dem Internet.

02:26:33.570 --> 02:26:37.470
So, und jetzt zeige ich euch noch mal was sehr Nices.

02:26:37.570 --> 02:26:43.760
Naja, im DevOps-Bereich, du kannst aus mehreren Ecken

02:26:43.860 --> 02:26:46.660
kommen, also klassischer DevOps bedeutet ja,

02:26:46.760 --> 02:26:50.660
dass Entwickler sich auch ein bisschen über den Tellerrand

02:26:50.760 --> 02:26:53.660
hinausschauen und Sachen, die sie entwickelt haben,

02:26:53.760 --> 02:26:55.660
auch selbst betreiben.

02:26:55.760 --> 02:26:57.660
Das ist so das, wo DevOps eigentlich herkommt.

02:26:57.760 --> 02:27:01.660
Mittlerweile hat sich dieses Wort eher, eher selbst verflüchtigt,

02:27:01.760 --> 02:27:04.660
dass es quasi ganz eigene DevOps-Teams gibt,

02:27:04.760 --> 02:27:13.620
beziehungsweise auch ehemalige Admins und Plattform-Architekten.

02:27:13.720 --> 02:27:15.620
Und hast du nicht gesehen,

02:27:15.720 --> 02:27:19.520
die sich um Tool-Bereitstellung, Tool-Verwaltung kümmern

02:27:19.620 --> 02:27:23.520
und man da irgendwie so den Stempel DevOps draufdrückt.

02:27:23.620 --> 02:27:27.520
Ja, also das hat sich so ein bisschen verflüchtigt, das Wort.

02:27:27.620 --> 02:27:31.520
Also ein bisschen selbstständig gemacht, das ist das DevOps-Wort.

02:27:31.620 --> 02:27:34.520
Das heißt, nur wenn du, du brauchst keinen großen Hintergrund

02:27:34.620 --> 02:27:35.520
in Software-Entwicklung.

02:27:35.620 --> 02:27:38.520
Es ist allerdings von Vorteil meiner Ansicht nach,

02:27:38.620 --> 02:27:41.520
dass man ein bisschen Ahnung von Software-Entwicklung hat

02:27:41.620 --> 02:27:43.520
im DevOps-Bereich.

02:27:43.520 --> 02:27:47.420
Oftmals darum, Bild-Tools bereitzustellen,

02:27:47.520 --> 02:27:50.420
Bild-Prozesse bereitzustellen für Software

02:27:50.520 --> 02:27:53.420
oder Tools für Entwickler bereitzustellen

02:27:53.520 --> 02:27:57.420
oder irgendwelche Continuous Delivery, Continuous Integration,

02:27:57.520 --> 02:27:59.420
Build-Sachen zu bauen.

02:27:59.520 --> 02:28:01.420
Das heißt, es ist nicht verkehrt, sich ein bisschen auch

02:28:01.520 --> 02:28:03.420
in die Entwickler reinversetzen zu können.

02:28:03.520 --> 02:28:05.420
Aber du musst jetzt vorher, du musst jetzt vorher nicht irgendwie

02:28:05.520 --> 02:28:07.420
Hauptberuf für Software-Entwickler gearbeitet haben,

02:28:07.520 --> 02:28:09.420
um heute in den DevOps-Bereich reinzukommen.

02:28:09.520 --> 02:28:11.420
Weil DevOps heute quasi was Eigenständiges ist.

02:28:11.520 --> 02:28:13.420
Es hat sich quasi,

02:28:13.620 --> 02:28:19.160
verselbstständigt.

02:28:19.260 --> 02:28:21.160
Ja, das kommt, ja, das stimmt.

02:28:21.260 --> 02:28:23.160
Na, komm, jeder Admin, der was auf sich hält,

02:28:23.260 --> 02:28:25.160
nennt sich doch heute auch DevOps-Engineer.

02:28:25.260 --> 02:28:27.160
Guck mich an.

02:28:27.260 --> 02:28:33.800
Ist doch fast schon normal.

02:28:33.900 --> 02:28:35.800
Deswegen habe ich ja auch gerade gesagt, wo es herkommt

02:28:35.900 --> 02:28:38.800
und was man heute zum größten Teil darunter versteht.

02:28:39.900 --> 02:28:42.800
Herkommt, habe ich ja gerade gesagt, eher aus dem Software-Entwicklungsbereich,

02:28:42.900 --> 02:28:44.800
dass dort die Software, die man programmiert hat,

02:28:44.900 --> 02:28:46.800
auch selbst verwaltet, selbst betrieben wird.

02:28:46.900 --> 02:28:49.800
Dass man sich auch ein bisschen um Operations kümmert.

02:28:49.900 --> 02:28:51.800
Dass man quasi ein Dev ist,

02:28:51.900 --> 02:28:53.700
die halt die Operations macht.

02:28:53.800 --> 02:28:56.700
Aber wird ja mittlerweile im praktischen Alltag eher,

02:28:56.800 --> 02:28:58.700
wurde wie gesagt, das ist ja eher,

02:28:58.800 --> 02:29:00.700
hat sich ja verselbstständigt das Wort,

02:29:00.800 --> 02:29:02.700
dass es jetzt auch eigene DevOps-Teams und sowas gibt.

02:29:12.430 --> 02:29:14.330
Also du stellst die programmierte Software bereit

02:29:14.430 --> 02:29:17.330
und schaust, dass die auf dem Server oder so läuft oder so.

02:29:17.430 --> 02:29:23.330
Ja, also es ist jetzt vielleicht nicht ganz so geschliffen formuliert,

02:29:23.430 --> 02:29:26.330
aber das ist auf jeden Fall Teil dessen,

02:29:26.430 --> 02:29:29.330
was in vielen DevOps-Teams gemacht wird.

02:29:29.330 --> 02:29:33.230
Du schaust, dass es automatisierte Build-Prozesse gibt für die Software.

02:29:33.330 --> 02:29:37.230
Du schaust, dass es beispielsweise auch sowas gibt wie automatisierte Tests,

02:29:37.330 --> 02:29:45.230
automatisierte Build-Workflows, automatische Handling von Pull-Requests.

02:29:45.330 --> 02:29:48.230
Also zum Beispiel, wenn ein Pull-Request erstellt wird,

02:29:48.330 --> 02:29:50.230
dass eine Testumgebung erstellt wird,

02:29:50.330 --> 02:29:52.230
dass der Pull-Request da drin nochmal temporär gemerged wird,

02:29:52.330 --> 02:29:54.230
Tests durchgeführt wird,

02:29:54.330 --> 02:29:57.230
dann, dass es ein Bot gibt, der den Pull-Request reinschreibt.

02:29:57.330 --> 02:29:59.230
Jawohl, Tests sind erfolgreich gelaufen.

02:29:59.230 --> 02:30:01.130
Das ist auch immer sowas in der Richtung,

02:30:01.230 --> 02:30:04.130
also automatische Build-Pipelines.

02:30:04.230 --> 02:30:07.130
Und letztendlich gehört auch oftmals mit dazu,

02:30:07.230 --> 02:30:10.130
dass das, was gebaut wurde, dann deployed wird am Ende.

02:30:10.230 --> 02:30:15.130
Also das heißt ja nicht umsonst Continuous Integration und Continuous Delivery.

02:30:15.230 --> 02:30:20.130
Und der Continuous Delivery, das CD, wo das CD steht,

02:30:20.230 --> 02:30:22.130
wie gesagt Continuous Delivery,

02:30:22.230 --> 02:30:26.130
das ist das, was man allgemein unter Deployment quasi versteht.

02:30:26.230 --> 02:30:29.130
Also Continuous Integration,

02:30:29.230 --> 02:30:32.030
du fügst permanent neue,

02:30:32.130 --> 02:30:35.030
du nimmst Pull-Requests, fügst permanent neue Features hinzu,

02:30:35.130 --> 02:30:39.030
möglichst schnelle Iterationen, wie man das so schön nennt,

02:30:39.130 --> 02:30:44.030
und baust das, baust neue Versionen und die gebauten Versionen deployst du dann

02:30:44.130 --> 02:30:47.030
und das ist der Continuous Delivery Teil.

02:30:47.130 --> 02:30:51.180
Es ist alles ein bisschen schwammig.

02:30:51.280 --> 02:30:53.180
Ich kann euch das auch nicht besser erklären.

02:30:53.280 --> 02:30:57.180
Außerdem verstehen auch viele Unternehmen alle wieder ein bisschen was anderes darunter.

02:30:57.280 --> 02:31:03.900
Und ja, ja, das stimmt schon.

02:31:04.100 --> 02:31:05.900
Man muss sich, je nachdem, wo du mal liest,

02:31:06.000 --> 02:31:08.900
muss man sich natürlich nach dem richten, was gewollt ist.

02:31:09.000 --> 02:31:11.900
Ich habe aktuell auch meine Probleme mit meinem Windows Notebook

02:31:12.000 --> 02:31:14.900
und bin schon am überlegen, wie ich mich am besten irgendwie durchtunnel,

02:31:15.000 --> 02:31:16.900
ohne dass es illegal wird.

02:31:17.000 --> 02:31:19.900
Also insofern, ja.

02:31:20.000 --> 02:31:21.900
Ja, also ich wollte euch jetzt ja noch was zeigen.

02:31:22.000 --> 02:31:23.900
Wie gesagt, ich habe noch 20 Minuten Zeit.

02:31:24.000 --> 02:31:25.900
Ich zeige euch jetzt noch was wirklich sehr Nices.

02:31:26.000 --> 02:31:27.900
Wir pushen, wir pushen das Ganze erstmal.

02:31:28.000 --> 02:31:31.900
Dieses Inet-Skript könnt ihr eigentlich vergessen.

02:31:31.900 --> 02:31:36.800
Git, Commit, warte mal, Add.

02:31:36.900 --> 02:31:37.800
Haben wir schon geadded?

02:31:37.900 --> 02:31:38.800
Add.

02:31:38.900 --> 02:31:41.800
Git, Commit, minus A, minus M, Inet.

02:31:41.900 --> 02:31:47.800
Git, Push, Push, GitHub, Master.

02:31:47.900 --> 02:31:48.800
Oh, Master.

02:31:48.900 --> 02:31:51.800
Leute, bitte nicht Twitter Bescheid sagen.

02:31:51.900 --> 02:31:59.800
So, und jetzt gehen wir mal auf GitHub und in meinem Repo ist es drinne.

02:31:59.800 --> 02:32:02.700
Also falls sich jemand angucken will, was ich heute fabriziert habe,

02:32:02.800 --> 02:32:03.700
dann kann er sich das hier angucken.

02:32:03.800 --> 02:32:05.700
Wobblos, K8S, GCP.

02:32:05.800 --> 02:32:07.700
Es ist noch nicht ganz fertig.

02:32:07.800 --> 02:32:09.700
Ich kann noch ein bisschen Werbung machen für den Stream,

02:32:09.800 --> 02:32:11.700
beziehungsweise auch vielleicht für meinen YouTube-Channel.

02:32:11.800 --> 02:32:15.700
Sie können ja mal bei mir vorbeigucken auf YouTube, auf Twitter und hier.

02:32:15.800 --> 02:32:19.700
Followen, wenn es euch gefällt, auf Twitch.

02:32:19.800 --> 02:32:23.700
Denn wir machen die nächsten Tage das Projekt noch ein bisschen weiter.

02:32:23.800 --> 02:32:28.700
Das Ziel ist ja, dass wir am Ende einen funktionsfähigen Kubernetes-Cluster haben.

02:32:28.700 --> 02:32:33.600
In der Google Cloud, auf dem wir auch zwei Demo-Anwendungen deployen.

02:32:33.700 --> 02:32:37.600
Auch public zugänglich, also ihr könnt dann im Internet auch drauf.

02:32:37.700 --> 02:32:42.600
Dass wir dann Zertifikatsmanagement dabei machen, automatisches Deployment drauf machen.

02:32:42.700 --> 02:32:44.600
Und das eben ordentlich einrichten.

02:32:44.700 --> 02:32:52.600
Und das Ganze auch Security-technisch mit verschlüsselter Kommunikation im Cluster mit einem Service-Mesh aufbauen.

02:32:52.700 --> 02:32:55.600
Weil das aktuell gerade so der neueste Shit ist.

02:32:55.700 --> 02:32:56.600
Oh, guck mal.

02:32:56.600 --> 02:32:59.500
Ich habe meinen Terraform-Log auch noch gepusht.

02:32:59.600 --> 02:33:01.500
Ist das gut oder schlecht?

02:33:01.600 --> 02:33:03.500
Ist wahrscheinlich gar nicht so wild.

02:33:03.600 --> 02:33:12.430
Dann sollte man das Terraform-Log einchecken oder nicht?

02:33:12.530 --> 02:33:19.090
Da ist auf jeden Fall drinne die Version und sowas sind da geloggt.

02:33:19.190 --> 02:33:23.090
Ich weiß jetzt nicht, ob man das normalerweise mit eincheckt oder nicht.

02:33:23.190 --> 02:33:29.940
Gucken wir mal, was das gitignore sagt.

02:33:30.040 --> 02:33:32.940
Log, ja, das wird mit eingexeckt.

02:33:33.040 --> 02:33:34.940
Ja, sollte man.

02:33:34.940 --> 02:33:36.840
Gut, dann ist gut.

02:33:36.940 --> 02:33:48.730
Ja, es stimmt, es ist sinnvoll, das einzuchecken, weil es könnte ja sein, dass bei der nächsten Version andere Sachen unterstützt werden und es gar nicht mehr funktioniert.

02:33:48.830 --> 02:33:51.730
Ja, ja, okay, ist eigentlich logischer.

02:33:51.830 --> 02:33:53.730
So, also.

02:33:53.830 --> 02:33:55.730
Da haben wir unser Kubernetes-Cluster laufen.

02:33:55.830 --> 02:33:57.730
Also folgt mir gerne auf Twitch.

02:33:57.830 --> 02:34:00.730
Ich würde mich sehr freuen, wenn ihr die nächsten Streams auch wieder am Start seid.

02:34:00.830 --> 02:34:08.730
Wir basteln hier dran weiter, sodass wir im Endeffekt einen super konfigurierten, gut lauffähigen, automatisch deployenden Kubernetes-Cluster am Start haben.

02:34:08.730 --> 02:34:10.630
In der Google Cloud.

02:34:10.730 --> 02:34:12.630
So, jetzt wollte ich euch noch eine andere Sache zeigen.

02:34:12.730 --> 02:34:14.630
Und zwar, ich habe jetzt meinen Kubernetes-Cluster.

02:34:14.730 --> 02:34:16.630
Der läuft jetzt, den seht ihr ja auch hier.

02:34:16.730 --> 02:34:18.630
Ja, da.

02:34:18.730 --> 02:34:20.630
Der ist am Start.

02:34:20.730 --> 02:34:22.630
Wie komme ich denn jetzt da dran?

02:34:22.730 --> 02:34:24.630
So, das ist jetzt der eigentliche Knackpunkt.

02:34:24.730 --> 02:34:26.630
Wie komme ich denn jetzt da dran?

02:34:26.730 --> 02:34:28.630
Gar nicht so einfach.

02:34:28.730 --> 02:34:32.630
Es gibt hier so ein Hilfskommando, connect.

02:34:32.730 --> 02:34:35.630
Bringt mir allerdings nicht so viel.

02:34:35.730 --> 02:34:39.140
Vergiss das nicht wieder zu löschen.

02:34:39.140 --> 02:34:42.040
Oh ja, sonst ist mein Guthaben schnell weg.

02:34:42.140 --> 02:34:44.040
Also, ich kann hier...

02:34:44.140 --> 02:34:46.040
Ah, okay.

02:34:46.140 --> 02:34:53.040
Ich muss irgendwas installieren für meine Google-Command-Line-Tools.

02:34:53.140 --> 02:34:55.040
Wie macht man das?

02:34:55.140 --> 02:34:57.040
Wie installiert man da was?

02:34:57.140 --> 02:35:00.540
Install.

02:35:00.640 --> 02:35:04.540
Google-Components-Install-Auth-Plugin.

02:35:04.640 --> 02:35:08.540
Die haben übrigens einen mega hässlichen Progress-Bar hier unten.

02:35:08.540 --> 02:35:11.440
Weiß nicht, was die Google-Leute sich dabei gedacht haben, dass das hübsch ist.

02:35:11.540 --> 02:35:16.030
Ich weiß ja nicht.

02:35:16.130 --> 02:35:19.030
Marzilein sagt, der Auer.

02:35:19.130 --> 02:35:23.030
War letztens bei Hetzner und hat darüber Videos gemacht.

02:35:23.130 --> 02:35:25.030
Oft hat man da viele einzelne Systeme gesehen.

02:35:25.130 --> 02:35:29.030
Ich habe das so verstanden, dass diese einzelnen Systeme vermietet werden.

02:35:29.130 --> 02:35:36.030
Gibt es aber nicht auch die Form, dass man nur einen Teil eines größeren Systems oder ganze Cluster mietet und sich das je nach Lust und Last verteilt?

02:35:36.130 --> 02:35:37.030
Glaube du erst.

02:35:37.130 --> 02:35:39.030
Das gibt es beides, ja.

02:35:39.130 --> 02:35:40.030
Was heißt beides?

02:35:40.030 --> 02:35:41.930
Das ist ein fließender Übergang.

02:35:42.030 --> 02:35:43.930
Also, was es gibt.

02:35:44.030 --> 02:35:45.930
Wir machen das jetzt mal ganz schnell.

02:35:46.030 --> 02:35:46.930
Was es gibt.

02:35:47.030 --> 02:35:50.930
Das erste, was es überhaupt gab, war ein dediziertes Server.

02:35:51.030 --> 02:35:53.930
Das heißt, du hast hier so einen Server, den du da siehst, hast du dir gemietet.

02:35:54.030 --> 02:35:54.930
Der gehört dir.

02:35:55.030 --> 02:35:56.930
Nur, dass er bei Hetzner im Rechenzentrum steht.

02:35:57.030 --> 02:35:57.930
Der gehört dir.

02:35:58.030 --> 02:35:58.930
Da kannst du alles drauf machen, was du willst.

02:35:59.030 --> 02:35:59.930
Ich glaube, man kann sogar ins BIOS.

02:36:00.030 --> 02:36:00.930
Oder?

02:36:01.030 --> 02:36:01.930
Kann man sogar ins BIOS?

02:36:02.030 --> 02:36:02.930
Ich weiß gar nicht.

02:36:03.030 --> 02:36:03.930
Ich glaube schon.

02:36:04.030 --> 02:36:04.930
Es ist dein Server.

02:36:05.030 --> 02:36:08.930
Das ist in den letzten Jahren ein bisschen außer Mode gekommen.

02:36:08.930 --> 02:36:15.830
Weil, man muss sich um alles selbst kümmern und es ist auch nicht hoch verfügbar.

02:36:15.930 --> 02:36:16.830
Es ist halt einfach ein Server.

02:36:16.930 --> 02:36:17.830
Ohne irgendwas.

02:36:17.930 --> 02:36:18.830
Einfach ein nackiger Server.

02:36:18.930 --> 02:36:20.830
Und wenn die Festplatte kaputt ist, ist er kaputt.

02:36:20.930 --> 02:36:22.830
Man muss sich selbst um Backups und alles kümmern.

02:36:22.930 --> 02:36:24.830
So, also das ist das eine.

02:36:24.930 --> 02:36:26.830
Das gibt es schon ganz lang.

02:36:26.930 --> 02:36:29.830
Heutzutage ist das Bare Metal, nennt man das, wenn man cool sein will.

02:36:29.930 --> 02:36:31.830
Früher hat man mal das Dedicated Server genannt.

02:36:31.930 --> 02:36:33.830
Heute ist das Bare Metal.

02:36:33.930 --> 02:36:38.830
Der nächste Schritt war, dass die...

02:36:39.030 --> 02:36:41.830
Hoster VMs angeboten haben.

02:36:41.930 --> 02:36:48.830
VMs, das sind virtuelle, virtuelle Server, die auf irgendeinem Virtualisierungscluster laufen.

02:36:48.930 --> 02:36:53.830
Das sind dann quasi mehrere dieser Kisten, die du siehst, zusammengefasst zu einem Virtualisierungscluster.

02:36:53.930 --> 02:36:58.830
Und darauf laufen dann potenziell aber mehr VMs, als du dort Server siehst.

02:36:58.930 --> 02:37:01.830
Also mal angenommen, du siehst dort, du hast drei fette Server.

02:37:01.930 --> 02:37:04.830
Darauf kannst du ohne Probleme 200 VMs laufen lassen.

02:37:04.930 --> 02:37:06.830
Und die werden dann vermietet.

02:37:06.830 --> 02:37:09.730
Allerdings, das ist, glaube ich, das so ein bisschen auch, was du meinst.

02:37:09.830 --> 02:37:12.730
Allerdings da natürlich von der Leistung her auch nur anteilig.

02:37:12.830 --> 02:37:21.730
Also du kannst zwar 200 VMs drauf machen, aber wenn du unter der Haube in dem Cluster nur drei Nodes mit jeweils acht CPU-Kernen hast, kannst du halt...

02:37:21.830 --> 02:37:27.730
Du kannst zwar VMs vermieten mit 800 CPUs.

02:37:27.830 --> 02:37:34.730
Wenn aber alle deiner Kunden gleichermaßen Lastursachen da drin, dann teilen die sich die Infrastruktur unten drunter.

02:37:36.850 --> 02:37:38.750
Das ist wahrscheinlich das, was du meinst.

02:37:38.750 --> 02:37:45.650
Und dann gibt es natürlich noch den neuesten Shit, dass man gar keine Server mehr mietet und auch keine VMs mehr mietet, sondern sich Services mietet.

02:37:45.750 --> 02:37:48.650
Wie zum Beispiel das, was wir hier heute gemacht haben.

02:37:48.750 --> 02:37:52.650
Wir haben ein Kubernetes-Cluster angelegt in der Google Cloud.

02:37:52.750 --> 02:37:56.650
Und ja, letztendlich irgendwo auf irgendwelcher Hardware läuft das auch.

02:37:56.750 --> 02:37:59.650
Die Hardware steht in Frankfurt, mehr weiß ich dazu aber nicht.

02:37:59.750 --> 02:38:01.650
Ich weiß nicht, welche Hardware das ist.

02:38:01.750 --> 02:38:03.650
Doch, kann ich nachgucken, aber es muss mich nicht interessieren.

02:38:03.750 --> 02:38:07.650
Welche Hardware es ist, wie das verwaltet wird, kann mir vollkommen egal sein.

02:38:07.650 --> 02:38:12.550
Ich bekomme mein Kubernetes-Cluster und kann mit den passenden Tools darauf zugreifen.

02:38:12.650 --> 02:38:16.550
Ist natürlich noch ein bisschen teurer, aber ich muss mich auch weniger drum kümmern.

02:38:16.650 --> 02:38:24.010
So, jetzt wird euch vielleicht was auffallen.

02:38:24.110 --> 02:38:33.010
Wir möchten jetzt ja zum Beispiel sowas machen wie cubectl get pods-a.

02:38:33.110 --> 02:38:38.320
Und jetzt werdet ihr sehen, hm, das geht ja gar nicht.

02:38:38.420 --> 02:38:39.320
Und Chat, wer hat mitgedacht?

02:38:39.320 --> 02:38:44.220
Warum geht mein cubectl nicht, obwohl ich mich gegenüber meines Clusters authentifiziert habe?

02:38:44.320 --> 02:38:46.220
Werden aufgepasst, warum geht das nicht?

02:38:46.320 --> 02:38:49.790
Chat enttäuscht mich nicht.

02:38:49.890 --> 02:38:54.660
HiIQ.

02:38:54.760 --> 02:38:56.660
Warum komme ich da nicht hin?

02:38:56.760 --> 02:38:59.660
Du musst erst auf den Jump-Post, richtig.

02:38:59.760 --> 02:39:04.100
Mein Cluster ist nicht public.

02:39:04.200 --> 02:39:06.100
Ich habe keinen public Endpunkt.

02:39:06.200 --> 02:39:15.100
Ich müsste quasi zu 1.7.2.16.0.2, äh 16.0.2, komme ich aber nicht hin, weil mein Cluster nicht public ist im Internet.

02:39:15.100 --> 02:39:19.000
Das heißt, ich brauche einen Jump-Post und dafür habe ich mir was gebastelt.

02:39:19.100 --> 02:39:25.000
So, die offizielle Variante, wie man sowas macht, ist, also das Einfachste wäre das hier.

02:39:25.100 --> 02:39:33.000
Das Einfachste wäre, wir machen ein, wir loggen uns per SSH ein und machen dann hier, habe ich noch nicht mal entstehen,

02:39:33.100 --> 02:39:39.000
würden dann hier auf der VM, wo wir per SSH, also das ist die VM, die hier in der Google Cloud läuft,

02:39:39.100 --> 02:39:46.640
und würden unsere cubectl-kubernetes-Administration darüber machen.

02:39:46.740 --> 02:39:50.640
Das wäre möglich, ist ein bisschen blöd, ist eine extra Kiste, müssen wir alles neu entstehen.

02:39:50.740 --> 02:40:02.640
Wir müssen jetzt, wir müssen jetzt eher gucken, wie können wir uns tunneln zu dem Kubernetes-Cluster über die VM.

02:40:02.740 --> 02:40:05.640
Da habe ich mir ein paar, da habe ich mir was zu überlegt.

02:40:05.740 --> 02:40:09.640
Also, die schönste Variante ist ein VPN, ja.

02:40:09.740 --> 02:40:12.640
Man kann ein VPN einrichten in der Google Cloud.

02:40:12.740 --> 02:40:14.640
Es ist sogar, glaube ich, WireGuard-kompatibel.

02:40:14.740 --> 02:40:16.640
Man könnte WireGuard benutzen.

02:40:16.740 --> 02:40:26.540
Dann baut man ein VPN auf, quasi in seine, in das private Netz, in seiner Google-Infrastruktur und kann sich dann dahin verbinden.

02:40:26.640 --> 02:40:29.540
Da muss man aber VPNs einrichten und hier und bla.

02:40:29.640 --> 02:40:34.540
Wenn man einfach nur cubectl ausführen will über den Jumppost, gibt es, gibt es einfachere Varianten.

02:40:34.640 --> 02:40:38.540
Nämlich, man kann das hier machen.

02:40:38.640 --> 02:40:42.540
Ich zeige, ich zeige euch jetzt nur mal die, die, die Kurzvariante.

02:40:42.640 --> 02:40:44.540
Man kann das hier machen.

02:40:44.540 --> 02:40:49.440
Ich compute SSH auf den Jumppost und dann minus D1337, das ist der Port.

02:40:49.540 --> 02:40:51.440
Quieting, sonst wie so.

02:40:51.540 --> 02:40:53.440
Was macht das Ganze?

02:40:53.540 --> 02:40:57.440
Das baut, und jetzt ist, das ist wirklich extrem Six Head.

02:40:57.540 --> 02:40:59.440
Äh, Moment.

02:40:59.540 --> 02:41:03.440
Export, HTTPS, SOX, Proxy, wie, wie macht man das jetzt?

02:41:03.540 --> 02:41:16.440
Das...

02:41:16.540 --> 02:41:18.440
So, und was macht das jetzt?

02:41:18.540 --> 02:41:25.440
Das SSH verbindet sich auf meinen Jumppost, auf meine VM, durch den normalen Google-Tunnel.

02:41:25.540 --> 02:41:28.340
Macht bei mir lokal ein SOX-Proxy auf.

02:41:28.440 --> 02:41:30.340
Und wartet einfach da drauf.

02:41:30.440 --> 02:41:33.340
Das heißt, wenn ich jetzt sage hier...

02:41:33.440 --> 02:41:41.340
Export, HTTPS-Proxy, SOX 5, Localhost, Port 1337.

02:41:41.440 --> 02:41:43.340
Und machen wir mal HTTP auch.

02:41:43.440 --> 02:41:47.340
Und jetzt sage ich cubectl, cubectl get ports.

02:41:47.440 --> 02:41:50.340
Haha, es funktioniert.

02:41:50.440 --> 02:41:54.340
Das ist wirklich das, das billig VPN.

02:41:54.340 --> 02:42:02.410
Also, wenn ich keinen Bock habe, Google Cloud VPN einzurichten, ich möchte mich einfach nur tunneln.

02:42:02.510 --> 02:42:05.410
Das ist ein Tipp, das könnt ihr, das könnt ihr überall drauf anwenden.

02:42:05.510 --> 02:42:08.410
Das ist ja ein ganz normales SSH-Kommando unter der Haube.

02:42:08.510 --> 02:42:10.410
Ja, das sind die SSH-Parameter.

02:42:10.510 --> 02:42:12.410
Ähm...

02:42:12.510 --> 02:42:14.410
Das ist halt sehr nice.

02:42:14.510 --> 02:42:21.410
Das heißt, ihr könnt euch jetzt mal auf die Schnelle in eure Cloud-Infrastruktur verbinden, die ja, die ja wirklich nur lokal erreichbar ist, eigentlich.

02:42:21.510 --> 02:42:23.410
Innerhalb dieses Netzes in der Google Cloud.

02:42:23.510 --> 02:42:25.410
Und...

02:42:25.510 --> 02:42:27.410
Ihr könnt drauf zugreifen.

02:42:27.510 --> 02:42:30.310
Ihr könnt allerdings nicht mehr machen als cubectl in dem Fall.

02:42:30.410 --> 02:42:37.310
Äh, ich meine, ihr könntet, ihr könnt noch auf andere Server zugreifen an der Stelle, wenn ihr mit einem Browser einen SOX-Proxy eintragt.

02:42:37.410 --> 02:42:39.310
Es ist allerdings nicht so schön.

02:42:39.410 --> 02:42:43.310
So, und ich habe mir jetzt noch eine, eine kleine Erweiterung dazu ausgedacht.

02:42:43.410 --> 02:42:47.310
Wie gesagt, ich sage euch gleich dazu, ich empfehle euch nicht, das im produktiven Umfeld zu benutzen.

02:42:47.410 --> 02:42:51.310
Dann würde ich tatsächlich ein VPN aufsetzen.

02:42:51.410 --> 02:42:53.310
Aber ich habe noch was anderes gebaut.

02:42:53.410 --> 02:42:55.310
Und ich zeige euch jetzt mal ein Six-Head-Script.

02:42:55.410 --> 02:42:57.310
Was ich mir überlegt habe.

02:42:57.410 --> 02:42:59.210
Tunnel.sh.

02:42:59.310 --> 02:43:01.210
Bam.

02:43:01.310 --> 02:43:03.210
Zack.

02:43:03.310 --> 02:43:05.210
Was macht das?

02:43:05.310 --> 02:43:07.210
Ich führe es erstmal aus, okay?

02:43:07.310 --> 02:43:09.210
Ich führe es erstmal aus.

02:43:09.310 --> 02:43:11.210
Wir gucken, ob es funktioniert.

02:43:11.310 --> 02:43:15.040
Und dann, und dann erkläre ich euch schnell nochmal, wie es funktioniert.

02:43:15.140 --> 02:43:17.040
Oh, ich bin doof.

02:43:17.140 --> 02:43:19.040
Ich habe das, ich habe das Exit nicht rausgenommen.

02:43:19.140 --> 02:43:28.300
Lul, weh.

02:43:28.400 --> 02:43:30.300
So, sudo.

02:43:30.400 --> 02:43:32.300
So, und wir haben einen Tunnel am Start.

02:43:32.400 --> 02:43:38.170
Oh, fuck.

02:43:38.170 --> 02:43:41.580
Irgendwas ist kaputt.

02:43:41.680 --> 02:43:47.770
Kackel, ich weiß nicht warum.

02:43:47.870 --> 02:43:52.300
Was ist kaputt?

02:43:52.400 --> 02:43:54.300
Oh nein.

02:43:54.400 --> 02:43:56.300
Irgendwas ist kaputt.

02:43:56.400 --> 02:43:58.300
Shit.

02:43:58.400 --> 02:44:01.800
Warum?

02:44:01.900 --> 02:44:03.800
Okay, wir müssen mal ein Script schnell fixen.

02:44:03.900 --> 02:44:05.800
Was ist, was ist denn hier kaputt?

02:44:05.900 --> 02:44:07.800
Was habe ich, was habe ich kaputt gemacht?

02:44:07.900 --> 02:44:09.800
Okay, ich kann euch, ich kann euch mal kurz erklären, was das macht.

02:44:09.900 --> 02:44:11.800
Ist das gerade deine Public IP?

02:44:11.900 --> 02:44:13.800
Das hier?

02:44:13.900 --> 02:44:15.800
Ne, das ist nicht meine Public IP.

02:44:15.800 --> 02:44:17.700
Das und das auch nicht.

02:44:17.800 --> 02:44:19.700
Also, ähm.

02:44:19.800 --> 02:44:21.700
Was der machen sollte, ist folgendes.

02:44:21.800 --> 02:44:23.700
Schon Urlaub im neuen Job.

02:44:23.800 --> 02:44:25.700
Oder heute, heute habe ich freien Tag, ja.

02:44:25.800 --> 02:44:27.700
Also, ähm.

02:44:27.800 --> 02:44:29.700
Ich, ich, ich, ich erkläre euch mal, was das macht.

02:44:29.800 --> 02:44:31.700
Das holt sich, das holt sich mein Default Interface und die Projekt ID.

02:44:31.800 --> 02:44:33.700
Dann lädt sich ein, äh, SOX Proxy Tunnel Tool runter von Github.

02:44:33.800 --> 02:44:35.700
Was von irgendwelchen Chips kommt.

02:44:35.800 --> 02:44:37.700
Was von irgendwelchen Chips kommt.

02:44:37.800 --> 02:44:39.700
Was von irgendwelchen Chips kommt.

02:44:39.800 --> 02:44:41.700
Was von irgendwelchen Chips kommt.

02:44:41.800 --> 02:44:43.700
Was von irgendwelchen Chips kommt.

02:44:43.700 --> 02:44:45.600
Was von irgendwelchen Chips kommt.

02:44:45.700 --> 02:44:47.600
Was von irgendwelchen Chips kommt.

02:44:47.700 --> 02:44:49.600
Was von irgendwelchen Chips kommt.

02:44:49.700 --> 02:44:51.600
Was von irgendwelchen Chips kommt.

02:44:51.700 --> 02:44:53.600
Was von irgendwelchen Chips kommt.

02:44:53.700 --> 02:44:55.600
Was von irgendwelchen Chips kommt.

02:44:55.700 --> 02:44:57.600
Was von irgendwelchen Chips kommt.

02:44:57.700 --> 02:44:59.600
Was von irgendwelchen Chips kommt.

02:44:59.700 --> 02:45:01.600
Was von irgendwelchen Chips kommt.

02:45:01.700 --> 02:45:03.600
Was von irgendwelchen Chips kommt.

02:45:03.700 --> 02:45:05.600
Was von irgendwelchen Chips kommt.

02:45:05.700 --> 02:45:07.600
Was von irgendwelchen Chips kommt.

02:45:07.700 --> 02:45:09.600
Was von irgendwelchen Chips kommt.

02:45:09.700 --> 02:45:11.600
Was von irgendwelchen Chips kommt.

02:45:11.600 --> 02:45:13.160
die falschen IPs. Kann das sein?

02:45:14.000 --> 02:45:15.720
Was für IPs habe ich genommen?

02:45:16.940 --> 02:45:17.500
Ich habe andere

02:45:17.500 --> 02:45:19.280
IPs genommen, als in meinem

02:45:19.280 --> 02:45:23.120
Testaufbau. Äh, Network?

02:45:25.650 --> 02:45:26.630
Ah, 24.

02:45:28.370 --> 02:45:28.890
Exzellent.

02:45:29.370 --> 02:45:30.470
Daran wird es wahrscheinlich liegen.

02:45:32.670 --> 02:45:33.870
Ich habe andere IPs genommen.

02:45:37.070 --> 02:45:38.230
Machen wir hier nochmal ein Sleep davor.

02:45:41.700 --> 02:45:43.000
Was ist mit dem Stackoverflow Darkmode?

02:45:43.000 --> 02:45:44.860
Passiert jetzt mein Darkreader. Der macht komische Dinger.

02:45:48.160 --> 02:45:49.480
Der Darkmode

02:45:49.480 --> 02:45:51.240
vom Chrome macht komische Sachen.

02:45:52.400 --> 02:45:52.560
So.

02:45:52.560 --> 02:45:54.500
Und jetzt sollte das eigentlich

02:45:54.500 --> 02:45:59.620
funktionieren. Ich hoffe mal, dass ich das richtig gemacht habe.

02:45:59.720 --> 02:46:01.100
Brage, Leute. Brage.

02:46:01.240 --> 02:46:01.940
Please, brage.

02:46:03.220 --> 02:46:06.390
Brage. Brage.

02:46:08.010 --> 02:46:08.450
Ach,

02:46:09.250 --> 02:46:09.950
shit, Alter.

02:46:15.190 --> 02:46:16.450
Das funktioniert nicht.

02:46:17.010 --> 02:46:18.690
Was habe ich denn kaputt gemacht, Mann?

02:46:19.070 --> 02:46:21.290
Warum geht mein Six-Head-Skript nicht?

02:46:25.780 --> 02:46:26.340
Was ist das?

02:46:26.420 --> 02:46:27.140
Warum geht das nicht?

02:46:49.000 --> 02:46:50.780
Warum geht das nicht? Ich habe keine Ahnung.

02:46:56.860 --> 02:46:58.140
Was meckert

02:46:58.140 --> 02:46:58.460
er denn?

02:46:59.520 --> 02:47:00.240
Was meckert

02:47:00.240 --> 02:47:00.760
er denn hier?

02:47:02.100 --> 02:47:03.440
Connect? No?

02:47:04.400 --> 02:47:04.760
Was?

02:47:07.650 --> 02:47:10.050
Lookup local? Wait a minute.

02:47:10.970 --> 02:47:12.150
Was ist denn das für ein Fehler?

02:47:13.190 --> 02:47:13.990
Moment. Ping?

02:47:14.550 --> 02:47:15.590
Local host?

02:47:17.070 --> 02:47:17.390
Moment.

02:47:20.190 --> 02:47:20.770
Was ist denn da?

02:47:22.900 --> 02:47:23.620
Wait a minute.

02:47:24.260 --> 02:47:32.930
Sollte da nicht mehr

02:47:32.930 --> 02:47:33.790
drinne stehen?

02:47:36.700 --> 02:47:37.580
Wait a minute.

02:47:38.580 --> 02:47:40.740
Warum ist mein ETC-Host kaputt?

02:47:42.720 --> 02:47:44.380
Haben wir da letztens irgendwas verkackt?

02:47:44.560 --> 02:47:45.180
Kann das sein?

02:47:45.820 --> 02:47:48.420
Äh, Arch-Local-Hosts.

02:47:49.160 --> 02:47:51.380
Äh, äh, Arch-ETC-Hosts.

02:47:51.420 --> 02:47:51.920
Deleted.

02:47:53.720 --> 02:47:54.580
Deleted my host.

02:48:06.560 --> 02:48:08.700
Domain. Und der Host-Name

02:48:08.700 --> 02:48:09.620
muss da noch hin. Warum?

02:48:10.020 --> 02:48:12.460
Warum? Wie? Ich habe Host-Name, die jetzt hier...

02:48:12.460 --> 02:48:16.590
Äh.

02:48:18.290 --> 02:48:21.690
Äh, Pac-Man-QL-Host-Name.

02:48:24.140 --> 02:48:24.920
Äh, wie heißt das?

02:48:25.040 --> 02:48:26.460
Minus Q-F?

02:48:27.360 --> 02:48:27.920
Ach, fuck.

02:48:28.240 --> 02:48:31.260
Ähm, Arch-Install-Host-Name.

02:48:34.230 --> 02:48:34.850
Host-Name, ja.

02:48:35.330 --> 02:48:35.510
So.

02:48:36.310 --> 02:48:37.590
Host-Name, Command-Out-Found.

02:48:37.810 --> 02:48:39.530
Ja, was muss ich installieren?

02:48:40.610 --> 02:48:41.090
Sag's mir.

02:48:42.650 --> 02:48:43.530
Inet-Utils.

02:48:43.810 --> 02:48:45.850
Obviously, alles klar. Das weiß man ja.

02:48:46.370 --> 02:48:47.390
Inet-Utils.

02:48:49.430 --> 02:48:50.270
Rust-Beste.

02:48:50.990 --> 02:48:52.510
Ey, Rust ist eine coole Sprache.

02:48:52.610 --> 02:48:54.270
Allerdings wird sie oftmals

02:48:54.270 --> 02:48:56.230
für Sachen verwendet, wo ich sie nicht so sinnvoll für finde.

02:48:56.910 --> 02:48:57.970
Host-Name, Stream.

02:48:57.970 --> 02:48:58.090
Stream.

02:48:59.410 --> 02:48:59.810
Stream.

02:49:00.450 --> 02:49:02.690
Mein Script ist richtig, mein Host-File ist kaputt.

02:49:03.270 --> 02:49:04.770
Ping, Local-Host.

02:49:07.190 --> 02:49:08.510
Äh, ist es jetzt besser?

02:49:10.090 --> 02:49:11.070
Ping, Stream.

02:49:12.990 --> 02:49:14.450
Ich hoffe mal, das ist besser jetzt.

02:49:15.090 --> 02:49:15.410
Tunnel.

02:49:21.840 --> 02:49:22.760
Komm, Brage, Leute.

02:49:23.040 --> 02:49:24.520
Brage, Brage, Brage.

02:49:29.020 --> 02:49:29.900
Ah, es funktioniert.

02:49:30.460 --> 02:49:32.200
Das war meine Host-Datei, die kaputt ist.

02:49:32.420 --> 02:49:32.660
Geil.

02:49:33.180 --> 02:49:35.380
So, und jetzt kann ich einfach Cube-CTL machen.

02:49:36.040 --> 02:49:37.720
Über diesen Proxy.

02:49:37.720 --> 02:49:39.720
Das ist wirklich richtig...

02:49:40.720 --> 02:49:42.720
Poor-Mans-VPN.

02:49:49.990 --> 02:49:51.990
Was hältst du von C++?

02:49:52.410 --> 02:49:54.410
Jetzt nicht, Leute. Ich muss gleich weg in drei Minuten.

02:49:55.250 --> 02:49:57.590
Also, mal ganz schnell, was dieses Skript macht.

02:49:58.870 --> 02:50:02.450
Das baut ein VPN auf, ohne ein VPN zu brauchen.

02:50:03.850 --> 02:50:04.350
Also.

02:50:05.490 --> 02:50:05.990
Folgendes.

02:50:06.110 --> 02:50:08.110
Es holt sich das Default-Interface raus.

02:50:08.730 --> 02:50:10.030
Von meinem, von meiner Kiste.

02:50:10.530 --> 02:50:13.910
Es holt sich die Projekt-ID raus, aus meinen Terraform-Variablen.

02:50:14.470 --> 02:50:17.050
Dann lädt es sich so ein Tunnel-Tool runter, hier von GitHub.

02:50:17.610 --> 02:50:19.610
So ein China-Chinesen-Tunnel-Tool.

02:50:25.120 --> 02:50:25.620
Das da.

02:50:26.540 --> 02:50:30.840
Was eigentlich dafür gemacht ist, um an der China-Chinesen-Firewall vorbeizugehen, aber okay.

02:50:31.260 --> 02:50:32.360
Geht für unsere Zwecke auch.

02:50:32.780 --> 02:50:38.360
Lädt sich ein Tunnel-Tool runter, was UDP- und TCP-Traffic über SOX-Proxys tunneln kann.

02:50:39.420 --> 02:50:44.420
Dann baut es einmalig eine Verbindung auf zum Google-Cloud-Jump-Host.

02:50:45.740 --> 02:50:47.740
Lockt sich nur ein, lockt sich gleich wieder aus.

02:50:47.960 --> 02:50:50.660
Der Sinn dahinter ist, dass SSH-Keys generiert werden.

02:50:50.660 --> 02:51:01.540
Dann legt er ein Tunnel-Device an, gibt dem Tunnel-Device eine IP, startet das Tunnel-Device, setzt Routen für unsere Routen in Google-Cloud.

02:51:01.680 --> 02:51:04.860
Nämlich hier das Netz, was wir benutzen und hier das für Kubernetes.

02:51:05.540 --> 02:51:15.520
Und dann startet er dieses Tun-to-SOX-Tool über den SOX-Proxy, den ich hier unten aufbaue über SSH.

02:51:16.380 --> 02:51:20.100
Und dann schickt er das in den Hintergrund und dann startet er den SOX-Proxy über SSH.

02:51:20.100 --> 02:51:20.640
Also im Prinzip.

02:51:20.660 --> 02:51:28.320
Im Prinzip ist das quasi ein SSH-Tunnel mit SOX-Proxy, über den TCP- und UDP-Traffic getunnelt wird.

02:51:32.060 --> 02:51:34.520
Das ist nur was für richtige Aluhutträger, die sowas machen.

02:51:34.560 --> 02:51:35.600
Nee, hat damit ja nichts zu tun.

02:51:37.690 --> 02:51:40.510
Aber es funktioniert und man muss kein VPN einrichten.

02:51:40.630 --> 02:51:45.690
Man kann einfach sagen .slash Tunnel und ihr seht, kubectl geht noch nicht.

02:51:46.230 --> 02:51:53.090
Und sobald das VPN aufgebaut ist, das fake, billig VPN aufgebaut ist, kubectl funktioniert.

02:51:55.620 --> 02:51:56.560
Ist das nicht pock?

02:51:57.780 --> 02:52:04.820
Wie gesagt, nicht unbedingt für Production-Usage gedacht, aber so an sich eigentlich ganz nice.

02:52:08.190 --> 02:52:14.540
So, das packen wir noch in unser Git-Ignore-Status.

02:52:16.500 --> 02:52:21.740
Comet 0w, beste Push-GitHub-Master.

02:52:28.520 --> 02:52:30.800
So, und jetzt habt ihr auch den ganzen Campbell auf GitHub.

02:52:30.920 --> 02:52:32.140
Ich gucke jetzt gleich nochmal in Chat.

02:52:34.120 --> 02:52:38.240
So, also hier habt ihr die Sachen von heute im Stream als Repo.

02:52:38.240 --> 02:52:39.820
Dann machen wir das nächste Mal weiter.

02:52:39.960 --> 02:52:43.440
Das heißt, wenn ihr dabei sein wollt, Leute, folgt mir einfach auf Twitch.

02:52:44.960 --> 02:52:45.980
Aber das nächste Mal weiter.

02:52:46.700 --> 02:52:48.200
Also, das habe ich beantwortet.

02:53:04.870 --> 02:53:07.410
Dafür gibt es ja mittlerweile Bots, die Abhängigkeiten scannen.

02:53:08.470 --> 02:53:12.250
Ersetzt zwar nicht jemand, der wirklich Mailing-Listen liest und sowas, aber es ist schon mal nice.

02:53:36.780 --> 02:53:38.080
Ich habe montags immer frei.

02:53:39.280 --> 02:53:41.220
Weil ich nur vier Tage die Woche arbeite.

02:53:57.200 --> 02:53:57.560
Ruby!

02:53:59.800 --> 02:54:00.680
Ruby ist nice.

02:54:00.840 --> 02:54:02.800
Ruby ist meine Lieblingssprache, Nebasi Sharp.

02:54:02.800 --> 02:54:05.320
Leider ist Ruby so unbedeutend geworden.

02:54:05.320 --> 02:54:06.320
Die letzten Jahre über.

02:54:06.880 --> 02:54:08.080
Ey, Max, hoffe alles so gut.

02:54:08.080 --> 02:54:10.080
Ja, nach gestern, heute ist wieder alles gut.

02:54:10.080 --> 02:54:10.580
Ja.

02:54:11.220 --> 02:54:14.680
Ich wollte mal fragen, ob du bald wieder auf YouTube ein paar Worte zu Battlefield verlierst.

02:54:15.560 --> 02:54:16.060
Oh.

02:54:18.550 --> 02:54:19.050
Bestimmt.

02:54:24.830 --> 02:54:25.330
Bestimmt.

02:54:25.330 --> 02:54:25.830
Bestimmt.

02:54:29.670 --> 02:54:30.550
An das Trinken erinnern.

02:54:30.550 --> 02:54:31.050
Ja.

02:54:31.050 --> 02:54:31.550
Mach ich.

02:54:31.550 --> 02:54:32.050
Trinken.

02:54:36.910 --> 02:54:37.410
Okay, Leute.

02:54:38.410 --> 02:54:39.610
Ich hoffe, euch hat der Stream gefallen.

02:54:39.610 --> 02:54:42.290
Das war heute zu einer Zeit, ich weiß, es ist schwierig zu gucken für euch.

02:54:42.290 --> 02:54:43.530
Sieht man auch an den Zuschauerzahlen.

02:54:43.930 --> 02:54:45.930
Es war im Peak anstatt 200 noch was.

02:54:45.930 --> 02:54:47.930
Heute Peak 150.

02:54:47.930 --> 02:54:51.930
Aber es hat sich angeboten, das einfach heute mit nachzumachen.

02:54:51.930 --> 02:54:53.930
Ich meine, die Worts bleiben da.

02:54:53.930 --> 02:54:55.930
Leute, die es interessiert, können sich trotzdem angucken.

02:54:55.930 --> 02:54:59.930
Und die nächsten Streams in der Richtung mache ich wahrscheinlich eher wieder abends.

02:54:59.930 --> 02:55:05.370
Aber zumindest könnt ihr eurem Chef ein bisschen Fortbildung verkaufen.

02:55:05.370 --> 02:55:07.370
150 Homeofficer, ja.

02:55:07.370 --> 02:55:09.370
Also, ich gehe jetzt weg.

02:55:09.370 --> 02:55:11.370
Ich muss noch wohin.

02:55:11.370 --> 02:55:12.370
Wir sehen uns, Leute.

02:55:12.370 --> 02:55:13.370
Bis dann, macht's gut.

02:55:13.370 --> 02:55:14.370
Ich hoffe, euch hat's gefallen.

02:55:14.370 --> 02:55:15.370
See you.
